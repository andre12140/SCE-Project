

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Oct 20 17:26:16 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 2.30
    60                           ; Generated 15/09/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC16F18875 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  0007                     	;# 
   102  0008                     	;# 
   103  0009                     	;# 
   104  000A                     	;# 
   105  000B                     	;# 
   106  000C                     	;# 
   107  000D                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001C                     	;# 
   122  001C                     	;# 
   123  001D                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  008C                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  008E                     	;# 
   132  008F                     	;# 
   133  0090                     	;# 
   134  0090                     	;# 
   135  0091                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  0110                     	;# 
   154  0110                     	;# 
   155  0111                     	;# 
   156  0112                     	;# 
   157  0112                     	;# 
   158  0113                     	;# 
   159  0114                     	;# 
   160  0114                     	;# 
   161  0115                     	;# 
   162  0116                     	;# 
   163  0116                     	;# 
   164  0117                     	;# 
   165  0119                     	;# 
   166  0119                     	;# 
   167  0119                     	;# 
   168  011A                     	;# 
   169  011A                     	;# 
   170  011A                     	;# 
   171  011B                     	;# 
   172  011B                     	;# 
   173  011B                     	;# 
   174  011B                     	;# 
   175  011B                     	;# 
   176  011C                     	;# 
   177  011C                     	;# 
   178  011C                     	;# 
   179  011D                     	;# 
   180  011D                     	;# 
   181  011D                     	;# 
   182  011E                     	;# 
   183  011E                     	;# 
   184  011E                     	;# 
   185  011F                     	;# 
   186  011F                     	;# 
   187  011F                     	;# 
   188  011F                     	;# 
   189  011F                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192  018E                     	;# 
   193  018F                     	;# 
   194  0190                     	;# 
   195  0191                     	;# 
   196  0192                     	;# 
   197  0196                     	;# 
   198  0197                     	;# 
   199  0198                     	;# 
   200  0199                     	;# 
   201  019A                     	;# 
   202  019B                     	;# 
   203  019C                     	;# 
   204  020C                     	;# 
   205  020C                     	;# 
   206  020D                     	;# 
   207  020E                     	;# 
   208  020F                     	;# 
   209  020F                     	;# 
   210  0210                     	;# 
   211  0210                     	;# 
   212  0211                     	;# 
   213  0211                     	;# 
   214  0212                     	;# 
   215  0212                     	;# 
   216  0213                     	;# 
   217  0214                     	;# 
   218  0215                     	;# 
   219  0215                     	;# 
   220  0216                     	;# 
   221  0216                     	;# 
   222  0217                     	;# 
   223  0217                     	;# 
   224  0218                     	;# 
   225  0218                     	;# 
   226  0219                     	;# 
   227  021A                     	;# 
   228  021B                     	;# 
   229  021B                     	;# 
   230  021C                     	;# 
   231  021C                     	;# 
   232  021D                     	;# 
   233  021D                     	;# 
   234  021E                     	;# 
   235  021F                     	;# 
   236  028C                     	;# 
   237  028C                     	;# 
   238  028D                     	;# 
   239  028D                     	;# 
   240  028E                     	;# 
   241  028F                     	;# 
   242  0290                     	;# 
   243  0290                     	;# 
   244  0291                     	;# 
   245  0292                     	;# 
   246  0292                     	;# 
   247  0293                     	;# 
   248  0293                     	;# 
   249  0294                     	;# 
   250  0295                     	;# 
   251  0296                     	;# 
   252  0296                     	;# 
   253  0297                     	;# 
   254  0298                     	;# 
   255  0298                     	;# 
   256  0299                     	;# 
   257  0299                     	;# 
   258  029A                     	;# 
   259  029B                     	;# 
   260  029C                     	;# 
   261  029C                     	;# 
   262  029D                     	;# 
   263  030C                     	;# 
   264  030C                     	;# 
   265  030D                     	;# 
   266  030E                     	;# 
   267  030F                     	;# 
   268  0310                     	;# 
   269  0310                     	;# 
   270  0311                     	;# 
   271  0312                     	;# 
   272  0313                     	;# 
   273  0314                     	;# 
   274  0314                     	;# 
   275  0315                     	;# 
   276  0316                     	;# 
   277  0317                     	;# 
   278  0318                     	;# 
   279  0318                     	;# 
   280  0319                     	;# 
   281  031A                     	;# 
   282  031B                     	;# 
   283  031C                     	;# 
   284  031C                     	;# 
   285  031D                     	;# 
   286  031E                     	;# 
   287  031F                     	;# 
   288  038C                     	;# 
   289  038C                     	;# 
   290  038D                     	;# 
   291  038E                     	;# 
   292  0390                     	;# 
   293  0390                     	;# 
   294  0391                     	;# 
   295  0392                     	;# 
   296  040C                     	;# 
   297  040D                     	;# 
   298  040E                     	;# 
   299  040F                     	;# 
   300  0410                     	;# 
   301  0411                     	;# 
   302  0416                     	;# 
   303  0416                     	;# 
   304  0417                     	;# 
   305  0418                     	;# 
   306  0418                     	;# 
   307  0419                     	;# 
   308  041A                     	;# 
   309  041A                     	;# 
   310  041B                     	;# 
   311  041C                     	;# 
   312  041C                     	;# 
   313  041D                     	;# 
   314  041E                     	;# 
   315  041F                     	;# 
   316  048C                     	;# 
   317  048C                     	;# 
   318  048D                     	;# 
   319  048E                     	;# 
   320  048F                     	;# 
   321  048F                     	;# 
   322  0490                     	;# 
   323  0491                     	;# 
   324  0492                     	;# 
   325  0492                     	;# 
   326  0493                     	;# 
   327  0494                     	;# 
   328  0495                     	;# 
   329  0495                     	;# 
   330  0496                     	;# 
   331  0497                     	;# 
   332  0498                     	;# 
   333  0499                     	;# 
   334  049A                     	;# 
   335  049B                     	;# 
   336  049C                     	;# 
   337  049D                     	;# 
   338  050C                     	;# 
   339  050C                     	;# 
   340  050D                     	;# 
   341  050E                     	;# 
   342  050F                     	;# 
   343  050F                     	;# 
   344  0510                     	;# 
   345  0511                     	;# 
   346  0512                     	;# 
   347  0512                     	;# 
   348  0513                     	;# 
   349  0514                     	;# 
   350  0515                     	;# 
   351  0515                     	;# 
   352  0516                     	;# 
   353  0517                     	;# 
   354  0518                     	;# 
   355  0519                     	;# 
   356  051A                     	;# 
   357  051B                     	;# 
   358  051C                     	;# 
   359  051D                     	;# 
   360  058C                     	;# 
   361  058C                     	;# 
   362  058D                     	;# 
   363  058E                     	;# 
   364  058F                     	;# 
   365  058F                     	;# 
   366  0590                     	;# 
   367  0591                     	;# 
   368  0592                     	;# 
   369  0593                     	;# 
   370  060C                     	;# 
   371  060D                     	;# 
   372  060E                     	;# 
   373  060F                     	;# 
   374  0610                     	;# 
   375  0611                     	;# 
   376  0612                     	;# 
   377  0613                     	;# 
   378  0614                     	;# 
   379  0616                     	;# 
   380  0617                     	;# 
   381  0618                     	;# 
   382  0619                     	;# 
   383  061A                     	;# 
   384  061B                     	;# 
   385  061C                     	;# 
   386  061D                     	;# 
   387  061E                     	;# 
   388  068C                     	;# 
   389  068D                     	;# 
   390  068E                     	;# 
   391  068F                     	;# 
   392  0690                     	;# 
   393  0691                     	;# 
   394  0692                     	;# 
   395  0693                     	;# 
   396  0694                     	;# 
   397  070C                     	;# 
   398  070D                     	;# 
   399  070E                     	;# 
   400  070F                     	;# 
   401  0710                     	;# 
   402  0711                     	;# 
   403  0712                     	;# 
   404  0713                     	;# 
   405  0714                     	;# 
   406  0716                     	;# 
   407  0717                     	;# 
   408  0718                     	;# 
   409  0719                     	;# 
   410  071A                     	;# 
   411  071B                     	;# 
   412  071C                     	;# 
   413  071D                     	;# 
   414  071E                     	;# 
   415  0796                     	;# 
   416  0797                     	;# 
   417  0798                     	;# 
   418  0799                     	;# 
   419  079A                     	;# 
   420  079B                     	;# 
   421  080C                     	;# 
   422  080D                     	;# 
   423  080E                     	;# 
   424  080F                     	;# 
   425  0810                     	;# 
   426  0811                     	;# 
   427  0812                     	;# 
   428  0813                     	;# 
   429  0814                     	;# 
   430  081A                     	;# 
   431  081B                     	;# 
   432  081C                     	;# 
   433  081D                     	;# 
   434  081E                     	;# 
   435  081F                     	;# 
   436  088C                     	;# 
   437  088D                     	;# 
   438  088E                     	;# 
   439  088F                     	;# 
   440  0890                     	;# 
   441  0891                     	;# 
   442  0892                     	;# 
   443  0893                     	;# 
   444  0895                     	;# 
   445  0896                     	;# 
   446  0897                     	;# 
   447  0898                     	;# 
   448  0899                     	;# 
   449  089A                     	;# 
   450  089B                     	;# 
   451  090C                     	;# 
   452  090E                     	;# 
   453  090F                     	;# 
   454  091F                     	;# 
   455  091F                     	;# 
   456  098F                     	;# 
   457  098F                     	;# 
   458  0990                     	;# 
   459  0991                     	;# 
   460  0992                     	;# 
   461  0993                     	;# 
   462  0994                     	;# 
   463  0995                     	;# 
   464  0996                     	;# 
   465  0997                     	;# 
   466  0E0F                     	;# 
   467  0E10                     	;# 
   468  0E11                     	;# 
   469  0E12                     	;# 
   470  0E13                     	;# 
   471  0E14                     	;# 
   472  0E15                     	;# 
   473  0E16                     	;# 
   474  0E17                     	;# 
   475  0E18                     	;# 
   476  0E19                     	;# 
   477  0E1A                     	;# 
   478  0E1B                     	;# 
   479  0E1C                     	;# 
   480  0E1D                     	;# 
   481  0E1E                     	;# 
   482  0E1F                     	;# 
   483  0E20                     	;# 
   484  0E21                     	;# 
   485  0E22                     	;# 
   486  0E23                     	;# 
   487  0E24                     	;# 
   488  0E25                     	;# 
   489  0E26                     	;# 
   490  0E27                     	;# 
   491  0E28                     	;# 
   492  0E29                     	;# 
   493  0E2A                     	;# 
   494  0E2B                     	;# 
   495  0E2C                     	;# 
   496  0E2D                     	;# 
   497  0E2E                     	;# 
   498  0E2F                     	;# 
   499  0E30                     	;# 
   500  0E31                     	;# 
   501  0E32                     	;# 
   502  0E33                     	;# 
   503  0E34                     	;# 
   504  0E35                     	;# 
   505  0E36                     	;# 
   506  0E37                     	;# 
   507  0E8F                     	;# 
   508  0E90                     	;# 
   509  0E91                     	;# 
   510  0E92                     	;# 
   511  0E93                     	;# 
   512  0E94                     	;# 
   513  0E95                     	;# 
   514  0E96                     	;# 
   515  0E97                     	;# 
   516  0E9C                     	;# 
   517  0E9D                     	;# 
   518  0E9E                     	;# 
   519  0EA1                     	;# 
   520  0EA2                     	;# 
   521  0EA3                     	;# 
   522  0EA4                     	;# 
   523  0EA5                     	;# 
   524  0EA9                     	;# 
   525  0EAA                     	;# 
   526  0EAB                     	;# 
   527  0EAC                     	;# 
   528  0EB1                     	;# 
   529  0EB2                     	;# 
   530  0EB3                     	;# 
   531  0EB8                     	;# 
   532  0EB9                     	;# 
   533  0EBA                     	;# 
   534  0EBB                     	;# 
   535  0EBC                     	;# 
   536  0EBD                     	;# 
   537  0EBE                     	;# 
   538  0EC3                     	;# 
   539  0EC5                     	;# 
   540  0EC6                     	;# 
   541  0EC7                     	;# 
   542  0EC8                     	;# 
   543  0EC9                     	;# 
   544  0ECA                     	;# 
   545  0ECB                     	;# 
   546  0ECC                     	;# 
   547  0F10                     	;# 
   548  0F11                     	;# 
   549  0F12                     	;# 
   550  0F13                     	;# 
   551  0F14                     	;# 
   552  0F15                     	;# 
   553  0F16                     	;# 
   554  0F17                     	;# 
   555  0F18                     	;# 
   556  0F19                     	;# 
   557  0F1A                     	;# 
   558  0F1B                     	;# 
   559  0F1C                     	;# 
   560  0F1D                     	;# 
   561  0F1E                     	;# 
   562  0F1F                     	;# 
   563  0F20                     	;# 
   564  0F21                     	;# 
   565  0F22                     	;# 
   566  0F23                     	;# 
   567  0F24                     	;# 
   568  0F25                     	;# 
   569  0F26                     	;# 
   570  0F27                     	;# 
   571  0F28                     	;# 
   572  0F29                     	;# 
   573  0F2A                     	;# 
   574  0F2B                     	;# 
   575  0F2C                     	;# 
   576  0F2D                     	;# 
   577  0F2E                     	;# 
   578  0F2F                     	;# 
   579  0F30                     	;# 
   580  0F31                     	;# 
   581  0F32                     	;# 
   582  0F38                     	;# 
   583  0F39                     	;# 
   584  0F3A                     	;# 
   585  0F3B                     	;# 
   586  0F3C                     	;# 
   587  0F3D                     	;# 
   588  0F3E                     	;# 
   589  0F3F                     	;# 
   590  0F40                     	;# 
   591  0F41                     	;# 
   592  0F43                     	;# 
   593  0F44                     	;# 
   594  0F45                     	;# 
   595  0F46                     	;# 
   596  0F47                     	;# 
   597  0F48                     	;# 
   598  0F49                     	;# 
   599  0F4A                     	;# 
   600  0F4B                     	;# 
   601  0F4C                     	;# 
   602  0F4E                     	;# 
   603  0F4F                     	;# 
   604  0F50                     	;# 
   605  0F51                     	;# 
   606  0F52                     	;# 
   607  0F53                     	;# 
   608  0F54                     	;# 
   609  0F55                     	;# 
   610  0F56                     	;# 
   611  0F57                     	;# 
   612  0F59                     	;# 
   613  0F5A                     	;# 
   614  0F5B                     	;# 
   615  0F5C                     	;# 
   616  0F5D                     	;# 
   617  0F61                     	;# 
   618  0F62                     	;# 
   619  0F64                     	;# 
   620  0F65                     	;# 
   621  0F66                     	;# 
   622  0F67                     	;# 
   623  0F68                     	;# 
   624  0F69                     	;# 
   625  0F6A                     	;# 
   626  0F6B                     	;# 
   627  0F6C                     	;# 
   628  0F6D                     	;# 
   629  0FE4                     	;# 
   630  0FE5                     	;# 
   631  0FE6                     	;# 
   632  0FE7                     	;# 
   633  0FE8                     	;# 
   634  0FE9                     	;# 
   635  0FEA                     	;# 
   636  0FEB                     	;# 
   637  0FED                     	;# 
   638  0FEE                     	;# 
   639  0FEF                     	;# 
   640  0000                     	;# 
   641  0001                     	;# 
   642  0002                     	;# 
   643  0003                     	;# 
   644  0004                     	;# 
   645  0005                     	;# 
   646  0006                     	;# 
   647  0007                     	;# 
   648  0008                     	;# 
   649  0009                     	;# 
   650  000A                     	;# 
   651  000B                     	;# 
   652  000C                     	;# 
   653  000D                     	;# 
   654  000E                     	;# 
   655  000F                     	;# 
   656  0010                     	;# 
   657  0011                     	;# 
   658  0012                     	;# 
   659  0013                     	;# 
   660  0014                     	;# 
   661  0015                     	;# 
   662  0016                     	;# 
   663  0017                     	;# 
   664  0018                     	;# 
   665  0019                     	;# 
   666  001A                     	;# 
   667  001C                     	;# 
   668  001C                     	;# 
   669  001D                     	;# 
   670  001D                     	;# 
   671  001E                     	;# 
   672  001F                     	;# 
   673  008C                     	;# 
   674  008C                     	;# 
   675  008D                     	;# 
   676  008E                     	;# 
   677  008E                     	;# 
   678  008F                     	;# 
   679  0090                     	;# 
   680  0090                     	;# 
   681  0091                     	;# 
   682  0093                     	;# 
   683  0094                     	;# 
   684  0095                     	;# 
   685  0096                     	;# 
   686  0097                     	;# 
   687  0098                     	;# 
   688  0099                     	;# 
   689  009A                     	;# 
   690  009B                     	;# 
   691  009C                     	;# 
   692  009D                     	;# 
   693  009E                     	;# 
   694  010C                     	;# 
   695  010D                     	;# 
   696  010E                     	;# 
   697  010E                     	;# 
   698  010F                     	;# 
   699  0110                     	;# 
   700  0110                     	;# 
   701  0111                     	;# 
   702  0112                     	;# 
   703  0112                     	;# 
   704  0113                     	;# 
   705  0114                     	;# 
   706  0114                     	;# 
   707  0115                     	;# 
   708  0116                     	;# 
   709  0116                     	;# 
   710  0117                     	;# 
   711  0119                     	;# 
   712  0119                     	;# 
   713  0119                     	;# 
   714  011A                     	;# 
   715  011A                     	;# 
   716  011A                     	;# 
   717  011B                     	;# 
   718  011B                     	;# 
   719  011B                     	;# 
   720  011B                     	;# 
   721  011B                     	;# 
   722  011C                     	;# 
   723  011C                     	;# 
   724  011C                     	;# 
   725  011D                     	;# 
   726  011D                     	;# 
   727  011D                     	;# 
   728  011E                     	;# 
   729  011E                     	;# 
   730  011E                     	;# 
   731  011F                     	;# 
   732  011F                     	;# 
   733  011F                     	;# 
   734  011F                     	;# 
   735  011F                     	;# 
   736  018C                     	;# 
   737  018D                     	;# 
   738  018E                     	;# 
   739  018F                     	;# 
   740  0190                     	;# 
   741  0191                     	;# 
   742  0192                     	;# 
   743  0196                     	;# 
   744  0197                     	;# 
   745  0198                     	;# 
   746  0199                     	;# 
   747  019A                     	;# 
   748  019B                     	;# 
   749  019C                     	;# 
   750  020C                     	;# 
   751  020C                     	;# 
   752  020D                     	;# 
   753  020E                     	;# 
   754  020F                     	;# 
   755  020F                     	;# 
   756  0210                     	;# 
   757  0210                     	;# 
   758  0211                     	;# 
   759  0211                     	;# 
   760  0212                     	;# 
   761  0212                     	;# 
   762  0213                     	;# 
   763  0214                     	;# 
   764  0215                     	;# 
   765  0215                     	;# 
   766  0216                     	;# 
   767  0216                     	;# 
   768  0217                     	;# 
   769  0217                     	;# 
   770  0218                     	;# 
   771  0218                     	;# 
   772  0219                     	;# 
   773  021A                     	;# 
   774  021B                     	;# 
   775  021B                     	;# 
   776  021C                     	;# 
   777  021C                     	;# 
   778  021D                     	;# 
   779  021D                     	;# 
   780  021E                     	;# 
   781  021F                     	;# 
   782  028C                     	;# 
   783  028C                     	;# 
   784  028D                     	;# 
   785  028D                     	;# 
   786  028E                     	;# 
   787  028F                     	;# 
   788  0290                     	;# 
   789  0290                     	;# 
   790  0291                     	;# 
   791  0292                     	;# 
   792  0292                     	;# 
   793  0293                     	;# 
   794  0293                     	;# 
   795  0294                     	;# 
   796  0295                     	;# 
   797  0296                     	;# 
   798  0296                     	;# 
   799  0297                     	;# 
   800  0298                     	;# 
   801  0298                     	;# 
   802  0299                     	;# 
   803  0299                     	;# 
   804  029A                     	;# 
   805  029B                     	;# 
   806  029C                     	;# 
   807  029C                     	;# 
   808  029D                     	;# 
   809  030C                     	;# 
   810  030C                     	;# 
   811  030D                     	;# 
   812  030E                     	;# 
   813  030F                     	;# 
   814  0310                     	;# 
   815  0310                     	;# 
   816  0311                     	;# 
   817  0312                     	;# 
   818  0313                     	;# 
   819  0314                     	;# 
   820  0314                     	;# 
   821  0315                     	;# 
   822  0316                     	;# 
   823  0317                     	;# 
   824  0318                     	;# 
   825  0318                     	;# 
   826  0319                     	;# 
   827  031A                     	;# 
   828  031B                     	;# 
   829  031C                     	;# 
   830  031C                     	;# 
   831  031D                     	;# 
   832  031E                     	;# 
   833  031F                     	;# 
   834  038C                     	;# 
   835  038C                     	;# 
   836  038D                     	;# 
   837  038E                     	;# 
   838  0390                     	;# 
   839  0390                     	;# 
   840  0391                     	;# 
   841  0392                     	;# 
   842  040C                     	;# 
   843  040D                     	;# 
   844  040E                     	;# 
   845  040F                     	;# 
   846  0410                     	;# 
   847  0411                     	;# 
   848  0416                     	;# 
   849  0416                     	;# 
   850  0417                     	;# 
   851  0418                     	;# 
   852  0418                     	;# 
   853  0419                     	;# 
   854  041A                     	;# 
   855  041A                     	;# 
   856  041B                     	;# 
   857  041C                     	;# 
   858  041C                     	;# 
   859  041D                     	;# 
   860  041E                     	;# 
   861  041F                     	;# 
   862  048C                     	;# 
   863  048C                     	;# 
   864  048D                     	;# 
   865  048E                     	;# 
   866  048F                     	;# 
   867  048F                     	;# 
   868  0490                     	;# 
   869  0491                     	;# 
   870  0492                     	;# 
   871  0492                     	;# 
   872  0493                     	;# 
   873  0494                     	;# 
   874  0495                     	;# 
   875  0495                     	;# 
   876  0496                     	;# 
   877  0497                     	;# 
   878  0498                     	;# 
   879  0499                     	;# 
   880  049A                     	;# 
   881  049B                     	;# 
   882  049C                     	;# 
   883  049D                     	;# 
   884  050C                     	;# 
   885  050C                     	;# 
   886  050D                     	;# 
   887  050E                     	;# 
   888  050F                     	;# 
   889  050F                     	;# 
   890  0510                     	;# 
   891  0511                     	;# 
   892  0512                     	;# 
   893  0512                     	;# 
   894  0513                     	;# 
   895  0514                     	;# 
   896  0515                     	;# 
   897  0515                     	;# 
   898  0516                     	;# 
   899  0517                     	;# 
   900  0518                     	;# 
   901  0519                     	;# 
   902  051A                     	;# 
   903  051B                     	;# 
   904  051C                     	;# 
   905  051D                     	;# 
   906  058C                     	;# 
   907  058C                     	;# 
   908  058D                     	;# 
   909  058E                     	;# 
   910  058F                     	;# 
   911  058F                     	;# 
   912  0590                     	;# 
   913  0591                     	;# 
   914  0592                     	;# 
   915  0593                     	;# 
   916  060C                     	;# 
   917  060D                     	;# 
   918  060E                     	;# 
   919  060F                     	;# 
   920  0610                     	;# 
   921  0611                     	;# 
   922  0612                     	;# 
   923  0613                     	;# 
   924  0614                     	;# 
   925  0616                     	;# 
   926  0617                     	;# 
   927  0618                     	;# 
   928  0619                     	;# 
   929  061A                     	;# 
   930  061B                     	;# 
   931  061C                     	;# 
   932  061D                     	;# 
   933  061E                     	;# 
   934  068C                     	;# 
   935  068D                     	;# 
   936  068E                     	;# 
   937  068F                     	;# 
   938  0690                     	;# 
   939  0691                     	;# 
   940  0692                     	;# 
   941  0693                     	;# 
   942  0694                     	;# 
   943  070C                     	;# 
   944  070D                     	;# 
   945  070E                     	;# 
   946  070F                     	;# 
   947  0710                     	;# 
   948  0711                     	;# 
   949  0712                     	;# 
   950  0713                     	;# 
   951  0714                     	;# 
   952  0716                     	;# 
   953  0717                     	;# 
   954  0718                     	;# 
   955  0719                     	;# 
   956  071A                     	;# 
   957  071B                     	;# 
   958  071C                     	;# 
   959  071D                     	;# 
   960  071E                     	;# 
   961  0796                     	;# 
   962  0797                     	;# 
   963  0798                     	;# 
   964  0799                     	;# 
   965  079A                     	;# 
   966  079B                     	;# 
   967  080C                     	;# 
   968  080D                     	;# 
   969  080E                     	;# 
   970  080F                     	;# 
   971  0810                     	;# 
   972  0811                     	;# 
   973  0812                     	;# 
   974  0813                     	;# 
   975  0814                     	;# 
   976  081A                     	;# 
   977  081B                     	;# 
   978  081C                     	;# 
   979  081D                     	;# 
   980  081E                     	;# 
   981  081F                     	;# 
   982  088C                     	;# 
   983  088D                     	;# 
   984  088E                     	;# 
   985  088F                     	;# 
   986  0890                     	;# 
   987  0891                     	;# 
   988  0892                     	;# 
   989  0893                     	;# 
   990  0895                     	;# 
   991  0896                     	;# 
   992  0897                     	;# 
   993  0898                     	;# 
   994  0899                     	;# 
   995  089A                     	;# 
   996  089B                     	;# 
   997  090C                     	;# 
   998  090E                     	;# 
   999  090F                     	;# 
  1000  091F                     	;# 
  1001  091F                     	;# 
  1002  098F                     	;# 
  1003  098F                     	;# 
  1004  0990                     	;# 
  1005  0991                     	;# 
  1006  0992                     	;# 
  1007  0993                     	;# 
  1008  0994                     	;# 
  1009  0995                     	;# 
  1010  0996                     	;# 
  1011  0997                     	;# 
  1012  0E0F                     	;# 
  1013  0E10                     	;# 
  1014  0E11                     	;# 
  1015  0E12                     	;# 
  1016  0E13                     	;# 
  1017  0E14                     	;# 
  1018  0E15                     	;# 
  1019  0E16                     	;# 
  1020  0E17                     	;# 
  1021  0E18                     	;# 
  1022  0E19                     	;# 
  1023  0E1A                     	;# 
  1024  0E1B                     	;# 
  1025  0E1C                     	;# 
  1026  0E1D                     	;# 
  1027  0E1E                     	;# 
  1028  0E1F                     	;# 
  1029  0E20                     	;# 
  1030  0E21                     	;# 
  1031  0E22                     	;# 
  1032  0E23                     	;# 
  1033  0E24                     	;# 
  1034  0E25                     	;# 
  1035  0E26                     	;# 
  1036  0E27                     	;# 
  1037  0E28                     	;# 
  1038  0E29                     	;# 
  1039  0E2A                     	;# 
  1040  0E2B                     	;# 
  1041  0E2C                     	;# 
  1042  0E2D                     	;# 
  1043  0E2E                     	;# 
  1044  0E2F                     	;# 
  1045  0E30                     	;# 
  1046  0E31                     	;# 
  1047  0E32                     	;# 
  1048  0E33                     	;# 
  1049  0E34                     	;# 
  1050  0E35                     	;# 
  1051  0E36                     	;# 
  1052  0E37                     	;# 
  1053  0E8F                     	;# 
  1054  0E90                     	;# 
  1055  0E91                     	;# 
  1056  0E92                     	;# 
  1057  0E93                     	;# 
  1058  0E94                     	;# 
  1059  0E95                     	;# 
  1060  0E96                     	;# 
  1061  0E97                     	;# 
  1062  0E9C                     	;# 
  1063  0E9D                     	;# 
  1064  0E9E                     	;# 
  1065  0EA1                     	;# 
  1066  0EA2                     	;# 
  1067  0EA3                     	;# 
  1068  0EA4                     	;# 
  1069  0EA5                     	;# 
  1070  0EA9                     	;# 
  1071  0EAA                     	;# 
  1072  0EAB                     	;# 
  1073  0EAC                     	;# 
  1074  0EB1                     	;# 
  1075  0EB2                     	;# 
  1076  0EB3                     	;# 
  1077  0EB8                     	;# 
  1078  0EB9                     	;# 
  1079  0EBA                     	;# 
  1080  0EBB                     	;# 
  1081  0EBC                     	;# 
  1082  0EBD                     	;# 
  1083  0EBE                     	;# 
  1084  0EC3                     	;# 
  1085  0EC5                     	;# 
  1086  0EC6                     	;# 
  1087  0EC7                     	;# 
  1088  0EC8                     	;# 
  1089  0EC9                     	;# 
  1090  0ECA                     	;# 
  1091  0ECB                     	;# 
  1092  0ECC                     	;# 
  1093  0F10                     	;# 
  1094  0F11                     	;# 
  1095  0F12                     	;# 
  1096  0F13                     	;# 
  1097  0F14                     	;# 
  1098  0F15                     	;# 
  1099  0F16                     	;# 
  1100  0F17                     	;# 
  1101  0F18                     	;# 
  1102  0F19                     	;# 
  1103  0F1A                     	;# 
  1104  0F1B                     	;# 
  1105  0F1C                     	;# 
  1106  0F1D                     	;# 
  1107  0F1E                     	;# 
  1108  0F1F                     	;# 
  1109  0F20                     	;# 
  1110  0F21                     	;# 
  1111  0F22                     	;# 
  1112  0F23                     	;# 
  1113  0F24                     	;# 
  1114  0F25                     	;# 
  1115  0F26                     	;# 
  1116  0F27                     	;# 
  1117  0F28                     	;# 
  1118  0F29                     	;# 
  1119  0F2A                     	;# 
  1120  0F2B                     	;# 
  1121  0F2C                     	;# 
  1122  0F2D                     	;# 
  1123  0F2E                     	;# 
  1124  0F2F                     	;# 
  1125  0F30                     	;# 
  1126  0F31                     	;# 
  1127  0F32                     	;# 
  1128  0F38                     	;# 
  1129  0F39                     	;# 
  1130  0F3A                     	;# 
  1131  0F3B                     	;# 
  1132  0F3C                     	;# 
  1133  0F3D                     	;# 
  1134  0F3E                     	;# 
  1135  0F3F                     	;# 
  1136  0F40                     	;# 
  1137  0F41                     	;# 
  1138  0F43                     	;# 
  1139  0F44                     	;# 
  1140  0F45                     	;# 
  1141  0F46                     	;# 
  1142  0F47                     	;# 
  1143  0F48                     	;# 
  1144  0F49                     	;# 
  1145  0F4A                     	;# 
  1146  0F4B                     	;# 
  1147  0F4C                     	;# 
  1148  0F4E                     	;# 
  1149  0F4F                     	;# 
  1150  0F50                     	;# 
  1151  0F51                     	;# 
  1152  0F52                     	;# 
  1153  0F53                     	;# 
  1154  0F54                     	;# 
  1155  0F55                     	;# 
  1156  0F56                     	;# 
  1157  0F57                     	;# 
  1158  0F59                     	;# 
  1159  0F5A                     	;# 
  1160  0F5B                     	;# 
  1161  0F5C                     	;# 
  1162  0F5D                     	;# 
  1163  0F61                     	;# 
  1164  0F62                     	;# 
  1165  0F64                     	;# 
  1166  0F65                     	;# 
  1167  0F66                     	;# 
  1168  0F67                     	;# 
  1169  0F68                     	;# 
  1170  0F69                     	;# 
  1171  0F6A                     	;# 
  1172  0F6B                     	;# 
  1173  0F6C                     	;# 
  1174  0F6D                     	;# 
  1175  0FE4                     	;# 
  1176  0FE5                     	;# 
  1177  0FE6                     	;# 
  1178  0FE7                     	;# 
  1179  0FE8                     	;# 
  1180  0FE9                     	;# 
  1181  0FEA                     	;# 
  1182  0FEB                     	;# 
  1183  0FED                     	;# 
  1184  0FEE                     	;# 
  1185  0FEF                     	;# 
  1186  0000                     	;# 
  1187  0001                     	;# 
  1188  0002                     	;# 
  1189  0003                     	;# 
  1190  0004                     	;# 
  1191  0005                     	;# 
  1192  0006                     	;# 
  1193  0007                     	;# 
  1194  0008                     	;# 
  1195  0009                     	;# 
  1196  000A                     	;# 
  1197  000B                     	;# 
  1198  000C                     	;# 
  1199  000D                     	;# 
  1200  000E                     	;# 
  1201  000F                     	;# 
  1202  0010                     	;# 
  1203  0011                     	;# 
  1204  0012                     	;# 
  1205  0013                     	;# 
  1206  0014                     	;# 
  1207  0015                     	;# 
  1208  0016                     	;# 
  1209  0017                     	;# 
  1210  0018                     	;# 
  1211  0019                     	;# 
  1212  001A                     	;# 
  1213  001C                     	;# 
  1214  001C                     	;# 
  1215  001D                     	;# 
  1216  001D                     	;# 
  1217  001E                     	;# 
  1218  001F                     	;# 
  1219  008C                     	;# 
  1220  008C                     	;# 
  1221  008D                     	;# 
  1222  008E                     	;# 
  1223  008E                     	;# 
  1224  008F                     	;# 
  1225  0090                     	;# 
  1226  0090                     	;# 
  1227  0091                     	;# 
  1228  0093                     	;# 
  1229  0094                     	;# 
  1230  0095                     	;# 
  1231  0096                     	;# 
  1232  0097                     	;# 
  1233  0098                     	;# 
  1234  0099                     	;# 
  1235  009A                     	;# 
  1236  009B                     	;# 
  1237  009C                     	;# 
  1238  009D                     	;# 
  1239  009E                     	;# 
  1240  010C                     	;# 
  1241  010D                     	;# 
  1242  010E                     	;# 
  1243  010E                     	;# 
  1244  010F                     	;# 
  1245  0110                     	;# 
  1246  0110                     	;# 
  1247  0111                     	;# 
  1248  0112                     	;# 
  1249  0112                     	;# 
  1250  0113                     	;# 
  1251  0114                     	;# 
  1252  0114                     	;# 
  1253  0115                     	;# 
  1254  0116                     	;# 
  1255  0116                     	;# 
  1256  0117                     	;# 
  1257  0119                     	;# 
  1258  0119                     	;# 
  1259  0119                     	;# 
  1260  011A                     	;# 
  1261  011A                     	;# 
  1262  011A                     	;# 
  1263  011B                     	;# 
  1264  011B                     	;# 
  1265  011B                     	;# 
  1266  011B                     	;# 
  1267  011B                     	;# 
  1268  011C                     	;# 
  1269  011C                     	;# 
  1270  011C                     	;# 
  1271  011D                     	;# 
  1272  011D                     	;# 
  1273  011D                     	;# 
  1274  011E                     	;# 
  1275  011E                     	;# 
  1276  011E                     	;# 
  1277  011F                     	;# 
  1278  011F                     	;# 
  1279  011F                     	;# 
  1280  011F                     	;# 
  1281  011F                     	;# 
  1282  018C                     	;# 
  1283  018D                     	;# 
  1284  018E                     	;# 
  1285  018F                     	;# 
  1286  0190                     	;# 
  1287  0191                     	;# 
  1288  0192                     	;# 
  1289  0196                     	;# 
  1290  0197                     	;# 
  1291  0198                     	;# 
  1292  0199                     	;# 
  1293  019A                     	;# 
  1294  019B                     	;# 
  1295  019C                     	;# 
  1296  020C                     	;# 
  1297  020C                     	;# 
  1298  020D                     	;# 
  1299  020E                     	;# 
  1300  020F                     	;# 
  1301  020F                     	;# 
  1302  0210                     	;# 
  1303  0210                     	;# 
  1304  0211                     	;# 
  1305  0211                     	;# 
  1306  0212                     	;# 
  1307  0212                     	;# 
  1308  0213                     	;# 
  1309  0214                     	;# 
  1310  0215                     	;# 
  1311  0215                     	;# 
  1312  0216                     	;# 
  1313  0216                     	;# 
  1314  0217                     	;# 
  1315  0217                     	;# 
  1316  0218                     	;# 
  1317  0218                     	;# 
  1318  0219                     	;# 
  1319  021A                     	;# 
  1320  021B                     	;# 
  1321  021B                     	;# 
  1322  021C                     	;# 
  1323  021C                     	;# 
  1324  021D                     	;# 
  1325  021D                     	;# 
  1326  021E                     	;# 
  1327  021F                     	;# 
  1328  028C                     	;# 
  1329  028C                     	;# 
  1330  028D                     	;# 
  1331  028D                     	;# 
  1332  028E                     	;# 
  1333  028F                     	;# 
  1334  0290                     	;# 
  1335  0290                     	;# 
  1336  0291                     	;# 
  1337  0292                     	;# 
  1338  0292                     	;# 
  1339  0293                     	;# 
  1340  0293                     	;# 
  1341  0294                     	;# 
  1342  0295                     	;# 
  1343  0296                     	;# 
  1344  0296                     	;# 
  1345  0297                     	;# 
  1346  0298                     	;# 
  1347  0298                     	;# 
  1348  0299                     	;# 
  1349  0299                     	;# 
  1350  029A                     	;# 
  1351  029B                     	;# 
  1352  029C                     	;# 
  1353  029C                     	;# 
  1354  029D                     	;# 
  1355  030C                     	;# 
  1356  030C                     	;# 
  1357  030D                     	;# 
  1358  030E                     	;# 
  1359  030F                     	;# 
  1360  0310                     	;# 
  1361  0310                     	;# 
  1362  0311                     	;# 
  1363  0312                     	;# 
  1364  0313                     	;# 
  1365  0314                     	;# 
  1366  0314                     	;# 
  1367  0315                     	;# 
  1368  0316                     	;# 
  1369  0317                     	;# 
  1370  0318                     	;# 
  1371  0318                     	;# 
  1372  0319                     	;# 
  1373  031A                     	;# 
  1374  031B                     	;# 
  1375  031C                     	;# 
  1376  031C                     	;# 
  1377  031D                     	;# 
  1378  031E                     	;# 
  1379  031F                     	;# 
  1380  038C                     	;# 
  1381  038C                     	;# 
  1382  038D                     	;# 
  1383  038E                     	;# 
  1384  0390                     	;# 
  1385  0390                     	;# 
  1386  0391                     	;# 
  1387  0392                     	;# 
  1388  040C                     	;# 
  1389  040D                     	;# 
  1390  040E                     	;# 
  1391  040F                     	;# 
  1392  0410                     	;# 
  1393  0411                     	;# 
  1394  0416                     	;# 
  1395  0416                     	;# 
  1396  0417                     	;# 
  1397  0418                     	;# 
  1398  0418                     	;# 
  1399  0419                     	;# 
  1400  041A                     	;# 
  1401  041A                     	;# 
  1402  041B                     	;# 
  1403  041C                     	;# 
  1404  041C                     	;# 
  1405  041D                     	;# 
  1406  041E                     	;# 
  1407  041F                     	;# 
  1408  048C                     	;# 
  1409  048C                     	;# 
  1410  048D                     	;# 
  1411  048E                     	;# 
  1412  048F                     	;# 
  1413  048F                     	;# 
  1414  0490                     	;# 
  1415  0491                     	;# 
  1416  0492                     	;# 
  1417  0492                     	;# 
  1418  0493                     	;# 
  1419  0494                     	;# 
  1420  0495                     	;# 
  1421  0495                     	;# 
  1422  0496                     	;# 
  1423  0497                     	;# 
  1424  0498                     	;# 
  1425  0499                     	;# 
  1426  049A                     	;# 
  1427  049B                     	;# 
  1428  049C                     	;# 
  1429  049D                     	;# 
  1430  050C                     	;# 
  1431  050C                     	;# 
  1432  050D                     	;# 
  1433  050E                     	;# 
  1434  050F                     	;# 
  1435  050F                     	;# 
  1436  0510                     	;# 
  1437  0511                     	;# 
  1438  0512                     	;# 
  1439  0512                     	;# 
  1440  0513                     	;# 
  1441  0514                     	;# 
  1442  0515                     	;# 
  1443  0515                     	;# 
  1444  0516                     	;# 
  1445  0517                     	;# 
  1446  0518                     	;# 
  1447  0519                     	;# 
  1448  051A                     	;# 
  1449  051B                     	;# 
  1450  051C                     	;# 
  1451  051D                     	;# 
  1452  058C                     	;# 
  1453  058C                     	;# 
  1454  058D                     	;# 
  1455  058E                     	;# 
  1456  058F                     	;# 
  1457  058F                     	;# 
  1458  0590                     	;# 
  1459  0591                     	;# 
  1460  0592                     	;# 
  1461  0593                     	;# 
  1462  060C                     	;# 
  1463  060D                     	;# 
  1464  060E                     	;# 
  1465  060F                     	;# 
  1466  0610                     	;# 
  1467  0611                     	;# 
  1468  0612                     	;# 
  1469  0613                     	;# 
  1470  0614                     	;# 
  1471  0616                     	;# 
  1472  0617                     	;# 
  1473  0618                     	;# 
  1474  0619                     	;# 
  1475  061A                     	;# 
  1476  061B                     	;# 
  1477  061C                     	;# 
  1478  061D                     	;# 
  1479  061E                     	;# 
  1480  068C                     	;# 
  1481  068D                     	;# 
  1482  068E                     	;# 
  1483  068F                     	;# 
  1484  0690                     	;# 
  1485  0691                     	;# 
  1486  0692                     	;# 
  1487  0693                     	;# 
  1488  0694                     	;# 
  1489  070C                     	;# 
  1490  070D                     	;# 
  1491  070E                     	;# 
  1492  070F                     	;# 
  1493  0710                     	;# 
  1494  0711                     	;# 
  1495  0712                     	;# 
  1496  0713                     	;# 
  1497  0714                     	;# 
  1498  0716                     	;# 
  1499  0717                     	;# 
  1500  0718                     	;# 
  1501  0719                     	;# 
  1502  071A                     	;# 
  1503  071B                     	;# 
  1504  071C                     	;# 
  1505  071D                     	;# 
  1506  071E                     	;# 
  1507  0796                     	;# 
  1508  0797                     	;# 
  1509  0798                     	;# 
  1510  0799                     	;# 
  1511  079A                     	;# 
  1512  079B                     	;# 
  1513  080C                     	;# 
  1514  080D                     	;# 
  1515  080E                     	;# 
  1516  080F                     	;# 
  1517  0810                     	;# 
  1518  0811                     	;# 
  1519  0812                     	;# 
  1520  0813                     	;# 
  1521  0814                     	;# 
  1522  081A                     	;# 
  1523  081B                     	;# 
  1524  081C                     	;# 
  1525  081D                     	;# 
  1526  081E                     	;# 
  1527  081F                     	;# 
  1528  088C                     	;# 
  1529  088D                     	;# 
  1530  088E                     	;# 
  1531  088F                     	;# 
  1532  0890                     	;# 
  1533  0891                     	;# 
  1534  0892                     	;# 
  1535  0893                     	;# 
  1536  0895                     	;# 
  1537  0896                     	;# 
  1538  0897                     	;# 
  1539  0898                     	;# 
  1540  0899                     	;# 
  1541  089A                     	;# 
  1542  089B                     	;# 
  1543  090C                     	;# 
  1544  090E                     	;# 
  1545  090F                     	;# 
  1546  091F                     	;# 
  1547  091F                     	;# 
  1548  098F                     	;# 
  1549  098F                     	;# 
  1550  0990                     	;# 
  1551  0991                     	;# 
  1552  0992                     	;# 
  1553  0993                     	;# 
  1554  0994                     	;# 
  1555  0995                     	;# 
  1556  0996                     	;# 
  1557  0997                     	;# 
  1558  0E0F                     	;# 
  1559  0E10                     	;# 
  1560  0E11                     	;# 
  1561  0E12                     	;# 
  1562  0E13                     	;# 
  1563  0E14                     	;# 
  1564  0E15                     	;# 
  1565  0E16                     	;# 
  1566  0E17                     	;# 
  1567  0E18                     	;# 
  1568  0E19                     	;# 
  1569  0E1A                     	;# 
  1570  0E1B                     	;# 
  1571  0E1C                     	;# 
  1572  0E1D                     	;# 
  1573  0E1E                     	;# 
  1574  0E1F                     	;# 
  1575  0E20                     	;# 
  1576  0E21                     	;# 
  1577  0E22                     	;# 
  1578  0E23                     	;# 
  1579  0E24                     	;# 
  1580  0E25                     	;# 
  1581  0E26                     	;# 
  1582  0E27                     	;# 
  1583  0E28                     	;# 
  1584  0E29                     	;# 
  1585  0E2A                     	;# 
  1586  0E2B                     	;# 
  1587  0E2C                     	;# 
  1588  0E2D                     	;# 
  1589  0E2E                     	;# 
  1590  0E2F                     	;# 
  1591  0E30                     	;# 
  1592  0E31                     	;# 
  1593  0E32                     	;# 
  1594  0E33                     	;# 
  1595  0E34                     	;# 
  1596  0E35                     	;# 
  1597  0E36                     	;# 
  1598  0E37                     	;# 
  1599  0E8F                     	;# 
  1600  0E90                     	;# 
  1601  0E91                     	;# 
  1602  0E92                     	;# 
  1603  0E93                     	;# 
  1604  0E94                     	;# 
  1605  0E95                     	;# 
  1606  0E96                     	;# 
  1607  0E97                     	;# 
  1608  0E9C                     	;# 
  1609  0E9D                     	;# 
  1610  0E9E                     	;# 
  1611  0EA1                     	;# 
  1612  0EA2                     	;# 
  1613  0EA3                     	;# 
  1614  0EA4                     	;# 
  1615  0EA5                     	;# 
  1616  0EA9                     	;# 
  1617  0EAA                     	;# 
  1618  0EAB                     	;# 
  1619  0EAC                     	;# 
  1620  0EB1                     	;# 
  1621  0EB2                     	;# 
  1622  0EB3                     	;# 
  1623  0EB8                     	;# 
  1624  0EB9                     	;# 
  1625  0EBA                     	;# 
  1626  0EBB                     	;# 
  1627  0EBC                     	;# 
  1628  0EBD                     	;# 
  1629  0EBE                     	;# 
  1630  0EC3                     	;# 
  1631  0EC5                     	;# 
  1632  0EC6                     	;# 
  1633  0EC7                     	;# 
  1634  0EC8                     	;# 
  1635  0EC9                     	;# 
  1636  0ECA                     	;# 
  1637  0ECB                     	;# 
  1638  0ECC                     	;# 
  1639  0F10                     	;# 
  1640  0F11                     	;# 
  1641  0F12                     	;# 
  1642  0F13                     	;# 
  1643  0F14                     	;# 
  1644  0F15                     	;# 
  1645  0F16                     	;# 
  1646  0F17                     	;# 
  1647  0F18                     	;# 
  1648  0F19                     	;# 
  1649  0F1A                     	;# 
  1650  0F1B                     	;# 
  1651  0F1C                     	;# 
  1652  0F1D                     	;# 
  1653  0F1E                     	;# 
  1654  0F1F                     	;# 
  1655  0F20                     	;# 
  1656  0F21                     	;# 
  1657  0F22                     	;# 
  1658  0F23                     	;# 
  1659  0F24                     	;# 
  1660  0F25                     	;# 
  1661  0F26                     	;# 
  1662  0F27                     	;# 
  1663  0F28                     	;# 
  1664  0F29                     	;# 
  1665  0F2A                     	;# 
  1666  0F2B                     	;# 
  1667  0F2C                     	;# 
  1668  0F2D                     	;# 
  1669  0F2E                     	;# 
  1670  0F2F                     	;# 
  1671  0F30                     	;# 
  1672  0F31                     	;# 
  1673  0F32                     	;# 
  1674  0F38                     	;# 
  1675  0F39                     	;# 
  1676  0F3A                     	;# 
  1677  0F3B                     	;# 
  1678  0F3C                     	;# 
  1679  0F3D                     	;# 
  1680  0F3E                     	;# 
  1681  0F3F                     	;# 
  1682  0F40                     	;# 
  1683  0F41                     	;# 
  1684  0F43                     	;# 
  1685  0F44                     	;# 
  1686  0F45                     	;# 
  1687  0F46                     	;# 
  1688  0F47                     	;# 
  1689  0F48                     	;# 
  1690  0F49                     	;# 
  1691  0F4A                     	;# 
  1692  0F4B                     	;# 
  1693  0F4C                     	;# 
  1694  0F4E                     	;# 
  1695  0F4F                     	;# 
  1696  0F50                     	;# 
  1697  0F51                     	;# 
  1698  0F52                     	;# 
  1699  0F53                     	;# 
  1700  0F54                     	;# 
  1701  0F55                     	;# 
  1702  0F56                     	;# 
  1703  0F57                     	;# 
  1704  0F59                     	;# 
  1705  0F5A                     	;# 
  1706  0F5B                     	;# 
  1707  0F5C                     	;# 
  1708  0F5D                     	;# 
  1709  0F61                     	;# 
  1710  0F62                     	;# 
  1711  0F64                     	;# 
  1712  0F65                     	;# 
  1713  0F66                     	;# 
  1714  0F67                     	;# 
  1715  0F68                     	;# 
  1716  0F69                     	;# 
  1717  0F6A                     	;# 
  1718  0F6B                     	;# 
  1719  0F6C                     	;# 
  1720  0F6D                     	;# 
  1721  0FE4                     	;# 
  1722  0FE5                     	;# 
  1723  0FE6                     	;# 
  1724  0FE7                     	;# 
  1725  0FE8                     	;# 
  1726  0FE9                     	;# 
  1727  0FEA                     	;# 
  1728  0FEB                     	;# 
  1729  0FED                     	;# 
  1730  0FEE                     	;# 
  1731  0FEF                     	;# 
  1732  0000                     	;# 
  1733  0001                     	;# 
  1734  0002                     	;# 
  1735  0003                     	;# 
  1736  0004                     	;# 
  1737  0005                     	;# 
  1738  0006                     	;# 
  1739  0007                     	;# 
  1740  0008                     	;# 
  1741  0009                     	;# 
  1742  000A                     	;# 
  1743  000B                     	;# 
  1744  000C                     	;# 
  1745  000D                     	;# 
  1746  000E                     	;# 
  1747  000F                     	;# 
  1748  0010                     	;# 
  1749  0011                     	;# 
  1750  0012                     	;# 
  1751  0013                     	;# 
  1752  0014                     	;# 
  1753  0015                     	;# 
  1754  0016                     	;# 
  1755  0017                     	;# 
  1756  0018                     	;# 
  1757  0019                     	;# 
  1758  001A                     	;# 
  1759  001C                     	;# 
  1760  001C                     	;# 
  1761  001D                     	;# 
  1762  001D                     	;# 
  1763  001E                     	;# 
  1764  001F                     	;# 
  1765  008C                     	;# 
  1766  008C                     	;# 
  1767  008D                     	;# 
  1768  008E                     	;# 
  1769  008E                     	;# 
  1770  008F                     	;# 
  1771  0090                     	;# 
  1772  0090                     	;# 
  1773  0091                     	;# 
  1774  0093                     	;# 
  1775  0094                     	;# 
  1776  0095                     	;# 
  1777  0096                     	;# 
  1778  0097                     	;# 
  1779  0098                     	;# 
  1780  0099                     	;# 
  1781  009A                     	;# 
  1782  009B                     	;# 
  1783  009C                     	;# 
  1784  009D                     	;# 
  1785  009E                     	;# 
  1786  010C                     	;# 
  1787  010D                     	;# 
  1788  010E                     	;# 
  1789  010E                     	;# 
  1790  010F                     	;# 
  1791  0110                     	;# 
  1792  0110                     	;# 
  1793  0111                     	;# 
  1794  0112                     	;# 
  1795  0112                     	;# 
  1796  0113                     	;# 
  1797  0114                     	;# 
  1798  0114                     	;# 
  1799  0115                     	;# 
  1800  0116                     	;# 
  1801  0116                     	;# 
  1802  0117                     	;# 
  1803  0119                     	;# 
  1804  0119                     	;# 
  1805  0119                     	;# 
  1806  011A                     	;# 
  1807  011A                     	;# 
  1808  011A                     	;# 
  1809  011B                     	;# 
  1810  011B                     	;# 
  1811  011B                     	;# 
  1812  011B                     	;# 
  1813  011B                     	;# 
  1814  011C                     	;# 
  1815  011C                     	;# 
  1816  011C                     	;# 
  1817  011D                     	;# 
  1818  011D                     	;# 
  1819  011D                     	;# 
  1820  011E                     	;# 
  1821  011E                     	;# 
  1822  011E                     	;# 
  1823  011F                     	;# 
  1824  011F                     	;# 
  1825  011F                     	;# 
  1826  011F                     	;# 
  1827  011F                     	;# 
  1828  018C                     	;# 
  1829  018D                     	;# 
  1830  018E                     	;# 
  1831  018F                     	;# 
  1832  0190                     	;# 
  1833  0191                     	;# 
  1834  0192                     	;# 
  1835  0196                     	;# 
  1836  0197                     	;# 
  1837  0198                     	;# 
  1838  0199                     	;# 
  1839  019A                     	;# 
  1840  019B                     	;# 
  1841  019C                     	;# 
  1842  020C                     	;# 
  1843  020C                     	;# 
  1844  020D                     	;# 
  1845  020E                     	;# 
  1846  020F                     	;# 
  1847  020F                     	;# 
  1848  0210                     	;# 
  1849  0210                     	;# 
  1850  0211                     	;# 
  1851  0211                     	;# 
  1852  0212                     	;# 
  1853  0212                     	;# 
  1854  0213                     	;# 
  1855  0214                     	;# 
  1856  0215                     	;# 
  1857  0215                     	;# 
  1858  0216                     	;# 
  1859  0216                     	;# 
  1860  0217                     	;# 
  1861  0217                     	;# 
  1862  0218                     	;# 
  1863  0218                     	;# 
  1864  0219                     	;# 
  1865  021A                     	;# 
  1866  021B                     	;# 
  1867  021B                     	;# 
  1868  021C                     	;# 
  1869  021C                     	;# 
  1870  021D                     	;# 
  1871  021D                     	;# 
  1872  021E                     	;# 
  1873  021F                     	;# 
  1874  028C                     	;# 
  1875  028C                     	;# 
  1876  028D                     	;# 
  1877  028D                     	;# 
  1878  028E                     	;# 
  1879  028F                     	;# 
  1880  0290                     	;# 
  1881  0290                     	;# 
  1882  0291                     	;# 
  1883  0292                     	;# 
  1884  0292                     	;# 
  1885  0293                     	;# 
  1886  0293                     	;# 
  1887  0294                     	;# 
  1888  0295                     	;# 
  1889  0296                     	;# 
  1890  0296                     	;# 
  1891  0297                     	;# 
  1892  0298                     	;# 
  1893  0298                     	;# 
  1894  0299                     	;# 
  1895  0299                     	;# 
  1896  029A                     	;# 
  1897  029B                     	;# 
  1898  029C                     	;# 
  1899  029C                     	;# 
  1900  029D                     	;# 
  1901  030C                     	;# 
  1902  030C                     	;# 
  1903  030D                     	;# 
  1904  030E                     	;# 
  1905  030F                     	;# 
  1906  0310                     	;# 
  1907  0310                     	;# 
  1908  0311                     	;# 
  1909  0312                     	;# 
  1910  0313                     	;# 
  1911  0314                     	;# 
  1912  0314                     	;# 
  1913  0315                     	;# 
  1914  0316                     	;# 
  1915  0317                     	;# 
  1916  0318                     	;# 
  1917  0318                     	;# 
  1918  0319                     	;# 
  1919  031A                     	;# 
  1920  031B                     	;# 
  1921  031C                     	;# 
  1922  031C                     	;# 
  1923  031D                     	;# 
  1924  031E                     	;# 
  1925  031F                     	;# 
  1926  038C                     	;# 
  1927  038C                     	;# 
  1928  038D                     	;# 
  1929  038E                     	;# 
  1930  0390                     	;# 
  1931  0390                     	;# 
  1932  0391                     	;# 
  1933  0392                     	;# 
  1934  040C                     	;# 
  1935  040D                     	;# 
  1936  040E                     	;# 
  1937  040F                     	;# 
  1938  0410                     	;# 
  1939  0411                     	;# 
  1940  0416                     	;# 
  1941  0416                     	;# 
  1942  0417                     	;# 
  1943  0418                     	;# 
  1944  0418                     	;# 
  1945  0419                     	;# 
  1946  041A                     	;# 
  1947  041A                     	;# 
  1948  041B                     	;# 
  1949  041C                     	;# 
  1950  041C                     	;# 
  1951  041D                     	;# 
  1952  041E                     	;# 
  1953  041F                     	;# 
  1954  048C                     	;# 
  1955  048C                     	;# 
  1956  048D                     	;# 
  1957  048E                     	;# 
  1958  048F                     	;# 
  1959  048F                     	;# 
  1960  0490                     	;# 
  1961  0491                     	;# 
  1962  0492                     	;# 
  1963  0492                     	;# 
  1964  0493                     	;# 
  1965  0494                     	;# 
  1966  0495                     	;# 
  1967  0495                     	;# 
  1968  0496                     	;# 
  1969  0497                     	;# 
  1970  0498                     	;# 
  1971  0499                     	;# 
  1972  049A                     	;# 
  1973  049B                     	;# 
  1974  049C                     	;# 
  1975  049D                     	;# 
  1976  050C                     	;# 
  1977  050C                     	;# 
  1978  050D                     	;# 
  1979  050E                     	;# 
  1980  050F                     	;# 
  1981  050F                     	;# 
  1982  0510                     	;# 
  1983  0511                     	;# 
  1984  0512                     	;# 
  1985  0512                     	;# 
  1986  0513                     	;# 
  1987  0514                     	;# 
  1988  0515                     	;# 
  1989  0515                     	;# 
  1990  0516                     	;# 
  1991  0517                     	;# 
  1992  0518                     	;# 
  1993  0519                     	;# 
  1994  051A                     	;# 
  1995  051B                     	;# 
  1996  051C                     	;# 
  1997  051D                     	;# 
  1998  058C                     	;# 
  1999  058C                     	;# 
  2000  058D                     	;# 
  2001  058E                     	;# 
  2002  058F                     	;# 
  2003  058F                     	;# 
  2004  0590                     	;# 
  2005  0591                     	;# 
  2006  0592                     	;# 
  2007  0593                     	;# 
  2008  060C                     	;# 
  2009  060D                     	;# 
  2010  060E                     	;# 
  2011  060F                     	;# 
  2012  0610                     	;# 
  2013  0611                     	;# 
  2014  0612                     	;# 
  2015  0613                     	;# 
  2016  0614                     	;# 
  2017  0616                     	;# 
  2018  0617                     	;# 
  2019  0618                     	;# 
  2020  0619                     	;# 
  2021  061A                     	;# 
  2022  061B                     	;# 
  2023  061C                     	;# 
  2024  061D                     	;# 
  2025  061E                     	;# 
  2026  068C                     	;# 
  2027  068D                     	;# 
  2028  068E                     	;# 
  2029  068F                     	;# 
  2030  0690                     	;# 
  2031  0691                     	;# 
  2032  0692                     	;# 
  2033  0693                     	;# 
  2034  0694                     	;# 
  2035  070C                     	;# 
  2036  070D                     	;# 
  2037  070E                     	;# 
  2038  070F                     	;# 
  2039  0710                     	;# 
  2040  0711                     	;# 
  2041  0712                     	;# 
  2042  0713                     	;# 
  2043  0714                     	;# 
  2044  0716                     	;# 
  2045  0717                     	;# 
  2046  0718                     	;# 
  2047  0719                     	;# 
  2048  071A                     	;# 
  2049  071B                     	;# 
  2050  071C                     	;# 
  2051  071D                     	;# 
  2052  071E                     	;# 
  2053  0796                     	;# 
  2054  0797                     	;# 
  2055  0798                     	;# 
  2056  0799                     	;# 
  2057  079A                     	;# 
  2058  079B                     	;# 
  2059  080C                     	;# 
  2060  080D                     	;# 
  2061  080E                     	;# 
  2062  080F                     	;# 
  2063  0810                     	;# 
  2064  0811                     	;# 
  2065  0812                     	;# 
  2066  0813                     	;# 
  2067  0814                     	;# 
  2068  081A                     	;# 
  2069  081B                     	;# 
  2070  081C                     	;# 
  2071  081D                     	;# 
  2072  081E                     	;# 
  2073  081F                     	;# 
  2074  088C                     	;# 
  2075  088D                     	;# 
  2076  088E                     	;# 
  2077  088F                     	;# 
  2078  0890                     	;# 
  2079  0891                     	;# 
  2080  0892                     	;# 
  2081  0893                     	;# 
  2082  0895                     	;# 
  2083  0896                     	;# 
  2084  0897                     	;# 
  2085  0898                     	;# 
  2086  0899                     	;# 
  2087  089A                     	;# 
  2088  089B                     	;# 
  2089  090C                     	;# 
  2090  090E                     	;# 
  2091  090F                     	;# 
  2092  091F                     	;# 
  2093  091F                     	;# 
  2094  098F                     	;# 
  2095  098F                     	;# 
  2096  0990                     	;# 
  2097  0991                     	;# 
  2098  0992                     	;# 
  2099  0993                     	;# 
  2100  0994                     	;# 
  2101  0995                     	;# 
  2102  0996                     	;# 
  2103  0997                     	;# 
  2104  0E0F                     	;# 
  2105  0E10                     	;# 
  2106  0E11                     	;# 
  2107  0E12                     	;# 
  2108  0E13                     	;# 
  2109  0E14                     	;# 
  2110  0E15                     	;# 
  2111  0E16                     	;# 
  2112  0E17                     	;# 
  2113  0E18                     	;# 
  2114  0E19                     	;# 
  2115  0E1A                     	;# 
  2116  0E1B                     	;# 
  2117  0E1C                     	;# 
  2118  0E1D                     	;# 
  2119  0E1E                     	;# 
  2120  0E1F                     	;# 
  2121  0E20                     	;# 
  2122  0E21                     	;# 
  2123  0E22                     	;# 
  2124  0E23                     	;# 
  2125  0E24                     	;# 
  2126  0E25                     	;# 
  2127  0E26                     	;# 
  2128  0E27                     	;# 
  2129  0E28                     	;# 
  2130  0E29                     	;# 
  2131  0E2A                     	;# 
  2132  0E2B                     	;# 
  2133  0E2C                     	;# 
  2134  0E2D                     	;# 
  2135  0E2E                     	;# 
  2136  0E2F                     	;# 
  2137  0E30                     	;# 
  2138  0E31                     	;# 
  2139  0E32                     	;# 
  2140  0E33                     	;# 
  2141  0E34                     	;# 
  2142  0E35                     	;# 
  2143  0E36                     	;# 
  2144  0E37                     	;# 
  2145  0E8F                     	;# 
  2146  0E90                     	;# 
  2147  0E91                     	;# 
  2148  0E92                     	;# 
  2149  0E93                     	;# 
  2150  0E94                     	;# 
  2151  0E95                     	;# 
  2152  0E96                     	;# 
  2153  0E97                     	;# 
  2154  0E9C                     	;# 
  2155  0E9D                     	;# 
  2156  0E9E                     	;# 
  2157  0EA1                     	;# 
  2158  0EA2                     	;# 
  2159  0EA3                     	;# 
  2160  0EA4                     	;# 
  2161  0EA5                     	;# 
  2162  0EA9                     	;# 
  2163  0EAA                     	;# 
  2164  0EAB                     	;# 
  2165  0EAC                     	;# 
  2166  0EB1                     	;# 
  2167  0EB2                     	;# 
  2168  0EB3                     	;# 
  2169  0EB8                     	;# 
  2170  0EB9                     	;# 
  2171  0EBA                     	;# 
  2172  0EBB                     	;# 
  2173  0EBC                     	;# 
  2174  0EBD                     	;# 
  2175  0EBE                     	;# 
  2176  0EC3                     	;# 
  2177  0EC5                     	;# 
  2178  0EC6                     	;# 
  2179  0EC7                     	;# 
  2180  0EC8                     	;# 
  2181  0EC9                     	;# 
  2182  0ECA                     	;# 
  2183  0ECB                     	;# 
  2184  0ECC                     	;# 
  2185  0F10                     	;# 
  2186  0F11                     	;# 
  2187  0F12                     	;# 
  2188  0F13                     	;# 
  2189  0F14                     	;# 
  2190  0F15                     	;# 
  2191  0F16                     	;# 
  2192  0F17                     	;# 
  2193  0F18                     	;# 
  2194  0F19                     	;# 
  2195  0F1A                     	;# 
  2196  0F1B                     	;# 
  2197  0F1C                     	;# 
  2198  0F1D                     	;# 
  2199  0F1E                     	;# 
  2200  0F1F                     	;# 
  2201  0F20                     	;# 
  2202  0F21                     	;# 
  2203  0F22                     	;# 
  2204  0F23                     	;# 
  2205  0F24                     	;# 
  2206  0F25                     	;# 
  2207  0F26                     	;# 
  2208  0F27                     	;# 
  2209  0F28                     	;# 
  2210  0F29                     	;# 
  2211  0F2A                     	;# 
  2212  0F2B                     	;# 
  2213  0F2C                     	;# 
  2214  0F2D                     	;# 
  2215  0F2E                     	;# 
  2216  0F2F                     	;# 
  2217  0F30                     	;# 
  2218  0F31                     	;# 
  2219  0F32                     	;# 
  2220  0F38                     	;# 
  2221  0F39                     	;# 
  2222  0F3A                     	;# 
  2223  0F3B                     	;# 
  2224  0F3C                     	;# 
  2225  0F3D                     	;# 
  2226  0F3E                     	;# 
  2227  0F3F                     	;# 
  2228  0F40                     	;# 
  2229  0F41                     	;# 
  2230  0F43                     	;# 
  2231  0F44                     	;# 
  2232  0F45                     	;# 
  2233  0F46                     	;# 
  2234  0F47                     	;# 
  2235  0F48                     	;# 
  2236  0F49                     	;# 
  2237  0F4A                     	;# 
  2238  0F4B                     	;# 
  2239  0F4C                     	;# 
  2240  0F4E                     	;# 
  2241  0F4F                     	;# 
  2242  0F50                     	;# 
  2243  0F51                     	;# 
  2244  0F52                     	;# 
  2245  0F53                     	;# 
  2246  0F54                     	;# 
  2247  0F55                     	;# 
  2248  0F56                     	;# 
  2249  0F57                     	;# 
  2250  0F59                     	;# 
  2251  0F5A                     	;# 
  2252  0F5B                     	;# 
  2253  0F5C                     	;# 
  2254  0F5D                     	;# 
  2255  0F61                     	;# 
  2256  0F62                     	;# 
  2257  0F64                     	;# 
  2258  0F65                     	;# 
  2259  0F66                     	;# 
  2260  0F67                     	;# 
  2261  0F68                     	;# 
  2262  0F69                     	;# 
  2263  0F6A                     	;# 
  2264  0F6B                     	;# 
  2265  0F6C                     	;# 
  2266  0F6D                     	;# 
  2267  0FE4                     	;# 
  2268  0FE5                     	;# 
  2269  0FE6                     	;# 
  2270  0FE7                     	;# 
  2271  0FE8                     	;# 
  2272  0FE9                     	;# 
  2273  0FEA                     	;# 
  2274  0FEB                     	;# 
  2275  0FED                     	;# 
  2276  0FEE                     	;# 
  2277  0FEF                     	;# 
  2278  0000                     	;# 
  2279  0001                     	;# 
  2280  0002                     	;# 
  2281  0003                     	;# 
  2282  0004                     	;# 
  2283  0005                     	;# 
  2284  0006                     	;# 
  2285  0007                     	;# 
  2286  0008                     	;# 
  2287  0009                     	;# 
  2288  000A                     	;# 
  2289  000B                     	;# 
  2290  000C                     	;# 
  2291  000D                     	;# 
  2292  000E                     	;# 
  2293  000F                     	;# 
  2294  0010                     	;# 
  2295  0011                     	;# 
  2296  0012                     	;# 
  2297  0013                     	;# 
  2298  0014                     	;# 
  2299  0015                     	;# 
  2300  0016                     	;# 
  2301  0017                     	;# 
  2302  0018                     	;# 
  2303  0019                     	;# 
  2304  001A                     	;# 
  2305  001C                     	;# 
  2306  001C                     	;# 
  2307  001D                     	;# 
  2308  001D                     	;# 
  2309  001E                     	;# 
  2310  001F                     	;# 
  2311  008C                     	;# 
  2312  008C                     	;# 
  2313  008D                     	;# 
  2314  008E                     	;# 
  2315  008E                     	;# 
  2316  008F                     	;# 
  2317  0090                     	;# 
  2318  0090                     	;# 
  2319  0091                     	;# 
  2320  0093                     	;# 
  2321  0094                     	;# 
  2322  0095                     	;# 
  2323  0096                     	;# 
  2324  0097                     	;# 
  2325  0098                     	;# 
  2326  0099                     	;# 
  2327  009A                     	;# 
  2328  009B                     	;# 
  2329  009C                     	;# 
  2330  009D                     	;# 
  2331  009E                     	;# 
  2332  010C                     	;# 
  2333  010D                     	;# 
  2334  010E                     	;# 
  2335  010E                     	;# 
  2336  010F                     	;# 
  2337  0110                     	;# 
  2338  0110                     	;# 
  2339  0111                     	;# 
  2340  0112                     	;# 
  2341  0112                     	;# 
  2342  0113                     	;# 
  2343  0114                     	;# 
  2344  0114                     	;# 
  2345  0115                     	;# 
  2346  0116                     	;# 
  2347  0116                     	;# 
  2348  0117                     	;# 
  2349  0119                     	;# 
  2350  0119                     	;# 
  2351  0119                     	;# 
  2352  011A                     	;# 
  2353  011A                     	;# 
  2354  011A                     	;# 
  2355  011B                     	;# 
  2356  011B                     	;# 
  2357  011B                     	;# 
  2358  011B                     	;# 
  2359  011B                     	;# 
  2360  011C                     	;# 
  2361  011C                     	;# 
  2362  011C                     	;# 
  2363  011D                     	;# 
  2364  011D                     	;# 
  2365  011D                     	;# 
  2366  011E                     	;# 
  2367  011E                     	;# 
  2368  011E                     	;# 
  2369  011F                     	;# 
  2370  011F                     	;# 
  2371  011F                     	;# 
  2372  011F                     	;# 
  2373  011F                     	;# 
  2374  018C                     	;# 
  2375  018D                     	;# 
  2376  018E                     	;# 
  2377  018F                     	;# 
  2378  0190                     	;# 
  2379  0191                     	;# 
  2380  0192                     	;# 
  2381  0196                     	;# 
  2382  0197                     	;# 
  2383  0198                     	;# 
  2384  0199                     	;# 
  2385  019A                     	;# 
  2386  019B                     	;# 
  2387  019C                     	;# 
  2388  020C                     	;# 
  2389  020C                     	;# 
  2390  020D                     	;# 
  2391  020E                     	;# 
  2392  020F                     	;# 
  2393  020F                     	;# 
  2394  0210                     	;# 
  2395  0210                     	;# 
  2396  0211                     	;# 
  2397  0211                     	;# 
  2398  0212                     	;# 
  2399  0212                     	;# 
  2400  0213                     	;# 
  2401  0214                     	;# 
  2402  0215                     	;# 
  2403  0215                     	;# 
  2404  0216                     	;# 
  2405  0216                     	;# 
  2406  0217                     	;# 
  2407  0217                     	;# 
  2408  0218                     	;# 
  2409  0218                     	;# 
  2410  0219                     	;# 
  2411  021A                     	;# 
  2412  021B                     	;# 
  2413  021B                     	;# 
  2414  021C                     	;# 
  2415  021C                     	;# 
  2416  021D                     	;# 
  2417  021D                     	;# 
  2418  021E                     	;# 
  2419  021F                     	;# 
  2420  028C                     	;# 
  2421  028C                     	;# 
  2422  028D                     	;# 
  2423  028D                     	;# 
  2424  028E                     	;# 
  2425  028F                     	;# 
  2426  0290                     	;# 
  2427  0290                     	;# 
  2428  0291                     	;# 
  2429  0292                     	;# 
  2430  0292                     	;# 
  2431  0293                     	;# 
  2432  0293                     	;# 
  2433  0294                     	;# 
  2434  0295                     	;# 
  2435  0296                     	;# 
  2436  0296                     	;# 
  2437  0297                     	;# 
  2438  0298                     	;# 
  2439  0298                     	;# 
  2440  0299                     	;# 
  2441  0299                     	;# 
  2442  029A                     	;# 
  2443  029B                     	;# 
  2444  029C                     	;# 
  2445  029C                     	;# 
  2446  029D                     	;# 
  2447  030C                     	;# 
  2448  030C                     	;# 
  2449  030D                     	;# 
  2450  030E                     	;# 
  2451  030F                     	;# 
  2452  0310                     	;# 
  2453  0310                     	;# 
  2454  0311                     	;# 
  2455  0312                     	;# 
  2456  0313                     	;# 
  2457  0314                     	;# 
  2458  0314                     	;# 
  2459  0315                     	;# 
  2460  0316                     	;# 
  2461  0317                     	;# 
  2462  0318                     	;# 
  2463  0318                     	;# 
  2464  0319                     	;# 
  2465  031A                     	;# 
  2466  031B                     	;# 
  2467  031C                     	;# 
  2468  031C                     	;# 
  2469  031D                     	;# 
  2470  031E                     	;# 
  2471  031F                     	;# 
  2472  038C                     	;# 
  2473  038C                     	;# 
  2474  038D                     	;# 
  2475  038E                     	;# 
  2476  0390                     	;# 
  2477  0390                     	;# 
  2478  0391                     	;# 
  2479  0392                     	;# 
  2480  040C                     	;# 
  2481  040D                     	;# 
  2482  040E                     	;# 
  2483  040F                     	;# 
  2484  0410                     	;# 
  2485  0411                     	;# 
  2486  0416                     	;# 
  2487  0416                     	;# 
  2488  0417                     	;# 
  2489  0418                     	;# 
  2490  0418                     	;# 
  2491  0419                     	;# 
  2492  041A                     	;# 
  2493  041A                     	;# 
  2494  041B                     	;# 
  2495  041C                     	;# 
  2496  041C                     	;# 
  2497  041D                     	;# 
  2498  041E                     	;# 
  2499  041F                     	;# 
  2500  048C                     	;# 
  2501  048C                     	;# 
  2502  048D                     	;# 
  2503  048E                     	;# 
  2504  048F                     	;# 
  2505  048F                     	;# 
  2506  0490                     	;# 
  2507  0491                     	;# 
  2508  0492                     	;# 
  2509  0492                     	;# 
  2510  0493                     	;# 
  2511  0494                     	;# 
  2512  0495                     	;# 
  2513  0495                     	;# 
  2514  0496                     	;# 
  2515  0497                     	;# 
  2516  0498                     	;# 
  2517  0499                     	;# 
  2518  049A                     	;# 
  2519  049B                     	;# 
  2520  049C                     	;# 
  2521  049D                     	;# 
  2522  050C                     	;# 
  2523  050C                     	;# 
  2524  050D                     	;# 
  2525  050E                     	;# 
  2526  050F                     	;# 
  2527  050F                     	;# 
  2528  0510                     	;# 
  2529  0511                     	;# 
  2530  0512                     	;# 
  2531  0512                     	;# 
  2532  0513                     	;# 
  2533  0514                     	;# 
  2534  0515                     	;# 
  2535  0515                     	;# 
  2536  0516                     	;# 
  2537  0517                     	;# 
  2538  0518                     	;# 
  2539  0519                     	;# 
  2540  051A                     	;# 
  2541  051B                     	;# 
  2542  051C                     	;# 
  2543  051D                     	;# 
  2544  058C                     	;# 
  2545  058C                     	;# 
  2546  058D                     	;# 
  2547  058E                     	;# 
  2548  058F                     	;# 
  2549  058F                     	;# 
  2550  0590                     	;# 
  2551  0591                     	;# 
  2552  0592                     	;# 
  2553  0593                     	;# 
  2554  060C                     	;# 
  2555  060D                     	;# 
  2556  060E                     	;# 
  2557  060F                     	;# 
  2558  0610                     	;# 
  2559  0611                     	;# 
  2560  0612                     	;# 
  2561  0613                     	;# 
  2562  0614                     	;# 
  2563  0616                     	;# 
  2564  0617                     	;# 
  2565  0618                     	;# 
  2566  0619                     	;# 
  2567  061A                     	;# 
  2568  061B                     	;# 
  2569  061C                     	;# 
  2570  061D                     	;# 
  2571  061E                     	;# 
  2572  068C                     	;# 
  2573  068D                     	;# 
  2574  068E                     	;# 
  2575  068F                     	;# 
  2576  0690                     	;# 
  2577  0691                     	;# 
  2578  0692                     	;# 
  2579  0693                     	;# 
  2580  0694                     	;# 
  2581  070C                     	;# 
  2582  070D                     	;# 
  2583  070E                     	;# 
  2584  070F                     	;# 
  2585  0710                     	;# 
  2586  0711                     	;# 
  2587  0712                     	;# 
  2588  0713                     	;# 
  2589  0714                     	;# 
  2590  0716                     	;# 
  2591  0717                     	;# 
  2592  0718                     	;# 
  2593  0719                     	;# 
  2594  071A                     	;# 
  2595  071B                     	;# 
  2596  071C                     	;# 
  2597  071D                     	;# 
  2598  071E                     	;# 
  2599  0796                     	;# 
  2600  0797                     	;# 
  2601  0798                     	;# 
  2602  0799                     	;# 
  2603  079A                     	;# 
  2604  079B                     	;# 
  2605  080C                     	;# 
  2606  080D                     	;# 
  2607  080E                     	;# 
  2608  080F                     	;# 
  2609  0810                     	;# 
  2610  0811                     	;# 
  2611  0812                     	;# 
  2612  0813                     	;# 
  2613  0814                     	;# 
  2614  081A                     	;# 
  2615  081B                     	;# 
  2616  081C                     	;# 
  2617  081D                     	;# 
  2618  081E                     	;# 
  2619  081F                     	;# 
  2620  088C                     	;# 
  2621  088D                     	;# 
  2622  088E                     	;# 
  2623  088F                     	;# 
  2624  0890                     	;# 
  2625  0891                     	;# 
  2626  0892                     	;# 
  2627  0893                     	;# 
  2628  0895                     	;# 
  2629  0896                     	;# 
  2630  0897                     	;# 
  2631  0898                     	;# 
  2632  0899                     	;# 
  2633  089A                     	;# 
  2634  089B                     	;# 
  2635  090C                     	;# 
  2636  090E                     	;# 
  2637  090F                     	;# 
  2638  091F                     	;# 
  2639  091F                     	;# 
  2640  098F                     	;# 
  2641  098F                     	;# 
  2642  0990                     	;# 
  2643  0991                     	;# 
  2644  0992                     	;# 
  2645  0993                     	;# 
  2646  0994                     	;# 
  2647  0995                     	;# 
  2648  0996                     	;# 
  2649  0997                     	;# 
  2650  0E0F                     	;# 
  2651  0E10                     	;# 
  2652  0E11                     	;# 
  2653  0E12                     	;# 
  2654  0E13                     	;# 
  2655  0E14                     	;# 
  2656  0E15                     	;# 
  2657  0E16                     	;# 
  2658  0E17                     	;# 
  2659  0E18                     	;# 
  2660  0E19                     	;# 
  2661  0E1A                     	;# 
  2662  0E1B                     	;# 
  2663  0E1C                     	;# 
  2664  0E1D                     	;# 
  2665  0E1E                     	;# 
  2666  0E1F                     	;# 
  2667  0E20                     	;# 
  2668  0E21                     	;# 
  2669  0E22                     	;# 
  2670  0E23                     	;# 
  2671  0E24                     	;# 
  2672  0E25                     	;# 
  2673  0E26                     	;# 
  2674  0E27                     	;# 
  2675  0E28                     	;# 
  2676  0E29                     	;# 
  2677  0E2A                     	;# 
  2678  0E2B                     	;# 
  2679  0E2C                     	;# 
  2680  0E2D                     	;# 
  2681  0E2E                     	;# 
  2682  0E2F                     	;# 
  2683  0E30                     	;# 
  2684  0E31                     	;# 
  2685  0E32                     	;# 
  2686  0E33                     	;# 
  2687  0E34                     	;# 
  2688  0E35                     	;# 
  2689  0E36                     	;# 
  2690  0E37                     	;# 
  2691  0E8F                     	;# 
  2692  0E90                     	;# 
  2693  0E91                     	;# 
  2694  0E92                     	;# 
  2695  0E93                     	;# 
  2696  0E94                     	;# 
  2697  0E95                     	;# 
  2698  0E96                     	;# 
  2699  0E97                     	;# 
  2700  0E9C                     	;# 
  2701  0E9D                     	;# 
  2702  0E9E                     	;# 
  2703  0EA1                     	;# 
  2704  0EA2                     	;# 
  2705  0EA3                     	;# 
  2706  0EA4                     	;# 
  2707  0EA5                     	;# 
  2708  0EA9                     	;# 
  2709  0EAA                     	;# 
  2710  0EAB                     	;# 
  2711  0EAC                     	;# 
  2712  0EB1                     	;# 
  2713  0EB2                     	;# 
  2714  0EB3                     	;# 
  2715  0EB8                     	;# 
  2716  0EB9                     	;# 
  2717  0EBA                     	;# 
  2718  0EBB                     	;# 
  2719  0EBC                     	;# 
  2720  0EBD                     	;# 
  2721  0EBE                     	;# 
  2722  0EC3                     	;# 
  2723  0EC5                     	;# 
  2724  0EC6                     	;# 
  2725  0EC7                     	;# 
  2726  0EC8                     	;# 
  2727  0EC9                     	;# 
  2728  0ECA                     	;# 
  2729  0ECB                     	;# 
  2730  0ECC                     	;# 
  2731  0F10                     	;# 
  2732  0F11                     	;# 
  2733  0F12                     	;# 
  2734  0F13                     	;# 
  2735  0F14                     	;# 
  2736  0F15                     	;# 
  2737  0F16                     	;# 
  2738  0F17                     	;# 
  2739  0F18                     	;# 
  2740  0F19                     	;# 
  2741  0F1A                     	;# 
  2742  0F1B                     	;# 
  2743  0F1C                     	;# 
  2744  0F1D                     	;# 
  2745  0F1E                     	;# 
  2746  0F1F                     	;# 
  2747  0F20                     	;# 
  2748  0F21                     	;# 
  2749  0F22                     	;# 
  2750  0F23                     	;# 
  2751  0F24                     	;# 
  2752  0F25                     	;# 
  2753  0F26                     	;# 
  2754  0F27                     	;# 
  2755  0F28                     	;# 
  2756  0F29                     	;# 
  2757  0F2A                     	;# 
  2758  0F2B                     	;# 
  2759  0F2C                     	;# 
  2760  0F2D                     	;# 
  2761  0F2E                     	;# 
  2762  0F2F                     	;# 
  2763  0F30                     	;# 
  2764  0F31                     	;# 
  2765  0F32                     	;# 
  2766  0F38                     	;# 
  2767  0F39                     	;# 
  2768  0F3A                     	;# 
  2769  0F3B                     	;# 
  2770  0F3C                     	;# 
  2771  0F3D                     	;# 
  2772  0F3E                     	;# 
  2773  0F3F                     	;# 
  2774  0F40                     	;# 
  2775  0F41                     	;# 
  2776  0F43                     	;# 
  2777  0F44                     	;# 
  2778  0F45                     	;# 
  2779  0F46                     	;# 
  2780  0F47                     	;# 
  2781  0F48                     	;# 
  2782  0F49                     	;# 
  2783  0F4A                     	;# 
  2784  0F4B                     	;# 
  2785  0F4C                     	;# 
  2786  0F4E                     	;# 
  2787  0F4F                     	;# 
  2788  0F50                     	;# 
  2789  0F51                     	;# 
  2790  0F52                     	;# 
  2791  0F53                     	;# 
  2792  0F54                     	;# 
  2793  0F55                     	;# 
  2794  0F56                     	;# 
  2795  0F57                     	;# 
  2796  0F59                     	;# 
  2797  0F5A                     	;# 
  2798  0F5B                     	;# 
  2799  0F5C                     	;# 
  2800  0F5D                     	;# 
  2801  0F61                     	;# 
  2802  0F62                     	;# 
  2803  0F64                     	;# 
  2804  0F65                     	;# 
  2805  0F66                     	;# 
  2806  0F67                     	;# 
  2807  0F68                     	;# 
  2808  0F69                     	;# 
  2809  0F6A                     	;# 
  2810  0F6B                     	;# 
  2811  0F6C                     	;# 
  2812  0F6D                     	;# 
  2813  0FE4                     	;# 
  2814  0FE5                     	;# 
  2815  0FE6                     	;# 
  2816  0FE7                     	;# 
  2817  0FE8                     	;# 
  2818  0FE9                     	;# 
  2819  0FEA                     	;# 
  2820  0FEB                     	;# 
  2821  0FED                     	;# 
  2822  0FEE                     	;# 
  2823  0FEF                     	;# 
  2824  0000                     	;# 
  2825  0001                     	;# 
  2826  0002                     	;# 
  2827  0003                     	;# 
  2828  0004                     	;# 
  2829  0005                     	;# 
  2830  0006                     	;# 
  2831  0007                     	;# 
  2832  0008                     	;# 
  2833  0009                     	;# 
  2834  000A                     	;# 
  2835  000B                     	;# 
  2836  000C                     	;# 
  2837  000D                     	;# 
  2838  000E                     	;# 
  2839  000F                     	;# 
  2840  0010                     	;# 
  2841  0011                     	;# 
  2842  0012                     	;# 
  2843  0013                     	;# 
  2844  0014                     	;# 
  2845  0015                     	;# 
  2846  0016                     	;# 
  2847  0017                     	;# 
  2848  0018                     	;# 
  2849  0019                     	;# 
  2850  001A                     	;# 
  2851  001C                     	;# 
  2852  001C                     	;# 
  2853  001D                     	;# 
  2854  001D                     	;# 
  2855  001E                     	;# 
  2856  001F                     	;# 
  2857  008C                     	;# 
  2858  008C                     	;# 
  2859  008D                     	;# 
  2860  008E                     	;# 
  2861  008E                     	;# 
  2862  008F                     	;# 
  2863  0090                     	;# 
  2864  0090                     	;# 
  2865  0091                     	;# 
  2866  0093                     	;# 
  2867  0094                     	;# 
  2868  0095                     	;# 
  2869  0096                     	;# 
  2870  0097                     	;# 
  2871  0098                     	;# 
  2872  0099                     	;# 
  2873  009A                     	;# 
  2874  009B                     	;# 
  2875  009C                     	;# 
  2876  009D                     	;# 
  2877  009E                     	;# 
  2878  010C                     	;# 
  2879  010D                     	;# 
  2880  010E                     	;# 
  2881  010E                     	;# 
  2882  010F                     	;# 
  2883  0110                     	;# 
  2884  0110                     	;# 
  2885  0111                     	;# 
  2886  0112                     	;# 
  2887  0112                     	;# 
  2888  0113                     	;# 
  2889  0114                     	;# 
  2890  0114                     	;# 
  2891  0115                     	;# 
  2892  0116                     	;# 
  2893  0116                     	;# 
  2894  0117                     	;# 
  2895  0119                     	;# 
  2896  0119                     	;# 
  2897  0119                     	;# 
  2898  011A                     	;# 
  2899  011A                     	;# 
  2900  011A                     	;# 
  2901  011B                     	;# 
  2902  011B                     	;# 
  2903  011B                     	;# 
  2904  011B                     	;# 
  2905  011B                     	;# 
  2906  011C                     	;# 
  2907  011C                     	;# 
  2908  011C                     	;# 
  2909  011D                     	;# 
  2910  011D                     	;# 
  2911  011D                     	;# 
  2912  011E                     	;# 
  2913  011E                     	;# 
  2914  011E                     	;# 
  2915  011F                     	;# 
  2916  011F                     	;# 
  2917  011F                     	;# 
  2918  011F                     	;# 
  2919  011F                     	;# 
  2920  018C                     	;# 
  2921  018D                     	;# 
  2922  018E                     	;# 
  2923  018F                     	;# 
  2924  0190                     	;# 
  2925  0191                     	;# 
  2926  0192                     	;# 
  2927  0196                     	;# 
  2928  0197                     	;# 
  2929  0198                     	;# 
  2930  0199                     	;# 
  2931  019A                     	;# 
  2932  019B                     	;# 
  2933  019C                     	;# 
  2934  020C                     	;# 
  2935  020C                     	;# 
  2936  020D                     	;# 
  2937  020E                     	;# 
  2938  020F                     	;# 
  2939  020F                     	;# 
  2940  0210                     	;# 
  2941  0210                     	;# 
  2942  0211                     	;# 
  2943  0211                     	;# 
  2944  0212                     	;# 
  2945  0212                     	;# 
  2946  0213                     	;# 
  2947  0214                     	;# 
  2948  0215                     	;# 
  2949  0215                     	;# 
  2950  0216                     	;# 
  2951  0216                     	;# 
  2952  0217                     	;# 
  2953  0217                     	;# 
  2954  0218                     	;# 
  2955  0218                     	;# 
  2956  0219                     	;# 
  2957  021A                     	;# 
  2958  021B                     	;# 
  2959  021B                     	;# 
  2960  021C                     	;# 
  2961  021C                     	;# 
  2962  021D                     	;# 
  2963  021D                     	;# 
  2964  021E                     	;# 
  2965  021F                     	;# 
  2966  028C                     	;# 
  2967  028C                     	;# 
  2968  028D                     	;# 
  2969  028D                     	;# 
  2970  028E                     	;# 
  2971  028F                     	;# 
  2972  0290                     	;# 
  2973  0290                     	;# 
  2974  0291                     	;# 
  2975  0292                     	;# 
  2976  0292                     	;# 
  2977  0293                     	;# 
  2978  0293                     	;# 
  2979  0294                     	;# 
  2980  0295                     	;# 
  2981  0296                     	;# 
  2982  0296                     	;# 
  2983  0297                     	;# 
  2984  0298                     	;# 
  2985  0298                     	;# 
  2986  0299                     	;# 
  2987  0299                     	;# 
  2988  029A                     	;# 
  2989  029B                     	;# 
  2990  029C                     	;# 
  2991  029C                     	;# 
  2992  029D                     	;# 
  2993  030C                     	;# 
  2994  030C                     	;# 
  2995  030D                     	;# 
  2996  030E                     	;# 
  2997  030F                     	;# 
  2998  0310                     	;# 
  2999  0310                     	;# 
  3000  0311                     	;# 
  3001  0312                     	;# 
  3002  0313                     	;# 
  3003  0314                     	;# 
  3004  0314                     	;# 
  3005  0315                     	;# 
  3006  0316                     	;# 
  3007  0317                     	;# 
  3008  0318                     	;# 
  3009  0318                     	;# 
  3010  0319                     	;# 
  3011  031A                     	;# 
  3012  031B                     	;# 
  3013  031C                     	;# 
  3014  031C                     	;# 
  3015  031D                     	;# 
  3016  031E                     	;# 
  3017  031F                     	;# 
  3018  038C                     	;# 
  3019  038C                     	;# 
  3020  038D                     	;# 
  3021  038E                     	;# 
  3022  0390                     	;# 
  3023  0390                     	;# 
  3024  0391                     	;# 
  3025  0392                     	;# 
  3026  040C                     	;# 
  3027  040D                     	;# 
  3028  040E                     	;# 
  3029  040F                     	;# 
  3030  0410                     	;# 
  3031  0411                     	;# 
  3032  0416                     	;# 
  3033  0416                     	;# 
  3034  0417                     	;# 
  3035  0418                     	;# 
  3036  0418                     	;# 
  3037  0419                     	;# 
  3038  041A                     	;# 
  3039  041A                     	;# 
  3040  041B                     	;# 
  3041  041C                     	;# 
  3042  041C                     	;# 
  3043  041D                     	;# 
  3044  041E                     	;# 
  3045  041F                     	;# 
  3046  048C                     	;# 
  3047  048C                     	;# 
  3048  048D                     	;# 
  3049  048E                     	;# 
  3050  048F                     	;# 
  3051  048F                     	;# 
  3052  0490                     	;# 
  3053  0491                     	;# 
  3054  0492                     	;# 
  3055  0492                     	;# 
  3056  0493                     	;# 
  3057  0494                     	;# 
  3058  0495                     	;# 
  3059  0495                     	;# 
  3060  0496                     	;# 
  3061  0497                     	;# 
  3062  0498                     	;# 
  3063  0499                     	;# 
  3064  049A                     	;# 
  3065  049B                     	;# 
  3066  049C                     	;# 
  3067  049D                     	;# 
  3068  050C                     	;# 
  3069  050C                     	;# 
  3070  050D                     	;# 
  3071  050E                     	;# 
  3072  050F                     	;# 
  3073  050F                     	;# 
  3074  0510                     	;# 
  3075  0511                     	;# 
  3076  0512                     	;# 
  3077  0512                     	;# 
  3078  0513                     	;# 
  3079  0514                     	;# 
  3080  0515                     	;# 
  3081  0515                     	;# 
  3082  0516                     	;# 
  3083  0517                     	;# 
  3084  0518                     	;# 
  3085  0519                     	;# 
  3086  051A                     	;# 
  3087  051B                     	;# 
  3088  051C                     	;# 
  3089  051D                     	;# 
  3090  058C                     	;# 
  3091  058C                     	;# 
  3092  058D                     	;# 
  3093  058E                     	;# 
  3094  058F                     	;# 
  3095  058F                     	;# 
  3096  0590                     	;# 
  3097  0591                     	;# 
  3098  0592                     	;# 
  3099  0593                     	;# 
  3100  060C                     	;# 
  3101  060D                     	;# 
  3102  060E                     	;# 
  3103  060F                     	;# 
  3104  0610                     	;# 
  3105  0611                     	;# 
  3106  0612                     	;# 
  3107  0613                     	;# 
  3108  0614                     	;# 
  3109  0616                     	;# 
  3110  0617                     	;# 
  3111  0618                     	;# 
  3112  0619                     	;# 
  3113  061A                     	;# 
  3114  061B                     	;# 
  3115  061C                     	;# 
  3116  061D                     	;# 
  3117  061E                     	;# 
  3118  068C                     	;# 
  3119  068D                     	;# 
  3120  068E                     	;# 
  3121  068F                     	;# 
  3122  0690                     	;# 
  3123  0691                     	;# 
  3124  0692                     	;# 
  3125  0693                     	;# 
  3126  0694                     	;# 
  3127  070C                     	;# 
  3128  070D                     	;# 
  3129  070E                     	;# 
  3130  070F                     	;# 
  3131  0710                     	;# 
  3132  0711                     	;# 
  3133  0712                     	;# 
  3134  0713                     	;# 
  3135  0714                     	;# 
  3136  0716                     	;# 
  3137  0717                     	;# 
  3138  0718                     	;# 
  3139  0719                     	;# 
  3140  071A                     	;# 
  3141  071B                     	;# 
  3142  071C                     	;# 
  3143  071D                     	;# 
  3144  071E                     	;# 
  3145  0796                     	;# 
  3146  0797                     	;# 
  3147  0798                     	;# 
  3148  0799                     	;# 
  3149  079A                     	;# 
  3150  079B                     	;# 
  3151  080C                     	;# 
  3152  080D                     	;# 
  3153  080E                     	;# 
  3154  080F                     	;# 
  3155  0810                     	;# 
  3156  0811                     	;# 
  3157  0812                     	;# 
  3158  0813                     	;# 
  3159  0814                     	;# 
  3160  081A                     	;# 
  3161  081B                     	;# 
  3162  081C                     	;# 
  3163  081D                     	;# 
  3164  081E                     	;# 
  3165  081F                     	;# 
  3166  088C                     	;# 
  3167  088D                     	;# 
  3168  088E                     	;# 
  3169  088F                     	;# 
  3170  0890                     	;# 
  3171  0891                     	;# 
  3172  0892                     	;# 
  3173  0893                     	;# 
  3174  0895                     	;# 
  3175  0896                     	;# 
  3176  0897                     	;# 
  3177  0898                     	;# 
  3178  0899                     	;# 
  3179  089A                     	;# 
  3180  089B                     	;# 
  3181  090C                     	;# 
  3182  090E                     	;# 
  3183  090F                     	;# 
  3184  091F                     	;# 
  3185  091F                     	;# 
  3186  098F                     	;# 
  3187  098F                     	;# 
  3188  0990                     	;# 
  3189  0991                     	;# 
  3190  0992                     	;# 
  3191  0993                     	;# 
  3192  0994                     	;# 
  3193  0995                     	;# 
  3194  0996                     	;# 
  3195  0997                     	;# 
  3196  0E0F                     	;# 
  3197  0E10                     	;# 
  3198  0E11                     	;# 
  3199  0E12                     	;# 
  3200  0E13                     	;# 
  3201  0E14                     	;# 
  3202  0E15                     	;# 
  3203  0E16                     	;# 
  3204  0E17                     	;# 
  3205  0E18                     	;# 
  3206  0E19                     	;# 
  3207  0E1A                     	;# 
  3208  0E1B                     	;# 
  3209  0E1C                     	;# 
  3210  0E1D                     	;# 
  3211  0E1E                     	;# 
  3212  0E1F                     	;# 
  3213  0E20                     	;# 
  3214  0E21                     	;# 
  3215  0E22                     	;# 
  3216  0E23                     	;# 
  3217  0E24                     	;# 
  3218  0E25                     	;# 
  3219  0E26                     	;# 
  3220  0E27                     	;# 
  3221  0E28                     	;# 
  3222  0E29                     	;# 
  3223  0E2A                     	;# 
  3224  0E2B                     	;# 
  3225  0E2C                     	;# 
  3226  0E2D                     	;# 
  3227  0E2E                     	;# 
  3228  0E2F                     	;# 
  3229  0E30                     	;# 
  3230  0E31                     	;# 
  3231  0E32                     	;# 
  3232  0E33                     	;# 
  3233  0E34                     	;# 
  3234  0E35                     	;# 
  3235  0E36                     	;# 
  3236  0E37                     	;# 
  3237  0E8F                     	;# 
  3238  0E90                     	;# 
  3239  0E91                     	;# 
  3240  0E92                     	;# 
  3241  0E93                     	;# 
  3242  0E94                     	;# 
  3243  0E95                     	;# 
  3244  0E96                     	;# 
  3245  0E97                     	;# 
  3246  0E9C                     	;# 
  3247  0E9D                     	;# 
  3248  0E9E                     	;# 
  3249  0EA1                     	;# 
  3250  0EA2                     	;# 
  3251  0EA3                     	;# 
  3252  0EA4                     	;# 
  3253  0EA5                     	;# 
  3254  0EA9                     	;# 
  3255  0EAA                     	;# 
  3256  0EAB                     	;# 
  3257  0EAC                     	;# 
  3258  0EB1                     	;# 
  3259  0EB2                     	;# 
  3260  0EB3                     	;# 
  3261  0EB8                     	;# 
  3262  0EB9                     	;# 
  3263  0EBA                     	;# 
  3264  0EBB                     	;# 
  3265  0EBC                     	;# 
  3266  0EBD                     	;# 
  3267  0EBE                     	;# 
  3268  0EC3                     	;# 
  3269  0EC5                     	;# 
  3270  0EC6                     	;# 
  3271  0EC7                     	;# 
  3272  0EC8                     	;# 
  3273  0EC9                     	;# 
  3274  0ECA                     	;# 
  3275  0ECB                     	;# 
  3276  0ECC                     	;# 
  3277  0F10                     	;# 
  3278  0F11                     	;# 
  3279  0F12                     	;# 
  3280  0F13                     	;# 
  3281  0F14                     	;# 
  3282  0F15                     	;# 
  3283  0F16                     	;# 
  3284  0F17                     	;# 
  3285  0F18                     	;# 
  3286  0F19                     	;# 
  3287  0F1A                     	;# 
  3288  0F1B                     	;# 
  3289  0F1C                     	;# 
  3290  0F1D                     	;# 
  3291  0F1E                     	;# 
  3292  0F1F                     	;# 
  3293  0F20                     	;# 
  3294  0F21                     	;# 
  3295  0F22                     	;# 
  3296  0F23                     	;# 
  3297  0F24                     	;# 
  3298  0F25                     	;# 
  3299  0F26                     	;# 
  3300  0F27                     	;# 
  3301  0F28                     	;# 
  3302  0F29                     	;# 
  3303  0F2A                     	;# 
  3304  0F2B                     	;# 
  3305  0F2C                     	;# 
  3306  0F2D                     	;# 
  3307  0F2E                     	;# 
  3308  0F2F                     	;# 
  3309  0F30                     	;# 
  3310  0F31                     	;# 
  3311  0F32                     	;# 
  3312  0F38                     	;# 
  3313  0F39                     	;# 
  3314  0F3A                     	;# 
  3315  0F3B                     	;# 
  3316  0F3C                     	;# 
  3317  0F3D                     	;# 
  3318  0F3E                     	;# 
  3319  0F3F                     	;# 
  3320  0F40                     	;# 
  3321  0F41                     	;# 
  3322  0F43                     	;# 
  3323  0F44                     	;# 
  3324  0F45                     	;# 
  3325  0F46                     	;# 
  3326  0F47                     	;# 
  3327  0F48                     	;# 
  3328  0F49                     	;# 
  3329  0F4A                     	;# 
  3330  0F4B                     	;# 
  3331  0F4C                     	;# 
  3332  0F4E                     	;# 
  3333  0F4F                     	;# 
  3334  0F50                     	;# 
  3335  0F51                     	;# 
  3336  0F52                     	;# 
  3337  0F53                     	;# 
  3338  0F54                     	;# 
  3339  0F55                     	;# 
  3340  0F56                     	;# 
  3341  0F57                     	;# 
  3342  0F59                     	;# 
  3343  0F5A                     	;# 
  3344  0F5B                     	;# 
  3345  0F5C                     	;# 
  3346  0F5D                     	;# 
  3347  0F61                     	;# 
  3348  0F62                     	;# 
  3349  0F64                     	;# 
  3350  0F65                     	;# 
  3351  0F66                     	;# 
  3352  0F67                     	;# 
  3353  0F68                     	;# 
  3354  0F69                     	;# 
  3355  0F6A                     	;# 
  3356  0F6B                     	;# 
  3357  0F6C                     	;# 
  3358  0F6D                     	;# 
  3359  0FE4                     	;# 
  3360  0FE5                     	;# 
  3361  0FE6                     	;# 
  3362  0FE7                     	;# 
  3363  0FE8                     	;# 
  3364  0FE9                     	;# 
  3365  0FEA                     	;# 
  3366  0FEB                     	;# 
  3367  0FED                     	;# 
  3368  0FEE                     	;# 
  3369  0FEF                     	;# 
  3370  0000                     	;# 
  3371  0001                     	;# 
  3372  0002                     	;# 
  3373  0003                     	;# 
  3374  0004                     	;# 
  3375  0005                     	;# 
  3376  0006                     	;# 
  3377  0007                     	;# 
  3378  0008                     	;# 
  3379  0009                     	;# 
  3380  000A                     	;# 
  3381  000B                     	;# 
  3382  000C                     	;# 
  3383  000D                     	;# 
  3384  000E                     	;# 
  3385  000F                     	;# 
  3386  0010                     	;# 
  3387  0011                     	;# 
  3388  0012                     	;# 
  3389  0013                     	;# 
  3390  0014                     	;# 
  3391  0015                     	;# 
  3392  0016                     	;# 
  3393  0017                     	;# 
  3394  0018                     	;# 
  3395  0019                     	;# 
  3396  001A                     	;# 
  3397  001C                     	;# 
  3398  001C                     	;# 
  3399  001D                     	;# 
  3400  001D                     	;# 
  3401  001E                     	;# 
  3402  001F                     	;# 
  3403  008C                     	;# 
  3404  008C                     	;# 
  3405  008D                     	;# 
  3406  008E                     	;# 
  3407  008E                     	;# 
  3408  008F                     	;# 
  3409  0090                     	;# 
  3410  0090                     	;# 
  3411  0091                     	;# 
  3412  0093                     	;# 
  3413  0094                     	;# 
  3414  0095                     	;# 
  3415  0096                     	;# 
  3416  0097                     	;# 
  3417  0098                     	;# 
  3418  0099                     	;# 
  3419  009A                     	;# 
  3420  009B                     	;# 
  3421  009C                     	;# 
  3422  009D                     	;# 
  3423  009E                     	;# 
  3424  010C                     	;# 
  3425  010D                     	;# 
  3426  010E                     	;# 
  3427  010E                     	;# 
  3428  010F                     	;# 
  3429  0110                     	;# 
  3430  0110                     	;# 
  3431  0111                     	;# 
  3432  0112                     	;# 
  3433  0112                     	;# 
  3434  0113                     	;# 
  3435  0114                     	;# 
  3436  0114                     	;# 
  3437  0115                     	;# 
  3438  0116                     	;# 
  3439  0116                     	;# 
  3440  0117                     	;# 
  3441  0119                     	;# 
  3442  0119                     	;# 
  3443  0119                     	;# 
  3444  011A                     	;# 
  3445  011A                     	;# 
  3446  011A                     	;# 
  3447  011B                     	;# 
  3448  011B                     	;# 
  3449  011B                     	;# 
  3450  011B                     	;# 
  3451  011B                     	;# 
  3452  011C                     	;# 
  3453  011C                     	;# 
  3454  011C                     	;# 
  3455  011D                     	;# 
  3456  011D                     	;# 
  3457  011D                     	;# 
  3458  011E                     	;# 
  3459  011E                     	;# 
  3460  011E                     	;# 
  3461  011F                     	;# 
  3462  011F                     	;# 
  3463  011F                     	;# 
  3464  011F                     	;# 
  3465  011F                     	;# 
  3466  018C                     	;# 
  3467  018D                     	;# 
  3468  018E                     	;# 
  3469  018F                     	;# 
  3470  0190                     	;# 
  3471  0191                     	;# 
  3472  0192                     	;# 
  3473  0196                     	;# 
  3474  0197                     	;# 
  3475  0198                     	;# 
  3476  0199                     	;# 
  3477  019A                     	;# 
  3478  019B                     	;# 
  3479  019C                     	;# 
  3480  020C                     	;# 
  3481  020C                     	;# 
  3482  020D                     	;# 
  3483  020E                     	;# 
  3484  020F                     	;# 
  3485  020F                     	;# 
  3486  0210                     	;# 
  3487  0210                     	;# 
  3488  0211                     	;# 
  3489  0211                     	;# 
  3490  0212                     	;# 
  3491  0212                     	;# 
  3492  0213                     	;# 
  3493  0214                     	;# 
  3494  0215                     	;# 
  3495  0215                     	;# 
  3496  0216                     	;# 
  3497  0216                     	;# 
  3498  0217                     	;# 
  3499  0217                     	;# 
  3500  0218                     	;# 
  3501  0218                     	;# 
  3502  0219                     	;# 
  3503  021A                     	;# 
  3504  021B                     	;# 
  3505  021B                     	;# 
  3506  021C                     	;# 
  3507  021C                     	;# 
  3508  021D                     	;# 
  3509  021D                     	;# 
  3510  021E                     	;# 
  3511  021F                     	;# 
  3512  028C                     	;# 
  3513  028C                     	;# 
  3514  028D                     	;# 
  3515  028D                     	;# 
  3516  028E                     	;# 
  3517  028F                     	;# 
  3518  0290                     	;# 
  3519  0290                     	;# 
  3520  0291                     	;# 
  3521  0292                     	;# 
  3522  0292                     	;# 
  3523  0293                     	;# 
  3524  0293                     	;# 
  3525  0294                     	;# 
  3526  0295                     	;# 
  3527  0296                     	;# 
  3528  0296                     	;# 
  3529  0297                     	;# 
  3530  0298                     	;# 
  3531  0298                     	;# 
  3532  0299                     	;# 
  3533  0299                     	;# 
  3534  029A                     	;# 
  3535  029B                     	;# 
  3536  029C                     	;# 
  3537  029C                     	;# 
  3538  029D                     	;# 
  3539  030C                     	;# 
  3540  030C                     	;# 
  3541  030D                     	;# 
  3542  030E                     	;# 
  3543  030F                     	;# 
  3544  0310                     	;# 
  3545  0310                     	;# 
  3546  0311                     	;# 
  3547  0312                     	;# 
  3548  0313                     	;# 
  3549  0314                     	;# 
  3550  0314                     	;# 
  3551  0315                     	;# 
  3552  0316                     	;# 
  3553  0317                     	;# 
  3554  0318                     	;# 
  3555  0318                     	;# 
  3556  0319                     	;# 
  3557  031A                     	;# 
  3558  031B                     	;# 
  3559  031C                     	;# 
  3560  031C                     	;# 
  3561  031D                     	;# 
  3562  031E                     	;# 
  3563  031F                     	;# 
  3564  038C                     	;# 
  3565  038C                     	;# 
  3566  038D                     	;# 
  3567  038E                     	;# 
  3568  0390                     	;# 
  3569  0390                     	;# 
  3570  0391                     	;# 
  3571  0392                     	;# 
  3572  040C                     	;# 
  3573  040D                     	;# 
  3574  040E                     	;# 
  3575  040F                     	;# 
  3576  0410                     	;# 
  3577  0411                     	;# 
  3578  0416                     	;# 
  3579  0416                     	;# 
  3580  0417                     	;# 
  3581  0418                     	;# 
  3582  0418                     	;# 
  3583  0419                     	;# 
  3584  041A                     	;# 
  3585  041A                     	;# 
  3586  041B                     	;# 
  3587  041C                     	;# 
  3588  041C                     	;# 
  3589  041D                     	;# 
  3590  041E                     	;# 
  3591  041F                     	;# 
  3592  048C                     	;# 
  3593  048C                     	;# 
  3594  048D                     	;# 
  3595  048E                     	;# 
  3596  048F                     	;# 
  3597  048F                     	;# 
  3598  0490                     	;# 
  3599  0491                     	;# 
  3600  0492                     	;# 
  3601  0492                     	;# 
  3602  0493                     	;# 
  3603  0494                     	;# 
  3604  0495                     	;# 
  3605  0495                     	;# 
  3606  0496                     	;# 
  3607  0497                     	;# 
  3608  0498                     	;# 
  3609  0499                     	;# 
  3610  049A                     	;# 
  3611  049B                     	;# 
  3612  049C                     	;# 
  3613  049D                     	;# 
  3614  050C                     	;# 
  3615  050C                     	;# 
  3616  050D                     	;# 
  3617  050E                     	;# 
  3618  050F                     	;# 
  3619  050F                     	;# 
  3620  0510                     	;# 
  3621  0511                     	;# 
  3622  0512                     	;# 
  3623  0512                     	;# 
  3624  0513                     	;# 
  3625  0514                     	;# 
  3626  0515                     	;# 
  3627  0515                     	;# 
  3628  0516                     	;# 
  3629  0517                     	;# 
  3630  0518                     	;# 
  3631  0519                     	;# 
  3632  051A                     	;# 
  3633  051B                     	;# 
  3634  051C                     	;# 
  3635  051D                     	;# 
  3636  058C                     	;# 
  3637  058C                     	;# 
  3638  058D                     	;# 
  3639  058E                     	;# 
  3640  058F                     	;# 
  3641  058F                     	;# 
  3642  0590                     	;# 
  3643  0591                     	;# 
  3644  0592                     	;# 
  3645  0593                     	;# 
  3646  060C                     	;# 
  3647  060D                     	;# 
  3648  060E                     	;# 
  3649  060F                     	;# 
  3650  0610                     	;# 
  3651  0611                     	;# 
  3652  0612                     	;# 
  3653  0613                     	;# 
  3654  0614                     	;# 
  3655  0616                     	;# 
  3656  0617                     	;# 
  3657  0618                     	;# 
  3658  0619                     	;# 
  3659  061A                     	;# 
  3660  061B                     	;# 
  3661  061C                     	;# 
  3662  061D                     	;# 
  3663  061E                     	;# 
  3664  068C                     	;# 
  3665  068D                     	;# 
  3666  068E                     	;# 
  3667  068F                     	;# 
  3668  0690                     	;# 
  3669  0691                     	;# 
  3670  0692                     	;# 
  3671  0693                     	;# 
  3672  0694                     	;# 
  3673  070C                     	;# 
  3674  070D                     	;# 
  3675  070E                     	;# 
  3676  070F                     	;# 
  3677  0710                     	;# 
  3678  0711                     	;# 
  3679  0712                     	;# 
  3680  0713                     	;# 
  3681  0714                     	;# 
  3682  0716                     	;# 
  3683  0717                     	;# 
  3684  0718                     	;# 
  3685  0719                     	;# 
  3686  071A                     	;# 
  3687  071B                     	;# 
  3688  071C                     	;# 
  3689  071D                     	;# 
  3690  071E                     	;# 
  3691  0796                     	;# 
  3692  0797                     	;# 
  3693  0798                     	;# 
  3694  0799                     	;# 
  3695  079A                     	;# 
  3696  079B                     	;# 
  3697  080C                     	;# 
  3698  080D                     	;# 
  3699  080E                     	;# 
  3700  080F                     	;# 
  3701  0810                     	;# 
  3702  0811                     	;# 
  3703  0812                     	;# 
  3704  0813                     	;# 
  3705  0814                     	;# 
  3706  081A                     	;# 
  3707  081B                     	;# 
  3708  081C                     	;# 
  3709  081D                     	;# 
  3710  081E                     	;# 
  3711  081F                     	;# 
  3712  088C                     	;# 
  3713  088D                     	;# 
  3714  088E                     	;# 
  3715  088F                     	;# 
  3716  0890                     	;# 
  3717  0891                     	;# 
  3718  0892                     	;# 
  3719  0893                     	;# 
  3720  0895                     	;# 
  3721  0896                     	;# 
  3722  0897                     	;# 
  3723  0898                     	;# 
  3724  0899                     	;# 
  3725  089A                     	;# 
  3726  089B                     	;# 
  3727  090C                     	;# 
  3728  090E                     	;# 
  3729  090F                     	;# 
  3730  091F                     	;# 
  3731  091F                     	;# 
  3732  098F                     	;# 
  3733  098F                     	;# 
  3734  0990                     	;# 
  3735  0991                     	;# 
  3736  0992                     	;# 
  3737  0993                     	;# 
  3738  0994                     	;# 
  3739  0995                     	;# 
  3740  0996                     	;# 
  3741  0997                     	;# 
  3742  0E0F                     	;# 
  3743  0E10                     	;# 
  3744  0E11                     	;# 
  3745  0E12                     	;# 
  3746  0E13                     	;# 
  3747  0E14                     	;# 
  3748  0E15                     	;# 
  3749  0E16                     	;# 
  3750  0E17                     	;# 
  3751  0E18                     	;# 
  3752  0E19                     	;# 
  3753  0E1A                     	;# 
  3754  0E1B                     	;# 
  3755  0E1C                     	;# 
  3756  0E1D                     	;# 
  3757  0E1E                     	;# 
  3758  0E1F                     	;# 
  3759  0E20                     	;# 
  3760  0E21                     	;# 
  3761  0E22                     	;# 
  3762  0E23                     	;# 
  3763  0E24                     	;# 
  3764  0E25                     	;# 
  3765  0E26                     	;# 
  3766  0E27                     	;# 
  3767  0E28                     	;# 
  3768  0E29                     	;# 
  3769  0E2A                     	;# 
  3770  0E2B                     	;# 
  3771  0E2C                     	;# 
  3772  0E2D                     	;# 
  3773  0E2E                     	;# 
  3774  0E2F                     	;# 
  3775  0E30                     	;# 
  3776  0E31                     	;# 
  3777  0E32                     	;# 
  3778  0E33                     	;# 
  3779  0E34                     	;# 
  3780  0E35                     	;# 
  3781  0E36                     	;# 
  3782  0E37                     	;# 
  3783  0E8F                     	;# 
  3784  0E90                     	;# 
  3785  0E91                     	;# 
  3786  0E92                     	;# 
  3787  0E93                     	;# 
  3788  0E94                     	;# 
  3789  0E95                     	;# 
  3790  0E96                     	;# 
  3791  0E97                     	;# 
  3792  0E9C                     	;# 
  3793  0E9D                     	;# 
  3794  0E9E                     	;# 
  3795  0EA1                     	;# 
  3796  0EA2                     	;# 
  3797  0EA3                     	;# 
  3798  0EA4                     	;# 
  3799  0EA5                     	;# 
  3800  0EA9                     	;# 
  3801  0EAA                     	;# 
  3802  0EAB                     	;# 
  3803  0EAC                     	;# 
  3804  0EB1                     	;# 
  3805  0EB2                     	;# 
  3806  0EB3                     	;# 
  3807  0EB8                     	;# 
  3808  0EB9                     	;# 
  3809  0EBA                     	;# 
  3810  0EBB                     	;# 
  3811  0EBC                     	;# 
  3812  0EBD                     	;# 
  3813  0EBE                     	;# 
  3814  0EC3                     	;# 
  3815  0EC5                     	;# 
  3816  0EC6                     	;# 
  3817  0EC7                     	;# 
  3818  0EC8                     	;# 
  3819  0EC9                     	;# 
  3820  0ECA                     	;# 
  3821  0ECB                     	;# 
  3822  0ECC                     	;# 
  3823  0F10                     	;# 
  3824  0F11                     	;# 
  3825  0F12                     	;# 
  3826  0F13                     	;# 
  3827  0F14                     	;# 
  3828  0F15                     	;# 
  3829  0F16                     	;# 
  3830  0F17                     	;# 
  3831  0F18                     	;# 
  3832  0F19                     	;# 
  3833  0F1A                     	;# 
  3834  0F1B                     	;# 
  3835  0F1C                     	;# 
  3836  0F1D                     	;# 
  3837  0F1E                     	;# 
  3838  0F1F                     	;# 
  3839  0F20                     	;# 
  3840  0F21                     	;# 
  3841  0F22                     	;# 
  3842  0F23                     	;# 
  3843  0F24                     	;# 
  3844  0F25                     	;# 
  3845  0F26                     	;# 
  3846  0F27                     	;# 
  3847  0F28                     	;# 
  3848  0F29                     	;# 
  3849  0F2A                     	;# 
  3850  0F2B                     	;# 
  3851  0F2C                     	;# 
  3852  0F2D                     	;# 
  3853  0F2E                     	;# 
  3854  0F2F                     	;# 
  3855  0F30                     	;# 
  3856  0F31                     	;# 
  3857  0F32                     	;# 
  3858  0F38                     	;# 
  3859  0F39                     	;# 
  3860  0F3A                     	;# 
  3861  0F3B                     	;# 
  3862  0F3C                     	;# 
  3863  0F3D                     	;# 
  3864  0F3E                     	;# 
  3865  0F3F                     	;# 
  3866  0F40                     	;# 
  3867  0F41                     	;# 
  3868  0F43                     	;# 
  3869  0F44                     	;# 
  3870  0F45                     	;# 
  3871  0F46                     	;# 
  3872  0F47                     	;# 
  3873  0F48                     	;# 
  3874  0F49                     	;# 
  3875  0F4A                     	;# 
  3876  0F4B                     	;# 
  3877  0F4C                     	;# 
  3878  0F4E                     	;# 
  3879  0F4F                     	;# 
  3880  0F50                     	;# 
  3881  0F51                     	;# 
  3882  0F52                     	;# 
  3883  0F53                     	;# 
  3884  0F54                     	;# 
  3885  0F55                     	;# 
  3886  0F56                     	;# 
  3887  0F57                     	;# 
  3888  0F59                     	;# 
  3889  0F5A                     	;# 
  3890  0F5B                     	;# 
  3891  0F5C                     	;# 
  3892  0F5D                     	;# 
  3893  0F61                     	;# 
  3894  0F62                     	;# 
  3895  0F64                     	;# 
  3896  0F65                     	;# 
  3897  0F66                     	;# 
  3898  0F67                     	;# 
  3899  0F68                     	;# 
  3900  0F69                     	;# 
  3901  0F6A                     	;# 
  3902  0F6B                     	;# 
  3903  0F6C                     	;# 
  3904  0F6D                     	;# 
  3905  0FE4                     	;# 
  3906  0FE5                     	;# 
  3907  0FE6                     	;# 
  3908  0FE7                     	;# 
  3909  0FE8                     	;# 
  3910  0FE9                     	;# 
  3911  0FEA                     	;# 
  3912  0FEB                     	;# 
  3913  0FED                     	;# 
  3914  0FEE                     	;# 
  3915  0FEF                     	;# 
  3916  0000                     	;# 
  3917  0001                     	;# 
  3918  0002                     	;# 
  3919  0003                     	;# 
  3920  0004                     	;# 
  3921  0005                     	;# 
  3922  0006                     	;# 
  3923  0007                     	;# 
  3924  0008                     	;# 
  3925  0009                     	;# 
  3926  000A                     	;# 
  3927  000B                     	;# 
  3928  000C                     	;# 
  3929  000D                     	;# 
  3930  000E                     	;# 
  3931  000F                     	;# 
  3932  0010                     	;# 
  3933  0011                     	;# 
  3934  0012                     	;# 
  3935  0013                     	;# 
  3936  0014                     	;# 
  3937  0015                     	;# 
  3938  0016                     	;# 
  3939  0017                     	;# 
  3940  0018                     	;# 
  3941  0019                     	;# 
  3942  001A                     	;# 
  3943  001C                     	;# 
  3944  001C                     	;# 
  3945  001D                     	;# 
  3946  001D                     	;# 
  3947  001E                     	;# 
  3948  001F                     	;# 
  3949  008C                     	;# 
  3950  008C                     	;# 
  3951  008D                     	;# 
  3952  008E                     	;# 
  3953  008E                     	;# 
  3954  008F                     	;# 
  3955  0090                     	;# 
  3956  0090                     	;# 
  3957  0091                     	;# 
  3958  0093                     	;# 
  3959  0094                     	;# 
  3960  0095                     	;# 
  3961  0096                     	;# 
  3962  0097                     	;# 
  3963  0098                     	;# 
  3964  0099                     	;# 
  3965  009A                     	;# 
  3966  009B                     	;# 
  3967  009C                     	;# 
  3968  009D                     	;# 
  3969  009E                     	;# 
  3970  010C                     	;# 
  3971  010D                     	;# 
  3972  010E                     	;# 
  3973  010E                     	;# 
  3974  010F                     	;# 
  3975  0110                     	;# 
  3976  0110                     	;# 
  3977  0111                     	;# 
  3978  0112                     	;# 
  3979  0112                     	;# 
  3980  0113                     	;# 
  3981  0114                     	;# 
  3982  0114                     	;# 
  3983  0115                     	;# 
  3984  0116                     	;# 
  3985  0116                     	;# 
  3986  0117                     	;# 
  3987  0119                     	;# 
  3988  0119                     	;# 
  3989  0119                     	;# 
  3990  011A                     	;# 
  3991  011A                     	;# 
  3992  011A                     	;# 
  3993  011B                     	;# 
  3994  011B                     	;# 
  3995  011B                     	;# 
  3996  011B                     	;# 
  3997  011B                     	;# 
  3998  011C                     	;# 
  3999  011C                     	;# 
  4000  011C                     	;# 
  4001  011D                     	;# 
  4002  011D                     	;# 
  4003  011D                     	;# 
  4004  011E                     	;# 
  4005  011E                     	;# 
  4006  011E                     	;# 
  4007  011F                     	;# 
  4008  011F                     	;# 
  4009  011F                     	;# 
  4010  011F                     	;# 
  4011  011F                     	;# 
  4012  018C                     	;# 
  4013  018D                     	;# 
  4014  018E                     	;# 
  4015  018F                     	;# 
  4016  0190                     	;# 
  4017  0191                     	;# 
  4018  0192                     	;# 
  4019  0196                     	;# 
  4020  0197                     	;# 
  4021  0198                     	;# 
  4022  0199                     	;# 
  4023  019A                     	;# 
  4024  019B                     	;# 
  4025  019C                     	;# 
  4026  020C                     	;# 
  4027  020C                     	;# 
  4028  020D                     	;# 
  4029  020E                     	;# 
  4030  020F                     	;# 
  4031  020F                     	;# 
  4032  0210                     	;# 
  4033  0210                     	;# 
  4034  0211                     	;# 
  4035  0211                     	;# 
  4036  0212                     	;# 
  4037  0212                     	;# 
  4038  0213                     	;# 
  4039  0214                     	;# 
  4040  0215                     	;# 
  4041  0215                     	;# 
  4042  0216                     	;# 
  4043  0216                     	;# 
  4044  0217                     	;# 
  4045  0217                     	;# 
  4046  0218                     	;# 
  4047  0218                     	;# 
  4048  0219                     	;# 
  4049  021A                     	;# 
  4050  021B                     	;# 
  4051  021B                     	;# 
  4052  021C                     	;# 
  4053  021C                     	;# 
  4054  021D                     	;# 
  4055  021D                     	;# 
  4056  021E                     	;# 
  4057  021F                     	;# 
  4058  028C                     	;# 
  4059  028C                     	;# 
  4060  028D                     	;# 
  4061  028D                     	;# 
  4062  028E                     	;# 
  4063  028F                     	;# 
  4064  0290                     	;# 
  4065  0290                     	;# 
  4066  0291                     	;# 
  4067  0292                     	;# 
  4068  0292                     	;# 
  4069  0293                     	;# 
  4070  0293                     	;# 
  4071  0294                     	;# 
  4072  0295                     	;# 
  4073  0296                     	;# 
  4074  0296                     	;# 
  4075  0297                     	;# 
  4076  0298                     	;# 
  4077  0298                     	;# 
  4078  0299                     	;# 
  4079  0299                     	;# 
  4080  029A                     	;# 
  4081  029B                     	;# 
  4082  029C                     	;# 
  4083  029C                     	;# 
  4084  029D                     	;# 
  4085  030C                     	;# 
  4086  030C                     	;# 
  4087  030D                     	;# 
  4088  030E                     	;# 
  4089  030F                     	;# 
  4090  0310                     	;# 
  4091  0310                     	;# 
  4092  0311                     	;# 
  4093  0312                     	;# 
  4094  0313                     	;# 
  4095  0314                     	;# 
  4096  0314                     	;# 
  4097  0315                     	;# 
  4098  0316                     	;# 
  4099  0317                     	;# 
  4100  0318                     	;# 
  4101  0318                     	;# 
  4102  0319                     	;# 
  4103  031A                     	;# 
  4104  031B                     	;# 
  4105  031C                     	;# 
  4106  031C                     	;# 
  4107  031D                     	;# 
  4108  031E                     	;# 
  4109  031F                     	;# 
  4110  038C                     	;# 
  4111  038C                     	;# 
  4112  038D                     	;# 
  4113  038E                     	;# 
  4114  0390                     	;# 
  4115  0390                     	;# 
  4116  0391                     	;# 
  4117  0392                     	;# 
  4118  040C                     	;# 
  4119  040D                     	;# 
  4120  040E                     	;# 
  4121  040F                     	;# 
  4122  0410                     	;# 
  4123  0411                     	;# 
  4124  0416                     	;# 
  4125  0416                     	;# 
  4126  0417                     	;# 
  4127  0418                     	;# 
  4128  0418                     	;# 
  4129  0419                     	;# 
  4130  041A                     	;# 
  4131  041A                     	;# 
  4132  041B                     	;# 
  4133  041C                     	;# 
  4134  041C                     	;# 
  4135  041D                     	;# 
  4136  041E                     	;# 
  4137  041F                     	;# 
  4138  048C                     	;# 
  4139  048C                     	;# 
  4140  048D                     	;# 
  4141  048E                     	;# 
  4142  048F                     	;# 
  4143  048F                     	;# 
  4144  0490                     	;# 
  4145  0491                     	;# 
  4146  0492                     	;# 
  4147  0492                     	;# 
  4148  0493                     	;# 
  4149  0494                     	;# 
  4150  0495                     	;# 
  4151  0495                     	;# 
  4152  0496                     	;# 
  4153  0497                     	;# 
  4154  0498                     	;# 
  4155  0499                     	;# 
  4156  049A                     	;# 
  4157  049B                     	;# 
  4158  049C                     	;# 
  4159  049D                     	;# 
  4160  050C                     	;# 
  4161  050C                     	;# 
  4162  050D                     	;# 
  4163  050E                     	;# 
  4164  050F                     	;# 
  4165  050F                     	;# 
  4166  0510                     	;# 
  4167  0511                     	;# 
  4168  0512                     	;# 
  4169  0512                     	;# 
  4170  0513                     	;# 
  4171  0514                     	;# 
  4172  0515                     	;# 
  4173  0515                     	;# 
  4174  0516                     	;# 
  4175  0517                     	;# 
  4176  0518                     	;# 
  4177  0519                     	;# 
  4178  051A                     	;# 
  4179  051B                     	;# 
  4180  051C                     	;# 
  4181  051D                     	;# 
  4182  058C                     	;# 
  4183  058C                     	;# 
  4184  058D                     	;# 
  4185  058E                     	;# 
  4186  058F                     	;# 
  4187  058F                     	;# 
  4188  0590                     	;# 
  4189  0591                     	;# 
  4190  0592                     	;# 
  4191  0593                     	;# 
  4192  060C                     	;# 
  4193  060D                     	;# 
  4194  060E                     	;# 
  4195  060F                     	;# 
  4196  0610                     	;# 
  4197  0611                     	;# 
  4198  0612                     	;# 
  4199  0613                     	;# 
  4200  0614                     	;# 
  4201  0616                     	;# 
  4202  0617                     	;# 
  4203  0618                     	;# 
  4204  0619                     	;# 
  4205  061A                     	;# 
  4206  061B                     	;# 
  4207  061C                     	;# 
  4208  061D                     	;# 
  4209  061E                     	;# 
  4210  068C                     	;# 
  4211  068D                     	;# 
  4212  068E                     	;# 
  4213  068F                     	;# 
  4214  0690                     	;# 
  4215  0691                     	;# 
  4216  0692                     	;# 
  4217  0693                     	;# 
  4218  0694                     	;# 
  4219  070C                     	;# 
  4220  070D                     	;# 
  4221  070E                     	;# 
  4222  070F                     	;# 
  4223  0710                     	;# 
  4224  0711                     	;# 
  4225  0712                     	;# 
  4226  0713                     	;# 
  4227  0714                     	;# 
  4228  0716                     	;# 
  4229  0717                     	;# 
  4230  0718                     	;# 
  4231  0719                     	;# 
  4232  071A                     	;# 
  4233  071B                     	;# 
  4234  071C                     	;# 
  4235  071D                     	;# 
  4236  071E                     	;# 
  4237  0796                     	;# 
  4238  0797                     	;# 
  4239  0798                     	;# 
  4240  0799                     	;# 
  4241  079A                     	;# 
  4242  079B                     	;# 
  4243  080C                     	;# 
  4244  080D                     	;# 
  4245  080E                     	;# 
  4246  080F                     	;# 
  4247  0810                     	;# 
  4248  0811                     	;# 
  4249  0812                     	;# 
  4250  0813                     	;# 
  4251  0814                     	;# 
  4252  081A                     	;# 
  4253  081B                     	;# 
  4254  081C                     	;# 
  4255  081D                     	;# 
  4256  081E                     	;# 
  4257  081F                     	;# 
  4258  088C                     	;# 
  4259  088D                     	;# 
  4260  088E                     	;# 
  4261  088F                     	;# 
  4262  0890                     	;# 
  4263  0891                     	;# 
  4264  0892                     	;# 
  4265  0893                     	;# 
  4266  0895                     	;# 
  4267  0896                     	;# 
  4268  0897                     	;# 
  4269  0898                     	;# 
  4270  0899                     	;# 
  4271  089A                     	;# 
  4272  089B                     	;# 
  4273  090C                     	;# 
  4274  090E                     	;# 
  4275  090F                     	;# 
  4276  091F                     	;# 
  4277  091F                     	;# 
  4278  098F                     	;# 
  4279  098F                     	;# 
  4280  0990                     	;# 
  4281  0991                     	;# 
  4282  0992                     	;# 
  4283  0993                     	;# 
  4284  0994                     	;# 
  4285  0995                     	;# 
  4286  0996                     	;# 
  4287  0997                     	;# 
  4288  0E0F                     	;# 
  4289  0E10                     	;# 
  4290  0E11                     	;# 
  4291  0E12                     	;# 
  4292  0E13                     	;# 
  4293  0E14                     	;# 
  4294  0E15                     	;# 
  4295  0E16                     	;# 
  4296  0E17                     	;# 
  4297  0E18                     	;# 
  4298  0E19                     	;# 
  4299  0E1A                     	;# 
  4300  0E1B                     	;# 
  4301  0E1C                     	;# 
  4302  0E1D                     	;# 
  4303  0E1E                     	;# 
  4304  0E1F                     	;# 
  4305  0E20                     	;# 
  4306  0E21                     	;# 
  4307  0E22                     	;# 
  4308  0E23                     	;# 
  4309  0E24                     	;# 
  4310  0E25                     	;# 
  4311  0E26                     	;# 
  4312  0E27                     	;# 
  4313  0E28                     	;# 
  4314  0E29                     	;# 
  4315  0E2A                     	;# 
  4316  0E2B                     	;# 
  4317  0E2C                     	;# 
  4318  0E2D                     	;# 
  4319  0E2E                     	;# 
  4320  0E2F                     	;# 
  4321  0E30                     	;# 
  4322  0E31                     	;# 
  4323  0E32                     	;# 
  4324  0E33                     	;# 
  4325  0E34                     	;# 
  4326  0E35                     	;# 
  4327  0E36                     	;# 
  4328  0E37                     	;# 
  4329  0E8F                     	;# 
  4330  0E90                     	;# 
  4331  0E91                     	;# 
  4332  0E92                     	;# 
  4333  0E93                     	;# 
  4334  0E94                     	;# 
  4335  0E95                     	;# 
  4336  0E96                     	;# 
  4337  0E97                     	;# 
  4338  0E9C                     	;# 
  4339  0E9D                     	;# 
  4340  0E9E                     	;# 
  4341  0EA1                     	;# 
  4342  0EA2                     	;# 
  4343  0EA3                     	;# 
  4344  0EA4                     	;# 
  4345  0EA5                     	;# 
  4346  0EA9                     	;# 
  4347  0EAA                     	;# 
  4348  0EAB                     	;# 
  4349  0EAC                     	;# 
  4350  0EB1                     	;# 
  4351  0EB2                     	;# 
  4352  0EB3                     	;# 
  4353  0EB8                     	;# 
  4354  0EB9                     	;# 
  4355  0EBA                     	;# 
  4356  0EBB                     	;# 
  4357  0EBC                     	;# 
  4358  0EBD                     	;# 
  4359  0EBE                     	;# 
  4360  0EC3                     	;# 
  4361  0EC5                     	;# 
  4362  0EC6                     	;# 
  4363  0EC7                     	;# 
  4364  0EC8                     	;# 
  4365  0EC9                     	;# 
  4366  0ECA                     	;# 
  4367  0ECB                     	;# 
  4368  0ECC                     	;# 
  4369  0F10                     	;# 
  4370  0F11                     	;# 
  4371  0F12                     	;# 
  4372  0F13                     	;# 
  4373  0F14                     	;# 
  4374  0F15                     	;# 
  4375  0F16                     	;# 
  4376  0F17                     	;# 
  4377  0F18                     	;# 
  4378  0F19                     	;# 
  4379  0F1A                     	;# 
  4380  0F1B                     	;# 
  4381  0F1C                     	;# 
  4382  0F1D                     	;# 
  4383  0F1E                     	;# 
  4384  0F1F                     	;# 
  4385  0F20                     	;# 
  4386  0F21                     	;# 
  4387  0F22                     	;# 
  4388  0F23                     	;# 
  4389  0F24                     	;# 
  4390  0F25                     	;# 
  4391  0F26                     	;# 
  4392  0F27                     	;# 
  4393  0F28                     	;# 
  4394  0F29                     	;# 
  4395  0F2A                     	;# 
  4396  0F2B                     	;# 
  4397  0F2C                     	;# 
  4398  0F2D                     	;# 
  4399  0F2E                     	;# 
  4400  0F2F                     	;# 
  4401  0F30                     	;# 
  4402  0F31                     	;# 
  4403  0F32                     	;# 
  4404  0F38                     	;# 
  4405  0F39                     	;# 
  4406  0F3A                     	;# 
  4407  0F3B                     	;# 
  4408  0F3C                     	;# 
  4409  0F3D                     	;# 
  4410  0F3E                     	;# 
  4411  0F3F                     	;# 
  4412  0F40                     	;# 
  4413  0F41                     	;# 
  4414  0F43                     	;# 
  4415  0F44                     	;# 
  4416  0F45                     	;# 
  4417  0F46                     	;# 
  4418  0F47                     	;# 
  4419  0F48                     	;# 
  4420  0F49                     	;# 
  4421  0F4A                     	;# 
  4422  0F4B                     	;# 
  4423  0F4C                     	;# 
  4424  0F4E                     	;# 
  4425  0F4F                     	;# 
  4426  0F50                     	;# 
  4427  0F51                     	;# 
  4428  0F52                     	;# 
  4429  0F53                     	;# 
  4430  0F54                     	;# 
  4431  0F55                     	;# 
  4432  0F56                     	;# 
  4433  0F57                     	;# 
  4434  0F59                     	;# 
  4435  0F5A                     	;# 
  4436  0F5B                     	;# 
  4437  0F5C                     	;# 
  4438  0F5D                     	;# 
  4439  0F61                     	;# 
  4440  0F62                     	;# 
  4441  0F64                     	;# 
  4442  0F65                     	;# 
  4443  0F66                     	;# 
  4444  0F67                     	;# 
  4445  0F68                     	;# 
  4446  0F69                     	;# 
  4447  0F6A                     	;# 
  4448  0F6B                     	;# 
  4449  0F6C                     	;# 
  4450  0F6D                     	;# 
  4451  0FE4                     	;# 
  4452  0FE5                     	;# 
  4453  0FE6                     	;# 
  4454  0FE7                     	;# 
  4455  0FE8                     	;# 
  4456  0FE9                     	;# 
  4457  0FEA                     	;# 
  4458  0FEB                     	;# 
  4459  0FED                     	;# 
  4460  0FEE                     	;# 
  4461  0FEF                     	;# 
  4462  0000                     	;# 
  4463  0001                     	;# 
  4464  0002                     	;# 
  4465  0003                     	;# 
  4466  0004                     	;# 
  4467  0005                     	;# 
  4468  0006                     	;# 
  4469  0007                     	;# 
  4470  0008                     	;# 
  4471  0009                     	;# 
  4472  000A                     	;# 
  4473  000B                     	;# 
  4474  000C                     	;# 
  4475  000D                     	;# 
  4476  000E                     	;# 
  4477  000F                     	;# 
  4478  0010                     	;# 
  4479  0011                     	;# 
  4480  0012                     	;# 
  4481  0013                     	;# 
  4482  0014                     	;# 
  4483  0015                     	;# 
  4484  0016                     	;# 
  4485  0017                     	;# 
  4486  0018                     	;# 
  4487  0019                     	;# 
  4488  001A                     	;# 
  4489  001C                     	;# 
  4490  001C                     	;# 
  4491  001D                     	;# 
  4492  001D                     	;# 
  4493  001E                     	;# 
  4494  001F                     	;# 
  4495  008C                     	;# 
  4496  008C                     	;# 
  4497  008D                     	;# 
  4498  008E                     	;# 
  4499  008E                     	;# 
  4500  008F                     	;# 
  4501  0090                     	;# 
  4502  0090                     	;# 
  4503  0091                     	;# 
  4504  0093                     	;# 
  4505  0094                     	;# 
  4506  0095                     	;# 
  4507  0096                     	;# 
  4508  0097                     	;# 
  4509  0098                     	;# 
  4510  0099                     	;# 
  4511  009A                     	;# 
  4512  009B                     	;# 
  4513  009C                     	;# 
  4514  009D                     	;# 
  4515  009E                     	;# 
  4516  010C                     	;# 
  4517  010D                     	;# 
  4518  010E                     	;# 
  4519  010E                     	;# 
  4520  010F                     	;# 
  4521  0110                     	;# 
  4522  0110                     	;# 
  4523  0111                     	;# 
  4524  0112                     	;# 
  4525  0112                     	;# 
  4526  0113                     	;# 
  4527  0114                     	;# 
  4528  0114                     	;# 
  4529  0115                     	;# 
  4530  0116                     	;# 
  4531  0116                     	;# 
  4532  0117                     	;# 
  4533  0119                     	;# 
  4534  0119                     	;# 
  4535  0119                     	;# 
  4536  011A                     	;# 
  4537  011A                     	;# 
  4538  011A                     	;# 
  4539  011B                     	;# 
  4540  011B                     	;# 
  4541  011B                     	;# 
  4542  011B                     	;# 
  4543  011B                     	;# 
  4544  011C                     	;# 
  4545  011C                     	;# 
  4546  011C                     	;# 
  4547  011D                     	;# 
  4548  011D                     	;# 
  4549  011D                     	;# 
  4550  011E                     	;# 
  4551  011E                     	;# 
  4552  011E                     	;# 
  4553  011F                     	;# 
  4554  011F                     	;# 
  4555  011F                     	;# 
  4556  011F                     	;# 
  4557  011F                     	;# 
  4558  018C                     	;# 
  4559  018D                     	;# 
  4560  018E                     	;# 
  4561  018F                     	;# 
  4562  0190                     	;# 
  4563  0191                     	;# 
  4564  0192                     	;# 
  4565  0196                     	;# 
  4566  0197                     	;# 
  4567  0198                     	;# 
  4568  0199                     	;# 
  4569  019A                     	;# 
  4570  019B                     	;# 
  4571  019C                     	;# 
  4572  020C                     	;# 
  4573  020C                     	;# 
  4574  020D                     	;# 
  4575  020E                     	;# 
  4576  020F                     	;# 
  4577  020F                     	;# 
  4578  0210                     	;# 
  4579  0210                     	;# 
  4580  0211                     	;# 
  4581  0211                     	;# 
  4582  0212                     	;# 
  4583  0212                     	;# 
  4584  0213                     	;# 
  4585  0214                     	;# 
  4586  0215                     	;# 
  4587  0215                     	;# 
  4588  0216                     	;# 
  4589  0216                     	;# 
  4590  0217                     	;# 
  4591  0217                     	;# 
  4592  0218                     	;# 
  4593  0218                     	;# 
  4594  0219                     	;# 
  4595  021A                     	;# 
  4596  021B                     	;# 
  4597  021B                     	;# 
  4598  021C                     	;# 
  4599  021C                     	;# 
  4600  021D                     	;# 
  4601  021D                     	;# 
  4602  021E                     	;# 
  4603  021F                     	;# 
  4604  028C                     	;# 
  4605  028C                     	;# 
  4606  028D                     	;# 
  4607  028D                     	;# 
  4608  028E                     	;# 
  4609  028F                     	;# 
  4610  0290                     	;# 
  4611  0290                     	;# 
  4612  0291                     	;# 
  4613  0292                     	;# 
  4614  0292                     	;# 
  4615  0293                     	;# 
  4616  0293                     	;# 
  4617  0294                     	;# 
  4618  0295                     	;# 
  4619  0296                     	;# 
  4620  0296                     	;# 
  4621  0297                     	;# 
  4622  0298                     	;# 
  4623  0298                     	;# 
  4624  0299                     	;# 
  4625  0299                     	;# 
  4626  029A                     	;# 
  4627  029B                     	;# 
  4628  029C                     	;# 
  4629  029C                     	;# 
  4630  029D                     	;# 
  4631  030C                     	;# 
  4632  030C                     	;# 
  4633  030D                     	;# 
  4634  030E                     	;# 
  4635  030F                     	;# 
  4636  0310                     	;# 
  4637  0310                     	;# 
  4638  0311                     	;# 
  4639  0312                     	;# 
  4640  0313                     	;# 
  4641  0314                     	;# 
  4642  0314                     	;# 
  4643  0315                     	;# 
  4644  0316                     	;# 
  4645  0317                     	;# 
  4646  0318                     	;# 
  4647  0318                     	;# 
  4648  0319                     	;# 
  4649  031A                     	;# 
  4650  031B                     	;# 
  4651  031C                     	;# 
  4652  031C                     	;# 
  4653  031D                     	;# 
  4654  031E                     	;# 
  4655  031F                     	;# 
  4656  038C                     	;# 
  4657  038C                     	;# 
  4658  038D                     	;# 
  4659  038E                     	;# 
  4660  0390                     	;# 
  4661  0390                     	;# 
  4662  0391                     	;# 
  4663  0392                     	;# 
  4664  040C                     	;# 
  4665  040D                     	;# 
  4666  040E                     	;# 
  4667  040F                     	;# 
  4668  0410                     	;# 
  4669  0411                     	;# 
  4670  0416                     	;# 
  4671  0416                     	;# 
  4672  0417                     	;# 
  4673  0418                     	;# 
  4674  0418                     	;# 
  4675  0419                     	;# 
  4676  041A                     	;# 
  4677  041A                     	;# 
  4678  041B                     	;# 
  4679  041C                     	;# 
  4680  041C                     	;# 
  4681  041D                     	;# 
  4682  041E                     	;# 
  4683  041F                     	;# 
  4684  048C                     	;# 
  4685  048C                     	;# 
  4686  048D                     	;# 
  4687  048E                     	;# 
  4688  048F                     	;# 
  4689  048F                     	;# 
  4690  0490                     	;# 
  4691  0491                     	;# 
  4692  0492                     	;# 
  4693  0492                     	;# 
  4694  0493                     	;# 
  4695  0494                     	;# 
  4696  0495                     	;# 
  4697  0495                     	;# 
  4698  0496                     	;# 
  4699  0497                     	;# 
  4700  0498                     	;# 
  4701  0499                     	;# 
  4702  049A                     	;# 
  4703  049B                     	;# 
  4704  049C                     	;# 
  4705  049D                     	;# 
  4706  050C                     	;# 
  4707  050C                     	;# 
  4708  050D                     	;# 
  4709  050E                     	;# 
  4710  050F                     	;# 
  4711  050F                     	;# 
  4712  0510                     	;# 
  4713  0511                     	;# 
  4714  0512                     	;# 
  4715  0512                     	;# 
  4716  0513                     	;# 
  4717  0514                     	;# 
  4718  0515                     	;# 
  4719  0515                     	;# 
  4720  0516                     	;# 
  4721  0517                     	;# 
  4722  0518                     	;# 
  4723  0519                     	;# 
  4724  051A                     	;# 
  4725  051B                     	;# 
  4726  051C                     	;# 
  4727  051D                     	;# 
  4728  058C                     	;# 
  4729  058C                     	;# 
  4730  058D                     	;# 
  4731  058E                     	;# 
  4732  058F                     	;# 
  4733  058F                     	;# 
  4734  0590                     	;# 
  4735  0591                     	;# 
  4736  0592                     	;# 
  4737  0593                     	;# 
  4738  060C                     	;# 
  4739  060D                     	;# 
  4740  060E                     	;# 
  4741  060F                     	;# 
  4742  0610                     	;# 
  4743  0611                     	;# 
  4744  0612                     	;# 
  4745  0613                     	;# 
  4746  0614                     	;# 
  4747  0616                     	;# 
  4748  0617                     	;# 
  4749  0618                     	;# 
  4750  0619                     	;# 
  4751  061A                     	;# 
  4752  061B                     	;# 
  4753  061C                     	;# 
  4754  061D                     	;# 
  4755  061E                     	;# 
  4756  068C                     	;# 
  4757  068D                     	;# 
  4758  068E                     	;# 
  4759  068F                     	;# 
  4760  0690                     	;# 
  4761  0691                     	;# 
  4762  0692                     	;# 
  4763  0693                     	;# 
  4764  0694                     	;# 
  4765  070C                     	;# 
  4766  070D                     	;# 
  4767  070E                     	;# 
  4768  070F                     	;# 
  4769  0710                     	;# 
  4770  0711                     	;# 
  4771  0712                     	;# 
  4772  0713                     	;# 
  4773  0714                     	;# 
  4774  0716                     	;# 
  4775  0717                     	;# 
  4776  0718                     	;# 
  4777  0719                     	;# 
  4778  071A                     	;# 
  4779  071B                     	;# 
  4780  071C                     	;# 
  4781  071D                     	;# 
  4782  071E                     	;# 
  4783  0796                     	;# 
  4784  0797                     	;# 
  4785  0798                     	;# 
  4786  0799                     	;# 
  4787  079A                     	;# 
  4788  079B                     	;# 
  4789  080C                     	;# 
  4790  080D                     	;# 
  4791  080E                     	;# 
  4792  080F                     	;# 
  4793  0810                     	;# 
  4794  0811                     	;# 
  4795  0812                     	;# 
  4796  0813                     	;# 
  4797  0814                     	;# 
  4798  081A                     	;# 
  4799  081B                     	;# 
  4800  081C                     	;# 
  4801  081D                     	;# 
  4802  081E                     	;# 
  4803  081F                     	;# 
  4804  088C                     	;# 
  4805  088D                     	;# 
  4806  088E                     	;# 
  4807  088F                     	;# 
  4808  0890                     	;# 
  4809  0891                     	;# 
  4810  0892                     	;# 
  4811  0893                     	;# 
  4812  0895                     	;# 
  4813  0896                     	;# 
  4814  0897                     	;# 
  4815  0898                     	;# 
  4816  0899                     	;# 
  4817  089A                     	;# 
  4818  089B                     	;# 
  4819  090C                     	;# 
  4820  090E                     	;# 
  4821  090F                     	;# 
  4822  091F                     	;# 
  4823  091F                     	;# 
  4824  098F                     	;# 
  4825  098F                     	;# 
  4826  0990                     	;# 
  4827  0991                     	;# 
  4828  0992                     	;# 
  4829  0993                     	;# 
  4830  0994                     	;# 
  4831  0995                     	;# 
  4832  0996                     	;# 
  4833  0997                     	;# 
  4834  0E0F                     	;# 
  4835  0E10                     	;# 
  4836  0E11                     	;# 
  4837  0E12                     	;# 
  4838  0E13                     	;# 
  4839  0E14                     	;# 
  4840  0E15                     	;# 
  4841  0E16                     	;# 
  4842  0E17                     	;# 
  4843  0E18                     	;# 
  4844  0E19                     	;# 
  4845  0E1A                     	;# 
  4846  0E1B                     	;# 
  4847  0E1C                     	;# 
  4848  0E1D                     	;# 
  4849  0E1E                     	;# 
  4850  0E1F                     	;# 
  4851  0E20                     	;# 
  4852  0E21                     	;# 
  4853  0E22                     	;# 
  4854  0E23                     	;# 
  4855  0E24                     	;# 
  4856  0E25                     	;# 
  4857  0E26                     	;# 
  4858  0E27                     	;# 
  4859  0E28                     	;# 
  4860  0E29                     	;# 
  4861  0E2A                     	;# 
  4862  0E2B                     	;# 
  4863  0E2C                     	;# 
  4864  0E2D                     	;# 
  4865  0E2E                     	;# 
  4866  0E2F                     	;# 
  4867  0E30                     	;# 
  4868  0E31                     	;# 
  4869  0E32                     	;# 
  4870  0E33                     	;# 
  4871  0E34                     	;# 
  4872  0E35                     	;# 
  4873  0E36                     	;# 
  4874  0E37                     	;# 
  4875  0E8F                     	;# 
  4876  0E90                     	;# 
  4877  0E91                     	;# 
  4878  0E92                     	;# 
  4879  0E93                     	;# 
  4880  0E94                     	;# 
  4881  0E95                     	;# 
  4882  0E96                     	;# 
  4883  0E97                     	;# 
  4884  0E9C                     	;# 
  4885  0E9D                     	;# 
  4886  0E9E                     	;# 
  4887  0EA1                     	;# 
  4888  0EA2                     	;# 
  4889  0EA3                     	;# 
  4890  0EA4                     	;# 
  4891  0EA5                     	;# 
  4892  0EA9                     	;# 
  4893  0EAA                     	;# 
  4894  0EAB                     	;# 
  4895  0EAC                     	;# 
  4896  0EB1                     	;# 
  4897  0EB2                     	;# 
  4898  0EB3                     	;# 
  4899  0EB8                     	;# 
  4900  0EB9                     	;# 
  4901  0EBA                     	;# 
  4902  0EBB                     	;# 
  4903  0EBC                     	;# 
  4904  0EBD                     	;# 
  4905  0EBE                     	;# 
  4906  0EC3                     	;# 
  4907  0EC5                     	;# 
  4908  0EC6                     	;# 
  4909  0EC7                     	;# 
  4910  0EC8                     	;# 
  4911  0EC9                     	;# 
  4912  0ECA                     	;# 
  4913  0ECB                     	;# 
  4914  0ECC                     	;# 
  4915  0F10                     	;# 
  4916  0F11                     	;# 
  4917  0F12                     	;# 
  4918  0F13                     	;# 
  4919  0F14                     	;# 
  4920  0F15                     	;# 
  4921  0F16                     	;# 
  4922  0F17                     	;# 
  4923  0F18                     	;# 
  4924  0F19                     	;# 
  4925  0F1A                     	;# 
  4926  0F1B                     	;# 
  4927  0F1C                     	;# 
  4928  0F1D                     	;# 
  4929  0F1E                     	;# 
  4930  0F1F                     	;# 
  4931  0F20                     	;# 
  4932  0F21                     	;# 
  4933  0F22                     	;# 
  4934  0F23                     	;# 
  4935  0F24                     	;# 
  4936  0F25                     	;# 
  4937  0F26                     	;# 
  4938  0F27                     	;# 
  4939  0F28                     	;# 
  4940  0F29                     	;# 
  4941  0F2A                     	;# 
  4942  0F2B                     	;# 
  4943  0F2C                     	;# 
  4944  0F2D                     	;# 
  4945  0F2E                     	;# 
  4946  0F2F                     	;# 
  4947  0F30                     	;# 
  4948  0F31                     	;# 
  4949  0F32                     	;# 
  4950  0F38                     	;# 
  4951  0F39                     	;# 
  4952  0F3A                     	;# 
  4953  0F3B                     	;# 
  4954  0F3C                     	;# 
  4955  0F3D                     	;# 
  4956  0F3E                     	;# 
  4957  0F3F                     	;# 
  4958  0F40                     	;# 
  4959  0F41                     	;# 
  4960  0F43                     	;# 
  4961  0F44                     	;# 
  4962  0F45                     	;# 
  4963  0F46                     	;# 
  4964  0F47                     	;# 
  4965  0F48                     	;# 
  4966  0F49                     	;# 
  4967  0F4A                     	;# 
  4968  0F4B                     	;# 
  4969  0F4C                     	;# 
  4970  0F4E                     	;# 
  4971  0F4F                     	;# 
  4972  0F50                     	;# 
  4973  0F51                     	;# 
  4974  0F52                     	;# 
  4975  0F53                     	;# 
  4976  0F54                     	;# 
  4977  0F55                     	;# 
  4978  0F56                     	;# 
  4979  0F57                     	;# 
  4980  0F59                     	;# 
  4981  0F5A                     	;# 
  4982  0F5B                     	;# 
  4983  0F5C                     	;# 
  4984  0F5D                     	;# 
  4985  0F61                     	;# 
  4986  0F62                     	;# 
  4987  0F64                     	;# 
  4988  0F65                     	;# 
  4989  0F66                     	;# 
  4990  0F67                     	;# 
  4991  0F68                     	;# 
  4992  0F69                     	;# 
  4993  0F6A                     	;# 
  4994  0F6B                     	;# 
  4995  0F6C                     	;# 
  4996  0F6D                     	;# 
  4997  0FE4                     	;# 
  4998  0FE5                     	;# 
  4999  0FE6                     	;# 
  5000  0FE7                     	;# 
  5001  0FE8                     	;# 
  5002  0FE9                     	;# 
  5003  0FEA                     	;# 
  5004  0FEB                     	;# 
  5005  0FED                     	;# 
  5006  0FEE                     	;# 
  5007  0FEF                     	;# 
  5008  0000                     	;# 
  5009  0001                     	;# 
  5010  0002                     	;# 
  5011  0003                     	;# 
  5012  0004                     	;# 
  5013  0005                     	;# 
  5014  0006                     	;# 
  5015  0007                     	;# 
  5016  0008                     	;# 
  5017  0009                     	;# 
  5018  000A                     	;# 
  5019  000B                     	;# 
  5020  000C                     	;# 
  5021  000D                     	;# 
  5022  000E                     	;# 
  5023  000F                     	;# 
  5024  0010                     	;# 
  5025  0011                     	;# 
  5026  0012                     	;# 
  5027  0013                     	;# 
  5028  0014                     	;# 
  5029  0015                     	;# 
  5030  0016                     	;# 
  5031  0017                     	;# 
  5032  0018                     	;# 
  5033  0019                     	;# 
  5034  001A                     	;# 
  5035  001C                     	;# 
  5036  001C                     	;# 
  5037  001D                     	;# 
  5038  001D                     	;# 
  5039  001E                     	;# 
  5040  001F                     	;# 
  5041  008C                     	;# 
  5042  008C                     	;# 
  5043  008D                     	;# 
  5044  008E                     	;# 
  5045  008E                     	;# 
  5046  008F                     	;# 
  5047  0090                     	;# 
  5048  0090                     	;# 
  5049  0091                     	;# 
  5050  0093                     	;# 
  5051  0094                     	;# 
  5052  0095                     	;# 
  5053  0096                     	;# 
  5054  0097                     	;# 
  5055  0098                     	;# 
  5056  0099                     	;# 
  5057  009A                     	;# 
  5058  009B                     	;# 
  5059  009C                     	;# 
  5060  009D                     	;# 
  5061  009E                     	;# 
  5062  010C                     	;# 
  5063  010D                     	;# 
  5064  010E                     	;# 
  5065  010E                     	;# 
  5066  010F                     	;# 
  5067  0110                     	;# 
  5068  0110                     	;# 
  5069  0111                     	;# 
  5070  0112                     	;# 
  5071  0112                     	;# 
  5072  0113                     	;# 
  5073  0114                     	;# 
  5074  0114                     	;# 
  5075  0115                     	;# 
  5076  0116                     	;# 
  5077  0116                     	;# 
  5078  0117                     	;# 
  5079  0119                     	;# 
  5080  0119                     	;# 
  5081  0119                     	;# 
  5082  011A                     	;# 
  5083  011A                     	;# 
  5084  011A                     	;# 
  5085  011B                     	;# 
  5086  011B                     	;# 
  5087  011B                     	;# 
  5088  011B                     	;# 
  5089  011B                     	;# 
  5090  011C                     	;# 
  5091  011C                     	;# 
  5092  011C                     	;# 
  5093  011D                     	;# 
  5094  011D                     	;# 
  5095  011D                     	;# 
  5096  011E                     	;# 
  5097  011E                     	;# 
  5098  011E                     	;# 
  5099  011F                     	;# 
  5100  011F                     	;# 
  5101  011F                     	;# 
  5102  011F                     	;# 
  5103  011F                     	;# 
  5104  018C                     	;# 
  5105  018D                     	;# 
  5106  018E                     	;# 
  5107  018F                     	;# 
  5108  0190                     	;# 
  5109  0191                     	;# 
  5110  0192                     	;# 
  5111  0196                     	;# 
  5112  0197                     	;# 
  5113  0198                     	;# 
  5114  0199                     	;# 
  5115  019A                     	;# 
  5116  019B                     	;# 
  5117  019C                     	;# 
  5118  020C                     	;# 
  5119  020C                     	;# 
  5120  020D                     	;# 
  5121  020E                     	;# 
  5122  020F                     	;# 
  5123  020F                     	;# 
  5124  0210                     	;# 
  5125  0210                     	;# 
  5126  0211                     	;# 
  5127  0211                     	;# 
  5128  0212                     	;# 
  5129  0212                     	;# 
  5130  0213                     	;# 
  5131  0214                     	;# 
  5132  0215                     	;# 
  5133  0215                     	;# 
  5134  0216                     	;# 
  5135  0216                     	;# 
  5136  0217                     	;# 
  5137  0217                     	;# 
  5138  0218                     	;# 
  5139  0218                     	;# 
  5140  0219                     	;# 
  5141  021A                     	;# 
  5142  021B                     	;# 
  5143  021B                     	;# 
  5144  021C                     	;# 
  5145  021C                     	;# 
  5146  021D                     	;# 
  5147  021D                     	;# 
  5148  021E                     	;# 
  5149  021F                     	;# 
  5150  028C                     	;# 
  5151  028C                     	;# 
  5152  028D                     	;# 
  5153  028D                     	;# 
  5154  028E                     	;# 
  5155  028F                     	;# 
  5156  0290                     	;# 
  5157  0290                     	;# 
  5158  0291                     	;# 
  5159  0292                     	;# 
  5160  0292                     	;# 
  5161  0293                     	;# 
  5162  0293                     	;# 
  5163  0294                     	;# 
  5164  0295                     	;# 
  5165  0296                     	;# 
  5166  0296                     	;# 
  5167  0297                     	;# 
  5168  0298                     	;# 
  5169  0298                     	;# 
  5170  0299                     	;# 
  5171  0299                     	;# 
  5172  029A                     	;# 
  5173  029B                     	;# 
  5174  029C                     	;# 
  5175  029C                     	;# 
  5176  029D                     	;# 
  5177  030C                     	;# 
  5178  030C                     	;# 
  5179  030D                     	;# 
  5180  030E                     	;# 
  5181  030F                     	;# 
  5182  0310                     	;# 
  5183  0310                     	;# 
  5184  0311                     	;# 
  5185  0312                     	;# 
  5186  0313                     	;# 
  5187  0314                     	;# 
  5188  0314                     	;# 
  5189  0315                     	;# 
  5190  0316                     	;# 
  5191  0317                     	;# 
  5192  0318                     	;# 
  5193  0318                     	;# 
  5194  0319                     	;# 
  5195  031A                     	;# 
  5196  031B                     	;# 
  5197  031C                     	;# 
  5198  031C                     	;# 
  5199  031D                     	;# 
  5200  031E                     	;# 
  5201  031F                     	;# 
  5202  038C                     	;# 
  5203  038C                     	;# 
  5204  038D                     	;# 
  5205  038E                     	;# 
  5206  0390                     	;# 
  5207  0390                     	;# 
  5208  0391                     	;# 
  5209  0392                     	;# 
  5210  040C                     	;# 
  5211  040D                     	;# 
  5212  040E                     	;# 
  5213  040F                     	;# 
  5214  0410                     	;# 
  5215  0411                     	;# 
  5216  0416                     	;# 
  5217  0416                     	;# 
  5218  0417                     	;# 
  5219  0418                     	;# 
  5220  0418                     	;# 
  5221  0419                     	;# 
  5222  041A                     	;# 
  5223  041A                     	;# 
  5224  041B                     	;# 
  5225  041C                     	;# 
  5226  041C                     	;# 
  5227  041D                     	;# 
  5228  041E                     	;# 
  5229  041F                     	;# 
  5230  048C                     	;# 
  5231  048C                     	;# 
  5232  048D                     	;# 
  5233  048E                     	;# 
  5234  048F                     	;# 
  5235  048F                     	;# 
  5236  0490                     	;# 
  5237  0491                     	;# 
  5238  0492                     	;# 
  5239  0492                     	;# 
  5240  0493                     	;# 
  5241  0494                     	;# 
  5242  0495                     	;# 
  5243  0495                     	;# 
  5244  0496                     	;# 
  5245  0497                     	;# 
  5246  0498                     	;# 
  5247  0499                     	;# 
  5248  049A                     	;# 
  5249  049B                     	;# 
  5250  049C                     	;# 
  5251  049D                     	;# 
  5252  050C                     	;# 
  5253  050C                     	;# 
  5254  050D                     	;# 
  5255  050E                     	;# 
  5256  050F                     	;# 
  5257  050F                     	;# 
  5258  0510                     	;# 
  5259  0511                     	;# 
  5260  0512                     	;# 
  5261  0512                     	;# 
  5262  0513                     	;# 
  5263  0514                     	;# 
  5264  0515                     	;# 
  5265  0515                     	;# 
  5266  0516                     	;# 
  5267  0517                     	;# 
  5268  0518                     	;# 
  5269  0519                     	;# 
  5270  051A                     	;# 
  5271  051B                     	;# 
  5272  051C                     	;# 
  5273  051D                     	;# 
  5274  058C                     	;# 
  5275  058C                     	;# 
  5276  058D                     	;# 
  5277  058E                     	;# 
  5278  058F                     	;# 
  5279  058F                     	;# 
  5280  0590                     	;# 
  5281  0591                     	;# 
  5282  0592                     	;# 
  5283  0593                     	;# 
  5284  060C                     	;# 
  5285  060D                     	;# 
  5286  060E                     	;# 
  5287  060F                     	;# 
  5288  0610                     	;# 
  5289  0611                     	;# 
  5290  0612                     	;# 
  5291  0613                     	;# 
  5292  0614                     	;# 
  5293  0616                     	;# 
  5294  0617                     	;# 
  5295  0618                     	;# 
  5296  0619                     	;# 
  5297  061A                     	;# 
  5298  061B                     	;# 
  5299  061C                     	;# 
  5300  061D                     	;# 
  5301  061E                     	;# 
  5302  068C                     	;# 
  5303  068D                     	;# 
  5304  068E                     	;# 
  5305  068F                     	;# 
  5306  0690                     	;# 
  5307  0691                     	;# 
  5308  0692                     	;# 
  5309  0693                     	;# 
  5310  0694                     	;# 
  5311  070C                     	;# 
  5312  070D                     	;# 
  5313  070E                     	;# 
  5314  070F                     	;# 
  5315  0710                     	;# 
  5316  0711                     	;# 
  5317  0712                     	;# 
  5318  0713                     	;# 
  5319  0714                     	;# 
  5320  0716                     	;# 
  5321  0717                     	;# 
  5322  0718                     	;# 
  5323  0719                     	;# 
  5324  071A                     	;# 
  5325  071B                     	;# 
  5326  071C                     	;# 
  5327  071D                     	;# 
  5328  071E                     	;# 
  5329  0796                     	;# 
  5330  0797                     	;# 
  5331  0798                     	;# 
  5332  0799                     	;# 
  5333  079A                     	;# 
  5334  079B                     	;# 
  5335  080C                     	;# 
  5336  080D                     	;# 
  5337  080E                     	;# 
  5338  080F                     	;# 
  5339  0810                     	;# 
  5340  0811                     	;# 
  5341  0812                     	;# 
  5342  0813                     	;# 
  5343  0814                     	;# 
  5344  081A                     	;# 
  5345  081B                     	;# 
  5346  081C                     	;# 
  5347  081D                     	;# 
  5348  081E                     	;# 
  5349  081F                     	;# 
  5350  088C                     	;# 
  5351  088D                     	;# 
  5352  088E                     	;# 
  5353  088F                     	;# 
  5354  0890                     	;# 
  5355  0891                     	;# 
  5356  0892                     	;# 
  5357  0893                     	;# 
  5358  0895                     	;# 
  5359  0896                     	;# 
  5360  0897                     	;# 
  5361  0898                     	;# 
  5362  0899                     	;# 
  5363  089A                     	;# 
  5364  089B                     	;# 
  5365  090C                     	;# 
  5366  090E                     	;# 
  5367  090F                     	;# 
  5368  091F                     	;# 
  5369  091F                     	;# 
  5370  098F                     	;# 
  5371  098F                     	;# 
  5372  0990                     	;# 
  5373  0991                     	;# 
  5374  0992                     	;# 
  5375  0993                     	;# 
  5376  0994                     	;# 
  5377  0995                     	;# 
  5378  0996                     	;# 
  5379  0997                     	;# 
  5380  0E0F                     	;# 
  5381  0E10                     	;# 
  5382  0E11                     	;# 
  5383  0E12                     	;# 
  5384  0E13                     	;# 
  5385  0E14                     	;# 
  5386  0E15                     	;# 
  5387  0E16                     	;# 
  5388  0E17                     	;# 
  5389  0E18                     	;# 
  5390  0E19                     	;# 
  5391  0E1A                     	;# 
  5392  0E1B                     	;# 
  5393  0E1C                     	;# 
  5394  0E1D                     	;# 
  5395  0E1E                     	;# 
  5396  0E1F                     	;# 
  5397  0E20                     	;# 
  5398  0E21                     	;# 
  5399  0E22                     	;# 
  5400  0E23                     	;# 
  5401  0E24                     	;# 
  5402  0E25                     	;# 
  5403  0E26                     	;# 
  5404  0E27                     	;# 
  5405  0E28                     	;# 
  5406  0E29                     	;# 
  5407  0E2A                     	;# 
  5408  0E2B                     	;# 
  5409  0E2C                     	;# 
  5410  0E2D                     	;# 
  5411  0E2E                     	;# 
  5412  0E2F                     	;# 
  5413  0E30                     	;# 
  5414  0E31                     	;# 
  5415  0E32                     	;# 
  5416  0E33                     	;# 
  5417  0E34                     	;# 
  5418  0E35                     	;# 
  5419  0E36                     	;# 
  5420  0E37                     	;# 
  5421  0E8F                     	;# 
  5422  0E90                     	;# 
  5423  0E91                     	;# 
  5424  0E92                     	;# 
  5425  0E93                     	;# 
  5426  0E94                     	;# 
  5427  0E95                     	;# 
  5428  0E96                     	;# 
  5429  0E97                     	;# 
  5430  0E9C                     	;# 
  5431  0E9D                     	;# 
  5432  0E9E                     	;# 
  5433  0EA1                     	;# 
  5434  0EA2                     	;# 
  5435  0EA3                     	;# 
  5436  0EA4                     	;# 
  5437  0EA5                     	;# 
  5438  0EA9                     	;# 
  5439  0EAA                     	;# 
  5440  0EAB                     	;# 
  5441  0EAC                     	;# 
  5442  0EB1                     	;# 
  5443  0EB2                     	;# 
  5444  0EB3                     	;# 
  5445  0EB8                     	;# 
  5446  0EB9                     	;# 
  5447  0EBA                     	;# 
  5448  0EBB                     	;# 
  5449  0EBC                     	;# 
  5450  0EBD                     	;# 
  5451  0EBE                     	;# 
  5452  0EC3                     	;# 
  5453  0EC5                     	;# 
  5454  0EC6                     	;# 
  5455  0EC7                     	;# 
  5456  0EC8                     	;# 
  5457  0EC9                     	;# 
  5458  0ECA                     	;# 
  5459  0ECB                     	;# 
  5460  0ECC                     	;# 
  5461  0F10                     	;# 
  5462  0F11                     	;# 
  5463  0F12                     	;# 
  5464  0F13                     	;# 
  5465  0F14                     	;# 
  5466  0F15                     	;# 
  5467  0F16                     	;# 
  5468  0F17                     	;# 
  5469  0F18                     	;# 
  5470  0F19                     	;# 
  5471  0F1A                     	;# 
  5472  0F1B                     	;# 
  5473  0F1C                     	;# 
  5474  0F1D                     	;# 
  5475  0F1E                     	;# 
  5476  0F1F                     	;# 
  5477  0F20                     	;# 
  5478  0F21                     	;# 
  5479  0F22                     	;# 
  5480  0F23                     	;# 
  5481  0F24                     	;# 
  5482  0F25                     	;# 
  5483  0F26                     	;# 
  5484  0F27                     	;# 
  5485  0F28                     	;# 
  5486  0F29                     	;# 
  5487  0F2A                     	;# 
  5488  0F2B                     	;# 
  5489  0F2C                     	;# 
  5490  0F2D                     	;# 
  5491  0F2E                     	;# 
  5492  0F2F                     	;# 
  5493  0F30                     	;# 
  5494  0F31                     	;# 
  5495  0F32                     	;# 
  5496  0F38                     	;# 
  5497  0F39                     	;# 
  5498  0F3A                     	;# 
  5499  0F3B                     	;# 
  5500  0F3C                     	;# 
  5501  0F3D                     	;# 
  5502  0F3E                     	;# 
  5503  0F3F                     	;# 
  5504  0F40                     	;# 
  5505  0F41                     	;# 
  5506  0F43                     	;# 
  5507  0F44                     	;# 
  5508  0F45                     	;# 
  5509  0F46                     	;# 
  5510  0F47                     	;# 
  5511  0F48                     	;# 
  5512  0F49                     	;# 
  5513  0F4A                     	;# 
  5514  0F4B                     	;# 
  5515  0F4C                     	;# 
  5516  0F4E                     	;# 
  5517  0F4F                     	;# 
  5518  0F50                     	;# 
  5519  0F51                     	;# 
  5520  0F52                     	;# 
  5521  0F53                     	;# 
  5522  0F54                     	;# 
  5523  0F55                     	;# 
  5524  0F56                     	;# 
  5525  0F57                     	;# 
  5526  0F59                     	;# 
  5527  0F5A                     	;# 
  5528  0F5B                     	;# 
  5529  0F5C                     	;# 
  5530  0F5D                     	;# 
  5531  0F61                     	;# 
  5532  0F62                     	;# 
  5533  0F64                     	;# 
  5534  0F65                     	;# 
  5535  0F66                     	;# 
  5536  0F67                     	;# 
  5537  0F68                     	;# 
  5538  0F69                     	;# 
  5539  0F6A                     	;# 
  5540  0F6B                     	;# 
  5541  0F6C                     	;# 
  5542  0F6D                     	;# 
  5543  0FE4                     	;# 
  5544  0FE5                     	;# 
  5545  0FE6                     	;# 
  5546  0FE7                     	;# 
  5547  0FE8                     	;# 
  5548  0FE9                     	;# 
  5549  0FEA                     	;# 
  5550  0FEB                     	;# 
  5551  0FED                     	;# 
  5552  0FEE                     	;# 
  5553  0FEF                     	;# 
  5554                           
  5555                           	psect	stringtext1
  5556  100F                     __pstringtext1:
  5557  100F                     _dpowers:
  5558  100F  3401               	retlw	1
  5559  1010  3400               	retlw	0
  5560  1011  340A               	retlw	10
  5561  1012  3400               	retlw	0
  5562  1013  3464               	retlw	100
  5563  1014  3400               	retlw	0
  5564  1015  34E8               	retlw	232
  5565  1016  3403               	retlw	3
  5566  1017  3410               	retlw	16
  5567  1018  3427               	retlw	39
  5568  1019                     __end_of_dpowers:
  5569                           
  5570                           	psect	nvBANK0
  5571  0054                     __pnvBANK0:
  5572  0054                     _TMR3_InterruptHandler:
  5573  0054                     	ds	2
  5574  0056                     _timer3ReloadVal:
  5575  0056                     	ds	2
  5576                           
  5577                           	psect	nvBANK1
  5578  00C4                     __pnvBANK1:
  5579  00C4                     _TMR1_InterruptHandler:
  5580  00C4                     	ds	2
  5581  00C6                     _timer1ReloadVal:
  5582  00C6                     	ds	2
  5583  000D                     _PORTBbits	set	13
  5584  0016                     _LATAbits	set	22
  5585  0013                     _TRISCbits	set	19
  5586  000B                     _INTCONbits	set	11
  5587  0014                     _TRISD	set	20
  5588  0013                     _TRISC	set	19
  5589  0012                     _TRISB	set	18
  5590  0011                     _TRISA	set	17
  5591  0015                     _TRISE	set	21
  5592  0018                     _LATC	set	24
  5593  0017                     _LATB	set	23
  5594  0016                     _LATA	set	22
  5595  0019                     _LATD	set	25
  5596  001A                     _LATE	set	26
  5597  0094                     _ADCON1bits	set	148
  5598  008E                     _ADPREVL	set	142
  5599  008F                     _ADPREVH	set	143
  5600  0097                     _ADSTATbits	set	151
  5601  0090                     _ADACCL	set	144
  5602  0091                     _ADACCH	set	145
  5603  0095                     _ADCON2bits	set	149
  5604  009C                     _ADPRE	set	156
  5605  0096                     _ADCON3bits	set	150
  5606  008C                     _ADRESL	set	140
  5607  008D                     _ADRESH	set	141
  5608  0093                     _ADCON0bits	set	147
  5609  009D                     _ADACQ	set	157
  5610  0093                     _ADCON0	set	147
  5611  0098                     _ADCLK	set	152
  5612  0099                     _ADACT	set	153
  5613  009A                     _ADREF	set	154
  5614  0097                     _ADSTAT	set	151
  5615  0096                     _ADCON3	set	150
  5616  0095                     _ADCON2	set	149
  5617  0094                     _ADCON1	set	148
  5618  009B                     _ADCAP	set	155
  5619  009E                     _ADPCH	set	158
  5620  0116                     _ADERRL	set	278
  5621  0117                     _ADERRH	set	279
  5622  0114                     _ADFLTRL	set	276
  5623  0115                     _ADFLTRH	set	277
  5624  010C                     _ADCNT	set	268
  5625  010D                     _ADRPT	set	269
  5626  0113                     _ADSTPTH	set	275
  5627  0112                     _ADSTPTL	set	274
  5628  0111                     _ADUTHH	set	273
  5629  0110                     _ADUTHL	set	272
  5630  010F                     _ADLTHH	set	271
  5631  010E                     _ADLTHL	set	270
  5632  018E                     _SSP1MSK	set	398
  5633  018D                     _SSP1ADD	set	397
  5634  018F                     _SSP1STAT	set	399
  5635  0191                     _SSP1CON2	set	401
  5636  0190                     _SSP1CON1bits	set	400
  5637  018C                     _SSP1BUF	set	396
  5638  018F                     _SSP1STATbits	set	399
  5639  0191                     _SSP1CON2bits	set	401
  5640  0190                     _SSP1CON1	set	400
  5641  0215                     _T3GCONbits	set	533
  5642  0214                     _T3CONbits	set	532
  5643  0214                     _T3CON	set	532
  5644  0212                     _TMR3L	set	530
  5645  0213                     _TMR3H	set	531
  5646  0217                     _T3CLK	set	535
  5647  0216                     _T3GATE	set	534
  5648  0215                     _T3GCON	set	533
  5649  020F                     _T1GCONbits	set	527
  5650  020E                     _T1CONbits	set	526
  5651  020E                     _T1CON	set	526
  5652  020C                     _TMR1L	set	524
  5653  020D                     _TMR1H	set	525
  5654  0211                     _T1CLK	set	529
  5655  0210                     _T1GATE	set	528
  5656  020F                     _T1GCON	set	527
  5657  0710                     _PIR4bits	set	1808
  5658  071A                     _PIE4bits	set	1818
  5659  0719                     _PIE3bits	set	1817
  5660  070F                     _PIR3bits	set	1807
  5661  079B                     _PMD5	set	1947
  5662  079A                     _PMD4	set	1946
  5663  0799                     _PMD3	set	1945
  5664  0798                     _PMD2	set	1944
  5665  0797                     _PMD1	set	1943
  5666  0796                     _PMD0	set	1942
  5667  0892                     _OSCTUNE	set	2194
  5668  0893                     _OSCFRQ	set	2195
  5669  0891                     _OSCEN	set	2193
  5670  088F                     _OSCCON3	set	2191
  5671  088D                     _OSCCON1	set	2189
  5672  0EC6                     _SSP1DATPPS	set	3782
  5673  0EC5                     _SSP1CLKPPS	set	3781
  5674  0F24                     _RC4PPS	set	3876
  5675  0F23                     _RC3PPS	set	3875
  5676  0F67                     _SLRCONE	set	3943
  5677  0F5C                     _SLRCOND	set	3932
  5678  0F51                     _SLRCONC	set	3921
  5679  0F46                     _SLRCONB	set	3910
  5680  0F3B                     _SLRCONA	set	3899
  5681  0F5B                     _ODCOND	set	3931
  5682  0F50                     _ODCONC	set	3920
  5683  0F45                     _ODCONB	set	3909
  5684  0F3A                     _ODCONA	set	3898
  5685  0F66                     _ODCONE	set	3942
  5686  0F4F                     _WPUC	set	3919
  5687  0F39                     _WPUA	set	3897
  5688  0F44                     _WPUB	set	3908
  5689  0F65                     _WPUE	set	3941
  5690  0F5A                     _WPUD	set	3930
  5691  0F38                     _ANSELA	set	3896
  5692  0F64                     _ANSELE	set	3940
  5693  0F43                     _ANSELB	set	3907
  5694  0F4E                     _ANSELC	set	3918
  5695  0F59                     _ANSELD	set	3929
  5696  7A7C                     _WPUC4	set	31356
  5697  7A7B                     _WPUC3	set	31355
  5698                           
  5699                           	psect	stringtext2
  5700  1000                     __pstringtext2:
  5701  1000                     STR_1:
  5702  1000  3425               	retlw	37	;'%'
  5703  1001  3430               	retlw	48	;'0'
  5704  1002  3432               	retlw	50	;'2'
  5705  1003  3464               	retlw	100	;'d'
  5706  1004  343A               	retlw	58	;':'
  5707  1005  3425               	retlw	37	;'%'
  5708  1006  3430               	retlw	48	;'0'
  5709  1007  3432               	retlw	50	;'2'
  5710  1008  3464               	retlw	100	;'d'
  5711  1009  343A               	retlw	58	;':'
  5712  100A  3425               	retlw	37	;'%'
  5713  100B  3430               	retlw	48	;'0'
  5714  100C  3432               	retlw	50	;'2'
  5715  100D  3464               	retlw	100	;'d'
  5716  100E  3400               	retlw	0
  5717                           
  5718                           	psect	stringtext3
  5719  1019                     __pstringtext3:
  5720  1019                     STR_3:
  5721  1019  3425               	retlw	37	;'%'
  5722  101A  3430               	retlw	48	;'0'
  5723  101B  3432               	retlw	50	;'2'
  5724  101C  3464               	retlw	100	;'d'
  5725  101D  3420               	retlw	32	;' '
  5726  101E  3443               	retlw	67	;'C'
  5727  101F  3400               	retlw	0
  5728                           
  5729                           	psect	stringtext4
  5730  1020                     __pstringtext4:
  5731  1020                     STR_2:
  5732  1020  3443               	retlw	67	;'C'
  5733  1021  3454               	retlw	84	;'T'
  5734  1022  344C               	retlw	76	;'L'
  5735  1023  3420               	retlw	32	;' '
  5736  1024  343F               	retlw	63	;'?'
  5737  1025  3400               	retlw	0
  5738                           
  5739                           	psect	stringtext5
  5740  1026                     __pstringtext5:
  5741  1026                     STR_4:
  5742  1026  344C               	retlw	76	;'L'
  5743  1027  3420               	retlw	32	;' '
  5744  1028  3425               	retlw	37	;'%'
  5745  1029  3464               	retlw	100	;'d'
  5746  102A  3400               	retlw	0
  5747                           
  5748                           	psect	stringtext6
  5749  0000                     __pstringtext6:
  5750                           
  5751                           	psect	cinit
  5752  0036                     start_initialization:	
  5753                           ; #config settings
  5754                           
  5755  0036                     __initialization:
  5756                           
  5757                           ; Clear objects allocated to BANK0
  5758  0036  0020               	movlb	0	; select bank0
  5759  0037  01C8               	clrf	__pbssBANK0& (0+127)
  5760  0038  01C9               	clrf	(__pbssBANK0+1)& (0+127)
  5761  0039  01CA               	clrf	(__pbssBANK0+2)& (0+127)
  5762  003A  01CB               	clrf	(__pbssBANK0+3)& (0+127)
  5763  003B  01CC               	clrf	(__pbssBANK0+4)& (0+127)
  5764  003C  01CD               	clrf	(__pbssBANK0+5)& (0+127)
  5765  003D  01CE               	clrf	(__pbssBANK0+6)& (0+127)
  5766  003E  01CF               	clrf	(__pbssBANK0+7)& (0+127)
  5767  003F  01D0               	clrf	(__pbssBANK0+8)& (0+127)
  5768  0040  01D1               	clrf	(__pbssBANK0+9)& (0+127)
  5769  0041  01D2               	clrf	(__pbssBANK0+10)& (0+127)
  5770  0042  01D3               	clrf	(__pbssBANK0+11)& (0+127)
  5771  0043                     end_of_initialization:	
  5772                           ;End of C runtime variable initialization code
  5773                           
  5774  0043                     __end_of__initialization:
  5775  0043  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5776  0044  0020               	movlb	0
  5777  0045  3185  2D25         	ljmp	_main	;jump to C main() function
  5778                           
  5779                           	psect	bssBANK0
  5780  0048                     __pbssBANK0:
  5781  0048                     _t:
  5782  0048                     	ds	6
  5783  004E                     _i2c1_driver_i2cISR:
  5784  004E                     	ds	2
  5785  0050                     _i2c1_driver_busCollisionISR:
  5786  0050                     	ds	2
  5787  0052                     _lum:
  5788  0052                     	ds	1
  5789  0053                     _c:
  5790  0053                     	ds	1
  5791                           
  5792                           	psect	cstackBANK1
  5793  00A0                     __pcstackBANK1:
  5794  00A0                     ??_PMD_Initialize:
  5795  00A0                     ??_OSCILLATOR_Initialize:	
  5796                           ; 1 bytes @ 0x0
  5797                           
  5798  00A0                     ??_ADCC_Initialize:	
  5799                           ; 1 bytes @ 0x0
  5800                           
  5801  00A0                     ?_TMR1_SetInterruptHandler:	
  5802                           ; 1 bytes @ 0x0
  5803                           
  5804  00A0                     ?_TMR3_SetInterruptHandler:	
  5805                           ; 1 bytes @ 0x0
  5806                           
  5807  00A0                     ??_WriteI2C:	
  5808                           ; 1 bytes @ 0x0
  5809                           
  5810  00A0                     ??_PIN_MANAGER_Initialize:	
  5811                           ; 1 bytes @ 0x0
  5812                           
  5813  00A0                     ??_i2c1_driver_open:	
  5814                           ; 1 bytes @ 0x0
  5815                           
  5816  00A0                     ?___xxtofl:	
  5817                           ; 1 bytes @ 0x0
  5818                           
  5819  00A0                     TMR1_SetInterruptHandler@InterruptHandler:	
  5820                           ; 4 bytes @ 0x0
  5821                           
  5822  00A0                     TMR3_SetInterruptHandler@InterruptHandler:	
  5823                           ; 2 bytes @ 0x0
  5824                           
  5825  00A0                     ___xxtofl@val:	
  5826                           ; 2 bytes @ 0x0
  5827                           
  5828                           
  5829                           ; 4 bytes @ 0x0
  5830  00A0                     	ds	1
  5831  00A1                     WriteI2C@data_out:
  5832                           
  5833                           ; 1 bytes @ 0x1
  5834  00A1                     	ds	1
  5835  00A2                     ??_TMR3_Initialize:
  5836  00A2                     ??_TMR1_Initialize:	
  5837                           ; 1 bytes @ 0x2
  5838                           
  5839  00A2                     ??_TMR1_SetInterruptHandler:	
  5840                           ; 1 bytes @ 0x2
  5841                           
  5842  00A2                     ??_TMR3_SetInterruptHandler:	
  5843                           ; 1 bytes @ 0x2
  5844                           
  5845  00A2                     ??_SYSTEM_Initialize:	
  5846                           ; 1 bytes @ 0x2
  5847                           
  5848  00A2                     ??_LCDsend:	
  5849                           ; 1 bytes @ 0x2
  5850                           
  5851  00A2                     ?_LCDsend2x4:	
  5852                           ; 1 bytes @ 0x2
  5853                           
  5854  00A2                     LCDsend2x4@mode:	
  5855                           ; 1 bytes @ 0x2
  5856                           
  5857                           
  5858                           ; 1 bytes @ 0x2
  5859  00A2                     	ds	1
  5860  00A3                     ??_LCDsend2x4:
  5861  00A3                     LCDsend@c:	
  5862                           ; 1 bytes @ 0x3
  5863                           
  5864                           
  5865                           ; 1 bytes @ 0x3
  5866  00A3                     	ds	1
  5867  00A4                     ??___xxtofl:
  5868                           
  5869                           ; 1 bytes @ 0x4
  5870  00A4                     	ds	1
  5871  00A5                     LCDsend2x4@c:
  5872                           
  5873                           ; 1 bytes @ 0x5
  5874  00A5                     	ds	1
  5875  00A6                     LCDsend2x4@hc:
  5876                           
  5877                           ; 1 bytes @ 0x6
  5878  00A6                     	ds	1
  5879  00A7                     LCDsend2x4@lc:
  5880                           
  5881                           ; 1 bytes @ 0x7
  5882  00A7                     	ds	1
  5883  00A8                     ??_LCDinit:
  5884  00A8                     ___xxtofl@sign:	
  5885                           ; 1 bytes @ 0x8
  5886                           
  5887                           
  5888                           ; 1 bytes @ 0x8
  5889  00A8                     	ds	1
  5890  00A9                     ___xxtofl@exp:
  5891                           
  5892                           ; 1 bytes @ 0x9
  5893  00A9                     	ds	1
  5894  00AA                     ___xxtofl@arg:
  5895                           
  5896                           ; 4 bytes @ 0xA
  5897  00AA                     	ds	4
  5898  00AE                     ?___fleq:
  5899  00AE                     ___fleq@ff1:	
  5900                           ; 1 bit 
  5901                           
  5902                           
  5903                           ; 4 bytes @ 0xE
  5904  00AE                     	ds	4
  5905  00B2                     ___fleq@ff2:
  5906                           
  5907                           ; 4 bytes @ 0x12
  5908  00B2                     	ds	4
  5909  00B6                     ??___fleq:
  5910                           
  5911                           ; 1 bytes @ 0x16
  5912  00B6                     	ds	4
  5913  00BA                     ??_main:
  5914                           
  5915                           ; 1 bytes @ 0x1A
  5916  00BA                     	ds	4
  5917  00BE                     main@aux:
  5918                           
  5919                           ; 4 bytes @ 0x1E
  5920  00BE                     	ds	4
  5921  00C2                     main@a:
  5922                           
  5923                           ; 2 bytes @ 0x22
  5924  00C2                     	ds	2
  5925                           
  5926                           	psect	cstackCOMMON
  5927  0070                     __pcstackCOMMON:
  5928  0070                     ?_isdigit:
  5929  0070                     ?_i2c1_driver_open:	
  5930                           ; 1 bit 
  5931                           
  5932  0070                     ?_PMD_Initialize:	
  5933                           ; 1 bit 
  5934                           
  5935  0070                     ?_OSCILLATOR_Initialize:	
  5936                           ; 1 bytes @ 0x0
  5937                           
  5938  0070                     ?_ADCC_Initialize:	
  5939                           ; 1 bytes @ 0x0
  5940                           
  5941  0070                     ?_TMR3_Initialize:	
  5942                           ; 1 bytes @ 0x0
  5943                           
  5944  0070                     ?_TMR1_Initialize:	
  5945                           ; 1 bytes @ 0x0
  5946                           
  5947  0070                     ?_TMR3_ISR:	
  5948                           ; 1 bytes @ 0x0
  5949                           
  5950  0070                     ?_TMR1_ISR:	
  5951                           ; 1 bytes @ 0x0
  5952                           
  5953  0070                     ?_TMR1_DefaultInterruptHandler:	
  5954                           ; 1 bytes @ 0x0
  5955                           
  5956  0070                     ??_TMR1_DefaultInterruptHandler:	
  5957                           ; 1 bytes @ 0x0
  5958                           
  5959  0070                     ?_TMR3_DefaultInterruptHandler:	
  5960                           ; 1 bytes @ 0x0
  5961                           
  5962  0070                     ??_TMR3_DefaultInterruptHandler:	
  5963                           ; 1 bytes @ 0x0
  5964                           
  5965  0070                     ??_isdigit:	
  5966                           ; 1 bytes @ 0x0
  5967                           
  5968  0070                     ?_ReadI2C:	
  5969                           ; 1 bytes @ 0x0
  5970                           
  5971  0070                     ??_ReadI2C:	
  5972                           ; 1 bytes @ 0x0
  5973                           
  5974  0070                     ?_WriteI2C:	
  5975                           ; 1 bytes @ 0x0
  5976                           
  5977  0070                     ?_PIN_MANAGER_Initialize:	
  5978                           ; 1 bytes @ 0x0
  5979                           
  5980  0070                     ?_SYSTEM_Initialize:	
  5981                           ; 1 bytes @ 0x0
  5982                           
  5983  0070                     ?_INTERRUPT_InterruptManager:	
  5984                           ; 1 bytes @ 0x0
  5985                           
  5986  0070                     ?_TMR1_WriteTimer:	
  5987                           ; 1 bytes @ 0x0
  5988                           
  5989  0070                     ?_TMR3_WriteTimer:	
  5990                           ; 1 bytes @ 0x0
  5991                           
  5992  0070                     ?_tsttc:	
  5993                           ; 1 bytes @ 0x0
  5994                           
  5995  0070                     ?_LCDsend:	
  5996                           ; 1 bytes @ 0x0
  5997                           
  5998  0070                     ?_LCDinit:	
  5999                           ; 1 bytes @ 0x0
  6000                           
  6001  0070                     ?_LCDcmd:	
  6002                           ; 1 bytes @ 0x0
  6003                           
  6004  0070                     ?_LCDchar:	
  6005                           ; 1 bytes @ 0x0
  6006                           
  6007  0070                     ?_Clock_ISR:	
  6008                           ; 1 bytes @ 0x0
  6009                           
  6010  0070                     ?_menuLCD_ISR:	
  6011                           ; 1 bytes @ 0x0
  6012                           
  6013  0070                     ?_main:	
  6014                           ; 1 bytes @ 0x0
  6015                           
  6016  0070                     ?i1_WriteI2C:	
  6017                           ; 1 bytes @ 0x0
  6018                           
  6019  0070                     ??i1_WriteI2C:	
  6020                           ; 1 bytes @ 0x0
  6021                           
  6022  0070                     ?_ADCC_GetSingleConversion:	
  6023                           ; 1 bytes @ 0x0
  6024                           
  6025  0070                     ?___wmul:	
  6026                           ; 2 bytes @ 0x0
  6027                           
  6028  0070                     ?___lwdiv:	
  6029                           ; 2 bytes @ 0x0
  6030                           
  6031  0070                     _isdigit$2255:	
  6032                           ; 2 bytes @ 0x0
  6033                           
  6034  0070                     TMR1_WriteTimer@timerVal:	
  6035                           ; 1 bytes @ 0x0
  6036                           
  6037  0070                     TMR3_WriteTimer@timerVal:	
  6038                           ; 2 bytes @ 0x0
  6039                           
  6040  0070                     ___wmul@multiplier:	
  6041                           ; 2 bytes @ 0x0
  6042                           
  6043  0070                     ___lwdiv@divisor:	
  6044                           ; 2 bytes @ 0x0
  6045                           
  6046                           
  6047                           ; 2 bytes @ 0x0
  6048  0070                     	ds	1
  6049  0071                     isdigit@c:
  6050  0071                     i1WriteI2C@data_out:	
  6051                           ; 1 bytes @ 0x1
  6052                           
  6053                           
  6054                           ; 1 bytes @ 0x1
  6055  0071                     	ds	1
  6056  0072                     ??_TMR1_WriteTimer:
  6057  0072                     ??_TMR3_WriteTimer:	
  6058                           ; 1 bytes @ 0x2
  6059                           
  6060  0072                     ??_tsttc:	
  6061                           ; 1 bytes @ 0x2
  6062                           
  6063  0072                     ?i1_LCDsend2x4:	
  6064                           ; 1 bytes @ 0x2
  6065                           
  6066  0072                     i1LCDsend2x4@mode:	
  6067                           ; 1 bytes @ 0x2
  6068                           
  6069  0072                     ___wmul@multiplicand:	
  6070                           ; 1 bytes @ 0x2
  6071                           
  6072  0072                     ___lwdiv@dividend:	
  6073                           ; 2 bytes @ 0x2
  6074                           
  6075                           
  6076                           ; 2 bytes @ 0x2
  6077  0072                     	ds	1
  6078  0073                     ??_ADCC_GetSingleConversion:
  6079  0073                     ??i1_LCDsend2x4:	
  6080                           ; 1 bytes @ 0x3
  6081                           
  6082  0073                     tsttc@value:	
  6083                           ; 1 bytes @ 0x3
  6084                           
  6085  0073                     ADCC_GetSingleConversion@channel:	
  6086                           ; 1 bytes @ 0x3
  6087                           
  6088                           
  6089                           ; 1 bytes @ 0x3
  6090  0073                     	ds	1
  6091  0074                     ??_Clock_ISR:
  6092  0074                     ??___wmul:	
  6093                           ; 1 bytes @ 0x4
  6094                           
  6095  0074                     ??___lwdiv:	
  6096                           ; 1 bytes @ 0x4
  6097                           
  6098  0074                     ___wmul@product:	
  6099                           ; 1 bytes @ 0x4
  6100                           
  6101                           
  6102                           ; 2 bytes @ 0x4
  6103  0074                     	ds	1
  6104  0075                     i1LCDsend2x4@c:
  6105  0075                     ___lwdiv@quotient:	
  6106                           ; 1 bytes @ 0x5
  6107                           
  6108                           
  6109                           ; 2 bytes @ 0x5
  6110  0075                     	ds	1
  6111  0076                     i1LCDsend2x4@hc:
  6112                           
  6113                           ; 1 bytes @ 0x6
  6114  0076                     	ds	1
  6115  0077                     ??_TMR1_ISR:
  6116  0077                     ___lwdiv@counter:	
  6117                           ; 1 bytes @ 0x7
  6118                           
  6119  0077                     i1LCDsend2x4@lc:	
  6120                           ; 1 bytes @ 0x7
  6121                           
  6122                           
  6123                           ; 1 bytes @ 0x7
  6124  0077                     	ds	1
  6125  0078                     ??_LCDcmd:
  6126  0078                     ??_LCDchar:	
  6127                           ; 1 bytes @ 0x8
  6128                           
  6129  0078                     ?___lwmod:	
  6130                           ; 1 bytes @ 0x8
  6131                           
  6132  0078                     LCDcmd@c:	
  6133                           ; 2 bytes @ 0x8
  6134                           
  6135  0078                     LCDchar@c:	
  6136                           ; 1 bytes @ 0x8
  6137                           
  6138  0078                     ___lwmod@divisor:	
  6139                           ; 1 bytes @ 0x8
  6140                           
  6141                           
  6142                           ; 2 bytes @ 0x8
  6143  0078                     	ds	1
  6144  0079                     ?_LCDstr:
  6145  0079                     LCDstr@p:	
  6146                           ; 1 bytes @ 0x9
  6147                           
  6148                           
  6149                           ; 2 bytes @ 0x9
  6150  0079                     	ds	1
  6151  007A                     ___lwmod@dividend:
  6152                           
  6153                           ; 2 bytes @ 0xA
  6154  007A                     	ds	1
  6155  007B                     ??_LCDstr:
  6156                           
  6157                           ; 1 bytes @ 0xB
  6158  007B                     	ds	1
  6159  007C                     ??___lwmod:
  6160                           
  6161                           ; 1 bytes @ 0xC
  6162  007C                     	ds	1
  6163  007D                     ___lwmod@counter:
  6164                           
  6165                           ; 1 bytes @ 0xD
  6166  007D                     	ds	1
  6167  007E                     ??_TMR3_ISR:
  6168  007E                     ??_INTERRUPT_InterruptManager:	
  6169                           ; 1 bytes @ 0xE
  6170                           
  6171                           
  6172                           	psect	cstackBANK0
  6173  0020                     __pcstackBANK0:	
  6174                           ; 1 bytes @ 0xE
  6175                           
  6176  0020                     ?_sprintf:
  6177  0020                     LCDstr@c:	
  6178                           ; 2 bytes @ 0x0
  6179                           
  6180  0020                     sprintf@f:	
  6181                           ; 1 bytes @ 0x0
  6182                           
  6183                           
  6184                           ; 2 bytes @ 0x0
  6185  0020                     	ds	8
  6186  0028                     ??_sprintf:
  6187                           
  6188                           ; 1 bytes @ 0x8
  6189  0028                     	ds	4
  6190  002C                     sprintf@ap:
  6191                           
  6192                           ; 1 bytes @ 0xC
  6193  002C                     	ds	1
  6194  002D                     sprintf@prec:
  6195                           
  6196                           ; 1 bytes @ 0xD
  6197  002D                     	ds	1
  6198  002E                     sprintf@val:
  6199                           
  6200                           ; 2 bytes @ 0xE
  6201  002E                     	ds	2
  6202  0030                     sprintf@flag:
  6203                           
  6204                           ; 1 bytes @ 0x10
  6205  0030                     	ds	1
  6206  0031                     sprintf@width:
  6207                           
  6208                           ; 2 bytes @ 0x11
  6209  0031                     	ds	2
  6210  0033                     sprintf@sp:
  6211                           
  6212                           ; 1 bytes @ 0x13
  6213  0033                     	ds	1
  6214  0034                     sprintf@c:
  6215                           
  6216                           ; 1 bytes @ 0x14
  6217  0034                     	ds	1
  6218  0035                     ??_menuLCD_ISR:
  6219                           
  6220                           ; 1 bytes @ 0x15
  6221  0035                     	ds	2
  6222  0037                     menuLCD_ISR@str:
  6223                           
  6224                           ; 8 bytes @ 0x17
  6225  0037                     	ds	8
  6226  003F                     menuLCD_ISR@l:
  6227                           
  6228                           ; 5 bytes @ 0x1F
  6229  003F                     	ds	5
  6230  0044                     menuLCD_ISR@tt:
  6231                           
  6232                           ; 4 bytes @ 0x24
  6233  0044                     	ds	4
  6234                           
  6235                           	psect	maintext
  6236  0525                     __pmaintext:	
  6237 ;;
  6238 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  6239 ;;
  6240 ;; *************** function _main *****************
  6241 ;; Defined at:
  6242 ;;		line 262 in file "main.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;		None
  6245 ;; Auto vars:     Size  Location     Type
  6246 ;;  buf            17    0        unsigned char [17]
  6247 ;;  aux             4   30[BANK1 ] float 
  6248 ;;  a               2   34[BANK1 ] int 
  6249 ;;  c2              1    0        unsigned char 
  6250 ;;  c1              1    0        unsigned char 
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  1    wreg      void 
  6253 ;; Registers used:
  6254 ;;		wreg, status,2, status,0, pclath, cstack
  6255 ;; Tracked objects:
  6256 ;;		On entry : B1F/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6261 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6262 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6263 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  6264 ;;Total ram usage:       10 bytes
  6265 ;; Hardware stack levels required when called:   10
  6266 ;; This function calls:
  6267 ;;		_LCDinit
  6268 ;;		_SYSTEM_Initialize
  6269 ;;		_TMR1_SetInterruptHandler
  6270 ;;		_TMR3_SetInterruptHandler
  6271 ;;		___fleq
  6272 ;;		___xxtofl
  6273 ;;		_i2c1_driver_open
  6274 ;; This function is called by:
  6275 ;;		Startup code after reset
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           
  6280                           ;psect for function _main
  6281  0525                     _main:
  6282  0525                     l3754:	
  6283                           ;incstack = 0
  6284                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  6285                           
  6286                           
  6287                           ;main.c: 266: unsigned char c1;;main.c: 267: unsigned char c2;;main.c: 268: unsigned cha
      +                          r buf[17];;main.c: 271: SYSTEM_Initialize();
  6288  0525  318E  2641  3185   	fcall	_SYSTEM_Initialize
  6289                           
  6290                           ;main.c: 273: TMR1_SetInterruptHandler(Clock_ISR);
  6291  0528  30C0               	movlw	low _Clock_ISR
  6292  0529  0021               	movlb	1	; select bank1
  6293  052A  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  6294  052B  300F               	movlw	high _Clock_ISR
  6295  052C  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6296  052D  318D  25C0  3185   	fcall	_TMR1_SetInterruptHandler
  6297                           
  6298                           ;main.c: 275: TMR3_SetInterruptHandler(menuLCD_ISR);
  6299  0530  303E               	movlw	low _menuLCD_ISR
  6300  0531  0021               	movlb	1	; select bank1
  6301  0532  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  6302  0533  3006               	movlw	high _menuLCD_ISR
  6303  0534  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6304  0535  318D  25E6  3185   	fcall	_TMR3_SetInterruptHandler
  6305                           
  6306                           ;main.c: 277: i2c1_driver_open();
  6307  0538  318D  25EF  3185   	fcall	_i2c1_driver_open
  6308  053B                     l3756:
  6309                           
  6310                           ;main.c: 278: TRISCbits.TRISC3 = 1;
  6311  053B  0020               	movlb	0	; select bank0
  6312  053C  1593               	bsf	19,3	;volatile
  6313  053D                     l3758:
  6314                           
  6315                           ;main.c: 279: TRISCbits.TRISC4 = 1;
  6316  053D  1613               	bsf	19,4	;volatile
  6317  053E                     l3760:
  6318                           
  6319                           ;main.c: 280: WPUC3 = 1;
  6320  053E  003E               	movlb	30	; select bank30
  6321  053F  15CF               	bsf	79,3	;volatile
  6322  0540                     l3762:
  6323                           
  6324                           ;main.c: 281: WPUC4 = 1;
  6325  0540  164F               	bsf	79,4	;volatile
  6326                           
  6327                           ;main.c: 282: LCDinit();
  6328  0541  3185  25C8  3185   	fcall	_LCDinit
  6329  0544                     l3764:
  6330                           
  6331                           ;main.c: 285: (INTCONbits.GIE = 1);
  6332  0544  178B               	bsf	11,7	;volatile
  6333  0545                     l3766:
  6334                           
  6335                           ;main.c: 288: (INTCONbits.PEIE = 1);
  6336  0545  170B               	bsf	11,6	;volatile
  6337  0546                     l3768:
  6338  0546  0020               	movlb	0	; select bank0
  6339  0547  1616               	bsf	22,4	;volatile
  6340  0548                     l767:
  6341                           
  6342                           ;main.c: 291: float aux = PORTBbits.RB4;
  6343  0548  0E0D               	swapf	13,w	;volatile
  6344  0549  3901               	andlw	1
  6345  054A  0021               	movlb	1	; select bank1
  6346  054B  00BA               	movwf	??_main^(0+128)
  6347  054C  01BB               	clrf	(??_main^(0+128)+1)
  6348  054D  01BC               	clrf	(??_main^(0+128)+2)
  6349  054E  01BD               	clrf	(??_main^(0+128)+3)
  6350  054F  083D               	movf	(??_main+3)^(0+128),w
  6351  0550  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  6352  0551  083C               	movf	(??_main+2)^(0+128),w
  6353  0552  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  6354  0553  083B               	movf	(??_main+1)^(0+128),w
  6355  0554  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  6356  0555  083A               	movf	??_main^(0+128),w
  6357  0556  00A0               	movwf	___xxtofl@val^(0+128)
  6358  0557  3000               	movlw	0
  6359  0558  3184  2478  3185   	fcall	___xxtofl
  6360  055B  0021               	movlb	1	; select bank1
  6361  055C  0823               	movf	(?___xxtofl+3)^(0+128),w
  6362  055D  00C1               	movwf	(main@aux+3)^(0+128)
  6363  055E  0822               	movf	(?___xxtofl+2)^(0+128),w
  6364  055F  00C0               	movwf	(main@aux+2)^(0+128)
  6365  0560  0821               	movf	(?___xxtofl+1)^(0+128),w
  6366  0561  00BF               	movwf	(main@aux+1)^(0+128)
  6367  0562  0820               	movf	?___xxtofl^(0+128),w
  6368  0563  00BE               	movwf	main@aux^(0+128)
  6369  0564                     l3770:
  6370                           
  6371                           ;main.c: 292: int a = 1;
  6372  0564  3001               	movlw	1
  6373  0565  00C2               	movwf	main@a^(0+128)
  6374  0566  3000               	movlw	0
  6375  0567  00C3               	movwf	(main@a^(0+128)+1)
  6376  0568                     l3772:
  6377                           
  6378                           ;main.c: 295: {;main.c: 296: if(PORTBbits.RB4 != aux){
  6379  0568  0020               	movlb	0	; select bank0
  6380  0569  0E0D               	swapf	13,w	;volatile
  6381  056A  3901               	andlw	1
  6382  056B  0021               	movlb	1	; select bank1
  6383  056C  00BA               	movwf	??_main^(0+128)
  6384  056D  01BB               	clrf	(??_main^(0+128)+1)
  6385  056E  01BC               	clrf	(??_main^(0+128)+2)
  6386  056F  01BD               	clrf	(??_main^(0+128)+3)
  6387  0570  083D               	movf	(??_main+3)^(0+128),w
  6388  0571  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  6389  0572  083C               	movf	(??_main+2)^(0+128),w
  6390  0573  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  6391  0574  083B               	movf	(??_main+1)^(0+128),w
  6392  0575  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  6393  0576  083A               	movf	??_main^(0+128),w
  6394  0577  00A0               	movwf	___xxtofl@val^(0+128)
  6395  0578  3000               	movlw	0
  6396  0579  3184  2478  3185   	fcall	___xxtofl
  6397  057C  0021               	movlb	1	; select bank1
  6398  057D  0823               	movf	(?___xxtofl+3)^(0+128),w
  6399  057E  00B1               	movwf	(___fleq@ff1+3)^(0+128)
  6400  057F  0822               	movf	(?___xxtofl+2)^(0+128),w
  6401  0580  00B0               	movwf	(___fleq@ff1+2)^(0+128)
  6402  0581  0821               	movf	(?___xxtofl+1)^(0+128),w
  6403  0582  00AF               	movwf	(___fleq@ff1+1)^(0+128)
  6404  0583  0820               	movf	?___xxtofl^(0+128),w
  6405  0584  00AE               	movwf	___fleq@ff1^(0+128)
  6406  0585  0841               	movf	(main@aux+3)^(0+128),w
  6407  0586  00B5               	movwf	(___fleq@ff2+3)^(0+128)
  6408  0587  0840               	movf	(main@aux+2)^(0+128),w
  6409  0588  00B4               	movwf	(___fleq@ff2+2)^(0+128)
  6410  0589  083F               	movf	(main@aux+1)^(0+128),w
  6411  058A  00B3               	movwf	(___fleq@ff2+1)^(0+128)
  6412  058B  083E               	movf	main@aux^(0+128),w
  6413  058C  00B2               	movwf	___fleq@ff2^(0+128)
  6414  058D  3187  274D  3185   	fcall	___fleq
  6415  0590  1803               	btfsc	3,0
  6416  0591  2D93               	goto	u3591
  6417  0592  2D94               	goto	u3590
  6418  0593                     u3591:
  6419  0593  2D68               	goto	l3772
  6420  0594                     u3590:
  6421  0594                     l3774:
  6422                           
  6423                           ;main.c: 297: if(a==1){
  6424  0594  0021               	movlb	1	; select bank1
  6425  0595  0342               	decf	main@a^(0+128),w
  6426  0596  0443               	iorwf	(main@a+1)^(0+128),w
  6427  0597  1D03               	btfss	3,2
  6428  0598  2D9A               	goto	u3601
  6429  0599  2D9B               	goto	u3600
  6430  059A                     u3601:
  6431  059A  2DA1               	goto	l774
  6432  059B                     u3600:
  6433  059B                     l771:	
  6434                           ;main.c: 298: do { LATAbits.LATA4 = 0; } while(0);
  6435                           
  6436  059B  0020               	movlb	0	; select bank0
  6437  059C  1216               	bcf	22,4	;volatile
  6438  059D                     l3776:
  6439                           
  6440                           ;main.c: 299: a=0;
  6441  059D  0021               	movlb	1	; select bank1
  6442  059E  01C2               	clrf	main@a^(0+128)
  6443  059F  01C3               	clrf	(main@a+1)^(0+128)
  6444                           
  6445                           ;main.c: 300: } else{
  6446  05A0  2DA8               	goto	l3780
  6447  05A1                     l774:	
  6448                           ;main.c: 301: do { LATAbits.LATA4 = 1; } while(0);
  6449                           
  6450  05A1  0020               	movlb	0	; select bank0
  6451  05A2  1616               	bsf	22,4	;volatile
  6452  05A3                     l3778:
  6453                           
  6454                           ;main.c: 302: a=1;
  6455  05A3  3001               	movlw	1
  6456  05A4  0021               	movlb	1	; select bank1
  6457  05A5  00C2               	movwf	main@a^(0+128)
  6458  05A6  3000               	movlw	0
  6459  05A7  00C3               	movwf	(main@a^(0+128)+1)
  6460  05A8                     l3780:
  6461                           
  6462                           ;main.c: 303: };main.c: 304: aux = PORTBbits.RB4;
  6463  05A8  0020               	movlb	0	; select bank0
  6464  05A9  0E0D               	swapf	13,w	;volatile
  6465  05AA  3901               	andlw	1
  6466  05AB  0021               	movlb	1	; select bank1
  6467  05AC  00BA               	movwf	??_main^(0+128)
  6468  05AD  01BB               	clrf	(??_main^(0+128)+1)
  6469  05AE  01BC               	clrf	(??_main^(0+128)+2)
  6470  05AF  01BD               	clrf	(??_main^(0+128)+3)
  6471  05B0  083D               	movf	(??_main+3)^(0+128),w
  6472  05B1  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  6473  05B2  083C               	movf	(??_main+2)^(0+128),w
  6474  05B3  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  6475  05B4  083B               	movf	(??_main+1)^(0+128),w
  6476  05B5  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  6477  05B6  083A               	movf	??_main^(0+128),w
  6478  05B7  00A0               	movwf	___xxtofl@val^(0+128)
  6479  05B8  3000               	movlw	0
  6480  05B9  3184  2478  3185   	fcall	___xxtofl
  6481  05BC  0021               	movlb	1	; select bank1
  6482  05BD  0823               	movf	(?___xxtofl+3)^(0+128),w
  6483  05BE  00C1               	movwf	(main@aux+3)^(0+128)
  6484  05BF  0822               	movf	(?___xxtofl+2)^(0+128),w
  6485  05C0  00C0               	movwf	(main@aux+2)^(0+128)
  6486  05C1  0821               	movf	(?___xxtofl+1)^(0+128),w
  6487  05C2  00BF               	movwf	(main@aux+1)^(0+128)
  6488  05C3  0820               	movf	?___xxtofl^(0+128),w
  6489  05C4  00BE               	movwf	main@aux^(0+128)
  6490  05C5  2D68               	goto	l3772
  6491  05C6  3180  2834         	ljmp	start
  6492  05C8                     __end_of_main:
  6493                           
  6494                           	psect	text1
  6495  0DEF                     __ptext1:	
  6496 ;; *************** function _i2c1_driver_open *****************
  6497 ;; Defined at:
  6498 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;		None
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;		None
  6503 ;; Return value:  Size  Location     Type
  6504 ;;		None               void
  6505 ;; Registers used:
  6506 ;;		wreg, status,2
  6507 ;; Tracked objects:
  6508 ;;		On entry : 0/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6516 ;;Total ram usage:        0 bytes
  6517 ;; Hardware stack levels used:    1
  6518 ;; Hardware stack levels required when called:    7
  6519 ;; This function calls:
  6520 ;;		Nothing
  6521 ;; This function is called by:
  6522 ;;		_main
  6523 ;; This function uses a non-reentrant model
  6524 ;;
  6525                           
  6526                           
  6527                           ;psect for function _i2c1_driver_open
  6528  0DEF                     _i2c1_driver_open:
  6529  0DEF                     l3742:	
  6530                           ;incstack = 0
  6531                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  6532                           
  6533                           
  6534                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
  6535  0DEF  0023               	movlb	3	; select bank3
  6536  0DF0  1A90               	btfsc	16,5	;volatile
  6537  0DF1  2DF3               	goto	u3581
  6538  0DF2  2DF4               	goto	u3580
  6539  0DF3                     u3581:
  6540  0DF3  2DFA               	goto	l231
  6541  0DF4                     u3580:
  6542  0DF4                     l3744:
  6543                           
  6544                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
  6545  0DF4  018F               	clrf	15	;volatile
  6546  0DF5                     l3746:
  6547                           
  6548                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
  6549  0DF5  3028               	movlw	40
  6550  0DF6  0090               	movwf	16	;volatile
  6551  0DF7                     l3748:
  6552                           
  6553                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
  6554  0DF7  0191               	clrf	17	;volatile
  6555                           
  6556                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
  6557  0DF8  3003               	movlw	3
  6558  0DF9  008D               	movwf	13	;volatile
  6559  0DFA                     l231:
  6560  0DFA  0008               	return
  6561  0DFB                     __end_of_i2c1_driver_open:
  6562                           
  6563                           	psect	text2
  6564  0478                     __ptext2:	
  6565 ;; *************** function ___xxtofl *****************
  6566 ;; Defined at:
  6567 ;;		line 10 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\xxtofl.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;  sign            1    wreg     unsigned char 
  6570 ;;  val             4    0[BANK1 ] long 
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;  sign            1    8[BANK1 ] unsigned char 
  6573 ;;  arg             4   10[BANK1 ] unsigned long 
  6574 ;;  exp             1    9[BANK1 ] unsigned char 
  6575 ;; Return value:  Size  Location     Type
  6576 ;;                  4    0[BANK1 ] unsigned char 
  6577 ;; Registers used:
  6578 ;;		wreg, status,2, status,0
  6579 ;; Tracked objects:
  6580 ;;		On entry : 0/0
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6584 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6585 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  6586 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6587 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  6588 ;;Total ram usage:       14 bytes
  6589 ;; Hardware stack levels used:    1
  6590 ;; Hardware stack levels required when called:    7
  6591 ;; This function calls:
  6592 ;;		Nothing
  6593 ;; This function is called by:
  6594 ;;		_main
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           
  6599                           ;psect for function ___xxtofl
  6600  0478                     ___xxtofl:
  6601                           
  6602                           ;incstack = 0
  6603                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6604                           ;___xxtofl@sign stored from wreg
  6605  0478  0021               	movlb	1	; select bank1
  6606  0479  00A8               	movwf	___xxtofl@sign^(0+128)
  6607  047A                     l3516:
  6608  047A  0828               	movf	___xxtofl@sign^(0+128),w
  6609  047B  1903               	btfsc	3,2
  6610  047C  2C7E               	goto	u3341
  6611  047D  2C7F               	goto	u3340
  6612  047E                     u3341:
  6613  047E  2C93               	goto	l3522
  6614  047F                     u3340:
  6615  047F                     l3518:
  6616  047F  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
  6617  0480  2C82               	goto	u3351
  6618  0481  2C83               	goto	u3350
  6619  0482                     u3351:
  6620  0482  2C93               	goto	l3522
  6621  0483                     u3350:
  6622  0483                     l3520:
  6623  0483  0920               	comf	___xxtofl@val^(0+128),w
  6624  0484  00AA               	movwf	___xxtofl@arg^(0+128)
  6625  0485  0921               	comf	(___xxtofl@val^(0+128)+1),w
  6626  0486  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
  6627  0487  0922               	comf	(___xxtofl@val^(0+128)+2),w
  6628  0488  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
  6629  0489  0923               	comf	(___xxtofl@val^(0+128)+3),w
  6630  048A  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
  6631  048B  0AAA               	incf	___xxtofl@arg^(0+128),f
  6632  048C  1903               	skipnz
  6633  048D  0AAB               	incf	(___xxtofl@arg+1)^(0+128),f
  6634  048E  1903               	skipnz
  6635  048F  0AAC               	incf	(___xxtofl@arg+2)^(0+128),f
  6636  0490  1903               	skipnz
  6637  0491  0AAD               	incf	(___xxtofl@arg+3)^(0+128),f
  6638  0492  2C9B               	goto	l1574
  6639  0493                     l3522:
  6640  0493  0823               	movf	(___xxtofl@val+3)^(0+128),w
  6641  0494  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
  6642  0495  0822               	movf	(___xxtofl@val+2)^(0+128),w
  6643  0496  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
  6644  0497  0821               	movf	(___xxtofl@val+1)^(0+128),w
  6645  0498  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
  6646  0499  0820               	movf	___xxtofl@val^(0+128),w
  6647  049A  00AA               	movwf	___xxtofl@arg^(0+128)
  6648  049B                     l1574:
  6649  049B  0823               	movf	(___xxtofl@val+3)^(0+128),w
  6650  049C  0422               	iorwf	(___xxtofl@val+2)^(0+128),w
  6651  049D  0421               	iorwf	(___xxtofl@val+1)^(0+128),w
  6652  049E  0420               	iorwf	___xxtofl@val^(0+128),w
  6653  049F  1D03               	skipz
  6654  04A0  2CA2               	goto	u3361
  6655  04A1  2CA3               	goto	u3360
  6656  04A2                     u3361:
  6657  04A2  2CAC               	goto	l3528
  6658  04A3                     u3360:
  6659  04A3                     l3524:
  6660  04A3  3000               	movlw	0
  6661  04A4  00A3               	movwf	(?___xxtofl+3)^(0+128)
  6662  04A5  3000               	movlw	0
  6663  04A6  00A2               	movwf	(?___xxtofl+2)^(0+128)
  6664  04A7  3000               	movlw	0
  6665  04A8  00A1               	movwf	(?___xxtofl+1)^(0+128)
  6666  04A9  3000               	movlw	0
  6667  04AA  00A0               	movwf	?___xxtofl^(0+128)
  6668  04AB  2D24               	goto	l1576
  6669  04AC                     l3528:
  6670  04AC  3096               	movlw	150
  6671  04AD  00A4               	movwf	??___xxtofl^(0+128)
  6672  04AE  0824               	movf	??___xxtofl^(0+128),w
  6673  04AF  00A9               	movwf	___xxtofl@exp^(0+128)
  6674  04B0  2CBC               	goto	l3532
  6675  04B1                     l3530:
  6676  04B1  3001               	movlw	1
  6677  04B2  00A4               	movwf	??___xxtofl^(0+128)
  6678  04B3  0824               	movf	??___xxtofl^(0+128),w
  6679  04B4  07A9               	addwf	___xxtofl@exp^(0+128),f
  6680  04B5  3001               	movlw	1
  6681  04B6                     u3375:
  6682  04B6  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
  6683  04B7  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
  6684  04B8  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
  6685  04B9  0CAA               	rrf	___xxtofl@arg^(0+128),f
  6686  04BA  0B89               	decfsz	9,f
  6687  04BB  2CB6               	goto	u3375
  6688  04BC                     l3532:
  6689  04BC  30FE               	movlw	254
  6690  04BD  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
  6691  04BE  1D03               	btfss	3,2
  6692  04BF  2CC1               	goto	u3381
  6693  04C0  2CC2               	goto	u3380
  6694  04C1                     u3381:
  6695  04C1  2CB1               	goto	l3530
  6696  04C2                     u3380:
  6697  04C2  2CD6               	goto	l1580
  6698  04C3                     l3534:
  6699  04C3  3001               	movlw	1
  6700  04C4  00A4               	movwf	??___xxtofl^(0+128)
  6701  04C5  0824               	movf	??___xxtofl^(0+128),w
  6702  04C6  07A9               	addwf	___xxtofl@exp^(0+128),f
  6703  04C7                     l3536:
  6704  04C7  3001               	movlw	1
  6705  04C8  07AA               	addwf	___xxtofl@arg^(0+128),f
  6706  04C9  3000               	movlw	0
  6707  04CA  3DAB               	addwfc	(___xxtofl@arg+1)^(0+128),f
  6708  04CB  3000               	movlw	0
  6709  04CC  3DAC               	addwfc	(___xxtofl@arg+2)^(0+128),f
  6710  04CD  3000               	movlw	0
  6711  04CE  3DAD               	addwfc	(___xxtofl@arg+3)^(0+128),f
  6712  04CF                     l3538:
  6713  04CF  3001               	movlw	1
  6714  04D0                     u3395:
  6715  04D0  36AD               	lsrf	(___xxtofl@arg+3)^(0+128),f
  6716  04D1  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
  6717  04D2  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
  6718  04D3  0CAA               	rrf	___xxtofl@arg^(0+128),f
  6719  04D4  0B89               	decfsz	9,f
  6720  04D5  2CD0               	goto	u3395
  6721  04D6                     l1580:
  6722  04D6  30FF               	movlw	255
  6723  04D7  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
  6724  04D8  1D03               	btfss	3,2
  6725  04D9  2CDB               	goto	u3401
  6726  04DA  2CDC               	goto	u3400
  6727  04DB                     u3401:
  6728  04DB  2CC3               	goto	l3534
  6729  04DC                     u3400:
  6730  04DC  2CE6               	goto	l3542
  6731  04DD                     l3540:
  6732  04DD  3001               	movlw	1
  6733  04DE  02A9               	subwf	___xxtofl@exp^(0+128),f
  6734  04DF  3001               	movlw	1
  6735  04E0                     u3415:
  6736  04E0  35AA               	lslf	___xxtofl@arg^(0+128),f
  6737  04E1  0DAB               	rlf	(___xxtofl@arg+1)^(0+128),f
  6738  04E2  0DAC               	rlf	(___xxtofl@arg+2)^(0+128),f
  6739  04E3  0DAD               	rlf	(___xxtofl@arg+3)^(0+128),f
  6740  04E4  0B89               	decfsz	9,f
  6741  04E5  2CE0               	goto	u3415
  6742  04E6                     l3542:
  6743  04E6  1BAC               	btfsc	(___xxtofl@arg+2)^(0+128),7
  6744  04E7  2CE9               	goto	u3421
  6745  04E8  2CEA               	goto	u3420
  6746  04E9                     u3421:
  6747  04E9  2CF0               	goto	l1587
  6748  04EA                     u3420:
  6749  04EA                     l3544:
  6750  04EA  3002               	movlw	2
  6751  04EB  0229               	subwf	___xxtofl@exp^(0+128),w
  6752  04EC  1803               	skipnc
  6753  04ED  2CEF               	goto	u3431
  6754  04EE  2CF0               	goto	u3430
  6755  04EF                     u3431:
  6756  04EF  2CDD               	goto	l3540
  6757  04F0                     u3430:
  6758  04F0                     l1587:
  6759  04F0  1829               	btfsc	___xxtofl@exp^(0+128),0
  6760  04F1  2CF3               	goto	u3441
  6761  04F2  2CF4               	goto	u3440
  6762  04F3                     u3441:
  6763  04F3  2CFC               	goto	l1588
  6764  04F4                     u3440:
  6765  04F4                     l3546:
  6766  04F4  30FF               	movlw	255
  6767  04F5  05AA               	andwf	___xxtofl@arg^(0+128),f
  6768  04F6  30FF               	movlw	255
  6769  04F7  05AB               	andwf	(___xxtofl@arg+1)^(0+128),f
  6770  04F8  307F               	movlw	127
  6771  04F9  05AC               	andwf	(___xxtofl@arg+2)^(0+128),f
  6772  04FA  30FF               	movlw	255
  6773  04FB  05AD               	andwf	(___xxtofl@arg+3)^(0+128),f
  6774  04FC                     l1588:
  6775  04FC  1003               	clrc
  6776  04FD  0CA9               	rrf	___xxtofl@exp^(0+128),f
  6777  04FE                     l3548:
  6778  04FE  0829               	movf	___xxtofl@exp^(0+128),w
  6779  04FF  00A4               	movwf	??___xxtofl^(0+128)
  6780  0500  01A5               	clrf	(??___xxtofl^(0+128)+1)
  6781  0501  01A6               	clrf	(??___xxtofl^(0+128)+2)
  6782  0502  01A7               	clrf	(??___xxtofl^(0+128)+3)
  6783  0503  3018               	movlw	24
  6784  0504                     u3455:
  6785  0504  35A4               	lslf	??___xxtofl^(0+128),f
  6786  0505  0DA5               	rlf	(??___xxtofl^(0+128)+1),f
  6787  0506  0DA6               	rlf	(??___xxtofl^(0+128)+2),f
  6788  0507  0DA7               	rlf	(??___xxtofl^(0+128)+3),f
  6789  0508                     u3450:
  6790  0508  0B89               	decfsz	9,f
  6791  0509  2D04               	goto	u3455
  6792  050A  0824               	movf	??___xxtofl^(0+128),w
  6793  050B  04AA               	iorwf	___xxtofl@arg^(0+128),f
  6794  050C  0825               	movf	(??___xxtofl+1)^(0+128),w
  6795  050D  04AB               	iorwf	(___xxtofl@arg+1)^(0+128),f
  6796  050E  0826               	movf	(??___xxtofl+2)^(0+128),w
  6797  050F  04AC               	iorwf	(___xxtofl@arg+2)^(0+128),f
  6798  0510  0827               	movf	(??___xxtofl+3)^(0+128),w
  6799  0511  04AD               	iorwf	(___xxtofl@arg+3)^(0+128),f
  6800  0512                     l3550:
  6801  0512  0828               	movf	___xxtofl@sign^(0+128),w
  6802  0513  1903               	btfsc	3,2
  6803  0514  2D16               	goto	u3461
  6804  0515  2D17               	goto	u3460
  6805  0516                     u3461:
  6806  0516  2D1C               	goto	l3556
  6807  0517                     u3460:
  6808  0517                     l3552:
  6809  0517  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
  6810  0518  2D1A               	goto	u3471
  6811  0519  2D1B               	goto	u3470
  6812  051A                     u3471:
  6813  051A  2D1C               	goto	l3556
  6814  051B                     u3470:
  6815  051B                     l3554:
  6816  051B  17AD               	bsf	(___xxtofl@arg^(0+128)+3),7
  6817  051C                     l3556:
  6818  051C  082D               	movf	(___xxtofl@arg+3)^(0+128),w
  6819  051D  00A3               	movwf	(?___xxtofl+3)^(0+128)
  6820  051E  082C               	movf	(___xxtofl@arg+2)^(0+128),w
  6821  051F  00A2               	movwf	(?___xxtofl+2)^(0+128)
  6822  0520  082B               	movf	(___xxtofl@arg+1)^(0+128),w
  6823  0521  00A1               	movwf	(?___xxtofl+1)^(0+128)
  6824  0522  082A               	movf	___xxtofl@arg^(0+128),w
  6825  0523  00A0               	movwf	?___xxtofl^(0+128)
  6826  0524                     l1576:
  6827  0524  0008               	return
  6828  0525                     __end_of___xxtofl:
  6829                           
  6830                           	psect	text3
  6831  074D                     __ptext3:	
  6832 ;; *************** function ___fleq *****************
  6833 ;; Defined at:
  6834 ;;		line 4 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\fleq.c"
  6835 ;; Parameters:    Size  Location     Type
  6836 ;;  ff1             4   14[BANK1 ] unsigned char 
  6837 ;;  ff2             4   18[BANK1 ] unsigned char 
  6838 ;; Auto vars:     Size  Location     Type
  6839 ;;		None
  6840 ;; Return value:  Size  Location     Type
  6841 ;;		None               void
  6842 ;; Registers used:
  6843 ;;		wreg, status,2, status,0
  6844 ;; Tracked objects:
  6845 ;;		On entry : 0/0
  6846 ;;		On exit  : 0/0
  6847 ;;		Unchanged: 0/0
  6848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6849 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6851 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6852 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  6853 ;;Total ram usage:       12 bytes
  6854 ;; Hardware stack levels used:    1
  6855 ;; Hardware stack levels required when called:    7
  6856 ;; This function calls:
  6857 ;;		Nothing
  6858 ;; This function is called by:
  6859 ;;		_main
  6860 ;; This function uses a non-reentrant model
  6861 ;;
  6862                           
  6863                           
  6864                           ;psect for function ___fleq
  6865  074D                     ___fleq:
  6866  074D                     l3504:	
  6867                           ;incstack = 0
  6868                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  6869                           
  6870  074D  3000               	movlw	0
  6871  074E  0021               	movlb	1	; select bank1
  6872  074F  052E               	andwf	___fleq@ff1^(0+128),w
  6873  0750  00B6               	movwf	??___fleq^(0+128)
  6874  0751  3000               	movlw	0
  6875  0752  052F               	andwf	(___fleq@ff1+1)^(0+128),w
  6876  0753  00B7               	movwf	(??___fleq^(0+128)+1)
  6877  0754  3080               	movlw	128
  6878  0755  0530               	andwf	(___fleq@ff1+2)^(0+128),w
  6879  0756  00B8               	movwf	(??___fleq^(0+128)+2)
  6880  0757  307F               	movlw	127
  6881  0758  0531               	andwf	(___fleq@ff1+3)^(0+128),w
  6882  0759  00B9               	movwf	(??___fleq^(0+128)+3)
  6883  075A  0839               	movf	(??___fleq+3)^(0+128),w
  6884  075B  0438               	iorwf	(??___fleq+2)^(0+128),w
  6885  075C  0437               	iorwf	(??___fleq+1)^(0+128),w
  6886  075D  0436               	iorwf	??___fleq^(0+128),w
  6887  075E  1D03               	skipz
  6888  075F  2F61               	goto	u3311
  6889  0760  2F62               	goto	u3310
  6890  0761                     u3311:
  6891  0761  2F6A               	goto	l1310
  6892  0762                     u3310:
  6893  0762                     l3506:
  6894  0762  3000               	movlw	0
  6895  0763  00B1               	movwf	(___fleq@ff1+3)^(0+128)
  6896  0764  3000               	movlw	0
  6897  0765  00B0               	movwf	(___fleq@ff1+2)^(0+128)
  6898  0766  3000               	movlw	0
  6899  0767  00AF               	movwf	(___fleq@ff1+1)^(0+128)
  6900  0768  3000               	movlw	0
  6901  0769  00AE               	movwf	___fleq@ff1^(0+128)
  6902  076A                     l1310:
  6903  076A  3000               	movlw	0
  6904  076B  0532               	andwf	___fleq@ff2^(0+128),w
  6905  076C  00B6               	movwf	??___fleq^(0+128)
  6906  076D  3000               	movlw	0
  6907  076E  0533               	andwf	(___fleq@ff2+1)^(0+128),w
  6908  076F  00B7               	movwf	(??___fleq^(0+128)+1)
  6909  0770  3080               	movlw	128
  6910  0771  0534               	andwf	(___fleq@ff2+2)^(0+128),w
  6911  0772  00B8               	movwf	(??___fleq^(0+128)+2)
  6912  0773  307F               	movlw	127
  6913  0774  0535               	andwf	(___fleq@ff2+3)^(0+128),w
  6914  0775  00B9               	movwf	(??___fleq^(0+128)+3)
  6915  0776  0839               	movf	(??___fleq+3)^(0+128),w
  6916  0777  0438               	iorwf	(??___fleq+2)^(0+128),w
  6917  0778  0437               	iorwf	(??___fleq+1)^(0+128),w
  6918  0779  0436               	iorwf	??___fleq^(0+128),w
  6919  077A  1D03               	skipz
  6920  077B  2F7D               	goto	u3321
  6921  077C  2F7E               	goto	u3320
  6922  077D                     u3321:
  6923  077D  2F86               	goto	l1311
  6924  077E                     u3320:
  6925  077E                     l3508:
  6926  077E  3000               	movlw	0
  6927  077F  00B5               	movwf	(___fleq@ff2+3)^(0+128)
  6928  0780  3000               	movlw	0
  6929  0781  00B4               	movwf	(___fleq@ff2+2)^(0+128)
  6930  0782  3000               	movlw	0
  6931  0783  00B3               	movwf	(___fleq@ff2+1)^(0+128)
  6932  0784  3000               	movlw	0
  6933  0785  00B2               	movwf	___fleq@ff2^(0+128)
  6934  0786                     l1311:
  6935  0786  0835               	movf	(___fleq@ff2+3)^(0+128),w
  6936  0787  0631               	xorwf	(___fleq@ff1+3)^(0+128),w
  6937  0788  1D03               	skipz
  6938  0789  2F94               	goto	u3335
  6939  078A  0834               	movf	(___fleq@ff2+2)^(0+128),w
  6940  078B  0630               	xorwf	(___fleq@ff1+2)^(0+128),w
  6941  078C  1D03               	skipz
  6942  078D  2F94               	goto	u3335
  6943  078E  0833               	movf	(___fleq@ff2+1)^(0+128),w
  6944  078F  062F               	xorwf	(___fleq@ff1+1)^(0+128),w
  6945  0790  1D03               	skipz
  6946  0791  2F94               	goto	u3335
  6947  0792  0832               	movf	___fleq@ff2^(0+128),w
  6948  0793  062E               	xorwf	___fleq@ff1^(0+128),w
  6949  0794                     u3335:
  6950  0794  1903               	skipnz
  6951  0795  2F97               	goto	u3331
  6952  0796  2F98               	goto	u3330
  6953  0797                     u3331:
  6954  0797  2F9A               	goto	l3512
  6955  0798                     u3330:
  6956  0798                     l3510:
  6957  0798  1003               	clrc
  6958  0799  2F9B               	goto	l1312
  6959  079A                     l3512:
  6960  079A  1403               	setc
  6961  079B                     l1312:
  6962  079B  0008               	return
  6963  079C                     __end_of___fleq:
  6964                           
  6965                           	psect	text4
  6966  0E41                     __ptext4:	
  6967 ;; *************** function _SYSTEM_Initialize *****************
  6968 ;; Defined at:
  6969 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6970 ;; Parameters:    Size  Location     Type
  6971 ;;		None
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;		None
  6974 ;; Return value:  Size  Location     Type
  6975 ;;                  1    wreg      void 
  6976 ;; Registers used:
  6977 ;;		wreg, status,2, status,0, pclath, cstack
  6978 ;; Tracked objects:
  6979 ;;		On entry : 0/0
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6987 ;;Total ram usage:        0 bytes
  6988 ;; Hardware stack levels used:    1
  6989 ;; Hardware stack levels required when called:    9
  6990 ;; This function calls:
  6991 ;;		_ADCC_Initialize
  6992 ;;		_OSCILLATOR_Initialize
  6993 ;;		_PIN_MANAGER_Initialize
  6994 ;;		_PMD_Initialize
  6995 ;;		_TMR1_Initialize
  6996 ;;		_TMR3_Initialize
  6997 ;; This function is called by:
  6998 ;;		_main
  6999 ;; This function uses a non-reentrant model
  7000 ;;
  7001                           
  7002                           
  7003                           ;psect for function _SYSTEM_Initialize
  7004  0E41                     _SYSTEM_Initialize:
  7005  0E41                     l3730:	
  7006                           ;incstack = 0
  7007                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7008                           
  7009                           
  7010                           ;mcc.c: 52: PMD_Initialize();
  7011  0E41  318D  25D5  318E   	fcall	_PMD_Initialize
  7012  0E44                     l3732:
  7013                           
  7014                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  7015  0E44  318F  2784  318E   	fcall	_PIN_MANAGER_Initialize
  7016  0E47                     l3734:
  7017                           
  7018                           ;mcc.c: 54: OSCILLATOR_Initialize();
  7019  0E47  318D  25DD  318E   	fcall	_OSCILLATOR_Initialize
  7020  0E4A                     l3736:
  7021                           
  7022                           ;mcc.c: 55: ADCC_Initialize();
  7023  0E4A  3187  27E7  318E   	fcall	_ADCC_Initialize
  7024  0E4D                     l3738:
  7025                           
  7026                           ;mcc.c: 56: TMR3_Initialize();
  7027  0E4D  318E  26F5  318E   	fcall	_TMR3_Initialize
  7028  0E50                     l3740:
  7029                           
  7030                           ;mcc.c: 57: TMR1_Initialize();
  7031  0E50  318E  26D6  318E   	fcall	_TMR1_Initialize
  7032  0E53                     l164:
  7033  0E53  0008               	return
  7034  0E54                     __end_of_SYSTEM_Initialize:
  7035                           
  7036                           	psect	text5
  7037  0EF5                     __ptext5:	
  7038 ;; *************** function _TMR3_Initialize *****************
  7039 ;; Defined at:
  7040 ;;		line 64 in file "mcc_generated_files/tmr3.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;		None
  7043 ;; Auto vars:     Size  Location     Type
  7044 ;;		None
  7045 ;; Return value:  Size  Location     Type
  7046 ;;                  1    wreg      void 
  7047 ;; Registers used:
  7048 ;;		wreg, status,2, status,0, pclath, cstack
  7049 ;; Tracked objects:
  7050 ;;		On entry : 0/0
  7051 ;;		On exit  : 0/0
  7052 ;;		Unchanged: 0/0
  7053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7058 ;;Total ram usage:        0 bytes
  7059 ;; Hardware stack levels used:    1
  7060 ;; Hardware stack levels required when called:    8
  7061 ;; This function calls:
  7062 ;;		_TMR3_SetInterruptHandler
  7063 ;; This function is called by:
  7064 ;;		_SYSTEM_Initialize
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           
  7068                           
  7069                           ;psect for function _TMR3_Initialize
  7070  0EF5                     _TMR3_Initialize:
  7071  0EF5                     l3694:	
  7072                           ;incstack = 0
  7073                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7074                           
  7075                           
  7076                           ;tmr3.c: 69: T3GCON = 0x00;
  7077  0EF5  0024               	movlb	4	; select bank4
  7078  0EF6  0195               	clrf	21	;volatile
  7079                           
  7080                           ;tmr3.c: 72: T3GATE = 0x00;
  7081  0EF7  0196               	clrf	22	;volatile
  7082  0EF8                     l3696:
  7083                           
  7084                           ;tmr3.c: 75: T3CLK = 0x04;
  7085  0EF8  3004               	movlw	4
  7086  0EF9  0097               	movwf	23	;volatile
  7087  0EFA                     l3698:
  7088                           
  7089                           ;tmr3.c: 78: TMR3H = 0xE7;
  7090  0EFA  30E7               	movlw	231
  7091  0EFB  0093               	movwf	19	;volatile
  7092  0EFC                     l3700:
  7093                           
  7094                           ;tmr3.c: 81: TMR3L = 0xC8;
  7095  0EFC  30C8               	movlw	200
  7096  0EFD  0092               	movwf	18	;volatile
  7097  0EFE                     l3702:
  7098                           
  7099                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  7100  0EFE  0813               	movf	19,w	;volatile
  7101  0EFF  0020               	movlb	0	; select bank0
  7102  0F00  00D7               	movwf	_timer3ReloadVal+1	;volatile
  7103  0F01  0024               	movlb	4	; select bank4
  7104  0F02  0812               	movf	18,w	;volatile
  7105  0F03  0020               	movlb	0	; select bank0
  7106  0F04  00D6               	movwf	_timer3ReloadVal	;volatile
  7107  0F05                     l3704:
  7108                           
  7109                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
  7110  0F05  002E               	movlb	14	; select bank14
  7111  0F06  1110               	bcf	16,2	;volatile
  7112  0F07                     l3706:
  7113                           
  7114                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
  7115  0F07  151A               	bsf	26,2	;volatile
  7116  0F08                     l3708:
  7117                           
  7118                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  7119  0F08  30FE               	movlw	low _TMR3_DefaultInterruptHandler
  7120  0F09  0021               	movlb	1	; select bank1
  7121  0F0A  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  7122  0F0B  3007               	movlw	high _TMR3_DefaultInterruptHandler
  7123  0F0C  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  7124  0F0D  318D  25E6  318E   	fcall	_TMR3_SetInterruptHandler
  7125  0F10                     l3710:
  7126                           
  7127                           ;tmr3.c: 96: T3CON = 0x01;
  7128  0F10  3001               	movlw	1
  7129  0F11  0024               	movlb	4	; select bank4
  7130  0F12  0094               	movwf	20	;volatile
  7131  0F13                     l439:
  7132  0F13  0008               	return
  7133  0F14                     __end_of_TMR3_Initialize:
  7134                           
  7135                           	psect	text6
  7136  0DE6                     __ptext6:	
  7137 ;; *************** function _TMR3_SetInterruptHandler *****************
  7138 ;; Defined at:
  7139 ;;		line 178 in file "mcc_generated_files/tmr3.c"
  7140 ;; Parameters:    Size  Location     Type
  7141 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7142 ;;		 -> menuLCD_ISR(1), TMR3_DefaultInterruptHandler(1), 
  7143 ;; Auto vars:     Size  Location     Type
  7144 ;;		None
  7145 ;; Return value:  Size  Location     Type
  7146 ;;                  1    wreg      void 
  7147 ;; Registers used:
  7148 ;;		wreg
  7149 ;; Tracked objects:
  7150 ;;		On entry : 0/0
  7151 ;;		On exit  : 0/0
  7152 ;;		Unchanged: 0/0
  7153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7154 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7157 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7158 ;;Total ram usage:        2 bytes
  7159 ;; Hardware stack levels used:    1
  7160 ;; Hardware stack levels required when called:    7
  7161 ;; This function calls:
  7162 ;;		Nothing
  7163 ;; This function is called by:
  7164 ;;		_TMR3_Initialize
  7165 ;;		_main
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           
  7170                           ;psect for function _TMR3_SetInterruptHandler
  7171  0DE6                     _TMR3_SetInterruptHandler:
  7172  0DE6                     l3622:	
  7173                           ;incstack = 0
  7174                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
  7175                           
  7176                           
  7177                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
  7178  0DE6  0021               	movlb	1	; select bank1
  7179  0DE7  0821               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7180  0DE8  0020               	movlb	0	; select bank0
  7181  0DE9  00D5               	movwf	_TMR3_InterruptHandler+1
  7182  0DEA  0021               	movlb	1	; select bank1
  7183  0DEB  0820               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
  7184  0DEC  0020               	movlb	0	; select bank0
  7185  0DED  00D4               	movwf	_TMR3_InterruptHandler
  7186  0DEE                     l469:
  7187  0DEE  0008               	return
  7188  0DEF                     __end_of_TMR3_SetInterruptHandler:
  7189                           
  7190                           	psect	text7
  7191  0ED6                     __ptext7:	
  7192 ;; *************** function _TMR1_Initialize *****************
  7193 ;; Defined at:
  7194 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;		None
  7197 ;; Auto vars:     Size  Location     Type
  7198 ;;		None
  7199 ;; Return value:  Size  Location     Type
  7200 ;;                  1    wreg      void 
  7201 ;; Registers used:
  7202 ;;		wreg, status,2, status,0, pclath, cstack
  7203 ;; Tracked objects:
  7204 ;;		On entry : 0/0
  7205 ;;		On exit  : 0/0
  7206 ;;		Unchanged: 0/0
  7207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7212 ;;Total ram usage:        0 bytes
  7213 ;; Hardware stack levels used:    1
  7214 ;; Hardware stack levels required when called:    8
  7215 ;; This function calls:
  7216 ;;		_TMR1_SetInterruptHandler
  7217 ;; This function is called by:
  7218 ;;		_SYSTEM_Initialize
  7219 ;; This function uses a non-reentrant model
  7220 ;;
  7221                           
  7222                           
  7223                           ;psect for function _TMR1_Initialize
  7224  0ED6                     _TMR1_Initialize:
  7225  0ED6                     l3712:	
  7226                           ;incstack = 0
  7227                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7228                           
  7229                           
  7230                           ;tmr1.c: 69: T1GCON = 0x00;
  7231  0ED6  0024               	movlb	4	; select bank4
  7232  0ED7  018F               	clrf	15	;volatile
  7233                           
  7234                           ;tmr1.c: 72: T1GATE = 0x00;
  7235  0ED8  0190               	clrf	16	;volatile
  7236  0ED9                     l3714:
  7237                           
  7238                           ;tmr1.c: 75: T1CLK = 0x04;
  7239  0ED9  3004               	movlw	4
  7240  0EDA  0091               	movwf	17	;volatile
  7241  0EDB                     l3716:
  7242                           
  7243                           ;tmr1.c: 78: TMR1H = 0x86;
  7244  0EDB  3086               	movlw	134
  7245  0EDC  008D               	movwf	13	;volatile
  7246  0EDD                     l3718:
  7247                           
  7248                           ;tmr1.c: 81: TMR1L = 0xE8;
  7249  0EDD  30E8               	movlw	232
  7250  0EDE  008C               	movwf	12	;volatile
  7251  0EDF                     l3720:
  7252                           
  7253                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  7254  0EDF  080D               	movf	13,w	;volatile
  7255  0EE0  0021               	movlb	1	; select bank1
  7256  0EE1  00C7               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  7257  0EE2  0024               	movlb	4	; select bank4
  7258  0EE3  080C               	movf	12,w	;volatile
  7259  0EE4  0021               	movlb	1	; select bank1
  7260  0EE5  00C6               	movwf	_timer1ReloadVal^(0+128)	;volatile
  7261  0EE6                     l3722:
  7262                           
  7263                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
  7264  0EE6  002E               	movlb	14	; select bank14
  7265  0EE7  1010               	bcf	16,0	;volatile
  7266  0EE8                     l3724:
  7267                           
  7268                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
  7269  0EE8  141A               	bsf	26,0	;volatile
  7270  0EE9                     l3726:
  7271                           
  7272                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  7273  0EE9  30FF               	movlw	low _TMR1_DefaultInterruptHandler
  7274  0EEA  0021               	movlb	1	; select bank1
  7275  0EEB  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  7276  0EEC  3007               	movlw	high _TMR1_DefaultInterruptHandler
  7277  0EED  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  7278  0EEE  318D  25C0  318E   	fcall	_TMR1_SetInterruptHandler
  7279  0EF1                     l3728:
  7280                           
  7281                           ;tmr1.c: 96: T1CON = 0x01;
  7282  0EF1  3001               	movlw	1
  7283  0EF2  0024               	movlb	4	; select bank4
  7284  0EF3  008E               	movwf	14	;volatile
  7285  0EF4                     l375:
  7286  0EF4  0008               	return
  7287  0EF5                     __end_of_TMR1_Initialize:
  7288                           
  7289                           	psect	text8
  7290  0DC0                     __ptext8:	
  7291 ;; *************** function _TMR1_SetInterruptHandler *****************
  7292 ;; Defined at:
  7293 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  7294 ;; Parameters:    Size  Location     Type
  7295 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7296 ;;		 -> Clock_ISR(1), TMR1_DefaultInterruptHandler(1), 
  7297 ;; Auto vars:     Size  Location     Type
  7298 ;;		None
  7299 ;; Return value:  Size  Location     Type
  7300 ;;                  1    wreg      void 
  7301 ;; Registers used:
  7302 ;;		wreg
  7303 ;; Tracked objects:
  7304 ;;		On entry : 0/0
  7305 ;;		On exit  : 0/0
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7308 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7311 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7312 ;;Total ram usage:        2 bytes
  7313 ;; Hardware stack levels used:    1
  7314 ;; Hardware stack levels required when called:    7
  7315 ;; This function calls:
  7316 ;;		Nothing
  7317 ;; This function is called by:
  7318 ;;		_TMR1_Initialize
  7319 ;;		_main
  7320 ;; This function uses a non-reentrant model
  7321 ;;
  7322                           
  7323                           
  7324                           ;psect for function _TMR1_SetInterruptHandler
  7325  0DC0                     _TMR1_SetInterruptHandler:
  7326  0DC0                     l3620:	
  7327                           ;incstack = 0
  7328                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  7329                           
  7330                           
  7331                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
  7332  0DC0  0021               	movlb	1	; select bank1
  7333  0DC1  0821               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  7334  0DC2  00C5               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  7335  0DC3  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
  7336  0DC4  00C4               	movwf	_TMR1_InterruptHandler^(0+128)
  7337  0DC5                     l405:
  7338  0DC5  0008               	return
  7339  0DC6                     __end_of_TMR1_SetInterruptHandler:
  7340                           
  7341                           	psect	text9
  7342  0DD5                     __ptext9:	
  7343 ;; *************** function _PMD_Initialize *****************
  7344 ;; Defined at:
  7345 ;;		line 74 in file "mcc_generated_files/mcc.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;		None
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;		None
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  1    wreg      void 
  7352 ;; Registers used:
  7353 ;;		status,2
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7363 ;;Total ram usage:        0 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; Hardware stack levels required when called:    7
  7366 ;; This function calls:
  7367 ;;		Nothing
  7368 ;; This function is called by:
  7369 ;;		_SYSTEM_Initialize
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           
  7374                           ;psect for function _PMD_Initialize
  7375  0DD5                     _PMD_Initialize:
  7376  0DD5                     l3678:	
  7377                           ;incstack = 0
  7378                           ; Regs used in _PMD_Initialize: [status,2]
  7379                           
  7380                           
  7381                           ;mcc.c: 77: PMD0 = 0x00;
  7382  0DD5  002F               	movlb	15	; select bank15
  7383  0DD6  0196               	clrf	22	;volatile
  7384                           
  7385                           ;mcc.c: 79: PMD1 = 0x00;
  7386  0DD7  0197               	clrf	23	;volatile
  7387                           
  7388                           ;mcc.c: 81: PMD2 = 0x00;
  7389  0DD8  0198               	clrf	24	;volatile
  7390                           
  7391                           ;mcc.c: 83: PMD3 = 0x00;
  7392  0DD9  0199               	clrf	25	;volatile
  7393                           
  7394                           ;mcc.c: 85: PMD4 = 0x00;
  7395  0DDA  019A               	clrf	26	;volatile
  7396                           
  7397                           ;mcc.c: 87: PMD5 = 0x00;
  7398  0DDB  019B               	clrf	27	;volatile
  7399  0DDC                     l170:
  7400  0DDC  0008               	return
  7401  0DDD                     __end_of_PMD_Initialize:
  7402                           
  7403                           	psect	text10
  7404  0F84                     __ptext10:	
  7405 ;; *************** function _PIN_MANAGER_Initialize *****************
  7406 ;; Defined at:
  7407 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  7408 ;; Parameters:    Size  Location     Type
  7409 ;;		None
  7410 ;; Auto vars:     Size  Location     Type
  7411 ;;		None
  7412 ;; Return value:  Size  Location     Type
  7413 ;;                  1    wreg      void 
  7414 ;; Registers used:
  7415 ;;		wreg, status,2
  7416 ;; Tracked objects:
  7417 ;;		On entry : 0/0
  7418 ;;		On exit  : 0/0
  7419 ;;		Unchanged: 0/0
  7420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7425 ;;Total ram usage:        0 bytes
  7426 ;; Hardware stack levels used:    1
  7427 ;; Hardware stack levels required when called:    7
  7428 ;; This function calls:
  7429 ;;		Nothing
  7430 ;; This function is called by:
  7431 ;;		_SYSTEM_Initialize
  7432 ;; This function uses a non-reentrant model
  7433 ;;
  7434                           
  7435                           
  7436                           ;psect for function _PIN_MANAGER_Initialize
  7437  0F84                     _PIN_MANAGER_Initialize:
  7438  0F84                     l3624:	
  7439                           ;incstack = 0
  7440                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7441                           
  7442                           
  7443                           ;pin_manager.c: 62: LATE = 0x00;
  7444  0F84  0020               	movlb	0	; select bank0
  7445  0F85  019A               	clrf	26	;volatile
  7446                           
  7447                           ;pin_manager.c: 63: LATD = 0x00;
  7448  0F86  0199               	clrf	25	;volatile
  7449                           
  7450                           ;pin_manager.c: 64: LATA = 0x00;
  7451  0F87  0196               	clrf	22	;volatile
  7452                           
  7453                           ;pin_manager.c: 65: LATB = 0x00;
  7454  0F88  0197               	clrf	23	;volatile
  7455                           
  7456                           ;pin_manager.c: 66: LATC = 0x00;
  7457  0F89  0198               	clrf	24	;volatile
  7458  0F8A                     l3626:
  7459                           
  7460                           ;pin_manager.c: 71: TRISE = 0x07;
  7461  0F8A  3007               	movlw	7
  7462  0F8B  0095               	movwf	21	;volatile
  7463  0F8C                     l3628:
  7464                           
  7465                           ;pin_manager.c: 72: TRISA = 0xEF;
  7466  0F8C  30EF               	movlw	239
  7467  0F8D  0091               	movwf	17	;volatile
  7468  0F8E                     l3630:
  7469                           
  7470                           ;pin_manager.c: 73: TRISB = 0xFF;
  7471  0F8E  30FF               	movlw	255
  7472  0F8F  0092               	movwf	18	;volatile
  7473  0F90                     l3632:
  7474                           
  7475                           ;pin_manager.c: 74: TRISC = 0xFF;
  7476  0F90  30FF               	movlw	255
  7477  0F91  0093               	movwf	19	;volatile
  7478  0F92                     l3634:
  7479                           
  7480                           ;pin_manager.c: 75: TRISD = 0xFF;
  7481  0F92  30FF               	movlw	255
  7482  0F93  0094               	movwf	20	;volatile
  7483  0F94                     l3636:
  7484                           
  7485                           ;pin_manager.c: 80: ANSELD = 0xFF;
  7486  0F94  30FF               	movlw	255
  7487  0F95  003E               	movlb	30	; select bank30
  7488  0F96  00D9               	movwf	89	;volatile
  7489  0F97                     l3638:
  7490                           
  7491                           ;pin_manager.c: 81: ANSELC = 0xE7;
  7492  0F97  30E7               	movlw	231
  7493  0F98  00CE               	movwf	78	;volatile
  7494  0F99                     l3640:
  7495                           
  7496                           ;pin_manager.c: 82: ANSELB = 0xEF;
  7497  0F99  30EF               	movlw	239
  7498  0F9A  00C3               	movwf	67	;volatile
  7499  0F9B                     l3642:
  7500                           
  7501                           ;pin_manager.c: 83: ANSELE = 0x07;
  7502  0F9B  3007               	movlw	7
  7503  0F9C  00E4               	movwf	100	;volatile
  7504  0F9D                     l3644:
  7505                           
  7506                           ;pin_manager.c: 84: ANSELA = 0xEF;
  7507  0F9D  30EF               	movlw	239
  7508  0F9E  00B8               	movwf	56	;volatile
  7509                           
  7510                           ;pin_manager.c: 89: WPUD = 0x00;
  7511  0F9F  01DA               	clrf	90	;volatile
  7512                           
  7513                           ;pin_manager.c: 90: WPUE = 0x00;
  7514  0FA0  01E5               	clrf	101	;volatile
  7515                           
  7516                           ;pin_manager.c: 91: WPUB = 0x00;
  7517  0FA1  01C4               	clrf	68	;volatile
  7518  0FA2                     l3646:
  7519                           
  7520                           ;pin_manager.c: 92: WPUA = 0x01;
  7521  0FA2  3001               	movlw	1
  7522  0FA3  00B9               	movwf	57	;volatile
  7523  0FA4                     l3648:
  7524                           
  7525                           ;pin_manager.c: 93: WPUC = 0x00;
  7526  0FA4  01CF               	clrf	79	;volatile
  7527  0FA5                     l3650:
  7528                           
  7529                           ;pin_manager.c: 98: ODCONE = 0x00;
  7530  0FA5  01E6               	clrf	102	;volatile
  7531  0FA6                     l3652:
  7532                           
  7533                           ;pin_manager.c: 99: ODCONA = 0x00;
  7534  0FA6  01BA               	clrf	58	;volatile
  7535  0FA7                     l3654:
  7536                           
  7537                           ;pin_manager.c: 100: ODCONB = 0x00;
  7538  0FA7  01C5               	clrf	69	;volatile
  7539  0FA8                     l3656:
  7540                           
  7541                           ;pin_manager.c: 101: ODCONC = 0x00;
  7542  0FA8  01D0               	clrf	80	;volatile
  7543  0FA9                     l3658:
  7544                           
  7545                           ;pin_manager.c: 102: ODCOND = 0x00;
  7546  0FA9  01DB               	clrf	91	;volatile
  7547  0FAA                     l3660:
  7548                           
  7549                           ;pin_manager.c: 107: SLRCONA = 0xFF;
  7550  0FAA  30FF               	movlw	255
  7551  0FAB  00BB               	movwf	59	;volatile
  7552  0FAC                     l3662:
  7553                           
  7554                           ;pin_manager.c: 108: SLRCONB = 0xFF;
  7555  0FAC  30FF               	movlw	255
  7556  0FAD  00C6               	movwf	70	;volatile
  7557  0FAE                     l3664:
  7558                           
  7559                           ;pin_manager.c: 109: SLRCONC = 0xFF;
  7560  0FAE  30FF               	movlw	255
  7561  0FAF  00D1               	movwf	81	;volatile
  7562  0FB0                     l3666:
  7563                           
  7564                           ;pin_manager.c: 110: SLRCOND = 0xFF;
  7565  0FB0  30FF               	movlw	255
  7566  0FB1  00DC               	movwf	92	;volatile
  7567  0FB2                     l3668:
  7568                           
  7569                           ;pin_manager.c: 111: SLRCONE = 0x07;
  7570  0FB2  3007               	movlw	7
  7571  0FB3  00E7               	movwf	103	;volatile
  7572  0FB4                     l3670:
  7573                           
  7574                           ;pin_manager.c: 120: SSP1CLKPPS = 0x13;
  7575  0FB4  3013               	movlw	19
  7576  0FB5  003D               	movlb	29	; select bank29
  7577  0FB6  00C5               	movwf	69	;volatile
  7578  0FB7                     l3672:
  7579                           
  7580                           ;pin_manager.c: 121: RC3PPS = 0x14;
  7581  0FB7  3014               	movlw	20
  7582  0FB8  003E               	movlb	30	; select bank30
  7583  0FB9  00A3               	movwf	35	;volatile
  7584  0FBA                     l3674:
  7585                           
  7586                           ;pin_manager.c: 122: RC4PPS = 0x15;
  7587  0FBA  3015               	movlw	21
  7588  0FBB  00A4               	movwf	36	;volatile
  7589  0FBC                     l3676:
  7590                           
  7591                           ;pin_manager.c: 123: SSP1DATPPS = 0x14;
  7592  0FBC  3014               	movlw	20
  7593  0FBD  003D               	movlb	29	; select bank29
  7594  0FBE  00C6               	movwf	70	;volatile
  7595  0FBF                     l120:
  7596  0FBF  0008               	return
  7597  0FC0                     __end_of_PIN_MANAGER_Initialize:
  7598                           
  7599                           	psect	text11
  7600  0DDD                     __ptext11:	
  7601 ;; *************** function _OSCILLATOR_Initialize *****************
  7602 ;; Defined at:
  7603 ;;		line 60 in file "mcc_generated_files/mcc.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;		None
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;		None
  7608 ;; Return value:  Size  Location     Type
  7609 ;;                  1    wreg      void 
  7610 ;; Registers used:
  7611 ;;		wreg, status,2
  7612 ;; Tracked objects:
  7613 ;;		On entry : 0/0
  7614 ;;		On exit  : 0/0
  7615 ;;		Unchanged: 0/0
  7616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7621 ;;Total ram usage:        0 bytes
  7622 ;; Hardware stack levels used:    1
  7623 ;; Hardware stack levels required when called:    7
  7624 ;; This function calls:
  7625 ;;		Nothing
  7626 ;; This function is called by:
  7627 ;;		_SYSTEM_Initialize
  7628 ;; This function uses a non-reentrant model
  7629 ;;
  7630                           
  7631                           
  7632                           ;psect for function _OSCILLATOR_Initialize
  7633  0DDD                     _OSCILLATOR_Initialize:
  7634  0DDD                     l3680:	
  7635                           ;incstack = 0
  7636                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7637                           
  7638                           
  7639                           ;mcc.c: 63: OSCCON1 = 0x62;
  7640  0DDD  3062               	movlw	98
  7641  0DDE  0031               	movlb	17	; select bank17
  7642  0DDF  008D               	movwf	13	;volatile
  7643  0DE0                     l3682:
  7644                           
  7645                           ;mcc.c: 65: OSCCON3 = 0x00;
  7646  0DE0  018F               	clrf	15	;volatile
  7647  0DE1                     l3684:
  7648                           
  7649                           ;mcc.c: 67: OSCEN = 0x00;
  7650  0DE1  0191               	clrf	17	;volatile
  7651                           
  7652                           ;mcc.c: 69: OSCFRQ = 0x02;
  7653  0DE2  3002               	movlw	2
  7654  0DE3  0093               	movwf	19	;volatile
  7655  0DE4                     l3686:
  7656                           
  7657                           ;mcc.c: 71: OSCTUNE = 0x00;
  7658  0DE4  0192               	clrf	18	;volatile
  7659  0DE5                     l167:
  7660  0DE5  0008               	return
  7661  0DE6                     __end_of_OSCILLATOR_Initialize:
  7662                           
  7663                           	psect	text12
  7664  07E7                     __ptext12:	
  7665 ;; *************** function _ADCC_Initialize *****************
  7666 ;; Defined at:
  7667 ;;		line 63 in file "mcc_generated_files/adcc.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;		None
  7670 ;; Auto vars:     Size  Location     Type
  7671 ;;		None
  7672 ;; Return value:  Size  Location     Type
  7673 ;;                  1    wreg      void 
  7674 ;; Registers used:
  7675 ;;		wreg, status,2
  7676 ;; Tracked objects:
  7677 ;;		On entry : 0/0
  7678 ;;		On exit  : 0/0
  7679 ;;		Unchanged: 0/0
  7680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7685 ;;Total ram usage:        0 bytes
  7686 ;; Hardware stack levels used:    1
  7687 ;; Hardware stack levels required when called:    7
  7688 ;; This function calls:
  7689 ;;		Nothing
  7690 ;; This function is called by:
  7691 ;;		_SYSTEM_Initialize
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695                           
  7696                           ;psect for function _ADCC_Initialize
  7697  07E7                     _ADCC_Initialize:
  7698  07E7                     l3688:	
  7699                           ;incstack = 0
  7700                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  7701                           
  7702                           
  7703                           ;adcc.c: 67: ADLTHL = 0x00;
  7704  07E7  0022               	movlb	2	; select bank2
  7705  07E8  018E               	clrf	14	;volatile
  7706                           
  7707                           ;adcc.c: 69: ADLTHH = 0x00;
  7708  07E9  018F               	clrf	15	;volatile
  7709                           
  7710                           ;adcc.c: 71: ADUTHL = 0x00;
  7711  07EA  0190               	clrf	16	;volatile
  7712                           
  7713                           ;adcc.c: 73: ADUTHH = 0x00;
  7714  07EB  0191               	clrf	17	;volatile
  7715                           
  7716                           ;adcc.c: 75: ADSTPTL = 0x00;
  7717  07EC  0192               	clrf	18	;volatile
  7718                           
  7719                           ;adcc.c: 77: ADSTPTH = 0x00;
  7720  07ED  0193               	clrf	19	;volatile
  7721                           
  7722                           ;adcc.c: 79: ADRPT = 0x00;
  7723  07EE  018D               	clrf	13	;volatile
  7724                           
  7725                           ;adcc.c: 81: ADPCH = 0x00;
  7726  07EF  0021               	movlb	1	; select bank1
  7727  07F0  019E               	clrf	30	;volatile
  7728                           
  7729                           ;adcc.c: 83: ADCAP = 0x00;
  7730  07F1  019B               	clrf	27	;volatile
  7731                           
  7732                           ;adcc.c: 85: ADCON1 = 0x00;
  7733  07F2  0194               	clrf	20	;volatile
  7734                           
  7735                           ;adcc.c: 87: ADCON2 = 0x00;
  7736  07F3  0195               	clrf	21	;volatile
  7737                           
  7738                           ;adcc.c: 89: ADCON3 = 0x00;
  7739  07F4  0196               	clrf	22	;volatile
  7740                           
  7741                           ;adcc.c: 91: ADSTAT = 0x00;
  7742  07F5  0197               	clrf	23	;volatile
  7743                           
  7744                           ;adcc.c: 93: ADREF = 0x00;
  7745  07F6  019A               	clrf	26	;volatile
  7746                           
  7747                           ;adcc.c: 95: ADACT = 0x00;
  7748  07F7  0199               	clrf	25	;volatile
  7749                           
  7750                           ;adcc.c: 97: ADCLK = 0x00;
  7751  07F8  0198               	clrf	24	;volatile
  7752  07F9                     l3690:
  7753                           
  7754                           ;adcc.c: 99: ADCON0 = 0x80;
  7755  07F9  3080               	movlw	128
  7756  07FA  0093               	movwf	19	;volatile
  7757  07FB                     l3692:
  7758                           
  7759                           ;adcc.c: 101: ADACQ = 0xFF;
  7760  07FB  30FF               	movlw	255
  7761  07FC  009D               	movwf	29	;volatile
  7762  07FD                     l857:
  7763  07FD  0008               	return
  7764  07FE                     __end_of_ADCC_Initialize:
  7765                           
  7766                           	psect	text13
  7767  05C8                     __ptext13:	
  7768 ;; *************** function _LCDinit *****************
  7769 ;; Defined at:
  7770 ;;		line 150 in file "main.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;		None
  7773 ;; Auto vars:     Size  Location     Type
  7774 ;;		None
  7775 ;; Return value:  Size  Location     Type
  7776 ;;                  1    wreg      void 
  7777 ;; Registers used:
  7778 ;;		wreg, status,2, status,0, pclath, cstack
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7786 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7787 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7788 ;;Total ram usage:        1 bytes
  7789 ;; Hardware stack levels used:    1
  7790 ;; Hardware stack levels required when called:    9
  7791 ;; This function calls:
  7792 ;;		_LCDsend
  7793 ;;		_LCDsend2x4
  7794 ;; This function is called by:
  7795 ;;		_main
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           
  7800                           ;psect for function _LCDinit
  7801  05C8                     _LCDinit:
  7802  05C8                     l3470:	
  7803                           ;incstack = 0
  7804                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
  7805                           
  7806                           
  7807                           ;main.c: 152: _delay((unsigned long)((50)*(1000000/4000.0)));
  7808  05C8  3011               	movlw	17
  7809  05C9  0021               	movlb	1	; select bank1
  7810  05CA  00A8               	movwf	??_LCDinit^(0+128)
  7811  05CB  303A               	movlw	58
  7812  05CC                     u3617:
  7813  05CC  0B89               	decfsz	9,f
  7814  05CD  2DCC               	goto	u3617
  7815  05CE  0BA8               	decfsz	??_LCDinit^(0+128),f
  7816  05CF  2DCC               	goto	u3617
  7817  05D0  0000               	nop
  7818  05D1                     l3472:
  7819                           
  7820                           ;main.c: 153: LCDsend(0x30);
  7821  05D1  3030               	movlw	48
  7822  05D2  3186  26FA  3185   	fcall	_LCDsend
  7823  05D5                     l3474:
  7824                           
  7825                           ;main.c: 154: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  7826  05D5  3034               	movlw	52
  7827  05D6  3186  26FA  3185   	fcall	_LCDsend
  7828  05D9  3029               	movlw	41
  7829  05DA                     u3627:
  7830  05DA  0B89               	decfsz	9,f
  7831  05DB  2DDA               	goto	u3627
  7832  05DC  3200               	nop2
  7833  05DD                     l3476:
  7834  05DD  3030               	movlw	48
  7835  05DE  3186  26FA  3185   	fcall	_LCDsend
  7836  05E1                     l3478:
  7837                           
  7838                           ;main.c: 155: _delay((unsigned long)((5)*(1000000/4000.0)));
  7839  05E1  30FA               	movlw	250
  7840  05E2                     u3637:
  7841  05E2  3200               	nop2
  7842  05E3  0B89               	decfsz	9,f
  7843  05E4  2DE2               	goto	u3637
  7844                           
  7845                           ;main.c: 156: LCDsend(0x30);
  7846  05E5  3030               	movlw	48
  7847  05E6  3186  26FA  3185   	fcall	_LCDsend
  7848                           
  7849                           ;main.c: 157: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  7850  05E9  3034               	movlw	52
  7851  05EA  3186  26FA  3185   	fcall	_LCDsend
  7852  05ED                     l3480:
  7853  05ED  3029               	movlw	41
  7854  05EE                     u3647:
  7855  05EE  0B89               	decfsz	9,f
  7856  05EF  2DEE               	goto	u3647
  7857  05F0  3200               	nop2
  7858  05F1                     l3482:
  7859  05F1  3030               	movlw	48
  7860  05F2  3186  26FA  3185   	fcall	_LCDsend
  7861                           
  7862                           ;main.c: 158: _delay((unsigned long)((100)*(1000000/4000000.0)));
  7863  05F5  3008               	movlw	8
  7864  05F6                     u3657:
  7865  05F6  0B89               	decfsz	9,f
  7866  05F7  2DF6               	goto	u3657
  7867  05F8  0000               	nop
  7868  05F9                     l3484:
  7869                           
  7870                           ;main.c: 159: LCDsend(0x30);
  7871  05F9  3030               	movlw	48
  7872  05FA  3186  26FA  3185   	fcall	_LCDsend
  7873  05FD                     l3486:
  7874                           
  7875                           ;main.c: 160: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  7876  05FD  3034               	movlw	52
  7877  05FE  3186  26FA  3185   	fcall	_LCDsend
  7878  0601  3029               	movlw	41
  7879  0602                     u3667:
  7880  0602  0B89               	decfsz	9,f
  7881  0603  2E02               	goto	u3667
  7882  0604  3200               	nop2
  7883  0605                     l3488:
  7884  0605  3030               	movlw	48
  7885  0606  3186  26FA  3185   	fcall	_LCDsend
  7886  0609                     l3490:
  7887                           
  7888                           ;main.c: 161: _delay((unsigned long)((100)*(1000000/4000000.0)));
  7889  0609  3008               	movlw	8
  7890  060A                     u3677:
  7891  060A  0B89               	decfsz	9,f
  7892  060B  2E0A               	goto	u3677
  7893  060C  0000               	nop
  7894                           
  7895                           ;main.c: 162: LCDsend(0x20);
  7896  060D  3020               	movlw	32
  7897  060E  3186  26FA  3185   	fcall	_LCDsend
  7898                           
  7899                           ;main.c: 163: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
  7900  0611  3024               	movlw	36
  7901  0612  3186  26FA  3185   	fcall	_LCDsend
  7902  0615                     l3492:
  7903  0615  3029               	movlw	41
  7904  0616                     u3687:
  7905  0616  0B89               	decfsz	9,f
  7906  0617  2E16               	goto	u3687
  7907  0618  3200               	nop2
  7908  0619                     l3494:
  7909  0619  3020               	movlw	32
  7910  061A  3186  26FA  3185   	fcall	_LCDsend
  7911                           
  7912                           ;main.c: 164: _delay((unsigned long)((5)*(1000000/4000.0)));
  7913  061D  30FA               	movlw	250
  7914  061E                     u3697:
  7915  061E  3200               	nop2
  7916  061F  0B89               	decfsz	9,f
  7917  0620  2E1E               	goto	u3697
  7918  0621                     l3496:
  7919                           
  7920                           ;main.c: 166: LCDsend2x4(0x28, 0);
  7921  0621  0021               	movlb	1	; select bank1
  7922  0622  01A2               	clrf	LCDsend2x4@mode^(0+128)
  7923  0623  3028               	movlw	40
  7924  0624  3182  22F1  3185   	fcall	_LCDsend2x4
  7925  0627                     l3498:
  7926                           
  7927                           ;main.c: 167: LCDsend2x4(0x06, 0);
  7928  0627  0021               	movlb	1	; select bank1
  7929  0628  01A2               	clrf	LCDsend2x4@mode^(0+128)
  7930  0629  3006               	movlw	6
  7931  062A  3182  22F1  3185   	fcall	_LCDsend2x4
  7932  062D                     l3500:
  7933                           
  7934                           ;main.c: 168: LCDsend2x4(0x0f, 0);
  7935  062D  0021               	movlb	1	; select bank1
  7936  062E  01A2               	clrf	LCDsend2x4@mode^(0+128)
  7937  062F  300F               	movlw	15
  7938  0630  3182  22F1  3185   	fcall	_LCDsend2x4
  7939  0633                     l3502:
  7940                           
  7941                           ;main.c: 169: LCDsend2x4(0x01, 0);
  7942  0633  0021               	movlb	1	; select bank1
  7943  0634  01A2               	clrf	LCDsend2x4@mode^(0+128)
  7944  0635  3001               	movlw	1
  7945  0636  3182  22F1  3185   	fcall	_LCDsend2x4
  7946                           
  7947                           ;main.c: 170: _delay((unsigned long)((2)*(1000000/4000.0)));
  7948  0639  30A6               	movlw	166
  7949  063A                     u3707:
  7950  063A  0B89               	decfsz	9,f
  7951  063B  2E3A               	goto	u3707
  7952  063C  3200               	nop2
  7953  063D                     l730:
  7954  063D  0008               	return
  7955  063E                     __end_of_LCDinit:
  7956                           
  7957                           	psect	text14
  7958  02F1                     __ptext14:	
  7959 ;; *************** function _LCDsend2x4 *****************
  7960 ;; Defined at:
  7961 ;;		line 127 in file "main.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;  c               1    wreg     unsigned char 
  7964 ;;  mode            1    2[BANK1 ] unsigned char 
  7965 ;; Auto vars:     Size  Location     Type
  7966 ;;  c               1    5[BANK1 ] unsigned char 
  7967 ;;  lc              1    7[BANK1 ] unsigned char 
  7968 ;;  hc              1    6[BANK1 ] unsigned char 
  7969 ;; Return value:  Size  Location     Type
  7970 ;;                  1    wreg      void 
  7971 ;; Registers used:
  7972 ;;		wreg, status,2, status,0, pclath, cstack
  7973 ;; Tracked objects:
  7974 ;;		On entry : 0/0
  7975 ;;		On exit  : 0/0
  7976 ;;		Unchanged: 0/0
  7977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7978 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7979 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7980 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7981 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7982 ;;Total ram usage:        6 bytes
  7983 ;; Hardware stack levels used:    1
  7984 ;; Hardware stack levels required when called:    8
  7985 ;; This function calls:
  7986 ;;		_WriteI2C
  7987 ;; This function is called by:
  7988 ;;		_LCDinit
  7989 ;; This function uses a non-reentrant model
  7990 ;;
  7991                           
  7992                           
  7993                           ;psect for function _LCDsend2x4
  7994  02F1                     _LCDsend2x4:
  7995                           
  7996                           ;incstack = 0
  7997                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
  7998                           ;LCDsend2x4@c stored from wreg
  7999  02F1  0021               	movlb	1	; select bank1
  8000  02F2  00A5               	movwf	LCDsend2x4@c^(0+128)
  8001  02F3                     l3284:
  8002                           
  8003                           ;main.c: 129: unsigned char hc;;main.c: 130: unsigned char lc;;main.c: 132: hc = c & 0xf
      +                          0;
  8004  02F3  0825               	movf	LCDsend2x4@c^(0+128),w
  8005  02F4  39F0               	andlw	240
  8006  02F5  00A3               	movwf	??_LCDsend2x4^(0+128)
  8007  02F6  0823               	movf	??_LCDsend2x4^(0+128),w
  8008  02F7  00A6               	movwf	LCDsend2x4@hc^(0+128)
  8009  02F8                     l3286:
  8010                           
  8011                           ;main.c: 133: lc = (c << 4) & 0xf0;
  8012  02F8  0825               	movf	LCDsend2x4@c^(0+128),w
  8013  02F9  00A3               	movwf	??_LCDsend2x4^(0+128)
  8014  02FA  3003               	movlw	3
  8015  02FB                     u2865:
  8016  02FB  35A3               	lslf	??_LCDsend2x4^(0+128),f
  8017  02FC  3EFF               	addlw	-1
  8018  02FD  1D03               	skipz
  8019  02FE  2AFB               	goto	u2865
  8020  02FF  3523               	lslf	??_LCDsend2x4^(0+128),w
  8021  0300  39F0               	andlw	240
  8022  0301  00A4               	movwf	(??_LCDsend2x4+1)^(0+128)
  8023  0302  0824               	movf	(??_LCDsend2x4+1)^(0+128),w
  8024  0303  00A7               	movwf	LCDsend2x4@lc^(0+128)
  8025  0304                     l3288:	
  8026                           ;main.c: 135: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8027                           
  8028  0304  0023               	movlb	3	; select bank3
  8029  0305  0C0F               	rrf	15,w	;volatile
  8030  0306  0C89               	rrf	9,f
  8031  0307  3901               	andlw	1
  8032  0308  0021               	movlb	1	; select bank1
  8033  0309  00A3               	movwf	??_LCDsend2x4^(0+128)
  8034  030A  0023               	movlb	3	; select bank3
  8035  030B  0811               	movf	17,w	;volatile
  8036  030C  391F               	andlw	31
  8037  030D  0021               	movlb	1	; select bank1
  8038  030E  0423               	iorwf	??_LCDsend2x4^(0+128),w
  8039  030F  1D03               	btfss	3,2
  8040  0310  2B12               	goto	u2871
  8041  0311  2B13               	goto	u2870
  8042  0312                     u2871:
  8043  0312  2B04               	goto	l3288
  8044  0313                     u2870:
  8045  0313                     l696:
  8046                           
  8047                           ;main.c: 136: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  8048  0313  0023               	movlb	3	; select bank3
  8049  0314  1411               	bsf	17,0	;volatile
  8050  0315                     l697:
  8051  0315  1811               	btfsc	17,0	;volatile
  8052  0316  2B18               	goto	u2881
  8053  0317  2B19               	goto	u2880
  8054  0318                     u2881:
  8055  0318  2B15               	goto	l697
  8056  0319                     u2880:
  8057  0319                     l3290:
  8058  0319  0023               	movlb	3	; select bank3
  8059  031A  0C0F               	rrf	15,w	;volatile
  8060  031B  0C89               	rrf	9,f
  8061  031C  3901               	andlw	1
  8062  031D  0021               	movlb	1	; select bank1
  8063  031E  00A3               	movwf	??_LCDsend2x4^(0+128)
  8064  031F  0023               	movlb	3	; select bank3
  8065  0320  0811               	movf	17,w	;volatile
  8066  0321  391F               	andlw	31
  8067  0322  0021               	movlb	1	; select bank1
  8068  0323  0423               	iorwf	??_LCDsend2x4^(0+128),w
  8069  0324  1D03               	btfss	3,2
  8070  0325  2B27               	goto	u2891
  8071  0326  2B28               	goto	u2890
  8072  0327                     u2891:
  8073  0327  2B19               	goto	l3290
  8074  0328                     u2890:
  8075  0328                     l3292:
  8076                           
  8077                           ;main.c: 137: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8078  0328  304E               	movlw	78
  8079  0329  3186  26A0  3182   	fcall	_WriteI2C
  8080  032C                     l3294:
  8081  032C  0023               	movlb	3	; select bank3
  8082  032D  0C0F               	rrf	15,w	;volatile
  8083  032E  0C89               	rrf	9,f
  8084  032F  3901               	andlw	1
  8085  0330  0021               	movlb	1	; select bank1
  8086  0331  00A3               	movwf	??_LCDsend2x4^(0+128)
  8087  0332  0023               	movlb	3	; select bank3
  8088  0333  0811               	movf	17,w	;volatile
  8089  0334  391F               	andlw	31
  8090  0335  0021               	movlb	1	; select bank1
  8091  0336  0423               	iorwf	??_LCDsend2x4^(0+128),w
  8092  0337  1D03               	btfss	3,2
  8093  0338  2B3A               	goto	u2901
  8094  0339  2B3B               	goto	u2900
  8095  033A                     u2901:
  8096  033A  2B2C               	goto	l3294
  8097  033B                     u2900:
  8098  033B                     l3296:
  8099                           
  8100                           ;main.c: 138: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  8101  033B  0826               	movf	LCDsend2x4@hc^(0+128),w
  8102  033C  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  8103  033D  3808               	iorlw	8
  8104  033E  3186  26A0  3182   	fcall	_WriteI2C
  8105  0341                     l3298:
  8106  0341  0023               	movlb	3	; select bank3
  8107  0342  0C0F               	rrf	15,w	;volatile
  8108  0343  0C89               	rrf	9,f
  8109  0344  3901               	andlw	1
  8110  0345  0021               	movlb	1	; select bank1
  8111  0346  00A3               	movwf	??_LCDsend2x4^(0+128)
  8112  0347  0023               	movlb	3	; select bank3
  8113  0348  0811               	movf	17,w	;volatile
  8114  0349  391F               	andlw	31
  8115  034A  0021               	movlb	1	; select bank1
  8116  034B  0423               	iorwf	??_LCDsend2x4^(0+128),w
  8117  034C  1D03               	btfss	3,2
  8118  034D  2B4F               	goto	u2911
  8119  034E  2B50               	goto	u2910
  8120  034F                     u2911:
  8121  034F  2B41               	goto	l3298
  8122  0350                     u2910:
  8123  0350                     l3300:
  8124                           
  8125                           ;main.c: 139: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
  8126  0350  0826               	movf	LCDsend2x4@hc^(0+128),w
  8127  0351  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  8128  0352  380C               	iorlw	12
  8129  0353  3186  26A0  3182   	fcall	_WriteI2C
  8130  0356                     l3302:
  8131  0356  0023               	movlb	3	; select bank3
  8132  0357  0C0F               	rrf	15,w	;volatile
  8133  0358  0C89               	rrf	9,f
  8134  0359  3901               	andlw	1
  8135  035A  0021               	movlb	1	; select bank1
  8136  035B  00A3               	movwf	??_LCDsend2x4^(0+128)
  8137  035C  0023               	movlb	3	; select bank3
  8138  035D  0811               	movf	17,w	;volatile
  8139  035E  391F               	andlw	31
  8140  035F  0021               	movlb	1	; select bank1
  8141  0360  0423               	iorwf	??_LCDsend2x4^(0+128),w
  8142  0361  1D03               	btfss	3,2
  8143  0362  2B64               	goto	u2921
  8144  0363  2B65               	goto	u2920
  8145  0364                     u2921:
  8146  0364  2B56               	goto	l3302
  8147  0365                     u2920:
  8148  0365                     l711:
  8149  0365                     l3304:	
  8150                           ;main.c: 140: _delay((unsigned long)((1)*(1000000/4000000.0)));
  8151                           
  8152                           
  8153                           ;main.c: 141: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  8154  0365  0021               	movlb	1	; select bank1
  8155  0366  0826               	movf	LCDsend2x4@hc^(0+128),w
  8156  0367  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  8157  0368  3808               	iorlw	8
  8158  0369  3186  26A0  3182   	fcall	_WriteI2C
  8159  036C                     l3306:
  8160  036C  0023               	movlb	3	; select bank3
  8161  036D  0C0F               	rrf	15,w	;volatile
  8162  036E  0C89               	rrf	9,f
  8163  036F  3901               	andlw	1
  8164  0370  0021               	movlb	1	; select bank1
  8165  0371  00A3               	movwf	??_LCDsend2x4^(0+128)
  8166  0372  0023               	movlb	3	; select bank3
  8167  0373  0811               	movf	17,w	;volatile
  8168  0374  391F               	andlw	31
  8169  0375  0021               	movlb	1	; select bank1
  8170  0376  0423               	iorwf	??_LCDsend2x4^(0+128),w
  8171  0377  1D03               	btfss	3,2
  8172  0378  2B7A               	goto	u2931
  8173  0379  2B7B               	goto	u2930
  8174  037A                     u2931:
  8175  037A  2B6C               	goto	l3306
  8176  037B                     u2930:
  8177  037B                     l3308:
  8178                           
  8179                           ;main.c: 142: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  8180  037B  0827               	movf	LCDsend2x4@lc^(0+128),w
  8181  037C  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  8182  037D  3808               	iorlw	8
  8183  037E  3186  26A0  3182   	fcall	_WriteI2C
  8184  0381                     l3310:
  8185  0381  0023               	movlb	3	; select bank3
  8186  0382  0C0F               	rrf	15,w	;volatile
  8187  0383  0C89               	rrf	9,f
  8188  0384  3901               	andlw	1
  8189  0385  0021               	movlb	1	; select bank1
  8190  0386  00A3               	movwf	??_LCDsend2x4^(0+128)
  8191  0387  0023               	movlb	3	; select bank3
  8192  0388  0811               	movf	17,w	;volatile
  8193  0389  391F               	andlw	31
  8194  038A  0021               	movlb	1	; select bank1
  8195  038B  0423               	iorwf	??_LCDsend2x4^(0+128),w
  8196  038C  1D03               	btfss	3,2
  8197  038D  2B8F               	goto	u2941
  8198  038E  2B90               	goto	u2940
  8199  038F                     u2941:
  8200  038F  2B81               	goto	l3310
  8201  0390                     u2940:
  8202  0390                     l3312:
  8203                           
  8204                           ;main.c: 143: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
  8205  0390  0827               	movf	LCDsend2x4@lc^(0+128),w
  8206  0391  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  8207  0392  380C               	iorlw	12
  8208  0393  3186  26A0  3182   	fcall	_WriteI2C
  8209  0396                     l3314:
  8210  0396  0023               	movlb	3	; select bank3
  8211  0397  0C0F               	rrf	15,w	;volatile
  8212  0398  0C89               	rrf	9,f
  8213  0399  3901               	andlw	1
  8214  039A  0021               	movlb	1	; select bank1
  8215  039B  00A3               	movwf	??_LCDsend2x4^(0+128)
  8216  039C  0023               	movlb	3	; select bank3
  8217  039D  0811               	movf	17,w	;volatile
  8218  039E  391F               	andlw	31
  8219  039F  0021               	movlb	1	; select bank1
  8220  03A0  0423               	iorwf	??_LCDsend2x4^(0+128),w
  8221  03A1  1D03               	btfss	3,2
  8222  03A2  2BA4               	goto	u2951
  8223  03A3  2BA5               	goto	u2950
  8224  03A4                     u2951:
  8225  03A4  2B96               	goto	l3314
  8226  03A5                     u2950:
  8227  03A5                     l720:
  8228  03A5                     l3316:	
  8229                           ;main.c: 144: _delay((unsigned long)((1)*(1000000/4000000.0)));
  8230                           
  8231                           
  8232                           ;main.c: 145: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  8233  03A5  0021               	movlb	1	; select bank1
  8234  03A6  0827               	movf	LCDsend2x4@lc^(0+128),w
  8235  03A7  0422               	iorwf	LCDsend2x4@mode^(0+128),w
  8236  03A8  3808               	iorlw	8
  8237  03A9  3186  26A0  3182   	fcall	_WriteI2C
  8238  03AC                     l3318:
  8239  03AC  0023               	movlb	3	; select bank3
  8240  03AD  0C0F               	rrf	15,w	;volatile
  8241  03AE  0C89               	rrf	9,f
  8242  03AF  3901               	andlw	1
  8243  03B0  0021               	movlb	1	; select bank1
  8244  03B1  00A3               	movwf	??_LCDsend2x4^(0+128)
  8245  03B2  0023               	movlb	3	; select bank3
  8246  03B3  0811               	movf	17,w	;volatile
  8247  03B4  391F               	andlw	31
  8248  03B5  0021               	movlb	1	; select bank1
  8249  03B6  0423               	iorwf	??_LCDsend2x4^(0+128),w
  8250  03B7  1D03               	btfss	3,2
  8251  03B8  2BBA               	goto	u2961
  8252  03B9  2BBB               	goto	u2960
  8253  03BA                     u2961:
  8254  03BA  2BAC               	goto	l3318
  8255  03BB                     u2960:
  8256  03BB                     l723:
  8257                           
  8258                           ;main.c: 146: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  8259  03BB  0023               	movlb	3	; select bank3
  8260  03BC  1511               	bsf	17,2	;volatile
  8261  03BD                     l724:
  8262  03BD  1911               	btfsc	17,2	;volatile
  8263  03BE  2BC0               	goto	u2971
  8264  03BF  2BC1               	goto	u2970
  8265  03C0                     u2971:
  8266  03C0  2BBD               	goto	l724
  8267  03C1                     u2970:
  8268  03C1                     l3320:
  8269                           
  8270                           ;main.c: 147: _delay((unsigned long)((50)*(1000000/4000000.0)));
  8271  03C1  3004               	movlw	4
  8272  03C2                     u3717:
  8273  03C2  0B89               	decfsz	9,f
  8274  03C3  2BC2               	goto	u3717
  8275  03C4                     l727:
  8276  03C4  0008               	return
  8277  03C5                     __end_of_LCDsend2x4:
  8278                           
  8279                           	psect	text15
  8280  06FA                     __ptext15:	
  8281 ;; *************** function _LCDsend *****************
  8282 ;; Defined at:
  8283 ;;		line 88 in file "main.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;  c               1    wreg     unsigned char 
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;  c               1    3[BANK1 ] unsigned char 
  8288 ;; Return value:  Size  Location     Type
  8289 ;;                  1    wreg      void 
  8290 ;; Registers used:
  8291 ;;		wreg, status,2, status,0, pclath, cstack
  8292 ;; Tracked objects:
  8293 ;;		On entry : 0/0
  8294 ;;		On exit  : 0/0
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8298 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8299 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8300 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8301 ;;Total ram usage:        2 bytes
  8302 ;; Hardware stack levels used:    1
  8303 ;; Hardware stack levels required when called:    8
  8304 ;; This function calls:
  8305 ;;		_WriteI2C
  8306 ;; This function is called by:
  8307 ;;		_LCDinit
  8308 ;; This function uses a non-reentrant model
  8309 ;;
  8310                           
  8311                           
  8312                           ;psect for function _LCDsend
  8313  06FA                     _LCDsend:
  8314                           
  8315                           ;incstack = 0
  8316                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
  8317                           ;LCDsend@c stored from wreg
  8318  06FA  0021               	movlb	1	; select bank1
  8319  06FB  00A3               	movwf	LCDsend@c^(0+128)
  8320  06FC                     l3270:
  8321  06FC                     l3272:	
  8322                           ;main.c: 90: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8323                           
  8324  06FC  0023               	movlb	3	; select bank3
  8325  06FD  0C0F               	rrf	15,w	;volatile
  8326  06FE  0C89               	rrf	9,f
  8327  06FF  3901               	andlw	1
  8328  0700  0021               	movlb	1	; select bank1
  8329  0701  00A2               	movwf	??_LCDsend^(0+128)
  8330  0702  0023               	movlb	3	; select bank3
  8331  0703  0811               	movf	17,w	;volatile
  8332  0704  391F               	andlw	31
  8333  0705  0021               	movlb	1	; select bank1
  8334  0706  0422               	iorwf	??_LCDsend^(0+128),w
  8335  0707  1D03               	btfss	3,2
  8336  0708  2F0A               	goto	u2801
  8337  0709  2F0B               	goto	u2800
  8338  070A                     u2801:
  8339  070A  2EFC               	goto	l3272
  8340  070B                     u2800:
  8341  070B                     l594:
  8342                           
  8343                           ;main.c: 91: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
  8344  070B  0023               	movlb	3	; select bank3
  8345  070C  1411               	bsf	17,0	;volatile
  8346  070D                     l595:
  8347  070D  1811               	btfsc	17,0	;volatile
  8348  070E  2F10               	goto	u2811
  8349  070F  2F11               	goto	u2810
  8350  0710                     u2811:
  8351  0710  2F0D               	goto	l595
  8352  0711                     u2810:
  8353  0711                     l3274:
  8354  0711  0023               	movlb	3	; select bank3
  8355  0712  0C0F               	rrf	15,w	;volatile
  8356  0713  0C89               	rrf	9,f
  8357  0714  3901               	andlw	1
  8358  0715  0021               	movlb	1	; select bank1
  8359  0716  00A2               	movwf	??_LCDsend^(0+128)
  8360  0717  0023               	movlb	3	; select bank3
  8361  0718  0811               	movf	17,w	;volatile
  8362  0719  391F               	andlw	31
  8363  071A  0021               	movlb	1	; select bank1
  8364  071B  0422               	iorwf	??_LCDsend^(0+128),w
  8365  071C  1D03               	btfss	3,2
  8366  071D  2F1F               	goto	u2821
  8367  071E  2F20               	goto	u2820
  8368  071F                     u2821:
  8369  071F  2F11               	goto	l3274
  8370  0720                     u2820:
  8371  0720                     l3276:
  8372                           
  8373                           ;main.c: 92: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8374  0720  304E               	movlw	78
  8375  0721  3186  26A0  3186   	fcall	_WriteI2C
  8376  0724                     l3278:
  8377  0724  0023               	movlb	3	; select bank3
  8378  0725  0C0F               	rrf	15,w	;volatile
  8379  0726  0C89               	rrf	9,f
  8380  0727  3901               	andlw	1
  8381  0728  0021               	movlb	1	; select bank1
  8382  0729  00A2               	movwf	??_LCDsend^(0+128)
  8383  072A  0023               	movlb	3	; select bank3
  8384  072B  0811               	movf	17,w	;volatile
  8385  072C  391F               	andlw	31
  8386  072D  0021               	movlb	1	; select bank1
  8387  072E  0422               	iorwf	??_LCDsend^(0+128),w
  8388  072F  1D03               	btfss	3,2
  8389  0730  2F32               	goto	u2831
  8390  0731  2F33               	goto	u2830
  8391  0732                     u2831:
  8392  0732  2F24               	goto	l3278
  8393  0733                     u2830:
  8394  0733                     l3280:
  8395                           
  8396                           ;main.c: 93: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8397  0733  0823               	movf	LCDsend@c^(0+128),w
  8398  0734  3186  26A0  3186   	fcall	_WriteI2C
  8399  0737                     l3282:
  8400  0737  0023               	movlb	3	; select bank3
  8401  0738  0C0F               	rrf	15,w	;volatile
  8402  0739  0C89               	rrf	9,f
  8403  073A  3901               	andlw	1
  8404  073B  0021               	movlb	1	; select bank1
  8405  073C  00A2               	movwf	??_LCDsend^(0+128)
  8406  073D  0023               	movlb	3	; select bank3
  8407  073E  0811               	movf	17,w	;volatile
  8408  073F  391F               	andlw	31
  8409  0740  0021               	movlb	1	; select bank1
  8410  0741  0422               	iorwf	??_LCDsend^(0+128),w
  8411  0742  1D03               	btfss	3,2
  8412  0743  2F45               	goto	u2841
  8413  0744  2F46               	goto	u2840
  8414  0745                     u2841:
  8415  0745  2F37               	goto	l3282
  8416  0746                     u2840:
  8417  0746                     l606:
  8418                           
  8419                           ;main.c: 94: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  8420  0746  0023               	movlb	3	; select bank3
  8421  0747  1511               	bsf	17,2	;volatile
  8422  0748                     l607:
  8423  0748  1911               	btfsc	17,2	;volatile
  8424  0749  2F4B               	goto	u2851
  8425  074A  2F4C               	goto	u2850
  8426  074B                     u2851:
  8427  074B  2F48               	goto	l607
  8428  074C                     u2850:
  8429  074C                     l610:
  8430  074C  0008               	return
  8431  074D                     __end_of_LCDsend:
  8432                           
  8433                           	psect	text16
  8434  06A0                     __ptext16:	
  8435 ;; *************** function _WriteI2C *****************
  8436 ;; Defined at:
  8437 ;;		line 47 in file "I2C/i2c.c"
  8438 ;; Parameters:    Size  Location     Type
  8439 ;;  data_out        1    wreg     unsigned char 
  8440 ;; Auto vars:     Size  Location     Type
  8441 ;;  data_out        1    1[BANK1 ] unsigned char 
  8442 ;; Return value:  Size  Location     Type
  8443 ;;                  1    wreg      char 
  8444 ;; Registers used:
  8445 ;;		wreg, status,2, status,0
  8446 ;; Tracked objects:
  8447 ;;		On entry : 0/0
  8448 ;;		On exit  : 0/0
  8449 ;;		Unchanged: 0/0
  8450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8452 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8453 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8454 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8455 ;;Total ram usage:        2 bytes
  8456 ;; Hardware stack levels used:    1
  8457 ;; Hardware stack levels required when called:    7
  8458 ;; This function calls:
  8459 ;;		Nothing
  8460 ;; This function is called by:
  8461 ;;		_LCDsend
  8462 ;;		_LCDsend2x4
  8463 ;;		_LCDrecv
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           
  8468                           ;psect for function _WriteI2C
  8469  06A0                     _WriteI2C:
  8470                           
  8471                           ;incstack = 0
  8472                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
  8473                           ;WriteI2C@data_out stored from wreg
  8474  06A0  0021               	movlb	1	; select bank1
  8475  06A1  00A1               	movwf	WriteI2C@data_out^(0+128)
  8476  06A2                     l2918:
  8477                           
  8478                           ;i2c.c: 49: SSP1BUF = data_out;
  8479  06A2  0821               	movf	WriteI2C@data_out^(0+128),w
  8480  06A3  0023               	movlb	3	; select bank3
  8481  06A4  008C               	movwf	12	;volatile
  8482  06A5                     l2920:
  8483                           
  8484                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
  8485  06A5  1F90               	btfss	16,7	;volatile
  8486  06A6  2EA8               	goto	u2241
  8487  06A7  2EA9               	goto	u2240
  8488  06A8                     u2241:
  8489  06A8  2EAA               	goto	l2926
  8490  06A9                     u2240:
  8491  06A9  2EF9               	goto	l30
  8492  06AA                     l2926:
  8493                           
  8494                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
  8495  06AA  300F               	movlw	15
  8496  06AB  0510               	andwf	16,w	;volatile
  8497  06AC  0021               	movlb	1	; select bank1
  8498  06AD  00A0               	movwf	??_WriteI2C^(0+128)
  8499  06AE  3008               	movlw	8
  8500  06AF  0620               	xorwf	??_WriteI2C^(0+128),w
  8501  06B0  1903               	btfsc	3,2
  8502  06B1  2EB3               	goto	u2251
  8503  06B2  2EB4               	goto	u2250
  8504  06B3                     u2251:
  8505  06B3  2ECD               	goto	l2938
  8506  06B4                     u2250:
  8507  06B4                     l2928:
  8508  06B4  300F               	movlw	15
  8509  06B5  0023               	movlb	3	; select bank3
  8510  06B6  0510               	andwf	16,w	;volatile
  8511  06B7  0021               	movlb	1	; select bank1
  8512  06B8  00A0               	movwf	??_WriteI2C^(0+128)
  8513  06B9  300B               	movlw	11
  8514  06BA  0620               	xorwf	??_WriteI2C^(0+128),w
  8515  06BB  1903               	btfsc	3,2
  8516  06BC  2EBE               	goto	u2261
  8517  06BD  2EBF               	goto	u2260
  8518  06BE                     u2261:
  8519  06BE  2ECD               	goto	l2938
  8520  06BF                     u2260:
  8521  06BF                     l2930:
  8522                           
  8523                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
  8524  06BF  0023               	movlb	3	; select bank3
  8525  06C0  1610               	bsf	16,4	;volatile
  8526  06C1                     l33:	
  8527                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
  8528                           
  8529  06C1  002E               	movlb	14	; select bank14
  8530  06C2  1C0F               	btfss	15,0	;volatile
  8531  06C3  2EC5               	goto	u2271
  8532  06C4  2EC6               	goto	u2270
  8533  06C5                     u2271:
  8534  06C5  2EC1               	goto	l33
  8535  06C6                     u2270:
  8536  06C6                     l35:
  8537                           
  8538                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
  8539  06C6  0023               	movlb	3	; select bank3
  8540  06C7  190F               	btfsc	15,2	;volatile
  8541  06C8  2ECA               	goto	u2281
  8542  06C9  2ECB               	goto	u2280
  8543  06CA                     u2281:
  8544  06CA  2EF9               	goto	l30
  8545  06CB                     u2280:
  8546  06CB                     l2932:
  8547  06CB  080F               	movf	15,w	;volatile
  8548  06CC  2EF9               	goto	l30
  8549  06CD                     l2938:
  8550                           
  8551                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
  8552  06CD  300F               	movlw	15
  8553  06CE  0023               	movlb	3	; select bank3
  8554  06CF  0510               	andwf	16,w	;volatile
  8555  06D0  0021               	movlb	1	; select bank1
  8556  06D1  00A0               	movwf	??_WriteI2C^(0+128)
  8557  06D2  3008               	movlw	8
  8558  06D3  0620               	xorwf	??_WriteI2C^(0+128),w
  8559  06D4  1903               	btfsc	3,2
  8560  06D5  2ED7               	goto	u2291
  8561  06D6  2ED8               	goto	u2290
  8562  06D7                     u2291:
  8563  06D7  2EE3               	goto	l42
  8564  06D8                     u2290:
  8565  06D8                     l2940:
  8566  06D8  300F               	movlw	15
  8567  06D9  0023               	movlb	3	; select bank3
  8568  06DA  0510               	andwf	16,w	;volatile
  8569  06DB  0021               	movlb	1	; select bank1
  8570  06DC  00A0               	movwf	??_WriteI2C^(0+128)
  8571  06DD  300B               	movlw	11
  8572  06DE  0620               	xorwf	??_WriteI2C^(0+128),w
  8573  06DF  1D03               	btfss	3,2
  8574  06E0  2EE2               	goto	u2301
  8575  06E1  2EE3               	goto	u2300
  8576  06E2                     u2301:
  8577  06E2  2EF9               	goto	l30
  8578  06E3                     u2300:
  8579  06E3                     l42:
  8580  06E3  0023               	movlb	3	; select bank3
  8581  06E4  180F               	btfsc	15,0	;volatile
  8582  06E5  2EE7               	goto	u2311
  8583  06E6  2EE8               	goto	u2310
  8584  06E7                     u2311:
  8585  06E7  2EE3               	goto	l42
  8586  06E8                     u2310:
  8587  06E8                     l2942:
  8588  06E8  0023               	movlb	3	; select bank3
  8589  06E9  0C0F               	rrf	15,w	;volatile
  8590  06EA  0C89               	rrf	9,f
  8591  06EB  3901               	andlw	1
  8592  06EC  0021               	movlb	1	; select bank1
  8593  06ED  00A0               	movwf	??_WriteI2C^(0+128)
  8594  06EE  0023               	movlb	3	; select bank3
  8595  06EF  0811               	movf	17,w	;volatile
  8596  06F0  391F               	andlw	31
  8597  06F1  0021               	movlb	1	; select bank1
  8598  06F2  0420               	iorwf	??_WriteI2C^(0+128),w
  8599  06F3  1D03               	btfss	3,2
  8600  06F4  2EF6               	goto	u2321
  8601  06F5  2EF7               	goto	u2320
  8602  06F6                     u2321:
  8603  06F6  2EE8               	goto	l2942
  8604  06F7                     u2320:
  8605  06F7                     l47:
  8606                           
  8607                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
  8608  06F7  0023               	movlb	3	; select bank3
  8609  06F8  0811               	movf	17,w	;volatile
  8610  06F9                     l30:
  8611  06F9  0008               	return
  8612  06FA                     __end_of_WriteI2C:
  8613                           
  8614                           	psect	intentry
  8615  0004                     __pintentry:	
  8616 ;; *************** function _INTERRUPT_InterruptManager *****************
  8617 ;; Defined at:
  8618 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8619 ;; Parameters:    Size  Location     Type
  8620 ;;		None
  8621 ;; Auto vars:     Size  Location     Type
  8622 ;;		None
  8623 ;; Return value:  Size  Location     Type
  8624 ;;                  1    wreg      void 
  8625 ;; Registers used:
  8626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8627 ;; Tracked objects:
  8628 ;;		On entry : 0/0
  8629 ;;		On exit  : 0/0
  8630 ;;		Unchanged: 0/0
  8631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8636 ;;Total ram usage:        0 bytes
  8637 ;; Hardware stack levels used:    1
  8638 ;; Hardware stack levels required when called:    6
  8639 ;; This function calls:
  8640 ;;		_TMR1_ISR
  8641 ;;		_TMR3_ISR
  8642 ;; This function is called by:
  8643 ;;		Interrupt level 1
  8644 ;; This function uses a non-reentrant model
  8645 ;;
  8646                           
  8647  0004                     _INTERRUPT_InterruptManager:
  8648                           
  8649                           ;incstack = 0
  8650  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8651                           
  8652                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8653  0005  3180               	pagesel	$
  8654  0006                     i1l3564:
  8655                           
  8656                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  8657  0006  1F0B               	btfss	11,6	;volatile
  8658  0007  2809               	goto	u348_21
  8659  0008  280A               	goto	u348_20
  8660  0009                     u348_21:
  8661  0009  2832               	goto	i1l344
  8662  000A                     u348_20:
  8663  000A                     i1l3566:
  8664                           
  8665                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE4bits.TMR3IE == 1 && PIR4bits
      +                          .TMR3IF == 1)
  8666  000A  002E               	movlb	14	; select bank14
  8667  000B  1D1A               	btfss	26,2	;volatile
  8668  000C  280E               	goto	u349_21
  8669  000D  280F               	goto	u349_20
  8670  000E                     u349_21:
  8671  000E  2817               	goto	i1l335
  8672  000F                     u349_20:
  8673  000F                     i1l3568:
  8674  000F  1D10               	btfss	16,2	;volatile
  8675  0010  2812               	goto	u350_21
  8676  0011  2813               	goto	u350_20
  8677  0012                     u350_21:
  8678  0012  2817               	goto	i1l335
  8679  0013                     u350_20:
  8680  0013                     i1l3570:
  8681                           
  8682                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: TMR3_ISR();
  8683  0013  318E  266B  3180   	fcall	_TMR3_ISR
  8684                           
  8685                           ;interrupt_manager.c: 60: }
  8686  0016  2832               	goto	i1l344
  8687  0017                     i1l335:
  8688                           
  8689                           ;interrupt_manager.c: 61: else if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
  8690  0017  1C1A               	btfss	26,0	;volatile
  8691  0018  281A               	goto	u351_21
  8692  0019  281B               	goto	u351_20
  8693  001A                     u351_21:
  8694  001A  2823               	goto	i1l337
  8695  001B                     u351_20:
  8696  001B                     i1l3572:
  8697  001B  1C10               	btfss	16,0	;volatile
  8698  001C  281E               	goto	u352_21
  8699  001D  281F               	goto	u352_20
  8700  001E                     u352_21:
  8701  001E  2823               	goto	i1l337
  8702  001F                     u352_20:
  8703  001F                     i1l3574:
  8704                           
  8705                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR1_ISR();
  8706  001F  318E  2654  3180   	fcall	_TMR1_ISR
  8707                           
  8708                           ;interrupt_manager.c: 64: }
  8709  0022  2832               	goto	i1l344
  8710  0023                     i1l337:
  8711                           
  8712                           ;interrupt_manager.c: 65: else if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
  8713  0023  1C99               	btfss	25,1	;volatile
  8714  0024  2826               	goto	u353_21
  8715  0025  2827               	goto	u353_20
  8716  0026                     u353_21:
  8717  0026  282C               	goto	i1l339
  8718  0027                     u353_20:
  8719  0027                     i1l3576:
  8720                           
  8721                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: i2c1_driver_busCollisionISR();
  8722  0027  1C8F               	btfss	15,1	;volatile
  8723  0028  282A               	goto	u354_21
  8724  0029  282B               	goto	u354_20
  8725  002A                     u354_21:
  8726  002A  282C               	goto	i1l339
  8727  002B                     u354_20:
  8728  002B  2832               	goto	i1l344
  8729  002C                     i1l339:
  8730                           
  8731                           ;interrupt_manager.c: 69: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
  8732  002C  1C19               	btfss	25,0	;volatile
  8733  002D  282F               	goto	u355_21
  8734  002E  2830               	goto	u355_20
  8735  002F                     u355_21:
  8736  002F  2832               	goto	i1l338
  8737  0030                     u355_20:
  8738  0030                     i1l3580:
  8739                           
  8740                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: i2c1_driver_i2cISR();
  8741  0030  080F               	movf	15,w	;volatile
  8742  0031  2832               	goto	i1l344
  8743  0032                     i1l338:
  8744  0032                     i1l344:
  8745  0032  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8746  0033  0009               	retfie
  8747  0034                     __end_of_INTERRUPT_InterruptManager:
  8748                           
  8749                           	psect	text18
  8750  0E6B                     __ptext18:	
  8751 ;; *************** function _TMR3_ISR *****************
  8752 ;; Defined at:
  8753 ;;		line 164 in file "mcc_generated_files/tmr3.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;		None
  8756 ;; Auto vars:     Size  Location     Type
  8757 ;;		None
  8758 ;; Return value:  Size  Location     Type
  8759 ;;                  1    wreg      void 
  8760 ;; Registers used:
  8761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8762 ;; Tracked objects:
  8763 ;;		On entry : 0/0
  8764 ;;		On exit  : 0/0
  8765 ;;		Unchanged: 0/0
  8766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8771 ;;Total ram usage:        0 bytes
  8772 ;; Hardware stack levels used:    1
  8773 ;; Hardware stack levels required when called:    5
  8774 ;; This function calls:
  8775 ;;		Absolute function
  8776 ;;		_TMR3_DefaultInterruptHandler
  8777 ;;		_TMR3_WriteTimer
  8778 ;;		_menuLCD_ISR
  8779 ;; This function is called by:
  8780 ;;		_INTERRUPT_InterruptManager
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           
  8785                           ;psect for function _TMR3_ISR
  8786  0E6B                     _TMR3_ISR:
  8787  0E6B                     i1l3388:	
  8788                           ;incstack = 0
  8789                           ; Regs used in _TMR3_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8790                           
  8791                           
  8792                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
  8793  0E6B  002E               	movlb	14	; select bank14
  8794  0E6C  1110               	bcf	16,2	;volatile
  8795  0E6D                     i1l3390:
  8796                           
  8797                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
  8798  0E6D  0020               	movlb	0	; select bank0
  8799  0E6E  0857               	movf	_timer3ReloadVal+1,w	;volatile
  8800  0E6F  00F1               	movwf	TMR3_WriteTimer@timerVal+1
  8801  0E70  0856               	movf	_timer3ReloadVal,w	;volatile
  8802  0E71  00F0               	movwf	TMR3_WriteTimer@timerVal
  8803  0E72  318E  260C  318E   	fcall	_TMR3_WriteTimer
  8804  0E75                     i1l3392:
  8805                           
  8806                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
  8807  0E75  0020               	movlb	0	; select bank0
  8808  0E76  0854               	movf	_TMR3_InterruptHandler,w
  8809  0E77  0455               	iorwf	_TMR3_InterruptHandler+1,w
  8810  0E78  1903               	btfsc	3,2
  8811  0E79  2E7B               	goto	u302_21
  8812  0E7A  2E7C               	goto	u302_20
  8813  0E7B                     u302_21:
  8814  0E7B  2E81               	goto	i1l466
  8815  0E7C                     u302_20:
  8816  0E7C                     i1l3394:
  8817                           
  8818                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
  8819  0E7C  0855               	movf	_TMR3_InterruptHandler+1,w
  8820  0E7D  008A               	movwf	10
  8821  0E7E  0854               	movf	_TMR3_InterruptHandler,w
  8822  0E7F  000A               	callw
  8823  0E80  318E               	pagesel	$
  8824  0E81                     i1l466:
  8825  0E81  0008               	return
  8826  0E82                     __end_of_TMR3_ISR:
  8827                           
  8828                           	psect	text19
  8829  07FE                     __ptext19:	
  8830 ;; *************** function _TMR3_DefaultInterruptHandler *****************
  8831 ;; Defined at:
  8832 ;;		line 182 in file "mcc_generated_files/tmr3.c"
  8833 ;; Parameters:    Size  Location     Type
  8834 ;;		None
  8835 ;; Auto vars:     Size  Location     Type
  8836 ;;		None
  8837 ;; Return value:  Size  Location     Type
  8838 ;;                  1    wreg      void 
  8839 ;; Registers used:
  8840 ;;		None
  8841 ;; Tracked objects:
  8842 ;;		On entry : 0/0
  8843 ;;		On exit  : 0/0
  8844 ;;		Unchanged: 0/0
  8845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8850 ;;Total ram usage:        0 bytes
  8851 ;; Hardware stack levels used:    1
  8852 ;; This function calls:
  8853 ;;		Nothing
  8854 ;; This function is called by:
  8855 ;;		_TMR3_Initialize
  8856 ;;		_TMR3_ISR
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           
  8861                           ;psect for function _TMR3_DefaultInterruptHandler
  8862  07FE                     _TMR3_DefaultInterruptHandler:
  8863  07FE                     i1l472:	
  8864                           ;incstack = 0
  8865                           ; Regs used in _TMR3_DefaultInterruptHandler: []
  8866                           
  8867  07FE  0008               	return
  8868  07FF                     __end_of_TMR3_DefaultInterruptHandler:
  8869                           
  8870                           	psect	text20
  8871  063E                     __ptext20:	
  8872 ;; *************** function _menuLCD_ISR *****************
  8873 ;; Defined at:
  8874 ;;		line 241 in file "main.c"
  8875 ;; Parameters:    Size  Location     Type
  8876 ;;		None
  8877 ;; Auto vars:     Size  Location     Type
  8878 ;;  str             8   23[BANK0 ] unsigned char [8]
  8879 ;;  l               5   31[BANK0 ] unsigned char [5]
  8880 ;;  tt              4   36[BANK0 ] unsigned char [4]
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  1    wreg      void 
  8883 ;; Registers used:
  8884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8891 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8892 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8893 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8894 ;;Total ram usage:       19 bytes
  8895 ;; Hardware stack levels used:    1
  8896 ;; Hardware stack levels required when called:    4
  8897 ;; This function calls:
  8898 ;;		_LCDcmd
  8899 ;;		_LCDstr
  8900 ;;		_sprintf
  8901 ;; This function is called by:
  8902 ;;		_main
  8903 ;;		_TMR3_ISR
  8904 ;; This function uses a non-reentrant model
  8905 ;;
  8906                           
  8907                           
  8908                           ;psect for function _menuLCD_ISR
  8909  063E                     _menuLCD_ISR:
  8910  063E                     i1l3342:	
  8911                           ;incstack = 0
  8912                           ; Regs used in _menuLCD_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8913                           
  8914                           
  8915                           ;main.c: 242: char str[8];;main.c: 243: sprintf(str, "%02d:%02d:%02d", t.h,t.m,t.s);
  8916  063E  3000               	movlw	low (STR_1| (0+32768))
  8917  063F  0020               	movlb	0	; select bank0
  8918  0640  00A0               	movwf	sprintf@f
  8919  0641  3090               	movlw	high (STR_1| (0+32768))
  8920  0642  00A1               	movwf	sprintf@f+1
  8921  0643  0849               	movf	_t+1,w
  8922  0644  00A3               	movwf	?_sprintf+3
  8923  0645  0848               	movf	_t,w
  8924  0646  00A2               	movwf	?_sprintf+2
  8925  0647  084B               	movf	_t+3,w
  8926  0648  00A5               	movwf	?_sprintf+5
  8927  0649  084A               	movf	_t+2,w
  8928  064A  00A4               	movwf	?_sprintf+4
  8929  064B  084D               	movf	_t+5,w
  8930  064C  00A7               	movwf	?_sprintf+7
  8931  064D  084C               	movf	_t+4,w
  8932  064E  00A6               	movwf	?_sprintf+6
  8933  064F  3037               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
  8934  0650  3180  2047  3186   	fcall	_sprintf
  8935  0653                     i1l3344:
  8936                           
  8937                           ;main.c: 245: LCDcmd(0x80);
  8938  0653  3080               	movlw	128
  8939  0654  318D  25C6  3186   	fcall	_LCDcmd
  8940  0657                     i1l3346:
  8941                           
  8942                           ;main.c: 246: LCDstr(str);
  8943  0657  3037               	movlw	low menuLCD_ISR@str
  8944  0658  00F9               	movwf	LCDstr@p
  8945  0659  3000               	movlw	high menuLCD_ISR@str
  8946  065A  00FA               	movwf	LCDstr@p+1
  8947  065B  318E  269C  3186   	fcall	_LCDstr
  8948  065E                     i1l3348:
  8949                           
  8950                           ;main.c: 248: LCDcmd(0x8B);
  8951  065E  308B               	movlw	139
  8952  065F  318D  25C6  3186   	fcall	_LCDcmd
  8953  0662                     i1l3350:
  8954                           
  8955                           ;main.c: 249: LCDstr("CTL ?");
  8956  0662  3020               	movlw	low (STR_2| (0+32768))
  8957  0663  00F9               	movwf	LCDstr@p
  8958  0664  3090               	movlw	high (STR_2| (0+32768))
  8959  0665  00FA               	movwf	LCDstr@p+1
  8960  0666  318E  269C  3186   	fcall	_LCDstr
  8961  0669                     i1l3352:
  8962                           
  8963                           ;main.c: 251: LCDcmd(0xc0);
  8964  0669  30C0               	movlw	192
  8965  066A  318D  25C6  3186   	fcall	_LCDcmd
  8966  066D                     i1l3354:
  8967                           
  8968                           ;main.c: 252: char tt[4];;main.c: 253: sprintf(tt, "%02d C", c);
  8969  066D  3019               	movlw	low (STR_3| (0+32768))
  8970  066E  0020               	movlb	0	; select bank0
  8971  066F  00A0               	movwf	sprintf@f
  8972  0670  3090               	movlw	high (STR_3| (0+32768))
  8973  0671  00A1               	movwf	sprintf@f+1
  8974  0672  0853               	movf	_c,w
  8975  0673  00B5               	movwf	??_menuLCD_ISR
  8976  0674  01B6               	clrf	??_menuLCD_ISR+1
  8977  0675  0835               	movf	??_menuLCD_ISR,w
  8978  0676  00A2               	movwf	?_sprintf+2
  8979  0677  0836               	movf	??_menuLCD_ISR+1,w
  8980  0678  00A3               	movwf	?_sprintf+3
  8981  0679  3044               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
  8982  067A  3180  2047  3186   	fcall	_sprintf
  8983  067D                     i1l3356:
  8984                           
  8985                           ;main.c: 254: LCDstr(tt);
  8986  067D  3044               	movlw	low menuLCD_ISR@tt
  8987  067E  00F9               	movwf	LCDstr@p
  8988  067F  3000               	movlw	high menuLCD_ISR@tt
  8989  0680  00FA               	movwf	LCDstr@p+1
  8990  0681  318E  269C  3186   	fcall	_LCDstr
  8991  0684                     i1l3358:
  8992                           
  8993                           ;main.c: 256: LCDcmd(0xcb);
  8994  0684  30CB               	movlw	203
  8995  0685  318D  25C6  3186   	fcall	_LCDcmd
  8996  0688                     i1l3360:
  8997                           
  8998                           ;main.c: 257: char l[5];;main.c: 258: sprintf(l, "L %d", lum);
  8999  0688  3026               	movlw	low (STR_4| (0+32768))
  9000  0689  0020               	movlb	0	; select bank0
  9001  068A  00A0               	movwf	sprintf@f
  9002  068B  3090               	movlw	high (STR_4| (0+32768))
  9003  068C  00A1               	movwf	sprintf@f+1
  9004  068D  0852               	movf	_lum,w
  9005  068E  00B5               	movwf	??_menuLCD_ISR
  9006  068F  01B6               	clrf	??_menuLCD_ISR+1
  9007  0690  0835               	movf	??_menuLCD_ISR,w
  9008  0691  00A2               	movwf	?_sprintf+2
  9009  0692  0836               	movf	??_menuLCD_ISR+1,w
  9010  0693  00A3               	movwf	?_sprintf+3
  9011  0694  303F               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
  9012  0695  3180  2047  3186   	fcall	_sprintf
  9013  0698                     i1l3362:
  9014                           
  9015                           ;main.c: 259: LCDstr(l);
  9016  0698  303F               	movlw	low menuLCD_ISR@l
  9017  0699  00F9               	movwf	LCDstr@p
  9018  069A  3000               	movlw	high menuLCD_ISR@l
  9019  069B  00FA               	movwf	LCDstr@p+1
  9020  069C  318E  269C  3186   	fcall	_LCDstr
  9021  069F                     i1l761:
  9022  069F  0008               	return
  9023  06A0                     __end_of_menuLCD_ISR:
  9024                           
  9025                           	psect	text21
  9026  0047                     __ptext21:	
  9027 ;; *************** function _sprintf *****************
  9028 ;; Defined at:
  9029 ;;		line 505 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;  sp              1    wreg     PTR unsigned char 
  9032 ;;		 -> menuLCD_ISR@l(5), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
  9033 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  9034 ;;		 -> STR_4(5), STR_3(7), STR_1(15), 
  9035 ;; Auto vars:     Size  Location     Type
  9036 ;;  sp              1   19[BANK0 ] PTR unsigned char 
  9037 ;;		 -> menuLCD_ISR@l(5), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
  9038 ;;  tmpval          4    0        struct .
  9039 ;;  width           2   17[BANK0 ] int 
  9040 ;;  val             2   14[BANK0 ] unsigned int 
  9041 ;;  cp              2    0        PTR const unsigned char 
  9042 ;;  len             2    0        unsigned int 
  9043 ;;  c               1   20[BANK0 ] unsigned char 
  9044 ;;  flag            1   16[BANK0 ] unsigned char 
  9045 ;;  prec            1   13[BANK0 ] char 
  9046 ;;  ap              1   12[BANK0 ] PTR void [1]
  9047 ;;		 -> ?_sprintf(2), 
  9048 ;; Return value:  Size  Location     Type
  9049 ;;                  2    0[BANK0 ] int 
  9050 ;; Registers used:
  9051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9052 ;; Tracked objects:
  9053 ;;		On entry : 0/0
  9054 ;;		On exit  : 0/0
  9055 ;;		Unchanged: 0/0
  9056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9057 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9058 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9059 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9060 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9061 ;;Total ram usage:       21 bytes
  9062 ;; Hardware stack levels used:    1
  9063 ;; Hardware stack levels required when called:    1
  9064 ;; This function calls:
  9065 ;;		___lwdiv
  9066 ;;		___lwmod
  9067 ;;		___wmul
  9068 ;;		_isdigit
  9069 ;; This function is called by:
  9070 ;;		_menuLCD_ISR
  9071 ;; This function uses a non-reentrant model
  9072 ;;
  9073                           
  9074                           
  9075                           ;psect for function _sprintf
  9076  0047                     _sprintf:
  9077                           
  9078                           ;incstack = 0
  9079                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9080                           ;sprintf@sp stored from wreg
  9081  0047  0020               	movlb	0	; select bank0
  9082  0048  00B3               	movwf	sprintf@sp
  9083  0049                     i1l3026:
  9084                           
  9085                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
  9086  0049  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  9087  004A  00A8               	movwf	??_sprintf
  9088  004B  0828               	movf	??_sprintf,w
  9089  004C  00AC               	movwf	sprintf@ap
  9090                           
  9091                           ;doprnt.c: 553: while((c = *f++)) {
  9092  004D  29CB               	goto	i1l3130
  9093  004E                     i1l3028:
  9094                           
  9095                           ;doprnt.c: 555: if(c != '%')
  9096  004E  3025               	movlw	37
  9097  004F  0634               	xorwf	sprintf@c,w
  9098  0050  1903               	btfsc	3,2
  9099  0051  2853               	goto	u260_21
  9100  0052  2854               	goto	u260_20
  9101  0053                     u260_21:
  9102  0053  2860               	goto	i1l3034
  9103  0054                     u260_20:
  9104  0054                     i1l3030:
  9105                           
  9106                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  9107  0054  0834               	movf	sprintf@c,w
  9108  0055  00A8               	movwf	??_sprintf
  9109  0056  0833               	movf	sprintf@sp,w
  9110  0057  0086               	movwf	6
  9111  0058  0187               	clrf	7
  9112  0059  0828               	movf	??_sprintf,w
  9113  005A  0081               	movwf	1
  9114  005B                     i1l3032:
  9115  005B  3001               	movlw	1
  9116  005C  00A8               	movwf	??_sprintf
  9117  005D  0828               	movf	??_sprintf,w
  9118  005E  07B3               	addwf	sprintf@sp,f
  9119                           
  9120                           ;doprnt.c: 559: continue;
  9121  005F  29CB               	goto	i1l3130
  9122  0060                     i1l3034:
  9123                           
  9124                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  9125  0060  01B1               	clrf	sprintf@width
  9126  0061  01B2               	clrf	sprintf@width+1
  9127                           
  9128                           ;doprnt.c: 565: flag = 0;
  9129  0062  01B0               	clrf	sprintf@flag
  9130  0063  2869               	goto	i1l3040
  9131  0064                     i1l1102:	
  9132                           ;doprnt.c: 596: case '0':
  9133                           
  9134                           
  9135                           ;doprnt.c: 597: flag |= 0x04;
  9136  0064  1530               	bsf	sprintf@flag,2
  9137  0065                     i1l3036:
  9138                           
  9139                           ;doprnt.c: 598: f++;
  9140  0065  3001               	movlw	1
  9141  0066  07A0               	addwf	sprintf@f,f
  9142  0067  3000               	movlw	0
  9143  0068  3DA1               	addwfc	sprintf@f+1,f
  9144  0069                     i1l3040:	
  9145                           ;doprnt.c: 599: continue;
  9146                           
  9147  0069  0820               	movf	sprintf@f,w
  9148  006A  0084               	movwf	4
  9149  006B  0821               	movf	sprintf@f+1,w
  9150  006C  0085               	movwf	5
  9151  006D  0800               	movf	0,w	;code access
  9152                           
  9153                           ; Switch size 1, requested type "simple"
  9154                           ; Number of cases is 1, Range of values is 48 to 48
  9155                           ; switch strategies available:
  9156                           ; Name         Instructions Cycles
  9157                           ; simple_byte            4     3 (average)
  9158                           ; direct_byte           11     9 (fixed)
  9159                           ; jumptable            263     9 (fixed)
  9160                           ;	Chosen strategy is simple_byte
  9161  006E  3A30               	xorlw	48	; case 48
  9162  006F  1903               	skipnz
  9163  0070  2864               	goto	i1l1102
  9164  0071  2872               	goto	i1l3042
  9165  0072                     i1l3042:
  9166                           
  9167                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  9168  0072  0820               	movf	sprintf@f,w
  9169  0073  0084               	movwf	4
  9170  0074  0821               	movf	sprintf@f+1,w
  9171  0075  0085               	movwf	5
  9172  0076  0800               	movf	0,w	;code access
  9173  0077  318E  262F  3180   	fcall	_isdigit
  9174  007A  1C03               	btfss	3,0
  9175  007B  287D               	goto	u261_21
  9176  007C  287E               	goto	u261_20
  9177  007D                     u261_21:
  9178  007D  28B1               	goto	i1l3056
  9179  007E                     u261_20:
  9180  007E                     i1l3044:
  9181                           
  9182                           ;doprnt.c: 615: width = 0;
  9183  007E  0020               	movlb	0	; select bank0
  9184  007F  01B1               	clrf	sprintf@width
  9185  0080  01B2               	clrf	sprintf@width+1
  9186  0081                     i1l3046:
  9187                           
  9188                           ;doprnt.c: 617: width *= 10;
  9189  0081  300A               	movlw	10
  9190  0082  00F0               	movwf	___wmul@multiplier
  9191  0083  3000               	movlw	0
  9192  0084  00F1               	movwf	___wmul@multiplier+1
  9193  0085  0020               	movlb	0	; select bank0
  9194  0086  0832               	movf	sprintf@width+1,w
  9195  0087  00F3               	movwf	___wmul@multiplicand+1
  9196  0088  0831               	movf	sprintf@width,w
  9197  0089  00F2               	movwf	___wmul@multiplicand
  9198  008A  318E  26B7  3180   	fcall	___wmul
  9199  008D  0871               	movf	?___wmul+1,w
  9200  008E  0020               	movlb	0	; select bank0
  9201  008F  00B2               	movwf	sprintf@width+1
  9202  0090  0870               	movf	?___wmul,w
  9203  0091  00B1               	movwf	sprintf@width
  9204  0092                     i1l3048:
  9205                           
  9206                           ;doprnt.c: 618: width += *f++ - '0';
  9207  0092  0820               	movf	sprintf@f,w
  9208  0093  0084               	movwf	4
  9209  0094  0821               	movf	sprintf@f+1,w
  9210  0095  0085               	movwf	5
  9211  0096  0800               	movf	0,w	;code access
  9212  0097  3ED0               	addlw	208
  9213  0098  00A8               	movwf	??_sprintf
  9214  0099  30FF               	movlw	255
  9215  009A  1803               	skipnc
  9216  009B  3000               	movlw	0
  9217  009C  00A9               	movwf	??_sprintf+1
  9218  009D  0828               	movf	??_sprintf,w
  9219  009E  07B1               	addwf	sprintf@width,f
  9220  009F  0829               	movf	??_sprintf+1,w
  9221  00A0  3DB2               	addwfc	sprintf@width+1,f
  9222  00A1                     i1l3050:
  9223  00A1  3001               	movlw	1
  9224  00A2  07A0               	addwf	sprintf@f,f
  9225  00A3  3000               	movlw	0
  9226  00A4  3DA1               	addwfc	sprintf@f+1,f
  9227  00A5                     i1l3052:
  9228                           
  9229                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  9230  00A5  0820               	movf	sprintf@f,w
  9231  00A6  0084               	movwf	4
  9232  00A7  0821               	movf	sprintf@f+1,w
  9233  00A8  0085               	movwf	5
  9234  00A9  0800               	movf	0,w	;code access
  9235  00AA  318E  262F  3180   	fcall	_isdigit
  9236  00AD  1803               	btfsc	3,0
  9237  00AE  28B0               	goto	u262_21
  9238  00AF  28B1               	goto	u262_20
  9239  00B0                     u262_21:
  9240  00B0  2881               	goto	i1l3046
  9241  00B1                     u262_20:
  9242  00B1                     i1l3056:
  9243  00B1  0020               	movlb	0	; select bank0
  9244  00B2  0821               	movf	sprintf@f+1,w
  9245  00B3  00A9               	movwf	??_sprintf+1
  9246  00B4  0820               	movf	sprintf@f,w
  9247  00B5  00A8               	movwf	??_sprintf
  9248  00B6  0AA0               	incf	sprintf@f,f
  9249  00B7  1903               	skipnz
  9250  00B8  0AA1               	incf	sprintf@f+1,f
  9251  00B9  0828               	movf	??_sprintf,w
  9252  00BA  0084               	movwf	4
  9253  00BB  0829               	movf	??_sprintf+1,w
  9254  00BC  0085               	movwf	5
  9255  00BD  0800               	movf	0,w	;code access
  9256  00BE  00B4               	movwf	sprintf@c
  9257                           
  9258                           ; Switch size 1, requested type "simple"
  9259                           ; Number of cases is 3, Range of values is 0 to 105
  9260                           ; switch strategies available:
  9261                           ; Name         Instructions Cycles
  9262                           ; simple_byte           10     6 (average)
  9263                           ; direct_byte          218     6 (fixed)
  9264                           ; jumptable            260     6 (fixed)
  9265                           ;	Chosen strategy is simple_byte
  9266  00BF  3A00               	xorlw	0	; case 0
  9267  00C0  1903               	skipnz
  9268  00C1  29DF               	goto	i1l3132
  9269  00C2  3A64               	xorlw	100	; case 100
  9270  00C3  1903               	skipnz
  9271  00C4  28C9               	goto	i1l3058
  9272  00C5  3A0D               	xorlw	13	; case 105
  9273  00C6  1903               	skipnz
  9274  00C7  28C9               	goto	i1l3058
  9275  00C8  29CB               	goto	i1l3130
  9276  00C9                     i1l3058:
  9277                           
  9278                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  9279  00C9  082C               	movf	sprintf@ap,w
  9280  00CA  0086               	movwf	6
  9281  00CB  0187               	clrf	7
  9282  00CC  3F40               	moviw [0]fsr1
  9283  00CD  00AE               	movwf	sprintf@val
  9284  00CE  3F41               	moviw [1]fsr1
  9285  00CF  00AF               	movwf	sprintf@val+1
  9286  00D0                     i1l3060:
  9287  00D0  3002               	movlw	2
  9288  00D1  00A8               	movwf	??_sprintf
  9289  00D2  0828               	movf	??_sprintf,w
  9290  00D3  07AC               	addwf	sprintf@ap,f
  9291  00D4                     i1l3062:
  9292                           
  9293                           ;doprnt.c: 1287: if((int)val < 0) {
  9294  00D4  1FAF               	btfss	sprintf@val+1,7
  9295  00D5  28D7               	goto	u263_21
  9296  00D6  28D8               	goto	u263_20
  9297  00D7                     u263_21:
  9298  00D7  28E1               	goto	i1l3068
  9299  00D8                     u263_20:
  9300  00D8                     i1l3064:
  9301                           
  9302                           ;doprnt.c: 1288: flag |= 0x03;
  9303  00D8  3003               	movlw	3
  9304  00D9  00A8               	movwf	??_sprintf
  9305  00DA  0828               	movf	??_sprintf,w
  9306  00DB  04B0               	iorwf	sprintf@flag,f
  9307  00DC                     i1l3066:
  9308                           
  9309                           ;doprnt.c: 1289: val = -val;
  9310  00DC  09AE               	comf	sprintf@val,f
  9311  00DD  09AF               	comf	sprintf@val+1,f
  9312  00DE  0AAE               	incf	sprintf@val,f
  9313  00DF  1903               	skipnz
  9314  00E0  0AAF               	incf	sprintf@val+1,f
  9315  00E1                     i1l3068:
  9316                           
  9317                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  9318  00E1  01B4               	clrf	sprintf@c
  9319  00E2  0AB4               	incf	sprintf@c,f
  9320  00E3                     i1l3074:
  9321                           
  9322                           ;doprnt.c: 1332: if(val < dpowers[c])
  9323  00E3  0834               	movf	sprintf@c,w
  9324  00E4  00A8               	movwf	??_sprintf
  9325  00E5  01A9               	clrf	??_sprintf+1
  9326  00E6  35A8               	lslf	??_sprintf,f
  9327  00E7  0DA9               	rlf	??_sprintf+1,f
  9328  00E8  300F               	movlw	low (_dpowers| (0+32768))
  9329  00E9  0728               	addwf	??_sprintf,w
  9330  00EA  0084               	movwf	4
  9331  00EB  3090               	movlw	high (_dpowers| (0+32768))
  9332  00EC  3D29               	addwfc	??_sprintf+1,w
  9333  00ED  0085               	movwf	5
  9334  00EE  3F00               	moviw [0]fsr0
  9335  00EF  00AA               	movwf	??_sprintf+2
  9336  00F0  3F01               	moviw [1]fsr0
  9337  00F1  00AB               	movwf	??_sprintf+3
  9338  00F2  082B               	movf	??_sprintf+3,w
  9339  00F3  022F               	subwf	sprintf@val+1,w
  9340  00F4  1D03               	skipz
  9341  00F5  28F8               	goto	u264_25
  9342  00F6  082A               	movf	??_sprintf+2,w
  9343  00F7  022E               	subwf	sprintf@val,w
  9344  00F8                     u264_25:
  9345  00F8  1803               	skipnc
  9346  00F9  28FB               	goto	u264_21
  9347  00FA  28FC               	goto	u264_20
  9348  00FB                     u264_21:
  9349  00FB  28FD               	goto	i1l3078
  9350  00FC                     u264_20:
  9351  00FC  2907               	goto	i1l3080
  9352  00FD                     i1l3078:
  9353  00FD  3001               	movlw	1
  9354  00FE  00A8               	movwf	??_sprintf
  9355  00FF  0828               	movf	??_sprintf,w
  9356  0100  07B4               	addwf	sprintf@c,f
  9357  0101  3005               	movlw	5
  9358  0102  0634               	xorwf	sprintf@c,w
  9359  0103  1D03               	btfss	3,2
  9360  0104  2906               	goto	u265_21
  9361  0105  2907               	goto	u265_20
  9362  0106                     u265_21:
  9363  0106  28E3               	goto	i1l3074
  9364  0107                     u265_20:
  9365  0107                     i1l3080:
  9366                           
  9367                           ;doprnt.c: 1371: if(width && flag & 0x03)
  9368  0107  0831               	movf	sprintf@width,w
  9369  0108  0432               	iorwf	sprintf@width+1,w
  9370  0109  1903               	btfsc	3,2
  9371  010A  290C               	goto	u266_21
  9372  010B  290D               	goto	u266_20
  9373  010C                     u266_21:
  9374  010C  2917               	goto	i1l1120
  9375  010D                     u266_20:
  9376  010D                     i1l3082:
  9377  010D  0830               	movf	sprintf@flag,w
  9378  010E  3903               	andlw	3
  9379  010F  1903               	btfsc	3,2
  9380  0110  2912               	goto	u267_21
  9381  0111  2913               	goto	u267_20
  9382  0112                     u267_21:
  9383  0112  2917               	goto	i1l1120
  9384  0113                     u267_20:
  9385  0113                     i1l3084:
  9386                           
  9387                           ;doprnt.c: 1372: width--;
  9388  0113  30FF               	movlw	255
  9389  0114  07B1               	addwf	sprintf@width,f
  9390  0115  30FF               	movlw	255
  9391  0116  3DB2               	addwfc	sprintf@width+1,f
  9392  0117                     i1l1120:
  9393                           
  9394                           ;doprnt.c: 1407: if(width > c)
  9395  0117  0832               	movf	sprintf@width+1,w
  9396  0118  3A80               	xorlw	128
  9397  0119  3C80               	sublw	128
  9398  011A  1D03               	skipz
  9399  011B  291E               	goto	u268_25
  9400  011C  0831               	movf	sprintf@width,w
  9401  011D  0234               	subwf	sprintf@c,w
  9402  011E                     u268_25:
  9403  011E  1803               	skipnc
  9404  011F  2921               	goto	u268_21
  9405  0120  2922               	goto	u268_20
  9406  0121                     u268_21:
  9407  0121  292B               	goto	i1l3088
  9408  0122                     u268_20:
  9409  0122                     i1l3086:
  9410                           
  9411                           ;doprnt.c: 1408: width -= c;
  9412  0122  0020               	movlb	0	; select bank0
  9413  0123  0834               	movf	sprintf@c,w
  9414  0124  00A8               	movwf	??_sprintf
  9415  0125  01A9               	clrf	??_sprintf+1
  9416  0126  0828               	movf	??_sprintf,w
  9417  0127  02B1               	subwf	sprintf@width,f
  9418  0128  0829               	movf	??_sprintf+1,w
  9419  0129  3BB2               	subwfb	sprintf@width+1,f
  9420  012A  292E               	goto	i1l3090
  9421  012B                     i1l3088:
  9422                           
  9423                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  9424  012B  0020               	movlb	0	; select bank0
  9425  012C  01B1               	clrf	sprintf@width
  9426  012D  01B2               	clrf	sprintf@width+1
  9427  012E                     i1l3090:
  9428                           
  9429                           ;doprnt.c: 1413: if(flag & 0x04) {
  9430  012E  1D30               	btfss	sprintf@flag,2
  9431  012F  2931               	goto	u269_21
  9432  0130  2932               	goto	u269_20
  9433  0131                     u269_21:
  9434  0131  295F               	goto	i1l3106
  9435  0132                     u269_20:
  9436  0132                     i1l3092:
  9437                           
  9438                           ;doprnt.c: 1418: if(flag & 0x03)
  9439  0132  0830               	movf	sprintf@flag,w
  9440  0133  3903               	andlw	3
  9441  0134  1903               	btfsc	3,2
  9442  0135  2937               	goto	u270_21
  9443  0136  2938               	goto	u270_20
  9444  0137                     u270_21:
  9445  0137  2943               	goto	i1l3098
  9446  0138                     u270_20:
  9447  0138                     i1l3094:
  9448                           
  9449                           ;doprnt.c: 1419: ((*sp++ = ('-')));
  9450  0138  302D               	movlw	45
  9451  0139  00A8               	movwf	??_sprintf
  9452  013A  0833               	movf	sprintf@sp,w
  9453  013B  0086               	movwf	6
  9454  013C  0187               	clrf	7
  9455  013D  0828               	movf	??_sprintf,w
  9456  013E  0081               	movwf	1
  9457  013F                     i1l3096:
  9458  013F  3001               	movlw	1
  9459  0140  00A8               	movwf	??_sprintf
  9460  0141  0828               	movf	??_sprintf,w
  9461  0142  07B3               	addwf	sprintf@sp,f
  9462  0143                     i1l3098:
  9463                           
  9464                           ;doprnt.c: 1441: if(width)
  9465  0143  0831               	movf	sprintf@width,w
  9466  0144  0432               	iorwf	sprintf@width+1,w
  9467  0145  1903               	btfsc	3,2
  9468  0146  2948               	goto	u271_21
  9469  0147  2949               	goto	u271_20
  9470  0148                     u271_21:
  9471  0148  298B               	goto	i1l3120
  9472  0149                     u271_20:
  9473  0149                     i1l3100:
  9474                           
  9475                           ;doprnt.c: 1443: ((*sp++ = ('0')));
  9476  0149  3030               	movlw	48
  9477  014A  00A8               	movwf	??_sprintf
  9478  014B  0833               	movf	sprintf@sp,w
  9479  014C  0086               	movwf	6
  9480  014D  0187               	clrf	7
  9481  014E  0828               	movf	??_sprintf,w
  9482  014F  0081               	movwf	1
  9483  0150                     i1l3102:
  9484  0150  3001               	movlw	1
  9485  0151  00A8               	movwf	??_sprintf
  9486  0152  0828               	movf	??_sprintf,w
  9487  0153  07B3               	addwf	sprintf@sp,f
  9488  0154                     i1l3104:
  9489                           
  9490                           ;doprnt.c: 1444: while(--width);
  9491  0154  30FF               	movlw	255
  9492  0155  07B1               	addwf	sprintf@width,f
  9493  0156  30FF               	movlw	255
  9494  0157  3DB2               	addwfc	sprintf@width+1,f
  9495  0158  0831               	movf	sprintf@width,w
  9496  0159  0432               	iorwf	sprintf@width+1,w
  9497  015A  1D03               	btfss	3,2
  9498  015B  295D               	goto	u272_21
  9499  015C  295E               	goto	u272_20
  9500  015D                     u272_21:
  9501  015D  2949               	goto	i1l3100
  9502  015E                     u272_20:
  9503  015E  298B               	goto	i1l3120
  9504  015F                     i1l3106:
  9505                           
  9506                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  9507  015F  0831               	movf	sprintf@width,w
  9508  0160  0432               	iorwf	sprintf@width+1,w
  9509  0161  1903               	btfsc	3,2
  9510  0162  2964               	goto	u273_21
  9511  0163  2965               	goto	u273_20
  9512  0164                     u273_21:
  9513  0164  297A               	goto	i1l3114
  9514  0165                     u273_20:
  9515  0165                     i1l3108:
  9516                           
  9517                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  9518  0165  3020               	movlw	32
  9519  0166  00A8               	movwf	??_sprintf
  9520  0167  0833               	movf	sprintf@sp,w
  9521  0168  0086               	movwf	6
  9522  0169  0187               	clrf	7
  9523  016A  0828               	movf	??_sprintf,w
  9524  016B  0081               	movwf	1
  9525  016C                     i1l3110:
  9526  016C  3001               	movlw	1
  9527  016D  00A8               	movwf	??_sprintf
  9528  016E  0828               	movf	??_sprintf,w
  9529  016F  07B3               	addwf	sprintf@sp,f
  9530  0170                     i1l3112:
  9531                           
  9532                           ;doprnt.c: 1457: while(--width);
  9533  0170  30FF               	movlw	255
  9534  0171  07B1               	addwf	sprintf@width,f
  9535  0172  30FF               	movlw	255
  9536  0173  3DB2               	addwfc	sprintf@width+1,f
  9537  0174  0831               	movf	sprintf@width,w
  9538  0175  0432               	iorwf	sprintf@width+1,w
  9539  0176  1D03               	btfss	3,2
  9540  0177  2979               	goto	u274_21
  9541  0178  297A               	goto	u274_20
  9542  0179                     u274_21:
  9543  0179  2965               	goto	i1l3108
  9544  017A                     u274_20:
  9545  017A                     i1l3114:
  9546                           
  9547                           ;doprnt.c: 1464: if(flag & 0x03)
  9548  017A  0830               	movf	sprintf@flag,w
  9549  017B  3903               	andlw	3
  9550  017C  1903               	btfsc	3,2
  9551  017D  297F               	goto	u275_21
  9552  017E  2980               	goto	u275_20
  9553  017F                     u275_21:
  9554  017F  298B               	goto	i1l3120
  9555  0180                     u275_20:
  9556  0180                     i1l3116:
  9557                           
  9558                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  9559  0180  302D               	movlw	45
  9560  0181  00A8               	movwf	??_sprintf
  9561  0182  0833               	movf	sprintf@sp,w
  9562  0183  0086               	movwf	6
  9563  0184  0187               	clrf	7
  9564  0185  0828               	movf	??_sprintf,w
  9565  0186  0081               	movwf	1
  9566  0187                     i1l3118:
  9567  0187  3001               	movlw	1
  9568  0188  00A8               	movwf	??_sprintf
  9569  0189  0828               	movf	??_sprintf,w
  9570  018A  07B3               	addwf	sprintf@sp,f
  9571  018B                     i1l3120:
  9572                           
  9573                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  9574  018B  0834               	movf	sprintf@c,w
  9575  018C  00A8               	movwf	??_sprintf
  9576  018D  0828               	movf	??_sprintf,w
  9577  018E  00AD               	movwf	sprintf@prec
  9578                           
  9579                           ;doprnt.c: 1500: while(prec--) {
  9580  018F  29C2               	goto	i1l3128
  9581  0190                     i1l3122:
  9582                           
  9583                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  9584  0190  300A               	movlw	10
  9585  0191  00F8               	movwf	___lwmod@divisor
  9586  0192  3000               	movlw	0
  9587  0193  00F9               	movwf	___lwmod@divisor+1
  9588  0194  082D               	movf	sprintf@prec,w
  9589  0195  00A8               	movwf	??_sprintf
  9590  0196  01A9               	clrf	??_sprintf+1
  9591  0197  35A8               	lslf	??_sprintf,f
  9592  0198  0DA9               	rlf	??_sprintf+1,f
  9593  0199  300F               	movlw	low (_dpowers| (0+32768))
  9594  019A  0728               	addwf	??_sprintf,w
  9595  019B  0084               	movwf	4
  9596  019C  3090               	movlw	high (_dpowers| (0+32768))
  9597  019D  3D29               	addwfc	??_sprintf+1,w
  9598  019E  0085               	movwf	5
  9599  019F  3F00               	moviw [0]fsr0
  9600  01A0  00F0               	movwf	___lwdiv@divisor
  9601  01A1  3F01               	moviw [1]fsr0
  9602  01A2  00F1               	movwf	___lwdiv@divisor+1
  9603  01A3  082F               	movf	sprintf@val+1,w
  9604  01A4  00F3               	movwf	___lwdiv@dividend+1
  9605  01A5  082E               	movf	sprintf@val,w
  9606  01A6  00F2               	movwf	___lwdiv@dividend
  9607  01A7  318F  2748  3180   	fcall	___lwdiv
  9608  01AA  0871               	movf	?___lwdiv+1,w
  9609  01AB  00FB               	movwf	___lwmod@dividend+1
  9610  01AC  0870               	movf	?___lwdiv,w
  9611  01AD  00FA               	movwf	___lwmod@dividend
  9612  01AE  318F  2714  3180   	fcall	___lwmod
  9613  01B1  0878               	movf	?___lwmod,w
  9614  01B2  3E30               	addlw	48
  9615  01B3  0020               	movlb	0	; select bank0
  9616  01B4  00AA               	movwf	??_sprintf+2
  9617  01B5  082A               	movf	??_sprintf+2,w
  9618  01B6  00B4               	movwf	sprintf@c
  9619  01B7                     i1l3124:
  9620                           
  9621                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  9622  01B7  0834               	movf	sprintf@c,w
  9623  01B8  00A8               	movwf	??_sprintf
  9624  01B9  0833               	movf	sprintf@sp,w
  9625  01BA  0086               	movwf	6
  9626  01BB  0187               	clrf	7
  9627  01BC  0828               	movf	??_sprintf,w
  9628  01BD  0081               	movwf	1
  9629  01BE                     i1l3126:
  9630  01BE  3001               	movlw	1
  9631  01BF  00A8               	movwf	??_sprintf
  9632  01C0  0828               	movf	??_sprintf,w
  9633  01C1  07B3               	addwf	sprintf@sp,f
  9634  01C2                     i1l3128:
  9635  01C2  30FF               	movlw	255
  9636  01C3  00A8               	movwf	??_sprintf
  9637  01C4  0828               	movf	??_sprintf,w
  9638  01C5  07AD               	addwf	sprintf@prec,f
  9639  01C6  0A2D               	incf	sprintf@prec,w
  9640  01C7  1D03               	btfss	3,2
  9641  01C8  29CA               	goto	u276_21
  9642  01C9  29CB               	goto	u276_20
  9643  01CA                     u276_21:
  9644  01CA  2990               	goto	i1l3122
  9645  01CB                     u276_20:
  9646  01CB                     i1l3130:
  9647  01CB  0821               	movf	sprintf@f+1,w
  9648  01CC  00A9               	movwf	??_sprintf+1
  9649  01CD  0820               	movf	sprintf@f,w
  9650  01CE  00A8               	movwf	??_sprintf
  9651  01CF  0AA0               	incf	sprintf@f,f
  9652  01D0  1903               	skipnz
  9653  01D1  0AA1               	incf	sprintf@f+1,f
  9654  01D2  0828               	movf	??_sprintf,w
  9655  01D3  0084               	movwf	4
  9656  01D4  0829               	movf	??_sprintf+1,w
  9657  01D5  0085               	movwf	5
  9658  01D6  0800               	movf	0,w	;code access
  9659  01D7  00AA               	movwf	??_sprintf+2
  9660  01D8  082A               	movf	??_sprintf+2,w
  9661  01D9  00B4               	movwf	sprintf@c
  9662  01DA  0834               	movf	sprintf@c,w
  9663  01DB  1D03               	btfss	3,2
  9664  01DC  29DE               	goto	u277_21
  9665  01DD  29DF               	goto	u277_20
  9666  01DE                     u277_21:
  9667  01DE  284E               	goto	i1l3028
  9668  01DF                     u277_20:
  9669  01DF                     i1l3132:
  9670                           
  9671                           ;doprnt.c: 1564: *sp = 0;
  9672  01DF  0833               	movf	sprintf@sp,w
  9673  01E0  0086               	movwf	6
  9674  01E1  0187               	clrf	7
  9675  01E2  0181               	clrf	1
  9676  01E3                     i1l1137:
  9677  01E3  0008               	return
  9678  01E4                     __end_of_sprintf:
  9679                           
  9680                           	psect	text22
  9681  0E2F                     __ptext22:	
  9682 ;; *************** function _isdigit *****************
  9683 ;; Defined at:
  9684 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
  9685 ;; Parameters:    Size  Location     Type
  9686 ;;  c               1    wreg     unsigned char 
  9687 ;; Auto vars:     Size  Location     Type
  9688 ;;  c               1    1[COMMON] unsigned char 
  9689 ;; Return value:  Size  Location     Type
  9690 ;;		None               void
  9691 ;; Registers used:
  9692 ;;		wreg, status,2, status,0
  9693 ;; Tracked objects:
  9694 ;;		On entry : 0/0
  9695 ;;		On exit  : 0/0
  9696 ;;		Unchanged: 0/0
  9697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9699 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9701 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9702 ;;Total ram usage:        2 bytes
  9703 ;; Hardware stack levels used:    1
  9704 ;; This function calls:
  9705 ;;		Nothing
  9706 ;; This function is called by:
  9707 ;;		_sprintf
  9708 ;; This function uses a non-reentrant model
  9709 ;;
  9710                           
  9711                           
  9712                           ;psect for function _isdigit
  9713  0E2F                     _isdigit:
  9714                           
  9715                           ;incstack = 0
  9716                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  9717                           ;isdigit@c stored from wreg
  9718  0E2F  00F1               	movwf	isdigit@c
  9719  0E30                     i1l2844:
  9720  0E30  01F0               	clrf	_isdigit$2255
  9721  0E31                     i1l2846:
  9722  0E31  303A               	movlw	58
  9723  0E32  0271               	subwf	isdigit@c,w
  9724  0E33  1803               	skipnc
  9725  0E34  2E36               	goto	u205_21
  9726  0E35  2E37               	goto	u205_20
  9727  0E36                     u205_21:
  9728  0E36  2E3F               	goto	i1l2852
  9729  0E37                     u205_20:
  9730  0E37                     i1l2848:
  9731  0E37  3030               	movlw	48
  9732  0E38  0271               	subwf	isdigit@c,w
  9733  0E39  1C03               	skipc
  9734  0E3A  2E3C               	goto	u206_21
  9735  0E3B  2E3D               	goto	u206_20
  9736  0E3C                     u206_21:
  9737  0E3C  2E3F               	goto	i1l2852
  9738  0E3D                     u206_20:
  9739  0E3D                     i1l2850:
  9740  0E3D  01F0               	clrf	_isdigit$2255
  9741  0E3E  0AF0               	incf	_isdigit$2255,f
  9742  0E3F                     i1l2852:
  9743  0E3F  0C70               	rrf	_isdigit$2255,w
  9744  0E40                     i1l1594:
  9745  0E40  0008               	return
  9746  0E41                     __end_of_isdigit:
  9747                           
  9748                           	psect	text23
  9749  0EB7                     __ptext23:	
  9750 ;; *************** function ___wmul *****************
  9751 ;; Defined at:
  9752 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  9753 ;; Parameters:    Size  Location     Type
  9754 ;;  multiplier      2    0[COMMON] unsigned int 
  9755 ;;  multiplicand    2    2[COMMON] unsigned int 
  9756 ;; Auto vars:     Size  Location     Type
  9757 ;;  product         2    4[COMMON] unsigned int 
  9758 ;; Return value:  Size  Location     Type
  9759 ;;                  2    0[COMMON] unsigned int 
  9760 ;; Registers used:
  9761 ;;		wreg, status,2, status,0
  9762 ;; Tracked objects:
  9763 ;;		On entry : 0/0
  9764 ;;		On exit  : 0/0
  9765 ;;		Unchanged: 0/0
  9766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9767 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9768 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9770 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9771 ;;Total ram usage:        6 bytes
  9772 ;; Hardware stack levels used:    1
  9773 ;; This function calls:
  9774 ;;		Nothing
  9775 ;; This function is called by:
  9776 ;;		_sprintf
  9777 ;; This function uses a non-reentrant model
  9778 ;;
  9779                           
  9780                           
  9781                           ;psect for function ___wmul
  9782  0EB7                     ___wmul:
  9783  0EB7                     i1l2856:	
  9784                           ;incstack = 0
  9785                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9786                           
  9787  0EB7  01F4               	clrf	___wmul@product
  9788  0EB8  01F5               	clrf	___wmul@product+1
  9789  0EB9                     i1l2858:
  9790  0EB9  1C70               	btfss	___wmul@multiplier,0
  9791  0EBA  2EBC               	goto	u207_21
  9792  0EBB  2EBD               	goto	u207_20
  9793  0EBC                     u207_21:
  9794  0EBC  2EC1               	goto	i1l1141
  9795  0EBD                     u207_20:
  9796  0EBD                     i1l2860:
  9797  0EBD  0872               	movf	___wmul@multiplicand,w
  9798  0EBE  07F4               	addwf	___wmul@product,f
  9799  0EBF  0873               	movf	___wmul@multiplicand+1,w
  9800  0EC0  3DF5               	addwfc	___wmul@product+1,f
  9801  0EC1                     i1l1141:
  9802  0EC1  3001               	movlw	1
  9803  0EC2                     u208_25:
  9804  0EC2  35F2               	lslf	___wmul@multiplicand,f
  9805  0EC3  0DF3               	rlf	___wmul@multiplicand+1,f
  9806  0EC4  0B89               	decfsz	9,f
  9807  0EC5  2EC2               	goto	u208_25
  9808  0EC6                     i1l2862:
  9809  0EC6  3001               	movlw	1
  9810  0EC7                     u209_25:
  9811  0EC7  36F1               	lsrf	___wmul@multiplier+1,f
  9812  0EC8  0CF0               	rrf	___wmul@multiplier,f
  9813  0EC9  0B89               	decfsz	9,f
  9814  0ECA  2EC7               	goto	u209_25
  9815  0ECB                     i1l2864:
  9816  0ECB  0870               	movf	___wmul@multiplier,w
  9817  0ECC  0471               	iorwf	___wmul@multiplier+1,w
  9818  0ECD  1D03               	btfss	3,2
  9819  0ECE  2ED0               	goto	u210_21
  9820  0ECF  2ED1               	goto	u210_20
  9821  0ED0                     u210_21:
  9822  0ED0  2EB9               	goto	i1l2858
  9823  0ED1                     u210_20:
  9824  0ED1                     i1l2866:
  9825  0ED1  0875               	movf	___wmul@product+1,w
  9826  0ED2  00F1               	movwf	?___wmul+1
  9827  0ED3  0874               	movf	___wmul@product,w
  9828  0ED4  00F0               	movwf	?___wmul
  9829  0ED5                     i1l1143:
  9830  0ED5  0008               	return
  9831  0ED6                     __end_of___wmul:
  9832                           
  9833                           	psect	text24
  9834  0F14                     __ptext24:	
  9835 ;; *************** function ___lwmod *****************
  9836 ;; Defined at:
  9837 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  9838 ;; Parameters:    Size  Location     Type
  9839 ;;  divisor         2    8[COMMON] unsigned int 
  9840 ;;  dividend        2   10[COMMON] unsigned int 
  9841 ;; Auto vars:     Size  Location     Type
  9842 ;;  counter         1   13[COMMON] unsigned char 
  9843 ;; Return value:  Size  Location     Type
  9844 ;;                  2    8[COMMON] unsigned int 
  9845 ;; Registers used:
  9846 ;;		wreg, status,2, status,0
  9847 ;; Tracked objects:
  9848 ;;		On entry : 0/0
  9849 ;;		On exit  : 0/0
  9850 ;;		Unchanged: 0/0
  9851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9852 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9853 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9854 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9855 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9856 ;;Total ram usage:        6 bytes
  9857 ;; Hardware stack levels used:    1
  9858 ;; This function calls:
  9859 ;;		Nothing
  9860 ;; This function is called by:
  9861 ;;		_sprintf
  9862 ;; This function uses a non-reentrant model
  9863 ;;
  9864                           
  9865                           
  9866                           ;psect for function ___lwmod
  9867  0F14                     ___lwmod:
  9868  0F14                     i1l2896:	
  9869                           ;incstack = 0
  9870                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  9871                           
  9872  0F14  0878               	movf	___lwmod@divisor,w
  9873  0F15  0479               	iorwf	___lwmod@divisor+1,w
  9874  0F16  1903               	btfsc	3,2
  9875  0F17  2F19               	goto	u218_21
  9876  0F18  2F1A               	goto	u218_20
  9877  0F19                     u218_21:
  9878  0F19  2F43               	goto	i1l2914
  9879  0F1A                     u218_20:
  9880  0F1A                     i1l2898:
  9881  0F1A  01FD               	clrf	___lwmod@counter
  9882  0F1B  0AFD               	incf	___lwmod@counter,f
  9883  0F1C  2F26               	goto	i1l2904
  9884  0F1D                     i1l2900:
  9885  0F1D  3001               	movlw	1
  9886  0F1E                     u219_25:
  9887  0F1E  35F8               	lslf	___lwmod@divisor,f
  9888  0F1F  0DF9               	rlf	___lwmod@divisor+1,f
  9889  0F20  0B89               	decfsz	9,f
  9890  0F21  2F1E               	goto	u219_25
  9891  0F22                     i1l2902:
  9892  0F22  3001               	movlw	1
  9893  0F23  00FC               	movwf	??___lwmod
  9894  0F24  087C               	movf	??___lwmod,w
  9895  0F25  07FD               	addwf	___lwmod@counter,f
  9896  0F26                     i1l2904:
  9897  0F26  1FF9               	btfss	___lwmod@divisor+1,7
  9898  0F27  2F29               	goto	u220_21
  9899  0F28  2F2A               	goto	u220_20
  9900  0F29                     u220_21:
  9901  0F29  2F1D               	goto	i1l2900
  9902  0F2A                     u220_20:
  9903  0F2A                     i1l2906:
  9904  0F2A  0879               	movf	___lwmod@divisor+1,w
  9905  0F2B  027B               	subwf	___lwmod@dividend+1,w
  9906  0F2C  1D03               	skipz
  9907  0F2D  2F30               	goto	u221_25
  9908  0F2E  0878               	movf	___lwmod@divisor,w
  9909  0F2F  027A               	subwf	___lwmod@dividend,w
  9910  0F30                     u221_25:
  9911  0F30  1C03               	skipc
  9912  0F31  2F33               	goto	u221_21
  9913  0F32  2F34               	goto	u221_20
  9914  0F33                     u221_21:
  9915  0F33  2F38               	goto	i1l2910
  9916  0F34                     u221_20:
  9917  0F34                     i1l2908:
  9918  0F34  0878               	movf	___lwmod@divisor,w
  9919  0F35  02FA               	subwf	___lwmod@dividend,f
  9920  0F36  0879               	movf	___lwmod@divisor+1,w
  9921  0F37  3BFB               	subwfb	___lwmod@dividend+1,f
  9922  0F38                     i1l2910:
  9923  0F38  3001               	movlw	1
  9924  0F39                     u222_25:
  9925  0F39  36F9               	lsrf	___lwmod@divisor+1,f
  9926  0F3A  0CF8               	rrf	___lwmod@divisor,f
  9927  0F3B  0B89               	decfsz	9,f
  9928  0F3C  2F39               	goto	u222_25
  9929  0F3D                     i1l2912:
  9930  0F3D  3001               	movlw	1
  9931  0F3E  02FD               	subwf	___lwmod@counter,f
  9932  0F3F  1D03               	btfss	3,2
  9933  0F40  2F42               	goto	u223_21
  9934  0F41  2F43               	goto	u223_20
  9935  0F42                     u223_21:
  9936  0F42  2F2A               	goto	i1l2906
  9937  0F43                     u223_20:
  9938  0F43                     i1l2914:
  9939  0F43  087B               	movf	___lwmod@dividend+1,w
  9940  0F44  00F9               	movwf	?___lwmod+1
  9941  0F45  087A               	movf	___lwmod@dividend,w
  9942  0F46  00F8               	movwf	?___lwmod
  9943  0F47                     i1l1423:
  9944  0F47  0008               	return
  9945  0F48                     __end_of___lwmod:
  9946                           
  9947                           	psect	text25
  9948  0F48                     __ptext25:	
  9949 ;; *************** function ___lwdiv *****************
  9950 ;; Defined at:
  9951 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  9952 ;; Parameters:    Size  Location     Type
  9953 ;;  divisor         2    0[COMMON] unsigned int 
  9954 ;;  dividend        2    2[COMMON] unsigned int 
  9955 ;; Auto vars:     Size  Location     Type
  9956 ;;  quotient        2    5[COMMON] unsigned int 
  9957 ;;  counter         1    7[COMMON] unsigned char 
  9958 ;; Return value:  Size  Location     Type
  9959 ;;                  2    0[COMMON] unsigned int 
  9960 ;; Registers used:
  9961 ;;		wreg, status,2, status,0
  9962 ;; Tracked objects:
  9963 ;;		On entry : 0/0
  9964 ;;		On exit  : 0/0
  9965 ;;		Unchanged: 0/0
  9966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9967 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9968 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9969 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9970 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9971 ;;Total ram usage:        8 bytes
  9972 ;; Hardware stack levels used:    1
  9973 ;; This function calls:
  9974 ;;		Nothing
  9975 ;; This function is called by:
  9976 ;;		_sprintf
  9977 ;; This function uses a non-reentrant model
  9978 ;;
  9979                           
  9980                           
  9981                           ;psect for function ___lwdiv
  9982  0F48                     ___lwdiv:
  9983  0F48                     i1l2870:	
  9984                           ;incstack = 0
  9985                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9986                           
  9987  0F48  01F5               	clrf	___lwdiv@quotient
  9988  0F49  01F6               	clrf	___lwdiv@quotient+1
  9989  0F4A                     i1l2872:
  9990  0F4A  0870               	movf	___lwdiv@divisor,w
  9991  0F4B  0471               	iorwf	___lwdiv@divisor+1,w
  9992  0F4C  1903               	btfsc	3,2
  9993  0F4D  2F4F               	goto	u211_21
  9994  0F4E  2F50               	goto	u211_20
  9995  0F4F                     u211_21:
  9996  0F4F  2F7F               	goto	i1l2892
  9997  0F50                     u211_20:
  9998  0F50                     i1l2874:
  9999  0F50  01F7               	clrf	___lwdiv@counter
 10000  0F51  0AF7               	incf	___lwdiv@counter,f
 10001  0F52  2F5C               	goto	i1l2880
 10002  0F53                     i1l2876:
 10003  0F53  3001               	movlw	1
 10004  0F54                     u212_25:
 10005  0F54  35F0               	lslf	___lwdiv@divisor,f
 10006  0F55  0DF1               	rlf	___lwdiv@divisor+1,f
 10007  0F56  0B89               	decfsz	9,f
 10008  0F57  2F54               	goto	u212_25
 10009  0F58                     i1l2878:
 10010  0F58  3001               	movlw	1
 10011  0F59  00F4               	movwf	??___lwdiv
 10012  0F5A  0874               	movf	??___lwdiv,w
 10013  0F5B  07F7               	addwf	___lwdiv@counter,f
 10014  0F5C                     i1l2880:
 10015  0F5C  1FF1               	btfss	___lwdiv@divisor+1,7
 10016  0F5D  2F5F               	goto	u213_21
 10017  0F5E  2F60               	goto	u213_20
 10018  0F5F                     u213_21:
 10019  0F5F  2F53               	goto	i1l2876
 10020  0F60                     u213_20:
 10021  0F60                     i1l2882:
 10022  0F60  3001               	movlw	1
 10023  0F61                     u214_25:
 10024  0F61  35F5               	lslf	___lwdiv@quotient,f
 10025  0F62  0DF6               	rlf	___lwdiv@quotient+1,f
 10026  0F63  0B89               	decfsz	9,f
 10027  0F64  2F61               	goto	u214_25
 10028  0F65  0871               	movf	___lwdiv@divisor+1,w
 10029  0F66  0273               	subwf	___lwdiv@dividend+1,w
 10030  0F67  1D03               	skipz
 10031  0F68  2F6B               	goto	u215_25
 10032  0F69  0870               	movf	___lwdiv@divisor,w
 10033  0F6A  0272               	subwf	___lwdiv@dividend,w
 10034  0F6B                     u215_25:
 10035  0F6B  1C03               	skipc
 10036  0F6C  2F6E               	goto	u215_21
 10037  0F6D  2F6F               	goto	u215_20
 10038  0F6E                     u215_21:
 10039  0F6E  2F74               	goto	i1l2888
 10040  0F6F                     u215_20:
 10041  0F6F                     i1l2884:
 10042  0F6F  0870               	movf	___lwdiv@divisor,w
 10043  0F70  02F2               	subwf	___lwdiv@dividend,f
 10044  0F71  0871               	movf	___lwdiv@divisor+1,w
 10045  0F72  3BF3               	subwfb	___lwdiv@dividend+1,f
 10046  0F73                     i1l2886:
 10047  0F73  1475               	bsf	___lwdiv@quotient,0
 10048  0F74                     i1l2888:
 10049  0F74  3001               	movlw	1
 10050  0F75                     u216_25:
 10051  0F75  36F1               	lsrf	___lwdiv@divisor+1,f
 10052  0F76  0CF0               	rrf	___lwdiv@divisor,f
 10053  0F77  0B89               	decfsz	9,f
 10054  0F78  2F75               	goto	u216_25
 10055  0F79                     i1l2890:
 10056  0F79  3001               	movlw	1
 10057  0F7A  02F7               	subwf	___lwdiv@counter,f
 10058  0F7B  1D03               	btfss	3,2
 10059  0F7C  2F7E               	goto	u217_21
 10060  0F7D  2F7F               	goto	u217_20
 10061  0F7E                     u217_21:
 10062  0F7E  2F60               	goto	i1l2882
 10063  0F7F                     u217_20:
 10064  0F7F                     i1l2892:
 10065  0F7F  0876               	movf	___lwdiv@quotient+1,w
 10066  0F80  00F1               	movwf	?___lwdiv+1
 10067  0F81  0875               	movf	___lwdiv@quotient,w
 10068  0F82  00F0               	movwf	?___lwdiv
 10069  0F83                     i1l1413:
 10070  0F83  0008               	return
 10071  0F84                     __end_of___lwdiv:
 10072                           
 10073                           	psect	text26
 10074  0E9C                     __ptext26:	
 10075 ;; *************** function _LCDstr *****************
 10076 ;; Defined at:
 10077 ;;		line 183 in file "main.c"
 10078 ;; Parameters:    Size  Location     Type
 10079 ;;  p               2    9[COMMON] PTR unsigned char 
 10080 ;;		 -> menuLCD_ISR@l(5), menuLCD_ISR@tt(4), STR_2(6), menuLCD_ISR@str(8), 
 10081 ;; Auto vars:     Size  Location     Type
 10082 ;;  c               1    0[BANK0 ] unsigned char 
 10083 ;; Return value:  Size  Location     Type
 10084 ;;                  1    wreg      void 
 10085 ;; Registers used:
 10086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10087 ;; Tracked objects:
 10088 ;;		On entry : 0/0
 10089 ;;		On exit  : 0/0
 10090 ;;		Unchanged: 0/0
 10091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10093 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10094 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10095 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10096 ;;Total ram usage:        6 bytes
 10097 ;; Hardware stack levels used:    1
 10098 ;; Hardware stack levels required when called:    3
 10099 ;; This function calls:
 10100 ;;		_LCDchar
 10101 ;; This function is called by:
 10102 ;;		_menuLCD_ISR
 10103 ;; This function uses a non-reentrant model
 10104 ;;
 10105                           
 10106                           
 10107                           ;psect for function _LCDstr
 10108  0E9C                     _LCDstr:
 10109  0E9C                     i1l3006:	
 10110                           ;incstack = 0
 10111                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10112                           
 10113                           
 10114                           ;main.c: 185: unsigned char c;;main.c: 187: while((c = *p++)) LCDchar(c);
 10115  0E9C  2EA1               	goto	i1l3010
 10116  0E9D                     i1l3008:
 10117  0E9D  0820               	movf	LCDstr@c,w
 10118  0E9E  318D  25CD  318E   	fcall	_LCDchar
 10119  0EA1                     i1l3010:
 10120  0EA1  087A               	movf	LCDstr@p+1,w
 10121  0EA2  00FC               	movwf	??_LCDstr+1
 10122  0EA3  0879               	movf	LCDstr@p,w
 10123  0EA4  00FB               	movwf	??_LCDstr
 10124  0EA5  0AF9               	incf	LCDstr@p,f
 10125  0EA6  1903               	skipnz
 10126  0EA7  0AFA               	incf	LCDstr@p+1,f
 10127  0EA8  087B               	movf	??_LCDstr,w
 10128  0EA9  0084               	movwf	4
 10129  0EAA  087C               	movf	??_LCDstr+1,w
 10130  0EAB  0085               	movwf	5
 10131  0EAC  0800               	movf	0,w	;code access
 10132  0EAD  00FD               	movwf	??_LCDstr+2
 10133  0EAE  087D               	movf	??_LCDstr+2,w
 10134  0EAF  0020               	movlb	0	; select bank0
 10135  0EB0  00A0               	movwf	LCDstr@c
 10136  0EB1  0820               	movf	LCDstr@c,w
 10137  0EB2  1D03               	btfss	3,2
 10138  0EB3  2EB5               	goto	u258_21
 10139  0EB4  2EB6               	goto	u258_20
 10140  0EB5                     u258_21:
 10141  0EB5  2E9D               	goto	i1l3008
 10142  0EB6                     u258_20:
 10143  0EB6                     i1l742:
 10144  0EB6  0008               	return
 10145  0EB7                     __end_of_LCDstr:
 10146                           
 10147                           	psect	text27
 10148  0DCD                     __ptext27:	
 10149 ;; *************** function _LCDchar *****************
 10150 ;; Defined at:
 10151 ;;		line 178 in file "main.c"
 10152 ;; Parameters:    Size  Location     Type
 10153 ;;  c               1    wreg     unsigned char 
 10154 ;; Auto vars:     Size  Location     Type
 10155 ;;  c               1    8[COMMON] unsigned char 
 10156 ;; Return value:  Size  Location     Type
 10157 ;;                  1    wreg      void 
 10158 ;; Registers used:
 10159 ;;		wreg, status,2, status,0, pclath, cstack
 10160 ;; Tracked objects:
 10161 ;;		On entry : 0/0
 10162 ;;		On exit  : 0/0
 10163 ;;		Unchanged: 0/0
 10164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10166 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10168 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10169 ;;Total ram usage:        1 bytes
 10170 ;; Hardware stack levels used:    1
 10171 ;; Hardware stack levels required when called:    2
 10172 ;; This function calls:
 10173 ;;		i1_LCDsend2x4
 10174 ;; This function is called by:
 10175 ;;		_LCDstr
 10176 ;; This function uses a non-reentrant model
 10177 ;;
 10178                           
 10179                           
 10180                           ;psect for function _LCDchar
 10181  0DCD                     _LCDchar:
 10182                           
 10183                           ;incstack = 0
 10184                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 10185                           ;LCDchar@c stored from wreg
 10186  0DCD  00F8               	movwf	LCDchar@c
 10187  0DCE                     i1l2842:
 10188                           
 10189                           ;main.c: 180: LCDsend2x4(c, 0x01);
 10190  0DCE  01F2               	clrf	i1LCDsend2x4@mode
 10191  0DCF  0AF2               	incf	i1LCDsend2x4@mode,f
 10192  0DD0  0878               	movf	LCDchar@c,w
 10193  0DD1  3183  23C5  318D   	fcall	i1_LCDsend2x4
 10194  0DD4                     i1l736:
 10195  0DD4  0008               	return
 10196  0DD5                     __end_of_LCDchar:
 10197                           
 10198                           	psect	text28
 10199  0DC6                     __ptext28:	
 10200 ;; *************** function _LCDcmd *****************
 10201 ;; Defined at:
 10202 ;;		line 173 in file "main.c"
 10203 ;; Parameters:    Size  Location     Type
 10204 ;;  c               1    wreg     unsigned char 
 10205 ;; Auto vars:     Size  Location     Type
 10206 ;;  c               1    8[COMMON] unsigned char 
 10207 ;; Return value:  Size  Location     Type
 10208 ;;                  1    wreg      void 
 10209 ;; Registers used:
 10210 ;;		wreg, status,2, status,0, pclath, cstack
 10211 ;; Tracked objects:
 10212 ;;		On entry : 0/0
 10213 ;;		On exit  : 0/0
 10214 ;;		Unchanged: 0/0
 10215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10217 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10219 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10220 ;;Total ram usage:        1 bytes
 10221 ;; Hardware stack levels used:    1
 10222 ;; Hardware stack levels required when called:    2
 10223 ;; This function calls:
 10224 ;;		i1_LCDsend2x4
 10225 ;; This function is called by:
 10226 ;;		_menuLCD_ISR
 10227 ;; This function uses a non-reentrant model
 10228 ;;
 10229                           
 10230                           
 10231                           ;psect for function _LCDcmd
 10232  0DC6                     _LCDcmd:
 10233                           
 10234                           ;incstack = 0
 10235                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 10236                           ;LCDcmd@c stored from wreg
 10237  0DC6  00F8               	movwf	LCDcmd@c
 10238  0DC7                     i1l3004:
 10239                           
 10240                           ;main.c: 175: LCDsend2x4(c, 0);
 10241  0DC7  01F2               	clrf	i1LCDsend2x4@mode
 10242  0DC8  0878               	movf	LCDcmd@c,w
 10243  0DC9  3183  23C5  318D   	fcall	i1_LCDsend2x4
 10244  0DCC                     i1l733:
 10245  0DCC  0008               	return
 10246  0DCD                     __end_of_LCDcmd:
 10247                           
 10248                           	psect	text29
 10249  03C5                     __ptext29:	
 10250 ;; *************** function i1_LCDsend2x4 *****************
 10251 ;; Defined at:
 10252 ;;		line 127 in file "main.c"
 10253 ;; Parameters:    Size  Location     Type
 10254 ;;  c               1    wreg     unsigned char 
 10255 ;;  mode            1    2[COMMON] unsigned char 
 10256 ;; Auto vars:     Size  Location     Type
 10257 ;;  c               1    5[COMMON] unsigned char 
 10258 ;;  lc              1    7[COMMON] unsigned char 
 10259 ;;  hc              1    6[COMMON] unsigned char 
 10260 ;; Return value:  Size  Location     Type
 10261 ;;                  1    wreg      void 
 10262 ;; Registers used:
 10263 ;;		wreg, status,2, status,0, pclath, cstack
 10264 ;; Tracked objects:
 10265 ;;		On entry : 0/0
 10266 ;;		On exit  : 0/0
 10267 ;;		Unchanged: 0/0
 10268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10269 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10270 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10271 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10272 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10273 ;;Total ram usage:        6 bytes
 10274 ;; Hardware stack levels used:    1
 10275 ;; Hardware stack levels required when called:    1
 10276 ;; This function calls:
 10277 ;;		i1_WriteI2C
 10278 ;; This function is called by:
 10279 ;;		_LCDcmd
 10280 ;;		_LCDchar
 10281 ;; This function uses a non-reentrant model
 10282 ;;
 10283                           
 10284                           
 10285                           ;psect for function i1_LCDsend2x4
 10286  03C5                     i1_LCDsend2x4:
 10287                           
 10288                           ;incstack = 0
 10289                           ; Regs used in i1_LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 10290                           ;i1LCDsend2x4@c stored from wreg
 10291  03C5  00F5               	movwf	i1LCDsend2x4@c
 10292  03C6                     i1l2796:
 10293                           
 10294                           ;main.c: 129: unsigned char hc;;main.c: 130: unsigned char lc;;main.c: 132: hc = c & 0xf
      +                          0;
 10295  03C6  0875               	movf	i1LCDsend2x4@c,w
 10296  03C7  39F0               	andlw	240
 10297  03C8  00F3               	movwf	??i1_LCDsend2x4
 10298  03C9  0873               	movf	??i1_LCDsend2x4,w
 10299  03CA  00F6               	movwf	i1LCDsend2x4@hc
 10300  03CB                     i1l2798:
 10301                           
 10302                           ;main.c: 133: lc = (c << 4) & 0xf0;
 10303  03CB  0875               	movf	i1LCDsend2x4@c,w
 10304  03CC  00F3               	movwf	??i1_LCDsend2x4
 10305  03CD  3003               	movlw	3
 10306  03CE                     u190_25:
 10307  03CE  35F3               	lslf	??i1_LCDsend2x4,f
 10308  03CF  3EFF               	addlw	-1
 10309  03D0  1D03               	skipz
 10310  03D1  2BCE               	goto	u190_25
 10311  03D2  3573               	lslf	??i1_LCDsend2x4,w
 10312  03D3  39F0               	andlw	240
 10313  03D4  00F4               	movwf	??i1_LCDsend2x4+1
 10314  03D5  0874               	movf	??i1_LCDsend2x4+1,w
 10315  03D6  00F7               	movwf	i1LCDsend2x4@lc
 10316  03D7                     i1l2800:	
 10317                           ;main.c: 135: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10318                           
 10319  03D7  0023               	movlb	3	; select bank3
 10320  03D8  0C0F               	rrf	15,w	;volatile
 10321  03D9  0C89               	rrf	9,f
 10322  03DA  3901               	andlw	1
 10323  03DB  00F3               	movwf	??i1_LCDsend2x4
 10324  03DC  0811               	movf	17,w	;volatile
 10325  03DD  391F               	andlw	31
 10326  03DE  0473               	iorwf	??i1_LCDsend2x4,w
 10327  03DF  1D03               	btfss	3,2
 10328  03E0  2BE2               	goto	u191_21
 10329  03E1  2BE3               	goto	u191_20
 10330  03E2                     u191_21:
 10331  03E2  2BD7               	goto	i1l2800
 10332  03E3                     u191_20:
 10333  03E3                     i1l696:
 10334                           
 10335                           ;main.c: 136: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 10336  03E3  1411               	bsf	17,0	;volatile
 10337  03E4                     i1l697:
 10338  03E4  1811               	btfsc	17,0	;volatile
 10339  03E5  2BE7               	goto	u192_21
 10340  03E6  2BE8               	goto	u192_20
 10341  03E7                     u192_21:
 10342  03E7  2BE4               	goto	i1l697
 10343  03E8                     u192_20:
 10344  03E8                     i1l2802:
 10345  03E8  0C0F               	rrf	15,w	;volatile
 10346  03E9  0C89               	rrf	9,f
 10347  03EA  3901               	andlw	1
 10348  03EB  00F3               	movwf	??i1_LCDsend2x4
 10349  03EC  0811               	movf	17,w	;volatile
 10350  03ED  391F               	andlw	31
 10351  03EE  0473               	iorwf	??i1_LCDsend2x4,w
 10352  03EF  1D03               	btfss	3,2
 10353  03F0  2BF2               	goto	u193_21
 10354  03F1  2BF3               	goto	u193_20
 10355  03F2                     u193_21:
 10356  03F2  2BE8               	goto	i1l2802
 10357  03F3                     u193_20:
 10358  03F3                     i1l2804:
 10359                           
 10360                           ;main.c: 137: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10361  03F3  304E               	movlw	78
 10362  03F4  3187  279C  3183   	fcall	i1_WriteI2C
 10363  03F7                     i1l2806:
 10364  03F7  0023               	movlb	3	; select bank3
 10365  03F8  0C0F               	rrf	15,w	;volatile
 10366  03F9  0C89               	rrf	9,f
 10367  03FA  3901               	andlw	1
 10368  03FB  00F3               	movwf	??i1_LCDsend2x4
 10369  03FC  0811               	movf	17,w	;volatile
 10370  03FD  391F               	andlw	31
 10371  03FE  0473               	iorwf	??i1_LCDsend2x4,w
 10372  03FF  1D03               	btfss	3,2
 10373  0400  2C02               	goto	u194_21
 10374  0401  2C03               	goto	u194_20
 10375  0402                     u194_21:
 10376  0402  2BF7               	goto	i1l2806
 10377  0403                     u194_20:
 10378  0403                     i1l2808:
 10379                           
 10380                           ;main.c: 138: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10381  0403  0876               	movf	i1LCDsend2x4@hc,w
 10382  0404  0472               	iorwf	i1LCDsend2x4@mode,w
 10383  0405  3808               	iorlw	8
 10384  0406  3187  279C  3183   	fcall	i1_WriteI2C
 10385  0409                     i1l2810:
 10386  0409  0023               	movlb	3	; select bank3
 10387  040A  0C0F               	rrf	15,w	;volatile
 10388  040B  0C89               	rrf	9,f
 10389  040C  3901               	andlw	1
 10390  040D  00F3               	movwf	??i1_LCDsend2x4
 10391  040E  0811               	movf	17,w	;volatile
 10392  040F  391F               	andlw	31
 10393  0410  0473               	iorwf	??i1_LCDsend2x4,w
 10394  0411  1D03               	btfss	3,2
 10395  0412  2C14               	goto	u195_21
 10396  0413  2C15               	goto	u195_20
 10397  0414                     u195_21:
 10398  0414  2C09               	goto	i1l2810
 10399  0415                     u195_20:
 10400  0415                     i1l2812:
 10401                           
 10402                           ;main.c: 139: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 10403  0415  0876               	movf	i1LCDsend2x4@hc,w
 10404  0416  0472               	iorwf	i1LCDsend2x4@mode,w
 10405  0417  380C               	iorlw	12
 10406  0418  3187  279C  3183   	fcall	i1_WriteI2C
 10407  041B                     i1l2814:
 10408  041B  0023               	movlb	3	; select bank3
 10409  041C  0C0F               	rrf	15,w	;volatile
 10410  041D  0C89               	rrf	9,f
 10411  041E  3901               	andlw	1
 10412  041F  00F3               	movwf	??i1_LCDsend2x4
 10413  0420  0811               	movf	17,w	;volatile
 10414  0421  391F               	andlw	31
 10415  0422  0473               	iorwf	??i1_LCDsend2x4,w
 10416  0423  1D03               	btfss	3,2
 10417  0424  2C26               	goto	u196_21
 10418  0425  2C27               	goto	u196_20
 10419  0426                     u196_21:
 10420  0426  2C1B               	goto	i1l2814
 10421  0427                     u196_20:
 10422  0427                     i1l711:
 10423  0427                     i1l2816:	
 10424                           ;main.c: 140: _delay((unsigned long)((1)*(1000000/4000000.0)));
 10425                           
 10426                           
 10427                           ;main.c: 141: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10428  0427  0876               	movf	i1LCDsend2x4@hc,w
 10429  0428  0472               	iorwf	i1LCDsend2x4@mode,w
 10430  0429  3808               	iorlw	8
 10431  042A  3187  279C  3183   	fcall	i1_WriteI2C
 10432  042D                     i1l2818:
 10433  042D  0023               	movlb	3	; select bank3
 10434  042E  0C0F               	rrf	15,w	;volatile
 10435  042F  0C89               	rrf	9,f
 10436  0430  3901               	andlw	1
 10437  0431  00F3               	movwf	??i1_LCDsend2x4
 10438  0432  0811               	movf	17,w	;volatile
 10439  0433  391F               	andlw	31
 10440  0434  0473               	iorwf	??i1_LCDsend2x4,w
 10441  0435  1D03               	btfss	3,2
 10442  0436  2C38               	goto	u197_21
 10443  0437  2C39               	goto	u197_20
 10444  0438                     u197_21:
 10445  0438  2C2D               	goto	i1l2818
 10446  0439                     u197_20:
 10447  0439                     i1l2820:
 10448                           
 10449                           ;main.c: 142: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10450  0439  0877               	movf	i1LCDsend2x4@lc,w
 10451  043A  0472               	iorwf	i1LCDsend2x4@mode,w
 10452  043B  3808               	iorlw	8
 10453  043C  3187  279C  3183   	fcall	i1_WriteI2C
 10454  043F                     i1l2822:
 10455  043F  0023               	movlb	3	; select bank3
 10456  0440  0C0F               	rrf	15,w	;volatile
 10457  0441  0C89               	rrf	9,f
 10458  0442  3901               	andlw	1
 10459  0443  00F3               	movwf	??i1_LCDsend2x4
 10460  0444  0811               	movf	17,w	;volatile
 10461  0445  391F               	andlw	31
 10462  0446  0473               	iorwf	??i1_LCDsend2x4,w
 10463  0447  1D03               	btfss	3,2
 10464  0448  2C4A               	goto	u198_21
 10465  0449  2C4B               	goto	u198_20
 10466  044A                     u198_21:
 10467  044A  2C3F               	goto	i1l2822
 10468  044B                     u198_20:
 10469  044B                     i1l2824:
 10470                           
 10471                           ;main.c: 143: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 10472  044B  0877               	movf	i1LCDsend2x4@lc,w
 10473  044C  0472               	iorwf	i1LCDsend2x4@mode,w
 10474  044D  380C               	iorlw	12
 10475  044E  3187  279C  3183   	fcall	i1_WriteI2C
 10476  0451                     i1l2826:
 10477  0451  0023               	movlb	3	; select bank3
 10478  0452  0C0F               	rrf	15,w	;volatile
 10479  0453  0C89               	rrf	9,f
 10480  0454  3901               	andlw	1
 10481  0455  00F3               	movwf	??i1_LCDsend2x4
 10482  0456  0811               	movf	17,w	;volatile
 10483  0457  391F               	andlw	31
 10484  0458  0473               	iorwf	??i1_LCDsend2x4,w
 10485  0459  1D03               	btfss	3,2
 10486  045A  2C5C               	goto	u199_21
 10487  045B  2C5D               	goto	u199_20
 10488  045C                     u199_21:
 10489  045C  2C51               	goto	i1l2826
 10490  045D                     u199_20:
 10491  045D                     i1l720:
 10492  045D                     i1l2828:	
 10493                           ;main.c: 144: _delay((unsigned long)((1)*(1000000/4000000.0)));
 10494                           
 10495                           
 10496                           ;main.c: 145: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10497  045D  0877               	movf	i1LCDsend2x4@lc,w
 10498  045E  0472               	iorwf	i1LCDsend2x4@mode,w
 10499  045F  3808               	iorlw	8
 10500  0460  3187  279C  3183   	fcall	i1_WriteI2C
 10501  0463                     i1l2830:
 10502  0463  0023               	movlb	3	; select bank3
 10503  0464  0C0F               	rrf	15,w	;volatile
 10504  0465  0C89               	rrf	9,f
 10505  0466  3901               	andlw	1
 10506  0467  00F3               	movwf	??i1_LCDsend2x4
 10507  0468  0811               	movf	17,w	;volatile
 10508  0469  391F               	andlw	31
 10509  046A  0473               	iorwf	??i1_LCDsend2x4,w
 10510  046B  1D03               	btfss	3,2
 10511  046C  2C6E               	goto	u200_21
 10512  046D  2C6F               	goto	u200_20
 10513  046E                     u200_21:
 10514  046E  2C63               	goto	i1l2830
 10515  046F                     u200_20:
 10516  046F                     i1l723:
 10517                           
 10518                           ;main.c: 146: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 10519  046F  1511               	bsf	17,2	;volatile
 10520  0470                     i1l724:
 10521  0470  1911               	btfsc	17,2	;volatile
 10522  0471  2C73               	goto	u201_21
 10523  0472  2C74               	goto	u201_20
 10524  0473                     u201_21:
 10525  0473  2C70               	goto	i1l724
 10526  0474                     u201_20:
 10527  0474                     i1l2832:
 10528                           
 10529                           ;main.c: 147: _delay((unsigned long)((50)*(1000000/4000000.0)));
 10530  0474  3004               	movlw	4
 10531  0475                     u372_27:
 10532  0475  0B89               	decfsz	9,f
 10533  0476  2C75               	goto	u372_27
 10534  0477                     i1l727:
 10535  0477  0008               	return
 10536  0478                     __end_ofi1_LCDsend2x4:
 10537                           
 10538                           	psect	text30
 10539  0E0C                     __ptext30:	
 10540 ;; *************** function _TMR3_WriteTimer *****************
 10541 ;; Defined at:
 10542 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 10543 ;; Parameters:    Size  Location     Type
 10544 ;;  timerVal        2    0[COMMON] unsigned int 
 10545 ;; Auto vars:     Size  Location     Type
 10546 ;;		None
 10547 ;; Return value:  Size  Location     Type
 10548 ;;                  1    wreg      void 
 10549 ;; Registers used:
 10550 ;;		wreg, status,2
 10551 ;; Tracked objects:
 10552 ;;		On entry : 0/0
 10553 ;;		On exit  : 0/0
 10554 ;;		Unchanged: 0/0
 10555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10556 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10559 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10560 ;;Total ram usage:        2 bytes
 10561 ;; Hardware stack levels used:    1
 10562 ;; This function calls:
 10563 ;;		Nothing
 10564 ;; This function is called by:
 10565 ;;		_TMR3_ISR
 10566 ;;		_TMR3_Reload
 10567 ;; This function uses a non-reentrant model
 10568 ;;
 10569                           
 10570                           
 10571                           ;psect for function _TMR3_WriteTimer
 10572  0E0C                     _TMR3_WriteTimer:
 10573  0E0C                     i1l3256:	
 10574                           ;incstack = 0
 10575                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 10576                           
 10577                           
 10578                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 10579  0E0C  0024               	movlb	4	; select bank4
 10580  0E0D  1D14               	btfss	20,2	;volatile
 10581  0E0E  2E10               	goto	u279_21
 10582  0E0F  2E11               	goto	u279_20
 10583  0E10                     u279_21:
 10584  0E10  2E18               	goto	i1l3266
 10585  0E11                     u279_20:
 10586  0E11                     i1l3258:
 10587                           
 10588                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 10589  0E11  1014               	bcf	20,0	;volatile
 10590  0E12                     i1l3260:
 10591                           
 10592                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 10593  0E12  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 10594  0E13  0093               	movwf	19	;volatile
 10595  0E14                     i1l3262:
 10596                           
 10597                           ;tmr3.c: 136: TMR3L = timerVal;
 10598  0E14  0870               	movf	TMR3_WriteTimer@timerVal,w
 10599  0E15  0092               	movwf	18	;volatile
 10600  0E16                     i1l3264:
 10601                           
 10602                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 10603  0E16  1414               	bsf	20,0	;volatile
 10604                           
 10605                           ;tmr3.c: 140: }
 10606  0E17  2E1C               	goto	i1l453
 10607  0E18                     i1l3266:
 10608                           
 10609                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 10610  0E18  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 10611  0E19  0093               	movwf	19	;volatile
 10612  0E1A                     i1l3268:
 10613                           
 10614                           ;tmr3.c: 145: TMR3L = timerVal;
 10615  0E1A  0870               	movf	TMR3_WriteTimer@timerVal,w
 10616  0E1B  0092               	movwf	18	;volatile
 10617  0E1C                     i1l453:
 10618  0E1C  0008               	return
 10619  0E1D                     __end_of_TMR3_WriteTimer:
 10620                           
 10621                           	psect	text31
 10622  0E54                     __ptext31:	
 10623 ;; *************** function _TMR1_ISR *****************
 10624 ;; Defined at:
 10625 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 10626 ;; Parameters:    Size  Location     Type
 10627 ;;		None
 10628 ;; Auto vars:     Size  Location     Type
 10629 ;;		None
 10630 ;; Return value:  Size  Location     Type
 10631 ;;                  1    wreg      void 
 10632 ;; Registers used:
 10633 ;;		wreg, status,2, status,0, pclath, cstack
 10634 ;; Tracked objects:
 10635 ;;		On entry : 0/0
 10636 ;;		On exit  : 0/0
 10637 ;;		Unchanged: 0/0
 10638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10643 ;;Total ram usage:        0 bytes
 10644 ;; Hardware stack levels used:    1
 10645 ;; Hardware stack levels required when called:    3
 10646 ;; This function calls:
 10647 ;;		Absolute function
 10648 ;;		_Clock_ISR
 10649 ;;		_TMR1_DefaultInterruptHandler
 10650 ;;		_TMR1_WriteTimer
 10651 ;; This function is called by:
 10652 ;;		_INTERRUPT_InterruptManager
 10653 ;; This function uses a non-reentrant model
 10654 ;;
 10655                           
 10656                           
 10657                           ;psect for function _TMR1_ISR
 10658  0E54                     _TMR1_ISR:
 10659  0E54                     i1l3396:	
 10660                           ;incstack = 0
 10661                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 10662                           
 10663                           
 10664                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 10665  0E54  002E               	movlb	14	; select bank14
 10666  0E55  1010               	bcf	16,0	;volatile
 10667  0E56                     i1l3398:
 10668                           
 10669                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 10670  0E56  0021               	movlb	1	; select bank1
 10671  0E57  0847               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 10672  0E58  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 10673  0E59  0846               	movf	_timer1ReloadVal^(0+128),w	;volatile
 10674  0E5A  00F0               	movwf	TMR1_WriteTimer@timerVal
 10675  0E5B  318D  25FB  318E   	fcall	_TMR1_WriteTimer
 10676  0E5E                     i1l3400:
 10677                           
 10678                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 10679  0E5E  0021               	movlb	1	; select bank1
 10680  0E5F  0844               	movf	_TMR1_InterruptHandler^(0+128),w
 10681  0E60  0445               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 10682  0E61  1903               	btfsc	3,2
 10683  0E62  2E64               	goto	u303_21
 10684  0E63  2E65               	goto	u303_20
 10685  0E64                     u303_21:
 10686  0E64  2E6A               	goto	i1l402
 10687  0E65                     u303_20:
 10688  0E65                     i1l3402:
 10689                           
 10690                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 10691  0E65  0845               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 10692  0E66  008A               	movwf	10
 10693  0E67  0844               	movf	_TMR1_InterruptHandler^(0+128),w
 10694  0E68  000A               	callw
 10695  0E69  318E               	pagesel	$
 10696  0E6A                     i1l402:
 10697  0E6A  0008               	return
 10698  0E6B                     __end_of_TMR1_ISR:
 10699                           
 10700                           	psect	text32
 10701  0DFB                     __ptext32:	
 10702 ;; *************** function _TMR1_WriteTimer *****************
 10703 ;; Defined at:
 10704 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 10705 ;; Parameters:    Size  Location     Type
 10706 ;;  timerVal        2    0[COMMON] unsigned int 
 10707 ;; Auto vars:     Size  Location     Type
 10708 ;;		None
 10709 ;; Return value:  Size  Location     Type
 10710 ;;                  1    wreg      void 
 10711 ;; Registers used:
 10712 ;;		wreg, status,2
 10713 ;; Tracked objects:
 10714 ;;		On entry : 0/0
 10715 ;;		On exit  : 0/0
 10716 ;;		Unchanged: 0/0
 10717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10721 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10722 ;;Total ram usage:        2 bytes
 10723 ;; Hardware stack levels used:    1
 10724 ;; This function calls:
 10725 ;;		Nothing
 10726 ;; This function is called by:
 10727 ;;		_TMR1_ISR
 10728 ;;		_TMR1_Reload
 10729 ;; This function uses a non-reentrant model
 10730 ;;
 10731                           
 10732                           
 10733                           ;psect for function _TMR1_WriteTimer
 10734  0DFB                     _TMR1_WriteTimer:
 10735  0DFB                     i1l3242:	
 10736                           ;incstack = 0
 10737                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 10738                           
 10739                           
 10740                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 10741  0DFB  0024               	movlb	4	; select bank4
 10742  0DFC  1D0E               	btfss	14,2	;volatile
 10743  0DFD  2DFF               	goto	u278_21
 10744  0DFE  2E00               	goto	u278_20
 10745  0DFF                     u278_21:
 10746  0DFF  2E07               	goto	i1l3252
 10747  0E00                     u278_20:
 10748  0E00                     i1l3244:
 10749                           
 10750                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 10751  0E00  100E               	bcf	14,0	;volatile
 10752  0E01                     i1l3246:
 10753                           
 10754                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 10755  0E01  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 10756  0E02  008D               	movwf	13	;volatile
 10757  0E03                     i1l3248:
 10758                           
 10759                           ;tmr1.c: 136: TMR1L = timerVal;
 10760  0E03  0870               	movf	TMR1_WriteTimer@timerVal,w
 10761  0E04  008C               	movwf	12	;volatile
 10762  0E05                     i1l3250:
 10763                           
 10764                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 10765  0E05  140E               	bsf	14,0	;volatile
 10766                           
 10767                           ;tmr1.c: 140: }
 10768  0E06  2E0B               	goto	i1l389
 10769  0E07                     i1l3252:
 10770                           
 10771                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 10772  0E07  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 10773  0E08  008D               	movwf	13	;volatile
 10774  0E09                     i1l3254:
 10775                           
 10776                           ;tmr1.c: 145: TMR1L = timerVal;
 10777  0E09  0870               	movf	TMR1_WriteTimer@timerVal,w
 10778  0E0A  008C               	movwf	12	;volatile
 10779  0E0B                     i1l389:
 10780  0E0B  0008               	return
 10781  0E0C                     __end_of_TMR1_WriteTimer:
 10782                           
 10783                           	psect	text33
 10784  0FC0                     __ptext33:	
 10785 ;; *************** function _Clock_ISR *****************
 10786 ;; Defined at:
 10787 ;;		line 220 in file "main.c"
 10788 ;; Parameters:    Size  Location     Type
 10789 ;;		None
 10790 ;; Auto vars:     Size  Location     Type
 10791 ;;		None
 10792 ;; Return value:  Size  Location     Type
 10793 ;;                  1    wreg      void 
 10794 ;; Registers used:
 10795 ;;		wreg, status,2, status,0, pclath, cstack
 10796 ;; Tracked objects:
 10797 ;;		On entry : 0/0
 10798 ;;		On exit  : 0/0
 10799 ;;		Unchanged: 0/0
 10800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10803 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10804 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10805 ;;Total ram usage:        3 bytes
 10806 ;; Hardware stack levels used:    1
 10807 ;; Hardware stack levels required when called:    2
 10808 ;; This function calls:
 10809 ;;		_ADCC_GetSingleConversion
 10810 ;;		_tsttc
 10811 ;; This function is called by:
 10812 ;;		_main
 10813 ;;		_TMR1_ISR
 10814 ;; This function uses a non-reentrant model
 10815 ;;
 10816                           
 10817                           
 10818                           ;psect for function _Clock_ISR
 10819  0FC0                     _Clock_ISR:
 10820  0FC0                     i1l3322:	
 10821                           ;incstack = 0
 10822                           ; Regs used in _Clock_ISR: [wreg+status,2+status,0+pclath+cstack]
 10823                           
 10824                           
 10825                           ;main.c: 222: c = tsttc();
 10826  0FC0  3181  21E4  318F   	fcall	_tsttc
 10827  0FC3  00F4               	movwf	??_Clock_ISR
 10828  0FC4  0874               	movf	??_Clock_ISR,w
 10829  0FC5  0020               	movlb	0	; select bank0
 10830  0FC6  00D3               	movwf	_c
 10831                           
 10832                           ;main.c: 224: lum = ADCC_GetSingleConversion(channel_ANA0) >> 12;
 10833  0FC7  3000               	movlw	0
 10834  0FC8  318E  261D  318F   	fcall	_ADCC_GetSingleConversion
 10835  0FCB  0870               	movf	?_ADCC_GetSingleConversion,w
 10836  0FCC  00F4               	movwf	??_Clock_ISR
 10837  0FCD  0871               	movf	?_ADCC_GetSingleConversion+1,w
 10838  0FCE  00F5               	movwf	??_Clock_ISR+1
 10839  0FCF  0E75               	swapf	??_Clock_ISR+1,w
 10840  0FD0  390F               	andlw	15
 10841  0FD1  00F4               	movwf	??_Clock_ISR
 10842  0FD2  01F5               	clrf	??_Clock_ISR+1
 10843  0FD3  0874               	movf	??_Clock_ISR,w
 10844  0FD4  00F6               	movwf	??_Clock_ISR+2
 10845  0FD5  0876               	movf	??_Clock_ISR+2,w
 10846  0FD6  0020               	movlb	0	; select bank0
 10847  0FD7  00D2               	movwf	_lum
 10848  0FD8                     i1l3324:
 10849                           
 10850                           ;main.c: 226: t.s++;
 10851  0FD8  3001               	movlw	1
 10852  0FD9  07CC               	addwf	_t+4,f
 10853  0FDA  3000               	movlw	0
 10854  0FDB  3DCD               	addwfc	_t+5,f
 10855  0FDC                     i1l3326:
 10856                           
 10857                           ;main.c: 228: if(t.s==60){
 10858  0FDC  303C               	movlw	60
 10859  0FDD  064C               	xorwf	_t+4,w
 10860  0FDE  044D               	iorwf	_t+5,w
 10861  0FDF  1D03               	btfss	3,2
 10862  0FE0  2FE2               	goto	u298_21
 10863  0FE1  2FE3               	goto	u298_20
 10864  0FE2                     u298_21:
 10865  0FE2  2FE9               	goto	i1l3332
 10866  0FE3                     u298_20:
 10867  0FE3                     i1l3328:
 10868                           
 10869                           ;main.c: 229: t.m++;
 10870  0FE3  3001               	movlw	1
 10871  0FE4  07CA               	addwf	_t+2,f
 10872  0FE5  3000               	movlw	0
 10873  0FE6  3DCB               	addwfc	_t+3,f
 10874  0FE7                     i1l3330:
 10875                           
 10876                           ;main.c: 230: t.s=0;
 10877  0FE7  01CC               	clrf	_t+4
 10878  0FE8  01CD               	clrf	_t+5
 10879  0FE9                     i1l3332:
 10880                           
 10881                           ;main.c: 231: };main.c: 232: if(t.m==60){
 10882  0FE9  303C               	movlw	60
 10883  0FEA  064A               	xorwf	_t+2,w
 10884  0FEB  044B               	iorwf	_t+3,w
 10885  0FEC  1D03               	btfss	3,2
 10886  0FED  2FEF               	goto	u299_21
 10887  0FEE  2FF0               	goto	u299_20
 10888  0FEF                     u299_21:
 10889  0FEF  2FF6               	goto	i1l3338
 10890  0FF0                     u299_20:
 10891  0FF0                     i1l3334:
 10892                           
 10893                           ;main.c: 233: t.h++;
 10894  0FF0  3001               	movlw	1
 10895  0FF1  07C8               	addwf	_t,f
 10896  0FF2  3000               	movlw	0
 10897  0FF3  3DC9               	addwfc	_t+1,f
 10898  0FF4                     i1l3336:
 10899                           
 10900                           ;main.c: 234: t.m=0;
 10901  0FF4  01CA               	clrf	_t+2
 10902  0FF5  01CB               	clrf	_t+3
 10903  0FF6                     i1l3338:
 10904                           
 10905                           ;main.c: 235: };main.c: 236: if(t.h==24){
 10906  0FF6  3018               	movlw	24
 10907  0FF7  0648               	xorwf	_t,w
 10908  0FF8  0449               	iorwf	_t+1,w
 10909  0FF9  1D03               	btfss	3,2
 10910  0FFA  2FFC               	goto	u300_21
 10911  0FFB  2FFD               	goto	u300_20
 10912  0FFC                     u300_21:
 10913  0FFC  2FFF               	goto	i1l758
 10914  0FFD                     u300_20:
 10915  0FFD                     i1l3340:
 10916                           
 10917                           ;main.c: 237: t.h=0;
 10918  0FFD  01C8               	clrf	_t
 10919  0FFE  01C9               	clrf	_t+1
 10920  0FFF                     i1l758:
 10921  0FFF  0008               	return
 10922  1000                     __end_of_Clock_ISR:
 10923                           
 10924                           	psect	text34
 10925  07FF                     __ptext34:	
 10926 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 10927 ;; Defined at:
 10928 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 10929 ;; Parameters:    Size  Location     Type
 10930 ;;		None
 10931 ;; Auto vars:     Size  Location     Type
 10932 ;;		None
 10933 ;; Return value:  Size  Location     Type
 10934 ;;                  1    wreg      void 
 10935 ;; Registers used:
 10936 ;;		None
 10937 ;; Tracked objects:
 10938 ;;		On entry : 0/0
 10939 ;;		On exit  : 0/0
 10940 ;;		Unchanged: 0/0
 10941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10946 ;;Total ram usage:        0 bytes
 10947 ;; Hardware stack levels used:    1
 10948 ;; This function calls:
 10949 ;;		Nothing
 10950 ;; This function is called by:
 10951 ;;		_TMR1_Initialize
 10952 ;;		_TMR1_ISR
 10953 ;; This function uses a non-reentrant model
 10954 ;;
 10955                           
 10956                           
 10957                           ;psect for function _TMR1_DefaultInterruptHandler
 10958  07FF                     _TMR1_DefaultInterruptHandler:
 10959  07FF                     i1l408:	
 10960                           ;incstack = 0
 10961                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 10962                           
 10963  07FF  0008               	return
 10964  0800                     __end_of_TMR1_DefaultInterruptHandler:
 10965                           
 10966                           	psect	text35
 10967  01E4                     __ptext35:	
 10968 ;; *************** function _tsttc *****************
 10969 ;; Defined at:
 10970 ;;		line 53 in file "main.c"
 10971 ;; Parameters:    Size  Location     Type
 10972 ;;		None
 10973 ;; Auto vars:     Size  Location     Type
 10974 ;;  value           1    3[COMMON] unsigned char 
 10975 ;; Return value:  Size  Location     Type
 10976 ;;                  1    wreg      unsigned char 
 10977 ;; Registers used:
 10978 ;;		wreg, status,2, status,0, pclath, cstack
 10979 ;; Tracked objects:
 10980 ;;		On entry : 0/0
 10981 ;;		On exit  : 0/0
 10982 ;;		Unchanged: 0/0
 10983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10985 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10986 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10987 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10988 ;;Total ram usage:        2 bytes
 10989 ;; Hardware stack levels used:    1
 10990 ;; Hardware stack levels required when called:    1
 10991 ;; This function calls:
 10992 ;;		_ReadI2C
 10993 ;;		i1_WriteI2C
 10994 ;; This function is called by:
 10995 ;;		_Clock_ISR
 10996 ;; This function uses a non-reentrant model
 10997 ;;
 10998                           
 10999                           
 11000                           ;psect for function _tsttc
 11001  01E4                     _tsttc:
 11002  01E4                     i1l515:	
 11003                           ;incstack = 0
 11004                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 11005                           ;main.c: 55: unsigned char value;;main.c: 56: do{
 11006                           
 11007  01E4                     i1l2952:	
 11008                           ;main.c: 57: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11009                           
 11010  01E4  0023               	movlb	3	; select bank3
 11011  01E5  0C0F               	rrf	15,w	;volatile
 11012  01E6  0C89               	rrf	9,f
 11013  01E7  3901               	andlw	1
 11014  01E8  00F2               	movwf	??_tsttc
 11015  01E9  0811               	movf	17,w	;volatile
 11016  01EA  391F               	andlw	31
 11017  01EB  0472               	iorwf	??_tsttc,w
 11018  01EC  1D03               	btfss	3,2
 11019  01ED  29EF               	goto	u233_21
 11020  01EE  29F0               	goto	u233_20
 11021  01EF                     u233_21:
 11022  01EF  29E4               	goto	i1l2952
 11023  01F0                     u233_20:
 11024  01F0                     i1l518:
 11025                           
 11026                           ;main.c: 58: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 11027  01F0  1411               	bsf	17,0	;volatile
 11028  01F1                     i1l519:
 11029  01F1  1811               	btfsc	17,0	;volatile
 11030  01F2  29F4               	goto	u234_21
 11031  01F3  29F5               	goto	u234_20
 11032  01F4                     u234_21:
 11033  01F4  29F1               	goto	i1l519
 11034  01F5                     u234_20:
 11035  01F5                     i1l2954:
 11036  01F5  0C0F               	rrf	15,w	;volatile
 11037  01F6  0C89               	rrf	9,f
 11038  01F7  3901               	andlw	1
 11039  01F8  00F2               	movwf	??_tsttc
 11040  01F9  0811               	movf	17,w	;volatile
 11041  01FA  391F               	andlw	31
 11042  01FB  0472               	iorwf	??_tsttc,w
 11043  01FC  1D03               	btfss	3,2
 11044  01FD  29FF               	goto	u235_21
 11045  01FE  2A00               	goto	u235_20
 11046  01FF                     u235_21:
 11047  01FF  29F5               	goto	i1l2954
 11048  0200                     u235_20:
 11049  0200                     i1l2956:
 11050                           
 11051                           ;main.c: 60: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11052  0200  309A               	movlw	154
 11053  0201  3187  279C  3181   	fcall	i1_WriteI2C
 11054  0204                     i1l2958:
 11055  0204  0023               	movlb	3	; select bank3
 11056  0205  0C0F               	rrf	15,w	;volatile
 11057  0206  0C89               	rrf	9,f
 11058  0207  3901               	andlw	1
 11059  0208  00F2               	movwf	??_tsttc
 11060  0209  0811               	movf	17,w	;volatile
 11061  020A  391F               	andlw	31
 11062  020B  0472               	iorwf	??_tsttc,w
 11063  020C  1D03               	btfss	3,2
 11064  020D  2A0F               	goto	u236_21
 11065  020E  2A10               	goto	u236_20
 11066  020F                     u236_21:
 11067  020F  2A04               	goto	i1l2958
 11068  0210                     u236_20:
 11069  0210                     i1l2960:
 11070                           
 11071                           ;main.c: 61: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11072  0210  3001               	movlw	1
 11073  0211  3187  279C  3181   	fcall	i1_WriteI2C
 11074  0214                     i1l2962:
 11075  0214  0023               	movlb	3	; select bank3
 11076  0215  0C0F               	rrf	15,w	;volatile
 11077  0216  0C89               	rrf	9,f
 11078  0217  3901               	andlw	1
 11079  0218  00F2               	movwf	??_tsttc
 11080  0219  0811               	movf	17,w	;volatile
 11081  021A  391F               	andlw	31
 11082  021B  0472               	iorwf	??_tsttc,w
 11083  021C  1D03               	btfss	3,2
 11084  021D  2A1F               	goto	u237_21
 11085  021E  2A20               	goto	u237_20
 11086  021F                     u237_21:
 11087  021F  2A14               	goto	i1l2962
 11088  0220                     u237_20:
 11089  0220                     i1l530:
 11090                           
 11091                           ;main.c: 62: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 11092  0220  1491               	bsf	17,1	;volatile
 11093  0221                     i1l531:
 11094  0221  1891               	btfsc	17,1	;volatile
 11095  0222  2A24               	goto	u238_21
 11096  0223  2A25               	goto	u238_20
 11097  0224                     u238_21:
 11098  0224  2A21               	goto	i1l531
 11099  0225                     u238_20:
 11100  0225                     i1l2964:
 11101  0225  0C0F               	rrf	15,w	;volatile
 11102  0226  0C89               	rrf	9,f
 11103  0227  3901               	andlw	1
 11104  0228  00F2               	movwf	??_tsttc
 11105  0229  0811               	movf	17,w	;volatile
 11106  022A  391F               	andlw	31
 11107  022B  0472               	iorwf	??_tsttc,w
 11108  022C  1D03               	btfss	3,2
 11109  022D  2A2F               	goto	u239_21
 11110  022E  2A30               	goto	u239_20
 11111  022F                     u239_21:
 11112  022F  2A25               	goto	i1l2964
 11113  0230                     u239_20:
 11114  0230                     i1l2966:
 11115                           
 11116                           ;main.c: 63: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11117  0230  309B               	movlw	155
 11118  0231  3187  279C  3181   	fcall	i1_WriteI2C
 11119  0234                     i1l2968:
 11120  0234  0023               	movlb	3	; select bank3
 11121  0235  0C0F               	rrf	15,w	;volatile
 11122  0236  0C89               	rrf	9,f
 11123  0237  3901               	andlw	1
 11124  0238  00F2               	movwf	??_tsttc
 11125  0239  0811               	movf	17,w	;volatile
 11126  023A  391F               	andlw	31
 11127  023B  0472               	iorwf	??_tsttc,w
 11128  023C  1D03               	btfss	3,2
 11129  023D  2A3F               	goto	u240_21
 11130  023E  2A40               	goto	u240_20
 11131  023F                     u240_21:
 11132  023F  2A34               	goto	i1l2968
 11133  0240                     u240_20:
 11134  0240                     i1l2970:
 11135                           
 11136                           ;main.c: 64: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11137  0240  318E  2682  3181   	fcall	_ReadI2C
 11138  0243  00F2               	movwf	??_tsttc
 11139  0244  0872               	movf	??_tsttc,w
 11140  0245  00F3               	movwf	tsttc@value
 11141  0246                     i1l2972:
 11142  0246  0023               	movlb	3	; select bank3
 11143  0247  0C0F               	rrf	15,w	;volatile
 11144  0248  0C89               	rrf	9,f
 11145  0249  3901               	andlw	1
 11146  024A  00F2               	movwf	??_tsttc
 11147  024B  0811               	movf	17,w	;volatile
 11148  024C  391F               	andlw	31
 11149  024D  0472               	iorwf	??_tsttc,w
 11150  024E  1D03               	btfss	3,2
 11151  024F  2A51               	goto	u241_21
 11152  0250  2A52               	goto	u241_20
 11153  0251                     u241_21:
 11154  0251  2A46               	goto	i1l2972
 11155  0252                     u241_20:
 11156  0252                     i1l542:
 11157                           
 11158                           ;main.c: 65: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11159  0252  1691               	bsf	17,5	;volatile
 11160  0253  1611               	bsf	17,4	;volatile
 11161  0254                     i1l543:
 11162  0254  1A11               	btfsc	17,4	;volatile
 11163  0255  2A57               	goto	u242_21
 11164  0256  2A58               	goto	u242_20
 11165  0257                     u242_21:
 11166  0257  2A54               	goto	i1l543
 11167  0258                     u242_20:
 11168  0258                     i1l2974:
 11169  0258  0C0F               	rrf	15,w	;volatile
 11170  0259  0C89               	rrf	9,f
 11171  025A  3901               	andlw	1
 11172  025B  00F2               	movwf	??_tsttc
 11173  025C  0811               	movf	17,w	;volatile
 11174  025D  391F               	andlw	31
 11175  025E  0472               	iorwf	??_tsttc,w
 11176  025F  1D03               	btfss	3,2
 11177  0260  2A62               	goto	u243_21
 11178  0261  2A63               	goto	u243_20
 11179  0262                     u243_21:
 11180  0262  2A58               	goto	i1l2974
 11181  0263                     u243_20:
 11182  0263                     i1l548:
 11183                           
 11184                           ;main.c: 66: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11185  0263  1511               	bsf	17,2	;volatile
 11186  0264                     i1l549:
 11187  0264  1911               	btfsc	17,2	;volatile
 11188  0265  2A67               	goto	u244_21
 11189  0266  2A68               	goto	u244_20
 11190  0267                     u244_21:
 11191  0267  2A64               	goto	i1l549
 11192  0268                     u244_20:
 11193  0268                     i1l551:
 11194                           
 11195                           ;main.c: 67: } while (!(value & 0x40));
 11196  0268  1F73               	btfss	tsttc@value,6
 11197  0269  2A6B               	goto	u245_21
 11198  026A  2A6C               	goto	u245_20
 11199  026B                     u245_21:
 11200  026B  29E4               	goto	i1l515
 11201  026C                     u245_20:
 11202  026C                     i1l2976:
 11203  026C  0C0F               	rrf	15,w	;volatile
 11204  026D  0C89               	rrf	9,f
 11205  026E  3901               	andlw	1
 11206  026F  00F2               	movwf	??_tsttc
 11207  0270  0811               	movf	17,w	;volatile
 11208  0271  391F               	andlw	31
 11209  0272  0472               	iorwf	??_tsttc,w
 11210  0273  1D03               	btfss	3,2
 11211  0274  2A76               	goto	u246_21
 11212  0275  2A77               	goto	u246_20
 11213  0276                     u246_21:
 11214  0276  2A6C               	goto	i1l2976
 11215  0277                     u246_20:
 11216  0277                     i1l555:
 11217                           
 11218                           ;main.c: 70: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 11219  0277  1411               	bsf	17,0	;volatile
 11220  0278                     i1l556:
 11221  0278  1811               	btfsc	17,0	;volatile
 11222  0279  2A7B               	goto	u247_21
 11223  027A  2A7C               	goto	u247_20
 11224  027B                     u247_21:
 11225  027B  2A78               	goto	i1l556
 11226  027C                     u247_20:
 11227  027C                     i1l2978:
 11228  027C  0C0F               	rrf	15,w	;volatile
 11229  027D  0C89               	rrf	9,f
 11230  027E  3901               	andlw	1
 11231  027F  00F2               	movwf	??_tsttc
 11232  0280  0811               	movf	17,w	;volatile
 11233  0281  391F               	andlw	31
 11234  0282  0472               	iorwf	??_tsttc,w
 11235  0283  1D03               	btfss	3,2
 11236  0284  2A86               	goto	u248_21
 11237  0285  2A87               	goto	u248_20
 11238  0286                     u248_21:
 11239  0286  2A7C               	goto	i1l2978
 11240  0287                     u248_20:
 11241  0287                     i1l2980:
 11242                           
 11243                           ;main.c: 71: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11244  0287  309A               	movlw	154
 11245  0288  3187  279C  3181   	fcall	i1_WriteI2C
 11246  028B                     i1l2982:
 11247  028B  0023               	movlb	3	; select bank3
 11248  028C  0C0F               	rrf	15,w	;volatile
 11249  028D  0C89               	rrf	9,f
 11250  028E  3901               	andlw	1
 11251  028F  00F2               	movwf	??_tsttc
 11252  0290  0811               	movf	17,w	;volatile
 11253  0291  391F               	andlw	31
 11254  0292  0472               	iorwf	??_tsttc,w
 11255  0293  1D03               	btfss	3,2
 11256  0294  2A96               	goto	u249_21
 11257  0295  2A97               	goto	u249_20
 11258  0296                     u249_21:
 11259  0296  2A8B               	goto	i1l2982
 11260  0297                     u249_20:
 11261  0297                     i1l2984:
 11262                           
 11263                           ;main.c: 72: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11264  0297  3000               	movlw	0
 11265  0298  3187  279C  3181   	fcall	i1_WriteI2C
 11266  029B                     i1l2986:
 11267  029B  0023               	movlb	3	; select bank3
 11268  029C  0C0F               	rrf	15,w	;volatile
 11269  029D  0C89               	rrf	9,f
 11270  029E  3901               	andlw	1
 11271  029F  00F2               	movwf	??_tsttc
 11272  02A0  0811               	movf	17,w	;volatile
 11273  02A1  391F               	andlw	31
 11274  02A2  0472               	iorwf	??_tsttc,w
 11275  02A3  1D03               	btfss	3,2
 11276  02A4  2AA6               	goto	u250_21
 11277  02A5  2AA7               	goto	u250_20
 11278  02A6                     u250_21:
 11279  02A6  2A9B               	goto	i1l2986
 11280  02A7                     u250_20:
 11281  02A7                     i1l567:
 11282                           
 11283                           ;main.c: 73: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 11284  02A7  1491               	bsf	17,1	;volatile
 11285  02A8                     i1l568:
 11286  02A8  1891               	btfsc	17,1	;volatile
 11287  02A9  2AAB               	goto	u251_21
 11288  02AA  2AAC               	goto	u251_20
 11289  02AB                     u251_21:
 11290  02AB  2AA8               	goto	i1l568
 11291  02AC                     u251_20:
 11292  02AC                     i1l2988:
 11293  02AC  0C0F               	rrf	15,w	;volatile
 11294  02AD  0C89               	rrf	9,f
 11295  02AE  3901               	andlw	1
 11296  02AF  00F2               	movwf	??_tsttc
 11297  02B0  0811               	movf	17,w	;volatile
 11298  02B1  391F               	andlw	31
 11299  02B2  0472               	iorwf	??_tsttc,w
 11300  02B3  1D03               	btfss	3,2
 11301  02B4  2AB6               	goto	u252_21
 11302  02B5  2AB7               	goto	u252_20
 11303  02B6                     u252_21:
 11304  02B6  2AAC               	goto	i1l2988
 11305  02B7                     u252_20:
 11306  02B7                     i1l2990:
 11307                           
 11308                           ;main.c: 74: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11309  02B7  309B               	movlw	155
 11310  02B8  3187  279C  3181   	fcall	i1_WriteI2C
 11311  02BB                     i1l2992:
 11312  02BB  0023               	movlb	3	; select bank3
 11313  02BC  0C0F               	rrf	15,w	;volatile
 11314  02BD  0C89               	rrf	9,f
 11315  02BE  3901               	andlw	1
 11316  02BF  00F2               	movwf	??_tsttc
 11317  02C0  0811               	movf	17,w	;volatile
 11318  02C1  391F               	andlw	31
 11319  02C2  0472               	iorwf	??_tsttc,w
 11320  02C3  1D03               	btfss	3,2
 11321  02C4  2AC6               	goto	u253_21
 11322  02C5  2AC7               	goto	u253_20
 11323  02C6                     u253_21:
 11324  02C6  2ABB               	goto	i1l2992
 11325  02C7                     u253_20:
 11326  02C7                     i1l2994:
 11327                           
 11328                           ;main.c: 75: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11329  02C7  318E  2682  3181   	fcall	_ReadI2C
 11330  02CA  00F2               	movwf	??_tsttc
 11331  02CB  0872               	movf	??_tsttc,w
 11332  02CC  00F3               	movwf	tsttc@value
 11333  02CD                     i1l2996:
 11334  02CD  0023               	movlb	3	; select bank3
 11335  02CE  0C0F               	rrf	15,w	;volatile
 11336  02CF  0C89               	rrf	9,f
 11337  02D0  3901               	andlw	1
 11338  02D1  00F2               	movwf	??_tsttc
 11339  02D2  0811               	movf	17,w	;volatile
 11340  02D3  391F               	andlw	31
 11341  02D4  0472               	iorwf	??_tsttc,w
 11342  02D5  1D03               	btfss	3,2
 11343  02D6  2AD8               	goto	u254_21
 11344  02D7  2AD9               	goto	u254_20
 11345  02D8                     u254_21:
 11346  02D8  2ACD               	goto	i1l2996
 11347  02D9                     u254_20:
 11348  02D9                     i1l579:
 11349                           
 11350                           ;main.c: 76: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11351  02D9  1691               	bsf	17,5	;volatile
 11352  02DA  1611               	bsf	17,4	;volatile
 11353  02DB                     i1l580:
 11354  02DB  1A11               	btfsc	17,4	;volatile
 11355  02DC  2ADE               	goto	u255_21
 11356  02DD  2ADF               	goto	u255_20
 11357  02DE                     u255_21:
 11358  02DE  2ADB               	goto	i1l580
 11359  02DF                     u255_20:
 11360  02DF                     i1l2998:
 11361  02DF  0C0F               	rrf	15,w	;volatile
 11362  02E0  0C89               	rrf	9,f
 11363  02E1  3901               	andlw	1
 11364  02E2  00F2               	movwf	??_tsttc
 11365  02E3  0811               	movf	17,w	;volatile
 11366  02E4  391F               	andlw	31
 11367  02E5  0472               	iorwf	??_tsttc,w
 11368  02E6  1D03               	btfss	3,2
 11369  02E7  2AE9               	goto	u256_21
 11370  02E8  2AEA               	goto	u256_20
 11371  02E9                     u256_21:
 11372  02E9  2ADF               	goto	i1l2998
 11373  02EA                     u256_20:
 11374  02EA                     i1l585:
 11375                           
 11376                           ;main.c: 77: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11377  02EA  1511               	bsf	17,2	;volatile
 11378  02EB                     i1l586:
 11379  02EB  1911               	btfsc	17,2	;volatile
 11380  02EC  2AEE               	goto	u257_21
 11381  02ED  2AEF               	goto	u257_20
 11382  02EE                     u257_21:
 11383  02EE  2AEB               	goto	i1l586
 11384  02EF                     u257_20:
 11385  02EF                     i1l3000:
 11386                           
 11387                           ;main.c: 79: return value;
 11388  02EF  0873               	movf	tsttc@value,w
 11389  02F0                     i1l589:
 11390  02F0  0008               	return
 11391  02F1                     __end_of_tsttc:
 11392                           
 11393                           	psect	text36
 11394  079C                     __ptext36:	
 11395 ;; *************** function i1_WriteI2C *****************
 11396 ;; Defined at:
 11397 ;;		line 47 in file "I2C/i2c.c"
 11398 ;; Parameters:    Size  Location     Type
 11399 ;;  data_out        1    wreg     unsigned char 
 11400 ;; Auto vars:     Size  Location     Type
 11401 ;;  data_out        1    1[COMMON] unsigned char 
 11402 ;; Return value:  Size  Location     Type
 11403 ;;                  1    wreg      char 
 11404 ;; Registers used:
 11405 ;;		wreg, status,2, status,0
 11406 ;; Tracked objects:
 11407 ;;		On entry : 0/0
 11408 ;;		On exit  : 0/0
 11409 ;;		Unchanged: 0/0
 11410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11413 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11414 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11415 ;;Total ram usage:        2 bytes
 11416 ;; Hardware stack levels used:    1
 11417 ;; This function calls:
 11418 ;;		Nothing
 11419 ;; This function is called by:
 11420 ;;		_tsttc
 11421 ;;		i1_LCDsend2x4
 11422 ;; This function uses a non-reentrant model
 11423 ;;
 11424                           
 11425                           
 11426                           ;psect for function i1_WriteI2C
 11427  079C                     i1_WriteI2C:
 11428                           
 11429                           ;incstack = 0
 11430                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 11431                           ;i1WriteI2C@data_out stored from wreg
 11432  079C  00F1               	movwf	i1WriteI2C@data_out
 11433  079D                     i1l2766:
 11434                           
 11435                           ;i2c.c: 49: SSP1BUF = data_out;
 11436  079D  0871               	movf	i1WriteI2C@data_out,w
 11437  079E  0023               	movlb	3	; select bank3
 11438  079F  008C               	movwf	12	;volatile
 11439  07A0                     i1l2768:
 11440                           
 11441                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 11442  07A0  1F90               	btfss	16,7	;volatile
 11443  07A1  2FA3               	goto	u181_21
 11444  07A2  2FA4               	goto	u181_20
 11445  07A3                     u181_21:
 11446  07A3  2FA5               	goto	i1l2774
 11447  07A4                     u181_20:
 11448  07A4  2FE6               	goto	i1l30
 11449  07A5                     i1l2774:
 11450                           
 11451                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 11452  07A5  300F               	movlw	15
 11453  07A6  0510               	andwf	16,w	;volatile
 11454  07A7  00F0               	movwf	??i1_WriteI2C
 11455  07A8  3008               	movlw	8
 11456  07A9  0670               	xorwf	??i1_WriteI2C,w
 11457  07AA  1903               	btfsc	3,2
 11458  07AB  2FAD               	goto	u182_21
 11459  07AC  2FAE               	goto	u182_20
 11460  07AD                     u182_21:
 11461  07AD  2FC4               	goto	i1l2786
 11462  07AE                     u182_20:
 11463  07AE                     i1l2776:
 11464  07AE  300F               	movlw	15
 11465  07AF  0510               	andwf	16,w	;volatile
 11466  07B0  00F0               	movwf	??i1_WriteI2C
 11467  07B1  300B               	movlw	11
 11468  07B2  0670               	xorwf	??i1_WriteI2C,w
 11469  07B3  1903               	btfsc	3,2
 11470  07B4  2FB6               	goto	u183_21
 11471  07B5  2FB7               	goto	u183_20
 11472  07B6                     u183_21:
 11473  07B6  2FC4               	goto	i1l2786
 11474  07B7                     u183_20:
 11475  07B7                     i1l2778:
 11476                           
 11477                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 11478  07B7  1610               	bsf	16,4	;volatile
 11479  07B8                     i1l33:	
 11480                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 11481                           
 11482  07B8  002E               	movlb	14	; select bank14
 11483  07B9  1C0F               	btfss	15,0	;volatile
 11484  07BA  2FBC               	goto	u184_21
 11485  07BB  2FBD               	goto	u184_20
 11486  07BC                     u184_21:
 11487  07BC  2FB8               	goto	i1l33
 11488  07BD                     u184_20:
 11489  07BD                     i1l35:
 11490                           
 11491                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 11492  07BD  0023               	movlb	3	; select bank3
 11493  07BE  190F               	btfsc	15,2	;volatile
 11494  07BF  2FC1               	goto	u185_21
 11495  07C0  2FC2               	goto	u185_20
 11496  07C1                     u185_21:
 11497  07C1  2FE6               	goto	i1l30
 11498  07C2                     u185_20:
 11499  07C2                     i1l2780:
 11500  07C2  080F               	movf	15,w	;volatile
 11501  07C3  2FE6               	goto	i1l30
 11502  07C4                     i1l2786:
 11503                           
 11504                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 11505  07C4  300F               	movlw	15
 11506  07C5  0510               	andwf	16,w	;volatile
 11507  07C6  00F0               	movwf	??i1_WriteI2C
 11508  07C7  3008               	movlw	8
 11509  07C8  0670               	xorwf	??i1_WriteI2C,w
 11510  07C9  1903               	btfsc	3,2
 11511  07CA  2FCC               	goto	u186_21
 11512  07CB  2FCD               	goto	u186_20
 11513  07CC                     u186_21:
 11514  07CC  2FD6               	goto	i1l42
 11515  07CD                     u186_20:
 11516  07CD                     i1l2788:
 11517  07CD  300F               	movlw	15
 11518  07CE  0510               	andwf	16,w	;volatile
 11519  07CF  00F0               	movwf	??i1_WriteI2C
 11520  07D0  300B               	movlw	11
 11521  07D1  0670               	xorwf	??i1_WriteI2C,w
 11522  07D2  1D03               	btfss	3,2
 11523  07D3  2FD5               	goto	u187_21
 11524  07D4  2FD6               	goto	u187_20
 11525  07D5                     u187_21:
 11526  07D5  2FE6               	goto	i1l30
 11527  07D6                     u187_20:
 11528  07D6                     i1l42:
 11529  07D6  180F               	btfsc	15,0	;volatile
 11530  07D7  2FD9               	goto	u188_21
 11531  07D8  2FDA               	goto	u188_20
 11532  07D9                     u188_21:
 11533  07D9  2FD6               	goto	i1l42
 11534  07DA                     u188_20:
 11535  07DA                     i1l2790:
 11536  07DA  0C0F               	rrf	15,w	;volatile
 11537  07DB  0C89               	rrf	9,f
 11538  07DC  3901               	andlw	1
 11539  07DD  00F0               	movwf	??i1_WriteI2C
 11540  07DE  0811               	movf	17,w	;volatile
 11541  07DF  391F               	andlw	31
 11542  07E0  0470               	iorwf	??i1_WriteI2C,w
 11543  07E1  1D03               	btfss	3,2
 11544  07E2  2FE4               	goto	u189_21
 11545  07E3  2FE5               	goto	u189_20
 11546  07E4                     u189_21:
 11547  07E4  2FDA               	goto	i1l2790
 11548  07E5                     u189_20:
 11549  07E5                     i1l47:
 11550                           
 11551                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 11552  07E5  0811               	movf	17,w	;volatile
 11553  07E6                     i1l30:
 11554  07E6  0008               	return
 11555  07E7                     __end_ofi1_WriteI2C:
 11556                           
 11557                           	psect	text37
 11558  0E82                     __ptext37:	
 11559 ;; *************** function _ReadI2C *****************
 11560 ;; Defined at:
 11561 ;;		line 32 in file "I2C/i2c.c"
 11562 ;; Parameters:    Size  Location     Type
 11563 ;;		None
 11564 ;; Auto vars:     Size  Location     Type
 11565 ;;		None
 11566 ;; Return value:  Size  Location     Type
 11567 ;;                  1    wreg      unsigned char 
 11568 ;; Registers used:
 11569 ;;		wreg, status,2, status,0
 11570 ;; Tracked objects:
 11571 ;;		On entry : 0/0
 11572 ;;		On exit  : 0/0
 11573 ;;		Unchanged: 0/0
 11574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11577 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11578 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11579 ;;Total ram usage:        1 bytes
 11580 ;; Hardware stack levels used:    1
 11581 ;; This function calls:
 11582 ;;		Nothing
 11583 ;; This function is called by:
 11584 ;;		_tsttc
 11585 ;;		_LCDrecv
 11586 ;; This function uses a non-reentrant model
 11587 ;;
 11588                           
 11589                           
 11590                           ;psect for function _ReadI2C
 11591  0E82                     _ReadI2C:
 11592  0E82                     i1l2834:	
 11593                           ;incstack = 0
 11594                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 11595                           
 11596                           
 11597                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 11598  0E82  300F               	movlw	15
 11599  0E83  0023               	movlb	3	; select bank3
 11600  0E84  0510               	andwf	16,w	;volatile
 11601  0E85  00F0               	movwf	??_ReadI2C
 11602  0E86  3008               	movlw	8
 11603  0E87  0670               	xorwf	??_ReadI2C,w
 11604  0E88  1903               	btfsc	3,2
 11605  0E89  2E8B               	goto	u202_21
 11606  0E8A  2E8C               	goto	u202_20
 11607  0E8B                     u202_21:
 11608  0E8B  2E95               	goto	i1l22
 11609  0E8C                     u202_20:
 11610  0E8C                     i1l2836:
 11611  0E8C  300F               	movlw	15
 11612  0E8D  0510               	andwf	16,w	;volatile
 11613  0E8E  00F0               	movwf	??_ReadI2C
 11614  0E8F  300B               	movlw	11
 11615  0E90  0670               	xorwf	??_ReadI2C,w
 11616  0E91  1D03               	btfss	3,2
 11617  0E92  2E94               	goto	u203_21
 11618  0E93  2E95               	goto	u203_20
 11619  0E94                     u203_21:
 11620  0E94  2E96               	goto	i1l23
 11621  0E95                     u203_20:
 11622  0E95                     i1l22:
 11623                           
 11624                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
 11625  0E95  1591               	bsf	17,3	;volatile
 11626  0E96                     i1l23:
 11627  0E96  1C0F               	btfss	15,0	;volatile
 11628  0E97  2E99               	goto	u204_21
 11629  0E98  2E9A               	goto	u204_20
 11630  0E99                     u204_21:
 11631  0E99  2E96               	goto	i1l23
 11632  0E9A                     u204_20:
 11633  0E9A                     i1l2838:
 11634                           
 11635                           ;i2c.c: 37: return ( SSP1BUF );
 11636  0E9A  080C               	movf	12,w	;volatile
 11637  0E9B                     i1l26:
 11638  0E9B  0008               	return
 11639  0E9C                     __end_of_ReadI2C:
 11640                           
 11641                           	psect	text38
 11642  0E1D                     __ptext38:	
 11643 ;; *************** function _ADCC_GetSingleConversion *****************
 11644 ;; Defined at:
 11645 ;;		line 130 in file "mcc_generated_files/adcc.c"
 11646 ;; Parameters:    Size  Location     Type
 11647 ;;  channel         1    wreg     enum E12086
 11648 ;; Auto vars:     Size  Location     Type
 11649 ;;  channel         1    3[COMMON] enum E12086
 11650 ;; Return value:  Size  Location     Type
 11651 ;;                  2    0[COMMON] unsigned int 
 11652 ;; Registers used:
 11653 ;;		wreg
 11654 ;; Tracked objects:
 11655 ;;		On entry : 0/0
 11656 ;;		On exit  : 0/0
 11657 ;;		Unchanged: 0/0
 11658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11659 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11662 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11663 ;;Total ram usage:        4 bytes
 11664 ;; Hardware stack levels used:    1
 11665 ;; This function calls:
 11666 ;;		Nothing
 11667 ;; This function is called by:
 11668 ;;		_Clock_ISR
 11669 ;; This function uses a non-reentrant model
 11670 ;;
 11671                           
 11672                           
 11673                           ;psect for function _ADCC_GetSingleConversion
 11674  0E1D                     _ADCC_GetSingleConversion:
 11675                           
 11676                           ;incstack = 0
 11677                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 11678                           ;ADCC_GetSingleConversion@channel stored from wreg
 11679  0E1D  00F3               	movwf	ADCC_GetSingleConversion@channel
 11680  0E1E                     i1l3012:
 11681                           
 11682                           ;adcc.c: 133: ADPCH = channel;
 11683  0E1E  0873               	movf	ADCC_GetSingleConversion@channel,w
 11684  0E1F  0021               	movlb	1	; select bank1
 11685  0E20  009E               	movwf	30	;volatile
 11686  0E21                     i1l3014:
 11687                           
 11688                           ;adcc.c: 136: ADCON0bits.ADON = 1;
 11689  0E21  1793               	bsf	19,7	;volatile
 11690  0E22                     i1l3016:
 11691                           
 11692                           ;adcc.c: 139: ADCON0bits.ADCONT = 0;
 11693  0E22  1313               	bcf	19,6	;volatile
 11694  0E23                     i1l3018:
 11695                           
 11696                           ;adcc.c: 142: ADCON0bits.ADGO = 1;
 11697  0E23  1413               	bsf	19,0	;volatile
 11698  0E24                     i1l3020:
 11699                           
 11700                           ;adcc.c: 145: __nop();
 11701  0E24  0000               	nop
 11702  0E25                     i1l869:	
 11703                           ;adcc.c: 149: {
 11704                           
 11705  0E25  0021               	movlb	1	; select bank1
 11706  0E26  1813               	btfsc	19,0	;volatile
 11707  0E27  2E29               	goto	u259_21
 11708  0E28  2E2A               	goto	u259_20
 11709  0E29                     u259_21:
 11710  0E29  2E25               	goto	i1l869
 11711  0E2A                     u259_20:
 11712  0E2A                     i1l3022:
 11713                           
 11714                           ;adcc.c: 150: };adcc.c: 154: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 11715  0E2A  080D               	movf	13,w	;volatile
 11716  0E2B  00F1               	movwf	?_ADCC_GetSingleConversion+1
 11717  0E2C  080C               	movf	12,w	;volatile
 11718  0E2D  00F0               	movwf	?_ADCC_GetSingleConversion
 11719  0E2E                     i1l872:
 11720  0E2E  0008               	return
 11721  0E2F                     __end_of_ADCC_GetSingleConversion:
 11722  007E                     btemp	set	126	;btemp
 11723  007E                     int$flags	set	126
 11724  007E                     wtemp0	set	126
 11725                           
 11726                           	psect	config
 11727                           
 11728                           ;Config register CONFIG1 @ 0x8007
 11729                           ;	External Oscillator mode selection bits
 11730                           ;	FEXTOSC = OFF, Oscillator not enabled
 11731                           ;	Power-up default value for COSC bits
 11732                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 11733                           ;	Clock Out Enable bit
 11734                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 11735                           ;	Clock Switch Enable bit
 11736                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 11737                           ;	Fail-Safe Clock Monitor Enable bit
 11738                           ;	FCMEN = ON, FSCM timer enabled
 11739  8007                     	org	32775
 11740  8007  3FEC               	dw	16364
 11741                           
 11742                           ;Config register CONFIG2 @ 0x8008
 11743                           ;	Master Clear Enable bit
 11744                           ;	MCLRE = ON, MCLR pin is Master Clear function
 11745                           ;	Power-up Timer Enable bit
 11746                           ;	PWRTE = OFF, PWRT disabled
 11747                           ;	Low-Power BOR enable bit
 11748                           ;	LPBOREN = OFF, ULPBOR disabled
 11749                           ;	Brown-out reset enable bits
 11750                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 11751                           ;	Brown-out Reset Voltage Selection
 11752                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 11753                           ;	Zero-cross detect disable
 11754                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 11755                           ;	Peripheral Pin Select one-way control
 11756                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 11757                           ;	Stack Overflow/Underflow Reset Enable bit
 11758                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 11759                           ;	Background Debugger
 11760                           ;	DEBUG = OFF, Background Debugger disabled
 11761  8008                     	org	32776
 11762  8008  3FFF               	dw	16383
 11763                           
 11764                           ;Config register CONFIG3 @ 0x8009
 11765                           ;	WDT Period Select bits
 11766                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 11767                           ;	WDT operating mode
 11768                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 11769                           ;	WDT Window Select bits
 11770                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 11771                           ;	WDT input clock selector
 11772                           ;	WDTCCS = SC, Software Control
 11773  8009                     	org	32777
 11774  8009  3F9F               	dw	16287
 11775                           
 11776                           ;Config register CONFIG4 @ 0x800A
 11777                           ;	UserNVM self-write protection bits
 11778                           ;	WRT = OFF, Write protection off
 11779                           ;	Scanner Enable bit
 11780                           ;	SCANE = available, Scanner module is available for use
 11781                           ;	Low Voltage Programming Enable bit
 11782                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 11783  800A                     	org	32778
 11784  800A  3FFF               	dw	16383
 11785                           
 11786                           ;Config register CONFIG5 @ 0x800B
 11787                           ;	UserNVM Program memory code protection bit
 11788                           ;	CP = OFF, Program Memory code protection disabled
 11789                           ;	DataNVM code protection bit
 11790                           ;	CPD = OFF, Data EEPROM code protection disabled
 11791  800B                     	org	32779
 11792  800B  3FFF               	dw	16383

Data Sizes:
    Strings     33
    Constant    10
    Data        0
    BSS         12
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     40      56
    BANK1            80     36      40
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[5]), STR_3(CODE[7]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[5]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCDstr@p	PTR unsigned char  size(2) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[5]), menuLCD_ISR@tt(BANK0[4]), STR_2(CODE[6]), menuLCD_ISR@str(BANK0[8]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _menuLCD_ISR->_LCDstr
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->i1_LCDsend2x4
    _LCDcmd->i1_LCDsend2x4
    i1_LCDsend2x4->i1_WriteI2C
    _TMR1_ISR->_Clock_ISR
    _Clock_ISR->_ADCC_GetSingleConversion
    _Clock_ISR->_tsttc
    _tsttc->i1_WriteI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR3_ISR->_menuLCD_ISR
    _menuLCD_ISR->_sprintf

Critical Paths under _main in BANK1

    _main->___fleq
    ___fleq->___xxtofl
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0    2493
                                             26 BANK1     10    10      0
                            _LCDinit
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
           _TMR3_SetInterruptHandler
                             ___fleq
                           ___xxtofl
                   _i2c1_driver_open
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fleq                                              12     4      8     242
                                             14 BANK1     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     422
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     211
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     780
                                              8 BANK1      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend2x4                                           6     5      1     736
                                              2 BANK1      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK1      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    4080
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0    3750
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
                        _menuLCD_ISR *
 ---------------------------------------------------------------------------------
 (6) _menuLCD_ISR                                         19    19      0    3510
                                             21 BANK0     19    19      0
                             _LCDcmd
                             _LCDstr
                            _sprintf
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             29    21      8    2172
                                              0 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _LCDstr                                               6     4      2     755
                                              9 COMMON     5     3      2
                                              0 BANK0      1     1      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (8) _LCDchar                                              1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (7) _LCDcmd                                               1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (9) i1_LCDsend2x4                                         6     5      1     384
                                              2 COMMON     6     5      1
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (6) _TMR3_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     330
                   Absolute function *
                          _Clock_ISR *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Clock_ISR                                            3     3      0      90
                                              4 COMMON     3     3      0
           _ADCC_GetSingleConversion
                              _tsttc
 ---------------------------------------------------------------------------------
 (7) _tsttc                                                2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (10) i1_WriteI2C                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR3_SetInterruptHandler
   ___fleq
     ___xxtofl (ARG)
   ___xxtofl
   _i2c1_driver_open

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _Clock_ISR *
       _ADCC_GetSingleConversion
       _tsttc
         _ReadI2C
         i1_WriteI2C
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *
     _menuLCD_ISR *
       _LCDcmd
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDstr
         _LCDchar
           i1_LCDsend2x4
             i1_WriteI2C
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     28      38       5       70.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     24      28       7       50.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      6E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      6E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Oct 20 17:26:16 2020

                                       _c 0053                                         _t 0048  
                              i1_WriteI2C 079C                                        l30 06F9  
                                      l33 06C1                                        l42 06E3  
                                      l35 06C6                                        l47 06F7  
                     ___wmul@multiplicand 0072                                       l120 0FBF  
                                     l231 0DFA                                       l170 0DDC  
                                     l164 0E53                                       l405 0DC5  
                                     l167 0DE5                                       l610 074C  
                                     l606 0746                                       l607 0748  
                                     l711 0365                                       l375 0EF4  
                                     l439 0F13                                       l720 03A5  
                                     l730 063D                                       l723 03BB  
                                     l724 03BD                                       l469 0DEE  
                                     l727 03C4                                       l594 070B  
                                     l595 070D                                       l771 059B  
                                     l774 05A1                                       l767 0548  
                                     l696 0313                                       l697 0315  
                                     l857 07FD                           _timer1ReloadVal 00C6  
                                     _lum 0052                   __size_of_PMD_Initialize 0008  
                                     wreg 0009                               ?_LCDsend2x4 00A2  
                         __end_of_LCDchar 0DD5                                      l1310 076A  
                                    l1311 0786                                      l1312 079B  
                         _timer3ReloadVal 0056                                      l3300 0350  
                                    l3310 0381                                      l3302 0356  
                                    l3320 03C1                                      l3312 0390  
                                    l3304 0365                                      l3314 0396  
                                    l3306 036C                                      l3316 03A5  
                                    l3308 037B                                      l3500 062D  
                                    l1580 04D6                                      l3270 06FC  
                                    l3318 03AC                                      l3502 0633  
                                    l3510 0798                                      l1574 049B  
                                    l3280 0733                                      l3272 06FC  
                                    l3512 079A                                      l3504 074D  
                                    l1576 0524                                      l3520 0483  
                                    l3282 0737                                      l3274 0711  
                                    l3290 0319                                      l3506 0762  
                                    l3530 04B1                                      l3522 0493  
                                    l1587 04F0                                      l3276 0720  
                                    l3292 0328                                      l3284 02F3  
                                    l3620 0DC0                                      l3700 0EFC  
                                    l3508 077E                                      l1588 04FC  
                                    l3540 04DD                                      l3532 04BC  
                                    l3524 04A3                                      l3516 047A  
                                    l3278 0724                                      l3294 032C  
                                    l3286 02F8                                      l3470 05C8  
                                    l3630 0F8E                                      l3622 0DE6  
                                    l3710 0F10                                      l3702 0EFE  
                                    l3550 0512                                      l3542 04E6  
                                    l3534 04C3                                      l3518 047F  
                                    l2920 06A5                                      l3296 033B  
                                    l3288 0304                                      l3480 05ED  
                                    l3472 05D1                                      l3640 0F99  
                                    l3632 0F90                                      l3624 0F84  
                                    l3720 0EDF                                      l3712 0ED6  
                                    l3704 0F05                                      l3552 0517  
                                    l3544 04EA                                      l3536 04C7  
                                    l3528 04AC                                      l2930 06BF  
                                    l3298 0341                                      l3490 0609  
                                    l3482 05F1                                      l3474 05D5  
                                    l3650 0FA5                                      l3642 0F9B  
                                    l3634 0F92                                      l3626 0F8A  
                                    l3722 0EE6                                      l3714 0ED9  
                                    l3706 0F07                                      l3730 0E41  
                                    l3554 051B                                      l3546 04F4  
                                    l3538 04CF                                      l2940 06D8  
                                    l2932 06CB                                      l3492 0615  
                                    l3484 05F9                                      l3476 05DD  
                                    l3660 0FAA                                      l3652 0FA6  
                                    l3644 0F9D                                      l3636 0F94  
                                    l3628 0F8C                                      l3724 0EE8  
                                    l3716 0EDB                                      l3708 0F08  
                                    l3740 0E50                                      l3732 0E44  
                                    l3556 051C                                      l3548 04FE  
                                    l2942 06E8                                      l2926 06AA  
                                    l2918 06A2                                      l3494 0619  
                                    l3486 05FD                                      l3478 05E1  
                                    l3670 0FB4                                      l3662 0FAC  
                                    l3654 0FA7                                      l3646 0FA2  
                                    l3638 0F97                                      l3726 0EE9  
                                    l3718 0EDD                                      l3734 0E47  
                                    l3742 0DEF                                      l2928 06B4  
                                    l3496 0621                                      l3488 0605  
                                    l3680 0DDD                                      l3672 0FB7  
                                    l3664 0FAE                                      l3656 0FA8  
                                    l3648 0FA4                                      l3728 0EF1  
                                    l3736 0E4A                                      l3744 0DF4  
                                    l3760 053E                           __end_of_LCDinit 063E  
                                    l2938 06CD                                      l3498 0627  
                                    l3690 07F9                                      l3682 0DE0  
                                    l3674 0FBA                                      l3666 0FB0  
                                    l3658 0FA9                                      l3738 0E4D  
                                    l3746 0DF5                                      l3770 0564  
                                    l3762 0540                                      l3754 0525  
                                    l3692 07FB                                      l3684 0DE1  
                                    l3676 0FBC                                      l3668 0FB2  
                                    l3748 0DF7                                      l3780 05A8  
                                    l3772 0568                                      l3764 0544  
                                    l3756 053B                                      l3686 0DE4  
                                    l3678 0DD5                                      l3694 0EF5  
                                    l3774 0594                                      l3766 0545  
                                    l3758 053D                                      l3688 07E7  
                                    l3696 0EF8                                      l3776 059D  
                                    l3768 0546                                      l3698 0EFA  
                                    l3778 05A3                           __end_of_LCDsend 074D  
                                    STR_1 1000                                      STR_2 1020  
                                    STR_3 1019                                      STR_4 1026  
                                    u2300 06E3                                      u2301 06E2  
                                    _LATA 0016                                      u2310 06E8  
                                    _LATB 0017                                      u2311 06E7  
                                    _LATC 0018                                      u2320 06F7  
                                    u2240 06A9                                      _LATD 0019  
                                    u2321 06F6                                      u2241 06A8  
                                    _LATE 001A                                      u2250 06B4  
                                    u2251 06B3                                      u2260 06BF  
                                    u2261 06BE                                      u2270 06C6  
                                    u3310 0762                                      u2271 06C5  
                                    u3311 0761                                      u2280 06CB  
                                    u3320 077E                                      u3400 04DC  
                                    u2281 06CA                                      u3321 077D  
                                    u3401 04DB                                      u2290 06D8  
                                    u3330 0798                                      u2291 06D7  
                                    u3331 0797                                      u3420 04EA  
                                    u3340 047F                                      u3421 04E9  
                                    u3341 047E                                      u3430 04F0  
                                    u3350 0483                                      u3335 0794  
                                    u3431 04EF                                      u3415 04E0  
                                    u3351 0482                                      u2800 070B  
                                    u3440 04F4                                      u3360 04A3  
                                    u3600 059B                                      u2801 070A  
                                    u3441 04F3                                      u3361 04A2  
                                    u3601 059A                                      u2810 0711  
                                    u3450 0508                                      u2811 0710  
                                    u2820 0720                                      u2900 033B  
                                    u3460 0517                                      u3380 04C2  
                                    u2821 071F                                      u2901 033A  
                                    u3461 0516                                      u3381 04C1  
                                    u2830 0733                                      u2910 0350  
                                    u3470 051B                                      u2831 0732  
                                    u2911 034F                                      u3471 051A  
                                    u3455 0504                                      u3375 04B6  
                                    u2840 0746                                      u2920 0365  
                                    u2841 0745                                      u2921 0364  
                                    u3617 05CC                                      u2850 074C  
                                    u2930 037B                                      u2851 074B  
                                    u2931 037A                                      u3707 063A  
                                    u3627 05DA                                      u3395 04D0  
                                    u2940 0390                                      u3580 0DF4  
                                    _PMD0 0796                                      u3717 03C2  
                                    u2941 038F                                      u3637 05E2  
                                    u3581 0DF3                                      _PMD1 0797  
                                    i1l22 0E95                                      i1l30 07E6  
                                    u2950 03A5                                      u2870 0313  
                                    u3590 0594                                      _PMD2 0798  
                                    i1l23 0E96                                      u2951 03A4  
                                    u2871 0312                                      u3647 05EE  
                                    u3591 0593                                      _PMD3 0799  
                                    u2960 03BB                                      u2880 0319  
                                    _PMD4 079A                                      i1l33 07B8  
                                    u2961 03BA                                      u2881 0318  
                                    u2865 02FB                                      u3657 05F6  
                                    _PMD5 079B                                      i1l26 0E9B  
                                    i1l42 07D6                                      u2970 03C1  
                                    u2890 0328                                      i1l35 07BD  
                                    u2971 03C0                                      u2891 0327  
                                    u3667 0602                                      u3677 060A  
                                    i1l47 07E5                                      u3687 0616  
                                    u3697 061E                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                            ?_menuLCD_ISR 0070                                      _main 0525  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                                      start 0034  
                         _TMR3_Initialize 0EF5                ??_TMR1_SetInterruptHandler 00A2  
                         __end_of_ReadI2C 0E9C            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 0DE6                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                __end_of_i2c1_driver_open 0DFB                                     ?_main 0070  
                                   _ADCLK 0098                                     _ADCNT 010C  
                                   _ADPCH 009E                                     _ADREF 009A  
                                   _ADPRE 009C                                     _ADRPT 010D  
                                   _T1CLK 0211                                     _T1CON 020E  
                                   _T3CLK 0217                                     _T3CON 0214  
                         __end_of___lwdiv 0F84                                     i1l402 0E6A  
                                   i1l335 0017                                     i1l408 07FF  
                                   i1l344 0032                           __end_of___lwmod 0F48  
                                   i1l337 0023                                     i1l530 0220  
                                   i1l338 0032                                     i1l531 0221  
                                   i1l515 01E4                                     i1l339 002C  
                                   i1l453 0E1C                                     i1l542 0252  
                                   i1l518 01F0                                     i1l551 0268  
                                   i1l543 0254                                     i1l519 01F1  
                                   i1l711 0427                                     i1l720 045D  
                                   i1l472 07FE                                     i1l466 0E81  
                                   i1l555 0277                                     i1l723 046F  
                                   i1l580 02DB                                     i1l556 0278  
                                   i1l548 0263                                     i1l724 0470  
                                   i1l549 0264                                     i1l389 0E0B  
                                   i1l733 0DCC                                     i1l742 0EB6  
                                   i1l567 02A7                                     i1l727 0477  
                                   i1l568 02A8                                     i1l736 0DD4  
                                   i1l585 02EA                                     i1l761 069F  
                                   i1l586 02EB                                     i1l579 02D9  
                                   i1l589 02F0                                     i1l758 0FFF  
                                   i1l872 0E2E                                     i1l696 03E3  
                                   i1l697 03E4                                     i1l869 0E25  
                                   _OSCEN 0891                                     _TMR1H 020D  
                                   _TMR1L 020C                                     _TMR3H 0213  
                                   _TMR3L 0212                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
       __size_of_TMR3_SetInterruptHandler 0009                 ?_TMR3_SetInterruptHandler 00A0  
                        __end_of_TMR1_ISR 0E6B                          __end_of_TMR3_ISR 0E82  
          ??_TMR3_DefaultInterruptHandler 0070                           __end_of_dpowers 1019  
                         __end_of_isdigit 0E41                                     main@a 00C2  
                                   _tsttc 01E4                   __end_of_TMR1_Initialize 0EF5  
                                   pclath 000A                            menuLCD_ISR@str 0037  
                                   status 0003                                     wtemp0 007E  
                         __end_of_sprintf 01E4                           _TMR1_WriteTimer 0DFB  
                         __initialization 0036                              __end_of_main 05C8  
                             ?i1_WriteI2C 0070                       __size_of_LCDsend2x4 00D4  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 00BA  
                      __size_of_Clock_ISR 0040                     _TMR3_InterruptHandler 0054  
                               ??_LCDchar 0078                                 ??_LCDinit 00A8  
                               ??_LCDsend 00A2                                    _ADACCH 0091  
                                  _ADACCL 0090                                    _ADCON0 0093  
                                  _ADCON1 0094                                    _ADCON2 0095  
                                  _ADCON3 0096                                    _ADERRH 0117  
                                  _ADERRL 0116                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                                    _ADUTHL 0110  
                        __end_of_WriteI2C 06FA                                    _ANSELA 0F38  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  ?_tsttc 0070                                    _T3GATE 0216  
                                  _T3GCON 0215                                    _RC3PPS 0F23  
                                  i1l1102 0064                                    i1l1120 0117  
                 TMR1_WriteTimer@timerVal 0070                                    _RC4PPS 0F24  
                                  i1l1141 0EC1                                    i1l1143 0ED5  
                                  i1l3000 02EF                                    i1l1137 01E3  
                                  i1l3010 0EA1                                    i1l3020 0E24  
                                  i1l3012 0E1E                                    i1l3004 0DC7  
                                  i1l3100 0149                                    i1l1413 0F83  
                                  i1l3022 0E2A                                    i1l3014 0E21  
                                  i1l3006 0E9C                                    i1l3110 016C  
                                  i1l3102 0150                                    i1l3030 0054  
                                  i1l1423 0F47                                    i1l3016 0E22  
                                  u200_20 046F                                    i1l3008 0E9D  
                                  i1l3112 0170                                    i1l3104 0154  
                                  i1l3120 018B                                    i1l3040 0069  
                                  i1l3032 005B                                    u200_21 046E  
                                  _ODCONA 0F3A                                    i1l3018 0E23  
                                  i1l3122 0190                                    i1l3114 017A  
                                  i1l3106 015F                                    i1l3050 00A1  
                                  i1l3042 0072                                    i1l3034 0060  
                                  i1l3130 01CB                                    i1l3026 0049  
                                  _ODCONB 0F45                                    _ODCONC 0F50  
                                  i1l3124 01B7                                    i1l3116 0180  
                                  i1l3108 0165                                    i1l3060 00D0  
                                  i1l3132 01DF                                    i1l3052 00A5  
                                  i1l3044 007E                                    i1l3036 0065  
                                  i1l3028 004E                                    _ODCOND 0F5B  
                                  _ODCONE 0F66                                    i1l3126 01BE  
                                  i1l3118 0187                                    i1l3062 00D4  
                                  i1l3046 0081                                    i1l3400 0E5E  
                                  u201_20 0474                                    i1l3128 01C2  
                                  i1l3080 0107                                    i1l3064 00D8  
                                  i1l3048 0092                                    i1l3056 00B1  
                                  u201_21 0473                                    i1l3330 0FE7  
                                  i1l3322 0FC0                                    i1l3250 0E05  
                                  i1l3242 0DFB                                    i1l3402 0E65  
                                  i1l3090 012E                                    i1l3082 010D  
                                  i1l3074 00E3                                    i1l3066 00DC  
                                  i1l3058 00C9                                    i1l3340 0FFD  
                                  i1l3332 0FE9                                    i1l3324 0FD8  
                                  i1l3244 0E00                                    i1l3252 0E07  
                                  i1l3260 0E12                                    i1l3092 0132  
                                  i1l3084 0113                                    i1l3068 00E1  
                                  i1l3334 0FF0                                    i1l3326 0FDC  
                                  i1l3254 0E09                                    i1l3246 0E01  
                                  i1l3262 0E14                                    i1l3094 0138  
                                  i1l3086 0122                                    i1l3078 00FD  
                                  i1l3350 0662                                    i1l3342 063E  
                                  u202_20 0E8C                                    i1l3336 0FF4  
                                  i1l3328 0FE3                                    i1l3248 0E03  
                                  i1l3264 0E16                                    i1l3256 0E0C  
                                  i1l2800 03D7                                    u210_20 0ED1  
                                  i1l3096 013F                                    i1l3088 012B  
                                  i1l3360 0688                                    i1l3352 0669  
                                  i1l3344 0653                                    u202_21 0E8B  
                                  u210_21 0ED0                                    i1l3338 0FF6  
                                  i1l3258 0E11                                    i1l3266 0E18  
                                  i1l2810 0409                                    i1l2802 03E8  
                                  i1l1594 0E40                                    i1l3098 0143  
                                  i1l3362 0698                                    i1l3354 066D  
                                  i1l3346 0657                                    i1l3268 0E1A  
                                  i1l2820 0439                                    i1l2812 0415  
                                  i1l2804 03F3                                    i1l2900 0F1D  
                                  i1l3356 067D                                    i1l3348 065E  
                 __end_of_TMR3_Initialize 0F14                                    i1l2830 0463  
                                  i1l2822 043F                                    i1l2814 041B  
                                  i1l2806 03F7                                    i1l2910 0F38  
                                  i1l2902 0F22                                    i1l3358 0684  
                                  i1l3390 0E6D                                    u203_20 0E95  
                                  i1l2832 0474                                    i1l2824 044B  
                                  i1l2816 0427                                    i1l2808 0403  
                                  u211_20 0F50                                    i1l2912 0F3D  
                                  i1l2904 0F26                                    i1l3392 0E75  
                                  u203_21 0E94                                    u211_21 0F4F  
                                  i1l2834 0E82                                    i1l2826 0451  
                                  i1l2818 042D                                    i1l2842 0DCE  
                                  i1l2906 0F2A                                    i1l2914 0F43  
                                  i1l2850 0E3D                                    i1l3394 0E7C  
                                  i1l3570 0013                                    i1l2836 0E8C  
                                  i1l2780 07C2                                    i1l3396 0E54  
                                  i1l2828 045D                                    i1l2908 0F34  
                                  i1l2860 0EBD                                    i1l2852 0E3F  
                                  i1l2844 0E30                                    i1l3388 0E6B  
                                  i1l3580 0030                                    i1l3572 001B  
                                  i1l3564 0006                                    i1l2838 0E9A  
                                  i1l2790 07DA                                    i1l2774 07A5  
                                  i1l2766 079D                                    i1l3398 0E56  
                                  i1l2870 0F48                                    i1l2862 0EC6  
                                  i1l2846 0E31                                    i1l3574 001F  
                                  i1l3566 000A                                    u204_20 0E9A  
                                  i1l2776 07AE                                    i1l2768 07A0  
                                  i1l2960 0210                                    i1l2952 01E4  
                                  u300_20 0FFD                                    i1l2880 0F5C  
                                  i1l2872 0F4A                                    u220_20 0F2A  
                                  i1l2864 0ECB                                    i1l2856 0EB7  
                                  i1l2848 0E37                                    i1l3576 0027  
                                  i1l3568 000F                                    u204_21 0E99  
                                  u300_21 0FFC                                    u220_21 0F29  
                                  i1l2778 07B7                                    i1l2786 07C4  
                                  i1l2970 0240                                    i1l2962 0214  
                                  i1l2954 01F5                                    i1l2890 0F79  
                                  i1l2882 0F60                                    i1l2874 0F50  
                                  i1l2866 0ED1                                    i1l2858 0EB9  
                                  i1l2788 07CD                                    i1l2980 0287  
                                  i1l2972 0246                                    i1l2964 0225  
                                  i1l2956 0200                                    i1l2796 03C6  
                                  i1l2884 0F6F                                    i1l2876 0F53  
                                  i1l2892 0F7F                                    u212_25 0F54  
                                  i1l2990 02B7                                    i1l2982 028B  
                                  i1l2974 0258                                    i1l2966 0230  
                                  i1l2958 0204                                    i1l2798 03CB  
                                  i1l2886 0F73                                    i1l2878 0F58  
                                  i1l2992 02BB                                    i1l2984 0297  
                                  i1l2976 026C                                    i1l2968 0234  
                                  i1l2888 0F74                                    u213_20 0F60  
                                  u221_20 0F34                                    i1l2896 0F14  
                                  u205_20 0E37                                    u213_21 0F5F  
                                  u221_21 0F33                                    u205_21 0E36  
                                  i1l2994 02C7                                    i1l2986 029B  
                                  i1l2978 027C                                    i1l2898 0F1A  
                                  i1l2996 02CD                                    i1l2988 02AC  
                                  u221_25 0F30                                    i1l2998 02DF  
                                  u206_20 0E3D                                    u302_20 0E7C  
                                  u206_21 0E3C                                    u302_21 0E7B  
                                  u214_25 0F61                                    u222_25 0F39  
                                  u303_20 0E65                                    u215_20 0F6F  
                                  u223_20 0F43                                    u207_20 0EBD  
                                  u303_21 0E64                                    u215_21 0F6E  
                                  u223_21 0F42                                    u207_21 0EBC  
                                  u215_25 0F6B                                    u240_20 0240  
                                  u240_21 023F                                    u216_25 0F75  
                                  u208_25 0EC2                                    u241_20 0252  
                                  u233_20 01F0                                    u217_20 0F7F  
                                  u241_21 0251                                    u233_21 01EF  
                                  u217_21 0F7E                                    _LCDcmd 0DC6  
                                  u209_25 0EC7                                    u250_20 02A7  
                                  u242_20 0258                                    u234_20 01F5  
                                  u218_20 0F1A                                    u250_21 02A6  
                                  u242_21 0257                                    u234_21 01F4  
                                  u218_21 0F19                                    u251_20 02AC  
                                  u243_20 0263                                    u235_20 0200  
                                  u251_21 02AB                                    u243_21 0262  
                                  u235_21 01FF                                    u219_25 0F1E  
                                  u252_20 02B7                                    u244_20 0268  
                                  u236_20 0210                                    u260_20 0054  
                                  u252_21 02B6                                    u244_21 0267  
                                  u236_21 020F                                    u260_21 0053  
                                  u181_20 07A4                                    u253_20 02C7  
                                  u245_20 026C                                    u237_20 0220  
                                  u261_20 007E                                    u181_21 07A3  
                                  u253_21 02C6                                    u245_21 026B  
                                  u237_21 021F                                    u261_21 007D  
                                  u182_20 07AE                                    u254_20 02D9  
                                  u246_20 0277                                    u238_20 0225  
                                  u270_20 0138                                    u262_20 00B1  
                                  u350_20 0013                                    u182_21 07AD  
                                  u254_21 02D8                                    u246_21 0276  
                                  u238_21 0224                                    u270_21 0137  
                                  u262_21 00B0                                    u350_21 0012  
                                  u190_25 03CE                                    u183_20 07B7  
                                  u255_20 02DF                                    u247_20 027C  
                                  u239_20 0230                                    u191_20 03E3  
                                  u271_20 0149                                    u263_20 00D8  
                                  u351_20 001B                                    u183_21 07B6  
                                  u255_21 02DE                                    u247_21 027B  
                                  u239_21 022F                                    u191_21 03E2  
                                  u271_21 0148                                    u263_21 00D7  
                                  u351_21 001A                                    u184_20 07BD  
                                  u256_20 02EA                                    u248_20 0287  
                                  u192_20 03E8                                    u272_20 015E  
                                  u264_20 00FC                                    u352_20 001F  
                                  u184_21 07BC                                    u256_21 02E9  
                                  u248_21 0286                                    u192_21 03E7  
                                  u272_21 015D                                    u264_21 00FB  
                                  u352_21 001E                                    u264_25 00F8  
                                  u185_20 07C2                                    u257_20 02EF  
                                  u249_20 0297                                    u193_20 03F3  
                                  u273_20 0165                                    u265_20 0107  
                                  u353_20 0027                                    u185_21 07C1  
                                  u257_21 02EE                                    u249_21 0296  
                                  u193_21 03F2                                    u273_21 0164  
                                  u265_21 0106                                    u353_21 0026  
                                  u186_20 07CD                                    u194_20 0403  
                                  u258_20 0EB6                                    u274_20 017A  
                                  u266_20 010D                                    u354_20 002B  
                                  u186_21 07CC                                    u194_21 0402  
                                  u258_21 0EB5                                    u274_21 0179  
                                  u266_21 010C                                    u354_21 002A  
                                  u259_20 0E2A                                    u187_20 07D6  
                                  u195_20 0415                                    u275_20 0180  
                                  u267_20 0113                                    u355_20 0030  
                                  u259_21 0E29                                    u187_21 07D5  
                                  u195_21 0414                                    u275_21 017F  
                                  u267_21 0112                                    u355_21 002F  
                                  u188_20 07DA                                    u196_20 0427  
                                  u276_20 01CB                                    u268_20 0122  
                                  u348_20 000A                                    u188_21 07D9  
                                  u196_21 0426                                    u276_21 01CA  
                                  u268_21 0121                                    u348_21 0009  
                                  u268_25 011E                                    _LCDstr 0E9C  
                                  u372_27 0475                                    u189_20 07E5  
                                  u197_20 0439                                    u277_20 01DF  
                                  u269_20 0132                                    u349_20 000F  
                                  u189_21 07E4                                    u197_21 0438  
                                  u277_21 01DE                                    u269_21 0131  
                                  u349_21 000E                                    u278_20 0E00  
                                  u198_20 044B                                    u278_21 0DFF  
                                  u198_21 044A                                    u279_20 0E11  
                                  u199_20 045D                                    u279_21 0E10  
                                  u199_21 045C                                    u298_20 0FE3  
                                  u298_21 0FE2                                    u299_20 0FF0  
                                  u299_21 0FEF                                    _OSCFRQ 0893  
                        __end_of___xxtofl 0525                                 ??_ReadI2C 0070  
                             LCDsend2x4@c 00A5                           _TMR3_WriteTimer 0E0C  
    __end_of_TMR1_DefaultInterruptHandler 0800     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 07FF                                    ___fleq 074D  
                           ?i1_LCDsend2x4 0072                                    ___wmul 0EB7  
                               ??___lwdiv 0074                                 ??___lwmod 007C  
                         _ADCC_Initialize 07E7                            _PMD_Initialize 0DD5  
                               ??_isdigit 0070         __size_of_ADCC_GetSingleConversion 0012  
               ?_ADCC_GetSingleConversion 0070  TMR3_SetInterruptHandler@InterruptHandler 00A0  
TMR1_SetInterruptHandler@InterruptHandler 00A0                                 ??_sprintf 0028  
                 __end_of_TMR1_WriteTimer 0E0C                       __size_ofi1_WriteI2C 004B  
                        ?_TMR1_Initialize 0070                              ___xxtofl@arg 00AA  
                            ___xxtofl@exp 00A9                         _SYSTEM_Initialize 0E41  
                            ___xxtofl@val 00A0                                ___fleq@ff1 00AE  
                              ___fleq@ff2 00B2                   __end_of__initialization 0043  
                      ?_SYSTEM_Initialize 0070                         __end_of_Clock_ISR 1000  
                    __size_of_menuLCD_ISR 0062                            __pcstackCOMMON 0070  
                          ??i1_LCDsend2x4 0073                       ??_SYSTEM_Initialize 00A2  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                               ?_TMR3_ISR 0070                              menuLCD_ISR@l 003F  
                           __end_of_tsttc 02F1                    __end_of_PMD_Initialize 0DDD  
                            ??_LCDsend2x4 00A3                 __end_of_SYSTEM_Initialize 0E54  
                            sprintf@width 0031                   __end_of_TMR3_WriteTimer 0E1D  
                                 ??_tsttc 0072                                __pbssBANK0 0048  
                                 ?_LCDcmd 0070                          ?_TMR3_Initialize 0070  
                                 ?_LCDstr 0079                                   LCDcmd@c 0078  
                                 LCDstr@c 0020                                   LCDstr@p 0079  
                              __pmaintext 0525                                   ?___fleq 00AE  
        __end_of_TMR3_SetInterruptHandler 0DEF                                   ?___wmul 0070  
                              ??_TMR1_ISR 0077                                ??_TMR3_ISR 007E  
                 __end_of_ADCC_Initialize 07FE                                __pintentry 0004  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                      __end_of_LCDsend2x4 03C5                                   _ADPREVH 008F  
                                 _ADPREVL 008E                                 ?_WriteI2C 0070  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
                         ?_PMD_Initialize 0070                         ?_i2c1_driver_open 0070  
                               ?___xxtofl 00A0                                   _LCDchar 0DCD  
                                 _LCDinit 05C8                                   _LCDsend 06FA  
                      ??_i2c1_driver_open 00A0                                   _OSCCON1 088D  
                                 _OSCCON3 088F                                   _OSCTUNE 0892  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                                   _SSP1MSK 018E  
                        ?_TMR1_WriteTimer 0070                              LCDsend2x4@hc 00A6  
                            LCDsend2x4@lc 00A7                           __size_of_LCDcmd 0007  
                      _i2c1_driver_i2cISR 004E                           __size_of_LCDstr 001B  
                                 _ReadI2C 0E82                           __size_of___fleq 004F  
                            ??i1_WriteI2C 0070                           __size_of___wmul 001F  
                                 ___lwdiv 0F48                                   ___lwmod 0F14  
                              ??_WriteI2C 00A0                                   __ptext1 0DEF  
                                 __ptext2 0478                                   __ptext3 074D  
                                 __ptext4 0E41                                   __ptext5 0EF5  
                                 __ptext6 0DE6                                   __ptext7 0ED6  
                                 __ptext8 0DC0                                   __ptext9 0DD5  
          ??_TMR1_DefaultInterruptHandler 0070                                 _T1CONbits 020E  
                                 _dpowers 100F                     _OSCILLATOR_Initialize 0DDD  
                                 _isdigit 0E2F                                ??___xxtofl 00A4  
                               _T3CONbits 0214         __size_of_TMR1_SetInterruptHandler 0006  
                ??_PIN_MANAGER_Initialize 00A0                 ?_TMR1_SetInterruptHandler 00A0  
                    __end_ofi1_LCDsend2x4 0478                __size_of_SYSTEM_Initialize 0013  
                                 main@aux 00BE                                   _sprintf 0047  
                    end_of_initialization 0043                          ?_TMR3_WriteTimer 0070  
                      __end_ofi1_WriteI2C 07E7                            i1LCDsend2x4@hc 0076  
                          i1LCDsend2x4@lc 0077                          ?_ADCC_Initialize 0070  
        __end_of_ADCC_GetSingleConversion 0E2F                                 _PORTBbits 000D  
                _TMR3_SetInterruptHandler 0DE6                             ___xxtofl@sign 00A8  
                               _TRISCbits 0013                            __end_of_LCDcmd 0DCD  
                          __end_of_LCDstr 0EB7                            LCDsend2x4@mode 00A2  
                               _Clock_ISR 0FC0                            __end_of___fleq 079C  
                          __end_of___wmul 0ED6                         __size_of_TMR1_ISR 0017  
                       __size_of_TMR3_ISR 0017                    ?_OSCILLATOR_Initialize 0070  
                           menuLCD_ISR@tt 0044                       start_initialization 0036  
         __size_of_PIN_MANAGER_Initialize 003C                          WriteI2C@data_out 00A1  
                                ??_LCDcmd 0078                                  ??_LCDstr 007B  
                           ??_menuLCD_ISR 0035                  __size_of_TMR1_Initialize 001F  
                                ??___fleq 00B6                          ??_PMD_Initialize 00A0  
                              ?_Clock_ISR 0070                                  ??___wmul 0074  
                       __size_of_WriteI2C 005A                     __size_ofi1_LCDsend2x4 00B3  
                _ADCC_GetSingleConversion 0E1D                                  ?_LCDchar 0070  
                                ?_LCDinit 0070                                  ?_LCDsend 0070  
                               ___latbits 0002                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                         __size_of___xxtofl 00AD  
                            _isdigit$2255 0070                                  LCDchar@c 0078  
                                LCDsend@c 00A3                               sprintf@flag 0030  
               __size_of_i2c1_driver_open 000C                               sprintf@prec 002D  
                                ?_ReadI2C 0070                                 __pnvBANK0 0054  
                               __pnvBANK1 00C4                          ___lwdiv@dividend 0072  
                  _PIN_MANAGER_Initialize 0F84                  __size_of_TMR3_Initialize 001F  
                     __end_of_menuLCD_ISR 06A0          __end_of_TMR1_SetInterruptHandler 0DC6  
         ADCC_GetSingleConversion@channel 0073                              i1_LCDsend2x4 03C5  
                                ?___lwdiv 0070                                  ?___lwmod 0078  
             _i2c1_driver_busCollisionISR 0050              ??_INTERRUPT_InterruptManager 007E  
                                ?_isdigit 0070                          ___lwdiv@quotient 0075  
                                ?_sprintf 0020                            __size_of_tsttc 010D  
                          ___wmul@product 0074                                  _LATAbits 0016  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                           i1LCDsend2x4@c 0075                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0030                                  _PIR3bits 070F  
                                _PIR4bits 0710                ??_TMR3_SetInterruptHandler 00A2  
                             ??_Clock_ISR 0074                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR1_ISR 0E54  
                                _TMR3_ISR 0E6B                                  _SSP1STAT 018F  
                       ??_TMR1_Initialize 00A2                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                              _ADCON3bits 0096                         ___wmul@multiplier 0070  
                      i1WriteI2C@data_out 0071                          __size_of_LCDchar 0008  
                        __size_of_LCDinit 0076                          __size_of_LCDsend 0053  
                             _menuLCD_ISR 063E                          __size_of_ReadI2C 001A  
                              _ADSTATbits 0097                  __size_of_TMR3_WriteTimer 0011  
                 ??_OSCILLATOR_Initialize 00A0                          __size_of___lwdiv 003C  
                        __size_of___lwmod 0034                                  _WriteI2C 06A0  
                       ??_TMR3_Initialize 00A2                  _TMR1_SetInterruptHandler 0DC0  
                        i1LCDsend2x4@mode 0072                     _TMR1_InterruptHandler 00C4  
                              sprintf@val 002E                                  ___xxtofl 0478  
                __size_of_ADCC_Initialize 0017                          __size_of_isdigit 0012  
                         ___lwdiv@divisor 0070                           ___lwdiv@counter 0077  
                                __ptext10 0F84                                  __ptext11 0DDD  
                                __ptext20 063E                                  __ptext12 07E7  
                                __ptext21 0047                                  __ptext13 05C8  
                              _T1GCONbits 020F                                  __ptext30 0E0C  
                                __ptext22 0E2F                                  __ptext14 02F1  
                                __ptext31 0E54                                  __ptext23 0EB7  
                                __ptext15 06FA                                  __ptext32 0DFB  
                                __ptext24 0F14                                  __ptext16 06A0  
                                __ptext33 0FC0                                  __ptext25 0F48  
                                __ptext34 07FF                                  __ptext26 0E9C  
                                __ptext18 0E6B                                  __ptext35 01E4  
                                __ptext27 0DCD                                  __ptext19 07FE  
                                __ptext36 079C                                  __ptext28 0DC6  
                                __ptext37 0E82                                  __ptext29 03C5  
                                __ptext38 0E1D                              _SSP1CON1bits 0190  
                            _SSP1CON2bits 0191                          __size_of_sprintf 019D  
                              _T3GCONbits 0215                   TMR3_WriteTimer@timerVal 0070  
                        _i2c1_driver_open 0DEF                             __size_of_main 00A3  
                              tsttc@value 0073                ??_ADCC_GetSingleConversion 0073  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0034  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072      __end_of_TMR3_DefaultInterruptHandler 07FF  
   __size_of_TMR3_DefaultInterruptHandler 0001              _TMR3_DefaultInterruptHandler 07FE  
                              _INTCONbits 000B                                  isdigit@c 0071  
                              _LCDsend2x4 02F1                                  intlevel1 0000  
                               sprintf@ap 002C                                 sprintf@sp 0033  
                        ___lwmod@dividend 007A                   ?_PIN_MANAGER_Initialize 0070  
                       ??_TMR3_WriteTimer 0072                             __pstringtext1 100F  
                           __pstringtext2 1000                             __pstringtext3 1019  
                           __pstringtext4 1020                             __pstringtext5 1026  
                           __pstringtext6 0000                                  sprintf@c 0034  
                                sprintf@f 0020             ?_TMR3_DefaultInterruptHandler 0070  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                         ___lwmod@divisor 0078                           ___lwmod@counter 007D  
          __end_of_PIN_MANAGER_Initialize 0FC0                         ??_ADCC_Initialize 00A0  
                         _TMR1_Initialize 0ED6  
