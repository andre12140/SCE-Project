

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Nov 02 22:11:08 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	psect	text41,local,class=CODE,merge=1,delta=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2
    64                           	psect	text43,local,class=CODE,merge=1,delta=2
    65                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text45,local,class=CODE,merge=1,delta=2,group=3
    67                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text49,local,class=CODE,merge=1,delta=2
    71                           	psect	text50,local,class=CODE,merge=1,delta=2
    72                           	psect	text51,local,class=CODE,merge=1,delta=2
    73                           	psect	text52,local,class=CODE,merge=1,delta=2
    74                           	psect	text53,local,class=CODE,merge=1,delta=2
    75                           	psect	text54,local,class=CODE,merge=1,delta=2
    76                           	psect	text55,local,class=CODE,merge=1,delta=2
    77                           	psect	text56,local,class=CODE,merge=1,delta=2
    78                           	psect	text57,local,class=CODE,merge=1,delta=2
    79                           	psect	text58,local,class=CODE,merge=1,delta=2
    80                           	psect	text59,local,class=CODE,merge=1,delta=2
    81                           	psect	text60,local,class=CODE,merge=1,delta=2
    82                           	psect	text61,local,class=CODE,merge=1,delta=2
    83                           	psect	text62,local,class=CODE,merge=1,delta=2
    84                           	psect	text63,local,class=CODE,merge=1,delta=2
    85                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    86                           	dabs	1,0x7E,2
    87  0000                     
    88                           ; Version 2.30
    89                           ; Generated 15/09/2020 GMT
    90                           ; 
    91                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution. Publication is not required when
   105                           ;        this file is used in an embedded application.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC16F18875 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000F                     	;# 
   139  0010                     	;# 
   140  0011                     	;# 
   141  0012                     	;# 
   142  0013                     	;# 
   143  0014                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001C                     	;# 
   151  001C                     	;# 
   152  001D                     	;# 
   153  001D                     	;# 
   154  001E                     	;# 
   155  001F                     	;# 
   156  008C                     	;# 
   157  008C                     	;# 
   158  008D                     	;# 
   159  008E                     	;# 
   160  008E                     	;# 
   161  008F                     	;# 
   162  0090                     	;# 
   163  0090                     	;# 
   164  0091                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0095                     	;# 
   168  0096                     	;# 
   169  0097                     	;# 
   170  0098                     	;# 
   171  0099                     	;# 
   172  009A                     	;# 
   173  009B                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010E                     	;# 
   181  010F                     	;# 
   182  0110                     	;# 
   183  0110                     	;# 
   184  0111                     	;# 
   185  0112                     	;# 
   186  0112                     	;# 
   187  0113                     	;# 
   188  0114                     	;# 
   189  0114                     	;# 
   190  0115                     	;# 
   191  0116                     	;# 
   192  0116                     	;# 
   193  0117                     	;# 
   194  0119                     	;# 
   195  0119                     	;# 
   196  0119                     	;# 
   197  011A                     	;# 
   198  011A                     	;# 
   199  011A                     	;# 
   200  011B                     	;# 
   201  011B                     	;# 
   202  011B                     	;# 
   203  011B                     	;# 
   204  011B                     	;# 
   205  011C                     	;# 
   206  011C                     	;# 
   207  011C                     	;# 
   208  011D                     	;# 
   209  011D                     	;# 
   210  011D                     	;# 
   211  011E                     	;# 
   212  011E                     	;# 
   213  011E                     	;# 
   214  011F                     	;# 
   215  011F                     	;# 
   216  011F                     	;# 
   217  011F                     	;# 
   218  011F                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  018E                     	;# 
   222  018F                     	;# 
   223  0190                     	;# 
   224  0191                     	;# 
   225  0192                     	;# 
   226  0196                     	;# 
   227  0197                     	;# 
   228  0198                     	;# 
   229  0199                     	;# 
   230  019A                     	;# 
   231  019B                     	;# 
   232  019C                     	;# 
   233  020C                     	;# 
   234  020C                     	;# 
   235  020D                     	;# 
   236  020E                     	;# 
   237  020F                     	;# 
   238  020F                     	;# 
   239  0210                     	;# 
   240  0210                     	;# 
   241  0211                     	;# 
   242  0211                     	;# 
   243  0212                     	;# 
   244  0212                     	;# 
   245  0213                     	;# 
   246  0214                     	;# 
   247  0215                     	;# 
   248  0215                     	;# 
   249  0216                     	;# 
   250  0216                     	;# 
   251  0217                     	;# 
   252  0217                     	;# 
   253  0218                     	;# 
   254  0218                     	;# 
   255  0219                     	;# 
   256  021A                     	;# 
   257  021B                     	;# 
   258  021B                     	;# 
   259  021C                     	;# 
   260  021C                     	;# 
   261  021D                     	;# 
   262  021D                     	;# 
   263  021E                     	;# 
   264  021F                     	;# 
   265  028C                     	;# 
   266  028C                     	;# 
   267  028D                     	;# 
   268  028D                     	;# 
   269  028E                     	;# 
   270  028F                     	;# 
   271  0290                     	;# 
   272  0290                     	;# 
   273  0291                     	;# 
   274  0292                     	;# 
   275  0292                     	;# 
   276  0293                     	;# 
   277  0293                     	;# 
   278  0294                     	;# 
   279  0295                     	;# 
   280  0296                     	;# 
   281  0296                     	;# 
   282  0297                     	;# 
   283  0298                     	;# 
   284  0298                     	;# 
   285  0299                     	;# 
   286  0299                     	;# 
   287  029A                     	;# 
   288  029B                     	;# 
   289  029C                     	;# 
   290  029C                     	;# 
   291  029D                     	;# 
   292  030C                     	;# 
   293  030C                     	;# 
   294  030D                     	;# 
   295  030E                     	;# 
   296  030F                     	;# 
   297  0310                     	;# 
   298  0310                     	;# 
   299  0311                     	;# 
   300  0312                     	;# 
   301  0313                     	;# 
   302  0314                     	;# 
   303  0314                     	;# 
   304  0315                     	;# 
   305  0316                     	;# 
   306  0317                     	;# 
   307  0318                     	;# 
   308  0318                     	;# 
   309  0319                     	;# 
   310  031A                     	;# 
   311  031B                     	;# 
   312  031C                     	;# 
   313  031C                     	;# 
   314  031D                     	;# 
   315  031E                     	;# 
   316  031F                     	;# 
   317  038C                     	;# 
   318  038C                     	;# 
   319  038D                     	;# 
   320  038E                     	;# 
   321  0390                     	;# 
   322  0390                     	;# 
   323  0391                     	;# 
   324  0392                     	;# 
   325  040C                     	;# 
   326  040D                     	;# 
   327  040E                     	;# 
   328  040F                     	;# 
   329  0410                     	;# 
   330  0411                     	;# 
   331  0416                     	;# 
   332  0416                     	;# 
   333  0417                     	;# 
   334  0418                     	;# 
   335  0418                     	;# 
   336  0419                     	;# 
   337  041A                     	;# 
   338  041A                     	;# 
   339  041B                     	;# 
   340  041C                     	;# 
   341  041C                     	;# 
   342  041D                     	;# 
   343  041E                     	;# 
   344  041F                     	;# 
   345  048C                     	;# 
   346  048C                     	;# 
   347  048D                     	;# 
   348  048E                     	;# 
   349  048F                     	;# 
   350  048F                     	;# 
   351  0490                     	;# 
   352  0491                     	;# 
   353  0492                     	;# 
   354  0492                     	;# 
   355  0493                     	;# 
   356  0494                     	;# 
   357  0495                     	;# 
   358  0495                     	;# 
   359  0496                     	;# 
   360  0497                     	;# 
   361  0498                     	;# 
   362  0499                     	;# 
   363  049A                     	;# 
   364  049B                     	;# 
   365  049C                     	;# 
   366  049D                     	;# 
   367  050C                     	;# 
   368  050C                     	;# 
   369  050D                     	;# 
   370  050E                     	;# 
   371  050F                     	;# 
   372  050F                     	;# 
   373  0510                     	;# 
   374  0511                     	;# 
   375  0512                     	;# 
   376  0512                     	;# 
   377  0513                     	;# 
   378  0514                     	;# 
   379  0515                     	;# 
   380  0515                     	;# 
   381  0516                     	;# 
   382  0517                     	;# 
   383  0518                     	;# 
   384  0519                     	;# 
   385  051A                     	;# 
   386  051B                     	;# 
   387  051C                     	;# 
   388  051D                     	;# 
   389  058C                     	;# 
   390  058C                     	;# 
   391  058D                     	;# 
   392  058E                     	;# 
   393  058F                     	;# 
   394  058F                     	;# 
   395  0590                     	;# 
   396  0591                     	;# 
   397  0592                     	;# 
   398  0593                     	;# 
   399  060C                     	;# 
   400  060D                     	;# 
   401  060E                     	;# 
   402  060F                     	;# 
   403  0610                     	;# 
   404  0611                     	;# 
   405  0612                     	;# 
   406  0613                     	;# 
   407  0614                     	;# 
   408  0616                     	;# 
   409  0617                     	;# 
   410  0618                     	;# 
   411  0619                     	;# 
   412  061A                     	;# 
   413  061B                     	;# 
   414  061C                     	;# 
   415  061D                     	;# 
   416  061E                     	;# 
   417  068C                     	;# 
   418  068D                     	;# 
   419  068E                     	;# 
   420  068F                     	;# 
   421  0690                     	;# 
   422  0691                     	;# 
   423  0692                     	;# 
   424  0693                     	;# 
   425  0694                     	;# 
   426  070C                     	;# 
   427  070D                     	;# 
   428  070E                     	;# 
   429  070F                     	;# 
   430  0710                     	;# 
   431  0711                     	;# 
   432  0712                     	;# 
   433  0713                     	;# 
   434  0714                     	;# 
   435  0716                     	;# 
   436  0717                     	;# 
   437  0718                     	;# 
   438  0719                     	;# 
   439  071A                     	;# 
   440  071B                     	;# 
   441  071C                     	;# 
   442  071D                     	;# 
   443  071E                     	;# 
   444  0796                     	;# 
   445  0797                     	;# 
   446  0798                     	;# 
   447  0799                     	;# 
   448  079A                     	;# 
   449  079B                     	;# 
   450  080C                     	;# 
   451  080D                     	;# 
   452  080E                     	;# 
   453  080F                     	;# 
   454  0810                     	;# 
   455  0811                     	;# 
   456  0812                     	;# 
   457  0813                     	;# 
   458  0814                     	;# 
   459  081A                     	;# 
   460  081B                     	;# 
   461  081C                     	;# 
   462  081D                     	;# 
   463  081E                     	;# 
   464  081F                     	;# 
   465  088C                     	;# 
   466  088D                     	;# 
   467  088E                     	;# 
   468  088F                     	;# 
   469  0890                     	;# 
   470  0891                     	;# 
   471  0892                     	;# 
   472  0893                     	;# 
   473  0895                     	;# 
   474  0896                     	;# 
   475  0897                     	;# 
   476  0898                     	;# 
   477  0899                     	;# 
   478  089A                     	;# 
   479  089B                     	;# 
   480  090C                     	;# 
   481  090E                     	;# 
   482  090F                     	;# 
   483  091F                     	;# 
   484  091F                     	;# 
   485  098F                     	;# 
   486  098F                     	;# 
   487  0990                     	;# 
   488  0991                     	;# 
   489  0992                     	;# 
   490  0993                     	;# 
   491  0994                     	;# 
   492  0995                     	;# 
   493  0996                     	;# 
   494  0997                     	;# 
   495  0E0F                     	;# 
   496  0E10                     	;# 
   497  0E11                     	;# 
   498  0E12                     	;# 
   499  0E13                     	;# 
   500  0E14                     	;# 
   501  0E15                     	;# 
   502  0E16                     	;# 
   503  0E17                     	;# 
   504  0E18                     	;# 
   505  0E19                     	;# 
   506  0E1A                     	;# 
   507  0E1B                     	;# 
   508  0E1C                     	;# 
   509  0E1D                     	;# 
   510  0E1E                     	;# 
   511  0E1F                     	;# 
   512  0E20                     	;# 
   513  0E21                     	;# 
   514  0E22                     	;# 
   515  0E23                     	;# 
   516  0E24                     	;# 
   517  0E25                     	;# 
   518  0E26                     	;# 
   519  0E27                     	;# 
   520  0E28                     	;# 
   521  0E29                     	;# 
   522  0E2A                     	;# 
   523  0E2B                     	;# 
   524  0E2C                     	;# 
   525  0E2D                     	;# 
   526  0E2E                     	;# 
   527  0E2F                     	;# 
   528  0E30                     	;# 
   529  0E31                     	;# 
   530  0E32                     	;# 
   531  0E33                     	;# 
   532  0E34                     	;# 
   533  0E35                     	;# 
   534  0E36                     	;# 
   535  0E37                     	;# 
   536  0E8F                     	;# 
   537  0E90                     	;# 
   538  0E91                     	;# 
   539  0E92                     	;# 
   540  0E93                     	;# 
   541  0E94                     	;# 
   542  0E95                     	;# 
   543  0E96                     	;# 
   544  0E97                     	;# 
   545  0E9C                     	;# 
   546  0E9D                     	;# 
   547  0E9E                     	;# 
   548  0EA1                     	;# 
   549  0EA2                     	;# 
   550  0EA3                     	;# 
   551  0EA4                     	;# 
   552  0EA5                     	;# 
   553  0EA9                     	;# 
   554  0EAA                     	;# 
   555  0EAB                     	;# 
   556  0EAC                     	;# 
   557  0EB1                     	;# 
   558  0EB2                     	;# 
   559  0EB3                     	;# 
   560  0EB8                     	;# 
   561  0EB9                     	;# 
   562  0EBA                     	;# 
   563  0EBB                     	;# 
   564  0EBC                     	;# 
   565  0EBD                     	;# 
   566  0EBE                     	;# 
   567  0EC3                     	;# 
   568  0EC5                     	;# 
   569  0EC6                     	;# 
   570  0EC7                     	;# 
   571  0EC8                     	;# 
   572  0EC9                     	;# 
   573  0ECA                     	;# 
   574  0ECB                     	;# 
   575  0ECC                     	;# 
   576  0F10                     	;# 
   577  0F11                     	;# 
   578  0F12                     	;# 
   579  0F13                     	;# 
   580  0F14                     	;# 
   581  0F15                     	;# 
   582  0F16                     	;# 
   583  0F17                     	;# 
   584  0F18                     	;# 
   585  0F19                     	;# 
   586  0F1A                     	;# 
   587  0F1B                     	;# 
   588  0F1C                     	;# 
   589  0F1D                     	;# 
   590  0F1E                     	;# 
   591  0F1F                     	;# 
   592  0F20                     	;# 
   593  0F21                     	;# 
   594  0F22                     	;# 
   595  0F23                     	;# 
   596  0F24                     	;# 
   597  0F25                     	;# 
   598  0F26                     	;# 
   599  0F27                     	;# 
   600  0F28                     	;# 
   601  0F29                     	;# 
   602  0F2A                     	;# 
   603  0F2B                     	;# 
   604  0F2C                     	;# 
   605  0F2D                     	;# 
   606  0F2E                     	;# 
   607  0F2F                     	;# 
   608  0F30                     	;# 
   609  0F31                     	;# 
   610  0F32                     	;# 
   611  0F38                     	;# 
   612  0F39                     	;# 
   613  0F3A                     	;# 
   614  0F3B                     	;# 
   615  0F3C                     	;# 
   616  0F3D                     	;# 
   617  0F3E                     	;# 
   618  0F3F                     	;# 
   619  0F40                     	;# 
   620  0F41                     	;# 
   621  0F43                     	;# 
   622  0F44                     	;# 
   623  0F45                     	;# 
   624  0F46                     	;# 
   625  0F47                     	;# 
   626  0F48                     	;# 
   627  0F49                     	;# 
   628  0F4A                     	;# 
   629  0F4B                     	;# 
   630  0F4C                     	;# 
   631  0F4E                     	;# 
   632  0F4F                     	;# 
   633  0F50                     	;# 
   634  0F51                     	;# 
   635  0F52                     	;# 
   636  0F53                     	;# 
   637  0F54                     	;# 
   638  0F55                     	;# 
   639  0F56                     	;# 
   640  0F57                     	;# 
   641  0F59                     	;# 
   642  0F5A                     	;# 
   643  0F5B                     	;# 
   644  0F5C                     	;# 
   645  0F5D                     	;# 
   646  0F61                     	;# 
   647  0F62                     	;# 
   648  0F64                     	;# 
   649  0F65                     	;# 
   650  0F66                     	;# 
   651  0F67                     	;# 
   652  0F68                     	;# 
   653  0F69                     	;# 
   654  0F6A                     	;# 
   655  0F6B                     	;# 
   656  0F6C                     	;# 
   657  0F6D                     	;# 
   658  0FE4                     	;# 
   659  0FE5                     	;# 
   660  0FE6                     	;# 
   661  0FE7                     	;# 
   662  0FE8                     	;# 
   663  0FE9                     	;# 
   664  0FEA                     	;# 
   665  0FEB                     	;# 
   666  0FED                     	;# 
   667  0FEE                     	;# 
   668  0FEF                     	;# 
   669  0000                     	;# 
   670  0001                     	;# 
   671  0002                     	;# 
   672  0003                     	;# 
   673  0004                     	;# 
   674  0005                     	;# 
   675  0006                     	;# 
   676  0007                     	;# 
   677  0008                     	;# 
   678  0009                     	;# 
   679  000A                     	;# 
   680  000B                     	;# 
   681  000C                     	;# 
   682  000D                     	;# 
   683  000E                     	;# 
   684  000F                     	;# 
   685  0010                     	;# 
   686  0011                     	;# 
   687  0012                     	;# 
   688  0013                     	;# 
   689  0014                     	;# 
   690  0015                     	;# 
   691  0016                     	;# 
   692  0017                     	;# 
   693  0018                     	;# 
   694  0019                     	;# 
   695  001A                     	;# 
   696  001C                     	;# 
   697  001C                     	;# 
   698  001D                     	;# 
   699  001D                     	;# 
   700  001E                     	;# 
   701  001F                     	;# 
   702  008C                     	;# 
   703  008C                     	;# 
   704  008D                     	;# 
   705  008E                     	;# 
   706  008E                     	;# 
   707  008F                     	;# 
   708  0090                     	;# 
   709  0090                     	;# 
   710  0091                     	;# 
   711  0093                     	;# 
   712  0094                     	;# 
   713  0095                     	;# 
   714  0096                     	;# 
   715  0097                     	;# 
   716  0098                     	;# 
   717  0099                     	;# 
   718  009A                     	;# 
   719  009B                     	;# 
   720  009C                     	;# 
   721  009D                     	;# 
   722  009E                     	;# 
   723  010C                     	;# 
   724  010D                     	;# 
   725  010E                     	;# 
   726  010E                     	;# 
   727  010F                     	;# 
   728  0110                     	;# 
   729  0110                     	;# 
   730  0111                     	;# 
   731  0112                     	;# 
   732  0112                     	;# 
   733  0113                     	;# 
   734  0114                     	;# 
   735  0114                     	;# 
   736  0115                     	;# 
   737  0116                     	;# 
   738  0116                     	;# 
   739  0117                     	;# 
   740  0119                     	;# 
   741  0119                     	;# 
   742  0119                     	;# 
   743  011A                     	;# 
   744  011A                     	;# 
   745  011A                     	;# 
   746  011B                     	;# 
   747  011B                     	;# 
   748  011B                     	;# 
   749  011B                     	;# 
   750  011B                     	;# 
   751  011C                     	;# 
   752  011C                     	;# 
   753  011C                     	;# 
   754  011D                     	;# 
   755  011D                     	;# 
   756  011D                     	;# 
   757  011E                     	;# 
   758  011E                     	;# 
   759  011E                     	;# 
   760  011F                     	;# 
   761  011F                     	;# 
   762  011F                     	;# 
   763  011F                     	;# 
   764  011F                     	;# 
   765  018C                     	;# 
   766  018D                     	;# 
   767  018E                     	;# 
   768  018F                     	;# 
   769  0190                     	;# 
   770  0191                     	;# 
   771  0192                     	;# 
   772  0196                     	;# 
   773  0197                     	;# 
   774  0198                     	;# 
   775  0199                     	;# 
   776  019A                     	;# 
   777  019B                     	;# 
   778  019C                     	;# 
   779  020C                     	;# 
   780  020C                     	;# 
   781  020D                     	;# 
   782  020E                     	;# 
   783  020F                     	;# 
   784  020F                     	;# 
   785  0210                     	;# 
   786  0210                     	;# 
   787  0211                     	;# 
   788  0211                     	;# 
   789  0212                     	;# 
   790  0212                     	;# 
   791  0213                     	;# 
   792  0214                     	;# 
   793  0215                     	;# 
   794  0215                     	;# 
   795  0216                     	;# 
   796  0216                     	;# 
   797  0217                     	;# 
   798  0217                     	;# 
   799  0218                     	;# 
   800  0218                     	;# 
   801  0219                     	;# 
   802  021A                     	;# 
   803  021B                     	;# 
   804  021B                     	;# 
   805  021C                     	;# 
   806  021C                     	;# 
   807  021D                     	;# 
   808  021D                     	;# 
   809  021E                     	;# 
   810  021F                     	;# 
   811  028C                     	;# 
   812  028C                     	;# 
   813  028D                     	;# 
   814  028D                     	;# 
   815  028E                     	;# 
   816  028F                     	;# 
   817  0290                     	;# 
   818  0290                     	;# 
   819  0291                     	;# 
   820  0292                     	;# 
   821  0292                     	;# 
   822  0293                     	;# 
   823  0293                     	;# 
   824  0294                     	;# 
   825  0295                     	;# 
   826  0296                     	;# 
   827  0296                     	;# 
   828  0297                     	;# 
   829  0298                     	;# 
   830  0298                     	;# 
   831  0299                     	;# 
   832  0299                     	;# 
   833  029A                     	;# 
   834  029B                     	;# 
   835  029C                     	;# 
   836  029C                     	;# 
   837  029D                     	;# 
   838  030C                     	;# 
   839  030C                     	;# 
   840  030D                     	;# 
   841  030E                     	;# 
   842  030F                     	;# 
   843  0310                     	;# 
   844  0310                     	;# 
   845  0311                     	;# 
   846  0312                     	;# 
   847  0313                     	;# 
   848  0314                     	;# 
   849  0314                     	;# 
   850  0315                     	;# 
   851  0316                     	;# 
   852  0317                     	;# 
   853  0318                     	;# 
   854  0318                     	;# 
   855  0319                     	;# 
   856  031A                     	;# 
   857  031B                     	;# 
   858  031C                     	;# 
   859  031C                     	;# 
   860  031D                     	;# 
   861  031E                     	;# 
   862  031F                     	;# 
   863  038C                     	;# 
   864  038C                     	;# 
   865  038D                     	;# 
   866  038E                     	;# 
   867  0390                     	;# 
   868  0390                     	;# 
   869  0391                     	;# 
   870  0392                     	;# 
   871  040C                     	;# 
   872  040D                     	;# 
   873  040E                     	;# 
   874  040F                     	;# 
   875  0410                     	;# 
   876  0411                     	;# 
   877  0416                     	;# 
   878  0416                     	;# 
   879  0417                     	;# 
   880  0418                     	;# 
   881  0418                     	;# 
   882  0419                     	;# 
   883  041A                     	;# 
   884  041A                     	;# 
   885  041B                     	;# 
   886  041C                     	;# 
   887  041C                     	;# 
   888  041D                     	;# 
   889  041E                     	;# 
   890  041F                     	;# 
   891  048C                     	;# 
   892  048C                     	;# 
   893  048D                     	;# 
   894  048E                     	;# 
   895  048F                     	;# 
   896  048F                     	;# 
   897  0490                     	;# 
   898  0491                     	;# 
   899  0492                     	;# 
   900  0492                     	;# 
   901  0493                     	;# 
   902  0494                     	;# 
   903  0495                     	;# 
   904  0495                     	;# 
   905  0496                     	;# 
   906  0497                     	;# 
   907  0498                     	;# 
   908  0499                     	;# 
   909  049A                     	;# 
   910  049B                     	;# 
   911  049C                     	;# 
   912  049D                     	;# 
   913  050C                     	;# 
   914  050C                     	;# 
   915  050D                     	;# 
   916  050E                     	;# 
   917  050F                     	;# 
   918  050F                     	;# 
   919  0510                     	;# 
   920  0511                     	;# 
   921  0512                     	;# 
   922  0512                     	;# 
   923  0513                     	;# 
   924  0514                     	;# 
   925  0515                     	;# 
   926  0515                     	;# 
   927  0516                     	;# 
   928  0517                     	;# 
   929  0518                     	;# 
   930  0519                     	;# 
   931  051A                     	;# 
   932  051B                     	;# 
   933  051C                     	;# 
   934  051D                     	;# 
   935  058C                     	;# 
   936  058C                     	;# 
   937  058D                     	;# 
   938  058E                     	;# 
   939  058F                     	;# 
   940  058F                     	;# 
   941  0590                     	;# 
   942  0591                     	;# 
   943  0592                     	;# 
   944  0593                     	;# 
   945  060C                     	;# 
   946  060D                     	;# 
   947  060E                     	;# 
   948  060F                     	;# 
   949  0610                     	;# 
   950  0611                     	;# 
   951  0612                     	;# 
   952  0613                     	;# 
   953  0614                     	;# 
   954  0616                     	;# 
   955  0617                     	;# 
   956  0618                     	;# 
   957  0619                     	;# 
   958  061A                     	;# 
   959  061B                     	;# 
   960  061C                     	;# 
   961  061D                     	;# 
   962  061E                     	;# 
   963  068C                     	;# 
   964  068D                     	;# 
   965  068E                     	;# 
   966  068F                     	;# 
   967  0690                     	;# 
   968  0691                     	;# 
   969  0692                     	;# 
   970  0693                     	;# 
   971  0694                     	;# 
   972  070C                     	;# 
   973  070D                     	;# 
   974  070E                     	;# 
   975  070F                     	;# 
   976  0710                     	;# 
   977  0711                     	;# 
   978  0712                     	;# 
   979  0713                     	;# 
   980  0714                     	;# 
   981  0716                     	;# 
   982  0717                     	;# 
   983  0718                     	;# 
   984  0719                     	;# 
   985  071A                     	;# 
   986  071B                     	;# 
   987  071C                     	;# 
   988  071D                     	;# 
   989  071E                     	;# 
   990  0796                     	;# 
   991  0797                     	;# 
   992  0798                     	;# 
   993  0799                     	;# 
   994  079A                     	;# 
   995  079B                     	;# 
   996  080C                     	;# 
   997  080D                     	;# 
   998  080E                     	;# 
   999  080F                     	;# 
  1000  0810                     	;# 
  1001  0811                     	;# 
  1002  0812                     	;# 
  1003  0813                     	;# 
  1004  0814                     	;# 
  1005  081A                     	;# 
  1006  081B                     	;# 
  1007  081C                     	;# 
  1008  081D                     	;# 
  1009  081E                     	;# 
  1010  081F                     	;# 
  1011  088C                     	;# 
  1012  088D                     	;# 
  1013  088E                     	;# 
  1014  088F                     	;# 
  1015  0890                     	;# 
  1016  0891                     	;# 
  1017  0892                     	;# 
  1018  0893                     	;# 
  1019  0895                     	;# 
  1020  0896                     	;# 
  1021  0897                     	;# 
  1022  0898                     	;# 
  1023  0899                     	;# 
  1024  089A                     	;# 
  1025  089B                     	;# 
  1026  090C                     	;# 
  1027  090E                     	;# 
  1028  090F                     	;# 
  1029  091F                     	;# 
  1030  091F                     	;# 
  1031  098F                     	;# 
  1032  098F                     	;# 
  1033  0990                     	;# 
  1034  0991                     	;# 
  1035  0992                     	;# 
  1036  0993                     	;# 
  1037  0994                     	;# 
  1038  0995                     	;# 
  1039  0996                     	;# 
  1040  0997                     	;# 
  1041  0E0F                     	;# 
  1042  0E10                     	;# 
  1043  0E11                     	;# 
  1044  0E12                     	;# 
  1045  0E13                     	;# 
  1046  0E14                     	;# 
  1047  0E15                     	;# 
  1048  0E16                     	;# 
  1049  0E17                     	;# 
  1050  0E18                     	;# 
  1051  0E19                     	;# 
  1052  0E1A                     	;# 
  1053  0E1B                     	;# 
  1054  0E1C                     	;# 
  1055  0E1D                     	;# 
  1056  0E1E                     	;# 
  1057  0E1F                     	;# 
  1058  0E20                     	;# 
  1059  0E21                     	;# 
  1060  0E22                     	;# 
  1061  0E23                     	;# 
  1062  0E24                     	;# 
  1063  0E25                     	;# 
  1064  0E26                     	;# 
  1065  0E27                     	;# 
  1066  0E28                     	;# 
  1067  0E29                     	;# 
  1068  0E2A                     	;# 
  1069  0E2B                     	;# 
  1070  0E2C                     	;# 
  1071  0E2D                     	;# 
  1072  0E2E                     	;# 
  1073  0E2F                     	;# 
  1074  0E30                     	;# 
  1075  0E31                     	;# 
  1076  0E32                     	;# 
  1077  0E33                     	;# 
  1078  0E34                     	;# 
  1079  0E35                     	;# 
  1080  0E36                     	;# 
  1081  0E37                     	;# 
  1082  0E8F                     	;# 
  1083  0E90                     	;# 
  1084  0E91                     	;# 
  1085  0E92                     	;# 
  1086  0E93                     	;# 
  1087  0E94                     	;# 
  1088  0E95                     	;# 
  1089  0E96                     	;# 
  1090  0E97                     	;# 
  1091  0E9C                     	;# 
  1092  0E9D                     	;# 
  1093  0E9E                     	;# 
  1094  0EA1                     	;# 
  1095  0EA2                     	;# 
  1096  0EA3                     	;# 
  1097  0EA4                     	;# 
  1098  0EA5                     	;# 
  1099  0EA9                     	;# 
  1100  0EAA                     	;# 
  1101  0EAB                     	;# 
  1102  0EAC                     	;# 
  1103  0EB1                     	;# 
  1104  0EB2                     	;# 
  1105  0EB3                     	;# 
  1106  0EB8                     	;# 
  1107  0EB9                     	;# 
  1108  0EBA                     	;# 
  1109  0EBB                     	;# 
  1110  0EBC                     	;# 
  1111  0EBD                     	;# 
  1112  0EBE                     	;# 
  1113  0EC3                     	;# 
  1114  0EC5                     	;# 
  1115  0EC6                     	;# 
  1116  0EC7                     	;# 
  1117  0EC8                     	;# 
  1118  0EC9                     	;# 
  1119  0ECA                     	;# 
  1120  0ECB                     	;# 
  1121  0ECC                     	;# 
  1122  0F10                     	;# 
  1123  0F11                     	;# 
  1124  0F12                     	;# 
  1125  0F13                     	;# 
  1126  0F14                     	;# 
  1127  0F15                     	;# 
  1128  0F16                     	;# 
  1129  0F17                     	;# 
  1130  0F18                     	;# 
  1131  0F19                     	;# 
  1132  0F1A                     	;# 
  1133  0F1B                     	;# 
  1134  0F1C                     	;# 
  1135  0F1D                     	;# 
  1136  0F1E                     	;# 
  1137  0F1F                     	;# 
  1138  0F20                     	;# 
  1139  0F21                     	;# 
  1140  0F22                     	;# 
  1141  0F23                     	;# 
  1142  0F24                     	;# 
  1143  0F25                     	;# 
  1144  0F26                     	;# 
  1145  0F27                     	;# 
  1146  0F28                     	;# 
  1147  0F29                     	;# 
  1148  0F2A                     	;# 
  1149  0F2B                     	;# 
  1150  0F2C                     	;# 
  1151  0F2D                     	;# 
  1152  0F2E                     	;# 
  1153  0F2F                     	;# 
  1154  0F30                     	;# 
  1155  0F31                     	;# 
  1156  0F32                     	;# 
  1157  0F38                     	;# 
  1158  0F39                     	;# 
  1159  0F3A                     	;# 
  1160  0F3B                     	;# 
  1161  0F3C                     	;# 
  1162  0F3D                     	;# 
  1163  0F3E                     	;# 
  1164  0F3F                     	;# 
  1165  0F40                     	;# 
  1166  0F41                     	;# 
  1167  0F43                     	;# 
  1168  0F44                     	;# 
  1169  0F45                     	;# 
  1170  0F46                     	;# 
  1171  0F47                     	;# 
  1172  0F48                     	;# 
  1173  0F49                     	;# 
  1174  0F4A                     	;# 
  1175  0F4B                     	;# 
  1176  0F4C                     	;# 
  1177  0F4E                     	;# 
  1178  0F4F                     	;# 
  1179  0F50                     	;# 
  1180  0F51                     	;# 
  1181  0F52                     	;# 
  1182  0F53                     	;# 
  1183  0F54                     	;# 
  1184  0F55                     	;# 
  1185  0F56                     	;# 
  1186  0F57                     	;# 
  1187  0F59                     	;# 
  1188  0F5A                     	;# 
  1189  0F5B                     	;# 
  1190  0F5C                     	;# 
  1191  0F5D                     	;# 
  1192  0F61                     	;# 
  1193  0F62                     	;# 
  1194  0F64                     	;# 
  1195  0F65                     	;# 
  1196  0F66                     	;# 
  1197  0F67                     	;# 
  1198  0F68                     	;# 
  1199  0F69                     	;# 
  1200  0F6A                     	;# 
  1201  0F6B                     	;# 
  1202  0F6C                     	;# 
  1203  0F6D                     	;# 
  1204  0FE4                     	;# 
  1205  0FE5                     	;# 
  1206  0FE6                     	;# 
  1207  0FE7                     	;# 
  1208  0FE8                     	;# 
  1209  0FE9                     	;# 
  1210  0FEA                     	;# 
  1211  0FEB                     	;# 
  1212  0FED                     	;# 
  1213  0FEE                     	;# 
  1214  0FEF                     	;# 
  1215  0000                     	;# 
  1216  0001                     	;# 
  1217  0002                     	;# 
  1218  0003                     	;# 
  1219  0004                     	;# 
  1220  0005                     	;# 
  1221  0006                     	;# 
  1222  0007                     	;# 
  1223  0008                     	;# 
  1224  0009                     	;# 
  1225  000A                     	;# 
  1226  000B                     	;# 
  1227  000C                     	;# 
  1228  000D                     	;# 
  1229  000E                     	;# 
  1230  000F                     	;# 
  1231  0010                     	;# 
  1232  0011                     	;# 
  1233  0012                     	;# 
  1234  0013                     	;# 
  1235  0014                     	;# 
  1236  0015                     	;# 
  1237  0016                     	;# 
  1238  0017                     	;# 
  1239  0018                     	;# 
  1240  0019                     	;# 
  1241  001A                     	;# 
  1242  001C                     	;# 
  1243  001C                     	;# 
  1244  001D                     	;# 
  1245  001D                     	;# 
  1246  001E                     	;# 
  1247  001F                     	;# 
  1248  008C                     	;# 
  1249  008C                     	;# 
  1250  008D                     	;# 
  1251  008E                     	;# 
  1252  008E                     	;# 
  1253  008F                     	;# 
  1254  0090                     	;# 
  1255  0090                     	;# 
  1256  0091                     	;# 
  1257  0093                     	;# 
  1258  0094                     	;# 
  1259  0095                     	;# 
  1260  0096                     	;# 
  1261  0097                     	;# 
  1262  0098                     	;# 
  1263  0099                     	;# 
  1264  009A                     	;# 
  1265  009B                     	;# 
  1266  009C                     	;# 
  1267  009D                     	;# 
  1268  009E                     	;# 
  1269  010C                     	;# 
  1270  010D                     	;# 
  1271  010E                     	;# 
  1272  010E                     	;# 
  1273  010F                     	;# 
  1274  0110                     	;# 
  1275  0110                     	;# 
  1276  0111                     	;# 
  1277  0112                     	;# 
  1278  0112                     	;# 
  1279  0113                     	;# 
  1280  0114                     	;# 
  1281  0114                     	;# 
  1282  0115                     	;# 
  1283  0116                     	;# 
  1284  0116                     	;# 
  1285  0117                     	;# 
  1286  0119                     	;# 
  1287  0119                     	;# 
  1288  0119                     	;# 
  1289  011A                     	;# 
  1290  011A                     	;# 
  1291  011A                     	;# 
  1292  011B                     	;# 
  1293  011B                     	;# 
  1294  011B                     	;# 
  1295  011B                     	;# 
  1296  011B                     	;# 
  1297  011C                     	;# 
  1298  011C                     	;# 
  1299  011C                     	;# 
  1300  011D                     	;# 
  1301  011D                     	;# 
  1302  011D                     	;# 
  1303  011E                     	;# 
  1304  011E                     	;# 
  1305  011E                     	;# 
  1306  011F                     	;# 
  1307  011F                     	;# 
  1308  011F                     	;# 
  1309  011F                     	;# 
  1310  011F                     	;# 
  1311  018C                     	;# 
  1312  018D                     	;# 
  1313  018E                     	;# 
  1314  018F                     	;# 
  1315  0190                     	;# 
  1316  0191                     	;# 
  1317  0192                     	;# 
  1318  0196                     	;# 
  1319  0197                     	;# 
  1320  0198                     	;# 
  1321  0199                     	;# 
  1322  019A                     	;# 
  1323  019B                     	;# 
  1324  019C                     	;# 
  1325  020C                     	;# 
  1326  020C                     	;# 
  1327  020D                     	;# 
  1328  020E                     	;# 
  1329  020F                     	;# 
  1330  020F                     	;# 
  1331  0210                     	;# 
  1332  0210                     	;# 
  1333  0211                     	;# 
  1334  0211                     	;# 
  1335  0212                     	;# 
  1336  0212                     	;# 
  1337  0213                     	;# 
  1338  0214                     	;# 
  1339  0215                     	;# 
  1340  0215                     	;# 
  1341  0216                     	;# 
  1342  0216                     	;# 
  1343  0217                     	;# 
  1344  0217                     	;# 
  1345  0218                     	;# 
  1346  0218                     	;# 
  1347  0219                     	;# 
  1348  021A                     	;# 
  1349  021B                     	;# 
  1350  021B                     	;# 
  1351  021C                     	;# 
  1352  021C                     	;# 
  1353  021D                     	;# 
  1354  021D                     	;# 
  1355  021E                     	;# 
  1356  021F                     	;# 
  1357  028C                     	;# 
  1358  028C                     	;# 
  1359  028D                     	;# 
  1360  028D                     	;# 
  1361  028E                     	;# 
  1362  028F                     	;# 
  1363  0290                     	;# 
  1364  0290                     	;# 
  1365  0291                     	;# 
  1366  0292                     	;# 
  1367  0292                     	;# 
  1368  0293                     	;# 
  1369  0293                     	;# 
  1370  0294                     	;# 
  1371  0295                     	;# 
  1372  0296                     	;# 
  1373  0296                     	;# 
  1374  0297                     	;# 
  1375  0298                     	;# 
  1376  0298                     	;# 
  1377  0299                     	;# 
  1378  0299                     	;# 
  1379  029A                     	;# 
  1380  029B                     	;# 
  1381  029C                     	;# 
  1382  029C                     	;# 
  1383  029D                     	;# 
  1384  030C                     	;# 
  1385  030C                     	;# 
  1386  030D                     	;# 
  1387  030E                     	;# 
  1388  030F                     	;# 
  1389  0310                     	;# 
  1390  0310                     	;# 
  1391  0311                     	;# 
  1392  0312                     	;# 
  1393  0313                     	;# 
  1394  0314                     	;# 
  1395  0314                     	;# 
  1396  0315                     	;# 
  1397  0316                     	;# 
  1398  0317                     	;# 
  1399  0318                     	;# 
  1400  0318                     	;# 
  1401  0319                     	;# 
  1402  031A                     	;# 
  1403  031B                     	;# 
  1404  031C                     	;# 
  1405  031C                     	;# 
  1406  031D                     	;# 
  1407  031E                     	;# 
  1408  031F                     	;# 
  1409  038C                     	;# 
  1410  038C                     	;# 
  1411  038D                     	;# 
  1412  038E                     	;# 
  1413  0390                     	;# 
  1414  0390                     	;# 
  1415  0391                     	;# 
  1416  0392                     	;# 
  1417  040C                     	;# 
  1418  040D                     	;# 
  1419  040E                     	;# 
  1420  040F                     	;# 
  1421  0410                     	;# 
  1422  0411                     	;# 
  1423  0416                     	;# 
  1424  0416                     	;# 
  1425  0417                     	;# 
  1426  0418                     	;# 
  1427  0418                     	;# 
  1428  0419                     	;# 
  1429  041A                     	;# 
  1430  041A                     	;# 
  1431  041B                     	;# 
  1432  041C                     	;# 
  1433  041C                     	;# 
  1434  041D                     	;# 
  1435  041E                     	;# 
  1436  041F                     	;# 
  1437  048C                     	;# 
  1438  048C                     	;# 
  1439  048D                     	;# 
  1440  048E                     	;# 
  1441  048F                     	;# 
  1442  048F                     	;# 
  1443  0490                     	;# 
  1444  0491                     	;# 
  1445  0492                     	;# 
  1446  0492                     	;# 
  1447  0493                     	;# 
  1448  0494                     	;# 
  1449  0495                     	;# 
  1450  0495                     	;# 
  1451  0496                     	;# 
  1452  0497                     	;# 
  1453  0498                     	;# 
  1454  0499                     	;# 
  1455  049A                     	;# 
  1456  049B                     	;# 
  1457  049C                     	;# 
  1458  049D                     	;# 
  1459  050C                     	;# 
  1460  050C                     	;# 
  1461  050D                     	;# 
  1462  050E                     	;# 
  1463  050F                     	;# 
  1464  050F                     	;# 
  1465  0510                     	;# 
  1466  0511                     	;# 
  1467  0512                     	;# 
  1468  0512                     	;# 
  1469  0513                     	;# 
  1470  0514                     	;# 
  1471  0515                     	;# 
  1472  0515                     	;# 
  1473  0516                     	;# 
  1474  0517                     	;# 
  1475  0518                     	;# 
  1476  0519                     	;# 
  1477  051A                     	;# 
  1478  051B                     	;# 
  1479  051C                     	;# 
  1480  051D                     	;# 
  1481  058C                     	;# 
  1482  058C                     	;# 
  1483  058D                     	;# 
  1484  058E                     	;# 
  1485  058F                     	;# 
  1486  058F                     	;# 
  1487  0590                     	;# 
  1488  0591                     	;# 
  1489  0592                     	;# 
  1490  0593                     	;# 
  1491  060C                     	;# 
  1492  060D                     	;# 
  1493  060E                     	;# 
  1494  060F                     	;# 
  1495  0610                     	;# 
  1496  0611                     	;# 
  1497  0612                     	;# 
  1498  0613                     	;# 
  1499  0614                     	;# 
  1500  0616                     	;# 
  1501  0617                     	;# 
  1502  0618                     	;# 
  1503  0619                     	;# 
  1504  061A                     	;# 
  1505  061B                     	;# 
  1506  061C                     	;# 
  1507  061D                     	;# 
  1508  061E                     	;# 
  1509  068C                     	;# 
  1510  068D                     	;# 
  1511  068E                     	;# 
  1512  068F                     	;# 
  1513  0690                     	;# 
  1514  0691                     	;# 
  1515  0692                     	;# 
  1516  0693                     	;# 
  1517  0694                     	;# 
  1518  070C                     	;# 
  1519  070D                     	;# 
  1520  070E                     	;# 
  1521  070F                     	;# 
  1522  0710                     	;# 
  1523  0711                     	;# 
  1524  0712                     	;# 
  1525  0713                     	;# 
  1526  0714                     	;# 
  1527  0716                     	;# 
  1528  0717                     	;# 
  1529  0718                     	;# 
  1530  0719                     	;# 
  1531  071A                     	;# 
  1532  071B                     	;# 
  1533  071C                     	;# 
  1534  071D                     	;# 
  1535  071E                     	;# 
  1536  0796                     	;# 
  1537  0797                     	;# 
  1538  0798                     	;# 
  1539  0799                     	;# 
  1540  079A                     	;# 
  1541  079B                     	;# 
  1542  080C                     	;# 
  1543  080D                     	;# 
  1544  080E                     	;# 
  1545  080F                     	;# 
  1546  0810                     	;# 
  1547  0811                     	;# 
  1548  0812                     	;# 
  1549  0813                     	;# 
  1550  0814                     	;# 
  1551  081A                     	;# 
  1552  081B                     	;# 
  1553  081C                     	;# 
  1554  081D                     	;# 
  1555  081E                     	;# 
  1556  081F                     	;# 
  1557  088C                     	;# 
  1558  088D                     	;# 
  1559  088E                     	;# 
  1560  088F                     	;# 
  1561  0890                     	;# 
  1562  0891                     	;# 
  1563  0892                     	;# 
  1564  0893                     	;# 
  1565  0895                     	;# 
  1566  0896                     	;# 
  1567  0897                     	;# 
  1568  0898                     	;# 
  1569  0899                     	;# 
  1570  089A                     	;# 
  1571  089B                     	;# 
  1572  090C                     	;# 
  1573  090E                     	;# 
  1574  090F                     	;# 
  1575  091F                     	;# 
  1576  091F                     	;# 
  1577  098F                     	;# 
  1578  098F                     	;# 
  1579  0990                     	;# 
  1580  0991                     	;# 
  1581  0992                     	;# 
  1582  0993                     	;# 
  1583  0994                     	;# 
  1584  0995                     	;# 
  1585  0996                     	;# 
  1586  0997                     	;# 
  1587  0E0F                     	;# 
  1588  0E10                     	;# 
  1589  0E11                     	;# 
  1590  0E12                     	;# 
  1591  0E13                     	;# 
  1592  0E14                     	;# 
  1593  0E15                     	;# 
  1594  0E16                     	;# 
  1595  0E17                     	;# 
  1596  0E18                     	;# 
  1597  0E19                     	;# 
  1598  0E1A                     	;# 
  1599  0E1B                     	;# 
  1600  0E1C                     	;# 
  1601  0E1D                     	;# 
  1602  0E1E                     	;# 
  1603  0E1F                     	;# 
  1604  0E20                     	;# 
  1605  0E21                     	;# 
  1606  0E22                     	;# 
  1607  0E23                     	;# 
  1608  0E24                     	;# 
  1609  0E25                     	;# 
  1610  0E26                     	;# 
  1611  0E27                     	;# 
  1612  0E28                     	;# 
  1613  0E29                     	;# 
  1614  0E2A                     	;# 
  1615  0E2B                     	;# 
  1616  0E2C                     	;# 
  1617  0E2D                     	;# 
  1618  0E2E                     	;# 
  1619  0E2F                     	;# 
  1620  0E30                     	;# 
  1621  0E31                     	;# 
  1622  0E32                     	;# 
  1623  0E33                     	;# 
  1624  0E34                     	;# 
  1625  0E35                     	;# 
  1626  0E36                     	;# 
  1627  0E37                     	;# 
  1628  0E8F                     	;# 
  1629  0E90                     	;# 
  1630  0E91                     	;# 
  1631  0E92                     	;# 
  1632  0E93                     	;# 
  1633  0E94                     	;# 
  1634  0E95                     	;# 
  1635  0E96                     	;# 
  1636  0E97                     	;# 
  1637  0E9C                     	;# 
  1638  0E9D                     	;# 
  1639  0E9E                     	;# 
  1640  0EA1                     	;# 
  1641  0EA2                     	;# 
  1642  0EA3                     	;# 
  1643  0EA4                     	;# 
  1644  0EA5                     	;# 
  1645  0EA9                     	;# 
  1646  0EAA                     	;# 
  1647  0EAB                     	;# 
  1648  0EAC                     	;# 
  1649  0EB1                     	;# 
  1650  0EB2                     	;# 
  1651  0EB3                     	;# 
  1652  0EB8                     	;# 
  1653  0EB9                     	;# 
  1654  0EBA                     	;# 
  1655  0EBB                     	;# 
  1656  0EBC                     	;# 
  1657  0EBD                     	;# 
  1658  0EBE                     	;# 
  1659  0EC3                     	;# 
  1660  0EC5                     	;# 
  1661  0EC6                     	;# 
  1662  0EC7                     	;# 
  1663  0EC8                     	;# 
  1664  0EC9                     	;# 
  1665  0ECA                     	;# 
  1666  0ECB                     	;# 
  1667  0ECC                     	;# 
  1668  0F10                     	;# 
  1669  0F11                     	;# 
  1670  0F12                     	;# 
  1671  0F13                     	;# 
  1672  0F14                     	;# 
  1673  0F15                     	;# 
  1674  0F16                     	;# 
  1675  0F17                     	;# 
  1676  0F18                     	;# 
  1677  0F19                     	;# 
  1678  0F1A                     	;# 
  1679  0F1B                     	;# 
  1680  0F1C                     	;# 
  1681  0F1D                     	;# 
  1682  0F1E                     	;# 
  1683  0F1F                     	;# 
  1684  0F20                     	;# 
  1685  0F21                     	;# 
  1686  0F22                     	;# 
  1687  0F23                     	;# 
  1688  0F24                     	;# 
  1689  0F25                     	;# 
  1690  0F26                     	;# 
  1691  0F27                     	;# 
  1692  0F28                     	;# 
  1693  0F29                     	;# 
  1694  0F2A                     	;# 
  1695  0F2B                     	;# 
  1696  0F2C                     	;# 
  1697  0F2D                     	;# 
  1698  0F2E                     	;# 
  1699  0F2F                     	;# 
  1700  0F30                     	;# 
  1701  0F31                     	;# 
  1702  0F32                     	;# 
  1703  0F38                     	;# 
  1704  0F39                     	;# 
  1705  0F3A                     	;# 
  1706  0F3B                     	;# 
  1707  0F3C                     	;# 
  1708  0F3D                     	;# 
  1709  0F3E                     	;# 
  1710  0F3F                     	;# 
  1711  0F40                     	;# 
  1712  0F41                     	;# 
  1713  0F43                     	;# 
  1714  0F44                     	;# 
  1715  0F45                     	;# 
  1716  0F46                     	;# 
  1717  0F47                     	;# 
  1718  0F48                     	;# 
  1719  0F49                     	;# 
  1720  0F4A                     	;# 
  1721  0F4B                     	;# 
  1722  0F4C                     	;# 
  1723  0F4E                     	;# 
  1724  0F4F                     	;# 
  1725  0F50                     	;# 
  1726  0F51                     	;# 
  1727  0F52                     	;# 
  1728  0F53                     	;# 
  1729  0F54                     	;# 
  1730  0F55                     	;# 
  1731  0F56                     	;# 
  1732  0F57                     	;# 
  1733  0F59                     	;# 
  1734  0F5A                     	;# 
  1735  0F5B                     	;# 
  1736  0F5C                     	;# 
  1737  0F5D                     	;# 
  1738  0F61                     	;# 
  1739  0F62                     	;# 
  1740  0F64                     	;# 
  1741  0F65                     	;# 
  1742  0F66                     	;# 
  1743  0F67                     	;# 
  1744  0F68                     	;# 
  1745  0F69                     	;# 
  1746  0F6A                     	;# 
  1747  0F6B                     	;# 
  1748  0F6C                     	;# 
  1749  0F6D                     	;# 
  1750  0FE4                     	;# 
  1751  0FE5                     	;# 
  1752  0FE6                     	;# 
  1753  0FE7                     	;# 
  1754  0FE8                     	;# 
  1755  0FE9                     	;# 
  1756  0FEA                     	;# 
  1757  0FEB                     	;# 
  1758  0FED                     	;# 
  1759  0FEE                     	;# 
  1760  0FEF                     	;# 
  1761  0000                     	;# 
  1762  0001                     	;# 
  1763  0002                     	;# 
  1764  0003                     	;# 
  1765  0004                     	;# 
  1766  0005                     	;# 
  1767  0006                     	;# 
  1768  0007                     	;# 
  1769  0008                     	;# 
  1770  0009                     	;# 
  1771  000A                     	;# 
  1772  000B                     	;# 
  1773  000C                     	;# 
  1774  000D                     	;# 
  1775  000E                     	;# 
  1776  000F                     	;# 
  1777  0010                     	;# 
  1778  0011                     	;# 
  1779  0012                     	;# 
  1780  0013                     	;# 
  1781  0014                     	;# 
  1782  0015                     	;# 
  1783  0016                     	;# 
  1784  0017                     	;# 
  1785  0018                     	;# 
  1786  0019                     	;# 
  1787  001A                     	;# 
  1788  001C                     	;# 
  1789  001C                     	;# 
  1790  001D                     	;# 
  1791  001D                     	;# 
  1792  001E                     	;# 
  1793  001F                     	;# 
  1794  008C                     	;# 
  1795  008C                     	;# 
  1796  008D                     	;# 
  1797  008E                     	;# 
  1798  008E                     	;# 
  1799  008F                     	;# 
  1800  0090                     	;# 
  1801  0090                     	;# 
  1802  0091                     	;# 
  1803  0093                     	;# 
  1804  0094                     	;# 
  1805  0095                     	;# 
  1806  0096                     	;# 
  1807  0097                     	;# 
  1808  0098                     	;# 
  1809  0099                     	;# 
  1810  009A                     	;# 
  1811  009B                     	;# 
  1812  009C                     	;# 
  1813  009D                     	;# 
  1814  009E                     	;# 
  1815  010C                     	;# 
  1816  010D                     	;# 
  1817  010E                     	;# 
  1818  010E                     	;# 
  1819  010F                     	;# 
  1820  0110                     	;# 
  1821  0110                     	;# 
  1822  0111                     	;# 
  1823  0112                     	;# 
  1824  0112                     	;# 
  1825  0113                     	;# 
  1826  0114                     	;# 
  1827  0114                     	;# 
  1828  0115                     	;# 
  1829  0116                     	;# 
  1830  0116                     	;# 
  1831  0117                     	;# 
  1832  0119                     	;# 
  1833  0119                     	;# 
  1834  0119                     	;# 
  1835  011A                     	;# 
  1836  011A                     	;# 
  1837  011A                     	;# 
  1838  011B                     	;# 
  1839  011B                     	;# 
  1840  011B                     	;# 
  1841  011B                     	;# 
  1842  011B                     	;# 
  1843  011C                     	;# 
  1844  011C                     	;# 
  1845  011C                     	;# 
  1846  011D                     	;# 
  1847  011D                     	;# 
  1848  011D                     	;# 
  1849  011E                     	;# 
  1850  011E                     	;# 
  1851  011E                     	;# 
  1852  011F                     	;# 
  1853  011F                     	;# 
  1854  011F                     	;# 
  1855  011F                     	;# 
  1856  011F                     	;# 
  1857  018C                     	;# 
  1858  018D                     	;# 
  1859  018E                     	;# 
  1860  018F                     	;# 
  1861  0190                     	;# 
  1862  0191                     	;# 
  1863  0192                     	;# 
  1864  0196                     	;# 
  1865  0197                     	;# 
  1866  0198                     	;# 
  1867  0199                     	;# 
  1868  019A                     	;# 
  1869  019B                     	;# 
  1870  019C                     	;# 
  1871  020C                     	;# 
  1872  020C                     	;# 
  1873  020D                     	;# 
  1874  020E                     	;# 
  1875  020F                     	;# 
  1876  020F                     	;# 
  1877  0210                     	;# 
  1878  0210                     	;# 
  1879  0211                     	;# 
  1880  0211                     	;# 
  1881  0212                     	;# 
  1882  0212                     	;# 
  1883  0213                     	;# 
  1884  0214                     	;# 
  1885  0215                     	;# 
  1886  0215                     	;# 
  1887  0216                     	;# 
  1888  0216                     	;# 
  1889  0217                     	;# 
  1890  0217                     	;# 
  1891  0218                     	;# 
  1892  0218                     	;# 
  1893  0219                     	;# 
  1894  021A                     	;# 
  1895  021B                     	;# 
  1896  021B                     	;# 
  1897  021C                     	;# 
  1898  021C                     	;# 
  1899  021D                     	;# 
  1900  021D                     	;# 
  1901  021E                     	;# 
  1902  021F                     	;# 
  1903  028C                     	;# 
  1904  028C                     	;# 
  1905  028D                     	;# 
  1906  028D                     	;# 
  1907  028E                     	;# 
  1908  028F                     	;# 
  1909  0290                     	;# 
  1910  0290                     	;# 
  1911  0291                     	;# 
  1912  0292                     	;# 
  1913  0292                     	;# 
  1914  0293                     	;# 
  1915  0293                     	;# 
  1916  0294                     	;# 
  1917  0295                     	;# 
  1918  0296                     	;# 
  1919  0296                     	;# 
  1920  0297                     	;# 
  1921  0298                     	;# 
  1922  0298                     	;# 
  1923  0299                     	;# 
  1924  0299                     	;# 
  1925  029A                     	;# 
  1926  029B                     	;# 
  1927  029C                     	;# 
  1928  029C                     	;# 
  1929  029D                     	;# 
  1930  030C                     	;# 
  1931  030C                     	;# 
  1932  030D                     	;# 
  1933  030E                     	;# 
  1934  030F                     	;# 
  1935  0310                     	;# 
  1936  0310                     	;# 
  1937  0311                     	;# 
  1938  0312                     	;# 
  1939  0313                     	;# 
  1940  0314                     	;# 
  1941  0314                     	;# 
  1942  0315                     	;# 
  1943  0316                     	;# 
  1944  0317                     	;# 
  1945  0318                     	;# 
  1946  0318                     	;# 
  1947  0319                     	;# 
  1948  031A                     	;# 
  1949  031B                     	;# 
  1950  031C                     	;# 
  1951  031C                     	;# 
  1952  031D                     	;# 
  1953  031E                     	;# 
  1954  031F                     	;# 
  1955  038C                     	;# 
  1956  038C                     	;# 
  1957  038D                     	;# 
  1958  038E                     	;# 
  1959  0390                     	;# 
  1960  0390                     	;# 
  1961  0391                     	;# 
  1962  0392                     	;# 
  1963  040C                     	;# 
  1964  040D                     	;# 
  1965  040E                     	;# 
  1966  040F                     	;# 
  1967  0410                     	;# 
  1968  0411                     	;# 
  1969  0416                     	;# 
  1970  0416                     	;# 
  1971  0417                     	;# 
  1972  0418                     	;# 
  1973  0418                     	;# 
  1974  0419                     	;# 
  1975  041A                     	;# 
  1976  041A                     	;# 
  1977  041B                     	;# 
  1978  041C                     	;# 
  1979  041C                     	;# 
  1980  041D                     	;# 
  1981  041E                     	;# 
  1982  041F                     	;# 
  1983  048C                     	;# 
  1984  048C                     	;# 
  1985  048D                     	;# 
  1986  048E                     	;# 
  1987  048F                     	;# 
  1988  048F                     	;# 
  1989  0490                     	;# 
  1990  0491                     	;# 
  1991  0492                     	;# 
  1992  0492                     	;# 
  1993  0493                     	;# 
  1994  0494                     	;# 
  1995  0495                     	;# 
  1996  0495                     	;# 
  1997  0496                     	;# 
  1998  0497                     	;# 
  1999  0498                     	;# 
  2000  0499                     	;# 
  2001  049A                     	;# 
  2002  049B                     	;# 
  2003  049C                     	;# 
  2004  049D                     	;# 
  2005  050C                     	;# 
  2006  050C                     	;# 
  2007  050D                     	;# 
  2008  050E                     	;# 
  2009  050F                     	;# 
  2010  050F                     	;# 
  2011  0510                     	;# 
  2012  0511                     	;# 
  2013  0512                     	;# 
  2014  0512                     	;# 
  2015  0513                     	;# 
  2016  0514                     	;# 
  2017  0515                     	;# 
  2018  0515                     	;# 
  2019  0516                     	;# 
  2020  0517                     	;# 
  2021  0518                     	;# 
  2022  0519                     	;# 
  2023  051A                     	;# 
  2024  051B                     	;# 
  2025  051C                     	;# 
  2026  051D                     	;# 
  2027  058C                     	;# 
  2028  058C                     	;# 
  2029  058D                     	;# 
  2030  058E                     	;# 
  2031  058F                     	;# 
  2032  058F                     	;# 
  2033  0590                     	;# 
  2034  0591                     	;# 
  2035  0592                     	;# 
  2036  0593                     	;# 
  2037  060C                     	;# 
  2038  060D                     	;# 
  2039  060E                     	;# 
  2040  060F                     	;# 
  2041  0610                     	;# 
  2042  0611                     	;# 
  2043  0612                     	;# 
  2044  0613                     	;# 
  2045  0614                     	;# 
  2046  0616                     	;# 
  2047  0617                     	;# 
  2048  0618                     	;# 
  2049  0619                     	;# 
  2050  061A                     	;# 
  2051  061B                     	;# 
  2052  061C                     	;# 
  2053  061D                     	;# 
  2054  061E                     	;# 
  2055  068C                     	;# 
  2056  068D                     	;# 
  2057  068E                     	;# 
  2058  068F                     	;# 
  2059  0690                     	;# 
  2060  0691                     	;# 
  2061  0692                     	;# 
  2062  0693                     	;# 
  2063  0694                     	;# 
  2064  070C                     	;# 
  2065  070D                     	;# 
  2066  070E                     	;# 
  2067  070F                     	;# 
  2068  0710                     	;# 
  2069  0711                     	;# 
  2070  0712                     	;# 
  2071  0713                     	;# 
  2072  0714                     	;# 
  2073  0716                     	;# 
  2074  0717                     	;# 
  2075  0718                     	;# 
  2076  0719                     	;# 
  2077  071A                     	;# 
  2078  071B                     	;# 
  2079  071C                     	;# 
  2080  071D                     	;# 
  2081  071E                     	;# 
  2082  0796                     	;# 
  2083  0797                     	;# 
  2084  0798                     	;# 
  2085  0799                     	;# 
  2086  079A                     	;# 
  2087  079B                     	;# 
  2088  080C                     	;# 
  2089  080D                     	;# 
  2090  080E                     	;# 
  2091  080F                     	;# 
  2092  0810                     	;# 
  2093  0811                     	;# 
  2094  0812                     	;# 
  2095  0813                     	;# 
  2096  0814                     	;# 
  2097  081A                     	;# 
  2098  081B                     	;# 
  2099  081C                     	;# 
  2100  081D                     	;# 
  2101  081E                     	;# 
  2102  081F                     	;# 
  2103  088C                     	;# 
  2104  088D                     	;# 
  2105  088E                     	;# 
  2106  088F                     	;# 
  2107  0890                     	;# 
  2108  0891                     	;# 
  2109  0892                     	;# 
  2110  0893                     	;# 
  2111  0895                     	;# 
  2112  0896                     	;# 
  2113  0897                     	;# 
  2114  0898                     	;# 
  2115  0899                     	;# 
  2116  089A                     	;# 
  2117  089B                     	;# 
  2118  090C                     	;# 
  2119  090E                     	;# 
  2120  090F                     	;# 
  2121  091F                     	;# 
  2122  091F                     	;# 
  2123  098F                     	;# 
  2124  098F                     	;# 
  2125  0990                     	;# 
  2126  0991                     	;# 
  2127  0992                     	;# 
  2128  0993                     	;# 
  2129  0994                     	;# 
  2130  0995                     	;# 
  2131  0996                     	;# 
  2132  0997                     	;# 
  2133  0E0F                     	;# 
  2134  0E10                     	;# 
  2135  0E11                     	;# 
  2136  0E12                     	;# 
  2137  0E13                     	;# 
  2138  0E14                     	;# 
  2139  0E15                     	;# 
  2140  0E16                     	;# 
  2141  0E17                     	;# 
  2142  0E18                     	;# 
  2143  0E19                     	;# 
  2144  0E1A                     	;# 
  2145  0E1B                     	;# 
  2146  0E1C                     	;# 
  2147  0E1D                     	;# 
  2148  0E1E                     	;# 
  2149  0E1F                     	;# 
  2150  0E20                     	;# 
  2151  0E21                     	;# 
  2152  0E22                     	;# 
  2153  0E23                     	;# 
  2154  0E24                     	;# 
  2155  0E25                     	;# 
  2156  0E26                     	;# 
  2157  0E27                     	;# 
  2158  0E28                     	;# 
  2159  0E29                     	;# 
  2160  0E2A                     	;# 
  2161  0E2B                     	;# 
  2162  0E2C                     	;# 
  2163  0E2D                     	;# 
  2164  0E2E                     	;# 
  2165  0E2F                     	;# 
  2166  0E30                     	;# 
  2167  0E31                     	;# 
  2168  0E32                     	;# 
  2169  0E33                     	;# 
  2170  0E34                     	;# 
  2171  0E35                     	;# 
  2172  0E36                     	;# 
  2173  0E37                     	;# 
  2174  0E8F                     	;# 
  2175  0E90                     	;# 
  2176  0E91                     	;# 
  2177  0E92                     	;# 
  2178  0E93                     	;# 
  2179  0E94                     	;# 
  2180  0E95                     	;# 
  2181  0E96                     	;# 
  2182  0E97                     	;# 
  2183  0E9C                     	;# 
  2184  0E9D                     	;# 
  2185  0E9E                     	;# 
  2186  0EA1                     	;# 
  2187  0EA2                     	;# 
  2188  0EA3                     	;# 
  2189  0EA4                     	;# 
  2190  0EA5                     	;# 
  2191  0EA9                     	;# 
  2192  0EAA                     	;# 
  2193  0EAB                     	;# 
  2194  0EAC                     	;# 
  2195  0EB1                     	;# 
  2196  0EB2                     	;# 
  2197  0EB3                     	;# 
  2198  0EB8                     	;# 
  2199  0EB9                     	;# 
  2200  0EBA                     	;# 
  2201  0EBB                     	;# 
  2202  0EBC                     	;# 
  2203  0EBD                     	;# 
  2204  0EBE                     	;# 
  2205  0EC3                     	;# 
  2206  0EC5                     	;# 
  2207  0EC6                     	;# 
  2208  0EC7                     	;# 
  2209  0EC8                     	;# 
  2210  0EC9                     	;# 
  2211  0ECA                     	;# 
  2212  0ECB                     	;# 
  2213  0ECC                     	;# 
  2214  0F10                     	;# 
  2215  0F11                     	;# 
  2216  0F12                     	;# 
  2217  0F13                     	;# 
  2218  0F14                     	;# 
  2219  0F15                     	;# 
  2220  0F16                     	;# 
  2221  0F17                     	;# 
  2222  0F18                     	;# 
  2223  0F19                     	;# 
  2224  0F1A                     	;# 
  2225  0F1B                     	;# 
  2226  0F1C                     	;# 
  2227  0F1D                     	;# 
  2228  0F1E                     	;# 
  2229  0F1F                     	;# 
  2230  0F20                     	;# 
  2231  0F21                     	;# 
  2232  0F22                     	;# 
  2233  0F23                     	;# 
  2234  0F24                     	;# 
  2235  0F25                     	;# 
  2236  0F26                     	;# 
  2237  0F27                     	;# 
  2238  0F28                     	;# 
  2239  0F29                     	;# 
  2240  0F2A                     	;# 
  2241  0F2B                     	;# 
  2242  0F2C                     	;# 
  2243  0F2D                     	;# 
  2244  0F2E                     	;# 
  2245  0F2F                     	;# 
  2246  0F30                     	;# 
  2247  0F31                     	;# 
  2248  0F32                     	;# 
  2249  0F38                     	;# 
  2250  0F39                     	;# 
  2251  0F3A                     	;# 
  2252  0F3B                     	;# 
  2253  0F3C                     	;# 
  2254  0F3D                     	;# 
  2255  0F3E                     	;# 
  2256  0F3F                     	;# 
  2257  0F40                     	;# 
  2258  0F41                     	;# 
  2259  0F43                     	;# 
  2260  0F44                     	;# 
  2261  0F45                     	;# 
  2262  0F46                     	;# 
  2263  0F47                     	;# 
  2264  0F48                     	;# 
  2265  0F49                     	;# 
  2266  0F4A                     	;# 
  2267  0F4B                     	;# 
  2268  0F4C                     	;# 
  2269  0F4E                     	;# 
  2270  0F4F                     	;# 
  2271  0F50                     	;# 
  2272  0F51                     	;# 
  2273  0F52                     	;# 
  2274  0F53                     	;# 
  2275  0F54                     	;# 
  2276  0F55                     	;# 
  2277  0F56                     	;# 
  2278  0F57                     	;# 
  2279  0F59                     	;# 
  2280  0F5A                     	;# 
  2281  0F5B                     	;# 
  2282  0F5C                     	;# 
  2283  0F5D                     	;# 
  2284  0F61                     	;# 
  2285  0F62                     	;# 
  2286  0F64                     	;# 
  2287  0F65                     	;# 
  2288  0F66                     	;# 
  2289  0F67                     	;# 
  2290  0F68                     	;# 
  2291  0F69                     	;# 
  2292  0F6A                     	;# 
  2293  0F6B                     	;# 
  2294  0F6C                     	;# 
  2295  0F6D                     	;# 
  2296  0FE4                     	;# 
  2297  0FE5                     	;# 
  2298  0FE6                     	;# 
  2299  0FE7                     	;# 
  2300  0FE8                     	;# 
  2301  0FE9                     	;# 
  2302  0FEA                     	;# 
  2303  0FEB                     	;# 
  2304  0FED                     	;# 
  2305  0FEE                     	;# 
  2306  0FEF                     	;# 
  2307  0000                     	;# 
  2308  0001                     	;# 
  2309  0002                     	;# 
  2310  0003                     	;# 
  2311  0004                     	;# 
  2312  0005                     	;# 
  2313  0006                     	;# 
  2314  0007                     	;# 
  2315  0008                     	;# 
  2316  0009                     	;# 
  2317  000A                     	;# 
  2318  000B                     	;# 
  2319  000C                     	;# 
  2320  000D                     	;# 
  2321  000E                     	;# 
  2322  000F                     	;# 
  2323  0010                     	;# 
  2324  0011                     	;# 
  2325  0012                     	;# 
  2326  0013                     	;# 
  2327  0014                     	;# 
  2328  0015                     	;# 
  2329  0016                     	;# 
  2330  0017                     	;# 
  2331  0018                     	;# 
  2332  0019                     	;# 
  2333  001A                     	;# 
  2334  001C                     	;# 
  2335  001C                     	;# 
  2336  001D                     	;# 
  2337  001D                     	;# 
  2338  001E                     	;# 
  2339  001F                     	;# 
  2340  008C                     	;# 
  2341  008C                     	;# 
  2342  008D                     	;# 
  2343  008E                     	;# 
  2344  008E                     	;# 
  2345  008F                     	;# 
  2346  0090                     	;# 
  2347  0090                     	;# 
  2348  0091                     	;# 
  2349  0093                     	;# 
  2350  0094                     	;# 
  2351  0095                     	;# 
  2352  0096                     	;# 
  2353  0097                     	;# 
  2354  0098                     	;# 
  2355  0099                     	;# 
  2356  009A                     	;# 
  2357  009B                     	;# 
  2358  009C                     	;# 
  2359  009D                     	;# 
  2360  009E                     	;# 
  2361  010C                     	;# 
  2362  010D                     	;# 
  2363  010E                     	;# 
  2364  010E                     	;# 
  2365  010F                     	;# 
  2366  0110                     	;# 
  2367  0110                     	;# 
  2368  0111                     	;# 
  2369  0112                     	;# 
  2370  0112                     	;# 
  2371  0113                     	;# 
  2372  0114                     	;# 
  2373  0114                     	;# 
  2374  0115                     	;# 
  2375  0116                     	;# 
  2376  0116                     	;# 
  2377  0117                     	;# 
  2378  0119                     	;# 
  2379  0119                     	;# 
  2380  0119                     	;# 
  2381  011A                     	;# 
  2382  011A                     	;# 
  2383  011A                     	;# 
  2384  011B                     	;# 
  2385  011B                     	;# 
  2386  011B                     	;# 
  2387  011B                     	;# 
  2388  011B                     	;# 
  2389  011C                     	;# 
  2390  011C                     	;# 
  2391  011C                     	;# 
  2392  011D                     	;# 
  2393  011D                     	;# 
  2394  011D                     	;# 
  2395  011E                     	;# 
  2396  011E                     	;# 
  2397  011E                     	;# 
  2398  011F                     	;# 
  2399  011F                     	;# 
  2400  011F                     	;# 
  2401  011F                     	;# 
  2402  011F                     	;# 
  2403  018C                     	;# 
  2404  018D                     	;# 
  2405  018E                     	;# 
  2406  018F                     	;# 
  2407  0190                     	;# 
  2408  0191                     	;# 
  2409  0192                     	;# 
  2410  0196                     	;# 
  2411  0197                     	;# 
  2412  0198                     	;# 
  2413  0199                     	;# 
  2414  019A                     	;# 
  2415  019B                     	;# 
  2416  019C                     	;# 
  2417  020C                     	;# 
  2418  020C                     	;# 
  2419  020D                     	;# 
  2420  020E                     	;# 
  2421  020F                     	;# 
  2422  020F                     	;# 
  2423  0210                     	;# 
  2424  0210                     	;# 
  2425  0211                     	;# 
  2426  0211                     	;# 
  2427  0212                     	;# 
  2428  0212                     	;# 
  2429  0213                     	;# 
  2430  0214                     	;# 
  2431  0215                     	;# 
  2432  0215                     	;# 
  2433  0216                     	;# 
  2434  0216                     	;# 
  2435  0217                     	;# 
  2436  0217                     	;# 
  2437  0218                     	;# 
  2438  0218                     	;# 
  2439  0219                     	;# 
  2440  021A                     	;# 
  2441  021B                     	;# 
  2442  021B                     	;# 
  2443  021C                     	;# 
  2444  021C                     	;# 
  2445  021D                     	;# 
  2446  021D                     	;# 
  2447  021E                     	;# 
  2448  021F                     	;# 
  2449  028C                     	;# 
  2450  028C                     	;# 
  2451  028D                     	;# 
  2452  028D                     	;# 
  2453  028E                     	;# 
  2454  028F                     	;# 
  2455  0290                     	;# 
  2456  0290                     	;# 
  2457  0291                     	;# 
  2458  0292                     	;# 
  2459  0292                     	;# 
  2460  0293                     	;# 
  2461  0293                     	;# 
  2462  0294                     	;# 
  2463  0295                     	;# 
  2464  0296                     	;# 
  2465  0296                     	;# 
  2466  0297                     	;# 
  2467  0298                     	;# 
  2468  0298                     	;# 
  2469  0299                     	;# 
  2470  0299                     	;# 
  2471  029A                     	;# 
  2472  029B                     	;# 
  2473  029C                     	;# 
  2474  029C                     	;# 
  2475  029D                     	;# 
  2476  030C                     	;# 
  2477  030C                     	;# 
  2478  030D                     	;# 
  2479  030E                     	;# 
  2480  030F                     	;# 
  2481  0310                     	;# 
  2482  0310                     	;# 
  2483  0311                     	;# 
  2484  0312                     	;# 
  2485  0313                     	;# 
  2486  0314                     	;# 
  2487  0314                     	;# 
  2488  0315                     	;# 
  2489  0316                     	;# 
  2490  0317                     	;# 
  2491  0318                     	;# 
  2492  0318                     	;# 
  2493  0319                     	;# 
  2494  031A                     	;# 
  2495  031B                     	;# 
  2496  031C                     	;# 
  2497  031C                     	;# 
  2498  031D                     	;# 
  2499  031E                     	;# 
  2500  031F                     	;# 
  2501  038C                     	;# 
  2502  038C                     	;# 
  2503  038D                     	;# 
  2504  038E                     	;# 
  2505  0390                     	;# 
  2506  0390                     	;# 
  2507  0391                     	;# 
  2508  0392                     	;# 
  2509  040C                     	;# 
  2510  040D                     	;# 
  2511  040E                     	;# 
  2512  040F                     	;# 
  2513  0410                     	;# 
  2514  0411                     	;# 
  2515  0416                     	;# 
  2516  0416                     	;# 
  2517  0417                     	;# 
  2518  0418                     	;# 
  2519  0418                     	;# 
  2520  0419                     	;# 
  2521  041A                     	;# 
  2522  041A                     	;# 
  2523  041B                     	;# 
  2524  041C                     	;# 
  2525  041C                     	;# 
  2526  041D                     	;# 
  2527  041E                     	;# 
  2528  041F                     	;# 
  2529  048C                     	;# 
  2530  048C                     	;# 
  2531  048D                     	;# 
  2532  048E                     	;# 
  2533  048F                     	;# 
  2534  048F                     	;# 
  2535  0490                     	;# 
  2536  0491                     	;# 
  2537  0492                     	;# 
  2538  0492                     	;# 
  2539  0493                     	;# 
  2540  0494                     	;# 
  2541  0495                     	;# 
  2542  0495                     	;# 
  2543  0496                     	;# 
  2544  0497                     	;# 
  2545  0498                     	;# 
  2546  0499                     	;# 
  2547  049A                     	;# 
  2548  049B                     	;# 
  2549  049C                     	;# 
  2550  049D                     	;# 
  2551  050C                     	;# 
  2552  050C                     	;# 
  2553  050D                     	;# 
  2554  050E                     	;# 
  2555  050F                     	;# 
  2556  050F                     	;# 
  2557  0510                     	;# 
  2558  0511                     	;# 
  2559  0512                     	;# 
  2560  0512                     	;# 
  2561  0513                     	;# 
  2562  0514                     	;# 
  2563  0515                     	;# 
  2564  0515                     	;# 
  2565  0516                     	;# 
  2566  0517                     	;# 
  2567  0518                     	;# 
  2568  0519                     	;# 
  2569  051A                     	;# 
  2570  051B                     	;# 
  2571  051C                     	;# 
  2572  051D                     	;# 
  2573  058C                     	;# 
  2574  058C                     	;# 
  2575  058D                     	;# 
  2576  058E                     	;# 
  2577  058F                     	;# 
  2578  058F                     	;# 
  2579  0590                     	;# 
  2580  0591                     	;# 
  2581  0592                     	;# 
  2582  0593                     	;# 
  2583  060C                     	;# 
  2584  060D                     	;# 
  2585  060E                     	;# 
  2586  060F                     	;# 
  2587  0610                     	;# 
  2588  0611                     	;# 
  2589  0612                     	;# 
  2590  0613                     	;# 
  2591  0614                     	;# 
  2592  0616                     	;# 
  2593  0617                     	;# 
  2594  0618                     	;# 
  2595  0619                     	;# 
  2596  061A                     	;# 
  2597  061B                     	;# 
  2598  061C                     	;# 
  2599  061D                     	;# 
  2600  061E                     	;# 
  2601  068C                     	;# 
  2602  068D                     	;# 
  2603  068E                     	;# 
  2604  068F                     	;# 
  2605  0690                     	;# 
  2606  0691                     	;# 
  2607  0692                     	;# 
  2608  0693                     	;# 
  2609  0694                     	;# 
  2610  070C                     	;# 
  2611  070D                     	;# 
  2612  070E                     	;# 
  2613  070F                     	;# 
  2614  0710                     	;# 
  2615  0711                     	;# 
  2616  0712                     	;# 
  2617  0713                     	;# 
  2618  0714                     	;# 
  2619  0716                     	;# 
  2620  0717                     	;# 
  2621  0718                     	;# 
  2622  0719                     	;# 
  2623  071A                     	;# 
  2624  071B                     	;# 
  2625  071C                     	;# 
  2626  071D                     	;# 
  2627  071E                     	;# 
  2628  0796                     	;# 
  2629  0797                     	;# 
  2630  0798                     	;# 
  2631  0799                     	;# 
  2632  079A                     	;# 
  2633  079B                     	;# 
  2634  080C                     	;# 
  2635  080D                     	;# 
  2636  080E                     	;# 
  2637  080F                     	;# 
  2638  0810                     	;# 
  2639  0811                     	;# 
  2640  0812                     	;# 
  2641  0813                     	;# 
  2642  0814                     	;# 
  2643  081A                     	;# 
  2644  081B                     	;# 
  2645  081C                     	;# 
  2646  081D                     	;# 
  2647  081E                     	;# 
  2648  081F                     	;# 
  2649  088C                     	;# 
  2650  088D                     	;# 
  2651  088E                     	;# 
  2652  088F                     	;# 
  2653  0890                     	;# 
  2654  0891                     	;# 
  2655  0892                     	;# 
  2656  0893                     	;# 
  2657  0895                     	;# 
  2658  0896                     	;# 
  2659  0897                     	;# 
  2660  0898                     	;# 
  2661  0899                     	;# 
  2662  089A                     	;# 
  2663  089B                     	;# 
  2664  090C                     	;# 
  2665  090E                     	;# 
  2666  090F                     	;# 
  2667  091F                     	;# 
  2668  091F                     	;# 
  2669  098F                     	;# 
  2670  098F                     	;# 
  2671  0990                     	;# 
  2672  0991                     	;# 
  2673  0992                     	;# 
  2674  0993                     	;# 
  2675  0994                     	;# 
  2676  0995                     	;# 
  2677  0996                     	;# 
  2678  0997                     	;# 
  2679  0E0F                     	;# 
  2680  0E10                     	;# 
  2681  0E11                     	;# 
  2682  0E12                     	;# 
  2683  0E13                     	;# 
  2684  0E14                     	;# 
  2685  0E15                     	;# 
  2686  0E16                     	;# 
  2687  0E17                     	;# 
  2688  0E18                     	;# 
  2689  0E19                     	;# 
  2690  0E1A                     	;# 
  2691  0E1B                     	;# 
  2692  0E1C                     	;# 
  2693  0E1D                     	;# 
  2694  0E1E                     	;# 
  2695  0E1F                     	;# 
  2696  0E20                     	;# 
  2697  0E21                     	;# 
  2698  0E22                     	;# 
  2699  0E23                     	;# 
  2700  0E24                     	;# 
  2701  0E25                     	;# 
  2702  0E26                     	;# 
  2703  0E27                     	;# 
  2704  0E28                     	;# 
  2705  0E29                     	;# 
  2706  0E2A                     	;# 
  2707  0E2B                     	;# 
  2708  0E2C                     	;# 
  2709  0E2D                     	;# 
  2710  0E2E                     	;# 
  2711  0E2F                     	;# 
  2712  0E30                     	;# 
  2713  0E31                     	;# 
  2714  0E32                     	;# 
  2715  0E33                     	;# 
  2716  0E34                     	;# 
  2717  0E35                     	;# 
  2718  0E36                     	;# 
  2719  0E37                     	;# 
  2720  0E8F                     	;# 
  2721  0E90                     	;# 
  2722  0E91                     	;# 
  2723  0E92                     	;# 
  2724  0E93                     	;# 
  2725  0E94                     	;# 
  2726  0E95                     	;# 
  2727  0E96                     	;# 
  2728  0E97                     	;# 
  2729  0E9C                     	;# 
  2730  0E9D                     	;# 
  2731  0E9E                     	;# 
  2732  0EA1                     	;# 
  2733  0EA2                     	;# 
  2734  0EA3                     	;# 
  2735  0EA4                     	;# 
  2736  0EA5                     	;# 
  2737  0EA9                     	;# 
  2738  0EAA                     	;# 
  2739  0EAB                     	;# 
  2740  0EAC                     	;# 
  2741  0EB1                     	;# 
  2742  0EB2                     	;# 
  2743  0EB3                     	;# 
  2744  0EB8                     	;# 
  2745  0EB9                     	;# 
  2746  0EBA                     	;# 
  2747  0EBB                     	;# 
  2748  0EBC                     	;# 
  2749  0EBD                     	;# 
  2750  0EBE                     	;# 
  2751  0EC3                     	;# 
  2752  0EC5                     	;# 
  2753  0EC6                     	;# 
  2754  0EC7                     	;# 
  2755  0EC8                     	;# 
  2756  0EC9                     	;# 
  2757  0ECA                     	;# 
  2758  0ECB                     	;# 
  2759  0ECC                     	;# 
  2760  0F10                     	;# 
  2761  0F11                     	;# 
  2762  0F12                     	;# 
  2763  0F13                     	;# 
  2764  0F14                     	;# 
  2765  0F15                     	;# 
  2766  0F16                     	;# 
  2767  0F17                     	;# 
  2768  0F18                     	;# 
  2769  0F19                     	;# 
  2770  0F1A                     	;# 
  2771  0F1B                     	;# 
  2772  0F1C                     	;# 
  2773  0F1D                     	;# 
  2774  0F1E                     	;# 
  2775  0F1F                     	;# 
  2776  0F20                     	;# 
  2777  0F21                     	;# 
  2778  0F22                     	;# 
  2779  0F23                     	;# 
  2780  0F24                     	;# 
  2781  0F25                     	;# 
  2782  0F26                     	;# 
  2783  0F27                     	;# 
  2784  0F28                     	;# 
  2785  0F29                     	;# 
  2786  0F2A                     	;# 
  2787  0F2B                     	;# 
  2788  0F2C                     	;# 
  2789  0F2D                     	;# 
  2790  0F2E                     	;# 
  2791  0F2F                     	;# 
  2792  0F30                     	;# 
  2793  0F31                     	;# 
  2794  0F32                     	;# 
  2795  0F38                     	;# 
  2796  0F39                     	;# 
  2797  0F3A                     	;# 
  2798  0F3B                     	;# 
  2799  0F3C                     	;# 
  2800  0F3D                     	;# 
  2801  0F3E                     	;# 
  2802  0F3F                     	;# 
  2803  0F40                     	;# 
  2804  0F41                     	;# 
  2805  0F43                     	;# 
  2806  0F44                     	;# 
  2807  0F45                     	;# 
  2808  0F46                     	;# 
  2809  0F47                     	;# 
  2810  0F48                     	;# 
  2811  0F49                     	;# 
  2812  0F4A                     	;# 
  2813  0F4B                     	;# 
  2814  0F4C                     	;# 
  2815  0F4E                     	;# 
  2816  0F4F                     	;# 
  2817  0F50                     	;# 
  2818  0F51                     	;# 
  2819  0F52                     	;# 
  2820  0F53                     	;# 
  2821  0F54                     	;# 
  2822  0F55                     	;# 
  2823  0F56                     	;# 
  2824  0F57                     	;# 
  2825  0F59                     	;# 
  2826  0F5A                     	;# 
  2827  0F5B                     	;# 
  2828  0F5C                     	;# 
  2829  0F5D                     	;# 
  2830  0F61                     	;# 
  2831  0F62                     	;# 
  2832  0F64                     	;# 
  2833  0F65                     	;# 
  2834  0F66                     	;# 
  2835  0F67                     	;# 
  2836  0F68                     	;# 
  2837  0F69                     	;# 
  2838  0F6A                     	;# 
  2839  0F6B                     	;# 
  2840  0F6C                     	;# 
  2841  0F6D                     	;# 
  2842  0FE4                     	;# 
  2843  0FE5                     	;# 
  2844  0FE6                     	;# 
  2845  0FE7                     	;# 
  2846  0FE8                     	;# 
  2847  0FE9                     	;# 
  2848  0FEA                     	;# 
  2849  0FEB                     	;# 
  2850  0FED                     	;# 
  2851  0FEE                     	;# 
  2852  0FEF                     	;# 
  2853  0000                     	;# 
  2854  0001                     	;# 
  2855  0002                     	;# 
  2856  0003                     	;# 
  2857  0004                     	;# 
  2858  0005                     	;# 
  2859  0006                     	;# 
  2860  0007                     	;# 
  2861  0008                     	;# 
  2862  0009                     	;# 
  2863  000A                     	;# 
  2864  000B                     	;# 
  2865  000C                     	;# 
  2866  000D                     	;# 
  2867  000E                     	;# 
  2868  000F                     	;# 
  2869  0010                     	;# 
  2870  0011                     	;# 
  2871  0012                     	;# 
  2872  0013                     	;# 
  2873  0014                     	;# 
  2874  0015                     	;# 
  2875  0016                     	;# 
  2876  0017                     	;# 
  2877  0018                     	;# 
  2878  0019                     	;# 
  2879  001A                     	;# 
  2880  001C                     	;# 
  2881  001C                     	;# 
  2882  001D                     	;# 
  2883  001D                     	;# 
  2884  001E                     	;# 
  2885  001F                     	;# 
  2886  008C                     	;# 
  2887  008C                     	;# 
  2888  008D                     	;# 
  2889  008E                     	;# 
  2890  008E                     	;# 
  2891  008F                     	;# 
  2892  0090                     	;# 
  2893  0090                     	;# 
  2894  0091                     	;# 
  2895  0093                     	;# 
  2896  0094                     	;# 
  2897  0095                     	;# 
  2898  0096                     	;# 
  2899  0097                     	;# 
  2900  0098                     	;# 
  2901  0099                     	;# 
  2902  009A                     	;# 
  2903  009B                     	;# 
  2904  009C                     	;# 
  2905  009D                     	;# 
  2906  009E                     	;# 
  2907  010C                     	;# 
  2908  010D                     	;# 
  2909  010E                     	;# 
  2910  010E                     	;# 
  2911  010F                     	;# 
  2912  0110                     	;# 
  2913  0110                     	;# 
  2914  0111                     	;# 
  2915  0112                     	;# 
  2916  0112                     	;# 
  2917  0113                     	;# 
  2918  0114                     	;# 
  2919  0114                     	;# 
  2920  0115                     	;# 
  2921  0116                     	;# 
  2922  0116                     	;# 
  2923  0117                     	;# 
  2924  0119                     	;# 
  2925  0119                     	;# 
  2926  0119                     	;# 
  2927  011A                     	;# 
  2928  011A                     	;# 
  2929  011A                     	;# 
  2930  011B                     	;# 
  2931  011B                     	;# 
  2932  011B                     	;# 
  2933  011B                     	;# 
  2934  011B                     	;# 
  2935  011C                     	;# 
  2936  011C                     	;# 
  2937  011C                     	;# 
  2938  011D                     	;# 
  2939  011D                     	;# 
  2940  011D                     	;# 
  2941  011E                     	;# 
  2942  011E                     	;# 
  2943  011E                     	;# 
  2944  011F                     	;# 
  2945  011F                     	;# 
  2946  011F                     	;# 
  2947  011F                     	;# 
  2948  011F                     	;# 
  2949  018C                     	;# 
  2950  018D                     	;# 
  2951  018E                     	;# 
  2952  018F                     	;# 
  2953  0190                     	;# 
  2954  0191                     	;# 
  2955  0192                     	;# 
  2956  0196                     	;# 
  2957  0197                     	;# 
  2958  0198                     	;# 
  2959  0199                     	;# 
  2960  019A                     	;# 
  2961  019B                     	;# 
  2962  019C                     	;# 
  2963  020C                     	;# 
  2964  020C                     	;# 
  2965  020D                     	;# 
  2966  020E                     	;# 
  2967  020F                     	;# 
  2968  020F                     	;# 
  2969  0210                     	;# 
  2970  0210                     	;# 
  2971  0211                     	;# 
  2972  0211                     	;# 
  2973  0212                     	;# 
  2974  0212                     	;# 
  2975  0213                     	;# 
  2976  0214                     	;# 
  2977  0215                     	;# 
  2978  0215                     	;# 
  2979  0216                     	;# 
  2980  0216                     	;# 
  2981  0217                     	;# 
  2982  0217                     	;# 
  2983  0218                     	;# 
  2984  0218                     	;# 
  2985  0219                     	;# 
  2986  021A                     	;# 
  2987  021B                     	;# 
  2988  021B                     	;# 
  2989  021C                     	;# 
  2990  021C                     	;# 
  2991  021D                     	;# 
  2992  021D                     	;# 
  2993  021E                     	;# 
  2994  021F                     	;# 
  2995  028C                     	;# 
  2996  028C                     	;# 
  2997  028D                     	;# 
  2998  028D                     	;# 
  2999  028E                     	;# 
  3000  028F                     	;# 
  3001  0290                     	;# 
  3002  0290                     	;# 
  3003  0291                     	;# 
  3004  0292                     	;# 
  3005  0292                     	;# 
  3006  0293                     	;# 
  3007  0293                     	;# 
  3008  0294                     	;# 
  3009  0295                     	;# 
  3010  0296                     	;# 
  3011  0296                     	;# 
  3012  0297                     	;# 
  3013  0298                     	;# 
  3014  0298                     	;# 
  3015  0299                     	;# 
  3016  0299                     	;# 
  3017  029A                     	;# 
  3018  029B                     	;# 
  3019  029C                     	;# 
  3020  029C                     	;# 
  3021  029D                     	;# 
  3022  030C                     	;# 
  3023  030C                     	;# 
  3024  030D                     	;# 
  3025  030E                     	;# 
  3026  030F                     	;# 
  3027  0310                     	;# 
  3028  0310                     	;# 
  3029  0311                     	;# 
  3030  0312                     	;# 
  3031  0313                     	;# 
  3032  0314                     	;# 
  3033  0314                     	;# 
  3034  0315                     	;# 
  3035  0316                     	;# 
  3036  0317                     	;# 
  3037  0318                     	;# 
  3038  0318                     	;# 
  3039  0319                     	;# 
  3040  031A                     	;# 
  3041  031B                     	;# 
  3042  031C                     	;# 
  3043  031C                     	;# 
  3044  031D                     	;# 
  3045  031E                     	;# 
  3046  031F                     	;# 
  3047  038C                     	;# 
  3048  038C                     	;# 
  3049  038D                     	;# 
  3050  038E                     	;# 
  3051  0390                     	;# 
  3052  0390                     	;# 
  3053  0391                     	;# 
  3054  0392                     	;# 
  3055  040C                     	;# 
  3056  040D                     	;# 
  3057  040E                     	;# 
  3058  040F                     	;# 
  3059  0410                     	;# 
  3060  0411                     	;# 
  3061  0416                     	;# 
  3062  0416                     	;# 
  3063  0417                     	;# 
  3064  0418                     	;# 
  3065  0418                     	;# 
  3066  0419                     	;# 
  3067  041A                     	;# 
  3068  041A                     	;# 
  3069  041B                     	;# 
  3070  041C                     	;# 
  3071  041C                     	;# 
  3072  041D                     	;# 
  3073  041E                     	;# 
  3074  041F                     	;# 
  3075  048C                     	;# 
  3076  048C                     	;# 
  3077  048D                     	;# 
  3078  048E                     	;# 
  3079  048F                     	;# 
  3080  048F                     	;# 
  3081  0490                     	;# 
  3082  0491                     	;# 
  3083  0492                     	;# 
  3084  0492                     	;# 
  3085  0493                     	;# 
  3086  0494                     	;# 
  3087  0495                     	;# 
  3088  0495                     	;# 
  3089  0496                     	;# 
  3090  0497                     	;# 
  3091  0498                     	;# 
  3092  0499                     	;# 
  3093  049A                     	;# 
  3094  049B                     	;# 
  3095  049C                     	;# 
  3096  049D                     	;# 
  3097  050C                     	;# 
  3098  050C                     	;# 
  3099  050D                     	;# 
  3100  050E                     	;# 
  3101  050F                     	;# 
  3102  050F                     	;# 
  3103  0510                     	;# 
  3104  0511                     	;# 
  3105  0512                     	;# 
  3106  0512                     	;# 
  3107  0513                     	;# 
  3108  0514                     	;# 
  3109  0515                     	;# 
  3110  0515                     	;# 
  3111  0516                     	;# 
  3112  0517                     	;# 
  3113  0518                     	;# 
  3114  0519                     	;# 
  3115  051A                     	;# 
  3116  051B                     	;# 
  3117  051C                     	;# 
  3118  051D                     	;# 
  3119  058C                     	;# 
  3120  058C                     	;# 
  3121  058D                     	;# 
  3122  058E                     	;# 
  3123  058F                     	;# 
  3124  058F                     	;# 
  3125  0590                     	;# 
  3126  0591                     	;# 
  3127  0592                     	;# 
  3128  0593                     	;# 
  3129  060C                     	;# 
  3130  060D                     	;# 
  3131  060E                     	;# 
  3132  060F                     	;# 
  3133  0610                     	;# 
  3134  0611                     	;# 
  3135  0612                     	;# 
  3136  0613                     	;# 
  3137  0614                     	;# 
  3138  0616                     	;# 
  3139  0617                     	;# 
  3140  0618                     	;# 
  3141  0619                     	;# 
  3142  061A                     	;# 
  3143  061B                     	;# 
  3144  061C                     	;# 
  3145  061D                     	;# 
  3146  061E                     	;# 
  3147  068C                     	;# 
  3148  068D                     	;# 
  3149  068E                     	;# 
  3150  068F                     	;# 
  3151  0690                     	;# 
  3152  0691                     	;# 
  3153  0692                     	;# 
  3154  0693                     	;# 
  3155  0694                     	;# 
  3156  070C                     	;# 
  3157  070D                     	;# 
  3158  070E                     	;# 
  3159  070F                     	;# 
  3160  0710                     	;# 
  3161  0711                     	;# 
  3162  0712                     	;# 
  3163  0713                     	;# 
  3164  0714                     	;# 
  3165  0716                     	;# 
  3166  0717                     	;# 
  3167  0718                     	;# 
  3168  0719                     	;# 
  3169  071A                     	;# 
  3170  071B                     	;# 
  3171  071C                     	;# 
  3172  071D                     	;# 
  3173  071E                     	;# 
  3174  0796                     	;# 
  3175  0797                     	;# 
  3176  0798                     	;# 
  3177  0799                     	;# 
  3178  079A                     	;# 
  3179  079B                     	;# 
  3180  080C                     	;# 
  3181  080D                     	;# 
  3182  080E                     	;# 
  3183  080F                     	;# 
  3184  0810                     	;# 
  3185  0811                     	;# 
  3186  0812                     	;# 
  3187  0813                     	;# 
  3188  0814                     	;# 
  3189  081A                     	;# 
  3190  081B                     	;# 
  3191  081C                     	;# 
  3192  081D                     	;# 
  3193  081E                     	;# 
  3194  081F                     	;# 
  3195  088C                     	;# 
  3196  088D                     	;# 
  3197  088E                     	;# 
  3198  088F                     	;# 
  3199  0890                     	;# 
  3200  0891                     	;# 
  3201  0892                     	;# 
  3202  0893                     	;# 
  3203  0895                     	;# 
  3204  0896                     	;# 
  3205  0897                     	;# 
  3206  0898                     	;# 
  3207  0899                     	;# 
  3208  089A                     	;# 
  3209  089B                     	;# 
  3210  090C                     	;# 
  3211  090E                     	;# 
  3212  090F                     	;# 
  3213  091F                     	;# 
  3214  091F                     	;# 
  3215  098F                     	;# 
  3216  098F                     	;# 
  3217  0990                     	;# 
  3218  0991                     	;# 
  3219  0992                     	;# 
  3220  0993                     	;# 
  3221  0994                     	;# 
  3222  0995                     	;# 
  3223  0996                     	;# 
  3224  0997                     	;# 
  3225  0E0F                     	;# 
  3226  0E10                     	;# 
  3227  0E11                     	;# 
  3228  0E12                     	;# 
  3229  0E13                     	;# 
  3230  0E14                     	;# 
  3231  0E15                     	;# 
  3232  0E16                     	;# 
  3233  0E17                     	;# 
  3234  0E18                     	;# 
  3235  0E19                     	;# 
  3236  0E1A                     	;# 
  3237  0E1B                     	;# 
  3238  0E1C                     	;# 
  3239  0E1D                     	;# 
  3240  0E1E                     	;# 
  3241  0E1F                     	;# 
  3242  0E20                     	;# 
  3243  0E21                     	;# 
  3244  0E22                     	;# 
  3245  0E23                     	;# 
  3246  0E24                     	;# 
  3247  0E25                     	;# 
  3248  0E26                     	;# 
  3249  0E27                     	;# 
  3250  0E28                     	;# 
  3251  0E29                     	;# 
  3252  0E2A                     	;# 
  3253  0E2B                     	;# 
  3254  0E2C                     	;# 
  3255  0E2D                     	;# 
  3256  0E2E                     	;# 
  3257  0E2F                     	;# 
  3258  0E30                     	;# 
  3259  0E31                     	;# 
  3260  0E32                     	;# 
  3261  0E33                     	;# 
  3262  0E34                     	;# 
  3263  0E35                     	;# 
  3264  0E36                     	;# 
  3265  0E37                     	;# 
  3266  0E8F                     	;# 
  3267  0E90                     	;# 
  3268  0E91                     	;# 
  3269  0E92                     	;# 
  3270  0E93                     	;# 
  3271  0E94                     	;# 
  3272  0E95                     	;# 
  3273  0E96                     	;# 
  3274  0E97                     	;# 
  3275  0E9C                     	;# 
  3276  0E9D                     	;# 
  3277  0E9E                     	;# 
  3278  0EA1                     	;# 
  3279  0EA2                     	;# 
  3280  0EA3                     	;# 
  3281  0EA4                     	;# 
  3282  0EA5                     	;# 
  3283  0EA9                     	;# 
  3284  0EAA                     	;# 
  3285  0EAB                     	;# 
  3286  0EAC                     	;# 
  3287  0EB1                     	;# 
  3288  0EB2                     	;# 
  3289  0EB3                     	;# 
  3290  0EB8                     	;# 
  3291  0EB9                     	;# 
  3292  0EBA                     	;# 
  3293  0EBB                     	;# 
  3294  0EBC                     	;# 
  3295  0EBD                     	;# 
  3296  0EBE                     	;# 
  3297  0EC3                     	;# 
  3298  0EC5                     	;# 
  3299  0EC6                     	;# 
  3300  0EC7                     	;# 
  3301  0EC8                     	;# 
  3302  0EC9                     	;# 
  3303  0ECA                     	;# 
  3304  0ECB                     	;# 
  3305  0ECC                     	;# 
  3306  0F10                     	;# 
  3307  0F11                     	;# 
  3308  0F12                     	;# 
  3309  0F13                     	;# 
  3310  0F14                     	;# 
  3311  0F15                     	;# 
  3312  0F16                     	;# 
  3313  0F17                     	;# 
  3314  0F18                     	;# 
  3315  0F19                     	;# 
  3316  0F1A                     	;# 
  3317  0F1B                     	;# 
  3318  0F1C                     	;# 
  3319  0F1D                     	;# 
  3320  0F1E                     	;# 
  3321  0F1F                     	;# 
  3322  0F20                     	;# 
  3323  0F21                     	;# 
  3324  0F22                     	;# 
  3325  0F23                     	;# 
  3326  0F24                     	;# 
  3327  0F25                     	;# 
  3328  0F26                     	;# 
  3329  0F27                     	;# 
  3330  0F28                     	;# 
  3331  0F29                     	;# 
  3332  0F2A                     	;# 
  3333  0F2B                     	;# 
  3334  0F2C                     	;# 
  3335  0F2D                     	;# 
  3336  0F2E                     	;# 
  3337  0F2F                     	;# 
  3338  0F30                     	;# 
  3339  0F31                     	;# 
  3340  0F32                     	;# 
  3341  0F38                     	;# 
  3342  0F39                     	;# 
  3343  0F3A                     	;# 
  3344  0F3B                     	;# 
  3345  0F3C                     	;# 
  3346  0F3D                     	;# 
  3347  0F3E                     	;# 
  3348  0F3F                     	;# 
  3349  0F40                     	;# 
  3350  0F41                     	;# 
  3351  0F43                     	;# 
  3352  0F44                     	;# 
  3353  0F45                     	;# 
  3354  0F46                     	;# 
  3355  0F47                     	;# 
  3356  0F48                     	;# 
  3357  0F49                     	;# 
  3358  0F4A                     	;# 
  3359  0F4B                     	;# 
  3360  0F4C                     	;# 
  3361  0F4E                     	;# 
  3362  0F4F                     	;# 
  3363  0F50                     	;# 
  3364  0F51                     	;# 
  3365  0F52                     	;# 
  3366  0F53                     	;# 
  3367  0F54                     	;# 
  3368  0F55                     	;# 
  3369  0F56                     	;# 
  3370  0F57                     	;# 
  3371  0F59                     	;# 
  3372  0F5A                     	;# 
  3373  0F5B                     	;# 
  3374  0F5C                     	;# 
  3375  0F5D                     	;# 
  3376  0F61                     	;# 
  3377  0F62                     	;# 
  3378  0F64                     	;# 
  3379  0F65                     	;# 
  3380  0F66                     	;# 
  3381  0F67                     	;# 
  3382  0F68                     	;# 
  3383  0F69                     	;# 
  3384  0F6A                     	;# 
  3385  0F6B                     	;# 
  3386  0F6C                     	;# 
  3387  0F6D                     	;# 
  3388  0FE4                     	;# 
  3389  0FE5                     	;# 
  3390  0FE6                     	;# 
  3391  0FE7                     	;# 
  3392  0FE8                     	;# 
  3393  0FE9                     	;# 
  3394  0FEA                     	;# 
  3395  0FEB                     	;# 
  3396  0FED                     	;# 
  3397  0FEE                     	;# 
  3398  0FEF                     	;# 
  3399  0000                     	;# 
  3400  0001                     	;# 
  3401  0002                     	;# 
  3402  0003                     	;# 
  3403  0004                     	;# 
  3404  0005                     	;# 
  3405  0006                     	;# 
  3406  0007                     	;# 
  3407  0008                     	;# 
  3408  0009                     	;# 
  3409  000A                     	;# 
  3410  000B                     	;# 
  3411  000C                     	;# 
  3412  000D                     	;# 
  3413  000E                     	;# 
  3414  000F                     	;# 
  3415  0010                     	;# 
  3416  0011                     	;# 
  3417  0012                     	;# 
  3418  0013                     	;# 
  3419  0014                     	;# 
  3420  0015                     	;# 
  3421  0016                     	;# 
  3422  0017                     	;# 
  3423  0018                     	;# 
  3424  0019                     	;# 
  3425  001A                     	;# 
  3426  001C                     	;# 
  3427  001C                     	;# 
  3428  001D                     	;# 
  3429  001D                     	;# 
  3430  001E                     	;# 
  3431  001F                     	;# 
  3432  008C                     	;# 
  3433  008C                     	;# 
  3434  008D                     	;# 
  3435  008E                     	;# 
  3436  008E                     	;# 
  3437  008F                     	;# 
  3438  0090                     	;# 
  3439  0090                     	;# 
  3440  0091                     	;# 
  3441  0093                     	;# 
  3442  0094                     	;# 
  3443  0095                     	;# 
  3444  0096                     	;# 
  3445  0097                     	;# 
  3446  0098                     	;# 
  3447  0099                     	;# 
  3448  009A                     	;# 
  3449  009B                     	;# 
  3450  009C                     	;# 
  3451  009D                     	;# 
  3452  009E                     	;# 
  3453  010C                     	;# 
  3454  010D                     	;# 
  3455  010E                     	;# 
  3456  010E                     	;# 
  3457  010F                     	;# 
  3458  0110                     	;# 
  3459  0110                     	;# 
  3460  0111                     	;# 
  3461  0112                     	;# 
  3462  0112                     	;# 
  3463  0113                     	;# 
  3464  0114                     	;# 
  3465  0114                     	;# 
  3466  0115                     	;# 
  3467  0116                     	;# 
  3468  0116                     	;# 
  3469  0117                     	;# 
  3470  0119                     	;# 
  3471  0119                     	;# 
  3472  0119                     	;# 
  3473  011A                     	;# 
  3474  011A                     	;# 
  3475  011A                     	;# 
  3476  011B                     	;# 
  3477  011B                     	;# 
  3478  011B                     	;# 
  3479  011B                     	;# 
  3480  011B                     	;# 
  3481  011C                     	;# 
  3482  011C                     	;# 
  3483  011C                     	;# 
  3484  011D                     	;# 
  3485  011D                     	;# 
  3486  011D                     	;# 
  3487  011E                     	;# 
  3488  011E                     	;# 
  3489  011E                     	;# 
  3490  011F                     	;# 
  3491  011F                     	;# 
  3492  011F                     	;# 
  3493  011F                     	;# 
  3494  011F                     	;# 
  3495  018C                     	;# 
  3496  018D                     	;# 
  3497  018E                     	;# 
  3498  018F                     	;# 
  3499  0190                     	;# 
  3500  0191                     	;# 
  3501  0192                     	;# 
  3502  0196                     	;# 
  3503  0197                     	;# 
  3504  0198                     	;# 
  3505  0199                     	;# 
  3506  019A                     	;# 
  3507  019B                     	;# 
  3508  019C                     	;# 
  3509  020C                     	;# 
  3510  020C                     	;# 
  3511  020D                     	;# 
  3512  020E                     	;# 
  3513  020F                     	;# 
  3514  020F                     	;# 
  3515  0210                     	;# 
  3516  0210                     	;# 
  3517  0211                     	;# 
  3518  0211                     	;# 
  3519  0212                     	;# 
  3520  0212                     	;# 
  3521  0213                     	;# 
  3522  0214                     	;# 
  3523  0215                     	;# 
  3524  0215                     	;# 
  3525  0216                     	;# 
  3526  0216                     	;# 
  3527  0217                     	;# 
  3528  0217                     	;# 
  3529  0218                     	;# 
  3530  0218                     	;# 
  3531  0219                     	;# 
  3532  021A                     	;# 
  3533  021B                     	;# 
  3534  021B                     	;# 
  3535  021C                     	;# 
  3536  021C                     	;# 
  3537  021D                     	;# 
  3538  021D                     	;# 
  3539  021E                     	;# 
  3540  021F                     	;# 
  3541  028C                     	;# 
  3542  028C                     	;# 
  3543  028D                     	;# 
  3544  028D                     	;# 
  3545  028E                     	;# 
  3546  028F                     	;# 
  3547  0290                     	;# 
  3548  0290                     	;# 
  3549  0291                     	;# 
  3550  0292                     	;# 
  3551  0292                     	;# 
  3552  0293                     	;# 
  3553  0293                     	;# 
  3554  0294                     	;# 
  3555  0295                     	;# 
  3556  0296                     	;# 
  3557  0296                     	;# 
  3558  0297                     	;# 
  3559  0298                     	;# 
  3560  0298                     	;# 
  3561  0299                     	;# 
  3562  0299                     	;# 
  3563  029A                     	;# 
  3564  029B                     	;# 
  3565  029C                     	;# 
  3566  029C                     	;# 
  3567  029D                     	;# 
  3568  030C                     	;# 
  3569  030C                     	;# 
  3570  030D                     	;# 
  3571  030E                     	;# 
  3572  030F                     	;# 
  3573  0310                     	;# 
  3574  0310                     	;# 
  3575  0311                     	;# 
  3576  0312                     	;# 
  3577  0313                     	;# 
  3578  0314                     	;# 
  3579  0314                     	;# 
  3580  0315                     	;# 
  3581  0316                     	;# 
  3582  0317                     	;# 
  3583  0318                     	;# 
  3584  0318                     	;# 
  3585  0319                     	;# 
  3586  031A                     	;# 
  3587  031B                     	;# 
  3588  031C                     	;# 
  3589  031C                     	;# 
  3590  031D                     	;# 
  3591  031E                     	;# 
  3592  031F                     	;# 
  3593  038C                     	;# 
  3594  038C                     	;# 
  3595  038D                     	;# 
  3596  038E                     	;# 
  3597  0390                     	;# 
  3598  0390                     	;# 
  3599  0391                     	;# 
  3600  0392                     	;# 
  3601  040C                     	;# 
  3602  040D                     	;# 
  3603  040E                     	;# 
  3604  040F                     	;# 
  3605  0410                     	;# 
  3606  0411                     	;# 
  3607  0416                     	;# 
  3608  0416                     	;# 
  3609  0417                     	;# 
  3610  0418                     	;# 
  3611  0418                     	;# 
  3612  0419                     	;# 
  3613  041A                     	;# 
  3614  041A                     	;# 
  3615  041B                     	;# 
  3616  041C                     	;# 
  3617  041C                     	;# 
  3618  041D                     	;# 
  3619  041E                     	;# 
  3620  041F                     	;# 
  3621  048C                     	;# 
  3622  048C                     	;# 
  3623  048D                     	;# 
  3624  048E                     	;# 
  3625  048F                     	;# 
  3626  048F                     	;# 
  3627  0490                     	;# 
  3628  0491                     	;# 
  3629  0492                     	;# 
  3630  0492                     	;# 
  3631  0493                     	;# 
  3632  0494                     	;# 
  3633  0495                     	;# 
  3634  0495                     	;# 
  3635  0496                     	;# 
  3636  0497                     	;# 
  3637  0498                     	;# 
  3638  0499                     	;# 
  3639  049A                     	;# 
  3640  049B                     	;# 
  3641  049C                     	;# 
  3642  049D                     	;# 
  3643  050C                     	;# 
  3644  050C                     	;# 
  3645  050D                     	;# 
  3646  050E                     	;# 
  3647  050F                     	;# 
  3648  050F                     	;# 
  3649  0510                     	;# 
  3650  0511                     	;# 
  3651  0512                     	;# 
  3652  0512                     	;# 
  3653  0513                     	;# 
  3654  0514                     	;# 
  3655  0515                     	;# 
  3656  0515                     	;# 
  3657  0516                     	;# 
  3658  0517                     	;# 
  3659  0518                     	;# 
  3660  0519                     	;# 
  3661  051A                     	;# 
  3662  051B                     	;# 
  3663  051C                     	;# 
  3664  051D                     	;# 
  3665  058C                     	;# 
  3666  058C                     	;# 
  3667  058D                     	;# 
  3668  058E                     	;# 
  3669  058F                     	;# 
  3670  058F                     	;# 
  3671  0590                     	;# 
  3672  0591                     	;# 
  3673  0592                     	;# 
  3674  0593                     	;# 
  3675  060C                     	;# 
  3676  060D                     	;# 
  3677  060E                     	;# 
  3678  060F                     	;# 
  3679  0610                     	;# 
  3680  0611                     	;# 
  3681  0612                     	;# 
  3682  0613                     	;# 
  3683  0614                     	;# 
  3684  0616                     	;# 
  3685  0617                     	;# 
  3686  0618                     	;# 
  3687  0619                     	;# 
  3688  061A                     	;# 
  3689  061B                     	;# 
  3690  061C                     	;# 
  3691  061D                     	;# 
  3692  061E                     	;# 
  3693  068C                     	;# 
  3694  068D                     	;# 
  3695  068E                     	;# 
  3696  068F                     	;# 
  3697  0690                     	;# 
  3698  0691                     	;# 
  3699  0692                     	;# 
  3700  0693                     	;# 
  3701  0694                     	;# 
  3702  070C                     	;# 
  3703  070D                     	;# 
  3704  070E                     	;# 
  3705  070F                     	;# 
  3706  0710                     	;# 
  3707  0711                     	;# 
  3708  0712                     	;# 
  3709  0713                     	;# 
  3710  0714                     	;# 
  3711  0716                     	;# 
  3712  0717                     	;# 
  3713  0718                     	;# 
  3714  0719                     	;# 
  3715  071A                     	;# 
  3716  071B                     	;# 
  3717  071C                     	;# 
  3718  071D                     	;# 
  3719  071E                     	;# 
  3720  0796                     	;# 
  3721  0797                     	;# 
  3722  0798                     	;# 
  3723  0799                     	;# 
  3724  079A                     	;# 
  3725  079B                     	;# 
  3726  080C                     	;# 
  3727  080D                     	;# 
  3728  080E                     	;# 
  3729  080F                     	;# 
  3730  0810                     	;# 
  3731  0811                     	;# 
  3732  0812                     	;# 
  3733  0813                     	;# 
  3734  0814                     	;# 
  3735  081A                     	;# 
  3736  081B                     	;# 
  3737  081C                     	;# 
  3738  081D                     	;# 
  3739  081E                     	;# 
  3740  081F                     	;# 
  3741  088C                     	;# 
  3742  088D                     	;# 
  3743  088E                     	;# 
  3744  088F                     	;# 
  3745  0890                     	;# 
  3746  0891                     	;# 
  3747  0892                     	;# 
  3748  0893                     	;# 
  3749  0895                     	;# 
  3750  0896                     	;# 
  3751  0897                     	;# 
  3752  0898                     	;# 
  3753  0899                     	;# 
  3754  089A                     	;# 
  3755  089B                     	;# 
  3756  090C                     	;# 
  3757  090E                     	;# 
  3758  090F                     	;# 
  3759  091F                     	;# 
  3760  091F                     	;# 
  3761  098F                     	;# 
  3762  098F                     	;# 
  3763  0990                     	;# 
  3764  0991                     	;# 
  3765  0992                     	;# 
  3766  0993                     	;# 
  3767  0994                     	;# 
  3768  0995                     	;# 
  3769  0996                     	;# 
  3770  0997                     	;# 
  3771  0E0F                     	;# 
  3772  0E10                     	;# 
  3773  0E11                     	;# 
  3774  0E12                     	;# 
  3775  0E13                     	;# 
  3776  0E14                     	;# 
  3777  0E15                     	;# 
  3778  0E16                     	;# 
  3779  0E17                     	;# 
  3780  0E18                     	;# 
  3781  0E19                     	;# 
  3782  0E1A                     	;# 
  3783  0E1B                     	;# 
  3784  0E1C                     	;# 
  3785  0E1D                     	;# 
  3786  0E1E                     	;# 
  3787  0E1F                     	;# 
  3788  0E20                     	;# 
  3789  0E21                     	;# 
  3790  0E22                     	;# 
  3791  0E23                     	;# 
  3792  0E24                     	;# 
  3793  0E25                     	;# 
  3794  0E26                     	;# 
  3795  0E27                     	;# 
  3796  0E28                     	;# 
  3797  0E29                     	;# 
  3798  0E2A                     	;# 
  3799  0E2B                     	;# 
  3800  0E2C                     	;# 
  3801  0E2D                     	;# 
  3802  0E2E                     	;# 
  3803  0E2F                     	;# 
  3804  0E30                     	;# 
  3805  0E31                     	;# 
  3806  0E32                     	;# 
  3807  0E33                     	;# 
  3808  0E34                     	;# 
  3809  0E35                     	;# 
  3810  0E36                     	;# 
  3811  0E37                     	;# 
  3812  0E8F                     	;# 
  3813  0E90                     	;# 
  3814  0E91                     	;# 
  3815  0E92                     	;# 
  3816  0E93                     	;# 
  3817  0E94                     	;# 
  3818  0E95                     	;# 
  3819  0E96                     	;# 
  3820  0E97                     	;# 
  3821  0E9C                     	;# 
  3822  0E9D                     	;# 
  3823  0E9E                     	;# 
  3824  0EA1                     	;# 
  3825  0EA2                     	;# 
  3826  0EA3                     	;# 
  3827  0EA4                     	;# 
  3828  0EA5                     	;# 
  3829  0EA9                     	;# 
  3830  0EAA                     	;# 
  3831  0EAB                     	;# 
  3832  0EAC                     	;# 
  3833  0EB1                     	;# 
  3834  0EB2                     	;# 
  3835  0EB3                     	;# 
  3836  0EB8                     	;# 
  3837  0EB9                     	;# 
  3838  0EBA                     	;# 
  3839  0EBB                     	;# 
  3840  0EBC                     	;# 
  3841  0EBD                     	;# 
  3842  0EBE                     	;# 
  3843  0EC3                     	;# 
  3844  0EC5                     	;# 
  3845  0EC6                     	;# 
  3846  0EC7                     	;# 
  3847  0EC8                     	;# 
  3848  0EC9                     	;# 
  3849  0ECA                     	;# 
  3850  0ECB                     	;# 
  3851  0ECC                     	;# 
  3852  0F10                     	;# 
  3853  0F11                     	;# 
  3854  0F12                     	;# 
  3855  0F13                     	;# 
  3856  0F14                     	;# 
  3857  0F15                     	;# 
  3858  0F16                     	;# 
  3859  0F17                     	;# 
  3860  0F18                     	;# 
  3861  0F19                     	;# 
  3862  0F1A                     	;# 
  3863  0F1B                     	;# 
  3864  0F1C                     	;# 
  3865  0F1D                     	;# 
  3866  0F1E                     	;# 
  3867  0F1F                     	;# 
  3868  0F20                     	;# 
  3869  0F21                     	;# 
  3870  0F22                     	;# 
  3871  0F23                     	;# 
  3872  0F24                     	;# 
  3873  0F25                     	;# 
  3874  0F26                     	;# 
  3875  0F27                     	;# 
  3876  0F28                     	;# 
  3877  0F29                     	;# 
  3878  0F2A                     	;# 
  3879  0F2B                     	;# 
  3880  0F2C                     	;# 
  3881  0F2D                     	;# 
  3882  0F2E                     	;# 
  3883  0F2F                     	;# 
  3884  0F30                     	;# 
  3885  0F31                     	;# 
  3886  0F32                     	;# 
  3887  0F38                     	;# 
  3888  0F39                     	;# 
  3889  0F3A                     	;# 
  3890  0F3B                     	;# 
  3891  0F3C                     	;# 
  3892  0F3D                     	;# 
  3893  0F3E                     	;# 
  3894  0F3F                     	;# 
  3895  0F40                     	;# 
  3896  0F41                     	;# 
  3897  0F43                     	;# 
  3898  0F44                     	;# 
  3899  0F45                     	;# 
  3900  0F46                     	;# 
  3901  0F47                     	;# 
  3902  0F48                     	;# 
  3903  0F49                     	;# 
  3904  0F4A                     	;# 
  3905  0F4B                     	;# 
  3906  0F4C                     	;# 
  3907  0F4E                     	;# 
  3908  0F4F                     	;# 
  3909  0F50                     	;# 
  3910  0F51                     	;# 
  3911  0F52                     	;# 
  3912  0F53                     	;# 
  3913  0F54                     	;# 
  3914  0F55                     	;# 
  3915  0F56                     	;# 
  3916  0F57                     	;# 
  3917  0F59                     	;# 
  3918  0F5A                     	;# 
  3919  0F5B                     	;# 
  3920  0F5C                     	;# 
  3921  0F5D                     	;# 
  3922  0F61                     	;# 
  3923  0F62                     	;# 
  3924  0F64                     	;# 
  3925  0F65                     	;# 
  3926  0F66                     	;# 
  3927  0F67                     	;# 
  3928  0F68                     	;# 
  3929  0F69                     	;# 
  3930  0F6A                     	;# 
  3931  0F6B                     	;# 
  3932  0F6C                     	;# 
  3933  0F6D                     	;# 
  3934  0FE4                     	;# 
  3935  0FE5                     	;# 
  3936  0FE6                     	;# 
  3937  0FE7                     	;# 
  3938  0FE8                     	;# 
  3939  0FE9                     	;# 
  3940  0FEA                     	;# 
  3941  0FEB                     	;# 
  3942  0FED                     	;# 
  3943  0FEE                     	;# 
  3944  0FEF                     	;# 
  3945  0000                     	;# 
  3946  0001                     	;# 
  3947  0002                     	;# 
  3948  0003                     	;# 
  3949  0004                     	;# 
  3950  0005                     	;# 
  3951  0006                     	;# 
  3952  0007                     	;# 
  3953  0008                     	;# 
  3954  0009                     	;# 
  3955  000A                     	;# 
  3956  000B                     	;# 
  3957  000C                     	;# 
  3958  000D                     	;# 
  3959  000E                     	;# 
  3960  000F                     	;# 
  3961  0010                     	;# 
  3962  0011                     	;# 
  3963  0012                     	;# 
  3964  0013                     	;# 
  3965  0014                     	;# 
  3966  0015                     	;# 
  3967  0016                     	;# 
  3968  0017                     	;# 
  3969  0018                     	;# 
  3970  0019                     	;# 
  3971  001A                     	;# 
  3972  001C                     	;# 
  3973  001C                     	;# 
  3974  001D                     	;# 
  3975  001D                     	;# 
  3976  001E                     	;# 
  3977  001F                     	;# 
  3978  008C                     	;# 
  3979  008C                     	;# 
  3980  008D                     	;# 
  3981  008E                     	;# 
  3982  008E                     	;# 
  3983  008F                     	;# 
  3984  0090                     	;# 
  3985  0090                     	;# 
  3986  0091                     	;# 
  3987  0093                     	;# 
  3988  0094                     	;# 
  3989  0095                     	;# 
  3990  0096                     	;# 
  3991  0097                     	;# 
  3992  0098                     	;# 
  3993  0099                     	;# 
  3994  009A                     	;# 
  3995  009B                     	;# 
  3996  009C                     	;# 
  3997  009D                     	;# 
  3998  009E                     	;# 
  3999  010C                     	;# 
  4000  010D                     	;# 
  4001  010E                     	;# 
  4002  010E                     	;# 
  4003  010F                     	;# 
  4004  0110                     	;# 
  4005  0110                     	;# 
  4006  0111                     	;# 
  4007  0112                     	;# 
  4008  0112                     	;# 
  4009  0113                     	;# 
  4010  0114                     	;# 
  4011  0114                     	;# 
  4012  0115                     	;# 
  4013  0116                     	;# 
  4014  0116                     	;# 
  4015  0117                     	;# 
  4016  0119                     	;# 
  4017  0119                     	;# 
  4018  0119                     	;# 
  4019  011A                     	;# 
  4020  011A                     	;# 
  4021  011A                     	;# 
  4022  011B                     	;# 
  4023  011B                     	;# 
  4024  011B                     	;# 
  4025  011B                     	;# 
  4026  011B                     	;# 
  4027  011C                     	;# 
  4028  011C                     	;# 
  4029  011C                     	;# 
  4030  011D                     	;# 
  4031  011D                     	;# 
  4032  011D                     	;# 
  4033  011E                     	;# 
  4034  011E                     	;# 
  4035  011E                     	;# 
  4036  011F                     	;# 
  4037  011F                     	;# 
  4038  011F                     	;# 
  4039  011F                     	;# 
  4040  011F                     	;# 
  4041  018C                     	;# 
  4042  018D                     	;# 
  4043  018E                     	;# 
  4044  018F                     	;# 
  4045  0190                     	;# 
  4046  0191                     	;# 
  4047  0192                     	;# 
  4048  0196                     	;# 
  4049  0197                     	;# 
  4050  0198                     	;# 
  4051  0199                     	;# 
  4052  019A                     	;# 
  4053  019B                     	;# 
  4054  019C                     	;# 
  4055  020C                     	;# 
  4056  020C                     	;# 
  4057  020D                     	;# 
  4058  020E                     	;# 
  4059  020F                     	;# 
  4060  020F                     	;# 
  4061  0210                     	;# 
  4062  0210                     	;# 
  4063  0211                     	;# 
  4064  0211                     	;# 
  4065  0212                     	;# 
  4066  0212                     	;# 
  4067  0213                     	;# 
  4068  0214                     	;# 
  4069  0215                     	;# 
  4070  0215                     	;# 
  4071  0216                     	;# 
  4072  0216                     	;# 
  4073  0217                     	;# 
  4074  0217                     	;# 
  4075  0218                     	;# 
  4076  0218                     	;# 
  4077  0219                     	;# 
  4078  021A                     	;# 
  4079  021B                     	;# 
  4080  021B                     	;# 
  4081  021C                     	;# 
  4082  021C                     	;# 
  4083  021D                     	;# 
  4084  021D                     	;# 
  4085  021E                     	;# 
  4086  021F                     	;# 
  4087  028C                     	;# 
  4088  028C                     	;# 
  4089  028D                     	;# 
  4090  028D                     	;# 
  4091  028E                     	;# 
  4092  028F                     	;# 
  4093  0290                     	;# 
  4094  0290                     	;# 
  4095  0291                     	;# 
  4096  0292                     	;# 
  4097  0292                     	;# 
  4098  0293                     	;# 
  4099  0293                     	;# 
  4100  0294                     	;# 
  4101  0295                     	;# 
  4102  0296                     	;# 
  4103  0296                     	;# 
  4104  0297                     	;# 
  4105  0298                     	;# 
  4106  0298                     	;# 
  4107  0299                     	;# 
  4108  0299                     	;# 
  4109  029A                     	;# 
  4110  029B                     	;# 
  4111  029C                     	;# 
  4112  029C                     	;# 
  4113  029D                     	;# 
  4114  030C                     	;# 
  4115  030C                     	;# 
  4116  030D                     	;# 
  4117  030E                     	;# 
  4118  030F                     	;# 
  4119  0310                     	;# 
  4120  0310                     	;# 
  4121  0311                     	;# 
  4122  0312                     	;# 
  4123  0313                     	;# 
  4124  0314                     	;# 
  4125  0314                     	;# 
  4126  0315                     	;# 
  4127  0316                     	;# 
  4128  0317                     	;# 
  4129  0318                     	;# 
  4130  0318                     	;# 
  4131  0319                     	;# 
  4132  031A                     	;# 
  4133  031B                     	;# 
  4134  031C                     	;# 
  4135  031C                     	;# 
  4136  031D                     	;# 
  4137  031E                     	;# 
  4138  031F                     	;# 
  4139  038C                     	;# 
  4140  038C                     	;# 
  4141  038D                     	;# 
  4142  038E                     	;# 
  4143  0390                     	;# 
  4144  0390                     	;# 
  4145  0391                     	;# 
  4146  0392                     	;# 
  4147  040C                     	;# 
  4148  040D                     	;# 
  4149  040E                     	;# 
  4150  040F                     	;# 
  4151  0410                     	;# 
  4152  0411                     	;# 
  4153  0416                     	;# 
  4154  0416                     	;# 
  4155  0417                     	;# 
  4156  0418                     	;# 
  4157  0418                     	;# 
  4158  0419                     	;# 
  4159  041A                     	;# 
  4160  041A                     	;# 
  4161  041B                     	;# 
  4162  041C                     	;# 
  4163  041C                     	;# 
  4164  041D                     	;# 
  4165  041E                     	;# 
  4166  041F                     	;# 
  4167  048C                     	;# 
  4168  048C                     	;# 
  4169  048D                     	;# 
  4170  048E                     	;# 
  4171  048F                     	;# 
  4172  048F                     	;# 
  4173  0490                     	;# 
  4174  0491                     	;# 
  4175  0492                     	;# 
  4176  0492                     	;# 
  4177  0493                     	;# 
  4178  0494                     	;# 
  4179  0495                     	;# 
  4180  0495                     	;# 
  4181  0496                     	;# 
  4182  0497                     	;# 
  4183  0498                     	;# 
  4184  0499                     	;# 
  4185  049A                     	;# 
  4186  049B                     	;# 
  4187  049C                     	;# 
  4188  049D                     	;# 
  4189  050C                     	;# 
  4190  050C                     	;# 
  4191  050D                     	;# 
  4192  050E                     	;# 
  4193  050F                     	;# 
  4194  050F                     	;# 
  4195  0510                     	;# 
  4196  0511                     	;# 
  4197  0512                     	;# 
  4198  0512                     	;# 
  4199  0513                     	;# 
  4200  0514                     	;# 
  4201  0515                     	;# 
  4202  0515                     	;# 
  4203  0516                     	;# 
  4204  0517                     	;# 
  4205  0518                     	;# 
  4206  0519                     	;# 
  4207  051A                     	;# 
  4208  051B                     	;# 
  4209  051C                     	;# 
  4210  051D                     	;# 
  4211  058C                     	;# 
  4212  058C                     	;# 
  4213  058D                     	;# 
  4214  058E                     	;# 
  4215  058F                     	;# 
  4216  058F                     	;# 
  4217  0590                     	;# 
  4218  0591                     	;# 
  4219  0592                     	;# 
  4220  0593                     	;# 
  4221  060C                     	;# 
  4222  060D                     	;# 
  4223  060E                     	;# 
  4224  060F                     	;# 
  4225  0610                     	;# 
  4226  0611                     	;# 
  4227  0612                     	;# 
  4228  0613                     	;# 
  4229  0614                     	;# 
  4230  0616                     	;# 
  4231  0617                     	;# 
  4232  0618                     	;# 
  4233  0619                     	;# 
  4234  061A                     	;# 
  4235  061B                     	;# 
  4236  061C                     	;# 
  4237  061D                     	;# 
  4238  061E                     	;# 
  4239  068C                     	;# 
  4240  068D                     	;# 
  4241  068E                     	;# 
  4242  068F                     	;# 
  4243  0690                     	;# 
  4244  0691                     	;# 
  4245  0692                     	;# 
  4246  0693                     	;# 
  4247  0694                     	;# 
  4248  070C                     	;# 
  4249  070D                     	;# 
  4250  070E                     	;# 
  4251  070F                     	;# 
  4252  0710                     	;# 
  4253  0711                     	;# 
  4254  0712                     	;# 
  4255  0713                     	;# 
  4256  0714                     	;# 
  4257  0716                     	;# 
  4258  0717                     	;# 
  4259  0718                     	;# 
  4260  0719                     	;# 
  4261  071A                     	;# 
  4262  071B                     	;# 
  4263  071C                     	;# 
  4264  071D                     	;# 
  4265  071E                     	;# 
  4266  0796                     	;# 
  4267  0797                     	;# 
  4268  0798                     	;# 
  4269  0799                     	;# 
  4270  079A                     	;# 
  4271  079B                     	;# 
  4272  080C                     	;# 
  4273  080D                     	;# 
  4274  080E                     	;# 
  4275  080F                     	;# 
  4276  0810                     	;# 
  4277  0811                     	;# 
  4278  0812                     	;# 
  4279  0813                     	;# 
  4280  0814                     	;# 
  4281  081A                     	;# 
  4282  081B                     	;# 
  4283  081C                     	;# 
  4284  081D                     	;# 
  4285  081E                     	;# 
  4286  081F                     	;# 
  4287  088C                     	;# 
  4288  088D                     	;# 
  4289  088E                     	;# 
  4290  088F                     	;# 
  4291  0890                     	;# 
  4292  0891                     	;# 
  4293  0892                     	;# 
  4294  0893                     	;# 
  4295  0895                     	;# 
  4296  0896                     	;# 
  4297  0897                     	;# 
  4298  0898                     	;# 
  4299  0899                     	;# 
  4300  089A                     	;# 
  4301  089B                     	;# 
  4302  090C                     	;# 
  4303  090E                     	;# 
  4304  090F                     	;# 
  4305  091F                     	;# 
  4306  091F                     	;# 
  4307  098F                     	;# 
  4308  098F                     	;# 
  4309  0990                     	;# 
  4310  0991                     	;# 
  4311  0992                     	;# 
  4312  0993                     	;# 
  4313  0994                     	;# 
  4314  0995                     	;# 
  4315  0996                     	;# 
  4316  0997                     	;# 
  4317  0E0F                     	;# 
  4318  0E10                     	;# 
  4319  0E11                     	;# 
  4320  0E12                     	;# 
  4321  0E13                     	;# 
  4322  0E14                     	;# 
  4323  0E15                     	;# 
  4324  0E16                     	;# 
  4325  0E17                     	;# 
  4326  0E18                     	;# 
  4327  0E19                     	;# 
  4328  0E1A                     	;# 
  4329  0E1B                     	;# 
  4330  0E1C                     	;# 
  4331  0E1D                     	;# 
  4332  0E1E                     	;# 
  4333  0E1F                     	;# 
  4334  0E20                     	;# 
  4335  0E21                     	;# 
  4336  0E22                     	;# 
  4337  0E23                     	;# 
  4338  0E24                     	;# 
  4339  0E25                     	;# 
  4340  0E26                     	;# 
  4341  0E27                     	;# 
  4342  0E28                     	;# 
  4343  0E29                     	;# 
  4344  0E2A                     	;# 
  4345  0E2B                     	;# 
  4346  0E2C                     	;# 
  4347  0E2D                     	;# 
  4348  0E2E                     	;# 
  4349  0E2F                     	;# 
  4350  0E30                     	;# 
  4351  0E31                     	;# 
  4352  0E32                     	;# 
  4353  0E33                     	;# 
  4354  0E34                     	;# 
  4355  0E35                     	;# 
  4356  0E36                     	;# 
  4357  0E37                     	;# 
  4358  0E8F                     	;# 
  4359  0E90                     	;# 
  4360  0E91                     	;# 
  4361  0E92                     	;# 
  4362  0E93                     	;# 
  4363  0E94                     	;# 
  4364  0E95                     	;# 
  4365  0E96                     	;# 
  4366  0E97                     	;# 
  4367  0E9C                     	;# 
  4368  0E9D                     	;# 
  4369  0E9E                     	;# 
  4370  0EA1                     	;# 
  4371  0EA2                     	;# 
  4372  0EA3                     	;# 
  4373  0EA4                     	;# 
  4374  0EA5                     	;# 
  4375  0EA9                     	;# 
  4376  0EAA                     	;# 
  4377  0EAB                     	;# 
  4378  0EAC                     	;# 
  4379  0EB1                     	;# 
  4380  0EB2                     	;# 
  4381  0EB3                     	;# 
  4382  0EB8                     	;# 
  4383  0EB9                     	;# 
  4384  0EBA                     	;# 
  4385  0EBB                     	;# 
  4386  0EBC                     	;# 
  4387  0EBD                     	;# 
  4388  0EBE                     	;# 
  4389  0EC3                     	;# 
  4390  0EC5                     	;# 
  4391  0EC6                     	;# 
  4392  0EC7                     	;# 
  4393  0EC8                     	;# 
  4394  0EC9                     	;# 
  4395  0ECA                     	;# 
  4396  0ECB                     	;# 
  4397  0ECC                     	;# 
  4398  0F10                     	;# 
  4399  0F11                     	;# 
  4400  0F12                     	;# 
  4401  0F13                     	;# 
  4402  0F14                     	;# 
  4403  0F15                     	;# 
  4404  0F16                     	;# 
  4405  0F17                     	;# 
  4406  0F18                     	;# 
  4407  0F19                     	;# 
  4408  0F1A                     	;# 
  4409  0F1B                     	;# 
  4410  0F1C                     	;# 
  4411  0F1D                     	;# 
  4412  0F1E                     	;# 
  4413  0F1F                     	;# 
  4414  0F20                     	;# 
  4415  0F21                     	;# 
  4416  0F22                     	;# 
  4417  0F23                     	;# 
  4418  0F24                     	;# 
  4419  0F25                     	;# 
  4420  0F26                     	;# 
  4421  0F27                     	;# 
  4422  0F28                     	;# 
  4423  0F29                     	;# 
  4424  0F2A                     	;# 
  4425  0F2B                     	;# 
  4426  0F2C                     	;# 
  4427  0F2D                     	;# 
  4428  0F2E                     	;# 
  4429  0F2F                     	;# 
  4430  0F30                     	;# 
  4431  0F31                     	;# 
  4432  0F32                     	;# 
  4433  0F38                     	;# 
  4434  0F39                     	;# 
  4435  0F3A                     	;# 
  4436  0F3B                     	;# 
  4437  0F3C                     	;# 
  4438  0F3D                     	;# 
  4439  0F3E                     	;# 
  4440  0F3F                     	;# 
  4441  0F40                     	;# 
  4442  0F41                     	;# 
  4443  0F43                     	;# 
  4444  0F44                     	;# 
  4445  0F45                     	;# 
  4446  0F46                     	;# 
  4447  0F47                     	;# 
  4448  0F48                     	;# 
  4449  0F49                     	;# 
  4450  0F4A                     	;# 
  4451  0F4B                     	;# 
  4452  0F4C                     	;# 
  4453  0F4E                     	;# 
  4454  0F4F                     	;# 
  4455  0F50                     	;# 
  4456  0F51                     	;# 
  4457  0F52                     	;# 
  4458  0F53                     	;# 
  4459  0F54                     	;# 
  4460  0F55                     	;# 
  4461  0F56                     	;# 
  4462  0F57                     	;# 
  4463  0F59                     	;# 
  4464  0F5A                     	;# 
  4465  0F5B                     	;# 
  4466  0F5C                     	;# 
  4467  0F5D                     	;# 
  4468  0F61                     	;# 
  4469  0F62                     	;# 
  4470  0F64                     	;# 
  4471  0F65                     	;# 
  4472  0F66                     	;# 
  4473  0F67                     	;# 
  4474  0F68                     	;# 
  4475  0F69                     	;# 
  4476  0F6A                     	;# 
  4477  0F6B                     	;# 
  4478  0F6C                     	;# 
  4479  0F6D                     	;# 
  4480  0FE4                     	;# 
  4481  0FE5                     	;# 
  4482  0FE6                     	;# 
  4483  0FE7                     	;# 
  4484  0FE8                     	;# 
  4485  0FE9                     	;# 
  4486  0FEA                     	;# 
  4487  0FEB                     	;# 
  4488  0FED                     	;# 
  4489  0FEE                     	;# 
  4490  0FEF                     	;# 
  4491  0000                     	;# 
  4492  0001                     	;# 
  4493  0002                     	;# 
  4494  0003                     	;# 
  4495  0004                     	;# 
  4496  0005                     	;# 
  4497  0006                     	;# 
  4498  0007                     	;# 
  4499  0008                     	;# 
  4500  0009                     	;# 
  4501  000A                     	;# 
  4502  000B                     	;# 
  4503  000C                     	;# 
  4504  000D                     	;# 
  4505  000E                     	;# 
  4506  000F                     	;# 
  4507  0010                     	;# 
  4508  0011                     	;# 
  4509  0012                     	;# 
  4510  0013                     	;# 
  4511  0014                     	;# 
  4512  0015                     	;# 
  4513  0016                     	;# 
  4514  0017                     	;# 
  4515  0018                     	;# 
  4516  0019                     	;# 
  4517  001A                     	;# 
  4518  001C                     	;# 
  4519  001C                     	;# 
  4520  001D                     	;# 
  4521  001D                     	;# 
  4522  001E                     	;# 
  4523  001F                     	;# 
  4524  008C                     	;# 
  4525  008C                     	;# 
  4526  008D                     	;# 
  4527  008E                     	;# 
  4528  008E                     	;# 
  4529  008F                     	;# 
  4530  0090                     	;# 
  4531  0090                     	;# 
  4532  0091                     	;# 
  4533  0093                     	;# 
  4534  0094                     	;# 
  4535  0095                     	;# 
  4536  0096                     	;# 
  4537  0097                     	;# 
  4538  0098                     	;# 
  4539  0099                     	;# 
  4540  009A                     	;# 
  4541  009B                     	;# 
  4542  009C                     	;# 
  4543  009D                     	;# 
  4544  009E                     	;# 
  4545  010C                     	;# 
  4546  010D                     	;# 
  4547  010E                     	;# 
  4548  010E                     	;# 
  4549  010F                     	;# 
  4550  0110                     	;# 
  4551  0110                     	;# 
  4552  0111                     	;# 
  4553  0112                     	;# 
  4554  0112                     	;# 
  4555  0113                     	;# 
  4556  0114                     	;# 
  4557  0114                     	;# 
  4558  0115                     	;# 
  4559  0116                     	;# 
  4560  0116                     	;# 
  4561  0117                     	;# 
  4562  0119                     	;# 
  4563  0119                     	;# 
  4564  0119                     	;# 
  4565  011A                     	;# 
  4566  011A                     	;# 
  4567  011A                     	;# 
  4568  011B                     	;# 
  4569  011B                     	;# 
  4570  011B                     	;# 
  4571  011B                     	;# 
  4572  011B                     	;# 
  4573  011C                     	;# 
  4574  011C                     	;# 
  4575  011C                     	;# 
  4576  011D                     	;# 
  4577  011D                     	;# 
  4578  011D                     	;# 
  4579  011E                     	;# 
  4580  011E                     	;# 
  4581  011E                     	;# 
  4582  011F                     	;# 
  4583  011F                     	;# 
  4584  011F                     	;# 
  4585  011F                     	;# 
  4586  011F                     	;# 
  4587  018C                     	;# 
  4588  018D                     	;# 
  4589  018E                     	;# 
  4590  018F                     	;# 
  4591  0190                     	;# 
  4592  0191                     	;# 
  4593  0192                     	;# 
  4594  0196                     	;# 
  4595  0197                     	;# 
  4596  0198                     	;# 
  4597  0199                     	;# 
  4598  019A                     	;# 
  4599  019B                     	;# 
  4600  019C                     	;# 
  4601  020C                     	;# 
  4602  020C                     	;# 
  4603  020D                     	;# 
  4604  020E                     	;# 
  4605  020F                     	;# 
  4606  020F                     	;# 
  4607  0210                     	;# 
  4608  0210                     	;# 
  4609  0211                     	;# 
  4610  0211                     	;# 
  4611  0212                     	;# 
  4612  0212                     	;# 
  4613  0213                     	;# 
  4614  0214                     	;# 
  4615  0215                     	;# 
  4616  0215                     	;# 
  4617  0216                     	;# 
  4618  0216                     	;# 
  4619  0217                     	;# 
  4620  0217                     	;# 
  4621  0218                     	;# 
  4622  0218                     	;# 
  4623  0219                     	;# 
  4624  021A                     	;# 
  4625  021B                     	;# 
  4626  021B                     	;# 
  4627  021C                     	;# 
  4628  021C                     	;# 
  4629  021D                     	;# 
  4630  021D                     	;# 
  4631  021E                     	;# 
  4632  021F                     	;# 
  4633  028C                     	;# 
  4634  028C                     	;# 
  4635  028D                     	;# 
  4636  028D                     	;# 
  4637  028E                     	;# 
  4638  028F                     	;# 
  4639  0290                     	;# 
  4640  0290                     	;# 
  4641  0291                     	;# 
  4642  0292                     	;# 
  4643  0292                     	;# 
  4644  0293                     	;# 
  4645  0293                     	;# 
  4646  0294                     	;# 
  4647  0295                     	;# 
  4648  0296                     	;# 
  4649  0296                     	;# 
  4650  0297                     	;# 
  4651  0298                     	;# 
  4652  0298                     	;# 
  4653  0299                     	;# 
  4654  0299                     	;# 
  4655  029A                     	;# 
  4656  029B                     	;# 
  4657  029C                     	;# 
  4658  029C                     	;# 
  4659  029D                     	;# 
  4660  030C                     	;# 
  4661  030C                     	;# 
  4662  030D                     	;# 
  4663  030E                     	;# 
  4664  030F                     	;# 
  4665  0310                     	;# 
  4666  0310                     	;# 
  4667  0311                     	;# 
  4668  0312                     	;# 
  4669  0313                     	;# 
  4670  0314                     	;# 
  4671  0314                     	;# 
  4672  0315                     	;# 
  4673  0316                     	;# 
  4674  0317                     	;# 
  4675  0318                     	;# 
  4676  0318                     	;# 
  4677  0319                     	;# 
  4678  031A                     	;# 
  4679  031B                     	;# 
  4680  031C                     	;# 
  4681  031C                     	;# 
  4682  031D                     	;# 
  4683  031E                     	;# 
  4684  031F                     	;# 
  4685  038C                     	;# 
  4686  038C                     	;# 
  4687  038D                     	;# 
  4688  038E                     	;# 
  4689  0390                     	;# 
  4690  0390                     	;# 
  4691  0391                     	;# 
  4692  0392                     	;# 
  4693  040C                     	;# 
  4694  040D                     	;# 
  4695  040E                     	;# 
  4696  040F                     	;# 
  4697  0410                     	;# 
  4698  0411                     	;# 
  4699  0416                     	;# 
  4700  0416                     	;# 
  4701  0417                     	;# 
  4702  0418                     	;# 
  4703  0418                     	;# 
  4704  0419                     	;# 
  4705  041A                     	;# 
  4706  041A                     	;# 
  4707  041B                     	;# 
  4708  041C                     	;# 
  4709  041C                     	;# 
  4710  041D                     	;# 
  4711  041E                     	;# 
  4712  041F                     	;# 
  4713  048C                     	;# 
  4714  048C                     	;# 
  4715  048D                     	;# 
  4716  048E                     	;# 
  4717  048F                     	;# 
  4718  048F                     	;# 
  4719  0490                     	;# 
  4720  0491                     	;# 
  4721  0492                     	;# 
  4722  0492                     	;# 
  4723  0493                     	;# 
  4724  0494                     	;# 
  4725  0495                     	;# 
  4726  0495                     	;# 
  4727  0496                     	;# 
  4728  0497                     	;# 
  4729  0498                     	;# 
  4730  0499                     	;# 
  4731  049A                     	;# 
  4732  049B                     	;# 
  4733  049C                     	;# 
  4734  049D                     	;# 
  4735  050C                     	;# 
  4736  050C                     	;# 
  4737  050D                     	;# 
  4738  050E                     	;# 
  4739  050F                     	;# 
  4740  050F                     	;# 
  4741  0510                     	;# 
  4742  0511                     	;# 
  4743  0512                     	;# 
  4744  0512                     	;# 
  4745  0513                     	;# 
  4746  0514                     	;# 
  4747  0515                     	;# 
  4748  0515                     	;# 
  4749  0516                     	;# 
  4750  0517                     	;# 
  4751  0518                     	;# 
  4752  0519                     	;# 
  4753  051A                     	;# 
  4754  051B                     	;# 
  4755  051C                     	;# 
  4756  051D                     	;# 
  4757  058C                     	;# 
  4758  058C                     	;# 
  4759  058D                     	;# 
  4760  058E                     	;# 
  4761  058F                     	;# 
  4762  058F                     	;# 
  4763  0590                     	;# 
  4764  0591                     	;# 
  4765  0592                     	;# 
  4766  0593                     	;# 
  4767  060C                     	;# 
  4768  060D                     	;# 
  4769  060E                     	;# 
  4770  060F                     	;# 
  4771  0610                     	;# 
  4772  0611                     	;# 
  4773  0612                     	;# 
  4774  0613                     	;# 
  4775  0614                     	;# 
  4776  0616                     	;# 
  4777  0617                     	;# 
  4778  0618                     	;# 
  4779  0619                     	;# 
  4780  061A                     	;# 
  4781  061B                     	;# 
  4782  061C                     	;# 
  4783  061D                     	;# 
  4784  061E                     	;# 
  4785  068C                     	;# 
  4786  068D                     	;# 
  4787  068E                     	;# 
  4788  068F                     	;# 
  4789  0690                     	;# 
  4790  0691                     	;# 
  4791  0692                     	;# 
  4792  0693                     	;# 
  4793  0694                     	;# 
  4794  070C                     	;# 
  4795  070D                     	;# 
  4796  070E                     	;# 
  4797  070F                     	;# 
  4798  0710                     	;# 
  4799  0711                     	;# 
  4800  0712                     	;# 
  4801  0713                     	;# 
  4802  0714                     	;# 
  4803  0716                     	;# 
  4804  0717                     	;# 
  4805  0718                     	;# 
  4806  0719                     	;# 
  4807  071A                     	;# 
  4808  071B                     	;# 
  4809  071C                     	;# 
  4810  071D                     	;# 
  4811  071E                     	;# 
  4812  0796                     	;# 
  4813  0797                     	;# 
  4814  0798                     	;# 
  4815  0799                     	;# 
  4816  079A                     	;# 
  4817  079B                     	;# 
  4818  080C                     	;# 
  4819  080D                     	;# 
  4820  080E                     	;# 
  4821  080F                     	;# 
  4822  0810                     	;# 
  4823  0811                     	;# 
  4824  0812                     	;# 
  4825  0813                     	;# 
  4826  0814                     	;# 
  4827  081A                     	;# 
  4828  081B                     	;# 
  4829  081C                     	;# 
  4830  081D                     	;# 
  4831  081E                     	;# 
  4832  081F                     	;# 
  4833  088C                     	;# 
  4834  088D                     	;# 
  4835  088E                     	;# 
  4836  088F                     	;# 
  4837  0890                     	;# 
  4838  0891                     	;# 
  4839  0892                     	;# 
  4840  0893                     	;# 
  4841  0895                     	;# 
  4842  0896                     	;# 
  4843  0897                     	;# 
  4844  0898                     	;# 
  4845  0899                     	;# 
  4846  089A                     	;# 
  4847  089B                     	;# 
  4848  090C                     	;# 
  4849  090E                     	;# 
  4850  090F                     	;# 
  4851  091F                     	;# 
  4852  091F                     	;# 
  4853  098F                     	;# 
  4854  098F                     	;# 
  4855  0990                     	;# 
  4856  0991                     	;# 
  4857  0992                     	;# 
  4858  0993                     	;# 
  4859  0994                     	;# 
  4860  0995                     	;# 
  4861  0996                     	;# 
  4862  0997                     	;# 
  4863  0E0F                     	;# 
  4864  0E10                     	;# 
  4865  0E11                     	;# 
  4866  0E12                     	;# 
  4867  0E13                     	;# 
  4868  0E14                     	;# 
  4869  0E15                     	;# 
  4870  0E16                     	;# 
  4871  0E17                     	;# 
  4872  0E18                     	;# 
  4873  0E19                     	;# 
  4874  0E1A                     	;# 
  4875  0E1B                     	;# 
  4876  0E1C                     	;# 
  4877  0E1D                     	;# 
  4878  0E1E                     	;# 
  4879  0E1F                     	;# 
  4880  0E20                     	;# 
  4881  0E21                     	;# 
  4882  0E22                     	;# 
  4883  0E23                     	;# 
  4884  0E24                     	;# 
  4885  0E25                     	;# 
  4886  0E26                     	;# 
  4887  0E27                     	;# 
  4888  0E28                     	;# 
  4889  0E29                     	;# 
  4890  0E2A                     	;# 
  4891  0E2B                     	;# 
  4892  0E2C                     	;# 
  4893  0E2D                     	;# 
  4894  0E2E                     	;# 
  4895  0E2F                     	;# 
  4896  0E30                     	;# 
  4897  0E31                     	;# 
  4898  0E32                     	;# 
  4899  0E33                     	;# 
  4900  0E34                     	;# 
  4901  0E35                     	;# 
  4902  0E36                     	;# 
  4903  0E37                     	;# 
  4904  0E8F                     	;# 
  4905  0E90                     	;# 
  4906  0E91                     	;# 
  4907  0E92                     	;# 
  4908  0E93                     	;# 
  4909  0E94                     	;# 
  4910  0E95                     	;# 
  4911  0E96                     	;# 
  4912  0E97                     	;# 
  4913  0E9C                     	;# 
  4914  0E9D                     	;# 
  4915  0E9E                     	;# 
  4916  0EA1                     	;# 
  4917  0EA2                     	;# 
  4918  0EA3                     	;# 
  4919  0EA4                     	;# 
  4920  0EA5                     	;# 
  4921  0EA9                     	;# 
  4922  0EAA                     	;# 
  4923  0EAB                     	;# 
  4924  0EAC                     	;# 
  4925  0EB1                     	;# 
  4926  0EB2                     	;# 
  4927  0EB3                     	;# 
  4928  0EB8                     	;# 
  4929  0EB9                     	;# 
  4930  0EBA                     	;# 
  4931  0EBB                     	;# 
  4932  0EBC                     	;# 
  4933  0EBD                     	;# 
  4934  0EBE                     	;# 
  4935  0EC3                     	;# 
  4936  0EC5                     	;# 
  4937  0EC6                     	;# 
  4938  0EC7                     	;# 
  4939  0EC8                     	;# 
  4940  0EC9                     	;# 
  4941  0ECA                     	;# 
  4942  0ECB                     	;# 
  4943  0ECC                     	;# 
  4944  0F10                     	;# 
  4945  0F11                     	;# 
  4946  0F12                     	;# 
  4947  0F13                     	;# 
  4948  0F14                     	;# 
  4949  0F15                     	;# 
  4950  0F16                     	;# 
  4951  0F17                     	;# 
  4952  0F18                     	;# 
  4953  0F19                     	;# 
  4954  0F1A                     	;# 
  4955  0F1B                     	;# 
  4956  0F1C                     	;# 
  4957  0F1D                     	;# 
  4958  0F1E                     	;# 
  4959  0F1F                     	;# 
  4960  0F20                     	;# 
  4961  0F21                     	;# 
  4962  0F22                     	;# 
  4963  0F23                     	;# 
  4964  0F24                     	;# 
  4965  0F25                     	;# 
  4966  0F26                     	;# 
  4967  0F27                     	;# 
  4968  0F28                     	;# 
  4969  0F29                     	;# 
  4970  0F2A                     	;# 
  4971  0F2B                     	;# 
  4972  0F2C                     	;# 
  4973  0F2D                     	;# 
  4974  0F2E                     	;# 
  4975  0F2F                     	;# 
  4976  0F30                     	;# 
  4977  0F31                     	;# 
  4978  0F32                     	;# 
  4979  0F38                     	;# 
  4980  0F39                     	;# 
  4981  0F3A                     	;# 
  4982  0F3B                     	;# 
  4983  0F3C                     	;# 
  4984  0F3D                     	;# 
  4985  0F3E                     	;# 
  4986  0F3F                     	;# 
  4987  0F40                     	;# 
  4988  0F41                     	;# 
  4989  0F43                     	;# 
  4990  0F44                     	;# 
  4991  0F45                     	;# 
  4992  0F46                     	;# 
  4993  0F47                     	;# 
  4994  0F48                     	;# 
  4995  0F49                     	;# 
  4996  0F4A                     	;# 
  4997  0F4B                     	;# 
  4998  0F4C                     	;# 
  4999  0F4E                     	;# 
  5000  0F4F                     	;# 
  5001  0F50                     	;# 
  5002  0F51                     	;# 
  5003  0F52                     	;# 
  5004  0F53                     	;# 
  5005  0F54                     	;# 
  5006  0F55                     	;# 
  5007  0F56                     	;# 
  5008  0F57                     	;# 
  5009  0F59                     	;# 
  5010  0F5A                     	;# 
  5011  0F5B                     	;# 
  5012  0F5C                     	;# 
  5013  0F5D                     	;# 
  5014  0F61                     	;# 
  5015  0F62                     	;# 
  5016  0F64                     	;# 
  5017  0F65                     	;# 
  5018  0F66                     	;# 
  5019  0F67                     	;# 
  5020  0F68                     	;# 
  5021  0F69                     	;# 
  5022  0F6A                     	;# 
  5023  0F6B                     	;# 
  5024  0F6C                     	;# 
  5025  0F6D                     	;# 
  5026  0FE4                     	;# 
  5027  0FE5                     	;# 
  5028  0FE6                     	;# 
  5029  0FE7                     	;# 
  5030  0FE8                     	;# 
  5031  0FE9                     	;# 
  5032  0FEA                     	;# 
  5033  0FEB                     	;# 
  5034  0FED                     	;# 
  5035  0FEE                     	;# 
  5036  0FEF                     	;# 
  5037  0000                     	;# 
  5038  0001                     	;# 
  5039  0002                     	;# 
  5040  0003                     	;# 
  5041  0004                     	;# 
  5042  0005                     	;# 
  5043  0006                     	;# 
  5044  0007                     	;# 
  5045  0008                     	;# 
  5046  0009                     	;# 
  5047  000A                     	;# 
  5048  000B                     	;# 
  5049  000C                     	;# 
  5050  000D                     	;# 
  5051  000E                     	;# 
  5052  000F                     	;# 
  5053  0010                     	;# 
  5054  0011                     	;# 
  5055  0012                     	;# 
  5056  0013                     	;# 
  5057  0014                     	;# 
  5058  0015                     	;# 
  5059  0016                     	;# 
  5060  0017                     	;# 
  5061  0018                     	;# 
  5062  0019                     	;# 
  5063  001A                     	;# 
  5064  001C                     	;# 
  5065  001C                     	;# 
  5066  001D                     	;# 
  5067  001D                     	;# 
  5068  001E                     	;# 
  5069  001F                     	;# 
  5070  008C                     	;# 
  5071  008C                     	;# 
  5072  008D                     	;# 
  5073  008E                     	;# 
  5074  008E                     	;# 
  5075  008F                     	;# 
  5076  0090                     	;# 
  5077  0090                     	;# 
  5078  0091                     	;# 
  5079  0093                     	;# 
  5080  0094                     	;# 
  5081  0095                     	;# 
  5082  0096                     	;# 
  5083  0097                     	;# 
  5084  0098                     	;# 
  5085  0099                     	;# 
  5086  009A                     	;# 
  5087  009B                     	;# 
  5088  009C                     	;# 
  5089  009D                     	;# 
  5090  009E                     	;# 
  5091  010C                     	;# 
  5092  010D                     	;# 
  5093  010E                     	;# 
  5094  010E                     	;# 
  5095  010F                     	;# 
  5096  0110                     	;# 
  5097  0110                     	;# 
  5098  0111                     	;# 
  5099  0112                     	;# 
  5100  0112                     	;# 
  5101  0113                     	;# 
  5102  0114                     	;# 
  5103  0114                     	;# 
  5104  0115                     	;# 
  5105  0116                     	;# 
  5106  0116                     	;# 
  5107  0117                     	;# 
  5108  0119                     	;# 
  5109  0119                     	;# 
  5110  0119                     	;# 
  5111  011A                     	;# 
  5112  011A                     	;# 
  5113  011A                     	;# 
  5114  011B                     	;# 
  5115  011B                     	;# 
  5116  011B                     	;# 
  5117  011B                     	;# 
  5118  011B                     	;# 
  5119  011C                     	;# 
  5120  011C                     	;# 
  5121  011C                     	;# 
  5122  011D                     	;# 
  5123  011D                     	;# 
  5124  011D                     	;# 
  5125  011E                     	;# 
  5126  011E                     	;# 
  5127  011E                     	;# 
  5128  011F                     	;# 
  5129  011F                     	;# 
  5130  011F                     	;# 
  5131  011F                     	;# 
  5132  011F                     	;# 
  5133  018C                     	;# 
  5134  018D                     	;# 
  5135  018E                     	;# 
  5136  018F                     	;# 
  5137  0190                     	;# 
  5138  0191                     	;# 
  5139  0192                     	;# 
  5140  0196                     	;# 
  5141  0197                     	;# 
  5142  0198                     	;# 
  5143  0199                     	;# 
  5144  019A                     	;# 
  5145  019B                     	;# 
  5146  019C                     	;# 
  5147  020C                     	;# 
  5148  020C                     	;# 
  5149  020D                     	;# 
  5150  020E                     	;# 
  5151  020F                     	;# 
  5152  020F                     	;# 
  5153  0210                     	;# 
  5154  0210                     	;# 
  5155  0211                     	;# 
  5156  0211                     	;# 
  5157  0212                     	;# 
  5158  0212                     	;# 
  5159  0213                     	;# 
  5160  0214                     	;# 
  5161  0215                     	;# 
  5162  0215                     	;# 
  5163  0216                     	;# 
  5164  0216                     	;# 
  5165  0217                     	;# 
  5166  0217                     	;# 
  5167  0218                     	;# 
  5168  0218                     	;# 
  5169  0219                     	;# 
  5170  021A                     	;# 
  5171  021B                     	;# 
  5172  021B                     	;# 
  5173  021C                     	;# 
  5174  021C                     	;# 
  5175  021D                     	;# 
  5176  021D                     	;# 
  5177  021E                     	;# 
  5178  021F                     	;# 
  5179  028C                     	;# 
  5180  028C                     	;# 
  5181  028D                     	;# 
  5182  028D                     	;# 
  5183  028E                     	;# 
  5184  028F                     	;# 
  5185  0290                     	;# 
  5186  0290                     	;# 
  5187  0291                     	;# 
  5188  0292                     	;# 
  5189  0292                     	;# 
  5190  0293                     	;# 
  5191  0293                     	;# 
  5192  0294                     	;# 
  5193  0295                     	;# 
  5194  0296                     	;# 
  5195  0296                     	;# 
  5196  0297                     	;# 
  5197  0298                     	;# 
  5198  0298                     	;# 
  5199  0299                     	;# 
  5200  0299                     	;# 
  5201  029A                     	;# 
  5202  029B                     	;# 
  5203  029C                     	;# 
  5204  029C                     	;# 
  5205  029D                     	;# 
  5206  030C                     	;# 
  5207  030C                     	;# 
  5208  030D                     	;# 
  5209  030E                     	;# 
  5210  030F                     	;# 
  5211  0310                     	;# 
  5212  0310                     	;# 
  5213  0311                     	;# 
  5214  0312                     	;# 
  5215  0313                     	;# 
  5216  0314                     	;# 
  5217  0314                     	;# 
  5218  0315                     	;# 
  5219  0316                     	;# 
  5220  0317                     	;# 
  5221  0318                     	;# 
  5222  0318                     	;# 
  5223  0319                     	;# 
  5224  031A                     	;# 
  5225  031B                     	;# 
  5226  031C                     	;# 
  5227  031C                     	;# 
  5228  031D                     	;# 
  5229  031E                     	;# 
  5230  031F                     	;# 
  5231  038C                     	;# 
  5232  038C                     	;# 
  5233  038D                     	;# 
  5234  038E                     	;# 
  5235  0390                     	;# 
  5236  0390                     	;# 
  5237  0391                     	;# 
  5238  0392                     	;# 
  5239  040C                     	;# 
  5240  040D                     	;# 
  5241  040E                     	;# 
  5242  040F                     	;# 
  5243  0410                     	;# 
  5244  0411                     	;# 
  5245  0416                     	;# 
  5246  0416                     	;# 
  5247  0417                     	;# 
  5248  0418                     	;# 
  5249  0418                     	;# 
  5250  0419                     	;# 
  5251  041A                     	;# 
  5252  041A                     	;# 
  5253  041B                     	;# 
  5254  041C                     	;# 
  5255  041C                     	;# 
  5256  041D                     	;# 
  5257  041E                     	;# 
  5258  041F                     	;# 
  5259  048C                     	;# 
  5260  048C                     	;# 
  5261  048D                     	;# 
  5262  048E                     	;# 
  5263  048F                     	;# 
  5264  048F                     	;# 
  5265  0490                     	;# 
  5266  0491                     	;# 
  5267  0492                     	;# 
  5268  0492                     	;# 
  5269  0493                     	;# 
  5270  0494                     	;# 
  5271  0495                     	;# 
  5272  0495                     	;# 
  5273  0496                     	;# 
  5274  0497                     	;# 
  5275  0498                     	;# 
  5276  0499                     	;# 
  5277  049A                     	;# 
  5278  049B                     	;# 
  5279  049C                     	;# 
  5280  049D                     	;# 
  5281  050C                     	;# 
  5282  050C                     	;# 
  5283  050D                     	;# 
  5284  050E                     	;# 
  5285  050F                     	;# 
  5286  050F                     	;# 
  5287  0510                     	;# 
  5288  0511                     	;# 
  5289  0512                     	;# 
  5290  0512                     	;# 
  5291  0513                     	;# 
  5292  0514                     	;# 
  5293  0515                     	;# 
  5294  0515                     	;# 
  5295  0516                     	;# 
  5296  0517                     	;# 
  5297  0518                     	;# 
  5298  0519                     	;# 
  5299  051A                     	;# 
  5300  051B                     	;# 
  5301  051C                     	;# 
  5302  051D                     	;# 
  5303  058C                     	;# 
  5304  058C                     	;# 
  5305  058D                     	;# 
  5306  058E                     	;# 
  5307  058F                     	;# 
  5308  058F                     	;# 
  5309  0590                     	;# 
  5310  0591                     	;# 
  5311  0592                     	;# 
  5312  0593                     	;# 
  5313  060C                     	;# 
  5314  060D                     	;# 
  5315  060E                     	;# 
  5316  060F                     	;# 
  5317  0610                     	;# 
  5318  0611                     	;# 
  5319  0612                     	;# 
  5320  0613                     	;# 
  5321  0614                     	;# 
  5322  0616                     	;# 
  5323  0617                     	;# 
  5324  0618                     	;# 
  5325  0619                     	;# 
  5326  061A                     	;# 
  5327  061B                     	;# 
  5328  061C                     	;# 
  5329  061D                     	;# 
  5330  061E                     	;# 
  5331  068C                     	;# 
  5332  068D                     	;# 
  5333  068E                     	;# 
  5334  068F                     	;# 
  5335  0690                     	;# 
  5336  0691                     	;# 
  5337  0692                     	;# 
  5338  0693                     	;# 
  5339  0694                     	;# 
  5340  070C                     	;# 
  5341  070D                     	;# 
  5342  070E                     	;# 
  5343  070F                     	;# 
  5344  0710                     	;# 
  5345  0711                     	;# 
  5346  0712                     	;# 
  5347  0713                     	;# 
  5348  0714                     	;# 
  5349  0716                     	;# 
  5350  0717                     	;# 
  5351  0718                     	;# 
  5352  0719                     	;# 
  5353  071A                     	;# 
  5354  071B                     	;# 
  5355  071C                     	;# 
  5356  071D                     	;# 
  5357  071E                     	;# 
  5358  0796                     	;# 
  5359  0797                     	;# 
  5360  0798                     	;# 
  5361  0799                     	;# 
  5362  079A                     	;# 
  5363  079B                     	;# 
  5364  080C                     	;# 
  5365  080D                     	;# 
  5366  080E                     	;# 
  5367  080F                     	;# 
  5368  0810                     	;# 
  5369  0811                     	;# 
  5370  0812                     	;# 
  5371  0813                     	;# 
  5372  0814                     	;# 
  5373  081A                     	;# 
  5374  081B                     	;# 
  5375  081C                     	;# 
  5376  081D                     	;# 
  5377  081E                     	;# 
  5378  081F                     	;# 
  5379  088C                     	;# 
  5380  088D                     	;# 
  5381  088E                     	;# 
  5382  088F                     	;# 
  5383  0890                     	;# 
  5384  0891                     	;# 
  5385  0892                     	;# 
  5386  0893                     	;# 
  5387  0895                     	;# 
  5388  0896                     	;# 
  5389  0897                     	;# 
  5390  0898                     	;# 
  5391  0899                     	;# 
  5392  089A                     	;# 
  5393  089B                     	;# 
  5394  090C                     	;# 
  5395  090E                     	;# 
  5396  090F                     	;# 
  5397  091F                     	;# 
  5398  091F                     	;# 
  5399  098F                     	;# 
  5400  098F                     	;# 
  5401  0990                     	;# 
  5402  0991                     	;# 
  5403  0992                     	;# 
  5404  0993                     	;# 
  5405  0994                     	;# 
  5406  0995                     	;# 
  5407  0996                     	;# 
  5408  0997                     	;# 
  5409  0E0F                     	;# 
  5410  0E10                     	;# 
  5411  0E11                     	;# 
  5412  0E12                     	;# 
  5413  0E13                     	;# 
  5414  0E14                     	;# 
  5415  0E15                     	;# 
  5416  0E16                     	;# 
  5417  0E17                     	;# 
  5418  0E18                     	;# 
  5419  0E19                     	;# 
  5420  0E1A                     	;# 
  5421  0E1B                     	;# 
  5422  0E1C                     	;# 
  5423  0E1D                     	;# 
  5424  0E1E                     	;# 
  5425  0E1F                     	;# 
  5426  0E20                     	;# 
  5427  0E21                     	;# 
  5428  0E22                     	;# 
  5429  0E23                     	;# 
  5430  0E24                     	;# 
  5431  0E25                     	;# 
  5432  0E26                     	;# 
  5433  0E27                     	;# 
  5434  0E28                     	;# 
  5435  0E29                     	;# 
  5436  0E2A                     	;# 
  5437  0E2B                     	;# 
  5438  0E2C                     	;# 
  5439  0E2D                     	;# 
  5440  0E2E                     	;# 
  5441  0E2F                     	;# 
  5442  0E30                     	;# 
  5443  0E31                     	;# 
  5444  0E32                     	;# 
  5445  0E33                     	;# 
  5446  0E34                     	;# 
  5447  0E35                     	;# 
  5448  0E36                     	;# 
  5449  0E37                     	;# 
  5450  0E8F                     	;# 
  5451  0E90                     	;# 
  5452  0E91                     	;# 
  5453  0E92                     	;# 
  5454  0E93                     	;# 
  5455  0E94                     	;# 
  5456  0E95                     	;# 
  5457  0E96                     	;# 
  5458  0E97                     	;# 
  5459  0E9C                     	;# 
  5460  0E9D                     	;# 
  5461  0E9E                     	;# 
  5462  0EA1                     	;# 
  5463  0EA2                     	;# 
  5464  0EA3                     	;# 
  5465  0EA4                     	;# 
  5466  0EA5                     	;# 
  5467  0EA9                     	;# 
  5468  0EAA                     	;# 
  5469  0EAB                     	;# 
  5470  0EAC                     	;# 
  5471  0EB1                     	;# 
  5472  0EB2                     	;# 
  5473  0EB3                     	;# 
  5474  0EB8                     	;# 
  5475  0EB9                     	;# 
  5476  0EBA                     	;# 
  5477  0EBB                     	;# 
  5478  0EBC                     	;# 
  5479  0EBD                     	;# 
  5480  0EBE                     	;# 
  5481  0EC3                     	;# 
  5482  0EC5                     	;# 
  5483  0EC6                     	;# 
  5484  0EC7                     	;# 
  5485  0EC8                     	;# 
  5486  0EC9                     	;# 
  5487  0ECA                     	;# 
  5488  0ECB                     	;# 
  5489  0ECC                     	;# 
  5490  0F10                     	;# 
  5491  0F11                     	;# 
  5492  0F12                     	;# 
  5493  0F13                     	;# 
  5494  0F14                     	;# 
  5495  0F15                     	;# 
  5496  0F16                     	;# 
  5497  0F17                     	;# 
  5498  0F18                     	;# 
  5499  0F19                     	;# 
  5500  0F1A                     	;# 
  5501  0F1B                     	;# 
  5502  0F1C                     	;# 
  5503  0F1D                     	;# 
  5504  0F1E                     	;# 
  5505  0F1F                     	;# 
  5506  0F20                     	;# 
  5507  0F21                     	;# 
  5508  0F22                     	;# 
  5509  0F23                     	;# 
  5510  0F24                     	;# 
  5511  0F25                     	;# 
  5512  0F26                     	;# 
  5513  0F27                     	;# 
  5514  0F28                     	;# 
  5515  0F29                     	;# 
  5516  0F2A                     	;# 
  5517  0F2B                     	;# 
  5518  0F2C                     	;# 
  5519  0F2D                     	;# 
  5520  0F2E                     	;# 
  5521  0F2F                     	;# 
  5522  0F30                     	;# 
  5523  0F31                     	;# 
  5524  0F32                     	;# 
  5525  0F38                     	;# 
  5526  0F39                     	;# 
  5527  0F3A                     	;# 
  5528  0F3B                     	;# 
  5529  0F3C                     	;# 
  5530  0F3D                     	;# 
  5531  0F3E                     	;# 
  5532  0F3F                     	;# 
  5533  0F40                     	;# 
  5534  0F41                     	;# 
  5535  0F43                     	;# 
  5536  0F44                     	;# 
  5537  0F45                     	;# 
  5538  0F46                     	;# 
  5539  0F47                     	;# 
  5540  0F48                     	;# 
  5541  0F49                     	;# 
  5542  0F4A                     	;# 
  5543  0F4B                     	;# 
  5544  0F4C                     	;# 
  5545  0F4E                     	;# 
  5546  0F4F                     	;# 
  5547  0F50                     	;# 
  5548  0F51                     	;# 
  5549  0F52                     	;# 
  5550  0F53                     	;# 
  5551  0F54                     	;# 
  5552  0F55                     	;# 
  5553  0F56                     	;# 
  5554  0F57                     	;# 
  5555  0F59                     	;# 
  5556  0F5A                     	;# 
  5557  0F5B                     	;# 
  5558  0F5C                     	;# 
  5559  0F5D                     	;# 
  5560  0F61                     	;# 
  5561  0F62                     	;# 
  5562  0F64                     	;# 
  5563  0F65                     	;# 
  5564  0F66                     	;# 
  5565  0F67                     	;# 
  5566  0F68                     	;# 
  5567  0F69                     	;# 
  5568  0F6A                     	;# 
  5569  0F6B                     	;# 
  5570  0F6C                     	;# 
  5571  0F6D                     	;# 
  5572  0FE4                     	;# 
  5573  0FE5                     	;# 
  5574  0FE6                     	;# 
  5575  0FE7                     	;# 
  5576  0FE8                     	;# 
  5577  0FE9                     	;# 
  5578  0FEA                     	;# 
  5579  0FEB                     	;# 
  5580  0FED                     	;# 
  5581  0FEE                     	;# 
  5582  0FEF                     	;# 
  5583  0000                     	;# 
  5584  0001                     	;# 
  5585  0002                     	;# 
  5586  0003                     	;# 
  5587  0004                     	;# 
  5588  0005                     	;# 
  5589  0006                     	;# 
  5590  0007                     	;# 
  5591  0008                     	;# 
  5592  0009                     	;# 
  5593  000A                     	;# 
  5594  000B                     	;# 
  5595  000C                     	;# 
  5596  000D                     	;# 
  5597  000E                     	;# 
  5598  000F                     	;# 
  5599  0010                     	;# 
  5600  0011                     	;# 
  5601  0012                     	;# 
  5602  0013                     	;# 
  5603  0014                     	;# 
  5604  0015                     	;# 
  5605  0016                     	;# 
  5606  0017                     	;# 
  5607  0018                     	;# 
  5608  0019                     	;# 
  5609  001A                     	;# 
  5610  001C                     	;# 
  5611  001C                     	;# 
  5612  001D                     	;# 
  5613  001D                     	;# 
  5614  001E                     	;# 
  5615  001F                     	;# 
  5616  008C                     	;# 
  5617  008C                     	;# 
  5618  008D                     	;# 
  5619  008E                     	;# 
  5620  008E                     	;# 
  5621  008F                     	;# 
  5622  0090                     	;# 
  5623  0090                     	;# 
  5624  0091                     	;# 
  5625  0093                     	;# 
  5626  0094                     	;# 
  5627  0095                     	;# 
  5628  0096                     	;# 
  5629  0097                     	;# 
  5630  0098                     	;# 
  5631  0099                     	;# 
  5632  009A                     	;# 
  5633  009B                     	;# 
  5634  009C                     	;# 
  5635  009D                     	;# 
  5636  009E                     	;# 
  5637  010C                     	;# 
  5638  010D                     	;# 
  5639  010E                     	;# 
  5640  010E                     	;# 
  5641  010F                     	;# 
  5642  0110                     	;# 
  5643  0110                     	;# 
  5644  0111                     	;# 
  5645  0112                     	;# 
  5646  0112                     	;# 
  5647  0113                     	;# 
  5648  0114                     	;# 
  5649  0114                     	;# 
  5650  0115                     	;# 
  5651  0116                     	;# 
  5652  0116                     	;# 
  5653  0117                     	;# 
  5654  0119                     	;# 
  5655  0119                     	;# 
  5656  0119                     	;# 
  5657  011A                     	;# 
  5658  011A                     	;# 
  5659  011A                     	;# 
  5660  011B                     	;# 
  5661  011B                     	;# 
  5662  011B                     	;# 
  5663  011B                     	;# 
  5664  011B                     	;# 
  5665  011C                     	;# 
  5666  011C                     	;# 
  5667  011C                     	;# 
  5668  011D                     	;# 
  5669  011D                     	;# 
  5670  011D                     	;# 
  5671  011E                     	;# 
  5672  011E                     	;# 
  5673  011E                     	;# 
  5674  011F                     	;# 
  5675  011F                     	;# 
  5676  011F                     	;# 
  5677  011F                     	;# 
  5678  011F                     	;# 
  5679  018C                     	;# 
  5680  018D                     	;# 
  5681  018E                     	;# 
  5682  018F                     	;# 
  5683  0190                     	;# 
  5684  0191                     	;# 
  5685  0192                     	;# 
  5686  0196                     	;# 
  5687  0197                     	;# 
  5688  0198                     	;# 
  5689  0199                     	;# 
  5690  019A                     	;# 
  5691  019B                     	;# 
  5692  019C                     	;# 
  5693  020C                     	;# 
  5694  020C                     	;# 
  5695  020D                     	;# 
  5696  020E                     	;# 
  5697  020F                     	;# 
  5698  020F                     	;# 
  5699  0210                     	;# 
  5700  0210                     	;# 
  5701  0211                     	;# 
  5702  0211                     	;# 
  5703  0212                     	;# 
  5704  0212                     	;# 
  5705  0213                     	;# 
  5706  0214                     	;# 
  5707  0215                     	;# 
  5708  0215                     	;# 
  5709  0216                     	;# 
  5710  0216                     	;# 
  5711  0217                     	;# 
  5712  0217                     	;# 
  5713  0218                     	;# 
  5714  0218                     	;# 
  5715  0219                     	;# 
  5716  021A                     	;# 
  5717  021B                     	;# 
  5718  021B                     	;# 
  5719  021C                     	;# 
  5720  021C                     	;# 
  5721  021D                     	;# 
  5722  021D                     	;# 
  5723  021E                     	;# 
  5724  021F                     	;# 
  5725  028C                     	;# 
  5726  028C                     	;# 
  5727  028D                     	;# 
  5728  028D                     	;# 
  5729  028E                     	;# 
  5730  028F                     	;# 
  5731  0290                     	;# 
  5732  0290                     	;# 
  5733  0291                     	;# 
  5734  0292                     	;# 
  5735  0292                     	;# 
  5736  0293                     	;# 
  5737  0293                     	;# 
  5738  0294                     	;# 
  5739  0295                     	;# 
  5740  0296                     	;# 
  5741  0296                     	;# 
  5742  0297                     	;# 
  5743  0298                     	;# 
  5744  0298                     	;# 
  5745  0299                     	;# 
  5746  0299                     	;# 
  5747  029A                     	;# 
  5748  029B                     	;# 
  5749  029C                     	;# 
  5750  029C                     	;# 
  5751  029D                     	;# 
  5752  030C                     	;# 
  5753  030C                     	;# 
  5754  030D                     	;# 
  5755  030E                     	;# 
  5756  030F                     	;# 
  5757  0310                     	;# 
  5758  0310                     	;# 
  5759  0311                     	;# 
  5760  0312                     	;# 
  5761  0313                     	;# 
  5762  0314                     	;# 
  5763  0314                     	;# 
  5764  0315                     	;# 
  5765  0316                     	;# 
  5766  0317                     	;# 
  5767  0318                     	;# 
  5768  0318                     	;# 
  5769  0319                     	;# 
  5770  031A                     	;# 
  5771  031B                     	;# 
  5772  031C                     	;# 
  5773  031C                     	;# 
  5774  031D                     	;# 
  5775  031E                     	;# 
  5776  031F                     	;# 
  5777  038C                     	;# 
  5778  038C                     	;# 
  5779  038D                     	;# 
  5780  038E                     	;# 
  5781  0390                     	;# 
  5782  0390                     	;# 
  5783  0391                     	;# 
  5784  0392                     	;# 
  5785  040C                     	;# 
  5786  040D                     	;# 
  5787  040E                     	;# 
  5788  040F                     	;# 
  5789  0410                     	;# 
  5790  0411                     	;# 
  5791  0416                     	;# 
  5792  0416                     	;# 
  5793  0417                     	;# 
  5794  0418                     	;# 
  5795  0418                     	;# 
  5796  0419                     	;# 
  5797  041A                     	;# 
  5798  041A                     	;# 
  5799  041B                     	;# 
  5800  041C                     	;# 
  5801  041C                     	;# 
  5802  041D                     	;# 
  5803  041E                     	;# 
  5804  041F                     	;# 
  5805  048C                     	;# 
  5806  048C                     	;# 
  5807  048D                     	;# 
  5808  048E                     	;# 
  5809  048F                     	;# 
  5810  048F                     	;# 
  5811  0490                     	;# 
  5812  0491                     	;# 
  5813  0492                     	;# 
  5814  0492                     	;# 
  5815  0493                     	;# 
  5816  0494                     	;# 
  5817  0495                     	;# 
  5818  0495                     	;# 
  5819  0496                     	;# 
  5820  0497                     	;# 
  5821  0498                     	;# 
  5822  0499                     	;# 
  5823  049A                     	;# 
  5824  049B                     	;# 
  5825  049C                     	;# 
  5826  049D                     	;# 
  5827  050C                     	;# 
  5828  050C                     	;# 
  5829  050D                     	;# 
  5830  050E                     	;# 
  5831  050F                     	;# 
  5832  050F                     	;# 
  5833  0510                     	;# 
  5834  0511                     	;# 
  5835  0512                     	;# 
  5836  0512                     	;# 
  5837  0513                     	;# 
  5838  0514                     	;# 
  5839  0515                     	;# 
  5840  0515                     	;# 
  5841  0516                     	;# 
  5842  0517                     	;# 
  5843  0518                     	;# 
  5844  0519                     	;# 
  5845  051A                     	;# 
  5846  051B                     	;# 
  5847  051C                     	;# 
  5848  051D                     	;# 
  5849  058C                     	;# 
  5850  058C                     	;# 
  5851  058D                     	;# 
  5852  058E                     	;# 
  5853  058F                     	;# 
  5854  058F                     	;# 
  5855  0590                     	;# 
  5856  0591                     	;# 
  5857  0592                     	;# 
  5858  0593                     	;# 
  5859  060C                     	;# 
  5860  060D                     	;# 
  5861  060E                     	;# 
  5862  060F                     	;# 
  5863  0610                     	;# 
  5864  0611                     	;# 
  5865  0612                     	;# 
  5866  0613                     	;# 
  5867  0614                     	;# 
  5868  0616                     	;# 
  5869  0617                     	;# 
  5870  0618                     	;# 
  5871  0619                     	;# 
  5872  061A                     	;# 
  5873  061B                     	;# 
  5874  061C                     	;# 
  5875  061D                     	;# 
  5876  061E                     	;# 
  5877  068C                     	;# 
  5878  068D                     	;# 
  5879  068E                     	;# 
  5880  068F                     	;# 
  5881  0690                     	;# 
  5882  0691                     	;# 
  5883  0692                     	;# 
  5884  0693                     	;# 
  5885  0694                     	;# 
  5886  070C                     	;# 
  5887  070D                     	;# 
  5888  070E                     	;# 
  5889  070F                     	;# 
  5890  0710                     	;# 
  5891  0711                     	;# 
  5892  0712                     	;# 
  5893  0713                     	;# 
  5894  0714                     	;# 
  5895  0716                     	;# 
  5896  0717                     	;# 
  5897  0718                     	;# 
  5898  0719                     	;# 
  5899  071A                     	;# 
  5900  071B                     	;# 
  5901  071C                     	;# 
  5902  071D                     	;# 
  5903  071E                     	;# 
  5904  0796                     	;# 
  5905  0797                     	;# 
  5906  0798                     	;# 
  5907  0799                     	;# 
  5908  079A                     	;# 
  5909  079B                     	;# 
  5910  080C                     	;# 
  5911  080D                     	;# 
  5912  080E                     	;# 
  5913  080F                     	;# 
  5914  0810                     	;# 
  5915  0811                     	;# 
  5916  0812                     	;# 
  5917  0813                     	;# 
  5918  0814                     	;# 
  5919  081A                     	;# 
  5920  081B                     	;# 
  5921  081C                     	;# 
  5922  081D                     	;# 
  5923  081E                     	;# 
  5924  081F                     	;# 
  5925  088C                     	;# 
  5926  088D                     	;# 
  5927  088E                     	;# 
  5928  088F                     	;# 
  5929  0890                     	;# 
  5930  0891                     	;# 
  5931  0892                     	;# 
  5932  0893                     	;# 
  5933  0895                     	;# 
  5934  0896                     	;# 
  5935  0897                     	;# 
  5936  0898                     	;# 
  5937  0899                     	;# 
  5938  089A                     	;# 
  5939  089B                     	;# 
  5940  090C                     	;# 
  5941  090E                     	;# 
  5942  090F                     	;# 
  5943  091F                     	;# 
  5944  091F                     	;# 
  5945  098F                     	;# 
  5946  098F                     	;# 
  5947  0990                     	;# 
  5948  0991                     	;# 
  5949  0992                     	;# 
  5950  0993                     	;# 
  5951  0994                     	;# 
  5952  0995                     	;# 
  5953  0996                     	;# 
  5954  0997                     	;# 
  5955  0E0F                     	;# 
  5956  0E10                     	;# 
  5957  0E11                     	;# 
  5958  0E12                     	;# 
  5959  0E13                     	;# 
  5960  0E14                     	;# 
  5961  0E15                     	;# 
  5962  0E16                     	;# 
  5963  0E17                     	;# 
  5964  0E18                     	;# 
  5965  0E19                     	;# 
  5966  0E1A                     	;# 
  5967  0E1B                     	;# 
  5968  0E1C                     	;# 
  5969  0E1D                     	;# 
  5970  0E1E                     	;# 
  5971  0E1F                     	;# 
  5972  0E20                     	;# 
  5973  0E21                     	;# 
  5974  0E22                     	;# 
  5975  0E23                     	;# 
  5976  0E24                     	;# 
  5977  0E25                     	;# 
  5978  0E26                     	;# 
  5979  0E27                     	;# 
  5980  0E28                     	;# 
  5981  0E29                     	;# 
  5982  0E2A                     	;# 
  5983  0E2B                     	;# 
  5984  0E2C                     	;# 
  5985  0E2D                     	;# 
  5986  0E2E                     	;# 
  5987  0E2F                     	;# 
  5988  0E30                     	;# 
  5989  0E31                     	;# 
  5990  0E32                     	;# 
  5991  0E33                     	;# 
  5992  0E34                     	;# 
  5993  0E35                     	;# 
  5994  0E36                     	;# 
  5995  0E37                     	;# 
  5996  0E8F                     	;# 
  5997  0E90                     	;# 
  5998  0E91                     	;# 
  5999  0E92                     	;# 
  6000  0E93                     	;# 
  6001  0E94                     	;# 
  6002  0E95                     	;# 
  6003  0E96                     	;# 
  6004  0E97                     	;# 
  6005  0E9C                     	;# 
  6006  0E9D                     	;# 
  6007  0E9E                     	;# 
  6008  0EA1                     	;# 
  6009  0EA2                     	;# 
  6010  0EA3                     	;# 
  6011  0EA4                     	;# 
  6012  0EA5                     	;# 
  6013  0EA9                     	;# 
  6014  0EAA                     	;# 
  6015  0EAB                     	;# 
  6016  0EAC                     	;# 
  6017  0EB1                     	;# 
  6018  0EB2                     	;# 
  6019  0EB3                     	;# 
  6020  0EB8                     	;# 
  6021  0EB9                     	;# 
  6022  0EBA                     	;# 
  6023  0EBB                     	;# 
  6024  0EBC                     	;# 
  6025  0EBD                     	;# 
  6026  0EBE                     	;# 
  6027  0EC3                     	;# 
  6028  0EC5                     	;# 
  6029  0EC6                     	;# 
  6030  0EC7                     	;# 
  6031  0EC8                     	;# 
  6032  0EC9                     	;# 
  6033  0ECA                     	;# 
  6034  0ECB                     	;# 
  6035  0ECC                     	;# 
  6036  0F10                     	;# 
  6037  0F11                     	;# 
  6038  0F12                     	;# 
  6039  0F13                     	;# 
  6040  0F14                     	;# 
  6041  0F15                     	;# 
  6042  0F16                     	;# 
  6043  0F17                     	;# 
  6044  0F18                     	;# 
  6045  0F19                     	;# 
  6046  0F1A                     	;# 
  6047  0F1B                     	;# 
  6048  0F1C                     	;# 
  6049  0F1D                     	;# 
  6050  0F1E                     	;# 
  6051  0F1F                     	;# 
  6052  0F20                     	;# 
  6053  0F21                     	;# 
  6054  0F22                     	;# 
  6055  0F23                     	;# 
  6056  0F24                     	;# 
  6057  0F25                     	;# 
  6058  0F26                     	;# 
  6059  0F27                     	;# 
  6060  0F28                     	;# 
  6061  0F29                     	;# 
  6062  0F2A                     	;# 
  6063  0F2B                     	;# 
  6064  0F2C                     	;# 
  6065  0F2D                     	;# 
  6066  0F2E                     	;# 
  6067  0F2F                     	;# 
  6068  0F30                     	;# 
  6069  0F31                     	;# 
  6070  0F32                     	;# 
  6071  0F38                     	;# 
  6072  0F39                     	;# 
  6073  0F3A                     	;# 
  6074  0F3B                     	;# 
  6075  0F3C                     	;# 
  6076  0F3D                     	;# 
  6077  0F3E                     	;# 
  6078  0F3F                     	;# 
  6079  0F40                     	;# 
  6080  0F41                     	;# 
  6081  0F43                     	;# 
  6082  0F44                     	;# 
  6083  0F45                     	;# 
  6084  0F46                     	;# 
  6085  0F47                     	;# 
  6086  0F48                     	;# 
  6087  0F49                     	;# 
  6088  0F4A                     	;# 
  6089  0F4B                     	;# 
  6090  0F4C                     	;# 
  6091  0F4E                     	;# 
  6092  0F4F                     	;# 
  6093  0F50                     	;# 
  6094  0F51                     	;# 
  6095  0F52                     	;# 
  6096  0F53                     	;# 
  6097  0F54                     	;# 
  6098  0F55                     	;# 
  6099  0F56                     	;# 
  6100  0F57                     	;# 
  6101  0F59                     	;# 
  6102  0F5A                     	;# 
  6103  0F5B                     	;# 
  6104  0F5C                     	;# 
  6105  0F5D                     	;# 
  6106  0F61                     	;# 
  6107  0F62                     	;# 
  6108  0F64                     	;# 
  6109  0F65                     	;# 
  6110  0F66                     	;# 
  6111  0F67                     	;# 
  6112  0F68                     	;# 
  6113  0F69                     	;# 
  6114  0F6A                     	;# 
  6115  0F6B                     	;# 
  6116  0F6C                     	;# 
  6117  0F6D                     	;# 
  6118  0FE4                     	;# 
  6119  0FE5                     	;# 
  6120  0FE6                     	;# 
  6121  0FE7                     	;# 
  6122  0FE8                     	;# 
  6123  0FE9                     	;# 
  6124  0FEA                     	;# 
  6125  0FEB                     	;# 
  6126  0FED                     	;# 
  6127  0FEE                     	;# 
  6128  0FEF                     	;# 
  6129  0000                     	;# 
  6130  0001                     	;# 
  6131  0002                     	;# 
  6132  0003                     	;# 
  6133  0004                     	;# 
  6134  0005                     	;# 
  6135  0006                     	;# 
  6136  0007                     	;# 
  6137  0008                     	;# 
  6138  0009                     	;# 
  6139  000A                     	;# 
  6140  000B                     	;# 
  6141  000C                     	;# 
  6142  000D                     	;# 
  6143  000E                     	;# 
  6144  000F                     	;# 
  6145  0010                     	;# 
  6146  0011                     	;# 
  6147  0012                     	;# 
  6148  0013                     	;# 
  6149  0014                     	;# 
  6150  0015                     	;# 
  6151  0016                     	;# 
  6152  0017                     	;# 
  6153  0018                     	;# 
  6154  0019                     	;# 
  6155  001A                     	;# 
  6156  001C                     	;# 
  6157  001C                     	;# 
  6158  001D                     	;# 
  6159  001D                     	;# 
  6160  001E                     	;# 
  6161  001F                     	;# 
  6162  008C                     	;# 
  6163  008C                     	;# 
  6164  008D                     	;# 
  6165  008E                     	;# 
  6166  008E                     	;# 
  6167  008F                     	;# 
  6168  0090                     	;# 
  6169  0090                     	;# 
  6170  0091                     	;# 
  6171  0093                     	;# 
  6172  0094                     	;# 
  6173  0095                     	;# 
  6174  0096                     	;# 
  6175  0097                     	;# 
  6176  0098                     	;# 
  6177  0099                     	;# 
  6178  009A                     	;# 
  6179  009B                     	;# 
  6180  009C                     	;# 
  6181  009D                     	;# 
  6182  009E                     	;# 
  6183  010C                     	;# 
  6184  010D                     	;# 
  6185  010E                     	;# 
  6186  010E                     	;# 
  6187  010F                     	;# 
  6188  0110                     	;# 
  6189  0110                     	;# 
  6190  0111                     	;# 
  6191  0112                     	;# 
  6192  0112                     	;# 
  6193  0113                     	;# 
  6194  0114                     	;# 
  6195  0114                     	;# 
  6196  0115                     	;# 
  6197  0116                     	;# 
  6198  0116                     	;# 
  6199  0117                     	;# 
  6200  0119                     	;# 
  6201  0119                     	;# 
  6202  0119                     	;# 
  6203  011A                     	;# 
  6204  011A                     	;# 
  6205  011A                     	;# 
  6206  011B                     	;# 
  6207  011B                     	;# 
  6208  011B                     	;# 
  6209  011B                     	;# 
  6210  011B                     	;# 
  6211  011C                     	;# 
  6212  011C                     	;# 
  6213  011C                     	;# 
  6214  011D                     	;# 
  6215  011D                     	;# 
  6216  011D                     	;# 
  6217  011E                     	;# 
  6218  011E                     	;# 
  6219  011E                     	;# 
  6220  011F                     	;# 
  6221  011F                     	;# 
  6222  011F                     	;# 
  6223  011F                     	;# 
  6224  011F                     	;# 
  6225  018C                     	;# 
  6226  018D                     	;# 
  6227  018E                     	;# 
  6228  018F                     	;# 
  6229  0190                     	;# 
  6230  0191                     	;# 
  6231  0192                     	;# 
  6232  0196                     	;# 
  6233  0197                     	;# 
  6234  0198                     	;# 
  6235  0199                     	;# 
  6236  019A                     	;# 
  6237  019B                     	;# 
  6238  019C                     	;# 
  6239  020C                     	;# 
  6240  020C                     	;# 
  6241  020D                     	;# 
  6242  020E                     	;# 
  6243  020F                     	;# 
  6244  020F                     	;# 
  6245  0210                     	;# 
  6246  0210                     	;# 
  6247  0211                     	;# 
  6248  0211                     	;# 
  6249  0212                     	;# 
  6250  0212                     	;# 
  6251  0213                     	;# 
  6252  0214                     	;# 
  6253  0215                     	;# 
  6254  0215                     	;# 
  6255  0216                     	;# 
  6256  0216                     	;# 
  6257  0217                     	;# 
  6258  0217                     	;# 
  6259  0218                     	;# 
  6260  0218                     	;# 
  6261  0219                     	;# 
  6262  021A                     	;# 
  6263  021B                     	;# 
  6264  021B                     	;# 
  6265  021C                     	;# 
  6266  021C                     	;# 
  6267  021D                     	;# 
  6268  021D                     	;# 
  6269  021E                     	;# 
  6270  021F                     	;# 
  6271  028C                     	;# 
  6272  028C                     	;# 
  6273  028D                     	;# 
  6274  028D                     	;# 
  6275  028E                     	;# 
  6276  028F                     	;# 
  6277  0290                     	;# 
  6278  0290                     	;# 
  6279  0291                     	;# 
  6280  0292                     	;# 
  6281  0292                     	;# 
  6282  0293                     	;# 
  6283  0293                     	;# 
  6284  0294                     	;# 
  6285  0295                     	;# 
  6286  0296                     	;# 
  6287  0296                     	;# 
  6288  0297                     	;# 
  6289  0298                     	;# 
  6290  0298                     	;# 
  6291  0299                     	;# 
  6292  0299                     	;# 
  6293  029A                     	;# 
  6294  029B                     	;# 
  6295  029C                     	;# 
  6296  029C                     	;# 
  6297  029D                     	;# 
  6298  030C                     	;# 
  6299  030C                     	;# 
  6300  030D                     	;# 
  6301  030E                     	;# 
  6302  030F                     	;# 
  6303  0310                     	;# 
  6304  0310                     	;# 
  6305  0311                     	;# 
  6306  0312                     	;# 
  6307  0313                     	;# 
  6308  0314                     	;# 
  6309  0314                     	;# 
  6310  0315                     	;# 
  6311  0316                     	;# 
  6312  0317                     	;# 
  6313  0318                     	;# 
  6314  0318                     	;# 
  6315  0319                     	;# 
  6316  031A                     	;# 
  6317  031B                     	;# 
  6318  031C                     	;# 
  6319  031C                     	;# 
  6320  031D                     	;# 
  6321  031E                     	;# 
  6322  031F                     	;# 
  6323  038C                     	;# 
  6324  038C                     	;# 
  6325  038D                     	;# 
  6326  038E                     	;# 
  6327  0390                     	;# 
  6328  0390                     	;# 
  6329  0391                     	;# 
  6330  0392                     	;# 
  6331  040C                     	;# 
  6332  040D                     	;# 
  6333  040E                     	;# 
  6334  040F                     	;# 
  6335  0410                     	;# 
  6336  0411                     	;# 
  6337  0416                     	;# 
  6338  0416                     	;# 
  6339  0417                     	;# 
  6340  0418                     	;# 
  6341  0418                     	;# 
  6342  0419                     	;# 
  6343  041A                     	;# 
  6344  041A                     	;# 
  6345  041B                     	;# 
  6346  041C                     	;# 
  6347  041C                     	;# 
  6348  041D                     	;# 
  6349  041E                     	;# 
  6350  041F                     	;# 
  6351  048C                     	;# 
  6352  048C                     	;# 
  6353  048D                     	;# 
  6354  048E                     	;# 
  6355  048F                     	;# 
  6356  048F                     	;# 
  6357  0490                     	;# 
  6358  0491                     	;# 
  6359  0492                     	;# 
  6360  0492                     	;# 
  6361  0493                     	;# 
  6362  0494                     	;# 
  6363  0495                     	;# 
  6364  0495                     	;# 
  6365  0496                     	;# 
  6366  0497                     	;# 
  6367  0498                     	;# 
  6368  0499                     	;# 
  6369  049A                     	;# 
  6370  049B                     	;# 
  6371  049C                     	;# 
  6372  049D                     	;# 
  6373  050C                     	;# 
  6374  050C                     	;# 
  6375  050D                     	;# 
  6376  050E                     	;# 
  6377  050F                     	;# 
  6378  050F                     	;# 
  6379  0510                     	;# 
  6380  0511                     	;# 
  6381  0512                     	;# 
  6382  0512                     	;# 
  6383  0513                     	;# 
  6384  0514                     	;# 
  6385  0515                     	;# 
  6386  0515                     	;# 
  6387  0516                     	;# 
  6388  0517                     	;# 
  6389  0518                     	;# 
  6390  0519                     	;# 
  6391  051A                     	;# 
  6392  051B                     	;# 
  6393  051C                     	;# 
  6394  051D                     	;# 
  6395  058C                     	;# 
  6396  058C                     	;# 
  6397  058D                     	;# 
  6398  058E                     	;# 
  6399  058F                     	;# 
  6400  058F                     	;# 
  6401  0590                     	;# 
  6402  0591                     	;# 
  6403  0592                     	;# 
  6404  0593                     	;# 
  6405  060C                     	;# 
  6406  060D                     	;# 
  6407  060E                     	;# 
  6408  060F                     	;# 
  6409  0610                     	;# 
  6410  0611                     	;# 
  6411  0612                     	;# 
  6412  0613                     	;# 
  6413  0614                     	;# 
  6414  0616                     	;# 
  6415  0617                     	;# 
  6416  0618                     	;# 
  6417  0619                     	;# 
  6418  061A                     	;# 
  6419  061B                     	;# 
  6420  061C                     	;# 
  6421  061D                     	;# 
  6422  061E                     	;# 
  6423  068C                     	;# 
  6424  068D                     	;# 
  6425  068E                     	;# 
  6426  068F                     	;# 
  6427  0690                     	;# 
  6428  0691                     	;# 
  6429  0692                     	;# 
  6430  0693                     	;# 
  6431  0694                     	;# 
  6432  070C                     	;# 
  6433  070D                     	;# 
  6434  070E                     	;# 
  6435  070F                     	;# 
  6436  0710                     	;# 
  6437  0711                     	;# 
  6438  0712                     	;# 
  6439  0713                     	;# 
  6440  0714                     	;# 
  6441  0716                     	;# 
  6442  0717                     	;# 
  6443  0718                     	;# 
  6444  0719                     	;# 
  6445  071A                     	;# 
  6446  071B                     	;# 
  6447  071C                     	;# 
  6448  071D                     	;# 
  6449  071E                     	;# 
  6450  0796                     	;# 
  6451  0797                     	;# 
  6452  0798                     	;# 
  6453  0799                     	;# 
  6454  079A                     	;# 
  6455  079B                     	;# 
  6456  080C                     	;# 
  6457  080D                     	;# 
  6458  080E                     	;# 
  6459  080F                     	;# 
  6460  0810                     	;# 
  6461  0811                     	;# 
  6462  0812                     	;# 
  6463  0813                     	;# 
  6464  0814                     	;# 
  6465  081A                     	;# 
  6466  081B                     	;# 
  6467  081C                     	;# 
  6468  081D                     	;# 
  6469  081E                     	;# 
  6470  081F                     	;# 
  6471  088C                     	;# 
  6472  088D                     	;# 
  6473  088E                     	;# 
  6474  088F                     	;# 
  6475  0890                     	;# 
  6476  0891                     	;# 
  6477  0892                     	;# 
  6478  0893                     	;# 
  6479  0895                     	;# 
  6480  0896                     	;# 
  6481  0897                     	;# 
  6482  0898                     	;# 
  6483  0899                     	;# 
  6484  089A                     	;# 
  6485  089B                     	;# 
  6486  090C                     	;# 
  6487  090E                     	;# 
  6488  090F                     	;# 
  6489  091F                     	;# 
  6490  091F                     	;# 
  6491  098F                     	;# 
  6492  098F                     	;# 
  6493  0990                     	;# 
  6494  0991                     	;# 
  6495  0992                     	;# 
  6496  0993                     	;# 
  6497  0994                     	;# 
  6498  0995                     	;# 
  6499  0996                     	;# 
  6500  0997                     	;# 
  6501  0E0F                     	;# 
  6502  0E10                     	;# 
  6503  0E11                     	;# 
  6504  0E12                     	;# 
  6505  0E13                     	;# 
  6506  0E14                     	;# 
  6507  0E15                     	;# 
  6508  0E16                     	;# 
  6509  0E17                     	;# 
  6510  0E18                     	;# 
  6511  0E19                     	;# 
  6512  0E1A                     	;# 
  6513  0E1B                     	;# 
  6514  0E1C                     	;# 
  6515  0E1D                     	;# 
  6516  0E1E                     	;# 
  6517  0E1F                     	;# 
  6518  0E20                     	;# 
  6519  0E21                     	;# 
  6520  0E22                     	;# 
  6521  0E23                     	;# 
  6522  0E24                     	;# 
  6523  0E25                     	;# 
  6524  0E26                     	;# 
  6525  0E27                     	;# 
  6526  0E28                     	;# 
  6527  0E29                     	;# 
  6528  0E2A                     	;# 
  6529  0E2B                     	;# 
  6530  0E2C                     	;# 
  6531  0E2D                     	;# 
  6532  0E2E                     	;# 
  6533  0E2F                     	;# 
  6534  0E30                     	;# 
  6535  0E31                     	;# 
  6536  0E32                     	;# 
  6537  0E33                     	;# 
  6538  0E34                     	;# 
  6539  0E35                     	;# 
  6540  0E36                     	;# 
  6541  0E37                     	;# 
  6542  0E8F                     	;# 
  6543  0E90                     	;# 
  6544  0E91                     	;# 
  6545  0E92                     	;# 
  6546  0E93                     	;# 
  6547  0E94                     	;# 
  6548  0E95                     	;# 
  6549  0E96                     	;# 
  6550  0E97                     	;# 
  6551  0E9C                     	;# 
  6552  0E9D                     	;# 
  6553  0E9E                     	;# 
  6554  0EA1                     	;# 
  6555  0EA2                     	;# 
  6556  0EA3                     	;# 
  6557  0EA4                     	;# 
  6558  0EA5                     	;# 
  6559  0EA9                     	;# 
  6560  0EAA                     	;# 
  6561  0EAB                     	;# 
  6562  0EAC                     	;# 
  6563  0EB1                     	;# 
  6564  0EB2                     	;# 
  6565  0EB3                     	;# 
  6566  0EB8                     	;# 
  6567  0EB9                     	;# 
  6568  0EBA                     	;# 
  6569  0EBB                     	;# 
  6570  0EBC                     	;# 
  6571  0EBD                     	;# 
  6572  0EBE                     	;# 
  6573  0EC3                     	;# 
  6574  0EC5                     	;# 
  6575  0EC6                     	;# 
  6576  0EC7                     	;# 
  6577  0EC8                     	;# 
  6578  0EC9                     	;# 
  6579  0ECA                     	;# 
  6580  0ECB                     	;# 
  6581  0ECC                     	;# 
  6582  0F10                     	;# 
  6583  0F11                     	;# 
  6584  0F12                     	;# 
  6585  0F13                     	;# 
  6586  0F14                     	;# 
  6587  0F15                     	;# 
  6588  0F16                     	;# 
  6589  0F17                     	;# 
  6590  0F18                     	;# 
  6591  0F19                     	;# 
  6592  0F1A                     	;# 
  6593  0F1B                     	;# 
  6594  0F1C                     	;# 
  6595  0F1D                     	;# 
  6596  0F1E                     	;# 
  6597  0F1F                     	;# 
  6598  0F20                     	;# 
  6599  0F21                     	;# 
  6600  0F22                     	;# 
  6601  0F23                     	;# 
  6602  0F24                     	;# 
  6603  0F25                     	;# 
  6604  0F26                     	;# 
  6605  0F27                     	;# 
  6606  0F28                     	;# 
  6607  0F29                     	;# 
  6608  0F2A                     	;# 
  6609  0F2B                     	;# 
  6610  0F2C                     	;# 
  6611  0F2D                     	;# 
  6612  0F2E                     	;# 
  6613  0F2F                     	;# 
  6614  0F30                     	;# 
  6615  0F31                     	;# 
  6616  0F32                     	;# 
  6617  0F38                     	;# 
  6618  0F39                     	;# 
  6619  0F3A                     	;# 
  6620  0F3B                     	;# 
  6621  0F3C                     	;# 
  6622  0F3D                     	;# 
  6623  0F3E                     	;# 
  6624  0F3F                     	;# 
  6625  0F40                     	;# 
  6626  0F41                     	;# 
  6627  0F43                     	;# 
  6628  0F44                     	;# 
  6629  0F45                     	;# 
  6630  0F46                     	;# 
  6631  0F47                     	;# 
  6632  0F48                     	;# 
  6633  0F49                     	;# 
  6634  0F4A                     	;# 
  6635  0F4B                     	;# 
  6636  0F4C                     	;# 
  6637  0F4E                     	;# 
  6638  0F4F                     	;# 
  6639  0F50                     	;# 
  6640  0F51                     	;# 
  6641  0F52                     	;# 
  6642  0F53                     	;# 
  6643  0F54                     	;# 
  6644  0F55                     	;# 
  6645  0F56                     	;# 
  6646  0F57                     	;# 
  6647  0F59                     	;# 
  6648  0F5A                     	;# 
  6649  0F5B                     	;# 
  6650  0F5C                     	;# 
  6651  0F5D                     	;# 
  6652  0F61                     	;# 
  6653  0F62                     	;# 
  6654  0F64                     	;# 
  6655  0F65                     	;# 
  6656  0F66                     	;# 
  6657  0F67                     	;# 
  6658  0F68                     	;# 
  6659  0F69                     	;# 
  6660  0F6A                     	;# 
  6661  0F6B                     	;# 
  6662  0F6C                     	;# 
  6663  0F6D                     	;# 
  6664  0FE4                     	;# 
  6665  0FE5                     	;# 
  6666  0FE6                     	;# 
  6667  0FE7                     	;# 
  6668  0FE8                     	;# 
  6669  0FE9                     	;# 
  6670  0FEA                     	;# 
  6671  0FEB                     	;# 
  6672  0FED                     	;# 
  6673  0FEE                     	;# 
  6674  0FEF                     	;# 
  6675  0000                     	;# 
  6676  0001                     	;# 
  6677  0002                     	;# 
  6678  0003                     	;# 
  6679  0004                     	;# 
  6680  0005                     	;# 
  6681  0006                     	;# 
  6682  0007                     	;# 
  6683  0008                     	;# 
  6684  0009                     	;# 
  6685  000A                     	;# 
  6686  000B                     	;# 
  6687  000C                     	;# 
  6688  000D                     	;# 
  6689  000E                     	;# 
  6690  000F                     	;# 
  6691  0010                     	;# 
  6692  0011                     	;# 
  6693  0012                     	;# 
  6694  0013                     	;# 
  6695  0014                     	;# 
  6696  0015                     	;# 
  6697  0016                     	;# 
  6698  0017                     	;# 
  6699  0018                     	;# 
  6700  0019                     	;# 
  6701  001A                     	;# 
  6702  001C                     	;# 
  6703  001C                     	;# 
  6704  001D                     	;# 
  6705  001D                     	;# 
  6706  001E                     	;# 
  6707  001F                     	;# 
  6708  008C                     	;# 
  6709  008C                     	;# 
  6710  008D                     	;# 
  6711  008E                     	;# 
  6712  008E                     	;# 
  6713  008F                     	;# 
  6714  0090                     	;# 
  6715  0090                     	;# 
  6716  0091                     	;# 
  6717  0093                     	;# 
  6718  0094                     	;# 
  6719  0095                     	;# 
  6720  0096                     	;# 
  6721  0097                     	;# 
  6722  0098                     	;# 
  6723  0099                     	;# 
  6724  009A                     	;# 
  6725  009B                     	;# 
  6726  009C                     	;# 
  6727  009D                     	;# 
  6728  009E                     	;# 
  6729  010C                     	;# 
  6730  010D                     	;# 
  6731  010E                     	;# 
  6732  010E                     	;# 
  6733  010F                     	;# 
  6734  0110                     	;# 
  6735  0110                     	;# 
  6736  0111                     	;# 
  6737  0112                     	;# 
  6738  0112                     	;# 
  6739  0113                     	;# 
  6740  0114                     	;# 
  6741  0114                     	;# 
  6742  0115                     	;# 
  6743  0116                     	;# 
  6744  0116                     	;# 
  6745  0117                     	;# 
  6746  0119                     	;# 
  6747  0119                     	;# 
  6748  0119                     	;# 
  6749  011A                     	;# 
  6750  011A                     	;# 
  6751  011A                     	;# 
  6752  011B                     	;# 
  6753  011B                     	;# 
  6754  011B                     	;# 
  6755  011B                     	;# 
  6756  011B                     	;# 
  6757  011C                     	;# 
  6758  011C                     	;# 
  6759  011C                     	;# 
  6760  011D                     	;# 
  6761  011D                     	;# 
  6762  011D                     	;# 
  6763  011E                     	;# 
  6764  011E                     	;# 
  6765  011E                     	;# 
  6766  011F                     	;# 
  6767  011F                     	;# 
  6768  011F                     	;# 
  6769  011F                     	;# 
  6770  011F                     	;# 
  6771  018C                     	;# 
  6772  018D                     	;# 
  6773  018E                     	;# 
  6774  018F                     	;# 
  6775  0190                     	;# 
  6776  0191                     	;# 
  6777  0192                     	;# 
  6778  0196                     	;# 
  6779  0197                     	;# 
  6780  0198                     	;# 
  6781  0199                     	;# 
  6782  019A                     	;# 
  6783  019B                     	;# 
  6784  019C                     	;# 
  6785  020C                     	;# 
  6786  020C                     	;# 
  6787  020D                     	;# 
  6788  020E                     	;# 
  6789  020F                     	;# 
  6790  020F                     	;# 
  6791  0210                     	;# 
  6792  0210                     	;# 
  6793  0211                     	;# 
  6794  0211                     	;# 
  6795  0212                     	;# 
  6796  0212                     	;# 
  6797  0213                     	;# 
  6798  0214                     	;# 
  6799  0215                     	;# 
  6800  0215                     	;# 
  6801  0216                     	;# 
  6802  0216                     	;# 
  6803  0217                     	;# 
  6804  0217                     	;# 
  6805  0218                     	;# 
  6806  0218                     	;# 
  6807  0219                     	;# 
  6808  021A                     	;# 
  6809  021B                     	;# 
  6810  021B                     	;# 
  6811  021C                     	;# 
  6812  021C                     	;# 
  6813  021D                     	;# 
  6814  021D                     	;# 
  6815  021E                     	;# 
  6816  021F                     	;# 
  6817  028C                     	;# 
  6818  028C                     	;# 
  6819  028D                     	;# 
  6820  028D                     	;# 
  6821  028E                     	;# 
  6822  028F                     	;# 
  6823  0290                     	;# 
  6824  0290                     	;# 
  6825  0291                     	;# 
  6826  0292                     	;# 
  6827  0292                     	;# 
  6828  0293                     	;# 
  6829  0293                     	;# 
  6830  0294                     	;# 
  6831  0295                     	;# 
  6832  0296                     	;# 
  6833  0296                     	;# 
  6834  0297                     	;# 
  6835  0298                     	;# 
  6836  0298                     	;# 
  6837  0299                     	;# 
  6838  0299                     	;# 
  6839  029A                     	;# 
  6840  029B                     	;# 
  6841  029C                     	;# 
  6842  029C                     	;# 
  6843  029D                     	;# 
  6844  030C                     	;# 
  6845  030C                     	;# 
  6846  030D                     	;# 
  6847  030E                     	;# 
  6848  030F                     	;# 
  6849  0310                     	;# 
  6850  0310                     	;# 
  6851  0311                     	;# 
  6852  0312                     	;# 
  6853  0313                     	;# 
  6854  0314                     	;# 
  6855  0314                     	;# 
  6856  0315                     	;# 
  6857  0316                     	;# 
  6858  0317                     	;# 
  6859  0318                     	;# 
  6860  0318                     	;# 
  6861  0319                     	;# 
  6862  031A                     	;# 
  6863  031B                     	;# 
  6864  031C                     	;# 
  6865  031C                     	;# 
  6866  031D                     	;# 
  6867  031E                     	;# 
  6868  031F                     	;# 
  6869  038C                     	;# 
  6870  038C                     	;# 
  6871  038D                     	;# 
  6872  038E                     	;# 
  6873  0390                     	;# 
  6874  0390                     	;# 
  6875  0391                     	;# 
  6876  0392                     	;# 
  6877  040C                     	;# 
  6878  040D                     	;# 
  6879  040E                     	;# 
  6880  040F                     	;# 
  6881  0410                     	;# 
  6882  0411                     	;# 
  6883  0416                     	;# 
  6884  0416                     	;# 
  6885  0417                     	;# 
  6886  0418                     	;# 
  6887  0418                     	;# 
  6888  0419                     	;# 
  6889  041A                     	;# 
  6890  041A                     	;# 
  6891  041B                     	;# 
  6892  041C                     	;# 
  6893  041C                     	;# 
  6894  041D                     	;# 
  6895  041E                     	;# 
  6896  041F                     	;# 
  6897  048C                     	;# 
  6898  048C                     	;# 
  6899  048D                     	;# 
  6900  048E                     	;# 
  6901  048F                     	;# 
  6902  048F                     	;# 
  6903  0490                     	;# 
  6904  0491                     	;# 
  6905  0492                     	;# 
  6906  0492                     	;# 
  6907  0493                     	;# 
  6908  0494                     	;# 
  6909  0495                     	;# 
  6910  0495                     	;# 
  6911  0496                     	;# 
  6912  0497                     	;# 
  6913  0498                     	;# 
  6914  0499                     	;# 
  6915  049A                     	;# 
  6916  049B                     	;# 
  6917  049C                     	;# 
  6918  049D                     	;# 
  6919  050C                     	;# 
  6920  050C                     	;# 
  6921  050D                     	;# 
  6922  050E                     	;# 
  6923  050F                     	;# 
  6924  050F                     	;# 
  6925  0510                     	;# 
  6926  0511                     	;# 
  6927  0512                     	;# 
  6928  0512                     	;# 
  6929  0513                     	;# 
  6930  0514                     	;# 
  6931  0515                     	;# 
  6932  0515                     	;# 
  6933  0516                     	;# 
  6934  0517                     	;# 
  6935  0518                     	;# 
  6936  0519                     	;# 
  6937  051A                     	;# 
  6938  051B                     	;# 
  6939  051C                     	;# 
  6940  051D                     	;# 
  6941  058C                     	;# 
  6942  058C                     	;# 
  6943  058D                     	;# 
  6944  058E                     	;# 
  6945  058F                     	;# 
  6946  058F                     	;# 
  6947  0590                     	;# 
  6948  0591                     	;# 
  6949  0592                     	;# 
  6950  0593                     	;# 
  6951  060C                     	;# 
  6952  060D                     	;# 
  6953  060E                     	;# 
  6954  060F                     	;# 
  6955  0610                     	;# 
  6956  0611                     	;# 
  6957  0612                     	;# 
  6958  0613                     	;# 
  6959  0614                     	;# 
  6960  0616                     	;# 
  6961  0617                     	;# 
  6962  0618                     	;# 
  6963  0619                     	;# 
  6964  061A                     	;# 
  6965  061B                     	;# 
  6966  061C                     	;# 
  6967  061D                     	;# 
  6968  061E                     	;# 
  6969  068C                     	;# 
  6970  068D                     	;# 
  6971  068E                     	;# 
  6972  068F                     	;# 
  6973  0690                     	;# 
  6974  0691                     	;# 
  6975  0692                     	;# 
  6976  0693                     	;# 
  6977  0694                     	;# 
  6978  070C                     	;# 
  6979  070D                     	;# 
  6980  070E                     	;# 
  6981  070F                     	;# 
  6982  0710                     	;# 
  6983  0711                     	;# 
  6984  0712                     	;# 
  6985  0713                     	;# 
  6986  0714                     	;# 
  6987  0716                     	;# 
  6988  0717                     	;# 
  6989  0718                     	;# 
  6990  0719                     	;# 
  6991  071A                     	;# 
  6992  071B                     	;# 
  6993  071C                     	;# 
  6994  071D                     	;# 
  6995  071E                     	;# 
  6996  0796                     	;# 
  6997  0797                     	;# 
  6998  0798                     	;# 
  6999  0799                     	;# 
  7000  079A                     	;# 
  7001  079B                     	;# 
  7002  080C                     	;# 
  7003  080D                     	;# 
  7004  080E                     	;# 
  7005  080F                     	;# 
  7006  0810                     	;# 
  7007  0811                     	;# 
  7008  0812                     	;# 
  7009  0813                     	;# 
  7010  0814                     	;# 
  7011  081A                     	;# 
  7012  081B                     	;# 
  7013  081C                     	;# 
  7014  081D                     	;# 
  7015  081E                     	;# 
  7016  081F                     	;# 
  7017  088C                     	;# 
  7018  088D                     	;# 
  7019  088E                     	;# 
  7020  088F                     	;# 
  7021  0890                     	;# 
  7022  0891                     	;# 
  7023  0892                     	;# 
  7024  0893                     	;# 
  7025  0895                     	;# 
  7026  0896                     	;# 
  7027  0897                     	;# 
  7028  0898                     	;# 
  7029  0899                     	;# 
  7030  089A                     	;# 
  7031  089B                     	;# 
  7032  090C                     	;# 
  7033  090E                     	;# 
  7034  090F                     	;# 
  7035  091F                     	;# 
  7036  091F                     	;# 
  7037  098F                     	;# 
  7038  098F                     	;# 
  7039  0990                     	;# 
  7040  0991                     	;# 
  7041  0992                     	;# 
  7042  0993                     	;# 
  7043  0994                     	;# 
  7044  0995                     	;# 
  7045  0996                     	;# 
  7046  0997                     	;# 
  7047  0E0F                     	;# 
  7048  0E10                     	;# 
  7049  0E11                     	;# 
  7050  0E12                     	;# 
  7051  0E13                     	;# 
  7052  0E14                     	;# 
  7053  0E15                     	;# 
  7054  0E16                     	;# 
  7055  0E17                     	;# 
  7056  0E18                     	;# 
  7057  0E19                     	;# 
  7058  0E1A                     	;# 
  7059  0E1B                     	;# 
  7060  0E1C                     	;# 
  7061  0E1D                     	;# 
  7062  0E1E                     	;# 
  7063  0E1F                     	;# 
  7064  0E20                     	;# 
  7065  0E21                     	;# 
  7066  0E22                     	;# 
  7067  0E23                     	;# 
  7068  0E24                     	;# 
  7069  0E25                     	;# 
  7070  0E26                     	;# 
  7071  0E27                     	;# 
  7072  0E28                     	;# 
  7073  0E29                     	;# 
  7074  0E2A                     	;# 
  7075  0E2B                     	;# 
  7076  0E2C                     	;# 
  7077  0E2D                     	;# 
  7078  0E2E                     	;# 
  7079  0E2F                     	;# 
  7080  0E30                     	;# 
  7081  0E31                     	;# 
  7082  0E32                     	;# 
  7083  0E33                     	;# 
  7084  0E34                     	;# 
  7085  0E35                     	;# 
  7086  0E36                     	;# 
  7087  0E37                     	;# 
  7088  0E8F                     	;# 
  7089  0E90                     	;# 
  7090  0E91                     	;# 
  7091  0E92                     	;# 
  7092  0E93                     	;# 
  7093  0E94                     	;# 
  7094  0E95                     	;# 
  7095  0E96                     	;# 
  7096  0E97                     	;# 
  7097  0E9C                     	;# 
  7098  0E9D                     	;# 
  7099  0E9E                     	;# 
  7100  0EA1                     	;# 
  7101  0EA2                     	;# 
  7102  0EA3                     	;# 
  7103  0EA4                     	;# 
  7104  0EA5                     	;# 
  7105  0EA9                     	;# 
  7106  0EAA                     	;# 
  7107  0EAB                     	;# 
  7108  0EAC                     	;# 
  7109  0EB1                     	;# 
  7110  0EB2                     	;# 
  7111  0EB3                     	;# 
  7112  0EB8                     	;# 
  7113  0EB9                     	;# 
  7114  0EBA                     	;# 
  7115  0EBB                     	;# 
  7116  0EBC                     	;# 
  7117  0EBD                     	;# 
  7118  0EBE                     	;# 
  7119  0EC3                     	;# 
  7120  0EC5                     	;# 
  7121  0EC6                     	;# 
  7122  0EC7                     	;# 
  7123  0EC8                     	;# 
  7124  0EC9                     	;# 
  7125  0ECA                     	;# 
  7126  0ECB                     	;# 
  7127  0ECC                     	;# 
  7128  0F10                     	;# 
  7129  0F11                     	;# 
  7130  0F12                     	;# 
  7131  0F13                     	;# 
  7132  0F14                     	;# 
  7133  0F15                     	;# 
  7134  0F16                     	;# 
  7135  0F17                     	;# 
  7136  0F18                     	;# 
  7137  0F19                     	;# 
  7138  0F1A                     	;# 
  7139  0F1B                     	;# 
  7140  0F1C                     	;# 
  7141  0F1D                     	;# 
  7142  0F1E                     	;# 
  7143  0F1F                     	;# 
  7144  0F20                     	;# 
  7145  0F21                     	;# 
  7146  0F22                     	;# 
  7147  0F23                     	;# 
  7148  0F24                     	;# 
  7149  0F25                     	;# 
  7150  0F26                     	;# 
  7151  0F27                     	;# 
  7152  0F28                     	;# 
  7153  0F29                     	;# 
  7154  0F2A                     	;# 
  7155  0F2B                     	;# 
  7156  0F2C                     	;# 
  7157  0F2D                     	;# 
  7158  0F2E                     	;# 
  7159  0F2F                     	;# 
  7160  0F30                     	;# 
  7161  0F31                     	;# 
  7162  0F32                     	;# 
  7163  0F38                     	;# 
  7164  0F39                     	;# 
  7165  0F3A                     	;# 
  7166  0F3B                     	;# 
  7167  0F3C                     	;# 
  7168  0F3D                     	;# 
  7169  0F3E                     	;# 
  7170  0F3F                     	;# 
  7171  0F40                     	;# 
  7172  0F41                     	;# 
  7173  0F43                     	;# 
  7174  0F44                     	;# 
  7175  0F45                     	;# 
  7176  0F46                     	;# 
  7177  0F47                     	;# 
  7178  0F48                     	;# 
  7179  0F49                     	;# 
  7180  0F4A                     	;# 
  7181  0F4B                     	;# 
  7182  0F4C                     	;# 
  7183  0F4E                     	;# 
  7184  0F4F                     	;# 
  7185  0F50                     	;# 
  7186  0F51                     	;# 
  7187  0F52                     	;# 
  7188  0F53                     	;# 
  7189  0F54                     	;# 
  7190  0F55                     	;# 
  7191  0F56                     	;# 
  7192  0F57                     	;# 
  7193  0F59                     	;# 
  7194  0F5A                     	;# 
  7195  0F5B                     	;# 
  7196  0F5C                     	;# 
  7197  0F5D                     	;# 
  7198  0F61                     	;# 
  7199  0F62                     	;# 
  7200  0F64                     	;# 
  7201  0F65                     	;# 
  7202  0F66                     	;# 
  7203  0F67                     	;# 
  7204  0F68                     	;# 
  7205  0F69                     	;# 
  7206  0F6A                     	;# 
  7207  0F6B                     	;# 
  7208  0F6C                     	;# 
  7209  0F6D                     	;# 
  7210  0FE4                     	;# 
  7211  0FE5                     	;# 
  7212  0FE6                     	;# 
  7213  0FE7                     	;# 
  7214  0FE8                     	;# 
  7215  0FE9                     	;# 
  7216  0FEA                     	;# 
  7217  0FEB                     	;# 
  7218  0FED                     	;# 
  7219  0FEE                     	;# 
  7220  0FEF                     	;# 
  7221  0000                     	;# 
  7222  0001                     	;# 
  7223  0002                     	;# 
  7224  0003                     	;# 
  7225  0004                     	;# 
  7226  0005                     	;# 
  7227  0006                     	;# 
  7228  0007                     	;# 
  7229  0008                     	;# 
  7230  0009                     	;# 
  7231  000A                     	;# 
  7232  000B                     	;# 
  7233  000C                     	;# 
  7234  000D                     	;# 
  7235  000E                     	;# 
  7236  000F                     	;# 
  7237  0010                     	;# 
  7238  0011                     	;# 
  7239  0012                     	;# 
  7240  0013                     	;# 
  7241  0014                     	;# 
  7242  0015                     	;# 
  7243  0016                     	;# 
  7244  0017                     	;# 
  7245  0018                     	;# 
  7246  0019                     	;# 
  7247  001A                     	;# 
  7248  001C                     	;# 
  7249  001C                     	;# 
  7250  001D                     	;# 
  7251  001D                     	;# 
  7252  001E                     	;# 
  7253  001F                     	;# 
  7254  008C                     	;# 
  7255  008C                     	;# 
  7256  008D                     	;# 
  7257  008E                     	;# 
  7258  008E                     	;# 
  7259  008F                     	;# 
  7260  0090                     	;# 
  7261  0090                     	;# 
  7262  0091                     	;# 
  7263  0093                     	;# 
  7264  0094                     	;# 
  7265  0095                     	;# 
  7266  0096                     	;# 
  7267  0097                     	;# 
  7268  0098                     	;# 
  7269  0099                     	;# 
  7270  009A                     	;# 
  7271  009B                     	;# 
  7272  009C                     	;# 
  7273  009D                     	;# 
  7274  009E                     	;# 
  7275  010C                     	;# 
  7276  010D                     	;# 
  7277  010E                     	;# 
  7278  010E                     	;# 
  7279  010F                     	;# 
  7280  0110                     	;# 
  7281  0110                     	;# 
  7282  0111                     	;# 
  7283  0112                     	;# 
  7284  0112                     	;# 
  7285  0113                     	;# 
  7286  0114                     	;# 
  7287  0114                     	;# 
  7288  0115                     	;# 
  7289  0116                     	;# 
  7290  0116                     	;# 
  7291  0117                     	;# 
  7292  0119                     	;# 
  7293  0119                     	;# 
  7294  0119                     	;# 
  7295  011A                     	;# 
  7296  011A                     	;# 
  7297  011A                     	;# 
  7298  011B                     	;# 
  7299  011B                     	;# 
  7300  011B                     	;# 
  7301  011B                     	;# 
  7302  011B                     	;# 
  7303  011C                     	;# 
  7304  011C                     	;# 
  7305  011C                     	;# 
  7306  011D                     	;# 
  7307  011D                     	;# 
  7308  011D                     	;# 
  7309  011E                     	;# 
  7310  011E                     	;# 
  7311  011E                     	;# 
  7312  011F                     	;# 
  7313  011F                     	;# 
  7314  011F                     	;# 
  7315  011F                     	;# 
  7316  011F                     	;# 
  7317  018C                     	;# 
  7318  018D                     	;# 
  7319  018E                     	;# 
  7320  018F                     	;# 
  7321  0190                     	;# 
  7322  0191                     	;# 
  7323  0192                     	;# 
  7324  0196                     	;# 
  7325  0197                     	;# 
  7326  0198                     	;# 
  7327  0199                     	;# 
  7328  019A                     	;# 
  7329  019B                     	;# 
  7330  019C                     	;# 
  7331  020C                     	;# 
  7332  020C                     	;# 
  7333  020D                     	;# 
  7334  020E                     	;# 
  7335  020F                     	;# 
  7336  020F                     	;# 
  7337  0210                     	;# 
  7338  0210                     	;# 
  7339  0211                     	;# 
  7340  0211                     	;# 
  7341  0212                     	;# 
  7342  0212                     	;# 
  7343  0213                     	;# 
  7344  0214                     	;# 
  7345  0215                     	;# 
  7346  0215                     	;# 
  7347  0216                     	;# 
  7348  0216                     	;# 
  7349  0217                     	;# 
  7350  0217                     	;# 
  7351  0218                     	;# 
  7352  0218                     	;# 
  7353  0219                     	;# 
  7354  021A                     	;# 
  7355  021B                     	;# 
  7356  021B                     	;# 
  7357  021C                     	;# 
  7358  021C                     	;# 
  7359  021D                     	;# 
  7360  021D                     	;# 
  7361  021E                     	;# 
  7362  021F                     	;# 
  7363  028C                     	;# 
  7364  028C                     	;# 
  7365  028D                     	;# 
  7366  028D                     	;# 
  7367  028E                     	;# 
  7368  028F                     	;# 
  7369  0290                     	;# 
  7370  0290                     	;# 
  7371  0291                     	;# 
  7372  0292                     	;# 
  7373  0292                     	;# 
  7374  0293                     	;# 
  7375  0293                     	;# 
  7376  0294                     	;# 
  7377  0295                     	;# 
  7378  0296                     	;# 
  7379  0296                     	;# 
  7380  0297                     	;# 
  7381  0298                     	;# 
  7382  0298                     	;# 
  7383  0299                     	;# 
  7384  0299                     	;# 
  7385  029A                     	;# 
  7386  029B                     	;# 
  7387  029C                     	;# 
  7388  029C                     	;# 
  7389  029D                     	;# 
  7390  030C                     	;# 
  7391  030C                     	;# 
  7392  030D                     	;# 
  7393  030E                     	;# 
  7394  030F                     	;# 
  7395  0310                     	;# 
  7396  0310                     	;# 
  7397  0311                     	;# 
  7398  0312                     	;# 
  7399  0313                     	;# 
  7400  0314                     	;# 
  7401  0314                     	;# 
  7402  0315                     	;# 
  7403  0316                     	;# 
  7404  0317                     	;# 
  7405  0318                     	;# 
  7406  0318                     	;# 
  7407  0319                     	;# 
  7408  031A                     	;# 
  7409  031B                     	;# 
  7410  031C                     	;# 
  7411  031C                     	;# 
  7412  031D                     	;# 
  7413  031E                     	;# 
  7414  031F                     	;# 
  7415  038C                     	;# 
  7416  038C                     	;# 
  7417  038D                     	;# 
  7418  038E                     	;# 
  7419  0390                     	;# 
  7420  0390                     	;# 
  7421  0391                     	;# 
  7422  0392                     	;# 
  7423  040C                     	;# 
  7424  040D                     	;# 
  7425  040E                     	;# 
  7426  040F                     	;# 
  7427  0410                     	;# 
  7428  0411                     	;# 
  7429  0416                     	;# 
  7430  0416                     	;# 
  7431  0417                     	;# 
  7432  0418                     	;# 
  7433  0418                     	;# 
  7434  0419                     	;# 
  7435  041A                     	;# 
  7436  041A                     	;# 
  7437  041B                     	;# 
  7438  041C                     	;# 
  7439  041C                     	;# 
  7440  041D                     	;# 
  7441  041E                     	;# 
  7442  041F                     	;# 
  7443  048C                     	;# 
  7444  048C                     	;# 
  7445  048D                     	;# 
  7446  048E                     	;# 
  7447  048F                     	;# 
  7448  048F                     	;# 
  7449  0490                     	;# 
  7450  0491                     	;# 
  7451  0492                     	;# 
  7452  0492                     	;# 
  7453  0493                     	;# 
  7454  0494                     	;# 
  7455  0495                     	;# 
  7456  0495                     	;# 
  7457  0496                     	;# 
  7458  0497                     	;# 
  7459  0498                     	;# 
  7460  0499                     	;# 
  7461  049A                     	;# 
  7462  049B                     	;# 
  7463  049C                     	;# 
  7464  049D                     	;# 
  7465  050C                     	;# 
  7466  050C                     	;# 
  7467  050D                     	;# 
  7468  050E                     	;# 
  7469  050F                     	;# 
  7470  050F                     	;# 
  7471  0510                     	;# 
  7472  0511                     	;# 
  7473  0512                     	;# 
  7474  0512                     	;# 
  7475  0513                     	;# 
  7476  0514                     	;# 
  7477  0515                     	;# 
  7478  0515                     	;# 
  7479  0516                     	;# 
  7480  0517                     	;# 
  7481  0518                     	;# 
  7482  0519                     	;# 
  7483  051A                     	;# 
  7484  051B                     	;# 
  7485  051C                     	;# 
  7486  051D                     	;# 
  7487  058C                     	;# 
  7488  058C                     	;# 
  7489  058D                     	;# 
  7490  058E                     	;# 
  7491  058F                     	;# 
  7492  058F                     	;# 
  7493  0590                     	;# 
  7494  0591                     	;# 
  7495  0592                     	;# 
  7496  0593                     	;# 
  7497  060C                     	;# 
  7498  060D                     	;# 
  7499  060E                     	;# 
  7500  060F                     	;# 
  7501  0610                     	;# 
  7502  0611                     	;# 
  7503  0612                     	;# 
  7504  0613                     	;# 
  7505  0614                     	;# 
  7506  0616                     	;# 
  7507  0617                     	;# 
  7508  0618                     	;# 
  7509  0619                     	;# 
  7510  061A                     	;# 
  7511  061B                     	;# 
  7512  061C                     	;# 
  7513  061D                     	;# 
  7514  061E                     	;# 
  7515  068C                     	;# 
  7516  068D                     	;# 
  7517  068E                     	;# 
  7518  068F                     	;# 
  7519  0690                     	;# 
  7520  0691                     	;# 
  7521  0692                     	;# 
  7522  0693                     	;# 
  7523  0694                     	;# 
  7524  070C                     	;# 
  7525  070D                     	;# 
  7526  070E                     	;# 
  7527  070F                     	;# 
  7528  0710                     	;# 
  7529  0711                     	;# 
  7530  0712                     	;# 
  7531  0713                     	;# 
  7532  0714                     	;# 
  7533  0716                     	;# 
  7534  0717                     	;# 
  7535  0718                     	;# 
  7536  0719                     	;# 
  7537  071A                     	;# 
  7538  071B                     	;# 
  7539  071C                     	;# 
  7540  071D                     	;# 
  7541  071E                     	;# 
  7542  0796                     	;# 
  7543  0797                     	;# 
  7544  0798                     	;# 
  7545  0799                     	;# 
  7546  079A                     	;# 
  7547  079B                     	;# 
  7548  080C                     	;# 
  7549  080D                     	;# 
  7550  080E                     	;# 
  7551  080F                     	;# 
  7552  0810                     	;# 
  7553  0811                     	;# 
  7554  0812                     	;# 
  7555  0813                     	;# 
  7556  0814                     	;# 
  7557  081A                     	;# 
  7558  081B                     	;# 
  7559  081C                     	;# 
  7560  081D                     	;# 
  7561  081E                     	;# 
  7562  081F                     	;# 
  7563  088C                     	;# 
  7564  088D                     	;# 
  7565  088E                     	;# 
  7566  088F                     	;# 
  7567  0890                     	;# 
  7568  0891                     	;# 
  7569  0892                     	;# 
  7570  0893                     	;# 
  7571  0895                     	;# 
  7572  0896                     	;# 
  7573  0897                     	;# 
  7574  0898                     	;# 
  7575  0899                     	;# 
  7576  089A                     	;# 
  7577  089B                     	;# 
  7578  090C                     	;# 
  7579  090E                     	;# 
  7580  090F                     	;# 
  7581  091F                     	;# 
  7582  091F                     	;# 
  7583  098F                     	;# 
  7584  098F                     	;# 
  7585  0990                     	;# 
  7586  0991                     	;# 
  7587  0992                     	;# 
  7588  0993                     	;# 
  7589  0994                     	;# 
  7590  0995                     	;# 
  7591  0996                     	;# 
  7592  0997                     	;# 
  7593  0E0F                     	;# 
  7594  0E10                     	;# 
  7595  0E11                     	;# 
  7596  0E12                     	;# 
  7597  0E13                     	;# 
  7598  0E14                     	;# 
  7599  0E15                     	;# 
  7600  0E16                     	;# 
  7601  0E17                     	;# 
  7602  0E18                     	;# 
  7603  0E19                     	;# 
  7604  0E1A                     	;# 
  7605  0E1B                     	;# 
  7606  0E1C                     	;# 
  7607  0E1D                     	;# 
  7608  0E1E                     	;# 
  7609  0E1F                     	;# 
  7610  0E20                     	;# 
  7611  0E21                     	;# 
  7612  0E22                     	;# 
  7613  0E23                     	;# 
  7614  0E24                     	;# 
  7615  0E25                     	;# 
  7616  0E26                     	;# 
  7617  0E27                     	;# 
  7618  0E28                     	;# 
  7619  0E29                     	;# 
  7620  0E2A                     	;# 
  7621  0E2B                     	;# 
  7622  0E2C                     	;# 
  7623  0E2D                     	;# 
  7624  0E2E                     	;# 
  7625  0E2F                     	;# 
  7626  0E30                     	;# 
  7627  0E31                     	;# 
  7628  0E32                     	;# 
  7629  0E33                     	;# 
  7630  0E34                     	;# 
  7631  0E35                     	;# 
  7632  0E36                     	;# 
  7633  0E37                     	;# 
  7634  0E8F                     	;# 
  7635  0E90                     	;# 
  7636  0E91                     	;# 
  7637  0E92                     	;# 
  7638  0E93                     	;# 
  7639  0E94                     	;# 
  7640  0E95                     	;# 
  7641  0E96                     	;# 
  7642  0E97                     	;# 
  7643  0E9C                     	;# 
  7644  0E9D                     	;# 
  7645  0E9E                     	;# 
  7646  0EA1                     	;# 
  7647  0EA2                     	;# 
  7648  0EA3                     	;# 
  7649  0EA4                     	;# 
  7650  0EA5                     	;# 
  7651  0EA9                     	;# 
  7652  0EAA                     	;# 
  7653  0EAB                     	;# 
  7654  0EAC                     	;# 
  7655  0EB1                     	;# 
  7656  0EB2                     	;# 
  7657  0EB3                     	;# 
  7658  0EB8                     	;# 
  7659  0EB9                     	;# 
  7660  0EBA                     	;# 
  7661  0EBB                     	;# 
  7662  0EBC                     	;# 
  7663  0EBD                     	;# 
  7664  0EBE                     	;# 
  7665  0EC3                     	;# 
  7666  0EC5                     	;# 
  7667  0EC6                     	;# 
  7668  0EC7                     	;# 
  7669  0EC8                     	;# 
  7670  0EC9                     	;# 
  7671  0ECA                     	;# 
  7672  0ECB                     	;# 
  7673  0ECC                     	;# 
  7674  0F10                     	;# 
  7675  0F11                     	;# 
  7676  0F12                     	;# 
  7677  0F13                     	;# 
  7678  0F14                     	;# 
  7679  0F15                     	;# 
  7680  0F16                     	;# 
  7681  0F17                     	;# 
  7682  0F18                     	;# 
  7683  0F19                     	;# 
  7684  0F1A                     	;# 
  7685  0F1B                     	;# 
  7686  0F1C                     	;# 
  7687  0F1D                     	;# 
  7688  0F1E                     	;# 
  7689  0F1F                     	;# 
  7690  0F20                     	;# 
  7691  0F21                     	;# 
  7692  0F22                     	;# 
  7693  0F23                     	;# 
  7694  0F24                     	;# 
  7695  0F25                     	;# 
  7696  0F26                     	;# 
  7697  0F27                     	;# 
  7698  0F28                     	;# 
  7699  0F29                     	;# 
  7700  0F2A                     	;# 
  7701  0F2B                     	;# 
  7702  0F2C                     	;# 
  7703  0F2D                     	;# 
  7704  0F2E                     	;# 
  7705  0F2F                     	;# 
  7706  0F30                     	;# 
  7707  0F31                     	;# 
  7708  0F32                     	;# 
  7709  0F38                     	;# 
  7710  0F39                     	;# 
  7711  0F3A                     	;# 
  7712  0F3B                     	;# 
  7713  0F3C                     	;# 
  7714  0F3D                     	;# 
  7715  0F3E                     	;# 
  7716  0F3F                     	;# 
  7717  0F40                     	;# 
  7718  0F41                     	;# 
  7719  0F43                     	;# 
  7720  0F44                     	;# 
  7721  0F45                     	;# 
  7722  0F46                     	;# 
  7723  0F47                     	;# 
  7724  0F48                     	;# 
  7725  0F49                     	;# 
  7726  0F4A                     	;# 
  7727  0F4B                     	;# 
  7728  0F4C                     	;# 
  7729  0F4E                     	;# 
  7730  0F4F                     	;# 
  7731  0F50                     	;# 
  7732  0F51                     	;# 
  7733  0F52                     	;# 
  7734  0F53                     	;# 
  7735  0F54                     	;# 
  7736  0F55                     	;# 
  7737  0F56                     	;# 
  7738  0F57                     	;# 
  7739  0F59                     	;# 
  7740  0F5A                     	;# 
  7741  0F5B                     	;# 
  7742  0F5C                     	;# 
  7743  0F5D                     	;# 
  7744  0F61                     	;# 
  7745  0F62                     	;# 
  7746  0F64                     	;# 
  7747  0F65                     	;# 
  7748  0F66                     	;# 
  7749  0F67                     	;# 
  7750  0F68                     	;# 
  7751  0F69                     	;# 
  7752  0F6A                     	;# 
  7753  0F6B                     	;# 
  7754  0F6C                     	;# 
  7755  0F6D                     	;# 
  7756  0FE4                     	;# 
  7757  0FE5                     	;# 
  7758  0FE6                     	;# 
  7759  0FE7                     	;# 
  7760  0FE8                     	;# 
  7761  0FE9                     	;# 
  7762  0FEA                     	;# 
  7763  0FEB                     	;# 
  7764  0FED                     	;# 
  7765  0FEE                     	;# 
  7766  0FEF                     	;# 
  7767                           
  7768                           	psect	idataBANK0
  7769  17AA                     __pidataBANK0:
  7770                           
  7771                           ;initializer for _alarmPWMStart
  7772  17AA  34FF               	retlw	255
  7773  17AB  34FF               	retlw	255
  7774  17AC  34FF               	retlw	255
  7775                           
  7776                           ;initializer for _prevLumLevel
  7777  17AD  34FF               	retlw	255
  7778  17AE  34FF               	retlw	255
  7779                           
  7780                           ;initializer for _prevTemp
  7781  17AF  34FF               	retlw	255
  7782  17B0  34FF               	retlw	255
  7783                           
  7784                           	psect	stringtext1
  7785  1800                     __pstringtext1:
  7786  1800                     _dpowers:
  7787  1800  3401               	retlw	1
  7788  1801  3400               	retlw	0
  7789  1802  340A               	retlw	10
  7790  1803  3400               	retlw	0
  7791  1804  3464               	retlw	100
  7792  1805  3400               	retlw	0
  7793  1806  34E8               	retlw	232
  7794  1807  3403               	retlw	3
  7795  1808  3410               	retlw	16
  7796  1809  3427               	retlw	39
  7797  180A                     __end_of_dpowers:
  7798                           
  7799                           	psect	nvBANK0
  7800  006E                     __pnvBANK0:
  7801  006E                     _timer3ReloadVal:
  7802  006E                     	ds	2
  7803                           
  7804                           	psect	nvBANK1
  7805  00B1                     __pnvBANK1:
  7806  00B1                     _TMR5_InterruptHandler:
  7807  00B1                     	ds	2
  7808  00B3                     _timer5ReloadVal:
  7809  00B3                     	ds	2
  7810  00B5                     _TMR3_InterruptHandler:
  7811  00B5                     	ds	2
  7812  00B7                     _TMR1_InterruptHandler:
  7813  00B7                     	ds	2
  7814  00B9                     _timer1ReloadVal:
  7815  00B9                     	ds	2
  7816  0013                     _TRISCbits	set	19
  7817  000E                     _PORTCbits	set	14
  7818  000D                     _PORTBbits	set	13
  7819  0016                     _LATAbits	set	22
  7820  000B                     _INTCONbits	set	11
  7821  0014                     _TRISD	set	20
  7822  0013                     _TRISC	set	19
  7823  0012                     _TRISB	set	18
  7824  0011                     _TRISA	set	17
  7825  0015                     _TRISE	set	21
  7826  0018                     _LATC	set	24
  7827  0017                     _LATB	set	23
  7828  0016                     _LATA	set	22
  7829  0019                     _LATD	set	25
  7830  001A                     _LATE	set	26
  7831  0094                     _ADCON1bits	set	148
  7832  008E                     _ADPREVL	set	142
  7833  008F                     _ADPREVH	set	143
  7834  0097                     _ADSTATbits	set	151
  7835  0090                     _ADACCL	set	144
  7836  0091                     _ADACCH	set	145
  7837  0095                     _ADCON2bits	set	149
  7838  009C                     _ADPRE	set	156
  7839  0096                     _ADCON3bits	set	150
  7840  008C                     _ADRESL	set	140
  7841  008D                     _ADRESH	set	141
  7842  0093                     _ADCON0bits	set	147
  7843  009D                     _ADACQ	set	157
  7844  0093                     _ADCON0	set	147
  7845  0098                     _ADCLK	set	152
  7846  0099                     _ADACT	set	153
  7847  009A                     _ADREF	set	154
  7848  0097                     _ADSTAT	set	151
  7849  0096                     _ADCON3	set	150
  7850  0095                     _ADCON2	set	149
  7851  0094                     _ADCON1	set	148
  7852  009B                     _ADCAP	set	155
  7853  009E                     _ADPCH	set	158
  7854  0116                     _ADERRL	set	278
  7855  0117                     _ADERRH	set	279
  7856  0114                     _ADFLTRL	set	276
  7857  0115                     _ADFLTRH	set	277
  7858  010C                     _ADCNT	set	268
  7859  010D                     _ADRPT	set	269
  7860  0113                     _ADSTPTH	set	275
  7861  0112                     _ADSTPTL	set	274
  7862  0111                     _ADUTHH	set	273
  7863  0110                     _ADUTHL	set	272
  7864  010F                     _ADLTHH	set	271
  7865  010E                     _ADLTHL	set	270
  7866  018E                     _SSP1MSK	set	398
  7867  018D                     _SSP1ADD	set	397
  7868  018F                     _SSP1STAT	set	399
  7869  0191                     _SSP1CON2	set	401
  7870  0190                     _SSP1CON1bits	set	400
  7871  018C                     _SSP1BUF	set	396
  7872  018F                     _SSP1STATbits	set	399
  7873  0191                     _SSP1CON2bits	set	401
  7874  0190                     _SSP1CON1	set	400
  7875  021F                     _CCPTMRS1bits	set	543
  7876  021B                     _T5GCONbits	set	539
  7877  021A                     _T5CONbits	set	538
  7878  021A                     _T5CON	set	538
  7879  0218                     _TMR5L	set	536
  7880  0219                     _TMR5H	set	537
  7881  021D                     _T5CLK	set	541
  7882  021C                     _T5GATE	set	540
  7883  021B                     _T5GCON	set	539
  7884  0215                     _T3GCONbits	set	533
  7885  0214                     _T3CONbits	set	532
  7886  0214                     _T3CON	set	532
  7887  0212                     _TMR3L	set	530
  7888  0213                     _TMR3H	set	531
  7889  0217                     _T3CLK	set	535
  7890  0216                     _T3GATE	set	534
  7891  0215                     _T3GCON	set	533
  7892  020F                     _T1GCONbits	set	527
  7893  020E                     _T1CONbits	set	526
  7894  020E                     _T1CON	set	526
  7895  020C                     _TMR1L	set	524
  7896  020D                     _TMR1H	set	525
  7897  0211                     _T1CLK	set	529
  7898  0210                     _T1GATE	set	528
  7899  020F                     _T1GCON	set	527
  7900  028D                     _PR2	set	653
  7901  028C                     _TMR2	set	652
  7902  028E                     _T2CONbits	set	654
  7903  0291                     _T2RSTbits	set	657
  7904  028F                     _T2HLTbits	set	655
  7905  028E                     _T2CON	set	654
  7906  028C                     _T2TMR	set	652
  7907  028D                     _T2PR	set	653
  7908  0291                     _T2RST	set	657
  7909  028F                     _T2HLT	set	655
  7910  0290                     _T2CLKCON	set	656
  7911  038C                     _PWM6DCL	set	908
  7912  038D                     _PWM6DCH	set	909
  7913  038E                     _PWM6CON	set	910
  7914  1C77                     _PWM6EN	set	7287
  7915  0710                     _PIR4bits	set	1808
  7916  071A                     _PIE4bits	set	1818
  7917  0719                     _PIE3bits	set	1817
  7918  070F                     _PIR3bits	set	1807
  7919  079B                     _PMD5	set	1947
  7920  079A                     _PMD4	set	1946
  7921  0799                     _PMD3	set	1945
  7922  0798                     _PMD2	set	1944
  7923  0797                     _PMD1	set	1943
  7924  0796                     _PMD0	set	1942
  7925  081F                     _NVMCON2	set	2079
  7926  081C                     _NVMDATL	set	2076
  7927  081D                     _NVMDATH	set	2077
  7928  081E                     _NVMCON1bits	set	2078
  7929  081B                     _NVMADRH	set	2075
  7930  081A                     _NVMADRL	set	2074
  7931  0892                     _OSCTUNE	set	2194
  7932  0893                     _OSCFRQ	set	2195
  7933  0891                     _OSCEN	set	2193
  7934  088F                     _OSCCON3	set	2191
  7935  088D                     _OSCCON1	set	2189
  7936  0EC6                     _SSP1DATPPS	set	3782
  7937  0EC5                     _SSP1CLKPPS	set	3781
  7938  0F16                     _RA6PPS	set	3862
  7939  0F24                     _RC4PPS	set	3876
  7940  0F23                     _RC3PPS	set	3875
  7941  0F67                     _SLRCONE	set	3943
  7942  0F5C                     _SLRCOND	set	3932
  7943  0F51                     _SLRCONC	set	3921
  7944  0F46                     _SLRCONB	set	3910
  7945  0F3B                     _SLRCONA	set	3899
  7946  0F5B                     _ODCOND	set	3931
  7947  0F50                     _ODCONC	set	3920
  7948  0F45                     _ODCONB	set	3909
  7949  0F3A                     _ODCONA	set	3898
  7950  0F66                     _ODCONE	set	3942
  7951  0F4F                     _WPUC	set	3919
  7952  0F39                     _WPUA	set	3897
  7953  0F44                     _WPUB	set	3908
  7954  0F65                     _WPUE	set	3941
  7955  0F5A                     _WPUD	set	3930
  7956  0F38                     _ANSELA	set	3896
  7957  0F64                     _ANSELE	set	3940
  7958  0F43                     _ANSELB	set	3907
  7959  0F4E                     _ANSELC	set	3918
  7960  0F59                     _ANSELD	set	3929
  7961  7A7C                     _WPUC4	set	31356
  7962  7A7B                     _WPUC3	set	31355
  7963                           
  7964                           	psect	stringtext2
  7965  1000                     __pstringtext2:
  7966  1000                     STR_1:
  7967  1000  3425               	retlw	37	;'%'
  7968  1001  3430               	retlw	48	;'0'
  7969  1002  3432               	retlw	50	;'2'
  7970  1003  3464               	retlw	100	;'d'
  7971  1004  343A               	retlw	58	;':'
  7972  1005  3425               	retlw	37	;'%'
  7973  1006  3430               	retlw	48	;'0'
  7974  1007  3432               	retlw	50	;'2'
  7975  1008  3464               	retlw	100	;'d'
  7976  1009  343A               	retlw	58	;':'
  7977  100A  3425               	retlw	37	;'%'
  7978  100B  3430               	retlw	48	;'0'
  7979  100C  3432               	retlw	50	;'2'
  7980  100D  3464               	retlw	100	;'d'
  7981  100E  3400               	retlw	0
  7982                           
  7983                           	psect	stringtext3
  7984  180A                     __pstringtext3:
  7985  180A                     STR_3:
  7986  180A  3425               	retlw	37	;'%'
  7987  180B  3430               	retlw	48	;'0'
  7988  180C  3432               	retlw	50	;'2'
  7989  180D  3464               	retlw	100	;'d'
  7990  180E  3420               	retlw	32	;' '
  7991  180F  3443               	retlw	67	;'C'
  7992  1810  3400               	retlw	0
  7993                           
  7994                           	psect	stringtext4
  7995  1811                     __pstringtext4:
  7996  1811                     STR_5:
  7997  1811  344C               	retlw	76	;'L'
  7998  1812  3420               	retlw	32	;' '
  7999  1813  3425               	retlw	37	;'%'
  8000  1814  3464               	retlw	100	;'d'
  8001  1815  3400               	retlw	0
  8002                           
  8003                           	psect	stringtext5
  8004  0000                     __pstringtext5:
  8005  180A                     
  8006                           	psect	cinit
  8007  0042                     start_initialization:	
  8008                           ; #config settings
  8009                           
  8010  0042                     __initialization:
  8011                           
  8012                           ; Initialize objects allocated to BANK0
  8013  0042  30AA               	movlw	low __pidataBANK0
  8014  0043  0084               	movwf	4
  8015  0044  3097               	movlw	(high __pidataBANK0)| (0+128)
  8016  0045  0085               	movwf	5
  8017  0046  3067               	movlw	low __pdataBANK0
  8018  0047  0086               	movwf	6
  8019  0048  3000               	movlw	high __pdataBANK0
  8020  0049  0087               	movwf	7
  8021  004A  3007               	movlw	7
  8022  004B  3197  279D  3180   	fcall	init_ram
  8023                           
  8024                           ; Clear objects allocated to BANK0
  8025  004E  304D               	movlw	low __pbssBANK0
  8026  004F  0084               	movwf	4
  8027  0050  3000               	movlw	high __pbssBANK0
  8028  0051  0085               	movwf	5
  8029  0052  301A               	movlw	26
  8030  0053  3197  2797  3180   	fcall	clear_ram0
  8031                           
  8032                           ; Clear objects allocated to BANK1
  8033  0056  30BB               	movlw	low __pbssBANK1
  8034  0057  0084               	movwf	4
  8035  0058  3000               	movlw	high __pbssBANK1
  8036  0059  0085               	movwf	5
  8037  005A  3009               	movlw	9
  8038  005B  3197  2797  3180   	fcall	clear_ram0
  8039  005E                     end_of_initialization:	
  8040                           ;End of C runtime variable initialization code
  8041                           
  8042  005E                     __end_of__initialization:
  8043  005E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8044  005F  0020               	movlb	0
  8045  0060  3180  2862         	ljmp	_main	;jump to C main() function
  8046                           
  8047                           	psect	bssBANK0
  8048  004D                     __pbssBANK0:
  8049  004D                     _clkAlarm:
  8050  004D                     	ds	4
  8051  0051                     _lumAlarm:
  8052  0051                     	ds	3
  8053  0054                     _tempAlarm:
  8054  0054                     	ds	3
  8055  0057                     _t:
  8056  0057                     	ds	3
  8057  005A                     _mode:
  8058  005A                     	ds	2
  8059  005C                     _editingClockAlarm:
  8060  005C                     	ds	2
  8061  005E                     _dimingLed:
  8062  005E                     	ds	2
  8063  0060                     _editingLumAlarm:
  8064  0060                     	ds	1
  8065  0061                     _editingTempAlarm:
  8066  0061                     	ds	1
  8067  0062                     _lumLevel:
  8068  0062                     	ds	1
  8069  0063                     _temp:
  8070  0063                     	ds	1
  8071  0064                     _ALAF:
  8072  0064                     	ds	1
  8073  0065                     _TALA:
  8074  0065                     	ds	1
  8075  0066                     _NREG:
  8076  0066                     	ds	1
  8077                           
  8078                           	psect	dataBANK0
  8079  0067                     __pdataBANK0:
  8080  0067                     _alarmPWMStart:
  8081  0067                     	ds	3
  8082  006A                     _prevLumLevel:
  8083  006A                     	ds	2
  8084  006C                     _prevTemp:
  8085  006C                     	ds	2
  8086                           
  8087                           	psect	bssBANK1
  8088  00BB                     __pbssBANK1:
  8089  00BB                     menuLCD_ISR@F12812:
  8090  00BB                     	ds	3
  8091  00BE                     _i2c1_driver_i2cISR:
  8092  00BE                     	ds	2
  8093  00C0                     _i2c1_driver_busCollisionISR:
  8094  00C0                     	ds	2
  8095  00C2                     _IDX:
  8096  00C2                     	ds	1
  8097  00C3                     _PMON:
  8098  00C3                     	ds	1
  8099                           
  8100                           	psect	inittext
  8101  179D                     init_ram:
  8102  179D  00FE               	movwf	btemp
  8103  179E                     initloop:
  8104  179E  0012               	moviw fsr0++
  8105  179F  001E               	movwi fsr1++
  8106  17A0  0BFE               	decfsz	btemp,f
  8107  17A1  2F9E               	goto	initloop
  8108  17A2  3400               	retlw	0
  8109                           
  8110                           	psect	clrtext
  8111  1797                     clear_ram0:	
  8112                           ;	Called with FSR0 containing the base address, and
  8113                           ;	WREG with the size to clear
  8114                           
  8115  1797  0064               	clrwdt	;clear the watchdog before getting into this loop
  8116  1798                     clrloop0:
  8117  1798  0180               	clrf	0	;clear RAM location pointed to by FSR
  8118  1799  3101               	addfsr 0,1
  8119  179A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  8120  179B  2F98               	goto	clrloop0	;have we reached the end yet?
  8121  179C  3400               	retlw	0	;all done for this memory range, return
  8122                           
  8123                           	psect	cstackBANK1
  8124  00A0                     __pcstackBANK1:
  8125  00A0                     ??_PMD_Initialize:
  8126  00A0                     ??_OSCILLATOR_Initialize:	
  8127                           ; 1 bytes @ 0x0
  8128                           
  8129  00A0                     ??_PWM6_Initialize:	
  8130                           ; 1 bytes @ 0x0
  8131                           
  8132  00A0                     ??_ADCC_Initialize:	
  8133                           ; 1 bytes @ 0x0
  8134                           
  8135  00A0                     ??_TMR2_Initialize:	
  8136                           ; 1 bytes @ 0x0
  8137                           
  8138  00A0                     ?_TMR1_SetInterruptHandler:	
  8139                           ; 1 bytes @ 0x0
  8140                           
  8141  00A0                     ?_TMR3_SetInterruptHandler:	
  8142                           ; 1 bytes @ 0x0
  8143                           
  8144  00A0                     ?_TMR5_SetInterruptHandler:	
  8145                           ; 1 bytes @ 0x0
  8146                           
  8147  00A0                     ?_DATAEE_WriteByte:	
  8148                           ; 1 bytes @ 0x0
  8149                           
  8150  00A0                     ?_DATAEE_ReadByte:	
  8151                           ; 1 bytes @ 0x0
  8152                           
  8153  00A0                     ??_WriteI2C:	
  8154                           ; 1 bytes @ 0x0
  8155                           
  8156  00A0                     ??_PIN_MANAGER_Initialize:	
  8157                           ; 1 bytes @ 0x0
  8158                           
  8159  00A0                     ??_i2c1_driver_open:	
  8160                           ; 1 bytes @ 0x0
  8161                           
  8162  00A0                     ?_PWM6_LoadDutyValue:	
  8163                           ; 1 bytes @ 0x0
  8164                           
  8165  00A0                     ??_TMR2_Stop:	
  8166                           ; 1 bytes @ 0x0
  8167                           
  8168  00A0                     ??_TMR2_StopTimer:	
  8169                           ; 1 bytes @ 0x0
  8170                           
  8171  00A0                     ??_PWM_Output_D4_Disable:	
  8172                           ; 1 bytes @ 0x0
  8173                           
  8174  00A0                     ??_editClock:	
  8175                           ; 1 bytes @ 0x0
  8176                           
  8177  00A0                     ??_editTemp:	
  8178                           ; 1 bytes @ 0x0
  8179                           
  8180  00A0                     ??_editLum:	
  8181                           ; 1 bytes @ 0x0
  8182                           
  8183  00A0                     ??_toggleAlarms:	
  8184                           ; 1 bytes @ 0x0
  8185                           
  8186  00A0                     TMR1_SetInterruptHandler@InterruptHandler:	
  8187                           ; 1 bytes @ 0x0
  8188                           
  8189  00A0                     TMR3_SetInterruptHandler@InterruptHandler:	
  8190                           ; 2 bytes @ 0x0
  8191                           
  8192  00A0                     TMR5_SetInterruptHandler@InterruptHandler:	
  8193                           ; 2 bytes @ 0x0
  8194                           
  8195  00A0                     PWM6_LoadDutyValue@dutyValue:	
  8196                           ; 2 bytes @ 0x0
  8197                           
  8198  00A0                     DATAEE_WriteByte@bAdd:	
  8199                           ; 2 bytes @ 0x0
  8200                           
  8201  00A0                     DATAEE_ReadByte@bAdd:	
  8202                           ; 2 bytes @ 0x0
  8203                           
  8204                           
  8205                           ; 2 bytes @ 0x0
  8206  00A0                     	ds	1
  8207  00A1                     WriteI2C@data_out:
  8208                           
  8209                           ; 1 bytes @ 0x1
  8210  00A1                     	ds	1
  8211  00A2                     ??_TMR3_Initialize:
  8212  00A2                     ??_TMR5_Initialize:	
  8213                           ; 1 bytes @ 0x2
  8214                           
  8215  00A2                     ??_TMR1_Initialize:	
  8216                           ; 1 bytes @ 0x2
  8217                           
  8218  00A2                     ??_TMR1_SetInterruptHandler:	
  8219                           ; 1 bytes @ 0x2
  8220                           
  8221  00A2                     ??_TMR3_SetInterruptHandler:	
  8222                           ; 1 bytes @ 0x2
  8223                           
  8224  00A2                     ??_TMR5_SetInterruptHandler:	
  8225                           ; 1 bytes @ 0x2
  8226                           
  8227  00A2                     ??_DATAEE_ReadByte:	
  8228                           ; 1 bytes @ 0x2
  8229                           
  8230  00A2                     ??_SYSTEM_Initialize:	
  8231                           ; 1 bytes @ 0x2
  8232                           
  8233  00A2                     ??_PWM6_LoadDutyValue:	
  8234                           ; 1 bytes @ 0x2
  8235                           
  8236  00A2                     ??_LCDsend:	
  8237                           ; 1 bytes @ 0x2
  8238                           
  8239  00A2                     ?_LCDsend2x4:	
  8240                           ; 1 bytes @ 0x2
  8241                           
  8242  00A2                     LCDsend2x4@mode:	
  8243                           ; 1 bytes @ 0x2
  8244                           
  8245  00A2                     DATAEE_WriteByte@bData:	
  8246                           ; 1 bytes @ 0x2
  8247                           
  8248                           
  8249                           ; 1 bytes @ 0x2
  8250  00A2                     	ds	1
  8251  00A3                     ??_DATAEE_WriteByte:
  8252  00A3                     ??_LCDsend2x4:	
  8253                           ; 1 bytes @ 0x3
  8254                           
  8255  00A3                     LCDsend@c:	
  8256                           ; 1 bytes @ 0x3
  8257                           
  8258  00A3                     DATAEE_WriteByte@GIEBitValue:	
  8259                           ; 1 bytes @ 0x3
  8260                           
  8261                           
  8262                           ; 1 bytes @ 0x3
  8263  00A3                     	ds	2
  8264  00A5                     LCDsend2x4@c:
  8265                           
  8266                           ; 1 bytes @ 0x5
  8267  00A5                     	ds	1
  8268  00A6                     LCDsend2x4@hc:
  8269                           
  8270                           ; 1 bytes @ 0x6
  8271  00A6                     	ds	1
  8272  00A7                     LCDsend2x4@lc:
  8273                           
  8274                           ; 1 bytes @ 0x7
  8275  00A7                     	ds	1
  8276  00A8                     ??_LCDinit:
  8277                           
  8278                           ; 1 bytes @ 0x8
  8279  00A8                     	ds	1
  8280  00A9                     ??_main:
  8281                           
  8282                           ; 1 bytes @ 0x9
  8283  00A9                     	ds	3
  8284  00AC                     main@checkSumAux:
  8285                           
  8286                           ; 1 bytes @ 0xC
  8287  00AC                     	ds	1
  8288  00AD                     main@notInit:
  8289                           
  8290                           ; 1 bytes @ 0xD
  8291  00AD                     	ds	1
  8292  00AE                     main@corrupted:
  8293                           
  8294                           ; 1 bytes @ 0xE
  8295  00AE                     	ds	1
  8296  00AF                     main@i:
  8297                           
  8298                           ; 2 bytes @ 0xF
  8299  00AF                     	ds	2
  8300                           
  8301                           	psect	cstackCOMMON
  8302  0070                     __pcstackCOMMON:
  8303  0070                     ?_isdigit:
  8304  0070                     ?_i2c1_driver_open:	
  8305                           ; 1 bit 
  8306                           
  8307  0070                     ?_PMD_Initialize:	
  8308                           ; 1 bit 
  8309                           
  8310  0070                     ?_OSCILLATOR_Initialize:	
  8311                           ; 1 bytes @ 0x0
  8312                           
  8313  0070                     ?_PWM6_Initialize:	
  8314                           ; 1 bytes @ 0x0
  8315                           
  8316  0070                     ?_ADCC_Initialize:	
  8317                           ; 1 bytes @ 0x0
  8318                           
  8319  0070                     ?_TMR3_Initialize:	
  8320                           ; 1 bytes @ 0x0
  8321                           
  8322  0070                     ?_TMR5_Initialize:	
  8323                           ; 1 bytes @ 0x0
  8324                           
  8325  0070                     ?_TMR2_Initialize:	
  8326                           ; 1 bytes @ 0x0
  8327                           
  8328  0070                     ?_TMR1_Initialize:	
  8329                           ; 1 bytes @ 0x0
  8330                           
  8331  0070                     ?_TMR5_ISR:	
  8332                           ; 1 bytes @ 0x0
  8333                           
  8334  0070                     ?_TMR3_ISR:	
  8335                           ; 1 bytes @ 0x0
  8336                           
  8337  0070                     ?_TMR1_ISR:	
  8338                           ; 1 bytes @ 0x0
  8339                           
  8340  0070                     ?_TMR1_DefaultInterruptHandler:	
  8341                           ; 1 bytes @ 0x0
  8342                           
  8343  0070                     ??_TMR1_DefaultInterruptHandler:	
  8344                           ; 1 bytes @ 0x0
  8345                           
  8346  0070                     ?_TMR3_DefaultInterruptHandler:	
  8347                           ; 1 bytes @ 0x0
  8348                           
  8349  0070                     ??_TMR3_DefaultInterruptHandler:	
  8350                           ; 1 bytes @ 0x0
  8351                           
  8352  0070                     ?_TMR5_DefaultInterruptHandler:	
  8353                           ; 1 bytes @ 0x0
  8354                           
  8355  0070                     ??_TMR5_DefaultInterruptHandler:	
  8356                           ; 1 bytes @ 0x0
  8357                           
  8358  0070                     ??_isdigit:	
  8359                           ; 1 bytes @ 0x0
  8360                           
  8361  0070                     ?_ReadI2C:	
  8362                           ; 1 bytes @ 0x0
  8363                           
  8364  0070                     ??_ReadI2C:	
  8365                           ; 1 bytes @ 0x0
  8366                           
  8367  0070                     ?_WriteI2C:	
  8368                           ; 1 bytes @ 0x0
  8369                           
  8370  0070                     ?_PIN_MANAGER_Initialize:	
  8371                           ; 1 bytes @ 0x0
  8372                           
  8373  0070                     ?_SYSTEM_Initialize:	
  8374                           ; 1 bytes @ 0x0
  8375                           
  8376  0070                     ?_INTERRUPT_InterruptManager:	
  8377                           ; 1 bytes @ 0x0
  8378                           
  8379  0070                     ?_TMR1_WriteTimer:	
  8380                           ; 1 bytes @ 0x0
  8381                           
  8382  0070                     ?_TMR3_WriteTimer:	
  8383                           ; 1 bytes @ 0x0
  8384                           
  8385  0070                     ?_TMR5_WriteTimer:	
  8386                           ; 1 bytes @ 0x0
  8387                           
  8388  0070                     ?_TMR2_Start:	
  8389                           ; 1 bytes @ 0x0
  8390                           
  8391  0070                     ??_TMR2_Start:	
  8392                           ; 1 bytes @ 0x0
  8393                           
  8394  0070                     ?_TMR2_StartTimer:	
  8395                           ; 1 bytes @ 0x0
  8396                           
  8397  0070                     ??_TMR2_StartTimer:	
  8398                           ; 1 bytes @ 0x0
  8399                           
  8400  0070                     ?_TMR2_Stop:	
  8401                           ; 1 bytes @ 0x0
  8402                           
  8403  0070                     ?_TMR2_StopTimer:	
  8404                           ; 1 bytes @ 0x0
  8405                           
  8406  0070                     ?_tsttc:	
  8407                           ; 1 bytes @ 0x0
  8408                           
  8409  0070                     ?_LCDsend:	
  8410                           ; 1 bytes @ 0x0
  8411                           
  8412  0070                     ?_LCDinit:	
  8413                           ; 1 bytes @ 0x0
  8414                           
  8415  0070                     ?_LCDcmd:	
  8416                           ; 1 bytes @ 0x0
  8417                           
  8418  0070                     ?_LCDchar:	
  8419                           ; 1 bytes @ 0x0
  8420                           
  8421  0070                     ?_LCDstr:	
  8422                           ; 1 bytes @ 0x0
  8423                           
  8424  0070                     ?_differenceBetweenTimePeriod:	
  8425                           ; 1 bytes @ 0x0
  8426                           
  8427  0070                     ?_PWM_Output_D4_Enable:	
  8428                           ; 1 bytes @ 0x0
  8429                           
  8430  0070                     ??_PWM_Output_D4_Enable:	
  8431                           ; 1 bytes @ 0x0
  8432                           
  8433  0070                     ?_PWM_Output_D4_Disable:	
  8434                           ; 1 bytes @ 0x0
  8435                           
  8436  0070                     ?_Clock_ISR:	
  8437                           ; 1 bytes @ 0x0
  8438                           
  8439  0070                     ?_menuLCD_ISR:	
  8440                           ; 1 bytes @ 0x0
  8441                           
  8442  0070                     ?_monitoring_ISR:	
  8443                           ; 1 bytes @ 0x0
  8444                           
  8445  0070                     ?_editClock:	
  8446                           ; 1 bytes @ 0x0
  8447                           
  8448  0070                     ?_editTemp:	
  8449                           ; 1 bytes @ 0x0
  8450                           
  8451  0070                     ?_editLum:	
  8452                           ; 1 bytes @ 0x0
  8453                           
  8454  0070                     ?_toggleAlarms:	
  8455                           ; 1 bytes @ 0x0
  8456                           
  8457  0070                     ?_main:	
  8458                           ; 1 bytes @ 0x0
  8459                           
  8460  0070                     ?i1_WriteI2C:	
  8461                           ; 1 bytes @ 0x0
  8462                           
  8463  0070                     ??i1_WriteI2C:	
  8464                           ; 1 bytes @ 0x0
  8465                           
  8466  0070                     ?i1_PWM6_LoadDutyValue:	
  8467                           ; 1 bytes @ 0x0
  8468                           
  8469  0070                     ?i1_TMR2_Stop:	
  8470                           ; 1 bytes @ 0x0
  8471                           
  8472  0070                     ??i1_TMR2_Stop:	
  8473                           ; 1 bytes @ 0x0
  8474                           
  8475  0070                     ?i1_TMR2_StopTimer:	
  8476                           ; 1 bytes @ 0x0
  8477                           
  8478  0070                     ??i1_TMR2_StopTimer:	
  8479                           ; 1 bytes @ 0x0
  8480                           
  8481  0070                     ?i1_PWM_Output_D4_Disable:	
  8482                           ; 1 bytes @ 0x0
  8483                           
  8484  0070                     ??i1_PWM_Output_D4_Disable:	
  8485                           ; 1 bytes @ 0x0
  8486                           
  8487  0070                     ?_ADCC_GetSingleConversion:	
  8488                           ; 1 bytes @ 0x0
  8489                           
  8490  0070                     ?___wmul:	
  8491                           ; 2 bytes @ 0x0
  8492                           
  8493  0070                     ?___lwdiv:	
  8494                           ; 2 bytes @ 0x0
  8495                           
  8496  0070                     _isdigit$2903:	
  8497                           ; 2 bytes @ 0x0
  8498                           
  8499  0070                     TMR1_WriteTimer@timerVal:	
  8500                           ; 1 bytes @ 0x0
  8501                           
  8502  0070                     TMR3_WriteTimer@timerVal:	
  8503                           ; 2 bytes @ 0x0
  8504                           
  8505  0070                     TMR5_WriteTimer@timerVal:	
  8506                           ; 2 bytes @ 0x0
  8507                           
  8508  0070                     ___wmul@multiplier:	
  8509                           ; 2 bytes @ 0x0
  8510                           
  8511  0070                     ___lwdiv@divisor:	
  8512                           ; 2 bytes @ 0x0
  8513                           
  8514  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  8515                           ; 2 bytes @ 0x0
  8516                           
  8517  0070                     differenceBetweenTimePeriod@start:	
  8518                           ; 2 bytes @ 0x0
  8519                           
  8520                           
  8521                           ; 3 bytes @ 0x0
  8522  0070                     	ds	1
  8523  0071                     isdigit@c:
  8524  0071                     i1WriteI2C@data_out:	
  8525                           ; 1 bytes @ 0x1
  8526                           
  8527                           
  8528                           ; 1 bytes @ 0x1
  8529  0071                     	ds	1
  8530  0072                     ??_TMR1_WriteTimer:
  8531  0072                     ??_TMR3_WriteTimer:	
  8532                           ; 1 bytes @ 0x2
  8533                           
  8534  0072                     ??_TMR5_WriteTimer:	
  8535                           ; 1 bytes @ 0x2
  8536                           
  8537  0072                     ??_tsttc:	
  8538                           ; 1 bytes @ 0x2
  8539                           
  8540  0072                     ??i1_PWM6_LoadDutyValue:	
  8541                           ; 1 bytes @ 0x2
  8542                           
  8543  0072                     ?i1_LCDsend2x4:	
  8544                           ; 1 bytes @ 0x2
  8545                           
  8546  0072                     i1LCDsend2x4@mode:	
  8547                           ; 1 bytes @ 0x2
  8548                           
  8549  0072                     ___wmul@multiplicand:	
  8550                           ; 1 bytes @ 0x2
  8551                           
  8552  0072                     ___lwdiv@dividend:	
  8553                           ; 2 bytes @ 0x2
  8554                           
  8555                           
  8556                           ; 2 bytes @ 0x2
  8557  0072                     	ds	1
  8558  0073                     ??_ADCC_GetSingleConversion:
  8559  0073                     ??i1_LCDsend2x4:	
  8560                           ; 1 bytes @ 0x3
  8561                           
  8562  0073                     ADCC_GetSingleConversion@channel:	
  8563                           ; 1 bytes @ 0x3
  8564                           
  8565  0073                     tsttc@value:	
  8566                           ; 1 bytes @ 0x3
  8567                           
  8568  0073                     differenceBetweenTimePeriod@stop:	
  8569                           ; 1 bytes @ 0x3
  8570                           
  8571                           
  8572                           ; 3 bytes @ 0x3
  8573  0073                     	ds	1
  8574  0074                     ??___wmul:
  8575  0074                     ??___lwdiv:	
  8576                           ; 1 bytes @ 0x4
  8577                           
  8578  0074                     ___wmul@product:	
  8579                           ; 1 bytes @ 0x4
  8580                           
  8581                           
  8582                           ; 2 bytes @ 0x4
  8583  0074                     	ds	1
  8584  0075                     i1LCDsend2x4@c:
  8585  0075                     ___lwdiv@quotient:	
  8586                           ; 1 bytes @ 0x5
  8587                           
  8588                           
  8589                           ; 2 bytes @ 0x5
  8590  0075                     	ds	1
  8591  0076                     ?i1_DATAEE_WriteByte:
  8592  0076                     differenceBetweenTimePeriod@diff:	
  8593                           ; 1 bytes @ 0x6
  8594                           
  8595  0076                     i1LCDsend2x4@hc:	
  8596                           ; 1 bytes @ 0x6
  8597                           
  8598  0076                     i1DATAEE_WriteByte@bAdd:	
  8599                           ; 1 bytes @ 0x6
  8600                           
  8601                           
  8602                           ; 2 bytes @ 0x6
  8603  0076                     	ds	1
  8604  0077                     ??_differenceBetweenTimePeriod:
  8605  0077                     ___lwdiv@counter:	
  8606                           ; 1 bytes @ 0x7
  8607                           
  8608  0077                     i1LCDsend2x4@lc:	
  8609                           ; 1 bytes @ 0x7
  8610                           
  8611                           
  8612                           ; 1 bytes @ 0x7
  8613  0077                     	ds	1
  8614  0078                     ??_LCDcmd:
  8615  0078                     ??_LCDchar:	
  8616                           ; 1 bytes @ 0x8
  8617                           
  8618  0078                     ?___lwmod:	
  8619                           ; 1 bytes @ 0x8
  8620                           
  8621  0078                     LCDcmd@c:	
  8622                           ; 2 bytes @ 0x8
  8623                           
  8624  0078                     LCDchar@c:	
  8625                           ; 1 bytes @ 0x8
  8626                           
  8627  0078                     i1DATAEE_WriteByte@bData:	
  8628                           ; 1 bytes @ 0x8
  8629                           
  8630  0078                     ___lwmod@divisor:	
  8631                           ; 1 bytes @ 0x8
  8632                           
  8633                           
  8634                           ; 2 bytes @ 0x8
  8635  0078                     	ds	1
  8636  0079                     ??_LCDstr:
  8637  0079                     ??i1_DATAEE_WriteByte:	
  8638                           ; 1 bytes @ 0x9
  8639                           
  8640  0079                     i1DATAEE_WriteByte@GIEBitValue:	
  8641                           ; 1 bytes @ 0x9
  8642                           
  8643                           
  8644                           ; 1 bytes @ 0x9
  8645  0079                     	ds	1
  8646  007A                     ??_Clock_ISR:
  8647  007A                     ??_monitoring_ISR:	
  8648                           ; 1 bytes @ 0xA
  8649                           
  8650  007A                     LCDstr@c:	
  8651                           ; 1 bytes @ 0xA
  8652                           
  8653  007A                     ___lwmod@dividend:	
  8654                           ; 1 bytes @ 0xA
  8655                           
  8656                           
  8657                           ; 2 bytes @ 0xA
  8658  007A                     	ds	1
  8659  007B                     ??_TMR1_ISR:
  8660  007B                     LCDstr@p:	
  8661                           ; 1 bytes @ 0xB
  8662                           
  8663                           
  8664                           ; 1 bytes @ 0xB
  8665  007B                     	ds	1
  8666  007C                     ??___lwmod:
  8667                           
  8668                           ; 1 bytes @ 0xC
  8669  007C                     	ds	1
  8670  007D                     ??_TMR5_ISR:
  8671  007D                     ___lwmod@counter:	
  8672                           ; 1 bytes @ 0xD
  8673                           
  8674                           
  8675                           ; 1 bytes @ 0xD
  8676  007D                     	ds	1
  8677  007E                     ??_TMR3_ISR:
  8678  007E                     ??_INTERRUPT_InterruptManager:	
  8679                           ; 1 bytes @ 0xE
  8680                           
  8681                           
  8682                           	psect	cstackBANK0
  8683  0020                     __pcstackBANK0:	
  8684                           ; 1 bytes @ 0xE
  8685                           
  8686  0020                     ?_sprintf:
  8687  0020                     sprintf@f:	
  8688                           ; 2 bytes @ 0x0
  8689                           
  8690                           
  8691                           ; 2 bytes @ 0x0
  8692  0020                     	ds	8
  8693  0028                     ??_sprintf:
  8694                           
  8695                           ; 1 bytes @ 0x8
  8696  0028                     	ds	4
  8697  002C                     sprintf@ap:
  8698                           
  8699                           ; 1 bytes @ 0xC
  8700  002C                     	ds	1
  8701  002D                     sprintf@prec:
  8702                           
  8703                           ; 1 bytes @ 0xD
  8704  002D                     	ds	1
  8705  002E                     sprintf@val:
  8706                           
  8707                           ; 2 bytes @ 0xE
  8708  002E                     	ds	2
  8709  0030                     sprintf@flag:
  8710                           
  8711                           ; 1 bytes @ 0x10
  8712  0030                     	ds	1
  8713  0031                     sprintf@width:
  8714                           
  8715                           ; 2 bytes @ 0x11
  8716  0031                     	ds	2
  8717  0033                     sprintf@c:
  8718                           
  8719                           ; 1 bytes @ 0x13
  8720  0033                     	ds	1
  8721  0034                     sprintf@sp:
  8722                           
  8723                           ; 1 bytes @ 0x14
  8724  0034                     	ds	1
  8725  0035                     ??_menuLCD_ISR:
  8726                           
  8727                           ; 1 bytes @ 0x15
  8728  0035                     	ds	6
  8729  003B                     menuLCD_ISR@str:
  8730                           
  8731                           ; 8 bytes @ 0x1B
  8732  003B                     	ds	8
  8733  0043                     menuLCD_ISR@tt:
  8734                           
  8735                           ; 4 bytes @ 0x23
  8736  0043                     	ds	4
  8737  0047                     menuLCD_ISR@l:
  8738                           
  8739                           ; 3 bytes @ 0x27
  8740  0047                     	ds	3
  8741  004A                     menuLCD_ISR@diff:
  8742                           
  8743                           ; 3 bytes @ 0x2A
  8744  004A                     	ds	3
  8745                           
  8746                           	psect	maintext
  8747  0062                     __pmaintext:	
  8748 ;;
  8749 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  8750 ;;
  8751 ;; *************** function _main *****************
  8752 ;; Defined at:
  8753 ;;		line 606 in file "main.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;		None
  8756 ;; Auto vars:     Size  Location     Type
  8757 ;;  i               2   15[BANK1 ] int 
  8758 ;;  corrupted       1   14[BANK1 ] unsigned char 
  8759 ;;  notInit         1   13[BANK1 ] unsigned char 
  8760 ;;  checkSumAux     1   12[BANK1 ] unsigned char 
  8761 ;; Return value:  Size  Location     Type
  8762 ;;                  1    wreg      void 
  8763 ;; Registers used:
  8764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8765 ;; Tracked objects:
  8766 ;;		On entry : B1F/0
  8767 ;;		On exit  : 0/0
  8768 ;;		Unchanged: 0/0
  8769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8771 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8772 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8773 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8774 ;;Total ram usage:        8 bytes
  8775 ;; Hardware stack levels required when called:   10
  8776 ;; This function calls:
  8777 ;;		_DATAEE_ReadByte
  8778 ;;		_DATAEE_WriteByte
  8779 ;;		_LCDinit
  8780 ;;		_PWM6_LoadDutyValue
  8781 ;;		_PWM_Output_D4_Disable
  8782 ;;		_SYSTEM_Initialize
  8783 ;;		_TMR1_SetInterruptHandler
  8784 ;;		_TMR2_StopTimer
  8785 ;;		_TMR3_SetInterruptHandler
  8786 ;;		_TMR5_SetInterruptHandler
  8787 ;;		_editClock
  8788 ;;		_editLum
  8789 ;;		_editTemp
  8790 ;;		_i2c1_driver_open
  8791 ;;		_toggleAlarms
  8792 ;; This function is called by:
  8793 ;;		Startup code after reset
  8794 ;; This function uses a non-reentrant model
  8795 ;;
  8796                           
  8797                           
  8798                           ;psect for function _main
  8799  0062                     _main:
  8800  0062                     l4958:	
  8801                           ;incstack = 0
  8802                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8803                           
  8804                           
  8805                           ;main.c: 609: SYSTEM_Initialize();
  8806  0062  3189  2110  3180   	fcall	_SYSTEM_Initialize
  8807                           
  8808                           ;main.c: 611: PWM6_LoadDutyValue(0);
  8809  0065  3000               	movlw	0
  8810  0066  0021               	movlb	1	; select bank1
  8811  0067  00A0               	movwf	PWM6_LoadDutyValue@dutyValue^(0+128)
  8812  0068  00A1               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128)
  8813  0069  3188  20DD  3180   	fcall	_PWM6_LoadDutyValue
  8814  006C                     l4960:
  8815                           
  8816                           ;main.c: 612: TMR2_StopTimer();
  8817  006C  3187  27FC  3180   	fcall	_TMR2_StopTimer
  8818  006F                     l4962:
  8819                           
  8820                           ;main.c: 613: PWM_Output_D4_Disable();
  8821  006F  3197  2777  3180   	fcall	_PWM_Output_D4_Disable
  8822                           
  8823                           ;main.c: 615: TMR1_SetInterruptHandler(Clock_ISR);
  8824  0072  30F3               	movlw	low _Clock_ISR
  8825  0073  0021               	movlb	1	; select bank1
  8826  0074  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  8827  0075  300D               	movlw	high _Clock_ISR
  8828  0076  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8829  0077  3197  2785  3180   	fcall	_TMR1_SetInterruptHandler
  8830                           
  8831                           ;main.c: 617: TMR3_SetInterruptHandler(menuLCD_ISR);
  8832  007A  3073               	movlw	low _menuLCD_ISR
  8833  007B  0021               	movlb	1	; select bank1
  8834  007C  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  8835  007D  3002               	movlw	high _menuLCD_ISR
  8836  007E  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8837  007F  3197  278B  3180   	fcall	_TMR3_SetInterruptHandler
  8838                           
  8839                           ;main.c: 619: TMR5_SetInterruptHandler(monitoring_ISR);
  8840  0082  30E4               	movlw	low _monitoring_ISR
  8841  0083  0021               	movlb	1	; select bank1
  8842  0084  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
  8843  0085  3005               	movlw	high _monitoring_ISR
  8844  0086  00A1               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8845  0087  3197  2791  3180   	fcall	_TMR5_SetInterruptHandler
  8846  008A                     l4964:
  8847                           
  8848                           ;main.c: 624: uint8_t checkSumAux = 0;
  8849  008A  0021               	movlb	1	; select bank1
  8850  008B  01AC               	clrf	main@checkSumAux^(0+128)
  8851  008C                     l4966:
  8852                           
  8853                           ;main.c: 625: bool notInit = 1;
  8854  008C  01AD               	clrf	main@notInit^(0+128)
  8855  008D  0AAD               	incf	main@notInit^(0+128),f
  8856  008E                     l4968:
  8857                           
  8858                           ;main.c: 626: bool corrupted = 0;
  8859  008E  01AE               	clrf	main@corrupted^(0+128)
  8860  008F                     l4970:
  8861                           
  8862                           ;main.c: 627: if(DATAEE_ReadByte(0x7000) == 'S'){
  8863  008F  3000               	movlw	0
  8864  0090  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  8865  0091  3070               	movlw	112
  8866  0092  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  8867  0093  3197  27F1  3180   	fcall	_DATAEE_ReadByte
  8868  0096  3A53               	xorlw	83
  8869  0097  1D03               	skipz
  8870  0098  289A               	goto	u4801
  8871  0099  289B               	goto	u4800
  8872  009A                     u4801:
  8873  009A  28DA               	goto	l4990
  8874  009B                     u4800:
  8875  009B                     l4972:
  8876                           
  8877                           ;main.c: 628: notInit = 0;
  8878  009B  0021               	movlb	1	; select bank1
  8879  009C  01AD               	clrf	main@notInit^(0+128)
  8880  009D                     l4974:
  8881                           
  8882                           ;main.c: 629: for(int i = 1; i < 13; i++){
  8883  009D  3001               	movlw	1
  8884  009E  00AF               	movwf	main@i^(0+128)
  8885  009F  3000               	movlw	0
  8886  00A0  00B0               	movwf	(main@i^(0+128)+1)
  8887  00A1                     l4980:
  8888                           
  8889                           ;main.c: 630: checkSumAux += DATAEE_ReadByte(0x7000 + (i*8));
  8890  00A1  0021               	movlb	1	; select bank1
  8891  00A2  0830               	movf	(main@i+1)^(0+128),w
  8892  00A3  00AA               	movwf	(??_main^(0+128)+1)
  8893  00A4  082F               	movf	main@i^(0+128),w
  8894  00A5  00A9               	movwf	??_main^(0+128)
  8895  00A6  35A9               	lslf	??_main^(0+128),f
  8896  00A7  0DAA               	rlf	(??_main^(0+128)+1),f
  8897  00A8  35A9               	lslf	??_main^(0+128),f
  8898  00A9  0DAA               	rlf	(??_main^(0+128)+1),f
  8899  00AA  35A9               	lslf	??_main^(0+128),f
  8900  00AB  0DAA               	rlf	(??_main^(0+128)+1),f
  8901  00AC  0829               	movf	??_main^(0+128),w
  8902  00AD  3E00               	addlw	0
  8903  00AE  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  8904  00AF  3070               	movlw	112
  8905  00B0  3D2A               	addwfc	(??_main+1)^(0+128),w
  8906  00B1  00A1               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+128)
  8907  00B2  3197  27F1  3180   	fcall	_DATAEE_ReadByte
  8908  00B5  0021               	movlb	1	; select bank1
  8909  00B6  00AB               	movwf	(??_main+2)^(0+128)
  8910  00B7  082B               	movf	(??_main+2)^(0+128),w
  8911  00B8  07AC               	addwf	main@checkSumAux^(0+128),f
  8912  00B9                     l4982:
  8913  00B9  3001               	movlw	1
  8914  00BA  07AF               	addwf	main@i^(0+128),f
  8915  00BB  3000               	movlw	0
  8916  00BC  3DB0               	addwfc	(main@i+1)^(0+128),f
  8917  00BD                     l4984:
  8918  00BD  0830               	movf	(main@i+1)^(0+128),w
  8919  00BE  3A80               	xorlw	128
  8920  00BF  00A9               	movwf	??_main^(0+128)
  8921  00C0  3080               	movlw	128
  8922  00C1  0229               	subwf	??_main^(0+128),w
  8923  00C2  1D03               	skipz
  8924  00C3  28C6               	goto	u4815
  8925  00C4  300D               	movlw	13
  8926  00C5  022F               	subwf	main@i^(0+128),w
  8927  00C6                     u4815:
  8928  00C6  1C03               	skipc
  8929  00C7  28C9               	goto	u4811
  8930  00C8  28CA               	goto	u4810
  8931  00C9                     u4811:
  8932  00C9  28A1               	goto	l4980
  8933  00CA                     u4810:
  8934  00CA                     l4986:
  8935                           
  8936                           ;main.c: 631: };main.c: 632: if(checkSumAux != DATAEE_ReadByte(0x7000 + (13*8))){
  8937  00CA  3068               	movlw	104
  8938  00CB  0021               	movlb	1	; select bank1
  8939  00CC  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  8940  00CD  3070               	movlw	112
  8941  00CE  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  8942  00CF  3197  27F1  3180   	fcall	_DATAEE_ReadByte
  8943  00D2  0021               	movlb	1	; select bank1
  8944  00D3  062C               	xorwf	main@checkSumAux^(0+128),w
  8945  00D4  1903               	skipnz
  8946  00D5  28D7               	goto	u4821
  8947  00D6  28D8               	goto	u4820
  8948  00D7                     u4821:
  8949  00D7  28DA               	goto	l4990
  8950  00D8                     u4820:
  8951  00D8                     l4988:
  8952                           
  8953                           ;main.c: 633: corrupted = 1;
  8954  00D8  01AE               	clrf	main@corrupted^(0+128)
  8955  00D9  0AAE               	incf	main@corrupted^(0+128),f
  8956  00DA                     l4990:
  8957                           
  8958                           ;main.c: 634: };main.c: 635: };main.c: 637: if(notInit || corrupted){
  8959  00DA  0021               	movlb	1	; select bank1
  8960  00DB  082D               	movf	main@notInit^(0+128),w
  8961  00DC  1D03               	btfss	3,2
  8962  00DD  28DF               	goto	u4831
  8963  00DE  28E0               	goto	u4830
  8964  00DF                     u4831:
  8965  00DF  28E5               	goto	l4994
  8966  00E0                     u4830:
  8967  00E0                     l4992:
  8968  00E0  082E               	movf	main@corrupted^(0+128),w
  8969  00E1  1903               	btfsc	3,2
  8970  00E2  28E4               	goto	u4841
  8971  00E3  28E5               	goto	u4840
  8972  00E4                     u4841:
  8973  00E4  297D               	goto	l4996
  8974  00E5                     u4840:
  8975  00E5                     l4994:
  8976                           
  8977                           ;main.c: 638: DATAEE_WriteByte( 0x7000 + (0 * 8), 'S');
  8978  00E5  3000               	movlw	0
  8979  00E6  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  8980  00E7  3070               	movlw	112
  8981  00E8  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  8982  00E9  3053               	movlw	83
  8983  00EA  00A9               	movwf	??_main^(0+128)
  8984  00EB  0829               	movf	??_main^(0+128),w
  8985  00EC  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  8986  00ED  3187  27D8  3180   	fcall	_DATAEE_WriteByte
  8987                           
  8988                           ;main.c: 639: DATAEE_WriteByte( 0x7000 + (1 * 8), 25);
  8989  00F0  3008               	movlw	8
  8990  00F1  0021               	movlb	1	; select bank1
  8991  00F2  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  8992  00F3  3070               	movlw	112
  8993  00F4  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  8994  00F5  3019               	movlw	25
  8995  00F6  00A9               	movwf	??_main^(0+128)
  8996  00F7  0829               	movf	??_main^(0+128),w
  8997  00F8  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  8998  00F9  3187  27D8  3180   	fcall	_DATAEE_WriteByte
  8999                           
  9000                           ;main.c: 640: DATAEE_WriteByte( 0x7000 + (2 * 8), 3);
  9001  00FC  3010               	movlw	16
  9002  00FD  0021               	movlb	1	; select bank1
  9003  00FE  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9004  00FF  3070               	movlw	112
  9005  0100  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9006  0101  3003               	movlw	3
  9007  0102  00A9               	movwf	??_main^(0+128)
  9008  0103  0829               	movf	??_main^(0+128),w
  9009  0104  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9010  0105  3187  27D8  3180   	fcall	_DATAEE_WriteByte
  9011                           
  9012                           ;main.c: 641: DATAEE_WriteByte( 0x7000 + (3 * 8), 5);
  9013  0108  3018               	movlw	24
  9014  0109  0021               	movlb	1	; select bank1
  9015  010A  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9016  010B  3070               	movlw	112
  9017  010C  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9018  010D  3005               	movlw	5
  9019  010E  00A9               	movwf	??_main^(0+128)
  9020  010F  0829               	movf	??_main^(0+128),w
  9021  0110  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9022  0111  3187  27D8  3180   	fcall	_DATAEE_WriteByte
  9023                           
  9024                           ;main.c: 642: DATAEE_WriteByte( 0x7000 + (4 * 8), 12);
  9025  0114  3020               	movlw	32
  9026  0115  0021               	movlb	1	; select bank1
  9027  0116  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9028  0117  3070               	movlw	112
  9029  0118  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9030  0119  300C               	movlw	12
  9031  011A  00A9               	movwf	??_main^(0+128)
  9032  011B  0829               	movf	??_main^(0+128),w
  9033  011C  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9034  011D  3187  27D8  3180   	fcall	_DATAEE_WriteByte
  9035                           
  9036                           ;main.c: 643: DATAEE_WriteByte( 0x7000 + (5 * 8), 0);
  9037  0120  3028               	movlw	40
  9038  0121  0021               	movlb	1	; select bank1
  9039  0122  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9040  0123  3070               	movlw	112
  9041  0124  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9042  0125  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9043  0126  3187  27D8  3180   	fcall	_DATAEE_WriteByte
  9044                           
  9045                           ;main.c: 644: DATAEE_WriteByte( 0x7000 + (6 * 8), 0);
  9046  0129  3030               	movlw	48
  9047  012A  0021               	movlb	1	; select bank1
  9048  012B  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9049  012C  3070               	movlw	112
  9050  012D  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9051  012E  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9052  012F  3187  27D8  3180   	fcall	_DATAEE_WriteByte
  9053                           
  9054                           ;main.c: 645: DATAEE_WriteByte( 0x7000 + (7 * 8), 28);
  9055  0132  3038               	movlw	56
  9056  0133  0021               	movlb	1	; select bank1
  9057  0134  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9058  0135  3070               	movlw	112
  9059  0136  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9060  0137  301C               	movlw	28
  9061  0138  00A9               	movwf	??_main^(0+128)
  9062  0139  0829               	movf	??_main^(0+128),w
  9063  013A  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9064  013B  3187  27D8  3180   	fcall	_DATAEE_WriteByte
  9065                           
  9066                           ;main.c: 646: DATAEE_WriteByte( 0x7000 + (8 * 8), 4);
  9067  013E  3040               	movlw	64
  9068  013F  0021               	movlb	1	; select bank1
  9069  0140  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9070  0141  3070               	movlw	112
  9071  0142  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9072  0143  3004               	movlw	4
  9073  0144  00A9               	movwf	??_main^(0+128)
  9074  0145  0829               	movf	??_main^(0+128),w
  9075  0146  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9076  0147  3187  27D8  3180   	fcall	_DATAEE_WriteByte
  9077                           
  9078                           ;main.c: 647: DATAEE_WriteByte( 0x7000 + (9 * 8), 'a');
  9079  014A  3048               	movlw	72
  9080  014B  0021               	movlb	1	; select bank1
  9081  014C  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9082  014D  3070               	movlw	112
  9083  014E  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9084  014F  3061               	movlw	97
  9085  0150  00A9               	movwf	??_main^(0+128)
  9086  0151  0829               	movf	??_main^(0+128),w
  9087  0152  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9088  0153  3187  27D8  3180   	fcall	_DATAEE_WriteByte
  9089                           
  9090                           ;main.c: 648: DATAEE_WriteByte( 0x7000 + (10 * 8), 0);
  9091  0156  3050               	movlw	80
  9092  0157  0021               	movlb	1	; select bank1
  9093  0158  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9094  0159  3070               	movlw	112
  9095  015A  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9096  015B  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9097  015C  3187  27D8  3180   	fcall	_DATAEE_WriteByte
  9098                           
  9099                           ;main.c: 649: DATAEE_WriteByte( 0x7000 + (11 * 8), 0);
  9100  015F  3058               	movlw	88
  9101  0160  0021               	movlb	1	; select bank1
  9102  0161  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9103  0162  3070               	movlw	112
  9104  0163  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9105  0164  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9106  0165  3187  27D8  3180   	fcall	_DATAEE_WriteByte
  9107                           
  9108                           ;main.c: 650: DATAEE_WriteByte( 0x7000 + (12 * 8), 0);
  9109  0168  3060               	movlw	96
  9110  0169  0021               	movlb	1	; select bank1
  9111  016A  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9112  016B  3070               	movlw	112
  9113  016C  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9114  016D  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9115  016E  3187  27D8  3180   	fcall	_DATAEE_WriteByte
  9116                           
  9117                           ;main.c: 651: DATAEE_WriteByte( 0x7000 + (13 * 8), 174);
  9118  0171  3068               	movlw	104
  9119  0172  0021               	movlb	1	; select bank1
  9120  0173  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9121  0174  3070               	movlw	112
  9122  0175  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9123  0176  30AE               	movlw	174
  9124  0177  00A9               	movwf	??_main^(0+128)
  9125  0178  0829               	movf	??_main^(0+128),w
  9126  0179  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9127  017A  3187  27D8  3180   	fcall	_DATAEE_WriteByte
  9128  017D                     l4996:
  9129                           
  9130                           ;main.c: 652: };main.c: 654: PMON = DATAEE_ReadByte(0x7000 + (2*8));
  9131  017D  3010               	movlw	16
  9132  017E  0021               	movlb	1	; select bank1
  9133  017F  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9134  0180  3070               	movlw	112
  9135  0181  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9136  0182  3197  27F1  3180   	fcall	_DATAEE_ReadByte
  9137  0185  0021               	movlb	1	; select bank1
  9138  0186  00A9               	movwf	??_main^(0+128)
  9139  0187  0829               	movf	??_main^(0+128),w
  9140  0188  00C3               	movwf	_PMON^(0+128)
  9141  0189                     l4998:
  9142                           
  9143                           ;main.c: 655: TALA = DATAEE_ReadByte(0x7000 + (3*8));
  9144  0189  3018               	movlw	24
  9145  018A  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9146  018B  3070               	movlw	112
  9147  018C  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9148  018D  3197  27F1  3180   	fcall	_DATAEE_ReadByte
  9149  0190  0021               	movlb	1	; select bank1
  9150  0191  00A9               	movwf	??_main^(0+128)
  9151  0192  0829               	movf	??_main^(0+128),w
  9152  0193  0020               	movlb	0	; select bank0
  9153  0194  00E5               	movwf	_TALA
  9154  0195                     l5000:
  9155                           
  9156                           ;main.c: 656: clkAlarm.alarmVal.h = DATAEE_ReadByte(0x7000 + (4*8));
  9157  0195  3020               	movlw	32
  9158  0196  0021               	movlb	1	; select bank1
  9159  0197  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9160  0198  3070               	movlw	112
  9161  0199  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9162  019A  3197  27F1  3180   	fcall	_DATAEE_ReadByte
  9163  019D  0021               	movlb	1	; select bank1
  9164  019E  00A9               	movwf	??_main^(0+128)
  9165  019F  0829               	movf	??_main^(0+128),w
  9166  01A0  0020               	movlb	0	; select bank0
  9167  01A1  00CD               	movwf	_clkAlarm
  9168  01A2                     l5002:
  9169                           
  9170                           ;main.c: 657: clkAlarm.alarmVal.m = DATAEE_ReadByte(0x7000 + (5*8));
  9171  01A2  3028               	movlw	40
  9172  01A3  0021               	movlb	1	; select bank1
  9173  01A4  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9174  01A5  3070               	movlw	112
  9175  01A6  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9176  01A7  3197  27F1  3180   	fcall	_DATAEE_ReadByte
  9177  01AA  0021               	movlb	1	; select bank1
  9178  01AB  00A9               	movwf	??_main^(0+128)
  9179  01AC  0829               	movf	??_main^(0+128),w
  9180  01AD  0020               	movlb	0	; select bank0
  9181  01AE  00CE               	movwf	_clkAlarm+1
  9182  01AF                     l5004:
  9183                           
  9184                           ;main.c: 658: clkAlarm.alarmVal.s = DATAEE_ReadByte(0x7000 + (6*8));
  9185  01AF  3030               	movlw	48
  9186  01B0  0021               	movlb	1	; select bank1
  9187  01B1  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9188  01B2  3070               	movlw	112
  9189  01B3  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9190  01B4  3197  27F1  3180   	fcall	_DATAEE_ReadByte
  9191  01B7  0021               	movlb	1	; select bank1
  9192  01B8  00A9               	movwf	??_main^(0+128)
  9193  01B9  0829               	movf	??_main^(0+128),w
  9194  01BA  0020               	movlb	0	; select bank0
  9195  01BB  00CF               	movwf	_clkAlarm+2
  9196  01BC                     l5006:
  9197                           
  9198                           ;main.c: 659: tempAlarm.alarmTemp = DATAEE_ReadByte(0x7000 + (7*8));
  9199  01BC  3038               	movlw	56
  9200  01BD  0021               	movlb	1	; select bank1
  9201  01BE  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9202  01BF  3070               	movlw	112
  9203  01C0  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9204  01C1  3197  27F1  3180   	fcall	_DATAEE_ReadByte
  9205  01C4  0021               	movlb	1	; select bank1
  9206  01C5  00A9               	movwf	??_main^(0+128)
  9207  01C6  0829               	movf	??_main^(0+128),w
  9208  01C7  0020               	movlb	0	; select bank0
  9209  01C8  00D4               	movwf	_tempAlarm
  9210  01C9                     l5008:
  9211                           
  9212                           ;main.c: 660: lumAlarm.alarmLum = DATAEE_ReadByte(0x7000 + (8*8));
  9213  01C9  3040               	movlw	64
  9214  01CA  0021               	movlb	1	; select bank1
  9215  01CB  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9216  01CC  3070               	movlw	112
  9217  01CD  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9218  01CE  3197  27F1  3180   	fcall	_DATAEE_ReadByte
  9219  01D1  0021               	movlb	1	; select bank1
  9220  01D2  00A9               	movwf	??_main^(0+128)
  9221  01D3  0829               	movf	??_main^(0+128),w
  9222  01D4  0020               	movlb	0	; select bank0
  9223  01D5  00D1               	movwf	_lumAlarm
  9224  01D6                     l5010:
  9225                           
  9226                           ;main.c: 661: ALAF = DATAEE_ReadByte(0x7000 + (9*8));
  9227  01D6  3048               	movlw	72
  9228  01D7  0021               	movlb	1	; select bank1
  9229  01D8  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9230  01D9  3070               	movlw	112
  9231  01DA  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9232  01DB  3197  27F1  3180   	fcall	_DATAEE_ReadByte
  9233  01DE  0021               	movlb	1	; select bank1
  9234  01DF  00A9               	movwf	??_main^(0+128)
  9235  01E0  0829               	movf	??_main^(0+128),w
  9236  01E1  0020               	movlb	0	; select bank0
  9237  01E2  00E4               	movwf	_ALAF
  9238  01E3                     l5012:
  9239                           
  9240                           ;main.c: 662: t.h = DATAEE_ReadByte(0x7000 + (10*8));
  9241  01E3  3050               	movlw	80
  9242  01E4  0021               	movlb	1	; select bank1
  9243  01E5  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9244  01E6  3070               	movlw	112
  9245  01E7  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9246  01E8  3197  27F1  3180   	fcall	_DATAEE_ReadByte
  9247  01EB  0021               	movlb	1	; select bank1
  9248  01EC  00A9               	movwf	??_main^(0+128)
  9249  01ED  0829               	movf	??_main^(0+128),w
  9250  01EE  0020               	movlb	0	; select bank0
  9251  01EF  00D7               	movwf	_t
  9252  01F0                     l5014:
  9253                           
  9254                           ;main.c: 663: t.m = DATAEE_ReadByte(0x7000 + (11*8));
  9255  01F0  3058               	movlw	88
  9256  01F1  0021               	movlb	1	; select bank1
  9257  01F2  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9258  01F3  3070               	movlw	112
  9259  01F4  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9260  01F5  3197  27F1  3180   	fcall	_DATAEE_ReadByte
  9261  01F8  0021               	movlb	1	; select bank1
  9262  01F9  00A9               	movwf	??_main^(0+128)
  9263  01FA  0829               	movf	??_main^(0+128),w
  9264  01FB  0020               	movlb	0	; select bank0
  9265  01FC  00D8               	movwf	_t+1
  9266  01FD                     l5016:
  9267                           
  9268                           ;main.c: 664: IDX = DATAEE_ReadByte(0x7000 + (12*8));
  9269  01FD  3060               	movlw	96
  9270  01FE  0021               	movlb	1	; select bank1
  9271  01FF  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9272  0200  3070               	movlw	112
  9273  0201  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9274  0202  3197  27F1  3180   	fcall	_DATAEE_ReadByte
  9275  0205  0021               	movlb	1	; select bank1
  9276  0206  00A9               	movwf	??_main^(0+128)
  9277  0207  0829               	movf	??_main^(0+128),w
  9278  0208  00C2               	movwf	_IDX^(0+128)
  9279  0209                     l5018:
  9280                           
  9281                           ;main.c: 668: tempAlarm.trigger = 0;
  9282  0209  0020               	movlb	0	; select bank0
  9283  020A  01D5               	clrf	_tempAlarm+1
  9284  020B                     l5020:
  9285                           
  9286                           ;main.c: 669: tempAlarm.triggered = 0;
  9287  020B  01D6               	clrf	_tempAlarm+2
  9288  020C                     l5022:
  9289                           
  9290                           ;main.c: 671: lumAlarm.trigger = 0;
  9291  020C  01D2               	clrf	_lumAlarm+1
  9292  020D                     l5024:
  9293                           
  9294                           ;main.c: 672: lumAlarm.triggered = 0;
  9295  020D  01D3               	clrf	_lumAlarm+2
  9296  020E                     l5026:
  9297                           
  9298                           ;main.c: 674: clkAlarm.trigger = 0;
  9299  020E  01D0               	clrf	_clkAlarm+3
  9300  020F                     l5028:
  9301                           
  9302                           ;main.c: 677: i2c1_driver_open();
  9303  020F  3197  27CA  3180   	fcall	_i2c1_driver_open
  9304  0212                     l5030:
  9305                           
  9306                           ;main.c: 678: TRISCbits.TRISC3 = 1;
  9307  0212  0020               	movlb	0	; select bank0
  9308  0213  1593               	bsf	19,3	;volatile
  9309  0214                     l5032:
  9310                           
  9311                           ;main.c: 679: TRISCbits.TRISC4 = 1;
  9312  0214  1613               	bsf	19,4	;volatile
  9313  0215                     l5034:
  9314                           
  9315                           ;main.c: 680: WPUC3 = 1;
  9316  0215  003E               	movlb	30	; select bank30
  9317  0216  15CF               	bsf	79,3	;volatile
  9318  0217                     l5036:
  9319                           
  9320                           ;main.c: 681: WPUC4 = 1;
  9321  0217  164F               	bsf	79,4	;volatile
  9322  0218                     l5038:
  9323                           
  9324                           ;main.c: 682: LCDinit();
  9325  0218  318C  2447  3180   	fcall	_LCDinit
  9326  021B                     l5040:
  9327                           
  9328                           ;main.c: 685: (INTCONbits.GIE = 1);
  9329  021B  178B               	bsf	11,7	;volatile
  9330  021C                     l5042:
  9331                           
  9332                           ;main.c: 688: (INTCONbits.PEIE = 1);
  9333  021C  170B               	bsf	11,6	;volatile
  9334  021D                     l5044:
  9335                           
  9336                           ;main.c: 691: {;main.c: 692: if(PORTBbits.RB4 == 0){
  9337  021D  0020               	movlb	0	; select bank0
  9338  021E  1A0D               	btfsc	13,4	;volatile
  9339  021F  2A21               	goto	u4851
  9340  0220  2A22               	goto	u4850
  9341  0221                     u4851:
  9342  0221  2A5B               	goto	l5062
  9343  0222                     u4850:
  9344  0222                     l5046:
  9345                           
  9346                           ;main.c: 693: _delay((unsigned long)((50)*(1000000/4000.0)));
  9347  0222  3011               	movlw	17
  9348  0223  0021               	movlb	1	; select bank1
  9349  0224  00A9               	movwf	??_main^(0+128)
  9350  0225  303A               	movlw	58
  9351  0226                     u4917:
  9352  0226  0B89               	decfsz	9,f
  9353  0227  2A26               	goto	u4917
  9354  0228  0BA9               	decfsz	??_main^(0+128),f
  9355  0229  2A26               	goto	u4917
  9356  022A  0000               	nop
  9357  022B                     l5048:
  9358                           
  9359                           ;main.c: 695: if(mode == 0 && (clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigger
      +                          )){
  9360  022B  0020               	movlb	0	; select bank0
  9361  022C  085A               	movf	_mode,w
  9362  022D  045B               	iorwf	_mode+1,w
  9363  022E  1D03               	btfss	3,2
  9364  022F  2A31               	goto	u4861
  9365  0230  2A32               	goto	u4860
  9366  0231                     u4861:
  9367  0231  2A45               	goto	l5058
  9368  0232                     u4860:
  9369  0232                     l5050:
  9370  0232  0850               	movf	_clkAlarm+3,w
  9371  0233  1D03               	btfss	3,2
  9372  0234  2A36               	goto	u4871
  9373  0235  2A37               	goto	u4870
  9374  0236                     u4871:
  9375  0236  2A41               	goto	l5056
  9376  0237                     u4870:
  9377  0237                     l5052:
  9378  0237  0855               	movf	_tempAlarm+1,w
  9379  0238  1D03               	btfss	3,2
  9380  0239  2A3B               	goto	u4881
  9381  023A  2A3C               	goto	u4880
  9382  023B                     u4881:
  9383  023B  2A41               	goto	l5056
  9384  023C                     u4880:
  9385  023C                     l5054:
  9386  023C  0852               	movf	_lumAlarm+1,w
  9387  023D  1903               	btfsc	3,2
  9388  023E  2A40               	goto	u4891
  9389  023F  2A41               	goto	u4890
  9390  0240                     u4891:
  9391  0240  2A45               	goto	l5058
  9392  0241                     u4890:
  9393  0241                     l5056:
  9394                           
  9395                           ;main.c: 696: clkAlarm.trigger = 0;
  9396  0241  01D0               	clrf	_clkAlarm+3
  9397                           
  9398                           ;main.c: 697: tempAlarm.trigger = 0;
  9399  0242  01D5               	clrf	_tempAlarm+1
  9400                           
  9401                           ;main.c: 698: lumAlarm.trigger = 0;
  9402  0243  01D2               	clrf	_lumAlarm+1
  9403                           
  9404                           ;main.c: 699: }
  9405  0244  2A49               	goto	l1285
  9406  0245                     l5058:
  9407                           
  9408                           ;main.c: 700: else{;main.c: 701: mode = 1;
  9409  0245  3001               	movlw	1
  9410  0246  00DA               	movwf	_mode
  9411  0247  3000               	movlw	0
  9412  0248  00DB               	movwf	_mode+1
  9413  0249                     l1285:
  9414  0249  1E0D               	btfss	13,4	;volatile
  9415  024A  2A4C               	goto	u4901
  9416  024B  2A4D               	goto	u4900
  9417  024C                     u4901:
  9418  024C  2A49               	goto	l1285
  9419  024D                     u4900:
  9420  024D  2A5B               	goto	l5062
  9421  024E                     l5060:
  9422                           
  9423                           ;main.c: 709: editClock();
  9424  024E  318C  24BD  3180   	fcall	_editClock
  9425  0251                     l1292:	
  9426                           ;main.c: 710: case 2:
  9427                           
  9428                           
  9429                           ;main.c: 711: editTemp();
  9430  0251  318A  2266  3180   	fcall	_editTemp
  9431  0254                     l1293:	
  9432                           ;main.c: 712: case 3:
  9433                           
  9434                           
  9435                           ;main.c: 713: editLum();
  9436  0254  318A  222E  3180   	fcall	_editLum
  9437  0257                     l1294:	
  9438                           ;main.c: 714: case 4:
  9439                           
  9440                           
  9441                           ;main.c: 715: toggleAlarms();
  9442  0257  318A  229E  3180   	fcall	_toggleAlarms
  9443                           
  9444                           ;main.c: 716: }
  9445  025A  2A1D               	goto	l5044
  9446  025B                     l5062:
  9447                           
  9448                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9449                           ; Switch size 1, requested type "simple"
  9450                           ; Number of cases is 1, Range of values is 0 to 0
  9451                           ; switch strategies available:
  9452                           ; Name         Instructions Cycles
  9453                           ; simple_byte            4     3 (average)
  9454                           ; direct_byte            8     6 (fixed)
  9455                           ; jumptable            260     6 (fixed)
  9456                           ;	Chosen strategy is simple_byte
  9457  025B  085B               	movf	_mode+1,w
  9458  025C  3A00               	xorlw	0	; case 0
  9459  025D  1903               	skipnz
  9460  025E  2A60               	goto	l5088
  9461  025F  2A1D               	goto	l5044
  9462  0260                     l5088:
  9463                           
  9464                           ; Switch size 1, requested type "simple"
  9465                           ; Number of cases is 5, Range of values is 0 to 4
  9466                           ; switch strategies available:
  9467                           ; Name         Instructions Cycles
  9468                           ; direct_byte           16     6 (fixed)
  9469                           ; simple_byte           16     9 (average)
  9470                           ; jumptable            260     6 (fixed)
  9471                           ;	Chosen strategy is simple_byte
  9472  0260  085A               	movf	_mode,w
  9473  0261  3A00               	xorlw	0	; case 0
  9474  0262  1903               	skipnz
  9475  0263  2A1D               	goto	l5044
  9476  0264  3A01               	xorlw	1	; case 1
  9477  0265  1903               	skipnz
  9478  0266  2A4E               	goto	l5060
  9479  0267  3A03               	xorlw	3	; case 2
  9480  0268  1903               	skipnz
  9481  0269  2A51               	goto	l1292
  9482  026A  3A01               	xorlw	1	; case 3
  9483  026B  1903               	skipnz
  9484  026C  2A54               	goto	l1293
  9485  026D  3A07               	xorlw	7	; case 4
  9486  026E  1903               	skipnz
  9487  026F  2A57               	goto	l1294
  9488  0270  2A1D               	goto	l5044
  9489  0271  3180  2840         	ljmp	start
  9490  0273                     __end_of_main:
  9491                           
  9492                           	psect	text1
  9493  0A9E                     __ptext1:	
  9494 ;; *************** function _toggleAlarms *****************
  9495 ;; Defined at:
  9496 ;;		line 585 in file "main.c"
  9497 ;; Parameters:    Size  Location     Type
  9498 ;;		None
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;		None
  9501 ;; Return value:  Size  Location     Type
  9502 ;;                  1    wreg      void 
  9503 ;; Registers used:
  9504 ;;		wreg, status,2, status,0
  9505 ;; Tracked objects:
  9506 ;;		On entry : 0/0
  9507 ;;		On exit  : 0/0
  9508 ;;		Unchanged: 0/0
  9509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9512 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9513 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9514 ;;Total ram usage:        1 bytes
  9515 ;; Hardware stack levels used:    1
  9516 ;; Hardware stack levels required when called:    7
  9517 ;; This function calls:
  9518 ;;		Nothing
  9519 ;; This function is called by:
  9520 ;;		_main
  9521 ;; This function uses a non-reentrant model
  9522 ;;
  9523                           
  9524                           
  9525                           ;psect for function _toggleAlarms
  9526  0A9E                     _toggleAlarms:
  9527  0A9E                     l1257:	
  9528                           ;incstack = 0
  9529                           ; Regs used in _toggleAlarms: [wreg+status,2+status,0]
  9530                           ;main.c: 587: while(1){
  9531                           
  9532                           
  9533                           ;main.c: 588: if(PORTBbits.RB4 == 0){
  9534  0A9E  0020               	movlb	0	; select bank0
  9535  0A9F  1A0D               	btfsc	13,4	;volatile
  9536  0AA0  2AA2               	goto	u4661
  9537  0AA1  2AA3               	goto	u4660
  9538  0AA2                     u4661:
  9539  0AA2  2AB4               	goto	l1258
  9540  0AA3                     u4660:
  9541  0AA3                     l4890:
  9542                           
  9543                           ;main.c: 589: _delay((unsigned long)((50)*(1000000/4000.0)));
  9544  0AA3  3011               	movlw	17
  9545  0AA4  0021               	movlb	1	; select bank1
  9546  0AA5  00A0               	movwf	??_toggleAlarms^(0+128)
  9547  0AA6  303A               	movlw	58
  9548  0AA7                     u4927:
  9549  0AA7  0B89               	decfsz	9,f
  9550  0AA8  2AA7               	goto	u4927
  9551  0AA9  0BA0               	decfsz	??_toggleAlarms^(0+128),f
  9552  0AAA  2AA7               	goto	u4927
  9553  0AAB  0000               	nop
  9554  0AAC                     l4892:
  9555                           
  9556                           ;main.c: 590: mode = 0;
  9557  0AAC  0020               	movlb	0	; select bank0
  9558  0AAD  01DA               	clrf	_mode
  9559  0AAE  01DB               	clrf	_mode+1
  9560  0AAF                     l1259:	
  9561                           ;main.c: 591: while(PORTBbits.RB4==0){};
  9562                           
  9563  0AAF  1E0D               	btfss	13,4	;volatile
  9564  0AB0  2AB2               	goto	u4671
  9565  0AB1  2AB3               	goto	u4670
  9566  0AB2                     u4671:
  9567  0AB2  2AAF               	goto	l1259
  9568  0AB3                     u4670:
  9569  0AB3  2AD5               	goto	l1267
  9570  0AB4                     l1258:
  9571                           
  9572                           ;main.c: 593: };main.c: 595: if(PORTCbits.RC5 == 0){
  9573  0AB4  1A8E               	btfsc	14,5	;volatile
  9574  0AB5  2AB7               	goto	u4681
  9575  0AB6  2AB8               	goto	u4680
  9576  0AB7                     u4681:
  9577  0AB7  2A9E               	goto	l1257
  9578  0AB8                     u4680:
  9579  0AB8                     l4894:
  9580                           
  9581                           ;main.c: 596: if(ALAF == 'A'){
  9582  0AB8  3041               	movlw	65
  9583  0AB9  0664               	xorwf	_ALAF,w
  9584  0ABA  1D03               	btfss	3,2
  9585  0ABB  2ABD               	goto	u4691
  9586  0ABC  2ABE               	goto	u4690
  9587  0ABD                     u4691:
  9588  0ABD  2AC5               	goto	l4898
  9589  0ABE                     u4690:
  9590  0ABE                     l4896:
  9591                           
  9592                           ;main.c: 597: ALAF = 'a';
  9593  0ABE  3061               	movlw	97
  9594  0ABF  0021               	movlb	1	; select bank1
  9595  0AC0  00A0               	movwf	??_toggleAlarms^(0+128)
  9596  0AC1  0820               	movf	??_toggleAlarms^(0+128),w
  9597  0AC2  0020               	movlb	0	; select bank0
  9598  0AC3  00E4               	movwf	_ALAF
  9599                           
  9600                           ;main.c: 598: } else {
  9601  0AC4  2ACB               	goto	l1265
  9602  0AC5                     l4898:
  9603                           
  9604                           ;main.c: 599: ALAF = 'A';
  9605  0AC5  3041               	movlw	65
  9606  0AC6  0021               	movlb	1	; select bank1
  9607  0AC7  00A0               	movwf	??_toggleAlarms^(0+128)
  9608  0AC8  0820               	movf	??_toggleAlarms^(0+128),w
  9609  0AC9  0020               	movlb	0	; select bank0
  9610  0ACA  00E4               	movwf	_ALAF
  9611  0ACB                     l1265:
  9612                           
  9613                           ;main.c: 600: };main.c: 601: _delay((unsigned long)((100)*(1000000/4000.0)));
  9614  0ACB  3021               	movlw	33
  9615  0ACC  0021               	movlb	1	; select bank1
  9616  0ACD  00A0               	movwf	??_toggleAlarms^(0+128)
  9617  0ACE  3076               	movlw	118
  9618  0ACF                     u4937:
  9619  0ACF  0B89               	decfsz	9,f
  9620  0AD0  2ACF               	goto	u4937
  9621  0AD1  0BA0               	decfsz	??_toggleAlarms^(0+128),f
  9622  0AD2  2ACF               	goto	u4937
  9623  0AD3  0000               	nop
  9624  0AD4  2A9E               	goto	l1257
  9625  0AD5                     l1267:
  9626  0AD5  0008               	return
  9627  0AD6                     __end_of_toggleAlarms:
  9628                           
  9629                           	psect	text2
  9630  17CA                     __ptext2:	
  9631 ;; *************** function _i2c1_driver_open *****************
  9632 ;; Defined at:
  9633 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  9634 ;; Parameters:    Size  Location     Type
  9635 ;;		None
  9636 ;; Auto vars:     Size  Location     Type
  9637 ;;		None
  9638 ;; Return value:  Size  Location     Type
  9639 ;;		None               void
  9640 ;; Registers used:
  9641 ;;		wreg, status,2
  9642 ;; Tracked objects:
  9643 ;;		On entry : 0/0
  9644 ;;		On exit  : 0/0
  9645 ;;		Unchanged: 0/0
  9646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9651 ;;Total ram usage:        0 bytes
  9652 ;; Hardware stack levels used:    1
  9653 ;; Hardware stack levels required when called:    7
  9654 ;; This function calls:
  9655 ;;		Nothing
  9656 ;; This function is called by:
  9657 ;;		_main
  9658 ;; This function uses a non-reentrant model
  9659 ;;
  9660                           
  9661                           
  9662                           ;psect for function _i2c1_driver_open
  9663  17CA                     _i2c1_driver_open:
  9664  17CA                     l4658:	
  9665                           ;incstack = 0
  9666                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  9667                           
  9668                           
  9669                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
  9670  17CA  0023               	movlb	3	; select bank3
  9671  17CB  1A90               	btfsc	16,5	;volatile
  9672  17CC  2FCE               	goto	u4151
  9673  17CD  2FCF               	goto	u4150
  9674  17CE                     u4151:
  9675  17CE  2FD5               	goto	l239
  9676  17CF                     u4150:
  9677  17CF                     l4660:
  9678                           
  9679                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
  9680  17CF  018F               	clrf	15	;volatile
  9681  17D0                     l4662:
  9682                           
  9683                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
  9684  17D0  3028               	movlw	40
  9685  17D1  0090               	movwf	16	;volatile
  9686  17D2                     l4664:
  9687                           
  9688                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
  9689  17D2  0191               	clrf	17	;volatile
  9690                           
  9691                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
  9692  17D3  3003               	movlw	3
  9693  17D4  008D               	movwf	13	;volatile
  9694  17D5                     l239:
  9695  17D5  0008               	return
  9696  17D6                     __end_of_i2c1_driver_open:
  9697                           
  9698                           	psect	text3
  9699  0A66                     __ptext3:	
  9700 ;; *************** function _editTemp *****************
  9701 ;; Defined at:
  9702 ;;		line 541 in file "main.c"
  9703 ;; Parameters:    Size  Location     Type
  9704 ;;		None
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;		None
  9707 ;; Return value:  Size  Location     Type
  9708 ;;                  1    wreg      void 
  9709 ;; Registers used:
  9710 ;;		wreg, status,2, status,0
  9711 ;; Tracked objects:
  9712 ;;		On entry : 0/0
  9713 ;;		On exit  : 0/0
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9718 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9719 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9720 ;;Total ram usage:        1 bytes
  9721 ;; Hardware stack levels used:    1
  9722 ;; Hardware stack levels required when called:    7
  9723 ;; This function calls:
  9724 ;;		Nothing
  9725 ;; This function is called by:
  9726 ;;		_main
  9727 ;; This function uses a non-reentrant model
  9728 ;;
  9729                           
  9730                           
  9731                           ;psect for function _editTemp
  9732  0A66                     _editTemp:
  9733  0A66                     l4858:	
  9734                           ;incstack = 0
  9735                           ; Regs used in _editTemp: [wreg+status,2+status,0]
  9736                           
  9737                           
  9738                           ;main.c: 542: editingTempAlarm = 1;
  9739  0A66  0020               	movlb	0	; select bank0
  9740  0A67  01E1               	clrf	_editingTempAlarm
  9741  0A68  0AE1               	incf	_editingTempAlarm,f
  9742  0A69                     l1233:	
  9743                           ;main.c: 544: while(1){
  9744                           
  9745                           
  9746                           ;main.c: 545: if(PORTBbits.RB4 == 0){
  9747  0A69  0020               	movlb	0	; select bank0
  9748  0A6A  1A0D               	btfsc	13,4	;volatile
  9749  0A6B  2A6D               	goto	u4581
  9750  0A6C  2A6E               	goto	u4580
  9751  0A6D                     u4581:
  9752  0A6D  2A82               	goto	l1234
  9753  0A6E                     u4580:
  9754  0A6E                     l4860:
  9755                           
  9756                           ;main.c: 546: _delay((unsigned long)((50)*(1000000/4000.0)));
  9757  0A6E  3011               	movlw	17
  9758  0A6F  0021               	movlb	1	; select bank1
  9759  0A70  00A0               	movwf	??_editTemp^(0+128)
  9760  0A71  303A               	movlw	58
  9761  0A72                     u4947:
  9762  0A72  0B89               	decfsz	9,f
  9763  0A73  2A72               	goto	u4947
  9764  0A74  0BA0               	decfsz	??_editTemp^(0+128),f
  9765  0A75  2A72               	goto	u4947
  9766  0A76  0000               	nop
  9767  0A77                     l4862:
  9768                           
  9769                           ;main.c: 547: editingTempAlarm = 0;
  9770  0A77  0020               	movlb	0	; select bank0
  9771  0A78  01E1               	clrf	_editingTempAlarm
  9772  0A79                     l4864:
  9773                           
  9774                           ;main.c: 548: mode = 3;
  9775  0A79  3003               	movlw	3
  9776  0A7A  00DA               	movwf	_mode
  9777  0A7B  3000               	movlw	0
  9778  0A7C  00DB               	movwf	_mode+1
  9779  0A7D                     l1235:	
  9780                           ;main.c: 549: while(PORTBbits.RB4==0){};
  9781                           
  9782  0A7D  1E0D               	btfss	13,4	;volatile
  9783  0A7E  2A80               	goto	u4591
  9784  0A7F  2A81               	goto	u4590
  9785  0A80                     u4591:
  9786  0A80  2A7D               	goto	l1235
  9787  0A81                     u4590:
  9788  0A81  2A9D               	goto	l1242
  9789  0A82                     l1234:
  9790                           
  9791                           ;main.c: 551: };main.c: 553: if(PORTCbits.RC5 == 0){
  9792  0A82  1A8E               	btfsc	14,5	;volatile
  9793  0A83  2A85               	goto	u4601
  9794  0A84  2A86               	goto	u4600
  9795  0A85                     u4601:
  9796  0A85  2A69               	goto	l1233
  9797  0A86                     u4600:
  9798  0A86                     l4866:
  9799                           
  9800                           ;main.c: 554: tempAlarm.alarmTemp++;
  9801  0A86  3001               	movlw	1
  9802  0A87  0021               	movlb	1	; select bank1
  9803  0A88  00A0               	movwf	??_editTemp^(0+128)
  9804  0A89  0820               	movf	??_editTemp^(0+128),w
  9805  0A8A  0020               	movlb	0	; select bank0
  9806  0A8B  07D4               	addwf	_tempAlarm,f
  9807  0A8C                     l4868:
  9808                           
  9809                           ;main.c: 555: if(tempAlarm.alarmTemp > 50){
  9810  0A8C  3033               	movlw	51
  9811  0A8D  0254               	subwf	_tempAlarm,w
  9812  0A8E  1C03               	skipc
  9813  0A8F  2A91               	goto	u4611
  9814  0A90  2A92               	goto	u4610
  9815  0A91                     u4611:
  9816  0A91  2A93               	goto	l4872
  9817  0A92                     u4610:
  9818  0A92                     l4870:
  9819                           
  9820                           ;main.c: 556: tempAlarm.alarmTemp = 0;
  9821  0A92  01D4               	clrf	_tempAlarm
  9822  0A93                     l4872:
  9823                           
  9824                           ;main.c: 557: };main.c: 558: _delay((unsigned long)((100)*(1000000/4000.0)));
  9825  0A93  3021               	movlw	33
  9826  0A94  0021               	movlb	1	; select bank1
  9827  0A95  00A0               	movwf	??_editTemp^(0+128)
  9828  0A96  3076               	movlw	118
  9829  0A97                     u4957:
  9830  0A97  0B89               	decfsz	9,f
  9831  0A98  2A97               	goto	u4957
  9832  0A99  0BA0               	decfsz	??_editTemp^(0+128),f
  9833  0A9A  2A97               	goto	u4957
  9834  0A9B  0000               	nop
  9835  0A9C  2A69               	goto	l1233
  9836  0A9D                     l1242:
  9837  0A9D  0008               	return
  9838  0A9E                     __end_of_editTemp:
  9839                           
  9840                           	psect	text4
  9841  0A2E                     __ptext4:	
  9842 ;; *************** function _editLum *****************
  9843 ;; Defined at:
  9844 ;;		line 563 in file "main.c"
  9845 ;; Parameters:    Size  Location     Type
  9846 ;;		None
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;		None
  9849 ;; Return value:  Size  Location     Type
  9850 ;;                  1    wreg      void 
  9851 ;; Registers used:
  9852 ;;		wreg, status,2, status,0
  9853 ;; Tracked objects:
  9854 ;;		On entry : 0/0
  9855 ;;		On exit  : 0/0
  9856 ;;		Unchanged: 0/0
  9857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9860 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9861 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9862 ;;Total ram usage:        1 bytes
  9863 ;; Hardware stack levels used:    1
  9864 ;; Hardware stack levels required when called:    7
  9865 ;; This function calls:
  9866 ;;		Nothing
  9867 ;; This function is called by:
  9868 ;;		_main
  9869 ;; This function uses a non-reentrant model
  9870 ;;
  9871                           
  9872                           
  9873                           ;psect for function _editLum
  9874  0A2E                     _editLum:
  9875  0A2E                     l4874:	
  9876                           ;incstack = 0
  9877                           ; Regs used in _editLum: [wreg+status,2+status,0]
  9878                           
  9879                           
  9880                           ;main.c: 564: editingLumAlarm = 1;
  9881  0A2E  0020               	movlb	0	; select bank0
  9882  0A2F  01E0               	clrf	_editingLumAlarm
  9883  0A30  0AE0               	incf	_editingLumAlarm,f
  9884  0A31                     l1245:	
  9885                           ;main.c: 566: while(1){
  9886                           
  9887                           
  9888                           ;main.c: 567: if(PORTBbits.RB4 == 0){
  9889  0A31  0020               	movlb	0	; select bank0
  9890  0A32  1A0D               	btfsc	13,4	;volatile
  9891  0A33  2A35               	goto	u4621
  9892  0A34  2A36               	goto	u4620
  9893  0A35                     u4621:
  9894  0A35  2A4A               	goto	l1246
  9895  0A36                     u4620:
  9896  0A36                     l4876:
  9897                           
  9898                           ;main.c: 568: _delay((unsigned long)((50)*(1000000/4000.0)));
  9899  0A36  3011               	movlw	17
  9900  0A37  0021               	movlb	1	; select bank1
  9901  0A38  00A0               	movwf	??_editLum^(0+128)
  9902  0A39  303A               	movlw	58
  9903  0A3A                     u4967:
  9904  0A3A  0B89               	decfsz	9,f
  9905  0A3B  2A3A               	goto	u4967
  9906  0A3C  0BA0               	decfsz	??_editLum^(0+128),f
  9907  0A3D  2A3A               	goto	u4967
  9908  0A3E  0000               	nop
  9909  0A3F                     l4878:
  9910                           
  9911                           ;main.c: 569: editingLumAlarm = 0;
  9912  0A3F  0020               	movlb	0	; select bank0
  9913  0A40  01E0               	clrf	_editingLumAlarm
  9914  0A41                     l4880:
  9915                           
  9916                           ;main.c: 570: mode = 4;
  9917  0A41  3004               	movlw	4
  9918  0A42  00DA               	movwf	_mode
  9919  0A43  3000               	movlw	0
  9920  0A44  00DB               	movwf	_mode+1
  9921  0A45                     l1247:	
  9922                           ;main.c: 571: while(PORTBbits.RB4==0){};
  9923                           
  9924  0A45  1E0D               	btfss	13,4	;volatile
  9925  0A46  2A48               	goto	u4631
  9926  0A47  2A49               	goto	u4630
  9927  0A48                     u4631:
  9928  0A48  2A45               	goto	l1247
  9929  0A49                     u4630:
  9930  0A49  2A65               	goto	l1254
  9931  0A4A                     l1246:
  9932                           
  9933                           ;main.c: 573: };main.c: 575: if(PORTCbits.RC5 == 0){
  9934  0A4A  1A8E               	btfsc	14,5	;volatile
  9935  0A4B  2A4D               	goto	u4641
  9936  0A4C  2A4E               	goto	u4640
  9937  0A4D                     u4641:
  9938  0A4D  2A31               	goto	l1245
  9939  0A4E                     u4640:
  9940  0A4E                     l4882:
  9941                           
  9942                           ;main.c: 576: lumAlarm.alarmLum++;
  9943  0A4E  3001               	movlw	1
  9944  0A4F  0021               	movlb	1	; select bank1
  9945  0A50  00A0               	movwf	??_editLum^(0+128)
  9946  0A51  0820               	movf	??_editLum^(0+128),w
  9947  0A52  0020               	movlb	0	; select bank0
  9948  0A53  07D1               	addwf	_lumAlarm,f
  9949  0A54                     l4884:
  9950                           
  9951                           ;main.c: 577: if(lumAlarm.alarmLum > 7){
  9952  0A54  3008               	movlw	8
  9953  0A55  0251               	subwf	_lumAlarm,w
  9954  0A56  1C03               	skipc
  9955  0A57  2A59               	goto	u4651
  9956  0A58  2A5A               	goto	u4650
  9957  0A59                     u4651:
  9958  0A59  2A5B               	goto	l4888
  9959  0A5A                     u4650:
  9960  0A5A                     l4886:
  9961                           
  9962                           ;main.c: 578: lumAlarm.alarmLum = 0;
  9963  0A5A  01D1               	clrf	_lumAlarm
  9964  0A5B                     l4888:
  9965                           
  9966                           ;main.c: 579: };main.c: 580: _delay((unsigned long)((100)*(1000000/4000.0)));
  9967  0A5B  3021               	movlw	33
  9968  0A5C  0021               	movlb	1	; select bank1
  9969  0A5D  00A0               	movwf	??_editLum^(0+128)
  9970  0A5E  3076               	movlw	118
  9971  0A5F                     u4977:
  9972  0A5F  0B89               	decfsz	9,f
  9973  0A60  2A5F               	goto	u4977
  9974  0A61  0BA0               	decfsz	??_editLum^(0+128),f
  9975  0A62  2A5F               	goto	u4977
  9976  0A63  0000               	nop
  9977  0A64  2A31               	goto	l1245
  9978  0A65                     l1254:
  9979  0A65  0008               	return
  9980  0A66                     __end_of_editLum:
  9981                           
  9982                           	psect	text5
  9983  0CBD                     __ptext5:	
  9984 ;; *************** function _editClock *****************
  9985 ;; Defined at:
  9986 ;;		line 500 in file "main.c"
  9987 ;; Parameters:    Size  Location     Type
  9988 ;;		None
  9989 ;; Auto vars:     Size  Location     Type
  9990 ;;		None
  9991 ;; Return value:  Size  Location     Type
  9992 ;;                  1    wreg      void 
  9993 ;; Registers used:
  9994 ;;		wreg, status,2, status,0
  9995 ;; Tracked objects:
  9996 ;;		On entry : 0/0
  9997 ;;		On exit  : 0/0
  9998 ;;		Unchanged: 0/0
  9999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10002 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10003 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10004 ;;Total ram usage:        1 bytes
 10005 ;; Hardware stack levels used:    1
 10006 ;; Hardware stack levels required when called:    7
 10007 ;; This function calls:
 10008 ;;		Nothing
 10009 ;; This function is called by:
 10010 ;;		_main
 10011 ;; This function uses a non-reentrant model
 10012 ;;
 10013                           
 10014                           
 10015                           ;psect for function _editClock
 10016  0CBD                     _editClock:
 10017  0CBD                     l4820:	
 10018                           ;incstack = 0
 10019                           ; Regs used in _editClock: [wreg+status,2+status,0]
 10020                           
 10021                           
 10022                           ;main.c: 502: editingClockAlarm = 1;
 10023  0CBD  3001               	movlw	1
 10024  0CBE  0020               	movlb	0	; select bank0
 10025  0CBF  00DC               	movwf	_editingClockAlarm
 10026  0CC0  3000               	movlw	0
 10027  0CC1  00DD               	movwf	_editingClockAlarm+1
 10028  0CC2                     l4822:
 10029                           
 10030                           ;main.c: 505: if(PORTBbits.RB4 == 0){
 10031  0CC2  0020               	movlb	0	; select bank0
 10032  0CC3  1A0D               	btfsc	13,4	;volatile
 10033  0CC4  2CC6               	goto	u4481
 10034  0CC5  2CC7               	goto	u4480
 10035  0CC6                     u4481:
 10036  0CC6  2CF0               	goto	l1211
 10037  0CC7                     u4480:
 10038  0CC7                     l4824:
 10039                           
 10040                           ;main.c: 506: _delay((unsigned long)((50)*(1000000/4000.0)));
 10041  0CC7  3011               	movlw	17
 10042  0CC8  0021               	movlb	1	; select bank1
 10043  0CC9  00A0               	movwf	??_editClock^(0+128)
 10044  0CCA  303A               	movlw	58
 10045  0CCB                     u4987:
 10046  0CCB  0B89               	decfsz	9,f
 10047  0CCC  2CCB               	goto	u4987
 10048  0CCD  0BA0               	decfsz	??_editClock^(0+128),f
 10049  0CCE  2CCB               	goto	u4987
 10050  0CCF  0000               	nop
 10051                           
 10052                           ;main.c: 507: editingClockAlarm++;
 10053  0CD0  3001               	movlw	1
 10054  0CD1  0020               	movlb	0	; select bank0
 10055  0CD2  07DC               	addwf	_editingClockAlarm,f
 10056  0CD3  3000               	movlw	0
 10057  0CD4  3DDD               	addwfc	_editingClockAlarm+1,f
 10058  0CD5                     l1212:	
 10059                           ;main.c: 508: while(PORTBbits.RB4==0){};
 10060                           
 10061  0CD5  1E0D               	btfss	13,4	;volatile
 10062  0CD6  2CD8               	goto	u4491
 10063  0CD7  2CD9               	goto	u4490
 10064  0CD8                     u4491:
 10065  0CD8  2CD5               	goto	l1212
 10066  0CD9                     u4490:
 10067  0CD9                     l4826:
 10068                           
 10069                           ;main.c: 509: if(editingClockAlarm > 3){
 10070  0CD9  085D               	movf	_editingClockAlarm+1,w
 10071  0CDA  3A80               	xorlw	128
 10072  0CDB  0021               	movlb	1	; select bank1
 10073  0CDC  00A0               	movwf	??_editClock^(0+128)
 10074  0CDD  3080               	movlw	128
 10075  0CDE  0220               	subwf	??_editClock^(0+128),w
 10076  0CDF  1D03               	skipz
 10077  0CE0  2CE4               	goto	u4505
 10078  0CE1  3004               	movlw	4
 10079  0CE2  0020               	movlb	0	; select bank0
 10080  0CE3  025C               	subwf	_editingClockAlarm,w
 10081  0CE4                     u4505:
 10082  0CE4  1C03               	skipc
 10083  0CE5  2CE7               	goto	u4501
 10084  0CE6  2CE8               	goto	u4500
 10085  0CE7                     u4501:
 10086  0CE7  2CF0               	goto	l1211
 10087  0CE8                     u4500:
 10088  0CE8                     l4828:
 10089                           
 10090                           ;main.c: 510: editingClockAlarm = 0;
 10091  0CE8  0020               	movlb	0	; select bank0
 10092  0CE9  01DC               	clrf	_editingClockAlarm
 10093  0CEA  01DD               	clrf	_editingClockAlarm+1
 10094  0CEB                     l4830:
 10095                           
 10096                           ;main.c: 511: mode = 2;
 10097  0CEB  3002               	movlw	2
 10098  0CEC  00DA               	movwf	_mode
 10099  0CED  3000               	movlw	0
 10100  0CEE  00DB               	movwf	_mode+1
 10101                           
 10102                           ;main.c: 512: break;
 10103  0CEF  2D3F               	goto	l1230
 10104  0CF0                     l1211:
 10105                           
 10106                           ;main.c: 513: };main.c: 514: };main.c: 516: if(PORTCbits.RC5 == 0){
 10107  0CF0  0020               	movlb	0	; select bank0
 10108  0CF1  1A8E               	btfsc	14,5	;volatile
 10109  0CF2  2CF4               	goto	u4511
 10110  0CF3  2CF5               	goto	u4510
 10111  0CF4                     u4511:
 10112  0CF4  2CC2               	goto	l4822
 10113  0CF5                     u4510:
 10114  0CF5                     l4832:
 10115                           
 10116                           ;main.c: 517: if(editingClockAlarm == 1){
 10117  0CF5  035C               	decf	_editingClockAlarm,w
 10118  0CF6  045D               	iorwf	_editingClockAlarm+1,w
 10119  0CF7  1D03               	btfss	3,2
 10120  0CF8  2CFA               	goto	u4521
 10121  0CF9  2CFB               	goto	u4520
 10122  0CFA                     u4521:
 10123  0CFA  2D0A               	goto	l4840
 10124  0CFB                     u4520:
 10125  0CFB                     l4834:
 10126                           
 10127                           ;main.c: 518: if(clkAlarm.alarmVal.h >= 23){
 10128  0CFB  3017               	movlw	23
 10129  0CFC  024D               	subwf	_clkAlarm,w
 10130  0CFD  1C03               	skipc
 10131  0CFE  2D00               	goto	u4531
 10132  0CFF  2D01               	goto	u4530
 10133  0D00                     u4531:
 10134  0D00  2D03               	goto	l4838
 10135  0D01                     u4530:
 10136  0D01                     l4836:
 10137                           
 10138                           ;main.c: 519: clkAlarm.alarmVal.h = 0;
 10139  0D01  01CD               	clrf	_clkAlarm
 10140                           
 10141                           ;main.c: 520: } else{
 10142  0D02  2D35               	goto	l4856
 10143  0D03                     l4838:
 10144                           
 10145                           ;main.c: 521: clkAlarm.alarmVal.h++;
 10146  0D03  3001               	movlw	1
 10147  0D04  0021               	movlb	1	; select bank1
 10148  0D05  00A0               	movwf	??_editClock^(0+128)
 10149  0D06  0820               	movf	??_editClock^(0+128),w
 10150  0D07  0020               	movlb	0	; select bank0
 10151  0D08  07CD               	addwf	_clkAlarm,f
 10152  0D09  2D35               	goto	l4856
 10153  0D0A                     l4840:
 10154  0D0A  3002               	movlw	2
 10155  0D0B  065C               	xorwf	_editingClockAlarm,w
 10156  0D0C  045D               	iorwf	_editingClockAlarm+1,w
 10157  0D0D  1D03               	btfss	3,2
 10158  0D0E  2D10               	goto	u4541
 10159  0D0F  2D11               	goto	u4540
 10160  0D10                     u4541:
 10161  0D10  2D20               	goto	l4848
 10162  0D11                     u4540:
 10163  0D11                     l4842:
 10164                           
 10165                           ;main.c: 524: if(clkAlarm.alarmVal.m == 59){
 10166  0D11  303B               	movlw	59
 10167  0D12  064E               	xorwf	_clkAlarm+1,w
 10168  0D13  1D03               	btfss	3,2
 10169  0D14  2D16               	goto	u4551
 10170  0D15  2D17               	goto	u4550
 10171  0D16                     u4551:
 10172  0D16  2D19               	goto	l4846
 10173  0D17                     u4550:
 10174  0D17                     l4844:
 10175                           
 10176                           ;main.c: 525: clkAlarm.alarmVal.m = 0;
 10177  0D17  01CE               	clrf	_clkAlarm+1
 10178                           
 10179                           ;main.c: 526: } else{
 10180  0D18  2D35               	goto	l4856
 10181  0D19                     l4846:
 10182                           
 10183                           ;main.c: 527: clkAlarm.alarmVal.m++;
 10184  0D19  3001               	movlw	1
 10185  0D1A  0021               	movlb	1	; select bank1
 10186  0D1B  00A0               	movwf	??_editClock^(0+128)
 10187  0D1C  0820               	movf	??_editClock^(0+128),w
 10188  0D1D  0020               	movlb	0	; select bank0
 10189  0D1E  07CE               	addwf	_clkAlarm+1,f
 10190  0D1F  2D35               	goto	l4856
 10191  0D20                     l4848:
 10192  0D20  3003               	movlw	3
 10193  0D21  065C               	xorwf	_editingClockAlarm,w
 10194  0D22  045D               	iorwf	_editingClockAlarm+1,w
 10195  0D23  1D03               	btfss	3,2
 10196  0D24  2D26               	goto	u4561
 10197  0D25  2D27               	goto	u4560
 10198  0D26                     u4561:
 10199  0D26  2D35               	goto	l4856
 10200  0D27                     u4560:
 10201  0D27                     l4850:
 10202                           
 10203                           ;main.c: 530: if(clkAlarm.alarmVal.s == 59){
 10204  0D27  303B               	movlw	59
 10205  0D28  064F               	xorwf	_clkAlarm+2,w
 10206  0D29  1D03               	btfss	3,2
 10207  0D2A  2D2C               	goto	u4571
 10208  0D2B  2D2D               	goto	u4570
 10209  0D2C                     u4571:
 10210  0D2C  2D2F               	goto	l4854
 10211  0D2D                     u4570:
 10212  0D2D                     l4852:
 10213                           
 10214                           ;main.c: 531: clkAlarm.alarmVal.s = 0;
 10215  0D2D  01CF               	clrf	_clkAlarm+2
 10216                           
 10217                           ;main.c: 532: } else{
 10218  0D2E  2D35               	goto	l4856
 10219  0D2F                     l4854:
 10220                           
 10221                           ;main.c: 533: clkAlarm.alarmVal.s++;
 10222  0D2F  3001               	movlw	1
 10223  0D30  0021               	movlb	1	; select bank1
 10224  0D31  00A0               	movwf	??_editClock^(0+128)
 10225  0D32  0820               	movf	??_editClock^(0+128),w
 10226  0D33  0020               	movlb	0	; select bank0
 10227  0D34  07CF               	addwf	_clkAlarm+2,f
 10228  0D35                     l4856:
 10229                           
 10230                           ;main.c: 534: };main.c: 535: };main.c: 536: _delay((unsigned long)((100)*(1000000/4000.0
      +                          )));
 10231  0D35  3021               	movlw	33
 10232  0D36  0021               	movlb	1	; select bank1
 10233  0D37  00A0               	movwf	??_editClock^(0+128)
 10234  0D38  3076               	movlw	118
 10235  0D39                     u4997:
 10236  0D39  0B89               	decfsz	9,f
 10237  0D3A  2D39               	goto	u4997
 10238  0D3B  0BA0               	decfsz	??_editClock^(0+128),f
 10239  0D3C  2D39               	goto	u4997
 10240  0D3D  0000               	nop
 10241  0D3E  2CC2               	goto	l4822
 10242  0D3F                     l1230:
 10243  0D3F  0008               	return
 10244  0D40                     __end_of_editClock:
 10245                           
 10246                           	psect	text6
 10247  07FC                     __ptext6:	
 10248 ;; *************** function _TMR2_StopTimer *****************
 10249 ;; Defined at:
 10250 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 10251 ;; Parameters:    Size  Location     Type
 10252 ;;		None
 10253 ;; Auto vars:     Size  Location     Type
 10254 ;;		None
 10255 ;; Return value:  Size  Location     Type
 10256 ;;                  1    wreg      void 
 10257 ;; Registers used:
 10258 ;;		status,2, status,0, pclath, cstack
 10259 ;; Tracked objects:
 10260 ;;		On entry : 0/0
 10261 ;;		On exit  : 0/0
 10262 ;;		Unchanged: 0/0
 10263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10268 ;;Total ram usage:        0 bytes
 10269 ;; Hardware stack levels used:    1
 10270 ;; Hardware stack levels required when called:    8
 10271 ;; This function calls:
 10272 ;;		_TMR2_Stop
 10273 ;; This function is called by:
 10274 ;;		_main
 10275 ;; This function uses a non-reentrant model
 10276 ;;
 10277                           
 10278                           
 10279                           ;psect for function _TMR2_StopTimer
 10280  07FC                     _TMR2_StopTimer:
 10281  07FC                     l4696:	
 10282                           ;incstack = 0
 10283                           ; Regs used in _TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 10284                           
 10285                           
 10286                           ;tmr2.c: 119: TMR2_Stop();
 10287  07FC  3197  277A  3187   	fcall	_TMR2_Stop
 10288  07FF                     l767:
 10289  07FF  0008               	return
 10290  0800                     __end_of_TMR2_StopTimer:
 10291                           
 10292                           	psect	text7
 10293  177A                     __ptext7:	
 10294 ;; *************** function _TMR2_Stop *****************
 10295 ;; Defined at:
 10296 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 10297 ;; Parameters:    Size  Location     Type
 10298 ;;		None
 10299 ;; Auto vars:     Size  Location     Type
 10300 ;;		None
 10301 ;; Return value:  Size  Location     Type
 10302 ;;                  1    wreg      void 
 10303 ;; Registers used:
 10304 ;;		None
 10305 ;; Tracked objects:
 10306 ;;		On entry : 0/0
 10307 ;;		On exit  : 0/0
 10308 ;;		Unchanged: 0/0
 10309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10314 ;;Total ram usage:        0 bytes
 10315 ;; Hardware stack levels used:    1
 10316 ;; Hardware stack levels required when called:    7
 10317 ;; This function calls:
 10318 ;;		Nothing
 10319 ;; This function is called by:
 10320 ;;		_TMR2_StopTimer
 10321 ;; This function uses a non-reentrant model
 10322 ;;
 10323                           
 10324                           
 10325                           ;psect for function _TMR2_Stop
 10326  177A                     _TMR2_Stop:
 10327  177A                     l4362:	
 10328                           ;incstack = 0
 10329                           ; Regs used in _TMR2_Stop: []
 10330                           
 10331                           
 10332                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 10333  177A  0025               	movlb	5	; select bank5
 10334  177B  138E               	bcf	14,7	;volatile
 10335  177C                     l764:
 10336  177C  0008               	return
 10337  177D                     __end_of_TMR2_Stop:
 10338                           
 10339                           	psect	text8
 10340  0910                     __ptext8:	
 10341 ;; *************** function _SYSTEM_Initialize *****************
 10342 ;; Defined at:
 10343 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10344 ;; Parameters:    Size  Location     Type
 10345 ;;		None
 10346 ;; Auto vars:     Size  Location     Type
 10347 ;;		None
 10348 ;; Return value:  Size  Location     Type
 10349 ;;                  1    wreg      void 
 10350 ;; Registers used:
 10351 ;;		wreg, status,2, status,0, pclath, cstack
 10352 ;; Tracked objects:
 10353 ;;		On entry : 0/0
 10354 ;;		On exit  : 0/0
 10355 ;;		Unchanged: 0/0
 10356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10361 ;;Total ram usage:        0 bytes
 10362 ;; Hardware stack levels used:    1
 10363 ;; Hardware stack levels required when called:    9
 10364 ;; This function calls:
 10365 ;;		_ADCC_Initialize
 10366 ;;		_OSCILLATOR_Initialize
 10367 ;;		_PIN_MANAGER_Initialize
 10368 ;;		_PMD_Initialize
 10369 ;;		_PWM6_Initialize
 10370 ;;		_TMR1_Initialize
 10371 ;;		_TMR2_Initialize
 10372 ;;		_TMR3_Initialize
 10373 ;;		_TMR5_Initialize
 10374 ;; This function is called by:
 10375 ;;		_main
 10376 ;; This function uses a non-reentrant model
 10377 ;;
 10378                           
 10379                           
 10380                           ;psect for function _SYSTEM_Initialize
 10381  0910                     _SYSTEM_Initialize:
 10382  0910                     l4640:	
 10383                           ;incstack = 0
 10384                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10385                           
 10386                           
 10387                           ;mcc.c: 52: PMD_Initialize();
 10388  0910  3197  27B9  3189   	fcall	_PMD_Initialize
 10389  0913                     l4642:
 10390                           
 10391                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 10392  0913  318B  2312  3189   	fcall	_PIN_MANAGER_Initialize
 10393  0916                     l4644:
 10394                           
 10395                           ;mcc.c: 54: OSCILLATOR_Initialize();
 10396  0916  3197  27C1  3189   	fcall	_OSCILLATOR_Initialize
 10397  0919                     l4646:
 10398                           
 10399                           ;mcc.c: 55: PWM6_Initialize();
 10400  0919  3197  27D6  3189   	fcall	_PWM6_Initialize
 10401  091C                     l4648:
 10402                           
 10403                           ;mcc.c: 56: ADCC_Initialize();
 10404  091C  3188  20C6  3189   	fcall	_ADCC_Initialize
 10405  091F                     l4650:
 10406                           
 10407                           ;mcc.c: 57: TMR3_Initialize();
 10408  091F  3189  2188  3189   	fcall	_TMR3_Initialize
 10409  0922                     l4652:
 10410                           
 10411                           ;mcc.c: 58: TMR5_Initialize();
 10412  0922  3189  21A7  3189   	fcall	_TMR5_Initialize
 10413  0925                     l4654:
 10414                           
 10415                           ;mcc.c: 59: TMR2_Initialize();
 10416  0925  3197  27E3  3189   	fcall	_TMR2_Initialize
 10417  0928                     l4656:
 10418                           
 10419                           ;mcc.c: 60: TMR1_Initialize();
 10420  0928  3189  2169  3189   	fcall	_TMR1_Initialize
 10421  092B                     l172:
 10422  092B  0008               	return
 10423  092C                     __end_of_SYSTEM_Initialize:
 10424                           
 10425                           	psect	text9
 10426  09A7                     __ptext9:	
 10427 ;; *************** function _TMR5_Initialize *****************
 10428 ;; Defined at:
 10429 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 10430 ;; Parameters:    Size  Location     Type
 10431 ;;		None
 10432 ;; Auto vars:     Size  Location     Type
 10433 ;;		None
 10434 ;; Return value:  Size  Location     Type
 10435 ;;                  1    wreg      void 
 10436 ;; Registers used:
 10437 ;;		wreg, status,2, status,0, pclath, cstack
 10438 ;; Tracked objects:
 10439 ;;		On entry : 0/0
 10440 ;;		On exit  : 0/0
 10441 ;;		Unchanged: 0/0
 10442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10447 ;;Total ram usage:        0 bytes
 10448 ;; Hardware stack levels used:    1
 10449 ;; Hardware stack levels required when called:    8
 10450 ;; This function calls:
 10451 ;;		_TMR5_SetInterruptHandler
 10452 ;; This function is called by:
 10453 ;;		_SYSTEM_Initialize
 10454 ;; This function uses a non-reentrant model
 10455 ;;
 10456                           
 10457                           
 10458                           ;psect for function _TMR5_Initialize
 10459  09A7                     _TMR5_Initialize:
 10460  09A7                     l4272:	
 10461                           ;incstack = 0
 10462                           ; Regs used in _TMR5_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10463                           
 10464                           
 10465                           ;tmr5.c: 69: T5GCON = 0x00;
 10466  09A7  0024               	movlb	4	; select bank4
 10467  09A8  019B               	clrf	27	;volatile
 10468                           
 10469                           ;tmr5.c: 72: T5GATE = 0x00;
 10470  09A9  019C               	clrf	28	;volatile
 10471  09AA                     l4274:
 10472                           
 10473                           ;tmr5.c: 75: T5CLK = 0x04;
 10474  09AA  3004               	movlw	4
 10475  09AB  009D               	movwf	29	;volatile
 10476  09AC                     l4276:
 10477                           
 10478                           ;tmr5.c: 79: TMR5H = 0x4A;
 10479  09AC  304A               	movlw	74
 10480  09AD  0099               	movwf	25	;volatile
 10481  09AE                     l4278:
 10482                           
 10483                           ;tmr5.c: 82: TMR5L = 0x5C;
 10484  09AE  305C               	movlw	92
 10485  09AF  0098               	movwf	24	;volatile
 10486  09B0                     l4280:
 10487                           
 10488                           ;tmr5.c: 85: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 10489  09B0  0819               	movf	25,w	;volatile
 10490  09B1  0021               	movlb	1	; select bank1
 10491  09B2  00B4               	movwf	(_timer5ReloadVal+1)^(0+128)	;volatile
 10492  09B3  0024               	movlb	4	; select bank4
 10493  09B4  0818               	movf	24,w	;volatile
 10494  09B5  0021               	movlb	1	; select bank1
 10495  09B6  00B3               	movwf	_timer5ReloadVal^(0+128)	;volatile
 10496  09B7                     l4282:
 10497                           
 10498                           ;tmr5.c: 88: PIR4bits.TMR5IF = 0;
 10499  09B7  002E               	movlb	14	; select bank14
 10500  09B8  1210               	bcf	16,4	;volatile
 10501  09B9                     l4284:
 10502                           
 10503                           ;tmr5.c: 91: PIE4bits.TMR5IE = 1;
 10504  09B9  161A               	bsf	26,4	;volatile
 10505  09BA                     l4286:
 10506                           
 10507                           ;tmr5.c: 94: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 10508  09BA  3003               	movlw	low _TMR5_DefaultInterruptHandler
 10509  09BB  0021               	movlb	1	; select bank1
 10510  09BC  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
 10511  09BD  3000               	movlw	high _TMR5_DefaultInterruptHandler
 10512  09BE  00A1               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10513  09BF  3197  2791  3189   	fcall	_TMR5_SetInterruptHandler
 10514  09C2                     l4288:
 10515                           
 10516                           ;tmr5.c: 97: T5CON = 0x11;
 10517  09C2  3011               	movlw	17
 10518  09C3  0024               	movlb	4	; select bank4
 10519  09C4  009A               	movwf	26	;volatile
 10520  09C5                     l675:
 10521  09C5  0008               	return
 10522  09C6                     __end_of_TMR5_Initialize:
 10523                           
 10524                           	psect	text10
 10525  1791                     __ptext10:	
 10526 ;; *************** function _TMR5_SetInterruptHandler *****************
 10527 ;; Defined at:
 10528 ;;		line 179 in file "mcc_generated_files/tmr5.c"
 10529 ;; Parameters:    Size  Location     Type
 10530 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 10531 ;;		 -> monitoring_ISR(1), TMR5_DefaultInterruptHandler(1), 
 10532 ;; Auto vars:     Size  Location     Type
 10533 ;;		None
 10534 ;; Return value:  Size  Location     Type
 10535 ;;                  1    wreg      void 
 10536 ;; Registers used:
 10537 ;;		wreg
 10538 ;; Tracked objects:
 10539 ;;		On entry : 0/0
 10540 ;;		On exit  : 0/0
 10541 ;;		Unchanged: 0/0
 10542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10543 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10546 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10547 ;;Total ram usage:        2 bytes
 10548 ;; Hardware stack levels used:    1
 10549 ;; Hardware stack levels required when called:    7
 10550 ;; This function calls:
 10551 ;;		Nothing
 10552 ;; This function is called by:
 10553 ;;		_TMR5_Initialize
 10554 ;;		_main
 10555 ;; This function uses a non-reentrant model
 10556 ;;
 10557                           
 10558                           
 10559                           ;psect for function _TMR5_SetInterruptHandler
 10560  1791                     _TMR5_SetInterruptHandler:
 10561  1791                     l3976:	
 10562                           ;incstack = 0
 10563                           ; Regs used in _TMR5_SetInterruptHandler: [wreg]
 10564                           
 10565                           
 10566                           ;tmr5.c: 180: TMR5_InterruptHandler = InterruptHandler;
 10567  1791  0021               	movlb	1	; select bank1
 10568  1792  0821               	movf	(TMR5_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 10569  1793  00B2               	movwf	(_TMR5_InterruptHandler+1)^(0+128)
 10570  1794  0820               	movf	TMR5_SetInterruptHandler@InterruptHandler^(0+128),w
 10571  1795  00B1               	movwf	_TMR5_InterruptHandler^(0+128)
 10572  1796                     l705:
 10573  1796  0008               	return
 10574  1797                     __end_of_TMR5_SetInterruptHandler:
 10575                           
 10576                           	psect	text11
 10577  0988                     __ptext11:	
 10578 ;; *************** function _TMR3_Initialize *****************
 10579 ;; Defined at:
 10580 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 10581 ;; Parameters:    Size  Location     Type
 10582 ;;		None
 10583 ;; Auto vars:     Size  Location     Type
 10584 ;;		None
 10585 ;; Return value:  Size  Location     Type
 10586 ;;                  1    wreg      void 
 10587 ;; Registers used:
 10588 ;;		wreg, status,2, status,0, pclath, cstack
 10589 ;; Tracked objects:
 10590 ;;		On entry : 0/0
 10591 ;;		On exit  : 0/0
 10592 ;;		Unchanged: 0/0
 10593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10598 ;;Total ram usage:        0 bytes
 10599 ;; Hardware stack levels used:    1
 10600 ;; Hardware stack levels required when called:    8
 10601 ;; This function calls:
 10602 ;;		_TMR3_SetInterruptHandler
 10603 ;; This function is called by:
 10604 ;;		_SYSTEM_Initialize
 10605 ;; This function uses a non-reentrant model
 10606 ;;
 10607                           
 10608                           
 10609                           ;psect for function _TMR3_Initialize
 10610  0988                     _TMR3_Initialize:
 10611  0988                     l4254:	
 10612                           ;incstack = 0
 10613                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10614                           
 10615                           
 10616                           ;tmr3.c: 69: T3GCON = 0x00;
 10617  0988  0024               	movlb	4	; select bank4
 10618  0989  0195               	clrf	21	;volatile
 10619                           
 10620                           ;tmr3.c: 72: T3GATE = 0x00;
 10621  098A  0196               	clrf	22	;volatile
 10622  098B                     l4256:
 10623                           
 10624                           ;tmr3.c: 75: T3CLK = 0x04;
 10625  098B  3004               	movlw	4
 10626  098C  0097               	movwf	23	;volatile
 10627  098D                     l4258:
 10628                           
 10629                           ;tmr3.c: 78: TMR3H = 0xE7;
 10630  098D  30E7               	movlw	231
 10631  098E  0093               	movwf	19	;volatile
 10632  098F                     l4260:
 10633                           
 10634                           ;tmr3.c: 81: TMR3L = 0xC8;
 10635  098F  30C8               	movlw	200
 10636  0990  0092               	movwf	18	;volatile
 10637  0991                     l4262:
 10638                           
 10639                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 10640  0991  0813               	movf	19,w	;volatile
 10641  0992  0020               	movlb	0	; select bank0
 10642  0993  00EF               	movwf	_timer3ReloadVal+1	;volatile
 10643  0994  0024               	movlb	4	; select bank4
 10644  0995  0812               	movf	18,w	;volatile
 10645  0996  0020               	movlb	0	; select bank0
 10646  0997  00EE               	movwf	_timer3ReloadVal	;volatile
 10647  0998                     l4264:
 10648                           
 10649                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
 10650  0998  002E               	movlb	14	; select bank14
 10651  0999  1110               	bcf	16,2	;volatile
 10652  099A                     l4266:
 10653                           
 10654                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
 10655  099A  151A               	bsf	26,2	;volatile
 10656  099B                     l4268:
 10657                           
 10658                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
 10659  099B  3002               	movlw	low _TMR3_DefaultInterruptHandler
 10660  099C  0021               	movlb	1	; select bank1
 10661  099D  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
 10662  099E  3000               	movlw	high _TMR3_DefaultInterruptHandler
 10663  099F  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10664  09A0  3197  278B  3189   	fcall	_TMR3_SetInterruptHandler
 10665  09A3                     l4270:
 10666                           
 10667                           ;tmr3.c: 96: T3CON = 0x01;
 10668  09A3  3001               	movlw	1
 10669  09A4  0024               	movlb	4	; select bank4
 10670  09A5  0094               	movwf	20	;volatile
 10671  09A6                     l451:
 10672  09A6  0008               	return
 10673  09A7                     __end_of_TMR3_Initialize:
 10674                           
 10675                           	psect	text12
 10676  178B                     __ptext12:	
 10677 ;; *************** function _TMR3_SetInterruptHandler *****************
 10678 ;; Defined at:
 10679 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 10680 ;; Parameters:    Size  Location     Type
 10681 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 10682 ;;		 -> menuLCD_ISR(1), TMR3_DefaultInterruptHandler(1), 
 10683 ;; Auto vars:     Size  Location     Type
 10684 ;;		None
 10685 ;; Return value:  Size  Location     Type
 10686 ;;                  1    wreg      void 
 10687 ;; Registers used:
 10688 ;;		wreg
 10689 ;; Tracked objects:
 10690 ;;		On entry : 0/0
 10691 ;;		On exit  : 0/0
 10692 ;;		Unchanged: 0/0
 10693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10694 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10697 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10698 ;;Total ram usage:        2 bytes
 10699 ;; Hardware stack levels used:    1
 10700 ;; Hardware stack levels required when called:    7
 10701 ;; This function calls:
 10702 ;;		Nothing
 10703 ;; This function is called by:
 10704 ;;		_TMR3_Initialize
 10705 ;;		_main
 10706 ;; This function uses a non-reentrant model
 10707 ;;
 10708                           
 10709                           
 10710                           ;psect for function _TMR3_SetInterruptHandler
 10711  178B                     _TMR3_SetInterruptHandler:
 10712  178B                     l3960:	
 10713                           ;incstack = 0
 10714                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
 10715                           
 10716                           
 10717                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
 10718  178B  0021               	movlb	1	; select bank1
 10719  178C  0821               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 10720  178D  00B6               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
 10721  178E  0820               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
 10722  178F  00B5               	movwf	_TMR3_InterruptHandler^(0+128)
 10723  1790                     l481:
 10724  1790  0008               	return
 10725  1791                     __end_of_TMR3_SetInterruptHandler:
 10726                           
 10727                           	psect	text13
 10728  17E3                     __ptext13:	
 10729 ;; *************** function _TMR2_Initialize *****************
 10730 ;; Defined at:
 10731 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 10732 ;; Parameters:    Size  Location     Type
 10733 ;;		None
 10734 ;; Auto vars:     Size  Location     Type
 10735 ;;		None
 10736 ;; Return value:  Size  Location     Type
 10737 ;;                  1    wreg      void 
 10738 ;; Registers used:
 10739 ;;		wreg, status,2
 10740 ;; Tracked objects:
 10741 ;;		On entry : 0/0
 10742 ;;		On exit  : 0/0
 10743 ;;		Unchanged: 0/0
 10744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10749 ;;Total ram usage:        0 bytes
 10750 ;; Hardware stack levels used:    1
 10751 ;; Hardware stack levels required when called:    7
 10752 ;; This function calls:
 10753 ;;		Nothing
 10754 ;; This function is called by:
 10755 ;;		_SYSTEM_Initialize
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           
 10760                           ;psect for function _TMR2_Initialize
 10761  17E3                     _TMR2_Initialize:
 10762  17E3                     l4290:	
 10763                           ;incstack = 0
 10764                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 10765                           
 10766                           
 10767                           ;tmr2.c: 67: T2CLKCON = 0x01;
 10768  17E3  3001               	movlw	1
 10769  17E4  0025               	movlb	5	; select bank5
 10770  17E5  0090               	movwf	16	;volatile
 10771  17E6                     l4292:
 10772                           
 10773                           ;tmr2.c: 70: T2HLT = 0x00;
 10774  17E6  018F               	clrf	15	;volatile
 10775  17E7                     l4294:
 10776                           
 10777                           ;tmr2.c: 73: T2RST = 0x00;
 10778  17E7  0191               	clrf	17	;volatile
 10779                           
 10780                           ;tmr2.c: 76: T2PR = 0xFF;
 10781  17E8  30FF               	movlw	255
 10782  17E9  008D               	movwf	13	;volatile
 10783  17EA                     l4296:
 10784                           
 10785                           ;tmr2.c: 79: T2TMR = 0x00;
 10786  17EA  018C               	clrf	12	;volatile
 10787  17EB                     l4298:
 10788                           
 10789                           ;tmr2.c: 82: PIR4bits.TMR2IF = 0;
 10790  17EB  002E               	movlb	14	; select bank14
 10791  17EC  1090               	bcf	16,1	;volatile
 10792  17ED                     l4300:
 10793                           
 10794                           ;tmr2.c: 85: T2CON = 0x80;
 10795  17ED  3080               	movlw	128
 10796  17EE  0025               	movlb	5	; select bank5
 10797  17EF  008E               	movwf	14	;volatile
 10798  17F0                     l749:
 10799  17F0  0008               	return
 10800  17F1                     __end_of_TMR2_Initialize:
 10801                           
 10802                           	psect	text14
 10803  0969                     __ptext14:	
 10804 ;; *************** function _TMR1_Initialize *****************
 10805 ;; Defined at:
 10806 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 10807 ;; Parameters:    Size  Location     Type
 10808 ;;		None
 10809 ;; Auto vars:     Size  Location     Type
 10810 ;;		None
 10811 ;; Return value:  Size  Location     Type
 10812 ;;                  1    wreg      void 
 10813 ;; Registers used:
 10814 ;;		wreg, status,2, status,0, pclath, cstack
 10815 ;; Tracked objects:
 10816 ;;		On entry : 0/0
 10817 ;;		On exit  : 0/0
 10818 ;;		Unchanged: 0/0
 10819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10824 ;;Total ram usage:        0 bytes
 10825 ;; Hardware stack levels used:    1
 10826 ;; Hardware stack levels required when called:    8
 10827 ;; This function calls:
 10828 ;;		_TMR1_SetInterruptHandler
 10829 ;; This function is called by:
 10830 ;;		_SYSTEM_Initialize
 10831 ;; This function uses a non-reentrant model
 10832 ;;
 10833                           
 10834                           
 10835                           ;psect for function _TMR1_Initialize
 10836  0969                     _TMR1_Initialize:
 10837  0969                     l4302:	
 10838                           ;incstack = 0
 10839                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10840                           
 10841                           
 10842                           ;tmr1.c: 69: T1GCON = 0x00;
 10843  0969  0024               	movlb	4	; select bank4
 10844  096A  018F               	clrf	15	;volatile
 10845                           
 10846                           ;tmr1.c: 72: T1GATE = 0x00;
 10847  096B  0190               	clrf	16	;volatile
 10848  096C                     l4304:
 10849                           
 10850                           ;tmr1.c: 75: T1CLK = 0x04;
 10851  096C  3004               	movlw	4
 10852  096D  0091               	movwf	17	;volatile
 10853  096E                     l4306:
 10854                           
 10855                           ;tmr1.c: 78: TMR1H = 0x86;
 10856  096E  3086               	movlw	134
 10857  096F  008D               	movwf	13	;volatile
 10858  0970                     l4308:
 10859                           
 10860                           ;tmr1.c: 81: TMR1L = 0xE8;
 10861  0970  30E8               	movlw	232
 10862  0971  008C               	movwf	12	;volatile
 10863  0972                     l4310:
 10864                           
 10865                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 10866  0972  080D               	movf	13,w	;volatile
 10867  0973  0021               	movlb	1	; select bank1
 10868  0974  00BA               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 10869  0975  0024               	movlb	4	; select bank4
 10870  0976  080C               	movf	12,w	;volatile
 10871  0977  0021               	movlb	1	; select bank1
 10872  0978  00B9               	movwf	_timer1ReloadVal^(0+128)	;volatile
 10873  0979                     l4312:
 10874                           
 10875                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
 10876  0979  002E               	movlb	14	; select bank14
 10877  097A  1010               	bcf	16,0	;volatile
 10878  097B                     l4314:
 10879                           
 10880                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
 10881  097B  141A               	bsf	26,0	;volatile
 10882  097C                     l4316:
 10883                           
 10884                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 10885  097C  306A               	movlw	low _TMR1_DefaultInterruptHandler
 10886  097D  0021               	movlb	1	; select bank1
 10887  097E  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
 10888  097F  3017               	movlw	high _TMR1_DefaultInterruptHandler
 10889  0980  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10890  0981  3197  2785  3189   	fcall	_TMR1_SetInterruptHandler
 10891  0984                     l4318:
 10892                           
 10893                           ;tmr1.c: 96: T1CON = 0x01;
 10894  0984  3001               	movlw	1
 10895  0985  0024               	movlb	4	; select bank4
 10896  0986  008E               	movwf	14	;volatile
 10897  0987                     l387:
 10898  0987  0008               	return
 10899  0988                     __end_of_TMR1_Initialize:
 10900                           
 10901                           	psect	text15
 10902  1785                     __ptext15:	
 10903 ;; *************** function _TMR1_SetInterruptHandler *****************
 10904 ;; Defined at:
 10905 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 10906 ;; Parameters:    Size  Location     Type
 10907 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 10908 ;;		 -> Clock_ISR(1), TMR1_DefaultInterruptHandler(1), 
 10909 ;; Auto vars:     Size  Location     Type
 10910 ;;		None
 10911 ;; Return value:  Size  Location     Type
 10912 ;;                  1    wreg      void 
 10913 ;; Registers used:
 10914 ;;		wreg
 10915 ;; Tracked objects:
 10916 ;;		On entry : 0/0
 10917 ;;		On exit  : 0/0
 10918 ;;		Unchanged: 0/0
 10919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10920 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10923 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10924 ;;Total ram usage:        2 bytes
 10925 ;; Hardware stack levels used:    1
 10926 ;; Hardware stack levels required when called:    7
 10927 ;; This function calls:
 10928 ;;		Nothing
 10929 ;; This function is called by:
 10930 ;;		_TMR1_Initialize
 10931 ;;		_main
 10932 ;; This function uses a non-reentrant model
 10933 ;;
 10934                           
 10935                           
 10936                           ;psect for function _TMR1_SetInterruptHandler
 10937  1785                     _TMR1_SetInterruptHandler:
 10938  1785                     l3958:	
 10939                           ;incstack = 0
 10940                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 10941                           
 10942                           
 10943                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
 10944  1785  0021               	movlb	1	; select bank1
 10945  1786  0821               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 10946  1787  00B8               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 10947  1788  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
 10948  1789  00B7               	movwf	_TMR1_InterruptHandler^(0+128)
 10949  178A                     l417:
 10950  178A  0008               	return
 10951  178B                     __end_of_TMR1_SetInterruptHandler:
 10952                           
 10953                           	psect	text16
 10954  17D6                     __ptext16:	
 10955 ;; *************** function _PWM6_Initialize *****************
 10956 ;; Defined at:
 10957 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 10958 ;; Parameters:    Size  Location     Type
 10959 ;;		None
 10960 ;; Auto vars:     Size  Location     Type
 10961 ;;		None
 10962 ;; Return value:  Size  Location     Type
 10963 ;;                  1    wreg      void 
 10964 ;; Registers used:
 10965 ;;		wreg, status,2, status,0
 10966 ;; Tracked objects:
 10967 ;;		On entry : 0/0
 10968 ;;		On exit  : 0/0
 10969 ;;		Unchanged: 0/0
 10970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10975 ;;Total ram usage:        0 bytes
 10976 ;; Hardware stack levels used:    1
 10977 ;; Hardware stack levels required when called:    7
 10978 ;; This function calls:
 10979 ;;		Nothing
 10980 ;; This function is called by:
 10981 ;;		_SYSTEM_Initialize
 10982 ;; This function uses a non-reentrant model
 10983 ;;
 10984                           
 10985                           
 10986                           ;psect for function _PWM6_Initialize
 10987  17D6                     _PWM6_Initialize:
 10988  17D6                     l4244:	
 10989                           ;incstack = 0
 10990                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 10991                           
 10992                           
 10993                           ;pwm6.c: 62: PWM6CON = 0x80;
 10994  17D6  3080               	movlw	128
 10995  17D7  0027               	movlb	7	; select bank7
 10996  17D8  008E               	movwf	14	;volatile
 10997                           
 10998                           ;pwm6.c: 65: PWM6DCH = 0xFF;
 10999  17D9  30FF               	movlw	255
 11000  17DA  008D               	movwf	13	;volatile
 11001                           
 11002                           ;pwm6.c: 68: PWM6DCL = 0xC0;
 11003  17DB  30C0               	movlw	192
 11004  17DC  008C               	movwf	12	;volatile
 11005  17DD                     l4246:
 11006                           
 11007                           ;pwm6.c: 71: CCPTMRS1bits.P6TSEL = 1;
 11008  17DD  0024               	movlb	4	; select bank4
 11009  17DE  081F               	movf	31,w	;volatile
 11010  17DF  39F3               	andlw	-13
 11011  17E0  3804               	iorlw	4
 11012  17E1  009F               	movwf	31	;volatile
 11013  17E2                     l719:
 11014  17E2  0008               	return
 11015  17E3                     __end_of_PWM6_Initialize:
 11016                           
 11017                           	psect	text17
 11018  17B9                     __ptext17:	
 11019 ;; *************** function _PMD_Initialize *****************
 11020 ;; Defined at:
 11021 ;;		line 77 in file "mcc_generated_files/mcc.c"
 11022 ;; Parameters:    Size  Location     Type
 11023 ;;		None
 11024 ;; Auto vars:     Size  Location     Type
 11025 ;;		None
 11026 ;; Return value:  Size  Location     Type
 11027 ;;                  1    wreg      void 
 11028 ;; Registers used:
 11029 ;;		status,2
 11030 ;; Tracked objects:
 11031 ;;		On entry : 0/0
 11032 ;;		On exit  : 0/0
 11033 ;;		Unchanged: 0/0
 11034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11039 ;;Total ram usage:        0 bytes
 11040 ;; Hardware stack levels used:    1
 11041 ;; Hardware stack levels required when called:    7
 11042 ;; This function calls:
 11043 ;;		Nothing
 11044 ;; This function is called by:
 11045 ;;		_SYSTEM_Initialize
 11046 ;; This function uses a non-reentrant model
 11047 ;;
 11048                           
 11049                           
 11050                           ;psect for function _PMD_Initialize
 11051  17B9                     _PMD_Initialize:
 11052  17B9                     l4234:	
 11053                           ;incstack = 0
 11054                           ; Regs used in _PMD_Initialize: [status,2]
 11055                           
 11056                           
 11057                           ;mcc.c: 80: PMD0 = 0x00;
 11058  17B9  002F               	movlb	15	; select bank15
 11059  17BA  0196               	clrf	22	;volatile
 11060                           
 11061                           ;mcc.c: 82: PMD1 = 0x00;
 11062  17BB  0197               	clrf	23	;volatile
 11063                           
 11064                           ;mcc.c: 84: PMD2 = 0x00;
 11065  17BC  0198               	clrf	24	;volatile
 11066                           
 11067                           ;mcc.c: 86: PMD3 = 0x00;
 11068  17BD  0199               	clrf	25	;volatile
 11069                           
 11070                           ;mcc.c: 88: PMD4 = 0x00;
 11071  17BE  019A               	clrf	26	;volatile
 11072                           
 11073                           ;mcc.c: 90: PMD5 = 0x00;
 11074  17BF  019B               	clrf	27	;volatile
 11075  17C0                     l178:
 11076  17C0  0008               	return
 11077  17C1                     __end_of_PMD_Initialize:
 11078                           
 11079                           	psect	text18
 11080  0B12                     __ptext18:	
 11081 ;; *************** function _PIN_MANAGER_Initialize *****************
 11082 ;; Defined at:
 11083 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11084 ;; Parameters:    Size  Location     Type
 11085 ;;		None
 11086 ;; Auto vars:     Size  Location     Type
 11087 ;;		None
 11088 ;; Return value:  Size  Location     Type
 11089 ;;                  1    wreg      void 
 11090 ;; Registers used:
 11091 ;;		wreg, status,2
 11092 ;; Tracked objects:
 11093 ;;		On entry : 0/0
 11094 ;;		On exit  : 0/0
 11095 ;;		Unchanged: 0/0
 11096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11101 ;;Total ram usage:        0 bytes
 11102 ;; Hardware stack levels used:    1
 11103 ;; Hardware stack levels required when called:    7
 11104 ;; This function calls:
 11105 ;;		Nothing
 11106 ;; This function is called by:
 11107 ;;		_SYSTEM_Initialize
 11108 ;; This function uses a non-reentrant model
 11109 ;;
 11110                           
 11111                           
 11112                           ;psect for function _PIN_MANAGER_Initialize
 11113  0B12                     _PIN_MANAGER_Initialize:
 11114  0B12                     l4192:	
 11115                           ;incstack = 0
 11116                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11117                           
 11118                           
 11119                           ;pin_manager.c: 62: LATE = 0x00;
 11120  0B12  0020               	movlb	0	; select bank0
 11121  0B13  019A               	clrf	26	;volatile
 11122                           
 11123                           ;pin_manager.c: 63: LATD = 0x00;
 11124  0B14  0199               	clrf	25	;volatile
 11125                           
 11126                           ;pin_manager.c: 64: LATA = 0x00;
 11127  0B15  0196               	clrf	22	;volatile
 11128                           
 11129                           ;pin_manager.c: 65: LATB = 0x00;
 11130  0B16  0197               	clrf	23	;volatile
 11131                           
 11132                           ;pin_manager.c: 66: LATC = 0x00;
 11133  0B17  0198               	clrf	24	;volatile
 11134  0B18                     l4194:
 11135                           
 11136                           ;pin_manager.c: 71: TRISE = 0x07;
 11137  0B18  3007               	movlw	7
 11138  0B19  0095               	movwf	21	;volatile
 11139  0B1A                     l4196:
 11140                           
 11141                           ;pin_manager.c: 72: TRISA = 0x0F;
 11142  0B1A  300F               	movlw	15
 11143  0B1B  0091               	movwf	17	;volatile
 11144  0B1C                     l4198:
 11145                           
 11146                           ;pin_manager.c: 73: TRISB = 0xFF;
 11147  0B1C  30FF               	movlw	255
 11148  0B1D  0092               	movwf	18	;volatile
 11149  0B1E                     l4200:
 11150                           
 11151                           ;pin_manager.c: 74: TRISC = 0xFF;
 11152  0B1E  30FF               	movlw	255
 11153  0B1F  0093               	movwf	19	;volatile
 11154  0B20                     l4202:
 11155                           
 11156                           ;pin_manager.c: 75: TRISD = 0xFF;
 11157  0B20  30FF               	movlw	255
 11158  0B21  0094               	movwf	20	;volatile
 11159  0B22                     l4204:
 11160                           
 11161                           ;pin_manager.c: 80: ANSELD = 0xFF;
 11162  0B22  30FF               	movlw	255
 11163  0B23  003E               	movlb	30	; select bank30
 11164  0B24  00D9               	movwf	89	;volatile
 11165  0B25                     l4206:
 11166                           
 11167                           ;pin_manager.c: 81: ANSELC = 0xC7;
 11168  0B25  30C7               	movlw	199
 11169  0B26  00CE               	movwf	78	;volatile
 11170  0B27                     l4208:
 11171                           
 11172                           ;pin_manager.c: 82: ANSELB = 0xEF;
 11173  0B27  30EF               	movlw	239
 11174  0B28  00C3               	movwf	67	;volatile
 11175  0B29                     l4210:
 11176                           
 11177                           ;pin_manager.c: 83: ANSELE = 0x07;
 11178  0B29  3007               	movlw	7
 11179  0B2A  00E4               	movwf	100	;volatile
 11180  0B2B                     l4212:
 11181                           
 11182                           ;pin_manager.c: 84: ANSELA = 0x4F;
 11183  0B2B  304F               	movlw	79
 11184  0B2C  00B8               	movwf	56	;volatile
 11185                           
 11186                           ;pin_manager.c: 89: WPUD = 0x00;
 11187  0B2D  01DA               	clrf	90	;volatile
 11188                           
 11189                           ;pin_manager.c: 90: WPUE = 0x00;
 11190  0B2E  01E5               	clrf	101	;volatile
 11191                           
 11192                           ;pin_manager.c: 91: WPUB = 0x00;
 11193  0B2F  01C4               	clrf	68	;volatile
 11194                           
 11195                           ;pin_manager.c: 92: WPUA = 0x00;
 11196  0B30  01B9               	clrf	57	;volatile
 11197                           
 11198                           ;pin_manager.c: 93: WPUC = 0x00;
 11199  0B31  01CF               	clrf	79	;volatile
 11200                           
 11201                           ;pin_manager.c: 98: ODCONE = 0x00;
 11202  0B32  01E6               	clrf	102	;volatile
 11203                           
 11204                           ;pin_manager.c: 99: ODCONA = 0x00;
 11205  0B33  01BA               	clrf	58	;volatile
 11206                           
 11207                           ;pin_manager.c: 100: ODCONB = 0x00;
 11208  0B34  01C5               	clrf	69	;volatile
 11209                           
 11210                           ;pin_manager.c: 101: ODCONC = 0x00;
 11211  0B35  01D0               	clrf	80	;volatile
 11212                           
 11213                           ;pin_manager.c: 102: ODCOND = 0x00;
 11214  0B36  01DB               	clrf	91	;volatile
 11215  0B37                     l4214:
 11216                           
 11217                           ;pin_manager.c: 107: SLRCONA = 0xFF;
 11218  0B37  30FF               	movlw	255
 11219  0B38  00BB               	movwf	59	;volatile
 11220  0B39                     l4216:
 11221                           
 11222                           ;pin_manager.c: 108: SLRCONB = 0xFF;
 11223  0B39  30FF               	movlw	255
 11224  0B3A  00C6               	movwf	70	;volatile
 11225  0B3B                     l4218:
 11226                           
 11227                           ;pin_manager.c: 109: SLRCONC = 0xFF;
 11228  0B3B  30FF               	movlw	255
 11229  0B3C  00D1               	movwf	81	;volatile
 11230  0B3D                     l4220:
 11231                           
 11232                           ;pin_manager.c: 110: SLRCOND = 0xFF;
 11233  0B3D  30FF               	movlw	255
 11234  0B3E  00DC               	movwf	92	;volatile
 11235  0B3F                     l4222:
 11236                           
 11237                           ;pin_manager.c: 111: SLRCONE = 0x07;
 11238  0B3F  3007               	movlw	7
 11239  0B40  00E7               	movwf	103	;volatile
 11240  0B41                     l4224:
 11241                           
 11242                           ;pin_manager.c: 120: SSP1CLKPPS = 0x13;
 11243  0B41  3013               	movlw	19
 11244  0B42  003D               	movlb	29	; select bank29
 11245  0B43  00C5               	movwf	69	;volatile
 11246  0B44                     l4226:
 11247                           
 11248                           ;pin_manager.c: 121: RC3PPS = 0x14;
 11249  0B44  3014               	movlw	20
 11250  0B45  003E               	movlb	30	; select bank30
 11251  0B46  00A3               	movwf	35	;volatile
 11252  0B47                     l4228:
 11253                           
 11254                           ;pin_manager.c: 122: RC4PPS = 0x15;
 11255  0B47  3015               	movlw	21
 11256  0B48  00A4               	movwf	36	;volatile
 11257  0B49                     l4230:
 11258                           
 11259                           ;pin_manager.c: 123: RA6PPS = 0x0E;
 11260  0B49  300E               	movlw	14
 11261  0B4A  0096               	movwf	22	;volatile
 11262  0B4B                     l4232:
 11263                           
 11264                           ;pin_manager.c: 124: SSP1DATPPS = 0x14;
 11265  0B4B  3014               	movlw	20
 11266  0B4C  003D               	movlb	29	; select bank29
 11267  0B4D  00C6               	movwf	70	;volatile
 11268  0B4E                     l122:
 11269  0B4E  0008               	return
 11270  0B4F                     __end_of_PIN_MANAGER_Initialize:
 11271                           
 11272                           	psect	text19
 11273  17C1                     __ptext19:	
 11274 ;; *************** function _OSCILLATOR_Initialize *****************
 11275 ;; Defined at:
 11276 ;;		line 63 in file "mcc_generated_files/mcc.c"
 11277 ;; Parameters:    Size  Location     Type
 11278 ;;		None
 11279 ;; Auto vars:     Size  Location     Type
 11280 ;;		None
 11281 ;; Return value:  Size  Location     Type
 11282 ;;                  1    wreg      void 
 11283 ;; Registers used:
 11284 ;;		wreg, status,2
 11285 ;; Tracked objects:
 11286 ;;		On entry : 0/0
 11287 ;;		On exit  : 0/0
 11288 ;;		Unchanged: 0/0
 11289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11294 ;;Total ram usage:        0 bytes
 11295 ;; Hardware stack levels used:    1
 11296 ;; Hardware stack levels required when called:    7
 11297 ;; This function calls:
 11298 ;;		Nothing
 11299 ;; This function is called by:
 11300 ;;		_SYSTEM_Initialize
 11301 ;; This function uses a non-reentrant model
 11302 ;;
 11303                           
 11304                           
 11305                           ;psect for function _OSCILLATOR_Initialize
 11306  17C1                     _OSCILLATOR_Initialize:
 11307  17C1                     l4236:	
 11308                           ;incstack = 0
 11309                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11310                           
 11311                           
 11312                           ;mcc.c: 66: OSCCON1 = 0x62;
 11313  17C1  3062               	movlw	98
 11314  17C2  0031               	movlb	17	; select bank17
 11315  17C3  008D               	movwf	13	;volatile
 11316  17C4                     l4238:
 11317                           
 11318                           ;mcc.c: 68: OSCCON3 = 0x00;
 11319  17C4  018F               	clrf	15	;volatile
 11320  17C5                     l4240:
 11321                           
 11322                           ;mcc.c: 70: OSCEN = 0x00;
 11323  17C5  0191               	clrf	17	;volatile
 11324                           
 11325                           ;mcc.c: 72: OSCFRQ = 0x02;
 11326  17C6  3002               	movlw	2
 11327  17C7  0093               	movwf	19	;volatile
 11328  17C8                     l4242:
 11329                           
 11330                           ;mcc.c: 74: OSCTUNE = 0x00;
 11331  17C8  0192               	clrf	18	;volatile
 11332  17C9                     l175:
 11333  17C9  0008               	return
 11334  17CA                     __end_of_OSCILLATOR_Initialize:
 11335                           
 11336                           	psect	text20
 11337  08C6                     __ptext20:	
 11338 ;; *************** function _ADCC_Initialize *****************
 11339 ;; Defined at:
 11340 ;;		line 63 in file "mcc_generated_files/adcc.c"
 11341 ;; Parameters:    Size  Location     Type
 11342 ;;		None
 11343 ;; Auto vars:     Size  Location     Type
 11344 ;;		None
 11345 ;; Return value:  Size  Location     Type
 11346 ;;                  1    wreg      void 
 11347 ;; Registers used:
 11348 ;;		wreg, status,2
 11349 ;; Tracked objects:
 11350 ;;		On entry : 0/0
 11351 ;;		On exit  : 0/0
 11352 ;;		Unchanged: 0/0
 11353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11358 ;;Total ram usage:        0 bytes
 11359 ;; Hardware stack levels used:    1
 11360 ;; Hardware stack levels required when called:    7
 11361 ;; This function calls:
 11362 ;;		Nothing
 11363 ;; This function is called by:
 11364 ;;		_SYSTEM_Initialize
 11365 ;; This function uses a non-reentrant model
 11366 ;;
 11367                           
 11368                           
 11369                           ;psect for function _ADCC_Initialize
 11370  08C6                     _ADCC_Initialize:
 11371  08C6                     l4248:	
 11372                           ;incstack = 0
 11373                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 11374                           
 11375                           
 11376                           ;adcc.c: 67: ADLTHL = 0x00;
 11377  08C6  0022               	movlb	2	; select bank2
 11378  08C7  018E               	clrf	14	;volatile
 11379                           
 11380                           ;adcc.c: 69: ADLTHH = 0x00;
 11381  08C8  018F               	clrf	15	;volatile
 11382                           
 11383                           ;adcc.c: 71: ADUTHL = 0x00;
 11384  08C9  0190               	clrf	16	;volatile
 11385                           
 11386                           ;adcc.c: 73: ADUTHH = 0x00;
 11387  08CA  0191               	clrf	17	;volatile
 11388                           
 11389                           ;adcc.c: 75: ADSTPTL = 0x00;
 11390  08CB  0192               	clrf	18	;volatile
 11391                           
 11392                           ;adcc.c: 77: ADSTPTH = 0x00;
 11393  08CC  0193               	clrf	19	;volatile
 11394                           
 11395                           ;adcc.c: 79: ADRPT = 0x00;
 11396  08CD  018D               	clrf	13	;volatile
 11397                           
 11398                           ;adcc.c: 81: ADPCH = 0x00;
 11399  08CE  0021               	movlb	1	; select bank1
 11400  08CF  019E               	clrf	30	;volatile
 11401                           
 11402                           ;adcc.c: 83: ADCAP = 0x00;
 11403  08D0  019B               	clrf	27	;volatile
 11404                           
 11405                           ;adcc.c: 85: ADCON1 = 0x00;
 11406  08D1  0194               	clrf	20	;volatile
 11407                           
 11408                           ;adcc.c: 87: ADCON2 = 0x00;
 11409  08D2  0195               	clrf	21	;volatile
 11410                           
 11411                           ;adcc.c: 89: ADCON3 = 0x00;
 11412  08D3  0196               	clrf	22	;volatile
 11413                           
 11414                           ;adcc.c: 91: ADSTAT = 0x00;
 11415  08D4  0197               	clrf	23	;volatile
 11416                           
 11417                           ;adcc.c: 93: ADREF = 0x00;
 11418  08D5  019A               	clrf	26	;volatile
 11419                           
 11420                           ;adcc.c: 95: ADACT = 0x00;
 11421  08D6  0199               	clrf	25	;volatile
 11422                           
 11423                           ;adcc.c: 97: ADCLK = 0x00;
 11424  08D7  0198               	clrf	24	;volatile
 11425  08D8                     l4250:
 11426                           
 11427                           ;adcc.c: 99: ADCON0 = 0x80;
 11428  08D8  3080               	movlw	128
 11429  08D9  0093               	movwf	19	;volatile
 11430  08DA                     l4252:
 11431                           
 11432                           ;adcc.c: 101: ADACQ = 0xFF;
 11433  08DA  30FF               	movlw	255
 11434  08DB  009D               	movwf	29	;volatile
 11435  08DC                     l563:
 11436  08DC  0008               	return
 11437  08DD                     __end_of_ADCC_Initialize:
 11438                           
 11439                           	psect	text21
 11440  1777                     __ptext21:	
 11441 ;; *************** function _PWM_Output_D4_Disable *****************
 11442 ;; Defined at:
 11443 ;;		line 246 in file "main.c"
 11444 ;; Parameters:    Size  Location     Type
 11445 ;;		None
 11446 ;; Auto vars:     Size  Location     Type
 11447 ;;		None
 11448 ;; Return value:  Size  Location     Type
 11449 ;;                  1    wreg      void 
 11450 ;; Registers used:
 11451 ;;		None
 11452 ;; Tracked objects:
 11453 ;;		On entry : 0/0
 11454 ;;		On exit  : 0/0
 11455 ;;		Unchanged: 0/0
 11456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11461 ;;Total ram usage:        0 bytes
 11462 ;; Hardware stack levels used:    1
 11463 ;; Hardware stack levels required when called:    7
 11464 ;; This function calls:
 11465 ;;		Nothing
 11466 ;; This function is called by:
 11467 ;;		_main
 11468 ;; This function uses a non-reentrant model
 11469 ;;
 11470                           
 11471                           
 11472                           ;psect for function _PWM_Output_D4_Disable
 11473  1777                     _PWM_Output_D4_Disable:
 11474  1777                     l4798:	
 11475                           ;incstack = 0
 11476                           ; Regs used in _PWM_Output_D4_Disable: []
 11477                           
 11478                           
 11479                           ;main.c: 247: PWM6EN = 0;
 11480  1777  0027               	movlb	7	; select bank7
 11481  1778  138E               	bcf	14,7	;volatile
 11482  1779                     l1104:
 11483  1779  0008               	return
 11484  177A                     __end_of_PWM_Output_D4_Disable:
 11485                           
 11486                           	psect	text22
 11487  08DD                     __ptext22:	
 11488 ;; *************** function _PWM6_LoadDutyValue *****************
 11489 ;; Defined at:
 11490 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 11491 ;; Parameters:    Size  Location     Type
 11492 ;;  dutyValue       2    0[BANK1 ] unsigned int 
 11493 ;; Auto vars:     Size  Location     Type
 11494 ;;		None
 11495 ;; Return value:  Size  Location     Type
 11496 ;;                  1    wreg      void 
 11497 ;; Registers used:
 11498 ;;		wreg, status,2, status,0
 11499 ;; Tracked objects:
 11500 ;;		On entry : 0/0
 11501 ;;		On exit  : 0/0
 11502 ;;		Unchanged: 0/0
 11503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11504 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11506 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11507 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11508 ;;Total ram usage:        4 bytes
 11509 ;; Hardware stack levels used:    1
 11510 ;; Hardware stack levels required when called:    7
 11511 ;; This function calls:
 11512 ;;		Nothing
 11513 ;; This function is called by:
 11514 ;;		_main
 11515 ;; This function uses a non-reentrant model
 11516 ;;
 11517                           
 11518                           
 11519                           ;psect for function _PWM6_LoadDutyValue
 11520  08DD                     _PWM6_LoadDutyValue:
 11521  08DD                     l4694:	
 11522                           ;incstack = 0
 11523                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 11524                           
 11525                           
 11526                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 11527  08DD  0021               	movlb	1	; select bank1
 11528  08DE  0821               	movf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128),w
 11529  08DF  00A3               	movwf	(??_PWM6_LoadDutyValue^(0+128)+1)
 11530  08E0  0820               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 11531  08E1  00A2               	movwf	??_PWM6_LoadDutyValue^(0+128)
 11532  08E2  36A3               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 11533  08E3  0CA2               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 11534  08E4  36A3               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 11535  08E5  0CA2               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 11536  08E6  0822               	movf	??_PWM6_LoadDutyValue^(0+128),w
 11537  08E7  0027               	movlb	7	; select bank7
 11538  08E8  008D               	movwf	13	;volatile
 11539                           
 11540                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 11541  08E9  0021               	movlb	1	; select bank1
 11542  08EA  0820               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 11543  08EB  3903               	andlw	3
 11544  08EC  00A2               	movwf	??_PWM6_LoadDutyValue^(0+128)
 11545  08ED  3005               	movlw	5
 11546  08EE                     u4195:
 11547  08EE  35A2               	lslf	??_PWM6_LoadDutyValue^(0+128),f
 11548  08EF  3EFF               	addlw	-1
 11549  08F0  1D03               	skipz
 11550  08F1  28EE               	goto	u4195
 11551  08F2  3522               	lslf	??_PWM6_LoadDutyValue^(0+128),w
 11552  08F3  0027               	movlb	7	; select bank7
 11553  08F4  008C               	movwf	12	;volatile
 11554  08F5                     l722:
 11555  08F5  0008               	return
 11556  08F6                     __end_of_PWM6_LoadDutyValue:
 11557                           
 11558                           	psect	text23
 11559  0C47                     __ptext23:	
 11560 ;; *************** function _LCDinit *****************
 11561 ;; Defined at:
 11562 ;;		line 173 in file "main.c"
 11563 ;; Parameters:    Size  Location     Type
 11564 ;;		None
 11565 ;; Auto vars:     Size  Location     Type
 11566 ;;		None
 11567 ;; Return value:  Size  Location     Type
 11568 ;;                  1    wreg      void 
 11569 ;; Registers used:
 11570 ;;		wreg, status,2, status,0, pclath, cstack
 11571 ;; Tracked objects:
 11572 ;;		On entry : 0/0
 11573 ;;		On exit  : 0/0
 11574 ;;		Unchanged: 0/0
 11575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11578 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11579 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11580 ;;Total ram usage:        1 bytes
 11581 ;; Hardware stack levels used:    1
 11582 ;; Hardware stack levels required when called:    9
 11583 ;; This function calls:
 11584 ;;		_LCDsend
 11585 ;;		_LCDsend2x4
 11586 ;; This function is called by:
 11587 ;;		_main
 11588 ;; This function uses a non-reentrant model
 11589 ;;
 11590                           
 11591                           
 11592                           ;psect for function _LCDinit
 11593  0C47                     _LCDinit:
 11594  0C47                     l4764:	
 11595                           ;incstack = 0
 11596                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 11597                           
 11598                           
 11599                           ;main.c: 175: _delay((unsigned long)((50)*(1000000/4000.0)));
 11600  0C47  3011               	movlw	17
 11601  0C48  0021               	movlb	1	; select bank1
 11602  0C49  00A8               	movwf	??_LCDinit^(0+128)
 11603  0C4A  303A               	movlw	58
 11604  0C4B                     u5007:
 11605  0C4B  0B89               	decfsz	9,f
 11606  0C4C  2C4B               	goto	u5007
 11607  0C4D  0BA8               	decfsz	??_LCDinit^(0+128),f
 11608  0C4E  2C4B               	goto	u5007
 11609  0C4F  0000               	nop
 11610  0C50                     l4766:
 11611                           
 11612                           ;main.c: 176: LCDsend(0x30);
 11613  0C50  3030               	movlw	48
 11614  0C51  318B  239A  318C   	fcall	_LCDsend
 11615  0C54                     l4768:
 11616                           
 11617                           ;main.c: 177: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 11618  0C54  3034               	movlw	52
 11619  0C55  318B  239A  318C   	fcall	_LCDsend
 11620  0C58  3029               	movlw	41
 11621  0C59                     u5017:
 11622  0C59  0B89               	decfsz	9,f
 11623  0C5A  2C59               	goto	u5017
 11624  0C5B  3200               	nop2
 11625  0C5C                     l4770:
 11626  0C5C  3030               	movlw	48
 11627  0C5D  318B  239A  318C   	fcall	_LCDsend
 11628  0C60                     l4772:
 11629                           
 11630                           ;main.c: 178: _delay((unsigned long)((5)*(1000000/4000.0)));
 11631  0C60  30FA               	movlw	250
 11632  0C61                     u5027:
 11633  0C61  3200               	nop2
 11634  0C62  0B89               	decfsz	9,f
 11635  0C63  2C61               	goto	u5027
 11636                           
 11637                           ;main.c: 179: LCDsend(0x30);
 11638  0C64  3030               	movlw	48
 11639  0C65  318B  239A  318C   	fcall	_LCDsend
 11640                           
 11641                           ;main.c: 180: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 11642  0C68  3034               	movlw	52
 11643  0C69  318B  239A  318C   	fcall	_LCDsend
 11644  0C6C                     l4774:
 11645  0C6C  3029               	movlw	41
 11646  0C6D                     u5037:
 11647  0C6D  0B89               	decfsz	9,f
 11648  0C6E  2C6D               	goto	u5037
 11649  0C6F  3200               	nop2
 11650  0C70                     l4776:
 11651  0C70  3030               	movlw	48
 11652  0C71  318B  239A  318C   	fcall	_LCDsend
 11653                           
 11654                           ;main.c: 181: _delay((unsigned long)((100)*(1000000/4000000.0)));
 11655  0C74  3008               	movlw	8
 11656  0C75                     u5047:
 11657  0C75  0B89               	decfsz	9,f
 11658  0C76  2C75               	goto	u5047
 11659  0C77  0000               	nop
 11660  0C78                     l4778:
 11661                           
 11662                           ;main.c: 182: LCDsend(0x30);
 11663  0C78  3030               	movlw	48
 11664  0C79  318B  239A  318C   	fcall	_LCDsend
 11665  0C7C                     l4780:
 11666                           
 11667                           ;main.c: 183: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 11668  0C7C  3034               	movlw	52
 11669  0C7D  318B  239A  318C   	fcall	_LCDsend
 11670  0C80  3029               	movlw	41
 11671  0C81                     u5057:
 11672  0C81  0B89               	decfsz	9,f
 11673  0C82  2C81               	goto	u5057
 11674  0C83  3200               	nop2
 11675  0C84                     l4782:
 11676  0C84  3030               	movlw	48
 11677  0C85  318B  239A  318C   	fcall	_LCDsend
 11678  0C88                     l4784:
 11679                           
 11680                           ;main.c: 184: _delay((unsigned long)((100)*(1000000/4000000.0)));
 11681  0C88  3008               	movlw	8
 11682  0C89                     u5067:
 11683  0C89  0B89               	decfsz	9,f
 11684  0C8A  2C89               	goto	u5067
 11685  0C8B  0000               	nop
 11686                           
 11687                           ;main.c: 185: LCDsend(0x20);
 11688  0C8C  3020               	movlw	32
 11689  0C8D  318B  239A  318C   	fcall	_LCDsend
 11690                           
 11691                           ;main.c: 186: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
 11692  0C90  3024               	movlw	36
 11693  0C91  318B  239A  318C   	fcall	_LCDsend
 11694  0C94                     l4786:
 11695  0C94  3029               	movlw	41
 11696  0C95                     u5077:
 11697  0C95  0B89               	decfsz	9,f
 11698  0C96  2C95               	goto	u5077
 11699  0C97  3200               	nop2
 11700  0C98                     l4788:
 11701  0C98  3020               	movlw	32
 11702  0C99  318B  239A  318C   	fcall	_LCDsend
 11703                           
 11704                           ;main.c: 187: _delay((unsigned long)((5)*(1000000/4000.0)));
 11705  0C9C  30FA               	movlw	250
 11706  0C9D                     u5087:
 11707  0C9D  3200               	nop2
 11708  0C9E  0B89               	decfsz	9,f
 11709  0C9F  2C9D               	goto	u5087
 11710  0CA0                     l4790:
 11711                           
 11712                           ;main.c: 189: LCDsend2x4(0x28, 0);
 11713  0CA0  0021               	movlb	1	; select bank1
 11714  0CA1  01A2               	clrf	LCDsend2x4@mode^(0+128)
 11715  0CA2  3028               	movlw	40
 11716  0CA3  3187  2704  318C   	fcall	_LCDsend2x4
 11717  0CA6                     l4792:
 11718                           
 11719                           ;main.c: 190: LCDsend2x4(0x06, 0);
 11720  0CA6  0021               	movlb	1	; select bank1
 11721  0CA7  01A2               	clrf	LCDsend2x4@mode^(0+128)
 11722  0CA8  3006               	movlw	6
 11723  0CA9  3187  2704  318C   	fcall	_LCDsend2x4
 11724  0CAC                     l4794:
 11725                           
 11726                           ;main.c: 191: LCDsend2x4(0x0f, 0);
 11727  0CAC  0021               	movlb	1	; select bank1
 11728  0CAD  01A2               	clrf	LCDsend2x4@mode^(0+128)
 11729  0CAE  300F               	movlw	15
 11730  0CAF  3187  2704  318C   	fcall	_LCDsend2x4
 11731  0CB2                     l4796:
 11732                           
 11733                           ;main.c: 192: LCDsend2x4(0x01, 0);
 11734  0CB2  0021               	movlb	1	; select bank1
 11735  0CB3  01A2               	clrf	LCDsend2x4@mode^(0+128)
 11736  0CB4  3001               	movlw	1
 11737  0CB5  3187  2704  318C   	fcall	_LCDsend2x4
 11738                           
 11739                           ;main.c: 193: _delay((unsigned long)((2)*(1000000/4000.0)));
 11740  0CB8  30A6               	movlw	166
 11741  0CB9                     u5097:
 11742  0CB9  0B89               	decfsz	9,f
 11743  0CBA  2CB9               	goto	u5097
 11744  0CBB  3200               	nop2
 11745  0CBC                     l1073:
 11746  0CBC  0008               	return
 11747  0CBD                     __end_of_LCDinit:
 11748                           
 11749                           	psect	text24
 11750  0704                     __ptext24:	
 11751 ;; *************** function _LCDsend2x4 *****************
 11752 ;; Defined at:
 11753 ;;		line 150 in file "main.c"
 11754 ;; Parameters:    Size  Location     Type
 11755 ;;  c               1    wreg     unsigned char 
 11756 ;;  mode            1    2[BANK1 ] unsigned char 
 11757 ;; Auto vars:     Size  Location     Type
 11758 ;;  c               1    5[BANK1 ] unsigned char 
 11759 ;;  lc              1    7[BANK1 ] unsigned char 
 11760 ;;  hc              1    6[BANK1 ] unsigned char 
 11761 ;; Return value:  Size  Location     Type
 11762 ;;                  1    wreg      void 
 11763 ;; Registers used:
 11764 ;;		wreg, status,2, status,0, pclath, cstack
 11765 ;; Tracked objects:
 11766 ;;		On entry : 0/0
 11767 ;;		On exit  : 0/0
 11768 ;;		Unchanged: 0/0
 11769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11770 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11771 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11772 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11773 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 11774 ;;Total ram usage:        6 bytes
 11775 ;; Hardware stack levels used:    1
 11776 ;; Hardware stack levels required when called:    8
 11777 ;; This function calls:
 11778 ;;		_WriteI2C
 11779 ;; This function is called by:
 11780 ;;		_LCDinit
 11781 ;; This function uses a non-reentrant model
 11782 ;;
 11783                           
 11784                           
 11785                           ;psect for function _LCDsend2x4
 11786  0704                     _LCDsend2x4:
 11787                           
 11788                           ;incstack = 0
 11789                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 11790                           ;LCDsend2x4@c stored from wreg
 11791  0704  0021               	movlb	1	; select bank1
 11792  0705  00A5               	movwf	LCDsend2x4@c^(0+128)
 11793  0706                     l4378:
 11794                           
 11795                           ;main.c: 152: unsigned char hc;;main.c: 153: unsigned char lc;;main.c: 155: hc = c & 0xf
      +                          0;
 11796  0706  0825               	movf	LCDsend2x4@c^(0+128),w
 11797  0707  39F0               	andlw	240
 11798  0708  00A3               	movwf	??_LCDsend2x4^(0+128)
 11799  0709  0823               	movf	??_LCDsend2x4^(0+128),w
 11800  070A  00A6               	movwf	LCDsend2x4@hc^(0+128)
 11801  070B                     l4380:
 11802                           
 11803                           ;main.c: 156: lc = (c << 4) & 0xf0;
 11804  070B  0825               	movf	LCDsend2x4@c^(0+128),w
 11805  070C  00A3               	movwf	??_LCDsend2x4^(0+128)
 11806  070D  3003               	movlw	3
 11807  070E                     u3605:
 11808  070E  35A3               	lslf	??_LCDsend2x4^(0+128),f
 11809  070F  3EFF               	addlw	-1
 11810  0710  1D03               	skipz
 11811  0711  2F0E               	goto	u3605
 11812  0712  3523               	lslf	??_LCDsend2x4^(0+128),w
 11813  0713  39F0               	andlw	240
 11814  0714  00A4               	movwf	(??_LCDsend2x4+1)^(0+128)
 11815  0715  0824               	movf	(??_LCDsend2x4+1)^(0+128),w
 11816  0716  00A7               	movwf	LCDsend2x4@lc^(0+128)
 11817  0717                     l4382:	
 11818                           ;main.c: 158: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11819                           
 11820  0717  0023               	movlb	3	; select bank3
 11821  0718  0C0F               	rrf	15,w	;volatile
 11822  0719  0C89               	rrf	9,f
 11823  071A  3901               	andlw	1
 11824  071B  0021               	movlb	1	; select bank1
 11825  071C  00A3               	movwf	??_LCDsend2x4^(0+128)
 11826  071D  0023               	movlb	3	; select bank3
 11827  071E  0811               	movf	17,w	;volatile
 11828  071F  391F               	andlw	31
 11829  0720  0021               	movlb	1	; select bank1
 11830  0721  0423               	iorwf	??_LCDsend2x4^(0+128),w
 11831  0722  1D03               	btfss	3,2
 11832  0723  2F25               	goto	u3611
 11833  0724  2F26               	goto	u3610
 11834  0725                     u3611:
 11835  0725  2F17               	goto	l4382
 11836  0726                     u3610:
 11837  0726                     l1039:
 11838                           
 11839                           ;main.c: 159: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 11840  0726  0023               	movlb	3	; select bank3
 11841  0727  1411               	bsf	17,0	;volatile
 11842  0728                     l1040:
 11843  0728  1811               	btfsc	17,0	;volatile
 11844  0729  2F2B               	goto	u3621
 11845  072A  2F2C               	goto	u3620
 11846  072B                     u3621:
 11847  072B  2F28               	goto	l1040
 11848  072C                     u3620:
 11849  072C                     l4384:
 11850  072C  0023               	movlb	3	; select bank3
 11851  072D  0C0F               	rrf	15,w	;volatile
 11852  072E  0C89               	rrf	9,f
 11853  072F  3901               	andlw	1
 11854  0730  0021               	movlb	1	; select bank1
 11855  0731  00A3               	movwf	??_LCDsend2x4^(0+128)
 11856  0732  0023               	movlb	3	; select bank3
 11857  0733  0811               	movf	17,w	;volatile
 11858  0734  391F               	andlw	31
 11859  0735  0021               	movlb	1	; select bank1
 11860  0736  0423               	iorwf	??_LCDsend2x4^(0+128),w
 11861  0737  1D03               	btfss	3,2
 11862  0738  2F3A               	goto	u3631
 11863  0739  2F3B               	goto	u3630
 11864  073A                     u3631:
 11865  073A  2F2C               	goto	l4384
 11866  073B                     u3630:
 11867  073B                     l4386:
 11868                           
 11869                           ;main.c: 160: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11870  073B  304E               	movlw	78
 11871  073C  318B  23ED  3187   	fcall	_WriteI2C
 11872  073F                     l4388:
 11873  073F  0023               	movlb	3	; select bank3
 11874  0740  0C0F               	rrf	15,w	;volatile
 11875  0741  0C89               	rrf	9,f
 11876  0742  3901               	andlw	1
 11877  0743  0021               	movlb	1	; select bank1
 11878  0744  00A3               	movwf	??_LCDsend2x4^(0+128)
 11879  0745  0023               	movlb	3	; select bank3
 11880  0746  0811               	movf	17,w	;volatile
 11881  0747  391F               	andlw	31
 11882  0748  0021               	movlb	1	; select bank1
 11883  0749  0423               	iorwf	??_LCDsend2x4^(0+128),w
 11884  074A  1D03               	btfss	3,2
 11885  074B  2F4D               	goto	u3641
 11886  074C  2F4E               	goto	u3640
 11887  074D                     u3641:
 11888  074D  2F3F               	goto	l4388
 11889  074E                     u3640:
 11890  074E                     l4390:
 11891                           
 11892                           ;main.c: 161: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 11893  074E  0826               	movf	LCDsend2x4@hc^(0+128),w
 11894  074F  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 11895  0750  3808               	iorlw	8
 11896  0751  318B  23ED  3187   	fcall	_WriteI2C
 11897  0754                     l4392:
 11898  0754  0023               	movlb	3	; select bank3
 11899  0755  0C0F               	rrf	15,w	;volatile
 11900  0756  0C89               	rrf	9,f
 11901  0757  3901               	andlw	1
 11902  0758  0021               	movlb	1	; select bank1
 11903  0759  00A3               	movwf	??_LCDsend2x4^(0+128)
 11904  075A  0023               	movlb	3	; select bank3
 11905  075B  0811               	movf	17,w	;volatile
 11906  075C  391F               	andlw	31
 11907  075D  0021               	movlb	1	; select bank1
 11908  075E  0423               	iorwf	??_LCDsend2x4^(0+128),w
 11909  075F  1D03               	btfss	3,2
 11910  0760  2F62               	goto	u3651
 11911  0761  2F63               	goto	u3650
 11912  0762                     u3651:
 11913  0762  2F54               	goto	l4392
 11914  0763                     u3650:
 11915  0763                     l4394:
 11916                           
 11917                           ;main.c: 162: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 11918  0763  0826               	movf	LCDsend2x4@hc^(0+128),w
 11919  0764  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 11920  0765  380C               	iorlw	12
 11921  0766  318B  23ED  3187   	fcall	_WriteI2C
 11922  0769                     l4396:
 11923  0769  0023               	movlb	3	; select bank3
 11924  076A  0C0F               	rrf	15,w	;volatile
 11925  076B  0C89               	rrf	9,f
 11926  076C  3901               	andlw	1
 11927  076D  0021               	movlb	1	; select bank1
 11928  076E  00A3               	movwf	??_LCDsend2x4^(0+128)
 11929  076F  0023               	movlb	3	; select bank3
 11930  0770  0811               	movf	17,w	;volatile
 11931  0771  391F               	andlw	31
 11932  0772  0021               	movlb	1	; select bank1
 11933  0773  0423               	iorwf	??_LCDsend2x4^(0+128),w
 11934  0774  1D03               	btfss	3,2
 11935  0775  2F77               	goto	u3661
 11936  0776  2F78               	goto	u3660
 11937  0777                     u3661:
 11938  0777  2F69               	goto	l4396
 11939  0778                     u3660:
 11940  0778                     l1054:
 11941  0778                     l4398:	
 11942                           ;main.c: 163: _delay((unsigned long)((1)*(1000000/4000000.0)));
 11943                           
 11944                           
 11945                           ;main.c: 164: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 11946  0778  0021               	movlb	1	; select bank1
 11947  0779  0826               	movf	LCDsend2x4@hc^(0+128),w
 11948  077A  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 11949  077B  3808               	iorlw	8
 11950  077C  318B  23ED  3187   	fcall	_WriteI2C
 11951  077F                     l4400:
 11952  077F  0023               	movlb	3	; select bank3
 11953  0780  0C0F               	rrf	15,w	;volatile
 11954  0781  0C89               	rrf	9,f
 11955  0782  3901               	andlw	1
 11956  0783  0021               	movlb	1	; select bank1
 11957  0784  00A3               	movwf	??_LCDsend2x4^(0+128)
 11958  0785  0023               	movlb	3	; select bank3
 11959  0786  0811               	movf	17,w	;volatile
 11960  0787  391F               	andlw	31
 11961  0788  0021               	movlb	1	; select bank1
 11962  0789  0423               	iorwf	??_LCDsend2x4^(0+128),w
 11963  078A  1D03               	btfss	3,2
 11964  078B  2F8D               	goto	u3671
 11965  078C  2F8E               	goto	u3670
 11966  078D                     u3671:
 11967  078D  2F7F               	goto	l4400
 11968  078E                     u3670:
 11969  078E                     l4402:
 11970                           
 11971                           ;main.c: 165: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 11972  078E  0827               	movf	LCDsend2x4@lc^(0+128),w
 11973  078F  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 11974  0790  3808               	iorlw	8
 11975  0791  318B  23ED  3187   	fcall	_WriteI2C
 11976  0794                     l4404:
 11977  0794  0023               	movlb	3	; select bank3
 11978  0795  0C0F               	rrf	15,w	;volatile
 11979  0796  0C89               	rrf	9,f
 11980  0797  3901               	andlw	1
 11981  0798  0021               	movlb	1	; select bank1
 11982  0799  00A3               	movwf	??_LCDsend2x4^(0+128)
 11983  079A  0023               	movlb	3	; select bank3
 11984  079B  0811               	movf	17,w	;volatile
 11985  079C  391F               	andlw	31
 11986  079D  0021               	movlb	1	; select bank1
 11987  079E  0423               	iorwf	??_LCDsend2x4^(0+128),w
 11988  079F  1D03               	btfss	3,2
 11989  07A0  2FA2               	goto	u3681
 11990  07A1  2FA3               	goto	u3680
 11991  07A2                     u3681:
 11992  07A2  2F94               	goto	l4404
 11993  07A3                     u3680:
 11994  07A3                     l4406:
 11995                           
 11996                           ;main.c: 166: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 11997  07A3  0827               	movf	LCDsend2x4@lc^(0+128),w
 11998  07A4  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 11999  07A5  380C               	iorlw	12
 12000  07A6  318B  23ED  3187   	fcall	_WriteI2C
 12001  07A9                     l4408:
 12002  07A9  0023               	movlb	3	; select bank3
 12003  07AA  0C0F               	rrf	15,w	;volatile
 12004  07AB  0C89               	rrf	9,f
 12005  07AC  3901               	andlw	1
 12006  07AD  0021               	movlb	1	; select bank1
 12007  07AE  00A3               	movwf	??_LCDsend2x4^(0+128)
 12008  07AF  0023               	movlb	3	; select bank3
 12009  07B0  0811               	movf	17,w	;volatile
 12010  07B1  391F               	andlw	31
 12011  07B2  0021               	movlb	1	; select bank1
 12012  07B3  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12013  07B4  1D03               	btfss	3,2
 12014  07B5  2FB7               	goto	u3691
 12015  07B6  2FB8               	goto	u3690
 12016  07B7                     u3691:
 12017  07B7  2FA9               	goto	l4408
 12018  07B8                     u3690:
 12019  07B8                     l1063:
 12020  07B8                     l4410:	
 12021                           ;main.c: 167: _delay((unsigned long)((1)*(1000000/4000000.0)));
 12022                           
 12023                           
 12024                           ;main.c: 168: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 12025  07B8  0021               	movlb	1	; select bank1
 12026  07B9  0827               	movf	LCDsend2x4@lc^(0+128),w
 12027  07BA  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12028  07BB  3808               	iorlw	8
 12029  07BC  318B  23ED  3187   	fcall	_WriteI2C
 12030  07BF                     l4412:
 12031  07BF  0023               	movlb	3	; select bank3
 12032  07C0  0C0F               	rrf	15,w	;volatile
 12033  07C1  0C89               	rrf	9,f
 12034  07C2  3901               	andlw	1
 12035  07C3  0021               	movlb	1	; select bank1
 12036  07C4  00A3               	movwf	??_LCDsend2x4^(0+128)
 12037  07C5  0023               	movlb	3	; select bank3
 12038  07C6  0811               	movf	17,w	;volatile
 12039  07C7  391F               	andlw	31
 12040  07C8  0021               	movlb	1	; select bank1
 12041  07C9  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12042  07CA  1D03               	btfss	3,2
 12043  07CB  2FCD               	goto	u3701
 12044  07CC  2FCE               	goto	u3700
 12045  07CD                     u3701:
 12046  07CD  2FBF               	goto	l4412
 12047  07CE                     u3700:
 12048  07CE                     l1066:
 12049                           
 12050                           ;main.c: 169: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 12051  07CE  0023               	movlb	3	; select bank3
 12052  07CF  1511               	bsf	17,2	;volatile
 12053  07D0                     l1067:
 12054  07D0  1911               	btfsc	17,2	;volatile
 12055  07D1  2FD3               	goto	u3711
 12056  07D2  2FD4               	goto	u3710
 12057  07D3                     u3711:
 12058  07D3  2FD0               	goto	l1067
 12059  07D4                     u3710:
 12060  07D4                     l4414:
 12061                           
 12062                           ;main.c: 170: _delay((unsigned long)((50)*(1000000/4000000.0)));
 12063  07D4  3004               	movlw	4
 12064  07D5                     u5107:
 12065  07D5  0B89               	decfsz	9,f
 12066  07D6  2FD5               	goto	u5107
 12067  07D7                     l1070:
 12068  07D7  0008               	return
 12069  07D8                     __end_of_LCDsend2x4:
 12070                           
 12071                           	psect	text25
 12072  0B9A                     __ptext25:	
 12073 ;; *************** function _LCDsend *****************
 12074 ;; Defined at:
 12075 ;;		line 111 in file "main.c"
 12076 ;; Parameters:    Size  Location     Type
 12077 ;;  c               1    wreg     unsigned char 
 12078 ;; Auto vars:     Size  Location     Type
 12079 ;;  c               1    3[BANK1 ] unsigned char 
 12080 ;; Return value:  Size  Location     Type
 12081 ;;                  1    wreg      void 
 12082 ;; Registers used:
 12083 ;;		wreg, status,2, status,0, pclath, cstack
 12084 ;; Tracked objects:
 12085 ;;		On entry : 0/0
 12086 ;;		On exit  : 0/0
 12087 ;;		Unchanged: 0/0
 12088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12090 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12091 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12092 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12093 ;;Total ram usage:        2 bytes
 12094 ;; Hardware stack levels used:    1
 12095 ;; Hardware stack levels required when called:    8
 12096 ;; This function calls:
 12097 ;;		_WriteI2C
 12098 ;; This function is called by:
 12099 ;;		_LCDinit
 12100 ;; This function uses a non-reentrant model
 12101 ;;
 12102                           
 12103                           
 12104                           ;psect for function _LCDsend
 12105  0B9A                     _LCDsend:
 12106                           
 12107                           ;incstack = 0
 12108                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 12109                           ;LCDsend@c stored from wreg
 12110  0B9A  0021               	movlb	1	; select bank1
 12111  0B9B  00A3               	movwf	LCDsend@c^(0+128)
 12112  0B9C                     l4364:
 12113  0B9C                     l4366:	
 12114                           ;main.c: 113: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12115                           
 12116  0B9C  0023               	movlb	3	; select bank3
 12117  0B9D  0C0F               	rrf	15,w	;volatile
 12118  0B9E  0C89               	rrf	9,f
 12119  0B9F  3901               	andlw	1
 12120  0BA0  0021               	movlb	1	; select bank1
 12121  0BA1  00A2               	movwf	??_LCDsend^(0+128)
 12122  0BA2  0023               	movlb	3	; select bank3
 12123  0BA3  0811               	movf	17,w	;volatile
 12124  0BA4  391F               	andlw	31
 12125  0BA5  0021               	movlb	1	; select bank1
 12126  0BA6  0422               	iorwf	??_LCDsend^(0+128),w
 12127  0BA7  1D03               	btfss	3,2
 12128  0BA8  2BAA               	goto	u3541
 12129  0BA9  2BAB               	goto	u3540
 12130  0BAA                     u3541:
 12131  0BAA  2B9C               	goto	l4366
 12132  0BAB                     u3540:
 12133  0BAB                     l937:
 12134                           
 12135                           ;main.c: 114: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 12136  0BAB  0023               	movlb	3	; select bank3
 12137  0BAC  1411               	bsf	17,0	;volatile
 12138  0BAD                     l938:
 12139  0BAD  1811               	btfsc	17,0	;volatile
 12140  0BAE  2BB0               	goto	u3551
 12141  0BAF  2BB1               	goto	u3550
 12142  0BB0                     u3551:
 12143  0BB0  2BAD               	goto	l938
 12144  0BB1                     u3550:
 12145  0BB1                     l4368:
 12146  0BB1  0023               	movlb	3	; select bank3
 12147  0BB2  0C0F               	rrf	15,w	;volatile
 12148  0BB3  0C89               	rrf	9,f
 12149  0BB4  3901               	andlw	1
 12150  0BB5  0021               	movlb	1	; select bank1
 12151  0BB6  00A2               	movwf	??_LCDsend^(0+128)
 12152  0BB7  0023               	movlb	3	; select bank3
 12153  0BB8  0811               	movf	17,w	;volatile
 12154  0BB9  391F               	andlw	31
 12155  0BBA  0021               	movlb	1	; select bank1
 12156  0BBB  0422               	iorwf	??_LCDsend^(0+128),w
 12157  0BBC  1D03               	btfss	3,2
 12158  0BBD  2BBF               	goto	u3561
 12159  0BBE  2BC0               	goto	u3560
 12160  0BBF                     u3561:
 12161  0BBF  2BB1               	goto	l4368
 12162  0BC0                     u3560:
 12163  0BC0                     l4370:
 12164                           
 12165                           ;main.c: 115: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12166  0BC0  304E               	movlw	78
 12167  0BC1  318B  23ED  318B   	fcall	_WriteI2C
 12168  0BC4                     l4372:
 12169  0BC4  0023               	movlb	3	; select bank3
 12170  0BC5  0C0F               	rrf	15,w	;volatile
 12171  0BC6  0C89               	rrf	9,f
 12172  0BC7  3901               	andlw	1
 12173  0BC8  0021               	movlb	1	; select bank1
 12174  0BC9  00A2               	movwf	??_LCDsend^(0+128)
 12175  0BCA  0023               	movlb	3	; select bank3
 12176  0BCB  0811               	movf	17,w	;volatile
 12177  0BCC  391F               	andlw	31
 12178  0BCD  0021               	movlb	1	; select bank1
 12179  0BCE  0422               	iorwf	??_LCDsend^(0+128),w
 12180  0BCF  1D03               	btfss	3,2
 12181  0BD0  2BD2               	goto	u3571
 12182  0BD1  2BD3               	goto	u3570
 12183  0BD2                     u3571:
 12184  0BD2  2BC4               	goto	l4372
 12185  0BD3                     u3570:
 12186  0BD3                     l4374:
 12187                           
 12188                           ;main.c: 116: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12189  0BD3  0823               	movf	LCDsend@c^(0+128),w
 12190  0BD4  318B  23ED  318B   	fcall	_WriteI2C
 12191  0BD7                     l4376:
 12192  0BD7  0023               	movlb	3	; select bank3
 12193  0BD8  0C0F               	rrf	15,w	;volatile
 12194  0BD9  0C89               	rrf	9,f
 12195  0BDA  3901               	andlw	1
 12196  0BDB  0021               	movlb	1	; select bank1
 12197  0BDC  00A2               	movwf	??_LCDsend^(0+128)
 12198  0BDD  0023               	movlb	3	; select bank3
 12199  0BDE  0811               	movf	17,w	;volatile
 12200  0BDF  391F               	andlw	31
 12201  0BE0  0021               	movlb	1	; select bank1
 12202  0BE1  0422               	iorwf	??_LCDsend^(0+128),w
 12203  0BE2  1D03               	btfss	3,2
 12204  0BE3  2BE5               	goto	u3581
 12205  0BE4  2BE6               	goto	u3580
 12206  0BE5                     u3581:
 12207  0BE5  2BD7               	goto	l4376
 12208  0BE6                     u3580:
 12209  0BE6                     l949:
 12210                           
 12211                           ;main.c: 117: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 12212  0BE6  0023               	movlb	3	; select bank3
 12213  0BE7  1511               	bsf	17,2	;volatile
 12214  0BE8                     l950:
 12215  0BE8  1911               	btfsc	17,2	;volatile
 12216  0BE9  2BEB               	goto	u3591
 12217  0BEA  2BEC               	goto	u3590
 12218  0BEB                     u3591:
 12219  0BEB  2BE8               	goto	l950
 12220  0BEC                     u3590:
 12221  0BEC                     l953:
 12222  0BEC  0008               	return
 12223  0BED                     __end_of_LCDsend:
 12224                           
 12225                           	psect	text26
 12226  0BED                     __ptext26:	
 12227 ;; *************** function _WriteI2C *****************
 12228 ;; Defined at:
 12229 ;;		line 47 in file "I2C/i2c.c"
 12230 ;; Parameters:    Size  Location     Type
 12231 ;;  data_out        1    wreg     unsigned char 
 12232 ;; Auto vars:     Size  Location     Type
 12233 ;;  data_out        1    1[BANK1 ] unsigned char 
 12234 ;; Return value:  Size  Location     Type
 12235 ;;                  1    wreg      char 
 12236 ;; Registers used:
 12237 ;;		wreg, status,2, status,0
 12238 ;; Tracked objects:
 12239 ;;		On entry : 0/0
 12240 ;;		On exit  : 0/0
 12241 ;;		Unchanged: 0/0
 12242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12244 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12245 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12246 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12247 ;;Total ram usage:        2 bytes
 12248 ;; Hardware stack levels used:    1
 12249 ;; Hardware stack levels required when called:    7
 12250 ;; This function calls:
 12251 ;;		Nothing
 12252 ;; This function is called by:
 12253 ;;		_LCDsend
 12254 ;;		_LCDsend2x4
 12255 ;;		_LCDrecv
 12256 ;; This function uses a non-reentrant model
 12257 ;;
 12258                           
 12259                           
 12260                           ;psect for function _WriteI2C
 12261  0BED                     _WriteI2C:
 12262                           
 12263                           ;incstack = 0
 12264                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 12265                           ;WriteI2C@data_out stored from wreg
 12266  0BED  0021               	movlb	1	; select bank1
 12267  0BEE  00A1               	movwf	WriteI2C@data_out^(0+128)
 12268  0BEF                     l3928:
 12269                           
 12270                           ;i2c.c: 49: SSP1BUF = data_out;
 12271  0BEF  0821               	movf	WriteI2C@data_out^(0+128),w
 12272  0BF0  0023               	movlb	3	; select bank3
 12273  0BF1  008C               	movwf	12	;volatile
 12274  0BF2                     l3930:
 12275                           
 12276                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 12277  0BF2  1F90               	btfss	16,7	;volatile
 12278  0BF3  2BF5               	goto	u2931
 12279  0BF4  2BF6               	goto	u2930
 12280  0BF5                     u2931:
 12281  0BF5  2BF7               	goto	l3936
 12282  0BF6                     u2930:
 12283  0BF6  2C46               	goto	l30
 12284  0BF7                     l3936:
 12285                           
 12286                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 12287  0BF7  300F               	movlw	15
 12288  0BF8  0510               	andwf	16,w	;volatile
 12289  0BF9  0021               	movlb	1	; select bank1
 12290  0BFA  00A0               	movwf	??_WriteI2C^(0+128)
 12291  0BFB  3008               	movlw	8
 12292  0BFC  0620               	xorwf	??_WriteI2C^(0+128),w
 12293  0BFD  1903               	btfsc	3,2
 12294  0BFE  2C00               	goto	u2941
 12295  0BFF  2C01               	goto	u2940
 12296  0C00                     u2941:
 12297  0C00  2C1A               	goto	l3948
 12298  0C01                     u2940:
 12299  0C01                     l3938:
 12300  0C01  300F               	movlw	15
 12301  0C02  0023               	movlb	3	; select bank3
 12302  0C03  0510               	andwf	16,w	;volatile
 12303  0C04  0021               	movlb	1	; select bank1
 12304  0C05  00A0               	movwf	??_WriteI2C^(0+128)
 12305  0C06  300B               	movlw	11
 12306  0C07  0620               	xorwf	??_WriteI2C^(0+128),w
 12307  0C08  1903               	btfsc	3,2
 12308  0C09  2C0B               	goto	u2951
 12309  0C0A  2C0C               	goto	u2950
 12310  0C0B                     u2951:
 12311  0C0B  2C1A               	goto	l3948
 12312  0C0C                     u2950:
 12313  0C0C                     l3940:
 12314                           
 12315                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 12316  0C0C  0023               	movlb	3	; select bank3
 12317  0C0D  1610               	bsf	16,4	;volatile
 12318  0C0E                     l33:	
 12319                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 12320                           
 12321  0C0E  002E               	movlb	14	; select bank14
 12322  0C0F  1C0F               	btfss	15,0	;volatile
 12323  0C10  2C12               	goto	u2961
 12324  0C11  2C13               	goto	u2960
 12325  0C12                     u2961:
 12326  0C12  2C0E               	goto	l33
 12327  0C13                     u2960:
 12328  0C13                     l35:
 12329                           
 12330                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 12331  0C13  0023               	movlb	3	; select bank3
 12332  0C14  190F               	btfsc	15,2	;volatile
 12333  0C15  2C17               	goto	u2971
 12334  0C16  2C18               	goto	u2970
 12335  0C17                     u2971:
 12336  0C17  2C46               	goto	l30
 12337  0C18                     u2970:
 12338  0C18                     l3942:
 12339  0C18  080F               	movf	15,w	;volatile
 12340  0C19  2C46               	goto	l30
 12341  0C1A                     l3948:
 12342                           
 12343                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 12344  0C1A  300F               	movlw	15
 12345  0C1B  0023               	movlb	3	; select bank3
 12346  0C1C  0510               	andwf	16,w	;volatile
 12347  0C1D  0021               	movlb	1	; select bank1
 12348  0C1E  00A0               	movwf	??_WriteI2C^(0+128)
 12349  0C1F  3008               	movlw	8
 12350  0C20  0620               	xorwf	??_WriteI2C^(0+128),w
 12351  0C21  1903               	btfsc	3,2
 12352  0C22  2C24               	goto	u2981
 12353  0C23  2C25               	goto	u2980
 12354  0C24                     u2981:
 12355  0C24  2C30               	goto	l42
 12356  0C25                     u2980:
 12357  0C25                     l3950:
 12358  0C25  300F               	movlw	15
 12359  0C26  0023               	movlb	3	; select bank3
 12360  0C27  0510               	andwf	16,w	;volatile
 12361  0C28  0021               	movlb	1	; select bank1
 12362  0C29  00A0               	movwf	??_WriteI2C^(0+128)
 12363  0C2A  300B               	movlw	11
 12364  0C2B  0620               	xorwf	??_WriteI2C^(0+128),w
 12365  0C2C  1D03               	btfss	3,2
 12366  0C2D  2C2F               	goto	u2991
 12367  0C2E  2C30               	goto	u2990
 12368  0C2F                     u2991:
 12369  0C2F  2C46               	goto	l30
 12370  0C30                     u2990:
 12371  0C30                     l42:
 12372  0C30  0023               	movlb	3	; select bank3
 12373  0C31  180F               	btfsc	15,0	;volatile
 12374  0C32  2C34               	goto	u3001
 12375  0C33  2C35               	goto	u3000
 12376  0C34                     u3001:
 12377  0C34  2C30               	goto	l42
 12378  0C35                     u3000:
 12379  0C35                     l3952:
 12380  0C35  0023               	movlb	3	; select bank3
 12381  0C36  0C0F               	rrf	15,w	;volatile
 12382  0C37  0C89               	rrf	9,f
 12383  0C38  3901               	andlw	1
 12384  0C39  0021               	movlb	1	; select bank1
 12385  0C3A  00A0               	movwf	??_WriteI2C^(0+128)
 12386  0C3B  0023               	movlb	3	; select bank3
 12387  0C3C  0811               	movf	17,w	;volatile
 12388  0C3D  391F               	andlw	31
 12389  0C3E  0021               	movlb	1	; select bank1
 12390  0C3F  0420               	iorwf	??_WriteI2C^(0+128),w
 12391  0C40  1D03               	btfss	3,2
 12392  0C41  2C43               	goto	u3011
 12393  0C42  2C44               	goto	u3010
 12394  0C43                     u3011:
 12395  0C43  2C35               	goto	l3952
 12396  0C44                     u3010:
 12397  0C44                     l47:
 12398                           
 12399                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 12400  0C44  0023               	movlb	3	; select bank3
 12401  0C45  0811               	movf	17,w	;volatile
 12402  0C46                     l30:
 12403  0C46  0008               	return
 12404  0C47                     __end_of_WriteI2C:
 12405                           
 12406                           	psect	text27
 12407  07D8                     __ptext27:	
 12408 ;; *************** function _DATAEE_WriteByte *****************
 12409 ;; Defined at:
 12410 ;;		line 180 in file "mcc_generated_files/memory.c"
 12411 ;; Parameters:    Size  Location     Type
 12412 ;;  bAdd            2    0[BANK1 ] unsigned int 
 12413 ;;  bData           1    2[BANK1 ] unsigned char 
 12414 ;; Auto vars:     Size  Location     Type
 12415 ;;  GIEBitValue     1    3[BANK1 ] unsigned char 
 12416 ;; Return value:  Size  Location     Type
 12417 ;;                  1    wreg      void 
 12418 ;; Registers used:
 12419 ;;		wreg, status,2, status,0
 12420 ;; Tracked objects:
 12421 ;;		On entry : 0/0
 12422 ;;		On exit  : 0/0
 12423 ;;		Unchanged: 0/0
 12424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12425 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12426 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12428 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12429 ;;Total ram usage:        4 bytes
 12430 ;; Hardware stack levels used:    1
 12431 ;; Hardware stack levels required when called:    7
 12432 ;; This function calls:
 12433 ;;		Nothing
 12434 ;; This function is called by:
 12435 ;;		_main
 12436 ;; This function uses a non-reentrant model
 12437 ;;
 12438                           
 12439                           
 12440                           ;psect for function _DATAEE_WriteByte
 12441  07D8                     _DATAEE_WriteByte:
 12442  07D8                     l4800:	
 12443                           ;incstack = 0
 12444                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 12445                           
 12446                           
 12447                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 12448  07D8  3000               	movlw	0
 12449  07D9  1B8B               	btfsc	11,7	;volatile
 12450  07DA  3001               	movlw	1
 12451  07DB  0021               	movlb	1	; select bank1
 12452  07DC  00A3               	movwf	DATAEE_WriteByte@GIEBitValue^(0+128)
 12453                           
 12454                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 12455  07DD  0821               	movf	(DATAEE_WriteByte@bAdd+1)^(0+128),w
 12456  07DE  0030               	movlb	16	; select bank16
 12457  07DF  009B               	movwf	27	;volatile
 12458  07E0                     l4802:
 12459                           
 12460                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 12461  07E0  0021               	movlb	1	; select bank1
 12462  07E1  0820               	movf	DATAEE_WriteByte@bAdd^(0+128),w
 12463  07E2  0030               	movlb	16	; select bank16
 12464  07E3  009A               	movwf	26	;volatile
 12465  07E4                     l4804:
 12466                           
 12467                           ;memory.c: 186: NVMDATL = bData;
 12468  07E4  0021               	movlb	1	; select bank1
 12469  07E5  0822               	movf	DATAEE_WriteByte@bData^(0+128),w
 12470  07E6  0030               	movlb	16	; select bank16
 12471  07E7  009C               	movwf	28	;volatile
 12472  07E8                     l4806:
 12473                           
 12474                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 12475  07E8  171E               	bsf	30,6	;volsfr
 12476  07E9                     l4808:
 12477                           
 12478                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 12479  07E9  151E               	bsf	30,2	;volsfr
 12480  07EA                     l4810:
 12481                           
 12482                           ;memory.c: 189: INTCONbits.GIE = 0;
 12483  07EA  138B               	bcf	11,7	;volatile
 12484  07EB                     l4812:
 12485                           
 12486                           ;memory.c: 190: NVMCON2 = 0x55;
 12487  07EB  3055               	movlw	85
 12488  07EC  009F               	movwf	31	;volsfr
 12489  07ED                     l4814:
 12490                           
 12491                           ;memory.c: 191: NVMCON2 = 0xAA;
 12492  07ED  30AA               	movlw	170
 12493  07EE  009F               	movwf	31	;volsfr
 12494  07EF                     l4816:
 12495                           
 12496                           ;memory.c: 192: NVMCON1bits.WR = 1;
 12497  07EF  149E               	bsf	30,1	;volsfr
 12498  07F0                     l1338:	
 12499                           ;memory.c: 195: {
 12500                           
 12501  07F0  189E               	btfsc	30,1	;volsfr
 12502  07F1  2FF3               	goto	u4471
 12503  07F2  2FF4               	goto	u4470
 12504  07F3                     u4471:
 12505  07F3  2FF0               	goto	l1338
 12506  07F4                     u4470:
 12507  07F4                     l1340:
 12508                           
 12509                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 12510  07F4  111E               	bcf	30,2	;volsfr
 12511  07F5                     l4818:
 12512                           
 12513                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 12514  07F5  0021               	movlb	1	; select bank1
 12515  07F6  0C23               	rrf	DATAEE_WriteByte@GIEBitValue^(0+128),w
 12516  07F7  1C03               	skipc
 12517  07F8  138B               	bcf	11,7	;volatile
 12518  07F9  1803               	skipnc
 12519  07FA  178B               	bsf	11,7	;volatile
 12520  07FB                     l1341:
 12521  07FB  0008               	return
 12522  07FC                     __end_of_DATAEE_WriteByte:
 12523                           
 12524                           	psect	text28
 12525  17F1                     __ptext28:	
 12526 ;; *************** function _DATAEE_ReadByte *****************
 12527 ;; Defined at:
 12528 ;;		line 202 in file "mcc_generated_files/memory.c"
 12529 ;; Parameters:    Size  Location     Type
 12530 ;;  bAdd            2    0[BANK1 ] unsigned int 
 12531 ;; Auto vars:     Size  Location     Type
 12532 ;;		None
 12533 ;; Return value:  Size  Location     Type
 12534 ;;                  1    wreg      unsigned char 
 12535 ;; Registers used:
 12536 ;;		wreg, status,2
 12537 ;; Tracked objects:
 12538 ;;		On entry : 0/0
 12539 ;;		On exit  : 0/0
 12540 ;;		Unchanged: 0/0
 12541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12542 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12545 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12546 ;;Total ram usage:        2 bytes
 12547 ;; Hardware stack levels used:    1
 12548 ;; Hardware stack levels required when called:    7
 12549 ;; This function calls:
 12550 ;;		Nothing
 12551 ;; This function is called by:
 12552 ;;		_main
 12553 ;; This function uses a non-reentrant model
 12554 ;;
 12555                           
 12556                           
 12557                           ;psect for function _DATAEE_ReadByte
 12558  17F1                     _DATAEE_ReadByte:
 12559  17F1                     l4900:	
 12560                           ;incstack = 0
 12561                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 12562                           
 12563                           
 12564                           ;memory.c: 204: NVMADRH = ((bAdd >> 8) & 0xFF);
 12565  17F1  0021               	movlb	1	; select bank1
 12566  17F2  0821               	movf	(DATAEE_ReadByte@bAdd+1)^(0+128),w
 12567  17F3  0030               	movlb	16	; select bank16
 12568  17F4  009B               	movwf	27	;volatile
 12569  17F5                     l4902:
 12570                           
 12571                           ;memory.c: 205: NVMADRL = (bAdd & 0xFF);
 12572  17F5  0021               	movlb	1	; select bank1
 12573  17F6  0820               	movf	DATAEE_ReadByte@bAdd^(0+128),w
 12574  17F7  0030               	movlb	16	; select bank16
 12575  17F8  009A               	movwf	26	;volatile
 12576  17F9                     l4904:
 12577                           
 12578                           ;memory.c: 206: NVMCON1bits.NVMREGS = 1;
 12579  17F9  171E               	bsf	30,6	;volsfr
 12580  17FA                     l4906:
 12581                           
 12582                           ;memory.c: 207: NVMCON1bits.RD = 1;
 12583  17FA  141E               	bsf	30,0	;volsfr
 12584  17FB                     l4908:
 12585                           
 12586                           ;memory.c: 208: __nop();
 12587  17FB  0000               	nop
 12588  17FC                     l4910:
 12589                           
 12590                           ;memory.c: 209: __nop();
 12591  17FC  0000               	nop
 12592  17FD                     l4912:
 12593                           
 12594                           ;memory.c: 211: return (NVMDATL);
 12595  17FD  0030               	movlb	16	; select bank16
 12596  17FE  081C               	movf	28,w	;volatile
 12597  17FF                     l1344:
 12598  17FF  0008               	return
 12599  1800                     __end_of_DATAEE_ReadByte:
 12600                           
 12601                           	psect	intentry
 12602  0004                     __pintentry:	
 12603 ;; *************** function _INTERRUPT_InterruptManager *****************
 12604 ;; Defined at:
 12605 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12606 ;; Parameters:    Size  Location     Type
 12607 ;;		None
 12608 ;; Auto vars:     Size  Location     Type
 12609 ;;		None
 12610 ;; Return value:  Size  Location     Type
 12611 ;;                  1    wreg      void 
 12612 ;; Registers used:
 12613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12614 ;; Tracked objects:
 12615 ;;		On entry : 0/0
 12616 ;;		On exit  : 0/0
 12617 ;;		Unchanged: 0/0
 12618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12623 ;;Total ram usage:        0 bytes
 12624 ;; Hardware stack levels used:    1
 12625 ;; Hardware stack levels required when called:    6
 12626 ;; This function calls:
 12627 ;;		_TMR1_ISR
 12628 ;;		_TMR3_ISR
 12629 ;;		_TMR5_ISR
 12630 ;; This function is called by:
 12631 ;;		Interrupt level 1
 12632 ;; This function uses a non-reentrant model
 12633 ;;
 12634                           
 12635  0004                     _INTERRUPT_InterruptManager:
 12636                           
 12637                           ;incstack = 0
 12638  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 12639                           
 12640                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12641  0005  3180               	pagesel	$
 12642  0006                     i1l4920:
 12643                           
 12644                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
 12645  0006  1F0B               	btfss	11,6	;volatile
 12646  0007  2809               	goto	u470_21
 12647  0008  280A               	goto	u470_20
 12648  0009                     u470_21:
 12649  0009  283E               	goto	i1l356
 12650  000A                     u470_20:
 12651  000A                     i1l4922:
 12652                           
 12653                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE4bits.TMR5IE == 1 && PIR4bits
      +                          .TMR5IF == 1)
 12654  000A  002E               	movlb	14	; select bank14
 12655  000B  1E1A               	btfss	26,4	;volatile
 12656  000C  280E               	goto	u471_21
 12657  000D  280F               	goto	u471_20
 12658  000E                     u471_21:
 12659  000E  2817               	goto	i1l345
 12660  000F                     u471_20:
 12661  000F                     i1l4924:
 12662  000F  1E10               	btfss	16,4	;volatile
 12663  0010  2812               	goto	u472_21
 12664  0011  2813               	goto	u472_20
 12665  0012                     u472_21:
 12666  0012  2817               	goto	i1l345
 12667  0013                     u472_20:
 12668  0013                     i1l4926:
 12669                           
 12670                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: TMR5_ISR();
 12671  0013  3188  20AF  3180   	fcall	_TMR5_ISR
 12672                           
 12673                           ;interrupt_manager.c: 60: }
 12674  0016  283E               	goto	i1l356
 12675  0017                     i1l345:
 12676                           
 12677                           ;interrupt_manager.c: 61: else if(PIE4bits.TMR3IE == 1 && PIR4bits.TMR3IF == 1)
 12678  0017  1D1A               	btfss	26,2	;volatile
 12679  0018  281A               	goto	u473_21
 12680  0019  281B               	goto	u473_20
 12681  001A                     u473_21:
 12682  001A  2823               	goto	i1l347
 12683  001B                     u473_20:
 12684  001B                     i1l4928:
 12685  001B  1D10               	btfss	16,2	;volatile
 12686  001C  281E               	goto	u474_21
 12687  001D  281F               	goto	u474_20
 12688  001E                     u474_21:
 12689  001E  2823               	goto	i1l347
 12690  001F                     u474_20:
 12691  001F                     i1l4930:
 12692                           
 12693                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR3_ISR();
 12694  001F  3188  2098  3180   	fcall	_TMR3_ISR
 12695                           
 12696                           ;interrupt_manager.c: 64: }
 12697  0022  283E               	goto	i1l356
 12698  0023                     i1l347:
 12699                           
 12700                           ;interrupt_manager.c: 65: else if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 12701  0023  1C1A               	btfss	26,0	;volatile
 12702  0024  2826               	goto	u475_21
 12703  0025  2827               	goto	u475_20
 12704  0026                     u475_21:
 12705  0026  282F               	goto	i1l349
 12706  0027                     u475_20:
 12707  0027                     i1l4932:
 12708  0027  1C10               	btfss	16,0	;volatile
 12709  0028  282A               	goto	u476_21
 12710  0029  282B               	goto	u476_20
 12711  002A                     u476_21:
 12712  002A  282F               	goto	i1l349
 12713  002B                     u476_20:
 12714  002B                     i1l4934:
 12715                           
 12716                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: TMR1_ISR();
 12717  002B  3188  2081  3180   	fcall	_TMR1_ISR
 12718                           
 12719                           ;interrupt_manager.c: 68: }
 12720  002E  283E               	goto	i1l356
 12721  002F                     i1l349:
 12722                           
 12723                           ;interrupt_manager.c: 69: else if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 12724  002F  1C99               	btfss	25,1	;volatile
 12725  0030  2832               	goto	u477_21
 12726  0031  2833               	goto	u477_20
 12727  0032                     u477_21:
 12728  0032  2838               	goto	i1l351
 12729  0033                     u477_20:
 12730  0033                     i1l4936:
 12731                           
 12732                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: i2c1_driver_busCollisionISR();
 12733  0033  1C8F               	btfss	15,1	;volatile
 12734  0034  2836               	goto	u478_21
 12735  0035  2837               	goto	u478_20
 12736  0036                     u478_21:
 12737  0036  2838               	goto	i1l351
 12738  0037                     u478_20:
 12739  0037  283E               	goto	i1l356
 12740  0038                     i1l351:
 12741                           
 12742                           ;interrupt_manager.c: 73: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 12743  0038  1C19               	btfss	25,0	;volatile
 12744  0039  283B               	goto	u479_21
 12745  003A  283C               	goto	u479_20
 12746  003B                     u479_21:
 12747  003B  283E               	goto	i1l350
 12748  003C                     u479_20:
 12749  003C                     i1l4940:
 12750                           
 12751                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: i2c1_driver_i2cISR();
 12752  003C  080F               	movf	15,w	;volatile
 12753  003D  283E               	goto	i1l356
 12754  003E                     i1l350:
 12755  003E                     i1l356:
 12756  003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 12757  003F  0009               	retfie
 12758  0040                     __end_of_INTERRUPT_InterruptManager:
 12759                           
 12760                           	psect	text30
 12761  08AF                     __ptext30:	
 12762 ;; *************** function _TMR5_ISR *****************
 12763 ;; Defined at:
 12764 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 12765 ;; Parameters:    Size  Location     Type
 12766 ;;		None
 12767 ;; Auto vars:     Size  Location     Type
 12768 ;;		None
 12769 ;; Return value:  Size  Location     Type
 12770 ;;                  1    wreg      void 
 12771 ;; Registers used:
 12772 ;;		wreg, status,2, status,0, pclath, cstack
 12773 ;; Tracked objects:
 12774 ;;		On entry : 0/0
 12775 ;;		On exit  : 0/0
 12776 ;;		Unchanged: 0/0
 12777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12782 ;;Total ram usage:        0 bytes
 12783 ;; Hardware stack levels used:    1
 12784 ;; Hardware stack levels required when called:    3
 12785 ;; This function calls:
 12786 ;;		Absolute function
 12787 ;;		_TMR5_DefaultInterruptHandler
 12788 ;;		_TMR5_WriteTimer
 12789 ;;		_monitoring_ISR
 12790 ;; This function is called by:
 12791 ;;		_INTERRUPT_InterruptManager
 12792 ;; This function uses a non-reentrant model
 12793 ;;
 12794                           
 12795                           
 12796                           ;psect for function _TMR5_ISR
 12797  08AF                     _TMR5_ISR:
 12798  08AF                     i1l4670:	
 12799                           ;incstack = 0
 12800                           ; Regs used in _TMR5_ISR: [wreg+status,2+status,0+pclath+cstack]
 12801                           
 12802                           
 12803                           ;tmr5.c: 169: PIR4bits.TMR5IF = 0;
 12804  08AF  002E               	movlb	14	; select bank14
 12805  08B0  1210               	bcf	16,4	;volatile
 12806  08B1                     i1l4672:
 12807                           
 12808                           ;tmr5.c: 170: TMR5_WriteTimer(timer5ReloadVal);
 12809  08B1  0021               	movlb	1	; select bank1
 12810  08B2  0834               	movf	(_timer5ReloadVal+1)^(0+128),w	;volatile
 12811  08B3  00F1               	movwf	TMR5_WriteTimer@timerVal+1
 12812  08B4  0833               	movf	_timer5ReloadVal^(0+128),w	;volatile
 12813  08B5  00F0               	movwf	TMR5_WriteTimer@timerVal
 12814  08B6  3188  2022  3188   	fcall	_TMR5_WriteTimer
 12815  08B9                     i1l4674:
 12816                           
 12817                           ;tmr5.c: 172: if(TMR5_InterruptHandler)
 12818  08B9  0021               	movlb	1	; select bank1
 12819  08BA  0831               	movf	_TMR5_InterruptHandler^(0+128),w
 12820  08BB  0432               	iorwf	(_TMR5_InterruptHandler+1)^(0+128),w
 12821  08BC  1903               	btfsc	3,2
 12822  08BD  28BF               	goto	u416_21
 12823  08BE  28C0               	goto	u416_20
 12824  08BF                     u416_21:
 12825  08BF  28C5               	goto	i1l702
 12826  08C0                     u416_20:
 12827  08C0                     i1l4676:
 12828                           
 12829                           ;tmr5.c: 173: {;tmr5.c: 174: TMR5_InterruptHandler();
 12830  08C0  0832               	movf	(_TMR5_InterruptHandler+1)^(0+128),w
 12831  08C1  008A               	movwf	10
 12832  08C2  0831               	movf	_TMR5_InterruptHandler^(0+128),w
 12833  08C3  000A               	callw
 12834  08C4  3188               	pagesel	$
 12835  08C5                     i1l702:
 12836  08C5  0008               	return
 12837  08C6                     __end_of_TMR5_ISR:
 12838                           
 12839                           	psect	text31
 12840  0003                     __ptext31:	
 12841 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 12842 ;; Defined at:
 12843 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 12844 ;; Parameters:    Size  Location     Type
 12845 ;;		None
 12846 ;; Auto vars:     Size  Location     Type
 12847 ;;		None
 12848 ;; Return value:  Size  Location     Type
 12849 ;;                  1    wreg      void 
 12850 ;; Registers used:
 12851 ;;		None
 12852 ;; Tracked objects:
 12853 ;;		On entry : 0/0
 12854 ;;		On exit  : 0/0
 12855 ;;		Unchanged: 0/0
 12856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12861 ;;Total ram usage:        0 bytes
 12862 ;; Hardware stack levels used:    1
 12863 ;; This function calls:
 12864 ;;		Nothing
 12865 ;; This function is called by:
 12866 ;;		_TMR5_Initialize
 12867 ;;		_TMR5_ISR
 12868 ;; This function uses a non-reentrant model
 12869 ;;
 12870                           
 12871                           
 12872                           ;psect for function _TMR5_DefaultInterruptHandler
 12873  0003                     _TMR5_DefaultInterruptHandler:
 12874  0003                     i1l708:	
 12875                           ;incstack = 0
 12876                           ; Regs used in _TMR5_DefaultInterruptHandler: []
 12877                           
 12878  0003  0008               	return
 12879  0004                     __end_of_TMR5_DefaultInterruptHandler:
 12880                           
 12881                           	psect	text32
 12882  05E4                     __ptext32:	
 12883 ;; *************** function _monitoring_ISR *****************
 12884 ;; Defined at:
 12885 ;;		line 445 in file "main.c"
 12886 ;; Parameters:    Size  Location     Type
 12887 ;;		None
 12888 ;; Auto vars:     Size  Location     Type
 12889 ;;		None
 12890 ;; Return value:  Size  Location     Type
 12891 ;;                  1    wreg      void 
 12892 ;; Registers used:
 12893 ;;		wreg, status,2, status,0, pclath, cstack
 12894 ;; Tracked objects:
 12895 ;;		On entry : 0/0
 12896 ;;		On exit  : 0/0
 12897 ;;		Unchanged: 0/0
 12898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12901 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12902 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12903 ;;Total ram usage:        3 bytes
 12904 ;; Hardware stack levels used:    1
 12905 ;; Hardware stack levels required when called:    2
 12906 ;; This function calls:
 12907 ;;		_ADCC_GetSingleConversion
 12908 ;;		___wmul
 12909 ;;		_tsttc
 12910 ;;		i1_DATAEE_WriteByte
 12911 ;; This function is called by:
 12912 ;;		_main
 12913 ;;		_TMR5_ISR
 12914 ;; This function uses a non-reentrant model
 12915 ;;
 12916                           
 12917                           
 12918                           ;psect for function _monitoring_ISR
 12919  05E4                     _monitoring_ISR:
 12920  05E4                     i1l4584:	
 12921                           ;incstack = 0
 12922                           ; Regs used in _monitoring_ISR: [wreg+status,2+status,0+pclath+cstack]
 12923                           
 12924                           
 12925                           ;main.c: 446: temp = (uint8_t)tsttc();
 12926  05E4  318E  26F3  3185   	fcall	_tsttc
 12927  05E7  00FA               	movwf	??_monitoring_ISR
 12928  05E8  087A               	movf	??_monitoring_ISR,w
 12929  05E9  0020               	movlb	0	; select bank0
 12930  05EA  00E3               	movwf	_temp
 12931                           
 12932                           ;main.c: 448: lumLevel = ADCC_GetSingleConversion(channel_ANA0) >> 13;
 12933  05EB  3000               	movlw	0
 12934  05EC  3188  2045  3185   	fcall	_ADCC_GetSingleConversion
 12935  05EF  0870               	movf	?_ADCC_GetSingleConversion,w
 12936  05F0  00FA               	movwf	??_monitoring_ISR
 12937  05F1  0871               	movf	?_ADCC_GetSingleConversion+1,w
 12938  05F2  00FB               	movwf	??_monitoring_ISR+1
 12939  05F3  300D               	movlw	13
 12940  05F4                     u404_25:
 12941  05F4  36FB               	lsrf	??_monitoring_ISR+1,f
 12942  05F5  0CFA               	rrf	??_monitoring_ISR,f
 12943  05F6  0B89               	decfsz	9,f
 12944  05F7  2DF4               	goto	u404_25
 12945  05F8  087A               	movf	??_monitoring_ISR,w
 12946  05F9  00FC               	movwf	??_monitoring_ISR+2
 12947  05FA  087C               	movf	??_monitoring_ISR+2,w
 12948  05FB  0020               	movlb	0	; select bank0
 12949  05FC  00E2               	movwf	_lumLevel
 12950  05FD                     i1l4586:
 12951                           
 12952                           ;main.c: 450: if(prevTemp != temp || prevLumLevel != lumLevel){
 12953  05FD  0863               	movf	_temp,w
 12954  05FE  00FA               	movwf	??_monitoring_ISR
 12955  05FF  01FB               	clrf	??_monitoring_ISR+1
 12956  0600  086D               	movf	_prevTemp+1,w
 12957  0601  067B               	xorwf	??_monitoring_ISR+1,w
 12958  0602  1D03               	skipz
 12959  0603  2E06               	goto	u405_25
 12960  0604  086C               	movf	_prevTemp,w
 12961  0605  067A               	xorwf	??_monitoring_ISR,w
 12962  0606                     u405_25:
 12963  0606  1D03               	skipz
 12964  0607  2E09               	goto	u405_21
 12965  0608  2E0A               	goto	u405_20
 12966  0609                     u405_21:
 12967  0609  2E17               	goto	i1l4590
 12968  060A                     u405_20:
 12969  060A                     i1l4588:
 12970  060A  0862               	movf	_lumLevel,w
 12971  060B  00FA               	movwf	??_monitoring_ISR
 12972  060C  01FB               	clrf	??_monitoring_ISR+1
 12973  060D  086B               	movf	_prevLumLevel+1,w
 12974  060E  067B               	xorwf	??_monitoring_ISR+1,w
 12975  060F  1D03               	skipz
 12976  0610  2E13               	goto	u406_25
 12977  0611  086A               	movf	_prevLumLevel,w
 12978  0612  067A               	xorwf	??_monitoring_ISR,w
 12979  0613                     u406_25:
 12980  0613  1903               	skipnz
 12981  0614  2E16               	goto	u406_21
 12982  0615  2E17               	goto	u406_20
 12983  0616                     u406_21:
 12984  0616  2EC5               	goto	i1l4602
 12985  0617                     u406_20:
 12986  0617                     i1l4590:
 12987                           
 12988                           ;main.c: 452: DATAEE_WriteByte( (IDX * 0x28) + 0x7140 + (8*0) , t.h);
 12989  0617  0021               	movlb	1	; select bank1
 12990  0618  0842               	movf	_IDX^(0+128),w
 12991  0619  00FA               	movwf	??_monitoring_ISR
 12992  061A  01FB               	clrf	??_monitoring_ISR+1
 12993  061B  087A               	movf	??_monitoring_ISR,w
 12994  061C  00F0               	movwf	___wmul@multiplier
 12995  061D  087B               	movf	??_monitoring_ISR+1,w
 12996  061E  00F1               	movwf	___wmul@multiplier+1
 12997  061F  3028               	movlw	40
 12998  0620  00F2               	movwf	___wmul@multiplicand
 12999  0621  3000               	movlw	0
 13000  0622  00F3               	movwf	___wmul@multiplicand+1
 13001  0623  3189  214A  3185   	fcall	___wmul
 13002  0626  0870               	movf	?___wmul,w
 13003  0627  3E40               	addlw	64
 13004  0628  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13005  0629  3071               	movlw	113
 13006  062A  3D71               	addwfc	?___wmul+1,w
 13007  062B  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13008  062C  0020               	movlb	0	; select bank0
 13009  062D  0857               	movf	_t,w
 13010  062E  00FC               	movwf	??_monitoring_ISR+2
 13011  062F  087C               	movf	??_monitoring_ISR+2,w
 13012  0630  00F8               	movwf	i1DATAEE_WriteByte@bData
 13013  0631  3189  212C  3185   	fcall	i1_DATAEE_WriteByte
 13014                           
 13015                           ;main.c: 453: DATAEE_WriteByte( (IDX * 0x28) + 0x7140 + (8*1) , t.m);
 13016  0634  0021               	movlb	1	; select bank1
 13017  0635  0842               	movf	_IDX^(0+128),w
 13018  0636  00FA               	movwf	??_monitoring_ISR
 13019  0637  01FB               	clrf	??_monitoring_ISR+1
 13020  0638  087A               	movf	??_monitoring_ISR,w
 13021  0639  00F0               	movwf	___wmul@multiplier
 13022  063A  087B               	movf	??_monitoring_ISR+1,w
 13023  063B  00F1               	movwf	___wmul@multiplier+1
 13024  063C  3028               	movlw	40
 13025  063D  00F2               	movwf	___wmul@multiplicand
 13026  063E  3000               	movlw	0
 13027  063F  00F3               	movwf	___wmul@multiplicand+1
 13028  0640  3189  214A  3185   	fcall	___wmul
 13029  0643  0870               	movf	?___wmul,w
 13030  0644  3E48               	addlw	72
 13031  0645  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13032  0646  3071               	movlw	113
 13033  0647  3D71               	addwfc	?___wmul+1,w
 13034  0648  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13035  0649  0020               	movlb	0	; select bank0
 13036  064A  0858               	movf	_t+1,w
 13037  064B  00FC               	movwf	??_monitoring_ISR+2
 13038  064C  087C               	movf	??_monitoring_ISR+2,w
 13039  064D  00F8               	movwf	i1DATAEE_WriteByte@bData
 13040  064E  3189  212C  3185   	fcall	i1_DATAEE_WriteByte
 13041                           
 13042                           ;main.c: 454: DATAEE_WriteByte( (IDX * 0x28) + 0x7140 + (8*2) , t.s);
 13043  0651  0021               	movlb	1	; select bank1
 13044  0652  0842               	movf	_IDX^(0+128),w
 13045  0653  00FA               	movwf	??_monitoring_ISR
 13046  0654  01FB               	clrf	??_monitoring_ISR+1
 13047  0655  087A               	movf	??_monitoring_ISR,w
 13048  0656  00F0               	movwf	___wmul@multiplier
 13049  0657  087B               	movf	??_monitoring_ISR+1,w
 13050  0658  00F1               	movwf	___wmul@multiplier+1
 13051  0659  3028               	movlw	40
 13052  065A  00F2               	movwf	___wmul@multiplicand
 13053  065B  3000               	movlw	0
 13054  065C  00F3               	movwf	___wmul@multiplicand+1
 13055  065D  3189  214A  3185   	fcall	___wmul
 13056  0660  0870               	movf	?___wmul,w
 13057  0661  3E50               	addlw	80
 13058  0662  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13059  0663  3071               	movlw	113
 13060  0664  3D71               	addwfc	?___wmul+1,w
 13061  0665  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13062  0666  0020               	movlb	0	; select bank0
 13063  0667  0859               	movf	_t+2,w
 13064  0668  00FC               	movwf	??_monitoring_ISR+2
 13065  0669  087C               	movf	??_monitoring_ISR+2,w
 13066  066A  00F8               	movwf	i1DATAEE_WriteByte@bData
 13067  066B  3189  212C  3185   	fcall	i1_DATAEE_WriteByte
 13068                           
 13069                           ;main.c: 455: DATAEE_WriteByte( (IDX * 0x28) + 0x7140 + (8*3) , temp);
 13070  066E  0021               	movlb	1	; select bank1
 13071  066F  0842               	movf	_IDX^(0+128),w
 13072  0670  00FA               	movwf	??_monitoring_ISR
 13073  0671  01FB               	clrf	??_monitoring_ISR+1
 13074  0672  087A               	movf	??_monitoring_ISR,w
 13075  0673  00F0               	movwf	___wmul@multiplier
 13076  0674  087B               	movf	??_monitoring_ISR+1,w
 13077  0675  00F1               	movwf	___wmul@multiplier+1
 13078  0676  3028               	movlw	40
 13079  0677  00F2               	movwf	___wmul@multiplicand
 13080  0678  3000               	movlw	0
 13081  0679  00F3               	movwf	___wmul@multiplicand+1
 13082  067A  3189  214A  3185   	fcall	___wmul
 13083  067D  0870               	movf	?___wmul,w
 13084  067E  3E58               	addlw	88
 13085  067F  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13086  0680  3071               	movlw	113
 13087  0681  3D71               	addwfc	?___wmul+1,w
 13088  0682  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13089  0683  0020               	movlb	0	; select bank0
 13090  0684  0863               	movf	_temp,w
 13091  0685  00FC               	movwf	??_monitoring_ISR+2
 13092  0686  087C               	movf	??_monitoring_ISR+2,w
 13093  0687  00F8               	movwf	i1DATAEE_WriteByte@bData
 13094  0688  3189  212C  3185   	fcall	i1_DATAEE_WriteByte
 13095                           
 13096                           ;main.c: 456: DATAEE_WriteByte( (IDX * 0x28) + 0x7140 + (8*4) , lumLevel);
 13097  068B  0021               	movlb	1	; select bank1
 13098  068C  0842               	movf	_IDX^(0+128),w
 13099  068D  00FA               	movwf	??_monitoring_ISR
 13100  068E  01FB               	clrf	??_monitoring_ISR+1
 13101  068F  087A               	movf	??_monitoring_ISR,w
 13102  0690  00F0               	movwf	___wmul@multiplier
 13103  0691  087B               	movf	??_monitoring_ISR+1,w
 13104  0692  00F1               	movwf	___wmul@multiplier+1
 13105  0693  3028               	movlw	40
 13106  0694  00F2               	movwf	___wmul@multiplicand
 13107  0695  3000               	movlw	0
 13108  0696  00F3               	movwf	___wmul@multiplicand+1
 13109  0697  3189  214A  3185   	fcall	___wmul
 13110  069A  0870               	movf	?___wmul,w
 13111  069B  3E60               	addlw	96
 13112  069C  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13113  069D  3071               	movlw	113
 13114  069E  3D71               	addwfc	?___wmul+1,w
 13115  069F  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13116  06A0  0020               	movlb	0	; select bank0
 13117  06A1  0862               	movf	_lumLevel,w
 13118  06A2  00FC               	movwf	??_monitoring_ISR+2
 13119  06A3  087C               	movf	??_monitoring_ISR+2,w
 13120  06A4  00F8               	movwf	i1DATAEE_WriteByte@bData
 13121  06A5  3189  212C  3185   	fcall	i1_DATAEE_WriteByte
 13122  06A8                     i1l4592:
 13123                           
 13124                           ;main.c: 458: IDX++;
 13125  06A8  3001               	movlw	1
 13126  06A9  00FA               	movwf	??_monitoring_ISR
 13127  06AA  087A               	movf	??_monitoring_ISR,w
 13128  06AB  0021               	movlb	1	; select bank1
 13129  06AC  07C2               	addwf	_IDX^(0+128),f
 13130  06AD                     i1l4594:
 13131                           
 13132                           ;main.c: 459: if(IDX > NREG){
 13133  06AD  0842               	movf	_IDX^(0+128),w
 13134  06AE  0020               	movlb	0	; select bank0
 13135  06AF  0266               	subwf	_NREG,w
 13136  06B0  1803               	skipnc
 13137  06B1  2EB3               	goto	u407_21
 13138  06B2  2EB4               	goto	u407_20
 13139  06B3                     u407_21:
 13140  06B3  2EB6               	goto	i1l4598
 13141  06B4                     u407_20:
 13142  06B4                     i1l4596:
 13143                           
 13144                           ;main.c: 460: IDX = 0;
 13145  06B4  0021               	movlb	1	; select bank1
 13146  06B5  01C2               	clrf	_IDX^(0+128)
 13147  06B6                     i1l4598:
 13148                           
 13149                           ;main.c: 461: };main.c: 462: prevTemp = temp;
 13150  06B6  0020               	movlb	0	; select bank0
 13151  06B7  0863               	movf	_temp,w
 13152  06B8  00FA               	movwf	??_monitoring_ISR
 13153  06B9  01FB               	clrf	??_monitoring_ISR+1
 13154  06BA  087A               	movf	??_monitoring_ISR,w
 13155  06BB  00EC               	movwf	_prevTemp
 13156  06BC  087B               	movf	??_monitoring_ISR+1,w
 13157  06BD  00ED               	movwf	_prevTemp+1
 13158  06BE                     i1l4600:
 13159                           
 13160                           ;main.c: 463: prevLumLevel = lumLevel;
 13161  06BE  0862               	movf	_lumLevel,w
 13162  06BF  00FA               	movwf	??_monitoring_ISR
 13163  06C0  01FB               	clrf	??_monitoring_ISR+1
 13164  06C1  087A               	movf	??_monitoring_ISR,w
 13165  06C2  00EA               	movwf	_prevLumLevel
 13166  06C3  087B               	movf	??_monitoring_ISR+1,w
 13167  06C4  00EB               	movwf	_prevLumLevel+1
 13168  06C5                     i1l4602:
 13169                           
 13170                           ;main.c: 464: };main.c: 467: if(ALAF == 'A'){
 13171  06C5  3041               	movlw	65
 13172  06C6  0664               	xorwf	_ALAF,w
 13173  06C7  1D03               	btfss	3,2
 13174  06C8  2ECA               	goto	u408_21
 13175  06C9  2ECB               	goto	u408_20
 13176  06CA                     u408_21:
 13177  06CA  2F03               	goto	i1l1207
 13178  06CB                     u408_20:
 13179  06CB                     i1l4604:
 13180                           
 13181                           ;main.c: 469: if((lumAlarm.alarmLum > lumLevel) && (editingLumAlarm == 0)){
 13182  06CB  0851               	movf	_lumAlarm,w
 13183  06CC  0262               	subwf	_lumLevel,w
 13184  06CD  1803               	skipnc
 13185  06CE  2ED0               	goto	u409_21
 13186  06CF  2ED1               	goto	u409_20
 13187  06D0                     u409_21:
 13188  06D0  2EE5               	goto	i1l4618
 13189  06D1                     u409_20:
 13190  06D1                     i1l4606:
 13191  06D1  0860               	movf	_editingLumAlarm,w
 13192  06D2  1D03               	btfss	3,2
 13193  06D3  2ED5               	goto	u410_21
 13194  06D4  2ED6               	goto	u410_20
 13195  06D5                     u410_21:
 13196  06D5  2EE5               	goto	i1l4618
 13197  06D6                     u410_20:
 13198  06D6                     i1l4608:
 13199                           
 13200                           ;main.c: 470: if(!lumAlarm.triggered){
 13201  06D6  0853               	movf	_lumAlarm+2,w
 13202  06D7  1D03               	btfss	3,2
 13203  06D8  2EDA               	goto	u411_21
 13204  06D9  2EDB               	goto	u411_20
 13205  06DA                     u411_21:
 13206  06DA  2EDF               	goto	i1l4612
 13207  06DB                     u411_20:
 13208  06DB                     i1l4610:
 13209                           
 13210                           ;main.c: 471: alarmPWMStart.h = 0xff;
 13211  06DB  30FF               	movlw	255
 13212  06DC  00FA               	movwf	??_monitoring_ISR
 13213  06DD  087A               	movf	??_monitoring_ISR,w
 13214  06DE  00E7               	movwf	_alarmPWMStart
 13215  06DF                     i1l4612:
 13216                           
 13217                           ;main.c: 472: };main.c: 473: lumAlarm.triggered = 1;
 13218  06DF  01D3               	clrf	_lumAlarm+2
 13219  06E0  0AD3               	incf	_lumAlarm+2,f
 13220  06E1                     i1l4614:
 13221                           
 13222                           ;main.c: 475: lumAlarm.trigger = 1;
 13223  06E1  01D2               	clrf	_lumAlarm+1
 13224  06E2  0AD2               	incf	_lumAlarm+1,f
 13225  06E3                     i1l4616:
 13226  06E3  1616               	bsf	22,4	;volatile
 13227  06E4  2EE7               	goto	i1l4622
 13228  06E5                     i1l4618:
 13229                           
 13230                           ;main.c: 478: lumAlarm.triggered = 0;
 13231  06E5  01D3               	clrf	_lumAlarm+2
 13232  06E6                     i1l4620:
 13233  06E6  1216               	bcf	22,4	;volatile
 13234  06E7                     i1l4622:
 13235                           
 13236                           ;main.c: 480: };main.c: 483: if((tempAlarm.alarmTemp < temp) && (editingTempAlarm == 0))
      +                          {
 13237  06E7  0863               	movf	_temp,w
 13238  06E8  0254               	subwf	_tempAlarm,w
 13239  06E9  1803               	skipnc
 13240  06EA  2EEC               	goto	u412_21
 13241  06EB  2EED               	goto	u412_20
 13242  06EC                     u412_21:
 13243  06EC  2F01               	goto	i1l4636
 13244  06ED                     u412_20:
 13245  06ED                     i1l4624:
 13246  06ED  0861               	movf	_editingTempAlarm,w
 13247  06EE  1D03               	btfss	3,2
 13248  06EF  2EF1               	goto	u413_21
 13249  06F0  2EF2               	goto	u413_20
 13250  06F1                     u413_21:
 13251  06F1  2F01               	goto	i1l4636
 13252  06F2                     u413_20:
 13253  06F2                     i1l4626:
 13254                           
 13255                           ;main.c: 484: if(!tempAlarm.triggered){
 13256  06F2  0856               	movf	_tempAlarm+2,w
 13257  06F3  1D03               	btfss	3,2
 13258  06F4  2EF6               	goto	u414_21
 13259  06F5  2EF7               	goto	u414_20
 13260  06F6                     u414_21:
 13261  06F6  2EFB               	goto	i1l4630
 13262  06F7                     u414_20:
 13263  06F7                     i1l4628:
 13264                           
 13265                           ;main.c: 485: alarmPWMStart.h = 0xff;
 13266  06F7  30FF               	movlw	255
 13267  06F8  00FA               	movwf	??_monitoring_ISR
 13268  06F9  087A               	movf	??_monitoring_ISR,w
 13269  06FA  00E7               	movwf	_alarmPWMStart
 13270  06FB                     i1l4630:
 13271                           
 13272                           ;main.c: 486: };main.c: 488: tempAlarm.triggered = 1;
 13273  06FB  01D6               	clrf	_tempAlarm+2
 13274  06FC  0AD6               	incf	_tempAlarm+2,f
 13275  06FD                     i1l4632:
 13276                           
 13277                           ;main.c: 490: tempAlarm.trigger = 1;
 13278  06FD  01D5               	clrf	_tempAlarm+1
 13279  06FE  0AD5               	incf	_tempAlarm+1,f
 13280  06FF                     i1l4634:
 13281  06FF  1696               	bsf	22,5	;volatile
 13282  0700  2F03               	goto	i1l1207
 13283  0701                     i1l4636:
 13284                           
 13285                           ;main.c: 494: tempAlarm.triggered = 0;
 13286  0701  01D6               	clrf	_tempAlarm+2
 13287  0702                     i1l4638:
 13288  0702  1296               	bcf	22,5	;volatile
 13289  0703                     i1l1207:
 13290  0703  0008               	return
 13291  0704                     __end_of_monitoring_ISR:
 13292                           
 13293                           	psect	text33
 13294  0EF3                     __ptext33:	
 13295 ;; *************** function _tsttc *****************
 13296 ;; Defined at:
 13297 ;;		line 76 in file "main.c"
 13298 ;; Parameters:    Size  Location     Type
 13299 ;;		None
 13300 ;; Auto vars:     Size  Location     Type
 13301 ;;  value           1    3[COMMON] unsigned char 
 13302 ;; Return value:  Size  Location     Type
 13303 ;;                  1    wreg      unsigned char 
 13304 ;; Registers used:
 13305 ;;		wreg, status,2, status,0, pclath, cstack
 13306 ;; Tracked objects:
 13307 ;;		On entry : 0/0
 13308 ;;		On exit  : 0/0
 13309 ;;		Unchanged: 0/0
 13310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13312 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13313 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13314 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13315 ;;Total ram usage:        2 bytes
 13316 ;; Hardware stack levels used:    1
 13317 ;; Hardware stack levels required when called:    1
 13318 ;; This function calls:
 13319 ;;		_ReadI2C
 13320 ;;		i1_WriteI2C
 13321 ;; This function is called by:
 13322 ;;		_monitoring_ISR
 13323 ;; This function uses a non-reentrant model
 13324 ;;
 13325                           
 13326                           
 13327                           ;psect for function _tsttc
 13328  0EF3                     _tsttc:
 13329  0EF3                     i1l858:	
 13330                           ;incstack = 0
 13331                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 13332                           ;main.c: 78: unsigned char value;;main.c: 79: do{
 13333                           
 13334  0EF3                     i1l3980:	
 13335                           ;main.c: 80: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13336                           
 13337  0EF3  0023               	movlb	3	; select bank3
 13338  0EF4  0C0F               	rrf	15,w	;volatile
 13339  0EF5  0C89               	rrf	9,f
 13340  0EF6  3901               	andlw	1
 13341  0EF7  00F2               	movwf	??_tsttc
 13342  0EF8  0811               	movf	17,w	;volatile
 13343  0EF9  391F               	andlw	31
 13344  0EFA  0472               	iorwf	??_tsttc,w
 13345  0EFB  1D03               	btfss	3,2
 13346  0EFC  2EFE               	goto	u303_21
 13347  0EFD  2EFF               	goto	u303_20
 13348  0EFE                     u303_21:
 13349  0EFE  2EF3               	goto	i1l3980
 13350  0EFF                     u303_20:
 13351  0EFF                     i1l861:
 13352                           
 13353                           ;main.c: 81: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 13354  0EFF  1411               	bsf	17,0	;volatile
 13355  0F00                     i1l862:
 13356  0F00  1811               	btfsc	17,0	;volatile
 13357  0F01  2F03               	goto	u304_21
 13358  0F02  2F04               	goto	u304_20
 13359  0F03                     u304_21:
 13360  0F03  2F00               	goto	i1l862
 13361  0F04                     u304_20:
 13362  0F04                     i1l3982:
 13363  0F04  0C0F               	rrf	15,w	;volatile
 13364  0F05  0C89               	rrf	9,f
 13365  0F06  3901               	andlw	1
 13366  0F07  00F2               	movwf	??_tsttc
 13367  0F08  0811               	movf	17,w	;volatile
 13368  0F09  391F               	andlw	31
 13369  0F0A  0472               	iorwf	??_tsttc,w
 13370  0F0B  1D03               	btfss	3,2
 13371  0F0C  2F0E               	goto	u305_21
 13372  0F0D  2F0F               	goto	u305_20
 13373  0F0E                     u305_21:
 13374  0F0E  2F04               	goto	i1l3982
 13375  0F0F                     u305_20:
 13376  0F0F                     i1l3984:
 13377                           
 13378                           ;main.c: 83: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13379  0F0F  309A               	movlw	154
 13380  0F10  318B  234F  318E   	fcall	i1_WriteI2C
 13381  0F13                     i1l3986:
 13382  0F13  0023               	movlb	3	; select bank3
 13383  0F14  0C0F               	rrf	15,w	;volatile
 13384  0F15  0C89               	rrf	9,f
 13385  0F16  3901               	andlw	1
 13386  0F17  00F2               	movwf	??_tsttc
 13387  0F18  0811               	movf	17,w	;volatile
 13388  0F19  391F               	andlw	31
 13389  0F1A  0472               	iorwf	??_tsttc,w
 13390  0F1B  1D03               	btfss	3,2
 13391  0F1C  2F1E               	goto	u306_21
 13392  0F1D  2F1F               	goto	u306_20
 13393  0F1E                     u306_21:
 13394  0F1E  2F13               	goto	i1l3986
 13395  0F1F                     u306_20:
 13396  0F1F                     i1l3988:
 13397                           
 13398                           ;main.c: 84: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13399  0F1F  3001               	movlw	1
 13400  0F20  318B  234F  318E   	fcall	i1_WriteI2C
 13401  0F23                     i1l3990:
 13402  0F23  0023               	movlb	3	; select bank3
 13403  0F24  0C0F               	rrf	15,w	;volatile
 13404  0F25  0C89               	rrf	9,f
 13405  0F26  3901               	andlw	1
 13406  0F27  00F2               	movwf	??_tsttc
 13407  0F28  0811               	movf	17,w	;volatile
 13408  0F29  391F               	andlw	31
 13409  0F2A  0472               	iorwf	??_tsttc,w
 13410  0F2B  1D03               	btfss	3,2
 13411  0F2C  2F2E               	goto	u307_21
 13412  0F2D  2F2F               	goto	u307_20
 13413  0F2E                     u307_21:
 13414  0F2E  2F23               	goto	i1l3990
 13415  0F2F                     u307_20:
 13416  0F2F                     i1l873:
 13417                           
 13418                           ;main.c: 85: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 13419  0F2F  1491               	bsf	17,1	;volatile
 13420  0F30                     i1l874:
 13421  0F30  1891               	btfsc	17,1	;volatile
 13422  0F31  2F33               	goto	u308_21
 13423  0F32  2F34               	goto	u308_20
 13424  0F33                     u308_21:
 13425  0F33  2F30               	goto	i1l874
 13426  0F34                     u308_20:
 13427  0F34                     i1l3992:
 13428  0F34  0C0F               	rrf	15,w	;volatile
 13429  0F35  0C89               	rrf	9,f
 13430  0F36  3901               	andlw	1
 13431  0F37  00F2               	movwf	??_tsttc
 13432  0F38  0811               	movf	17,w	;volatile
 13433  0F39  391F               	andlw	31
 13434  0F3A  0472               	iorwf	??_tsttc,w
 13435  0F3B  1D03               	btfss	3,2
 13436  0F3C  2F3E               	goto	u309_21
 13437  0F3D  2F3F               	goto	u309_20
 13438  0F3E                     u309_21:
 13439  0F3E  2F34               	goto	i1l3992
 13440  0F3F                     u309_20:
 13441  0F3F                     i1l3994:
 13442                           
 13443                           ;main.c: 86: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13444  0F3F  309B               	movlw	155
 13445  0F40  318B  234F  318E   	fcall	i1_WriteI2C
 13446  0F43                     i1l3996:
 13447  0F43  0023               	movlb	3	; select bank3
 13448  0F44  0C0F               	rrf	15,w	;volatile
 13449  0F45  0C89               	rrf	9,f
 13450  0F46  3901               	andlw	1
 13451  0F47  00F2               	movwf	??_tsttc
 13452  0F48  0811               	movf	17,w	;volatile
 13453  0F49  391F               	andlw	31
 13454  0F4A  0472               	iorwf	??_tsttc,w
 13455  0F4B  1D03               	btfss	3,2
 13456  0F4C  2F4E               	goto	u310_21
 13457  0F4D  2F4F               	goto	u310_20
 13458  0F4E                     u310_21:
 13459  0F4E  2F43               	goto	i1l3996
 13460  0F4F                     u310_20:
 13461  0F4F                     i1l3998:
 13462                           
 13463                           ;main.c: 87: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13464  0F4F  3188  20F6  318E   	fcall	_ReadI2C
 13465  0F52  00F2               	movwf	??_tsttc
 13466  0F53  0872               	movf	??_tsttc,w
 13467  0F54  00F3               	movwf	tsttc@value
 13468  0F55                     i1l4000:
 13469  0F55  0023               	movlb	3	; select bank3
 13470  0F56  0C0F               	rrf	15,w	;volatile
 13471  0F57  0C89               	rrf	9,f
 13472  0F58  3901               	andlw	1
 13473  0F59  00F2               	movwf	??_tsttc
 13474  0F5A  0811               	movf	17,w	;volatile
 13475  0F5B  391F               	andlw	31
 13476  0F5C  0472               	iorwf	??_tsttc,w
 13477  0F5D  1D03               	btfss	3,2
 13478  0F5E  2F60               	goto	u311_21
 13479  0F5F  2F61               	goto	u311_20
 13480  0F60                     u311_21:
 13481  0F60  2F55               	goto	i1l4000
 13482  0F61                     u311_20:
 13483  0F61                     i1l885:
 13484                           
 13485                           ;main.c: 88: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13486  0F61  1691               	bsf	17,5	;volatile
 13487  0F62  1611               	bsf	17,4	;volatile
 13488  0F63                     i1l886:
 13489  0F63  1A11               	btfsc	17,4	;volatile
 13490  0F64  2F66               	goto	u312_21
 13491  0F65  2F67               	goto	u312_20
 13492  0F66                     u312_21:
 13493  0F66  2F63               	goto	i1l886
 13494  0F67                     u312_20:
 13495  0F67                     i1l4002:
 13496  0F67  0C0F               	rrf	15,w	;volatile
 13497  0F68  0C89               	rrf	9,f
 13498  0F69  3901               	andlw	1
 13499  0F6A  00F2               	movwf	??_tsttc
 13500  0F6B  0811               	movf	17,w	;volatile
 13501  0F6C  391F               	andlw	31
 13502  0F6D  0472               	iorwf	??_tsttc,w
 13503  0F6E  1D03               	btfss	3,2
 13504  0F6F  2F71               	goto	u313_21
 13505  0F70  2F72               	goto	u313_20
 13506  0F71                     u313_21:
 13507  0F71  2F67               	goto	i1l4002
 13508  0F72                     u313_20:
 13509  0F72                     i1l891:
 13510                           
 13511                           ;main.c: 89: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 13512  0F72  1511               	bsf	17,2	;volatile
 13513  0F73                     i1l892:
 13514  0F73  1911               	btfsc	17,2	;volatile
 13515  0F74  2F76               	goto	u314_21
 13516  0F75  2F77               	goto	u314_20
 13517  0F76                     u314_21:
 13518  0F76  2F73               	goto	i1l892
 13519  0F77                     u314_20:
 13520  0F77                     i1l894:
 13521                           
 13522                           ;main.c: 90: } while (!(value & 0x40));
 13523  0F77  1F73               	btfss	tsttc@value,6
 13524  0F78  2F7A               	goto	u315_21
 13525  0F79  2F7B               	goto	u315_20
 13526  0F7A                     u315_21:
 13527  0F7A  2EF3               	goto	i1l858
 13528  0F7B                     u315_20:
 13529  0F7B                     i1l4004:
 13530  0F7B  0C0F               	rrf	15,w	;volatile
 13531  0F7C  0C89               	rrf	9,f
 13532  0F7D  3901               	andlw	1
 13533  0F7E  00F2               	movwf	??_tsttc
 13534  0F7F  0811               	movf	17,w	;volatile
 13535  0F80  391F               	andlw	31
 13536  0F81  0472               	iorwf	??_tsttc,w
 13537  0F82  1D03               	btfss	3,2
 13538  0F83  2F85               	goto	u316_21
 13539  0F84  2F86               	goto	u316_20
 13540  0F85                     u316_21:
 13541  0F85  2F7B               	goto	i1l4004
 13542  0F86                     u316_20:
 13543  0F86                     i1l898:
 13544                           
 13545                           ;main.c: 93: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 13546  0F86  1411               	bsf	17,0	;volatile
 13547  0F87                     i1l899:
 13548  0F87  1811               	btfsc	17,0	;volatile
 13549  0F88  2F8A               	goto	u317_21
 13550  0F89  2F8B               	goto	u317_20
 13551  0F8A                     u317_21:
 13552  0F8A  2F87               	goto	i1l899
 13553  0F8B                     u317_20:
 13554  0F8B                     i1l4006:
 13555  0F8B  0C0F               	rrf	15,w	;volatile
 13556  0F8C  0C89               	rrf	9,f
 13557  0F8D  3901               	andlw	1
 13558  0F8E  00F2               	movwf	??_tsttc
 13559  0F8F  0811               	movf	17,w	;volatile
 13560  0F90  391F               	andlw	31
 13561  0F91  0472               	iorwf	??_tsttc,w
 13562  0F92  1D03               	btfss	3,2
 13563  0F93  2F95               	goto	u318_21
 13564  0F94  2F96               	goto	u318_20
 13565  0F95                     u318_21:
 13566  0F95  2F8B               	goto	i1l4006
 13567  0F96                     u318_20:
 13568  0F96                     i1l4008:
 13569                           
 13570                           ;main.c: 94: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13571  0F96  309A               	movlw	154
 13572  0F97  318B  234F  318E   	fcall	i1_WriteI2C
 13573  0F9A                     i1l4010:
 13574  0F9A  0023               	movlb	3	; select bank3
 13575  0F9B  0C0F               	rrf	15,w	;volatile
 13576  0F9C  0C89               	rrf	9,f
 13577  0F9D  3901               	andlw	1
 13578  0F9E  00F2               	movwf	??_tsttc
 13579  0F9F  0811               	movf	17,w	;volatile
 13580  0FA0  391F               	andlw	31
 13581  0FA1  0472               	iorwf	??_tsttc,w
 13582  0FA2  1D03               	btfss	3,2
 13583  0FA3  2FA5               	goto	u319_21
 13584  0FA4  2FA6               	goto	u319_20
 13585  0FA5                     u319_21:
 13586  0FA5  2F9A               	goto	i1l4010
 13587  0FA6                     u319_20:
 13588  0FA6                     i1l4012:
 13589                           
 13590                           ;main.c: 95: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13591  0FA6  3000               	movlw	0
 13592  0FA7  318B  234F  318E   	fcall	i1_WriteI2C
 13593  0FAA                     i1l4014:
 13594  0FAA  0023               	movlb	3	; select bank3
 13595  0FAB  0C0F               	rrf	15,w	;volatile
 13596  0FAC  0C89               	rrf	9,f
 13597  0FAD  3901               	andlw	1
 13598  0FAE  00F2               	movwf	??_tsttc
 13599  0FAF  0811               	movf	17,w	;volatile
 13600  0FB0  391F               	andlw	31
 13601  0FB1  0472               	iorwf	??_tsttc,w
 13602  0FB2  1D03               	btfss	3,2
 13603  0FB3  2FB5               	goto	u320_21
 13604  0FB4  2FB6               	goto	u320_20
 13605  0FB5                     u320_21:
 13606  0FB5  2FAA               	goto	i1l4014
 13607  0FB6                     u320_20:
 13608  0FB6                     i1l910:
 13609                           
 13610                           ;main.c: 96: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 13611  0FB6  1491               	bsf	17,1	;volatile
 13612  0FB7                     i1l911:
 13613  0FB7  1891               	btfsc	17,1	;volatile
 13614  0FB8  2FBA               	goto	u321_21
 13615  0FB9  2FBB               	goto	u321_20
 13616  0FBA                     u321_21:
 13617  0FBA  2FB7               	goto	i1l911
 13618  0FBB                     u321_20:
 13619  0FBB                     i1l4016:
 13620  0FBB  0C0F               	rrf	15,w	;volatile
 13621  0FBC  0C89               	rrf	9,f
 13622  0FBD  3901               	andlw	1
 13623  0FBE  00F2               	movwf	??_tsttc
 13624  0FBF  0811               	movf	17,w	;volatile
 13625  0FC0  391F               	andlw	31
 13626  0FC1  0472               	iorwf	??_tsttc,w
 13627  0FC2  1D03               	btfss	3,2
 13628  0FC3  2FC5               	goto	u322_21
 13629  0FC4  2FC6               	goto	u322_20
 13630  0FC5                     u322_21:
 13631  0FC5  2FBB               	goto	i1l4016
 13632  0FC6                     u322_20:
 13633  0FC6                     i1l4018:
 13634                           
 13635                           ;main.c: 97: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13636  0FC6  309B               	movlw	155
 13637  0FC7  318B  234F  318E   	fcall	i1_WriteI2C
 13638  0FCA                     i1l4020:
 13639  0FCA  0023               	movlb	3	; select bank3
 13640  0FCB  0C0F               	rrf	15,w	;volatile
 13641  0FCC  0C89               	rrf	9,f
 13642  0FCD  3901               	andlw	1
 13643  0FCE  00F2               	movwf	??_tsttc
 13644  0FCF  0811               	movf	17,w	;volatile
 13645  0FD0  391F               	andlw	31
 13646  0FD1  0472               	iorwf	??_tsttc,w
 13647  0FD2  1D03               	btfss	3,2
 13648  0FD3  2FD5               	goto	u323_21
 13649  0FD4  2FD6               	goto	u323_20
 13650  0FD5                     u323_21:
 13651  0FD5  2FCA               	goto	i1l4020
 13652  0FD6                     u323_20:
 13653  0FD6                     i1l4022:
 13654                           
 13655                           ;main.c: 98: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13656  0FD6  3188  20F6  318E   	fcall	_ReadI2C
 13657  0FD9  00F2               	movwf	??_tsttc
 13658  0FDA  0872               	movf	??_tsttc,w
 13659  0FDB  00F3               	movwf	tsttc@value
 13660  0FDC                     i1l4024:
 13661  0FDC  0023               	movlb	3	; select bank3
 13662  0FDD  0C0F               	rrf	15,w	;volatile
 13663  0FDE  0C89               	rrf	9,f
 13664  0FDF  3901               	andlw	1
 13665  0FE0  00F2               	movwf	??_tsttc
 13666  0FE1  0811               	movf	17,w	;volatile
 13667  0FE2  391F               	andlw	31
 13668  0FE3  0472               	iorwf	??_tsttc,w
 13669  0FE4  1D03               	btfss	3,2
 13670  0FE5  2FE7               	goto	u324_21
 13671  0FE6  2FE8               	goto	u324_20
 13672  0FE7                     u324_21:
 13673  0FE7  2FDC               	goto	i1l4024
 13674  0FE8                     u324_20:
 13675  0FE8                     i1l922:
 13676                           
 13677                           ;main.c: 99: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13678  0FE8  1691               	bsf	17,5	;volatile
 13679  0FE9  1611               	bsf	17,4	;volatile
 13680  0FEA                     i1l923:
 13681  0FEA  1A11               	btfsc	17,4	;volatile
 13682  0FEB  2FED               	goto	u325_21
 13683  0FEC  2FEE               	goto	u325_20
 13684  0FED                     u325_21:
 13685  0FED  2FEA               	goto	i1l923
 13686  0FEE                     u325_20:
 13687  0FEE                     i1l4026:
 13688  0FEE  0C0F               	rrf	15,w	;volatile
 13689  0FEF  0C89               	rrf	9,f
 13690  0FF0  3901               	andlw	1
 13691  0FF1  00F2               	movwf	??_tsttc
 13692  0FF2  0811               	movf	17,w	;volatile
 13693  0FF3  391F               	andlw	31
 13694  0FF4  0472               	iorwf	??_tsttc,w
 13695  0FF5  1D03               	btfss	3,2
 13696  0FF6  2FF8               	goto	u326_21
 13697  0FF7  2FF9               	goto	u326_20
 13698  0FF8                     u326_21:
 13699  0FF8  2FEE               	goto	i1l4026
 13700  0FF9                     u326_20:
 13701  0FF9                     i1l928:
 13702                           
 13703                           ;main.c: 100: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 13704  0FF9  1511               	bsf	17,2	;volatile
 13705  0FFA                     i1l929:
 13706  0FFA  1911               	btfsc	17,2	;volatile
 13707  0FFB  2FFD               	goto	u327_21
 13708  0FFC  2FFE               	goto	u327_20
 13709  0FFD                     u327_21:
 13710  0FFD  2FFA               	goto	i1l929
 13711  0FFE                     u327_20:
 13712  0FFE                     i1l4028:
 13713                           
 13714                           ;main.c: 102: return value;
 13715  0FFE  0873               	movf	tsttc@value,w
 13716  0FFF                     i1l932:
 13717  0FFF  0008               	return
 13718  1000                     __end_of_tsttc:
 13719                           
 13720                           	psect	text34
 13721  08F6                     __ptext34:	
 13722 ;; *************** function _ReadI2C *****************
 13723 ;; Defined at:
 13724 ;;		line 32 in file "I2C/i2c.c"
 13725 ;; Parameters:    Size  Location     Type
 13726 ;;		None
 13727 ;; Auto vars:     Size  Location     Type
 13728 ;;		None
 13729 ;; Return value:  Size  Location     Type
 13730 ;;                  1    wreg      unsigned char 
 13731 ;; Registers used:
 13732 ;;		wreg, status,2, status,0
 13733 ;; Tracked objects:
 13734 ;;		On entry : 0/0
 13735 ;;		On exit  : 0/0
 13736 ;;		Unchanged: 0/0
 13737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13740 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13741 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13742 ;;Total ram usage:        1 bytes
 13743 ;; Hardware stack levels used:    1
 13744 ;; This function calls:
 13745 ;;		Nothing
 13746 ;; This function is called by:
 13747 ;;		_tsttc
 13748 ;;		_LCDrecv
 13749 ;; This function uses a non-reentrant model
 13750 ;;
 13751                           
 13752                           
 13753                           ;psect for function _ReadI2C
 13754  08F6                     _ReadI2C:
 13755  08F6                     i1l3840:	
 13756                           ;incstack = 0
 13757                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 13758                           
 13759                           
 13760                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 13761  08F6  300F               	movlw	15
 13762  08F7  0023               	movlb	3	; select bank3
 13763  08F8  0510               	andwf	16,w	;volatile
 13764  08F9  00F0               	movwf	??_ReadI2C
 13765  08FA  3008               	movlw	8
 13766  08FB  0670               	xorwf	??_ReadI2C,w
 13767  08FC  1903               	btfsc	3,2
 13768  08FD  28FF               	goto	u271_21
 13769  08FE  2900               	goto	u271_20
 13770  08FF                     u271_21:
 13771  08FF  2909               	goto	i1l22
 13772  0900                     u271_20:
 13773  0900                     i1l3842:
 13774  0900  300F               	movlw	15
 13775  0901  0510               	andwf	16,w	;volatile
 13776  0902  00F0               	movwf	??_ReadI2C
 13777  0903  300B               	movlw	11
 13778  0904  0670               	xorwf	??_ReadI2C,w
 13779  0905  1D03               	btfss	3,2
 13780  0906  2908               	goto	u272_21
 13781  0907  2909               	goto	u272_20
 13782  0908                     u272_21:
 13783  0908  290A               	goto	i1l23
 13784  0909                     u272_20:
 13785  0909                     i1l22:
 13786                           
 13787                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
 13788  0909  1591               	bsf	17,3	;volatile
 13789  090A                     i1l23:
 13790  090A  1C0F               	btfss	15,0	;volatile
 13791  090B  290D               	goto	u273_21
 13792  090C  290E               	goto	u273_20
 13793  090D                     u273_21:
 13794  090D  290A               	goto	i1l23
 13795  090E                     u273_20:
 13796  090E                     i1l3844:
 13797                           
 13798                           ;i2c.c: 37: return ( SSP1BUF );
 13799  090E  080C               	movf	12,w	;volatile
 13800  090F                     i1l26:
 13801  090F  0008               	return
 13802  0910                     __end_of_ReadI2C:
 13803                           
 13804                           	psect	text35
 13805  0845                     __ptext35:	
 13806 ;; *************** function _ADCC_GetSingleConversion *****************
 13807 ;; Defined at:
 13808 ;;		line 130 in file "mcc_generated_files/adcc.c"
 13809 ;; Parameters:    Size  Location     Type
 13810 ;;  channel         1    wreg     enum E12086
 13811 ;; Auto vars:     Size  Location     Type
 13812 ;;  channel         1    3[COMMON] enum E12086
 13813 ;; Return value:  Size  Location     Type
 13814 ;;                  2    0[COMMON] unsigned int 
 13815 ;; Registers used:
 13816 ;;		wreg
 13817 ;; Tracked objects:
 13818 ;;		On entry : 0/0
 13819 ;;		On exit  : 0/0
 13820 ;;		Unchanged: 0/0
 13821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13822 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13825 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13826 ;;Total ram usage:        4 bytes
 13827 ;; Hardware stack levels used:    1
 13828 ;; This function calls:
 13829 ;;		Nothing
 13830 ;; This function is called by:
 13831 ;;		_monitoring_ISR
 13832 ;; This function uses a non-reentrant model
 13833 ;;
 13834                           
 13835                           
 13836                           ;psect for function _ADCC_GetSingleConversion
 13837  0845                     _ADCC_GetSingleConversion:
 13838                           
 13839                           ;incstack = 0
 13840                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 13841                           ;ADCC_GetSingleConversion@channel stored from wreg
 13842  0845  00F3               	movwf	ADCC_GetSingleConversion@channel
 13843  0846                     i1l3962:
 13844                           
 13845                           ;adcc.c: 133: ADPCH = channel;
 13846  0846  0873               	movf	ADCC_GetSingleConversion@channel,w
 13847  0847  0021               	movlb	1	; select bank1
 13848  0848  009E               	movwf	30	;volatile
 13849  0849                     i1l3964:
 13850                           
 13851                           ;adcc.c: 136: ADCON0bits.ADON = 1;
 13852  0849  1793               	bsf	19,7	;volatile
 13853  084A                     i1l3966:
 13854                           
 13855                           ;adcc.c: 139: ADCON0bits.ADCONT = 0;
 13856  084A  1313               	bcf	19,6	;volatile
 13857  084B                     i1l3968:
 13858                           
 13859                           ;adcc.c: 142: ADCON0bits.ADGO = 1;
 13860  084B  1413               	bsf	19,0	;volatile
 13861  084C                     i1l3970:
 13862                           
 13863                           ;adcc.c: 145: __nop();
 13864  084C  0000               	nop
 13865  084D                     i1l575:	
 13866                           ;adcc.c: 149: {
 13867                           
 13868  084D  0021               	movlb	1	; select bank1
 13869  084E  1813               	btfsc	19,0	;volatile
 13870  084F  2851               	goto	u302_21
 13871  0850  2852               	goto	u302_20
 13872  0851                     u302_21:
 13873  0851  284D               	goto	i1l575
 13874  0852                     u302_20:
 13875  0852                     i1l3972:
 13876                           
 13877                           ;adcc.c: 150: };adcc.c: 154: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 13878  0852  080D               	movf	13,w	;volatile
 13879  0853  00F1               	movwf	?_ADCC_GetSingleConversion+1
 13880  0854  080C               	movf	12,w	;volatile
 13881  0855  00F0               	movwf	?_ADCC_GetSingleConversion
 13882  0856                     i1l578:
 13883  0856  0008               	return
 13884  0857                     __end_of_ADCC_GetSingleConversion:
 13885                           
 13886                           	psect	text36
 13887  0822                     __ptext36:	
 13888 ;; *************** function _TMR5_WriteTimer *****************
 13889 ;; Defined at:
 13890 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 13891 ;; Parameters:    Size  Location     Type
 13892 ;;  timerVal        2    0[COMMON] unsigned int 
 13893 ;; Auto vars:     Size  Location     Type
 13894 ;;		None
 13895 ;; Return value:  Size  Location     Type
 13896 ;;                  1    wreg      void 
 13897 ;; Registers used:
 13898 ;;		wreg, status,2
 13899 ;; Tracked objects:
 13900 ;;		On entry : 0/0
 13901 ;;		On exit  : 0/0
 13902 ;;		Unchanged: 0/0
 13903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13904 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13907 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13908 ;;Total ram usage:        2 bytes
 13909 ;; Hardware stack levels used:    1
 13910 ;; This function calls:
 13911 ;;		Nothing
 13912 ;; This function is called by:
 13913 ;;		_TMR5_ISR
 13914 ;;		_TMR5_Reload
 13915 ;; This function uses a non-reentrant model
 13916 ;;
 13917                           
 13918                           
 13919                           ;psect for function _TMR5_WriteTimer
 13920  0822                     _TMR5_WriteTimer:
 13921  0822                     i1l4348:	
 13922                           ;incstack = 0
 13923                           ; Regs used in _TMR5_WriteTimer: [wreg+status,2]
 13924                           
 13925                           
 13926                           ;tmr5.c: 130: if (T5CONbits.nT5SYNC == 1)
 13927  0822  0024               	movlb	4	; select bank4
 13928  0823  1D1A               	btfss	26,2	;volatile
 13929  0824  2826               	goto	u353_21
 13930  0825  2827               	goto	u353_20
 13931  0826                     u353_21:
 13932  0826  282E               	goto	i1l4358
 13933  0827                     u353_20:
 13934  0827                     i1l4350:
 13935                           
 13936                           ;tmr5.c: 131: {;tmr5.c: 133: T5CONbits.TMR5ON = 0;
 13937  0827  101A               	bcf	26,0	;volatile
 13938  0828                     i1l4352:
 13939                           
 13940                           ;tmr5.c: 136: TMR5H = (timerVal >> 8);
 13941  0828  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 13942  0829  0099               	movwf	25	;volatile
 13943  082A                     i1l4354:
 13944                           
 13945                           ;tmr5.c: 137: TMR5L = timerVal;
 13946  082A  0870               	movf	TMR5_WriteTimer@timerVal,w
 13947  082B  0098               	movwf	24	;volatile
 13948  082C                     i1l4356:
 13949                           
 13950                           ;tmr5.c: 140: T5CONbits.TMR5ON =1;
 13951  082C  141A               	bsf	26,0	;volatile
 13952                           
 13953                           ;tmr5.c: 141: }
 13954  082D  2832               	goto	i1l689
 13955  082E                     i1l4358:
 13956                           
 13957                           ;tmr5.c: 142: else;tmr5.c: 143: {;tmr5.c: 145: TMR5H = (timerVal >> 8);
 13958  082E  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 13959  082F  0099               	movwf	25	;volatile
 13960  0830                     i1l4360:
 13961                           
 13962                           ;tmr5.c: 146: TMR5L = timerVal;
 13963  0830  0870               	movf	TMR5_WriteTimer@timerVal,w
 13964  0831  0098               	movwf	24	;volatile
 13965  0832                     i1l689:
 13966  0832  0008               	return
 13967  0833                     __end_of_TMR5_WriteTimer:
 13968                           
 13969                           	psect	text37
 13970  0898                     __ptext37:	
 13971 ;; *************** function _TMR3_ISR *****************
 13972 ;; Defined at:
 13973 ;;		line 164 in file "mcc_generated_files/tmr3.c"
 13974 ;; Parameters:    Size  Location     Type
 13975 ;;		None
 13976 ;; Auto vars:     Size  Location     Type
 13977 ;;		None
 13978 ;; Return value:  Size  Location     Type
 13979 ;;                  1    wreg      void 
 13980 ;; Registers used:
 13981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13982 ;; Tracked objects:
 13983 ;;		On entry : 0/0
 13984 ;;		On exit  : 0/0
 13985 ;;		Unchanged: 0/0
 13986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13991 ;;Total ram usage:        0 bytes
 13992 ;; Hardware stack levels used:    1
 13993 ;; Hardware stack levels required when called:    5
 13994 ;; This function calls:
 13995 ;;		Absolute function
 13996 ;;		_TMR3_DefaultInterruptHandler
 13997 ;;		_TMR3_WriteTimer
 13998 ;;		_menuLCD_ISR
 13999 ;; This function is called by:
 14000 ;;		_INTERRUPT_InterruptManager
 14001 ;; This function uses a non-reentrant model
 14002 ;;
 14003                           
 14004                           
 14005                           ;psect for function _TMR3_ISR
 14006  0898                     _TMR3_ISR:
 14007  0898                     i1l4678:	
 14008                           ;incstack = 0
 14009                           ; Regs used in _TMR3_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14010                           
 14011                           
 14012                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
 14013  0898  002E               	movlb	14	; select bank14
 14014  0899  1110               	bcf	16,2	;volatile
 14015  089A                     i1l4680:
 14016                           
 14017                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
 14018  089A  0020               	movlb	0	; select bank0
 14019  089B  086F               	movf	_timer3ReloadVal+1,w	;volatile
 14020  089C  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 14021  089D  086E               	movf	_timer3ReloadVal,w	;volatile
 14022  089E  00F0               	movwf	TMR3_WriteTimer@timerVal
 14023  089F  3188  2011  3188   	fcall	_TMR3_WriteTimer
 14024  08A2                     i1l4682:
 14025                           
 14026                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
 14027  08A2  0021               	movlb	1	; select bank1
 14028  08A3  0835               	movf	_TMR3_InterruptHandler^(0+128),w
 14029  08A4  0436               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 14030  08A5  1903               	btfsc	3,2
 14031  08A6  28A8               	goto	u417_21
 14032  08A7  28A9               	goto	u417_20
 14033  08A8                     u417_21:
 14034  08A8  28AE               	goto	i1l478
 14035  08A9                     u417_20:
 14036  08A9                     i1l4684:
 14037                           
 14038                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
 14039  08A9  0836               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 14040  08AA  008A               	movwf	10
 14041  08AB  0835               	movf	_TMR3_InterruptHandler^(0+128),w
 14042  08AC  000A               	callw
 14043  08AD  3188               	pagesel	$
 14044  08AE                     i1l478:
 14045  08AE  0008               	return
 14046  08AF                     __end_of_TMR3_ISR:
 14047                           
 14048                           	psect	text38
 14049  0002                     __ptext38:	
 14050 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 14051 ;; Defined at:
 14052 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 14053 ;; Parameters:    Size  Location     Type
 14054 ;;		None
 14055 ;; Auto vars:     Size  Location     Type
 14056 ;;		None
 14057 ;; Return value:  Size  Location     Type
 14058 ;;                  1    wreg      void 
 14059 ;; Registers used:
 14060 ;;		None
 14061 ;; Tracked objects:
 14062 ;;		On entry : 0/0
 14063 ;;		On exit  : 0/0
 14064 ;;		Unchanged: 0/0
 14065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14070 ;;Total ram usage:        0 bytes
 14071 ;; Hardware stack levels used:    1
 14072 ;; This function calls:
 14073 ;;		Nothing
 14074 ;; This function is called by:
 14075 ;;		_TMR3_Initialize
 14076 ;;		_TMR3_ISR
 14077 ;; This function uses a non-reentrant model
 14078 ;;
 14079                           
 14080                           
 14081                           ;psect for function _TMR3_DefaultInterruptHandler
 14082  0002                     _TMR3_DefaultInterruptHandler:
 14083  0002                     i1l484:	
 14084                           ;incstack = 0
 14085                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 14086                           
 14087  0002  0008               	return
 14088  0003                     __end_of_TMR3_DefaultInterruptHandler:
 14089                           
 14090                           	psect	text39
 14091  0273                     __ptext39:	
 14092 ;; *************** function _menuLCD_ISR *****************
 14093 ;; Defined at:
 14094 ;;		line 332 in file "main.c"
 14095 ;; Parameters:    Size  Location     Type
 14096 ;;		None
 14097 ;; Auto vars:     Size  Location     Type
 14098 ;;  diff            3   42[BANK0 ] struct Time
 14099 ;;  str             8   27[BANK0 ] unsigned char [8]
 14100 ;;  tt              4   35[BANK0 ] unsigned char [4]
 14101 ;;  l               3   39[BANK0 ] unsigned char [3]
 14102 ;; Return value:  Size  Location     Type
 14103 ;;                  1    wreg      void 
 14104 ;; Registers used:
 14105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14106 ;; Tracked objects:
 14107 ;;		On entry : 0/0
 14108 ;;		On exit  : 0/0
 14109 ;;		Unchanged: 0/0
 14110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14112 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14113 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14114 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14115 ;;Total ram usage:       24 bytes
 14116 ;; Hardware stack levels used:    1
 14117 ;; Hardware stack levels required when called:    4
 14118 ;; This function calls:
 14119 ;;		_LCDchar
 14120 ;;		_LCDcmd
 14121 ;;		_LCDstr
 14122 ;;		_PWM_Output_D4_Enable
 14123 ;;		_TMR2_StartTimer
 14124 ;;		_differenceBetweenTimePeriod
 14125 ;;		_sprintf
 14126 ;;		i1_PWM6_LoadDutyValue
 14127 ;;		i1_PWM_Output_D4_Disable
 14128 ;;		i1_TMR2_StopTimer
 14129 ;; This function is called by:
 14130 ;;		_main
 14131 ;;		_TMR3_ISR
 14132 ;; This function uses a non-reentrant model
 14133 ;;
 14134                           
 14135                           
 14136                           ;psect for function _menuLCD_ISR
 14137  0273                     _menuLCD_ISR:
 14138  0273                     i1l4474:	
 14139                           ;incstack = 0
 14140                           ; Regs used in _menuLCD_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14141                           
 14142                           
 14143                           ;main.c: 333: char str[8];;main.c: 334: if(editingClockAlarm){
 14144  0273  0020               	movlb	0	; select bank0
 14145  0274  085C               	movf	_editingClockAlarm,w
 14146  0275  045D               	iorwf	_editingClockAlarm+1,w
 14147  0276  1903               	btfsc	3,2
 14148  0277  2A79               	goto	u382_21
 14149  0278  2A7A               	goto	u382_20
 14150  0279                     u382_21:
 14151  0279  2A98               	goto	i1l4478
 14152  027A                     u382_20:
 14153  027A                     i1l4476:
 14154                           
 14155                           ;main.c: 335: sprintf(str, "%02d:%02d:%02d", clkAlarm.alarmVal.h,clkAlarm.alarmVal.m,clk
      +                          Alarm.alarmVal.s);
 14156  027A  3000               	movlw	low (STR_1| (0+32768))
 14157  027B  00A0               	movwf	sprintf@f
 14158  027C  3090               	movlw	high (STR_1| (0+32768))
 14159  027D  00A1               	movwf	sprintf@f+1
 14160  027E  084D               	movf	_clkAlarm,w
 14161  027F  00B5               	movwf	??_menuLCD_ISR
 14162  0280  01B6               	clrf	??_menuLCD_ISR+1
 14163  0281  0835               	movf	??_menuLCD_ISR,w
 14164  0282  00A2               	movwf	?_sprintf+2
 14165  0283  0836               	movf	??_menuLCD_ISR+1,w
 14166  0284  00A3               	movwf	?_sprintf+3
 14167  0285  084E               	movf	_clkAlarm+1,w
 14168  0286  00B7               	movwf	??_menuLCD_ISR+2
 14169  0287  01B8               	clrf	??_menuLCD_ISR+3
 14170  0288  0837               	movf	??_menuLCD_ISR+2,w
 14171  0289  00A4               	movwf	?_sprintf+4
 14172  028A  0838               	movf	??_menuLCD_ISR+3,w
 14173  028B  00A5               	movwf	?_sprintf+5
 14174  028C  084F               	movf	_clkAlarm+2,w
 14175  028D  00B9               	movwf	??_menuLCD_ISR+4
 14176  028E  01BA               	clrf	??_menuLCD_ISR+5
 14177  028F  0839               	movf	??_menuLCD_ISR+4,w
 14178  0290  00A6               	movwf	?_sprintf+6
 14179  0291  083A               	movf	??_menuLCD_ISR+5,w
 14180  0292  00A7               	movwf	?_sprintf+7
 14181  0293  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 14182  0294  3184  2447  3182   	fcall	_sprintf
 14183                           
 14184                           ;main.c: 336: } else {
 14185  0297  2AB5               	goto	i1l4480
 14186  0298                     i1l4478:
 14187                           
 14188                           ;main.c: 337: sprintf(str, "%02d:%02d:%02d", t.h,t.m,t.s);
 14189  0298  3000               	movlw	low (STR_1| (0+32768))
 14190  0299  00A0               	movwf	sprintf@f
 14191  029A  3090               	movlw	high (STR_1| (0+32768))
 14192  029B  00A1               	movwf	sprintf@f+1
 14193  029C  0857               	movf	_t,w
 14194  029D  00B5               	movwf	??_menuLCD_ISR
 14195  029E  01B6               	clrf	??_menuLCD_ISR+1
 14196  029F  0835               	movf	??_menuLCD_ISR,w
 14197  02A0  00A2               	movwf	?_sprintf+2
 14198  02A1  0836               	movf	??_menuLCD_ISR+1,w
 14199  02A2  00A3               	movwf	?_sprintf+3
 14200  02A3  0858               	movf	_t+1,w
 14201  02A4  00B7               	movwf	??_menuLCD_ISR+2
 14202  02A5  01B8               	clrf	??_menuLCD_ISR+3
 14203  02A6  0837               	movf	??_menuLCD_ISR+2,w
 14204  02A7  00A4               	movwf	?_sprintf+4
 14205  02A8  0838               	movf	??_menuLCD_ISR+3,w
 14206  02A9  00A5               	movwf	?_sprintf+5
 14207  02AA  0859               	movf	_t+2,w
 14208  02AB  00B9               	movwf	??_menuLCD_ISR+4
 14209  02AC  01BA               	clrf	??_menuLCD_ISR+5
 14210  02AD  0839               	movf	??_menuLCD_ISR+4,w
 14211  02AE  00A6               	movwf	?_sprintf+6
 14212  02AF  083A               	movf	??_menuLCD_ISR+5,w
 14213  02B0  00A7               	movwf	?_sprintf+7
 14214  02B1  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 14215  02B2  3184  2447  3182   	fcall	_sprintf
 14216  02B5                     i1l4480:
 14217                           
 14218                           ;main.c: 338: };main.c: 339: LCDcmd(0x80);
 14219  02B5  3080               	movlw	128
 14220  02B6  3197  27A3  3182   	fcall	_LCDcmd
 14221  02B9                     i1l4482:
 14222                           
 14223                           ;main.c: 340: LCDstr(str);
 14224  02B9  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 14225  02BA  3188  2057  3182   	fcall	_LCDstr
 14226  02BD                     i1l4484:
 14227                           
 14228                           ;main.c: 343: if(ALAF == 'A'){
 14229  02BD  3041               	movlw	65
 14230  02BE  0020               	movlb	0	; select bank0
 14231  02BF  0664               	xorwf	_ALAF,w
 14232  02C0  1D03               	btfss	3,2
 14233  02C1  2AC3               	goto	u383_21
 14234  02C2  2AC4               	goto	u383_20
 14235  02C3                     u383_21:
 14236  02C3  2B95               	goto	i1l4538
 14237  02C4                     u383_20:
 14238  02C4                     i1l4486:
 14239                           
 14240                           ;main.c: 344: LCDcmd(0x8F);
 14241  02C4  308F               	movlw	143
 14242  02C5  3197  27A3  3182   	fcall	_LCDcmd
 14243                           
 14244                           ;main.c: 345: LCDchar(ALAF);
 14245  02C8  0020               	movlb	0	; select bank0
 14246  02C9  0864               	movf	_ALAF,w
 14247  02CA  3197  27B1  3182   	fcall	_LCDchar
 14248  02CD                     i1l4488:
 14249                           
 14250                           ;main.c: 348: if(clkAlarm.trigger == 1){
 14251  02CD  0020               	movlb	0	; select bank0
 14252  02CE  0350               	decf	_clkAlarm+3,w
 14253  02CF  1D03               	btfss	3,2
 14254  02D0  2AD2               	goto	u384_21
 14255  02D1  2AD3               	goto	u384_20
 14256  02D2                     u384_21:
 14257  02D2  2ADC               	goto	i1l4492
 14258  02D3                     u384_20:
 14259  02D3                     i1l4490:
 14260                           
 14261                           ;main.c: 349: LCDcmd(0x8B);
 14262  02D3  308B               	movlw	139
 14263  02D4  3197  27A3  3182   	fcall	_LCDcmd
 14264                           
 14265                           ;main.c: 350: LCDchar('C');
 14266  02D7  3043               	movlw	67
 14267  02D8  3197  27B1  3182   	fcall	_LCDchar
 14268                           
 14269                           ;main.c: 351: } else{
 14270  02DB  2AE4               	goto	i1l4494
 14271  02DC                     i1l4492:
 14272                           
 14273                           ;main.c: 352: LCDcmd(0x8B);
 14274  02DC  308B               	movlw	139
 14275  02DD  3197  27A3  3182   	fcall	_LCDcmd
 14276                           
 14277                           ;main.c: 353: LCDchar(' ');
 14278  02E0  3020               	movlw	32
 14279  02E1  3197  27B1  3182   	fcall	_LCDchar
 14280  02E4                     i1l4494:
 14281                           
 14282                           ;main.c: 354: };main.c: 357: if(tempAlarm.trigger == 1){
 14283  02E4  0020               	movlb	0	; select bank0
 14284  02E5  0355               	decf	_tempAlarm+1,w
 14285  02E6  1D03               	btfss	3,2
 14286  02E7  2AE9               	goto	u385_21
 14287  02E8  2AEA               	goto	u385_20
 14288  02E9                     u385_21:
 14289  02E9  2AF3               	goto	i1l4498
 14290  02EA                     u385_20:
 14291  02EA                     i1l4496:
 14292                           
 14293                           ;main.c: 358: LCDcmd(0x8C);
 14294  02EA  308C               	movlw	140
 14295  02EB  3197  27A3  3182   	fcall	_LCDcmd
 14296                           
 14297                           ;main.c: 359: LCDchar('T');
 14298  02EE  3054               	movlw	84
 14299  02EF  3197  27B1  3182   	fcall	_LCDchar
 14300                           
 14301                           ;main.c: 360: } else{
 14302  02F2  2AFB               	goto	i1l4500
 14303  02F3                     i1l4498:
 14304                           
 14305                           ;main.c: 361: LCDcmd(0x8C);
 14306  02F3  308C               	movlw	140
 14307  02F4  3197  27A3  3182   	fcall	_LCDcmd
 14308                           
 14309                           ;main.c: 362: LCDchar(' ');
 14310  02F7  3020               	movlw	32
 14311  02F8  3197  27B1  3182   	fcall	_LCDchar
 14312  02FB                     i1l4500:
 14313                           
 14314                           ;main.c: 363: };main.c: 366: if(lumAlarm.trigger == 1){
 14315  02FB  0020               	movlb	0	; select bank0
 14316  02FC  0352               	decf	_lumAlarm+1,w
 14317  02FD  1D03               	btfss	3,2
 14318  02FE  2B00               	goto	u386_21
 14319  02FF  2B01               	goto	u386_20
 14320  0300                     u386_21:
 14321  0300  2B0A               	goto	i1l4504
 14322  0301                     u386_20:
 14323  0301                     i1l4502:
 14324                           
 14325                           ;main.c: 367: LCDcmd(0x8D);
 14326  0301  308D               	movlw	141
 14327  0302  3197  27A3  3182   	fcall	_LCDcmd
 14328                           
 14329                           ;main.c: 368: LCDchar('L');
 14330  0305  304C               	movlw	76
 14331  0306  3197  27B1  3182   	fcall	_LCDchar
 14332                           
 14333                           ;main.c: 369: } else{
 14334  0309  2B12               	goto	i1l4506
 14335  030A                     i1l4504:
 14336                           
 14337                           ;main.c: 370: LCDcmd(0x8D);
 14338  030A  308D               	movlw	141
 14339  030B  3197  27A3  3182   	fcall	_LCDcmd
 14340                           
 14341                           ;main.c: 371: LCDchar(' ');
 14342  030E  3020               	movlw	32
 14343  030F  3197  27B1  3182   	fcall	_LCDchar
 14344  0312                     i1l4506:
 14345                           
 14346                           ;main.c: 372: };main.c: 373: if(clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigge
      +                          r){
 14347  0312  0020               	movlb	0	; select bank0
 14348  0313  0850               	movf	_clkAlarm+3,w
 14349  0314  1D03               	btfss	3,2
 14350  0315  2B17               	goto	u387_21
 14351  0316  2B18               	goto	u387_20
 14352  0317                     u387_21:
 14353  0317  2B22               	goto	i1l4512
 14354  0318                     u387_20:
 14355  0318                     i1l4508:
 14356  0318  0855               	movf	_tempAlarm+1,w
 14357  0319  1D03               	btfss	3,2
 14358  031A  2B1C               	goto	u388_21
 14359  031B  2B1D               	goto	u388_20
 14360  031C                     u388_21:
 14361  031C  2B22               	goto	i1l4512
 14362  031D                     u388_20:
 14363  031D                     i1l4510:
 14364  031D  0852               	movf	_lumAlarm+1,w
 14365  031E  1903               	btfsc	3,2
 14366  031F  2B21               	goto	u389_21
 14367  0320  2B22               	goto	u389_20
 14368  0321                     u389_21:
 14369  0321  2B9E               	goto	i1l1164
 14370  0322                     u389_20:
 14371  0322                     i1l4512:
 14372                           
 14373                           ;main.c: 374: if(alarmPWMStart.h == 0xff){
 14374  0322  0A67               	incf	_alarmPWMStart,w
 14375  0323  1D03               	btfss	3,2
 14376  0324  2B26               	goto	u390_21
 14377  0325  2B27               	goto	u390_20
 14378  0326                     u390_21:
 14379  0326  2B33               	goto	i1l1155
 14380  0327                     u390_20:
 14381  0327                     i1l4514:
 14382                           
 14383                           ;main.c: 375: alarmPWMStart.h = t.h;
 14384  0327  0857               	movf	_t,w
 14385  0328  00B5               	movwf	??_menuLCD_ISR
 14386  0329  0835               	movf	??_menuLCD_ISR,w
 14387  032A  00E7               	movwf	_alarmPWMStart
 14388                           
 14389                           ;main.c: 376: alarmPWMStart.m = t.m;
 14390  032B  0858               	movf	_t+1,w
 14391  032C  00B5               	movwf	??_menuLCD_ISR
 14392  032D  0835               	movf	??_menuLCD_ISR,w
 14393  032E  00E8               	movwf	_alarmPWMStart+1
 14394                           
 14395                           ;main.c: 377: alarmPWMStart.s = t.s;
 14396  032F  0859               	movf	_t+2,w
 14397  0330  00B5               	movwf	??_menuLCD_ISR
 14398  0331  0835               	movf	??_menuLCD_ISR,w
 14399  0332  00E9               	movwf	_alarmPWMStart+2
 14400  0333                     i1l1155:
 14401                           
 14402                           ;main.c: 378: };main.c: 379: struct Time diff = {0,0,0};
 14403  0333  0021               	movlb	1	; select bank1
 14404  0334  083B               	movf	menuLCD_ISR@F12812^(0+128),w
 14405  0335  0020               	movlb	0	; select bank0
 14406  0336  00CA               	movwf	menuLCD_ISR@diff
 14407  0337  0021               	movlb	1	; select bank1
 14408  0338  083C               	movf	(menuLCD_ISR@F12812+1)^(0+128),w
 14409  0339  0020               	movlb	0	; select bank0
 14410  033A  00CB               	movwf	menuLCD_ISR@diff+1
 14411  033B  0021               	movlb	1	; select bank1
 14412  033C  083D               	movf	(menuLCD_ISR@F12812+2)^(0+128),w
 14413  033D  0020               	movlb	0	; select bank0
 14414  033E  00CC               	movwf	menuLCD_ISR@diff+2
 14415  033F                     i1l4516:
 14416                           
 14417                           ;main.c: 380: differenceBetweenTimePeriod( t, alarmPWMStart, &diff);
 14418  033F  0857               	movf	_t,w
 14419  0340  00F0               	movwf	differenceBetweenTimePeriod@start
 14420  0341  0858               	movf	_t+1,w
 14421  0342  00F1               	movwf	differenceBetweenTimePeriod@start+1
 14422  0343  0859               	movf	_t+2,w
 14423  0344  00F2               	movwf	differenceBetweenTimePeriod@start+2
 14424  0345  0867               	movf	_alarmPWMStart,w
 14425  0346  00F3               	movwf	differenceBetweenTimePeriod@stop
 14426  0347  0868               	movf	_alarmPWMStart+1,w
 14427  0348  00F4               	movwf	differenceBetweenTimePeriod@stop+1
 14428  0349  0869               	movf	_alarmPWMStart+2,w
 14429  034A  00F5               	movwf	differenceBetweenTimePeriod@stop+2
 14430  034B  304A               	movlw	(low (menuLCD_ISR@diff| 0))& (0+255)
 14431  034C  00B5               	movwf	??_menuLCD_ISR
 14432  034D  0835               	movf	??_menuLCD_ISR,w
 14433  034E  00F6               	movwf	differenceBetweenTimePeriod@diff
 14434  034F  3189  21C6  3182   	fcall	_differenceBetweenTimePeriod
 14435  0352                     i1l4518:
 14436                           
 14437                           ;main.c: 383: if(diff.s <= TALA){
 14438  0352  0020               	movlb	0	; select bank0
 14439  0353  084C               	movf	menuLCD_ISR@diff+2,w
 14440  0354  0265               	subwf	_TALA,w
 14441  0355  1C03               	skipc
 14442  0356  2B58               	goto	u391_21
 14443  0357  2B59               	goto	u391_20
 14444  0358                     u391_21:
 14445  0358  2B83               	goto	i1l1158
 14446  0359                     u391_20:
 14447  0359                     i1l4520:
 14448                           
 14449                           ;main.c: 384: if(PWM6EN==0){
 14450  0359  0027               	movlb	7	; select bank7
 14451  035A  1B8E               	btfsc	14,7	;volatile
 14452  035B  2B5D               	goto	u392_21
 14453  035C  2B5E               	goto	u392_20
 14454  035D                     u392_21:
 14455  035D  2B64               	goto	i1l4524
 14456  035E                     u392_20:
 14457  035E                     i1l4522:
 14458                           
 14459                           ;main.c: 385: TMR2_StartTimer();
 14460  035E  3197  277D  3182   	fcall	_TMR2_StartTimer
 14461                           
 14462                           ;main.c: 386: PWM_Output_D4_Enable();
 14463  0361  3197  276B  3182   	fcall	_PWM_Output_D4_Enable
 14464  0364                     i1l4524:
 14465                           
 14466                           ;main.c: 387: };main.c: 388: if(dimingLed <= 1023){
 14467  0364  0020               	movlb	0	; select bank0
 14468  0365  085F               	movf	_dimingLed+1,w
 14469  0366  3A80               	xorlw	128
 14470  0367  00B5               	movwf	??_menuLCD_ISR
 14471  0368  3084               	movlw	132
 14472  0369  0235               	subwf	??_menuLCD_ISR,w
 14473  036A  1D03               	skipz
 14474  036B  2B6E               	goto	u393_25
 14475  036C  3000               	movlw	0
 14476  036D  025E               	subwf	_dimingLed,w
 14477  036E                     u393_25:
 14478  036E  1803               	skipnc
 14479  036F  2B71               	goto	u393_21
 14480  0370  2B72               	goto	u393_20
 14481  0371                     u393_21:
 14482  0371  2B78               	goto	i1l4528
 14483  0372                     u393_20:
 14484  0372                     i1l4526:
 14485                           
 14486                           ;main.c: 389: dimingLed += 200;
 14487  0372  30C8               	movlw	200
 14488  0373  0020               	movlb	0	; select bank0
 14489  0374  07DE               	addwf	_dimingLed,f
 14490  0375  3000               	movlw	0
 14491  0376  3DDF               	addwfc	_dimingLed+1,f
 14492                           
 14493                           ;main.c: 390: } else{
 14494  0377  2B7B               	goto	i1l4530
 14495  0378                     i1l4528:
 14496                           
 14497                           ;main.c: 391: dimingLed = 0;
 14498  0378  0020               	movlb	0	; select bank0
 14499  0379  01DE               	clrf	_dimingLed
 14500  037A  01DF               	clrf	_dimingLed+1
 14501  037B                     i1l4530:
 14502                           
 14503                           ;main.c: 392: };main.c: 393: PWM6_LoadDutyValue(dimingLed);
 14504  037B  085F               	movf	_dimingLed+1,w
 14505  037C  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 14506  037D  085E               	movf	_dimingLed,w
 14507  037E  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 14508  037F  3188  206B  3182   	fcall	i1_PWM6_LoadDutyValue
 14509                           
 14510                           ;main.c: 394: } else if(PWM6EN==1){
 14511  0382  2B9E               	goto	i1l1164
 14512  0383                     i1l1158:
 14513  0383  0027               	movlb	7	; select bank7
 14514  0384  1F8E               	btfss	14,7	;volatile
 14515  0385  2B87               	goto	u394_21
 14516  0386  2B88               	goto	u394_20
 14517  0387                     u394_21:
 14518  0387  2B9E               	goto	i1l1164
 14519  0388                     u394_20:
 14520  0388                     i1l4532:
 14521                           
 14522                           ;main.c: 395: PWM6_LoadDutyValue(0);
 14523  0388  3000               	movlw	0
 14524  0389  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 14525  038A  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 14526  038B  3188  206B  3182   	fcall	i1_PWM6_LoadDutyValue
 14527  038E                     i1l4534:
 14528                           
 14529                           ;main.c: 396: TMR2_StopTimer();
 14530  038E  3197  2781  3182   	fcall	i1_TMR2_StopTimer
 14531  0391                     i1l4536:
 14532                           
 14533                           ;main.c: 397: PWM_Output_D4_Disable();
 14534  0391  3197  2771  3182   	fcall	i1_PWM_Output_D4_Disable
 14535  0394  2B9E               	goto	i1l1164
 14536  0395                     i1l4538:
 14537                           
 14538                           ;main.c: 401: LCDcmd(0x8F);
 14539  0395  308F               	movlw	143
 14540  0396  3197  27A3  3182   	fcall	_LCDcmd
 14541                           
 14542                           ;main.c: 402: LCDchar(ALAF);
 14543  0399  0020               	movlb	0	; select bank0
 14544  039A  0864               	movf	_ALAF,w
 14545  039B  3197  27B1  3182   	fcall	_LCDchar
 14546  039E                     i1l1164:
 14547                           
 14548                           ;main.c: 403: };main.c: 405: LCDcmd(0xc0);
 14549  039E  30C0               	movlw	192
 14550  039F  3197  27A3  3182   	fcall	_LCDcmd
 14551  03A2                     i1l4540:
 14552                           
 14553                           ;main.c: 406: char tt[4];;main.c: 407: if(editingTempAlarm){
 14554  03A2  0020               	movlb	0	; select bank0
 14555  03A3  0861               	movf	_editingTempAlarm,w
 14556  03A4  1903               	btfsc	3,2
 14557  03A5  2BA7               	goto	u395_21
 14558  03A6  2BA8               	goto	u395_20
 14559  03A7                     u395_21:
 14560  03A7  2BB8               	goto	i1l4544
 14561  03A8                     u395_20:
 14562  03A8                     i1l4542:
 14563                           
 14564                           ;main.c: 408: sprintf(tt, "%02d C", tempAlarm.alarmTemp);
 14565  03A8  300A               	movlw	low (STR_3| (0+32768))
 14566  03A9  00A0               	movwf	sprintf@f
 14567  03AA  3098               	movlw	high (STR_3| (0+32768))
 14568  03AB  00A1               	movwf	sprintf@f+1
 14569  03AC  0854               	movf	_tempAlarm,w
 14570  03AD  00B5               	movwf	??_menuLCD_ISR
 14571  03AE  01B6               	clrf	??_menuLCD_ISR+1
 14572  03AF  0835               	movf	??_menuLCD_ISR,w
 14573  03B0  00A2               	movwf	?_sprintf+2
 14574  03B1  0836               	movf	??_menuLCD_ISR+1,w
 14575  03B2  00A3               	movwf	?_sprintf+3
 14576  03B3  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 14577  03B4  3184  2447  3182   	fcall	_sprintf
 14578                           
 14579                           ;main.c: 409: } else{
 14580  03B7  2BC7               	goto	i1l4546
 14581  03B8                     i1l4544:
 14582                           
 14583                           ;main.c: 410: sprintf(tt, "%02d C", temp);
 14584  03B8  300A               	movlw	low (STR_3| (0+32768))
 14585  03B9  00A0               	movwf	sprintf@f
 14586  03BA  3098               	movlw	high (STR_3| (0+32768))
 14587  03BB  00A1               	movwf	sprintf@f+1
 14588  03BC  0863               	movf	_temp,w
 14589  03BD  00B5               	movwf	??_menuLCD_ISR
 14590  03BE  01B6               	clrf	??_menuLCD_ISR+1
 14591  03BF  0835               	movf	??_menuLCD_ISR,w
 14592  03C0  00A2               	movwf	?_sprintf+2
 14593  03C1  0836               	movf	??_menuLCD_ISR+1,w
 14594  03C2  00A3               	movwf	?_sprintf+3
 14595  03C3  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 14596  03C4  3184  2447  3182   	fcall	_sprintf
 14597  03C7                     i1l4546:
 14598                           
 14599                           ;main.c: 411: };main.c: 412: LCDstr(tt);
 14600  03C7  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 14601  03C8  3188  2057  3182   	fcall	_LCDstr
 14602  03CB                     i1l4548:
 14603                           
 14604                           ;main.c: 414: LCDcmd(0xcd);
 14605  03CB  30CD               	movlw	205
 14606  03CC  3197  27A3  3182   	fcall	_LCDcmd
 14607  03CF                     i1l4550:
 14608                           
 14609                           ;main.c: 415: char l[3];;main.c: 417: if(editingLumAlarm){
 14610  03CF  0020               	movlb	0	; select bank0
 14611  03D0  0860               	movf	_editingLumAlarm,w
 14612  03D1  1903               	btfsc	3,2
 14613  03D2  2BD4               	goto	u396_21
 14614  03D3  2BD5               	goto	u396_20
 14615  03D4                     u396_21:
 14616  03D4  2BE5               	goto	i1l4554
 14617  03D5                     u396_20:
 14618  03D5                     i1l4552:
 14619                           
 14620                           ;main.c: 418: sprintf(l, "L %d", lumAlarm.alarmLum);
 14621  03D5  3011               	movlw	low (STR_5| (0+32768))
 14622  03D6  00A0               	movwf	sprintf@f
 14623  03D7  3098               	movlw	high (STR_5| (0+32768))
 14624  03D8  00A1               	movwf	sprintf@f+1
 14625  03D9  0851               	movf	_lumAlarm,w
 14626  03DA  00B5               	movwf	??_menuLCD_ISR
 14627  03DB  01B6               	clrf	??_menuLCD_ISR+1
 14628  03DC  0835               	movf	??_menuLCD_ISR,w
 14629  03DD  00A2               	movwf	?_sprintf+2
 14630  03DE  0836               	movf	??_menuLCD_ISR+1,w
 14631  03DF  00A3               	movwf	?_sprintf+3
 14632  03E0  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 14633  03E1  3184  2447  3182   	fcall	_sprintf
 14634                           
 14635                           ;main.c: 419: } else{
 14636  03E4  2BF4               	goto	i1l4556
 14637  03E5                     i1l4554:
 14638                           
 14639                           ;main.c: 420: sprintf(l, "L %d", lumLevel);
 14640  03E5  3011               	movlw	low (STR_5| (0+32768))
 14641  03E6  00A0               	movwf	sprintf@f
 14642  03E7  3098               	movlw	high (STR_5| (0+32768))
 14643  03E8  00A1               	movwf	sprintf@f+1
 14644  03E9  0862               	movf	_lumLevel,w
 14645  03EA  00B5               	movwf	??_menuLCD_ISR
 14646  03EB  01B6               	clrf	??_menuLCD_ISR+1
 14647  03EC  0835               	movf	??_menuLCD_ISR,w
 14648  03ED  00A2               	movwf	?_sprintf+2
 14649  03EE  0836               	movf	??_menuLCD_ISR+1,w
 14650  03EF  00A3               	movwf	?_sprintf+3
 14651  03F0  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 14652  03F1  3184  2447  3182   	fcall	_sprintf
 14653  03F4                     i1l4556:
 14654                           
 14655                           ;main.c: 421: };main.c: 422: LCDstr(l);
 14656  03F4  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 14657  03F5  3188  2057  3182   	fcall	_LCDstr
 14658  03F8                     i1l4558:
 14659                           
 14660                           ;main.c: 424: if(mode == 1){
 14661  03F8  0020               	movlb	0	; select bank0
 14662  03F9  035A               	decf	_mode,w
 14663  03FA  045B               	iorwf	_mode+1,w
 14664  03FB  1D03               	btfss	3,2
 14665  03FC  2BFE               	goto	u397_21
 14666  03FD  2BFF               	goto	u397_20
 14667  03FE                     u397_21:
 14668  03FE  2C23               	goto	i1l4572
 14669  03FF                     u397_20:
 14670  03FF                     i1l4560:
 14671                           
 14672                           ;main.c: 425: if(editingClockAlarm == 1){
 14673  03FF  035C               	decf	_editingClockAlarm,w
 14674  0400  045D               	iorwf	_editingClockAlarm+1,w
 14675  0401  1D03               	btfss	3,2
 14676  0402  2C04               	goto	u398_21
 14677  0403  2C05               	goto	u398_20
 14678  0404                     u398_21:
 14679  0404  2C0A               	goto	i1l4564
 14680  0405                     u398_20:
 14681  0405                     i1l4562:
 14682                           
 14683                           ;main.c: 426: LCDcmd(0x81);
 14684  0405  3081               	movlw	129
 14685  0406  3197  27A3  3182   	fcall	_LCDcmd
 14686                           
 14687                           ;main.c: 427: } else if(editingClockAlarm == 2){
 14688  0409  2C46               	goto	i1l1181
 14689  040A                     i1l4564:
 14690  040A  3002               	movlw	2
 14691  040B  065C               	xorwf	_editingClockAlarm,w
 14692  040C  045D               	iorwf	_editingClockAlarm+1,w
 14693  040D  1D03               	btfss	3,2
 14694  040E  2C10               	goto	u399_21
 14695  040F  2C11               	goto	u399_20
 14696  0410                     u399_21:
 14697  0410  2C16               	goto	i1l4568
 14698  0411                     u399_20:
 14699  0411                     i1l4566:
 14700                           
 14701                           ;main.c: 428: LCDcmd(0x84);
 14702  0411  3084               	movlw	132
 14703  0412  3197  27A3  3182   	fcall	_LCDcmd
 14704                           
 14705                           ;main.c: 429: } else if(editingClockAlarm == 3){
 14706  0415  2C46               	goto	i1l1181
 14707  0416                     i1l4568:
 14708  0416  3003               	movlw	3
 14709  0417  065C               	xorwf	_editingClockAlarm,w
 14710  0418  045D               	iorwf	_editingClockAlarm+1,w
 14711  0419  1D03               	btfss	3,2
 14712  041A  2C1C               	goto	u400_21
 14713  041B  2C1D               	goto	u400_20
 14714  041C                     u400_21:
 14715  041C  2C22               	goto	i1l1171
 14716  041D                     u400_20:
 14717  041D                     i1l4570:
 14718                           
 14719                           ;main.c: 430: LCDcmd(0x87);
 14720  041D  3087               	movlw	135
 14721  041E  3197  27A3  3182   	fcall	_LCDcmd
 14722  0421  2C46               	goto	i1l1181
 14723  0422                     i1l1171:
 14724                           
 14725                           ;main.c: 431: };main.c: 432: } else if(mode == 2){
 14726  0422  2C46               	goto	i1l1181
 14727  0423                     i1l4572:
 14728  0423  3002               	movlw	2
 14729  0424  065A               	xorwf	_mode,w
 14730  0425  045B               	iorwf	_mode+1,w
 14731  0426  1D03               	btfss	3,2
 14732  0427  2C29               	goto	u401_21
 14733  0428  2C2A               	goto	u401_20
 14734  0429                     u401_21:
 14735  0429  2C2F               	goto	i1l4576
 14736  042A                     u401_20:
 14737  042A                     i1l4574:
 14738                           
 14739                           ;main.c: 433: LCDcmd(0xc1);
 14740  042A  30C1               	movlw	193
 14741  042B  3197  27A3  3182   	fcall	_LCDcmd
 14742                           
 14743                           ;main.c: 434: } else if(mode == 3){
 14744  042E  2C46               	goto	i1l1181
 14745  042F                     i1l4576:
 14746  042F  3003               	movlw	3
 14747  0430  065A               	xorwf	_mode,w
 14748  0431  045B               	iorwf	_mode+1,w
 14749  0432  1D03               	btfss	3,2
 14750  0433  2C35               	goto	u402_21
 14751  0434  2C36               	goto	u402_20
 14752  0435                     u402_21:
 14753  0435  2C3B               	goto	i1l4580
 14754  0436                     u402_20:
 14755  0436                     i1l4578:
 14756                           
 14757                           ;main.c: 435: LCDcmd(0xcf);
 14758  0436  30CF               	movlw	207
 14759  0437  3197  27A3  3182   	fcall	_LCDcmd
 14760                           
 14761                           ;main.c: 436: } else if(mode == 4){
 14762  043A  2C46               	goto	i1l1181
 14763  043B                     i1l4580:
 14764  043B  3004               	movlw	4
 14765  043C  065A               	xorwf	_mode,w
 14766  043D  045B               	iorwf	_mode+1,w
 14767  043E  1D03               	btfss	3,2
 14768  043F  2C41               	goto	u403_21
 14769  0440  2C42               	goto	u403_20
 14770  0441                     u403_21:
 14771  0441  2C46               	goto	i1l1181
 14772  0442                     u403_20:
 14773  0442                     i1l4582:
 14774                           
 14775                           ;main.c: 437: LCDcmd(0x8f);
 14776  0442  308F               	movlw	143
 14777  0443  3197  27A3  3182   	fcall	_LCDcmd
 14778  0446                     i1l1181:
 14779  0446  0008               	return
 14780  0447                     __end_of_menuLCD_ISR:
 14781                           
 14782                           	psect	text40
 14783  1781                     __ptext40:	
 14784 ;; *************** function i1_TMR2_StopTimer *****************
 14785 ;; Defined at:
 14786 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 14787 ;; Parameters:    Size  Location     Type
 14788 ;;		None
 14789 ;; Auto vars:     Size  Location     Type
 14790 ;;		None
 14791 ;; Return value:  Size  Location     Type
 14792 ;;                  1    wreg      void 
 14793 ;; Registers used:
 14794 ;;		status,2, status,0, pclath, cstack
 14795 ;; Tracked objects:
 14796 ;;		On entry : 0/0
 14797 ;;		On exit  : 0/0
 14798 ;;		Unchanged: 0/0
 14799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14804 ;;Total ram usage:        0 bytes
 14805 ;; Hardware stack levels used:    1
 14806 ;; Hardware stack levels required when called:    1
 14807 ;; This function calls:
 14808 ;;		i1_TMR2_Stop
 14809 ;; This function is called by:
 14810 ;;		_menuLCD_ISR
 14811 ;; This function uses a non-reentrant model
 14812 ;;
 14813                           
 14814                           
 14815                           ;psect for function i1_TMR2_StopTimer
 14816  1781                     i1_TMR2_StopTimer:
 14817  1781                     i1l4168:	
 14818                           ;incstack = 0
 14819                           ; Regs used in i1_TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 14820                           
 14821                           
 14822                           ;tmr2.c: 119: TMR2_Stop();
 14823  1781  3197  2774  3197   	fcall	i1_TMR2_Stop
 14824  1784                     i1l767:
 14825  1784  0008               	return
 14826  1785                     __end_ofi1_TMR2_StopTimer:
 14827                           
 14828                           	psect	text41
 14829  1774                     __ptext41:	
 14830 ;; *************** function i1_TMR2_Stop *****************
 14831 ;; Defined at:
 14832 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 14833 ;; Parameters:    Size  Location     Type
 14834 ;;		None
 14835 ;; Auto vars:     Size  Location     Type
 14836 ;;		None
 14837 ;; Return value:  Size  Location     Type
 14838 ;;                  1    wreg      void 
 14839 ;; Registers used:
 14840 ;;		None
 14841 ;; Tracked objects:
 14842 ;;		On entry : 0/0
 14843 ;;		On exit  : 0/0
 14844 ;;		Unchanged: 0/0
 14845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14850 ;;Total ram usage:        0 bytes
 14851 ;; Hardware stack levels used:    1
 14852 ;; This function calls:
 14853 ;;		Nothing
 14854 ;; This function is called by:
 14855 ;;		i1_TMR2_StopTimer
 14856 ;; This function uses a non-reentrant model
 14857 ;;
 14858                           
 14859                           
 14860                           ;psect for function i1_TMR2_Stop
 14861  1774                     i1_TMR2_Stop:
 14862  1774                     i1l3926:	
 14863                           ;incstack = 0
 14864                           ; Regs used in i1_TMR2_Stop: []
 14865                           
 14866                           
 14867                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 14868  1774  0025               	movlb	5	; select bank5
 14869  1775  138E               	bcf	14,7	;volatile
 14870  1776                     i1l764:
 14871  1776  0008               	return
 14872  1777                     __end_ofi1_TMR2_Stop:
 14873                           
 14874                           	psect	text42
 14875  1771                     __ptext42:	
 14876 ;; *************** function i1_PWM_Output_D4_Disable *****************
 14877 ;; Defined at:
 14878 ;;		line 246 in file "main.c"
 14879 ;; Parameters:    Size  Location     Type
 14880 ;;		None
 14881 ;; Auto vars:     Size  Location     Type
 14882 ;;		None
 14883 ;; Return value:  Size  Location     Type
 14884 ;;                  1    wreg      void 
 14885 ;; Registers used:
 14886 ;;		None
 14887 ;; Tracked objects:
 14888 ;;		On entry : 0/0
 14889 ;;		On exit  : 0/0
 14890 ;;		Unchanged: 0/0
 14891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14896 ;;Total ram usage:        0 bytes
 14897 ;; Hardware stack levels used:    1
 14898 ;; This function calls:
 14899 ;;		Nothing
 14900 ;; This function is called by:
 14901 ;;		_menuLCD_ISR
 14902 ;; This function uses a non-reentrant model
 14903 ;;
 14904                           
 14905                           
 14906                           ;psect for function i1_PWM_Output_D4_Disable
 14907  1771                     i1_PWM_Output_D4_Disable:
 14908  1771                     i1l4170:	
 14909                           ;incstack = 0
 14910                           ; Regs used in i1_PWM_Output_D4_Disable: []
 14911                           
 14912                           
 14913                           ;main.c: 247: PWM6EN = 0;
 14914  1771  0027               	movlb	7	; select bank7
 14915  1772  138E               	bcf	14,7	;volatile
 14916  1773                     i1l1104:
 14917  1773  0008               	return
 14918  1774                     __end_ofi1_PWM_Output_D4_Disable:
 14919                           
 14920                           	psect	text43
 14921  086B                     __ptext43:	
 14922 ;; *************** function i1_PWM6_LoadDutyValue *****************
 14923 ;; Defined at:
 14924 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 14925 ;; Parameters:    Size  Location     Type
 14926 ;;  dutyValue       2    0[COMMON] unsigned int 
 14927 ;; Auto vars:     Size  Location     Type
 14928 ;;		None
 14929 ;; Return value:  Size  Location     Type
 14930 ;;                  1    wreg      void 
 14931 ;; Registers used:
 14932 ;;		wreg, status,2, status,0
 14933 ;; Tracked objects:
 14934 ;;		On entry : 0/0
 14935 ;;		On exit  : 0/0
 14936 ;;		Unchanged: 0/0
 14937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14938 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14940 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14941 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14942 ;;Total ram usage:        4 bytes
 14943 ;; Hardware stack levels used:    1
 14944 ;; This function calls:
 14945 ;;		Nothing
 14946 ;; This function is called by:
 14947 ;;		_menuLCD_ISR
 14948 ;; This function uses a non-reentrant model
 14949 ;;
 14950                           
 14951                           
 14952                           ;psect for function i1_PWM6_LoadDutyValue
 14953  086B                     i1_PWM6_LoadDutyValue:
 14954  086B                     i1l4166:	
 14955                           ;incstack = 0
 14956                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 14957                           
 14958                           
 14959                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 14960  086B  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 14961  086C  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 14962  086D  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 14963  086E  00F2               	movwf	??i1_PWM6_LoadDutyValue
 14964  086F  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 14965  0870  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 14966  0871  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 14967  0872  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 14968  0873  0872               	movf	??i1_PWM6_LoadDutyValue,w
 14969  0874  0027               	movlb	7	; select bank7
 14970  0875  008D               	movwf	13	;volatile
 14971                           
 14972                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 14973  0876  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 14974  0877  3903               	andlw	3
 14975  0878  00F2               	movwf	??i1_PWM6_LoadDutyValue
 14976  0879  3005               	movlw	5
 14977  087A                     u349_25:
 14978  087A  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 14979  087B  3EFF               	addlw	-1
 14980  087C  1D03               	skipz
 14981  087D  287A               	goto	u349_25
 14982  087E  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 14983  087F  008C               	movwf	12	;volatile
 14984  0880                     i1l722:
 14985  0880  0008               	return
 14986  0881                     __end_ofi1_PWM6_LoadDutyValue:
 14987                           
 14988                           	psect	text44
 14989  0447                     __ptext44:	
 14990 ;; *************** function _sprintf *****************
 14991 ;; Defined at:
 14992 ;;		line 505 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
 14993 ;; Parameters:    Size  Location     Type
 14994 ;;  sp              1    wreg     PTR unsigned char 
 14995 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 14996 ;;  f               2    0[BANK0 ] PTR const unsigned char 
 14997 ;;		 -> STR_6(5), STR_5(5), STR_4(7), STR_3(7), 
 14998 ;;		 -> STR_2(15), STR_1(15), 
 14999 ;; Auto vars:     Size  Location     Type
 15000 ;;  sp              1   20[BANK0 ] PTR unsigned char 
 15001 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 15002 ;;  tmpval          4    0        struct .
 15003 ;;  width           2   17[BANK0 ] int 
 15004 ;;  val             2   14[BANK0 ] unsigned int 
 15005 ;;  cp              2    0        PTR const unsigned char 
 15006 ;;  len             2    0        unsigned int 
 15007 ;;  c               1   19[BANK0 ] unsigned char 
 15008 ;;  flag            1   16[BANK0 ] unsigned char 
 15009 ;;  prec            1   13[BANK0 ] char 
 15010 ;;  ap              1   12[BANK0 ] PTR void [1]
 15011 ;;		 -> ?_sprintf(2), 
 15012 ;; Return value:  Size  Location     Type
 15013 ;;                  2    0[BANK0 ] int 
 15014 ;; Registers used:
 15015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15016 ;; Tracked objects:
 15017 ;;		On entry : 0/0
 15018 ;;		On exit  : 0/0
 15019 ;;		Unchanged: 0/0
 15020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15021 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15022 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15023 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15024 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15025 ;;Total ram usage:       21 bytes
 15026 ;; Hardware stack levels used:    1
 15027 ;; Hardware stack levels required when called:    1
 15028 ;; This function calls:
 15029 ;;		___lwdiv
 15030 ;;		___lwmod
 15031 ;;		___wmul
 15032 ;;		_isdigit
 15033 ;; This function is called by:
 15034 ;;		_menuLCD_ISR
 15035 ;; This function uses a non-reentrant model
 15036 ;;
 15037                           
 15038                           
 15039                           ;psect for function _sprintf
 15040  0447                     _sprintf:
 15041                           
 15042                           ;incstack = 0
 15043                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15044                           ;sprintf@sp stored from wreg
 15045  0447  0020               	movlb	0	; select bank0
 15046  0448  00B4               	movwf	sprintf@sp
 15047  0449                     i1l4056:
 15048                           
 15049                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 15050  0449  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 15051  044A  00A8               	movwf	??_sprintf
 15052  044B  0828               	movf	??_sprintf,w
 15053  044C  00AC               	movwf	sprintf@ap
 15054                           
 15055                           ;doprnt.c: 553: while((c = *f++)) {
 15056  044D  2DCB               	goto	i1l4160
 15057  044E                     i1l4058:
 15058                           
 15059                           ;doprnt.c: 555: if(c != '%')
 15060  044E  3025               	movlw	37
 15061  044F  0633               	xorwf	sprintf@c,w
 15062  0450  1903               	btfsc	3,2
 15063  0451  2C53               	goto	u331_21
 15064  0452  2C54               	goto	u331_20
 15065  0453                     u331_21:
 15066  0453  2C60               	goto	i1l4064
 15067  0454                     u331_20:
 15068  0454                     i1l4060:
 15069                           
 15070                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 15071  0454  0833               	movf	sprintf@c,w
 15072  0455  00A8               	movwf	??_sprintf
 15073  0456  0834               	movf	sprintf@sp,w
 15074  0457  0086               	movwf	6
 15075  0458  0187               	clrf	7
 15076  0459  0828               	movf	??_sprintf,w
 15077  045A  0081               	movwf	1
 15078  045B                     i1l4062:
 15079  045B  3001               	movlw	1
 15080  045C  00A8               	movwf	??_sprintf
 15081  045D  0828               	movf	??_sprintf,w
 15082  045E  07B4               	addwf	sprintf@sp,f
 15083                           
 15084                           ;doprnt.c: 559: continue;
 15085  045F  2DCB               	goto	i1l4160
 15086  0460                     i1l4064:
 15087                           
 15088                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 15089  0460  01B1               	clrf	sprintf@width
 15090  0461  01B2               	clrf	sprintf@width+1
 15091                           
 15092                           ;doprnt.c: 565: flag = 0;
 15093  0462  01B0               	clrf	sprintf@flag
 15094  0463  2C69               	goto	i1l4070
 15095  0464                     i1l1508:	
 15096                           ;doprnt.c: 596: case '0':
 15097                           
 15098                           
 15099                           ;doprnt.c: 597: flag |= 0x04;
 15100  0464  1530               	bsf	sprintf@flag,2
 15101  0465                     i1l4066:
 15102                           
 15103                           ;doprnt.c: 598: f++;
 15104  0465  3001               	movlw	1
 15105  0466  07A0               	addwf	sprintf@f,f
 15106  0467  3000               	movlw	0
 15107  0468  3DA1               	addwfc	sprintf@f+1,f
 15108  0469                     i1l4070:	
 15109                           ;doprnt.c: 599: continue;
 15110                           
 15111  0469  0820               	movf	sprintf@f,w
 15112  046A  0084               	movwf	4
 15113  046B  0821               	movf	sprintf@f+1,w
 15114  046C  0085               	movwf	5
 15115  046D  0800               	movf	0,w	;code access
 15116                           
 15117                           ; Switch size 1, requested type "simple"
 15118                           ; Number of cases is 1, Range of values is 48 to 48
 15119                           ; switch strategies available:
 15120                           ; Name         Instructions Cycles
 15121                           ; simple_byte            4     3 (average)
 15122                           ; direct_byte           11     9 (fixed)
 15123                           ; jumptable            263     9 (fixed)
 15124                           ;	Chosen strategy is simple_byte
 15125  046E  3A30               	xorlw	48	; case 48
 15126  046F  1903               	skipnz
 15127  0470  2C64               	goto	i1l1508
 15128  0471  2C72               	goto	i1l4072
 15129  0472                     i1l4072:
 15130                           
 15131                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 15132  0472  0820               	movf	sprintf@f,w
 15133  0473  0084               	movwf	4
 15134  0474  0821               	movf	sprintf@f+1,w
 15135  0475  0085               	movwf	5
 15136  0476  0800               	movf	0,w	;code access
 15137  0477  3188  2033  3184   	fcall	_isdigit
 15138  047A  1C03               	btfss	3,0
 15139  047B  2C7D               	goto	u332_21
 15140  047C  2C7E               	goto	u332_20
 15141  047D                     u332_21:
 15142  047D  2CB1               	goto	i1l4086
 15143  047E                     u332_20:
 15144  047E                     i1l4074:
 15145                           
 15146                           ;doprnt.c: 615: width = 0;
 15147  047E  0020               	movlb	0	; select bank0
 15148  047F  01B1               	clrf	sprintf@width
 15149  0480  01B2               	clrf	sprintf@width+1
 15150  0481                     i1l4076:
 15151                           
 15152                           ;doprnt.c: 617: width *= 10;
 15153  0481  300A               	movlw	10
 15154  0482  00F0               	movwf	___wmul@multiplier
 15155  0483  3000               	movlw	0
 15156  0484  00F1               	movwf	___wmul@multiplier+1
 15157  0485  0020               	movlb	0	; select bank0
 15158  0486  0832               	movf	sprintf@width+1,w
 15159  0487  00F3               	movwf	___wmul@multiplicand+1
 15160  0488  0831               	movf	sprintf@width,w
 15161  0489  00F2               	movwf	___wmul@multiplicand
 15162  048A  3189  214A  3184   	fcall	___wmul
 15163  048D  0871               	movf	?___wmul+1,w
 15164  048E  0020               	movlb	0	; select bank0
 15165  048F  00B2               	movwf	sprintf@width+1
 15166  0490  0870               	movf	?___wmul,w
 15167  0491  00B1               	movwf	sprintf@width
 15168  0492                     i1l4078:
 15169                           
 15170                           ;doprnt.c: 618: width += *f++ - '0';
 15171  0492  0820               	movf	sprintf@f,w
 15172  0493  0084               	movwf	4
 15173  0494  0821               	movf	sprintf@f+1,w
 15174  0495  0085               	movwf	5
 15175  0496  0800               	movf	0,w	;code access
 15176  0497  3ED0               	addlw	208
 15177  0498  00A8               	movwf	??_sprintf
 15178  0499  30FF               	movlw	255
 15179  049A  1803               	skipnc
 15180  049B  3000               	movlw	0
 15181  049C  00A9               	movwf	??_sprintf+1
 15182  049D  0828               	movf	??_sprintf,w
 15183  049E  07B1               	addwf	sprintf@width,f
 15184  049F  0829               	movf	??_sprintf+1,w
 15185  04A0  3DB2               	addwfc	sprintf@width+1,f
 15186  04A1                     i1l4080:
 15187  04A1  3001               	movlw	1
 15188  04A2  07A0               	addwf	sprintf@f,f
 15189  04A3  3000               	movlw	0
 15190  04A4  3DA1               	addwfc	sprintf@f+1,f
 15191  04A5                     i1l4082:
 15192                           
 15193                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 15194  04A5  0820               	movf	sprintf@f,w
 15195  04A6  0084               	movwf	4
 15196  04A7  0821               	movf	sprintf@f+1,w
 15197  04A8  0085               	movwf	5
 15198  04A9  0800               	movf	0,w	;code access
 15199  04AA  3188  2033  3184   	fcall	_isdigit
 15200  04AD  1803               	btfsc	3,0
 15201  04AE  2CB0               	goto	u333_21
 15202  04AF  2CB1               	goto	u333_20
 15203  04B0                     u333_21:
 15204  04B0  2C81               	goto	i1l4076
 15205  04B1                     u333_20:
 15206  04B1                     i1l4086:
 15207  04B1  0020               	movlb	0	; select bank0
 15208  04B2  0821               	movf	sprintf@f+1,w
 15209  04B3  00A9               	movwf	??_sprintf+1
 15210  04B4  0820               	movf	sprintf@f,w
 15211  04B5  00A8               	movwf	??_sprintf
 15212  04B6  0AA0               	incf	sprintf@f,f
 15213  04B7  1903               	skipnz
 15214  04B8  0AA1               	incf	sprintf@f+1,f
 15215  04B9  0828               	movf	??_sprintf,w
 15216  04BA  0084               	movwf	4
 15217  04BB  0829               	movf	??_sprintf+1,w
 15218  04BC  0085               	movwf	5
 15219  04BD  0800               	movf	0,w	;code access
 15220  04BE  00B3               	movwf	sprintf@c
 15221                           
 15222                           ; Switch size 1, requested type "simple"
 15223                           ; Number of cases is 3, Range of values is 0 to 105
 15224                           ; switch strategies available:
 15225                           ; Name         Instructions Cycles
 15226                           ; simple_byte           10     6 (average)
 15227                           ; direct_byte          218     6 (fixed)
 15228                           ; jumptable            260     6 (fixed)
 15229                           ;	Chosen strategy is simple_byte
 15230  04BF  3A00               	xorlw	0	; case 0
 15231  04C0  1903               	skipnz
 15232  04C1  2DDF               	goto	i1l4162
 15233  04C2  3A64               	xorlw	100	; case 100
 15234  04C3  1903               	skipnz
 15235  04C4  2CC9               	goto	i1l4088
 15236  04C5  3A0D               	xorlw	13	; case 105
 15237  04C6  1903               	skipnz
 15238  04C7  2CC9               	goto	i1l4088
 15239  04C8  2DCB               	goto	i1l4160
 15240  04C9                     i1l4088:
 15241                           
 15242                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 15243  04C9  082C               	movf	sprintf@ap,w
 15244  04CA  0086               	movwf	6
 15245  04CB  0187               	clrf	7
 15246  04CC  3F40               	moviw [0]fsr1
 15247  04CD  00AE               	movwf	sprintf@val
 15248  04CE  3F41               	moviw [1]fsr1
 15249  04CF  00AF               	movwf	sprintf@val+1
 15250  04D0                     i1l4090:
 15251  04D0  3002               	movlw	2
 15252  04D1  00A8               	movwf	??_sprintf
 15253  04D2  0828               	movf	??_sprintf,w
 15254  04D3  07AC               	addwf	sprintf@ap,f
 15255  04D4                     i1l4092:
 15256                           
 15257                           ;doprnt.c: 1287: if((int)val < 0) {
 15258  04D4  1FAF               	btfss	sprintf@val+1,7
 15259  04D5  2CD7               	goto	u334_21
 15260  04D6  2CD8               	goto	u334_20
 15261  04D7                     u334_21:
 15262  04D7  2CE1               	goto	i1l4098
 15263  04D8                     u334_20:
 15264  04D8                     i1l4094:
 15265                           
 15266                           ;doprnt.c: 1288: flag |= 0x03;
 15267  04D8  3003               	movlw	3
 15268  04D9  00A8               	movwf	??_sprintf
 15269  04DA  0828               	movf	??_sprintf,w
 15270  04DB  04B0               	iorwf	sprintf@flag,f
 15271  04DC                     i1l4096:
 15272                           
 15273                           ;doprnt.c: 1289: val = -val;
 15274  04DC  09AE               	comf	sprintf@val,f
 15275  04DD  09AF               	comf	sprintf@val+1,f
 15276  04DE  0AAE               	incf	sprintf@val,f
 15277  04DF  1903               	skipnz
 15278  04E0  0AAF               	incf	sprintf@val+1,f
 15279  04E1                     i1l4098:
 15280                           
 15281                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 15282  04E1  01B3               	clrf	sprintf@c
 15283  04E2  0AB3               	incf	sprintf@c,f
 15284  04E3                     i1l4104:
 15285                           
 15286                           ;doprnt.c: 1332: if(val < dpowers[c])
 15287  04E3  0833               	movf	sprintf@c,w
 15288  04E4  00A8               	movwf	??_sprintf
 15289  04E5  01A9               	clrf	??_sprintf+1
 15290  04E6  35A8               	lslf	??_sprintf,f
 15291  04E7  0DA9               	rlf	??_sprintf+1,f
 15292  04E8  3000               	movlw	low (_dpowers| (0+32768))
 15293  04E9  0728               	addwf	??_sprintf,w
 15294  04EA  0084               	movwf	4
 15295  04EB  3098               	movlw	high (_dpowers| (0+32768))
 15296  04EC  3D29               	addwfc	??_sprintf+1,w
 15297  04ED  0085               	movwf	5
 15298  04EE  3F00               	moviw [0]fsr0
 15299  04EF  00AA               	movwf	??_sprintf+2
 15300  04F0  3F01               	moviw [1]fsr0
 15301  04F1  00AB               	movwf	??_sprintf+3
 15302  04F2  082B               	movf	??_sprintf+3,w
 15303  04F3  022F               	subwf	sprintf@val+1,w
 15304  04F4  1D03               	skipz
 15305  04F5  2CF8               	goto	u335_25
 15306  04F6  082A               	movf	??_sprintf+2,w
 15307  04F7  022E               	subwf	sprintf@val,w
 15308  04F8                     u335_25:
 15309  04F8  1803               	skipnc
 15310  04F9  2CFB               	goto	u335_21
 15311  04FA  2CFC               	goto	u335_20
 15312  04FB                     u335_21:
 15313  04FB  2CFD               	goto	i1l4108
 15314  04FC                     u335_20:
 15315  04FC  2D07               	goto	i1l4110
 15316  04FD                     i1l4108:
 15317  04FD  3001               	movlw	1
 15318  04FE  00A8               	movwf	??_sprintf
 15319  04FF  0828               	movf	??_sprintf,w
 15320  0500  07B3               	addwf	sprintf@c,f
 15321  0501  3005               	movlw	5
 15322  0502  0633               	xorwf	sprintf@c,w
 15323  0503  1D03               	btfss	3,2
 15324  0504  2D06               	goto	u336_21
 15325  0505  2D07               	goto	u336_20
 15326  0506                     u336_21:
 15327  0506  2CE3               	goto	i1l4104
 15328  0507                     u336_20:
 15329  0507                     i1l4110:
 15330                           
 15331                           ;doprnt.c: 1371: if(width && flag & 0x03)
 15332  0507  0831               	movf	sprintf@width,w
 15333  0508  0432               	iorwf	sprintf@width+1,w
 15334  0509  1903               	btfsc	3,2
 15335  050A  2D0C               	goto	u337_21
 15336  050B  2D0D               	goto	u337_20
 15337  050C                     u337_21:
 15338  050C  2D17               	goto	i1l1526
 15339  050D                     u337_20:
 15340  050D                     i1l4112:
 15341  050D  0830               	movf	sprintf@flag,w
 15342  050E  3903               	andlw	3
 15343  050F  1903               	btfsc	3,2
 15344  0510  2D12               	goto	u338_21
 15345  0511  2D13               	goto	u338_20
 15346  0512                     u338_21:
 15347  0512  2D17               	goto	i1l1526
 15348  0513                     u338_20:
 15349  0513                     i1l4114:
 15350                           
 15351                           ;doprnt.c: 1372: width--;
 15352  0513  30FF               	movlw	255
 15353  0514  07B1               	addwf	sprintf@width,f
 15354  0515  30FF               	movlw	255
 15355  0516  3DB2               	addwfc	sprintf@width+1,f
 15356  0517                     i1l1526:
 15357                           
 15358                           ;doprnt.c: 1407: if(width > c)
 15359  0517  0832               	movf	sprintf@width+1,w
 15360  0518  3A80               	xorlw	128
 15361  0519  3C80               	sublw	128
 15362  051A  1D03               	skipz
 15363  051B  2D1E               	goto	u339_25
 15364  051C  0831               	movf	sprintf@width,w
 15365  051D  0233               	subwf	sprintf@c,w
 15366  051E                     u339_25:
 15367  051E  1803               	skipnc
 15368  051F  2D21               	goto	u339_21
 15369  0520  2D22               	goto	u339_20
 15370  0521                     u339_21:
 15371  0521  2D2B               	goto	i1l4118
 15372  0522                     u339_20:
 15373  0522                     i1l4116:
 15374                           
 15375                           ;doprnt.c: 1408: width -= c;
 15376  0522  0020               	movlb	0	; select bank0
 15377  0523  0833               	movf	sprintf@c,w
 15378  0524  00A8               	movwf	??_sprintf
 15379  0525  01A9               	clrf	??_sprintf+1
 15380  0526  0828               	movf	??_sprintf,w
 15381  0527  02B1               	subwf	sprintf@width,f
 15382  0528  0829               	movf	??_sprintf+1,w
 15383  0529  3BB2               	subwfb	sprintf@width+1,f
 15384  052A  2D2E               	goto	i1l4120
 15385  052B                     i1l4118:
 15386                           
 15387                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 15388  052B  0020               	movlb	0	; select bank0
 15389  052C  01B1               	clrf	sprintf@width
 15390  052D  01B2               	clrf	sprintf@width+1
 15391  052E                     i1l4120:
 15392                           
 15393                           ;doprnt.c: 1413: if(flag & 0x04) {
 15394  052E  1D30               	btfss	sprintf@flag,2
 15395  052F  2D31               	goto	u340_21
 15396  0530  2D32               	goto	u340_20
 15397  0531                     u340_21:
 15398  0531  2D5F               	goto	i1l4136
 15399  0532                     u340_20:
 15400  0532                     i1l4122:
 15401                           
 15402                           ;doprnt.c: 1418: if(flag & 0x03)
 15403  0532  0830               	movf	sprintf@flag,w
 15404  0533  3903               	andlw	3
 15405  0534  1903               	btfsc	3,2
 15406  0535  2D37               	goto	u341_21
 15407  0536  2D38               	goto	u341_20
 15408  0537                     u341_21:
 15409  0537  2D43               	goto	i1l4128
 15410  0538                     u341_20:
 15411  0538                     i1l4124:
 15412                           
 15413                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 15414  0538  302D               	movlw	45
 15415  0539  00A8               	movwf	??_sprintf
 15416  053A  0834               	movf	sprintf@sp,w
 15417  053B  0086               	movwf	6
 15418  053C  0187               	clrf	7
 15419  053D  0828               	movf	??_sprintf,w
 15420  053E  0081               	movwf	1
 15421  053F                     i1l4126:
 15422  053F  3001               	movlw	1
 15423  0540  00A8               	movwf	??_sprintf
 15424  0541  0828               	movf	??_sprintf,w
 15425  0542  07B4               	addwf	sprintf@sp,f
 15426  0543                     i1l4128:
 15427                           
 15428                           ;doprnt.c: 1441: if(width)
 15429  0543  0831               	movf	sprintf@width,w
 15430  0544  0432               	iorwf	sprintf@width+1,w
 15431  0545  1903               	btfsc	3,2
 15432  0546  2D48               	goto	u342_21
 15433  0547  2D49               	goto	u342_20
 15434  0548                     u342_21:
 15435  0548  2D8B               	goto	i1l4150
 15436  0549                     u342_20:
 15437  0549                     i1l4130:
 15438                           
 15439                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 15440  0549  3030               	movlw	48
 15441  054A  00A8               	movwf	??_sprintf
 15442  054B  0834               	movf	sprintf@sp,w
 15443  054C  0086               	movwf	6
 15444  054D  0187               	clrf	7
 15445  054E  0828               	movf	??_sprintf,w
 15446  054F  0081               	movwf	1
 15447  0550                     i1l4132:
 15448  0550  3001               	movlw	1
 15449  0551  00A8               	movwf	??_sprintf
 15450  0552  0828               	movf	??_sprintf,w
 15451  0553  07B4               	addwf	sprintf@sp,f
 15452  0554                     i1l4134:
 15453                           
 15454                           ;doprnt.c: 1444: while(--width);
 15455  0554  30FF               	movlw	255
 15456  0555  07B1               	addwf	sprintf@width,f
 15457  0556  30FF               	movlw	255
 15458  0557  3DB2               	addwfc	sprintf@width+1,f
 15459  0558  0831               	movf	sprintf@width,w
 15460  0559  0432               	iorwf	sprintf@width+1,w
 15461  055A  1D03               	btfss	3,2
 15462  055B  2D5D               	goto	u343_21
 15463  055C  2D5E               	goto	u343_20
 15464  055D                     u343_21:
 15465  055D  2D49               	goto	i1l4130
 15466  055E                     u343_20:
 15467  055E  2D8B               	goto	i1l4150
 15468  055F                     i1l4136:
 15469                           
 15470                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 15471  055F  0831               	movf	sprintf@width,w
 15472  0560  0432               	iorwf	sprintf@width+1,w
 15473  0561  1903               	btfsc	3,2
 15474  0562  2D64               	goto	u344_21
 15475  0563  2D65               	goto	u344_20
 15476  0564                     u344_21:
 15477  0564  2D7A               	goto	i1l4144
 15478  0565                     u344_20:
 15479  0565                     i1l4138:
 15480                           
 15481                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 15482  0565  3020               	movlw	32
 15483  0566  00A8               	movwf	??_sprintf
 15484  0567  0834               	movf	sprintf@sp,w
 15485  0568  0086               	movwf	6
 15486  0569  0187               	clrf	7
 15487  056A  0828               	movf	??_sprintf,w
 15488  056B  0081               	movwf	1
 15489  056C                     i1l4140:
 15490  056C  3001               	movlw	1
 15491  056D  00A8               	movwf	??_sprintf
 15492  056E  0828               	movf	??_sprintf,w
 15493  056F  07B4               	addwf	sprintf@sp,f
 15494  0570                     i1l4142:
 15495                           
 15496                           ;doprnt.c: 1457: while(--width);
 15497  0570  30FF               	movlw	255
 15498  0571  07B1               	addwf	sprintf@width,f
 15499  0572  30FF               	movlw	255
 15500  0573  3DB2               	addwfc	sprintf@width+1,f
 15501  0574  0831               	movf	sprintf@width,w
 15502  0575  0432               	iorwf	sprintf@width+1,w
 15503  0576  1D03               	btfss	3,2
 15504  0577  2D79               	goto	u345_21
 15505  0578  2D7A               	goto	u345_20
 15506  0579                     u345_21:
 15507  0579  2D65               	goto	i1l4138
 15508  057A                     u345_20:
 15509  057A                     i1l4144:
 15510                           
 15511                           ;doprnt.c: 1464: if(flag & 0x03)
 15512  057A  0830               	movf	sprintf@flag,w
 15513  057B  3903               	andlw	3
 15514  057C  1903               	btfsc	3,2
 15515  057D  2D7F               	goto	u346_21
 15516  057E  2D80               	goto	u346_20
 15517  057F                     u346_21:
 15518  057F  2D8B               	goto	i1l4150
 15519  0580                     u346_20:
 15520  0580                     i1l4146:
 15521                           
 15522                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 15523  0580  302D               	movlw	45
 15524  0581  00A8               	movwf	??_sprintf
 15525  0582  0834               	movf	sprintf@sp,w
 15526  0583  0086               	movwf	6
 15527  0584  0187               	clrf	7
 15528  0585  0828               	movf	??_sprintf,w
 15529  0586  0081               	movwf	1
 15530  0587                     i1l4148:
 15531  0587  3001               	movlw	1
 15532  0588  00A8               	movwf	??_sprintf
 15533  0589  0828               	movf	??_sprintf,w
 15534  058A  07B4               	addwf	sprintf@sp,f
 15535  058B                     i1l4150:
 15536                           
 15537                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 15538  058B  0833               	movf	sprintf@c,w
 15539  058C  00A8               	movwf	??_sprintf
 15540  058D  0828               	movf	??_sprintf,w
 15541  058E  00AD               	movwf	sprintf@prec
 15542                           
 15543                           ;doprnt.c: 1500: while(prec--) {
 15544  058F  2DC2               	goto	i1l4158
 15545  0590                     i1l4152:
 15546                           
 15547                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 15548  0590  300A               	movlw	10
 15549  0591  00F8               	movwf	___lwmod@divisor
 15550  0592  3000               	movlw	0
 15551  0593  00F9               	movwf	___lwmod@divisor+1
 15552  0594  082D               	movf	sprintf@prec,w
 15553  0595  00A8               	movwf	??_sprintf
 15554  0596  01A9               	clrf	??_sprintf+1
 15555  0597  35A8               	lslf	??_sprintf,f
 15556  0598  0DA9               	rlf	??_sprintf+1,f
 15557  0599  3000               	movlw	low (_dpowers| (0+32768))
 15558  059A  0728               	addwf	??_sprintf,w
 15559  059B  0084               	movwf	4
 15560  059C  3098               	movlw	high (_dpowers| (0+32768))
 15561  059D  3D29               	addwfc	??_sprintf+1,w
 15562  059E  0085               	movwf	5
 15563  059F  3F00               	moviw [0]fsr0
 15564  05A0  00F0               	movwf	___lwdiv@divisor
 15565  05A1  3F01               	moviw [1]fsr0
 15566  05A2  00F1               	movwf	___lwdiv@divisor+1
 15567  05A3  082F               	movf	sprintf@val+1,w
 15568  05A4  00F3               	movwf	___lwdiv@dividend+1
 15569  05A5  082E               	movf	sprintf@val,w
 15570  05A6  00F2               	movwf	___lwdiv@dividend
 15571  05A7  318A  22D6  3184   	fcall	___lwdiv
 15572  05AA  0871               	movf	?___lwdiv+1,w
 15573  05AB  00FB               	movwf	___lwmod@dividend+1
 15574  05AC  0870               	movf	?___lwdiv,w
 15575  05AD  00FA               	movwf	___lwmod@dividend
 15576  05AE  3189  21FA  3184   	fcall	___lwmod
 15577  05B1  0878               	movf	?___lwmod,w
 15578  05B2  3E30               	addlw	48
 15579  05B3  0020               	movlb	0	; select bank0
 15580  05B4  00AA               	movwf	??_sprintf+2
 15581  05B5  082A               	movf	??_sprintf+2,w
 15582  05B6  00B3               	movwf	sprintf@c
 15583  05B7                     i1l4154:
 15584                           
 15585                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 15586  05B7  0833               	movf	sprintf@c,w
 15587  05B8  00A8               	movwf	??_sprintf
 15588  05B9  0834               	movf	sprintf@sp,w
 15589  05BA  0086               	movwf	6
 15590  05BB  0187               	clrf	7
 15591  05BC  0828               	movf	??_sprintf,w
 15592  05BD  0081               	movwf	1
 15593  05BE                     i1l4156:
 15594  05BE  3001               	movlw	1
 15595  05BF  00A8               	movwf	??_sprintf
 15596  05C0  0828               	movf	??_sprintf,w
 15597  05C1  07B4               	addwf	sprintf@sp,f
 15598  05C2                     i1l4158:
 15599  05C2  30FF               	movlw	255
 15600  05C3  00A8               	movwf	??_sprintf
 15601  05C4  0828               	movf	??_sprintf,w
 15602  05C5  07AD               	addwf	sprintf@prec,f
 15603  05C6  0A2D               	incf	sprintf@prec,w
 15604  05C7  1D03               	btfss	3,2
 15605  05C8  2DCA               	goto	u347_21
 15606  05C9  2DCB               	goto	u347_20
 15607  05CA                     u347_21:
 15608  05CA  2D90               	goto	i1l4152
 15609  05CB                     u347_20:
 15610  05CB                     i1l4160:
 15611  05CB  0821               	movf	sprintf@f+1,w
 15612  05CC  00A9               	movwf	??_sprintf+1
 15613  05CD  0820               	movf	sprintf@f,w
 15614  05CE  00A8               	movwf	??_sprintf
 15615  05CF  0AA0               	incf	sprintf@f,f
 15616  05D0  1903               	skipnz
 15617  05D1  0AA1               	incf	sprintf@f+1,f
 15618  05D2  0828               	movf	??_sprintf,w
 15619  05D3  0084               	movwf	4
 15620  05D4  0829               	movf	??_sprintf+1,w
 15621  05D5  0085               	movwf	5
 15622  05D6  0800               	movf	0,w	;code access
 15623  05D7  00AA               	movwf	??_sprintf+2
 15624  05D8  082A               	movf	??_sprintf+2,w
 15625  05D9  00B3               	movwf	sprintf@c
 15626  05DA  0833               	movf	sprintf@c,w
 15627  05DB  1D03               	btfss	3,2
 15628  05DC  2DDE               	goto	u348_21
 15629  05DD  2DDF               	goto	u348_20
 15630  05DE                     u348_21:
 15631  05DE  2C4E               	goto	i1l4058
 15632  05DF                     u348_20:
 15633  05DF                     i1l4162:
 15634                           
 15635                           ;doprnt.c: 1564: *sp = 0;
 15636  05DF  0834               	movf	sprintf@sp,w
 15637  05E0  0086               	movwf	6
 15638  05E1  0187               	clrf	7
 15639  05E2  0181               	clrf	1
 15640  05E3                     i1l1543:
 15641  05E3  0008               	return
 15642  05E4                     __end_of_sprintf:
 15643                           
 15644                           	psect	text45
 15645  0833                     __ptext45:	
 15646 ;; *************** function _isdigit *****************
 15647 ;; Defined at:
 15648 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 15649 ;; Parameters:    Size  Location     Type
 15650 ;;  c               1    wreg     unsigned char 
 15651 ;; Auto vars:     Size  Location     Type
 15652 ;;  c               1    1[COMMON] unsigned char 
 15653 ;; Return value:  Size  Location     Type
 15654 ;;		None               void
 15655 ;; Registers used:
 15656 ;;		wreg, status,2, status,0
 15657 ;; Tracked objects:
 15658 ;;		On entry : 0/0
 15659 ;;		On exit  : 0/0
 15660 ;;		Unchanged: 0/0
 15661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15665 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15666 ;;Total ram usage:        2 bytes
 15667 ;; Hardware stack levels used:    1
 15668 ;; This function calls:
 15669 ;;		Nothing
 15670 ;; This function is called by:
 15671 ;;		_sprintf
 15672 ;; This function uses a non-reentrant model
 15673 ;;
 15674                           
 15675                           
 15676                           ;psect for function _isdigit
 15677  0833                     _isdigit:
 15678                           
 15679                           ;incstack = 0
 15680                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 15681                           ;isdigit@c stored from wreg
 15682  0833  00F1               	movwf	isdigit@c
 15683  0834                     i1l3852:
 15684  0834  01F0               	clrf	_isdigit$2903
 15685  0835                     i1l3854:
 15686  0835  303A               	movlw	58
 15687  0836  0271               	subwf	isdigit@c,w
 15688  0837  1803               	skipnc
 15689  0838  283A               	goto	u274_21
 15690  0839  283B               	goto	u274_20
 15691  083A                     u274_21:
 15692  083A  2843               	goto	i1l3860
 15693  083B                     u274_20:
 15694  083B                     i1l3856:
 15695  083B  3030               	movlw	48
 15696  083C  0271               	subwf	isdigit@c,w
 15697  083D  1C03               	skipc
 15698  083E  2840               	goto	u275_21
 15699  083F  2841               	goto	u275_20
 15700  0840                     u275_21:
 15701  0840  2843               	goto	i1l3860
 15702  0841                     u275_20:
 15703  0841                     i1l3858:
 15704  0841  01F0               	clrf	_isdigit$2903
 15705  0842  0AF0               	incf	_isdigit$2903,f
 15706  0843                     i1l3860:
 15707  0843  0C70               	rrf	_isdigit$2903,w
 15708  0844                     i1l2000:
 15709  0844  0008               	return
 15710  0845                     __end_of_isdigit:
 15711                           
 15712                           	psect	text46
 15713  094A                     __ptext46:	
 15714 ;; *************** function ___wmul *****************
 15715 ;; Defined at:
 15716 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 15717 ;; Parameters:    Size  Location     Type
 15718 ;;  multiplier      2    0[COMMON] unsigned int 
 15719 ;;  multiplicand    2    2[COMMON] unsigned int 
 15720 ;; Auto vars:     Size  Location     Type
 15721 ;;  product         2    4[COMMON] unsigned int 
 15722 ;; Return value:  Size  Location     Type
 15723 ;;                  2    0[COMMON] unsigned int 
 15724 ;; Registers used:
 15725 ;;		wreg, status,2, status,0
 15726 ;; Tracked objects:
 15727 ;;		On entry : 0/0
 15728 ;;		On exit  : 0/0
 15729 ;;		Unchanged: 0/0
 15730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15731 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15732 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15734 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15735 ;;Total ram usage:        6 bytes
 15736 ;; Hardware stack levels used:    1
 15737 ;; This function calls:
 15738 ;;		Nothing
 15739 ;; This function is called by:
 15740 ;;		_monitoring_ISR
 15741 ;;		_sprintf
 15742 ;;		_map
 15743 ;; This function uses a non-reentrant model
 15744 ;;
 15745                           
 15746                           
 15747                           ;psect for function ___wmul
 15748  094A                     ___wmul:
 15749  094A                     i1l3864:	
 15750                           ;incstack = 0
 15751                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 15752                           
 15753  094A  01F4               	clrf	___wmul@product
 15754  094B  01F5               	clrf	___wmul@product+1
 15755  094C                     i1l3866:
 15756  094C  1C70               	btfss	___wmul@multiplier,0
 15757  094D  294F               	goto	u276_21
 15758  094E  2950               	goto	u276_20
 15759  094F                     u276_21:
 15760  094F  2954               	goto	i1l1547
 15761  0950                     u276_20:
 15762  0950                     i1l3868:
 15763  0950  0872               	movf	___wmul@multiplicand,w
 15764  0951  07F4               	addwf	___wmul@product,f
 15765  0952  0873               	movf	___wmul@multiplicand+1,w
 15766  0953  3DF5               	addwfc	___wmul@product+1,f
 15767  0954                     i1l1547:
 15768  0954  3001               	movlw	1
 15769  0955                     u277_25:
 15770  0955  35F2               	lslf	___wmul@multiplicand,f
 15771  0956  0DF3               	rlf	___wmul@multiplicand+1,f
 15772  0957  0B89               	decfsz	9,f
 15773  0958  2955               	goto	u277_25
 15774  0959                     i1l3870:
 15775  0959  3001               	movlw	1
 15776  095A                     u278_25:
 15777  095A  36F1               	lsrf	___wmul@multiplier+1,f
 15778  095B  0CF0               	rrf	___wmul@multiplier,f
 15779  095C  0B89               	decfsz	9,f
 15780  095D  295A               	goto	u278_25
 15781  095E                     i1l3872:
 15782  095E  0870               	movf	___wmul@multiplier,w
 15783  095F  0471               	iorwf	___wmul@multiplier+1,w
 15784  0960  1D03               	btfss	3,2
 15785  0961  2963               	goto	u279_21
 15786  0962  2964               	goto	u279_20
 15787  0963                     u279_21:
 15788  0963  294C               	goto	i1l3866
 15789  0964                     u279_20:
 15790  0964                     i1l3874:
 15791  0964  0875               	movf	___wmul@product+1,w
 15792  0965  00F1               	movwf	?___wmul+1
 15793  0966  0874               	movf	___wmul@product,w
 15794  0967  00F0               	movwf	?___wmul
 15795  0968                     i1l1549:
 15796  0968  0008               	return
 15797  0969                     __end_of___wmul:
 15798                           
 15799                           	psect	text47
 15800  09FA                     __ptext47:	
 15801 ;; *************** function ___lwmod *****************
 15802 ;; Defined at:
 15803 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 15804 ;; Parameters:    Size  Location     Type
 15805 ;;  divisor         2    8[COMMON] unsigned int 
 15806 ;;  dividend        2   10[COMMON] unsigned int 
 15807 ;; Auto vars:     Size  Location     Type
 15808 ;;  counter         1   13[COMMON] unsigned char 
 15809 ;; Return value:  Size  Location     Type
 15810 ;;                  2    8[COMMON] unsigned int 
 15811 ;; Registers used:
 15812 ;;		wreg, status,2, status,0
 15813 ;; Tracked objects:
 15814 ;;		On entry : 0/0
 15815 ;;		On exit  : 0/0
 15816 ;;		Unchanged: 0/0
 15817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15818 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15820 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15821 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15822 ;;Total ram usage:        6 bytes
 15823 ;; Hardware stack levels used:    1
 15824 ;; This function calls:
 15825 ;;		Nothing
 15826 ;; This function is called by:
 15827 ;;		_sprintf
 15828 ;; This function uses a non-reentrant model
 15829 ;;
 15830                           
 15831                           
 15832                           ;psect for function ___lwmod
 15833  09FA                     ___lwmod:
 15834  09FA                     i1l3904:	
 15835                           ;incstack = 0
 15836                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 15837                           
 15838  09FA  0878               	movf	___lwmod@divisor,w
 15839  09FB  0479               	iorwf	___lwmod@divisor+1,w
 15840  09FC  1903               	btfsc	3,2
 15841  09FD  29FF               	goto	u287_21
 15842  09FE  2A00               	goto	u287_20
 15843  09FF                     u287_21:
 15844  09FF  2A29               	goto	i1l3922
 15845  0A00                     u287_20:
 15846  0A00                     i1l3906:
 15847  0A00  01FD               	clrf	___lwmod@counter
 15848  0A01  0AFD               	incf	___lwmod@counter,f
 15849  0A02  2A0C               	goto	i1l3912
 15850  0A03                     i1l3908:
 15851  0A03  3001               	movlw	1
 15852  0A04                     u288_25:
 15853  0A04  35F8               	lslf	___lwmod@divisor,f
 15854  0A05  0DF9               	rlf	___lwmod@divisor+1,f
 15855  0A06  0B89               	decfsz	9,f
 15856  0A07  2A04               	goto	u288_25
 15857  0A08                     i1l3910:
 15858  0A08  3001               	movlw	1
 15859  0A09  00FC               	movwf	??___lwmod
 15860  0A0A  087C               	movf	??___lwmod,w
 15861  0A0B  07FD               	addwf	___lwmod@counter,f
 15862  0A0C                     i1l3912:
 15863  0A0C  1FF9               	btfss	___lwmod@divisor+1,7
 15864  0A0D  2A0F               	goto	u289_21
 15865  0A0E  2A10               	goto	u289_20
 15866  0A0F                     u289_21:
 15867  0A0F  2A03               	goto	i1l3908
 15868  0A10                     u289_20:
 15869  0A10                     i1l3914:
 15870  0A10  0879               	movf	___lwmod@divisor+1,w
 15871  0A11  027B               	subwf	___lwmod@dividend+1,w
 15872  0A12  1D03               	skipz
 15873  0A13  2A16               	goto	u290_25
 15874  0A14  0878               	movf	___lwmod@divisor,w
 15875  0A15  027A               	subwf	___lwmod@dividend,w
 15876  0A16                     u290_25:
 15877  0A16  1C03               	skipc
 15878  0A17  2A19               	goto	u290_21
 15879  0A18  2A1A               	goto	u290_20
 15880  0A19                     u290_21:
 15881  0A19  2A1E               	goto	i1l3918
 15882  0A1A                     u290_20:
 15883  0A1A                     i1l3916:
 15884  0A1A  0878               	movf	___lwmod@divisor,w
 15885  0A1B  02FA               	subwf	___lwmod@dividend,f
 15886  0A1C  0879               	movf	___lwmod@divisor+1,w
 15887  0A1D  3BFB               	subwfb	___lwmod@dividend+1,f
 15888  0A1E                     i1l3918:
 15889  0A1E  3001               	movlw	1
 15890  0A1F                     u291_25:
 15891  0A1F  36F9               	lsrf	___lwmod@divisor+1,f
 15892  0A20  0CF8               	rrf	___lwmod@divisor,f
 15893  0A21  0B89               	decfsz	9,f
 15894  0A22  2A1F               	goto	u291_25
 15895  0A23                     i1l3920:
 15896  0A23  3001               	movlw	1
 15897  0A24  02FD               	subwf	___lwmod@counter,f
 15898  0A25  1D03               	btfss	3,2
 15899  0A26  2A28               	goto	u292_21
 15900  0A27  2A29               	goto	u292_20
 15901  0A28                     u292_21:
 15902  0A28  2A10               	goto	i1l3914
 15903  0A29                     u292_20:
 15904  0A29                     i1l3922:
 15905  0A29  087B               	movf	___lwmod@dividend+1,w
 15906  0A2A  00F9               	movwf	?___lwmod+1
 15907  0A2B  087A               	movf	___lwmod@dividend,w
 15908  0A2C  00F8               	movwf	?___lwmod
 15909  0A2D                     i1l1829:
 15910  0A2D  0008               	return
 15911  0A2E                     __end_of___lwmod:
 15912                           
 15913                           	psect	text48
 15914  0AD6                     __ptext48:	
 15915 ;; *************** function ___lwdiv *****************
 15916 ;; Defined at:
 15917 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 15918 ;; Parameters:    Size  Location     Type
 15919 ;;  divisor         2    0[COMMON] unsigned int 
 15920 ;;  dividend        2    2[COMMON] unsigned int 
 15921 ;; Auto vars:     Size  Location     Type
 15922 ;;  quotient        2    5[COMMON] unsigned int 
 15923 ;;  counter         1    7[COMMON] unsigned char 
 15924 ;; Return value:  Size  Location     Type
 15925 ;;                  2    0[COMMON] unsigned int 
 15926 ;; Registers used:
 15927 ;;		wreg, status,2, status,0
 15928 ;; Tracked objects:
 15929 ;;		On entry : 0/0
 15930 ;;		On exit  : 0/0
 15931 ;;		Unchanged: 0/0
 15932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15933 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15934 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15935 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15936 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15937 ;;Total ram usage:        8 bytes
 15938 ;; Hardware stack levels used:    1
 15939 ;; This function calls:
 15940 ;;		Nothing
 15941 ;; This function is called by:
 15942 ;;		_sprintf
 15943 ;; This function uses a non-reentrant model
 15944 ;;
 15945                           
 15946                           
 15947                           ;psect for function ___lwdiv
 15948  0AD6                     ___lwdiv:
 15949  0AD6                     i1l3878:	
 15950                           ;incstack = 0
 15951                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 15952                           
 15953  0AD6  01F5               	clrf	___lwdiv@quotient
 15954  0AD7  01F6               	clrf	___lwdiv@quotient+1
 15955  0AD8                     i1l3880:
 15956  0AD8  0870               	movf	___lwdiv@divisor,w
 15957  0AD9  0471               	iorwf	___lwdiv@divisor+1,w
 15958  0ADA  1903               	btfsc	3,2
 15959  0ADB  2ADD               	goto	u280_21
 15960  0ADC  2ADE               	goto	u280_20
 15961  0ADD                     u280_21:
 15962  0ADD  2B0D               	goto	i1l3900
 15963  0ADE                     u280_20:
 15964  0ADE                     i1l3882:
 15965  0ADE  01F7               	clrf	___lwdiv@counter
 15966  0ADF  0AF7               	incf	___lwdiv@counter,f
 15967  0AE0  2AEA               	goto	i1l3888
 15968  0AE1                     i1l3884:
 15969  0AE1  3001               	movlw	1
 15970  0AE2                     u281_25:
 15971  0AE2  35F0               	lslf	___lwdiv@divisor,f
 15972  0AE3  0DF1               	rlf	___lwdiv@divisor+1,f
 15973  0AE4  0B89               	decfsz	9,f
 15974  0AE5  2AE2               	goto	u281_25
 15975  0AE6                     i1l3886:
 15976  0AE6  3001               	movlw	1
 15977  0AE7  00F4               	movwf	??___lwdiv
 15978  0AE8  0874               	movf	??___lwdiv,w
 15979  0AE9  07F7               	addwf	___lwdiv@counter,f
 15980  0AEA                     i1l3888:
 15981  0AEA  1FF1               	btfss	___lwdiv@divisor+1,7
 15982  0AEB  2AED               	goto	u282_21
 15983  0AEC  2AEE               	goto	u282_20
 15984  0AED                     u282_21:
 15985  0AED  2AE1               	goto	i1l3884
 15986  0AEE                     u282_20:
 15987  0AEE                     i1l3890:
 15988  0AEE  3001               	movlw	1
 15989  0AEF                     u283_25:
 15990  0AEF  35F5               	lslf	___lwdiv@quotient,f
 15991  0AF0  0DF6               	rlf	___lwdiv@quotient+1,f
 15992  0AF1  0B89               	decfsz	9,f
 15993  0AF2  2AEF               	goto	u283_25
 15994  0AF3  0871               	movf	___lwdiv@divisor+1,w
 15995  0AF4  0273               	subwf	___lwdiv@dividend+1,w
 15996  0AF5  1D03               	skipz
 15997  0AF6  2AF9               	goto	u284_25
 15998  0AF7  0870               	movf	___lwdiv@divisor,w
 15999  0AF8  0272               	subwf	___lwdiv@dividend,w
 16000  0AF9                     u284_25:
 16001  0AF9  1C03               	skipc
 16002  0AFA  2AFC               	goto	u284_21
 16003  0AFB  2AFD               	goto	u284_20
 16004  0AFC                     u284_21:
 16005  0AFC  2B02               	goto	i1l3896
 16006  0AFD                     u284_20:
 16007  0AFD                     i1l3892:
 16008  0AFD  0870               	movf	___lwdiv@divisor,w
 16009  0AFE  02F2               	subwf	___lwdiv@dividend,f
 16010  0AFF  0871               	movf	___lwdiv@divisor+1,w
 16011  0B00  3BF3               	subwfb	___lwdiv@dividend+1,f
 16012  0B01                     i1l3894:
 16013  0B01  1475               	bsf	___lwdiv@quotient,0
 16014  0B02                     i1l3896:
 16015  0B02  3001               	movlw	1
 16016  0B03                     u285_25:
 16017  0B03  36F1               	lsrf	___lwdiv@divisor+1,f
 16018  0B04  0CF0               	rrf	___lwdiv@divisor,f
 16019  0B05  0B89               	decfsz	9,f
 16020  0B06  2B03               	goto	u285_25
 16021  0B07                     i1l3898:
 16022  0B07  3001               	movlw	1
 16023  0B08  02F7               	subwf	___lwdiv@counter,f
 16024  0B09  1D03               	btfss	3,2
 16025  0B0A  2B0C               	goto	u286_21
 16026  0B0B  2B0D               	goto	u286_20
 16027  0B0C                     u286_21:
 16028  0B0C  2AEE               	goto	i1l3890
 16029  0B0D                     u286_20:
 16030  0B0D                     i1l3900:
 16031  0B0D  0876               	movf	___lwdiv@quotient+1,w
 16032  0B0E  00F1               	movwf	?___lwdiv+1
 16033  0B0F  0875               	movf	___lwdiv@quotient,w
 16034  0B10  00F0               	movwf	?___lwdiv
 16035  0B11                     i1l1819:
 16036  0B11  0008               	return
 16037  0B12                     __end_of___lwdiv:
 16038                           
 16039                           	psect	text49
 16040  09C6                     __ptext49:	
 16041 ;; *************** function _differenceBetweenTimePeriod *****************
 16042 ;; Defined at:
 16043 ;;		line 226 in file "main.c"
 16044 ;; Parameters:    Size  Location     Type
 16045 ;;  start           3    0[COMMON] struct Time
 16046 ;;  stop            3    3[COMMON] struct Time
 16047 ;;  diff            1    6[COMMON] PTR struct Time
 16048 ;;		 -> menuLCD_ISR@diff(3), 
 16049 ;; Auto vars:     Size  Location     Type
 16050 ;;		None
 16051 ;; Return value:  Size  Location     Type
 16052 ;;                  1    wreg      void 
 16053 ;; Registers used:
 16054 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16055 ;; Tracked objects:
 16056 ;;		On entry : 0/0
 16057 ;;		On exit  : 0/0
 16058 ;;		Unchanged: 0/0
 16059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16060 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16062 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16063 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16064 ;;Total ram usage:        8 bytes
 16065 ;; Hardware stack levels used:    1
 16066 ;; This function calls:
 16067 ;;		Nothing
 16068 ;; This function is called by:
 16069 ;;		_menuLCD_ISR
 16070 ;; This function uses a non-reentrant model
 16071 ;;
 16072                           
 16073                           
 16074                           ;psect for function _differenceBetweenTimePeriod
 16075  09C6                     _differenceBetweenTimePeriod:
 16076  09C6                     i1l4040:	
 16077                           ;incstack = 0
 16078                           ; Regs used in _differenceBetweenTimePeriod: [wreg+fsr1l+fsr1h+status,2+status,0]
 16079                           
 16080                           
 16081                           ;main.c: 229: while (stop.s > start.s) {
 16082  09C6  29CD               	goto	i1l4044
 16083  09C7                     i1l4042:
 16084                           
 16085                           ;main.c: 230: --start.m;
 16086  09C7  3001               	movlw	1
 16087  09C8  02F1               	subwf	differenceBetweenTimePeriod@start+1,f
 16088                           
 16089                           ;main.c: 231: start.s += 60;
 16090  09C9  303C               	movlw	60
 16091  09CA  00F7               	movwf	??_differenceBetweenTimePeriod
 16092  09CB  0877               	movf	??_differenceBetweenTimePeriod,w
 16093  09CC  07F2               	addwf	differenceBetweenTimePeriod@start+2,f
 16094  09CD                     i1l4044:
 16095  09CD  0875               	movf	differenceBetweenTimePeriod@stop+2,w
 16096  09CE  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 16097  09CF  1C03               	skipc
 16098  09D0  29D2               	goto	u329_21
 16099  09D1  29D3               	goto	u329_20
 16100  09D2                     u329_21:
 16101  09D2  29C7               	goto	i1l4042
 16102  09D3                     u329_20:
 16103  09D3                     i1l4046:
 16104                           
 16105                           ;main.c: 232: };main.c: 233: diff->s = start.s - stop.s;
 16106  09D3  0875               	movf	differenceBetweenTimePeriod@stop+2,w
 16107  09D4  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 16108  09D5  00F7               	movwf	??_differenceBetweenTimePeriod
 16109  09D6  0876               	movf	differenceBetweenTimePeriod@diff,w
 16110  09D7  3E02               	addlw	2
 16111  09D8  0086               	movwf	6
 16112  09D9  0187               	clrf	7
 16113  09DA  0877               	movf	??_differenceBetweenTimePeriod,w
 16114  09DB  0081               	movwf	1
 16115                           
 16116                           ;main.c: 234: while (stop.m > start.m) {
 16117  09DC  29E3               	goto	i1l4050
 16118  09DD                     i1l4048:
 16119                           
 16120                           ;main.c: 235: --start.h;
 16121  09DD  3001               	movlw	1
 16122  09DE  02F0               	subwf	differenceBetweenTimePeriod@start,f
 16123                           
 16124                           ;main.c: 236: start.m += 60;
 16125  09DF  303C               	movlw	60
 16126  09E0  00F7               	movwf	??_differenceBetweenTimePeriod
 16127  09E1  0877               	movf	??_differenceBetweenTimePeriod,w
 16128  09E2  07F1               	addwf	differenceBetweenTimePeriod@start+1,f
 16129  09E3                     i1l4050:
 16130  09E3  0874               	movf	differenceBetweenTimePeriod@stop+1,w
 16131  09E4  0271               	subwf	differenceBetweenTimePeriod@start+1,w
 16132  09E5  1C03               	skipc
 16133  09E6  29E8               	goto	u330_21
 16134  09E7  29E9               	goto	u330_20
 16135  09E8                     u330_21:
 16136  09E8  29DD               	goto	i1l4048
 16137  09E9                     u330_20:
 16138  09E9                     i1l4052:
 16139                           
 16140                           ;main.c: 237: };main.c: 238: diff->m = start.m - stop.m;
 16141  09E9  0874               	movf	differenceBetweenTimePeriod@stop+1,w
 16142  09EA  0271               	subwf	differenceBetweenTimePeriod@start+1,w
 16143  09EB  00F7               	movwf	??_differenceBetweenTimePeriod
 16144  09EC  0A76               	incf	differenceBetweenTimePeriod@diff,w
 16145  09ED  0086               	movwf	6
 16146  09EE  0187               	clrf	7
 16147  09EF  0877               	movf	??_differenceBetweenTimePeriod,w
 16148  09F0  0081               	movwf	1
 16149                           
 16150                           ;main.c: 239: diff->h = start.h - stop.h;
 16151  09F1  0873               	movf	differenceBetweenTimePeriod@stop,w
 16152  09F2  0270               	subwf	differenceBetweenTimePeriod@start,w
 16153  09F3  00F7               	movwf	??_differenceBetweenTimePeriod
 16154  09F4  0876               	movf	differenceBetweenTimePeriod@diff,w
 16155  09F5  0086               	movwf	6
 16156  09F6  0187               	clrf	7
 16157  09F7  0877               	movf	??_differenceBetweenTimePeriod,w
 16158  09F8  0081               	movwf	1
 16159  09F9                     i1l1098:
 16160  09F9  0008               	return
 16161  09FA                     __end_of_differenceBetweenTimePeriod:
 16162                           
 16163                           	psect	text50
 16164  177D                     __ptext50:	
 16165 ;; *************** function _TMR2_StartTimer *****************
 16166 ;; Defined at:
 16167 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 16168 ;; Parameters:    Size  Location     Type
 16169 ;;		None
 16170 ;; Auto vars:     Size  Location     Type
 16171 ;;		None
 16172 ;; Return value:  Size  Location     Type
 16173 ;;                  1    wreg      void 
 16174 ;; Registers used:
 16175 ;;		status,2, status,0, pclath, cstack
 16176 ;; Tracked objects:
 16177 ;;		On entry : 0/0
 16178 ;;		On exit  : 0/0
 16179 ;;		Unchanged: 0/0
 16180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16185 ;;Total ram usage:        0 bytes
 16186 ;; Hardware stack levels used:    1
 16187 ;; Hardware stack levels required when called:    1
 16188 ;; This function calls:
 16189 ;;		_TMR2_Start
 16190 ;; This function is called by:
 16191 ;;		_menuLCD_ISR
 16192 ;; This function uses a non-reentrant model
 16193 ;;
 16194                           
 16195                           
 16196                           ;psect for function _TMR2_StartTimer
 16197  177D                     _TMR2_StartTimer:
 16198  177D                     i1l3978:	
 16199                           ;incstack = 0
 16200                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
 16201                           
 16202                           
 16203                           ;tmr2.c: 108: TMR2_Start();
 16204  177D  3197  276E  3197   	fcall	_TMR2_Start
 16205  1780                     i1l761:
 16206  1780  0008               	return
 16207  1781                     __end_of_TMR2_StartTimer:
 16208                           
 16209                           	psect	text51
 16210  176E                     __ptext51:	
 16211 ;; *************** function _TMR2_Start *****************
 16212 ;; Defined at:
 16213 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 16214 ;; Parameters:    Size  Location     Type
 16215 ;;		None
 16216 ;; Auto vars:     Size  Location     Type
 16217 ;;		None
 16218 ;; Return value:  Size  Location     Type
 16219 ;;                  1    wreg      void 
 16220 ;; Registers used:
 16221 ;;		None
 16222 ;; Tracked objects:
 16223 ;;		On entry : 0/0
 16224 ;;		On exit  : 0/0
 16225 ;;		Unchanged: 0/0
 16226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16231 ;;Total ram usage:        0 bytes
 16232 ;; Hardware stack levels used:    1
 16233 ;; This function calls:
 16234 ;;		Nothing
 16235 ;; This function is called by:
 16236 ;;		_TMR2_StartTimer
 16237 ;; This function uses a non-reentrant model
 16238 ;;
 16239                           
 16240                           
 16241                           ;psect for function _TMR2_Start
 16242  176E                     _TMR2_Start:
 16243  176E                     i1l3848:	
 16244                           ;incstack = 0
 16245                           ; Regs used in _TMR2_Start: []
 16246                           
 16247                           
 16248                           ;tmr2.c: 103: T2CONbits.TMR2ON = 1;
 16249  176E  0025               	movlb	5	; select bank5
 16250  176F  178E               	bsf	14,7	;volatile
 16251  1770                     i1l758:
 16252  1770  0008               	return
 16253  1771                     __end_of_TMR2_Start:
 16254                           
 16255                           	psect	text52
 16256  176B                     __ptext52:	
 16257 ;; *************** function _PWM_Output_D4_Enable *****************
 16258 ;; Defined at:
 16259 ;;		line 242 in file "main.c"
 16260 ;; Parameters:    Size  Location     Type
 16261 ;;		None
 16262 ;; Auto vars:     Size  Location     Type
 16263 ;;		None
 16264 ;; Return value:  Size  Location     Type
 16265 ;;                  1    wreg      void 
 16266 ;; Registers used:
 16267 ;;		None
 16268 ;; Tracked objects:
 16269 ;;		On entry : 0/0
 16270 ;;		On exit  : 0/0
 16271 ;;		Unchanged: 0/0
 16272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16277 ;;Total ram usage:        0 bytes
 16278 ;; Hardware stack levels used:    1
 16279 ;; This function calls:
 16280 ;;		Nothing
 16281 ;; This function is called by:
 16282 ;;		_menuLCD_ISR
 16283 ;; This function uses a non-reentrant model
 16284 ;;
 16285                           
 16286                           
 16287                           ;psect for function _PWM_Output_D4_Enable
 16288  176B                     _PWM_Output_D4_Enable:
 16289  176B                     i1l4054:	
 16290                           ;incstack = 0
 16291                           ; Regs used in _PWM_Output_D4_Enable: []
 16292                           
 16293                           
 16294                           ;main.c: 243: PWM6EN = 1;
 16295  176B  0027               	movlb	7	; select bank7
 16296  176C  178E               	bsf	14,7	;volatile
 16297  176D                     i1l1101:
 16298  176D  0008               	return
 16299  176E                     __end_of_PWM_Output_D4_Enable:
 16300                           
 16301                           	psect	text53
 16302  0857                     __ptext53:	
 16303 ;; *************** function _LCDstr *****************
 16304 ;; Defined at:
 16305 ;;		line 206 in file "main.c"
 16306 ;; Parameters:    Size  Location     Type
 16307 ;;  p               1    wreg     PTR unsigned char 
 16308 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 16309 ;; Auto vars:     Size  Location     Type
 16310 ;;  p               1   11[COMMON] PTR unsigned char 
 16311 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 16312 ;;  c               1   10[COMMON] unsigned char 
 16313 ;; Return value:  Size  Location     Type
 16314 ;;                  1    wreg      void 
 16315 ;; Registers used:
 16316 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16317 ;; Tracked objects:
 16318 ;;		On entry : 0/0
 16319 ;;		On exit  : 0/0
 16320 ;;		Unchanged: 0/0
 16321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16323 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16324 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16325 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16326 ;;Total ram usage:        3 bytes
 16327 ;; Hardware stack levels used:    1
 16328 ;; Hardware stack levels required when called:    3
 16329 ;; This function calls:
 16330 ;;		_LCDchar
 16331 ;; This function is called by:
 16332 ;;		_menuLCD_ISR
 16333 ;; This function uses a non-reentrant model
 16334 ;;
 16335                           
 16336                           
 16337                           ;psect for function _LCDstr
 16338  0857                     _LCDstr:
 16339                           
 16340                           ;incstack = 0
 16341                           ; Regs used in _LCDstr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16342                           ;LCDstr@p stored from wreg
 16343  0857  00FB               	movwf	LCDstr@p
 16344  0858                     i1l4034:
 16345                           
 16346                           ;main.c: 208: unsigned char c;;main.c: 210: while((c = *p++)) LCDchar(c);
 16347  0858  285D               	goto	i1l4038
 16348  0859                     i1l4036:
 16349  0859  087A               	movf	LCDstr@c,w
 16350  085A  3197  27B1  3188   	fcall	_LCDchar
 16351  085D                     i1l4038:
 16352  085D  087B               	movf	LCDstr@p,w
 16353  085E  0086               	movwf	6
 16354  085F  0187               	clrf	7
 16355  0860  0AFB               	incf	LCDstr@p,f
 16356  0861  0801               	movf	1,w
 16357  0862  00F9               	movwf	??_LCDstr
 16358  0863  0879               	movf	??_LCDstr,w
 16359  0864  00FA               	movwf	LCDstr@c
 16360  0865  087A               	movf	LCDstr@c,w
 16361  0866  1D03               	btfss	3,2
 16362  0867  2869               	goto	u328_21
 16363  0868  286A               	goto	u328_20
 16364  0869                     u328_21:
 16365  0869  2859               	goto	i1l4036
 16366  086A                     u328_20:
 16367  086A                     i1l1085:
 16368  086A  0008               	return
 16369  086B                     __end_of_LCDstr:
 16370                           
 16371                           	psect	text54
 16372  17B1                     __ptext54:	
 16373 ;; *************** function _LCDchar *****************
 16374 ;; Defined at:
 16375 ;;		line 201 in file "main.c"
 16376 ;; Parameters:    Size  Location     Type
 16377 ;;  c               1    wreg     unsigned char 
 16378 ;; Auto vars:     Size  Location     Type
 16379 ;;  c               1    8[COMMON] unsigned char 
 16380 ;; Return value:  Size  Location     Type
 16381 ;;                  1    wreg      void 
 16382 ;; Registers used:
 16383 ;;		wreg, status,2, status,0, pclath, cstack
 16384 ;; Tracked objects:
 16385 ;;		On entry : 0/0
 16386 ;;		On exit  : 0/0
 16387 ;;		Unchanged: 0/0
 16388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16390 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16392 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16393 ;;Total ram usage:        1 bytes
 16394 ;; Hardware stack levels used:    1
 16395 ;; Hardware stack levels required when called:    2
 16396 ;; This function calls:
 16397 ;;		i1_LCDsend2x4
 16398 ;; This function is called by:
 16399 ;;		_LCDstr
 16400 ;;		_menuLCD_ISR
 16401 ;; This function uses a non-reentrant model
 16402 ;;
 16403                           
 16404                           
 16405                           ;psect for function _LCDchar
 16406  17B1                     _LCDchar:
 16407                           
 16408                           ;incstack = 0
 16409                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 16410                           ;LCDchar@c stored from wreg
 16411  17B1  00F8               	movwf	LCDchar@c
 16412  17B2                     i1l3850:
 16413                           
 16414                           ;main.c: 203: LCDsend2x4(c, 0x01);
 16415  17B2  01F2               	clrf	i1LCDsend2x4@mode
 16416  17B3  0AF2               	incf	i1LCDsend2x4@mode,f
 16417  17B4  0878               	movf	LCDchar@c,w
 16418  17B5  318D  2540  3197   	fcall	i1_LCDsend2x4
 16419  17B8                     i1l1079:
 16420  17B8  0008               	return
 16421  17B9                     __end_of_LCDchar:
 16422                           
 16423                           	psect	text55
 16424  17A3                     __ptext55:	
 16425 ;; *************** function _LCDcmd *****************
 16426 ;; Defined at:
 16427 ;;		line 196 in file "main.c"
 16428 ;; Parameters:    Size  Location     Type
 16429 ;;  c               1    wreg     unsigned char 
 16430 ;; Auto vars:     Size  Location     Type
 16431 ;;  c               1    8[COMMON] unsigned char 
 16432 ;; Return value:  Size  Location     Type
 16433 ;;                  1    wreg      void 
 16434 ;; Registers used:
 16435 ;;		wreg, status,2, status,0, pclath, cstack
 16436 ;; Tracked objects:
 16437 ;;		On entry : 0/0
 16438 ;;		On exit  : 0/0
 16439 ;;		Unchanged: 0/0
 16440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16444 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16445 ;;Total ram usage:        1 bytes
 16446 ;; Hardware stack levels used:    1
 16447 ;; Hardware stack levels required when called:    2
 16448 ;; This function calls:
 16449 ;;		i1_LCDsend2x4
 16450 ;; This function is called by:
 16451 ;;		_menuLCD_ISR
 16452 ;; This function uses a non-reentrant model
 16453 ;;
 16454                           
 16455                           
 16456                           ;psect for function _LCDcmd
 16457  17A3                     _LCDcmd:
 16458                           
 16459                           ;incstack = 0
 16460                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 16461                           ;LCDcmd@c stored from wreg
 16462  17A3  00F8               	movwf	LCDcmd@c
 16463  17A4                     i1l4032:
 16464                           
 16465                           ;main.c: 198: LCDsend2x4(c, 0);
 16466  17A4  01F2               	clrf	i1LCDsend2x4@mode
 16467  17A5  0878               	movf	LCDcmd@c,w
 16468  17A6  318D  2540  3197   	fcall	i1_LCDsend2x4
 16469  17A9                     i1l1076:
 16470  17A9  0008               	return
 16471  17AA                     __end_of_LCDcmd:
 16472                           
 16473                           	psect	text56
 16474  0D40                     __ptext56:	
 16475 ;; *************** function i1_LCDsend2x4 *****************
 16476 ;; Defined at:
 16477 ;;		line 150 in file "main.c"
 16478 ;; Parameters:    Size  Location     Type
 16479 ;;  c               1    wreg     unsigned char 
 16480 ;;  mode            1    2[COMMON] unsigned char 
 16481 ;; Auto vars:     Size  Location     Type
 16482 ;;  c               1    5[COMMON] unsigned char 
 16483 ;;  lc              1    7[COMMON] unsigned char 
 16484 ;;  hc              1    6[COMMON] unsigned char 
 16485 ;; Return value:  Size  Location     Type
 16486 ;;                  1    wreg      void 
 16487 ;; Registers used:
 16488 ;;		wreg, status,2, status,0, pclath, cstack
 16489 ;; Tracked objects:
 16490 ;;		On entry : 0/0
 16491 ;;		On exit  : 0/0
 16492 ;;		Unchanged: 0/0
 16493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16494 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16495 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16496 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16497 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16498 ;;Total ram usage:        6 bytes
 16499 ;; Hardware stack levels used:    1
 16500 ;; Hardware stack levels required when called:    1
 16501 ;; This function calls:
 16502 ;;		i1_WriteI2C
 16503 ;; This function is called by:
 16504 ;;		_LCDcmd
 16505 ;;		_LCDchar
 16506 ;; This function uses a non-reentrant model
 16507 ;;
 16508                           
 16509                           
 16510                           ;psect for function i1_LCDsend2x4
 16511  0D40                     i1_LCDsend2x4:
 16512                           
 16513                           ;incstack = 0
 16514                           ; Regs used in i1_LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 16515                           ;i1LCDsend2x4@c stored from wreg
 16516  0D40  00F5               	movwf	i1LCDsend2x4@c
 16517  0D41                     i1l3802:
 16518                           
 16519                           ;main.c: 152: unsigned char hc;;main.c: 153: unsigned char lc;;main.c: 155: hc = c & 0xf
      +                          0;
 16520  0D41  0875               	movf	i1LCDsend2x4@c,w
 16521  0D42  39F0               	andlw	240
 16522  0D43  00F3               	movwf	??i1_LCDsend2x4
 16523  0D44  0873               	movf	??i1_LCDsend2x4,w
 16524  0D45  00F6               	movwf	i1LCDsend2x4@hc
 16525  0D46                     i1l3804:
 16526                           
 16527                           ;main.c: 156: lc = (c << 4) & 0xf0;
 16528  0D46  0875               	movf	i1LCDsend2x4@c,w
 16529  0D47  00F3               	movwf	??i1_LCDsend2x4
 16530  0D48  3003               	movlw	3
 16531  0D49                     u259_25:
 16532  0D49  35F3               	lslf	??i1_LCDsend2x4,f
 16533  0D4A  3EFF               	addlw	-1
 16534  0D4B  1D03               	skipz
 16535  0D4C  2D49               	goto	u259_25
 16536  0D4D  3573               	lslf	??i1_LCDsend2x4,w
 16537  0D4E  39F0               	andlw	240
 16538  0D4F  00F4               	movwf	??i1_LCDsend2x4+1
 16539  0D50  0874               	movf	??i1_LCDsend2x4+1,w
 16540  0D51  00F7               	movwf	i1LCDsend2x4@lc
 16541  0D52                     i1l3806:	
 16542                           ;main.c: 158: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16543                           
 16544  0D52  0023               	movlb	3	; select bank3
 16545  0D53  0C0F               	rrf	15,w	;volatile
 16546  0D54  0C89               	rrf	9,f
 16547  0D55  3901               	andlw	1
 16548  0D56  00F3               	movwf	??i1_LCDsend2x4
 16549  0D57  0811               	movf	17,w	;volatile
 16550  0D58  391F               	andlw	31
 16551  0D59  0473               	iorwf	??i1_LCDsend2x4,w
 16552  0D5A  1D03               	btfss	3,2
 16553  0D5B  2D5D               	goto	u260_21
 16554  0D5C  2D5E               	goto	u260_20
 16555  0D5D                     u260_21:
 16556  0D5D  2D52               	goto	i1l3806
 16557  0D5E                     u260_20:
 16558  0D5E                     i1l1039:
 16559                           
 16560                           ;main.c: 159: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 16561  0D5E  1411               	bsf	17,0	;volatile
 16562  0D5F                     i1l1040:
 16563  0D5F  1811               	btfsc	17,0	;volatile
 16564  0D60  2D62               	goto	u261_21
 16565  0D61  2D63               	goto	u261_20
 16566  0D62                     u261_21:
 16567  0D62  2D5F               	goto	i1l1040
 16568  0D63                     u261_20:
 16569  0D63                     i1l3808:
 16570  0D63  0C0F               	rrf	15,w	;volatile
 16571  0D64  0C89               	rrf	9,f
 16572  0D65  3901               	andlw	1
 16573  0D66  00F3               	movwf	??i1_LCDsend2x4
 16574  0D67  0811               	movf	17,w	;volatile
 16575  0D68  391F               	andlw	31
 16576  0D69  0473               	iorwf	??i1_LCDsend2x4,w
 16577  0D6A  1D03               	btfss	3,2
 16578  0D6B  2D6D               	goto	u262_21
 16579  0D6C  2D6E               	goto	u262_20
 16580  0D6D                     u262_21:
 16581  0D6D  2D63               	goto	i1l3808
 16582  0D6E                     u262_20:
 16583  0D6E                     i1l3810:
 16584                           
 16585                           ;main.c: 160: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16586  0D6E  304E               	movlw	78
 16587  0D6F  318B  234F  318D   	fcall	i1_WriteI2C
 16588  0D72                     i1l3812:
 16589  0D72  0023               	movlb	3	; select bank3
 16590  0D73  0C0F               	rrf	15,w	;volatile
 16591  0D74  0C89               	rrf	9,f
 16592  0D75  3901               	andlw	1
 16593  0D76  00F3               	movwf	??i1_LCDsend2x4
 16594  0D77  0811               	movf	17,w	;volatile
 16595  0D78  391F               	andlw	31
 16596  0D79  0473               	iorwf	??i1_LCDsend2x4,w
 16597  0D7A  1D03               	btfss	3,2
 16598  0D7B  2D7D               	goto	u263_21
 16599  0D7C  2D7E               	goto	u263_20
 16600  0D7D                     u263_21:
 16601  0D7D  2D72               	goto	i1l3812
 16602  0D7E                     u263_20:
 16603  0D7E                     i1l3814:
 16604                           
 16605                           ;main.c: 161: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 16606  0D7E  0876               	movf	i1LCDsend2x4@hc,w
 16607  0D7F  0472               	iorwf	i1LCDsend2x4@mode,w
 16608  0D80  3808               	iorlw	8
 16609  0D81  318B  234F  318D   	fcall	i1_WriteI2C
 16610  0D84                     i1l3816:
 16611  0D84  0023               	movlb	3	; select bank3
 16612  0D85  0C0F               	rrf	15,w	;volatile
 16613  0D86  0C89               	rrf	9,f
 16614  0D87  3901               	andlw	1
 16615  0D88  00F3               	movwf	??i1_LCDsend2x4
 16616  0D89  0811               	movf	17,w	;volatile
 16617  0D8A  391F               	andlw	31
 16618  0D8B  0473               	iorwf	??i1_LCDsend2x4,w
 16619  0D8C  1D03               	btfss	3,2
 16620  0D8D  2D8F               	goto	u264_21
 16621  0D8E  2D90               	goto	u264_20
 16622  0D8F                     u264_21:
 16623  0D8F  2D84               	goto	i1l3816
 16624  0D90                     u264_20:
 16625  0D90                     i1l3818:
 16626                           
 16627                           ;main.c: 162: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 16628  0D90  0876               	movf	i1LCDsend2x4@hc,w
 16629  0D91  0472               	iorwf	i1LCDsend2x4@mode,w
 16630  0D92  380C               	iorlw	12
 16631  0D93  318B  234F  318D   	fcall	i1_WriteI2C
 16632  0D96                     i1l3820:
 16633  0D96  0023               	movlb	3	; select bank3
 16634  0D97  0C0F               	rrf	15,w	;volatile
 16635  0D98  0C89               	rrf	9,f
 16636  0D99  3901               	andlw	1
 16637  0D9A  00F3               	movwf	??i1_LCDsend2x4
 16638  0D9B  0811               	movf	17,w	;volatile
 16639  0D9C  391F               	andlw	31
 16640  0D9D  0473               	iorwf	??i1_LCDsend2x4,w
 16641  0D9E  1D03               	btfss	3,2
 16642  0D9F  2DA1               	goto	u265_21
 16643  0DA0  2DA2               	goto	u265_20
 16644  0DA1                     u265_21:
 16645  0DA1  2D96               	goto	i1l3820
 16646  0DA2                     u265_20:
 16647  0DA2                     i1l1054:
 16648  0DA2                     i1l3822:	
 16649                           ;main.c: 163: _delay((unsigned long)((1)*(1000000/4000000.0)));
 16650                           
 16651                           
 16652                           ;main.c: 164: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 16653  0DA2  0876               	movf	i1LCDsend2x4@hc,w
 16654  0DA3  0472               	iorwf	i1LCDsend2x4@mode,w
 16655  0DA4  3808               	iorlw	8
 16656  0DA5  318B  234F  318D   	fcall	i1_WriteI2C
 16657  0DA8                     i1l3824:
 16658  0DA8  0023               	movlb	3	; select bank3
 16659  0DA9  0C0F               	rrf	15,w	;volatile
 16660  0DAA  0C89               	rrf	9,f
 16661  0DAB  3901               	andlw	1
 16662  0DAC  00F3               	movwf	??i1_LCDsend2x4
 16663  0DAD  0811               	movf	17,w	;volatile
 16664  0DAE  391F               	andlw	31
 16665  0DAF  0473               	iorwf	??i1_LCDsend2x4,w
 16666  0DB0  1D03               	btfss	3,2
 16667  0DB1  2DB3               	goto	u266_21
 16668  0DB2  2DB4               	goto	u266_20
 16669  0DB3                     u266_21:
 16670  0DB3  2DA8               	goto	i1l3824
 16671  0DB4                     u266_20:
 16672  0DB4                     i1l3826:
 16673                           
 16674                           ;main.c: 165: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 16675  0DB4  0877               	movf	i1LCDsend2x4@lc,w
 16676  0DB5  0472               	iorwf	i1LCDsend2x4@mode,w
 16677  0DB6  3808               	iorlw	8
 16678  0DB7  318B  234F  318D   	fcall	i1_WriteI2C
 16679  0DBA                     i1l3828:
 16680  0DBA  0023               	movlb	3	; select bank3
 16681  0DBB  0C0F               	rrf	15,w	;volatile
 16682  0DBC  0C89               	rrf	9,f
 16683  0DBD  3901               	andlw	1
 16684  0DBE  00F3               	movwf	??i1_LCDsend2x4
 16685  0DBF  0811               	movf	17,w	;volatile
 16686  0DC0  391F               	andlw	31
 16687  0DC1  0473               	iorwf	??i1_LCDsend2x4,w
 16688  0DC2  1D03               	btfss	3,2
 16689  0DC3  2DC5               	goto	u267_21
 16690  0DC4  2DC6               	goto	u267_20
 16691  0DC5                     u267_21:
 16692  0DC5  2DBA               	goto	i1l3828
 16693  0DC6                     u267_20:
 16694  0DC6                     i1l3830:
 16695                           
 16696                           ;main.c: 166: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 16697  0DC6  0877               	movf	i1LCDsend2x4@lc,w
 16698  0DC7  0472               	iorwf	i1LCDsend2x4@mode,w
 16699  0DC8  380C               	iorlw	12
 16700  0DC9  318B  234F  318D   	fcall	i1_WriteI2C
 16701  0DCC                     i1l3832:
 16702  0DCC  0023               	movlb	3	; select bank3
 16703  0DCD  0C0F               	rrf	15,w	;volatile
 16704  0DCE  0C89               	rrf	9,f
 16705  0DCF  3901               	andlw	1
 16706  0DD0  00F3               	movwf	??i1_LCDsend2x4
 16707  0DD1  0811               	movf	17,w	;volatile
 16708  0DD2  391F               	andlw	31
 16709  0DD3  0473               	iorwf	??i1_LCDsend2x4,w
 16710  0DD4  1D03               	btfss	3,2
 16711  0DD5  2DD7               	goto	u268_21
 16712  0DD6  2DD8               	goto	u268_20
 16713  0DD7                     u268_21:
 16714  0DD7  2DCC               	goto	i1l3832
 16715  0DD8                     u268_20:
 16716  0DD8                     i1l1063:
 16717  0DD8                     i1l3834:	
 16718                           ;main.c: 167: _delay((unsigned long)((1)*(1000000/4000000.0)));
 16719                           
 16720                           
 16721                           ;main.c: 168: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 16722  0DD8  0877               	movf	i1LCDsend2x4@lc,w
 16723  0DD9  0472               	iorwf	i1LCDsend2x4@mode,w
 16724  0DDA  3808               	iorlw	8
 16725  0DDB  318B  234F  318D   	fcall	i1_WriteI2C
 16726  0DDE                     i1l3836:
 16727  0DDE  0023               	movlb	3	; select bank3
 16728  0DDF  0C0F               	rrf	15,w	;volatile
 16729  0DE0  0C89               	rrf	9,f
 16730  0DE1  3901               	andlw	1
 16731  0DE2  00F3               	movwf	??i1_LCDsend2x4
 16732  0DE3  0811               	movf	17,w	;volatile
 16733  0DE4  391F               	andlw	31
 16734  0DE5  0473               	iorwf	??i1_LCDsend2x4,w
 16735  0DE6  1D03               	btfss	3,2
 16736  0DE7  2DE9               	goto	u269_21
 16737  0DE8  2DEA               	goto	u269_20
 16738  0DE9                     u269_21:
 16739  0DE9  2DDE               	goto	i1l3836
 16740  0DEA                     u269_20:
 16741  0DEA                     i1l1066:
 16742                           
 16743                           ;main.c: 169: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 16744  0DEA  1511               	bsf	17,2	;volatile
 16745  0DEB                     i1l1067:
 16746  0DEB  1911               	btfsc	17,2	;volatile
 16747  0DEC  2DEE               	goto	u270_21
 16748  0DED  2DEF               	goto	u270_20
 16749  0DEE                     u270_21:
 16750  0DEE  2DEB               	goto	i1l1067
 16751  0DEF                     u270_20:
 16752  0DEF                     i1l3838:
 16753                           
 16754                           ;main.c: 170: _delay((unsigned long)((50)*(1000000/4000000.0)));
 16755  0DEF  3004               	movlw	4
 16756  0DF0                     u511_27:
 16757  0DF0  0B89               	decfsz	9,f
 16758  0DF1  2DF0               	goto	u511_27
 16759  0DF2                     i1l1070:
 16760  0DF2  0008               	return
 16761  0DF3                     __end_ofi1_LCDsend2x4:
 16762                           
 16763                           	psect	text57
 16764  0B4F                     __ptext57:	
 16765 ;; *************** function i1_WriteI2C *****************
 16766 ;; Defined at:
 16767 ;;		line 47 in file "I2C/i2c.c"
 16768 ;; Parameters:    Size  Location     Type
 16769 ;;  data_out        1    wreg     unsigned char 
 16770 ;; Auto vars:     Size  Location     Type
 16771 ;;  data_out        1    1[COMMON] unsigned char 
 16772 ;; Return value:  Size  Location     Type
 16773 ;;                  1    wreg      char 
 16774 ;; Registers used:
 16775 ;;		wreg, status,2, status,0
 16776 ;; Tracked objects:
 16777 ;;		On entry : 0/0
 16778 ;;		On exit  : 0/0
 16779 ;;		Unchanged: 0/0
 16780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16783 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16784 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16785 ;;Total ram usage:        2 bytes
 16786 ;; Hardware stack levels used:    1
 16787 ;; This function calls:
 16788 ;;		Nothing
 16789 ;; This function is called by:
 16790 ;;		_tsttc
 16791 ;;		i1_LCDsend2x4
 16792 ;; This function uses a non-reentrant model
 16793 ;;
 16794                           
 16795                           
 16796                           ;psect for function i1_WriteI2C
 16797  0B4F                     i1_WriteI2C:
 16798                           
 16799                           ;incstack = 0
 16800                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 16801                           ;i1WriteI2C@data_out stored from wreg
 16802  0B4F  00F1               	movwf	i1WriteI2C@data_out
 16803  0B50                     i1l3772:
 16804                           
 16805                           ;i2c.c: 49: SSP1BUF = data_out;
 16806  0B50  0871               	movf	i1WriteI2C@data_out,w
 16807  0B51  0023               	movlb	3	; select bank3
 16808  0B52  008C               	movwf	12	;volatile
 16809  0B53                     i1l3774:
 16810                           
 16811                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 16812  0B53  1F90               	btfss	16,7	;volatile
 16813  0B54  2B56               	goto	u250_21
 16814  0B55  2B57               	goto	u250_20
 16815  0B56                     u250_21:
 16816  0B56  2B58               	goto	i1l3780
 16817  0B57                     u250_20:
 16818  0B57  2B99               	goto	i1l30
 16819  0B58                     i1l3780:
 16820                           
 16821                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 16822  0B58  300F               	movlw	15
 16823  0B59  0510               	andwf	16,w	;volatile
 16824  0B5A  00F0               	movwf	??i1_WriteI2C
 16825  0B5B  3008               	movlw	8
 16826  0B5C  0670               	xorwf	??i1_WriteI2C,w
 16827  0B5D  1903               	btfsc	3,2
 16828  0B5E  2B60               	goto	u251_21
 16829  0B5F  2B61               	goto	u251_20
 16830  0B60                     u251_21:
 16831  0B60  2B77               	goto	i1l3792
 16832  0B61                     u251_20:
 16833  0B61                     i1l3782:
 16834  0B61  300F               	movlw	15
 16835  0B62  0510               	andwf	16,w	;volatile
 16836  0B63  00F0               	movwf	??i1_WriteI2C
 16837  0B64  300B               	movlw	11
 16838  0B65  0670               	xorwf	??i1_WriteI2C,w
 16839  0B66  1903               	btfsc	3,2
 16840  0B67  2B69               	goto	u252_21
 16841  0B68  2B6A               	goto	u252_20
 16842  0B69                     u252_21:
 16843  0B69  2B77               	goto	i1l3792
 16844  0B6A                     u252_20:
 16845  0B6A                     i1l3784:
 16846                           
 16847                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 16848  0B6A  1610               	bsf	16,4	;volatile
 16849  0B6B                     i1l33:	
 16850                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 16851                           
 16852  0B6B  002E               	movlb	14	; select bank14
 16853  0B6C  1C0F               	btfss	15,0	;volatile
 16854  0B6D  2B6F               	goto	u253_21
 16855  0B6E  2B70               	goto	u253_20
 16856  0B6F                     u253_21:
 16857  0B6F  2B6B               	goto	i1l33
 16858  0B70                     u253_20:
 16859  0B70                     i1l35:
 16860                           
 16861                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 16862  0B70  0023               	movlb	3	; select bank3
 16863  0B71  190F               	btfsc	15,2	;volatile
 16864  0B72  2B74               	goto	u254_21
 16865  0B73  2B75               	goto	u254_20
 16866  0B74                     u254_21:
 16867  0B74  2B99               	goto	i1l30
 16868  0B75                     u254_20:
 16869  0B75                     i1l3786:
 16870  0B75  080F               	movf	15,w	;volatile
 16871  0B76  2B99               	goto	i1l30
 16872  0B77                     i1l3792:
 16873                           
 16874                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 16875  0B77  300F               	movlw	15
 16876  0B78  0510               	andwf	16,w	;volatile
 16877  0B79  00F0               	movwf	??i1_WriteI2C
 16878  0B7A  3008               	movlw	8
 16879  0B7B  0670               	xorwf	??i1_WriteI2C,w
 16880  0B7C  1903               	btfsc	3,2
 16881  0B7D  2B7F               	goto	u255_21
 16882  0B7E  2B80               	goto	u255_20
 16883  0B7F                     u255_21:
 16884  0B7F  2B89               	goto	i1l42
 16885  0B80                     u255_20:
 16886  0B80                     i1l3794:
 16887  0B80  300F               	movlw	15
 16888  0B81  0510               	andwf	16,w	;volatile
 16889  0B82  00F0               	movwf	??i1_WriteI2C
 16890  0B83  300B               	movlw	11
 16891  0B84  0670               	xorwf	??i1_WriteI2C,w
 16892  0B85  1D03               	btfss	3,2
 16893  0B86  2B88               	goto	u256_21
 16894  0B87  2B89               	goto	u256_20
 16895  0B88                     u256_21:
 16896  0B88  2B99               	goto	i1l30
 16897  0B89                     u256_20:
 16898  0B89                     i1l42:
 16899  0B89  180F               	btfsc	15,0	;volatile
 16900  0B8A  2B8C               	goto	u257_21
 16901  0B8B  2B8D               	goto	u257_20
 16902  0B8C                     u257_21:
 16903  0B8C  2B89               	goto	i1l42
 16904  0B8D                     u257_20:
 16905  0B8D                     i1l3796:
 16906  0B8D  0C0F               	rrf	15,w	;volatile
 16907  0B8E  0C89               	rrf	9,f
 16908  0B8F  3901               	andlw	1
 16909  0B90  00F0               	movwf	??i1_WriteI2C
 16910  0B91  0811               	movf	17,w	;volatile
 16911  0B92  391F               	andlw	31
 16912  0B93  0470               	iorwf	??i1_WriteI2C,w
 16913  0B94  1D03               	btfss	3,2
 16914  0B95  2B97               	goto	u258_21
 16915  0B96  2B98               	goto	u258_20
 16916  0B97                     u258_21:
 16917  0B97  2B8D               	goto	i1l3796
 16918  0B98                     u258_20:
 16919  0B98                     i1l47:
 16920                           
 16921                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 16922  0B98  0811               	movf	17,w	;volatile
 16923  0B99                     i1l30:
 16924  0B99  0008               	return
 16925  0B9A                     __end_ofi1_WriteI2C:
 16926                           
 16927                           	psect	text58
 16928  0811                     __ptext58:	
 16929 ;; *************** function _TMR3_WriteTimer *****************
 16930 ;; Defined at:
 16931 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 16932 ;; Parameters:    Size  Location     Type
 16933 ;;  timerVal        2    0[COMMON] unsigned int 
 16934 ;; Auto vars:     Size  Location     Type
 16935 ;;		None
 16936 ;; Return value:  Size  Location     Type
 16937 ;;                  1    wreg      void 
 16938 ;; Registers used:
 16939 ;;		wreg, status,2
 16940 ;; Tracked objects:
 16941 ;;		On entry : 0/0
 16942 ;;		On exit  : 0/0
 16943 ;;		Unchanged: 0/0
 16944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16945 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16948 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16949 ;;Total ram usage:        2 bytes
 16950 ;; Hardware stack levels used:    1
 16951 ;; This function calls:
 16952 ;;		Nothing
 16953 ;; This function is called by:
 16954 ;;		_TMR3_ISR
 16955 ;;		_TMR3_Reload
 16956 ;; This function uses a non-reentrant model
 16957 ;;
 16958                           
 16959                           
 16960                           ;psect for function _TMR3_WriteTimer
 16961  0811                     _TMR3_WriteTimer:
 16962  0811                     i1l4334:	
 16963                           ;incstack = 0
 16964                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 16965                           
 16966                           
 16967                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 16968  0811  0024               	movlb	4	; select bank4
 16969  0812  1D14               	btfss	20,2	;volatile
 16970  0813  2815               	goto	u352_21
 16971  0814  2816               	goto	u352_20
 16972  0815                     u352_21:
 16973  0815  281D               	goto	i1l4344
 16974  0816                     u352_20:
 16975  0816                     i1l4336:
 16976                           
 16977                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 16978  0816  1014               	bcf	20,0	;volatile
 16979  0817                     i1l4338:
 16980                           
 16981                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 16982  0817  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 16983  0818  0093               	movwf	19	;volatile
 16984  0819                     i1l4340:
 16985                           
 16986                           ;tmr3.c: 136: TMR3L = timerVal;
 16987  0819  0870               	movf	TMR3_WriteTimer@timerVal,w
 16988  081A  0092               	movwf	18	;volatile
 16989  081B                     i1l4342:
 16990                           
 16991                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 16992  081B  1414               	bsf	20,0	;volatile
 16993                           
 16994                           ;tmr3.c: 140: }
 16995  081C  2821               	goto	i1l465
 16996  081D                     i1l4344:
 16997                           
 16998                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 16999  081D  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 17000  081E  0093               	movwf	19	;volatile
 17001  081F                     i1l4346:
 17002                           
 17003                           ;tmr3.c: 145: TMR3L = timerVal;
 17004  081F  0870               	movf	TMR3_WriteTimer@timerVal,w
 17005  0820  0092               	movwf	18	;volatile
 17006  0821                     i1l465:
 17007  0821  0008               	return
 17008  0822                     __end_of_TMR3_WriteTimer:
 17009                           
 17010                           	psect	text59
 17011  0881                     __ptext59:	
 17012 ;; *************** function _TMR1_ISR *****************
 17013 ;; Defined at:
 17014 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 17015 ;; Parameters:    Size  Location     Type
 17016 ;;		None
 17017 ;; Auto vars:     Size  Location     Type
 17018 ;;		None
 17019 ;; Return value:  Size  Location     Type
 17020 ;;                  1    wreg      void 
 17021 ;; Registers used:
 17022 ;;		wreg, status,2, status,0, pclath, cstack
 17023 ;; Tracked objects:
 17024 ;;		On entry : 0/0
 17025 ;;		On exit  : 0/0
 17026 ;;		Unchanged: 0/0
 17027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17032 ;;Total ram usage:        0 bytes
 17033 ;; Hardware stack levels used:    1
 17034 ;; Hardware stack levels required when called:    2
 17035 ;; This function calls:
 17036 ;;		Absolute function
 17037 ;;		_Clock_ISR
 17038 ;;		_TMR1_DefaultInterruptHandler
 17039 ;;		_TMR1_WriteTimer
 17040 ;; This function is called by:
 17041 ;;		_INTERRUPT_InterruptManager
 17042 ;; This function uses a non-reentrant model
 17043 ;;
 17044                           
 17045                           
 17046                           ;psect for function _TMR1_ISR
 17047  0881                     _TMR1_ISR:
 17048  0881                     i1l4686:	
 17049                           ;incstack = 0
 17050                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 17051                           
 17052                           
 17053                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 17054  0881  002E               	movlb	14	; select bank14
 17055  0882  1010               	bcf	16,0	;volatile
 17056  0883                     i1l4688:
 17057                           
 17058                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 17059  0883  0021               	movlb	1	; select bank1
 17060  0884  083A               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 17061  0885  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 17062  0886  0839               	movf	_timer1ReloadVal^(0+128),w	;volatile
 17063  0887  00F0               	movwf	TMR1_WriteTimer@timerVal
 17064  0888  3188  2000  3188   	fcall	_TMR1_WriteTimer
 17065  088B                     i1l4690:
 17066                           
 17067                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 17068  088B  0021               	movlb	1	; select bank1
 17069  088C  0837               	movf	_TMR1_InterruptHandler^(0+128),w
 17070  088D  0438               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 17071  088E  1903               	btfsc	3,2
 17072  088F  2891               	goto	u418_21
 17073  0890  2892               	goto	u418_20
 17074  0891                     u418_21:
 17075  0891  2897               	goto	i1l414
 17076  0892                     u418_20:
 17077  0892                     i1l4692:
 17078                           
 17079                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 17080  0892  0838               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 17081  0893  008A               	movwf	10
 17082  0894  0837               	movf	_TMR1_InterruptHandler^(0+128),w
 17083  0895  000A               	callw
 17084  0896  3188               	pagesel	$
 17085  0897                     i1l414:
 17086  0897  0008               	return
 17087  0898                     __end_of_TMR1_ISR:
 17088                           
 17089                           	psect	text60
 17090  0800                     __ptext60:	
 17091 ;; *************** function _TMR1_WriteTimer *****************
 17092 ;; Defined at:
 17093 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 17094 ;; Parameters:    Size  Location     Type
 17095 ;;  timerVal        2    0[COMMON] unsigned int 
 17096 ;; Auto vars:     Size  Location     Type
 17097 ;;		None
 17098 ;; Return value:  Size  Location     Type
 17099 ;;                  1    wreg      void 
 17100 ;; Registers used:
 17101 ;;		wreg, status,2
 17102 ;; Tracked objects:
 17103 ;;		On entry : 0/0
 17104 ;;		On exit  : 0/0
 17105 ;;		Unchanged: 0/0
 17106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17107 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17110 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17111 ;;Total ram usage:        2 bytes
 17112 ;; Hardware stack levels used:    1
 17113 ;; This function calls:
 17114 ;;		Nothing
 17115 ;; This function is called by:
 17116 ;;		_TMR1_ISR
 17117 ;;		_TMR1_Reload
 17118 ;; This function uses a non-reentrant model
 17119 ;;
 17120                           
 17121                           
 17122                           ;psect for function _TMR1_WriteTimer
 17123  0800                     _TMR1_WriteTimer:
 17124  0800                     i1l4320:	
 17125                           ;incstack = 0
 17126                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 17127                           
 17128                           
 17129                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 17130  0800  0024               	movlb	4	; select bank4
 17131  0801  1D0E               	btfss	14,2	;volatile
 17132  0802  2804               	goto	u351_21
 17133  0803  2805               	goto	u351_20
 17134  0804                     u351_21:
 17135  0804  280C               	goto	i1l4330
 17136  0805                     u351_20:
 17137  0805                     i1l4322:
 17138                           
 17139                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 17140  0805  100E               	bcf	14,0	;volatile
 17141  0806                     i1l4324:
 17142                           
 17143                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 17144  0806  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17145  0807  008D               	movwf	13	;volatile
 17146  0808                     i1l4326:
 17147                           
 17148                           ;tmr1.c: 136: TMR1L = timerVal;
 17149  0808  0870               	movf	TMR1_WriteTimer@timerVal,w
 17150  0809  008C               	movwf	12	;volatile
 17151  080A                     i1l4328:
 17152                           
 17153                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 17154  080A  140E               	bsf	14,0	;volatile
 17155                           
 17156                           ;tmr1.c: 140: }
 17157  080B  2810               	goto	i1l401
 17158  080C                     i1l4330:
 17159                           
 17160                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 17161  080C  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17162  080D  008D               	movwf	13	;volatile
 17163  080E                     i1l4332:
 17164                           
 17165                           ;tmr1.c: 145: TMR1L = timerVal;
 17166  080E  0870               	movf	TMR1_WriteTimer@timerVal,w
 17167  080F  008C               	movwf	12	;volatile
 17168  0810                     i1l401:
 17169  0810  0008               	return
 17170  0811                     __end_of_TMR1_WriteTimer:
 17171                           
 17172                           	psect	text61
 17173  0DF3                     __ptext61:	
 17174 ;; *************** function _Clock_ISR *****************
 17175 ;; Defined at:
 17176 ;;		line 289 in file "main.c"
 17177 ;; Parameters:    Size  Location     Type
 17178 ;;		None
 17179 ;; Auto vars:     Size  Location     Type
 17180 ;;		None
 17181 ;; Return value:  Size  Location     Type
 17182 ;;                  1    wreg      void 
 17183 ;; Registers used:
 17184 ;;		wreg, status,2, status,0, pclath, cstack
 17185 ;; Tracked objects:
 17186 ;;		On entry : 0/0
 17187 ;;		On exit  : 0/0
 17188 ;;		Unchanged: 0/0
 17189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17192 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17193 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17194 ;;Total ram usage:        1 bytes
 17195 ;; Hardware stack levels used:    1
 17196 ;; Hardware stack levels required when called:    1
 17197 ;; This function calls:
 17198 ;;		i1_DATAEE_WriteByte
 17199 ;; This function is called by:
 17200 ;;		_main
 17201 ;;		_TMR1_ISR
 17202 ;; This function uses a non-reentrant model
 17203 ;;
 17204                           
 17205                           
 17206                           ;psect for function _Clock_ISR
 17207  0DF3                     _Clock_ISR:
 17208  0DF3                     i1l4416:	
 17209                           ;incstack = 0
 17210                           ; Regs used in _Clock_ISR: [wreg+status,2+status,0+pclath+cstack]
 17211                           
 17212                           
 17213                           ;main.c: 291: t.s++;
 17214  0DF3  3001               	movlw	1
 17215  0DF4  00FA               	movwf	??_Clock_ISR
 17216  0DF5  087A               	movf	??_Clock_ISR,w
 17217  0DF6  0020               	movlb	0	; select bank0
 17218  0DF7  07D9               	addwf	_t+2,f
 17219                           
 17220                           ;main.c: 293: if(t.s==60){
 17221  0DF8  303C               	movlw	60
 17222  0DF9  0659               	xorwf	_t+2,w
 17223  0DFA  1D03               	btfss	3,2
 17224  0DFB  2DFD               	goto	u372_21
 17225  0DFC  2DFE               	goto	u372_20
 17226  0DFD                     u372_21:
 17227  0DFD  2EAC               	goto	i1l4448
 17228  0DFE                     u372_20:
 17229  0DFE                     i1l4418:
 17230                           
 17231                           ;main.c: 294: t.m++;
 17232  0DFE  3001               	movlw	1
 17233  0DFF  00FA               	movwf	??_Clock_ISR
 17234  0E00  087A               	movf	??_Clock_ISR,w
 17235  0E01  07D8               	addwf	_t+1,f
 17236  0E02                     i1l4420:
 17237                           
 17238                           ;main.c: 295: t.s=0;
 17239  0E02  01D9               	clrf	_t+2
 17240  0E03                     i1l4422:
 17241                           
 17242                           ;main.c: 298: DATAEE_WriteByte( 0x7000 + (1 * 8), NREG);
 17243  0E03  3008               	movlw	8
 17244  0E04  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17245  0E05  3070               	movlw	112
 17246  0E06  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17247  0E07  0866               	movf	_NREG,w
 17248  0E08  00FA               	movwf	??_Clock_ISR
 17249  0E09  087A               	movf	??_Clock_ISR,w
 17250  0E0A  00F8               	movwf	i1DATAEE_WriteByte@bData
 17251  0E0B  3189  212C  318D   	fcall	i1_DATAEE_WriteByte
 17252  0E0E                     i1l4424:
 17253                           
 17254                           ;main.c: 299: DATAEE_WriteByte( 0x7000 + (2 * 8), PMON);
 17255  0E0E  3010               	movlw	16
 17256  0E0F  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17257  0E10  3070               	movlw	112
 17258  0E11  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17259  0E12  0021               	movlb	1	; select bank1
 17260  0E13  0843               	movf	_PMON^(0+128),w
 17261  0E14  00FA               	movwf	??_Clock_ISR
 17262  0E15  087A               	movf	??_Clock_ISR,w
 17263  0E16  00F8               	movwf	i1DATAEE_WriteByte@bData
 17264  0E17  3189  212C  318D   	fcall	i1_DATAEE_WriteByte
 17265  0E1A                     i1l4426:
 17266                           
 17267                           ;main.c: 300: DATAEE_WriteByte( 0x7000 + (3 * 8), TALA);
 17268  0E1A  3018               	movlw	24
 17269  0E1B  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17270  0E1C  3070               	movlw	112
 17271  0E1D  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17272  0E1E  0020               	movlb	0	; select bank0
 17273  0E1F  0865               	movf	_TALA,w
 17274  0E20  00FA               	movwf	??_Clock_ISR
 17275  0E21  087A               	movf	??_Clock_ISR,w
 17276  0E22  00F8               	movwf	i1DATAEE_WriteByte@bData
 17277  0E23  3189  212C  318D   	fcall	i1_DATAEE_WriteByte
 17278  0E26                     i1l4428:
 17279                           
 17280                           ;main.c: 301: DATAEE_WriteByte( 0x7000 + (4 * 8), clkAlarm.alarmVal.h);
 17281  0E26  3020               	movlw	32
 17282  0E27  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17283  0E28  3070               	movlw	112
 17284  0E29  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17285  0E2A  0020               	movlb	0	; select bank0
 17286  0E2B  084D               	movf	_clkAlarm,w
 17287  0E2C  00FA               	movwf	??_Clock_ISR
 17288  0E2D  087A               	movf	??_Clock_ISR,w
 17289  0E2E  00F8               	movwf	i1DATAEE_WriteByte@bData
 17290  0E2F  3189  212C  318D   	fcall	i1_DATAEE_WriteByte
 17291  0E32                     i1l4430:
 17292                           
 17293                           ;main.c: 302: DATAEE_WriteByte( 0x7000 + (5 * 8), clkAlarm.alarmVal.m);
 17294  0E32  3028               	movlw	40
 17295  0E33  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17296  0E34  3070               	movlw	112
 17297  0E35  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17298  0E36  0020               	movlb	0	; select bank0
 17299  0E37  084E               	movf	_clkAlarm+1,w
 17300  0E38  00FA               	movwf	??_Clock_ISR
 17301  0E39  087A               	movf	??_Clock_ISR,w
 17302  0E3A  00F8               	movwf	i1DATAEE_WriteByte@bData
 17303  0E3B  3189  212C  318D   	fcall	i1_DATAEE_WriteByte
 17304  0E3E                     i1l4432:
 17305                           
 17306                           ;main.c: 303: DATAEE_WriteByte( 0x7000 + (6 * 8), clkAlarm.alarmVal.s);
 17307  0E3E  3030               	movlw	48
 17308  0E3F  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17309  0E40  3070               	movlw	112
 17310  0E41  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17311  0E42  0020               	movlb	0	; select bank0
 17312  0E43  084F               	movf	_clkAlarm+2,w
 17313  0E44  00FA               	movwf	??_Clock_ISR
 17314  0E45  087A               	movf	??_Clock_ISR,w
 17315  0E46  00F8               	movwf	i1DATAEE_WriteByte@bData
 17316  0E47  3189  212C  318D   	fcall	i1_DATAEE_WriteByte
 17317  0E4A                     i1l4434:
 17318                           
 17319                           ;main.c: 304: DATAEE_WriteByte( 0x7000 + (7 * 8), tempAlarm.alarmTemp);
 17320  0E4A  3038               	movlw	56
 17321  0E4B  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17322  0E4C  3070               	movlw	112
 17323  0E4D  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17324  0E4E  0020               	movlb	0	; select bank0
 17325  0E4F  0854               	movf	_tempAlarm,w
 17326  0E50  00FA               	movwf	??_Clock_ISR
 17327  0E51  087A               	movf	??_Clock_ISR,w
 17328  0E52  00F8               	movwf	i1DATAEE_WriteByte@bData
 17329  0E53  3189  212C  318D   	fcall	i1_DATAEE_WriteByte
 17330  0E56                     i1l4436:
 17331                           
 17332                           ;main.c: 305: DATAEE_WriteByte( 0x7000 + (8 * 8), lumAlarm.alarmLum);
 17333  0E56  3040               	movlw	64
 17334  0E57  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17335  0E58  3070               	movlw	112
 17336  0E59  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17337  0E5A  0020               	movlb	0	; select bank0
 17338  0E5B  0851               	movf	_lumAlarm,w
 17339  0E5C  00FA               	movwf	??_Clock_ISR
 17340  0E5D  087A               	movf	??_Clock_ISR,w
 17341  0E5E  00F8               	movwf	i1DATAEE_WriteByte@bData
 17342  0E5F  3189  212C  318D   	fcall	i1_DATAEE_WriteByte
 17343  0E62                     i1l4438:
 17344                           
 17345                           ;main.c: 306: DATAEE_WriteByte( 0x7000 + (9 * 8), ALAF);
 17346  0E62  3048               	movlw	72
 17347  0E63  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17348  0E64  3070               	movlw	112
 17349  0E65  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17350  0E66  0020               	movlb	0	; select bank0
 17351  0E67  0864               	movf	_ALAF,w
 17352  0E68  00FA               	movwf	??_Clock_ISR
 17353  0E69  087A               	movf	??_Clock_ISR,w
 17354  0E6A  00F8               	movwf	i1DATAEE_WriteByte@bData
 17355  0E6B  3189  212C  318D   	fcall	i1_DATAEE_WriteByte
 17356  0E6E                     i1l4440:
 17357                           
 17358                           ;main.c: 307: DATAEE_WriteByte( 0x7000 + (10 * 8), t.h);
 17359  0E6E  3050               	movlw	80
 17360  0E6F  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17361  0E70  3070               	movlw	112
 17362  0E71  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17363  0E72  0020               	movlb	0	; select bank0
 17364  0E73  0857               	movf	_t,w
 17365  0E74  00FA               	movwf	??_Clock_ISR
 17366  0E75  087A               	movf	??_Clock_ISR,w
 17367  0E76  00F8               	movwf	i1DATAEE_WriteByte@bData
 17368  0E77  3189  212C  318D   	fcall	i1_DATAEE_WriteByte
 17369  0E7A                     i1l4442:
 17370                           
 17371                           ;main.c: 308: DATAEE_WriteByte( 0x7000 + (11 * 8), t.m);
 17372  0E7A  3058               	movlw	88
 17373  0E7B  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17374  0E7C  3070               	movlw	112
 17375  0E7D  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17376  0E7E  0020               	movlb	0	; select bank0
 17377  0E7F  0858               	movf	_t+1,w
 17378  0E80  00FA               	movwf	??_Clock_ISR
 17379  0E81  087A               	movf	??_Clock_ISR,w
 17380  0E82  00F8               	movwf	i1DATAEE_WriteByte@bData
 17381  0E83  3189  212C  318D   	fcall	i1_DATAEE_WriteByte
 17382  0E86                     i1l4444:
 17383                           
 17384                           ;main.c: 309: DATAEE_WriteByte( 0x7000 + (12 * 8), IDX);
 17385  0E86  3060               	movlw	96
 17386  0E87  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17387  0E88  3070               	movlw	112
 17388  0E89  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17389  0E8A  0021               	movlb	1	; select bank1
 17390  0E8B  0842               	movf	_IDX^(0+128),w
 17391  0E8C  00FA               	movwf	??_Clock_ISR
 17392  0E8D  087A               	movf	??_Clock_ISR,w
 17393  0E8E  00F8               	movwf	i1DATAEE_WriteByte@bData
 17394  0E8F  3189  212C  318D   	fcall	i1_DATAEE_WriteByte
 17395  0E92                     i1l4446:
 17396                           
 17397                           ;main.c: 310: DATAEE_WriteByte( 0x7000 + (13 * 8), NREG + PMON + TALA + clkAlarm.alarmVa
      +                          l.h + clkAlarm.alarmVal.m + clkAlarm.alarmVal.s + tempAlarm.alarmTemp + lumAlarm.alarmLu
      +                          m + ALAF + t.h + t.m + IDX);
 17398  0E92  3068               	movlw	104
 17399  0E93  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17400  0E94  3070               	movlw	112
 17401  0E95  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17402  0E96  0020               	movlb	0	; select bank0
 17403  0E97  084E               	movf	_clkAlarm+1,w
 17404  0E98  074F               	addwf	_clkAlarm+2,w
 17405  0E99  0758               	addwf	_t+1,w
 17406  0E9A  074D               	addwf	_clkAlarm,w
 17407  0E9B  0754               	addwf	_tempAlarm,w
 17408  0E9C  0751               	addwf	_lumAlarm,w
 17409  0E9D  0757               	addwf	_t,w
 17410  0E9E  0766               	addwf	_NREG,w
 17411  0E9F  0021               	movlb	1	; select bank1
 17412  0EA0  0743               	addwf	_PMON^(0+128),w
 17413  0EA1  0020               	movlb	0	; select bank0
 17414  0EA2  0765               	addwf	_TALA,w
 17415  0EA3  0764               	addwf	_ALAF,w
 17416  0EA4  0021               	movlb	1	; select bank1
 17417  0EA5  0742               	addwf	_IDX^(0+128),w
 17418  0EA6  00FA               	movwf	??_Clock_ISR
 17419  0EA7  087A               	movf	??_Clock_ISR,w
 17420  0EA8  00F8               	movwf	i1DATAEE_WriteByte@bData
 17421  0EA9  3189  212C  318D   	fcall	i1_DATAEE_WriteByte
 17422  0EAC                     i1l4448:
 17423                           
 17424                           ;main.c: 311: };main.c: 312: if(t.m==60){
 17425  0EAC  303C               	movlw	60
 17426  0EAD  0020               	movlb	0	; select bank0
 17427  0EAE  0658               	xorwf	_t+1,w
 17428  0EAF  1D03               	btfss	3,2
 17429  0EB0  2EB2               	goto	u373_21
 17430  0EB1  2EB3               	goto	u373_20
 17431  0EB2                     u373_21:
 17432  0EB2  2EB8               	goto	i1l4454
 17433  0EB3                     u373_20:
 17434  0EB3                     i1l4450:
 17435                           
 17436                           ;main.c: 313: t.h++;
 17437  0EB3  3001               	movlw	1
 17438  0EB4  00FA               	movwf	??_Clock_ISR
 17439  0EB5  087A               	movf	??_Clock_ISR,w
 17440  0EB6  07D7               	addwf	_t,f
 17441  0EB7                     i1l4452:
 17442                           
 17443                           ;main.c: 314: t.m=0;
 17444  0EB7  01D8               	clrf	_t+1
 17445  0EB8                     i1l4454:
 17446                           
 17447                           ;main.c: 315: };main.c: 316: if(t.h==24){
 17448  0EB8  3018               	movlw	24
 17449  0EB9  0657               	xorwf	_t,w
 17450  0EBA  1D03               	btfss	3,2
 17451  0EBB  2EBD               	goto	u374_21
 17452  0EBC  2EBE               	goto	u374_20
 17453  0EBD                     u374_21:
 17454  0EBD  2EBF               	goto	i1l4458
 17455  0EBE                     u374_20:
 17456  0EBE                     i1l4456:
 17457                           
 17458                           ;main.c: 317: t.h=0;
 17459  0EBE  01D7               	clrf	_t
 17460  0EBF                     i1l4458:
 17461                           
 17462                           ;main.c: 318: };main.c: 321: if((ALAF == 'A') && t.s >= clkAlarm.alarmVal.s && t.m >= cl
      +                          kAlarm.alarmVal.m && t.h >= clkAlarm.alarmVal.h && editingClockAlarm == 0){
 17463  0EBF  3041               	movlw	65
 17464  0EC0  0664               	xorwf	_ALAF,w
 17465  0EC1  1D03               	btfss	3,2
 17466  0EC2  2EC4               	goto	u375_21
 17467  0EC3  2EC5               	goto	u375_20
 17468  0EC4                     u375_21:
 17469  0EC4  2EE7               	goto	i1l4472
 17470  0EC5                     u375_20:
 17471  0EC5                     i1l4460:
 17472  0EC5  084F               	movf	_clkAlarm+2,w
 17473  0EC6  0259               	subwf	_t+2,w
 17474  0EC7  1C03               	skipc
 17475  0EC8  2ECA               	goto	u376_21
 17476  0EC9  2ECB               	goto	u376_20
 17477  0ECA                     u376_21:
 17478  0ECA  2EE7               	goto	i1l4472
 17479  0ECB                     u376_20:
 17480  0ECB                     i1l4462:
 17481  0ECB  084E               	movf	_clkAlarm+1,w
 17482  0ECC  0258               	subwf	_t+1,w
 17483  0ECD  1C03               	skipc
 17484  0ECE  2ED0               	goto	u377_21
 17485  0ECF  2ED1               	goto	u377_20
 17486  0ED0                     u377_21:
 17487  0ED0  2EE7               	goto	i1l4472
 17488  0ED1                     u377_20:
 17489  0ED1                     i1l4464:
 17490  0ED1  084D               	movf	_clkAlarm,w
 17491  0ED2  0257               	subwf	_t,w
 17492  0ED3  1C03               	skipc
 17493  0ED4  2ED6               	goto	u378_21
 17494  0ED5  2ED7               	goto	u378_20
 17495  0ED6                     u378_21:
 17496  0ED6  2EE7               	goto	i1l4472
 17497  0ED7                     u378_20:
 17498  0ED7                     i1l4466:
 17499  0ED7  085C               	movf	_editingClockAlarm,w
 17500  0ED8  045D               	iorwf	_editingClockAlarm+1,w
 17501  0ED9  1D03               	btfss	3,2
 17502  0EDA  2EDC               	goto	u379_21
 17503  0EDB  2EDD               	goto	u379_20
 17504  0EDC                     u379_21:
 17505  0EDC  2EE7               	goto	i1l4472
 17506  0EDD                     u379_20:
 17507  0EDD                     i1l4468:
 17508                           
 17509                           ;main.c: 322: alarmPWMStart.h = 0xff;
 17510  0EDD  30FF               	movlw	255
 17511  0EDE  00FA               	movwf	??_Clock_ISR
 17512  0EDF  087A               	movf	??_Clock_ISR,w
 17513  0EE0  00E7               	movwf	_alarmPWMStart
 17514  0EE1                     i1l4470:
 17515                           
 17516                           ;main.c: 323: clkAlarm.trigger = 1;
 17517  0EE1  01D0               	clrf	_clkAlarm+3
 17518  0EE2  0AD0               	incf	_clkAlarm+3,f
 17519                           
 17520                           ;main.c: 324: clkAlarm.alarmVal.h = 25;
 17521  0EE3  3019               	movlw	25
 17522  0EE4  00FA               	movwf	??_Clock_ISR
 17523  0EE5  087A               	movf	??_Clock_ISR,w
 17524  0EE6  00CD               	movwf	_clkAlarm
 17525  0EE7                     i1l4472:
 17526  0EE7  1003               	clrc
 17527  0EE8  1F96               	btfss	22,7	;volatile
 17528  0EE9  1403               	setc
 17529  0EEA  1803               	btfsc	3,0
 17530  0EEB  2EED               	goto	u380_21
 17531  0EEC  2EF0               	goto	u380_20
 17532  0EED                     u380_21:
 17533  0EED  0020               	movlb	0	; select bank0
 17534  0EEE  1796               	bsf	22,7	;volatile
 17535  0EEF  2EF2               	goto	u381_24
 17536  0EF0                     u380_20:
 17537  0EF0  0020               	movlb	0	; select bank0
 17538  0EF1  1396               	bcf	22,7	;volatile
 17539  0EF2                     u381_24:
 17540  0EF2                     i1l1140:
 17541  0EF2  0008               	return
 17542  0EF3                     __end_of_Clock_ISR:
 17543                           
 17544                           	psect	text62
 17545  176A                     __ptext62:	
 17546 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 17547 ;; Defined at:
 17548 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 17549 ;; Parameters:    Size  Location     Type
 17550 ;;		None
 17551 ;; Auto vars:     Size  Location     Type
 17552 ;;		None
 17553 ;; Return value:  Size  Location     Type
 17554 ;;                  1    wreg      void 
 17555 ;; Registers used:
 17556 ;;		None
 17557 ;; Tracked objects:
 17558 ;;		On entry : 0/0
 17559 ;;		On exit  : 0/0
 17560 ;;		Unchanged: 0/0
 17561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17566 ;;Total ram usage:        0 bytes
 17567 ;; Hardware stack levels used:    1
 17568 ;; This function calls:
 17569 ;;		Nothing
 17570 ;; This function is called by:
 17571 ;;		_TMR1_Initialize
 17572 ;;		_TMR1_ISR
 17573 ;; This function uses a non-reentrant model
 17574 ;;
 17575                           
 17576                           
 17577                           ;psect for function _TMR1_DefaultInterruptHandler
 17578  176A                     _TMR1_DefaultInterruptHandler:
 17579  176A                     i1l420:	
 17580                           ;incstack = 0
 17581                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 17582                           
 17583  176A  0008               	return
 17584  176B                     __end_of_TMR1_DefaultInterruptHandler:
 17585                           
 17586                           	psect	text63
 17587  092C                     __ptext63:	
 17588 ;; *************** function i1_DATAEE_WriteByte *****************
 17589 ;; Defined at:
 17590 ;;		line 180 in file "mcc_generated_files/memory.c"
 17591 ;; Parameters:    Size  Location     Type
 17592 ;;  bAdd            2    6[COMMON] unsigned int 
 17593 ;;  bData           1    8[COMMON] unsigned char 
 17594 ;; Auto vars:     Size  Location     Type
 17595 ;;  GIEBitValue     1    9[COMMON] unsigned char 
 17596 ;; Return value:  Size  Location     Type
 17597 ;;                  1    wreg      void 
 17598 ;; Registers used:
 17599 ;;		wreg, status,2, status,0
 17600 ;; Tracked objects:
 17601 ;;		On entry : 0/0
 17602 ;;		On exit  : 0/0
 17603 ;;		Unchanged: 0/0
 17604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17605 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17608 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17609 ;;Total ram usage:        4 bytes
 17610 ;; Hardware stack levels used:    1
 17611 ;; This function calls:
 17612 ;;		Nothing
 17613 ;; This function is called by:
 17614 ;;		_Clock_ISR
 17615 ;;		_monitoring_ISR
 17616 ;; This function uses a non-reentrant model
 17617 ;;
 17618                           
 17619                           
 17620                           ;psect for function i1_DATAEE_WriteByte
 17621  092C                     i1_DATAEE_WriteByte:
 17622  092C                     i1l4172:	
 17623                           ;incstack = 0
 17624                           ; Regs used in i1_DATAEE_WriteByte: [wreg+status,2+status,0]
 17625                           
 17626                           
 17627                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 17628  092C  3000               	movlw	0
 17629  092D  1B8B               	btfsc	11,7	;volatile
 17630  092E  3001               	movlw	1
 17631  092F  00F9               	movwf	i1DATAEE_WriteByte@GIEBitValue
 17632                           
 17633                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 17634  0930  0877               	movf	i1DATAEE_WriteByte@bAdd+1,w
 17635  0931  0030               	movlb	16	; select bank16
 17636  0932  009B               	movwf	27	;volatile
 17637  0933                     i1l4174:
 17638                           
 17639                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 17640  0933  0876               	movf	i1DATAEE_WriteByte@bAdd,w
 17641  0934  009A               	movwf	26	;volatile
 17642  0935                     i1l4176:
 17643                           
 17644                           ;memory.c: 186: NVMDATL = bData;
 17645  0935  0878               	movf	i1DATAEE_WriteByte@bData,w
 17646  0936  009C               	movwf	28	;volatile
 17647  0937                     i1l4178:
 17648                           
 17649                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 17650  0937  171E               	bsf	30,6	;volsfr
 17651  0938                     i1l4180:
 17652                           
 17653                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 17654  0938  151E               	bsf	30,2	;volsfr
 17655  0939                     i1l4182:
 17656                           
 17657                           ;memory.c: 189: INTCONbits.GIE = 0;
 17658  0939  138B               	bcf	11,7	;volatile
 17659  093A                     i1l4184:
 17660                           
 17661                           ;memory.c: 190: NVMCON2 = 0x55;
 17662  093A  3055               	movlw	85
 17663  093B  009F               	movwf	31	;volsfr
 17664  093C                     i1l4186:
 17665                           
 17666                           ;memory.c: 191: NVMCON2 = 0xAA;
 17667  093C  30AA               	movlw	170
 17668  093D  009F               	movwf	31	;volsfr
 17669  093E                     i1l4188:
 17670                           
 17671                           ;memory.c: 192: NVMCON1bits.WR = 1;
 17672  093E  149E               	bsf	30,1	;volsfr
 17673  093F                     i1l1338:	
 17674                           ;memory.c: 195: {
 17675                           
 17676  093F  189E               	btfsc	30,1	;volsfr
 17677  0940  2942               	goto	u350_21
 17678  0941  2943               	goto	u350_20
 17679  0942                     u350_21:
 17680  0942  293F               	goto	i1l1338
 17681  0943                     u350_20:
 17682  0943                     i1l1340:
 17683                           
 17684                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 17685  0943  111E               	bcf	30,2	;volsfr
 17686  0944                     i1l4190:
 17687                           
 17688                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 17689  0944  0C79               	rrf	i1DATAEE_WriteByte@GIEBitValue,w
 17690  0945  1C03               	skipc
 17691  0946  138B               	bcf	11,7	;volatile
 17692  0947  1803               	skipnc
 17693  0948  178B               	bsf	11,7	;volatile
 17694  0949                     i1l1341:
 17695  0949  0008               	return
 17696  094A                     __end_ofi1_DATAEE_WriteByte:
 17697  007E                     btemp	set	126	;btemp
 17698  007E                     int$flags	set	126
 17699  007E                     wtemp0	set	126
 17700                           
 17701                           	psect	config
 17702                           
 17703                           ;Config register CONFIG1 @ 0x8007
 17704                           ;	External Oscillator mode selection bits
 17705                           ;	FEXTOSC = OFF, Oscillator not enabled
 17706                           ;	Power-up default value for COSC bits
 17707                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 17708                           ;	Clock Out Enable bit
 17709                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 17710                           ;	Clock Switch Enable bit
 17711                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 17712                           ;	Fail-Safe Clock Monitor Enable bit
 17713                           ;	FCMEN = ON, FSCM timer enabled
 17714  8007                     	org	32775
 17715  8007  3FEC               	dw	16364
 17716                           
 17717                           ;Config register CONFIG2 @ 0x8008
 17718                           ;	Master Clear Enable bit
 17719                           ;	MCLRE = ON, MCLR pin is Master Clear function
 17720                           ;	Power-up Timer Enable bit
 17721                           ;	PWRTE = OFF, PWRT disabled
 17722                           ;	Low-Power BOR enable bit
 17723                           ;	LPBOREN = OFF, ULPBOR disabled
 17724                           ;	Brown-out reset enable bits
 17725                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 17726                           ;	Brown-out Reset Voltage Selection
 17727                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 17728                           ;	Zero-cross detect disable
 17729                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 17730                           ;	Peripheral Pin Select one-way control
 17731                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 17732                           ;	Stack Overflow/Underflow Reset Enable bit
 17733                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 17734                           ;	Background Debugger
 17735                           ;	DEBUG = OFF, Background Debugger disabled
 17736  8008                     	org	32776
 17737  8008  3FFF               	dw	16383
 17738                           
 17739                           ;Config register CONFIG3 @ 0x8009
 17740                           ;	WDT Period Select bits
 17741                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 17742                           ;	WDT operating mode
 17743                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 17744                           ;	WDT Window Select bits
 17745                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 17746                           ;	WDT input clock selector
 17747                           ;	WDTCCS = SC, Software Control
 17748  8009                     	org	32777
 17749  8009  3F9F               	dw	16287
 17750                           
 17751                           ;Config register CONFIG4 @ 0x800A
 17752                           ;	UserNVM self-write protection bits
 17753                           ;	WRT = OFF, Write protection off
 17754                           ;	Scanner Enable bit
 17755                           ;	SCANE = available, Scanner module is available for use
 17756                           ;	Low Voltage Programming Enable bit
 17757                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 17758  800A                     	org	32778
 17759  800A  3FFF               	dw	16383
 17760                           
 17761                           ;Config register CONFIG5 @ 0x800B
 17762                           ;	UserNVM Program memory code protection bit
 17763                           ;	CP = OFF, Program Memory code protection disabled
 17764                           ;	DataNVM code protection bit
 17765                           ;	CPD = OFF, Data EEPROM code protection disabled
 17766  800B                     	org	32779
 17767  800B  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    10
    Data        7
    BSS         35
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      80
    BANK1            80     17      36
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    differenceBetweenTimePeriod@diff	PTR struct Time size(1) Largest target is 3
		 -> menuLCD_ISR@diff(BANK0[3]), 

    LCDstr@p	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR5_ISR->_monitoring_ISR
    _monitoring_ISR->i1_DATAEE_WriteByte
    _tsttc->i1_WriteI2C
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->i1_LCDsend2x4
    _LCDcmd->i1_LCDsend2x4
    i1_LCDsend2x4->i1_WriteI2C
    _TMR1_ISR->_Clock_ISR
    _Clock_ISR->i1_DATAEE_WriteByte
    i1_DATAEE_WriteByte->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR3_ISR->_menuLCD_ISR
    _menuLCD_ISR->_sprintf

Critical Paths under _main in BANK1

    _main->_LCDinit
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    7309
                                              9 BANK1      8     8      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _LCDinit
                 _PWM6_LoadDutyValue
              _PWM_Output_D4_Disable
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                     _TMR2_StopTimer
           _TMR3_SetInterruptHandler
           _TMR5_SetInterruptHandler
                          _editClock
                            _editLum
                           _editTemp
                   _i2c1_driver_open
                       _toggleAlarms
 ---------------------------------------------------------------------------------
 (1) _toggleAlarms                                         1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _editTemp                                             1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editLum                                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editClock                                            1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StopTimer                                       0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (2) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     522
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0     174
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     174
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Output_D4_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     220
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     780
                                              8 BANK1      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend2x4                                           6     5      1     736
                                              2 BANK1      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK1      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     4     1      3    4017
                                              0 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      2     0      2    1108
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    9775
                           _TMR1_ISR
                           _TMR3_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR5_ISR                                             0     0      0    2511
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                     _monitoring_ISR *
 ---------------------------------------------------------------------------------
 (6) _monitoring_ISR                                       3     3      0    2271
                                             10 COMMON     3     3      0
           _ADCC_GetSingleConversion
                             ___wmul
                              _tsttc
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (7) _tsttc                                                2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (6) _TMR5_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR5_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0    5999
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
                        _menuLCD_ISR *
 ---------------------------------------------------------------------------------
 (6) _menuLCD_ISR                                         24    24      0    5759
                                             21 BANK0     24    24      0
                            _LCDchar
                             _LCDcmd
                             _LCDstr
               _PWM_Output_D4_Enable
                    _TMR2_StartTimer
        _differenceBetweenTimePeriod
                            _sprintf
               i1_PWM6_LoadDutyValue
            i1_PWM_Output_D4_Disable
                   i1_TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (7) i1_TMR2_StopTimer                                     0     0      0       0
                        i1_TMR2_Stop
 ---------------------------------------------------------------------------------
 (8) i1_TMR2_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM_Output_D4_Disable                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM6_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             29    21      8    3411
                                              0 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    1156
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _differenceBetweenTimePeriod                          8     1      7     595
                                              0 COMMON     8     1      7
 ---------------------------------------------------------------------------------
 (7) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (8) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PWM_Output_D4_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LCDstr                                               3     3      0     550
                                              9 COMMON     3     3      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (8) _LCDchar                                              1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (7) _LCDcmd                                               1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (9) i1_LCDsend2x4                                         6     5      1     384
                                              2 COMMON     6     5      1
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) i1_WriteI2C                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _TMR3_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0    1265
                   Absolute function *
                          _Clock_ISR *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Clock_ISR                                            1     1      0    1025
                                             10 COMMON     1     1      0
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (7) i1_DATAEE_WriteByte                                   4     1      3    1025
                                              6 COMMON     4     1      3
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _PWM6_LoadDutyValue
   _PWM_Output_D4_Disable
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_StopTimer
     _TMR2_Stop
   _TMR3_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _editClock
   _editLum
   _editTemp
   _i2c1_driver_open
   _toggleAlarms

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _Clock_ISR *
       i1_DATAEE_WriteByte
         ___wmul (ARG)
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *
     _menuLCD_ISR *
       _LCDchar
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDcmd
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDstr
         _LCDchar
           i1_LCDsend2x4
             i1_WriteI2C
       _PWM_Output_D4_Enable
       _TMR2_StartTimer
         _TMR2_Start
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       i1_PWM6_LoadDutyValue
       i1_PWM_Output_D4_Disable
       i1_TMR2_StopTimer
         i1_TMR2_Stop
   _TMR5_ISR
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _monitoring_ISR *
       _ADCC_GetSingleConversion
       ___wmul
       _tsttc
         _ReadI2C
         i1_WriteI2C
       i1_DATAEE_WriteByte
         ___wmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     11      24       7       45.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      82      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      82      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Nov 02 22:11:08 2020

                                       _t 0057          __end_of_TMR5_SetInterruptHandler 1797  
                              i1_WriteI2C 0B4F                                        l30 0C46  
                                      l33 0C0E                                        l42 0C30  
                                      l35 0C13                                        l47 0C44  
                     ___wmul@multiplicand 0072                         ??_TMR5_WriteTimer 0072  
             __size_of_PWM6_LoadDutyValue 0019                                       l122 0B4E  
                                     l172 092B                                       l175 17C9  
                                     l239 17D5                                       l417 178A  
                                     l178 17C0                                       l451 09A6  
                                     l481 1790                                       l705 1796  
                                     l722 08F5                                       l563 08DC  
                                     l387 0987                                       l719 17E2  
                                     l675 09C5                                       l764 177C  
                                     l749 17F0                                       l950 0BE8  
                                     l767 07FF                                       l953 0BEC  
                                     l937 0BAB                                       l938 0BAD  
                                     l949 0BE6                                       _IDX 00C2  
                                     _PR2 028D                           _timer1ReloadVal 00B9  
                 __size_of_PMD_Initialize 0008                           _TMR2_Initialize 17E3  
                                     wreg 0009                               ?_LCDsend2x4 00A2  
                         __end_of_LCDchar 17B9                                      l1040 0728  
                                    l1104 1779                                      l1211 0CF0  
                                    l1212 0CD5                                      l1070 07D7  
                                    l1054 0778                                      l1230 0D3F  
                                    l1063 07B8                                      l1039 0726  
                                    l1073 0CBC                                      l1233 0A69  
                                    l1066 07CE                                      l1242 0A9D  
                                    l1234 0A82                                      l1067 07D0  
                                    l1235 0A7D                                      l1340 07F4  
                                    l1341 07FB                                      l1245 0A31  
                                    l1254 0A65                                      l1246 0A4A  
                                    l1247 0A45                                      l1344 17FF  
                                    l1265 0ACB                                      l1257 0A9E  
                                    l1338 07F0                                      l1258 0AB4  
                                    l1267 0AD5                                      l1259 0AAF  
                         _timer3ReloadVal 006E                                      l1292 0251  
                                    l1293 0254                                      l1285 0249  
                                    l1294 0257                                      l4200 0B1E  
                                    l5000 0195                                      l4210 0B29  
                                    l4202 0B20                                      l5010 01D6  
                                    l5002 01A2                                      l4220 0B3D  
                                    l4212 0B2B                                      l4204 0B22  
                                    l4300 17ED                                      l5020 020B  
                                    l5012 01E3                                      l5004 01AF  
                                    l4230 0B49                                      l4222 0B3F  
                                    l4214 0B37                                      l4206 0B25  
                                    l4310 0972                                      l4302 0969  
                                    l5030 0212                                      l5022 020C  
                                    l5014 01F0                                      l5006 01BC  
                                    l4400 077F                                      l4240 17C5  
                                    l4232 0B4B                                      l4224 0B41  
                                    l4216 0B39                                      l4208 0B27  
                                    l4312 0979                                      l4304 096C  
                                    l5040 021B                                      l5032 0214  
                                    l5024 020D                                      l5016 01FD  
                                    l5008 01C9                                      l4410 07B8  
                                    l4402 078E                                      l4250 08D8  
                                    l4242 17C8                                      l4226 0B44  
                                    l4218 0B3B                                      l4234 17B9  
                                    l4314 097B                                      l4306 096E  
                                    l5050 0232                                      l5042 021C  
                                    l5034 0215                                      l5026 020E  
                                    l5018 0209                                      l4412 07BF  
                                    l4404 0794                                      l4252 08DA  
                                    l4236 17C1                                      l4228 0B47  
                                    l4244 17D6                                      l4316 097C  
                                    l4308 0970                                      l4260 098F  
                                    l5060 024E                                      l5052 0237  
                                    l5044 021D                                      l5036 0217  
                                    l5028 020F                                      l4414 07D4  
                                    l4406 07A3                                      l4238 17C4  
                                    l4246 17DD                                      l4318 0984  
                                    l4270 09A3                                      l4262 0991  
                                    l4254 0988                                      l5054 023C  
                                    l5046 0222                                      l5062 025B  
                                    l5038 0218                                      l4408 07A9  
                                    l4248 08C6                                      l4192 0B12  
                                    l4264 0998                                      l4256 098B  
                                    l4280 09B0                                      l4272 09A7  
                                    l5056 0241                                      l5048 022B  
                                    l4370 0BC0                                      l4194 0B18  
                                    l4290 17E3                                      l4266 099A  
                                    l4258 098D                                      l4282 09B7  
                                    l4274 09AA                                      l4362 177A  
                                    l5058 0245                                      l4372 0BC4  
                                    l4364 0B9C                                      l4380 070B  
                                    l4196 0B1A                                      l4292 17E6  
                                    l4268 099B                                      l4284 09B9  
                                    l4276 09AC                                      l4374 0BD3  
                                    l4366 0B9C                                      l4390 074E  
                                    l4382 0717                                      l4198 0B1C  
                                    l4294 17E7                                      l4286 09BA  
                                    l4278 09AE                                      l4800 07D8  
                                    l4376 0BD7                                      l4368 0BB1  
                                    l4392 0754                                      l4384 072C  
                                    l4296 17EA                                      l4288 09C2  
                                    l4640 0910                                      l5088 0260  
                         __end_of_LCDinit 0CBD                                      l4810 07EA  
                                    l4802 07E0                                      l3930 0BF2  
                                    l4394 0763                                      l4386 073B  
                                    l4378 0706                                      l4298 17EB  
                                    l4650 091F                                      l4642 0913  
                                    l4900 17F1                                      l4812 07EB  
                                    l4804 07E4                                      l3940 0C0C  
                                    l4396 0769                                      l4388 073F  
                                    l4652 0922                                      l4644 0916  
                                    l4820 0CBD                                      l4660 17CF  
                                    l4910 17FC                                      l4902 17F5  
                                    l4814 07ED                                      l4806 07E8  
                                    l3950 0C25                                      l3942 0C18  
                                    l4398 0778                                      l4654 0925  
                                    l4646 0919                                      l4830 0CEB  
                                    l4822 0CC2                                      l4662 17D0  
                                    l4912 17FD                                      l4904 17F9  
                                    l4816 07EF                                      l4808 07E9  
                                    l3952 0C35                                      l3936 0BF7  
                                    l3928 0BEF                                      l3960 178B  
                                    l4656 0928                                      l4648 091C  
                                    l4840 0D0A                                      l4832 0CF5  
                                    l4824 0CC7                                      l4664 17D2  
                                    l4906 17FA                                      l4818 07F5  
                                    l3938 0C01                                      l4770 0C5C  
                                    l4850 0D27                                      l4842 0D11  
                                    l4834 0CFB                                      l4826 0CD9  
                                    l4658 17CA                                      l4908 17FB  
                                    l3948 0C1A                                      l4780 0C7C  
                                    l4772 0C60                                      l4764 0C47  
                                    l4852 0D2D                                      l4844 0D17  
                                    l4836 0D01                                      l4828 0CE8  
                                    l4860 0A6E                                      l4790 0CA0  
                                    l4782 0C84                                      l4774 0C6C  
                                    l4766 0C50                                      l4694 08DD  
                                    l3958 1785                                      l4854 0D2F  
                                    l4846 0D19                                      l4838 0D03  
                                    l4870 0A92                                      l4862 0A77  
                                    l4792 0CA6                                      l4784 0C88  
                                    l4776 0C70                                      l4768 0C54  
                                    l3976 1791                                      l4696 07FC  
                                    l4848 0D20                                      l4856 0D35  
                                    l4880 0A41                                      l4872 0A93  
                                    l4864 0A79                                      l4960 006C  
                                    l4794 0CAC                                      l4786 0C94  
                                    l4778 0C78                                      l4882 0A4E  
                                    l4874 0A2E                                      l4866 0A86  
                                    l4858 0A66                                      l4890 0AA3  
                                    l4970 008F                                      l4962 006F  
                                    l4796 0CB2                                      l4788 0C98  
                                    l4884 0A54                                      l4876 0A36  
                                    l4868 0A8C                                      l4892 0AAC  
                                    l4980 00A1                                      l4972 009B  
                                    l4964 008A                                      l4798 1777  
                                    l4886 0A5A                                      l4878 0A3F  
                                    l4894 0AB8                                      l4982 00B9  
                                    l4974 009D                                      l4990 00DA  
                                    l4966 008C                                      l4958 0062  
                                    l4888 0A5B                                      l4896 0ABE  
                                    l4992 00E0                                      l4984 00BD  
                                    l4968 008E                                      l4898 0AC5  
                                    l4994 00E5                                      l4986 00CA  
                                    l4996 017D                                      l4988 00D8  
                                    l4998 0189                                      _ALAF 0064  
                         __end_of_LCDsend 0BED                                      STR_1 1000  
                                    STR_2 1000                                      STR_3 180A  
                                    STR_4 180A                                      STR_5 1811  
                                    STR_6 1811                                      u3000 0C35  
                                    u3001 0C34                                      u3010 0C44  
                                    u3011 0C43                                      _LATA 0016  
                                    _LATB 0017                                      _LATC 0018  
                                    _LATD 0019                                      _LATE 001A  
                                    _T2PR 028D                                      u4150 17CF  
                                    u5007 0C4B                                      u4151 17CE  
                                    u5017 0C59                                      u3610 0726  
                                    u5107 07D5                                      u3611 0725  
                                    u5027 0C61                                      u3540 0BAB  
                                    u3700 07CE                                      u3620 072C  
                                    u4500 0CE8                                      u3541 0BAA  
                                    u3701 07CD                                      u3621 072B  
                                    u3605 070E                                      u5037 0C6D  
                                    u4501 0CE7                                      u3550 0BB1  
                                    u3710 07D4                                      u3630 073B  
                                    u4510 0CF5                                      u3551 0BB0  
                                    u3711 07D3                                      u3631 073A  
                                    u5047 0C75                                      u4511 0CF4  
                                    u3560 0BC0                                      u3640 074E  
                                    u4520 0CFB                                      u4600 0A86  
                                    u3561 0BBF                                      u3641 074D  
                                    u5057 0C81                                      u4521 0CFA  
                                    u4505 0CE4                                      u4601 0A85  
                                    u2930 0BF6                                      u3570 0BD3  
                                    u3650 0763                                      u4530 0D01  
                                    u4610 0A92                                      u2931 0BF5  
                                    u3571 0BD2                                      u3651 0762  
                                    u5067 0C89                                      u4195 08EE  
                                    u4531 0D00                                      u4611 0A91  
                                    u2940 0C01                                      u3580 0BE6  
                                    u3660 0778                                      u4540 0D11  
                                    u4620 0A36                                      _PMD0 0796  
                                    u2941 0C00                                      u3581 0BE5  
                                    u3661 0777                                      u5077 0C95  
                                    u4541 0D10                                      u4621 0A35  
                                    _PMD1 0797                                      i1l30 0B99  
                                    i1l22 0909                                      u4470 07F4  
                                    u2950 0C0C                                      u3590 0BEC  
                                    u3670 078E                                      u4550 0D17  
                                    u4630 0A49                                      _PMD2 0798  
                                    i1l23 090A                                      u4471 07F3  
                                    u2951 0C0B                                      u3591 0BEB  
                                    u3671 078D                                      u5087 0C9D  
                                    u4551 0D16                                      u4631 0A48  
                                    _PMD3 0799                                      u2960 0C13  
                                    u3680 07A3                                      u4560 0D27  
                                    u4480 0CC7                                      u4640 0A4E  
                                    u4800 009B                                      _PMD4 079A  
                                    i1l33 0B6B                                      u2961 0C12  
                                    u3681 07A2                                      u5097 0CB9  
                                    u4561 0D26                                      u4481 0CC6  
                                    u4641 0A4D                                      u4801 009A  
                                    _PMD5 079B                                      i1l42 0B89  
                                    i1l26 090F                                      u2970 0C18  
                                    u3690 07B8                                      u4570 0D2D  
                                    u4490 0CD9                                      u4650 0A5A  
                                    u4810 00CA                                      i1l35 0B70  
                                    u2971 0C17                                      u3691 07B7  
                                    u4571 0D2C                                      u4491 0CD8  
                                    u4651 0A59                                      u4811 00C9  
                                    u2980 0C25                                      u4580 0A6E  
                                    u4660 0AA3                                      u4900 024D  
                                    u4820 00D8                                      u2981 0C24  
                                    u4581 0A6D                                      u4661 0AA2  
                                    u4901 024C                                      u4821 00D7  
                                    u2990 0C30                                      u4590 0A81  
                                    u4670 0AB3                                      u4830 00E0  
                                    i1l47 0B98                                      u2991 0C2F  
                                    u4591 0A80                                      u4671 0AB2  
                                    u4831 00DF                                      u4815 00C6  
                                    u4680 0AB8                                      u4840 00E5  
                                    u4681 0AB7                                      u4841 00E4  
                                    u4690 0ABE                                      u4850 0222  
                                    u4691 0ABD                                      u4851 0221  
                                    u4860 0232                                      u4861 0231  
                                    u4917 0226                                      _TALA 0065  
                                    u4870 0237                                      u4927 0AA7  
                                    u4871 0236                                      u4880 023C  
                                    u4937 0ACF                                      u4881 023B  
                                    u4890 0241                                      u4947 0A72  
                                    u4891 0240                                      u4957 0A97  
                                    u4967 0A3A                                      u4977 0A5F  
                                    _NREG 0066                                      u4987 0CCB  
                                    u4997 0D39                                      _PMON 00C3  
                                    _TMR2 028C                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                             main@notInit 00AD                              ?_menuLCD_ISR 0070  
                                    _main 0062                                      _mode 005A  
                                    _temp 0063                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                                    start 0040                           _timer5ReloadVal 00B3  
                         _TMR3_Initialize 0988                ??_TMR1_SetInterruptHandler 00A2  
                         __end_of_ReadI2C 0910                 __size_of_DATAEE_WriteByte 0024  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 17CA  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                  __end_of_i2c1_driver_open 17D6  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                                     _ADPRE 009C  
                                   _ADRPT 010D                                     _T1CLK 0211  
                                   _T1CON 020E                                     _T3CLK 0217  
                                   _T2CON 028E                                     _T3CON 0214  
                                   _T5CLK 021D                                     _T2HLT 028F  
                                   _T5CON 021A                           __end_of___lwdiv 0B12  
                                   _T2TMR 028C                                     i1l401 0810  
                                   _T2RST 0291                                     i1l420 176A  
                                   i1l414 0897                                     i1l350 003E  
                                   i1l351 0038                           __end_of___lwmod 0A2E  
                                   i1l345 0017                                     i1l347 0023  
                                   i1l356 003E                                     i1l349 002F  
                                   i1l702 08C5                                     i1l465 0821  
                                   i1l722 0880                                     i1l484 0002  
                                   i1l708 0003                                     i1l478 08AE  
                                   i1l910 0FB6                                     i1l575 084D  
                                   i1l911 0FB7                                     i1l761 1780  
                                   i1l578 0856                                     i1l922 0FE8  
                                   i1l923 0FEA                                     i1l764 1776  
                                   i1l932 0FFF                                     i1l861 0EFF  
                                   i1l758 1770                                     i1l862 0F00  
                                   i1l767 1784                                     i1l928 0FF9  
                                   i1l689 0832                                     i1l929 0FFA  
                                   i1l873 0F2F                                     i1l874 0F30  
                                   i1l858 0EF3                                     i1l891 0F72  
                                   i1l892 0F73                                     i1l885 0F61  
                                   i1l894 0F77                                     i1l886 0F63  
                                   i1l898 0F86                                     i1l899 0F87  
                                   _OSCEN 0891                                     _TMR1H 020D  
                                   _TMR1L 020C                                     _TMR3H 0213  
                                   _TMR3L 0212                                     _TMR5H 0219  
                                   _TMR5L 0218                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
                         __end_of_editLum 0A66                           _PWM6_Initialize 17D6  
       __size_of_TMR3_SetInterruptHandler 0006                 ?_TMR3_SetInterruptHandler 00A0  
                __end_ofi1_TMR2_StopTimer 1785                          __end_of_TMR1_ISR 0898  
                        __end_of_TMR3_ISR 08AF                          __end_of_TMR5_ISR 08C6  
                         _DATAEE_ReadByte 17F1            ??_TMR3_DefaultInterruptHandler 0070  
                         __end_of_dpowers 180A                        __size_of_TMR2_Stop 0003  
                             ?_TMR2_Start 0070                           __end_of_isdigit 0845  
                                   main@i 00AF                                     _tsttc 0EF3  
                 __end_of_TMR1_Initialize 0988                                     pclath 000A  
                          menuLCD_ISR@str 003B                                     status 0003  
                                   wtemp0 007E                           __end_of_sprintf 05E4  
                  ??_PWM_Output_D4_Enable 0070                           _TMR2_StartTimer 177D  
                         _TMR1_WriteTimer 0800                           _TMR5_Initialize 09A7  
                         __initialization 0042                              ?i1_TMR2_Stop 0070  
                            __end_of_main 0273                               ?i1_WriteI2C 0070  
                     __size_of_LCDsend2x4 00D4                   __end_of_TMR2_Initialize 17F1  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 00A9  
                _TMR5_SetInterruptHandler 1791                        __size_of_Clock_ISR 0100  
                   _TMR3_InterruptHandler 00B5          differenceBetweenTimePeriod@start 0070  
                               ??_LCDchar 0078                                 ??_LCDinit 00A8  
                               ??_LCDsend 00A2                __end_ofi1_DATAEE_WriteByte 094A  
                                  _ADACCH 0091                                    _ADACCL 0090  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  _ADLTHH 010F                                    _ADLTHL 010E  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                                  _ADUTHL 0110                          __end_of_WriteI2C 0C47  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                                    _T1GATE 0210  
                                  _T1GCON 020F                                    ?_tsttc 0070  
                                  _T3GATE 0216                                    _T3GCON 0215  
                                  _T5GATE 021C                                    _T5GCON 021B  
                                  _RA6PPS 0F16                                    _RC3PPS 0F23  
                                  i1l1101 176D                                    i1l1040 0D5F  
                                  i1l2000 0844                                    i1l1104 1773  
                 TMR1_WriteTimer@timerVal 0070                                    _RC4PPS 0F24  
                                  i1l1140 0EF2                                    i1l1070 0DF2  
                                  i1l1054 0DA2                                    i1l1063 0DD8  
                                  i1l1039 0D5E                                    i1l1207 0703  
                                  i1l1066 0DEA                                    i1l1067 0DEB  
                                  i1l1171 0422                                    i1l1155 0333  
                                  i1l1340 0943                                    i1l1076 17A9  
                                  i1l1164 039E                                    i1l1341 0949  
                                  i1l1085 086A                                    i1l1181 0446  
                                  i1l1158 0383                                    i1l1079 17B8  
                                  i1l4000 0F55                                    _ODCONA 0F3A  
                                  i1l1338 093F                                    i1l1098 09F9  
                                  i1l4010 0F9A                                    i1l4002 0F67  
                                  _ODCONB 0F45                                    _ODCONC 0F50  
                                  i1l1508 0464                                    i1l4020 0FCA  
                                  i1l4012 0FA6                                    i1l4004 0F7B  
                                  _ODCOND 0F5B                                    _ODCONE 0F66  
                                  i1l1526 0517                                    i1l4110 0507  
                                  i1l4022 0FD6                                    i1l4014 0FAA  
                                  i1l4006 0F8B                                    i1l1543 05E3  
                                  i1l4032 17A4                                    i1l4040 09C6  
                                  i1l4120 052E                                    i1l4112 050D  
                                  i1l4104 04E3                                    i1l4024 0FDC  
                                  i1l4016 0FBB                                    i1l4008 0F96  
                                  i1l4034 0858                                    i1l4050 09E3  
                                  i1l4042 09C7                                    i1l4130 0549  
                                  i1l4122 0532                                    i1l4114 0513  
                                  i1l4026 0FEE                                    i1l4018 0FC6  
                                  i1l1547 0954                                    i1l4036 0859  
                                  i1l4052 09E9                                    i1l4044 09CD  
                                  i1l4140 056C                                    i1l4132 0550  
                                  i1l4124 0538                                    i1l4116 0522  
                                  i1l4108 04FD                                    i1l4060 0454  
                                  i1l4028 0FFE                                    i1l1549 0968  
                                  i1l4038 085D                                    i1l4054 176B  
                                  i1l4046 09D3                                    i1l4142 0570  
                                  i1l4134 0554                                    i1l4150 058B  
                                  i1l4126 053F                                    i1l4118 052B  
                                  i1l4070 0469                                    i1l4062 045B  
                                  i1l4320 0800                                    i1l4048 09DD  
                                  i1l4152 0590                                    i1l4144 057A  
                                  i1l4128 0543                                    i1l4136 055F  
                                  i1l4080 04A1                                    i1l4072 0472  
                                  i1l4064 0460                                    i1l4160 05CB  
                                  i1l4056 0449                                    i1l4322 0805  
                                  i1l4330 080C                                    i1l4154 05B7  
                                  i1l4146 0580                                    i1l4138 0565  
                                  i1l4090 04D0                                    i1l4162 05DF  
                                  i1l4082 04A5                                    i1l4074 047E  
                                  i1l4066 0465                                    i1l4058 044E  
                                  i1l4170 1771                                    i1l1819 0B11  
                                  i1l4180 0938                                    i1l4172 092C  
                                  i1l4420 0E02                                    i1l4332 080E  
                                  i1l4324 0806                                    i1l4340 0819  
                                  i1l4156 05BE                                    i1l4148 0587  
                                  i1l4092 04D4                                    i1l4076 0481  
                                  i1l4500 02FB                   __end_of_TMR3_Initialize 09A7  
                                  i1l1829 0A2D                                    i1l4190 0944  
                                  i1l4182 0939                                    i1l4174 0933  
                                  i1l4430 0E32                                    i1l4422 0E03  
                                  i1l4326 0808                                    i1l4342 081B  
                                  i1l4334 0811                                    i1l4158 05C2  
                                  i1l4094 04D8                                    i1l4078 0492  
                                  i1l4086 04B1                                    i1l4166 086B  
                                  i1l4510 031D                                    i1l4502 0301  
                                  i1l4350 0827                                    i1l4184 093A  
                                  i1l4176 0935                                    i1l4440 0E6E  
                                  i1l4432 0E3E                                    i1l4424 0E0E  
                                  i1l4416 0DF3                                    i1l4328 080A  
                                  i1l4336 0816                                    i1l4344 081D  
                                  i1l4096 04DC                                    i1l4088 04C9  
                                  i1l4168 1781                                    i1l4520 0359  
                                  i1l4512 0322                                    i1l4504 030A  
                                  i1l4360 0830                                    i1l4352 0828  
                                  i1l4600 06BE                                    i1l4186 093C  
                                  i1l4178 0937                                    i1l4450 0EB3  
                                  i1l4442 0E7A                                    i1l4434 0E4A  
                                  i1l4426 0E1A                                    i1l4418 0DFE  
                                  i1l4346 081F                                    i1l4338 0817  
                                  i1l3810 0D6E                                    i1l3802 0D41  
                                  i1l4098 04E1                                    i1l4530 037B  
                                  i1l4522 035E                                    i1l4514 0327  
                                  i1l4506 0312                                    i1l4354 082A  
                                  i1l4610 06DB                                    i1l4602 06C5  
                                  i1l4188 093E                                    i1l4460 0EC5  
                                  i1l4452 0EB7                                    i1l4444 0E86  
                                  i1l4436 0E56                                    i1l4428 0E26  
                                  i1l3820 0D96                                    i1l3812 0D72  
                                  i1l3804 0D46                                    i1l3900 0B0D  
                                  i1l4540 03A2                                    i1l4532 0388  
                                  i1l4524 0364                                    i1l4516 033F  
                                  i1l4508 0318                                    i1l4356 082C  
                                  i1l4348 0822                                    i1l4620 06E6  
                                  i1l4612 06DF                                    i1l4604 06CB  
                                  i1l4470 0EE1                                    i1l4462 0ECB  
                                  i1l4454 0EB8                                    i1l4446 0E92  
                                  i1l4438 0E62                                    i1l3830 0DC6  
                                  i1l3822 0DA2                                    i1l3814 0D7E  
                                  i1l3806 0D52                                    i1l3910 0A08  
                                  i1l4550 03CF                                    i1l4542 03A8  
                                  i1l4534 038E                                    i1l4526 0372  
                                  i1l4518 0352                                    i1l4358 082E  
                                  i1l4630 06FB                                    i1l4622 06E7  
                                  i1l4614 06E1                                    i1l4606 06D1  
                                  i1l4464 0ED1                                    i1l4472 0EE7  
                                  i1l4456 0EBE                                    i1l4448 0EAC  
                                  i1l3832 0DCC                                    i1l3824 0DA8  
                                  i1l3816 0D84                                    i1l3808 0D63  
                                  i1l3920 0A23                                    i1l3912 0A0C  
                                  i1l3904 09FA                                    i1l4560 03FF  
                                  i1l4552 03D5                                    i1l4544 03B8  
                                  i1l4536 0391                                    i1l4528 0378  
                                  i1l4480 02B5                                    i1l3840 08F6  
                                  i1l4632 06FD                                    i1l4624 06ED  
                                  i1l4616 06E3                                    i1l4608 06D6  
                                  i1l4466 0ED7                                    i1l4458 0EBF  
                                  i1l3834 0DD8                                    i1l3826 0DB4  
                                  i1l3818 0D90                                    i1l3850 17B2  
                                  i1l3914 0A10                                    i1l3906 0A00  
                                  i1l3922 0A29                                    i1l4570 041D  
                                  i1l4562 0405                                    i1l4554 03E5  
                                  i1l4546 03C7                                    i1l4490 02D3  
                                  i1l4538 0395                                    i1l4482 02B9  
                                  i1l4474 0273                                    i1l3842 0900  
                                  i1l4634 06FF                                    i1l4626 06F2  
                                  i1l4618 06E5                                    i1l4468 0EDD  
                                  i1l3780 0B58                                    i1l3772 0B50  
                                  i1l3836 0DDE                                    i1l3828 0DBA  
                                  i1l3916 0A1A                                    i1l3908 0A03  
                                  i1l3860 0843                                    i1l3852 0834  
                                  i1l4580 043B                                    i1l4564 040A  
                                  i1l4572 0423                                    i1l4556 03F4  
                                  i1l4548 03CB                                    i1l4492 02DC  
                                  i1l4484 02BD                                    i1l4476 027A  
                                  i1l3844 090E                                    i1l4628 06F7  
                                  i1l4636 0701                                    i1l3782 0B61  
                                  i1l3774 0B53                                    i1l3838 0DEF  
                                  i1l3918 0A1E                                    i1l3870 0959  
                                  i1l3854 0835                                    i1l3926 1774  
                                  i1l4582 0442                                    i1l4574 042A  
                                  i1l4566 0411                                    i1l4558 03F8  
                                  i1l4494 02E4                                    i1l4486 02C4  
                                  i1l4478 0298                                    i1l4638 0702  
                                  i1l4590 0617                                    i1l4670 08AF  
                                  i1l3784 0B6A                                    i1l3792 0B77  
                                  i1l3848 176E                                    i1l3880 0AD8  
                                  i1l3872 095E                                    i1l3864 094A  
                                  i1l3856 083B                                    i1l4576 042F  
                                  i1l4568 0416                                    i1l4496 02EA  
                                  i1l4488 02CD                                    i1l4680 089A  
                                  i1l4592 06A8                                    i1l4584 05E4  
                                  i1l4672 08B1                                    i1l4920 0006  
                                  i1l4690 088B                                    i1l3794 0B80  
                                  i1l3786 0B75                                    i1l3890 0AEE  
                                  i1l3882 0ADE                                    i1l3874 0964  
                                  i1l3866 094C                                    i1l3858 0841  
                                  i1l4578 0436                                    i1l4498 02F3  
                                  i1l4682 08A2                                    i1l3970 084C  
                                  i1l3962 0846                                    i1l4594 06AD  
                                  i1l4586 05FD                                    i1l4674 08B9  
                                  i1l4930 001F                                    i1l4922 000A  
                                  i1l4692 0892                                    i1l3796 0B8D  
                                  i1l3892 0AFD                                    i1l3884 0AE1  
                                  i1l3868 0950                                    i1l4684 08A9  
                                  i1l3972 0852                                    i1l3964 0849  
                                  i1l3980 0EF3                                    i1l4596 06B4  
                                  i1l4588 060A                                    i1l4676 08C0  
                                  i1l4940 003C                                    i1l4932 0027  
                                  i1l4924 000F                                    i1l4686 0881  
                                  i1l3894 0B01                                    i1l3886 0AE6  
                                  i1l3878 0AD6                                    i1l4678 0898  
                                  i1l3966 084A                                    i1l3990 0F23  
                                  i1l3982 0F04                                    i1l4598 06B6  
                                  i1l4934 002B                                    i1l4926 0013  
                                  i1l4688 0883                                    i1l3896 0B02  
                                  i1l3888 0AEA                                    u302_20 0852  
                                  i1l3968 084B                                    u310_20 0F4F  
                                  i1l3992 0F34                                    i1l3984 0F0F  
                                  i1l4936 0033                                    i1l4928 001B  
                                  u302_21 0851                                    u310_21 0F4E  
                                  i1l3978 177D                                    i1l3898 0B07  
                                  i1l3994 0F3F                                    i1l3986 0F13  
                                  i1l3996 0F43                                    i1l3988 0F1F  
                                  i1l3998 0F4F                                    u311_20 0F61  
                                  u303_20 0EFF                                    u311_21 0F60  
                                  u303_21 0EFE                                    u400_20 041D  
                                  u320_20 0FB6                                    u312_20 0F67  
                                  u304_20 0F04                                    u400_21 041C  
                                  u320_21 0FB5                                    u312_21 0F66  
                                  u304_21 0F03                                    u401_20 042A  
                                  u321_20 0FBB                                    u313_20 0F72  
                                  u305_20 0F0F                                    u401_21 0429  
                                  u321_21 0FBA                                    u313_21 0F71  
                                  u305_21 0F0E                                    _LCDcmd 17A3  
                                  u250_20 0B57                                    u330_20 09E9  
                                  u402_20 0436                                    u322_20 0FC6  
                                  u314_20 0F77                                    u306_20 0F1F  
                                  u410_20 06D6                                    u250_21 0B56  
                                  u330_21 09E8                                    u402_21 0435  
                                  u322_21 0FC5                                    u314_21 0F76  
                                  u306_21 0F1E                                    u410_21 06D5  
                                  u251_20 0B61                                    u331_20 0454  
                                  u403_20 0442                                    u323_20 0FD6  
                                  u315_20 0F7B                                    u307_20 0F2F  
                                  u411_20 06DB                                    u251_21 0B60  
                                  u331_21 0453                                    u403_21 0441  
                                  u323_21 0FD5                                    u315_21 0F7A  
                                  u307_21 0F2E                                    u411_21 06DA  
                                  u252_20 0B6A                                    u260_20 0D5E  
                                  u340_20 0532                                    u332_20 047E  
                                  u324_20 0FE8                                    u316_20 0F86  
                                  u308_20 0F34                                    u412_20 06ED  
                                  u252_21 0B69                                    u260_21 0D5D  
                                  u340_21 0531                                    u332_21 047D  
                                  u324_21 0FE7                                    u316_21 0F85  
                                  u308_21 0F33                                    u412_21 06EC  
                                  u404_25 05F4                                    u253_20 0B70  
                                  u261_20 0D63                                    u341_20 0538  
                                  u333_20 04B1                                    u325_20 0FEE  
                                  u317_20 0F8B                                    u309_20 0F3F  
                                  u413_20 06F2                                    u405_20 060A  
                                  u253_21 0B6F                                    u261_21 0D62  
                                  u341_21 0537                                    u333_21 04B0  
                                  u325_21 0FED                                    u317_21 0F8A  
                                  u309_21 0F3E                                    u413_21 06F1  
                                  u405_21 0609                                    u405_25 0606  
                                  u350_20 0943                                    u254_20 0B75  
                                  u270_20 0DEF                                    u262_20 0D6E  
                                  u342_20 0549                                    u334_20 04D8  
                                  u326_20 0FF9                                    u318_20 0F96  
                                  u414_20 06F7                                    u406_20 0617  
                                  u350_21 0942                                    u254_21 0B74  
                                  u270_21 0DEE                                    u262_21 0D6D  
                                  u342_21 0548                                    u334_21 04D7  
                                  u326_21 0FF8                                    u318_21 0F95  
                                  u414_21 06F6                                    u406_21 0616  
                                  u406_25 0613                                    u351_20 0805  
                                  u255_20 0B80                                    u263_20 0D7E  
                                  u343_20 055E                                    u335_20 04FC  
                                  u271_20 0900                                    u327_20 0FFE  
                                  u319_20 0FA6                                    u407_20 06B4  
                                  u351_21 0804                                    u255_21 0B7F  
                                  u263_21 0D7D                                    u343_21 055D  
                                  u335_21 04FB                                    u271_21 08FF  
                                  u327_21 0FFD                                    u319_21 0FA5  
                                  u407_21 06B3                                    u335_25 04F8  
                                  u511_27 0DF0                                    u352_20 0816  
                                  u256_20 0B89                                    u264_20 0D90  
                                  u328_20 086A                                    u280_20 0ADE  
                                  u344_20 0565                                    u336_20 0507  
                                  u272_20 0909                                    u408_20 06CB  
                                  u416_20 08C0                                    u352_21 0815  
                                  u256_21 0B88                                    u264_21 0D8F  
                                  u328_21 0869                                    u280_21 0ADD  
                                  u344_21 0564                                    u336_21 0506  
                                  u272_21 0908                                    u408_21 06CA  
                                  u416_21 08BF                                    u257_20 0B8D  
                                  u265_20 0DA2                                    u329_20 09D3  
                                  u345_20 057A                                    u337_20 050D  
                                  u417_20 08A9                                    u353_20 0827  
                                  u273_20 090E                                    u409_20 06D1  
                                  u257_21 0B8C                                    u265_21 0DA1  
                                  u329_21 09D2                                    u345_21 0579  
                                  u337_21 050C                                    u417_21 08A8  
                                  u353_21 0826                                    u273_21 090D  
                                  u409_21 06D0                                    u281_25 0AE2  
                                  u418_20 0892                                    u258_20 0B98  
                                  u266_20 0DB4                                    u282_20 0AEE  
                                  u290_20 0A1A                                    u274_20 083B  
                                  u346_20 0580                                    u338_20 0513  
                                  u418_21 0891                                    u258_21 0B97  
                                  u266_21 0DB3                                    u282_21 0AED  
                                  u290_21 0A19                                    u274_21 083A  
                                  u346_21 057F                                    u338_21 0512  
                           main@corrupted 00AE                                    u290_25 0A16  
                                  u267_20 0DC6                                    u275_20 0841  
                                  u347_20 05CB                                    u339_20 0522  
                                  u267_21 0DC5                                    u275_21 0840  
                                  u347_21 05CA                                    u339_21 0521  
                                  u259_25 0D49                                    u283_25 0AEF  
                                  u291_25 0A1F                                    u339_25 051E  
                                  u380_20 0EF0                                    u372_20 0DFE  
                                  u268_20 0DD8                                    u284_20 0AFD  
                                  u292_20 0A29                                    u276_20 0950  
                                  u348_20 05DF                                    u380_21 0EED  
                                  u372_21 0DFD                                    u268_21 0DD7  
                                  u284_21 0AFC                                    u292_21 0A28  
                                  u276_21 094F                                    u348_21 05DE  
                                  u284_25 0AF9                                    _LCDstr 0857  
                                  u373_20 0EB3                                    u269_20 0DEA  
                                  u373_21 0EB2                                    u269_21 0DE9  
                                  u381_24 0EF2                                    u285_25 0B03  
                                  u277_25 0955                                    u349_25 087A  
                                  u374_20 0EBE                                    u286_20 0B0D  
                                  u390_20 0327                                    u382_20 027A  
                                  u470_20 000A                                    u374_21 0EBD  
                                  u286_21 0B0C                                    u390_21 0326  
                                  u382_21 0279                                    u470_21 0009  
                                  u278_25 095A                                    u375_20 0EC5  
                                  u287_20 0A00                                    u279_20 0964  
                                  u391_20 0359                                    u383_20 02C4  
                                  u471_20 000F                                    u375_21 0EC4  
                                  u287_21 09FF                                    u279_21 0963  
                                  u391_21 0358                                    u383_21 02C3  
                                  u471_21 000E                                    u376_20 0ECB  
                                  u392_20 035E                                    u384_20 02D3  
                                  u472_20 0013                                    u376_21 0ECA  
                                  u392_21 035D                                    u384_21 02D2  
                                  u472_21 0012                                    u288_25 0A04  
                                  u377_20 0ED1                                    u289_20 0A10  
                                  u393_20 0372                                    u385_20 02EA  
                                  u473_20 001B                                    u377_21 0ED0  
                                  u289_21 0A0F                                    u393_21 0371  
                                  u385_21 02E9                                    u473_21 001A  
                                  u393_25 036E                                    u378_20 0ED7  
                                  u394_20 0388                                    u386_20 0301  
                                  u474_20 001F                                    u378_21 0ED6  
                                  u394_21 0387                                    u386_21 0300  
                                  u474_21 001E                                    u379_20 0EDD  
                                  u395_20 03A8                                    u387_20 0318  
                                  u475_20 0027                                    u379_21 0EDC  
                                  u395_21 03A7                                    u387_21 0317  
                                  u475_21 0026                                    u396_20 03D5  
                                  u388_20 031D                                    u476_20 002B  
                                  u396_21 03D4                                    u388_21 031C  
                                  u476_21 002A                                    _OSCFRQ 0893  
                                  u397_20 03FF                                    u389_20 0322  
                                  u477_20 0033                                    u397_21 03FE  
                                  u389_21 0321                                    u477_21 0032  
                                  u398_20 0405                                    u478_20 0037  
                                  u398_21 0404                                    u478_21 0036  
                                  u399_20 0411                                    u479_20 003C  
                                  u399_21 0410                                    u479_21 003B  
                                  _PWM6EN 1C77                                 ??_ReadI2C 0070  
                             LCDsend2x4@c 00A5                           _TMR3_WriteTimer 0811  
                        __end_of_editTemp 0A9E              __end_ofi1_PWM6_LoadDutyValue 0881  
    __end_of_TMR1_DefaultInterruptHandler 176B     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 176A                              _CCPTMRS1bits 021F  
                           ?i1_LCDsend2x4 0072                                    ___wmul 094A  
                       __end_of_TMR2_Stop 177D                                 ??___lwdiv 0074  
                               ??___lwmod 007C                       __size_of_TMR2_Start 0003  
                 __end_of_PWM6_Initialize 17E3                                 ??_editLum 00A0  
                 __end_of_DATAEE_ReadByte 1800                   __size_of_monitoring_ISR 0120  
                         _ADCC_Initialize 08C6                            _PMD_Initialize 17B9  
                               ??_isdigit 0070                  ?i1_PWM_Output_D4_Disable 0070  
                         menuLCD_ISR@diff 004A             i1DATAEE_WriteByte@GIEBitValue 0079  
       __size_of_ADCC_GetSingleConversion 0012                 ?_ADCC_GetSingleConversion 0070  
                 __end_of_TMR2_StartTimer 1781  TMR5_SetInterruptHandler@InterruptHandler 00A0  
TMR3_SetInterruptHandler@InterruptHandler 00A0  TMR1_SetInterruptHandler@InterruptHandler 00A0  
                               ??_sprintf 0028                   __end_of_TMR1_WriteTimer 0811  
                 ??_PWM_Output_D4_Disable 00A0                       __size_ofi1_WriteI2C 004B  
                        ?_TMR1_Initialize 0070                   __end_of_TMR5_Initialize 09C6  
                       _SYSTEM_Initialize 0910                   __end_of__initialization 005E  
                      ?_SYSTEM_Initialize 0070                         __end_of_Clock_ISR 0EF3  
                         _TMR5_WriteTimer 0822                      __size_of_menuLCD_ISR 01D4  
                          __pcstackCOMMON 0070                            ??i1_LCDsend2x4 0073  
                            __pidataBANK0 17AA                       ??_SYSTEM_Initialize 00A2  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                               ?_TMR3_ISR 0070                                 ?_TMR5_ISR 0070  
                        _DATAEE_WriteByte 07D8                              menuLCD_ISR@l 0047  
                      __size_of_editClock 0083           differenceBetweenTimePeriod@diff 0076  
                           __end_of_tsttc 1000                          ?_TMR2_Initialize 0070  
         differenceBetweenTimePeriod@stop 0073                    __end_of_PMD_Initialize 17C1  
                            ??_LCDsend2x4 00A3                 __end_of_SYSTEM_Initialize 092C  
                            sprintf@width 0031                   __end_of_TMR3_WriteTimer 0822  
                                 ??_tsttc 0072                                __pbssBANK0 004D  
                              __pbssBANK1 00BB                    i1DATAEE_WriteByte@bAdd 0076  
                                 ?_LCDcmd 0070                          ?_TMR3_Initialize 0070  
                                 ?_LCDstr 0070                                   LCDcmd@c 0078  
                                 LCDstr@c 007A                                   LCDstr@p 007B  
                              __pmaintext 0062          __end_of_TMR3_SetInterruptHandler 1791  
                                 ?___wmul 0070                                ??_TMR1_ISR 007B  
                              ??_TMR3_ISR 007E                   __end_of_ADCC_Initialize 08DD  
              __end_of_PWM6_LoadDutyValue 08F6                                ??_TMR5_ISR 007D  
                              __pintentry 0004                                   _ADFLTRH 0115  
                                 _ADFLTRL 0114                      __size_ofi1_TMR2_Stop 0003  
                      __end_of_LCDsend2x4 07D8                                   _ADPREVH 008F  
                                 _ADPREVL 008E                                 ?_WriteI2C 0070  
                        ?_PWM6_Initialize 0070                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112           __end_ofi1_PWM_Output_D4_Disable 1774  
                         ?_PMD_Initialize 0070                          ?_DATAEE_ReadByte 00A0  
                       ?_i2c1_driver_open 0070             i1PWM6_LoadDutyValue@dutyValue 0070  
                                 _LCDchar 17B1                                   _LCDinit 0C47  
                                 _LCDsend 0B9A                        ??_i2c1_driver_open 00A0  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                               ?_editTemp 0070                      i1_PWM6_LoadDutyValue 086B  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
                                 _PWM6DCH 038D                                   _PWM6DCL 038C  
                       ?i1_TMR2_StopTimer 0070                                   _PWM6CON 038E  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                                   _SSP1MSK 018E  
                            ??_TMR2_Start 0070                   __size_of_TMR2_StopTimer 0004  
                        ?_TMR2_StartTimer 0070                          ?_TMR1_WriteTimer 0070  
                      ??i1_TMR2_StopTimer 0070                   __end_of_TMR5_WriteTimer 0833  
                            LCDsend2x4@hc 00A6                              LCDsend2x4@lc 00A7  
                       __end_of_editClock 0D40                          ?_TMR5_Initialize 0070  
                         __size_of_LCDcmd 0007                      DATAEE_WriteByte@bAdd 00A0  
                      _i2c1_driver_i2cISR 00BE                           __size_of_LCDstr 0014  
                                 _ReadI2C 08F6                ??_TMR5_SetInterruptHandler 00A2  
                            ??i1_WriteI2C 0070                           __size_of___wmul 001F  
                                 ___lwdiv 0AD6                                   ___lwmod 09FA  
                      __end_of_TMR2_Start 1771                                ??_WriteI2C 00A0  
                                 _editLum 0A2E                                   __ptext1 0A9E  
                                 __ptext2 17CA                                   __ptext3 0A66  
                                 __ptext4 0A2E                                   __ptext5 0CBD  
                                 __ptext6 07FC                                   __ptext7 177A  
                                 __ptext8 0910                                   __ptext9 09A7  
                          _monitoring_ISR 05E4            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 020E                                   _dpowers 1800  
                   _OSCILLATOR_Initialize 17C1                                 _T2CONbits 028E  
                                 _isdigit 0833                                 _T3CONbits 0214  
       __size_of_TMR1_SetInterruptHandler 0006                     ?i1_PWM6_LoadDutyValue 0070  
                ??_PIN_MANAGER_Initialize 00A0                 ?_TMR1_SetInterruptHandler 00A0  
                               _T2HLTbits 028F                                 _T5CONbits 021A  
                              ??_editTemp 00A0                      __end_ofi1_LCDsend2x4 0DF3  
              __size_of_SYSTEM_Initialize 001C                                   _sprintf 0447  
                                 clrloop0 1798                      end_of_initialization 005E  
                        ?_TMR3_WriteTimer 0070                                 _T2RSTbits 0291  
                      __end_ofi1_WriteI2C 0B9A                                   init_ram 179D  
                                 initloop 179E                            i1LCDsend2x4@hc 0076  
                          i1LCDsend2x4@lc 0077                        i1_DATAEE_WriteByte 092C  
           __size_of_PWM_Output_D4_Enable 0003              ?_differenceBetweenTimePeriod 0070  
                     ?i1_DATAEE_WriteByte 0076                          ?_ADCC_Initialize 0070  
        __end_of_ADCC_GetSingleConversion 0857                    __end_of_monitoring_ISR 0704  
                               _PORTBbits 000D                                 _PORTCbits 000E  
                               _TMR2_Stop 177A                  _TMR3_SetInterruptHandler 178B  
                   _TMR5_InterruptHandler 00B1                                 _TRISCbits 0013  
                           ?_toggleAlarms 0070                      ??i1_DATAEE_WriteByte 0079  
                __end_of_DATAEE_WriteByte 07FC                             _alarmPWMStart 0067  
                        ?_TMR5_WriteTimer 0070                   TMR5_WriteTimer@timerVal 0070  
          __size_of_PWM_Output_D4_Disable 0003             __end_of_PWM_Output_D4_Disable 177A  
                          __end_of_LCDcmd 17AA                            __end_of_LCDstr 086B  
        __size_ofi1_PWM_Output_D4_Disable 0003                            LCDsend2x4@mode 00A2  
                               _Clock_ISR 0DF3                            __end_of___wmul 0969  
                         ?_monitoring_ISR 0070                         __size_of_TMR1_ISR 0017  
                       __size_of_TMR3_ISR 0017                         __size_of_TMR5_ISR 0017  
                              ?_TMR2_Stop 0070                    ?_OSCILLATOR_Initialize 0070  
                         main@checkSumAux 00AC                    ??i1_PWM6_LoadDutyValue 0072  
                           menuLCD_ISR@tt 0043                       start_initialization 0042  
    __end_of_TMR5_DefaultInterruptHandler 0004     __size_of_TMR5_DefaultInterruptHandler 0001  
            _TMR5_DefaultInterruptHandler 0003                            ??_toggleAlarms 00A0  
         __size_of_PIN_MANAGER_Initialize 003D                            _TMR2_StopTimer 07FC  
                        WriteI2C@data_out 00A1                                  ??_LCDcmd 0078  
                                ??_LCDstr 0079                             ??_menuLCD_ISR 0035  
                     DATAEE_ReadByte@bAdd 00A0                  __size_of_TMR1_Initialize 001F  
                        ??_PMD_Initialize 00A0                                ?_Clock_ISR 0070  
                                ??___wmul 0074                               __pdataBANK0 0067  
                       _editingClockAlarm 005C                         __size_of_WriteI2C 005A  
                   __size_ofi1_LCDsend2x4 00B3                  _ADCC_GetSingleConversion 0845  
                 i1DATAEE_WriteByte@bData 0078                    __end_of_TMR2_StopTimer 0800  
                                ?_LCDchar 0070                                  ?_LCDinit 0070  
                                ?_LCDsend 0070                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                      _PWM6_LoadDutyValue 08DD                  __size_of_TMR2_Initialize 000E  
                            _isdigit$2903 0070             ?_TMR5_DefaultInterruptHandler 0070  
    __size_of_differenceBetweenTimePeriod 0034                                  LCDchar@c 0078  
                       __size_of_editTemp 0038                                  LCDsend@c 00A3  
                     ?_PWM6_LoadDutyValue 00A0                               sprintf@flag 0030  
               __size_of_i2c1_driver_open 000C                               sprintf@prec 002D  
                                ?_ReadI2C 0070                                 __pnvBANK0 006E  
                               __pnvBANK1 00B1                                 _editClock 0CBD  
                        ___lwdiv@dividend 0072                    _PIN_MANAGER_Initialize 0B12  
               __size_ofi1_TMR2_StopTimer 0004                             ??i1_TMR2_Stop 0070  
                __size_of_TMR3_Initialize 001F                       __end_of_menuLCD_ISR 0447  
        __end_of_TMR1_SetInterruptHandler 178B           ADCC_GetSingleConversion@channel 0073  
                            i1_LCDsend2x4 0D40                                 _dimingLed 005E  
                                ?___lwdiv 0070                                  ?___lwmod 0078  
             _i2c1_driver_busCollisionISR 00C0                      ??_PWM6_LoadDutyValue 00A2  
                                ?_editLum 0070              ??_INTERRUPT_InterruptManager 007E  
                             ??_TMR2_Stop 00A0                                  ?_isdigit 0070  
                         ?_TMR2_StopTimer 0070                  __size_of_PWM6_Initialize 000D  
                        ___lwdiv@quotient 0075                                  ?_sprintf 0020  
                                _T2CLKCON 0290                  __size_of_DATAEE_ReadByte 000F  
                          __size_of_tsttc 010D                   i1_PWM_Output_D4_Disable 1771  
                          ___wmul@product 0074                                  _LATAbits 0016  
                               clear_ram0 1797                                  _PIE3bits 0719  
                                _PIE4bits 071A                  __size_of_TMR2_StartTimer 0004  
                           i1LCDsend2x4@c 0075                                ?_editClock 0070  
                               _tempAlarm 0054                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 003C                                  _PIR3bits 070F  
                                _PIR4bits 0710                ??_TMR3_SetInterruptHandler 00A2  
                __size_of_TMR5_Initialize 001F                               ??_Clock_ISR 007A  
                    __end_of_toggleAlarms 0AD6                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR1_ISR 0881  
                                _TMR3_ISR 0898                                  _TMR5_ISR 08AF  
                                _SSP1STAT 018F                         ??_TMR1_Initialize 00A2  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                       __end_ofi1_TMR2_Stop 1777  
                              _ADCON3bits 0096                         ___wmul@multiplier 0070  
                      i1WriteI2C@data_out 0071              __end_of_PWM_Output_D4_Enable 176E  
       __size_of_TMR5_SetInterruptHandler 0006                          __size_of_LCDchar 0008  
               ?_TMR5_SetInterruptHandler 00A0                     DATAEE_WriteByte@bData 00A2  
                        __size_of_LCDinit 0076                          __size_of_LCDsend 0053  
                       ?_DATAEE_WriteByte 00A0                         ??_TMR2_Initialize 00A0  
                             _menuLCD_ISR 0273            ??_TMR5_DefaultInterruptHandler 0070  
                      ??_DATAEE_WriteByte 00A3                          __size_of_ReadI2C 001A  
                              _ADSTATbits 0097                  __size_of_TMR3_WriteTimer 0011  
                        ??_monitoring_ISR 007A                   ??_OSCILLATOR_Initialize 00A0  
                        __size_of___lwdiv 003C                          __size_of___lwmod 0034  
                                _WriteI2C 0BED                         ??_TMR3_Initialize 00A2  
                _TMR1_SetInterruptHandler 1785                          i1LCDsend2x4@mode 0072  
                        __size_of_editLum 0038                     _TMR1_InterruptHandler 00B7  
                              sprintf@val 002E                                  _clkAlarm 004D  
                __size_of_ADCC_Initialize 0017                          __size_of_isdigit 0012  
                                _editTemp 0A66                           ___lwdiv@divisor 0070  
                         ___lwdiv@counter 0077                                  __ptext10 1791  
                                __ptext11 0988                                  __ptext20 08C6  
                                __ptext12 178B                                  __ptext21 1777  
                                __ptext13 17E3                                _T1GCONbits 020F  
                                __ptext30 08AF                                  __ptext22 08DD  
                                __ptext14 0969                                  __ptext31 0003  
                                __ptext23 0C47                                  __ptext15 1785  
                                __ptext40 1781                                  __ptext32 05E4  
                                __ptext24 0704                                  __ptext16 17D6  
                                __ptext41 1774                                  __ptext33 0EF3  
                                __ptext25 0B9A                                  __ptext17 17B9  
                                __ptext50 177D                                  __ptext42 1771  
                                __ptext34 08F6                                  __ptext26 0BED  
                                __ptext18 0B12                                  __ptext51 176E  
                                __ptext43 086B                                  __ptext35 0845  
                                __ptext27 07D8                                  __ptext19 17C1  
                                __ptext60 0800                                  __ptext52 176B  
                                __ptext44 0447                                  __ptext36 0822  
                                __ptext28 17F1                                  __ptext61 0DF3  
                                __ptext53 0857                                  __ptext45 0833  
                                __ptext37 0898                                  __ptext62 176A  
                                __ptext54 17B1                                  __ptext46 094A  
                                __ptext38 0002                                  __ptext63 092C  
                                __ptext55 17A3                                  __ptext47 09FA  
                                __ptext39 0273                                  __ptext56 0D40  
                                __ptext48 0AD6                                  __ptext57 0B4F  
                                __ptext49 09C6                                  __ptext58 0811  
                                __ptext59 0881                              _SSP1CON1bits 0190  
                            _SSP1CON2bits 0191                 ??i1_PWM_Output_D4_Disable 0070  
             __size_ofi1_DATAEE_WriteByte 001E                          __size_of_sprintf 019D  
                              _T3GCONbits 0215               DATAEE_WriteByte@GIEBitValue 00A3  
                 TMR3_WriteTimer@timerVal 0070                          _i2c1_driver_open 17CA  
                       ??_PWM6_Initialize 00A0                             __size_of_main 0211  
                              _T5GCONbits 021B                                  _lumAlarm 0051  
                       ??_DATAEE_ReadByte 00A2                                  _lumLevel 0062  
                   _PWM_Output_D4_Disable 1777                               ??_editClock 00A0  
                        _editingTempAlarm 0061                          i1_TMR2_StopTimer 1781  
                __size_of_TMR5_WriteTimer 0011                                  _prevTemp 006C  
                              tsttc@value 0073                               i1_TMR2_Stop 1774  
              ??_ADCC_GetSingleConversion 0073                                  int$flags 007E  
                       ??_TMR2_StartTimer 0070        __end_of_INTERRUPT_InterruptManager 0040  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                         menuLCD_ISR@F12812 00BB  
    __end_of_TMR3_DefaultInterruptHandler 0003     __size_of_TMR3_DefaultInterruptHandler 0001  
            _TMR3_DefaultInterruptHandler 0002                         ??_TMR5_Initialize 00A2  
                              _INTCONbits 000B                               _NVMCON1bits 081E  
                            _prevLumLevel 006A             __size_ofi1_PWM6_LoadDutyValue 0016  
                                isdigit@c 0071                                _LCDsend2x4 0704  
                                intlevel1 0000                                 sprintf@ap 002C  
                               sprintf@sp 0034                          ___lwmod@dividend 007A  
                 ?_PIN_MANAGER_Initialize 0070                     __size_of_toggleAlarms 0038  
                         _editingLumAlarm 0060                      _PWM_Output_D4_Enable 176B  
     __end_of_differenceBetweenTimePeriod 09FA               _differenceBetweenTimePeriod 09C6  
                        ??_TMR2_StopTimer 00A0                         ??_TMR3_WriteTimer 0072  
                           __pstringtext1 1800                             __pstringtext2 1000  
                           __pstringtext3 180A                             __pstringtext4 1811  
                           __pstringtext5 0000             ??_differenceBetweenTimePeriod 0077  
                                sprintf@c 0033                                  sprintf@f 0020  
           ?_TMR3_DefaultInterruptHandler 0070                                _SSP1DATPPS 0EC6  
                              _SSP1CLKPPS 0EC5                           ___lwmod@divisor 0078  
                         ___lwmod@counter 007D               PWM6_LoadDutyValue@dutyValue 00A0  
                            _toggleAlarms 0A9E                                _TMR2_Start 176E  
          __end_of_PIN_MANAGER_Initialize 0B4F                         ??_ADCC_Initialize 00A0  
                  ?_PWM_Output_D4_Disable 0070                     ?_PWM_Output_D4_Enable 0070  
                         _TMR1_Initialize 0969  
