

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Nov 03 22:52:36 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	psect	text41,local,class=CODE,merge=1,delta=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2
    64                           	psect	text43,local,class=CODE,merge=1,delta=2
    65                           	psect	text44,local,class=CODE,merge=1,delta=2
    66                           	psect	text45,local,class=CODE,merge=1,delta=2
    67                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text47,local,class=CODE,merge=1,delta=2,group=3
    69                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text51,local,class=CODE,merge=1,delta=2
    73                           	psect	text52,local,class=CODE,merge=1,delta=2
    74                           	psect	text53,local,class=CODE,merge=1,delta=2
    75                           	psect	text54,local,class=CODE,merge=1,delta=2
    76                           	psect	text55,local,class=CODE,merge=1,delta=2
    77                           	psect	text56,local,class=CODE,merge=1,delta=2
    78                           	psect	text57,local,class=CODE,merge=1,delta=2
    79                           	psect	text58,local,class=CODE,merge=1,delta=2
    80                           	psect	text59,local,class=CODE,merge=1,delta=2
    81                           	psect	text60,local,class=CODE,merge=1,delta=2
    82                           	psect	text61,local,class=CODE,merge=1,delta=2
    83                           	psect	text62,local,class=CODE,merge=1,delta=2
    84                           	psect	text63,local,class=CODE,merge=1,delta=2
    85                           	psect	text64,local,class=CODE,merge=1,delta=2
    86                           	psect	text65,local,class=CODE,merge=1,delta=2
    87                           	psect	text66,local,class=CODE,merge=1,delta=2
    88                           	psect	text67,local,class=CODE,merge=1,delta=2
    89                           	psect	text68,local,class=CODE,merge=1,delta=2
    90                           	psect	text69,local,class=CODE,merge=1,delta=2
    91                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    92                           	dabs	1,0x7E,2
    93  0000                     
    94                           ; Version 2.30
    95                           ; Generated 15/09/2020 GMT
    96                           ; 
    97                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution. Publication is not required when
   111                           ;        this file is used in an embedded application.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC16F18875 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001C                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  008C                     	;# 
   163  008C                     	;# 
   164  008D                     	;# 
   165  008E                     	;# 
   166  008E                     	;# 
   167  008F                     	;# 
   168  0090                     	;# 
   169  0090                     	;# 
   170  0091                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0095                     	;# 
   174  0096                     	;# 
   175  0097                     	;# 
   176  0098                     	;# 
   177  0099                     	;# 
   178  009A                     	;# 
   179  009B                     	;# 
   180  009C                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  010C                     	;# 
   184  010D                     	;# 
   185  010E                     	;# 
   186  010E                     	;# 
   187  010F                     	;# 
   188  0110                     	;# 
   189  0110                     	;# 
   190  0111                     	;# 
   191  0112                     	;# 
   192  0112                     	;# 
   193  0113                     	;# 
   194  0114                     	;# 
   195  0114                     	;# 
   196  0115                     	;# 
   197  0116                     	;# 
   198  0116                     	;# 
   199  0117                     	;# 
   200  0119                     	;# 
   201  0119                     	;# 
   202  0119                     	;# 
   203  011A                     	;# 
   204  011A                     	;# 
   205  011A                     	;# 
   206  011B                     	;# 
   207  011B                     	;# 
   208  011B                     	;# 
   209  011B                     	;# 
   210  011B                     	;# 
   211  011C                     	;# 
   212  011C                     	;# 
   213  011C                     	;# 
   214  011D                     	;# 
   215  011D                     	;# 
   216  011D                     	;# 
   217  011E                     	;# 
   218  011E                     	;# 
   219  011E                     	;# 
   220  011F                     	;# 
   221  011F                     	;# 
   222  011F                     	;# 
   223  011F                     	;# 
   224  011F                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  018E                     	;# 
   228  018F                     	;# 
   229  0190                     	;# 
   230  0191                     	;# 
   231  0192                     	;# 
   232  0196                     	;# 
   233  0197                     	;# 
   234  0198                     	;# 
   235  0199                     	;# 
   236  019A                     	;# 
   237  019B                     	;# 
   238  019C                     	;# 
   239  020C                     	;# 
   240  020C                     	;# 
   241  020D                     	;# 
   242  020E                     	;# 
   243  020F                     	;# 
   244  020F                     	;# 
   245  0210                     	;# 
   246  0210                     	;# 
   247  0211                     	;# 
   248  0211                     	;# 
   249  0212                     	;# 
   250  0212                     	;# 
   251  0213                     	;# 
   252  0214                     	;# 
   253  0215                     	;# 
   254  0215                     	;# 
   255  0216                     	;# 
   256  0216                     	;# 
   257  0217                     	;# 
   258  0217                     	;# 
   259  0218                     	;# 
   260  0218                     	;# 
   261  0219                     	;# 
   262  021A                     	;# 
   263  021B                     	;# 
   264  021B                     	;# 
   265  021C                     	;# 
   266  021C                     	;# 
   267  021D                     	;# 
   268  021D                     	;# 
   269  021E                     	;# 
   270  021F                     	;# 
   271  028C                     	;# 
   272  028C                     	;# 
   273  028D                     	;# 
   274  028D                     	;# 
   275  028E                     	;# 
   276  028F                     	;# 
   277  0290                     	;# 
   278  0290                     	;# 
   279  0291                     	;# 
   280  0292                     	;# 
   281  0292                     	;# 
   282  0293                     	;# 
   283  0293                     	;# 
   284  0294                     	;# 
   285  0295                     	;# 
   286  0296                     	;# 
   287  0296                     	;# 
   288  0297                     	;# 
   289  0298                     	;# 
   290  0298                     	;# 
   291  0299                     	;# 
   292  0299                     	;# 
   293  029A                     	;# 
   294  029B                     	;# 
   295  029C                     	;# 
   296  029C                     	;# 
   297  029D                     	;# 
   298  030C                     	;# 
   299  030C                     	;# 
   300  030D                     	;# 
   301  030E                     	;# 
   302  030F                     	;# 
   303  0310                     	;# 
   304  0310                     	;# 
   305  0311                     	;# 
   306  0312                     	;# 
   307  0313                     	;# 
   308  0314                     	;# 
   309  0314                     	;# 
   310  0315                     	;# 
   311  0316                     	;# 
   312  0317                     	;# 
   313  0318                     	;# 
   314  0318                     	;# 
   315  0319                     	;# 
   316  031A                     	;# 
   317  031B                     	;# 
   318  031C                     	;# 
   319  031C                     	;# 
   320  031D                     	;# 
   321  031E                     	;# 
   322  031F                     	;# 
   323  038C                     	;# 
   324  038C                     	;# 
   325  038D                     	;# 
   326  038E                     	;# 
   327  0390                     	;# 
   328  0390                     	;# 
   329  0391                     	;# 
   330  0392                     	;# 
   331  040C                     	;# 
   332  040D                     	;# 
   333  040E                     	;# 
   334  040F                     	;# 
   335  0410                     	;# 
   336  0411                     	;# 
   337  0416                     	;# 
   338  0416                     	;# 
   339  0417                     	;# 
   340  0418                     	;# 
   341  0418                     	;# 
   342  0419                     	;# 
   343  041A                     	;# 
   344  041A                     	;# 
   345  041B                     	;# 
   346  041C                     	;# 
   347  041C                     	;# 
   348  041D                     	;# 
   349  041E                     	;# 
   350  041F                     	;# 
   351  048C                     	;# 
   352  048C                     	;# 
   353  048D                     	;# 
   354  048E                     	;# 
   355  048F                     	;# 
   356  048F                     	;# 
   357  0490                     	;# 
   358  0491                     	;# 
   359  0492                     	;# 
   360  0492                     	;# 
   361  0493                     	;# 
   362  0494                     	;# 
   363  0495                     	;# 
   364  0495                     	;# 
   365  0496                     	;# 
   366  0497                     	;# 
   367  0498                     	;# 
   368  0499                     	;# 
   369  049A                     	;# 
   370  049B                     	;# 
   371  049C                     	;# 
   372  049D                     	;# 
   373  050C                     	;# 
   374  050C                     	;# 
   375  050D                     	;# 
   376  050E                     	;# 
   377  050F                     	;# 
   378  050F                     	;# 
   379  0510                     	;# 
   380  0511                     	;# 
   381  0512                     	;# 
   382  0512                     	;# 
   383  0513                     	;# 
   384  0514                     	;# 
   385  0515                     	;# 
   386  0515                     	;# 
   387  0516                     	;# 
   388  0517                     	;# 
   389  0518                     	;# 
   390  0519                     	;# 
   391  051A                     	;# 
   392  051B                     	;# 
   393  051C                     	;# 
   394  051D                     	;# 
   395  058C                     	;# 
   396  058C                     	;# 
   397  058D                     	;# 
   398  058E                     	;# 
   399  058F                     	;# 
   400  058F                     	;# 
   401  0590                     	;# 
   402  0591                     	;# 
   403  0592                     	;# 
   404  0593                     	;# 
   405  060C                     	;# 
   406  060D                     	;# 
   407  060E                     	;# 
   408  060F                     	;# 
   409  0610                     	;# 
   410  0611                     	;# 
   411  0612                     	;# 
   412  0613                     	;# 
   413  0614                     	;# 
   414  0616                     	;# 
   415  0617                     	;# 
   416  0618                     	;# 
   417  0619                     	;# 
   418  061A                     	;# 
   419  061B                     	;# 
   420  061C                     	;# 
   421  061D                     	;# 
   422  061E                     	;# 
   423  068C                     	;# 
   424  068D                     	;# 
   425  068E                     	;# 
   426  068F                     	;# 
   427  0690                     	;# 
   428  0691                     	;# 
   429  0692                     	;# 
   430  0693                     	;# 
   431  0694                     	;# 
   432  070C                     	;# 
   433  070D                     	;# 
   434  070E                     	;# 
   435  070F                     	;# 
   436  0710                     	;# 
   437  0711                     	;# 
   438  0712                     	;# 
   439  0713                     	;# 
   440  0714                     	;# 
   441  0716                     	;# 
   442  0717                     	;# 
   443  0718                     	;# 
   444  0719                     	;# 
   445  071A                     	;# 
   446  071B                     	;# 
   447  071C                     	;# 
   448  071D                     	;# 
   449  071E                     	;# 
   450  0796                     	;# 
   451  0797                     	;# 
   452  0798                     	;# 
   453  0799                     	;# 
   454  079A                     	;# 
   455  079B                     	;# 
   456  080C                     	;# 
   457  080D                     	;# 
   458  080E                     	;# 
   459  080F                     	;# 
   460  0810                     	;# 
   461  0811                     	;# 
   462  0812                     	;# 
   463  0813                     	;# 
   464  0814                     	;# 
   465  081A                     	;# 
   466  081B                     	;# 
   467  081C                     	;# 
   468  081D                     	;# 
   469  081E                     	;# 
   470  081F                     	;# 
   471  088C                     	;# 
   472  088D                     	;# 
   473  088E                     	;# 
   474  088F                     	;# 
   475  0890                     	;# 
   476  0891                     	;# 
   477  0892                     	;# 
   478  0893                     	;# 
   479  0895                     	;# 
   480  0896                     	;# 
   481  0897                     	;# 
   482  0898                     	;# 
   483  0899                     	;# 
   484  089A                     	;# 
   485  089B                     	;# 
   486  090C                     	;# 
   487  090E                     	;# 
   488  090F                     	;# 
   489  091F                     	;# 
   490  091F                     	;# 
   491  098F                     	;# 
   492  098F                     	;# 
   493  0990                     	;# 
   494  0991                     	;# 
   495  0992                     	;# 
   496  0993                     	;# 
   497  0994                     	;# 
   498  0995                     	;# 
   499  0996                     	;# 
   500  0997                     	;# 
   501  0E0F                     	;# 
   502  0E10                     	;# 
   503  0E11                     	;# 
   504  0E12                     	;# 
   505  0E13                     	;# 
   506  0E14                     	;# 
   507  0E15                     	;# 
   508  0E16                     	;# 
   509  0E17                     	;# 
   510  0E18                     	;# 
   511  0E19                     	;# 
   512  0E1A                     	;# 
   513  0E1B                     	;# 
   514  0E1C                     	;# 
   515  0E1D                     	;# 
   516  0E1E                     	;# 
   517  0E1F                     	;# 
   518  0E20                     	;# 
   519  0E21                     	;# 
   520  0E22                     	;# 
   521  0E23                     	;# 
   522  0E24                     	;# 
   523  0E25                     	;# 
   524  0E26                     	;# 
   525  0E27                     	;# 
   526  0E28                     	;# 
   527  0E29                     	;# 
   528  0E2A                     	;# 
   529  0E2B                     	;# 
   530  0E2C                     	;# 
   531  0E2D                     	;# 
   532  0E2E                     	;# 
   533  0E2F                     	;# 
   534  0E30                     	;# 
   535  0E31                     	;# 
   536  0E32                     	;# 
   537  0E33                     	;# 
   538  0E34                     	;# 
   539  0E35                     	;# 
   540  0E36                     	;# 
   541  0E37                     	;# 
   542  0E8F                     	;# 
   543  0E90                     	;# 
   544  0E91                     	;# 
   545  0E92                     	;# 
   546  0E93                     	;# 
   547  0E94                     	;# 
   548  0E95                     	;# 
   549  0E96                     	;# 
   550  0E97                     	;# 
   551  0E9C                     	;# 
   552  0E9D                     	;# 
   553  0E9E                     	;# 
   554  0EA1                     	;# 
   555  0EA2                     	;# 
   556  0EA3                     	;# 
   557  0EA4                     	;# 
   558  0EA5                     	;# 
   559  0EA9                     	;# 
   560  0EAA                     	;# 
   561  0EAB                     	;# 
   562  0EAC                     	;# 
   563  0EB1                     	;# 
   564  0EB2                     	;# 
   565  0EB3                     	;# 
   566  0EB8                     	;# 
   567  0EB9                     	;# 
   568  0EBA                     	;# 
   569  0EBB                     	;# 
   570  0EBC                     	;# 
   571  0EBD                     	;# 
   572  0EBE                     	;# 
   573  0EC3                     	;# 
   574  0EC5                     	;# 
   575  0EC6                     	;# 
   576  0EC7                     	;# 
   577  0EC8                     	;# 
   578  0EC9                     	;# 
   579  0ECA                     	;# 
   580  0ECB                     	;# 
   581  0ECC                     	;# 
   582  0F10                     	;# 
   583  0F11                     	;# 
   584  0F12                     	;# 
   585  0F13                     	;# 
   586  0F14                     	;# 
   587  0F15                     	;# 
   588  0F16                     	;# 
   589  0F17                     	;# 
   590  0F18                     	;# 
   591  0F19                     	;# 
   592  0F1A                     	;# 
   593  0F1B                     	;# 
   594  0F1C                     	;# 
   595  0F1D                     	;# 
   596  0F1E                     	;# 
   597  0F1F                     	;# 
   598  0F20                     	;# 
   599  0F21                     	;# 
   600  0F22                     	;# 
   601  0F23                     	;# 
   602  0F24                     	;# 
   603  0F25                     	;# 
   604  0F26                     	;# 
   605  0F27                     	;# 
   606  0F28                     	;# 
   607  0F29                     	;# 
   608  0F2A                     	;# 
   609  0F2B                     	;# 
   610  0F2C                     	;# 
   611  0F2D                     	;# 
   612  0F2E                     	;# 
   613  0F2F                     	;# 
   614  0F30                     	;# 
   615  0F31                     	;# 
   616  0F32                     	;# 
   617  0F38                     	;# 
   618  0F39                     	;# 
   619  0F3A                     	;# 
   620  0F3B                     	;# 
   621  0F3C                     	;# 
   622  0F3D                     	;# 
   623  0F3E                     	;# 
   624  0F3F                     	;# 
   625  0F40                     	;# 
   626  0F41                     	;# 
   627  0F43                     	;# 
   628  0F44                     	;# 
   629  0F45                     	;# 
   630  0F46                     	;# 
   631  0F47                     	;# 
   632  0F48                     	;# 
   633  0F49                     	;# 
   634  0F4A                     	;# 
   635  0F4B                     	;# 
   636  0F4C                     	;# 
   637  0F4E                     	;# 
   638  0F4F                     	;# 
   639  0F50                     	;# 
   640  0F51                     	;# 
   641  0F52                     	;# 
   642  0F53                     	;# 
   643  0F54                     	;# 
   644  0F55                     	;# 
   645  0F56                     	;# 
   646  0F57                     	;# 
   647  0F59                     	;# 
   648  0F5A                     	;# 
   649  0F5B                     	;# 
   650  0F5C                     	;# 
   651  0F5D                     	;# 
   652  0F61                     	;# 
   653  0F62                     	;# 
   654  0F64                     	;# 
   655  0F65                     	;# 
   656  0F66                     	;# 
   657  0F67                     	;# 
   658  0F68                     	;# 
   659  0F69                     	;# 
   660  0F6A                     	;# 
   661  0F6B                     	;# 
   662  0F6C                     	;# 
   663  0F6D                     	;# 
   664  0FE4                     	;# 
   665  0FE5                     	;# 
   666  0FE6                     	;# 
   667  0FE7                     	;# 
   668  0FE8                     	;# 
   669  0FE9                     	;# 
   670  0FEA                     	;# 
   671  0FEB                     	;# 
   672  0FED                     	;# 
   673  0FEE                     	;# 
   674  0FEF                     	;# 
   675  0000                     	;# 
   676  0001                     	;# 
   677  0002                     	;# 
   678  0003                     	;# 
   679  0004                     	;# 
   680  0005                     	;# 
   681  0006                     	;# 
   682  0007                     	;# 
   683  0008                     	;# 
   684  0009                     	;# 
   685  000A                     	;# 
   686  000B                     	;# 
   687  000C                     	;# 
   688  000D                     	;# 
   689  000E                     	;# 
   690  000F                     	;# 
   691  0010                     	;# 
   692  0011                     	;# 
   693  0012                     	;# 
   694  0013                     	;# 
   695  0014                     	;# 
   696  0015                     	;# 
   697  0016                     	;# 
   698  0017                     	;# 
   699  0018                     	;# 
   700  0019                     	;# 
   701  001A                     	;# 
   702  001C                     	;# 
   703  001C                     	;# 
   704  001D                     	;# 
   705  001D                     	;# 
   706  001E                     	;# 
   707  001F                     	;# 
   708  008C                     	;# 
   709  008C                     	;# 
   710  008D                     	;# 
   711  008E                     	;# 
   712  008E                     	;# 
   713  008F                     	;# 
   714  0090                     	;# 
   715  0090                     	;# 
   716  0091                     	;# 
   717  0093                     	;# 
   718  0094                     	;# 
   719  0095                     	;# 
   720  0096                     	;# 
   721  0097                     	;# 
   722  0098                     	;# 
   723  0099                     	;# 
   724  009A                     	;# 
   725  009B                     	;# 
   726  009C                     	;# 
   727  009D                     	;# 
   728  009E                     	;# 
   729  010C                     	;# 
   730  010D                     	;# 
   731  010E                     	;# 
   732  010E                     	;# 
   733  010F                     	;# 
   734  0110                     	;# 
   735  0110                     	;# 
   736  0111                     	;# 
   737  0112                     	;# 
   738  0112                     	;# 
   739  0113                     	;# 
   740  0114                     	;# 
   741  0114                     	;# 
   742  0115                     	;# 
   743  0116                     	;# 
   744  0116                     	;# 
   745  0117                     	;# 
   746  0119                     	;# 
   747  0119                     	;# 
   748  0119                     	;# 
   749  011A                     	;# 
   750  011A                     	;# 
   751  011A                     	;# 
   752  011B                     	;# 
   753  011B                     	;# 
   754  011B                     	;# 
   755  011B                     	;# 
   756  011B                     	;# 
   757  011C                     	;# 
   758  011C                     	;# 
   759  011C                     	;# 
   760  011D                     	;# 
   761  011D                     	;# 
   762  011D                     	;# 
   763  011E                     	;# 
   764  011E                     	;# 
   765  011E                     	;# 
   766  011F                     	;# 
   767  011F                     	;# 
   768  011F                     	;# 
   769  011F                     	;# 
   770  011F                     	;# 
   771  018C                     	;# 
   772  018D                     	;# 
   773  018E                     	;# 
   774  018F                     	;# 
   775  0190                     	;# 
   776  0191                     	;# 
   777  0192                     	;# 
   778  0196                     	;# 
   779  0197                     	;# 
   780  0198                     	;# 
   781  0199                     	;# 
   782  019A                     	;# 
   783  019B                     	;# 
   784  019C                     	;# 
   785  020C                     	;# 
   786  020C                     	;# 
   787  020D                     	;# 
   788  020E                     	;# 
   789  020F                     	;# 
   790  020F                     	;# 
   791  0210                     	;# 
   792  0210                     	;# 
   793  0211                     	;# 
   794  0211                     	;# 
   795  0212                     	;# 
   796  0212                     	;# 
   797  0213                     	;# 
   798  0214                     	;# 
   799  0215                     	;# 
   800  0215                     	;# 
   801  0216                     	;# 
   802  0216                     	;# 
   803  0217                     	;# 
   804  0217                     	;# 
   805  0218                     	;# 
   806  0218                     	;# 
   807  0219                     	;# 
   808  021A                     	;# 
   809  021B                     	;# 
   810  021B                     	;# 
   811  021C                     	;# 
   812  021C                     	;# 
   813  021D                     	;# 
   814  021D                     	;# 
   815  021E                     	;# 
   816  021F                     	;# 
   817  028C                     	;# 
   818  028C                     	;# 
   819  028D                     	;# 
   820  028D                     	;# 
   821  028E                     	;# 
   822  028F                     	;# 
   823  0290                     	;# 
   824  0290                     	;# 
   825  0291                     	;# 
   826  0292                     	;# 
   827  0292                     	;# 
   828  0293                     	;# 
   829  0293                     	;# 
   830  0294                     	;# 
   831  0295                     	;# 
   832  0296                     	;# 
   833  0296                     	;# 
   834  0297                     	;# 
   835  0298                     	;# 
   836  0298                     	;# 
   837  0299                     	;# 
   838  0299                     	;# 
   839  029A                     	;# 
   840  029B                     	;# 
   841  029C                     	;# 
   842  029C                     	;# 
   843  029D                     	;# 
   844  030C                     	;# 
   845  030C                     	;# 
   846  030D                     	;# 
   847  030E                     	;# 
   848  030F                     	;# 
   849  0310                     	;# 
   850  0310                     	;# 
   851  0311                     	;# 
   852  0312                     	;# 
   853  0313                     	;# 
   854  0314                     	;# 
   855  0314                     	;# 
   856  0315                     	;# 
   857  0316                     	;# 
   858  0317                     	;# 
   859  0318                     	;# 
   860  0318                     	;# 
   861  0319                     	;# 
   862  031A                     	;# 
   863  031B                     	;# 
   864  031C                     	;# 
   865  031C                     	;# 
   866  031D                     	;# 
   867  031E                     	;# 
   868  031F                     	;# 
   869  038C                     	;# 
   870  038C                     	;# 
   871  038D                     	;# 
   872  038E                     	;# 
   873  0390                     	;# 
   874  0390                     	;# 
   875  0391                     	;# 
   876  0392                     	;# 
   877  040C                     	;# 
   878  040D                     	;# 
   879  040E                     	;# 
   880  040F                     	;# 
   881  0410                     	;# 
   882  0411                     	;# 
   883  0416                     	;# 
   884  0416                     	;# 
   885  0417                     	;# 
   886  0418                     	;# 
   887  0418                     	;# 
   888  0419                     	;# 
   889  041A                     	;# 
   890  041A                     	;# 
   891  041B                     	;# 
   892  041C                     	;# 
   893  041C                     	;# 
   894  041D                     	;# 
   895  041E                     	;# 
   896  041F                     	;# 
   897  048C                     	;# 
   898  048C                     	;# 
   899  048D                     	;# 
   900  048E                     	;# 
   901  048F                     	;# 
   902  048F                     	;# 
   903  0490                     	;# 
   904  0491                     	;# 
   905  0492                     	;# 
   906  0492                     	;# 
   907  0493                     	;# 
   908  0494                     	;# 
   909  0495                     	;# 
   910  0495                     	;# 
   911  0496                     	;# 
   912  0497                     	;# 
   913  0498                     	;# 
   914  0499                     	;# 
   915  049A                     	;# 
   916  049B                     	;# 
   917  049C                     	;# 
   918  049D                     	;# 
   919  050C                     	;# 
   920  050C                     	;# 
   921  050D                     	;# 
   922  050E                     	;# 
   923  050F                     	;# 
   924  050F                     	;# 
   925  0510                     	;# 
   926  0511                     	;# 
   927  0512                     	;# 
   928  0512                     	;# 
   929  0513                     	;# 
   930  0514                     	;# 
   931  0515                     	;# 
   932  0515                     	;# 
   933  0516                     	;# 
   934  0517                     	;# 
   935  0518                     	;# 
   936  0519                     	;# 
   937  051A                     	;# 
   938  051B                     	;# 
   939  051C                     	;# 
   940  051D                     	;# 
   941  058C                     	;# 
   942  058C                     	;# 
   943  058D                     	;# 
   944  058E                     	;# 
   945  058F                     	;# 
   946  058F                     	;# 
   947  0590                     	;# 
   948  0591                     	;# 
   949  0592                     	;# 
   950  0593                     	;# 
   951  060C                     	;# 
   952  060D                     	;# 
   953  060E                     	;# 
   954  060F                     	;# 
   955  0610                     	;# 
   956  0611                     	;# 
   957  0612                     	;# 
   958  0613                     	;# 
   959  0614                     	;# 
   960  0616                     	;# 
   961  0617                     	;# 
   962  0618                     	;# 
   963  0619                     	;# 
   964  061A                     	;# 
   965  061B                     	;# 
   966  061C                     	;# 
   967  061D                     	;# 
   968  061E                     	;# 
   969  068C                     	;# 
   970  068D                     	;# 
   971  068E                     	;# 
   972  068F                     	;# 
   973  0690                     	;# 
   974  0691                     	;# 
   975  0692                     	;# 
   976  0693                     	;# 
   977  0694                     	;# 
   978  070C                     	;# 
   979  070D                     	;# 
   980  070E                     	;# 
   981  070F                     	;# 
   982  0710                     	;# 
   983  0711                     	;# 
   984  0712                     	;# 
   985  0713                     	;# 
   986  0714                     	;# 
   987  0716                     	;# 
   988  0717                     	;# 
   989  0718                     	;# 
   990  0719                     	;# 
   991  071A                     	;# 
   992  071B                     	;# 
   993  071C                     	;# 
   994  071D                     	;# 
   995  071E                     	;# 
   996  0796                     	;# 
   997  0797                     	;# 
   998  0798                     	;# 
   999  0799                     	;# 
  1000  079A                     	;# 
  1001  079B                     	;# 
  1002  080C                     	;# 
  1003  080D                     	;# 
  1004  080E                     	;# 
  1005  080F                     	;# 
  1006  0810                     	;# 
  1007  0811                     	;# 
  1008  0812                     	;# 
  1009  0813                     	;# 
  1010  0814                     	;# 
  1011  081A                     	;# 
  1012  081B                     	;# 
  1013  081C                     	;# 
  1014  081D                     	;# 
  1015  081E                     	;# 
  1016  081F                     	;# 
  1017  088C                     	;# 
  1018  088D                     	;# 
  1019  088E                     	;# 
  1020  088F                     	;# 
  1021  0890                     	;# 
  1022  0891                     	;# 
  1023  0892                     	;# 
  1024  0893                     	;# 
  1025  0895                     	;# 
  1026  0896                     	;# 
  1027  0897                     	;# 
  1028  0898                     	;# 
  1029  0899                     	;# 
  1030  089A                     	;# 
  1031  089B                     	;# 
  1032  090C                     	;# 
  1033  090E                     	;# 
  1034  090F                     	;# 
  1035  091F                     	;# 
  1036  091F                     	;# 
  1037  098F                     	;# 
  1038  098F                     	;# 
  1039  0990                     	;# 
  1040  0991                     	;# 
  1041  0992                     	;# 
  1042  0993                     	;# 
  1043  0994                     	;# 
  1044  0995                     	;# 
  1045  0996                     	;# 
  1046  0997                     	;# 
  1047  0E0F                     	;# 
  1048  0E10                     	;# 
  1049  0E11                     	;# 
  1050  0E12                     	;# 
  1051  0E13                     	;# 
  1052  0E14                     	;# 
  1053  0E15                     	;# 
  1054  0E16                     	;# 
  1055  0E17                     	;# 
  1056  0E18                     	;# 
  1057  0E19                     	;# 
  1058  0E1A                     	;# 
  1059  0E1B                     	;# 
  1060  0E1C                     	;# 
  1061  0E1D                     	;# 
  1062  0E1E                     	;# 
  1063  0E1F                     	;# 
  1064  0E20                     	;# 
  1065  0E21                     	;# 
  1066  0E22                     	;# 
  1067  0E23                     	;# 
  1068  0E24                     	;# 
  1069  0E25                     	;# 
  1070  0E26                     	;# 
  1071  0E27                     	;# 
  1072  0E28                     	;# 
  1073  0E29                     	;# 
  1074  0E2A                     	;# 
  1075  0E2B                     	;# 
  1076  0E2C                     	;# 
  1077  0E2D                     	;# 
  1078  0E2E                     	;# 
  1079  0E2F                     	;# 
  1080  0E30                     	;# 
  1081  0E31                     	;# 
  1082  0E32                     	;# 
  1083  0E33                     	;# 
  1084  0E34                     	;# 
  1085  0E35                     	;# 
  1086  0E36                     	;# 
  1087  0E37                     	;# 
  1088  0E8F                     	;# 
  1089  0E90                     	;# 
  1090  0E91                     	;# 
  1091  0E92                     	;# 
  1092  0E93                     	;# 
  1093  0E94                     	;# 
  1094  0E95                     	;# 
  1095  0E96                     	;# 
  1096  0E97                     	;# 
  1097  0E9C                     	;# 
  1098  0E9D                     	;# 
  1099  0E9E                     	;# 
  1100  0EA1                     	;# 
  1101  0EA2                     	;# 
  1102  0EA3                     	;# 
  1103  0EA4                     	;# 
  1104  0EA5                     	;# 
  1105  0EA9                     	;# 
  1106  0EAA                     	;# 
  1107  0EAB                     	;# 
  1108  0EAC                     	;# 
  1109  0EB1                     	;# 
  1110  0EB2                     	;# 
  1111  0EB3                     	;# 
  1112  0EB8                     	;# 
  1113  0EB9                     	;# 
  1114  0EBA                     	;# 
  1115  0EBB                     	;# 
  1116  0EBC                     	;# 
  1117  0EBD                     	;# 
  1118  0EBE                     	;# 
  1119  0EC3                     	;# 
  1120  0EC5                     	;# 
  1121  0EC6                     	;# 
  1122  0EC7                     	;# 
  1123  0EC8                     	;# 
  1124  0EC9                     	;# 
  1125  0ECA                     	;# 
  1126  0ECB                     	;# 
  1127  0ECC                     	;# 
  1128  0F10                     	;# 
  1129  0F11                     	;# 
  1130  0F12                     	;# 
  1131  0F13                     	;# 
  1132  0F14                     	;# 
  1133  0F15                     	;# 
  1134  0F16                     	;# 
  1135  0F17                     	;# 
  1136  0F18                     	;# 
  1137  0F19                     	;# 
  1138  0F1A                     	;# 
  1139  0F1B                     	;# 
  1140  0F1C                     	;# 
  1141  0F1D                     	;# 
  1142  0F1E                     	;# 
  1143  0F1F                     	;# 
  1144  0F20                     	;# 
  1145  0F21                     	;# 
  1146  0F22                     	;# 
  1147  0F23                     	;# 
  1148  0F24                     	;# 
  1149  0F25                     	;# 
  1150  0F26                     	;# 
  1151  0F27                     	;# 
  1152  0F28                     	;# 
  1153  0F29                     	;# 
  1154  0F2A                     	;# 
  1155  0F2B                     	;# 
  1156  0F2C                     	;# 
  1157  0F2D                     	;# 
  1158  0F2E                     	;# 
  1159  0F2F                     	;# 
  1160  0F30                     	;# 
  1161  0F31                     	;# 
  1162  0F32                     	;# 
  1163  0F38                     	;# 
  1164  0F39                     	;# 
  1165  0F3A                     	;# 
  1166  0F3B                     	;# 
  1167  0F3C                     	;# 
  1168  0F3D                     	;# 
  1169  0F3E                     	;# 
  1170  0F3F                     	;# 
  1171  0F40                     	;# 
  1172  0F41                     	;# 
  1173  0F43                     	;# 
  1174  0F44                     	;# 
  1175  0F45                     	;# 
  1176  0F46                     	;# 
  1177  0F47                     	;# 
  1178  0F48                     	;# 
  1179  0F49                     	;# 
  1180  0F4A                     	;# 
  1181  0F4B                     	;# 
  1182  0F4C                     	;# 
  1183  0F4E                     	;# 
  1184  0F4F                     	;# 
  1185  0F50                     	;# 
  1186  0F51                     	;# 
  1187  0F52                     	;# 
  1188  0F53                     	;# 
  1189  0F54                     	;# 
  1190  0F55                     	;# 
  1191  0F56                     	;# 
  1192  0F57                     	;# 
  1193  0F59                     	;# 
  1194  0F5A                     	;# 
  1195  0F5B                     	;# 
  1196  0F5C                     	;# 
  1197  0F5D                     	;# 
  1198  0F61                     	;# 
  1199  0F62                     	;# 
  1200  0F64                     	;# 
  1201  0F65                     	;# 
  1202  0F66                     	;# 
  1203  0F67                     	;# 
  1204  0F68                     	;# 
  1205  0F69                     	;# 
  1206  0F6A                     	;# 
  1207  0F6B                     	;# 
  1208  0F6C                     	;# 
  1209  0F6D                     	;# 
  1210  0FE4                     	;# 
  1211  0FE5                     	;# 
  1212  0FE6                     	;# 
  1213  0FE7                     	;# 
  1214  0FE8                     	;# 
  1215  0FE9                     	;# 
  1216  0FEA                     	;# 
  1217  0FEB                     	;# 
  1218  0FED                     	;# 
  1219  0FEE                     	;# 
  1220  0FEF                     	;# 
  1221  0000                     	;# 
  1222  0001                     	;# 
  1223  0002                     	;# 
  1224  0003                     	;# 
  1225  0004                     	;# 
  1226  0005                     	;# 
  1227  0006                     	;# 
  1228  0007                     	;# 
  1229  0008                     	;# 
  1230  0009                     	;# 
  1231  000A                     	;# 
  1232  000B                     	;# 
  1233  000C                     	;# 
  1234  000D                     	;# 
  1235  000E                     	;# 
  1236  000F                     	;# 
  1237  0010                     	;# 
  1238  0011                     	;# 
  1239  0012                     	;# 
  1240  0013                     	;# 
  1241  0014                     	;# 
  1242  0015                     	;# 
  1243  0016                     	;# 
  1244  0017                     	;# 
  1245  0018                     	;# 
  1246  0019                     	;# 
  1247  001A                     	;# 
  1248  001C                     	;# 
  1249  001C                     	;# 
  1250  001D                     	;# 
  1251  001D                     	;# 
  1252  001E                     	;# 
  1253  001F                     	;# 
  1254  008C                     	;# 
  1255  008C                     	;# 
  1256  008D                     	;# 
  1257  008E                     	;# 
  1258  008E                     	;# 
  1259  008F                     	;# 
  1260  0090                     	;# 
  1261  0090                     	;# 
  1262  0091                     	;# 
  1263  0093                     	;# 
  1264  0094                     	;# 
  1265  0095                     	;# 
  1266  0096                     	;# 
  1267  0097                     	;# 
  1268  0098                     	;# 
  1269  0099                     	;# 
  1270  009A                     	;# 
  1271  009B                     	;# 
  1272  009C                     	;# 
  1273  009D                     	;# 
  1274  009E                     	;# 
  1275  010C                     	;# 
  1276  010D                     	;# 
  1277  010E                     	;# 
  1278  010E                     	;# 
  1279  010F                     	;# 
  1280  0110                     	;# 
  1281  0110                     	;# 
  1282  0111                     	;# 
  1283  0112                     	;# 
  1284  0112                     	;# 
  1285  0113                     	;# 
  1286  0114                     	;# 
  1287  0114                     	;# 
  1288  0115                     	;# 
  1289  0116                     	;# 
  1290  0116                     	;# 
  1291  0117                     	;# 
  1292  0119                     	;# 
  1293  0119                     	;# 
  1294  0119                     	;# 
  1295  011A                     	;# 
  1296  011A                     	;# 
  1297  011A                     	;# 
  1298  011B                     	;# 
  1299  011B                     	;# 
  1300  011B                     	;# 
  1301  011B                     	;# 
  1302  011B                     	;# 
  1303  011C                     	;# 
  1304  011C                     	;# 
  1305  011C                     	;# 
  1306  011D                     	;# 
  1307  011D                     	;# 
  1308  011D                     	;# 
  1309  011E                     	;# 
  1310  011E                     	;# 
  1311  011E                     	;# 
  1312  011F                     	;# 
  1313  011F                     	;# 
  1314  011F                     	;# 
  1315  011F                     	;# 
  1316  011F                     	;# 
  1317  018C                     	;# 
  1318  018D                     	;# 
  1319  018E                     	;# 
  1320  018F                     	;# 
  1321  0190                     	;# 
  1322  0191                     	;# 
  1323  0192                     	;# 
  1324  0196                     	;# 
  1325  0197                     	;# 
  1326  0198                     	;# 
  1327  0199                     	;# 
  1328  019A                     	;# 
  1329  019B                     	;# 
  1330  019C                     	;# 
  1331  020C                     	;# 
  1332  020C                     	;# 
  1333  020D                     	;# 
  1334  020E                     	;# 
  1335  020F                     	;# 
  1336  020F                     	;# 
  1337  0210                     	;# 
  1338  0210                     	;# 
  1339  0211                     	;# 
  1340  0211                     	;# 
  1341  0212                     	;# 
  1342  0212                     	;# 
  1343  0213                     	;# 
  1344  0214                     	;# 
  1345  0215                     	;# 
  1346  0215                     	;# 
  1347  0216                     	;# 
  1348  0216                     	;# 
  1349  0217                     	;# 
  1350  0217                     	;# 
  1351  0218                     	;# 
  1352  0218                     	;# 
  1353  0219                     	;# 
  1354  021A                     	;# 
  1355  021B                     	;# 
  1356  021B                     	;# 
  1357  021C                     	;# 
  1358  021C                     	;# 
  1359  021D                     	;# 
  1360  021D                     	;# 
  1361  021E                     	;# 
  1362  021F                     	;# 
  1363  028C                     	;# 
  1364  028C                     	;# 
  1365  028D                     	;# 
  1366  028D                     	;# 
  1367  028E                     	;# 
  1368  028F                     	;# 
  1369  0290                     	;# 
  1370  0290                     	;# 
  1371  0291                     	;# 
  1372  0292                     	;# 
  1373  0292                     	;# 
  1374  0293                     	;# 
  1375  0293                     	;# 
  1376  0294                     	;# 
  1377  0295                     	;# 
  1378  0296                     	;# 
  1379  0296                     	;# 
  1380  0297                     	;# 
  1381  0298                     	;# 
  1382  0298                     	;# 
  1383  0299                     	;# 
  1384  0299                     	;# 
  1385  029A                     	;# 
  1386  029B                     	;# 
  1387  029C                     	;# 
  1388  029C                     	;# 
  1389  029D                     	;# 
  1390  030C                     	;# 
  1391  030C                     	;# 
  1392  030D                     	;# 
  1393  030E                     	;# 
  1394  030F                     	;# 
  1395  0310                     	;# 
  1396  0310                     	;# 
  1397  0311                     	;# 
  1398  0312                     	;# 
  1399  0313                     	;# 
  1400  0314                     	;# 
  1401  0314                     	;# 
  1402  0315                     	;# 
  1403  0316                     	;# 
  1404  0317                     	;# 
  1405  0318                     	;# 
  1406  0318                     	;# 
  1407  0319                     	;# 
  1408  031A                     	;# 
  1409  031B                     	;# 
  1410  031C                     	;# 
  1411  031C                     	;# 
  1412  031D                     	;# 
  1413  031E                     	;# 
  1414  031F                     	;# 
  1415  038C                     	;# 
  1416  038C                     	;# 
  1417  038D                     	;# 
  1418  038E                     	;# 
  1419  0390                     	;# 
  1420  0390                     	;# 
  1421  0391                     	;# 
  1422  0392                     	;# 
  1423  040C                     	;# 
  1424  040D                     	;# 
  1425  040E                     	;# 
  1426  040F                     	;# 
  1427  0410                     	;# 
  1428  0411                     	;# 
  1429  0416                     	;# 
  1430  0416                     	;# 
  1431  0417                     	;# 
  1432  0418                     	;# 
  1433  0418                     	;# 
  1434  0419                     	;# 
  1435  041A                     	;# 
  1436  041A                     	;# 
  1437  041B                     	;# 
  1438  041C                     	;# 
  1439  041C                     	;# 
  1440  041D                     	;# 
  1441  041E                     	;# 
  1442  041F                     	;# 
  1443  048C                     	;# 
  1444  048C                     	;# 
  1445  048D                     	;# 
  1446  048E                     	;# 
  1447  048F                     	;# 
  1448  048F                     	;# 
  1449  0490                     	;# 
  1450  0491                     	;# 
  1451  0492                     	;# 
  1452  0492                     	;# 
  1453  0493                     	;# 
  1454  0494                     	;# 
  1455  0495                     	;# 
  1456  0495                     	;# 
  1457  0496                     	;# 
  1458  0497                     	;# 
  1459  0498                     	;# 
  1460  0499                     	;# 
  1461  049A                     	;# 
  1462  049B                     	;# 
  1463  049C                     	;# 
  1464  049D                     	;# 
  1465  050C                     	;# 
  1466  050C                     	;# 
  1467  050D                     	;# 
  1468  050E                     	;# 
  1469  050F                     	;# 
  1470  050F                     	;# 
  1471  0510                     	;# 
  1472  0511                     	;# 
  1473  0512                     	;# 
  1474  0512                     	;# 
  1475  0513                     	;# 
  1476  0514                     	;# 
  1477  0515                     	;# 
  1478  0515                     	;# 
  1479  0516                     	;# 
  1480  0517                     	;# 
  1481  0518                     	;# 
  1482  0519                     	;# 
  1483  051A                     	;# 
  1484  051B                     	;# 
  1485  051C                     	;# 
  1486  051D                     	;# 
  1487  058C                     	;# 
  1488  058C                     	;# 
  1489  058D                     	;# 
  1490  058E                     	;# 
  1491  058F                     	;# 
  1492  058F                     	;# 
  1493  0590                     	;# 
  1494  0591                     	;# 
  1495  0592                     	;# 
  1496  0593                     	;# 
  1497  060C                     	;# 
  1498  060D                     	;# 
  1499  060E                     	;# 
  1500  060F                     	;# 
  1501  0610                     	;# 
  1502  0611                     	;# 
  1503  0612                     	;# 
  1504  0613                     	;# 
  1505  0614                     	;# 
  1506  0616                     	;# 
  1507  0617                     	;# 
  1508  0618                     	;# 
  1509  0619                     	;# 
  1510  061A                     	;# 
  1511  061B                     	;# 
  1512  061C                     	;# 
  1513  061D                     	;# 
  1514  061E                     	;# 
  1515  068C                     	;# 
  1516  068D                     	;# 
  1517  068E                     	;# 
  1518  068F                     	;# 
  1519  0690                     	;# 
  1520  0691                     	;# 
  1521  0692                     	;# 
  1522  0693                     	;# 
  1523  0694                     	;# 
  1524  070C                     	;# 
  1525  070D                     	;# 
  1526  070E                     	;# 
  1527  070F                     	;# 
  1528  0710                     	;# 
  1529  0711                     	;# 
  1530  0712                     	;# 
  1531  0713                     	;# 
  1532  0714                     	;# 
  1533  0716                     	;# 
  1534  0717                     	;# 
  1535  0718                     	;# 
  1536  0719                     	;# 
  1537  071A                     	;# 
  1538  071B                     	;# 
  1539  071C                     	;# 
  1540  071D                     	;# 
  1541  071E                     	;# 
  1542  0796                     	;# 
  1543  0797                     	;# 
  1544  0798                     	;# 
  1545  0799                     	;# 
  1546  079A                     	;# 
  1547  079B                     	;# 
  1548  080C                     	;# 
  1549  080D                     	;# 
  1550  080E                     	;# 
  1551  080F                     	;# 
  1552  0810                     	;# 
  1553  0811                     	;# 
  1554  0812                     	;# 
  1555  0813                     	;# 
  1556  0814                     	;# 
  1557  081A                     	;# 
  1558  081B                     	;# 
  1559  081C                     	;# 
  1560  081D                     	;# 
  1561  081E                     	;# 
  1562  081F                     	;# 
  1563  088C                     	;# 
  1564  088D                     	;# 
  1565  088E                     	;# 
  1566  088F                     	;# 
  1567  0890                     	;# 
  1568  0891                     	;# 
  1569  0892                     	;# 
  1570  0893                     	;# 
  1571  0895                     	;# 
  1572  0896                     	;# 
  1573  0897                     	;# 
  1574  0898                     	;# 
  1575  0899                     	;# 
  1576  089A                     	;# 
  1577  089B                     	;# 
  1578  090C                     	;# 
  1579  090E                     	;# 
  1580  090F                     	;# 
  1581  091F                     	;# 
  1582  091F                     	;# 
  1583  098F                     	;# 
  1584  098F                     	;# 
  1585  0990                     	;# 
  1586  0991                     	;# 
  1587  0992                     	;# 
  1588  0993                     	;# 
  1589  0994                     	;# 
  1590  0995                     	;# 
  1591  0996                     	;# 
  1592  0997                     	;# 
  1593  0E0F                     	;# 
  1594  0E10                     	;# 
  1595  0E11                     	;# 
  1596  0E12                     	;# 
  1597  0E13                     	;# 
  1598  0E14                     	;# 
  1599  0E15                     	;# 
  1600  0E16                     	;# 
  1601  0E17                     	;# 
  1602  0E18                     	;# 
  1603  0E19                     	;# 
  1604  0E1A                     	;# 
  1605  0E1B                     	;# 
  1606  0E1C                     	;# 
  1607  0E1D                     	;# 
  1608  0E1E                     	;# 
  1609  0E1F                     	;# 
  1610  0E20                     	;# 
  1611  0E21                     	;# 
  1612  0E22                     	;# 
  1613  0E23                     	;# 
  1614  0E24                     	;# 
  1615  0E25                     	;# 
  1616  0E26                     	;# 
  1617  0E27                     	;# 
  1618  0E28                     	;# 
  1619  0E29                     	;# 
  1620  0E2A                     	;# 
  1621  0E2B                     	;# 
  1622  0E2C                     	;# 
  1623  0E2D                     	;# 
  1624  0E2E                     	;# 
  1625  0E2F                     	;# 
  1626  0E30                     	;# 
  1627  0E31                     	;# 
  1628  0E32                     	;# 
  1629  0E33                     	;# 
  1630  0E34                     	;# 
  1631  0E35                     	;# 
  1632  0E36                     	;# 
  1633  0E37                     	;# 
  1634  0E8F                     	;# 
  1635  0E90                     	;# 
  1636  0E91                     	;# 
  1637  0E92                     	;# 
  1638  0E93                     	;# 
  1639  0E94                     	;# 
  1640  0E95                     	;# 
  1641  0E96                     	;# 
  1642  0E97                     	;# 
  1643  0E9C                     	;# 
  1644  0E9D                     	;# 
  1645  0E9E                     	;# 
  1646  0EA1                     	;# 
  1647  0EA2                     	;# 
  1648  0EA3                     	;# 
  1649  0EA4                     	;# 
  1650  0EA5                     	;# 
  1651  0EA9                     	;# 
  1652  0EAA                     	;# 
  1653  0EAB                     	;# 
  1654  0EAC                     	;# 
  1655  0EB1                     	;# 
  1656  0EB2                     	;# 
  1657  0EB3                     	;# 
  1658  0EB8                     	;# 
  1659  0EB9                     	;# 
  1660  0EBA                     	;# 
  1661  0EBB                     	;# 
  1662  0EBC                     	;# 
  1663  0EBD                     	;# 
  1664  0EBE                     	;# 
  1665  0EC3                     	;# 
  1666  0EC5                     	;# 
  1667  0EC6                     	;# 
  1668  0EC7                     	;# 
  1669  0EC8                     	;# 
  1670  0EC9                     	;# 
  1671  0ECA                     	;# 
  1672  0ECB                     	;# 
  1673  0ECC                     	;# 
  1674  0F10                     	;# 
  1675  0F11                     	;# 
  1676  0F12                     	;# 
  1677  0F13                     	;# 
  1678  0F14                     	;# 
  1679  0F15                     	;# 
  1680  0F16                     	;# 
  1681  0F17                     	;# 
  1682  0F18                     	;# 
  1683  0F19                     	;# 
  1684  0F1A                     	;# 
  1685  0F1B                     	;# 
  1686  0F1C                     	;# 
  1687  0F1D                     	;# 
  1688  0F1E                     	;# 
  1689  0F1F                     	;# 
  1690  0F20                     	;# 
  1691  0F21                     	;# 
  1692  0F22                     	;# 
  1693  0F23                     	;# 
  1694  0F24                     	;# 
  1695  0F25                     	;# 
  1696  0F26                     	;# 
  1697  0F27                     	;# 
  1698  0F28                     	;# 
  1699  0F29                     	;# 
  1700  0F2A                     	;# 
  1701  0F2B                     	;# 
  1702  0F2C                     	;# 
  1703  0F2D                     	;# 
  1704  0F2E                     	;# 
  1705  0F2F                     	;# 
  1706  0F30                     	;# 
  1707  0F31                     	;# 
  1708  0F32                     	;# 
  1709  0F38                     	;# 
  1710  0F39                     	;# 
  1711  0F3A                     	;# 
  1712  0F3B                     	;# 
  1713  0F3C                     	;# 
  1714  0F3D                     	;# 
  1715  0F3E                     	;# 
  1716  0F3F                     	;# 
  1717  0F40                     	;# 
  1718  0F41                     	;# 
  1719  0F43                     	;# 
  1720  0F44                     	;# 
  1721  0F45                     	;# 
  1722  0F46                     	;# 
  1723  0F47                     	;# 
  1724  0F48                     	;# 
  1725  0F49                     	;# 
  1726  0F4A                     	;# 
  1727  0F4B                     	;# 
  1728  0F4C                     	;# 
  1729  0F4E                     	;# 
  1730  0F4F                     	;# 
  1731  0F50                     	;# 
  1732  0F51                     	;# 
  1733  0F52                     	;# 
  1734  0F53                     	;# 
  1735  0F54                     	;# 
  1736  0F55                     	;# 
  1737  0F56                     	;# 
  1738  0F57                     	;# 
  1739  0F59                     	;# 
  1740  0F5A                     	;# 
  1741  0F5B                     	;# 
  1742  0F5C                     	;# 
  1743  0F5D                     	;# 
  1744  0F61                     	;# 
  1745  0F62                     	;# 
  1746  0F64                     	;# 
  1747  0F65                     	;# 
  1748  0F66                     	;# 
  1749  0F67                     	;# 
  1750  0F68                     	;# 
  1751  0F69                     	;# 
  1752  0F6A                     	;# 
  1753  0F6B                     	;# 
  1754  0F6C                     	;# 
  1755  0F6D                     	;# 
  1756  0FE4                     	;# 
  1757  0FE5                     	;# 
  1758  0FE6                     	;# 
  1759  0FE7                     	;# 
  1760  0FE8                     	;# 
  1761  0FE9                     	;# 
  1762  0FEA                     	;# 
  1763  0FEB                     	;# 
  1764  0FED                     	;# 
  1765  0FEE                     	;# 
  1766  0FEF                     	;# 
  1767  0000                     	;# 
  1768  0001                     	;# 
  1769  0002                     	;# 
  1770  0003                     	;# 
  1771  0004                     	;# 
  1772  0005                     	;# 
  1773  0006                     	;# 
  1774  0007                     	;# 
  1775  0008                     	;# 
  1776  0009                     	;# 
  1777  000A                     	;# 
  1778  000B                     	;# 
  1779  000C                     	;# 
  1780  000D                     	;# 
  1781  000E                     	;# 
  1782  000F                     	;# 
  1783  0010                     	;# 
  1784  0011                     	;# 
  1785  0012                     	;# 
  1786  0013                     	;# 
  1787  0014                     	;# 
  1788  0015                     	;# 
  1789  0016                     	;# 
  1790  0017                     	;# 
  1791  0018                     	;# 
  1792  0019                     	;# 
  1793  001A                     	;# 
  1794  001C                     	;# 
  1795  001C                     	;# 
  1796  001D                     	;# 
  1797  001D                     	;# 
  1798  001E                     	;# 
  1799  001F                     	;# 
  1800  008C                     	;# 
  1801  008C                     	;# 
  1802  008D                     	;# 
  1803  008E                     	;# 
  1804  008E                     	;# 
  1805  008F                     	;# 
  1806  0090                     	;# 
  1807  0090                     	;# 
  1808  0091                     	;# 
  1809  0093                     	;# 
  1810  0094                     	;# 
  1811  0095                     	;# 
  1812  0096                     	;# 
  1813  0097                     	;# 
  1814  0098                     	;# 
  1815  0099                     	;# 
  1816  009A                     	;# 
  1817  009B                     	;# 
  1818  009C                     	;# 
  1819  009D                     	;# 
  1820  009E                     	;# 
  1821  010C                     	;# 
  1822  010D                     	;# 
  1823  010E                     	;# 
  1824  010E                     	;# 
  1825  010F                     	;# 
  1826  0110                     	;# 
  1827  0110                     	;# 
  1828  0111                     	;# 
  1829  0112                     	;# 
  1830  0112                     	;# 
  1831  0113                     	;# 
  1832  0114                     	;# 
  1833  0114                     	;# 
  1834  0115                     	;# 
  1835  0116                     	;# 
  1836  0116                     	;# 
  1837  0117                     	;# 
  1838  0119                     	;# 
  1839  0119                     	;# 
  1840  0119                     	;# 
  1841  011A                     	;# 
  1842  011A                     	;# 
  1843  011A                     	;# 
  1844  011B                     	;# 
  1845  011B                     	;# 
  1846  011B                     	;# 
  1847  011B                     	;# 
  1848  011B                     	;# 
  1849  011C                     	;# 
  1850  011C                     	;# 
  1851  011C                     	;# 
  1852  011D                     	;# 
  1853  011D                     	;# 
  1854  011D                     	;# 
  1855  011E                     	;# 
  1856  011E                     	;# 
  1857  011E                     	;# 
  1858  011F                     	;# 
  1859  011F                     	;# 
  1860  011F                     	;# 
  1861  011F                     	;# 
  1862  011F                     	;# 
  1863  018C                     	;# 
  1864  018D                     	;# 
  1865  018E                     	;# 
  1866  018F                     	;# 
  1867  0190                     	;# 
  1868  0191                     	;# 
  1869  0192                     	;# 
  1870  0196                     	;# 
  1871  0197                     	;# 
  1872  0198                     	;# 
  1873  0199                     	;# 
  1874  019A                     	;# 
  1875  019B                     	;# 
  1876  019C                     	;# 
  1877  020C                     	;# 
  1878  020C                     	;# 
  1879  020D                     	;# 
  1880  020E                     	;# 
  1881  020F                     	;# 
  1882  020F                     	;# 
  1883  0210                     	;# 
  1884  0210                     	;# 
  1885  0211                     	;# 
  1886  0211                     	;# 
  1887  0212                     	;# 
  1888  0212                     	;# 
  1889  0213                     	;# 
  1890  0214                     	;# 
  1891  0215                     	;# 
  1892  0215                     	;# 
  1893  0216                     	;# 
  1894  0216                     	;# 
  1895  0217                     	;# 
  1896  0217                     	;# 
  1897  0218                     	;# 
  1898  0218                     	;# 
  1899  0219                     	;# 
  1900  021A                     	;# 
  1901  021B                     	;# 
  1902  021B                     	;# 
  1903  021C                     	;# 
  1904  021C                     	;# 
  1905  021D                     	;# 
  1906  021D                     	;# 
  1907  021E                     	;# 
  1908  021F                     	;# 
  1909  028C                     	;# 
  1910  028C                     	;# 
  1911  028D                     	;# 
  1912  028D                     	;# 
  1913  028E                     	;# 
  1914  028F                     	;# 
  1915  0290                     	;# 
  1916  0290                     	;# 
  1917  0291                     	;# 
  1918  0292                     	;# 
  1919  0292                     	;# 
  1920  0293                     	;# 
  1921  0293                     	;# 
  1922  0294                     	;# 
  1923  0295                     	;# 
  1924  0296                     	;# 
  1925  0296                     	;# 
  1926  0297                     	;# 
  1927  0298                     	;# 
  1928  0298                     	;# 
  1929  0299                     	;# 
  1930  0299                     	;# 
  1931  029A                     	;# 
  1932  029B                     	;# 
  1933  029C                     	;# 
  1934  029C                     	;# 
  1935  029D                     	;# 
  1936  030C                     	;# 
  1937  030C                     	;# 
  1938  030D                     	;# 
  1939  030E                     	;# 
  1940  030F                     	;# 
  1941  0310                     	;# 
  1942  0310                     	;# 
  1943  0311                     	;# 
  1944  0312                     	;# 
  1945  0313                     	;# 
  1946  0314                     	;# 
  1947  0314                     	;# 
  1948  0315                     	;# 
  1949  0316                     	;# 
  1950  0317                     	;# 
  1951  0318                     	;# 
  1952  0318                     	;# 
  1953  0319                     	;# 
  1954  031A                     	;# 
  1955  031B                     	;# 
  1956  031C                     	;# 
  1957  031C                     	;# 
  1958  031D                     	;# 
  1959  031E                     	;# 
  1960  031F                     	;# 
  1961  038C                     	;# 
  1962  038C                     	;# 
  1963  038D                     	;# 
  1964  038E                     	;# 
  1965  0390                     	;# 
  1966  0390                     	;# 
  1967  0391                     	;# 
  1968  0392                     	;# 
  1969  040C                     	;# 
  1970  040D                     	;# 
  1971  040E                     	;# 
  1972  040F                     	;# 
  1973  0410                     	;# 
  1974  0411                     	;# 
  1975  0416                     	;# 
  1976  0416                     	;# 
  1977  0417                     	;# 
  1978  0418                     	;# 
  1979  0418                     	;# 
  1980  0419                     	;# 
  1981  041A                     	;# 
  1982  041A                     	;# 
  1983  041B                     	;# 
  1984  041C                     	;# 
  1985  041C                     	;# 
  1986  041D                     	;# 
  1987  041E                     	;# 
  1988  041F                     	;# 
  1989  048C                     	;# 
  1990  048C                     	;# 
  1991  048D                     	;# 
  1992  048E                     	;# 
  1993  048F                     	;# 
  1994  048F                     	;# 
  1995  0490                     	;# 
  1996  0491                     	;# 
  1997  0492                     	;# 
  1998  0492                     	;# 
  1999  0493                     	;# 
  2000  0494                     	;# 
  2001  0495                     	;# 
  2002  0495                     	;# 
  2003  0496                     	;# 
  2004  0497                     	;# 
  2005  0498                     	;# 
  2006  0499                     	;# 
  2007  049A                     	;# 
  2008  049B                     	;# 
  2009  049C                     	;# 
  2010  049D                     	;# 
  2011  050C                     	;# 
  2012  050C                     	;# 
  2013  050D                     	;# 
  2014  050E                     	;# 
  2015  050F                     	;# 
  2016  050F                     	;# 
  2017  0510                     	;# 
  2018  0511                     	;# 
  2019  0512                     	;# 
  2020  0512                     	;# 
  2021  0513                     	;# 
  2022  0514                     	;# 
  2023  0515                     	;# 
  2024  0515                     	;# 
  2025  0516                     	;# 
  2026  0517                     	;# 
  2027  0518                     	;# 
  2028  0519                     	;# 
  2029  051A                     	;# 
  2030  051B                     	;# 
  2031  051C                     	;# 
  2032  051D                     	;# 
  2033  058C                     	;# 
  2034  058C                     	;# 
  2035  058D                     	;# 
  2036  058E                     	;# 
  2037  058F                     	;# 
  2038  058F                     	;# 
  2039  0590                     	;# 
  2040  0591                     	;# 
  2041  0592                     	;# 
  2042  0593                     	;# 
  2043  060C                     	;# 
  2044  060D                     	;# 
  2045  060E                     	;# 
  2046  060F                     	;# 
  2047  0610                     	;# 
  2048  0611                     	;# 
  2049  0612                     	;# 
  2050  0613                     	;# 
  2051  0614                     	;# 
  2052  0616                     	;# 
  2053  0617                     	;# 
  2054  0618                     	;# 
  2055  0619                     	;# 
  2056  061A                     	;# 
  2057  061B                     	;# 
  2058  061C                     	;# 
  2059  061D                     	;# 
  2060  061E                     	;# 
  2061  068C                     	;# 
  2062  068D                     	;# 
  2063  068E                     	;# 
  2064  068F                     	;# 
  2065  0690                     	;# 
  2066  0691                     	;# 
  2067  0692                     	;# 
  2068  0693                     	;# 
  2069  0694                     	;# 
  2070  070C                     	;# 
  2071  070D                     	;# 
  2072  070E                     	;# 
  2073  070F                     	;# 
  2074  0710                     	;# 
  2075  0711                     	;# 
  2076  0712                     	;# 
  2077  0713                     	;# 
  2078  0714                     	;# 
  2079  0716                     	;# 
  2080  0717                     	;# 
  2081  0718                     	;# 
  2082  0719                     	;# 
  2083  071A                     	;# 
  2084  071B                     	;# 
  2085  071C                     	;# 
  2086  071D                     	;# 
  2087  071E                     	;# 
  2088  0796                     	;# 
  2089  0797                     	;# 
  2090  0798                     	;# 
  2091  0799                     	;# 
  2092  079A                     	;# 
  2093  079B                     	;# 
  2094  080C                     	;# 
  2095  080D                     	;# 
  2096  080E                     	;# 
  2097  080F                     	;# 
  2098  0810                     	;# 
  2099  0811                     	;# 
  2100  0812                     	;# 
  2101  0813                     	;# 
  2102  0814                     	;# 
  2103  081A                     	;# 
  2104  081B                     	;# 
  2105  081C                     	;# 
  2106  081D                     	;# 
  2107  081E                     	;# 
  2108  081F                     	;# 
  2109  088C                     	;# 
  2110  088D                     	;# 
  2111  088E                     	;# 
  2112  088F                     	;# 
  2113  0890                     	;# 
  2114  0891                     	;# 
  2115  0892                     	;# 
  2116  0893                     	;# 
  2117  0895                     	;# 
  2118  0896                     	;# 
  2119  0897                     	;# 
  2120  0898                     	;# 
  2121  0899                     	;# 
  2122  089A                     	;# 
  2123  089B                     	;# 
  2124  090C                     	;# 
  2125  090E                     	;# 
  2126  090F                     	;# 
  2127  091F                     	;# 
  2128  091F                     	;# 
  2129  098F                     	;# 
  2130  098F                     	;# 
  2131  0990                     	;# 
  2132  0991                     	;# 
  2133  0992                     	;# 
  2134  0993                     	;# 
  2135  0994                     	;# 
  2136  0995                     	;# 
  2137  0996                     	;# 
  2138  0997                     	;# 
  2139  0E0F                     	;# 
  2140  0E10                     	;# 
  2141  0E11                     	;# 
  2142  0E12                     	;# 
  2143  0E13                     	;# 
  2144  0E14                     	;# 
  2145  0E15                     	;# 
  2146  0E16                     	;# 
  2147  0E17                     	;# 
  2148  0E18                     	;# 
  2149  0E19                     	;# 
  2150  0E1A                     	;# 
  2151  0E1B                     	;# 
  2152  0E1C                     	;# 
  2153  0E1D                     	;# 
  2154  0E1E                     	;# 
  2155  0E1F                     	;# 
  2156  0E20                     	;# 
  2157  0E21                     	;# 
  2158  0E22                     	;# 
  2159  0E23                     	;# 
  2160  0E24                     	;# 
  2161  0E25                     	;# 
  2162  0E26                     	;# 
  2163  0E27                     	;# 
  2164  0E28                     	;# 
  2165  0E29                     	;# 
  2166  0E2A                     	;# 
  2167  0E2B                     	;# 
  2168  0E2C                     	;# 
  2169  0E2D                     	;# 
  2170  0E2E                     	;# 
  2171  0E2F                     	;# 
  2172  0E30                     	;# 
  2173  0E31                     	;# 
  2174  0E32                     	;# 
  2175  0E33                     	;# 
  2176  0E34                     	;# 
  2177  0E35                     	;# 
  2178  0E36                     	;# 
  2179  0E37                     	;# 
  2180  0E8F                     	;# 
  2181  0E90                     	;# 
  2182  0E91                     	;# 
  2183  0E92                     	;# 
  2184  0E93                     	;# 
  2185  0E94                     	;# 
  2186  0E95                     	;# 
  2187  0E96                     	;# 
  2188  0E97                     	;# 
  2189  0E9C                     	;# 
  2190  0E9D                     	;# 
  2191  0E9E                     	;# 
  2192  0EA1                     	;# 
  2193  0EA2                     	;# 
  2194  0EA3                     	;# 
  2195  0EA4                     	;# 
  2196  0EA5                     	;# 
  2197  0EA9                     	;# 
  2198  0EAA                     	;# 
  2199  0EAB                     	;# 
  2200  0EAC                     	;# 
  2201  0EB1                     	;# 
  2202  0EB2                     	;# 
  2203  0EB3                     	;# 
  2204  0EB8                     	;# 
  2205  0EB9                     	;# 
  2206  0EBA                     	;# 
  2207  0EBB                     	;# 
  2208  0EBC                     	;# 
  2209  0EBD                     	;# 
  2210  0EBE                     	;# 
  2211  0EC3                     	;# 
  2212  0EC5                     	;# 
  2213  0EC6                     	;# 
  2214  0EC7                     	;# 
  2215  0EC8                     	;# 
  2216  0EC9                     	;# 
  2217  0ECA                     	;# 
  2218  0ECB                     	;# 
  2219  0ECC                     	;# 
  2220  0F10                     	;# 
  2221  0F11                     	;# 
  2222  0F12                     	;# 
  2223  0F13                     	;# 
  2224  0F14                     	;# 
  2225  0F15                     	;# 
  2226  0F16                     	;# 
  2227  0F17                     	;# 
  2228  0F18                     	;# 
  2229  0F19                     	;# 
  2230  0F1A                     	;# 
  2231  0F1B                     	;# 
  2232  0F1C                     	;# 
  2233  0F1D                     	;# 
  2234  0F1E                     	;# 
  2235  0F1F                     	;# 
  2236  0F20                     	;# 
  2237  0F21                     	;# 
  2238  0F22                     	;# 
  2239  0F23                     	;# 
  2240  0F24                     	;# 
  2241  0F25                     	;# 
  2242  0F26                     	;# 
  2243  0F27                     	;# 
  2244  0F28                     	;# 
  2245  0F29                     	;# 
  2246  0F2A                     	;# 
  2247  0F2B                     	;# 
  2248  0F2C                     	;# 
  2249  0F2D                     	;# 
  2250  0F2E                     	;# 
  2251  0F2F                     	;# 
  2252  0F30                     	;# 
  2253  0F31                     	;# 
  2254  0F32                     	;# 
  2255  0F38                     	;# 
  2256  0F39                     	;# 
  2257  0F3A                     	;# 
  2258  0F3B                     	;# 
  2259  0F3C                     	;# 
  2260  0F3D                     	;# 
  2261  0F3E                     	;# 
  2262  0F3F                     	;# 
  2263  0F40                     	;# 
  2264  0F41                     	;# 
  2265  0F43                     	;# 
  2266  0F44                     	;# 
  2267  0F45                     	;# 
  2268  0F46                     	;# 
  2269  0F47                     	;# 
  2270  0F48                     	;# 
  2271  0F49                     	;# 
  2272  0F4A                     	;# 
  2273  0F4B                     	;# 
  2274  0F4C                     	;# 
  2275  0F4E                     	;# 
  2276  0F4F                     	;# 
  2277  0F50                     	;# 
  2278  0F51                     	;# 
  2279  0F52                     	;# 
  2280  0F53                     	;# 
  2281  0F54                     	;# 
  2282  0F55                     	;# 
  2283  0F56                     	;# 
  2284  0F57                     	;# 
  2285  0F59                     	;# 
  2286  0F5A                     	;# 
  2287  0F5B                     	;# 
  2288  0F5C                     	;# 
  2289  0F5D                     	;# 
  2290  0F61                     	;# 
  2291  0F62                     	;# 
  2292  0F64                     	;# 
  2293  0F65                     	;# 
  2294  0F66                     	;# 
  2295  0F67                     	;# 
  2296  0F68                     	;# 
  2297  0F69                     	;# 
  2298  0F6A                     	;# 
  2299  0F6B                     	;# 
  2300  0F6C                     	;# 
  2301  0F6D                     	;# 
  2302  0FE4                     	;# 
  2303  0FE5                     	;# 
  2304  0FE6                     	;# 
  2305  0FE7                     	;# 
  2306  0FE8                     	;# 
  2307  0FE9                     	;# 
  2308  0FEA                     	;# 
  2309  0FEB                     	;# 
  2310  0FED                     	;# 
  2311  0FEE                     	;# 
  2312  0FEF                     	;# 
  2313  0000                     	;# 
  2314  0001                     	;# 
  2315  0002                     	;# 
  2316  0003                     	;# 
  2317  0004                     	;# 
  2318  0005                     	;# 
  2319  0006                     	;# 
  2320  0007                     	;# 
  2321  0008                     	;# 
  2322  0009                     	;# 
  2323  000A                     	;# 
  2324  000B                     	;# 
  2325  000C                     	;# 
  2326  000D                     	;# 
  2327  000E                     	;# 
  2328  000F                     	;# 
  2329  0010                     	;# 
  2330  0011                     	;# 
  2331  0012                     	;# 
  2332  0013                     	;# 
  2333  0014                     	;# 
  2334  0015                     	;# 
  2335  0016                     	;# 
  2336  0017                     	;# 
  2337  0018                     	;# 
  2338  0019                     	;# 
  2339  001A                     	;# 
  2340  001C                     	;# 
  2341  001C                     	;# 
  2342  001D                     	;# 
  2343  001D                     	;# 
  2344  001E                     	;# 
  2345  001F                     	;# 
  2346  008C                     	;# 
  2347  008C                     	;# 
  2348  008D                     	;# 
  2349  008E                     	;# 
  2350  008E                     	;# 
  2351  008F                     	;# 
  2352  0090                     	;# 
  2353  0090                     	;# 
  2354  0091                     	;# 
  2355  0093                     	;# 
  2356  0094                     	;# 
  2357  0095                     	;# 
  2358  0096                     	;# 
  2359  0097                     	;# 
  2360  0098                     	;# 
  2361  0099                     	;# 
  2362  009A                     	;# 
  2363  009B                     	;# 
  2364  009C                     	;# 
  2365  009D                     	;# 
  2366  009E                     	;# 
  2367  010C                     	;# 
  2368  010D                     	;# 
  2369  010E                     	;# 
  2370  010E                     	;# 
  2371  010F                     	;# 
  2372  0110                     	;# 
  2373  0110                     	;# 
  2374  0111                     	;# 
  2375  0112                     	;# 
  2376  0112                     	;# 
  2377  0113                     	;# 
  2378  0114                     	;# 
  2379  0114                     	;# 
  2380  0115                     	;# 
  2381  0116                     	;# 
  2382  0116                     	;# 
  2383  0117                     	;# 
  2384  0119                     	;# 
  2385  0119                     	;# 
  2386  0119                     	;# 
  2387  011A                     	;# 
  2388  011A                     	;# 
  2389  011A                     	;# 
  2390  011B                     	;# 
  2391  011B                     	;# 
  2392  011B                     	;# 
  2393  011B                     	;# 
  2394  011B                     	;# 
  2395  011C                     	;# 
  2396  011C                     	;# 
  2397  011C                     	;# 
  2398  011D                     	;# 
  2399  011D                     	;# 
  2400  011D                     	;# 
  2401  011E                     	;# 
  2402  011E                     	;# 
  2403  011E                     	;# 
  2404  011F                     	;# 
  2405  011F                     	;# 
  2406  011F                     	;# 
  2407  011F                     	;# 
  2408  011F                     	;# 
  2409  018C                     	;# 
  2410  018D                     	;# 
  2411  018E                     	;# 
  2412  018F                     	;# 
  2413  0190                     	;# 
  2414  0191                     	;# 
  2415  0192                     	;# 
  2416  0196                     	;# 
  2417  0197                     	;# 
  2418  0198                     	;# 
  2419  0199                     	;# 
  2420  019A                     	;# 
  2421  019B                     	;# 
  2422  019C                     	;# 
  2423  020C                     	;# 
  2424  020C                     	;# 
  2425  020D                     	;# 
  2426  020E                     	;# 
  2427  020F                     	;# 
  2428  020F                     	;# 
  2429  0210                     	;# 
  2430  0210                     	;# 
  2431  0211                     	;# 
  2432  0211                     	;# 
  2433  0212                     	;# 
  2434  0212                     	;# 
  2435  0213                     	;# 
  2436  0214                     	;# 
  2437  0215                     	;# 
  2438  0215                     	;# 
  2439  0216                     	;# 
  2440  0216                     	;# 
  2441  0217                     	;# 
  2442  0217                     	;# 
  2443  0218                     	;# 
  2444  0218                     	;# 
  2445  0219                     	;# 
  2446  021A                     	;# 
  2447  021B                     	;# 
  2448  021B                     	;# 
  2449  021C                     	;# 
  2450  021C                     	;# 
  2451  021D                     	;# 
  2452  021D                     	;# 
  2453  021E                     	;# 
  2454  021F                     	;# 
  2455  028C                     	;# 
  2456  028C                     	;# 
  2457  028D                     	;# 
  2458  028D                     	;# 
  2459  028E                     	;# 
  2460  028F                     	;# 
  2461  0290                     	;# 
  2462  0290                     	;# 
  2463  0291                     	;# 
  2464  0292                     	;# 
  2465  0292                     	;# 
  2466  0293                     	;# 
  2467  0293                     	;# 
  2468  0294                     	;# 
  2469  0295                     	;# 
  2470  0296                     	;# 
  2471  0296                     	;# 
  2472  0297                     	;# 
  2473  0298                     	;# 
  2474  0298                     	;# 
  2475  0299                     	;# 
  2476  0299                     	;# 
  2477  029A                     	;# 
  2478  029B                     	;# 
  2479  029C                     	;# 
  2480  029C                     	;# 
  2481  029D                     	;# 
  2482  030C                     	;# 
  2483  030C                     	;# 
  2484  030D                     	;# 
  2485  030E                     	;# 
  2486  030F                     	;# 
  2487  0310                     	;# 
  2488  0310                     	;# 
  2489  0311                     	;# 
  2490  0312                     	;# 
  2491  0313                     	;# 
  2492  0314                     	;# 
  2493  0314                     	;# 
  2494  0315                     	;# 
  2495  0316                     	;# 
  2496  0317                     	;# 
  2497  0318                     	;# 
  2498  0318                     	;# 
  2499  0319                     	;# 
  2500  031A                     	;# 
  2501  031B                     	;# 
  2502  031C                     	;# 
  2503  031C                     	;# 
  2504  031D                     	;# 
  2505  031E                     	;# 
  2506  031F                     	;# 
  2507  038C                     	;# 
  2508  038C                     	;# 
  2509  038D                     	;# 
  2510  038E                     	;# 
  2511  0390                     	;# 
  2512  0390                     	;# 
  2513  0391                     	;# 
  2514  0392                     	;# 
  2515  040C                     	;# 
  2516  040D                     	;# 
  2517  040E                     	;# 
  2518  040F                     	;# 
  2519  0410                     	;# 
  2520  0411                     	;# 
  2521  0416                     	;# 
  2522  0416                     	;# 
  2523  0417                     	;# 
  2524  0418                     	;# 
  2525  0418                     	;# 
  2526  0419                     	;# 
  2527  041A                     	;# 
  2528  041A                     	;# 
  2529  041B                     	;# 
  2530  041C                     	;# 
  2531  041C                     	;# 
  2532  041D                     	;# 
  2533  041E                     	;# 
  2534  041F                     	;# 
  2535  048C                     	;# 
  2536  048C                     	;# 
  2537  048D                     	;# 
  2538  048E                     	;# 
  2539  048F                     	;# 
  2540  048F                     	;# 
  2541  0490                     	;# 
  2542  0491                     	;# 
  2543  0492                     	;# 
  2544  0492                     	;# 
  2545  0493                     	;# 
  2546  0494                     	;# 
  2547  0495                     	;# 
  2548  0495                     	;# 
  2549  0496                     	;# 
  2550  0497                     	;# 
  2551  0498                     	;# 
  2552  0499                     	;# 
  2553  049A                     	;# 
  2554  049B                     	;# 
  2555  049C                     	;# 
  2556  049D                     	;# 
  2557  050C                     	;# 
  2558  050C                     	;# 
  2559  050D                     	;# 
  2560  050E                     	;# 
  2561  050F                     	;# 
  2562  050F                     	;# 
  2563  0510                     	;# 
  2564  0511                     	;# 
  2565  0512                     	;# 
  2566  0512                     	;# 
  2567  0513                     	;# 
  2568  0514                     	;# 
  2569  0515                     	;# 
  2570  0515                     	;# 
  2571  0516                     	;# 
  2572  0517                     	;# 
  2573  0518                     	;# 
  2574  0519                     	;# 
  2575  051A                     	;# 
  2576  051B                     	;# 
  2577  051C                     	;# 
  2578  051D                     	;# 
  2579  058C                     	;# 
  2580  058C                     	;# 
  2581  058D                     	;# 
  2582  058E                     	;# 
  2583  058F                     	;# 
  2584  058F                     	;# 
  2585  0590                     	;# 
  2586  0591                     	;# 
  2587  0592                     	;# 
  2588  0593                     	;# 
  2589  060C                     	;# 
  2590  060D                     	;# 
  2591  060E                     	;# 
  2592  060F                     	;# 
  2593  0610                     	;# 
  2594  0611                     	;# 
  2595  0612                     	;# 
  2596  0613                     	;# 
  2597  0614                     	;# 
  2598  0616                     	;# 
  2599  0617                     	;# 
  2600  0618                     	;# 
  2601  0619                     	;# 
  2602  061A                     	;# 
  2603  061B                     	;# 
  2604  061C                     	;# 
  2605  061D                     	;# 
  2606  061E                     	;# 
  2607  068C                     	;# 
  2608  068D                     	;# 
  2609  068E                     	;# 
  2610  068F                     	;# 
  2611  0690                     	;# 
  2612  0691                     	;# 
  2613  0692                     	;# 
  2614  0693                     	;# 
  2615  0694                     	;# 
  2616  070C                     	;# 
  2617  070D                     	;# 
  2618  070E                     	;# 
  2619  070F                     	;# 
  2620  0710                     	;# 
  2621  0711                     	;# 
  2622  0712                     	;# 
  2623  0713                     	;# 
  2624  0714                     	;# 
  2625  0716                     	;# 
  2626  0717                     	;# 
  2627  0718                     	;# 
  2628  0719                     	;# 
  2629  071A                     	;# 
  2630  071B                     	;# 
  2631  071C                     	;# 
  2632  071D                     	;# 
  2633  071E                     	;# 
  2634  0796                     	;# 
  2635  0797                     	;# 
  2636  0798                     	;# 
  2637  0799                     	;# 
  2638  079A                     	;# 
  2639  079B                     	;# 
  2640  080C                     	;# 
  2641  080D                     	;# 
  2642  080E                     	;# 
  2643  080F                     	;# 
  2644  0810                     	;# 
  2645  0811                     	;# 
  2646  0812                     	;# 
  2647  0813                     	;# 
  2648  0814                     	;# 
  2649  081A                     	;# 
  2650  081B                     	;# 
  2651  081C                     	;# 
  2652  081D                     	;# 
  2653  081E                     	;# 
  2654  081F                     	;# 
  2655  088C                     	;# 
  2656  088D                     	;# 
  2657  088E                     	;# 
  2658  088F                     	;# 
  2659  0890                     	;# 
  2660  0891                     	;# 
  2661  0892                     	;# 
  2662  0893                     	;# 
  2663  0895                     	;# 
  2664  0896                     	;# 
  2665  0897                     	;# 
  2666  0898                     	;# 
  2667  0899                     	;# 
  2668  089A                     	;# 
  2669  089B                     	;# 
  2670  090C                     	;# 
  2671  090E                     	;# 
  2672  090F                     	;# 
  2673  091F                     	;# 
  2674  091F                     	;# 
  2675  098F                     	;# 
  2676  098F                     	;# 
  2677  0990                     	;# 
  2678  0991                     	;# 
  2679  0992                     	;# 
  2680  0993                     	;# 
  2681  0994                     	;# 
  2682  0995                     	;# 
  2683  0996                     	;# 
  2684  0997                     	;# 
  2685  0E0F                     	;# 
  2686  0E10                     	;# 
  2687  0E11                     	;# 
  2688  0E12                     	;# 
  2689  0E13                     	;# 
  2690  0E14                     	;# 
  2691  0E15                     	;# 
  2692  0E16                     	;# 
  2693  0E17                     	;# 
  2694  0E18                     	;# 
  2695  0E19                     	;# 
  2696  0E1A                     	;# 
  2697  0E1B                     	;# 
  2698  0E1C                     	;# 
  2699  0E1D                     	;# 
  2700  0E1E                     	;# 
  2701  0E1F                     	;# 
  2702  0E20                     	;# 
  2703  0E21                     	;# 
  2704  0E22                     	;# 
  2705  0E23                     	;# 
  2706  0E24                     	;# 
  2707  0E25                     	;# 
  2708  0E26                     	;# 
  2709  0E27                     	;# 
  2710  0E28                     	;# 
  2711  0E29                     	;# 
  2712  0E2A                     	;# 
  2713  0E2B                     	;# 
  2714  0E2C                     	;# 
  2715  0E2D                     	;# 
  2716  0E2E                     	;# 
  2717  0E2F                     	;# 
  2718  0E30                     	;# 
  2719  0E31                     	;# 
  2720  0E32                     	;# 
  2721  0E33                     	;# 
  2722  0E34                     	;# 
  2723  0E35                     	;# 
  2724  0E36                     	;# 
  2725  0E37                     	;# 
  2726  0E8F                     	;# 
  2727  0E90                     	;# 
  2728  0E91                     	;# 
  2729  0E92                     	;# 
  2730  0E93                     	;# 
  2731  0E94                     	;# 
  2732  0E95                     	;# 
  2733  0E96                     	;# 
  2734  0E97                     	;# 
  2735  0E9C                     	;# 
  2736  0E9D                     	;# 
  2737  0E9E                     	;# 
  2738  0EA1                     	;# 
  2739  0EA2                     	;# 
  2740  0EA3                     	;# 
  2741  0EA4                     	;# 
  2742  0EA5                     	;# 
  2743  0EA9                     	;# 
  2744  0EAA                     	;# 
  2745  0EAB                     	;# 
  2746  0EAC                     	;# 
  2747  0EB1                     	;# 
  2748  0EB2                     	;# 
  2749  0EB3                     	;# 
  2750  0EB8                     	;# 
  2751  0EB9                     	;# 
  2752  0EBA                     	;# 
  2753  0EBB                     	;# 
  2754  0EBC                     	;# 
  2755  0EBD                     	;# 
  2756  0EBE                     	;# 
  2757  0EC3                     	;# 
  2758  0EC5                     	;# 
  2759  0EC6                     	;# 
  2760  0EC7                     	;# 
  2761  0EC8                     	;# 
  2762  0EC9                     	;# 
  2763  0ECA                     	;# 
  2764  0ECB                     	;# 
  2765  0ECC                     	;# 
  2766  0F10                     	;# 
  2767  0F11                     	;# 
  2768  0F12                     	;# 
  2769  0F13                     	;# 
  2770  0F14                     	;# 
  2771  0F15                     	;# 
  2772  0F16                     	;# 
  2773  0F17                     	;# 
  2774  0F18                     	;# 
  2775  0F19                     	;# 
  2776  0F1A                     	;# 
  2777  0F1B                     	;# 
  2778  0F1C                     	;# 
  2779  0F1D                     	;# 
  2780  0F1E                     	;# 
  2781  0F1F                     	;# 
  2782  0F20                     	;# 
  2783  0F21                     	;# 
  2784  0F22                     	;# 
  2785  0F23                     	;# 
  2786  0F24                     	;# 
  2787  0F25                     	;# 
  2788  0F26                     	;# 
  2789  0F27                     	;# 
  2790  0F28                     	;# 
  2791  0F29                     	;# 
  2792  0F2A                     	;# 
  2793  0F2B                     	;# 
  2794  0F2C                     	;# 
  2795  0F2D                     	;# 
  2796  0F2E                     	;# 
  2797  0F2F                     	;# 
  2798  0F30                     	;# 
  2799  0F31                     	;# 
  2800  0F32                     	;# 
  2801  0F38                     	;# 
  2802  0F39                     	;# 
  2803  0F3A                     	;# 
  2804  0F3B                     	;# 
  2805  0F3C                     	;# 
  2806  0F3D                     	;# 
  2807  0F3E                     	;# 
  2808  0F3F                     	;# 
  2809  0F40                     	;# 
  2810  0F41                     	;# 
  2811  0F43                     	;# 
  2812  0F44                     	;# 
  2813  0F45                     	;# 
  2814  0F46                     	;# 
  2815  0F47                     	;# 
  2816  0F48                     	;# 
  2817  0F49                     	;# 
  2818  0F4A                     	;# 
  2819  0F4B                     	;# 
  2820  0F4C                     	;# 
  2821  0F4E                     	;# 
  2822  0F4F                     	;# 
  2823  0F50                     	;# 
  2824  0F51                     	;# 
  2825  0F52                     	;# 
  2826  0F53                     	;# 
  2827  0F54                     	;# 
  2828  0F55                     	;# 
  2829  0F56                     	;# 
  2830  0F57                     	;# 
  2831  0F59                     	;# 
  2832  0F5A                     	;# 
  2833  0F5B                     	;# 
  2834  0F5C                     	;# 
  2835  0F5D                     	;# 
  2836  0F61                     	;# 
  2837  0F62                     	;# 
  2838  0F64                     	;# 
  2839  0F65                     	;# 
  2840  0F66                     	;# 
  2841  0F67                     	;# 
  2842  0F68                     	;# 
  2843  0F69                     	;# 
  2844  0F6A                     	;# 
  2845  0F6B                     	;# 
  2846  0F6C                     	;# 
  2847  0F6D                     	;# 
  2848  0FE4                     	;# 
  2849  0FE5                     	;# 
  2850  0FE6                     	;# 
  2851  0FE7                     	;# 
  2852  0FE8                     	;# 
  2853  0FE9                     	;# 
  2854  0FEA                     	;# 
  2855  0FEB                     	;# 
  2856  0FED                     	;# 
  2857  0FEE                     	;# 
  2858  0FEF                     	;# 
  2859  0000                     	;# 
  2860  0001                     	;# 
  2861  0002                     	;# 
  2862  0003                     	;# 
  2863  0004                     	;# 
  2864  0005                     	;# 
  2865  0006                     	;# 
  2866  0007                     	;# 
  2867  0008                     	;# 
  2868  0009                     	;# 
  2869  000A                     	;# 
  2870  000B                     	;# 
  2871  000C                     	;# 
  2872  000D                     	;# 
  2873  000E                     	;# 
  2874  000F                     	;# 
  2875  0010                     	;# 
  2876  0011                     	;# 
  2877  0012                     	;# 
  2878  0013                     	;# 
  2879  0014                     	;# 
  2880  0015                     	;# 
  2881  0016                     	;# 
  2882  0017                     	;# 
  2883  0018                     	;# 
  2884  0019                     	;# 
  2885  001A                     	;# 
  2886  001C                     	;# 
  2887  001C                     	;# 
  2888  001D                     	;# 
  2889  001D                     	;# 
  2890  001E                     	;# 
  2891  001F                     	;# 
  2892  008C                     	;# 
  2893  008C                     	;# 
  2894  008D                     	;# 
  2895  008E                     	;# 
  2896  008E                     	;# 
  2897  008F                     	;# 
  2898  0090                     	;# 
  2899  0090                     	;# 
  2900  0091                     	;# 
  2901  0093                     	;# 
  2902  0094                     	;# 
  2903  0095                     	;# 
  2904  0096                     	;# 
  2905  0097                     	;# 
  2906  0098                     	;# 
  2907  0099                     	;# 
  2908  009A                     	;# 
  2909  009B                     	;# 
  2910  009C                     	;# 
  2911  009D                     	;# 
  2912  009E                     	;# 
  2913  010C                     	;# 
  2914  010D                     	;# 
  2915  010E                     	;# 
  2916  010E                     	;# 
  2917  010F                     	;# 
  2918  0110                     	;# 
  2919  0110                     	;# 
  2920  0111                     	;# 
  2921  0112                     	;# 
  2922  0112                     	;# 
  2923  0113                     	;# 
  2924  0114                     	;# 
  2925  0114                     	;# 
  2926  0115                     	;# 
  2927  0116                     	;# 
  2928  0116                     	;# 
  2929  0117                     	;# 
  2930  0119                     	;# 
  2931  0119                     	;# 
  2932  0119                     	;# 
  2933  011A                     	;# 
  2934  011A                     	;# 
  2935  011A                     	;# 
  2936  011B                     	;# 
  2937  011B                     	;# 
  2938  011B                     	;# 
  2939  011B                     	;# 
  2940  011B                     	;# 
  2941  011C                     	;# 
  2942  011C                     	;# 
  2943  011C                     	;# 
  2944  011D                     	;# 
  2945  011D                     	;# 
  2946  011D                     	;# 
  2947  011E                     	;# 
  2948  011E                     	;# 
  2949  011E                     	;# 
  2950  011F                     	;# 
  2951  011F                     	;# 
  2952  011F                     	;# 
  2953  011F                     	;# 
  2954  011F                     	;# 
  2955  018C                     	;# 
  2956  018D                     	;# 
  2957  018E                     	;# 
  2958  018F                     	;# 
  2959  0190                     	;# 
  2960  0191                     	;# 
  2961  0192                     	;# 
  2962  0196                     	;# 
  2963  0197                     	;# 
  2964  0198                     	;# 
  2965  0199                     	;# 
  2966  019A                     	;# 
  2967  019B                     	;# 
  2968  019C                     	;# 
  2969  020C                     	;# 
  2970  020C                     	;# 
  2971  020D                     	;# 
  2972  020E                     	;# 
  2973  020F                     	;# 
  2974  020F                     	;# 
  2975  0210                     	;# 
  2976  0210                     	;# 
  2977  0211                     	;# 
  2978  0211                     	;# 
  2979  0212                     	;# 
  2980  0212                     	;# 
  2981  0213                     	;# 
  2982  0214                     	;# 
  2983  0215                     	;# 
  2984  0215                     	;# 
  2985  0216                     	;# 
  2986  0216                     	;# 
  2987  0217                     	;# 
  2988  0217                     	;# 
  2989  0218                     	;# 
  2990  0218                     	;# 
  2991  0219                     	;# 
  2992  021A                     	;# 
  2993  021B                     	;# 
  2994  021B                     	;# 
  2995  021C                     	;# 
  2996  021C                     	;# 
  2997  021D                     	;# 
  2998  021D                     	;# 
  2999  021E                     	;# 
  3000  021F                     	;# 
  3001  028C                     	;# 
  3002  028C                     	;# 
  3003  028D                     	;# 
  3004  028D                     	;# 
  3005  028E                     	;# 
  3006  028F                     	;# 
  3007  0290                     	;# 
  3008  0290                     	;# 
  3009  0291                     	;# 
  3010  0292                     	;# 
  3011  0292                     	;# 
  3012  0293                     	;# 
  3013  0293                     	;# 
  3014  0294                     	;# 
  3015  0295                     	;# 
  3016  0296                     	;# 
  3017  0296                     	;# 
  3018  0297                     	;# 
  3019  0298                     	;# 
  3020  0298                     	;# 
  3021  0299                     	;# 
  3022  0299                     	;# 
  3023  029A                     	;# 
  3024  029B                     	;# 
  3025  029C                     	;# 
  3026  029C                     	;# 
  3027  029D                     	;# 
  3028  030C                     	;# 
  3029  030C                     	;# 
  3030  030D                     	;# 
  3031  030E                     	;# 
  3032  030F                     	;# 
  3033  0310                     	;# 
  3034  0310                     	;# 
  3035  0311                     	;# 
  3036  0312                     	;# 
  3037  0313                     	;# 
  3038  0314                     	;# 
  3039  0314                     	;# 
  3040  0315                     	;# 
  3041  0316                     	;# 
  3042  0317                     	;# 
  3043  0318                     	;# 
  3044  0318                     	;# 
  3045  0319                     	;# 
  3046  031A                     	;# 
  3047  031B                     	;# 
  3048  031C                     	;# 
  3049  031C                     	;# 
  3050  031D                     	;# 
  3051  031E                     	;# 
  3052  031F                     	;# 
  3053  038C                     	;# 
  3054  038C                     	;# 
  3055  038D                     	;# 
  3056  038E                     	;# 
  3057  0390                     	;# 
  3058  0390                     	;# 
  3059  0391                     	;# 
  3060  0392                     	;# 
  3061  040C                     	;# 
  3062  040D                     	;# 
  3063  040E                     	;# 
  3064  040F                     	;# 
  3065  0410                     	;# 
  3066  0411                     	;# 
  3067  0416                     	;# 
  3068  0416                     	;# 
  3069  0417                     	;# 
  3070  0418                     	;# 
  3071  0418                     	;# 
  3072  0419                     	;# 
  3073  041A                     	;# 
  3074  041A                     	;# 
  3075  041B                     	;# 
  3076  041C                     	;# 
  3077  041C                     	;# 
  3078  041D                     	;# 
  3079  041E                     	;# 
  3080  041F                     	;# 
  3081  048C                     	;# 
  3082  048C                     	;# 
  3083  048D                     	;# 
  3084  048E                     	;# 
  3085  048F                     	;# 
  3086  048F                     	;# 
  3087  0490                     	;# 
  3088  0491                     	;# 
  3089  0492                     	;# 
  3090  0492                     	;# 
  3091  0493                     	;# 
  3092  0494                     	;# 
  3093  0495                     	;# 
  3094  0495                     	;# 
  3095  0496                     	;# 
  3096  0497                     	;# 
  3097  0498                     	;# 
  3098  0499                     	;# 
  3099  049A                     	;# 
  3100  049B                     	;# 
  3101  049C                     	;# 
  3102  049D                     	;# 
  3103  050C                     	;# 
  3104  050C                     	;# 
  3105  050D                     	;# 
  3106  050E                     	;# 
  3107  050F                     	;# 
  3108  050F                     	;# 
  3109  0510                     	;# 
  3110  0511                     	;# 
  3111  0512                     	;# 
  3112  0512                     	;# 
  3113  0513                     	;# 
  3114  0514                     	;# 
  3115  0515                     	;# 
  3116  0515                     	;# 
  3117  0516                     	;# 
  3118  0517                     	;# 
  3119  0518                     	;# 
  3120  0519                     	;# 
  3121  051A                     	;# 
  3122  051B                     	;# 
  3123  051C                     	;# 
  3124  051D                     	;# 
  3125  058C                     	;# 
  3126  058C                     	;# 
  3127  058D                     	;# 
  3128  058E                     	;# 
  3129  058F                     	;# 
  3130  058F                     	;# 
  3131  0590                     	;# 
  3132  0591                     	;# 
  3133  0592                     	;# 
  3134  0593                     	;# 
  3135  060C                     	;# 
  3136  060D                     	;# 
  3137  060E                     	;# 
  3138  060F                     	;# 
  3139  0610                     	;# 
  3140  0611                     	;# 
  3141  0612                     	;# 
  3142  0613                     	;# 
  3143  0614                     	;# 
  3144  0616                     	;# 
  3145  0617                     	;# 
  3146  0618                     	;# 
  3147  0619                     	;# 
  3148  061A                     	;# 
  3149  061B                     	;# 
  3150  061C                     	;# 
  3151  061D                     	;# 
  3152  061E                     	;# 
  3153  068C                     	;# 
  3154  068D                     	;# 
  3155  068E                     	;# 
  3156  068F                     	;# 
  3157  0690                     	;# 
  3158  0691                     	;# 
  3159  0692                     	;# 
  3160  0693                     	;# 
  3161  0694                     	;# 
  3162  070C                     	;# 
  3163  070D                     	;# 
  3164  070E                     	;# 
  3165  070F                     	;# 
  3166  0710                     	;# 
  3167  0711                     	;# 
  3168  0712                     	;# 
  3169  0713                     	;# 
  3170  0714                     	;# 
  3171  0716                     	;# 
  3172  0717                     	;# 
  3173  0718                     	;# 
  3174  0719                     	;# 
  3175  071A                     	;# 
  3176  071B                     	;# 
  3177  071C                     	;# 
  3178  071D                     	;# 
  3179  071E                     	;# 
  3180  0796                     	;# 
  3181  0797                     	;# 
  3182  0798                     	;# 
  3183  0799                     	;# 
  3184  079A                     	;# 
  3185  079B                     	;# 
  3186  080C                     	;# 
  3187  080D                     	;# 
  3188  080E                     	;# 
  3189  080F                     	;# 
  3190  0810                     	;# 
  3191  0811                     	;# 
  3192  0812                     	;# 
  3193  0813                     	;# 
  3194  0814                     	;# 
  3195  081A                     	;# 
  3196  081B                     	;# 
  3197  081C                     	;# 
  3198  081D                     	;# 
  3199  081E                     	;# 
  3200  081F                     	;# 
  3201  088C                     	;# 
  3202  088D                     	;# 
  3203  088E                     	;# 
  3204  088F                     	;# 
  3205  0890                     	;# 
  3206  0891                     	;# 
  3207  0892                     	;# 
  3208  0893                     	;# 
  3209  0895                     	;# 
  3210  0896                     	;# 
  3211  0897                     	;# 
  3212  0898                     	;# 
  3213  0899                     	;# 
  3214  089A                     	;# 
  3215  089B                     	;# 
  3216  090C                     	;# 
  3217  090E                     	;# 
  3218  090F                     	;# 
  3219  091F                     	;# 
  3220  091F                     	;# 
  3221  098F                     	;# 
  3222  098F                     	;# 
  3223  0990                     	;# 
  3224  0991                     	;# 
  3225  0992                     	;# 
  3226  0993                     	;# 
  3227  0994                     	;# 
  3228  0995                     	;# 
  3229  0996                     	;# 
  3230  0997                     	;# 
  3231  0E0F                     	;# 
  3232  0E10                     	;# 
  3233  0E11                     	;# 
  3234  0E12                     	;# 
  3235  0E13                     	;# 
  3236  0E14                     	;# 
  3237  0E15                     	;# 
  3238  0E16                     	;# 
  3239  0E17                     	;# 
  3240  0E18                     	;# 
  3241  0E19                     	;# 
  3242  0E1A                     	;# 
  3243  0E1B                     	;# 
  3244  0E1C                     	;# 
  3245  0E1D                     	;# 
  3246  0E1E                     	;# 
  3247  0E1F                     	;# 
  3248  0E20                     	;# 
  3249  0E21                     	;# 
  3250  0E22                     	;# 
  3251  0E23                     	;# 
  3252  0E24                     	;# 
  3253  0E25                     	;# 
  3254  0E26                     	;# 
  3255  0E27                     	;# 
  3256  0E28                     	;# 
  3257  0E29                     	;# 
  3258  0E2A                     	;# 
  3259  0E2B                     	;# 
  3260  0E2C                     	;# 
  3261  0E2D                     	;# 
  3262  0E2E                     	;# 
  3263  0E2F                     	;# 
  3264  0E30                     	;# 
  3265  0E31                     	;# 
  3266  0E32                     	;# 
  3267  0E33                     	;# 
  3268  0E34                     	;# 
  3269  0E35                     	;# 
  3270  0E36                     	;# 
  3271  0E37                     	;# 
  3272  0E8F                     	;# 
  3273  0E90                     	;# 
  3274  0E91                     	;# 
  3275  0E92                     	;# 
  3276  0E93                     	;# 
  3277  0E94                     	;# 
  3278  0E95                     	;# 
  3279  0E96                     	;# 
  3280  0E97                     	;# 
  3281  0E9C                     	;# 
  3282  0E9D                     	;# 
  3283  0E9E                     	;# 
  3284  0EA1                     	;# 
  3285  0EA2                     	;# 
  3286  0EA3                     	;# 
  3287  0EA4                     	;# 
  3288  0EA5                     	;# 
  3289  0EA9                     	;# 
  3290  0EAA                     	;# 
  3291  0EAB                     	;# 
  3292  0EAC                     	;# 
  3293  0EB1                     	;# 
  3294  0EB2                     	;# 
  3295  0EB3                     	;# 
  3296  0EB8                     	;# 
  3297  0EB9                     	;# 
  3298  0EBA                     	;# 
  3299  0EBB                     	;# 
  3300  0EBC                     	;# 
  3301  0EBD                     	;# 
  3302  0EBE                     	;# 
  3303  0EC3                     	;# 
  3304  0EC5                     	;# 
  3305  0EC6                     	;# 
  3306  0EC7                     	;# 
  3307  0EC8                     	;# 
  3308  0EC9                     	;# 
  3309  0ECA                     	;# 
  3310  0ECB                     	;# 
  3311  0ECC                     	;# 
  3312  0F10                     	;# 
  3313  0F11                     	;# 
  3314  0F12                     	;# 
  3315  0F13                     	;# 
  3316  0F14                     	;# 
  3317  0F15                     	;# 
  3318  0F16                     	;# 
  3319  0F17                     	;# 
  3320  0F18                     	;# 
  3321  0F19                     	;# 
  3322  0F1A                     	;# 
  3323  0F1B                     	;# 
  3324  0F1C                     	;# 
  3325  0F1D                     	;# 
  3326  0F1E                     	;# 
  3327  0F1F                     	;# 
  3328  0F20                     	;# 
  3329  0F21                     	;# 
  3330  0F22                     	;# 
  3331  0F23                     	;# 
  3332  0F24                     	;# 
  3333  0F25                     	;# 
  3334  0F26                     	;# 
  3335  0F27                     	;# 
  3336  0F28                     	;# 
  3337  0F29                     	;# 
  3338  0F2A                     	;# 
  3339  0F2B                     	;# 
  3340  0F2C                     	;# 
  3341  0F2D                     	;# 
  3342  0F2E                     	;# 
  3343  0F2F                     	;# 
  3344  0F30                     	;# 
  3345  0F31                     	;# 
  3346  0F32                     	;# 
  3347  0F38                     	;# 
  3348  0F39                     	;# 
  3349  0F3A                     	;# 
  3350  0F3B                     	;# 
  3351  0F3C                     	;# 
  3352  0F3D                     	;# 
  3353  0F3E                     	;# 
  3354  0F3F                     	;# 
  3355  0F40                     	;# 
  3356  0F41                     	;# 
  3357  0F43                     	;# 
  3358  0F44                     	;# 
  3359  0F45                     	;# 
  3360  0F46                     	;# 
  3361  0F47                     	;# 
  3362  0F48                     	;# 
  3363  0F49                     	;# 
  3364  0F4A                     	;# 
  3365  0F4B                     	;# 
  3366  0F4C                     	;# 
  3367  0F4E                     	;# 
  3368  0F4F                     	;# 
  3369  0F50                     	;# 
  3370  0F51                     	;# 
  3371  0F52                     	;# 
  3372  0F53                     	;# 
  3373  0F54                     	;# 
  3374  0F55                     	;# 
  3375  0F56                     	;# 
  3376  0F57                     	;# 
  3377  0F59                     	;# 
  3378  0F5A                     	;# 
  3379  0F5B                     	;# 
  3380  0F5C                     	;# 
  3381  0F5D                     	;# 
  3382  0F61                     	;# 
  3383  0F62                     	;# 
  3384  0F64                     	;# 
  3385  0F65                     	;# 
  3386  0F66                     	;# 
  3387  0F67                     	;# 
  3388  0F68                     	;# 
  3389  0F69                     	;# 
  3390  0F6A                     	;# 
  3391  0F6B                     	;# 
  3392  0F6C                     	;# 
  3393  0F6D                     	;# 
  3394  0FE4                     	;# 
  3395  0FE5                     	;# 
  3396  0FE6                     	;# 
  3397  0FE7                     	;# 
  3398  0FE8                     	;# 
  3399  0FE9                     	;# 
  3400  0FEA                     	;# 
  3401  0FEB                     	;# 
  3402  0FED                     	;# 
  3403  0FEE                     	;# 
  3404  0FEF                     	;# 
  3405  0000                     	;# 
  3406  0001                     	;# 
  3407  0002                     	;# 
  3408  0003                     	;# 
  3409  0004                     	;# 
  3410  0005                     	;# 
  3411  0006                     	;# 
  3412  0007                     	;# 
  3413  0008                     	;# 
  3414  0009                     	;# 
  3415  000A                     	;# 
  3416  000B                     	;# 
  3417  000C                     	;# 
  3418  000D                     	;# 
  3419  000E                     	;# 
  3420  000F                     	;# 
  3421  0010                     	;# 
  3422  0011                     	;# 
  3423  0012                     	;# 
  3424  0013                     	;# 
  3425  0014                     	;# 
  3426  0015                     	;# 
  3427  0016                     	;# 
  3428  0017                     	;# 
  3429  0018                     	;# 
  3430  0019                     	;# 
  3431  001A                     	;# 
  3432  001C                     	;# 
  3433  001C                     	;# 
  3434  001D                     	;# 
  3435  001D                     	;# 
  3436  001E                     	;# 
  3437  001F                     	;# 
  3438  008C                     	;# 
  3439  008C                     	;# 
  3440  008D                     	;# 
  3441  008E                     	;# 
  3442  008E                     	;# 
  3443  008F                     	;# 
  3444  0090                     	;# 
  3445  0090                     	;# 
  3446  0091                     	;# 
  3447  0093                     	;# 
  3448  0094                     	;# 
  3449  0095                     	;# 
  3450  0096                     	;# 
  3451  0097                     	;# 
  3452  0098                     	;# 
  3453  0099                     	;# 
  3454  009A                     	;# 
  3455  009B                     	;# 
  3456  009C                     	;# 
  3457  009D                     	;# 
  3458  009E                     	;# 
  3459  010C                     	;# 
  3460  010D                     	;# 
  3461  010E                     	;# 
  3462  010E                     	;# 
  3463  010F                     	;# 
  3464  0110                     	;# 
  3465  0110                     	;# 
  3466  0111                     	;# 
  3467  0112                     	;# 
  3468  0112                     	;# 
  3469  0113                     	;# 
  3470  0114                     	;# 
  3471  0114                     	;# 
  3472  0115                     	;# 
  3473  0116                     	;# 
  3474  0116                     	;# 
  3475  0117                     	;# 
  3476  0119                     	;# 
  3477  0119                     	;# 
  3478  0119                     	;# 
  3479  011A                     	;# 
  3480  011A                     	;# 
  3481  011A                     	;# 
  3482  011B                     	;# 
  3483  011B                     	;# 
  3484  011B                     	;# 
  3485  011B                     	;# 
  3486  011B                     	;# 
  3487  011C                     	;# 
  3488  011C                     	;# 
  3489  011C                     	;# 
  3490  011D                     	;# 
  3491  011D                     	;# 
  3492  011D                     	;# 
  3493  011E                     	;# 
  3494  011E                     	;# 
  3495  011E                     	;# 
  3496  011F                     	;# 
  3497  011F                     	;# 
  3498  011F                     	;# 
  3499  011F                     	;# 
  3500  011F                     	;# 
  3501  018C                     	;# 
  3502  018D                     	;# 
  3503  018E                     	;# 
  3504  018F                     	;# 
  3505  0190                     	;# 
  3506  0191                     	;# 
  3507  0192                     	;# 
  3508  0196                     	;# 
  3509  0197                     	;# 
  3510  0198                     	;# 
  3511  0199                     	;# 
  3512  019A                     	;# 
  3513  019B                     	;# 
  3514  019C                     	;# 
  3515  020C                     	;# 
  3516  020C                     	;# 
  3517  020D                     	;# 
  3518  020E                     	;# 
  3519  020F                     	;# 
  3520  020F                     	;# 
  3521  0210                     	;# 
  3522  0210                     	;# 
  3523  0211                     	;# 
  3524  0211                     	;# 
  3525  0212                     	;# 
  3526  0212                     	;# 
  3527  0213                     	;# 
  3528  0214                     	;# 
  3529  0215                     	;# 
  3530  0215                     	;# 
  3531  0216                     	;# 
  3532  0216                     	;# 
  3533  0217                     	;# 
  3534  0217                     	;# 
  3535  0218                     	;# 
  3536  0218                     	;# 
  3537  0219                     	;# 
  3538  021A                     	;# 
  3539  021B                     	;# 
  3540  021B                     	;# 
  3541  021C                     	;# 
  3542  021C                     	;# 
  3543  021D                     	;# 
  3544  021D                     	;# 
  3545  021E                     	;# 
  3546  021F                     	;# 
  3547  028C                     	;# 
  3548  028C                     	;# 
  3549  028D                     	;# 
  3550  028D                     	;# 
  3551  028E                     	;# 
  3552  028F                     	;# 
  3553  0290                     	;# 
  3554  0290                     	;# 
  3555  0291                     	;# 
  3556  0292                     	;# 
  3557  0292                     	;# 
  3558  0293                     	;# 
  3559  0293                     	;# 
  3560  0294                     	;# 
  3561  0295                     	;# 
  3562  0296                     	;# 
  3563  0296                     	;# 
  3564  0297                     	;# 
  3565  0298                     	;# 
  3566  0298                     	;# 
  3567  0299                     	;# 
  3568  0299                     	;# 
  3569  029A                     	;# 
  3570  029B                     	;# 
  3571  029C                     	;# 
  3572  029C                     	;# 
  3573  029D                     	;# 
  3574  030C                     	;# 
  3575  030C                     	;# 
  3576  030D                     	;# 
  3577  030E                     	;# 
  3578  030F                     	;# 
  3579  0310                     	;# 
  3580  0310                     	;# 
  3581  0311                     	;# 
  3582  0312                     	;# 
  3583  0313                     	;# 
  3584  0314                     	;# 
  3585  0314                     	;# 
  3586  0315                     	;# 
  3587  0316                     	;# 
  3588  0317                     	;# 
  3589  0318                     	;# 
  3590  0318                     	;# 
  3591  0319                     	;# 
  3592  031A                     	;# 
  3593  031B                     	;# 
  3594  031C                     	;# 
  3595  031C                     	;# 
  3596  031D                     	;# 
  3597  031E                     	;# 
  3598  031F                     	;# 
  3599  038C                     	;# 
  3600  038C                     	;# 
  3601  038D                     	;# 
  3602  038E                     	;# 
  3603  0390                     	;# 
  3604  0390                     	;# 
  3605  0391                     	;# 
  3606  0392                     	;# 
  3607  040C                     	;# 
  3608  040D                     	;# 
  3609  040E                     	;# 
  3610  040F                     	;# 
  3611  0410                     	;# 
  3612  0411                     	;# 
  3613  0416                     	;# 
  3614  0416                     	;# 
  3615  0417                     	;# 
  3616  0418                     	;# 
  3617  0418                     	;# 
  3618  0419                     	;# 
  3619  041A                     	;# 
  3620  041A                     	;# 
  3621  041B                     	;# 
  3622  041C                     	;# 
  3623  041C                     	;# 
  3624  041D                     	;# 
  3625  041E                     	;# 
  3626  041F                     	;# 
  3627  048C                     	;# 
  3628  048C                     	;# 
  3629  048D                     	;# 
  3630  048E                     	;# 
  3631  048F                     	;# 
  3632  048F                     	;# 
  3633  0490                     	;# 
  3634  0491                     	;# 
  3635  0492                     	;# 
  3636  0492                     	;# 
  3637  0493                     	;# 
  3638  0494                     	;# 
  3639  0495                     	;# 
  3640  0495                     	;# 
  3641  0496                     	;# 
  3642  0497                     	;# 
  3643  0498                     	;# 
  3644  0499                     	;# 
  3645  049A                     	;# 
  3646  049B                     	;# 
  3647  049C                     	;# 
  3648  049D                     	;# 
  3649  050C                     	;# 
  3650  050C                     	;# 
  3651  050D                     	;# 
  3652  050E                     	;# 
  3653  050F                     	;# 
  3654  050F                     	;# 
  3655  0510                     	;# 
  3656  0511                     	;# 
  3657  0512                     	;# 
  3658  0512                     	;# 
  3659  0513                     	;# 
  3660  0514                     	;# 
  3661  0515                     	;# 
  3662  0515                     	;# 
  3663  0516                     	;# 
  3664  0517                     	;# 
  3665  0518                     	;# 
  3666  0519                     	;# 
  3667  051A                     	;# 
  3668  051B                     	;# 
  3669  051C                     	;# 
  3670  051D                     	;# 
  3671  058C                     	;# 
  3672  058C                     	;# 
  3673  058D                     	;# 
  3674  058E                     	;# 
  3675  058F                     	;# 
  3676  058F                     	;# 
  3677  0590                     	;# 
  3678  0591                     	;# 
  3679  0592                     	;# 
  3680  0593                     	;# 
  3681  060C                     	;# 
  3682  060D                     	;# 
  3683  060E                     	;# 
  3684  060F                     	;# 
  3685  0610                     	;# 
  3686  0611                     	;# 
  3687  0612                     	;# 
  3688  0613                     	;# 
  3689  0614                     	;# 
  3690  0616                     	;# 
  3691  0617                     	;# 
  3692  0618                     	;# 
  3693  0619                     	;# 
  3694  061A                     	;# 
  3695  061B                     	;# 
  3696  061C                     	;# 
  3697  061D                     	;# 
  3698  061E                     	;# 
  3699  068C                     	;# 
  3700  068D                     	;# 
  3701  068E                     	;# 
  3702  068F                     	;# 
  3703  0690                     	;# 
  3704  0691                     	;# 
  3705  0692                     	;# 
  3706  0693                     	;# 
  3707  0694                     	;# 
  3708  070C                     	;# 
  3709  070D                     	;# 
  3710  070E                     	;# 
  3711  070F                     	;# 
  3712  0710                     	;# 
  3713  0711                     	;# 
  3714  0712                     	;# 
  3715  0713                     	;# 
  3716  0714                     	;# 
  3717  0716                     	;# 
  3718  0717                     	;# 
  3719  0718                     	;# 
  3720  0719                     	;# 
  3721  071A                     	;# 
  3722  071B                     	;# 
  3723  071C                     	;# 
  3724  071D                     	;# 
  3725  071E                     	;# 
  3726  0796                     	;# 
  3727  0797                     	;# 
  3728  0798                     	;# 
  3729  0799                     	;# 
  3730  079A                     	;# 
  3731  079B                     	;# 
  3732  080C                     	;# 
  3733  080D                     	;# 
  3734  080E                     	;# 
  3735  080F                     	;# 
  3736  0810                     	;# 
  3737  0811                     	;# 
  3738  0812                     	;# 
  3739  0813                     	;# 
  3740  0814                     	;# 
  3741  081A                     	;# 
  3742  081B                     	;# 
  3743  081C                     	;# 
  3744  081D                     	;# 
  3745  081E                     	;# 
  3746  081F                     	;# 
  3747  088C                     	;# 
  3748  088D                     	;# 
  3749  088E                     	;# 
  3750  088F                     	;# 
  3751  0890                     	;# 
  3752  0891                     	;# 
  3753  0892                     	;# 
  3754  0893                     	;# 
  3755  0895                     	;# 
  3756  0896                     	;# 
  3757  0897                     	;# 
  3758  0898                     	;# 
  3759  0899                     	;# 
  3760  089A                     	;# 
  3761  089B                     	;# 
  3762  090C                     	;# 
  3763  090E                     	;# 
  3764  090F                     	;# 
  3765  091F                     	;# 
  3766  091F                     	;# 
  3767  098F                     	;# 
  3768  098F                     	;# 
  3769  0990                     	;# 
  3770  0991                     	;# 
  3771  0992                     	;# 
  3772  0993                     	;# 
  3773  0994                     	;# 
  3774  0995                     	;# 
  3775  0996                     	;# 
  3776  0997                     	;# 
  3777  0E0F                     	;# 
  3778  0E10                     	;# 
  3779  0E11                     	;# 
  3780  0E12                     	;# 
  3781  0E13                     	;# 
  3782  0E14                     	;# 
  3783  0E15                     	;# 
  3784  0E16                     	;# 
  3785  0E17                     	;# 
  3786  0E18                     	;# 
  3787  0E19                     	;# 
  3788  0E1A                     	;# 
  3789  0E1B                     	;# 
  3790  0E1C                     	;# 
  3791  0E1D                     	;# 
  3792  0E1E                     	;# 
  3793  0E1F                     	;# 
  3794  0E20                     	;# 
  3795  0E21                     	;# 
  3796  0E22                     	;# 
  3797  0E23                     	;# 
  3798  0E24                     	;# 
  3799  0E25                     	;# 
  3800  0E26                     	;# 
  3801  0E27                     	;# 
  3802  0E28                     	;# 
  3803  0E29                     	;# 
  3804  0E2A                     	;# 
  3805  0E2B                     	;# 
  3806  0E2C                     	;# 
  3807  0E2D                     	;# 
  3808  0E2E                     	;# 
  3809  0E2F                     	;# 
  3810  0E30                     	;# 
  3811  0E31                     	;# 
  3812  0E32                     	;# 
  3813  0E33                     	;# 
  3814  0E34                     	;# 
  3815  0E35                     	;# 
  3816  0E36                     	;# 
  3817  0E37                     	;# 
  3818  0E8F                     	;# 
  3819  0E90                     	;# 
  3820  0E91                     	;# 
  3821  0E92                     	;# 
  3822  0E93                     	;# 
  3823  0E94                     	;# 
  3824  0E95                     	;# 
  3825  0E96                     	;# 
  3826  0E97                     	;# 
  3827  0E9C                     	;# 
  3828  0E9D                     	;# 
  3829  0E9E                     	;# 
  3830  0EA1                     	;# 
  3831  0EA2                     	;# 
  3832  0EA3                     	;# 
  3833  0EA4                     	;# 
  3834  0EA5                     	;# 
  3835  0EA9                     	;# 
  3836  0EAA                     	;# 
  3837  0EAB                     	;# 
  3838  0EAC                     	;# 
  3839  0EB1                     	;# 
  3840  0EB2                     	;# 
  3841  0EB3                     	;# 
  3842  0EB8                     	;# 
  3843  0EB9                     	;# 
  3844  0EBA                     	;# 
  3845  0EBB                     	;# 
  3846  0EBC                     	;# 
  3847  0EBD                     	;# 
  3848  0EBE                     	;# 
  3849  0EC3                     	;# 
  3850  0EC5                     	;# 
  3851  0EC6                     	;# 
  3852  0EC7                     	;# 
  3853  0EC8                     	;# 
  3854  0EC9                     	;# 
  3855  0ECA                     	;# 
  3856  0ECB                     	;# 
  3857  0ECC                     	;# 
  3858  0F10                     	;# 
  3859  0F11                     	;# 
  3860  0F12                     	;# 
  3861  0F13                     	;# 
  3862  0F14                     	;# 
  3863  0F15                     	;# 
  3864  0F16                     	;# 
  3865  0F17                     	;# 
  3866  0F18                     	;# 
  3867  0F19                     	;# 
  3868  0F1A                     	;# 
  3869  0F1B                     	;# 
  3870  0F1C                     	;# 
  3871  0F1D                     	;# 
  3872  0F1E                     	;# 
  3873  0F1F                     	;# 
  3874  0F20                     	;# 
  3875  0F21                     	;# 
  3876  0F22                     	;# 
  3877  0F23                     	;# 
  3878  0F24                     	;# 
  3879  0F25                     	;# 
  3880  0F26                     	;# 
  3881  0F27                     	;# 
  3882  0F28                     	;# 
  3883  0F29                     	;# 
  3884  0F2A                     	;# 
  3885  0F2B                     	;# 
  3886  0F2C                     	;# 
  3887  0F2D                     	;# 
  3888  0F2E                     	;# 
  3889  0F2F                     	;# 
  3890  0F30                     	;# 
  3891  0F31                     	;# 
  3892  0F32                     	;# 
  3893  0F38                     	;# 
  3894  0F39                     	;# 
  3895  0F3A                     	;# 
  3896  0F3B                     	;# 
  3897  0F3C                     	;# 
  3898  0F3D                     	;# 
  3899  0F3E                     	;# 
  3900  0F3F                     	;# 
  3901  0F40                     	;# 
  3902  0F41                     	;# 
  3903  0F43                     	;# 
  3904  0F44                     	;# 
  3905  0F45                     	;# 
  3906  0F46                     	;# 
  3907  0F47                     	;# 
  3908  0F48                     	;# 
  3909  0F49                     	;# 
  3910  0F4A                     	;# 
  3911  0F4B                     	;# 
  3912  0F4C                     	;# 
  3913  0F4E                     	;# 
  3914  0F4F                     	;# 
  3915  0F50                     	;# 
  3916  0F51                     	;# 
  3917  0F52                     	;# 
  3918  0F53                     	;# 
  3919  0F54                     	;# 
  3920  0F55                     	;# 
  3921  0F56                     	;# 
  3922  0F57                     	;# 
  3923  0F59                     	;# 
  3924  0F5A                     	;# 
  3925  0F5B                     	;# 
  3926  0F5C                     	;# 
  3927  0F5D                     	;# 
  3928  0F61                     	;# 
  3929  0F62                     	;# 
  3930  0F64                     	;# 
  3931  0F65                     	;# 
  3932  0F66                     	;# 
  3933  0F67                     	;# 
  3934  0F68                     	;# 
  3935  0F69                     	;# 
  3936  0F6A                     	;# 
  3937  0F6B                     	;# 
  3938  0F6C                     	;# 
  3939  0F6D                     	;# 
  3940  0FE4                     	;# 
  3941  0FE5                     	;# 
  3942  0FE6                     	;# 
  3943  0FE7                     	;# 
  3944  0FE8                     	;# 
  3945  0FE9                     	;# 
  3946  0FEA                     	;# 
  3947  0FEB                     	;# 
  3948  0FED                     	;# 
  3949  0FEE                     	;# 
  3950  0FEF                     	;# 
  3951  0000                     	;# 
  3952  0001                     	;# 
  3953  0002                     	;# 
  3954  0003                     	;# 
  3955  0004                     	;# 
  3956  0005                     	;# 
  3957  0006                     	;# 
  3958  0007                     	;# 
  3959  0008                     	;# 
  3960  0009                     	;# 
  3961  000A                     	;# 
  3962  000B                     	;# 
  3963  000C                     	;# 
  3964  000D                     	;# 
  3965  000E                     	;# 
  3966  000F                     	;# 
  3967  0010                     	;# 
  3968  0011                     	;# 
  3969  0012                     	;# 
  3970  0013                     	;# 
  3971  0014                     	;# 
  3972  0015                     	;# 
  3973  0016                     	;# 
  3974  0017                     	;# 
  3975  0018                     	;# 
  3976  0019                     	;# 
  3977  001A                     	;# 
  3978  001C                     	;# 
  3979  001C                     	;# 
  3980  001D                     	;# 
  3981  001D                     	;# 
  3982  001E                     	;# 
  3983  001F                     	;# 
  3984  008C                     	;# 
  3985  008C                     	;# 
  3986  008D                     	;# 
  3987  008E                     	;# 
  3988  008E                     	;# 
  3989  008F                     	;# 
  3990  0090                     	;# 
  3991  0090                     	;# 
  3992  0091                     	;# 
  3993  0093                     	;# 
  3994  0094                     	;# 
  3995  0095                     	;# 
  3996  0096                     	;# 
  3997  0097                     	;# 
  3998  0098                     	;# 
  3999  0099                     	;# 
  4000  009A                     	;# 
  4001  009B                     	;# 
  4002  009C                     	;# 
  4003  009D                     	;# 
  4004  009E                     	;# 
  4005  010C                     	;# 
  4006  010D                     	;# 
  4007  010E                     	;# 
  4008  010E                     	;# 
  4009  010F                     	;# 
  4010  0110                     	;# 
  4011  0110                     	;# 
  4012  0111                     	;# 
  4013  0112                     	;# 
  4014  0112                     	;# 
  4015  0113                     	;# 
  4016  0114                     	;# 
  4017  0114                     	;# 
  4018  0115                     	;# 
  4019  0116                     	;# 
  4020  0116                     	;# 
  4021  0117                     	;# 
  4022  0119                     	;# 
  4023  0119                     	;# 
  4024  0119                     	;# 
  4025  011A                     	;# 
  4026  011A                     	;# 
  4027  011A                     	;# 
  4028  011B                     	;# 
  4029  011B                     	;# 
  4030  011B                     	;# 
  4031  011B                     	;# 
  4032  011B                     	;# 
  4033  011C                     	;# 
  4034  011C                     	;# 
  4035  011C                     	;# 
  4036  011D                     	;# 
  4037  011D                     	;# 
  4038  011D                     	;# 
  4039  011E                     	;# 
  4040  011E                     	;# 
  4041  011E                     	;# 
  4042  011F                     	;# 
  4043  011F                     	;# 
  4044  011F                     	;# 
  4045  011F                     	;# 
  4046  011F                     	;# 
  4047  018C                     	;# 
  4048  018D                     	;# 
  4049  018E                     	;# 
  4050  018F                     	;# 
  4051  0190                     	;# 
  4052  0191                     	;# 
  4053  0192                     	;# 
  4054  0196                     	;# 
  4055  0197                     	;# 
  4056  0198                     	;# 
  4057  0199                     	;# 
  4058  019A                     	;# 
  4059  019B                     	;# 
  4060  019C                     	;# 
  4061  020C                     	;# 
  4062  020C                     	;# 
  4063  020D                     	;# 
  4064  020E                     	;# 
  4065  020F                     	;# 
  4066  020F                     	;# 
  4067  0210                     	;# 
  4068  0210                     	;# 
  4069  0211                     	;# 
  4070  0211                     	;# 
  4071  0212                     	;# 
  4072  0212                     	;# 
  4073  0213                     	;# 
  4074  0214                     	;# 
  4075  0215                     	;# 
  4076  0215                     	;# 
  4077  0216                     	;# 
  4078  0216                     	;# 
  4079  0217                     	;# 
  4080  0217                     	;# 
  4081  0218                     	;# 
  4082  0218                     	;# 
  4083  0219                     	;# 
  4084  021A                     	;# 
  4085  021B                     	;# 
  4086  021B                     	;# 
  4087  021C                     	;# 
  4088  021C                     	;# 
  4089  021D                     	;# 
  4090  021D                     	;# 
  4091  021E                     	;# 
  4092  021F                     	;# 
  4093  028C                     	;# 
  4094  028C                     	;# 
  4095  028D                     	;# 
  4096  028D                     	;# 
  4097  028E                     	;# 
  4098  028F                     	;# 
  4099  0290                     	;# 
  4100  0290                     	;# 
  4101  0291                     	;# 
  4102  0292                     	;# 
  4103  0292                     	;# 
  4104  0293                     	;# 
  4105  0293                     	;# 
  4106  0294                     	;# 
  4107  0295                     	;# 
  4108  0296                     	;# 
  4109  0296                     	;# 
  4110  0297                     	;# 
  4111  0298                     	;# 
  4112  0298                     	;# 
  4113  0299                     	;# 
  4114  0299                     	;# 
  4115  029A                     	;# 
  4116  029B                     	;# 
  4117  029C                     	;# 
  4118  029C                     	;# 
  4119  029D                     	;# 
  4120  030C                     	;# 
  4121  030C                     	;# 
  4122  030D                     	;# 
  4123  030E                     	;# 
  4124  030F                     	;# 
  4125  0310                     	;# 
  4126  0310                     	;# 
  4127  0311                     	;# 
  4128  0312                     	;# 
  4129  0313                     	;# 
  4130  0314                     	;# 
  4131  0314                     	;# 
  4132  0315                     	;# 
  4133  0316                     	;# 
  4134  0317                     	;# 
  4135  0318                     	;# 
  4136  0318                     	;# 
  4137  0319                     	;# 
  4138  031A                     	;# 
  4139  031B                     	;# 
  4140  031C                     	;# 
  4141  031C                     	;# 
  4142  031D                     	;# 
  4143  031E                     	;# 
  4144  031F                     	;# 
  4145  038C                     	;# 
  4146  038C                     	;# 
  4147  038D                     	;# 
  4148  038E                     	;# 
  4149  0390                     	;# 
  4150  0390                     	;# 
  4151  0391                     	;# 
  4152  0392                     	;# 
  4153  040C                     	;# 
  4154  040D                     	;# 
  4155  040E                     	;# 
  4156  040F                     	;# 
  4157  0410                     	;# 
  4158  0411                     	;# 
  4159  0416                     	;# 
  4160  0416                     	;# 
  4161  0417                     	;# 
  4162  0418                     	;# 
  4163  0418                     	;# 
  4164  0419                     	;# 
  4165  041A                     	;# 
  4166  041A                     	;# 
  4167  041B                     	;# 
  4168  041C                     	;# 
  4169  041C                     	;# 
  4170  041D                     	;# 
  4171  041E                     	;# 
  4172  041F                     	;# 
  4173  048C                     	;# 
  4174  048C                     	;# 
  4175  048D                     	;# 
  4176  048E                     	;# 
  4177  048F                     	;# 
  4178  048F                     	;# 
  4179  0490                     	;# 
  4180  0491                     	;# 
  4181  0492                     	;# 
  4182  0492                     	;# 
  4183  0493                     	;# 
  4184  0494                     	;# 
  4185  0495                     	;# 
  4186  0495                     	;# 
  4187  0496                     	;# 
  4188  0497                     	;# 
  4189  0498                     	;# 
  4190  0499                     	;# 
  4191  049A                     	;# 
  4192  049B                     	;# 
  4193  049C                     	;# 
  4194  049D                     	;# 
  4195  050C                     	;# 
  4196  050C                     	;# 
  4197  050D                     	;# 
  4198  050E                     	;# 
  4199  050F                     	;# 
  4200  050F                     	;# 
  4201  0510                     	;# 
  4202  0511                     	;# 
  4203  0512                     	;# 
  4204  0512                     	;# 
  4205  0513                     	;# 
  4206  0514                     	;# 
  4207  0515                     	;# 
  4208  0515                     	;# 
  4209  0516                     	;# 
  4210  0517                     	;# 
  4211  0518                     	;# 
  4212  0519                     	;# 
  4213  051A                     	;# 
  4214  051B                     	;# 
  4215  051C                     	;# 
  4216  051D                     	;# 
  4217  058C                     	;# 
  4218  058C                     	;# 
  4219  058D                     	;# 
  4220  058E                     	;# 
  4221  058F                     	;# 
  4222  058F                     	;# 
  4223  0590                     	;# 
  4224  0591                     	;# 
  4225  0592                     	;# 
  4226  0593                     	;# 
  4227  060C                     	;# 
  4228  060D                     	;# 
  4229  060E                     	;# 
  4230  060F                     	;# 
  4231  0610                     	;# 
  4232  0611                     	;# 
  4233  0612                     	;# 
  4234  0613                     	;# 
  4235  0614                     	;# 
  4236  0616                     	;# 
  4237  0617                     	;# 
  4238  0618                     	;# 
  4239  0619                     	;# 
  4240  061A                     	;# 
  4241  061B                     	;# 
  4242  061C                     	;# 
  4243  061D                     	;# 
  4244  061E                     	;# 
  4245  068C                     	;# 
  4246  068D                     	;# 
  4247  068E                     	;# 
  4248  068F                     	;# 
  4249  0690                     	;# 
  4250  0691                     	;# 
  4251  0692                     	;# 
  4252  0693                     	;# 
  4253  0694                     	;# 
  4254  070C                     	;# 
  4255  070D                     	;# 
  4256  070E                     	;# 
  4257  070F                     	;# 
  4258  0710                     	;# 
  4259  0711                     	;# 
  4260  0712                     	;# 
  4261  0713                     	;# 
  4262  0714                     	;# 
  4263  0716                     	;# 
  4264  0717                     	;# 
  4265  0718                     	;# 
  4266  0719                     	;# 
  4267  071A                     	;# 
  4268  071B                     	;# 
  4269  071C                     	;# 
  4270  071D                     	;# 
  4271  071E                     	;# 
  4272  0796                     	;# 
  4273  0797                     	;# 
  4274  0798                     	;# 
  4275  0799                     	;# 
  4276  079A                     	;# 
  4277  079B                     	;# 
  4278  080C                     	;# 
  4279  080D                     	;# 
  4280  080E                     	;# 
  4281  080F                     	;# 
  4282  0810                     	;# 
  4283  0811                     	;# 
  4284  0812                     	;# 
  4285  0813                     	;# 
  4286  0814                     	;# 
  4287  081A                     	;# 
  4288  081B                     	;# 
  4289  081C                     	;# 
  4290  081D                     	;# 
  4291  081E                     	;# 
  4292  081F                     	;# 
  4293  088C                     	;# 
  4294  088D                     	;# 
  4295  088E                     	;# 
  4296  088F                     	;# 
  4297  0890                     	;# 
  4298  0891                     	;# 
  4299  0892                     	;# 
  4300  0893                     	;# 
  4301  0895                     	;# 
  4302  0896                     	;# 
  4303  0897                     	;# 
  4304  0898                     	;# 
  4305  0899                     	;# 
  4306  089A                     	;# 
  4307  089B                     	;# 
  4308  090C                     	;# 
  4309  090E                     	;# 
  4310  090F                     	;# 
  4311  091F                     	;# 
  4312  091F                     	;# 
  4313  098F                     	;# 
  4314  098F                     	;# 
  4315  0990                     	;# 
  4316  0991                     	;# 
  4317  0992                     	;# 
  4318  0993                     	;# 
  4319  0994                     	;# 
  4320  0995                     	;# 
  4321  0996                     	;# 
  4322  0997                     	;# 
  4323  0E0F                     	;# 
  4324  0E10                     	;# 
  4325  0E11                     	;# 
  4326  0E12                     	;# 
  4327  0E13                     	;# 
  4328  0E14                     	;# 
  4329  0E15                     	;# 
  4330  0E16                     	;# 
  4331  0E17                     	;# 
  4332  0E18                     	;# 
  4333  0E19                     	;# 
  4334  0E1A                     	;# 
  4335  0E1B                     	;# 
  4336  0E1C                     	;# 
  4337  0E1D                     	;# 
  4338  0E1E                     	;# 
  4339  0E1F                     	;# 
  4340  0E20                     	;# 
  4341  0E21                     	;# 
  4342  0E22                     	;# 
  4343  0E23                     	;# 
  4344  0E24                     	;# 
  4345  0E25                     	;# 
  4346  0E26                     	;# 
  4347  0E27                     	;# 
  4348  0E28                     	;# 
  4349  0E29                     	;# 
  4350  0E2A                     	;# 
  4351  0E2B                     	;# 
  4352  0E2C                     	;# 
  4353  0E2D                     	;# 
  4354  0E2E                     	;# 
  4355  0E2F                     	;# 
  4356  0E30                     	;# 
  4357  0E31                     	;# 
  4358  0E32                     	;# 
  4359  0E33                     	;# 
  4360  0E34                     	;# 
  4361  0E35                     	;# 
  4362  0E36                     	;# 
  4363  0E37                     	;# 
  4364  0E8F                     	;# 
  4365  0E90                     	;# 
  4366  0E91                     	;# 
  4367  0E92                     	;# 
  4368  0E93                     	;# 
  4369  0E94                     	;# 
  4370  0E95                     	;# 
  4371  0E96                     	;# 
  4372  0E97                     	;# 
  4373  0E9C                     	;# 
  4374  0E9D                     	;# 
  4375  0E9E                     	;# 
  4376  0EA1                     	;# 
  4377  0EA2                     	;# 
  4378  0EA3                     	;# 
  4379  0EA4                     	;# 
  4380  0EA5                     	;# 
  4381  0EA9                     	;# 
  4382  0EAA                     	;# 
  4383  0EAB                     	;# 
  4384  0EAC                     	;# 
  4385  0EB1                     	;# 
  4386  0EB2                     	;# 
  4387  0EB3                     	;# 
  4388  0EB8                     	;# 
  4389  0EB9                     	;# 
  4390  0EBA                     	;# 
  4391  0EBB                     	;# 
  4392  0EBC                     	;# 
  4393  0EBD                     	;# 
  4394  0EBE                     	;# 
  4395  0EC3                     	;# 
  4396  0EC5                     	;# 
  4397  0EC6                     	;# 
  4398  0EC7                     	;# 
  4399  0EC8                     	;# 
  4400  0EC9                     	;# 
  4401  0ECA                     	;# 
  4402  0ECB                     	;# 
  4403  0ECC                     	;# 
  4404  0F10                     	;# 
  4405  0F11                     	;# 
  4406  0F12                     	;# 
  4407  0F13                     	;# 
  4408  0F14                     	;# 
  4409  0F15                     	;# 
  4410  0F16                     	;# 
  4411  0F17                     	;# 
  4412  0F18                     	;# 
  4413  0F19                     	;# 
  4414  0F1A                     	;# 
  4415  0F1B                     	;# 
  4416  0F1C                     	;# 
  4417  0F1D                     	;# 
  4418  0F1E                     	;# 
  4419  0F1F                     	;# 
  4420  0F20                     	;# 
  4421  0F21                     	;# 
  4422  0F22                     	;# 
  4423  0F23                     	;# 
  4424  0F24                     	;# 
  4425  0F25                     	;# 
  4426  0F26                     	;# 
  4427  0F27                     	;# 
  4428  0F28                     	;# 
  4429  0F29                     	;# 
  4430  0F2A                     	;# 
  4431  0F2B                     	;# 
  4432  0F2C                     	;# 
  4433  0F2D                     	;# 
  4434  0F2E                     	;# 
  4435  0F2F                     	;# 
  4436  0F30                     	;# 
  4437  0F31                     	;# 
  4438  0F32                     	;# 
  4439  0F38                     	;# 
  4440  0F39                     	;# 
  4441  0F3A                     	;# 
  4442  0F3B                     	;# 
  4443  0F3C                     	;# 
  4444  0F3D                     	;# 
  4445  0F3E                     	;# 
  4446  0F3F                     	;# 
  4447  0F40                     	;# 
  4448  0F41                     	;# 
  4449  0F43                     	;# 
  4450  0F44                     	;# 
  4451  0F45                     	;# 
  4452  0F46                     	;# 
  4453  0F47                     	;# 
  4454  0F48                     	;# 
  4455  0F49                     	;# 
  4456  0F4A                     	;# 
  4457  0F4B                     	;# 
  4458  0F4C                     	;# 
  4459  0F4E                     	;# 
  4460  0F4F                     	;# 
  4461  0F50                     	;# 
  4462  0F51                     	;# 
  4463  0F52                     	;# 
  4464  0F53                     	;# 
  4465  0F54                     	;# 
  4466  0F55                     	;# 
  4467  0F56                     	;# 
  4468  0F57                     	;# 
  4469  0F59                     	;# 
  4470  0F5A                     	;# 
  4471  0F5B                     	;# 
  4472  0F5C                     	;# 
  4473  0F5D                     	;# 
  4474  0F61                     	;# 
  4475  0F62                     	;# 
  4476  0F64                     	;# 
  4477  0F65                     	;# 
  4478  0F66                     	;# 
  4479  0F67                     	;# 
  4480  0F68                     	;# 
  4481  0F69                     	;# 
  4482  0F6A                     	;# 
  4483  0F6B                     	;# 
  4484  0F6C                     	;# 
  4485  0F6D                     	;# 
  4486  0FE4                     	;# 
  4487  0FE5                     	;# 
  4488  0FE6                     	;# 
  4489  0FE7                     	;# 
  4490  0FE8                     	;# 
  4491  0FE9                     	;# 
  4492  0FEA                     	;# 
  4493  0FEB                     	;# 
  4494  0FED                     	;# 
  4495  0FEE                     	;# 
  4496  0FEF                     	;# 
  4497  0000                     	;# 
  4498  0001                     	;# 
  4499  0002                     	;# 
  4500  0003                     	;# 
  4501  0004                     	;# 
  4502  0005                     	;# 
  4503  0006                     	;# 
  4504  0007                     	;# 
  4505  0008                     	;# 
  4506  0009                     	;# 
  4507  000A                     	;# 
  4508  000B                     	;# 
  4509  000C                     	;# 
  4510  000D                     	;# 
  4511  000E                     	;# 
  4512  000F                     	;# 
  4513  0010                     	;# 
  4514  0011                     	;# 
  4515  0012                     	;# 
  4516  0013                     	;# 
  4517  0014                     	;# 
  4518  0015                     	;# 
  4519  0016                     	;# 
  4520  0017                     	;# 
  4521  0018                     	;# 
  4522  0019                     	;# 
  4523  001A                     	;# 
  4524  001C                     	;# 
  4525  001C                     	;# 
  4526  001D                     	;# 
  4527  001D                     	;# 
  4528  001E                     	;# 
  4529  001F                     	;# 
  4530  008C                     	;# 
  4531  008C                     	;# 
  4532  008D                     	;# 
  4533  008E                     	;# 
  4534  008E                     	;# 
  4535  008F                     	;# 
  4536  0090                     	;# 
  4537  0090                     	;# 
  4538  0091                     	;# 
  4539  0093                     	;# 
  4540  0094                     	;# 
  4541  0095                     	;# 
  4542  0096                     	;# 
  4543  0097                     	;# 
  4544  0098                     	;# 
  4545  0099                     	;# 
  4546  009A                     	;# 
  4547  009B                     	;# 
  4548  009C                     	;# 
  4549  009D                     	;# 
  4550  009E                     	;# 
  4551  010C                     	;# 
  4552  010D                     	;# 
  4553  010E                     	;# 
  4554  010E                     	;# 
  4555  010F                     	;# 
  4556  0110                     	;# 
  4557  0110                     	;# 
  4558  0111                     	;# 
  4559  0112                     	;# 
  4560  0112                     	;# 
  4561  0113                     	;# 
  4562  0114                     	;# 
  4563  0114                     	;# 
  4564  0115                     	;# 
  4565  0116                     	;# 
  4566  0116                     	;# 
  4567  0117                     	;# 
  4568  0119                     	;# 
  4569  0119                     	;# 
  4570  0119                     	;# 
  4571  011A                     	;# 
  4572  011A                     	;# 
  4573  011A                     	;# 
  4574  011B                     	;# 
  4575  011B                     	;# 
  4576  011B                     	;# 
  4577  011B                     	;# 
  4578  011B                     	;# 
  4579  011C                     	;# 
  4580  011C                     	;# 
  4581  011C                     	;# 
  4582  011D                     	;# 
  4583  011D                     	;# 
  4584  011D                     	;# 
  4585  011E                     	;# 
  4586  011E                     	;# 
  4587  011E                     	;# 
  4588  011F                     	;# 
  4589  011F                     	;# 
  4590  011F                     	;# 
  4591  011F                     	;# 
  4592  011F                     	;# 
  4593  018C                     	;# 
  4594  018D                     	;# 
  4595  018E                     	;# 
  4596  018F                     	;# 
  4597  0190                     	;# 
  4598  0191                     	;# 
  4599  0192                     	;# 
  4600  0196                     	;# 
  4601  0197                     	;# 
  4602  0198                     	;# 
  4603  0199                     	;# 
  4604  019A                     	;# 
  4605  019B                     	;# 
  4606  019C                     	;# 
  4607  020C                     	;# 
  4608  020C                     	;# 
  4609  020D                     	;# 
  4610  020E                     	;# 
  4611  020F                     	;# 
  4612  020F                     	;# 
  4613  0210                     	;# 
  4614  0210                     	;# 
  4615  0211                     	;# 
  4616  0211                     	;# 
  4617  0212                     	;# 
  4618  0212                     	;# 
  4619  0213                     	;# 
  4620  0214                     	;# 
  4621  0215                     	;# 
  4622  0215                     	;# 
  4623  0216                     	;# 
  4624  0216                     	;# 
  4625  0217                     	;# 
  4626  0217                     	;# 
  4627  0218                     	;# 
  4628  0218                     	;# 
  4629  0219                     	;# 
  4630  021A                     	;# 
  4631  021B                     	;# 
  4632  021B                     	;# 
  4633  021C                     	;# 
  4634  021C                     	;# 
  4635  021D                     	;# 
  4636  021D                     	;# 
  4637  021E                     	;# 
  4638  021F                     	;# 
  4639  028C                     	;# 
  4640  028C                     	;# 
  4641  028D                     	;# 
  4642  028D                     	;# 
  4643  028E                     	;# 
  4644  028F                     	;# 
  4645  0290                     	;# 
  4646  0290                     	;# 
  4647  0291                     	;# 
  4648  0292                     	;# 
  4649  0292                     	;# 
  4650  0293                     	;# 
  4651  0293                     	;# 
  4652  0294                     	;# 
  4653  0295                     	;# 
  4654  0296                     	;# 
  4655  0296                     	;# 
  4656  0297                     	;# 
  4657  0298                     	;# 
  4658  0298                     	;# 
  4659  0299                     	;# 
  4660  0299                     	;# 
  4661  029A                     	;# 
  4662  029B                     	;# 
  4663  029C                     	;# 
  4664  029C                     	;# 
  4665  029D                     	;# 
  4666  030C                     	;# 
  4667  030C                     	;# 
  4668  030D                     	;# 
  4669  030E                     	;# 
  4670  030F                     	;# 
  4671  0310                     	;# 
  4672  0310                     	;# 
  4673  0311                     	;# 
  4674  0312                     	;# 
  4675  0313                     	;# 
  4676  0314                     	;# 
  4677  0314                     	;# 
  4678  0315                     	;# 
  4679  0316                     	;# 
  4680  0317                     	;# 
  4681  0318                     	;# 
  4682  0318                     	;# 
  4683  0319                     	;# 
  4684  031A                     	;# 
  4685  031B                     	;# 
  4686  031C                     	;# 
  4687  031C                     	;# 
  4688  031D                     	;# 
  4689  031E                     	;# 
  4690  031F                     	;# 
  4691  038C                     	;# 
  4692  038C                     	;# 
  4693  038D                     	;# 
  4694  038E                     	;# 
  4695  0390                     	;# 
  4696  0390                     	;# 
  4697  0391                     	;# 
  4698  0392                     	;# 
  4699  040C                     	;# 
  4700  040D                     	;# 
  4701  040E                     	;# 
  4702  040F                     	;# 
  4703  0410                     	;# 
  4704  0411                     	;# 
  4705  0416                     	;# 
  4706  0416                     	;# 
  4707  0417                     	;# 
  4708  0418                     	;# 
  4709  0418                     	;# 
  4710  0419                     	;# 
  4711  041A                     	;# 
  4712  041A                     	;# 
  4713  041B                     	;# 
  4714  041C                     	;# 
  4715  041C                     	;# 
  4716  041D                     	;# 
  4717  041E                     	;# 
  4718  041F                     	;# 
  4719  048C                     	;# 
  4720  048C                     	;# 
  4721  048D                     	;# 
  4722  048E                     	;# 
  4723  048F                     	;# 
  4724  048F                     	;# 
  4725  0490                     	;# 
  4726  0491                     	;# 
  4727  0492                     	;# 
  4728  0492                     	;# 
  4729  0493                     	;# 
  4730  0494                     	;# 
  4731  0495                     	;# 
  4732  0495                     	;# 
  4733  0496                     	;# 
  4734  0497                     	;# 
  4735  0498                     	;# 
  4736  0499                     	;# 
  4737  049A                     	;# 
  4738  049B                     	;# 
  4739  049C                     	;# 
  4740  049D                     	;# 
  4741  050C                     	;# 
  4742  050C                     	;# 
  4743  050D                     	;# 
  4744  050E                     	;# 
  4745  050F                     	;# 
  4746  050F                     	;# 
  4747  0510                     	;# 
  4748  0511                     	;# 
  4749  0512                     	;# 
  4750  0512                     	;# 
  4751  0513                     	;# 
  4752  0514                     	;# 
  4753  0515                     	;# 
  4754  0515                     	;# 
  4755  0516                     	;# 
  4756  0517                     	;# 
  4757  0518                     	;# 
  4758  0519                     	;# 
  4759  051A                     	;# 
  4760  051B                     	;# 
  4761  051C                     	;# 
  4762  051D                     	;# 
  4763  058C                     	;# 
  4764  058C                     	;# 
  4765  058D                     	;# 
  4766  058E                     	;# 
  4767  058F                     	;# 
  4768  058F                     	;# 
  4769  0590                     	;# 
  4770  0591                     	;# 
  4771  0592                     	;# 
  4772  0593                     	;# 
  4773  060C                     	;# 
  4774  060D                     	;# 
  4775  060E                     	;# 
  4776  060F                     	;# 
  4777  0610                     	;# 
  4778  0611                     	;# 
  4779  0612                     	;# 
  4780  0613                     	;# 
  4781  0614                     	;# 
  4782  0616                     	;# 
  4783  0617                     	;# 
  4784  0618                     	;# 
  4785  0619                     	;# 
  4786  061A                     	;# 
  4787  061B                     	;# 
  4788  061C                     	;# 
  4789  061D                     	;# 
  4790  061E                     	;# 
  4791  068C                     	;# 
  4792  068D                     	;# 
  4793  068E                     	;# 
  4794  068F                     	;# 
  4795  0690                     	;# 
  4796  0691                     	;# 
  4797  0692                     	;# 
  4798  0693                     	;# 
  4799  0694                     	;# 
  4800  070C                     	;# 
  4801  070D                     	;# 
  4802  070E                     	;# 
  4803  070F                     	;# 
  4804  0710                     	;# 
  4805  0711                     	;# 
  4806  0712                     	;# 
  4807  0713                     	;# 
  4808  0714                     	;# 
  4809  0716                     	;# 
  4810  0717                     	;# 
  4811  0718                     	;# 
  4812  0719                     	;# 
  4813  071A                     	;# 
  4814  071B                     	;# 
  4815  071C                     	;# 
  4816  071D                     	;# 
  4817  071E                     	;# 
  4818  0796                     	;# 
  4819  0797                     	;# 
  4820  0798                     	;# 
  4821  0799                     	;# 
  4822  079A                     	;# 
  4823  079B                     	;# 
  4824  080C                     	;# 
  4825  080D                     	;# 
  4826  080E                     	;# 
  4827  080F                     	;# 
  4828  0810                     	;# 
  4829  0811                     	;# 
  4830  0812                     	;# 
  4831  0813                     	;# 
  4832  0814                     	;# 
  4833  081A                     	;# 
  4834  081B                     	;# 
  4835  081C                     	;# 
  4836  081D                     	;# 
  4837  081E                     	;# 
  4838  081F                     	;# 
  4839  088C                     	;# 
  4840  088D                     	;# 
  4841  088E                     	;# 
  4842  088F                     	;# 
  4843  0890                     	;# 
  4844  0891                     	;# 
  4845  0892                     	;# 
  4846  0893                     	;# 
  4847  0895                     	;# 
  4848  0896                     	;# 
  4849  0897                     	;# 
  4850  0898                     	;# 
  4851  0899                     	;# 
  4852  089A                     	;# 
  4853  089B                     	;# 
  4854  090C                     	;# 
  4855  090E                     	;# 
  4856  090F                     	;# 
  4857  091F                     	;# 
  4858  091F                     	;# 
  4859  098F                     	;# 
  4860  098F                     	;# 
  4861  0990                     	;# 
  4862  0991                     	;# 
  4863  0992                     	;# 
  4864  0993                     	;# 
  4865  0994                     	;# 
  4866  0995                     	;# 
  4867  0996                     	;# 
  4868  0997                     	;# 
  4869  0E0F                     	;# 
  4870  0E10                     	;# 
  4871  0E11                     	;# 
  4872  0E12                     	;# 
  4873  0E13                     	;# 
  4874  0E14                     	;# 
  4875  0E15                     	;# 
  4876  0E16                     	;# 
  4877  0E17                     	;# 
  4878  0E18                     	;# 
  4879  0E19                     	;# 
  4880  0E1A                     	;# 
  4881  0E1B                     	;# 
  4882  0E1C                     	;# 
  4883  0E1D                     	;# 
  4884  0E1E                     	;# 
  4885  0E1F                     	;# 
  4886  0E20                     	;# 
  4887  0E21                     	;# 
  4888  0E22                     	;# 
  4889  0E23                     	;# 
  4890  0E24                     	;# 
  4891  0E25                     	;# 
  4892  0E26                     	;# 
  4893  0E27                     	;# 
  4894  0E28                     	;# 
  4895  0E29                     	;# 
  4896  0E2A                     	;# 
  4897  0E2B                     	;# 
  4898  0E2C                     	;# 
  4899  0E2D                     	;# 
  4900  0E2E                     	;# 
  4901  0E2F                     	;# 
  4902  0E30                     	;# 
  4903  0E31                     	;# 
  4904  0E32                     	;# 
  4905  0E33                     	;# 
  4906  0E34                     	;# 
  4907  0E35                     	;# 
  4908  0E36                     	;# 
  4909  0E37                     	;# 
  4910  0E8F                     	;# 
  4911  0E90                     	;# 
  4912  0E91                     	;# 
  4913  0E92                     	;# 
  4914  0E93                     	;# 
  4915  0E94                     	;# 
  4916  0E95                     	;# 
  4917  0E96                     	;# 
  4918  0E97                     	;# 
  4919  0E9C                     	;# 
  4920  0E9D                     	;# 
  4921  0E9E                     	;# 
  4922  0EA1                     	;# 
  4923  0EA2                     	;# 
  4924  0EA3                     	;# 
  4925  0EA4                     	;# 
  4926  0EA5                     	;# 
  4927  0EA9                     	;# 
  4928  0EAA                     	;# 
  4929  0EAB                     	;# 
  4930  0EAC                     	;# 
  4931  0EB1                     	;# 
  4932  0EB2                     	;# 
  4933  0EB3                     	;# 
  4934  0EB8                     	;# 
  4935  0EB9                     	;# 
  4936  0EBA                     	;# 
  4937  0EBB                     	;# 
  4938  0EBC                     	;# 
  4939  0EBD                     	;# 
  4940  0EBE                     	;# 
  4941  0EC3                     	;# 
  4942  0EC5                     	;# 
  4943  0EC6                     	;# 
  4944  0EC7                     	;# 
  4945  0EC8                     	;# 
  4946  0EC9                     	;# 
  4947  0ECA                     	;# 
  4948  0ECB                     	;# 
  4949  0ECC                     	;# 
  4950  0F10                     	;# 
  4951  0F11                     	;# 
  4952  0F12                     	;# 
  4953  0F13                     	;# 
  4954  0F14                     	;# 
  4955  0F15                     	;# 
  4956  0F16                     	;# 
  4957  0F17                     	;# 
  4958  0F18                     	;# 
  4959  0F19                     	;# 
  4960  0F1A                     	;# 
  4961  0F1B                     	;# 
  4962  0F1C                     	;# 
  4963  0F1D                     	;# 
  4964  0F1E                     	;# 
  4965  0F1F                     	;# 
  4966  0F20                     	;# 
  4967  0F21                     	;# 
  4968  0F22                     	;# 
  4969  0F23                     	;# 
  4970  0F24                     	;# 
  4971  0F25                     	;# 
  4972  0F26                     	;# 
  4973  0F27                     	;# 
  4974  0F28                     	;# 
  4975  0F29                     	;# 
  4976  0F2A                     	;# 
  4977  0F2B                     	;# 
  4978  0F2C                     	;# 
  4979  0F2D                     	;# 
  4980  0F2E                     	;# 
  4981  0F2F                     	;# 
  4982  0F30                     	;# 
  4983  0F31                     	;# 
  4984  0F32                     	;# 
  4985  0F38                     	;# 
  4986  0F39                     	;# 
  4987  0F3A                     	;# 
  4988  0F3B                     	;# 
  4989  0F3C                     	;# 
  4990  0F3D                     	;# 
  4991  0F3E                     	;# 
  4992  0F3F                     	;# 
  4993  0F40                     	;# 
  4994  0F41                     	;# 
  4995  0F43                     	;# 
  4996  0F44                     	;# 
  4997  0F45                     	;# 
  4998  0F46                     	;# 
  4999  0F47                     	;# 
  5000  0F48                     	;# 
  5001  0F49                     	;# 
  5002  0F4A                     	;# 
  5003  0F4B                     	;# 
  5004  0F4C                     	;# 
  5005  0F4E                     	;# 
  5006  0F4F                     	;# 
  5007  0F50                     	;# 
  5008  0F51                     	;# 
  5009  0F52                     	;# 
  5010  0F53                     	;# 
  5011  0F54                     	;# 
  5012  0F55                     	;# 
  5013  0F56                     	;# 
  5014  0F57                     	;# 
  5015  0F59                     	;# 
  5016  0F5A                     	;# 
  5017  0F5B                     	;# 
  5018  0F5C                     	;# 
  5019  0F5D                     	;# 
  5020  0F61                     	;# 
  5021  0F62                     	;# 
  5022  0F64                     	;# 
  5023  0F65                     	;# 
  5024  0F66                     	;# 
  5025  0F67                     	;# 
  5026  0F68                     	;# 
  5027  0F69                     	;# 
  5028  0F6A                     	;# 
  5029  0F6B                     	;# 
  5030  0F6C                     	;# 
  5031  0F6D                     	;# 
  5032  0FE4                     	;# 
  5033  0FE5                     	;# 
  5034  0FE6                     	;# 
  5035  0FE7                     	;# 
  5036  0FE8                     	;# 
  5037  0FE9                     	;# 
  5038  0FEA                     	;# 
  5039  0FEB                     	;# 
  5040  0FED                     	;# 
  5041  0FEE                     	;# 
  5042  0FEF                     	;# 
  5043  0000                     	;# 
  5044  0001                     	;# 
  5045  0002                     	;# 
  5046  0003                     	;# 
  5047  0004                     	;# 
  5048  0005                     	;# 
  5049  0006                     	;# 
  5050  0007                     	;# 
  5051  0008                     	;# 
  5052  0009                     	;# 
  5053  000A                     	;# 
  5054  000B                     	;# 
  5055  000C                     	;# 
  5056  000D                     	;# 
  5057  000E                     	;# 
  5058  000F                     	;# 
  5059  0010                     	;# 
  5060  0011                     	;# 
  5061  0012                     	;# 
  5062  0013                     	;# 
  5063  0014                     	;# 
  5064  0015                     	;# 
  5065  0016                     	;# 
  5066  0017                     	;# 
  5067  0018                     	;# 
  5068  0019                     	;# 
  5069  001A                     	;# 
  5070  001C                     	;# 
  5071  001C                     	;# 
  5072  001D                     	;# 
  5073  001D                     	;# 
  5074  001E                     	;# 
  5075  001F                     	;# 
  5076  008C                     	;# 
  5077  008C                     	;# 
  5078  008D                     	;# 
  5079  008E                     	;# 
  5080  008E                     	;# 
  5081  008F                     	;# 
  5082  0090                     	;# 
  5083  0090                     	;# 
  5084  0091                     	;# 
  5085  0093                     	;# 
  5086  0094                     	;# 
  5087  0095                     	;# 
  5088  0096                     	;# 
  5089  0097                     	;# 
  5090  0098                     	;# 
  5091  0099                     	;# 
  5092  009A                     	;# 
  5093  009B                     	;# 
  5094  009C                     	;# 
  5095  009D                     	;# 
  5096  009E                     	;# 
  5097  010C                     	;# 
  5098  010D                     	;# 
  5099  010E                     	;# 
  5100  010E                     	;# 
  5101  010F                     	;# 
  5102  0110                     	;# 
  5103  0110                     	;# 
  5104  0111                     	;# 
  5105  0112                     	;# 
  5106  0112                     	;# 
  5107  0113                     	;# 
  5108  0114                     	;# 
  5109  0114                     	;# 
  5110  0115                     	;# 
  5111  0116                     	;# 
  5112  0116                     	;# 
  5113  0117                     	;# 
  5114  0119                     	;# 
  5115  0119                     	;# 
  5116  0119                     	;# 
  5117  011A                     	;# 
  5118  011A                     	;# 
  5119  011A                     	;# 
  5120  011B                     	;# 
  5121  011B                     	;# 
  5122  011B                     	;# 
  5123  011B                     	;# 
  5124  011B                     	;# 
  5125  011C                     	;# 
  5126  011C                     	;# 
  5127  011C                     	;# 
  5128  011D                     	;# 
  5129  011D                     	;# 
  5130  011D                     	;# 
  5131  011E                     	;# 
  5132  011E                     	;# 
  5133  011E                     	;# 
  5134  011F                     	;# 
  5135  011F                     	;# 
  5136  011F                     	;# 
  5137  011F                     	;# 
  5138  011F                     	;# 
  5139  018C                     	;# 
  5140  018D                     	;# 
  5141  018E                     	;# 
  5142  018F                     	;# 
  5143  0190                     	;# 
  5144  0191                     	;# 
  5145  0192                     	;# 
  5146  0196                     	;# 
  5147  0197                     	;# 
  5148  0198                     	;# 
  5149  0199                     	;# 
  5150  019A                     	;# 
  5151  019B                     	;# 
  5152  019C                     	;# 
  5153  020C                     	;# 
  5154  020C                     	;# 
  5155  020D                     	;# 
  5156  020E                     	;# 
  5157  020F                     	;# 
  5158  020F                     	;# 
  5159  0210                     	;# 
  5160  0210                     	;# 
  5161  0211                     	;# 
  5162  0211                     	;# 
  5163  0212                     	;# 
  5164  0212                     	;# 
  5165  0213                     	;# 
  5166  0214                     	;# 
  5167  0215                     	;# 
  5168  0215                     	;# 
  5169  0216                     	;# 
  5170  0216                     	;# 
  5171  0217                     	;# 
  5172  0217                     	;# 
  5173  0218                     	;# 
  5174  0218                     	;# 
  5175  0219                     	;# 
  5176  021A                     	;# 
  5177  021B                     	;# 
  5178  021B                     	;# 
  5179  021C                     	;# 
  5180  021C                     	;# 
  5181  021D                     	;# 
  5182  021D                     	;# 
  5183  021E                     	;# 
  5184  021F                     	;# 
  5185  028C                     	;# 
  5186  028C                     	;# 
  5187  028D                     	;# 
  5188  028D                     	;# 
  5189  028E                     	;# 
  5190  028F                     	;# 
  5191  0290                     	;# 
  5192  0290                     	;# 
  5193  0291                     	;# 
  5194  0292                     	;# 
  5195  0292                     	;# 
  5196  0293                     	;# 
  5197  0293                     	;# 
  5198  0294                     	;# 
  5199  0295                     	;# 
  5200  0296                     	;# 
  5201  0296                     	;# 
  5202  0297                     	;# 
  5203  0298                     	;# 
  5204  0298                     	;# 
  5205  0299                     	;# 
  5206  0299                     	;# 
  5207  029A                     	;# 
  5208  029B                     	;# 
  5209  029C                     	;# 
  5210  029C                     	;# 
  5211  029D                     	;# 
  5212  030C                     	;# 
  5213  030C                     	;# 
  5214  030D                     	;# 
  5215  030E                     	;# 
  5216  030F                     	;# 
  5217  0310                     	;# 
  5218  0310                     	;# 
  5219  0311                     	;# 
  5220  0312                     	;# 
  5221  0313                     	;# 
  5222  0314                     	;# 
  5223  0314                     	;# 
  5224  0315                     	;# 
  5225  0316                     	;# 
  5226  0317                     	;# 
  5227  0318                     	;# 
  5228  0318                     	;# 
  5229  0319                     	;# 
  5230  031A                     	;# 
  5231  031B                     	;# 
  5232  031C                     	;# 
  5233  031C                     	;# 
  5234  031D                     	;# 
  5235  031E                     	;# 
  5236  031F                     	;# 
  5237  038C                     	;# 
  5238  038C                     	;# 
  5239  038D                     	;# 
  5240  038E                     	;# 
  5241  0390                     	;# 
  5242  0390                     	;# 
  5243  0391                     	;# 
  5244  0392                     	;# 
  5245  040C                     	;# 
  5246  040D                     	;# 
  5247  040E                     	;# 
  5248  040F                     	;# 
  5249  0410                     	;# 
  5250  0411                     	;# 
  5251  0416                     	;# 
  5252  0416                     	;# 
  5253  0417                     	;# 
  5254  0418                     	;# 
  5255  0418                     	;# 
  5256  0419                     	;# 
  5257  041A                     	;# 
  5258  041A                     	;# 
  5259  041B                     	;# 
  5260  041C                     	;# 
  5261  041C                     	;# 
  5262  041D                     	;# 
  5263  041E                     	;# 
  5264  041F                     	;# 
  5265  048C                     	;# 
  5266  048C                     	;# 
  5267  048D                     	;# 
  5268  048E                     	;# 
  5269  048F                     	;# 
  5270  048F                     	;# 
  5271  0490                     	;# 
  5272  0491                     	;# 
  5273  0492                     	;# 
  5274  0492                     	;# 
  5275  0493                     	;# 
  5276  0494                     	;# 
  5277  0495                     	;# 
  5278  0495                     	;# 
  5279  0496                     	;# 
  5280  0497                     	;# 
  5281  0498                     	;# 
  5282  0499                     	;# 
  5283  049A                     	;# 
  5284  049B                     	;# 
  5285  049C                     	;# 
  5286  049D                     	;# 
  5287  050C                     	;# 
  5288  050C                     	;# 
  5289  050D                     	;# 
  5290  050E                     	;# 
  5291  050F                     	;# 
  5292  050F                     	;# 
  5293  0510                     	;# 
  5294  0511                     	;# 
  5295  0512                     	;# 
  5296  0512                     	;# 
  5297  0513                     	;# 
  5298  0514                     	;# 
  5299  0515                     	;# 
  5300  0515                     	;# 
  5301  0516                     	;# 
  5302  0517                     	;# 
  5303  0518                     	;# 
  5304  0519                     	;# 
  5305  051A                     	;# 
  5306  051B                     	;# 
  5307  051C                     	;# 
  5308  051D                     	;# 
  5309  058C                     	;# 
  5310  058C                     	;# 
  5311  058D                     	;# 
  5312  058E                     	;# 
  5313  058F                     	;# 
  5314  058F                     	;# 
  5315  0590                     	;# 
  5316  0591                     	;# 
  5317  0592                     	;# 
  5318  0593                     	;# 
  5319  060C                     	;# 
  5320  060D                     	;# 
  5321  060E                     	;# 
  5322  060F                     	;# 
  5323  0610                     	;# 
  5324  0611                     	;# 
  5325  0612                     	;# 
  5326  0613                     	;# 
  5327  0614                     	;# 
  5328  0616                     	;# 
  5329  0617                     	;# 
  5330  0618                     	;# 
  5331  0619                     	;# 
  5332  061A                     	;# 
  5333  061B                     	;# 
  5334  061C                     	;# 
  5335  061D                     	;# 
  5336  061E                     	;# 
  5337  068C                     	;# 
  5338  068D                     	;# 
  5339  068E                     	;# 
  5340  068F                     	;# 
  5341  0690                     	;# 
  5342  0691                     	;# 
  5343  0692                     	;# 
  5344  0693                     	;# 
  5345  0694                     	;# 
  5346  070C                     	;# 
  5347  070D                     	;# 
  5348  070E                     	;# 
  5349  070F                     	;# 
  5350  0710                     	;# 
  5351  0711                     	;# 
  5352  0712                     	;# 
  5353  0713                     	;# 
  5354  0714                     	;# 
  5355  0716                     	;# 
  5356  0717                     	;# 
  5357  0718                     	;# 
  5358  0719                     	;# 
  5359  071A                     	;# 
  5360  071B                     	;# 
  5361  071C                     	;# 
  5362  071D                     	;# 
  5363  071E                     	;# 
  5364  0796                     	;# 
  5365  0797                     	;# 
  5366  0798                     	;# 
  5367  0799                     	;# 
  5368  079A                     	;# 
  5369  079B                     	;# 
  5370  080C                     	;# 
  5371  080D                     	;# 
  5372  080E                     	;# 
  5373  080F                     	;# 
  5374  0810                     	;# 
  5375  0811                     	;# 
  5376  0812                     	;# 
  5377  0813                     	;# 
  5378  0814                     	;# 
  5379  081A                     	;# 
  5380  081B                     	;# 
  5381  081C                     	;# 
  5382  081D                     	;# 
  5383  081E                     	;# 
  5384  081F                     	;# 
  5385  088C                     	;# 
  5386  088D                     	;# 
  5387  088E                     	;# 
  5388  088F                     	;# 
  5389  0890                     	;# 
  5390  0891                     	;# 
  5391  0892                     	;# 
  5392  0893                     	;# 
  5393  0895                     	;# 
  5394  0896                     	;# 
  5395  0897                     	;# 
  5396  0898                     	;# 
  5397  0899                     	;# 
  5398  089A                     	;# 
  5399  089B                     	;# 
  5400  090C                     	;# 
  5401  090E                     	;# 
  5402  090F                     	;# 
  5403  091F                     	;# 
  5404  091F                     	;# 
  5405  098F                     	;# 
  5406  098F                     	;# 
  5407  0990                     	;# 
  5408  0991                     	;# 
  5409  0992                     	;# 
  5410  0993                     	;# 
  5411  0994                     	;# 
  5412  0995                     	;# 
  5413  0996                     	;# 
  5414  0997                     	;# 
  5415  0E0F                     	;# 
  5416  0E10                     	;# 
  5417  0E11                     	;# 
  5418  0E12                     	;# 
  5419  0E13                     	;# 
  5420  0E14                     	;# 
  5421  0E15                     	;# 
  5422  0E16                     	;# 
  5423  0E17                     	;# 
  5424  0E18                     	;# 
  5425  0E19                     	;# 
  5426  0E1A                     	;# 
  5427  0E1B                     	;# 
  5428  0E1C                     	;# 
  5429  0E1D                     	;# 
  5430  0E1E                     	;# 
  5431  0E1F                     	;# 
  5432  0E20                     	;# 
  5433  0E21                     	;# 
  5434  0E22                     	;# 
  5435  0E23                     	;# 
  5436  0E24                     	;# 
  5437  0E25                     	;# 
  5438  0E26                     	;# 
  5439  0E27                     	;# 
  5440  0E28                     	;# 
  5441  0E29                     	;# 
  5442  0E2A                     	;# 
  5443  0E2B                     	;# 
  5444  0E2C                     	;# 
  5445  0E2D                     	;# 
  5446  0E2E                     	;# 
  5447  0E2F                     	;# 
  5448  0E30                     	;# 
  5449  0E31                     	;# 
  5450  0E32                     	;# 
  5451  0E33                     	;# 
  5452  0E34                     	;# 
  5453  0E35                     	;# 
  5454  0E36                     	;# 
  5455  0E37                     	;# 
  5456  0E8F                     	;# 
  5457  0E90                     	;# 
  5458  0E91                     	;# 
  5459  0E92                     	;# 
  5460  0E93                     	;# 
  5461  0E94                     	;# 
  5462  0E95                     	;# 
  5463  0E96                     	;# 
  5464  0E97                     	;# 
  5465  0E9C                     	;# 
  5466  0E9D                     	;# 
  5467  0E9E                     	;# 
  5468  0EA1                     	;# 
  5469  0EA2                     	;# 
  5470  0EA3                     	;# 
  5471  0EA4                     	;# 
  5472  0EA5                     	;# 
  5473  0EA9                     	;# 
  5474  0EAA                     	;# 
  5475  0EAB                     	;# 
  5476  0EAC                     	;# 
  5477  0EB1                     	;# 
  5478  0EB2                     	;# 
  5479  0EB3                     	;# 
  5480  0EB8                     	;# 
  5481  0EB9                     	;# 
  5482  0EBA                     	;# 
  5483  0EBB                     	;# 
  5484  0EBC                     	;# 
  5485  0EBD                     	;# 
  5486  0EBE                     	;# 
  5487  0EC3                     	;# 
  5488  0EC5                     	;# 
  5489  0EC6                     	;# 
  5490  0EC7                     	;# 
  5491  0EC8                     	;# 
  5492  0EC9                     	;# 
  5493  0ECA                     	;# 
  5494  0ECB                     	;# 
  5495  0ECC                     	;# 
  5496  0F10                     	;# 
  5497  0F11                     	;# 
  5498  0F12                     	;# 
  5499  0F13                     	;# 
  5500  0F14                     	;# 
  5501  0F15                     	;# 
  5502  0F16                     	;# 
  5503  0F17                     	;# 
  5504  0F18                     	;# 
  5505  0F19                     	;# 
  5506  0F1A                     	;# 
  5507  0F1B                     	;# 
  5508  0F1C                     	;# 
  5509  0F1D                     	;# 
  5510  0F1E                     	;# 
  5511  0F1F                     	;# 
  5512  0F20                     	;# 
  5513  0F21                     	;# 
  5514  0F22                     	;# 
  5515  0F23                     	;# 
  5516  0F24                     	;# 
  5517  0F25                     	;# 
  5518  0F26                     	;# 
  5519  0F27                     	;# 
  5520  0F28                     	;# 
  5521  0F29                     	;# 
  5522  0F2A                     	;# 
  5523  0F2B                     	;# 
  5524  0F2C                     	;# 
  5525  0F2D                     	;# 
  5526  0F2E                     	;# 
  5527  0F2F                     	;# 
  5528  0F30                     	;# 
  5529  0F31                     	;# 
  5530  0F32                     	;# 
  5531  0F38                     	;# 
  5532  0F39                     	;# 
  5533  0F3A                     	;# 
  5534  0F3B                     	;# 
  5535  0F3C                     	;# 
  5536  0F3D                     	;# 
  5537  0F3E                     	;# 
  5538  0F3F                     	;# 
  5539  0F40                     	;# 
  5540  0F41                     	;# 
  5541  0F43                     	;# 
  5542  0F44                     	;# 
  5543  0F45                     	;# 
  5544  0F46                     	;# 
  5545  0F47                     	;# 
  5546  0F48                     	;# 
  5547  0F49                     	;# 
  5548  0F4A                     	;# 
  5549  0F4B                     	;# 
  5550  0F4C                     	;# 
  5551  0F4E                     	;# 
  5552  0F4F                     	;# 
  5553  0F50                     	;# 
  5554  0F51                     	;# 
  5555  0F52                     	;# 
  5556  0F53                     	;# 
  5557  0F54                     	;# 
  5558  0F55                     	;# 
  5559  0F56                     	;# 
  5560  0F57                     	;# 
  5561  0F59                     	;# 
  5562  0F5A                     	;# 
  5563  0F5B                     	;# 
  5564  0F5C                     	;# 
  5565  0F5D                     	;# 
  5566  0F61                     	;# 
  5567  0F62                     	;# 
  5568  0F64                     	;# 
  5569  0F65                     	;# 
  5570  0F66                     	;# 
  5571  0F67                     	;# 
  5572  0F68                     	;# 
  5573  0F69                     	;# 
  5574  0F6A                     	;# 
  5575  0F6B                     	;# 
  5576  0F6C                     	;# 
  5577  0F6D                     	;# 
  5578  0FE4                     	;# 
  5579  0FE5                     	;# 
  5580  0FE6                     	;# 
  5581  0FE7                     	;# 
  5582  0FE8                     	;# 
  5583  0FE9                     	;# 
  5584  0FEA                     	;# 
  5585  0FEB                     	;# 
  5586  0FED                     	;# 
  5587  0FEE                     	;# 
  5588  0FEF                     	;# 
  5589  0000                     	;# 
  5590  0001                     	;# 
  5591  0002                     	;# 
  5592  0003                     	;# 
  5593  0004                     	;# 
  5594  0005                     	;# 
  5595  0006                     	;# 
  5596  0007                     	;# 
  5597  0008                     	;# 
  5598  0009                     	;# 
  5599  000A                     	;# 
  5600  000B                     	;# 
  5601  000C                     	;# 
  5602  000D                     	;# 
  5603  000E                     	;# 
  5604  000F                     	;# 
  5605  0010                     	;# 
  5606  0011                     	;# 
  5607  0012                     	;# 
  5608  0013                     	;# 
  5609  0014                     	;# 
  5610  0015                     	;# 
  5611  0016                     	;# 
  5612  0017                     	;# 
  5613  0018                     	;# 
  5614  0019                     	;# 
  5615  001A                     	;# 
  5616  001C                     	;# 
  5617  001C                     	;# 
  5618  001D                     	;# 
  5619  001D                     	;# 
  5620  001E                     	;# 
  5621  001F                     	;# 
  5622  008C                     	;# 
  5623  008C                     	;# 
  5624  008D                     	;# 
  5625  008E                     	;# 
  5626  008E                     	;# 
  5627  008F                     	;# 
  5628  0090                     	;# 
  5629  0090                     	;# 
  5630  0091                     	;# 
  5631  0093                     	;# 
  5632  0094                     	;# 
  5633  0095                     	;# 
  5634  0096                     	;# 
  5635  0097                     	;# 
  5636  0098                     	;# 
  5637  0099                     	;# 
  5638  009A                     	;# 
  5639  009B                     	;# 
  5640  009C                     	;# 
  5641  009D                     	;# 
  5642  009E                     	;# 
  5643  010C                     	;# 
  5644  010D                     	;# 
  5645  010E                     	;# 
  5646  010E                     	;# 
  5647  010F                     	;# 
  5648  0110                     	;# 
  5649  0110                     	;# 
  5650  0111                     	;# 
  5651  0112                     	;# 
  5652  0112                     	;# 
  5653  0113                     	;# 
  5654  0114                     	;# 
  5655  0114                     	;# 
  5656  0115                     	;# 
  5657  0116                     	;# 
  5658  0116                     	;# 
  5659  0117                     	;# 
  5660  0119                     	;# 
  5661  0119                     	;# 
  5662  0119                     	;# 
  5663  011A                     	;# 
  5664  011A                     	;# 
  5665  011A                     	;# 
  5666  011B                     	;# 
  5667  011B                     	;# 
  5668  011B                     	;# 
  5669  011B                     	;# 
  5670  011B                     	;# 
  5671  011C                     	;# 
  5672  011C                     	;# 
  5673  011C                     	;# 
  5674  011D                     	;# 
  5675  011D                     	;# 
  5676  011D                     	;# 
  5677  011E                     	;# 
  5678  011E                     	;# 
  5679  011E                     	;# 
  5680  011F                     	;# 
  5681  011F                     	;# 
  5682  011F                     	;# 
  5683  011F                     	;# 
  5684  011F                     	;# 
  5685  018C                     	;# 
  5686  018D                     	;# 
  5687  018E                     	;# 
  5688  018F                     	;# 
  5689  0190                     	;# 
  5690  0191                     	;# 
  5691  0192                     	;# 
  5692  0196                     	;# 
  5693  0197                     	;# 
  5694  0198                     	;# 
  5695  0199                     	;# 
  5696  019A                     	;# 
  5697  019B                     	;# 
  5698  019C                     	;# 
  5699  020C                     	;# 
  5700  020C                     	;# 
  5701  020D                     	;# 
  5702  020E                     	;# 
  5703  020F                     	;# 
  5704  020F                     	;# 
  5705  0210                     	;# 
  5706  0210                     	;# 
  5707  0211                     	;# 
  5708  0211                     	;# 
  5709  0212                     	;# 
  5710  0212                     	;# 
  5711  0213                     	;# 
  5712  0214                     	;# 
  5713  0215                     	;# 
  5714  0215                     	;# 
  5715  0216                     	;# 
  5716  0216                     	;# 
  5717  0217                     	;# 
  5718  0217                     	;# 
  5719  0218                     	;# 
  5720  0218                     	;# 
  5721  0219                     	;# 
  5722  021A                     	;# 
  5723  021B                     	;# 
  5724  021B                     	;# 
  5725  021C                     	;# 
  5726  021C                     	;# 
  5727  021D                     	;# 
  5728  021D                     	;# 
  5729  021E                     	;# 
  5730  021F                     	;# 
  5731  028C                     	;# 
  5732  028C                     	;# 
  5733  028D                     	;# 
  5734  028D                     	;# 
  5735  028E                     	;# 
  5736  028F                     	;# 
  5737  0290                     	;# 
  5738  0290                     	;# 
  5739  0291                     	;# 
  5740  0292                     	;# 
  5741  0292                     	;# 
  5742  0293                     	;# 
  5743  0293                     	;# 
  5744  0294                     	;# 
  5745  0295                     	;# 
  5746  0296                     	;# 
  5747  0296                     	;# 
  5748  0297                     	;# 
  5749  0298                     	;# 
  5750  0298                     	;# 
  5751  0299                     	;# 
  5752  0299                     	;# 
  5753  029A                     	;# 
  5754  029B                     	;# 
  5755  029C                     	;# 
  5756  029C                     	;# 
  5757  029D                     	;# 
  5758  030C                     	;# 
  5759  030C                     	;# 
  5760  030D                     	;# 
  5761  030E                     	;# 
  5762  030F                     	;# 
  5763  0310                     	;# 
  5764  0310                     	;# 
  5765  0311                     	;# 
  5766  0312                     	;# 
  5767  0313                     	;# 
  5768  0314                     	;# 
  5769  0314                     	;# 
  5770  0315                     	;# 
  5771  0316                     	;# 
  5772  0317                     	;# 
  5773  0318                     	;# 
  5774  0318                     	;# 
  5775  0319                     	;# 
  5776  031A                     	;# 
  5777  031B                     	;# 
  5778  031C                     	;# 
  5779  031C                     	;# 
  5780  031D                     	;# 
  5781  031E                     	;# 
  5782  031F                     	;# 
  5783  038C                     	;# 
  5784  038C                     	;# 
  5785  038D                     	;# 
  5786  038E                     	;# 
  5787  0390                     	;# 
  5788  0390                     	;# 
  5789  0391                     	;# 
  5790  0392                     	;# 
  5791  040C                     	;# 
  5792  040D                     	;# 
  5793  040E                     	;# 
  5794  040F                     	;# 
  5795  0410                     	;# 
  5796  0411                     	;# 
  5797  0416                     	;# 
  5798  0416                     	;# 
  5799  0417                     	;# 
  5800  0418                     	;# 
  5801  0418                     	;# 
  5802  0419                     	;# 
  5803  041A                     	;# 
  5804  041A                     	;# 
  5805  041B                     	;# 
  5806  041C                     	;# 
  5807  041C                     	;# 
  5808  041D                     	;# 
  5809  041E                     	;# 
  5810  041F                     	;# 
  5811  048C                     	;# 
  5812  048C                     	;# 
  5813  048D                     	;# 
  5814  048E                     	;# 
  5815  048F                     	;# 
  5816  048F                     	;# 
  5817  0490                     	;# 
  5818  0491                     	;# 
  5819  0492                     	;# 
  5820  0492                     	;# 
  5821  0493                     	;# 
  5822  0494                     	;# 
  5823  0495                     	;# 
  5824  0495                     	;# 
  5825  0496                     	;# 
  5826  0497                     	;# 
  5827  0498                     	;# 
  5828  0499                     	;# 
  5829  049A                     	;# 
  5830  049B                     	;# 
  5831  049C                     	;# 
  5832  049D                     	;# 
  5833  050C                     	;# 
  5834  050C                     	;# 
  5835  050D                     	;# 
  5836  050E                     	;# 
  5837  050F                     	;# 
  5838  050F                     	;# 
  5839  0510                     	;# 
  5840  0511                     	;# 
  5841  0512                     	;# 
  5842  0512                     	;# 
  5843  0513                     	;# 
  5844  0514                     	;# 
  5845  0515                     	;# 
  5846  0515                     	;# 
  5847  0516                     	;# 
  5848  0517                     	;# 
  5849  0518                     	;# 
  5850  0519                     	;# 
  5851  051A                     	;# 
  5852  051B                     	;# 
  5853  051C                     	;# 
  5854  051D                     	;# 
  5855  058C                     	;# 
  5856  058C                     	;# 
  5857  058D                     	;# 
  5858  058E                     	;# 
  5859  058F                     	;# 
  5860  058F                     	;# 
  5861  0590                     	;# 
  5862  0591                     	;# 
  5863  0592                     	;# 
  5864  0593                     	;# 
  5865  060C                     	;# 
  5866  060D                     	;# 
  5867  060E                     	;# 
  5868  060F                     	;# 
  5869  0610                     	;# 
  5870  0611                     	;# 
  5871  0612                     	;# 
  5872  0613                     	;# 
  5873  0614                     	;# 
  5874  0616                     	;# 
  5875  0617                     	;# 
  5876  0618                     	;# 
  5877  0619                     	;# 
  5878  061A                     	;# 
  5879  061B                     	;# 
  5880  061C                     	;# 
  5881  061D                     	;# 
  5882  061E                     	;# 
  5883  068C                     	;# 
  5884  068D                     	;# 
  5885  068E                     	;# 
  5886  068F                     	;# 
  5887  0690                     	;# 
  5888  0691                     	;# 
  5889  0692                     	;# 
  5890  0693                     	;# 
  5891  0694                     	;# 
  5892  070C                     	;# 
  5893  070D                     	;# 
  5894  070E                     	;# 
  5895  070F                     	;# 
  5896  0710                     	;# 
  5897  0711                     	;# 
  5898  0712                     	;# 
  5899  0713                     	;# 
  5900  0714                     	;# 
  5901  0716                     	;# 
  5902  0717                     	;# 
  5903  0718                     	;# 
  5904  0719                     	;# 
  5905  071A                     	;# 
  5906  071B                     	;# 
  5907  071C                     	;# 
  5908  071D                     	;# 
  5909  071E                     	;# 
  5910  0796                     	;# 
  5911  0797                     	;# 
  5912  0798                     	;# 
  5913  0799                     	;# 
  5914  079A                     	;# 
  5915  079B                     	;# 
  5916  080C                     	;# 
  5917  080D                     	;# 
  5918  080E                     	;# 
  5919  080F                     	;# 
  5920  0810                     	;# 
  5921  0811                     	;# 
  5922  0812                     	;# 
  5923  0813                     	;# 
  5924  0814                     	;# 
  5925  081A                     	;# 
  5926  081B                     	;# 
  5927  081C                     	;# 
  5928  081D                     	;# 
  5929  081E                     	;# 
  5930  081F                     	;# 
  5931  088C                     	;# 
  5932  088D                     	;# 
  5933  088E                     	;# 
  5934  088F                     	;# 
  5935  0890                     	;# 
  5936  0891                     	;# 
  5937  0892                     	;# 
  5938  0893                     	;# 
  5939  0895                     	;# 
  5940  0896                     	;# 
  5941  0897                     	;# 
  5942  0898                     	;# 
  5943  0899                     	;# 
  5944  089A                     	;# 
  5945  089B                     	;# 
  5946  090C                     	;# 
  5947  090E                     	;# 
  5948  090F                     	;# 
  5949  091F                     	;# 
  5950  091F                     	;# 
  5951  098F                     	;# 
  5952  098F                     	;# 
  5953  0990                     	;# 
  5954  0991                     	;# 
  5955  0992                     	;# 
  5956  0993                     	;# 
  5957  0994                     	;# 
  5958  0995                     	;# 
  5959  0996                     	;# 
  5960  0997                     	;# 
  5961  0E0F                     	;# 
  5962  0E10                     	;# 
  5963  0E11                     	;# 
  5964  0E12                     	;# 
  5965  0E13                     	;# 
  5966  0E14                     	;# 
  5967  0E15                     	;# 
  5968  0E16                     	;# 
  5969  0E17                     	;# 
  5970  0E18                     	;# 
  5971  0E19                     	;# 
  5972  0E1A                     	;# 
  5973  0E1B                     	;# 
  5974  0E1C                     	;# 
  5975  0E1D                     	;# 
  5976  0E1E                     	;# 
  5977  0E1F                     	;# 
  5978  0E20                     	;# 
  5979  0E21                     	;# 
  5980  0E22                     	;# 
  5981  0E23                     	;# 
  5982  0E24                     	;# 
  5983  0E25                     	;# 
  5984  0E26                     	;# 
  5985  0E27                     	;# 
  5986  0E28                     	;# 
  5987  0E29                     	;# 
  5988  0E2A                     	;# 
  5989  0E2B                     	;# 
  5990  0E2C                     	;# 
  5991  0E2D                     	;# 
  5992  0E2E                     	;# 
  5993  0E2F                     	;# 
  5994  0E30                     	;# 
  5995  0E31                     	;# 
  5996  0E32                     	;# 
  5997  0E33                     	;# 
  5998  0E34                     	;# 
  5999  0E35                     	;# 
  6000  0E36                     	;# 
  6001  0E37                     	;# 
  6002  0E8F                     	;# 
  6003  0E90                     	;# 
  6004  0E91                     	;# 
  6005  0E92                     	;# 
  6006  0E93                     	;# 
  6007  0E94                     	;# 
  6008  0E95                     	;# 
  6009  0E96                     	;# 
  6010  0E97                     	;# 
  6011  0E9C                     	;# 
  6012  0E9D                     	;# 
  6013  0E9E                     	;# 
  6014  0EA1                     	;# 
  6015  0EA2                     	;# 
  6016  0EA3                     	;# 
  6017  0EA4                     	;# 
  6018  0EA5                     	;# 
  6019  0EA9                     	;# 
  6020  0EAA                     	;# 
  6021  0EAB                     	;# 
  6022  0EAC                     	;# 
  6023  0EB1                     	;# 
  6024  0EB2                     	;# 
  6025  0EB3                     	;# 
  6026  0EB8                     	;# 
  6027  0EB9                     	;# 
  6028  0EBA                     	;# 
  6029  0EBB                     	;# 
  6030  0EBC                     	;# 
  6031  0EBD                     	;# 
  6032  0EBE                     	;# 
  6033  0EC3                     	;# 
  6034  0EC5                     	;# 
  6035  0EC6                     	;# 
  6036  0EC7                     	;# 
  6037  0EC8                     	;# 
  6038  0EC9                     	;# 
  6039  0ECA                     	;# 
  6040  0ECB                     	;# 
  6041  0ECC                     	;# 
  6042  0F10                     	;# 
  6043  0F11                     	;# 
  6044  0F12                     	;# 
  6045  0F13                     	;# 
  6046  0F14                     	;# 
  6047  0F15                     	;# 
  6048  0F16                     	;# 
  6049  0F17                     	;# 
  6050  0F18                     	;# 
  6051  0F19                     	;# 
  6052  0F1A                     	;# 
  6053  0F1B                     	;# 
  6054  0F1C                     	;# 
  6055  0F1D                     	;# 
  6056  0F1E                     	;# 
  6057  0F1F                     	;# 
  6058  0F20                     	;# 
  6059  0F21                     	;# 
  6060  0F22                     	;# 
  6061  0F23                     	;# 
  6062  0F24                     	;# 
  6063  0F25                     	;# 
  6064  0F26                     	;# 
  6065  0F27                     	;# 
  6066  0F28                     	;# 
  6067  0F29                     	;# 
  6068  0F2A                     	;# 
  6069  0F2B                     	;# 
  6070  0F2C                     	;# 
  6071  0F2D                     	;# 
  6072  0F2E                     	;# 
  6073  0F2F                     	;# 
  6074  0F30                     	;# 
  6075  0F31                     	;# 
  6076  0F32                     	;# 
  6077  0F38                     	;# 
  6078  0F39                     	;# 
  6079  0F3A                     	;# 
  6080  0F3B                     	;# 
  6081  0F3C                     	;# 
  6082  0F3D                     	;# 
  6083  0F3E                     	;# 
  6084  0F3F                     	;# 
  6085  0F40                     	;# 
  6086  0F41                     	;# 
  6087  0F43                     	;# 
  6088  0F44                     	;# 
  6089  0F45                     	;# 
  6090  0F46                     	;# 
  6091  0F47                     	;# 
  6092  0F48                     	;# 
  6093  0F49                     	;# 
  6094  0F4A                     	;# 
  6095  0F4B                     	;# 
  6096  0F4C                     	;# 
  6097  0F4E                     	;# 
  6098  0F4F                     	;# 
  6099  0F50                     	;# 
  6100  0F51                     	;# 
  6101  0F52                     	;# 
  6102  0F53                     	;# 
  6103  0F54                     	;# 
  6104  0F55                     	;# 
  6105  0F56                     	;# 
  6106  0F57                     	;# 
  6107  0F59                     	;# 
  6108  0F5A                     	;# 
  6109  0F5B                     	;# 
  6110  0F5C                     	;# 
  6111  0F5D                     	;# 
  6112  0F61                     	;# 
  6113  0F62                     	;# 
  6114  0F64                     	;# 
  6115  0F65                     	;# 
  6116  0F66                     	;# 
  6117  0F67                     	;# 
  6118  0F68                     	;# 
  6119  0F69                     	;# 
  6120  0F6A                     	;# 
  6121  0F6B                     	;# 
  6122  0F6C                     	;# 
  6123  0F6D                     	;# 
  6124  0FE4                     	;# 
  6125  0FE5                     	;# 
  6126  0FE6                     	;# 
  6127  0FE7                     	;# 
  6128  0FE8                     	;# 
  6129  0FE9                     	;# 
  6130  0FEA                     	;# 
  6131  0FEB                     	;# 
  6132  0FED                     	;# 
  6133  0FEE                     	;# 
  6134  0FEF                     	;# 
  6135  0000                     	;# 
  6136  0001                     	;# 
  6137  0002                     	;# 
  6138  0003                     	;# 
  6139  0004                     	;# 
  6140  0005                     	;# 
  6141  0006                     	;# 
  6142  0007                     	;# 
  6143  0008                     	;# 
  6144  0009                     	;# 
  6145  000A                     	;# 
  6146  000B                     	;# 
  6147  000C                     	;# 
  6148  000D                     	;# 
  6149  000E                     	;# 
  6150  000F                     	;# 
  6151  0010                     	;# 
  6152  0011                     	;# 
  6153  0012                     	;# 
  6154  0013                     	;# 
  6155  0014                     	;# 
  6156  0015                     	;# 
  6157  0016                     	;# 
  6158  0017                     	;# 
  6159  0018                     	;# 
  6160  0019                     	;# 
  6161  001A                     	;# 
  6162  001C                     	;# 
  6163  001C                     	;# 
  6164  001D                     	;# 
  6165  001D                     	;# 
  6166  001E                     	;# 
  6167  001F                     	;# 
  6168  008C                     	;# 
  6169  008C                     	;# 
  6170  008D                     	;# 
  6171  008E                     	;# 
  6172  008E                     	;# 
  6173  008F                     	;# 
  6174  0090                     	;# 
  6175  0090                     	;# 
  6176  0091                     	;# 
  6177  0093                     	;# 
  6178  0094                     	;# 
  6179  0095                     	;# 
  6180  0096                     	;# 
  6181  0097                     	;# 
  6182  0098                     	;# 
  6183  0099                     	;# 
  6184  009A                     	;# 
  6185  009B                     	;# 
  6186  009C                     	;# 
  6187  009D                     	;# 
  6188  009E                     	;# 
  6189  010C                     	;# 
  6190  010D                     	;# 
  6191  010E                     	;# 
  6192  010E                     	;# 
  6193  010F                     	;# 
  6194  0110                     	;# 
  6195  0110                     	;# 
  6196  0111                     	;# 
  6197  0112                     	;# 
  6198  0112                     	;# 
  6199  0113                     	;# 
  6200  0114                     	;# 
  6201  0114                     	;# 
  6202  0115                     	;# 
  6203  0116                     	;# 
  6204  0116                     	;# 
  6205  0117                     	;# 
  6206  0119                     	;# 
  6207  0119                     	;# 
  6208  0119                     	;# 
  6209  011A                     	;# 
  6210  011A                     	;# 
  6211  011A                     	;# 
  6212  011B                     	;# 
  6213  011B                     	;# 
  6214  011B                     	;# 
  6215  011B                     	;# 
  6216  011B                     	;# 
  6217  011C                     	;# 
  6218  011C                     	;# 
  6219  011C                     	;# 
  6220  011D                     	;# 
  6221  011D                     	;# 
  6222  011D                     	;# 
  6223  011E                     	;# 
  6224  011E                     	;# 
  6225  011E                     	;# 
  6226  011F                     	;# 
  6227  011F                     	;# 
  6228  011F                     	;# 
  6229  011F                     	;# 
  6230  011F                     	;# 
  6231  018C                     	;# 
  6232  018D                     	;# 
  6233  018E                     	;# 
  6234  018F                     	;# 
  6235  0190                     	;# 
  6236  0191                     	;# 
  6237  0192                     	;# 
  6238  0196                     	;# 
  6239  0197                     	;# 
  6240  0198                     	;# 
  6241  0199                     	;# 
  6242  019A                     	;# 
  6243  019B                     	;# 
  6244  019C                     	;# 
  6245  020C                     	;# 
  6246  020C                     	;# 
  6247  020D                     	;# 
  6248  020E                     	;# 
  6249  020F                     	;# 
  6250  020F                     	;# 
  6251  0210                     	;# 
  6252  0210                     	;# 
  6253  0211                     	;# 
  6254  0211                     	;# 
  6255  0212                     	;# 
  6256  0212                     	;# 
  6257  0213                     	;# 
  6258  0214                     	;# 
  6259  0215                     	;# 
  6260  0215                     	;# 
  6261  0216                     	;# 
  6262  0216                     	;# 
  6263  0217                     	;# 
  6264  0217                     	;# 
  6265  0218                     	;# 
  6266  0218                     	;# 
  6267  0219                     	;# 
  6268  021A                     	;# 
  6269  021B                     	;# 
  6270  021B                     	;# 
  6271  021C                     	;# 
  6272  021C                     	;# 
  6273  021D                     	;# 
  6274  021D                     	;# 
  6275  021E                     	;# 
  6276  021F                     	;# 
  6277  028C                     	;# 
  6278  028C                     	;# 
  6279  028D                     	;# 
  6280  028D                     	;# 
  6281  028E                     	;# 
  6282  028F                     	;# 
  6283  0290                     	;# 
  6284  0290                     	;# 
  6285  0291                     	;# 
  6286  0292                     	;# 
  6287  0292                     	;# 
  6288  0293                     	;# 
  6289  0293                     	;# 
  6290  0294                     	;# 
  6291  0295                     	;# 
  6292  0296                     	;# 
  6293  0296                     	;# 
  6294  0297                     	;# 
  6295  0298                     	;# 
  6296  0298                     	;# 
  6297  0299                     	;# 
  6298  0299                     	;# 
  6299  029A                     	;# 
  6300  029B                     	;# 
  6301  029C                     	;# 
  6302  029C                     	;# 
  6303  029D                     	;# 
  6304  030C                     	;# 
  6305  030C                     	;# 
  6306  030D                     	;# 
  6307  030E                     	;# 
  6308  030F                     	;# 
  6309  0310                     	;# 
  6310  0310                     	;# 
  6311  0311                     	;# 
  6312  0312                     	;# 
  6313  0313                     	;# 
  6314  0314                     	;# 
  6315  0314                     	;# 
  6316  0315                     	;# 
  6317  0316                     	;# 
  6318  0317                     	;# 
  6319  0318                     	;# 
  6320  0318                     	;# 
  6321  0319                     	;# 
  6322  031A                     	;# 
  6323  031B                     	;# 
  6324  031C                     	;# 
  6325  031C                     	;# 
  6326  031D                     	;# 
  6327  031E                     	;# 
  6328  031F                     	;# 
  6329  038C                     	;# 
  6330  038C                     	;# 
  6331  038D                     	;# 
  6332  038E                     	;# 
  6333  0390                     	;# 
  6334  0390                     	;# 
  6335  0391                     	;# 
  6336  0392                     	;# 
  6337  040C                     	;# 
  6338  040D                     	;# 
  6339  040E                     	;# 
  6340  040F                     	;# 
  6341  0410                     	;# 
  6342  0411                     	;# 
  6343  0416                     	;# 
  6344  0416                     	;# 
  6345  0417                     	;# 
  6346  0418                     	;# 
  6347  0418                     	;# 
  6348  0419                     	;# 
  6349  041A                     	;# 
  6350  041A                     	;# 
  6351  041B                     	;# 
  6352  041C                     	;# 
  6353  041C                     	;# 
  6354  041D                     	;# 
  6355  041E                     	;# 
  6356  041F                     	;# 
  6357  048C                     	;# 
  6358  048C                     	;# 
  6359  048D                     	;# 
  6360  048E                     	;# 
  6361  048F                     	;# 
  6362  048F                     	;# 
  6363  0490                     	;# 
  6364  0491                     	;# 
  6365  0492                     	;# 
  6366  0492                     	;# 
  6367  0493                     	;# 
  6368  0494                     	;# 
  6369  0495                     	;# 
  6370  0495                     	;# 
  6371  0496                     	;# 
  6372  0497                     	;# 
  6373  0498                     	;# 
  6374  0499                     	;# 
  6375  049A                     	;# 
  6376  049B                     	;# 
  6377  049C                     	;# 
  6378  049D                     	;# 
  6379  050C                     	;# 
  6380  050C                     	;# 
  6381  050D                     	;# 
  6382  050E                     	;# 
  6383  050F                     	;# 
  6384  050F                     	;# 
  6385  0510                     	;# 
  6386  0511                     	;# 
  6387  0512                     	;# 
  6388  0512                     	;# 
  6389  0513                     	;# 
  6390  0514                     	;# 
  6391  0515                     	;# 
  6392  0515                     	;# 
  6393  0516                     	;# 
  6394  0517                     	;# 
  6395  0518                     	;# 
  6396  0519                     	;# 
  6397  051A                     	;# 
  6398  051B                     	;# 
  6399  051C                     	;# 
  6400  051D                     	;# 
  6401  058C                     	;# 
  6402  058C                     	;# 
  6403  058D                     	;# 
  6404  058E                     	;# 
  6405  058F                     	;# 
  6406  058F                     	;# 
  6407  0590                     	;# 
  6408  0591                     	;# 
  6409  0592                     	;# 
  6410  0593                     	;# 
  6411  060C                     	;# 
  6412  060D                     	;# 
  6413  060E                     	;# 
  6414  060F                     	;# 
  6415  0610                     	;# 
  6416  0611                     	;# 
  6417  0612                     	;# 
  6418  0613                     	;# 
  6419  0614                     	;# 
  6420  0616                     	;# 
  6421  0617                     	;# 
  6422  0618                     	;# 
  6423  0619                     	;# 
  6424  061A                     	;# 
  6425  061B                     	;# 
  6426  061C                     	;# 
  6427  061D                     	;# 
  6428  061E                     	;# 
  6429  068C                     	;# 
  6430  068D                     	;# 
  6431  068E                     	;# 
  6432  068F                     	;# 
  6433  0690                     	;# 
  6434  0691                     	;# 
  6435  0692                     	;# 
  6436  0693                     	;# 
  6437  0694                     	;# 
  6438  070C                     	;# 
  6439  070D                     	;# 
  6440  070E                     	;# 
  6441  070F                     	;# 
  6442  0710                     	;# 
  6443  0711                     	;# 
  6444  0712                     	;# 
  6445  0713                     	;# 
  6446  0714                     	;# 
  6447  0716                     	;# 
  6448  0717                     	;# 
  6449  0718                     	;# 
  6450  0719                     	;# 
  6451  071A                     	;# 
  6452  071B                     	;# 
  6453  071C                     	;# 
  6454  071D                     	;# 
  6455  071E                     	;# 
  6456  0796                     	;# 
  6457  0797                     	;# 
  6458  0798                     	;# 
  6459  0799                     	;# 
  6460  079A                     	;# 
  6461  079B                     	;# 
  6462  080C                     	;# 
  6463  080D                     	;# 
  6464  080E                     	;# 
  6465  080F                     	;# 
  6466  0810                     	;# 
  6467  0811                     	;# 
  6468  0812                     	;# 
  6469  0813                     	;# 
  6470  0814                     	;# 
  6471  081A                     	;# 
  6472  081B                     	;# 
  6473  081C                     	;# 
  6474  081D                     	;# 
  6475  081E                     	;# 
  6476  081F                     	;# 
  6477  088C                     	;# 
  6478  088D                     	;# 
  6479  088E                     	;# 
  6480  088F                     	;# 
  6481  0890                     	;# 
  6482  0891                     	;# 
  6483  0892                     	;# 
  6484  0893                     	;# 
  6485  0895                     	;# 
  6486  0896                     	;# 
  6487  0897                     	;# 
  6488  0898                     	;# 
  6489  0899                     	;# 
  6490  089A                     	;# 
  6491  089B                     	;# 
  6492  090C                     	;# 
  6493  090E                     	;# 
  6494  090F                     	;# 
  6495  091F                     	;# 
  6496  091F                     	;# 
  6497  098F                     	;# 
  6498  098F                     	;# 
  6499  0990                     	;# 
  6500  0991                     	;# 
  6501  0992                     	;# 
  6502  0993                     	;# 
  6503  0994                     	;# 
  6504  0995                     	;# 
  6505  0996                     	;# 
  6506  0997                     	;# 
  6507  0E0F                     	;# 
  6508  0E10                     	;# 
  6509  0E11                     	;# 
  6510  0E12                     	;# 
  6511  0E13                     	;# 
  6512  0E14                     	;# 
  6513  0E15                     	;# 
  6514  0E16                     	;# 
  6515  0E17                     	;# 
  6516  0E18                     	;# 
  6517  0E19                     	;# 
  6518  0E1A                     	;# 
  6519  0E1B                     	;# 
  6520  0E1C                     	;# 
  6521  0E1D                     	;# 
  6522  0E1E                     	;# 
  6523  0E1F                     	;# 
  6524  0E20                     	;# 
  6525  0E21                     	;# 
  6526  0E22                     	;# 
  6527  0E23                     	;# 
  6528  0E24                     	;# 
  6529  0E25                     	;# 
  6530  0E26                     	;# 
  6531  0E27                     	;# 
  6532  0E28                     	;# 
  6533  0E29                     	;# 
  6534  0E2A                     	;# 
  6535  0E2B                     	;# 
  6536  0E2C                     	;# 
  6537  0E2D                     	;# 
  6538  0E2E                     	;# 
  6539  0E2F                     	;# 
  6540  0E30                     	;# 
  6541  0E31                     	;# 
  6542  0E32                     	;# 
  6543  0E33                     	;# 
  6544  0E34                     	;# 
  6545  0E35                     	;# 
  6546  0E36                     	;# 
  6547  0E37                     	;# 
  6548  0E8F                     	;# 
  6549  0E90                     	;# 
  6550  0E91                     	;# 
  6551  0E92                     	;# 
  6552  0E93                     	;# 
  6553  0E94                     	;# 
  6554  0E95                     	;# 
  6555  0E96                     	;# 
  6556  0E97                     	;# 
  6557  0E9C                     	;# 
  6558  0E9D                     	;# 
  6559  0E9E                     	;# 
  6560  0EA1                     	;# 
  6561  0EA2                     	;# 
  6562  0EA3                     	;# 
  6563  0EA4                     	;# 
  6564  0EA5                     	;# 
  6565  0EA9                     	;# 
  6566  0EAA                     	;# 
  6567  0EAB                     	;# 
  6568  0EAC                     	;# 
  6569  0EB1                     	;# 
  6570  0EB2                     	;# 
  6571  0EB3                     	;# 
  6572  0EB8                     	;# 
  6573  0EB9                     	;# 
  6574  0EBA                     	;# 
  6575  0EBB                     	;# 
  6576  0EBC                     	;# 
  6577  0EBD                     	;# 
  6578  0EBE                     	;# 
  6579  0EC3                     	;# 
  6580  0EC5                     	;# 
  6581  0EC6                     	;# 
  6582  0EC7                     	;# 
  6583  0EC8                     	;# 
  6584  0EC9                     	;# 
  6585  0ECA                     	;# 
  6586  0ECB                     	;# 
  6587  0ECC                     	;# 
  6588  0F10                     	;# 
  6589  0F11                     	;# 
  6590  0F12                     	;# 
  6591  0F13                     	;# 
  6592  0F14                     	;# 
  6593  0F15                     	;# 
  6594  0F16                     	;# 
  6595  0F17                     	;# 
  6596  0F18                     	;# 
  6597  0F19                     	;# 
  6598  0F1A                     	;# 
  6599  0F1B                     	;# 
  6600  0F1C                     	;# 
  6601  0F1D                     	;# 
  6602  0F1E                     	;# 
  6603  0F1F                     	;# 
  6604  0F20                     	;# 
  6605  0F21                     	;# 
  6606  0F22                     	;# 
  6607  0F23                     	;# 
  6608  0F24                     	;# 
  6609  0F25                     	;# 
  6610  0F26                     	;# 
  6611  0F27                     	;# 
  6612  0F28                     	;# 
  6613  0F29                     	;# 
  6614  0F2A                     	;# 
  6615  0F2B                     	;# 
  6616  0F2C                     	;# 
  6617  0F2D                     	;# 
  6618  0F2E                     	;# 
  6619  0F2F                     	;# 
  6620  0F30                     	;# 
  6621  0F31                     	;# 
  6622  0F32                     	;# 
  6623  0F38                     	;# 
  6624  0F39                     	;# 
  6625  0F3A                     	;# 
  6626  0F3B                     	;# 
  6627  0F3C                     	;# 
  6628  0F3D                     	;# 
  6629  0F3E                     	;# 
  6630  0F3F                     	;# 
  6631  0F40                     	;# 
  6632  0F41                     	;# 
  6633  0F43                     	;# 
  6634  0F44                     	;# 
  6635  0F45                     	;# 
  6636  0F46                     	;# 
  6637  0F47                     	;# 
  6638  0F48                     	;# 
  6639  0F49                     	;# 
  6640  0F4A                     	;# 
  6641  0F4B                     	;# 
  6642  0F4C                     	;# 
  6643  0F4E                     	;# 
  6644  0F4F                     	;# 
  6645  0F50                     	;# 
  6646  0F51                     	;# 
  6647  0F52                     	;# 
  6648  0F53                     	;# 
  6649  0F54                     	;# 
  6650  0F55                     	;# 
  6651  0F56                     	;# 
  6652  0F57                     	;# 
  6653  0F59                     	;# 
  6654  0F5A                     	;# 
  6655  0F5B                     	;# 
  6656  0F5C                     	;# 
  6657  0F5D                     	;# 
  6658  0F61                     	;# 
  6659  0F62                     	;# 
  6660  0F64                     	;# 
  6661  0F65                     	;# 
  6662  0F66                     	;# 
  6663  0F67                     	;# 
  6664  0F68                     	;# 
  6665  0F69                     	;# 
  6666  0F6A                     	;# 
  6667  0F6B                     	;# 
  6668  0F6C                     	;# 
  6669  0F6D                     	;# 
  6670  0FE4                     	;# 
  6671  0FE5                     	;# 
  6672  0FE6                     	;# 
  6673  0FE7                     	;# 
  6674  0FE8                     	;# 
  6675  0FE9                     	;# 
  6676  0FEA                     	;# 
  6677  0FEB                     	;# 
  6678  0FED                     	;# 
  6679  0FEE                     	;# 
  6680  0FEF                     	;# 
  6681  0000                     	;# 
  6682  0001                     	;# 
  6683  0002                     	;# 
  6684  0003                     	;# 
  6685  0004                     	;# 
  6686  0005                     	;# 
  6687  0006                     	;# 
  6688  0007                     	;# 
  6689  0008                     	;# 
  6690  0009                     	;# 
  6691  000A                     	;# 
  6692  000B                     	;# 
  6693  000C                     	;# 
  6694  000D                     	;# 
  6695  000E                     	;# 
  6696  000F                     	;# 
  6697  0010                     	;# 
  6698  0011                     	;# 
  6699  0012                     	;# 
  6700  0013                     	;# 
  6701  0014                     	;# 
  6702  0015                     	;# 
  6703  0016                     	;# 
  6704  0017                     	;# 
  6705  0018                     	;# 
  6706  0019                     	;# 
  6707  001A                     	;# 
  6708  001C                     	;# 
  6709  001C                     	;# 
  6710  001D                     	;# 
  6711  001D                     	;# 
  6712  001E                     	;# 
  6713  001F                     	;# 
  6714  008C                     	;# 
  6715  008C                     	;# 
  6716  008D                     	;# 
  6717  008E                     	;# 
  6718  008E                     	;# 
  6719  008F                     	;# 
  6720  0090                     	;# 
  6721  0090                     	;# 
  6722  0091                     	;# 
  6723  0093                     	;# 
  6724  0094                     	;# 
  6725  0095                     	;# 
  6726  0096                     	;# 
  6727  0097                     	;# 
  6728  0098                     	;# 
  6729  0099                     	;# 
  6730  009A                     	;# 
  6731  009B                     	;# 
  6732  009C                     	;# 
  6733  009D                     	;# 
  6734  009E                     	;# 
  6735  010C                     	;# 
  6736  010D                     	;# 
  6737  010E                     	;# 
  6738  010E                     	;# 
  6739  010F                     	;# 
  6740  0110                     	;# 
  6741  0110                     	;# 
  6742  0111                     	;# 
  6743  0112                     	;# 
  6744  0112                     	;# 
  6745  0113                     	;# 
  6746  0114                     	;# 
  6747  0114                     	;# 
  6748  0115                     	;# 
  6749  0116                     	;# 
  6750  0116                     	;# 
  6751  0117                     	;# 
  6752  0119                     	;# 
  6753  0119                     	;# 
  6754  0119                     	;# 
  6755  011A                     	;# 
  6756  011A                     	;# 
  6757  011A                     	;# 
  6758  011B                     	;# 
  6759  011B                     	;# 
  6760  011B                     	;# 
  6761  011B                     	;# 
  6762  011B                     	;# 
  6763  011C                     	;# 
  6764  011C                     	;# 
  6765  011C                     	;# 
  6766  011D                     	;# 
  6767  011D                     	;# 
  6768  011D                     	;# 
  6769  011E                     	;# 
  6770  011E                     	;# 
  6771  011E                     	;# 
  6772  011F                     	;# 
  6773  011F                     	;# 
  6774  011F                     	;# 
  6775  011F                     	;# 
  6776  011F                     	;# 
  6777  018C                     	;# 
  6778  018D                     	;# 
  6779  018E                     	;# 
  6780  018F                     	;# 
  6781  0190                     	;# 
  6782  0191                     	;# 
  6783  0192                     	;# 
  6784  0196                     	;# 
  6785  0197                     	;# 
  6786  0198                     	;# 
  6787  0199                     	;# 
  6788  019A                     	;# 
  6789  019B                     	;# 
  6790  019C                     	;# 
  6791  020C                     	;# 
  6792  020C                     	;# 
  6793  020D                     	;# 
  6794  020E                     	;# 
  6795  020F                     	;# 
  6796  020F                     	;# 
  6797  0210                     	;# 
  6798  0210                     	;# 
  6799  0211                     	;# 
  6800  0211                     	;# 
  6801  0212                     	;# 
  6802  0212                     	;# 
  6803  0213                     	;# 
  6804  0214                     	;# 
  6805  0215                     	;# 
  6806  0215                     	;# 
  6807  0216                     	;# 
  6808  0216                     	;# 
  6809  0217                     	;# 
  6810  0217                     	;# 
  6811  0218                     	;# 
  6812  0218                     	;# 
  6813  0219                     	;# 
  6814  021A                     	;# 
  6815  021B                     	;# 
  6816  021B                     	;# 
  6817  021C                     	;# 
  6818  021C                     	;# 
  6819  021D                     	;# 
  6820  021D                     	;# 
  6821  021E                     	;# 
  6822  021F                     	;# 
  6823  028C                     	;# 
  6824  028C                     	;# 
  6825  028D                     	;# 
  6826  028D                     	;# 
  6827  028E                     	;# 
  6828  028F                     	;# 
  6829  0290                     	;# 
  6830  0290                     	;# 
  6831  0291                     	;# 
  6832  0292                     	;# 
  6833  0292                     	;# 
  6834  0293                     	;# 
  6835  0293                     	;# 
  6836  0294                     	;# 
  6837  0295                     	;# 
  6838  0296                     	;# 
  6839  0296                     	;# 
  6840  0297                     	;# 
  6841  0298                     	;# 
  6842  0298                     	;# 
  6843  0299                     	;# 
  6844  0299                     	;# 
  6845  029A                     	;# 
  6846  029B                     	;# 
  6847  029C                     	;# 
  6848  029C                     	;# 
  6849  029D                     	;# 
  6850  030C                     	;# 
  6851  030C                     	;# 
  6852  030D                     	;# 
  6853  030E                     	;# 
  6854  030F                     	;# 
  6855  0310                     	;# 
  6856  0310                     	;# 
  6857  0311                     	;# 
  6858  0312                     	;# 
  6859  0313                     	;# 
  6860  0314                     	;# 
  6861  0314                     	;# 
  6862  0315                     	;# 
  6863  0316                     	;# 
  6864  0317                     	;# 
  6865  0318                     	;# 
  6866  0318                     	;# 
  6867  0319                     	;# 
  6868  031A                     	;# 
  6869  031B                     	;# 
  6870  031C                     	;# 
  6871  031C                     	;# 
  6872  031D                     	;# 
  6873  031E                     	;# 
  6874  031F                     	;# 
  6875  038C                     	;# 
  6876  038C                     	;# 
  6877  038D                     	;# 
  6878  038E                     	;# 
  6879  0390                     	;# 
  6880  0390                     	;# 
  6881  0391                     	;# 
  6882  0392                     	;# 
  6883  040C                     	;# 
  6884  040D                     	;# 
  6885  040E                     	;# 
  6886  040F                     	;# 
  6887  0410                     	;# 
  6888  0411                     	;# 
  6889  0416                     	;# 
  6890  0416                     	;# 
  6891  0417                     	;# 
  6892  0418                     	;# 
  6893  0418                     	;# 
  6894  0419                     	;# 
  6895  041A                     	;# 
  6896  041A                     	;# 
  6897  041B                     	;# 
  6898  041C                     	;# 
  6899  041C                     	;# 
  6900  041D                     	;# 
  6901  041E                     	;# 
  6902  041F                     	;# 
  6903  048C                     	;# 
  6904  048C                     	;# 
  6905  048D                     	;# 
  6906  048E                     	;# 
  6907  048F                     	;# 
  6908  048F                     	;# 
  6909  0490                     	;# 
  6910  0491                     	;# 
  6911  0492                     	;# 
  6912  0492                     	;# 
  6913  0493                     	;# 
  6914  0494                     	;# 
  6915  0495                     	;# 
  6916  0495                     	;# 
  6917  0496                     	;# 
  6918  0497                     	;# 
  6919  0498                     	;# 
  6920  0499                     	;# 
  6921  049A                     	;# 
  6922  049B                     	;# 
  6923  049C                     	;# 
  6924  049D                     	;# 
  6925  050C                     	;# 
  6926  050C                     	;# 
  6927  050D                     	;# 
  6928  050E                     	;# 
  6929  050F                     	;# 
  6930  050F                     	;# 
  6931  0510                     	;# 
  6932  0511                     	;# 
  6933  0512                     	;# 
  6934  0512                     	;# 
  6935  0513                     	;# 
  6936  0514                     	;# 
  6937  0515                     	;# 
  6938  0515                     	;# 
  6939  0516                     	;# 
  6940  0517                     	;# 
  6941  0518                     	;# 
  6942  0519                     	;# 
  6943  051A                     	;# 
  6944  051B                     	;# 
  6945  051C                     	;# 
  6946  051D                     	;# 
  6947  058C                     	;# 
  6948  058C                     	;# 
  6949  058D                     	;# 
  6950  058E                     	;# 
  6951  058F                     	;# 
  6952  058F                     	;# 
  6953  0590                     	;# 
  6954  0591                     	;# 
  6955  0592                     	;# 
  6956  0593                     	;# 
  6957  060C                     	;# 
  6958  060D                     	;# 
  6959  060E                     	;# 
  6960  060F                     	;# 
  6961  0610                     	;# 
  6962  0611                     	;# 
  6963  0612                     	;# 
  6964  0613                     	;# 
  6965  0614                     	;# 
  6966  0616                     	;# 
  6967  0617                     	;# 
  6968  0618                     	;# 
  6969  0619                     	;# 
  6970  061A                     	;# 
  6971  061B                     	;# 
  6972  061C                     	;# 
  6973  061D                     	;# 
  6974  061E                     	;# 
  6975  068C                     	;# 
  6976  068D                     	;# 
  6977  068E                     	;# 
  6978  068F                     	;# 
  6979  0690                     	;# 
  6980  0691                     	;# 
  6981  0692                     	;# 
  6982  0693                     	;# 
  6983  0694                     	;# 
  6984  070C                     	;# 
  6985  070D                     	;# 
  6986  070E                     	;# 
  6987  070F                     	;# 
  6988  0710                     	;# 
  6989  0711                     	;# 
  6990  0712                     	;# 
  6991  0713                     	;# 
  6992  0714                     	;# 
  6993  0716                     	;# 
  6994  0717                     	;# 
  6995  0718                     	;# 
  6996  0719                     	;# 
  6997  071A                     	;# 
  6998  071B                     	;# 
  6999  071C                     	;# 
  7000  071D                     	;# 
  7001  071E                     	;# 
  7002  0796                     	;# 
  7003  0797                     	;# 
  7004  0798                     	;# 
  7005  0799                     	;# 
  7006  079A                     	;# 
  7007  079B                     	;# 
  7008  080C                     	;# 
  7009  080D                     	;# 
  7010  080E                     	;# 
  7011  080F                     	;# 
  7012  0810                     	;# 
  7013  0811                     	;# 
  7014  0812                     	;# 
  7015  0813                     	;# 
  7016  0814                     	;# 
  7017  081A                     	;# 
  7018  081B                     	;# 
  7019  081C                     	;# 
  7020  081D                     	;# 
  7021  081E                     	;# 
  7022  081F                     	;# 
  7023  088C                     	;# 
  7024  088D                     	;# 
  7025  088E                     	;# 
  7026  088F                     	;# 
  7027  0890                     	;# 
  7028  0891                     	;# 
  7029  0892                     	;# 
  7030  0893                     	;# 
  7031  0895                     	;# 
  7032  0896                     	;# 
  7033  0897                     	;# 
  7034  0898                     	;# 
  7035  0899                     	;# 
  7036  089A                     	;# 
  7037  089B                     	;# 
  7038  090C                     	;# 
  7039  090E                     	;# 
  7040  090F                     	;# 
  7041  091F                     	;# 
  7042  091F                     	;# 
  7043  098F                     	;# 
  7044  098F                     	;# 
  7045  0990                     	;# 
  7046  0991                     	;# 
  7047  0992                     	;# 
  7048  0993                     	;# 
  7049  0994                     	;# 
  7050  0995                     	;# 
  7051  0996                     	;# 
  7052  0997                     	;# 
  7053  0E0F                     	;# 
  7054  0E10                     	;# 
  7055  0E11                     	;# 
  7056  0E12                     	;# 
  7057  0E13                     	;# 
  7058  0E14                     	;# 
  7059  0E15                     	;# 
  7060  0E16                     	;# 
  7061  0E17                     	;# 
  7062  0E18                     	;# 
  7063  0E19                     	;# 
  7064  0E1A                     	;# 
  7065  0E1B                     	;# 
  7066  0E1C                     	;# 
  7067  0E1D                     	;# 
  7068  0E1E                     	;# 
  7069  0E1F                     	;# 
  7070  0E20                     	;# 
  7071  0E21                     	;# 
  7072  0E22                     	;# 
  7073  0E23                     	;# 
  7074  0E24                     	;# 
  7075  0E25                     	;# 
  7076  0E26                     	;# 
  7077  0E27                     	;# 
  7078  0E28                     	;# 
  7079  0E29                     	;# 
  7080  0E2A                     	;# 
  7081  0E2B                     	;# 
  7082  0E2C                     	;# 
  7083  0E2D                     	;# 
  7084  0E2E                     	;# 
  7085  0E2F                     	;# 
  7086  0E30                     	;# 
  7087  0E31                     	;# 
  7088  0E32                     	;# 
  7089  0E33                     	;# 
  7090  0E34                     	;# 
  7091  0E35                     	;# 
  7092  0E36                     	;# 
  7093  0E37                     	;# 
  7094  0E8F                     	;# 
  7095  0E90                     	;# 
  7096  0E91                     	;# 
  7097  0E92                     	;# 
  7098  0E93                     	;# 
  7099  0E94                     	;# 
  7100  0E95                     	;# 
  7101  0E96                     	;# 
  7102  0E97                     	;# 
  7103  0E9C                     	;# 
  7104  0E9D                     	;# 
  7105  0E9E                     	;# 
  7106  0EA1                     	;# 
  7107  0EA2                     	;# 
  7108  0EA3                     	;# 
  7109  0EA4                     	;# 
  7110  0EA5                     	;# 
  7111  0EA9                     	;# 
  7112  0EAA                     	;# 
  7113  0EAB                     	;# 
  7114  0EAC                     	;# 
  7115  0EB1                     	;# 
  7116  0EB2                     	;# 
  7117  0EB3                     	;# 
  7118  0EB8                     	;# 
  7119  0EB9                     	;# 
  7120  0EBA                     	;# 
  7121  0EBB                     	;# 
  7122  0EBC                     	;# 
  7123  0EBD                     	;# 
  7124  0EBE                     	;# 
  7125  0EC3                     	;# 
  7126  0EC5                     	;# 
  7127  0EC6                     	;# 
  7128  0EC7                     	;# 
  7129  0EC8                     	;# 
  7130  0EC9                     	;# 
  7131  0ECA                     	;# 
  7132  0ECB                     	;# 
  7133  0ECC                     	;# 
  7134  0F10                     	;# 
  7135  0F11                     	;# 
  7136  0F12                     	;# 
  7137  0F13                     	;# 
  7138  0F14                     	;# 
  7139  0F15                     	;# 
  7140  0F16                     	;# 
  7141  0F17                     	;# 
  7142  0F18                     	;# 
  7143  0F19                     	;# 
  7144  0F1A                     	;# 
  7145  0F1B                     	;# 
  7146  0F1C                     	;# 
  7147  0F1D                     	;# 
  7148  0F1E                     	;# 
  7149  0F1F                     	;# 
  7150  0F20                     	;# 
  7151  0F21                     	;# 
  7152  0F22                     	;# 
  7153  0F23                     	;# 
  7154  0F24                     	;# 
  7155  0F25                     	;# 
  7156  0F26                     	;# 
  7157  0F27                     	;# 
  7158  0F28                     	;# 
  7159  0F29                     	;# 
  7160  0F2A                     	;# 
  7161  0F2B                     	;# 
  7162  0F2C                     	;# 
  7163  0F2D                     	;# 
  7164  0F2E                     	;# 
  7165  0F2F                     	;# 
  7166  0F30                     	;# 
  7167  0F31                     	;# 
  7168  0F32                     	;# 
  7169  0F38                     	;# 
  7170  0F39                     	;# 
  7171  0F3A                     	;# 
  7172  0F3B                     	;# 
  7173  0F3C                     	;# 
  7174  0F3D                     	;# 
  7175  0F3E                     	;# 
  7176  0F3F                     	;# 
  7177  0F40                     	;# 
  7178  0F41                     	;# 
  7179  0F43                     	;# 
  7180  0F44                     	;# 
  7181  0F45                     	;# 
  7182  0F46                     	;# 
  7183  0F47                     	;# 
  7184  0F48                     	;# 
  7185  0F49                     	;# 
  7186  0F4A                     	;# 
  7187  0F4B                     	;# 
  7188  0F4C                     	;# 
  7189  0F4E                     	;# 
  7190  0F4F                     	;# 
  7191  0F50                     	;# 
  7192  0F51                     	;# 
  7193  0F52                     	;# 
  7194  0F53                     	;# 
  7195  0F54                     	;# 
  7196  0F55                     	;# 
  7197  0F56                     	;# 
  7198  0F57                     	;# 
  7199  0F59                     	;# 
  7200  0F5A                     	;# 
  7201  0F5B                     	;# 
  7202  0F5C                     	;# 
  7203  0F5D                     	;# 
  7204  0F61                     	;# 
  7205  0F62                     	;# 
  7206  0F64                     	;# 
  7207  0F65                     	;# 
  7208  0F66                     	;# 
  7209  0F67                     	;# 
  7210  0F68                     	;# 
  7211  0F69                     	;# 
  7212  0F6A                     	;# 
  7213  0F6B                     	;# 
  7214  0F6C                     	;# 
  7215  0F6D                     	;# 
  7216  0FE4                     	;# 
  7217  0FE5                     	;# 
  7218  0FE6                     	;# 
  7219  0FE7                     	;# 
  7220  0FE8                     	;# 
  7221  0FE9                     	;# 
  7222  0FEA                     	;# 
  7223  0FEB                     	;# 
  7224  0FED                     	;# 
  7225  0FEE                     	;# 
  7226  0FEF                     	;# 
  7227  0000                     	;# 
  7228  0001                     	;# 
  7229  0002                     	;# 
  7230  0003                     	;# 
  7231  0004                     	;# 
  7232  0005                     	;# 
  7233  0006                     	;# 
  7234  0007                     	;# 
  7235  0008                     	;# 
  7236  0009                     	;# 
  7237  000A                     	;# 
  7238  000B                     	;# 
  7239  000C                     	;# 
  7240  000D                     	;# 
  7241  000E                     	;# 
  7242  000F                     	;# 
  7243  0010                     	;# 
  7244  0011                     	;# 
  7245  0012                     	;# 
  7246  0013                     	;# 
  7247  0014                     	;# 
  7248  0015                     	;# 
  7249  0016                     	;# 
  7250  0017                     	;# 
  7251  0018                     	;# 
  7252  0019                     	;# 
  7253  001A                     	;# 
  7254  001C                     	;# 
  7255  001C                     	;# 
  7256  001D                     	;# 
  7257  001D                     	;# 
  7258  001E                     	;# 
  7259  001F                     	;# 
  7260  008C                     	;# 
  7261  008C                     	;# 
  7262  008D                     	;# 
  7263  008E                     	;# 
  7264  008E                     	;# 
  7265  008F                     	;# 
  7266  0090                     	;# 
  7267  0090                     	;# 
  7268  0091                     	;# 
  7269  0093                     	;# 
  7270  0094                     	;# 
  7271  0095                     	;# 
  7272  0096                     	;# 
  7273  0097                     	;# 
  7274  0098                     	;# 
  7275  0099                     	;# 
  7276  009A                     	;# 
  7277  009B                     	;# 
  7278  009C                     	;# 
  7279  009D                     	;# 
  7280  009E                     	;# 
  7281  010C                     	;# 
  7282  010D                     	;# 
  7283  010E                     	;# 
  7284  010E                     	;# 
  7285  010F                     	;# 
  7286  0110                     	;# 
  7287  0110                     	;# 
  7288  0111                     	;# 
  7289  0112                     	;# 
  7290  0112                     	;# 
  7291  0113                     	;# 
  7292  0114                     	;# 
  7293  0114                     	;# 
  7294  0115                     	;# 
  7295  0116                     	;# 
  7296  0116                     	;# 
  7297  0117                     	;# 
  7298  0119                     	;# 
  7299  0119                     	;# 
  7300  0119                     	;# 
  7301  011A                     	;# 
  7302  011A                     	;# 
  7303  011A                     	;# 
  7304  011B                     	;# 
  7305  011B                     	;# 
  7306  011B                     	;# 
  7307  011B                     	;# 
  7308  011B                     	;# 
  7309  011C                     	;# 
  7310  011C                     	;# 
  7311  011C                     	;# 
  7312  011D                     	;# 
  7313  011D                     	;# 
  7314  011D                     	;# 
  7315  011E                     	;# 
  7316  011E                     	;# 
  7317  011E                     	;# 
  7318  011F                     	;# 
  7319  011F                     	;# 
  7320  011F                     	;# 
  7321  011F                     	;# 
  7322  011F                     	;# 
  7323  018C                     	;# 
  7324  018D                     	;# 
  7325  018E                     	;# 
  7326  018F                     	;# 
  7327  0190                     	;# 
  7328  0191                     	;# 
  7329  0192                     	;# 
  7330  0196                     	;# 
  7331  0197                     	;# 
  7332  0198                     	;# 
  7333  0199                     	;# 
  7334  019A                     	;# 
  7335  019B                     	;# 
  7336  019C                     	;# 
  7337  020C                     	;# 
  7338  020C                     	;# 
  7339  020D                     	;# 
  7340  020E                     	;# 
  7341  020F                     	;# 
  7342  020F                     	;# 
  7343  0210                     	;# 
  7344  0210                     	;# 
  7345  0211                     	;# 
  7346  0211                     	;# 
  7347  0212                     	;# 
  7348  0212                     	;# 
  7349  0213                     	;# 
  7350  0214                     	;# 
  7351  0215                     	;# 
  7352  0215                     	;# 
  7353  0216                     	;# 
  7354  0216                     	;# 
  7355  0217                     	;# 
  7356  0217                     	;# 
  7357  0218                     	;# 
  7358  0218                     	;# 
  7359  0219                     	;# 
  7360  021A                     	;# 
  7361  021B                     	;# 
  7362  021B                     	;# 
  7363  021C                     	;# 
  7364  021C                     	;# 
  7365  021D                     	;# 
  7366  021D                     	;# 
  7367  021E                     	;# 
  7368  021F                     	;# 
  7369  028C                     	;# 
  7370  028C                     	;# 
  7371  028D                     	;# 
  7372  028D                     	;# 
  7373  028E                     	;# 
  7374  028F                     	;# 
  7375  0290                     	;# 
  7376  0290                     	;# 
  7377  0291                     	;# 
  7378  0292                     	;# 
  7379  0292                     	;# 
  7380  0293                     	;# 
  7381  0293                     	;# 
  7382  0294                     	;# 
  7383  0295                     	;# 
  7384  0296                     	;# 
  7385  0296                     	;# 
  7386  0297                     	;# 
  7387  0298                     	;# 
  7388  0298                     	;# 
  7389  0299                     	;# 
  7390  0299                     	;# 
  7391  029A                     	;# 
  7392  029B                     	;# 
  7393  029C                     	;# 
  7394  029C                     	;# 
  7395  029D                     	;# 
  7396  030C                     	;# 
  7397  030C                     	;# 
  7398  030D                     	;# 
  7399  030E                     	;# 
  7400  030F                     	;# 
  7401  0310                     	;# 
  7402  0310                     	;# 
  7403  0311                     	;# 
  7404  0312                     	;# 
  7405  0313                     	;# 
  7406  0314                     	;# 
  7407  0314                     	;# 
  7408  0315                     	;# 
  7409  0316                     	;# 
  7410  0317                     	;# 
  7411  0318                     	;# 
  7412  0318                     	;# 
  7413  0319                     	;# 
  7414  031A                     	;# 
  7415  031B                     	;# 
  7416  031C                     	;# 
  7417  031C                     	;# 
  7418  031D                     	;# 
  7419  031E                     	;# 
  7420  031F                     	;# 
  7421  038C                     	;# 
  7422  038C                     	;# 
  7423  038D                     	;# 
  7424  038E                     	;# 
  7425  0390                     	;# 
  7426  0390                     	;# 
  7427  0391                     	;# 
  7428  0392                     	;# 
  7429  040C                     	;# 
  7430  040D                     	;# 
  7431  040E                     	;# 
  7432  040F                     	;# 
  7433  0410                     	;# 
  7434  0411                     	;# 
  7435  0416                     	;# 
  7436  0416                     	;# 
  7437  0417                     	;# 
  7438  0418                     	;# 
  7439  0418                     	;# 
  7440  0419                     	;# 
  7441  041A                     	;# 
  7442  041A                     	;# 
  7443  041B                     	;# 
  7444  041C                     	;# 
  7445  041C                     	;# 
  7446  041D                     	;# 
  7447  041E                     	;# 
  7448  041F                     	;# 
  7449  048C                     	;# 
  7450  048C                     	;# 
  7451  048D                     	;# 
  7452  048E                     	;# 
  7453  048F                     	;# 
  7454  048F                     	;# 
  7455  0490                     	;# 
  7456  0491                     	;# 
  7457  0492                     	;# 
  7458  0492                     	;# 
  7459  0493                     	;# 
  7460  0494                     	;# 
  7461  0495                     	;# 
  7462  0495                     	;# 
  7463  0496                     	;# 
  7464  0497                     	;# 
  7465  0498                     	;# 
  7466  0499                     	;# 
  7467  049A                     	;# 
  7468  049B                     	;# 
  7469  049C                     	;# 
  7470  049D                     	;# 
  7471  050C                     	;# 
  7472  050C                     	;# 
  7473  050D                     	;# 
  7474  050E                     	;# 
  7475  050F                     	;# 
  7476  050F                     	;# 
  7477  0510                     	;# 
  7478  0511                     	;# 
  7479  0512                     	;# 
  7480  0512                     	;# 
  7481  0513                     	;# 
  7482  0514                     	;# 
  7483  0515                     	;# 
  7484  0515                     	;# 
  7485  0516                     	;# 
  7486  0517                     	;# 
  7487  0518                     	;# 
  7488  0519                     	;# 
  7489  051A                     	;# 
  7490  051B                     	;# 
  7491  051C                     	;# 
  7492  051D                     	;# 
  7493  058C                     	;# 
  7494  058C                     	;# 
  7495  058D                     	;# 
  7496  058E                     	;# 
  7497  058F                     	;# 
  7498  058F                     	;# 
  7499  0590                     	;# 
  7500  0591                     	;# 
  7501  0592                     	;# 
  7502  0593                     	;# 
  7503  060C                     	;# 
  7504  060D                     	;# 
  7505  060E                     	;# 
  7506  060F                     	;# 
  7507  0610                     	;# 
  7508  0611                     	;# 
  7509  0612                     	;# 
  7510  0613                     	;# 
  7511  0614                     	;# 
  7512  0616                     	;# 
  7513  0617                     	;# 
  7514  0618                     	;# 
  7515  0619                     	;# 
  7516  061A                     	;# 
  7517  061B                     	;# 
  7518  061C                     	;# 
  7519  061D                     	;# 
  7520  061E                     	;# 
  7521  068C                     	;# 
  7522  068D                     	;# 
  7523  068E                     	;# 
  7524  068F                     	;# 
  7525  0690                     	;# 
  7526  0691                     	;# 
  7527  0692                     	;# 
  7528  0693                     	;# 
  7529  0694                     	;# 
  7530  070C                     	;# 
  7531  070D                     	;# 
  7532  070E                     	;# 
  7533  070F                     	;# 
  7534  0710                     	;# 
  7535  0711                     	;# 
  7536  0712                     	;# 
  7537  0713                     	;# 
  7538  0714                     	;# 
  7539  0716                     	;# 
  7540  0717                     	;# 
  7541  0718                     	;# 
  7542  0719                     	;# 
  7543  071A                     	;# 
  7544  071B                     	;# 
  7545  071C                     	;# 
  7546  071D                     	;# 
  7547  071E                     	;# 
  7548  0796                     	;# 
  7549  0797                     	;# 
  7550  0798                     	;# 
  7551  0799                     	;# 
  7552  079A                     	;# 
  7553  079B                     	;# 
  7554  080C                     	;# 
  7555  080D                     	;# 
  7556  080E                     	;# 
  7557  080F                     	;# 
  7558  0810                     	;# 
  7559  0811                     	;# 
  7560  0812                     	;# 
  7561  0813                     	;# 
  7562  0814                     	;# 
  7563  081A                     	;# 
  7564  081B                     	;# 
  7565  081C                     	;# 
  7566  081D                     	;# 
  7567  081E                     	;# 
  7568  081F                     	;# 
  7569  088C                     	;# 
  7570  088D                     	;# 
  7571  088E                     	;# 
  7572  088F                     	;# 
  7573  0890                     	;# 
  7574  0891                     	;# 
  7575  0892                     	;# 
  7576  0893                     	;# 
  7577  0895                     	;# 
  7578  0896                     	;# 
  7579  0897                     	;# 
  7580  0898                     	;# 
  7581  0899                     	;# 
  7582  089A                     	;# 
  7583  089B                     	;# 
  7584  090C                     	;# 
  7585  090E                     	;# 
  7586  090F                     	;# 
  7587  091F                     	;# 
  7588  091F                     	;# 
  7589  098F                     	;# 
  7590  098F                     	;# 
  7591  0990                     	;# 
  7592  0991                     	;# 
  7593  0992                     	;# 
  7594  0993                     	;# 
  7595  0994                     	;# 
  7596  0995                     	;# 
  7597  0996                     	;# 
  7598  0997                     	;# 
  7599  0E0F                     	;# 
  7600  0E10                     	;# 
  7601  0E11                     	;# 
  7602  0E12                     	;# 
  7603  0E13                     	;# 
  7604  0E14                     	;# 
  7605  0E15                     	;# 
  7606  0E16                     	;# 
  7607  0E17                     	;# 
  7608  0E18                     	;# 
  7609  0E19                     	;# 
  7610  0E1A                     	;# 
  7611  0E1B                     	;# 
  7612  0E1C                     	;# 
  7613  0E1D                     	;# 
  7614  0E1E                     	;# 
  7615  0E1F                     	;# 
  7616  0E20                     	;# 
  7617  0E21                     	;# 
  7618  0E22                     	;# 
  7619  0E23                     	;# 
  7620  0E24                     	;# 
  7621  0E25                     	;# 
  7622  0E26                     	;# 
  7623  0E27                     	;# 
  7624  0E28                     	;# 
  7625  0E29                     	;# 
  7626  0E2A                     	;# 
  7627  0E2B                     	;# 
  7628  0E2C                     	;# 
  7629  0E2D                     	;# 
  7630  0E2E                     	;# 
  7631  0E2F                     	;# 
  7632  0E30                     	;# 
  7633  0E31                     	;# 
  7634  0E32                     	;# 
  7635  0E33                     	;# 
  7636  0E34                     	;# 
  7637  0E35                     	;# 
  7638  0E36                     	;# 
  7639  0E37                     	;# 
  7640  0E8F                     	;# 
  7641  0E90                     	;# 
  7642  0E91                     	;# 
  7643  0E92                     	;# 
  7644  0E93                     	;# 
  7645  0E94                     	;# 
  7646  0E95                     	;# 
  7647  0E96                     	;# 
  7648  0E97                     	;# 
  7649  0E9C                     	;# 
  7650  0E9D                     	;# 
  7651  0E9E                     	;# 
  7652  0EA1                     	;# 
  7653  0EA2                     	;# 
  7654  0EA3                     	;# 
  7655  0EA4                     	;# 
  7656  0EA5                     	;# 
  7657  0EA9                     	;# 
  7658  0EAA                     	;# 
  7659  0EAB                     	;# 
  7660  0EAC                     	;# 
  7661  0EB1                     	;# 
  7662  0EB2                     	;# 
  7663  0EB3                     	;# 
  7664  0EB8                     	;# 
  7665  0EB9                     	;# 
  7666  0EBA                     	;# 
  7667  0EBB                     	;# 
  7668  0EBC                     	;# 
  7669  0EBD                     	;# 
  7670  0EBE                     	;# 
  7671  0EC3                     	;# 
  7672  0EC5                     	;# 
  7673  0EC6                     	;# 
  7674  0EC7                     	;# 
  7675  0EC8                     	;# 
  7676  0EC9                     	;# 
  7677  0ECA                     	;# 
  7678  0ECB                     	;# 
  7679  0ECC                     	;# 
  7680  0F10                     	;# 
  7681  0F11                     	;# 
  7682  0F12                     	;# 
  7683  0F13                     	;# 
  7684  0F14                     	;# 
  7685  0F15                     	;# 
  7686  0F16                     	;# 
  7687  0F17                     	;# 
  7688  0F18                     	;# 
  7689  0F19                     	;# 
  7690  0F1A                     	;# 
  7691  0F1B                     	;# 
  7692  0F1C                     	;# 
  7693  0F1D                     	;# 
  7694  0F1E                     	;# 
  7695  0F1F                     	;# 
  7696  0F20                     	;# 
  7697  0F21                     	;# 
  7698  0F22                     	;# 
  7699  0F23                     	;# 
  7700  0F24                     	;# 
  7701  0F25                     	;# 
  7702  0F26                     	;# 
  7703  0F27                     	;# 
  7704  0F28                     	;# 
  7705  0F29                     	;# 
  7706  0F2A                     	;# 
  7707  0F2B                     	;# 
  7708  0F2C                     	;# 
  7709  0F2D                     	;# 
  7710  0F2E                     	;# 
  7711  0F2F                     	;# 
  7712  0F30                     	;# 
  7713  0F31                     	;# 
  7714  0F32                     	;# 
  7715  0F38                     	;# 
  7716  0F39                     	;# 
  7717  0F3A                     	;# 
  7718  0F3B                     	;# 
  7719  0F3C                     	;# 
  7720  0F3D                     	;# 
  7721  0F3E                     	;# 
  7722  0F3F                     	;# 
  7723  0F40                     	;# 
  7724  0F41                     	;# 
  7725  0F43                     	;# 
  7726  0F44                     	;# 
  7727  0F45                     	;# 
  7728  0F46                     	;# 
  7729  0F47                     	;# 
  7730  0F48                     	;# 
  7731  0F49                     	;# 
  7732  0F4A                     	;# 
  7733  0F4B                     	;# 
  7734  0F4C                     	;# 
  7735  0F4E                     	;# 
  7736  0F4F                     	;# 
  7737  0F50                     	;# 
  7738  0F51                     	;# 
  7739  0F52                     	;# 
  7740  0F53                     	;# 
  7741  0F54                     	;# 
  7742  0F55                     	;# 
  7743  0F56                     	;# 
  7744  0F57                     	;# 
  7745  0F59                     	;# 
  7746  0F5A                     	;# 
  7747  0F5B                     	;# 
  7748  0F5C                     	;# 
  7749  0F5D                     	;# 
  7750  0F61                     	;# 
  7751  0F62                     	;# 
  7752  0F64                     	;# 
  7753  0F65                     	;# 
  7754  0F66                     	;# 
  7755  0F67                     	;# 
  7756  0F68                     	;# 
  7757  0F69                     	;# 
  7758  0F6A                     	;# 
  7759  0F6B                     	;# 
  7760  0F6C                     	;# 
  7761  0F6D                     	;# 
  7762  0FE4                     	;# 
  7763  0FE5                     	;# 
  7764  0FE6                     	;# 
  7765  0FE7                     	;# 
  7766  0FE8                     	;# 
  7767  0FE9                     	;# 
  7768  0FEA                     	;# 
  7769  0FEB                     	;# 
  7770  0FED                     	;# 
  7771  0FEE                     	;# 
  7772  0FEF                     	;# 
  7773  0000                     	;# 
  7774  0001                     	;# 
  7775  0002                     	;# 
  7776  0003                     	;# 
  7777  0004                     	;# 
  7778  0005                     	;# 
  7779  0006                     	;# 
  7780  0007                     	;# 
  7781  0008                     	;# 
  7782  0009                     	;# 
  7783  000A                     	;# 
  7784  000B                     	;# 
  7785  000C                     	;# 
  7786  000D                     	;# 
  7787  000E                     	;# 
  7788  000F                     	;# 
  7789  0010                     	;# 
  7790  0011                     	;# 
  7791  0012                     	;# 
  7792  0013                     	;# 
  7793  0014                     	;# 
  7794  0015                     	;# 
  7795  0016                     	;# 
  7796  0017                     	;# 
  7797  0018                     	;# 
  7798  0019                     	;# 
  7799  001A                     	;# 
  7800  001C                     	;# 
  7801  001C                     	;# 
  7802  001D                     	;# 
  7803  001D                     	;# 
  7804  001E                     	;# 
  7805  001F                     	;# 
  7806  008C                     	;# 
  7807  008C                     	;# 
  7808  008D                     	;# 
  7809  008E                     	;# 
  7810  008E                     	;# 
  7811  008F                     	;# 
  7812  0090                     	;# 
  7813  0090                     	;# 
  7814  0091                     	;# 
  7815  0093                     	;# 
  7816  0094                     	;# 
  7817  0095                     	;# 
  7818  0096                     	;# 
  7819  0097                     	;# 
  7820  0098                     	;# 
  7821  0099                     	;# 
  7822  009A                     	;# 
  7823  009B                     	;# 
  7824  009C                     	;# 
  7825  009D                     	;# 
  7826  009E                     	;# 
  7827  010C                     	;# 
  7828  010D                     	;# 
  7829  010E                     	;# 
  7830  010E                     	;# 
  7831  010F                     	;# 
  7832  0110                     	;# 
  7833  0110                     	;# 
  7834  0111                     	;# 
  7835  0112                     	;# 
  7836  0112                     	;# 
  7837  0113                     	;# 
  7838  0114                     	;# 
  7839  0114                     	;# 
  7840  0115                     	;# 
  7841  0116                     	;# 
  7842  0116                     	;# 
  7843  0117                     	;# 
  7844  0119                     	;# 
  7845  0119                     	;# 
  7846  0119                     	;# 
  7847  011A                     	;# 
  7848  011A                     	;# 
  7849  011A                     	;# 
  7850  011B                     	;# 
  7851  011B                     	;# 
  7852  011B                     	;# 
  7853  011B                     	;# 
  7854  011B                     	;# 
  7855  011C                     	;# 
  7856  011C                     	;# 
  7857  011C                     	;# 
  7858  011D                     	;# 
  7859  011D                     	;# 
  7860  011D                     	;# 
  7861  011E                     	;# 
  7862  011E                     	;# 
  7863  011E                     	;# 
  7864  011F                     	;# 
  7865  011F                     	;# 
  7866  011F                     	;# 
  7867  011F                     	;# 
  7868  011F                     	;# 
  7869  018C                     	;# 
  7870  018D                     	;# 
  7871  018E                     	;# 
  7872  018F                     	;# 
  7873  0190                     	;# 
  7874  0191                     	;# 
  7875  0192                     	;# 
  7876  0196                     	;# 
  7877  0197                     	;# 
  7878  0198                     	;# 
  7879  0199                     	;# 
  7880  019A                     	;# 
  7881  019B                     	;# 
  7882  019C                     	;# 
  7883  020C                     	;# 
  7884  020C                     	;# 
  7885  020D                     	;# 
  7886  020E                     	;# 
  7887  020F                     	;# 
  7888  020F                     	;# 
  7889  0210                     	;# 
  7890  0210                     	;# 
  7891  0211                     	;# 
  7892  0211                     	;# 
  7893  0212                     	;# 
  7894  0212                     	;# 
  7895  0213                     	;# 
  7896  0214                     	;# 
  7897  0215                     	;# 
  7898  0215                     	;# 
  7899  0216                     	;# 
  7900  0216                     	;# 
  7901  0217                     	;# 
  7902  0217                     	;# 
  7903  0218                     	;# 
  7904  0218                     	;# 
  7905  0219                     	;# 
  7906  021A                     	;# 
  7907  021B                     	;# 
  7908  021B                     	;# 
  7909  021C                     	;# 
  7910  021C                     	;# 
  7911  021D                     	;# 
  7912  021D                     	;# 
  7913  021E                     	;# 
  7914  021F                     	;# 
  7915  028C                     	;# 
  7916  028C                     	;# 
  7917  028D                     	;# 
  7918  028D                     	;# 
  7919  028E                     	;# 
  7920  028F                     	;# 
  7921  0290                     	;# 
  7922  0290                     	;# 
  7923  0291                     	;# 
  7924  0292                     	;# 
  7925  0292                     	;# 
  7926  0293                     	;# 
  7927  0293                     	;# 
  7928  0294                     	;# 
  7929  0295                     	;# 
  7930  0296                     	;# 
  7931  0296                     	;# 
  7932  0297                     	;# 
  7933  0298                     	;# 
  7934  0298                     	;# 
  7935  0299                     	;# 
  7936  0299                     	;# 
  7937  029A                     	;# 
  7938  029B                     	;# 
  7939  029C                     	;# 
  7940  029C                     	;# 
  7941  029D                     	;# 
  7942  030C                     	;# 
  7943  030C                     	;# 
  7944  030D                     	;# 
  7945  030E                     	;# 
  7946  030F                     	;# 
  7947  0310                     	;# 
  7948  0310                     	;# 
  7949  0311                     	;# 
  7950  0312                     	;# 
  7951  0313                     	;# 
  7952  0314                     	;# 
  7953  0314                     	;# 
  7954  0315                     	;# 
  7955  0316                     	;# 
  7956  0317                     	;# 
  7957  0318                     	;# 
  7958  0318                     	;# 
  7959  0319                     	;# 
  7960  031A                     	;# 
  7961  031B                     	;# 
  7962  031C                     	;# 
  7963  031C                     	;# 
  7964  031D                     	;# 
  7965  031E                     	;# 
  7966  031F                     	;# 
  7967  038C                     	;# 
  7968  038C                     	;# 
  7969  038D                     	;# 
  7970  038E                     	;# 
  7971  0390                     	;# 
  7972  0390                     	;# 
  7973  0391                     	;# 
  7974  0392                     	;# 
  7975  040C                     	;# 
  7976  040D                     	;# 
  7977  040E                     	;# 
  7978  040F                     	;# 
  7979  0410                     	;# 
  7980  0411                     	;# 
  7981  0416                     	;# 
  7982  0416                     	;# 
  7983  0417                     	;# 
  7984  0418                     	;# 
  7985  0418                     	;# 
  7986  0419                     	;# 
  7987  041A                     	;# 
  7988  041A                     	;# 
  7989  041B                     	;# 
  7990  041C                     	;# 
  7991  041C                     	;# 
  7992  041D                     	;# 
  7993  041E                     	;# 
  7994  041F                     	;# 
  7995  048C                     	;# 
  7996  048C                     	;# 
  7997  048D                     	;# 
  7998  048E                     	;# 
  7999  048F                     	;# 
  8000  048F                     	;# 
  8001  0490                     	;# 
  8002  0491                     	;# 
  8003  0492                     	;# 
  8004  0492                     	;# 
  8005  0493                     	;# 
  8006  0494                     	;# 
  8007  0495                     	;# 
  8008  0495                     	;# 
  8009  0496                     	;# 
  8010  0497                     	;# 
  8011  0498                     	;# 
  8012  0499                     	;# 
  8013  049A                     	;# 
  8014  049B                     	;# 
  8015  049C                     	;# 
  8016  049D                     	;# 
  8017  050C                     	;# 
  8018  050C                     	;# 
  8019  050D                     	;# 
  8020  050E                     	;# 
  8021  050F                     	;# 
  8022  050F                     	;# 
  8023  0510                     	;# 
  8024  0511                     	;# 
  8025  0512                     	;# 
  8026  0512                     	;# 
  8027  0513                     	;# 
  8028  0514                     	;# 
  8029  0515                     	;# 
  8030  0515                     	;# 
  8031  0516                     	;# 
  8032  0517                     	;# 
  8033  0518                     	;# 
  8034  0519                     	;# 
  8035  051A                     	;# 
  8036  051B                     	;# 
  8037  051C                     	;# 
  8038  051D                     	;# 
  8039  058C                     	;# 
  8040  058C                     	;# 
  8041  058D                     	;# 
  8042  058E                     	;# 
  8043  058F                     	;# 
  8044  058F                     	;# 
  8045  0590                     	;# 
  8046  0591                     	;# 
  8047  0592                     	;# 
  8048  0593                     	;# 
  8049  060C                     	;# 
  8050  060D                     	;# 
  8051  060E                     	;# 
  8052  060F                     	;# 
  8053  0610                     	;# 
  8054  0611                     	;# 
  8055  0612                     	;# 
  8056  0613                     	;# 
  8057  0614                     	;# 
  8058  0616                     	;# 
  8059  0617                     	;# 
  8060  0618                     	;# 
  8061  0619                     	;# 
  8062  061A                     	;# 
  8063  061B                     	;# 
  8064  061C                     	;# 
  8065  061D                     	;# 
  8066  061E                     	;# 
  8067  068C                     	;# 
  8068  068D                     	;# 
  8069  068E                     	;# 
  8070  068F                     	;# 
  8071  0690                     	;# 
  8072  0691                     	;# 
  8073  0692                     	;# 
  8074  0693                     	;# 
  8075  0694                     	;# 
  8076  070C                     	;# 
  8077  070D                     	;# 
  8078  070E                     	;# 
  8079  070F                     	;# 
  8080  0710                     	;# 
  8081  0711                     	;# 
  8082  0712                     	;# 
  8083  0713                     	;# 
  8084  0714                     	;# 
  8085  0716                     	;# 
  8086  0717                     	;# 
  8087  0718                     	;# 
  8088  0719                     	;# 
  8089  071A                     	;# 
  8090  071B                     	;# 
  8091  071C                     	;# 
  8092  071D                     	;# 
  8093  071E                     	;# 
  8094  0796                     	;# 
  8095  0797                     	;# 
  8096  0798                     	;# 
  8097  0799                     	;# 
  8098  079A                     	;# 
  8099  079B                     	;# 
  8100  080C                     	;# 
  8101  080D                     	;# 
  8102  080E                     	;# 
  8103  080F                     	;# 
  8104  0810                     	;# 
  8105  0811                     	;# 
  8106  0812                     	;# 
  8107  0813                     	;# 
  8108  0814                     	;# 
  8109  081A                     	;# 
  8110  081B                     	;# 
  8111  081C                     	;# 
  8112  081D                     	;# 
  8113  081E                     	;# 
  8114  081F                     	;# 
  8115  088C                     	;# 
  8116  088D                     	;# 
  8117  088E                     	;# 
  8118  088F                     	;# 
  8119  0890                     	;# 
  8120  0891                     	;# 
  8121  0892                     	;# 
  8122  0893                     	;# 
  8123  0895                     	;# 
  8124  0896                     	;# 
  8125  0897                     	;# 
  8126  0898                     	;# 
  8127  0899                     	;# 
  8128  089A                     	;# 
  8129  089B                     	;# 
  8130  090C                     	;# 
  8131  090E                     	;# 
  8132  090F                     	;# 
  8133  091F                     	;# 
  8134  091F                     	;# 
  8135  098F                     	;# 
  8136  098F                     	;# 
  8137  0990                     	;# 
  8138  0991                     	;# 
  8139  0992                     	;# 
  8140  0993                     	;# 
  8141  0994                     	;# 
  8142  0995                     	;# 
  8143  0996                     	;# 
  8144  0997                     	;# 
  8145  0E0F                     	;# 
  8146  0E10                     	;# 
  8147  0E11                     	;# 
  8148  0E12                     	;# 
  8149  0E13                     	;# 
  8150  0E14                     	;# 
  8151  0E15                     	;# 
  8152  0E16                     	;# 
  8153  0E17                     	;# 
  8154  0E18                     	;# 
  8155  0E19                     	;# 
  8156  0E1A                     	;# 
  8157  0E1B                     	;# 
  8158  0E1C                     	;# 
  8159  0E1D                     	;# 
  8160  0E1E                     	;# 
  8161  0E1F                     	;# 
  8162  0E20                     	;# 
  8163  0E21                     	;# 
  8164  0E22                     	;# 
  8165  0E23                     	;# 
  8166  0E24                     	;# 
  8167  0E25                     	;# 
  8168  0E26                     	;# 
  8169  0E27                     	;# 
  8170  0E28                     	;# 
  8171  0E29                     	;# 
  8172  0E2A                     	;# 
  8173  0E2B                     	;# 
  8174  0E2C                     	;# 
  8175  0E2D                     	;# 
  8176  0E2E                     	;# 
  8177  0E2F                     	;# 
  8178  0E30                     	;# 
  8179  0E31                     	;# 
  8180  0E32                     	;# 
  8181  0E33                     	;# 
  8182  0E34                     	;# 
  8183  0E35                     	;# 
  8184  0E36                     	;# 
  8185  0E37                     	;# 
  8186  0E8F                     	;# 
  8187  0E90                     	;# 
  8188  0E91                     	;# 
  8189  0E92                     	;# 
  8190  0E93                     	;# 
  8191  0E94                     	;# 
  8192  0E95                     	;# 
  8193  0E96                     	;# 
  8194  0E97                     	;# 
  8195  0E9C                     	;# 
  8196  0E9D                     	;# 
  8197  0E9E                     	;# 
  8198  0EA1                     	;# 
  8199  0EA2                     	;# 
  8200  0EA3                     	;# 
  8201  0EA4                     	;# 
  8202  0EA5                     	;# 
  8203  0EA9                     	;# 
  8204  0EAA                     	;# 
  8205  0EAB                     	;# 
  8206  0EAC                     	;# 
  8207  0EB1                     	;# 
  8208  0EB2                     	;# 
  8209  0EB3                     	;# 
  8210  0EB8                     	;# 
  8211  0EB9                     	;# 
  8212  0EBA                     	;# 
  8213  0EBB                     	;# 
  8214  0EBC                     	;# 
  8215  0EBD                     	;# 
  8216  0EBE                     	;# 
  8217  0EC3                     	;# 
  8218  0EC5                     	;# 
  8219  0EC6                     	;# 
  8220  0EC7                     	;# 
  8221  0EC8                     	;# 
  8222  0EC9                     	;# 
  8223  0ECA                     	;# 
  8224  0ECB                     	;# 
  8225  0ECC                     	;# 
  8226  0F10                     	;# 
  8227  0F11                     	;# 
  8228  0F12                     	;# 
  8229  0F13                     	;# 
  8230  0F14                     	;# 
  8231  0F15                     	;# 
  8232  0F16                     	;# 
  8233  0F17                     	;# 
  8234  0F18                     	;# 
  8235  0F19                     	;# 
  8236  0F1A                     	;# 
  8237  0F1B                     	;# 
  8238  0F1C                     	;# 
  8239  0F1D                     	;# 
  8240  0F1E                     	;# 
  8241  0F1F                     	;# 
  8242  0F20                     	;# 
  8243  0F21                     	;# 
  8244  0F22                     	;# 
  8245  0F23                     	;# 
  8246  0F24                     	;# 
  8247  0F25                     	;# 
  8248  0F26                     	;# 
  8249  0F27                     	;# 
  8250  0F28                     	;# 
  8251  0F29                     	;# 
  8252  0F2A                     	;# 
  8253  0F2B                     	;# 
  8254  0F2C                     	;# 
  8255  0F2D                     	;# 
  8256  0F2E                     	;# 
  8257  0F2F                     	;# 
  8258  0F30                     	;# 
  8259  0F31                     	;# 
  8260  0F32                     	;# 
  8261  0F38                     	;# 
  8262  0F39                     	;# 
  8263  0F3A                     	;# 
  8264  0F3B                     	;# 
  8265  0F3C                     	;# 
  8266  0F3D                     	;# 
  8267  0F3E                     	;# 
  8268  0F3F                     	;# 
  8269  0F40                     	;# 
  8270  0F41                     	;# 
  8271  0F43                     	;# 
  8272  0F44                     	;# 
  8273  0F45                     	;# 
  8274  0F46                     	;# 
  8275  0F47                     	;# 
  8276  0F48                     	;# 
  8277  0F49                     	;# 
  8278  0F4A                     	;# 
  8279  0F4B                     	;# 
  8280  0F4C                     	;# 
  8281  0F4E                     	;# 
  8282  0F4F                     	;# 
  8283  0F50                     	;# 
  8284  0F51                     	;# 
  8285  0F52                     	;# 
  8286  0F53                     	;# 
  8287  0F54                     	;# 
  8288  0F55                     	;# 
  8289  0F56                     	;# 
  8290  0F57                     	;# 
  8291  0F59                     	;# 
  8292  0F5A                     	;# 
  8293  0F5B                     	;# 
  8294  0F5C                     	;# 
  8295  0F5D                     	;# 
  8296  0F61                     	;# 
  8297  0F62                     	;# 
  8298  0F64                     	;# 
  8299  0F65                     	;# 
  8300  0F66                     	;# 
  8301  0F67                     	;# 
  8302  0F68                     	;# 
  8303  0F69                     	;# 
  8304  0F6A                     	;# 
  8305  0F6B                     	;# 
  8306  0F6C                     	;# 
  8307  0F6D                     	;# 
  8308  0FE4                     	;# 
  8309  0FE5                     	;# 
  8310  0FE6                     	;# 
  8311  0FE7                     	;# 
  8312  0FE8                     	;# 
  8313  0FE9                     	;# 
  8314  0FEA                     	;# 
  8315  0FEB                     	;# 
  8316  0FED                     	;# 
  8317  0FEE                     	;# 
  8318  0FEF                     	;# 
  8319                           
  8320                           	psect	idataBANK0
  8321  17BA                     __pidataBANK0:
  8322                           
  8323                           ;initializer for _alarmPWMStart
  8324  17BA  34FF               	retlw	255
  8325  17BB  34FF               	retlw	255
  8326  17BC  34FF               	retlw	255
  8327                           
  8328                           ;initializer for _prevLumLevel
  8329  17BD  34FF               	retlw	255
  8330  17BE  34FF               	retlw	255
  8331                           
  8332                           ;initializer for _prevTemp
  8333  17BF  34FF               	retlw	255
  8334  17C0  34FF               	retlw	255
  8335                           
  8336                           	psect	stringtext1
  8337  1800                     __pstringtext1:
  8338  1800                     _dpowers:
  8339  1800  3401               	retlw	1
  8340  1801  3400               	retlw	0
  8341  1802  340A               	retlw	10
  8342  1803  3400               	retlw	0
  8343  1804  3464               	retlw	100
  8344  1805  3400               	retlw	0
  8345  1806  34E8               	retlw	232
  8346  1807  3403               	retlw	3
  8347  1808  3410               	retlw	16
  8348  1809  3427               	retlw	39
  8349  180A                     __end_of_dpowers:
  8350                           
  8351                           	psect	nvBANK0
  8352  006E                     __pnvBANK0:
  8353  006E                     _timer3ReloadVal:
  8354  006E                     	ds	2
  8355                           
  8356                           	psect	nvBANK1
  8357  00B1                     __pnvBANK1:
  8358  00B1                     _INT_InterruptHandler:
  8359  00B1                     	ds	2
  8360  00B3                     _TMR5_InterruptHandler:
  8361  00B3                     	ds	2
  8362  00B5                     _timer5ReloadVal:
  8363  00B5                     	ds	2
  8364  00B7                     _TMR3_InterruptHandler:
  8365  00B7                     	ds	2
  8366  00B9                     _TMR1_InterruptHandler:
  8367  00B9                     	ds	2
  8368  00BB                     _timer1ReloadVal:
  8369  00BB                     	ds	2
  8370  0013                     _TRISCbits	set	19
  8371  000E                     _PORTCbits	set	14
  8372  0016                     _LATAbits	set	22
  8373  000B                     _INTCONbits	set	11
  8374  0014                     _TRISD	set	20
  8375  0013                     _TRISC	set	19
  8376  0012                     _TRISB	set	18
  8377  0011                     _TRISA	set	17
  8378  0015                     _TRISE	set	21
  8379  0018                     _LATC	set	24
  8380  0017                     _LATB	set	23
  8381  0016                     _LATA	set	22
  8382  0019                     _LATD	set	25
  8383  001A                     _LATE	set	26
  8384  0094                     _ADCON1bits	set	148
  8385  008E                     _ADPREVL	set	142
  8386  008F                     _ADPREVH	set	143
  8387  0097                     _ADSTATbits	set	151
  8388  0090                     _ADACCL	set	144
  8389  0091                     _ADACCH	set	145
  8390  0095                     _ADCON2bits	set	149
  8391  009C                     _ADPRE	set	156
  8392  0096                     _ADCON3bits	set	150
  8393  008C                     _ADRESL	set	140
  8394  008D                     _ADRESH	set	141
  8395  0093                     _ADCON0bits	set	147
  8396  009D                     _ADACQ	set	157
  8397  0093                     _ADCON0	set	147
  8398  0098                     _ADCLK	set	152
  8399  0099                     _ADACT	set	153
  8400  009A                     _ADREF	set	154
  8401  0097                     _ADSTAT	set	151
  8402  0096                     _ADCON3	set	150
  8403  0095                     _ADCON2	set	149
  8404  0094                     _ADCON1	set	148
  8405  009B                     _ADCAP	set	155
  8406  009E                     _ADPCH	set	158
  8407  0116                     _ADERRL	set	278
  8408  0117                     _ADERRH	set	279
  8409  0114                     _ADFLTRL	set	276
  8410  0115                     _ADFLTRH	set	277
  8411  010C                     _ADCNT	set	268
  8412  010D                     _ADRPT	set	269
  8413  0113                     _ADSTPTH	set	275
  8414  0112                     _ADSTPTL	set	274
  8415  0111                     _ADUTHH	set	273
  8416  0110                     _ADUTHL	set	272
  8417  010F                     _ADLTHH	set	271
  8418  010E                     _ADLTHL	set	270
  8419  018E                     _SSP1MSK	set	398
  8420  018D                     _SSP1ADD	set	397
  8421  018F                     _SSP1STAT	set	399
  8422  0191                     _SSP1CON2	set	401
  8423  0190                     _SSP1CON1bits	set	400
  8424  018C                     _SSP1BUF	set	396
  8425  018F                     _SSP1STATbits	set	399
  8426  0191                     _SSP1CON2bits	set	401
  8427  0190                     _SSP1CON1	set	400
  8428  021F                     _CCPTMRS1bits	set	543
  8429  021B                     _T5GCONbits	set	539
  8430  021A                     _T5CONbits	set	538
  8431  021A                     _T5CON	set	538
  8432  0218                     _TMR5L	set	536
  8433  0219                     _TMR5H	set	537
  8434  021D                     _T5CLK	set	541
  8435  021C                     _T5GATE	set	540
  8436  021B                     _T5GCON	set	539
  8437  0215                     _T3GCONbits	set	533
  8438  0214                     _T3CONbits	set	532
  8439  0214                     _T3CON	set	532
  8440  0212                     _TMR3L	set	530
  8441  0213                     _TMR3H	set	531
  8442  0217                     _T3CLK	set	535
  8443  0216                     _T3GATE	set	534
  8444  0215                     _T3GCON	set	533
  8445  020F                     _T1GCONbits	set	527
  8446  020E                     _T1CONbits	set	526
  8447  020E                     _T1CON	set	526
  8448  020C                     _TMR1L	set	524
  8449  020D                     _TMR1H	set	525
  8450  0211                     _T1CLK	set	529
  8451  0210                     _T1GATE	set	528
  8452  020F                     _T1GCON	set	527
  8453  028D                     _PR2	set	653
  8454  028C                     _TMR2	set	652
  8455  028E                     _T2CONbits	set	654
  8456  0291                     _T2RSTbits	set	657
  8457  028F                     _T2HLTbits	set	655
  8458  028E                     _T2CON	set	654
  8459  028C                     _T2TMR	set	652
  8460  028D                     _T2PR	set	653
  8461  0291                     _T2RST	set	657
  8462  028F                     _T2HLT	set	655
  8463  0290                     _T2CLKCON	set	656
  8464  038C                     _PWM6DCL	set	908
  8465  038D                     _PWM6DCH	set	909
  8466  038E                     _PWM6CON	set	910
  8467  1C77                     _PWM6EN	set	7287
  8468  0710                     _PIR4bits	set	1808
  8469  071A                     _PIE4bits	set	1818
  8470  070C                     _PIR0bits	set	1804
  8471  0716                     _PIE0bits	set	1814
  8472  0719                     _PIE3bits	set	1817
  8473  070F                     _PIR3bits	set	1807
  8474  079B                     _PMD5	set	1947
  8475  079A                     _PMD4	set	1946
  8476  0799                     _PMD3	set	1945
  8477  0798                     _PMD2	set	1944
  8478  0797                     _PMD1	set	1943
  8479  0796                     _PMD0	set	1942
  8480  081F                     _NVMCON2	set	2079
  8481  081C                     _NVMDATL	set	2076
  8482  081D                     _NVMDATH	set	2077
  8483  081E                     _NVMCON1bits	set	2078
  8484  081B                     _NVMADRH	set	2075
  8485  081A                     _NVMADRL	set	2074
  8486  0892                     _OSCTUNE	set	2194
  8487  0893                     _OSCFRQ	set	2195
  8488  0891                     _OSCEN	set	2193
  8489  088F                     _OSCCON3	set	2191
  8490  088D                     _OSCCON1	set	2189
  8491  0EC6                     _SSP1DATPPS	set	3782
  8492  0EC5                     _SSP1CLKPPS	set	3781
  8493  0E90                     _INTPPS	set	3728
  8494  0F16                     _RA6PPS	set	3862
  8495  0F24                     _RC4PPS	set	3876
  8496  0F23                     _RC3PPS	set	3875
  8497  0F67                     _SLRCONE	set	3943
  8498  0F5C                     _SLRCOND	set	3932
  8499  0F51                     _SLRCONC	set	3921
  8500  0F46                     _SLRCONB	set	3910
  8501  0F3B                     _SLRCONA	set	3899
  8502  0F5B                     _ODCOND	set	3931
  8503  0F50                     _ODCONC	set	3920
  8504  0F45                     _ODCONB	set	3909
  8505  0F3A                     _ODCONA	set	3898
  8506  0F66                     _ODCONE	set	3942
  8507  0F4F                     _WPUC	set	3919
  8508  0F39                     _WPUA	set	3897
  8509  0F44                     _WPUB	set	3908
  8510  0F65                     _WPUE	set	3941
  8511  0F5A                     _WPUD	set	3930
  8512  0F38                     _ANSELA	set	3896
  8513  0F64                     _ANSELE	set	3940
  8514  0F43                     _ANSELB	set	3907
  8515  0F4E                     _ANSELC	set	3918
  8516  0F59                     _ANSELD	set	3929
  8517  7A7C                     _WPUC4	set	31356
  8518  7A7B                     _WPUC3	set	31355
  8519                           
  8520                           	psect	stringtext2
  8521  1000                     __pstringtext2:
  8522  1000                     STR_1:
  8523  1000  3425               	retlw	37	;'%'
  8524  1001  3430               	retlw	48	;'0'
  8525  1002  3432               	retlw	50	;'2'
  8526  1003  3464               	retlw	100	;'d'
  8527  1004  343A               	retlw	58	;':'
  8528  1005  3425               	retlw	37	;'%'
  8529  1006  3430               	retlw	48	;'0'
  8530  1007  3432               	retlw	50	;'2'
  8531  1008  3464               	retlw	100	;'d'
  8532  1009  343A               	retlw	58	;':'
  8533  100A  3425               	retlw	37	;'%'
  8534  100B  3430               	retlw	48	;'0'
  8535  100C  3432               	retlw	50	;'2'
  8536  100D  3464               	retlw	100	;'d'
  8537  100E  3400               	retlw	0
  8538                           
  8539                           	psect	stringtext3
  8540  180A                     __pstringtext3:
  8541  180A                     STR_3:
  8542  180A  3425               	retlw	37	;'%'
  8543  180B  3430               	retlw	48	;'0'
  8544  180C  3432               	retlw	50	;'2'
  8545  180D  3464               	retlw	100	;'d'
  8546  180E  3420               	retlw	32	;' '
  8547  180F  3443               	retlw	67	;'C'
  8548  1810  3400               	retlw	0
  8549                           
  8550                           	psect	stringtext4
  8551  1811                     __pstringtext4:
  8552  1811                     STR_5:
  8553  1811  344C               	retlw	76	;'L'
  8554  1812  3420               	retlw	32	;' '
  8555  1813  3425               	retlw	37	;'%'
  8556  1814  3464               	retlw	100	;'d'
  8557  1815  3400               	retlw	0
  8558                           
  8559                           	psect	stringtext5
  8560  0000                     __pstringtext5:
  8561  180A                     
  8562                           	psect	cinit
  8563  004E                     start_initialization:	
  8564                           ; #config settings
  8565                           
  8566  004E                     __initialization:
  8567                           
  8568                           ; Initialize objects allocated to BANK0
  8569  004E  30BA               	movlw	low __pidataBANK0
  8570  004F  0084               	movwf	4
  8571  0050  3097               	movlw	(high __pidataBANK0)| (0+128)
  8572  0051  0085               	movwf	5
  8573  0052  3067               	movlw	low __pdataBANK0
  8574  0053  0086               	movwf	6
  8575  0054  3000               	movlw	high __pdataBANK0
  8576  0055  0087               	movwf	7
  8577  0056  3007               	movlw	7
  8578  0057  3197  27AD  3180   	fcall	init_ram
  8579                           
  8580                           ; Clear objects allocated to BANK0
  8581  005A  304D               	movlw	low __pbssBANK0
  8582  005B  0084               	movwf	4
  8583  005C  3000               	movlw	high __pbssBANK0
  8584  005D  0085               	movwf	5
  8585  005E  301A               	movlw	26
  8586  005F  3197  27A7  3180   	fcall	clear_ram0
  8587                           
  8588                           ; Clear objects allocated to BANK1
  8589  0062  30BD               	movlw	low __pbssBANK1
  8590  0063  0084               	movwf	4
  8591  0064  3000               	movlw	high __pbssBANK1
  8592  0065  0085               	movwf	5
  8593  0066  300A               	movlw	10
  8594  0067  3197  27A7  3180   	fcall	clear_ram0
  8595  006A                     end_of_initialization:	
  8596                           ;End of C runtime variable initialization code
  8597                           
  8598  006A                     __end_of__initialization:
  8599  006A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8600  006B  0020               	movlb	0
  8601  006C  3180  286E         	ljmp	_main	;jump to C main() function
  8602                           
  8603                           	psect	bssBANK0
  8604  004D                     __pbssBANK0:
  8605  004D                     _clkAlarm:
  8606  004D                     	ds	4
  8607  0051                     _lumAlarm:
  8608  0051                     	ds	3
  8609  0054                     _tempAlarm:
  8610  0054                     	ds	3
  8611  0057                     _t:
  8612  0057                     	ds	3
  8613  005A                     _mode:
  8614  005A                     	ds	2
  8615  005C                     _editingClockAlarm:
  8616  005C                     	ds	2
  8617  005E                     _dimingLed:
  8618  005E                     	ds	2
  8619  0060                     _editingLumAlarm:
  8620  0060                     	ds	1
  8621  0061                     _editingTempAlarm:
  8622  0061                     	ds	1
  8623  0062                     _lumLevel:
  8624  0062                     	ds	1
  8625  0063                     _temp:
  8626  0063                     	ds	1
  8627  0064                     _S1_Value:
  8628  0064                     	ds	1
  8629  0065                     _ALAF:
  8630  0065                     	ds	1
  8631  0066                     _TALA:
  8632  0066                     	ds	1
  8633                           
  8634                           	psect	dataBANK0
  8635  0067                     __pdataBANK0:
  8636  0067                     _alarmPWMStart:
  8637  0067                     	ds	3
  8638  006A                     _prevLumLevel:
  8639  006A                     	ds	2
  8640  006C                     _prevTemp:
  8641  006C                     	ds	2
  8642                           
  8643                           	psect	bssBANK1
  8644  00BD                     __pbssBANK1:
  8645  00BD                     menuLCD_ISR@F12828:
  8646  00BD                     	ds	3
  8647  00C0                     _i2c1_driver_i2cISR:
  8648  00C0                     	ds	2
  8649  00C2                     _i2c1_driver_busCollisionISR:
  8650  00C2                     	ds	2
  8651  00C4                     _idx_RingBuffer:
  8652  00C4                     	ds	1
  8653  00C5                     _PMON:
  8654  00C5                     	ds	1
  8655  00C6                     _NREG:
  8656  00C6                     	ds	1
  8657                           
  8658                           	psect	inittext
  8659  17AD                     init_ram:
  8660  17AD  00FE               	movwf	btemp
  8661  17AE                     initloop:
  8662  17AE  0012               	moviw fsr0++
  8663  17AF  001E               	movwi fsr1++
  8664  17B0  0BFE               	decfsz	btemp,f
  8665  17B1  2FAE               	goto	initloop
  8666  17B2  3400               	retlw	0
  8667                           
  8668                           	psect	clrtext
  8669  17A7                     clear_ram0:	
  8670                           ;	Called with FSR0 containing the base address, and
  8671                           ;	WREG with the size to clear
  8672                           
  8673  17A7  0064               	clrwdt	;clear the watchdog before getting into this loop
  8674  17A8                     clrloop0:
  8675  17A8  0180               	clrf	0	;clear RAM location pointed to by FSR
  8676  17A9  3101               	addfsr 0,1
  8677  17AA  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  8678  17AB  2FA8               	goto	clrloop0	;have we reached the end yet?
  8679  17AC  3400               	retlw	0	;all done for this memory range, return
  8680                           
  8681                           	psect	cstackBANK1
  8682  00A0                     __pcstackBANK1:
  8683  00A0                     ??_PMD_Initialize:
  8684  00A0                     ??_OSCILLATOR_Initialize:	
  8685                           ; 1 bytes @ 0x0
  8686                           
  8687  00A0                     ??_PWM6_Initialize:	
  8688                           ; 1 bytes @ 0x0
  8689                           
  8690  00A0                     ??_ADCC_Initialize:	
  8691                           ; 1 bytes @ 0x0
  8692                           
  8693  00A0                     ??_TMR2_Initialize:	
  8694                           ; 1 bytes @ 0x0
  8695                           
  8696  00A0                     ?_TMR1_SetInterruptHandler:	
  8697                           ; 1 bytes @ 0x0
  8698                           
  8699  00A0                     ?_TMR3_SetInterruptHandler:	
  8700                           ; 1 bytes @ 0x0
  8701                           
  8702  00A0                     ?_TMR5_SetInterruptHandler:	
  8703                           ; 1 bytes @ 0x0
  8704                           
  8705  00A0                     ?_INT_SetInterruptHandler:	
  8706                           ; 1 bytes @ 0x0
  8707                           
  8708  00A0                     ??_WriteI2C:	
  8709                           ; 1 bytes @ 0x0
  8710                           
  8711  00A0                     ??_PIN_MANAGER_Initialize:	
  8712                           ; 1 bytes @ 0x0
  8713                           
  8714  00A0                     ??_i2c1_driver_open:	
  8715                           ; 1 bytes @ 0x0
  8716                           
  8717  00A0                     ?_PWM6_LoadDutyValue:	
  8718                           ; 1 bytes @ 0x0
  8719                           
  8720  00A0                     ??_TMR2_Stop:	
  8721                           ; 1 bytes @ 0x0
  8722                           
  8723  00A0                     ??_TMR2_StopTimer:	
  8724                           ; 1 bytes @ 0x0
  8725                           
  8726  00A0                     ?_DATAEE_WriteByte:	
  8727                           ; 1 bytes @ 0x0
  8728                           
  8729  00A0                     ?_DATAEE_ReadByte:	
  8730                           ; 1 bytes @ 0x0
  8731                           
  8732  00A0                     ??_PWM_Output_D4_Disable:	
  8733                           ; 1 bytes @ 0x0
  8734                           
  8735  00A0                     ??_editClock:	
  8736                           ; 1 bytes @ 0x0
  8737                           
  8738  00A0                     ??_editTemp:	
  8739                           ; 1 bytes @ 0x0
  8740                           
  8741  00A0                     ??_editLum:	
  8742                           ; 1 bytes @ 0x0
  8743                           
  8744  00A0                     ??_toggleAlarms:	
  8745                           ; 1 bytes @ 0x0
  8746                           
  8747  00A0                     TMR1_SetInterruptHandler@InterruptHandler:	
  8748                           ; 1 bytes @ 0x0
  8749                           
  8750  00A0                     TMR3_SetInterruptHandler@InterruptHandler:	
  8751                           ; 2 bytes @ 0x0
  8752                           
  8753  00A0                     TMR5_SetInterruptHandler@InterruptHandler:	
  8754                           ; 2 bytes @ 0x0
  8755                           
  8756  00A0                     PWM6_LoadDutyValue@dutyValue:	
  8757                           ; 2 bytes @ 0x0
  8758                           
  8759  00A0                     DATAEE_WriteByte@bAdd:	
  8760                           ; 2 bytes @ 0x0
  8761                           
  8762  00A0                     DATAEE_ReadByte@bAdd:	
  8763                           ; 2 bytes @ 0x0
  8764                           
  8765  00A0                     INT_SetInterruptHandler@InterruptHandler:	
  8766                           ; 2 bytes @ 0x0
  8767                           
  8768                           
  8769                           ; 2 bytes @ 0x0
  8770  00A0                     	ds	1
  8771  00A1                     WriteI2C@data_out:
  8772                           
  8773                           ; 1 bytes @ 0x1
  8774  00A1                     	ds	1
  8775  00A2                     ??_TMR3_Initialize:
  8776  00A2                     ??_TMR5_Initialize:	
  8777                           ; 1 bytes @ 0x2
  8778                           
  8779  00A2                     ??_EXT_INT_Initialize:	
  8780                           ; 1 bytes @ 0x2
  8781                           
  8782  00A2                     ??_TMR1_Initialize:	
  8783                           ; 1 bytes @ 0x2
  8784                           
  8785  00A2                     ??_TMR1_SetInterruptHandler:	
  8786                           ; 1 bytes @ 0x2
  8787                           
  8788  00A2                     ??_TMR3_SetInterruptHandler:	
  8789                           ; 1 bytes @ 0x2
  8790                           
  8791  00A2                     ??_TMR5_SetInterruptHandler:	
  8792                           ; 1 bytes @ 0x2
  8793                           
  8794  00A2                     ??_INT_SetInterruptHandler:	
  8795                           ; 1 bytes @ 0x2
  8796                           
  8797  00A2                     ??_SYSTEM_Initialize:	
  8798                           ; 1 bytes @ 0x2
  8799                           
  8800  00A2                     ??_PWM6_LoadDutyValue:	
  8801                           ; 1 bytes @ 0x2
  8802                           
  8803  00A2                     ??_DATAEE_ReadByte:	
  8804                           ; 1 bytes @ 0x2
  8805                           
  8806  00A2                     ??_LCDsend:	
  8807                           ; 1 bytes @ 0x2
  8808                           
  8809  00A2                     ?_LCDsend2x4:	
  8810                           ; 1 bytes @ 0x2
  8811                           
  8812  00A2                     DATAEE_WriteByte@bData:	
  8813                           ; 1 bytes @ 0x2
  8814                           
  8815  00A2                     LCDsend2x4@mode:	
  8816                           ; 1 bytes @ 0x2
  8817                           
  8818                           
  8819                           ; 1 bytes @ 0x2
  8820  00A2                     	ds	1
  8821  00A3                     ??_DATAEE_WriteByte:
  8822  00A3                     ??_LCDsend2x4:	
  8823                           ; 1 bytes @ 0x3
  8824                           
  8825  00A3                     DATAEE_WriteByte@GIEBitValue:	
  8826                           ; 1 bytes @ 0x3
  8827                           
  8828  00A3                     LCDsend@c:	
  8829                           ; 1 bytes @ 0x3
  8830                           
  8831                           
  8832                           ; 1 bytes @ 0x3
  8833  00A3                     	ds	2
  8834  00A5                     LCDsend2x4@c:
  8835                           
  8836                           ; 1 bytes @ 0x5
  8837  00A5                     	ds	1
  8838  00A6                     LCDsend2x4@hc:
  8839                           
  8840                           ; 1 bytes @ 0x6
  8841  00A6                     	ds	1
  8842  00A7                     LCDsend2x4@lc:
  8843                           
  8844                           ; 1 bytes @ 0x7
  8845  00A7                     	ds	1
  8846  00A8                     ??_LCDinit:
  8847                           
  8848                           ; 1 bytes @ 0x8
  8849  00A8                     	ds	1
  8850  00A9                     ??_main:
  8851                           
  8852                           ; 1 bytes @ 0x9
  8853  00A9                     	ds	3
  8854  00AC                     main@checkSumAux:
  8855                           
  8856                           ; 1 bytes @ 0xC
  8857  00AC                     	ds	1
  8858  00AD                     main@notInit:
  8859                           
  8860                           ; 1 bytes @ 0xD
  8861  00AD                     	ds	1
  8862  00AE                     main@corrupted:
  8863                           
  8864                           ; 1 bytes @ 0xE
  8865  00AE                     	ds	1
  8866  00AF                     main@i:
  8867                           
  8868                           ; 2 bytes @ 0xF
  8869  00AF                     	ds	2
  8870                           
  8871                           	psect	cstackCOMMON
  8872  0070                     __pcstackCOMMON:
  8873  0070                     ?_isdigit:
  8874  0070                     ?_i2c1_driver_open:	
  8875                           ; 1 bit 
  8876                           
  8877  0070                     ?_PMD_Initialize:	
  8878                           ; 1 bit 
  8879                           
  8880  0070                     ?_OSCILLATOR_Initialize:	
  8881                           ; 1 bytes @ 0x0
  8882                           
  8883  0070                     ?_PWM6_Initialize:	
  8884                           ; 1 bytes @ 0x0
  8885                           
  8886  0070                     ?_ADCC_Initialize:	
  8887                           ; 1 bytes @ 0x0
  8888                           
  8889  0070                     ?_TMR3_Initialize:	
  8890                           ; 1 bytes @ 0x0
  8891                           
  8892  0070                     ?_TMR5_Initialize:	
  8893                           ; 1 bytes @ 0x0
  8894                           
  8895  0070                     ?_TMR2_Initialize:	
  8896                           ; 1 bytes @ 0x0
  8897                           
  8898  0070                     ?_EXT_INT_Initialize:	
  8899                           ; 1 bytes @ 0x0
  8900                           
  8901  0070                     ?_TMR1_Initialize:	
  8902                           ; 1 bytes @ 0x0
  8903                           
  8904  0070                     ?_INT_ISR:	
  8905                           ; 1 bytes @ 0x0
  8906                           
  8907  0070                     ?_TMR5_ISR:	
  8908                           ; 1 bytes @ 0x0
  8909                           
  8910  0070                     ?_TMR3_ISR:	
  8911                           ; 1 bytes @ 0x0
  8912                           
  8913  0070                     ?_TMR1_ISR:	
  8914                           ; 1 bytes @ 0x0
  8915                           
  8916  0070                     ?_TMR1_DefaultInterruptHandler:	
  8917                           ; 1 bytes @ 0x0
  8918                           
  8919  0070                     ??_TMR1_DefaultInterruptHandler:	
  8920                           ; 1 bytes @ 0x0
  8921                           
  8922  0070                     ?_TMR3_DefaultInterruptHandler:	
  8923                           ; 1 bytes @ 0x0
  8924                           
  8925  0070                     ??_TMR3_DefaultInterruptHandler:	
  8926                           ; 1 bytes @ 0x0
  8927                           
  8928  0070                     ?_TMR5_DefaultInterruptHandler:	
  8929                           ; 1 bytes @ 0x0
  8930                           
  8931  0070                     ??_TMR5_DefaultInterruptHandler:	
  8932                           ; 1 bytes @ 0x0
  8933                           
  8934  0070                     ?_INT_CallBack:	
  8935                           ; 1 bytes @ 0x0
  8936                           
  8937  0070                     ??_isdigit:	
  8938                           ; 1 bytes @ 0x0
  8939                           
  8940  0070                     ?_ReadI2C:	
  8941                           ; 1 bytes @ 0x0
  8942                           
  8943  0070                     ??_ReadI2C:	
  8944                           ; 1 bytes @ 0x0
  8945                           
  8946  0070                     ?_WriteI2C:	
  8947                           ; 1 bytes @ 0x0
  8948                           
  8949  0070                     ?_PIN_MANAGER_Initialize:	
  8950                           ; 1 bytes @ 0x0
  8951                           
  8952  0070                     ?_SYSTEM_Initialize:	
  8953                           ; 1 bytes @ 0x0
  8954                           
  8955  0070                     ?_INTERRUPT_InterruptManager:	
  8956                           ; 1 bytes @ 0x0
  8957                           
  8958  0070                     ?_TMR1_WriteTimer:	
  8959                           ; 1 bytes @ 0x0
  8960                           
  8961  0070                     ?_TMR3_WriteTimer:	
  8962                           ; 1 bytes @ 0x0
  8963                           
  8964  0070                     ?_TMR5_WriteTimer:	
  8965                           ; 1 bytes @ 0x0
  8966                           
  8967  0070                     ?_TMR2_Start:	
  8968                           ; 1 bytes @ 0x0
  8969                           
  8970  0070                     ??_TMR2_Start:	
  8971                           ; 1 bytes @ 0x0
  8972                           
  8973  0070                     ?_TMR2_StartTimer:	
  8974                           ; 1 bytes @ 0x0
  8975                           
  8976  0070                     ??_TMR2_StartTimer:	
  8977                           ; 1 bytes @ 0x0
  8978                           
  8979  0070                     ?_TMR2_Stop:	
  8980                           ; 1 bytes @ 0x0
  8981                           
  8982  0070                     ?_TMR2_StopTimer:	
  8983                           ; 1 bytes @ 0x0
  8984                           
  8985  0070                     ?_tsttc:	
  8986                           ; 1 bytes @ 0x0
  8987                           
  8988  0070                     ?_LCDsend:	
  8989                           ; 1 bytes @ 0x0
  8990                           
  8991  0070                     ?_LCDinit:	
  8992                           ; 1 bytes @ 0x0
  8993                           
  8994  0070                     ?_LCDcmd:	
  8995                           ; 1 bytes @ 0x0
  8996                           
  8997  0070                     ?_LCDchar:	
  8998                           ; 1 bytes @ 0x0
  8999                           
  9000  0070                     ?_LCDstr:	
  9001                           ; 1 bytes @ 0x0
  9002                           
  9003  0070                     ?_differenceBetweenTimePeriod:	
  9004                           ; 1 bytes @ 0x0
  9005                           
  9006  0070                     ?_PWM_Output_D4_Enable:	
  9007                           ; 1 bytes @ 0x0
  9008                           
  9009  0070                     ??_PWM_Output_D4_Enable:	
  9010                           ; 1 bytes @ 0x0
  9011                           
  9012  0070                     ?_PWM_Output_D4_Disable:	
  9013                           ; 1 bytes @ 0x0
  9014                           
  9015  0070                     ?_Clock_ISR:	
  9016                           ; 1 bytes @ 0x0
  9017                           
  9018  0070                     ?_menuLCD_ISR:	
  9019                           ; 1 bytes @ 0x0
  9020                           
  9021  0070                     ?_monitoring_ISR:	
  9022                           ; 1 bytes @ 0x0
  9023                           
  9024  0070                     ?_editClock:	
  9025                           ; 1 bytes @ 0x0
  9026                           
  9027  0070                     ?_editTemp:	
  9028                           ; 1 bytes @ 0x0
  9029                           
  9030  0070                     ?_editLum:	
  9031                           ; 1 bytes @ 0x0
  9032                           
  9033  0070                     ?_toggleAlarms:	
  9034                           ; 1 bytes @ 0x0
  9035                           
  9036  0070                     ?_S1_ISR:	
  9037                           ; 1 bytes @ 0x0
  9038                           
  9039  0070                     ??_S1_ISR:	
  9040                           ; 1 bytes @ 0x0
  9041                           
  9042  0070                     ?_main:	
  9043                           ; 1 bytes @ 0x0
  9044                           
  9045  0070                     ?_INT_DefaultInterruptHandler:	
  9046                           ; 1 bytes @ 0x0
  9047                           
  9048  0070                     ??_INT_DefaultInterruptHandler:	
  9049                           ; 1 bytes @ 0x0
  9050                           
  9051  0070                     ?i1_WriteI2C:	
  9052                           ; 1 bytes @ 0x0
  9053                           
  9054  0070                     ??i1_WriteI2C:	
  9055                           ; 1 bytes @ 0x0
  9056                           
  9057  0070                     ?i1_PWM6_LoadDutyValue:	
  9058                           ; 1 bytes @ 0x0
  9059                           
  9060  0070                     ?i1_TMR2_Stop:	
  9061                           ; 1 bytes @ 0x0
  9062                           
  9063  0070                     ??i1_TMR2_Stop:	
  9064                           ; 1 bytes @ 0x0
  9065                           
  9066  0070                     ?i1_TMR2_StopTimer:	
  9067                           ; 1 bytes @ 0x0
  9068                           
  9069  0070                     ??i1_TMR2_StopTimer:	
  9070                           ; 1 bytes @ 0x0
  9071                           
  9072  0070                     ?i1_PWM_Output_D4_Disable:	
  9073                           ; 1 bytes @ 0x0
  9074                           
  9075  0070                     ??i1_PWM_Output_D4_Disable:	
  9076                           ; 1 bytes @ 0x0
  9077                           
  9078  0070                     ?_ADCC_GetSingleConversion:	
  9079                           ; 1 bytes @ 0x0
  9080                           
  9081  0070                     ?___wmul:	
  9082                           ; 2 bytes @ 0x0
  9083                           
  9084  0070                     ?___lwdiv:	
  9085                           ; 2 bytes @ 0x0
  9086                           
  9087  0070                     _isdigit$2957:	
  9088                           ; 2 bytes @ 0x0
  9089                           
  9090  0070                     TMR1_WriteTimer@timerVal:	
  9091                           ; 1 bytes @ 0x0
  9092                           
  9093  0070                     TMR3_WriteTimer@timerVal:	
  9094                           ; 2 bytes @ 0x0
  9095                           
  9096  0070                     TMR5_WriteTimer@timerVal:	
  9097                           ; 2 bytes @ 0x0
  9098                           
  9099  0070                     ___wmul@multiplier:	
  9100                           ; 2 bytes @ 0x0
  9101                           
  9102  0070                     ___lwdiv@divisor:	
  9103                           ; 2 bytes @ 0x0
  9104                           
  9105  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  9106                           ; 2 bytes @ 0x0
  9107                           
  9108  0070                     differenceBetweenTimePeriod@start:	
  9109                           ; 2 bytes @ 0x0
  9110                           
  9111                           
  9112                           ; 3 bytes @ 0x0
  9113  0070                     	ds	1
  9114  0071                     ??_INT_ISR:
  9115  0071                     ??_INT_CallBack:	
  9116                           ; 1 bytes @ 0x1
  9117                           
  9118  0071                     isdigit@c:	
  9119                           ; 1 bytes @ 0x1
  9120                           
  9121  0071                     i1WriteI2C@data_out:	
  9122                           ; 1 bytes @ 0x1
  9123                           
  9124                           
  9125                           ; 1 bytes @ 0x1
  9126  0071                     	ds	1
  9127  0072                     ??_TMR1_WriteTimer:
  9128  0072                     ??_TMR3_WriteTimer:	
  9129                           ; 1 bytes @ 0x2
  9130                           
  9131  0072                     ??_TMR5_WriteTimer:	
  9132                           ; 1 bytes @ 0x2
  9133                           
  9134  0072                     ??_tsttc:	
  9135                           ; 1 bytes @ 0x2
  9136                           
  9137  0072                     ??i1_PWM6_LoadDutyValue:	
  9138                           ; 1 bytes @ 0x2
  9139                           
  9140  0072                     ?i1_LCDsend2x4:	
  9141                           ; 1 bytes @ 0x2
  9142                           
  9143  0072                     i1LCDsend2x4@mode:	
  9144                           ; 1 bytes @ 0x2
  9145                           
  9146  0072                     ___wmul@multiplicand:	
  9147                           ; 1 bytes @ 0x2
  9148                           
  9149  0072                     ___lwdiv@dividend:	
  9150                           ; 2 bytes @ 0x2
  9151                           
  9152                           
  9153                           ; 2 bytes @ 0x2
  9154  0072                     	ds	1
  9155  0073                     ??_ADCC_GetSingleConversion:
  9156  0073                     ??i1_LCDsend2x4:	
  9157                           ; 1 bytes @ 0x3
  9158                           
  9159  0073                     ADCC_GetSingleConversion@channel:	
  9160                           ; 1 bytes @ 0x3
  9161                           
  9162  0073                     tsttc@value:	
  9163                           ; 1 bytes @ 0x3
  9164                           
  9165  0073                     differenceBetweenTimePeriod@stop:	
  9166                           ; 1 bytes @ 0x3
  9167                           
  9168                           
  9169                           ; 3 bytes @ 0x3
  9170  0073                     	ds	1
  9171  0074                     ??___wmul:
  9172  0074                     ??___lwdiv:	
  9173                           ; 1 bytes @ 0x4
  9174                           
  9175  0074                     ___wmul@product:	
  9176                           ; 1 bytes @ 0x4
  9177                           
  9178                           
  9179                           ; 2 bytes @ 0x4
  9180  0074                     	ds	1
  9181  0075                     i1LCDsend2x4@c:
  9182  0075                     ___lwdiv@quotient:	
  9183                           ; 1 bytes @ 0x5
  9184                           
  9185                           
  9186                           ; 2 bytes @ 0x5
  9187  0075                     	ds	1
  9188  0076                     ?i1_DATAEE_WriteByte:
  9189  0076                     differenceBetweenTimePeriod@diff:	
  9190                           ; 1 bytes @ 0x6
  9191                           
  9192  0076                     i1LCDsend2x4@hc:	
  9193                           ; 1 bytes @ 0x6
  9194                           
  9195  0076                     i1DATAEE_WriteByte@bAdd:	
  9196                           ; 1 bytes @ 0x6
  9197                           
  9198                           
  9199                           ; 2 bytes @ 0x6
  9200  0076                     	ds	1
  9201  0077                     ??_differenceBetweenTimePeriod:
  9202  0077                     ___lwdiv@counter:	
  9203                           ; 1 bytes @ 0x7
  9204                           
  9205  0077                     i1LCDsend2x4@lc:	
  9206                           ; 1 bytes @ 0x7
  9207                           
  9208                           
  9209                           ; 1 bytes @ 0x7
  9210  0077                     	ds	1
  9211  0078                     ??_LCDcmd:
  9212  0078                     ??_LCDchar:	
  9213                           ; 1 bytes @ 0x8
  9214                           
  9215  0078                     ?___lwmod:	
  9216                           ; 1 bytes @ 0x8
  9217                           
  9218  0078                     LCDcmd@c:	
  9219                           ; 2 bytes @ 0x8
  9220                           
  9221  0078                     LCDchar@c:	
  9222                           ; 1 bytes @ 0x8
  9223                           
  9224  0078                     i1DATAEE_WriteByte@bData:	
  9225                           ; 1 bytes @ 0x8
  9226                           
  9227  0078                     ___lwmod@divisor:	
  9228                           ; 1 bytes @ 0x8
  9229                           
  9230                           
  9231                           ; 2 bytes @ 0x8
  9232  0078                     	ds	1
  9233  0079                     ??_LCDstr:
  9234  0079                     ??i1_DATAEE_WriteByte:	
  9235                           ; 1 bytes @ 0x9
  9236                           
  9237  0079                     i1DATAEE_WriteByte@GIEBitValue:	
  9238                           ; 1 bytes @ 0x9
  9239                           
  9240                           
  9241                           ; 1 bytes @ 0x9
  9242  0079                     	ds	1
  9243  007A                     ??_Clock_ISR:
  9244  007A                     ??_monitoring_ISR:	
  9245                           ; 1 bytes @ 0xA
  9246                           
  9247  007A                     LCDstr@c:	
  9248                           ; 1 bytes @ 0xA
  9249                           
  9250  007A                     ___lwmod@dividend:	
  9251                           ; 1 bytes @ 0xA
  9252                           
  9253                           
  9254                           ; 2 bytes @ 0xA
  9255  007A                     	ds	1
  9256  007B                     ??_TMR1_ISR:
  9257  007B                     LCDstr@p:	
  9258                           ; 1 bytes @ 0xB
  9259                           
  9260                           
  9261                           ; 1 bytes @ 0xB
  9262  007B                     	ds	1
  9263  007C                     ??___lwmod:
  9264                           
  9265                           ; 1 bytes @ 0xC
  9266  007C                     	ds	1
  9267  007D                     ??_TMR5_ISR:
  9268  007D                     ___lwmod@counter:	
  9269                           ; 1 bytes @ 0xD
  9270                           
  9271                           
  9272                           ; 1 bytes @ 0xD
  9273  007D                     	ds	1
  9274  007E                     ??_TMR3_ISR:
  9275  007E                     ??_INTERRUPT_InterruptManager:	
  9276                           ; 1 bytes @ 0xE
  9277                           
  9278                           
  9279                           	psect	cstackBANK0
  9280  0020                     __pcstackBANK0:	
  9281                           ; 1 bytes @ 0xE
  9282                           
  9283  0020                     ?_sprintf:
  9284  0020                     sprintf@f:	
  9285                           ; 2 bytes @ 0x0
  9286                           
  9287                           
  9288                           ; 2 bytes @ 0x0
  9289  0020                     	ds	8
  9290  0028                     ??_sprintf:
  9291                           
  9292                           ; 1 bytes @ 0x8
  9293  0028                     	ds	4
  9294  002C                     sprintf@ap:
  9295                           
  9296                           ; 1 bytes @ 0xC
  9297  002C                     	ds	1
  9298  002D                     sprintf@prec:
  9299                           
  9300                           ; 1 bytes @ 0xD
  9301  002D                     	ds	1
  9302  002E                     sprintf@val:
  9303                           
  9304                           ; 2 bytes @ 0xE
  9305  002E                     	ds	2
  9306  0030                     sprintf@flag:
  9307                           
  9308                           ; 1 bytes @ 0x10
  9309  0030                     	ds	1
  9310  0031                     sprintf@width:
  9311                           
  9312                           ; 2 bytes @ 0x11
  9313  0031                     	ds	2
  9314  0033                     sprintf@c:
  9315                           
  9316                           ; 1 bytes @ 0x13
  9317  0033                     	ds	1
  9318  0034                     sprintf@sp:
  9319                           
  9320                           ; 1 bytes @ 0x14
  9321  0034                     	ds	1
  9322  0035                     ??_menuLCD_ISR:
  9323                           
  9324                           ; 1 bytes @ 0x15
  9325  0035                     	ds	6
  9326  003B                     menuLCD_ISR@str:
  9327                           
  9328                           ; 8 bytes @ 0x1B
  9329  003B                     	ds	8
  9330  0043                     menuLCD_ISR@tt:
  9331                           
  9332                           ; 4 bytes @ 0x23
  9333  0043                     	ds	4
  9334  0047                     menuLCD_ISR@l:
  9335                           
  9336                           ; 3 bytes @ 0x27
  9337  0047                     	ds	3
  9338  004A                     menuLCD_ISR@diff:
  9339                           
  9340                           ; 3 bytes @ 0x2A
  9341  004A                     	ds	3
  9342                           
  9343                           	psect	maintext
  9344  006E                     __pmaintext:	
  9345 ;;
  9346 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  9347 ;;
  9348 ;; *************** function _main *****************
  9349 ;; Defined at:
  9350 ;;		line 638 in file "main.c"
  9351 ;; Parameters:    Size  Location     Type
  9352 ;;		None
  9353 ;; Auto vars:     Size  Location     Type
  9354 ;;  i               2   15[BANK1 ] int 
  9355 ;;  corrupted       1   14[BANK1 ] unsigned char 
  9356 ;;  notInit         1   13[BANK1 ] unsigned char 
  9357 ;;  checkSumAux     1   12[BANK1 ] unsigned char 
  9358 ;; Return value:  Size  Location     Type
  9359 ;;                  1    wreg      void 
  9360 ;; Registers used:
  9361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9362 ;; Tracked objects:
  9363 ;;		On entry : B1F/0
  9364 ;;		On exit  : 0/0
  9365 ;;		Unchanged: 0/0
  9366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9368 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9369 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9370 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9371 ;;Total ram usage:        8 bytes
  9372 ;; Hardware stack levels required when called:   10
  9373 ;; This function calls:
  9374 ;;		_DATAEE_ReadByte
  9375 ;;		_DATAEE_WriteByte
  9376 ;;		_INT_SetInterruptHandler
  9377 ;;		_LCDinit
  9378 ;;		_PWM6_LoadDutyValue
  9379 ;;		_PWM_Output_D4_Disable
  9380 ;;		_SYSTEM_Initialize
  9381 ;;		_TMR1_SetInterruptHandler
  9382 ;;		_TMR2_StopTimer
  9383 ;;		_TMR3_SetInterruptHandler
  9384 ;;		_TMR5_SetInterruptHandler
  9385 ;;		_editClock
  9386 ;;		_editLum
  9387 ;;		_editTemp
  9388 ;;		_i2c1_driver_open
  9389 ;;		_toggleAlarms
  9390 ;; This function is called by:
  9391 ;;		Startup code after reset
  9392 ;; This function uses a non-reentrant model
  9393 ;;
  9394                           
  9395                           
  9396                           ;psect for function _main
  9397  006E                     _main:
  9398  006E                     l5049:	
  9399                           ;incstack = 0
  9400                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9401                           
  9402                           
  9403                           ;main.c: 641: SYSTEM_Initialize();
  9404  006E  3189  21D9  3180   	fcall	_SYSTEM_Initialize
  9405                           
  9406                           ;main.c: 643: PWM6_LoadDutyValue(0);
  9407  0071  3000               	movlw	0
  9408  0072  0021               	movlb	1	; select bank1
  9409  0073  00A0               	movwf	PWM6_LoadDutyValue@dutyValue^(0+128)
  9410  0074  00A1               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128)
  9411  0075  3189  210C  3180   	fcall	_PWM6_LoadDutyValue
  9412  0078                     l5051:
  9413                           
  9414                           ;main.c: 644: TMR2_StopTimer();
  9415  0078  3188  2000  3180   	fcall	_TMR2_StopTimer
  9416  007B                     l5053:
  9417                           
  9418                           ;main.c: 645: PWM_Output_D4_Disable();
  9419  007B  3197  277B  3180   	fcall	_PWM_Output_D4_Disable
  9420                           
  9421                           ;main.c: 647: TMR1_SetInterruptHandler(Clock_ISR);
  9422  007E  30FF               	movlw	low _Clock_ISR
  9423  007F  0021               	movlb	1	; select bank1
  9424  0080  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  9425  0081  300E               	movlw	high _Clock_ISR
  9426  0082  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9427  0083  3197  2795  3180   	fcall	_TMR1_SetInterruptHandler
  9428                           
  9429                           ;main.c: 649: TMR3_SetInterruptHandler(menuLCD_ISR);
  9430  0086  3064               	movlw	low _menuLCD_ISR
  9431  0087  0021               	movlb	1	; select bank1
  9432  0088  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  9433  0089  3002               	movlw	high _menuLCD_ISR
  9434  008A  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9435  008B  3197  279B  3180   	fcall	_TMR3_SetInterruptHandler
  9436                           
  9437                           ;main.c: 651: TMR5_SetInterruptHandler(monitoring_ISR);
  9438  008E  30D5               	movlw	low _monitoring_ISR
  9439  008F  0021               	movlb	1	; select bank1
  9440  0090  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
  9441  0091  3005               	movlw	high _monitoring_ISR
  9442  0092  00A1               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9443  0093  3197  27A1  3180   	fcall	_TMR5_SetInterruptHandler
  9444                           
  9445                           ;main.c: 653: INT_SetInterruptHandler(S1_ISR);
  9446  0096  30FE               	movlw	low _S1_ISR
  9447  0097  0021               	movlb	1	; select bank1
  9448  0098  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
  9449  0099  300A               	movlw	high _S1_ISR
  9450  009A  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9451  009B  3197  278F  3180   	fcall	_INT_SetInterruptHandler
  9452  009E                     l5055:
  9453                           
  9454                           ;main.c: 655: uint8_t checkSumAux = 0;
  9455  009E  0021               	movlb	1	; select bank1
  9456  009F  01AC               	clrf	main@checkSumAux^(0+128)
  9457  00A0                     l5057:
  9458                           
  9459                           ;main.c: 656: bool notInit = 1;
  9460  00A0  01AD               	clrf	main@notInit^(0+128)
  9461  00A1  0AAD               	incf	main@notInit^(0+128),f
  9462  00A2                     l5059:
  9463                           
  9464                           ;main.c: 657: bool corrupted = 0;
  9465  00A2  01AE               	clrf	main@corrupted^(0+128)
  9466  00A3                     l5061:
  9467                           
  9468                           ;main.c: 658: if(DATAEE_ReadByte(0x7000) == 'S'){
  9469  00A3  3000               	movlw	0
  9470  00A4  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9471  00A5  3070               	movlw	112
  9472  00A6  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9473  00A7  3188  2020  3180   	fcall	_DATAEE_ReadByte
  9474  00AA  3A53               	xorlw	83
  9475  00AB  1D03               	skipz
  9476  00AC  28AE               	goto	u4821
  9477  00AD  28AF               	goto	u4820
  9478  00AE                     u4821:
  9479  00AE  28EE               	goto	l5081
  9480  00AF                     u4820:
  9481  00AF                     l5063:
  9482                           
  9483                           ;main.c: 659: notInit = 0;
  9484  00AF  0021               	movlb	1	; select bank1
  9485  00B0  01AD               	clrf	main@notInit^(0+128)
  9486  00B1                     l5065:
  9487                           
  9488                           ;main.c: 660: for(int i = 1; i < 13; i++){
  9489  00B1  3001               	movlw	1
  9490  00B2  00AF               	movwf	main@i^(0+128)
  9491  00B3  3000               	movlw	0
  9492  00B4  00B0               	movwf	(main@i^(0+128)+1)
  9493  00B5                     l5071:
  9494                           
  9495                           ;main.c: 661: checkSumAux += DATAEE_ReadByte(0x7000 + (i*8));
  9496  00B5  0021               	movlb	1	; select bank1
  9497  00B6  0830               	movf	(main@i+1)^(0+128),w
  9498  00B7  00AA               	movwf	(??_main^(0+128)+1)
  9499  00B8  082F               	movf	main@i^(0+128),w
  9500  00B9  00A9               	movwf	??_main^(0+128)
  9501  00BA  35A9               	lslf	??_main^(0+128),f
  9502  00BB  0DAA               	rlf	(??_main^(0+128)+1),f
  9503  00BC  35A9               	lslf	??_main^(0+128),f
  9504  00BD  0DAA               	rlf	(??_main^(0+128)+1),f
  9505  00BE  35A9               	lslf	??_main^(0+128),f
  9506  00BF  0DAA               	rlf	(??_main^(0+128)+1),f
  9507  00C0  0829               	movf	??_main^(0+128),w
  9508  00C1  3E00               	addlw	0
  9509  00C2  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9510  00C3  3070               	movlw	112
  9511  00C4  3D2A               	addwfc	(??_main+1)^(0+128),w
  9512  00C5  00A1               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+128)
  9513  00C6  3188  2020  3180   	fcall	_DATAEE_ReadByte
  9514  00C9  0021               	movlb	1	; select bank1
  9515  00CA  00AB               	movwf	(??_main+2)^(0+128)
  9516  00CB  082B               	movf	(??_main+2)^(0+128),w
  9517  00CC  07AC               	addwf	main@checkSumAux^(0+128),f
  9518  00CD                     l5073:
  9519  00CD  3001               	movlw	1
  9520  00CE  07AF               	addwf	main@i^(0+128),f
  9521  00CF  3000               	movlw	0
  9522  00D0  3DB0               	addwfc	(main@i+1)^(0+128),f
  9523  00D1                     l5075:
  9524  00D1  0830               	movf	(main@i+1)^(0+128),w
  9525  00D2  3A80               	xorlw	128
  9526  00D3  00A9               	movwf	??_main^(0+128)
  9527  00D4  3080               	movlw	128
  9528  00D5  0229               	subwf	??_main^(0+128),w
  9529  00D6  1D03               	skipz
  9530  00D7  28DA               	goto	u4835
  9531  00D8  300D               	movlw	13
  9532  00D9  022F               	subwf	main@i^(0+128),w
  9533  00DA                     u4835:
  9534  00DA  1C03               	skipc
  9535  00DB  28DD               	goto	u4831
  9536  00DC  28DE               	goto	u4830
  9537  00DD                     u4831:
  9538  00DD  28B5               	goto	l5071
  9539  00DE                     u4830:
  9540  00DE                     l5077:
  9541                           
  9542                           ;main.c: 662: };main.c: 663: if(checkSumAux != DATAEE_ReadByte(0x7000 + (13*8))){
  9543  00DE  3068               	movlw	104
  9544  00DF  0021               	movlb	1	; select bank1
  9545  00E0  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9546  00E1  3070               	movlw	112
  9547  00E2  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9548  00E3  3188  2020  3180   	fcall	_DATAEE_ReadByte
  9549  00E6  0021               	movlb	1	; select bank1
  9550  00E7  062C               	xorwf	main@checkSumAux^(0+128),w
  9551  00E8  1903               	skipnz
  9552  00E9  28EB               	goto	u4841
  9553  00EA  28EC               	goto	u4840
  9554  00EB                     u4841:
  9555  00EB  28EE               	goto	l5081
  9556  00EC                     u4840:
  9557  00EC                     l5079:
  9558                           
  9559                           ;main.c: 664: corrupted = 1;
  9560  00EC  01AE               	clrf	main@corrupted^(0+128)
  9561  00ED  0AAE               	incf	main@corrupted^(0+128),f
  9562  00EE                     l5081:
  9563                           
  9564                           ;main.c: 665: };main.c: 666: };main.c: 668: if(notInit || corrupted){
  9565  00EE  0021               	movlb	1	; select bank1
  9566  00EF  082D               	movf	main@notInit^(0+128),w
  9567  00F0  1D03               	btfss	3,2
  9568  00F1  28F3               	goto	u4851
  9569  00F2  28F4               	goto	u4850
  9570  00F3                     u4851:
  9571  00F3  28F9               	goto	l5085
  9572  00F4                     u4850:
  9573  00F4                     l5083:
  9574  00F4  082E               	movf	main@corrupted^(0+128),w
  9575  00F5  1903               	btfsc	3,2
  9576  00F6  28F8               	goto	u4861
  9577  00F7  28F9               	goto	u4860
  9578  00F8                     u4861:
  9579  00F8  2991               	goto	l5087
  9580  00F9                     u4860:
  9581  00F9                     l5085:
  9582                           
  9583                           ;main.c: 669: DATAEE_WriteByte( 0x7000 + (0 * 8), 'S');
  9584  00F9  3000               	movlw	0
  9585  00FA  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9586  00FB  3070               	movlw	112
  9587  00FC  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9588  00FD  3053               	movlw	83
  9589  00FE  00A9               	movwf	??_main^(0+128)
  9590  00FF  0829               	movf	??_main^(0+128),w
  9591  0100  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9592  0101  3189  21F8  3180   	fcall	_DATAEE_WriteByte
  9593                           
  9594                           ;main.c: 670: DATAEE_WriteByte( 0x7000 + (1 * 8), 25);
  9595  0104  3008               	movlw	8
  9596  0105  0021               	movlb	1	; select bank1
  9597  0106  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9598  0107  3070               	movlw	112
  9599  0108  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9600  0109  3019               	movlw	25
  9601  010A  00A9               	movwf	??_main^(0+128)
  9602  010B  0829               	movf	??_main^(0+128),w
  9603  010C  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9604  010D  3189  21F8  3180   	fcall	_DATAEE_WriteByte
  9605                           
  9606                           ;main.c: 671: DATAEE_WriteByte( 0x7000 + (2 * 8), 3);
  9607  0110  3010               	movlw	16
  9608  0111  0021               	movlb	1	; select bank1
  9609  0112  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9610  0113  3070               	movlw	112
  9611  0114  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9612  0115  3003               	movlw	3
  9613  0116  00A9               	movwf	??_main^(0+128)
  9614  0117  0829               	movf	??_main^(0+128),w
  9615  0118  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9616  0119  3189  21F8  3180   	fcall	_DATAEE_WriteByte
  9617                           
  9618                           ;main.c: 672: DATAEE_WriteByte( 0x7000 + (3 * 8), 5);
  9619  011C  3018               	movlw	24
  9620  011D  0021               	movlb	1	; select bank1
  9621  011E  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9622  011F  3070               	movlw	112
  9623  0120  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9624  0121  3005               	movlw	5
  9625  0122  00A9               	movwf	??_main^(0+128)
  9626  0123  0829               	movf	??_main^(0+128),w
  9627  0124  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9628  0125  3189  21F8  3180   	fcall	_DATAEE_WriteByte
  9629                           
  9630                           ;main.c: 673: DATAEE_WriteByte( 0x7000 + (4 * 8), 12);
  9631  0128  3020               	movlw	32
  9632  0129  0021               	movlb	1	; select bank1
  9633  012A  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9634  012B  3070               	movlw	112
  9635  012C  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9636  012D  300C               	movlw	12
  9637  012E  00A9               	movwf	??_main^(0+128)
  9638  012F  0829               	movf	??_main^(0+128),w
  9639  0130  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9640  0131  3189  21F8  3180   	fcall	_DATAEE_WriteByte
  9641                           
  9642                           ;main.c: 674: DATAEE_WriteByte( 0x7000 + (5 * 8), 0);
  9643  0134  3028               	movlw	40
  9644  0135  0021               	movlb	1	; select bank1
  9645  0136  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9646  0137  3070               	movlw	112
  9647  0138  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9648  0139  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9649  013A  3189  21F8  3180   	fcall	_DATAEE_WriteByte
  9650                           
  9651                           ;main.c: 675: DATAEE_WriteByte( 0x7000 + (6 * 8), 0);
  9652  013D  3030               	movlw	48
  9653  013E  0021               	movlb	1	; select bank1
  9654  013F  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9655  0140  3070               	movlw	112
  9656  0141  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9657  0142  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9658  0143  3189  21F8  3180   	fcall	_DATAEE_WriteByte
  9659                           
  9660                           ;main.c: 676: DATAEE_WriteByte( 0x7000 + (7 * 8), 28);
  9661  0146  3038               	movlw	56
  9662  0147  0021               	movlb	1	; select bank1
  9663  0148  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9664  0149  3070               	movlw	112
  9665  014A  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9666  014B  301C               	movlw	28
  9667  014C  00A9               	movwf	??_main^(0+128)
  9668  014D  0829               	movf	??_main^(0+128),w
  9669  014E  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9670  014F  3189  21F8  3180   	fcall	_DATAEE_WriteByte
  9671                           
  9672                           ;main.c: 677: DATAEE_WriteByte( 0x7000 + (8 * 8), 4);
  9673  0152  3040               	movlw	64
  9674  0153  0021               	movlb	1	; select bank1
  9675  0154  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9676  0155  3070               	movlw	112
  9677  0156  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9678  0157  3004               	movlw	4
  9679  0158  00A9               	movwf	??_main^(0+128)
  9680  0159  0829               	movf	??_main^(0+128),w
  9681  015A  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9682  015B  3189  21F8  3180   	fcall	_DATAEE_WriteByte
  9683                           
  9684                           ;main.c: 678: DATAEE_WriteByte( 0x7000 + (9 * 8), 'a');
  9685  015E  3048               	movlw	72
  9686  015F  0021               	movlb	1	; select bank1
  9687  0160  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9688  0161  3070               	movlw	112
  9689  0162  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9690  0163  3061               	movlw	97
  9691  0164  00A9               	movwf	??_main^(0+128)
  9692  0165  0829               	movf	??_main^(0+128),w
  9693  0166  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9694  0167  3189  21F8  3180   	fcall	_DATAEE_WriteByte
  9695                           
  9696                           ;main.c: 679: DATAEE_WriteByte( 0x7000 + (10 * 8), 0);
  9697  016A  3050               	movlw	80
  9698  016B  0021               	movlb	1	; select bank1
  9699  016C  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9700  016D  3070               	movlw	112
  9701  016E  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9702  016F  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9703  0170  3189  21F8  3180   	fcall	_DATAEE_WriteByte
  9704                           
  9705                           ;main.c: 680: DATAEE_WriteByte( 0x7000 + (11 * 8), 0);
  9706  0173  3058               	movlw	88
  9707  0174  0021               	movlb	1	; select bank1
  9708  0175  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9709  0176  3070               	movlw	112
  9710  0177  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9711  0178  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9712  0179  3189  21F8  3180   	fcall	_DATAEE_WriteByte
  9713                           
  9714                           ;main.c: 681: DATAEE_WriteByte( 0x7000 + (12 * 8), 0);
  9715  017C  3060               	movlw	96
  9716  017D  0021               	movlb	1	; select bank1
  9717  017E  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9718  017F  3070               	movlw	112
  9719  0180  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9720  0181  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9721  0182  3189  21F8  3180   	fcall	_DATAEE_WriteByte
  9722                           
  9723                           ;main.c: 682: DATAEE_WriteByte( 0x7000 + (13 * 8), 174);
  9724  0185  3068               	movlw	104
  9725  0186  0021               	movlb	1	; select bank1
  9726  0187  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9727  0188  3070               	movlw	112
  9728  0189  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9729  018A  30AE               	movlw	174
  9730  018B  00A9               	movwf	??_main^(0+128)
  9731  018C  0829               	movf	??_main^(0+128),w
  9732  018D  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9733  018E  3189  21F8  3180   	fcall	_DATAEE_WriteByte
  9734  0191                     l5087:
  9735                           
  9736                           ;main.c: 683: };main.c: 685: NREG = DATAEE_ReadByte(0x7000 + (1*8));
  9737  0191  3008               	movlw	8
  9738  0192  0021               	movlb	1	; select bank1
  9739  0193  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9740  0194  3070               	movlw	112
  9741  0195  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9742  0196  3188  2020  3180   	fcall	_DATAEE_ReadByte
  9743  0199  0021               	movlb	1	; select bank1
  9744  019A  00A9               	movwf	??_main^(0+128)
  9745  019B  0829               	movf	??_main^(0+128),w
  9746  019C  00C6               	movwf	_NREG^(0+128)
  9747  019D                     l5089:
  9748                           
  9749                           ;main.c: 686: PMON = DATAEE_ReadByte(0x7000 + (2*8));
  9750  019D  3010               	movlw	16
  9751  019E  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9752  019F  3070               	movlw	112
  9753  01A0  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9754  01A1  3188  2020  3180   	fcall	_DATAEE_ReadByte
  9755  01A4  0021               	movlb	1	; select bank1
  9756  01A5  00A9               	movwf	??_main^(0+128)
  9757  01A6  0829               	movf	??_main^(0+128),w
  9758  01A7  00C5               	movwf	_PMON^(0+128)
  9759  01A8                     l5091:
  9760                           
  9761                           ;main.c: 687: TALA = DATAEE_ReadByte(0x7000 + (3*8));
  9762  01A8  3018               	movlw	24
  9763  01A9  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9764  01AA  3070               	movlw	112
  9765  01AB  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9766  01AC  3188  2020  3180   	fcall	_DATAEE_ReadByte
  9767  01AF  0021               	movlb	1	; select bank1
  9768  01B0  00A9               	movwf	??_main^(0+128)
  9769  01B1  0829               	movf	??_main^(0+128),w
  9770  01B2  0020               	movlb	0	; select bank0
  9771  01B3  00E6               	movwf	_TALA
  9772  01B4                     l5093:
  9773                           
  9774                           ;main.c: 688: clkAlarm.alarmVal.h = DATAEE_ReadByte(0x7000 + (4*8));
  9775  01B4  3020               	movlw	32
  9776  01B5  0021               	movlb	1	; select bank1
  9777  01B6  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9778  01B7  3070               	movlw	112
  9779  01B8  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9780  01B9  3188  2020  3180   	fcall	_DATAEE_ReadByte
  9781  01BC  0021               	movlb	1	; select bank1
  9782  01BD  00A9               	movwf	??_main^(0+128)
  9783  01BE  0829               	movf	??_main^(0+128),w
  9784  01BF  0020               	movlb	0	; select bank0
  9785  01C0  00CD               	movwf	_clkAlarm
  9786  01C1                     l5095:
  9787                           
  9788                           ;main.c: 689: clkAlarm.alarmVal.m = DATAEE_ReadByte(0x7000 + (5*8));
  9789  01C1  3028               	movlw	40
  9790  01C2  0021               	movlb	1	; select bank1
  9791  01C3  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9792  01C4  3070               	movlw	112
  9793  01C5  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9794  01C6  3188  2020  3180   	fcall	_DATAEE_ReadByte
  9795  01C9  0021               	movlb	1	; select bank1
  9796  01CA  00A9               	movwf	??_main^(0+128)
  9797  01CB  0829               	movf	??_main^(0+128),w
  9798  01CC  0020               	movlb	0	; select bank0
  9799  01CD  00CE               	movwf	_clkAlarm+1
  9800  01CE                     l5097:
  9801                           
  9802                           ;main.c: 690: clkAlarm.alarmVal.s = DATAEE_ReadByte(0x7000 + (6*8));
  9803  01CE  3030               	movlw	48
  9804  01CF  0021               	movlb	1	; select bank1
  9805  01D0  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9806  01D1  3070               	movlw	112
  9807  01D2  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9808  01D3  3188  2020  3180   	fcall	_DATAEE_ReadByte
  9809  01D6  0021               	movlb	1	; select bank1
  9810  01D7  00A9               	movwf	??_main^(0+128)
  9811  01D8  0829               	movf	??_main^(0+128),w
  9812  01D9  0020               	movlb	0	; select bank0
  9813  01DA  00CF               	movwf	_clkAlarm+2
  9814  01DB                     l5099:
  9815                           
  9816                           ;main.c: 691: tempAlarm.alarmTemp = DATAEE_ReadByte(0x7000 + (7*8));
  9817  01DB  3038               	movlw	56
  9818  01DC  0021               	movlb	1	; select bank1
  9819  01DD  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9820  01DE  3070               	movlw	112
  9821  01DF  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9822  01E0  3188  2020  3180   	fcall	_DATAEE_ReadByte
  9823  01E3  0021               	movlb	1	; select bank1
  9824  01E4  00A9               	movwf	??_main^(0+128)
  9825  01E5  0829               	movf	??_main^(0+128),w
  9826  01E6  0020               	movlb	0	; select bank0
  9827  01E7  00D4               	movwf	_tempAlarm
  9828  01E8                     l5101:
  9829                           
  9830                           ;main.c: 692: lumAlarm.alarmLum = DATAEE_ReadByte(0x7000 + (8*8));
  9831  01E8  3040               	movlw	64
  9832  01E9  0021               	movlb	1	; select bank1
  9833  01EA  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9834  01EB  3070               	movlw	112
  9835  01EC  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9836  01ED  3188  2020  3180   	fcall	_DATAEE_ReadByte
  9837  01F0  0021               	movlb	1	; select bank1
  9838  01F1  00A9               	movwf	??_main^(0+128)
  9839  01F2  0829               	movf	??_main^(0+128),w
  9840  01F3  0020               	movlb	0	; select bank0
  9841  01F4  00D1               	movwf	_lumAlarm
  9842  01F5                     l5103:
  9843                           
  9844                           ;main.c: 693: ALAF = DATAEE_ReadByte(0x7000 + (9*8));
  9845  01F5  3048               	movlw	72
  9846  01F6  0021               	movlb	1	; select bank1
  9847  01F7  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9848  01F8  3070               	movlw	112
  9849  01F9  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9850  01FA  3188  2020  3180   	fcall	_DATAEE_ReadByte
  9851  01FD  0021               	movlb	1	; select bank1
  9852  01FE  00A9               	movwf	??_main^(0+128)
  9853  01FF  0829               	movf	??_main^(0+128),w
  9854  0200  0020               	movlb	0	; select bank0
  9855  0201  00E5               	movwf	_ALAF
  9856  0202                     l5105:
  9857                           
  9858                           ;main.c: 694: t.h = DATAEE_ReadByte(0x7000 + (10*8));
  9859  0202  3050               	movlw	80
  9860  0203  0021               	movlb	1	; select bank1
  9861  0204  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9862  0205  3070               	movlw	112
  9863  0206  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9864  0207  3188  2020  3180   	fcall	_DATAEE_ReadByte
  9865  020A  0021               	movlb	1	; select bank1
  9866  020B  00A9               	movwf	??_main^(0+128)
  9867  020C  0829               	movf	??_main^(0+128),w
  9868  020D  0020               	movlb	0	; select bank0
  9869  020E  00D7               	movwf	_t
  9870  020F                     l5107:
  9871                           
  9872                           ;main.c: 695: t.m = DATAEE_ReadByte(0x7000 + (11*8));
  9873  020F  3058               	movlw	88
  9874  0210  0021               	movlb	1	; select bank1
  9875  0211  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9876  0212  3070               	movlw	112
  9877  0213  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9878  0214  3188  2020  3180   	fcall	_DATAEE_ReadByte
  9879  0217  0021               	movlb	1	; select bank1
  9880  0218  00A9               	movwf	??_main^(0+128)
  9881  0219  0829               	movf	??_main^(0+128),w
  9882  021A  0020               	movlb	0	; select bank0
  9883  021B  00D8               	movwf	_t+1
  9884  021C                     l5109:
  9885                           
  9886                           ;main.c: 696: idx_RingBuffer = DATAEE_ReadByte(0x7000 + (12*8));
  9887  021C  3060               	movlw	96
  9888  021D  0021               	movlb	1	; select bank1
  9889  021E  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9890  021F  3070               	movlw	112
  9891  0220  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9892  0221  3188  2020  3180   	fcall	_DATAEE_ReadByte
  9893  0224  0021               	movlb	1	; select bank1
  9894  0225  00A9               	movwf	??_main^(0+128)
  9895  0226  0829               	movf	??_main^(0+128),w
  9896  0227  00C4               	movwf	_idx_RingBuffer^(0+128)
  9897  0228                     l5111:
  9898                           
  9899                           ;main.c: 700: tempAlarm.trigger = 0;
  9900  0228  0020               	movlb	0	; select bank0
  9901  0229  01D5               	clrf	_tempAlarm+1
  9902  022A                     l5113:
  9903                           
  9904                           ;main.c: 701: tempAlarm.triggered = 0;
  9905  022A  01D6               	clrf	_tempAlarm+2
  9906  022B                     l5115:
  9907                           
  9908                           ;main.c: 703: lumAlarm.trigger = 0;
  9909  022B  01D2               	clrf	_lumAlarm+1
  9910  022C                     l5117:
  9911                           
  9912                           ;main.c: 704: lumAlarm.triggered = 0;
  9913  022C  01D3               	clrf	_lumAlarm+2
  9914  022D                     l5119:
  9915                           
  9916                           ;main.c: 706: clkAlarm.trigger = 0;
  9917  022D  01D0               	clrf	_clkAlarm+3
  9918  022E                     l5121:
  9919                           
  9920                           ;main.c: 709: i2c1_driver_open();
  9921  022E  3197  27DA  3180   	fcall	_i2c1_driver_open
  9922  0231                     l5123:
  9923                           
  9924                           ;main.c: 710: TRISCbits.TRISC3 = 1;
  9925  0231  0020               	movlb	0	; select bank0
  9926  0232  1593               	bsf	19,3	;volatile
  9927  0233                     l5125:
  9928                           
  9929                           ;main.c: 711: TRISCbits.TRISC4 = 1;
  9930  0233  1613               	bsf	19,4	;volatile
  9931  0234                     l5127:
  9932                           
  9933                           ;main.c: 712: WPUC3 = 1;
  9934  0234  003E               	movlb	30	; select bank30
  9935  0235  15CF               	bsf	79,3	;volatile
  9936  0236                     l5129:
  9937                           
  9938                           ;main.c: 713: WPUC4 = 1;
  9939  0236  164F               	bsf	79,4	;volatile
  9940  0237                     l5131:
  9941                           
  9942                           ;main.c: 714: LCDinit();
  9943  0237  318D  2502  3180   	fcall	_LCDinit
  9944  023A                     l5133:
  9945                           
  9946                           ;main.c: 717: (INTCONbits.GIE = 1);
  9947  023A  178B               	bsf	11,7	;volatile
  9948  023B                     l5135:
  9949                           
  9950                           ;main.c: 720: (INTCONbits.PEIE = 1);
  9951  023B  170B               	bsf	11,6	;volatile
  9952  023C  0063               	sleep	;# 
  9953  023D  2A4B               	goto	l5139
  9954  023E                     l1339:	
  9955                           ;main.c: 727: case 0: asm("sleep");
  9956                           
  9957  023E  0063               	sleep	;# 
  9958  023F                     l5137:
  9959                           
  9960                           ;main.c: 729: editClock();
  9961  023F  318C  2450  3180   	fcall	_editClock
  9962  0242                     l1341:	
  9963                           ;main.c: 730: case 2:
  9964                           
  9965                           
  9966                           ;main.c: 731: editTemp();
  9967  0242  318A  2243  3180   	fcall	_editTemp
  9968  0245                     l1342:	
  9969                           ;main.c: 732: case 3:
  9970                           
  9971                           
  9972                           ;main.c: 733: editLum();
  9973  0245  318A  221C  3180   	fcall	_editLum
  9974  0248                     l1343:	
  9975                           ;main.c: 734: case 4:
  9976                           
  9977                           
  9978                           ;main.c: 735: toggleAlarms();
  9979  0248  318A  226A  3180   	fcall	_toggleAlarms
  9980  024B                     l5139:	
  9981                           ;main.c: 736: }
  9982                           
  9983                           
  9984                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9985                           ; Switch size 1, requested type "simple"
  9986                           ; Number of cases is 1, Range of values is 0 to 0
  9987                           ; switch strategies available:
  9988                           ; Name         Instructions Cycles
  9989                           ; simple_byte            4     3 (average)
  9990                           ; direct_byte            8     6 (fixed)
  9991                           ; jumptable            260     6 (fixed)
  9992                           ;	Chosen strategy is simple_byte
  9993  024B  0020               	movlb	0	; select bank0
  9994  024C  085B               	movf	_mode+1,w
  9995  024D  3A00               	xorlw	0	; case 0
  9996  024E  1903               	skipnz
  9997  024F  2A51               	goto	l5165
  9998  0250  2A4B               	goto	l5139
  9999  0251                     l5165:
 10000                           
 10001                           ; Switch size 1, requested type "simple"
 10002                           ; Number of cases is 5, Range of values is 0 to 4
 10003                           ; switch strategies available:
 10004                           ; Name         Instructions Cycles
 10005                           ; direct_byte           16     6 (fixed)
 10006                           ; simple_byte           16     9 (average)
 10007                           ; jumptable            260     6 (fixed)
 10008                           ;	Chosen strategy is simple_byte
 10009  0251  085A               	movf	_mode,w
 10010  0252  3A00               	xorlw	0	; case 0
 10011  0253  1903               	skipnz
 10012  0254  2A3E               	goto	l1339
 10013  0255  3A01               	xorlw	1	; case 1
 10014  0256  1903               	skipnz
 10015  0257  2A3F               	goto	l5137
 10016  0258  3A03               	xorlw	3	; case 2
 10017  0259  1903               	skipnz
 10018  025A  2A42               	goto	l1341
 10019  025B  3A01               	xorlw	1	; case 3
 10020  025C  1903               	skipnz
 10021  025D  2A45               	goto	l1342
 10022  025E  3A07               	xorlw	7	; case 4
 10023  025F  1903               	skipnz
 10024  0260  2A48               	goto	l1343
 10025  0261  2A4B               	goto	l5139
 10026  0262  3180  284C         	ljmp	start
 10027  0264                     __end_of_main:
 10028                           
 10029                           	psect	text1
 10030  0A6A                     __ptext1:	
 10031 ;; *************** function _toggleAlarms *****************
 10032 ;; Defined at:
 10033 ;;		line 594 in file "main.c"
 10034 ;; Parameters:    Size  Location     Type
 10035 ;;		None
 10036 ;; Auto vars:     Size  Location     Type
 10037 ;;		None
 10038 ;; Return value:  Size  Location     Type
 10039 ;;                  1    wreg      void 
 10040 ;; Registers used:
 10041 ;;		wreg, status,2, status,0
 10042 ;; Tracked objects:
 10043 ;;		On entry : 0/0
 10044 ;;		On exit  : 0/0
 10045 ;;		Unchanged: 0/0
 10046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10049 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10050 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10051 ;;Total ram usage:        1 bytes
 10052 ;; Hardware stack levels used:    1
 10053 ;; Hardware stack levels required when called:    7
 10054 ;; This function calls:
 10055 ;;		Nothing
 10056 ;; This function is called by:
 10057 ;;		_main
 10058 ;; This function uses a non-reentrant model
 10059 ;;
 10060                           
 10061                           
 10062                           ;psect for function _toggleAlarms
 10063  0A6A                     _toggleAlarms:
 10064  0A6A                     l1308:	
 10065                           ;incstack = 0
 10066                           ; Regs used in _toggleAlarms: [wreg+status,2+status,0]
 10067                           ;main.c: 596: while(1){
 10068                           
 10069                           
 10070                           ;main.c: 604: if(PORTCbits.RC5 == 0){
 10071  0A6A  0020               	movlb	0	; select bank0
 10072  0A6B  1A8E               	btfsc	14,5	;volatile
 10073  0A6C  2A6E               	goto	u4671
 10074  0A6D  2A6F               	goto	u4670
 10075  0A6E                     u4671:
 10076  0A6E  2A8B               	goto	l4999
 10077  0A6F                     u4670:
 10078  0A6F                     l4993:
 10079                           
 10080                           ;main.c: 605: if(ALAF == 'A'){
 10081  0A6F  3041               	movlw	65
 10082  0A70  0665               	xorwf	_ALAF,w
 10083  0A71  1D03               	btfss	3,2
 10084  0A72  2A74               	goto	u4681
 10085  0A73  2A75               	goto	u4680
 10086  0A74                     u4681:
 10087  0A74  2A7C               	goto	l4997
 10088  0A75                     u4680:
 10089  0A75                     l4995:
 10090                           
 10091                           ;main.c: 606: ALAF = 'a';
 10092  0A75  3061               	movlw	97
 10093  0A76  0021               	movlb	1	; select bank1
 10094  0A77  00A0               	movwf	??_toggleAlarms^(0+128)
 10095  0A78  0820               	movf	??_toggleAlarms^(0+128),w
 10096  0A79  0020               	movlb	0	; select bank0
 10097  0A7A  00E5               	movwf	_ALAF
 10098                           
 10099                           ;main.c: 607: } else {
 10100  0A7B  2A82               	goto	l1311
 10101  0A7C                     l4997:
 10102                           
 10103                           ;main.c: 608: ALAF = 'A';
 10104  0A7C  3041               	movlw	65
 10105  0A7D  0021               	movlb	1	; select bank1
 10106  0A7E  00A0               	movwf	??_toggleAlarms^(0+128)
 10107  0A7F  0820               	movf	??_toggleAlarms^(0+128),w
 10108  0A80  0020               	movlb	0	; select bank0
 10109  0A81  00E5               	movwf	_ALAF
 10110  0A82                     l1311:
 10111                           
 10112                           ;main.c: 609: };main.c: 610: _delay((unsigned long)((100)*(1000000/4000.0)));
 10113  0A82  3021               	movlw	33
 10114  0A83  0021               	movlb	1	; select bank1
 10115  0A84  00A0               	movwf	??_toggleAlarms^(0+128)
 10116  0A85  3076               	movlw	118
 10117  0A86                     u4877:
 10118  0A86  0B89               	decfsz	9,f
 10119  0A87  2A86               	goto	u4877
 10120  0A88  0BA0               	decfsz	??_toggleAlarms^(0+128),f
 10121  0A89  2A86               	goto	u4877
 10122  0A8A  0000               	nop
 10123  0A8B                     l4999:
 10124                           
 10125                           ;main.c: 611: };main.c: 612: if(mode != 4){
 10126  0A8B  3004               	movlw	4
 10127  0A8C  0020               	movlb	0	; select bank0
 10128  0A8D  065A               	xorwf	_mode,w
 10129  0A8E  045B               	iorwf	_mode+1,w
 10130  0A8F  1903               	btfsc	3,2
 10131  0A90  2A92               	goto	u4691
 10132  0A91  2A93               	goto	u4690
 10133  0A92                     u4691:
 10134  0A92  2A6A               	goto	l1308
 10135  0A93                     u4690:
 10136  0A93                     l5001:
 10137                           
 10138                           ;main.c: 613: mode = 0;
 10139  0A93  01DA               	clrf	_mode
 10140  0A94  01DB               	clrf	_mode+1
 10141  0A95                     l1315:	
 10142                           ;main.c: 614: break;
 10143                           
 10144  0A95  0008               	return
 10145  0A96                     __end_of_toggleAlarms:
 10146                           
 10147                           	psect	text2
 10148  17DA                     __ptext2:	
 10149 ;; *************** function _i2c1_driver_open *****************
 10150 ;; Defined at:
 10151 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 10152 ;; Parameters:    Size  Location     Type
 10153 ;;		None
 10154 ;; Auto vars:     Size  Location     Type
 10155 ;;		None
 10156 ;; Return value:  Size  Location     Type
 10157 ;;		None               void
 10158 ;; Registers used:
 10159 ;;		wreg, status,2
 10160 ;; Tracked objects:
 10161 ;;		On entry : 0/0
 10162 ;;		On exit  : 0/0
 10163 ;;		Unchanged: 0/0
 10164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10169 ;;Total ram usage:        0 bytes
 10170 ;; Hardware stack levels used:    1
 10171 ;; Hardware stack levels required when called:    7
 10172 ;; This function calls:
 10173 ;;		Nothing
 10174 ;; This function is called by:
 10175 ;;		_main
 10176 ;; This function uses a non-reentrant model
 10177 ;;
 10178                           
 10179                           
 10180                           ;psect for function _i2c1_driver_open
 10181  17DA                     _i2c1_driver_open:
 10182  17DA                     l4753:	
 10183                           ;incstack = 0
 10184                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 10185                           
 10186                           
 10187                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 10188  17DA  0023               	movlb	3	; select bank3
 10189  17DB  1A90               	btfsc	16,5	;volatile
 10190  17DC  2FDE               	goto	u4201
 10191  17DD  2FDF               	goto	u4200
 10192  17DE                     u4201:
 10193  17DE  2FE5               	goto	l243
 10194  17DF                     u4200:
 10195  17DF                     l4755:
 10196                           
 10197                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
 10198  17DF  018F               	clrf	15	;volatile
 10199  17E0                     l4757:
 10200                           
 10201                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 10202  17E0  3028               	movlw	40
 10203  17E1  0090               	movwf	16	;volatile
 10204  17E2                     l4759:
 10205                           
 10206                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 10207  17E2  0191               	clrf	17	;volatile
 10208                           
 10209                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 10210  17E3  3003               	movlw	3
 10211  17E4  008D               	movwf	13	;volatile
 10212  17E5                     l243:
 10213  17E5  0008               	return
 10214  17E6                     __end_of_i2c1_driver_open:
 10215                           
 10216                           	psect	text3
 10217  0A43                     __ptext3:	
 10218 ;; *************** function _editTemp *****************
 10219 ;; Defined at:
 10220 ;;		line 542 in file "main.c"
 10221 ;; Parameters:    Size  Location     Type
 10222 ;;		None
 10223 ;; Auto vars:     Size  Location     Type
 10224 ;;		None
 10225 ;; Return value:  Size  Location     Type
 10226 ;;                  1    wreg      void 
 10227 ;; Registers used:
 10228 ;;		wreg, status,2, status,0
 10229 ;; Tracked objects:
 10230 ;;		On entry : 0/0
 10231 ;;		On exit  : 0/0
 10232 ;;		Unchanged: 0/0
 10233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10236 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10237 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10238 ;;Total ram usage:        1 bytes
 10239 ;; Hardware stack levels used:    1
 10240 ;; Hardware stack levels required when called:    7
 10241 ;; This function calls:
 10242 ;;		Nothing
 10243 ;; This function is called by:
 10244 ;;		_main
 10245 ;; This function uses a non-reentrant model
 10246 ;;
 10247                           
 10248                           
 10249                           ;psect for function _editTemp
 10250  0A43                     _editTemp:
 10251  0A43                     l4965:	
 10252                           ;incstack = 0
 10253                           ; Regs used in _editTemp: [wreg+status,2+status,0]
 10254                           
 10255                           
 10256                           ;main.c: 543: editingTempAlarm = 1;
 10257  0A43  0020               	movlb	0	; select bank0
 10258  0A44  01E1               	clrf	_editingTempAlarm
 10259  0A45  0AE1               	incf	_editingTempAlarm,f
 10260  0A46                     l1290:	
 10261                           ;main.c: 545: while(1){
 10262                           
 10263                           
 10264                           ;main.c: 554: if(PORTCbits.RC5 == 0){
 10265  0A46  1A8E               	btfsc	14,5	;volatile
 10266  0A47  2A49               	goto	u4611
 10267  0A48  2A4A               	goto	u4610
 10268  0A49                     u4611:
 10269  0A49  2A60               	goto	l4975
 10270  0A4A                     u4610:
 10271  0A4A                     l4967:
 10272                           
 10273                           ;main.c: 555: tempAlarm.alarmTemp++;
 10274  0A4A  3001               	movlw	1
 10275  0A4B  0021               	movlb	1	; select bank1
 10276  0A4C  00A0               	movwf	??_editTemp^(0+128)
 10277  0A4D  0820               	movf	??_editTemp^(0+128),w
 10278  0A4E  0020               	movlb	0	; select bank0
 10279  0A4F  07D4               	addwf	_tempAlarm,f
 10280  0A50                     l4969:
 10281                           
 10282                           ;main.c: 556: if(tempAlarm.alarmTemp > 50){
 10283  0A50  3033               	movlw	51
 10284  0A51  0254               	subwf	_tempAlarm,w
 10285  0A52  1C03               	skipc
 10286  0A53  2A55               	goto	u4621
 10287  0A54  2A56               	goto	u4620
 10288  0A55                     u4621:
 10289  0A55  2A57               	goto	l4973
 10290  0A56                     u4620:
 10291  0A56                     l4971:
 10292                           
 10293                           ;main.c: 557: tempAlarm.alarmTemp = 0;
 10294  0A56  01D4               	clrf	_tempAlarm
 10295  0A57                     l4973:
 10296                           
 10297                           ;main.c: 558: };main.c: 559: _delay((unsigned long)((100)*(1000000/4000.0)));
 10298  0A57  3021               	movlw	33
 10299  0A58  0021               	movlb	1	; select bank1
 10300  0A59  00A0               	movwf	??_editTemp^(0+128)
 10301  0A5A  3076               	movlw	118
 10302  0A5B                     u4887:
 10303  0A5B  0B89               	decfsz	9,f
 10304  0A5C  2A5B               	goto	u4887
 10305  0A5D  0BA0               	decfsz	??_editTemp^(0+128),f
 10306  0A5E  2A5B               	goto	u4887
 10307  0A5F  0000               	nop
 10308  0A60                     l4975:
 10309                           
 10310                           ;main.c: 560: };main.c: 561: if(mode != 2){
 10311  0A60  3002               	movlw	2
 10312  0A61  0020               	movlb	0	; select bank0
 10313  0A62  065A               	xorwf	_mode,w
 10314  0A63  045B               	iorwf	_mode+1,w
 10315  0A64  1903               	btfsc	3,2
 10316  0A65  2A67               	goto	u4631
 10317  0A66  2A68               	goto	u4630
 10318  0A67                     u4631:
 10319  0A67  2A46               	goto	l1290
 10320  0A68                     u4630:
 10321  0A68                     l4977:
 10322                           
 10323                           ;main.c: 562: editingTempAlarm = 0;
 10324  0A68  01E1               	clrf	_editingTempAlarm
 10325  0A69                     l1296:	
 10326                           ;main.c: 563: break;
 10327                           
 10328  0A69  0008               	return
 10329  0A6A                     __end_of_editTemp:
 10330                           
 10331                           	psect	text4
 10332  0A1C                     __ptext4:	
 10333 ;; *************** function _editLum *****************
 10334 ;; Defined at:
 10335 ;;		line 568 in file "main.c"
 10336 ;; Parameters:    Size  Location     Type
 10337 ;;		None
 10338 ;; Auto vars:     Size  Location     Type
 10339 ;;		None
 10340 ;; Return value:  Size  Location     Type
 10341 ;;                  1    wreg      void 
 10342 ;; Registers used:
 10343 ;;		wreg, status,2, status,0
 10344 ;; Tracked objects:
 10345 ;;		On entry : 0/0
 10346 ;;		On exit  : 0/0
 10347 ;;		Unchanged: 0/0
 10348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10351 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10352 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10353 ;;Total ram usage:        1 bytes
 10354 ;; Hardware stack levels used:    1
 10355 ;; Hardware stack levels required when called:    7
 10356 ;; This function calls:
 10357 ;;		Nothing
 10358 ;; This function is called by:
 10359 ;;		_main
 10360 ;; This function uses a non-reentrant model
 10361 ;;
 10362                           
 10363                           
 10364                           ;psect for function _editLum
 10365  0A1C                     _editLum:
 10366  0A1C                     l4979:	
 10367                           ;incstack = 0
 10368                           ; Regs used in _editLum: [wreg+status,2+status,0]
 10369                           
 10370                           
 10371                           ;main.c: 569: editingLumAlarm = 1;
 10372  0A1C  0020               	movlb	0	; select bank0
 10373  0A1D  01E0               	clrf	_editingLumAlarm
 10374  0A1E  0AE0               	incf	_editingLumAlarm,f
 10375  0A1F                     l1299:	
 10376                           ;main.c: 571: while(1){
 10377                           
 10378                           
 10379                           ;main.c: 580: if(PORTCbits.RC5 == 0){
 10380  0A1F  1A8E               	btfsc	14,5	;volatile
 10381  0A20  2A22               	goto	u4641
 10382  0A21  2A23               	goto	u4640
 10383  0A22                     u4641:
 10384  0A22  2A39               	goto	l4989
 10385  0A23                     u4640:
 10386  0A23                     l4981:
 10387                           
 10388                           ;main.c: 581: lumAlarm.alarmLum++;
 10389  0A23  3001               	movlw	1
 10390  0A24  0021               	movlb	1	; select bank1
 10391  0A25  00A0               	movwf	??_editLum^(0+128)
 10392  0A26  0820               	movf	??_editLum^(0+128),w
 10393  0A27  0020               	movlb	0	; select bank0
 10394  0A28  07D1               	addwf	_lumAlarm,f
 10395  0A29                     l4983:
 10396                           
 10397                           ;main.c: 582: if(lumAlarm.alarmLum > 7){
 10398  0A29  3008               	movlw	8
 10399  0A2A  0251               	subwf	_lumAlarm,w
 10400  0A2B  1C03               	skipc
 10401  0A2C  2A2E               	goto	u4651
 10402  0A2D  2A2F               	goto	u4650
 10403  0A2E                     u4651:
 10404  0A2E  2A30               	goto	l4987
 10405  0A2F                     u4650:
 10406  0A2F                     l4985:
 10407                           
 10408                           ;main.c: 583: lumAlarm.alarmLum = 0;
 10409  0A2F  01D1               	clrf	_lumAlarm
 10410  0A30                     l4987:
 10411                           
 10412                           ;main.c: 584: };main.c: 585: _delay((unsigned long)((100)*(1000000/4000.0)));
 10413  0A30  3021               	movlw	33
 10414  0A31  0021               	movlb	1	; select bank1
 10415  0A32  00A0               	movwf	??_editLum^(0+128)
 10416  0A33  3076               	movlw	118
 10417  0A34                     u4897:
 10418  0A34  0B89               	decfsz	9,f
 10419  0A35  2A34               	goto	u4897
 10420  0A36  0BA0               	decfsz	??_editLum^(0+128),f
 10421  0A37  2A34               	goto	u4897
 10422  0A38  0000               	nop
 10423  0A39                     l4989:
 10424                           
 10425                           ;main.c: 586: };main.c: 587: if(mode != 3){
 10426  0A39  3003               	movlw	3
 10427  0A3A  0020               	movlb	0	; select bank0
 10428  0A3B  065A               	xorwf	_mode,w
 10429  0A3C  045B               	iorwf	_mode+1,w
 10430  0A3D  1903               	btfsc	3,2
 10431  0A3E  2A40               	goto	u4661
 10432  0A3F  2A41               	goto	u4660
 10433  0A40                     u4661:
 10434  0A40  2A1F               	goto	l1299
 10435  0A41                     u4660:
 10436  0A41                     l4991:
 10437                           
 10438                           ;main.c: 588: editingLumAlarm = 0;
 10439  0A41  01E0               	clrf	_editingLumAlarm
 10440  0A42                     l1305:	
 10441                           ;main.c: 589: break;
 10442                           
 10443  0A42  0008               	return
 10444  0A43                     __end_of_editLum:
 10445                           
 10446                           	psect	text5
 10447  0C50                     __ptext5:	
 10448 ;; *************** function _editClock *****************
 10449 ;; Defined at:
 10450 ;;		line 499 in file "main.c"
 10451 ;; Parameters:    Size  Location     Type
 10452 ;;		None
 10453 ;; Auto vars:     Size  Location     Type
 10454 ;;		None
 10455 ;; Return value:  Size  Location     Type
 10456 ;;                  1    wreg      void 
 10457 ;; Registers used:
 10458 ;;		wreg, status,2, status,0
 10459 ;; Tracked objects:
 10460 ;;		On entry : 0/0
 10461 ;;		On exit  : 0/0
 10462 ;;		Unchanged: 0/0
 10463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10466 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10467 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10468 ;;Total ram usage:        1 bytes
 10469 ;; Hardware stack levels used:    1
 10470 ;; Hardware stack levels required when called:    7
 10471 ;; This function calls:
 10472 ;;		Nothing
 10473 ;; This function is called by:
 10474 ;;		_main
 10475 ;; This function uses a non-reentrant model
 10476 ;;
 10477                           
 10478                           
 10479                           ;psect for function _editClock
 10480  0C50                     _editClock:
 10481  0C50                     l1271:	
 10482                           ;incstack = 0
 10483                           ; Regs used in _editClock: [wreg+status,2+status,0]
 10484                           ;main.c: 501: while(1){
 10485                           
 10486                           
 10487                           ;main.c: 513: if(PORTCbits.RC5 == 0){
 10488  0C50  0020               	movlb	0	; select bank0
 10489  0C51  1A8E               	btfsc	14,5	;volatile
 10490  0C52  2C54               	goto	u4531
 10491  0C53  2C55               	goto	u4530
 10492  0C54                     u4531:
 10493  0C54  2C9E               	goto	l4961
 10494  0C55                     u4530:
 10495  0C55                     l4935:
 10496                           
 10497                           ;main.c: 514: if(editingClockAlarm == 1){
 10498  0C55  035C               	decf	_editingClockAlarm,w
 10499  0C56  045D               	iorwf	_editingClockAlarm+1,w
 10500  0C57  1D03               	btfss	3,2
 10501  0C58  2C5A               	goto	u4541
 10502  0C59  2C5B               	goto	u4540
 10503  0C5A                     u4541:
 10504  0C5A  2C6A               	goto	l4943
 10505  0C5B                     u4540:
 10506  0C5B                     l4937:
 10507                           
 10508                           ;main.c: 515: if(clkAlarm.alarmVal.h >= 23){
 10509  0C5B  3017               	movlw	23
 10510  0C5C  024D               	subwf	_clkAlarm,w
 10511  0C5D  1C03               	skipc
 10512  0C5E  2C60               	goto	u4551
 10513  0C5F  2C61               	goto	u4550
 10514  0C60                     u4551:
 10515  0C60  2C63               	goto	l4941
 10516  0C61                     u4550:
 10517  0C61                     l4939:
 10518                           
 10519                           ;main.c: 516: clkAlarm.alarmVal.h = 0;
 10520  0C61  01CD               	clrf	_clkAlarm
 10521                           
 10522                           ;main.c: 517: } else{
 10523  0C62  2C95               	goto	l4959
 10524  0C63                     l4941:
 10525                           
 10526                           ;main.c: 518: clkAlarm.alarmVal.h++;
 10527  0C63  3001               	movlw	1
 10528  0C64  0021               	movlb	1	; select bank1
 10529  0C65  00A0               	movwf	??_editClock^(0+128)
 10530  0C66  0820               	movf	??_editClock^(0+128),w
 10531  0C67  0020               	movlb	0	; select bank0
 10532  0C68  07CD               	addwf	_clkAlarm,f
 10533  0C69  2C95               	goto	l4959
 10534  0C6A                     l4943:
 10535  0C6A  3002               	movlw	2
 10536  0C6B  065C               	xorwf	_editingClockAlarm,w
 10537  0C6C  045D               	iorwf	_editingClockAlarm+1,w
 10538  0C6D  1D03               	btfss	3,2
 10539  0C6E  2C70               	goto	u4561
 10540  0C6F  2C71               	goto	u4560
 10541  0C70                     u4561:
 10542  0C70  2C80               	goto	l4951
 10543  0C71                     u4560:
 10544  0C71                     l4945:
 10545                           
 10546                           ;main.c: 521: if(clkAlarm.alarmVal.m == 59){
 10547  0C71  303B               	movlw	59
 10548  0C72  064E               	xorwf	_clkAlarm+1,w
 10549  0C73  1D03               	btfss	3,2
 10550  0C74  2C76               	goto	u4571
 10551  0C75  2C77               	goto	u4570
 10552  0C76                     u4571:
 10553  0C76  2C79               	goto	l4949
 10554  0C77                     u4570:
 10555  0C77                     l4947:
 10556                           
 10557                           ;main.c: 522: clkAlarm.alarmVal.m = 0;
 10558  0C77  01CE               	clrf	_clkAlarm+1
 10559                           
 10560                           ;main.c: 523: } else{
 10561  0C78  2C95               	goto	l4959
 10562  0C79                     l4949:
 10563                           
 10564                           ;main.c: 524: clkAlarm.alarmVal.m++;
 10565  0C79  3001               	movlw	1
 10566  0C7A  0021               	movlb	1	; select bank1
 10567  0C7B  00A0               	movwf	??_editClock^(0+128)
 10568  0C7C  0820               	movf	??_editClock^(0+128),w
 10569  0C7D  0020               	movlb	0	; select bank0
 10570  0C7E  07CE               	addwf	_clkAlarm+1,f
 10571  0C7F  2C95               	goto	l4959
 10572  0C80                     l4951:
 10573  0C80  3003               	movlw	3
 10574  0C81  065C               	xorwf	_editingClockAlarm,w
 10575  0C82  045D               	iorwf	_editingClockAlarm+1,w
 10576  0C83  1D03               	btfss	3,2
 10577  0C84  2C86               	goto	u4581
 10578  0C85  2C87               	goto	u4580
 10579  0C86                     u4581:
 10580  0C86  2C95               	goto	l4959
 10581  0C87                     u4580:
 10582  0C87                     l4953:
 10583                           
 10584                           ;main.c: 527: if(clkAlarm.alarmVal.s == 59){
 10585  0C87  303B               	movlw	59
 10586  0C88  064F               	xorwf	_clkAlarm+2,w
 10587  0C89  1D03               	btfss	3,2
 10588  0C8A  2C8C               	goto	u4591
 10589  0C8B  2C8D               	goto	u4590
 10590  0C8C                     u4591:
 10591  0C8C  2C8F               	goto	l4957
 10592  0C8D                     u4590:
 10593  0C8D                     l4955:
 10594                           
 10595                           ;main.c: 528: clkAlarm.alarmVal.s = 0;
 10596  0C8D  01CF               	clrf	_clkAlarm+2
 10597                           
 10598                           ;main.c: 529: } else{
 10599  0C8E  2C95               	goto	l4959
 10600  0C8F                     l4957:
 10601                           
 10602                           ;main.c: 530: clkAlarm.alarmVal.s++;
 10603  0C8F  3001               	movlw	1
 10604  0C90  0021               	movlb	1	; select bank1
 10605  0C91  00A0               	movwf	??_editClock^(0+128)
 10606  0C92  0820               	movf	??_editClock^(0+128),w
 10607  0C93  0020               	movlb	0	; select bank0
 10608  0C94  07CF               	addwf	_clkAlarm+2,f
 10609  0C95                     l4959:
 10610                           
 10611                           ;main.c: 531: };main.c: 532: };main.c: 533: _delay((unsigned long)((100)*(1000000/4000.0
      +                          )));
 10612  0C95  3021               	movlw	33
 10613  0C96  0021               	movlb	1	; select bank1
 10614  0C97  00A0               	movwf	??_editClock^(0+128)
 10615  0C98  3076               	movlw	118
 10616  0C99                     u4907:
 10617  0C99  0B89               	decfsz	9,f
 10618  0C9A  2C99               	goto	u4907
 10619  0C9B  0BA0               	decfsz	??_editClock^(0+128),f
 10620  0C9C  2C99               	goto	u4907
 10621  0C9D  0000               	nop
 10622  0C9E                     l4961:
 10623                           
 10624                           ;main.c: 534: };main.c: 535: if(mode != 1){
 10625  0C9E  0020               	movlb	0	; select bank0
 10626  0C9F  035A               	decf	_mode,w
 10627  0CA0  045B               	iorwf	_mode+1,w
 10628  0CA1  1903               	btfsc	3,2
 10629  0CA2  2CA4               	goto	u4601
 10630  0CA3  2CA5               	goto	u4600
 10631  0CA4                     u4601:
 10632  0CA4  2C50               	goto	l1271
 10633  0CA5                     u4600:
 10634  0CA5                     l4963:
 10635                           
 10636                           ;main.c: 536: editingClockAlarm = 0;
 10637  0CA5  01DC               	clrf	_editingClockAlarm
 10638  0CA6  01DD               	clrf	_editingClockAlarm+1
 10639  0CA7                     l1287:	
 10640                           ;main.c: 537: break;
 10641                           
 10642  0CA7  0008               	return
 10643  0CA8                     __end_of_editClock:
 10644                           
 10645                           	psect	text6
 10646  0800                     __ptext6:	
 10647 ;; *************** function _TMR2_StopTimer *****************
 10648 ;; Defined at:
 10649 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 10650 ;; Parameters:    Size  Location     Type
 10651 ;;		None
 10652 ;; Auto vars:     Size  Location     Type
 10653 ;;		None
 10654 ;; Return value:  Size  Location     Type
 10655 ;;                  1    wreg      void 
 10656 ;; Registers used:
 10657 ;;		status,2, status,0, pclath, cstack
 10658 ;; Tracked objects:
 10659 ;;		On entry : 0/0
 10660 ;;		On exit  : 0/0
 10661 ;;		Unchanged: 0/0
 10662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10667 ;;Total ram usage:        0 bytes
 10668 ;; Hardware stack levels used:    1
 10669 ;; Hardware stack levels required when called:    8
 10670 ;; This function calls:
 10671 ;;		_TMR2_Stop
 10672 ;; This function is called by:
 10673 ;;		_main
 10674 ;; This function uses a non-reentrant model
 10675 ;;
 10676                           
 10677                           
 10678                           ;psect for function _TMR2_StopTimer
 10679  0800                     _TMR2_StopTimer:
 10680  0800                     l4795:	
 10681                           ;incstack = 0
 10682                           ; Regs used in _TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 10683                           
 10684                           
 10685                           ;tmr2.c: 119: TMR2_Stop();
 10686  0800  3197  277E  3188   	fcall	_TMR2_Stop
 10687  0803                     l779:
 10688  0803  0008               	return
 10689  0804                     __end_of_TMR2_StopTimer:
 10690                           
 10691                           	psect	text7
 10692  177E                     __ptext7:	
 10693 ;; *************** function _TMR2_Stop *****************
 10694 ;; Defined at:
 10695 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 10696 ;; Parameters:    Size  Location     Type
 10697 ;;		None
 10698 ;; Auto vars:     Size  Location     Type
 10699 ;;		None
 10700 ;; Return value:  Size  Location     Type
 10701 ;;                  1    wreg      void 
 10702 ;; Registers used:
 10703 ;;		None
 10704 ;; Tracked objects:
 10705 ;;		On entry : 0/0
 10706 ;;		On exit  : 0/0
 10707 ;;		Unchanged: 0/0
 10708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10713 ;;Total ram usage:        0 bytes
 10714 ;; Hardware stack levels used:    1
 10715 ;; Hardware stack levels required when called:    7
 10716 ;; This function calls:
 10717 ;;		Nothing
 10718 ;; This function is called by:
 10719 ;;		_TMR2_StopTimer
 10720 ;; This function uses a non-reentrant model
 10721 ;;
 10722                           
 10723                           
 10724                           ;psect for function _TMR2_Stop
 10725  177E                     _TMR2_Stop:
 10726  177E                     l4451:	
 10727                           ;incstack = 0
 10728                           ; Regs used in _TMR2_Stop: []
 10729                           
 10730                           
 10731                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 10732  177E  0025               	movlb	5	; select bank5
 10733  177F  138E               	bcf	14,7	;volatile
 10734  1780                     l776:
 10735  1780  0008               	return
 10736  1781                     __end_of_TMR2_Stop:
 10737                           
 10738                           	psect	text8
 10739  09D9                     __ptext8:	
 10740 ;; *************** function _SYSTEM_Initialize *****************
 10741 ;; Defined at:
 10742 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10743 ;; Parameters:    Size  Location     Type
 10744 ;;		None
 10745 ;; Auto vars:     Size  Location     Type
 10746 ;;		None
 10747 ;; Return value:  Size  Location     Type
 10748 ;;                  1    wreg      void 
 10749 ;; Registers used:
 10750 ;;		wreg, status,2, status,0, pclath, cstack
 10751 ;; Tracked objects:
 10752 ;;		On entry : 0/0
 10753 ;;		On exit  : 0/0
 10754 ;;		Unchanged: 0/0
 10755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10760 ;;Total ram usage:        0 bytes
 10761 ;; Hardware stack levels used:    1
 10762 ;; Hardware stack levels required when called:    9
 10763 ;; This function calls:
 10764 ;;		_ADCC_Initialize
 10765 ;;		_EXT_INT_Initialize
 10766 ;;		_OSCILLATOR_Initialize
 10767 ;;		_PIN_MANAGER_Initialize
 10768 ;;		_PMD_Initialize
 10769 ;;		_PWM6_Initialize
 10770 ;;		_TMR1_Initialize
 10771 ;;		_TMR2_Initialize
 10772 ;;		_TMR3_Initialize
 10773 ;;		_TMR5_Initialize
 10774 ;; This function is called by:
 10775 ;;		_main
 10776 ;; This function uses a non-reentrant model
 10777 ;;
 10778                           
 10779                           
 10780                           ;psect for function _SYSTEM_Initialize
 10781  09D9                     _SYSTEM_Initialize:
 10782  09D9                     l4733:	
 10783                           ;incstack = 0
 10784                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10785                           
 10786                           
 10787                           ;mcc.c: 52: PMD_Initialize();
 10788  09D9  3197  27C9  3189   	fcall	_PMD_Initialize
 10789  09DC                     l4735:
 10790                           
 10791                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 10792  09DC  318B  2373  3189   	fcall	_PIN_MANAGER_Initialize
 10793  09DF                     l4737:
 10794                           
 10795                           ;mcc.c: 54: OSCILLATOR_Initialize();
 10796  09DF  3197  27D1  3189   	fcall	_OSCILLATOR_Initialize
 10797  09E2                     l4739:
 10798                           
 10799                           ;mcc.c: 55: PWM6_Initialize();
 10800  09E2  3197  27F3  3189   	fcall	_PWM6_Initialize
 10801  09E5                     l4741:
 10802                           
 10803                           ;mcc.c: 56: ADCC_Initialize();
 10804  09E5  3188  20F5  3189   	fcall	_ADCC_Initialize
 10805  09E8                     l4743:
 10806                           
 10807                           ;mcc.c: 57: TMR3_Initialize();
 10808  09E8  3189  219B  3189   	fcall	_TMR3_Initialize
 10809  09EB                     l4745:
 10810                           
 10811                           ;mcc.c: 58: TMR5_Initialize();
 10812  09EB  3189  21BA  3189   	fcall	_TMR5_Initialize
 10813  09EE                     l4747:
 10814                           
 10815                           ;mcc.c: 59: TMR2_Initialize();
 10816  09EE  3188  2012  3189   	fcall	_TMR2_Initialize
 10817  09F1                     l4749:
 10818                           
 10819                           ;mcc.c: 60: EXT_INT_Initialize();
 10820  09F1  3188  2004  3189   	fcall	_EXT_INT_Initialize
 10821  09F4                     l4751:
 10822                           
 10823                           ;mcc.c: 61: TMR1_Initialize();
 10824  09F4  3189  217C  3189   	fcall	_TMR1_Initialize
 10825  09F7                     l176:
 10826  09F7  0008               	return
 10827  09F8                     __end_of_SYSTEM_Initialize:
 10828                           
 10829                           	psect	text9
 10830  09BA                     __ptext9:	
 10831 ;; *************** function _TMR5_Initialize *****************
 10832 ;; Defined at:
 10833 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 10834 ;; Parameters:    Size  Location     Type
 10835 ;;		None
 10836 ;; Auto vars:     Size  Location     Type
 10837 ;;		None
 10838 ;; Return value:  Size  Location     Type
 10839 ;;                  1    wreg      void 
 10840 ;; Registers used:
 10841 ;;		wreg, status,2, status,0, pclath, cstack
 10842 ;; Tracked objects:
 10843 ;;		On entry : 0/0
 10844 ;;		On exit  : 0/0
 10845 ;;		Unchanged: 0/0
 10846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10851 ;;Total ram usage:        0 bytes
 10852 ;; Hardware stack levels used:    1
 10853 ;; Hardware stack levels required when called:    8
 10854 ;; This function calls:
 10855 ;;		_TMR5_SetInterruptHandler
 10856 ;; This function is called by:
 10857 ;;		_SYSTEM_Initialize
 10858 ;; This function uses a non-reentrant model
 10859 ;;
 10860                           
 10861                           
 10862                           ;psect for function _TMR5_Initialize
 10863  09BA                     _TMR5_Initialize:
 10864  09BA                     l4355:	
 10865                           ;incstack = 0
 10866                           ; Regs used in _TMR5_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10867                           
 10868                           
 10869                           ;tmr5.c: 69: T5GCON = 0x00;
 10870  09BA  0024               	movlb	4	; select bank4
 10871  09BB  019B               	clrf	27	;volatile
 10872                           
 10873                           ;tmr5.c: 72: T5GATE = 0x00;
 10874  09BC  019C               	clrf	28	;volatile
 10875  09BD                     l4357:
 10876                           
 10877                           ;tmr5.c: 75: T5CLK = 0x04;
 10878  09BD  3004               	movlw	4
 10879  09BE  009D               	movwf	29	;volatile
 10880  09BF                     l4359:
 10881                           
 10882                           ;tmr5.c: 78: TMR5H = 0x4A;
 10883  09BF  304A               	movlw	74
 10884  09C0  0099               	movwf	25	;volatile
 10885  09C1                     l4361:
 10886                           
 10887                           ;tmr5.c: 81: TMR5L = 0x5C;
 10888  09C1  305C               	movlw	92
 10889  09C2  0098               	movwf	24	;volatile
 10890  09C3                     l4363:
 10891                           
 10892                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 10893  09C3  0819               	movf	25,w	;volatile
 10894  09C4  0021               	movlb	1	; select bank1
 10895  09C5  00B6               	movwf	(_timer5ReloadVal+1)^(0+128)	;volatile
 10896  09C6  0024               	movlb	4	; select bank4
 10897  09C7  0818               	movf	24,w	;volatile
 10898  09C8  0021               	movlb	1	; select bank1
 10899  09C9  00B5               	movwf	_timer5ReloadVal^(0+128)	;volatile
 10900  09CA                     l4365:
 10901                           
 10902                           ;tmr5.c: 87: PIR4bits.TMR5IF = 0;
 10903  09CA  002E               	movlb	14	; select bank14
 10904  09CB  1210               	bcf	16,4	;volatile
 10905  09CC                     l4367:
 10906                           
 10907                           ;tmr5.c: 90: PIE4bits.TMR5IE = 1;
 10908  09CC  161A               	bsf	26,4	;volatile
 10909  09CD                     l4369:
 10910                           
 10911                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 10912  09CD  3003               	movlw	low _TMR5_DefaultInterruptHandler
 10913  09CE  0021               	movlb	1	; select bank1
 10914  09CF  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
 10915  09D0  3000               	movlw	high _TMR5_DefaultInterruptHandler
 10916  09D1  00A1               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10917  09D2  3197  27A1  3189   	fcall	_TMR5_SetInterruptHandler
 10918  09D5                     l4371:
 10919                           
 10920                           ;tmr5.c: 96: T5CON = 0x15;
 10921  09D5  3015               	movlw	21
 10922  09D6  0024               	movlb	4	; select bank4
 10923  09D7  009A               	movwf	26	;volatile
 10924  09D8                     l687:
 10925  09D8  0008               	return
 10926  09D9                     __end_of_TMR5_Initialize:
 10927                           
 10928                           	psect	text10
 10929  17A1                     __ptext10:	
 10930 ;; *************** function _TMR5_SetInterruptHandler *****************
 10931 ;; Defined at:
 10932 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 10933 ;; Parameters:    Size  Location     Type
 10934 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 10935 ;;		 -> monitoring_ISR(1), TMR5_DefaultInterruptHandler(1), 
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;		None
 10938 ;; Return value:  Size  Location     Type
 10939 ;;                  1    wreg      void 
 10940 ;; Registers used:
 10941 ;;		wreg
 10942 ;; Tracked objects:
 10943 ;;		On entry : 0/0
 10944 ;;		On exit  : 0/0
 10945 ;;		Unchanged: 0/0
 10946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10947 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10950 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10951 ;;Total ram usage:        2 bytes
 10952 ;; Hardware stack levels used:    1
 10953 ;; Hardware stack levels required when called:    7
 10954 ;; This function calls:
 10955 ;;		Nothing
 10956 ;; This function is called by:
 10957 ;;		_TMR5_Initialize
 10958 ;;		_main
 10959 ;; This function uses a non-reentrant model
 10960 ;;
 10961                           
 10962                           
 10963                           ;psect for function _TMR5_SetInterruptHandler
 10964  17A1                     _TMR5_SetInterruptHandler:
 10965  17A1                     l4035:	
 10966                           ;incstack = 0
 10967                           ; Regs used in _TMR5_SetInterruptHandler: [wreg]
 10968                           
 10969                           
 10970                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 10971  17A1  0021               	movlb	1	; select bank1
 10972  17A2  0821               	movf	(TMR5_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 10973  17A3  00B4               	movwf	(_TMR5_InterruptHandler+1)^(0+128)
 10974  17A4  0820               	movf	TMR5_SetInterruptHandler@InterruptHandler^(0+128),w
 10975  17A5  00B3               	movwf	_TMR5_InterruptHandler^(0+128)
 10976  17A6                     l717:
 10977  17A6  0008               	return
 10978  17A7                     __end_of_TMR5_SetInterruptHandler:
 10979                           
 10980                           	psect	text11
 10981  099B                     __ptext11:	
 10982 ;; *************** function _TMR3_Initialize *****************
 10983 ;; Defined at:
 10984 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 10985 ;; Parameters:    Size  Location     Type
 10986 ;;		None
 10987 ;; Auto vars:     Size  Location     Type
 10988 ;;		None
 10989 ;; Return value:  Size  Location     Type
 10990 ;;                  1    wreg      void 
 10991 ;; Registers used:
 10992 ;;		wreg, status,2, status,0, pclath, cstack
 10993 ;; Tracked objects:
 10994 ;;		On entry : 0/0
 10995 ;;		On exit  : 0/0
 10996 ;;		Unchanged: 0/0
 10997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11002 ;;Total ram usage:        0 bytes
 11003 ;; Hardware stack levels used:    1
 11004 ;; Hardware stack levels required when called:    8
 11005 ;; This function calls:
 11006 ;;		_TMR3_SetInterruptHandler
 11007 ;; This function is called by:
 11008 ;;		_SYSTEM_Initialize
 11009 ;; This function uses a non-reentrant model
 11010 ;;
 11011                           
 11012                           
 11013                           ;psect for function _TMR3_Initialize
 11014  099B                     _TMR3_Initialize:
 11015  099B                     l4337:	
 11016                           ;incstack = 0
 11017                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11018                           
 11019                           
 11020                           ;tmr3.c: 69: T3GCON = 0x00;
 11021  099B  0024               	movlb	4	; select bank4
 11022  099C  0195               	clrf	21	;volatile
 11023                           
 11024                           ;tmr3.c: 72: T3GATE = 0x00;
 11025  099D  0196               	clrf	22	;volatile
 11026  099E                     l4339:
 11027                           
 11028                           ;tmr3.c: 75: T3CLK = 0x04;
 11029  099E  3004               	movlw	4
 11030  099F  0097               	movwf	23	;volatile
 11031  09A0                     l4341:
 11032                           
 11033                           ;tmr3.c: 78: TMR3H = 0xE7;
 11034  09A0  30E7               	movlw	231
 11035  09A1  0093               	movwf	19	;volatile
 11036  09A2                     l4343:
 11037                           
 11038                           ;tmr3.c: 81: TMR3L = 0xC8;
 11039  09A2  30C8               	movlw	200
 11040  09A3  0092               	movwf	18	;volatile
 11041  09A4                     l4345:
 11042                           
 11043                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 11044  09A4  0813               	movf	19,w	;volatile
 11045  09A5  0020               	movlb	0	; select bank0
 11046  09A6  00EF               	movwf	_timer3ReloadVal+1	;volatile
 11047  09A7  0024               	movlb	4	; select bank4
 11048  09A8  0812               	movf	18,w	;volatile
 11049  09A9  0020               	movlb	0	; select bank0
 11050  09AA  00EE               	movwf	_timer3ReloadVal	;volatile
 11051  09AB                     l4347:
 11052                           
 11053                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
 11054  09AB  002E               	movlb	14	; select bank14
 11055  09AC  1110               	bcf	16,2	;volatile
 11056  09AD                     l4349:
 11057                           
 11058                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
 11059  09AD  151A               	bsf	26,2	;volatile
 11060  09AE                     l4351:
 11061                           
 11062                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
 11063  09AE  3002               	movlw	low _TMR3_DefaultInterruptHandler
 11064  09AF  0021               	movlb	1	; select bank1
 11065  09B0  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
 11066  09B1  3000               	movlw	high _TMR3_DefaultInterruptHandler
 11067  09B2  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
 11068  09B3  3197  279B  3189   	fcall	_TMR3_SetInterruptHandler
 11069  09B6                     l4353:
 11070                           
 11071                           ;tmr3.c: 96: T3CON = 0x05;
 11072  09B6  3005               	movlw	5
 11073  09B7  0024               	movlb	4	; select bank4
 11074  09B8  0094               	movwf	20	;volatile
 11075  09B9                     l463:
 11076  09B9  0008               	return
 11077  09BA                     __end_of_TMR3_Initialize:
 11078                           
 11079                           	psect	text12
 11080  179B                     __ptext12:	
 11081 ;; *************** function _TMR3_SetInterruptHandler *****************
 11082 ;; Defined at:
 11083 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 11084 ;; Parameters:    Size  Location     Type
 11085 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 11086 ;;		 -> menuLCD_ISR(1), TMR3_DefaultInterruptHandler(1), 
 11087 ;; Auto vars:     Size  Location     Type
 11088 ;;		None
 11089 ;; Return value:  Size  Location     Type
 11090 ;;                  1    wreg      void 
 11091 ;; Registers used:
 11092 ;;		wreg
 11093 ;; Tracked objects:
 11094 ;;		On entry : 0/0
 11095 ;;		On exit  : 0/0
 11096 ;;		Unchanged: 0/0
 11097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11098 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11101 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11102 ;;Total ram usage:        2 bytes
 11103 ;; Hardware stack levels used:    1
 11104 ;; Hardware stack levels required when called:    7
 11105 ;; This function calls:
 11106 ;;		Nothing
 11107 ;; This function is called by:
 11108 ;;		_TMR3_Initialize
 11109 ;;		_main
 11110 ;; This function uses a non-reentrant model
 11111 ;;
 11112                           
 11113                           
 11114                           ;psect for function _TMR3_SetInterruptHandler
 11115  179B                     _TMR3_SetInterruptHandler:
 11116  179B                     l4019:	
 11117                           ;incstack = 0
 11118                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
 11119                           
 11120                           
 11121                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
 11122  179B  0021               	movlb	1	; select bank1
 11123  179C  0821               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 11124  179D  00B8               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
 11125  179E  0820               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
 11126  179F  00B7               	movwf	_TMR3_InterruptHandler^(0+128)
 11127  17A0                     l493:
 11128  17A0  0008               	return
 11129  17A1                     __end_of_TMR3_SetInterruptHandler:
 11130                           
 11131                           	psect	text13
 11132  0812                     __ptext13:	
 11133 ;; *************** function _TMR2_Initialize *****************
 11134 ;; Defined at:
 11135 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 11136 ;; Parameters:    Size  Location     Type
 11137 ;;		None
 11138 ;; Auto vars:     Size  Location     Type
 11139 ;;		None
 11140 ;; Return value:  Size  Location     Type
 11141 ;;                  1    wreg      void 
 11142 ;; Registers used:
 11143 ;;		wreg, status,2
 11144 ;; Tracked objects:
 11145 ;;		On entry : 0/0
 11146 ;;		On exit  : 0/0
 11147 ;;		Unchanged: 0/0
 11148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11153 ;;Total ram usage:        0 bytes
 11154 ;; Hardware stack levels used:    1
 11155 ;; Hardware stack levels required when called:    7
 11156 ;; This function calls:
 11157 ;;		Nothing
 11158 ;; This function is called by:
 11159 ;;		_SYSTEM_Initialize
 11160 ;; This function uses a non-reentrant model
 11161 ;;
 11162                           
 11163                           
 11164                           ;psect for function _TMR2_Initialize
 11165  0812                     _TMR2_Initialize:
 11166  0812                     l4373:	
 11167                           ;incstack = 0
 11168                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11169                           
 11170                           
 11171                           ;tmr2.c: 67: T2CLKCON = 0x01;
 11172  0812  3001               	movlw	1
 11173  0813  0025               	movlb	5	; select bank5
 11174  0814  0090               	movwf	16	;volatile
 11175  0815                     l4375:
 11176                           
 11177                           ;tmr2.c: 70: T2HLT = 0x00;
 11178  0815  018F               	clrf	15	;volatile
 11179  0816                     l4377:
 11180                           
 11181                           ;tmr2.c: 73: T2RST = 0x00;
 11182  0816  0191               	clrf	17	;volatile
 11183                           
 11184                           ;tmr2.c: 76: T2PR = 0xFF;
 11185  0817  30FF               	movlw	255
 11186  0818  008D               	movwf	13	;volatile
 11187  0819                     l4379:
 11188                           
 11189                           ;tmr2.c: 79: T2TMR = 0x00;
 11190  0819  018C               	clrf	12	;volatile
 11191  081A                     l4381:
 11192                           
 11193                           ;tmr2.c: 82: PIR4bits.TMR2IF = 0;
 11194  081A  002E               	movlb	14	; select bank14
 11195  081B  1090               	bcf	16,1	;volatile
 11196  081C                     l4383:
 11197                           
 11198                           ;tmr2.c: 85: T2CON = 0x80;
 11199  081C  3080               	movlw	128
 11200  081D  0025               	movlb	5	; select bank5
 11201  081E  008E               	movwf	14	;volatile
 11202  081F                     l761:
 11203  081F  0008               	return
 11204  0820                     __end_of_TMR2_Initialize:
 11205                           
 11206                           	psect	text14
 11207  097C                     __ptext14:	
 11208 ;; *************** function _TMR1_Initialize *****************
 11209 ;; Defined at:
 11210 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 11211 ;; Parameters:    Size  Location     Type
 11212 ;;		None
 11213 ;; Auto vars:     Size  Location     Type
 11214 ;;		None
 11215 ;; Return value:  Size  Location     Type
 11216 ;;                  1    wreg      void 
 11217 ;; Registers used:
 11218 ;;		wreg, status,2, status,0, pclath, cstack
 11219 ;; Tracked objects:
 11220 ;;		On entry : 0/0
 11221 ;;		On exit  : 0/0
 11222 ;;		Unchanged: 0/0
 11223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11228 ;;Total ram usage:        0 bytes
 11229 ;; Hardware stack levels used:    1
 11230 ;; Hardware stack levels required when called:    8
 11231 ;; This function calls:
 11232 ;;		_TMR1_SetInterruptHandler
 11233 ;; This function is called by:
 11234 ;;		_SYSTEM_Initialize
 11235 ;; This function uses a non-reentrant model
 11236 ;;
 11237                           
 11238                           
 11239                           ;psect for function _TMR1_Initialize
 11240  097C                     _TMR1_Initialize:
 11241  097C                     l4391:	
 11242                           ;incstack = 0
 11243                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11244                           
 11245                           
 11246                           ;tmr1.c: 69: T1GCON = 0x00;
 11247  097C  0024               	movlb	4	; select bank4
 11248  097D  018F               	clrf	15	;volatile
 11249                           
 11250                           ;tmr1.c: 72: T1GATE = 0x00;
 11251  097E  0190               	clrf	16	;volatile
 11252  097F                     l4393:
 11253                           
 11254                           ;tmr1.c: 75: T1CLK = 0x04;
 11255  097F  3004               	movlw	4
 11256  0980  0091               	movwf	17	;volatile
 11257  0981                     l4395:
 11258                           
 11259                           ;tmr1.c: 78: TMR1H = 0x86;
 11260  0981  3086               	movlw	134
 11261  0982  008D               	movwf	13	;volatile
 11262  0983                     l4397:
 11263                           
 11264                           ;tmr1.c: 81: TMR1L = 0xE8;
 11265  0983  30E8               	movlw	232
 11266  0984  008C               	movwf	12	;volatile
 11267  0985                     l4399:
 11268                           
 11269                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 11270  0985  080D               	movf	13,w	;volatile
 11271  0986  0021               	movlb	1	; select bank1
 11272  0987  00BC               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 11273  0988  0024               	movlb	4	; select bank4
 11274  0989  080C               	movf	12,w	;volatile
 11275  098A  0021               	movlb	1	; select bank1
 11276  098B  00BB               	movwf	_timer1ReloadVal^(0+128)	;volatile
 11277  098C                     l4401:
 11278                           
 11279                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
 11280  098C  002E               	movlb	14	; select bank14
 11281  098D  1010               	bcf	16,0	;volatile
 11282  098E                     l4403:
 11283                           
 11284                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
 11285  098E  141A               	bsf	26,0	;volatile
 11286  098F                     l4405:
 11287                           
 11288                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 11289  098F  306E               	movlw	low _TMR1_DefaultInterruptHandler
 11290  0990  0021               	movlb	1	; select bank1
 11291  0991  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
 11292  0992  3017               	movlw	high _TMR1_DefaultInterruptHandler
 11293  0993  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
 11294  0994  3197  2795  3189   	fcall	_TMR1_SetInterruptHandler
 11295  0997                     l4407:
 11296                           
 11297                           ;tmr1.c: 96: T1CON = 0x05;
 11298  0997  3005               	movlw	5
 11299  0998  0024               	movlb	4	; select bank4
 11300  0999  008E               	movwf	14	;volatile
 11301  099A                     l399:
 11302  099A  0008               	return
 11303  099B                     __end_of_TMR1_Initialize:
 11304                           
 11305                           	psect	text15
 11306  1795                     __ptext15:	
 11307 ;; *************** function _TMR1_SetInterruptHandler *****************
 11308 ;; Defined at:
 11309 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 11310 ;; Parameters:    Size  Location     Type
 11311 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 11312 ;;		 -> Clock_ISR(1), TMR1_DefaultInterruptHandler(1), 
 11313 ;; Auto vars:     Size  Location     Type
 11314 ;;		None
 11315 ;; Return value:  Size  Location     Type
 11316 ;;                  1    wreg      void 
 11317 ;; Registers used:
 11318 ;;		wreg
 11319 ;; Tracked objects:
 11320 ;;		On entry : 0/0
 11321 ;;		On exit  : 0/0
 11322 ;;		Unchanged: 0/0
 11323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11324 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11327 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11328 ;;Total ram usage:        2 bytes
 11329 ;; Hardware stack levels used:    1
 11330 ;; Hardware stack levels required when called:    7
 11331 ;; This function calls:
 11332 ;;		Nothing
 11333 ;; This function is called by:
 11334 ;;		_TMR1_Initialize
 11335 ;;		_main
 11336 ;; This function uses a non-reentrant model
 11337 ;;
 11338                           
 11339                           
 11340                           ;psect for function _TMR1_SetInterruptHandler
 11341  1795                     _TMR1_SetInterruptHandler:
 11342  1795                     l4017:	
 11343                           ;incstack = 0
 11344                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 11345                           
 11346                           
 11347                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
 11348  1795  0021               	movlb	1	; select bank1
 11349  1796  0821               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 11350  1797  00BA               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 11351  1798  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
 11352  1799  00B9               	movwf	_TMR1_InterruptHandler^(0+128)
 11353  179A                     l429:
 11354  179A  0008               	return
 11355  179B                     __end_of_TMR1_SetInterruptHandler:
 11356                           
 11357                           	psect	text16
 11358  17F3                     __ptext16:	
 11359 ;; *************** function _PWM6_Initialize *****************
 11360 ;; Defined at:
 11361 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 11362 ;; Parameters:    Size  Location     Type
 11363 ;;		None
 11364 ;; Auto vars:     Size  Location     Type
 11365 ;;		None
 11366 ;; Return value:  Size  Location     Type
 11367 ;;                  1    wreg      void 
 11368 ;; Registers used:
 11369 ;;		wreg, status,2, status,0
 11370 ;; Tracked objects:
 11371 ;;		On entry : 0/0
 11372 ;;		On exit  : 0/0
 11373 ;;		Unchanged: 0/0
 11374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11379 ;;Total ram usage:        0 bytes
 11380 ;; Hardware stack levels used:    1
 11381 ;; Hardware stack levels required when called:    7
 11382 ;; This function calls:
 11383 ;;		Nothing
 11384 ;; This function is called by:
 11385 ;;		_SYSTEM_Initialize
 11386 ;; This function uses a non-reentrant model
 11387 ;;
 11388                           
 11389                           
 11390                           ;psect for function _PWM6_Initialize
 11391  17F3                     _PWM6_Initialize:
 11392  17F3                     l4327:	
 11393                           ;incstack = 0
 11394                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 11395                           
 11396                           
 11397                           ;pwm6.c: 62: PWM6CON = 0x80;
 11398  17F3  3080               	movlw	128
 11399  17F4  0027               	movlb	7	; select bank7
 11400  17F5  008E               	movwf	14	;volatile
 11401                           
 11402                           ;pwm6.c: 65: PWM6DCH = 0xFF;
 11403  17F6  30FF               	movlw	255
 11404  17F7  008D               	movwf	13	;volatile
 11405                           
 11406                           ;pwm6.c: 68: PWM6DCL = 0xC0;
 11407  17F8  30C0               	movlw	192
 11408  17F9  008C               	movwf	12	;volatile
 11409  17FA                     l4329:
 11410                           
 11411                           ;pwm6.c: 71: CCPTMRS1bits.P6TSEL = 1;
 11412  17FA  0024               	movlb	4	; select bank4
 11413  17FB  081F               	movf	31,w	;volatile
 11414  17FC  39F3               	andlw	-13
 11415  17FD  3804               	iorlw	4
 11416  17FE  009F               	movwf	31	;volatile
 11417  17FF                     l731:
 11418  17FF  0008               	return
 11419  1800                     __end_of_PWM6_Initialize:
 11420                           
 11421                           	psect	text17
 11422  17C9                     __ptext17:	
 11423 ;; *************** function _PMD_Initialize *****************
 11424 ;; Defined at:
 11425 ;;		line 78 in file "mcc_generated_files/mcc.c"
 11426 ;; Parameters:    Size  Location     Type
 11427 ;;		None
 11428 ;; Auto vars:     Size  Location     Type
 11429 ;;		None
 11430 ;; Return value:  Size  Location     Type
 11431 ;;                  1    wreg      void 
 11432 ;; Registers used:
 11433 ;;		status,2
 11434 ;; Tracked objects:
 11435 ;;		On entry : 0/0
 11436 ;;		On exit  : 0/0
 11437 ;;		Unchanged: 0/0
 11438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11443 ;;Total ram usage:        0 bytes
 11444 ;; Hardware stack levels used:    1
 11445 ;; Hardware stack levels required when called:    7
 11446 ;; This function calls:
 11447 ;;		Nothing
 11448 ;; This function is called by:
 11449 ;;		_SYSTEM_Initialize
 11450 ;; This function uses a non-reentrant model
 11451 ;;
 11452                           
 11453                           
 11454                           ;psect for function _PMD_Initialize
 11455  17C9                     _PMD_Initialize:
 11456  17C9                     l4317:	
 11457                           ;incstack = 0
 11458                           ; Regs used in _PMD_Initialize: [status,2]
 11459                           
 11460                           
 11461                           ;mcc.c: 81: PMD0 = 0x00;
 11462  17C9  002F               	movlb	15	; select bank15
 11463  17CA  0196               	clrf	22	;volatile
 11464                           
 11465                           ;mcc.c: 83: PMD1 = 0x00;
 11466  17CB  0197               	clrf	23	;volatile
 11467                           
 11468                           ;mcc.c: 85: PMD2 = 0x00;
 11469  17CC  0198               	clrf	24	;volatile
 11470                           
 11471                           ;mcc.c: 87: PMD3 = 0x00;
 11472  17CD  0199               	clrf	25	;volatile
 11473                           
 11474                           ;mcc.c: 89: PMD4 = 0x00;
 11475  17CE  019A               	clrf	26	;volatile
 11476                           
 11477                           ;mcc.c: 91: PMD5 = 0x00;
 11478  17CF  019B               	clrf	27	;volatile
 11479  17D0                     l182:
 11480  17D0  0008               	return
 11481  17D1                     __end_of_PMD_Initialize:
 11482                           
 11483                           	psect	text18
 11484  0B73                     __ptext18:	
 11485 ;; *************** function _PIN_MANAGER_Initialize *****************
 11486 ;; Defined at:
 11487 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11488 ;; Parameters:    Size  Location     Type
 11489 ;;		None
 11490 ;; Auto vars:     Size  Location     Type
 11491 ;;		None
 11492 ;; Return value:  Size  Location     Type
 11493 ;;                  1    wreg      void 
 11494 ;; Registers used:
 11495 ;;		wreg, status,2
 11496 ;; Tracked objects:
 11497 ;;		On entry : 0/0
 11498 ;;		On exit  : 0/0
 11499 ;;		Unchanged: 0/0
 11500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11505 ;;Total ram usage:        0 bytes
 11506 ;; Hardware stack levels used:    1
 11507 ;; Hardware stack levels required when called:    7
 11508 ;; This function calls:
 11509 ;;		Nothing
 11510 ;; This function is called by:
 11511 ;;		_SYSTEM_Initialize
 11512 ;; This function uses a non-reentrant model
 11513 ;;
 11514                           
 11515                           
 11516                           ;psect for function _PIN_MANAGER_Initialize
 11517  0B73                     _PIN_MANAGER_Initialize:
 11518  0B73                     l4273:	
 11519                           ;incstack = 0
 11520                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11521                           
 11522                           
 11523                           ;pin_manager.c: 62: LATE = 0x00;
 11524  0B73  0020               	movlb	0	; select bank0
 11525  0B74  019A               	clrf	26	;volatile
 11526                           
 11527                           ;pin_manager.c: 63: LATD = 0x00;
 11528  0B75  0199               	clrf	25	;volatile
 11529                           
 11530                           ;pin_manager.c: 64: LATA = 0x00;
 11531  0B76  0196               	clrf	22	;volatile
 11532                           
 11533                           ;pin_manager.c: 65: LATB = 0x00;
 11534  0B77  0197               	clrf	23	;volatile
 11535                           
 11536                           ;pin_manager.c: 66: LATC = 0x00;
 11537  0B78  0198               	clrf	24	;volatile
 11538  0B79                     l4275:
 11539                           
 11540                           ;pin_manager.c: 71: TRISE = 0x07;
 11541  0B79  3007               	movlw	7
 11542  0B7A  0095               	movwf	21	;volatile
 11543  0B7B                     l4277:
 11544                           
 11545                           ;pin_manager.c: 72: TRISA = 0x0F;
 11546  0B7B  300F               	movlw	15
 11547  0B7C  0091               	movwf	17	;volatile
 11548  0B7D                     l4279:
 11549                           
 11550                           ;pin_manager.c: 73: TRISB = 0xFF;
 11551  0B7D  30FF               	movlw	255
 11552  0B7E  0092               	movwf	18	;volatile
 11553  0B7F                     l4281:
 11554                           
 11555                           ;pin_manager.c: 74: TRISC = 0xFF;
 11556  0B7F  30FF               	movlw	255
 11557  0B80  0093               	movwf	19	;volatile
 11558  0B81                     l4283:
 11559                           
 11560                           ;pin_manager.c: 75: TRISD = 0xFF;
 11561  0B81  30FF               	movlw	255
 11562  0B82  0094               	movwf	20	;volatile
 11563  0B83                     l4285:
 11564                           
 11565                           ;pin_manager.c: 80: ANSELD = 0xFF;
 11566  0B83  30FF               	movlw	255
 11567  0B84  003E               	movlb	30	; select bank30
 11568  0B85  00D9               	movwf	89	;volatile
 11569  0B86                     l4287:
 11570                           
 11571                           ;pin_manager.c: 81: ANSELC = 0xC7;
 11572  0B86  30C7               	movlw	199
 11573  0B87  00CE               	movwf	78	;volatile
 11574  0B88                     l4289:
 11575                           
 11576                           ;pin_manager.c: 82: ANSELB = 0xEF;
 11577  0B88  30EF               	movlw	239
 11578  0B89  00C3               	movwf	67	;volatile
 11579  0B8A                     l4291:
 11580                           
 11581                           ;pin_manager.c: 83: ANSELE = 0x07;
 11582  0B8A  3007               	movlw	7
 11583  0B8B  00E4               	movwf	100	;volatile
 11584  0B8C                     l4293:
 11585                           
 11586                           ;pin_manager.c: 84: ANSELA = 0x4F;
 11587  0B8C  304F               	movlw	79
 11588  0B8D  00B8               	movwf	56	;volatile
 11589                           
 11590                           ;pin_manager.c: 89: WPUD = 0x00;
 11591  0B8E  01DA               	clrf	90	;volatile
 11592                           
 11593                           ;pin_manager.c: 90: WPUE = 0x00;
 11594  0B8F  01E5               	clrf	101	;volatile
 11595                           
 11596                           ;pin_manager.c: 91: WPUB = 0x00;
 11597  0B90  01C4               	clrf	68	;volatile
 11598                           
 11599                           ;pin_manager.c: 92: WPUA = 0x00;
 11600  0B91  01B9               	clrf	57	;volatile
 11601                           
 11602                           ;pin_manager.c: 93: WPUC = 0x00;
 11603  0B92  01CF               	clrf	79	;volatile
 11604                           
 11605                           ;pin_manager.c: 98: ODCONE = 0x00;
 11606  0B93  01E6               	clrf	102	;volatile
 11607                           
 11608                           ;pin_manager.c: 99: ODCONA = 0x00;
 11609  0B94  01BA               	clrf	58	;volatile
 11610                           
 11611                           ;pin_manager.c: 100: ODCONB = 0x00;
 11612  0B95  01C5               	clrf	69	;volatile
 11613                           
 11614                           ;pin_manager.c: 101: ODCONC = 0x00;
 11615  0B96  01D0               	clrf	80	;volatile
 11616                           
 11617                           ;pin_manager.c: 102: ODCOND = 0x00;
 11618  0B97  01DB               	clrf	91	;volatile
 11619  0B98                     l4295:
 11620                           
 11621                           ;pin_manager.c: 107: SLRCONA = 0xFF;
 11622  0B98  30FF               	movlw	255
 11623  0B99  00BB               	movwf	59	;volatile
 11624  0B9A                     l4297:
 11625                           
 11626                           ;pin_manager.c: 108: SLRCONB = 0xFF;
 11627  0B9A  30FF               	movlw	255
 11628  0B9B  00C6               	movwf	70	;volatile
 11629  0B9C                     l4299:
 11630                           
 11631                           ;pin_manager.c: 109: SLRCONC = 0xFF;
 11632  0B9C  30FF               	movlw	255
 11633  0B9D  00D1               	movwf	81	;volatile
 11634  0B9E                     l4301:
 11635                           
 11636                           ;pin_manager.c: 110: SLRCOND = 0xFF;
 11637  0B9E  30FF               	movlw	255
 11638  0B9F  00DC               	movwf	92	;volatile
 11639  0BA0                     l4303:
 11640                           
 11641                           ;pin_manager.c: 111: SLRCONE = 0x07;
 11642  0BA0  3007               	movlw	7
 11643  0BA1  00E7               	movwf	103	;volatile
 11644  0BA2                     l4305:
 11645                           
 11646                           ;pin_manager.c: 120: INTPPS = 0x0C;
 11647  0BA2  300C               	movlw	12
 11648  0BA3  003D               	movlb	29	; select bank29
 11649  0BA4  0090               	movwf	16	;volatile
 11650  0BA5                     l4307:
 11651                           
 11652                           ;pin_manager.c: 121: SSP1CLKPPS = 0x13;
 11653  0BA5  3013               	movlw	19
 11654  0BA6  00C5               	movwf	69	;volatile
 11655  0BA7                     l4309:
 11656                           
 11657                           ;pin_manager.c: 122: RC3PPS = 0x14;
 11658  0BA7  3014               	movlw	20
 11659  0BA8  003E               	movlb	30	; select bank30
 11660  0BA9  00A3               	movwf	35	;volatile
 11661  0BAA                     l4311:
 11662                           
 11663                           ;pin_manager.c: 123: RC4PPS = 0x15;
 11664  0BAA  3015               	movlw	21
 11665  0BAB  00A4               	movwf	36	;volatile
 11666  0BAC                     l4313:
 11667                           
 11668                           ;pin_manager.c: 124: RA6PPS = 0x0E;
 11669  0BAC  300E               	movlw	14
 11670  0BAD  0096               	movwf	22	;volatile
 11671  0BAE                     l4315:
 11672                           
 11673                           ;pin_manager.c: 125: SSP1DATPPS = 0x14;
 11674  0BAE  3014               	movlw	20
 11675  0BAF  003D               	movlb	29	; select bank29
 11676  0BB0  00C6               	movwf	70	;volatile
 11677  0BB1                     l124:
 11678  0BB1  0008               	return
 11679  0BB2                     __end_of_PIN_MANAGER_Initialize:
 11680                           
 11681                           	psect	text19
 11682  17D1                     __ptext19:	
 11683 ;; *************** function _OSCILLATOR_Initialize *****************
 11684 ;; Defined at:
 11685 ;;		line 64 in file "mcc_generated_files/mcc.c"
 11686 ;; Parameters:    Size  Location     Type
 11687 ;;		None
 11688 ;; Auto vars:     Size  Location     Type
 11689 ;;		None
 11690 ;; Return value:  Size  Location     Type
 11691 ;;                  1    wreg      void 
 11692 ;; Registers used:
 11693 ;;		wreg, status,2
 11694 ;; Tracked objects:
 11695 ;;		On entry : 0/0
 11696 ;;		On exit  : 0/0
 11697 ;;		Unchanged: 0/0
 11698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11703 ;;Total ram usage:        0 bytes
 11704 ;; Hardware stack levels used:    1
 11705 ;; Hardware stack levels required when called:    7
 11706 ;; This function calls:
 11707 ;;		Nothing
 11708 ;; This function is called by:
 11709 ;;		_SYSTEM_Initialize
 11710 ;; This function uses a non-reentrant model
 11711 ;;
 11712                           
 11713                           
 11714                           ;psect for function _OSCILLATOR_Initialize
 11715  17D1                     _OSCILLATOR_Initialize:
 11716  17D1                     l4319:	
 11717                           ;incstack = 0
 11718                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11719                           
 11720                           
 11721                           ;mcc.c: 67: OSCCON1 = 0x62;
 11722  17D1  3062               	movlw	98
 11723  17D2  0031               	movlb	17	; select bank17
 11724  17D3  008D               	movwf	13	;volatile
 11725  17D4                     l4321:
 11726                           
 11727                           ;mcc.c: 69: OSCCON3 = 0x00;
 11728  17D4  018F               	clrf	15	;volatile
 11729  17D5                     l4323:
 11730                           
 11731                           ;mcc.c: 71: OSCEN = 0x00;
 11732  17D5  0191               	clrf	17	;volatile
 11733                           
 11734                           ;mcc.c: 73: OSCFRQ = 0x02;
 11735  17D6  3002               	movlw	2
 11736  17D7  0093               	movwf	19	;volatile
 11737  17D8                     l4325:
 11738                           
 11739                           ;mcc.c: 75: OSCTUNE = 0x00;
 11740  17D8  0192               	clrf	18	;volatile
 11741  17D9                     l179:
 11742  17D9  0008               	return
 11743  17DA                     __end_of_OSCILLATOR_Initialize:
 11744                           
 11745                           	psect	text20
 11746  0804                     __ptext20:	
 11747 ;; *************** function _EXT_INT_Initialize *****************
 11748 ;; Defined at:
 11749 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 11750 ;; Parameters:    Size  Location     Type
 11751 ;;		None
 11752 ;; Auto vars:     Size  Location     Type
 11753 ;;		None
 11754 ;; Return value:  Size  Location     Type
 11755 ;;                  1    wreg      void 
 11756 ;; Registers used:
 11757 ;;		wreg, status,2, status,0, pclath, cstack
 11758 ;; Tracked objects:
 11759 ;;		On entry : 0/0
 11760 ;;		On exit  : 0/0
 11761 ;;		Unchanged: 0/0
 11762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11767 ;;Total ram usage:        0 bytes
 11768 ;; Hardware stack levels used:    1
 11769 ;; Hardware stack levels required when called:    8
 11770 ;; This function calls:
 11771 ;;		_INT_SetInterruptHandler
 11772 ;; This function is called by:
 11773 ;;		_SYSTEM_Initialize
 11774 ;; This function uses a non-reentrant model
 11775 ;;
 11776                           
 11777                           
 11778                           ;psect for function _EXT_INT_Initialize
 11779  0804                     _EXT_INT_Initialize:
 11780  0804                     l4385:	
 11781                           ;incstack = 0
 11782                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11783                           
 11784                           
 11785                           ;ext_int.c: 64: (PIR0bits.INTF = 0);
 11786  0804  002E               	movlb	14	; select bank14
 11787  0805  100C               	bcf	12,0	;volatile
 11788                           
 11789                           ;ext_int.c: 65: (INTCONbits.INTEDG = 0);
 11790  0806  100B               	bcf	11,0	;volatile
 11791  0807                     l4387:
 11792                           
 11793                           ;ext_int.c: 67: INT_SetInterruptHandler(INT_DefaultInterruptHandler);
 11794  0807  306D               	movlw	low _INT_DefaultInterruptHandler
 11795  0808  0021               	movlb	1	; select bank1
 11796  0809  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
 11797  080A  3017               	movlw	high _INT_DefaultInterruptHandler
 11798  080B  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
 11799  080C  3197  278F  3188   	fcall	_INT_SetInterruptHandler
 11800  080F                     l4389:
 11801                           
 11802                           ;ext_int.c: 68: (PIE0bits.INTE = 1);
 11803  080F  002E               	movlb	14	; select bank14
 11804  0810  1416               	bsf	22,0	;volatile
 11805  0811                     l1373:
 11806  0811  0008               	return
 11807  0812                     __end_of_EXT_INT_Initialize:
 11808                           
 11809                           	psect	text21
 11810  178F                     __ptext21:	
 11811 ;; *************** function _INT_SetInterruptHandler *****************
 11812 ;; Defined at:
 11813 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 11814 ;; Parameters:    Size  Location     Type
 11815 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 11816 ;;		 -> INT_DefaultInterruptHandler(1), S1_ISR(1), 
 11817 ;; Auto vars:     Size  Location     Type
 11818 ;;		None
 11819 ;; Return value:  Size  Location     Type
 11820 ;;                  1    wreg      void 
 11821 ;; Registers used:
 11822 ;;		wreg
 11823 ;; Tracked objects:
 11824 ;;		On entry : 0/0
 11825 ;;		On exit  : 0/0
 11826 ;;		Unchanged: 0/0
 11827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11828 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11831 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11832 ;;Total ram usage:        2 bytes
 11833 ;; Hardware stack levels used:    1
 11834 ;; Hardware stack levels required when called:    7
 11835 ;; This function calls:
 11836 ;;		Nothing
 11837 ;; This function is called by:
 11838 ;;		_main
 11839 ;;		_EXT_INT_Initialize
 11840 ;; This function uses a non-reentrant model
 11841 ;;
 11842                           
 11843                           
 11844                           ;psect for function _INT_SetInterruptHandler
 11845  178F                     _INT_SetInterruptHandler:
 11846  178F                     l4245:	
 11847                           ;incstack = 0
 11848                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 11849                           
 11850                           
 11851                           ;ext_int.c: 51: INT_InterruptHandler = InterruptHandler;
 11852  178F  0021               	movlb	1	; select bank1
 11853  1790  0821               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 11854  1791  00B2               	movwf	(_INT_InterruptHandler+1)^(0+128)
 11855  1792  0820               	movf	INT_SetInterruptHandler@InterruptHandler^(0+128),w
 11856  1793  00B1               	movwf	_INT_InterruptHandler^(0+128)
 11857  1794                     l1367:
 11858  1794  0008               	return
 11859  1795                     __end_of_INT_SetInterruptHandler:
 11860                           
 11861                           	psect	text22
 11862  08F5                     __ptext22:	
 11863 ;; *************** function _ADCC_Initialize *****************
 11864 ;; Defined at:
 11865 ;;		line 63 in file "mcc_generated_files/adcc.c"
 11866 ;; Parameters:    Size  Location     Type
 11867 ;;		None
 11868 ;; Auto vars:     Size  Location     Type
 11869 ;;		None
 11870 ;; Return value:  Size  Location     Type
 11871 ;;                  1    wreg      void 
 11872 ;; Registers used:
 11873 ;;		wreg, status,2
 11874 ;; Tracked objects:
 11875 ;;		On entry : 0/0
 11876 ;;		On exit  : 0/0
 11877 ;;		Unchanged: 0/0
 11878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11883 ;;Total ram usage:        0 bytes
 11884 ;; Hardware stack levels used:    1
 11885 ;; Hardware stack levels required when called:    7
 11886 ;; This function calls:
 11887 ;;		Nothing
 11888 ;; This function is called by:
 11889 ;;		_SYSTEM_Initialize
 11890 ;; This function uses a non-reentrant model
 11891 ;;
 11892                           
 11893                           
 11894                           ;psect for function _ADCC_Initialize
 11895  08F5                     _ADCC_Initialize:
 11896  08F5                     l4331:	
 11897                           ;incstack = 0
 11898                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 11899                           
 11900                           
 11901                           ;adcc.c: 67: ADLTHL = 0x00;
 11902  08F5  0022               	movlb	2	; select bank2
 11903  08F6  018E               	clrf	14	;volatile
 11904                           
 11905                           ;adcc.c: 69: ADLTHH = 0x00;
 11906  08F7  018F               	clrf	15	;volatile
 11907                           
 11908                           ;adcc.c: 71: ADUTHL = 0x00;
 11909  08F8  0190               	clrf	16	;volatile
 11910                           
 11911                           ;adcc.c: 73: ADUTHH = 0x00;
 11912  08F9  0191               	clrf	17	;volatile
 11913                           
 11914                           ;adcc.c: 75: ADSTPTL = 0x00;
 11915  08FA  0192               	clrf	18	;volatile
 11916                           
 11917                           ;adcc.c: 77: ADSTPTH = 0x00;
 11918  08FB  0193               	clrf	19	;volatile
 11919                           
 11920                           ;adcc.c: 79: ADRPT = 0x00;
 11921  08FC  018D               	clrf	13	;volatile
 11922                           
 11923                           ;adcc.c: 81: ADPCH = 0x00;
 11924  08FD  0021               	movlb	1	; select bank1
 11925  08FE  019E               	clrf	30	;volatile
 11926                           
 11927                           ;adcc.c: 83: ADCAP = 0x00;
 11928  08FF  019B               	clrf	27	;volatile
 11929                           
 11930                           ;adcc.c: 85: ADCON1 = 0x00;
 11931  0900  0194               	clrf	20	;volatile
 11932                           
 11933                           ;adcc.c: 87: ADCON2 = 0x00;
 11934  0901  0195               	clrf	21	;volatile
 11935                           
 11936                           ;adcc.c: 89: ADCON3 = 0x00;
 11937  0902  0196               	clrf	22	;volatile
 11938                           
 11939                           ;adcc.c: 91: ADSTAT = 0x00;
 11940  0903  0197               	clrf	23	;volatile
 11941                           
 11942                           ;adcc.c: 93: ADREF = 0x00;
 11943  0904  019A               	clrf	26	;volatile
 11944                           
 11945                           ;adcc.c: 95: ADACT = 0x00;
 11946  0905  0199               	clrf	25	;volatile
 11947                           
 11948                           ;adcc.c: 97: ADCLK = 0x00;
 11949  0906  0198               	clrf	24	;volatile
 11950  0907                     l4333:
 11951                           
 11952                           ;adcc.c: 99: ADCON0 = 0x80;
 11953  0907  3080               	movlw	128
 11954  0908  0093               	movwf	19	;volatile
 11955  0909                     l4335:
 11956                           
 11957                           ;adcc.c: 101: ADACQ = 0xFF;
 11958  0909  30FF               	movlw	255
 11959  090A  009D               	movwf	29	;volatile
 11960  090B                     l575:
 11961  090B  0008               	return
 11962  090C                     __end_of_ADCC_Initialize:
 11963                           
 11964                           	psect	text23
 11965  177B                     __ptext23:	
 11966 ;; *************** function _PWM_Output_D4_Disable *****************
 11967 ;; Defined at:
 11968 ;;		line 246 in file "main.c"
 11969 ;; Parameters:    Size  Location     Type
 11970 ;;		None
 11971 ;; Auto vars:     Size  Location     Type
 11972 ;;		None
 11973 ;; Return value:  Size  Location     Type
 11974 ;;                  1    wreg      void 
 11975 ;; Registers used:
 11976 ;;		None
 11977 ;; Tracked objects:
 11978 ;;		On entry : 0/0
 11979 ;;		On exit  : 0/0
 11980 ;;		Unchanged: 0/0
 11981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11986 ;;Total ram usage:        0 bytes
 11987 ;; Hardware stack levels used:    1
 11988 ;; Hardware stack levels required when called:    7
 11989 ;; This function calls:
 11990 ;;		Nothing
 11991 ;; This function is called by:
 11992 ;;		_main
 11993 ;; This function uses a non-reentrant model
 11994 ;;
 11995                           
 11996                           
 11997                           ;psect for function _PWM_Output_D4_Disable
 11998  177B                     _PWM_Output_D4_Disable:
 11999  177B                     l4933:	
 12000                           ;incstack = 0
 12001                           ; Regs used in _PWM_Output_D4_Disable: []
 12002                           
 12003                           
 12004                           ;main.c: 247: PWM6EN = 0;
 12005  177B  0027               	movlb	7	; select bank7
 12006  177C  138E               	bcf	14,7	;volatile
 12007  177D                     l1165:
 12008  177D  0008               	return
 12009  177E                     __end_of_PWM_Output_D4_Disable:
 12010                           
 12011                           	psect	text24
 12012  090C                     __ptext24:	
 12013 ;; *************** function _PWM6_LoadDutyValue *****************
 12014 ;; Defined at:
 12015 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 12016 ;; Parameters:    Size  Location     Type
 12017 ;;  dutyValue       2    0[BANK1 ] unsigned int 
 12018 ;; Auto vars:     Size  Location     Type
 12019 ;;		None
 12020 ;; Return value:  Size  Location     Type
 12021 ;;                  1    wreg      void 
 12022 ;; Registers used:
 12023 ;;		wreg, status,2, status,0
 12024 ;; Tracked objects:
 12025 ;;		On entry : 0/0
 12026 ;;		On exit  : 0/0
 12027 ;;		Unchanged: 0/0
 12028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12029 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12031 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12032 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12033 ;;Total ram usage:        4 bytes
 12034 ;; Hardware stack levels used:    1
 12035 ;; Hardware stack levels required when called:    7
 12036 ;; This function calls:
 12037 ;;		Nothing
 12038 ;; This function is called by:
 12039 ;;		_main
 12040 ;; This function uses a non-reentrant model
 12041 ;;
 12042                           
 12043                           
 12044                           ;psect for function _PWM6_LoadDutyValue
 12045  090C                     _PWM6_LoadDutyValue:
 12046  090C                     l4793:	
 12047                           ;incstack = 0
 12048                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12049                           
 12050                           
 12051                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 12052  090C  0021               	movlb	1	; select bank1
 12053  090D  0821               	movf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128),w
 12054  090E  00A3               	movwf	(??_PWM6_LoadDutyValue^(0+128)+1)
 12055  090F  0820               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 12056  0910  00A2               	movwf	??_PWM6_LoadDutyValue^(0+128)
 12057  0911  36A3               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 12058  0912  0CA2               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 12059  0913  36A3               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 12060  0914  0CA2               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 12061  0915  0822               	movf	??_PWM6_LoadDutyValue^(0+128),w
 12062  0916  0027               	movlb	7	; select bank7
 12063  0917  008D               	movwf	13	;volatile
 12064                           
 12065                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 12066  0918  0021               	movlb	1	; select bank1
 12067  0919  0820               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 12068  091A  3903               	andlw	3
 12069  091B  00A2               	movwf	??_PWM6_LoadDutyValue^(0+128)
 12070  091C  3005               	movlw	5
 12071  091D                     u4245:
 12072  091D  35A2               	lslf	??_PWM6_LoadDutyValue^(0+128),f
 12073  091E  3EFF               	addlw	-1
 12074  091F  1D03               	skipz
 12075  0920  291D               	goto	u4245
 12076  0921  3522               	lslf	??_PWM6_LoadDutyValue^(0+128),w
 12077  0922  0027               	movlb	7	; select bank7
 12078  0923  008C               	movwf	12	;volatile
 12079  0924                     l734:
 12080  0924  0008               	return
 12081  0925                     __end_of_PWM6_LoadDutyValue:
 12082                           
 12083                           	psect	text25
 12084  0D02                     __ptext25:	
 12085 ;; *************** function _LCDinit *****************
 12086 ;; Defined at:
 12087 ;;		line 173 in file "main.c"
 12088 ;; Parameters:    Size  Location     Type
 12089 ;;		None
 12090 ;; Auto vars:     Size  Location     Type
 12091 ;;		None
 12092 ;; Return value:  Size  Location     Type
 12093 ;;                  1    wreg      void 
 12094 ;; Registers used:
 12095 ;;		wreg, status,2, status,0, pclath, cstack
 12096 ;; Tracked objects:
 12097 ;;		On entry : 0/0
 12098 ;;		On exit  : 0/0
 12099 ;;		Unchanged: 0/0
 12100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12103 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12104 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12105 ;;Total ram usage:        1 bytes
 12106 ;; Hardware stack levels used:    1
 12107 ;; Hardware stack levels required when called:    9
 12108 ;; This function calls:
 12109 ;;		_LCDsend
 12110 ;;		_LCDsend2x4
 12111 ;; This function is called by:
 12112 ;;		_main
 12113 ;; This function uses a non-reentrant model
 12114 ;;
 12115                           
 12116                           
 12117                           ;psect for function _LCDinit
 12118  0D02                     _LCDinit:
 12119  0D02                     l4899:	
 12120                           ;incstack = 0
 12121                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 12122                           
 12123                           
 12124                           ;main.c: 175: _delay((unsigned long)((50)*(1000000/4000.0)));
 12125  0D02  3011               	movlw	17
 12126  0D03  0021               	movlb	1	; select bank1
 12127  0D04  00A8               	movwf	??_LCDinit^(0+128)
 12128  0D05  303A               	movlw	58
 12129  0D06                     u4917:
 12130  0D06  0B89               	decfsz	9,f
 12131  0D07  2D06               	goto	u4917
 12132  0D08  0BA8               	decfsz	??_LCDinit^(0+128),f
 12133  0D09  2D06               	goto	u4917
 12134  0D0A  0000               	nop
 12135  0D0B                     l4901:
 12136                           
 12137                           ;main.c: 176: LCDsend(0x30);
 12138  0D0B  3030               	movlw	48
 12139  0D0C  318B  23FD  318D   	fcall	_LCDsend
 12140  0D0F                     l4903:
 12141                           
 12142                           ;main.c: 177: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 12143  0D0F  3034               	movlw	52
 12144  0D10  318B  23FD  318D   	fcall	_LCDsend
 12145  0D13  3029               	movlw	41
 12146  0D14                     u4927:
 12147  0D14  0B89               	decfsz	9,f
 12148  0D15  2D14               	goto	u4927
 12149  0D16  3200               	nop2
 12150  0D17                     l4905:
 12151  0D17  3030               	movlw	48
 12152  0D18  318B  23FD  318D   	fcall	_LCDsend
 12153  0D1B                     l4907:
 12154                           
 12155                           ;main.c: 178: _delay((unsigned long)((5)*(1000000/4000.0)));
 12156  0D1B  30FA               	movlw	250
 12157  0D1C                     u4937:
 12158  0D1C  3200               	nop2
 12159  0D1D  0B89               	decfsz	9,f
 12160  0D1E  2D1C               	goto	u4937
 12161                           
 12162                           ;main.c: 179: LCDsend(0x30);
 12163  0D1F  3030               	movlw	48
 12164  0D20  318B  23FD  318D   	fcall	_LCDsend
 12165                           
 12166                           ;main.c: 180: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 12167  0D23  3034               	movlw	52
 12168  0D24  318B  23FD  318D   	fcall	_LCDsend
 12169  0D27                     l4909:
 12170  0D27  3029               	movlw	41
 12171  0D28                     u4947:
 12172  0D28  0B89               	decfsz	9,f
 12173  0D29  2D28               	goto	u4947
 12174  0D2A  3200               	nop2
 12175  0D2B                     l4911:
 12176  0D2B  3030               	movlw	48
 12177  0D2C  318B  23FD  318D   	fcall	_LCDsend
 12178                           
 12179                           ;main.c: 181: _delay((unsigned long)((100)*(1000000/4000000.0)));
 12180  0D2F  3008               	movlw	8
 12181  0D30                     u4957:
 12182  0D30  0B89               	decfsz	9,f
 12183  0D31  2D30               	goto	u4957
 12184  0D32  0000               	nop
 12185  0D33                     l4913:
 12186                           
 12187                           ;main.c: 182: LCDsend(0x30);
 12188  0D33  3030               	movlw	48
 12189  0D34  318B  23FD  318D   	fcall	_LCDsend
 12190  0D37                     l4915:
 12191                           
 12192                           ;main.c: 183: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 12193  0D37  3034               	movlw	52
 12194  0D38  318B  23FD  318D   	fcall	_LCDsend
 12195  0D3B  3029               	movlw	41
 12196  0D3C                     u4967:
 12197  0D3C  0B89               	decfsz	9,f
 12198  0D3D  2D3C               	goto	u4967
 12199  0D3E  3200               	nop2
 12200  0D3F                     l4917:
 12201  0D3F  3030               	movlw	48
 12202  0D40  318B  23FD  318D   	fcall	_LCDsend
 12203  0D43                     l4919:
 12204                           
 12205                           ;main.c: 184: _delay((unsigned long)((100)*(1000000/4000000.0)));
 12206  0D43  3008               	movlw	8
 12207  0D44                     u4977:
 12208  0D44  0B89               	decfsz	9,f
 12209  0D45  2D44               	goto	u4977
 12210  0D46  0000               	nop
 12211                           
 12212                           ;main.c: 185: LCDsend(0x20);
 12213  0D47  3020               	movlw	32
 12214  0D48  318B  23FD  318D   	fcall	_LCDsend
 12215                           
 12216                           ;main.c: 186: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
 12217  0D4B  3024               	movlw	36
 12218  0D4C  318B  23FD  318D   	fcall	_LCDsend
 12219  0D4F                     l4921:
 12220  0D4F  3029               	movlw	41
 12221  0D50                     u4987:
 12222  0D50  0B89               	decfsz	9,f
 12223  0D51  2D50               	goto	u4987
 12224  0D52  3200               	nop2
 12225  0D53                     l4923:
 12226  0D53  3020               	movlw	32
 12227  0D54  318B  23FD  318D   	fcall	_LCDsend
 12228                           
 12229                           ;main.c: 187: _delay((unsigned long)((5)*(1000000/4000.0)));
 12230  0D57  30FA               	movlw	250
 12231  0D58                     u4997:
 12232  0D58  3200               	nop2
 12233  0D59  0B89               	decfsz	9,f
 12234  0D5A  2D58               	goto	u4997
 12235  0D5B                     l4925:
 12236                           
 12237                           ;main.c: 189: LCDsend2x4(0x28, 0);
 12238  0D5B  0021               	movlb	1	; select bank1
 12239  0D5C  01A2               	clrf	LCDsend2x4@mode^(0+128)
 12240  0D5D  3028               	movlw	40
 12241  0D5E  318E  262B  318D   	fcall	_LCDsend2x4
 12242  0D61                     l4927:
 12243                           
 12244                           ;main.c: 190: LCDsend2x4(0x06, 0);
 12245  0D61  0021               	movlb	1	; select bank1
 12246  0D62  01A2               	clrf	LCDsend2x4@mode^(0+128)
 12247  0D63  3006               	movlw	6
 12248  0D64  318E  262B  318D   	fcall	_LCDsend2x4
 12249  0D67                     l4929:
 12250                           
 12251                           ;main.c: 191: LCDsend2x4(0x0f, 0);
 12252  0D67  0021               	movlb	1	; select bank1
 12253  0D68  01A2               	clrf	LCDsend2x4@mode^(0+128)
 12254  0D69  300F               	movlw	15
 12255  0D6A  318E  262B  318D   	fcall	_LCDsend2x4
 12256  0D6D                     l4931:
 12257                           
 12258                           ;main.c: 192: LCDsend2x4(0x01, 0);
 12259  0D6D  0021               	movlb	1	; select bank1
 12260  0D6E  01A2               	clrf	LCDsend2x4@mode^(0+128)
 12261  0D6F  3001               	movlw	1
 12262  0D70  318E  262B  318D   	fcall	_LCDsend2x4
 12263                           
 12264                           ;main.c: 193: _delay((unsigned long)((2)*(1000000/4000.0)));
 12265  0D73  30A6               	movlw	166
 12266  0D74                     u5007:
 12267  0D74  0B89               	decfsz	9,f
 12268  0D75  2D74               	goto	u5007
 12269  0D76  3200               	nop2
 12270  0D77                     l1134:
 12271  0D77  0008               	return
 12272  0D78                     __end_of_LCDinit:
 12273                           
 12274                           	psect	text26
 12275  0E2B                     __ptext26:	
 12276 ;; *************** function _LCDsend2x4 *****************
 12277 ;; Defined at:
 12278 ;;		line 150 in file "main.c"
 12279 ;; Parameters:    Size  Location     Type
 12280 ;;  c               1    wreg     unsigned char 
 12281 ;;  mode            1    2[BANK1 ] unsigned char 
 12282 ;; Auto vars:     Size  Location     Type
 12283 ;;  c               1    5[BANK1 ] unsigned char 
 12284 ;;  lc              1    7[BANK1 ] unsigned char 
 12285 ;;  hc              1    6[BANK1 ] unsigned char 
 12286 ;; Return value:  Size  Location     Type
 12287 ;;                  1    wreg      void 
 12288 ;; Registers used:
 12289 ;;		wreg, status,2, status,0, pclath, cstack
 12290 ;; Tracked objects:
 12291 ;;		On entry : 0/0
 12292 ;;		On exit  : 0/0
 12293 ;;		Unchanged: 0/0
 12294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12295 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12296 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12297 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12298 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12299 ;;Total ram usage:        6 bytes
 12300 ;; Hardware stack levels used:    1
 12301 ;; Hardware stack levels required when called:    8
 12302 ;; This function calls:
 12303 ;;		_WriteI2C
 12304 ;; This function is called by:
 12305 ;;		_LCDinit
 12306 ;; This function uses a non-reentrant model
 12307 ;;
 12308                           
 12309                           
 12310                           ;psect for function _LCDsend2x4
 12311  0E2B                     _LCDsend2x4:
 12312                           
 12313                           ;incstack = 0
 12314                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 12315                           ;LCDsend2x4@c stored from wreg
 12316  0E2B  0021               	movlb	1	; select bank1
 12317  0E2C  00A5               	movwf	LCDsend2x4@c^(0+128)
 12318  0E2D                     l4467:
 12319                           
 12320                           ;main.c: 152: unsigned char hc;;main.c: 153: unsigned char lc;;main.c: 155: hc = c & 0xf
      +                          0;
 12321  0E2D  0825               	movf	LCDsend2x4@c^(0+128),w
 12322  0E2E  39F0               	andlw	240
 12323  0E2F  00A3               	movwf	??_LCDsend2x4^(0+128)
 12324  0E30  0823               	movf	??_LCDsend2x4^(0+128),w
 12325  0E31  00A6               	movwf	LCDsend2x4@hc^(0+128)
 12326  0E32                     l4469:
 12327                           
 12328                           ;main.c: 156: lc = (c << 4) & 0xf0;
 12329  0E32  0825               	movf	LCDsend2x4@c^(0+128),w
 12330  0E33  00A3               	movwf	??_LCDsend2x4^(0+128)
 12331  0E34  3003               	movlw	3
 12332  0E35                     u3645:
 12333  0E35  35A3               	lslf	??_LCDsend2x4^(0+128),f
 12334  0E36  3EFF               	addlw	-1
 12335  0E37  1D03               	skipz
 12336  0E38  2E35               	goto	u3645
 12337  0E39  3523               	lslf	??_LCDsend2x4^(0+128),w
 12338  0E3A  39F0               	andlw	240
 12339  0E3B  00A4               	movwf	(??_LCDsend2x4+1)^(0+128)
 12340  0E3C  0824               	movf	(??_LCDsend2x4+1)^(0+128),w
 12341  0E3D  00A7               	movwf	LCDsend2x4@lc^(0+128)
 12342  0E3E                     l4471:	
 12343                           ;main.c: 158: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12344                           
 12345  0E3E  0023               	movlb	3	; select bank3
 12346  0E3F  0C0F               	rrf	15,w	;volatile
 12347  0E40  0C89               	rrf	9,f
 12348  0E41  3901               	andlw	1
 12349  0E42  0021               	movlb	1	; select bank1
 12350  0E43  00A3               	movwf	??_LCDsend2x4^(0+128)
 12351  0E44  0023               	movlb	3	; select bank3
 12352  0E45  0811               	movf	17,w	;volatile
 12353  0E46  391F               	andlw	31
 12354  0E47  0021               	movlb	1	; select bank1
 12355  0E48  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12356  0E49  1D03               	btfss	3,2
 12357  0E4A  2E4C               	goto	u3651
 12358  0E4B  2E4D               	goto	u3650
 12359  0E4C                     u3651:
 12360  0E4C  2E3E               	goto	l4471
 12361  0E4D                     u3650:
 12362  0E4D                     l1100:
 12363                           
 12364                           ;main.c: 159: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 12365  0E4D  0023               	movlb	3	; select bank3
 12366  0E4E  1411               	bsf	17,0	;volatile
 12367  0E4F                     l1101:
 12368  0E4F  1811               	btfsc	17,0	;volatile
 12369  0E50  2E52               	goto	u3661
 12370  0E51  2E53               	goto	u3660
 12371  0E52                     u3661:
 12372  0E52  2E4F               	goto	l1101
 12373  0E53                     u3660:
 12374  0E53                     l4473:
 12375  0E53  0023               	movlb	3	; select bank3
 12376  0E54  0C0F               	rrf	15,w	;volatile
 12377  0E55  0C89               	rrf	9,f
 12378  0E56  3901               	andlw	1
 12379  0E57  0021               	movlb	1	; select bank1
 12380  0E58  00A3               	movwf	??_LCDsend2x4^(0+128)
 12381  0E59  0023               	movlb	3	; select bank3
 12382  0E5A  0811               	movf	17,w	;volatile
 12383  0E5B  391F               	andlw	31
 12384  0E5C  0021               	movlb	1	; select bank1
 12385  0E5D  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12386  0E5E  1D03               	btfss	3,2
 12387  0E5F  2E61               	goto	u3671
 12388  0E60  2E62               	goto	u3670
 12389  0E61                     u3671:
 12390  0E61  2E53               	goto	l4473
 12391  0E62                     u3670:
 12392  0E62                     l4475:
 12393                           
 12394                           ;main.c: 160: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12395  0E62  304E               	movlw	78
 12396  0E63  318C  24A8  318E   	fcall	_WriteI2C
 12397  0E66                     l4477:
 12398  0E66  0023               	movlb	3	; select bank3
 12399  0E67  0C0F               	rrf	15,w	;volatile
 12400  0E68  0C89               	rrf	9,f
 12401  0E69  3901               	andlw	1
 12402  0E6A  0021               	movlb	1	; select bank1
 12403  0E6B  00A3               	movwf	??_LCDsend2x4^(0+128)
 12404  0E6C  0023               	movlb	3	; select bank3
 12405  0E6D  0811               	movf	17,w	;volatile
 12406  0E6E  391F               	andlw	31
 12407  0E6F  0021               	movlb	1	; select bank1
 12408  0E70  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12409  0E71  1D03               	btfss	3,2
 12410  0E72  2E74               	goto	u3681
 12411  0E73  2E75               	goto	u3680
 12412  0E74                     u3681:
 12413  0E74  2E66               	goto	l4477
 12414  0E75                     u3680:
 12415  0E75                     l4479:
 12416                           
 12417                           ;main.c: 161: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 12418  0E75  0826               	movf	LCDsend2x4@hc^(0+128),w
 12419  0E76  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12420  0E77  3808               	iorlw	8
 12421  0E78  318C  24A8  318E   	fcall	_WriteI2C
 12422  0E7B                     l4481:
 12423  0E7B  0023               	movlb	3	; select bank3
 12424  0E7C  0C0F               	rrf	15,w	;volatile
 12425  0E7D  0C89               	rrf	9,f
 12426  0E7E  3901               	andlw	1
 12427  0E7F  0021               	movlb	1	; select bank1
 12428  0E80  00A3               	movwf	??_LCDsend2x4^(0+128)
 12429  0E81  0023               	movlb	3	; select bank3
 12430  0E82  0811               	movf	17,w	;volatile
 12431  0E83  391F               	andlw	31
 12432  0E84  0021               	movlb	1	; select bank1
 12433  0E85  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12434  0E86  1D03               	btfss	3,2
 12435  0E87  2E89               	goto	u3691
 12436  0E88  2E8A               	goto	u3690
 12437  0E89                     u3691:
 12438  0E89  2E7B               	goto	l4481
 12439  0E8A                     u3690:
 12440  0E8A                     l4483:
 12441                           
 12442                           ;main.c: 162: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 12443  0E8A  0826               	movf	LCDsend2x4@hc^(0+128),w
 12444  0E8B  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12445  0E8C  380C               	iorlw	12
 12446  0E8D  318C  24A8  318E   	fcall	_WriteI2C
 12447  0E90                     l4485:
 12448  0E90  0023               	movlb	3	; select bank3
 12449  0E91  0C0F               	rrf	15,w	;volatile
 12450  0E92  0C89               	rrf	9,f
 12451  0E93  3901               	andlw	1
 12452  0E94  0021               	movlb	1	; select bank1
 12453  0E95  00A3               	movwf	??_LCDsend2x4^(0+128)
 12454  0E96  0023               	movlb	3	; select bank3
 12455  0E97  0811               	movf	17,w	;volatile
 12456  0E98  391F               	andlw	31
 12457  0E99  0021               	movlb	1	; select bank1
 12458  0E9A  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12459  0E9B  1D03               	btfss	3,2
 12460  0E9C  2E9E               	goto	u3701
 12461  0E9D  2E9F               	goto	u3700
 12462  0E9E                     u3701:
 12463  0E9E  2E90               	goto	l4485
 12464  0E9F                     u3700:
 12465  0E9F                     l1115:
 12466  0E9F                     l4487:	
 12467                           ;main.c: 163: _delay((unsigned long)((1)*(1000000/4000000.0)));
 12468                           
 12469                           
 12470                           ;main.c: 164: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 12471  0E9F  0021               	movlb	1	; select bank1
 12472  0EA0  0826               	movf	LCDsend2x4@hc^(0+128),w
 12473  0EA1  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12474  0EA2  3808               	iorlw	8
 12475  0EA3  318C  24A8  318E   	fcall	_WriteI2C
 12476  0EA6                     l4489:
 12477  0EA6  0023               	movlb	3	; select bank3
 12478  0EA7  0C0F               	rrf	15,w	;volatile
 12479  0EA8  0C89               	rrf	9,f
 12480  0EA9  3901               	andlw	1
 12481  0EAA  0021               	movlb	1	; select bank1
 12482  0EAB  00A3               	movwf	??_LCDsend2x4^(0+128)
 12483  0EAC  0023               	movlb	3	; select bank3
 12484  0EAD  0811               	movf	17,w	;volatile
 12485  0EAE  391F               	andlw	31
 12486  0EAF  0021               	movlb	1	; select bank1
 12487  0EB0  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12488  0EB1  1D03               	btfss	3,2
 12489  0EB2  2EB4               	goto	u3711
 12490  0EB3  2EB5               	goto	u3710
 12491  0EB4                     u3711:
 12492  0EB4  2EA6               	goto	l4489
 12493  0EB5                     u3710:
 12494  0EB5                     l4491:
 12495                           
 12496                           ;main.c: 165: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 12497  0EB5  0827               	movf	LCDsend2x4@lc^(0+128),w
 12498  0EB6  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12499  0EB7  3808               	iorlw	8
 12500  0EB8  318C  24A8  318E   	fcall	_WriteI2C
 12501  0EBB                     l4493:
 12502  0EBB  0023               	movlb	3	; select bank3
 12503  0EBC  0C0F               	rrf	15,w	;volatile
 12504  0EBD  0C89               	rrf	9,f
 12505  0EBE  3901               	andlw	1
 12506  0EBF  0021               	movlb	1	; select bank1
 12507  0EC0  00A3               	movwf	??_LCDsend2x4^(0+128)
 12508  0EC1  0023               	movlb	3	; select bank3
 12509  0EC2  0811               	movf	17,w	;volatile
 12510  0EC3  391F               	andlw	31
 12511  0EC4  0021               	movlb	1	; select bank1
 12512  0EC5  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12513  0EC6  1D03               	btfss	3,2
 12514  0EC7  2EC9               	goto	u3721
 12515  0EC8  2ECA               	goto	u3720
 12516  0EC9                     u3721:
 12517  0EC9  2EBB               	goto	l4493
 12518  0ECA                     u3720:
 12519  0ECA                     l4495:
 12520                           
 12521                           ;main.c: 166: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 12522  0ECA  0827               	movf	LCDsend2x4@lc^(0+128),w
 12523  0ECB  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12524  0ECC  380C               	iorlw	12
 12525  0ECD  318C  24A8  318E   	fcall	_WriteI2C
 12526  0ED0                     l4497:
 12527  0ED0  0023               	movlb	3	; select bank3
 12528  0ED1  0C0F               	rrf	15,w	;volatile
 12529  0ED2  0C89               	rrf	9,f
 12530  0ED3  3901               	andlw	1
 12531  0ED4  0021               	movlb	1	; select bank1
 12532  0ED5  00A3               	movwf	??_LCDsend2x4^(0+128)
 12533  0ED6  0023               	movlb	3	; select bank3
 12534  0ED7  0811               	movf	17,w	;volatile
 12535  0ED8  391F               	andlw	31
 12536  0ED9  0021               	movlb	1	; select bank1
 12537  0EDA  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12538  0EDB  1D03               	btfss	3,2
 12539  0EDC  2EDE               	goto	u3731
 12540  0EDD  2EDF               	goto	u3730
 12541  0EDE                     u3731:
 12542  0EDE  2ED0               	goto	l4497
 12543  0EDF                     u3730:
 12544  0EDF                     l1124:
 12545  0EDF                     l4499:	
 12546                           ;main.c: 167: _delay((unsigned long)((1)*(1000000/4000000.0)));
 12547                           
 12548                           
 12549                           ;main.c: 168: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 12550  0EDF  0021               	movlb	1	; select bank1
 12551  0EE0  0827               	movf	LCDsend2x4@lc^(0+128),w
 12552  0EE1  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12553  0EE2  3808               	iorlw	8
 12554  0EE3  318C  24A8  318E   	fcall	_WriteI2C
 12555  0EE6                     l4501:
 12556  0EE6  0023               	movlb	3	; select bank3
 12557  0EE7  0C0F               	rrf	15,w	;volatile
 12558  0EE8  0C89               	rrf	9,f
 12559  0EE9  3901               	andlw	1
 12560  0EEA  0021               	movlb	1	; select bank1
 12561  0EEB  00A3               	movwf	??_LCDsend2x4^(0+128)
 12562  0EEC  0023               	movlb	3	; select bank3
 12563  0EED  0811               	movf	17,w	;volatile
 12564  0EEE  391F               	andlw	31
 12565  0EEF  0021               	movlb	1	; select bank1
 12566  0EF0  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12567  0EF1  1D03               	btfss	3,2
 12568  0EF2  2EF4               	goto	u3741
 12569  0EF3  2EF5               	goto	u3740
 12570  0EF4                     u3741:
 12571  0EF4  2EE6               	goto	l4501
 12572  0EF5                     u3740:
 12573  0EF5                     l1127:
 12574                           
 12575                           ;main.c: 169: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 12576  0EF5  0023               	movlb	3	; select bank3
 12577  0EF6  1511               	bsf	17,2	;volatile
 12578  0EF7                     l1128:
 12579  0EF7  1911               	btfsc	17,2	;volatile
 12580  0EF8  2EFA               	goto	u3751
 12581  0EF9  2EFB               	goto	u3750
 12582  0EFA                     u3751:
 12583  0EFA  2EF7               	goto	l1128
 12584  0EFB                     u3750:
 12585  0EFB                     l4503:
 12586                           
 12587                           ;main.c: 170: _delay((unsigned long)((50)*(1000000/4000000.0)));
 12588  0EFB  3004               	movlw	4
 12589  0EFC                     u5017:
 12590  0EFC  0B89               	decfsz	9,f
 12591  0EFD  2EFC               	goto	u5017
 12592  0EFE                     l1131:
 12593  0EFE  0008               	return
 12594  0EFF                     __end_of_LCDsend2x4:
 12595                           
 12596                           	psect	text27
 12597  0BFD                     __ptext27:	
 12598 ;; *************** function _LCDsend *****************
 12599 ;; Defined at:
 12600 ;;		line 111 in file "main.c"
 12601 ;; Parameters:    Size  Location     Type
 12602 ;;  c               1    wreg     unsigned char 
 12603 ;; Auto vars:     Size  Location     Type
 12604 ;;  c               1    3[BANK1 ] unsigned char 
 12605 ;; Return value:  Size  Location     Type
 12606 ;;                  1    wreg      void 
 12607 ;; Registers used:
 12608 ;;		wreg, status,2, status,0, pclath, cstack
 12609 ;; Tracked objects:
 12610 ;;		On entry : 0/0
 12611 ;;		On exit  : 0/0
 12612 ;;		Unchanged: 0/0
 12613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12615 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12616 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12617 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12618 ;;Total ram usage:        2 bytes
 12619 ;; Hardware stack levels used:    1
 12620 ;; Hardware stack levels required when called:    8
 12621 ;; This function calls:
 12622 ;;		_WriteI2C
 12623 ;; This function is called by:
 12624 ;;		_LCDinit
 12625 ;; This function uses a non-reentrant model
 12626 ;;
 12627                           
 12628                           
 12629                           ;psect for function _LCDsend
 12630  0BFD                     _LCDsend:
 12631                           
 12632                           ;incstack = 0
 12633                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 12634                           ;LCDsend@c stored from wreg
 12635  0BFD  0021               	movlb	1	; select bank1
 12636  0BFE  00A3               	movwf	LCDsend@c^(0+128)
 12637  0BFF                     l4453:
 12638  0BFF                     l4455:	
 12639                           ;main.c: 113: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12640                           
 12641  0BFF  0023               	movlb	3	; select bank3
 12642  0C00  0C0F               	rrf	15,w	;volatile
 12643  0C01  0C89               	rrf	9,f
 12644  0C02  3901               	andlw	1
 12645  0C03  0021               	movlb	1	; select bank1
 12646  0C04  00A2               	movwf	??_LCDsend^(0+128)
 12647  0C05  0023               	movlb	3	; select bank3
 12648  0C06  0811               	movf	17,w	;volatile
 12649  0C07  391F               	andlw	31
 12650  0C08  0021               	movlb	1	; select bank1
 12651  0C09  0422               	iorwf	??_LCDsend^(0+128),w
 12652  0C0A  1D03               	btfss	3,2
 12653  0C0B  2C0D               	goto	u3581
 12654  0C0C  2C0E               	goto	u3580
 12655  0C0D                     u3581:
 12656  0C0D  2BFF               	goto	l4455
 12657  0C0E                     u3580:
 12658  0C0E                     l998:
 12659                           
 12660                           ;main.c: 114: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 12661  0C0E  0023               	movlb	3	; select bank3
 12662  0C0F  1411               	bsf	17,0	;volatile
 12663  0C10                     l999:
 12664  0C10  1811               	btfsc	17,0	;volatile
 12665  0C11  2C13               	goto	u3591
 12666  0C12  2C14               	goto	u3590
 12667  0C13                     u3591:
 12668  0C13  2C10               	goto	l999
 12669  0C14                     u3590:
 12670  0C14                     l4457:
 12671  0C14  0023               	movlb	3	; select bank3
 12672  0C15  0C0F               	rrf	15,w	;volatile
 12673  0C16  0C89               	rrf	9,f
 12674  0C17  3901               	andlw	1
 12675  0C18  0021               	movlb	1	; select bank1
 12676  0C19  00A2               	movwf	??_LCDsend^(0+128)
 12677  0C1A  0023               	movlb	3	; select bank3
 12678  0C1B  0811               	movf	17,w	;volatile
 12679  0C1C  391F               	andlw	31
 12680  0C1D  0021               	movlb	1	; select bank1
 12681  0C1E  0422               	iorwf	??_LCDsend^(0+128),w
 12682  0C1F  1D03               	btfss	3,2
 12683  0C20  2C22               	goto	u3601
 12684  0C21  2C23               	goto	u3600
 12685  0C22                     u3601:
 12686  0C22  2C14               	goto	l4457
 12687  0C23                     u3600:
 12688  0C23                     l4459:
 12689                           
 12690                           ;main.c: 115: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12691  0C23  304E               	movlw	78
 12692  0C24  318C  24A8  318B   	fcall	_WriteI2C
 12693  0C27                     l4461:
 12694  0C27  0023               	movlb	3	; select bank3
 12695  0C28  0C0F               	rrf	15,w	;volatile
 12696  0C29  0C89               	rrf	9,f
 12697  0C2A  3901               	andlw	1
 12698  0C2B  0021               	movlb	1	; select bank1
 12699  0C2C  00A2               	movwf	??_LCDsend^(0+128)
 12700  0C2D  0023               	movlb	3	; select bank3
 12701  0C2E  0811               	movf	17,w	;volatile
 12702  0C2F  391F               	andlw	31
 12703  0C30  0021               	movlb	1	; select bank1
 12704  0C31  0422               	iorwf	??_LCDsend^(0+128),w
 12705  0C32  1D03               	btfss	3,2
 12706  0C33  2C35               	goto	u3611
 12707  0C34  2C36               	goto	u3610
 12708  0C35                     u3611:
 12709  0C35  2C27               	goto	l4461
 12710  0C36                     u3610:
 12711  0C36                     l4463:
 12712                           
 12713                           ;main.c: 116: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12714  0C36  0823               	movf	LCDsend@c^(0+128),w
 12715  0C37  318C  24A8  318B   	fcall	_WriteI2C
 12716  0C3A                     l4465:
 12717  0C3A  0023               	movlb	3	; select bank3
 12718  0C3B  0C0F               	rrf	15,w	;volatile
 12719  0C3C  0C89               	rrf	9,f
 12720  0C3D  3901               	andlw	1
 12721  0C3E  0021               	movlb	1	; select bank1
 12722  0C3F  00A2               	movwf	??_LCDsend^(0+128)
 12723  0C40  0023               	movlb	3	; select bank3
 12724  0C41  0811               	movf	17,w	;volatile
 12725  0C42  391F               	andlw	31
 12726  0C43  0021               	movlb	1	; select bank1
 12727  0C44  0422               	iorwf	??_LCDsend^(0+128),w
 12728  0C45  1D03               	btfss	3,2
 12729  0C46  2C48               	goto	u3621
 12730  0C47  2C49               	goto	u3620
 12731  0C48                     u3621:
 12732  0C48  2C3A               	goto	l4465
 12733  0C49                     u3620:
 12734  0C49                     l1010:
 12735                           
 12736                           ;main.c: 117: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 12737  0C49  0023               	movlb	3	; select bank3
 12738  0C4A  1511               	bsf	17,2	;volatile
 12739  0C4B                     l1011:
 12740  0C4B  1911               	btfsc	17,2	;volatile
 12741  0C4C  2C4E               	goto	u3631
 12742  0C4D  2C4F               	goto	u3630
 12743  0C4E                     u3631:
 12744  0C4E  2C4B               	goto	l1011
 12745  0C4F                     u3630:
 12746  0C4F                     l1014:
 12747  0C4F  0008               	return
 12748  0C50                     __end_of_LCDsend:
 12749                           
 12750                           	psect	text28
 12751  0CA8                     __ptext28:	
 12752 ;; *************** function _WriteI2C *****************
 12753 ;; Defined at:
 12754 ;;		line 47 in file "I2C/i2c.c"
 12755 ;; Parameters:    Size  Location     Type
 12756 ;;  data_out        1    wreg     unsigned char 
 12757 ;; Auto vars:     Size  Location     Type
 12758 ;;  data_out        1    1[BANK1 ] unsigned char 
 12759 ;; Return value:  Size  Location     Type
 12760 ;;                  1    wreg      char 
 12761 ;; Registers used:
 12762 ;;		wreg, status,2, status,0
 12763 ;; Tracked objects:
 12764 ;;		On entry : 0/0
 12765 ;;		On exit  : 0/0
 12766 ;;		Unchanged: 0/0
 12767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12769 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12770 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12771 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12772 ;;Total ram usage:        2 bytes
 12773 ;; Hardware stack levels used:    1
 12774 ;; Hardware stack levels required when called:    7
 12775 ;; This function calls:
 12776 ;;		Nothing
 12777 ;; This function is called by:
 12778 ;;		_LCDsend
 12779 ;;		_LCDsend2x4
 12780 ;;		_LCDrecv
 12781 ;; This function uses a non-reentrant model
 12782 ;;
 12783                           
 12784                           
 12785                           ;psect for function _WriteI2C
 12786  0CA8                     _WriteI2C:
 12787                           
 12788                           ;incstack = 0
 12789                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 12790                           ;WriteI2C@data_out stored from wreg
 12791  0CA8  0021               	movlb	1	; select bank1
 12792  0CA9  00A1               	movwf	WriteI2C@data_out^(0+128)
 12793  0CAA                     l3987:
 12794                           
 12795                           ;i2c.c: 49: SSP1BUF = data_out;
 12796  0CAA  0821               	movf	WriteI2C@data_out^(0+128),w
 12797  0CAB  0023               	movlb	3	; select bank3
 12798  0CAC  008C               	movwf	12	;volatile
 12799  0CAD                     l3989:
 12800                           
 12801                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 12802  0CAD  1F90               	btfss	16,7	;volatile
 12803  0CAE  2CB0               	goto	u2911
 12804  0CAF  2CB1               	goto	u2910
 12805  0CB0                     u2911:
 12806  0CB0  2CB2               	goto	l3995
 12807  0CB1                     u2910:
 12808  0CB1  2D01               	goto	l30
 12809  0CB2                     l3995:
 12810                           
 12811                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 12812  0CB2  300F               	movlw	15
 12813  0CB3  0510               	andwf	16,w	;volatile
 12814  0CB4  0021               	movlb	1	; select bank1
 12815  0CB5  00A0               	movwf	??_WriteI2C^(0+128)
 12816  0CB6  3008               	movlw	8
 12817  0CB7  0620               	xorwf	??_WriteI2C^(0+128),w
 12818  0CB8  1903               	btfsc	3,2
 12819  0CB9  2CBB               	goto	u2921
 12820  0CBA  2CBC               	goto	u2920
 12821  0CBB                     u2921:
 12822  0CBB  2CD5               	goto	l4007
 12823  0CBC                     u2920:
 12824  0CBC                     l3997:
 12825  0CBC  300F               	movlw	15
 12826  0CBD  0023               	movlb	3	; select bank3
 12827  0CBE  0510               	andwf	16,w	;volatile
 12828  0CBF  0021               	movlb	1	; select bank1
 12829  0CC0  00A0               	movwf	??_WriteI2C^(0+128)
 12830  0CC1  300B               	movlw	11
 12831  0CC2  0620               	xorwf	??_WriteI2C^(0+128),w
 12832  0CC3  1903               	btfsc	3,2
 12833  0CC4  2CC6               	goto	u2931
 12834  0CC5  2CC7               	goto	u2930
 12835  0CC6                     u2931:
 12836  0CC6  2CD5               	goto	l4007
 12837  0CC7                     u2930:
 12838  0CC7                     l3999:
 12839                           
 12840                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 12841  0CC7  0023               	movlb	3	; select bank3
 12842  0CC8  1610               	bsf	16,4	;volatile
 12843  0CC9                     l33:	
 12844                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 12845                           
 12846  0CC9  002E               	movlb	14	; select bank14
 12847  0CCA  1C0F               	btfss	15,0	;volatile
 12848  0CCB  2CCD               	goto	u2941
 12849  0CCC  2CCE               	goto	u2940
 12850  0CCD                     u2941:
 12851  0CCD  2CC9               	goto	l33
 12852  0CCE                     u2940:
 12853  0CCE                     l35:
 12854                           
 12855                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 12856  0CCE  0023               	movlb	3	; select bank3
 12857  0CCF  190F               	btfsc	15,2	;volatile
 12858  0CD0  2CD2               	goto	u2951
 12859  0CD1  2CD3               	goto	u2950
 12860  0CD2                     u2951:
 12861  0CD2  2D01               	goto	l30
 12862  0CD3                     u2950:
 12863  0CD3                     l4001:
 12864  0CD3  080F               	movf	15,w	;volatile
 12865  0CD4  2D01               	goto	l30
 12866  0CD5                     l4007:
 12867                           
 12868                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 12869  0CD5  300F               	movlw	15
 12870  0CD6  0023               	movlb	3	; select bank3
 12871  0CD7  0510               	andwf	16,w	;volatile
 12872  0CD8  0021               	movlb	1	; select bank1
 12873  0CD9  00A0               	movwf	??_WriteI2C^(0+128)
 12874  0CDA  3008               	movlw	8
 12875  0CDB  0620               	xorwf	??_WriteI2C^(0+128),w
 12876  0CDC  1903               	btfsc	3,2
 12877  0CDD  2CDF               	goto	u2961
 12878  0CDE  2CE0               	goto	u2960
 12879  0CDF                     u2961:
 12880  0CDF  2CEB               	goto	l42
 12881  0CE0                     u2960:
 12882  0CE0                     l4009:
 12883  0CE0  300F               	movlw	15
 12884  0CE1  0023               	movlb	3	; select bank3
 12885  0CE2  0510               	andwf	16,w	;volatile
 12886  0CE3  0021               	movlb	1	; select bank1
 12887  0CE4  00A0               	movwf	??_WriteI2C^(0+128)
 12888  0CE5  300B               	movlw	11
 12889  0CE6  0620               	xorwf	??_WriteI2C^(0+128),w
 12890  0CE7  1D03               	btfss	3,2
 12891  0CE8  2CEA               	goto	u2971
 12892  0CE9  2CEB               	goto	u2970
 12893  0CEA                     u2971:
 12894  0CEA  2D01               	goto	l30
 12895  0CEB                     u2970:
 12896  0CEB                     l42:
 12897  0CEB  0023               	movlb	3	; select bank3
 12898  0CEC  180F               	btfsc	15,0	;volatile
 12899  0CED  2CEF               	goto	u2981
 12900  0CEE  2CF0               	goto	u2980
 12901  0CEF                     u2981:
 12902  0CEF  2CEB               	goto	l42
 12903  0CF0                     u2980:
 12904  0CF0                     l4011:
 12905  0CF0  0023               	movlb	3	; select bank3
 12906  0CF1  0C0F               	rrf	15,w	;volatile
 12907  0CF2  0C89               	rrf	9,f
 12908  0CF3  3901               	andlw	1
 12909  0CF4  0021               	movlb	1	; select bank1
 12910  0CF5  00A0               	movwf	??_WriteI2C^(0+128)
 12911  0CF6  0023               	movlb	3	; select bank3
 12912  0CF7  0811               	movf	17,w	;volatile
 12913  0CF8  391F               	andlw	31
 12914  0CF9  0021               	movlb	1	; select bank1
 12915  0CFA  0420               	iorwf	??_WriteI2C^(0+128),w
 12916  0CFB  1D03               	btfss	3,2
 12917  0CFC  2CFE               	goto	u2991
 12918  0CFD  2CFF               	goto	u2990
 12919  0CFE                     u2991:
 12920  0CFE  2CF0               	goto	l4011
 12921  0CFF                     u2990:
 12922  0CFF                     l47:
 12923                           
 12924                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 12925  0CFF  0023               	movlb	3	; select bank3
 12926  0D00  0811               	movf	17,w	;volatile
 12927  0D01                     l30:
 12928  0D01  0008               	return
 12929  0D02                     __end_of_WriteI2C:
 12930                           
 12931                           	psect	text29
 12932  09F8                     __ptext29:	
 12933 ;; *************** function _DATAEE_WriteByte *****************
 12934 ;; Defined at:
 12935 ;;		line 180 in file "mcc_generated_files/memory.c"
 12936 ;; Parameters:    Size  Location     Type
 12937 ;;  bAdd            2    0[BANK1 ] unsigned int 
 12938 ;;  bData           1    2[BANK1 ] unsigned char 
 12939 ;; Auto vars:     Size  Location     Type
 12940 ;;  GIEBitValue     1    3[BANK1 ] unsigned char 
 12941 ;; Return value:  Size  Location     Type
 12942 ;;                  1    wreg      void 
 12943 ;; Registers used:
 12944 ;;		wreg, status,2, status,0
 12945 ;; Tracked objects:
 12946 ;;		On entry : 0/0
 12947 ;;		On exit  : 0/0
 12948 ;;		Unchanged: 0/0
 12949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12950 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12951 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12953 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12954 ;;Total ram usage:        4 bytes
 12955 ;; Hardware stack levels used:    1
 12956 ;; Hardware stack levels required when called:    7
 12957 ;; This function calls:
 12958 ;;		Nothing
 12959 ;; This function is called by:
 12960 ;;		_main
 12961 ;; This function uses a non-reentrant model
 12962 ;;
 12963                           
 12964                           
 12965                           ;psect for function _DATAEE_WriteByte
 12966  09F8                     _DATAEE_WriteByte:
 12967  09F8                     l4797:	
 12968                           ;incstack = 0
 12969                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 12970                           
 12971                           
 12972                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 12973  09F8  3000               	movlw	0
 12974  09F9  1B8B               	btfsc	11,7	;volatile
 12975  09FA  3001               	movlw	1
 12976  09FB  0021               	movlb	1	; select bank1
 12977  09FC  00A3               	movwf	DATAEE_WriteByte@GIEBitValue^(0+128)
 12978                           
 12979                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 12980  09FD  0821               	movf	(DATAEE_WriteByte@bAdd+1)^(0+128),w
 12981  09FE  0030               	movlb	16	; select bank16
 12982  09FF  009B               	movwf	27	;volatile
 12983  0A00                     l4799:
 12984                           
 12985                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 12986  0A00  0021               	movlb	1	; select bank1
 12987  0A01  0820               	movf	DATAEE_WriteByte@bAdd^(0+128),w
 12988  0A02  0030               	movlb	16	; select bank16
 12989  0A03  009A               	movwf	26	;volatile
 12990  0A04                     l4801:
 12991                           
 12992                           ;memory.c: 186: NVMDATL = bData;
 12993  0A04  0021               	movlb	1	; select bank1
 12994  0A05  0822               	movf	DATAEE_WriteByte@bData^(0+128),w
 12995  0A06  0030               	movlb	16	; select bank16
 12996  0A07  009C               	movwf	28	;volatile
 12997  0A08                     l4803:
 12998                           
 12999                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 13000  0A08  171E               	bsf	30,6	;volsfr
 13001  0A09                     l4805:
 13002                           
 13003                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 13004  0A09  151E               	bsf	30,2	;volsfr
 13005  0A0A                     l4807:
 13006                           
 13007                           ;memory.c: 189: INTCONbits.GIE = 0;
 13008  0A0A  138B               	bcf	11,7	;volatile
 13009  0A0B                     l4809:
 13010                           
 13011                           ;memory.c: 190: NVMCON2 = 0x55;
 13012  0A0B  3055               	movlw	85
 13013  0A0C  009F               	movwf	31	;volsfr
 13014  0A0D                     l4811:
 13015                           
 13016                           ;memory.c: 191: NVMCON2 = 0xAA;
 13017  0A0D  30AA               	movlw	170
 13018  0A0E  009F               	movwf	31	;volsfr
 13019  0A0F                     l4813:
 13020                           
 13021                           ;memory.c: 192: NVMCON1bits.WR = 1;
 13022  0A0F  149E               	bsf	30,1	;volsfr
 13023  0A10                     l842:	
 13024                           ;memory.c: 195: {
 13025                           
 13026  0A10  189E               	btfsc	30,1	;volsfr
 13027  0A11  2A13               	goto	u4251
 13028  0A12  2A14               	goto	u4250
 13029  0A13                     u4251:
 13030  0A13  2A10               	goto	l842
 13031  0A14                     u4250:
 13032  0A14                     l844:
 13033                           
 13034                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 13035  0A14  111E               	bcf	30,2	;volsfr
 13036  0A15                     l4815:
 13037                           
 13038                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 13039  0A15  0021               	movlb	1	; select bank1
 13040  0A16  0C23               	rrf	DATAEE_WriteByte@GIEBitValue^(0+128),w
 13041  0A17  1C03               	skipc
 13042  0A18  138B               	bcf	11,7	;volatile
 13043  0A19  1803               	skipnc
 13044  0A1A  178B               	bsf	11,7	;volatile
 13045  0A1B                     l845:
 13046  0A1B  0008               	return
 13047  0A1C                     __end_of_DATAEE_WriteByte:
 13048                           
 13049                           	psect	text30
 13050  0820                     __ptext30:	
 13051 ;; *************** function _DATAEE_ReadByte *****************
 13052 ;; Defined at:
 13053 ;;		line 202 in file "mcc_generated_files/memory.c"
 13054 ;; Parameters:    Size  Location     Type
 13055 ;;  bAdd            2    0[BANK1 ] unsigned int 
 13056 ;; Auto vars:     Size  Location     Type
 13057 ;;		None
 13058 ;; Return value:  Size  Location     Type
 13059 ;;                  1    wreg      unsigned char 
 13060 ;; Registers used:
 13061 ;;		wreg, status,2
 13062 ;; Tracked objects:
 13063 ;;		On entry : 0/0
 13064 ;;		On exit  : 0/0
 13065 ;;		Unchanged: 0/0
 13066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13067 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13070 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13071 ;;Total ram usage:        2 bytes
 13072 ;; Hardware stack levels used:    1
 13073 ;; Hardware stack levels required when called:    7
 13074 ;; This function calls:
 13075 ;;		Nothing
 13076 ;; This function is called by:
 13077 ;;		_main
 13078 ;; This function uses a non-reentrant model
 13079 ;;
 13080                           
 13081                           
 13082                           ;psect for function _DATAEE_ReadByte
 13083  0820                     _DATAEE_ReadByte:
 13084  0820                     l4817:	
 13085                           ;incstack = 0
 13086                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 13087                           
 13088                           
 13089                           ;memory.c: 204: NVMADRH = ((bAdd >> 8) & 0xFF);
 13090  0820  0021               	movlb	1	; select bank1
 13091  0821  0821               	movf	(DATAEE_ReadByte@bAdd+1)^(0+128),w
 13092  0822  0030               	movlb	16	; select bank16
 13093  0823  009B               	movwf	27	;volatile
 13094  0824                     l4819:
 13095                           
 13096                           ;memory.c: 205: NVMADRL = (bAdd & 0xFF);
 13097  0824  0021               	movlb	1	; select bank1
 13098  0825  0820               	movf	DATAEE_ReadByte@bAdd^(0+128),w
 13099  0826  0030               	movlb	16	; select bank16
 13100  0827  009A               	movwf	26	;volatile
 13101  0828                     l4821:
 13102                           
 13103                           ;memory.c: 206: NVMCON1bits.NVMREGS = 1;
 13104  0828  171E               	bsf	30,6	;volsfr
 13105  0829                     l4823:
 13106                           
 13107                           ;memory.c: 207: NVMCON1bits.RD = 1;
 13108  0829  141E               	bsf	30,0	;volsfr
 13109  082A                     l4825:
 13110                           
 13111                           ;memory.c: 208: __nop();
 13112  082A  0000               	nop
 13113  082B                     l4827:
 13114                           
 13115                           ;memory.c: 209: __nop();
 13116  082B  0000               	nop
 13117  082C                     l4829:
 13118                           
 13119                           ;memory.c: 211: return (NVMDATL);
 13120  082C  0030               	movlb	16	; select bank16
 13121  082D  081C               	movf	28,w	;volatile
 13122  082E                     l848:
 13123  082E  0008               	return
 13124  082F                     __end_of_DATAEE_ReadByte:
 13125                           
 13126                           	psect	intentry
 13127  0004                     __pintentry:	
 13128 ;; *************** function _INTERRUPT_InterruptManager *****************
 13129 ;; Defined at:
 13130 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13131 ;; Parameters:    Size  Location     Type
 13132 ;;		None
 13133 ;; Auto vars:     Size  Location     Type
 13134 ;;		None
 13135 ;; Return value:  Size  Location     Type
 13136 ;;                  1    wreg      void 
 13137 ;; Registers used:
 13138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13139 ;; Tracked objects:
 13140 ;;		On entry : 0/0
 13141 ;;		On exit  : 0/0
 13142 ;;		Unchanged: 0/0
 13143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13148 ;;Total ram usage:        0 bytes
 13149 ;; Hardware stack levels used:    1
 13150 ;; Hardware stack levels required when called:    6
 13151 ;; This function calls:
 13152 ;;		_INT_ISR
 13153 ;;		_TMR1_ISR
 13154 ;;		_TMR3_ISR
 13155 ;;		_TMR5_ISR
 13156 ;; This function is called by:
 13157 ;;		Interrupt level 1
 13158 ;; This function uses a non-reentrant model
 13159 ;;
 13160                           
 13161  0004                     _INTERRUPT_InterruptManager:
 13162                           
 13163                           ;incstack = 0
 13164  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13165                           
 13166                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13167  0005  3180               	pagesel	$
 13168  0006                     i1l5007:
 13169                           
 13170                           ;interrupt_manager.c: 55: if(PIE0bits.INTE == 1 && PIR0bits.INTF == 1)
 13171  0006  002E               	movlb	14	; select bank14
 13172  0007  1C16               	btfss	22,0	;volatile
 13173  0008  280A               	goto	u470_21
 13174  0009  280B               	goto	u470_20
 13175  000A                     u470_21:
 13176  000A  2813               	goto	i1l354
 13177  000B                     u470_20:
 13178  000B                     i1l5009:
 13179  000B  1C0C               	btfss	12,0	;volatile
 13180  000C  280E               	goto	u471_21
 13181  000D  280F               	goto	u471_20
 13182  000E                     u471_21:
 13183  000E  2813               	goto	i1l354
 13184  000F                     u471_20:
 13185  000F                     i1l5011:
 13186                           
 13187                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: INT_ISR();
 13188  000F  3197  2789  3180   	fcall	_INT_ISR
 13189                           
 13190                           ;interrupt_manager.c: 58: }
 13191  0012  284A               	goto	i1l368
 13192  0013                     i1l354:
 13193                           
 13194                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
 13195  0013  1F0B               	btfss	11,6	;volatile
 13196  0014  2816               	goto	u472_21
 13197  0015  2817               	goto	u472_20
 13198  0016                     u472_21:
 13199  0016  284A               	goto	i1l368
 13200  0017                     u472_20:
 13201  0017                     i1l5013:
 13202                           
 13203                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: if(PIE4bits.TMR5IE == 1 && PIR4bits
      +                          .TMR5IF == 1)
 13204  0017  1E1A               	btfss	26,4	;volatile
 13205  0018  281A               	goto	u473_21
 13206  0019  281B               	goto	u473_20
 13207  001A                     u473_21:
 13208  001A  2823               	goto	i1l357
 13209  001B                     u473_20:
 13210  001B                     i1l5015:
 13211  001B  1E10               	btfss	16,4	;volatile
 13212  001C  281E               	goto	u474_21
 13213  001D  281F               	goto	u474_20
 13214  001E                     u474_21:
 13215  001E  2823               	goto	i1l357
 13216  001F                     u474_20:
 13217  001F                     i1l5017:
 13218                           
 13219                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR5_ISR();
 13220  001F  3188  20DE  3180   	fcall	_TMR5_ISR
 13221                           
 13222                           ;interrupt_manager.c: 64: }
 13223  0022  284A               	goto	i1l368
 13224  0023                     i1l357:
 13225                           
 13226                           ;interrupt_manager.c: 65: else if(PIE4bits.TMR3IE == 1 && PIR4bits.TMR3IF == 1)
 13227  0023  1D1A               	btfss	26,2	;volatile
 13228  0024  2826               	goto	u475_21
 13229  0025  2827               	goto	u475_20
 13230  0026                     u475_21:
 13231  0026  282F               	goto	i1l359
 13232  0027                     u475_20:
 13233  0027                     i1l5019:
 13234  0027  1D10               	btfss	16,2	;volatile
 13235  0028  282A               	goto	u476_21
 13236  0029  282B               	goto	u476_20
 13237  002A                     u476_21:
 13238  002A  282F               	goto	i1l359
 13239  002B                     u476_20:
 13240  002B                     i1l5021:
 13241                           
 13242                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: TMR3_ISR();
 13243  002B  3188  20C7  3180   	fcall	_TMR3_ISR
 13244                           
 13245                           ;interrupt_manager.c: 68: }
 13246  002E  284A               	goto	i1l368
 13247  002F                     i1l359:
 13248                           
 13249                           ;interrupt_manager.c: 69: else if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 13250  002F  1C1A               	btfss	26,0	;volatile
 13251  0030  2832               	goto	u477_21
 13252  0031  2833               	goto	u477_20
 13253  0032                     u477_21:
 13254  0032  283B               	goto	i1l361
 13255  0033                     u477_20:
 13256  0033                     i1l5023:
 13257  0033  1C10               	btfss	16,0	;volatile
 13258  0034  2836               	goto	u478_21
 13259  0035  2837               	goto	u478_20
 13260  0036                     u478_21:
 13261  0036  283B               	goto	i1l361
 13262  0037                     u478_20:
 13263  0037                     i1l5025:
 13264                           
 13265                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: TMR1_ISR();
 13266  0037  3188  20B0  3180   	fcall	_TMR1_ISR
 13267                           
 13268                           ;interrupt_manager.c: 72: }
 13269  003A  284A               	goto	i1l368
 13270  003B                     i1l361:
 13271                           
 13272                           ;interrupt_manager.c: 73: else if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 13273  003B  1C99               	btfss	25,1	;volatile
 13274  003C  283E               	goto	u479_21
 13275  003D  283F               	goto	u479_20
 13276  003E                     u479_21:
 13277  003E  2844               	goto	i1l363
 13278  003F                     u479_20:
 13279  003F                     i1l5027:
 13280                           
 13281                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: i2c1_driver_busCollisionISR();
 13282  003F  1C8F               	btfss	15,1	;volatile
 13283  0040  2842               	goto	u480_21
 13284  0041  2843               	goto	u480_20
 13285  0042                     u480_21:
 13286  0042  2844               	goto	i1l363
 13287  0043                     u480_20:
 13288  0043  284A               	goto	i1l368
 13289  0044                     i1l363:
 13290                           
 13291                           ;interrupt_manager.c: 77: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 13292  0044  1C19               	btfss	25,0	;volatile
 13293  0045  2847               	goto	u481_21
 13294  0046  2848               	goto	u481_20
 13295  0047                     u481_21:
 13296  0047  284A               	goto	i1l362
 13297  0048                     u481_20:
 13298  0048                     i1l5031:
 13299                           
 13300                           ;interrupt_manager.c: 78: {;interrupt_manager.c: 79: i2c1_driver_i2cISR();
 13301  0048  080F               	movf	15,w	;volatile
 13302  0049  284A               	goto	i1l368
 13303  004A                     i1l362:
 13304  004A                     i1l368:
 13305  004A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 13306  004B  0009               	retfie
 13307  004C                     __end_of_INTERRUPT_InterruptManager:
 13308                           
 13309                           	psect	text32
 13310  08DE                     __ptext32:	
 13311 ;; *************** function _TMR5_ISR *****************
 13312 ;; Defined at:
 13313 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 13314 ;; Parameters:    Size  Location     Type
 13315 ;;		None
 13316 ;; Auto vars:     Size  Location     Type
 13317 ;;		None
 13318 ;; Return value:  Size  Location     Type
 13319 ;;                  1    wreg      void 
 13320 ;; Registers used:
 13321 ;;		wreg, status,2, status,0, pclath, cstack
 13322 ;; Tracked objects:
 13323 ;;		On entry : 0/0
 13324 ;;		On exit  : 0/0
 13325 ;;		Unchanged: 0/0
 13326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13331 ;;Total ram usage:        0 bytes
 13332 ;; Hardware stack levels used:    1
 13333 ;; Hardware stack levels required when called:    3
 13334 ;; This function calls:
 13335 ;;		Absolute function
 13336 ;;		_TMR5_DefaultInterruptHandler
 13337 ;;		_TMR5_WriteTimer
 13338 ;;		_monitoring_ISR
 13339 ;; This function is called by:
 13340 ;;		_INTERRUPT_InterruptManager
 13341 ;; This function uses a non-reentrant model
 13342 ;;
 13343                           
 13344                           
 13345                           ;psect for function _TMR5_ISR
 13346  08DE                     _TMR5_ISR:
 13347  08DE                     i1l4769:	
 13348                           ;incstack = 0
 13349                           ; Regs used in _TMR5_ISR: [wreg+status,2+status,0+pclath+cstack]
 13350                           
 13351                           
 13352                           ;tmr5.c: 168: PIR4bits.TMR5IF = 0;
 13353  08DE  002E               	movlb	14	; select bank14
 13354  08DF  1210               	bcf	16,4	;volatile
 13355  08E0                     i1l4771:
 13356                           
 13357                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 13358  08E0  0021               	movlb	1	; select bank1
 13359  08E1  0836               	movf	(_timer5ReloadVal+1)^(0+128),w	;volatile
 13360  08E2  00F1               	movwf	TMR5_WriteTimer@timerVal+1
 13361  08E3  0835               	movf	_timer5ReloadVal^(0+128),w	;volatile
 13362  08E4  00F0               	movwf	TMR5_WriteTimer@timerVal
 13363  08E5  3188  2051  3188   	fcall	_TMR5_WriteTimer
 13364  08E8                     i1l4773:
 13365                           
 13366                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 13367  08E8  0021               	movlb	1	; select bank1
 13368  08E9  0833               	movf	_TMR5_InterruptHandler^(0+128),w
 13369  08EA  0434               	iorwf	(_TMR5_InterruptHandler+1)^(0+128),w
 13370  08EB  1903               	btfsc	3,2
 13371  08EC  28EE               	goto	u421_21
 13372  08ED  28EF               	goto	u421_20
 13373  08EE                     u421_21:
 13374  08EE  28F4               	goto	i1l714
 13375  08EF                     u421_20:
 13376  08EF                     i1l4775:
 13377                           
 13378                           ;tmr5.c: 172: {;tmr5.c: 173: TMR5_InterruptHandler();
 13379  08EF  0834               	movf	(_TMR5_InterruptHandler+1)^(0+128),w
 13380  08F0  008A               	movwf	10
 13381  08F1  0833               	movf	_TMR5_InterruptHandler^(0+128),w
 13382  08F2  000A               	callw
 13383  08F3  3188               	pagesel	$
 13384  08F4                     i1l714:
 13385  08F4  0008               	return
 13386  08F5                     __end_of_TMR5_ISR:
 13387                           
 13388                           	psect	text33
 13389  0003                     __ptext33:	
 13390 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 13391 ;; Defined at:
 13392 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 13393 ;; Parameters:    Size  Location     Type
 13394 ;;		None
 13395 ;; Auto vars:     Size  Location     Type
 13396 ;;		None
 13397 ;; Return value:  Size  Location     Type
 13398 ;;                  1    wreg      void 
 13399 ;; Registers used:
 13400 ;;		None
 13401 ;; Tracked objects:
 13402 ;;		On entry : 0/0
 13403 ;;		On exit  : 0/0
 13404 ;;		Unchanged: 0/0
 13405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13410 ;;Total ram usage:        0 bytes
 13411 ;; Hardware stack levels used:    1
 13412 ;; This function calls:
 13413 ;;		Nothing
 13414 ;; This function is called by:
 13415 ;;		_TMR5_Initialize
 13416 ;;		_TMR5_ISR
 13417 ;; This function uses a non-reentrant model
 13418 ;;
 13419                           
 13420                           
 13421                           ;psect for function _TMR5_DefaultInterruptHandler
 13422  0003                     _TMR5_DefaultInterruptHandler:
 13423  0003                     i1l720:	
 13424                           ;incstack = 0
 13425                           ; Regs used in _TMR5_DefaultInterruptHandler: []
 13426                           
 13427  0003  0008               	return
 13428  0004                     __end_of_TMR5_DefaultInterruptHandler:
 13429                           
 13430                           	psect	text34
 13431  05D5                     __ptext34:	
 13432 ;; *************** function _monitoring_ISR *****************
 13433 ;; Defined at:
 13434 ;;		line 444 in file "main.c"
 13435 ;; Parameters:    Size  Location     Type
 13436 ;;		None
 13437 ;; Auto vars:     Size  Location     Type
 13438 ;;		None
 13439 ;; Return value:  Size  Location     Type
 13440 ;;                  1    wreg      void 
 13441 ;; Registers used:
 13442 ;;		wreg, status,2, status,0, pclath, cstack
 13443 ;; Tracked objects:
 13444 ;;		On entry : 0/0
 13445 ;;		On exit  : 0/0
 13446 ;;		Unchanged: 0/0
 13447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13450 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13451 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13452 ;;Total ram usage:        3 bytes
 13453 ;; Hardware stack levels used:    1
 13454 ;; Hardware stack levels required when called:    2
 13455 ;; This function calls:
 13456 ;;		_ADCC_GetSingleConversion
 13457 ;;		___wmul
 13458 ;;		_tsttc
 13459 ;;		i1_DATAEE_WriteByte
 13460 ;; This function is called by:
 13461 ;;		_main
 13462 ;;		_TMR5_ISR
 13463 ;; This function uses a non-reentrant model
 13464 ;;
 13465                           
 13466                           
 13467                           ;psect for function _monitoring_ISR
 13468  05D5                     _monitoring_ISR:
 13469  05D5                     i1l4673:	
 13470                           ;incstack = 0
 13471                           ; Regs used in _monitoring_ISR: [wreg+status,2+status,0+pclath+cstack]
 13472                           
 13473                           
 13474                           ;main.c: 445: temp = (uint8_t)tsttc();
 13475  05D5  3186  26F3  3185   	fcall	_tsttc
 13476  05D8  00FA               	movwf	??_monitoring_ISR
 13477  05D9  087A               	movf	??_monitoring_ISR,w
 13478  05DA  0020               	movlb	0	; select bank0
 13479  05DB  00E3               	movwf	_temp
 13480                           
 13481                           ;main.c: 447: lumLevel = ADCC_GetSingleConversion(channel_ANA0) >> 13;
 13482  05DC  3000               	movlw	0
 13483  05DD  3188  2074  3185   	fcall	_ADCC_GetSingleConversion
 13484  05E0  0870               	movf	?_ADCC_GetSingleConversion,w
 13485  05E1  00FA               	movwf	??_monitoring_ISR
 13486  05E2  0871               	movf	?_ADCC_GetSingleConversion+1,w
 13487  05E3  00FB               	movwf	??_monitoring_ISR+1
 13488  05E4  300D               	movlw	13
 13489  05E5                     u408_25:
 13490  05E5  36FB               	lsrf	??_monitoring_ISR+1,f
 13491  05E6  0CFA               	rrf	??_monitoring_ISR,f
 13492  05E7  0B89               	decfsz	9,f
 13493  05E8  2DE5               	goto	u408_25
 13494  05E9  087A               	movf	??_monitoring_ISR,w
 13495  05EA  00FC               	movwf	??_monitoring_ISR+2
 13496  05EB  087C               	movf	??_monitoring_ISR+2,w
 13497  05EC  0020               	movlb	0	; select bank0
 13498  05ED  00E2               	movwf	_lumLevel
 13499  05EE                     i1l4675:
 13500                           
 13501                           ;main.c: 449: if(prevTemp != temp || prevLumLevel != lumLevel){
 13502  05EE  0863               	movf	_temp,w
 13503  05EF  00FA               	movwf	??_monitoring_ISR
 13504  05F0  01FB               	clrf	??_monitoring_ISR+1
 13505  05F1  086D               	movf	_prevTemp+1,w
 13506  05F2  067B               	xorwf	??_monitoring_ISR+1,w
 13507  05F3  1D03               	skipz
 13508  05F4  2DF7               	goto	u409_25
 13509  05F5  086C               	movf	_prevTemp,w
 13510  05F6  067A               	xorwf	??_monitoring_ISR,w
 13511  05F7                     u409_25:
 13512  05F7  1D03               	skipz
 13513  05F8  2DFA               	goto	u409_21
 13514  05F9  2DFB               	goto	u409_20
 13515  05FA                     u409_21:
 13516  05FA  2E08               	goto	i1l4679
 13517  05FB                     u409_20:
 13518  05FB                     i1l4677:
 13519  05FB  0862               	movf	_lumLevel,w
 13520  05FC  00FA               	movwf	??_monitoring_ISR
 13521  05FD  01FB               	clrf	??_monitoring_ISR+1
 13522  05FE  086B               	movf	_prevLumLevel+1,w
 13523  05FF  067B               	xorwf	??_monitoring_ISR+1,w
 13524  0600  1D03               	skipz
 13525  0601  2E04               	goto	u410_25
 13526  0602  086A               	movf	_prevLumLevel,w
 13527  0603  067A               	xorwf	??_monitoring_ISR,w
 13528  0604                     u410_25:
 13529  0604  1903               	skipnz
 13530  0605  2E07               	goto	u410_21
 13531  0606  2E08               	goto	u410_20
 13532  0607                     u410_21:
 13533  0607  2EB4               	goto	i1l4691
 13534  0608                     u410_20:
 13535  0608                     i1l4679:
 13536                           
 13537                           ;main.c: 451: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*0) , t.h);
 13538  0608  0021               	movlb	1	; select bank1
 13539  0609  0844               	movf	_idx_RingBuffer^(0+128),w
 13540  060A  00FA               	movwf	??_monitoring_ISR
 13541  060B  01FB               	clrf	??_monitoring_ISR+1
 13542  060C  087A               	movf	??_monitoring_ISR,w
 13543  060D  00F0               	movwf	___wmul@multiplier
 13544  060E  087B               	movf	??_monitoring_ISR+1,w
 13545  060F  00F1               	movwf	___wmul@multiplier+1
 13546  0610  3005               	movlw	5
 13547  0611  00F2               	movwf	___wmul@multiplicand
 13548  0612  3000               	movlw	0
 13549  0613  00F3               	movwf	___wmul@multiplicand+1
 13550  0614  3189  215D  3185   	fcall	___wmul
 13551  0617  0870               	movf	?___wmul,w
 13552  0618  3E14               	addlw	20
 13553  0619  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13554  061A  3070               	movlw	112
 13555  061B  3D71               	addwfc	?___wmul+1,w
 13556  061C  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13557  061D  0020               	movlb	0	; select bank0
 13558  061E  0857               	movf	_t,w
 13559  061F  00FC               	movwf	??_monitoring_ISR+2
 13560  0620  087C               	movf	??_monitoring_ISR+2,w
 13561  0621  00F8               	movwf	i1DATAEE_WriteByte@bData
 13562  0622  3189  213F  3185   	fcall	i1_DATAEE_WriteByte
 13563                           
 13564                           ;main.c: 452: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*1) , t.m);
 13565  0625  0021               	movlb	1	; select bank1
 13566  0626  0844               	movf	_idx_RingBuffer^(0+128),w
 13567  0627  00FA               	movwf	??_monitoring_ISR
 13568  0628  01FB               	clrf	??_monitoring_ISR+1
 13569  0629  087A               	movf	??_monitoring_ISR,w
 13570  062A  00F0               	movwf	___wmul@multiplier
 13571  062B  087B               	movf	??_monitoring_ISR+1,w
 13572  062C  00F1               	movwf	___wmul@multiplier+1
 13573  062D  3005               	movlw	5
 13574  062E  00F2               	movwf	___wmul@multiplicand
 13575  062F  3000               	movlw	0
 13576  0630  00F3               	movwf	___wmul@multiplicand+1
 13577  0631  3189  215D  3185   	fcall	___wmul
 13578  0634  0870               	movf	?___wmul,w
 13579  0635  3E1C               	addlw	28
 13580  0636  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13581  0637  3070               	movlw	112
 13582  0638  3D71               	addwfc	?___wmul+1,w
 13583  0639  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13584  063A  0020               	movlb	0	; select bank0
 13585  063B  0858               	movf	_t+1,w
 13586  063C  00FC               	movwf	??_monitoring_ISR+2
 13587  063D  087C               	movf	??_monitoring_ISR+2,w
 13588  063E  00F8               	movwf	i1DATAEE_WriteByte@bData
 13589  063F  3189  213F  3185   	fcall	i1_DATAEE_WriteByte
 13590                           
 13591                           ;main.c: 453: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*2) , t.s);
 13592  0642  0021               	movlb	1	; select bank1
 13593  0643  0844               	movf	_idx_RingBuffer^(0+128),w
 13594  0644  00FA               	movwf	??_monitoring_ISR
 13595  0645  01FB               	clrf	??_monitoring_ISR+1
 13596  0646  087A               	movf	??_monitoring_ISR,w
 13597  0647  00F0               	movwf	___wmul@multiplier
 13598  0648  087B               	movf	??_monitoring_ISR+1,w
 13599  0649  00F1               	movwf	___wmul@multiplier+1
 13600  064A  3005               	movlw	5
 13601  064B  00F2               	movwf	___wmul@multiplicand
 13602  064C  3000               	movlw	0
 13603  064D  00F3               	movwf	___wmul@multiplicand+1
 13604  064E  3189  215D  3185   	fcall	___wmul
 13605  0651  0870               	movf	?___wmul,w
 13606  0652  3E24               	addlw	36
 13607  0653  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13608  0654  3070               	movlw	112
 13609  0655  3D71               	addwfc	?___wmul+1,w
 13610  0656  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13611  0657  0020               	movlb	0	; select bank0
 13612  0658  0859               	movf	_t+2,w
 13613  0659  00FC               	movwf	??_monitoring_ISR+2
 13614  065A  087C               	movf	??_monitoring_ISR+2,w
 13615  065B  00F8               	movwf	i1DATAEE_WriteByte@bData
 13616  065C  3189  213F  3185   	fcall	i1_DATAEE_WriteByte
 13617                           
 13618                           ;main.c: 454: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*3) , temp);
 13619  065F  0021               	movlb	1	; select bank1
 13620  0660  0844               	movf	_idx_RingBuffer^(0+128),w
 13621  0661  00FA               	movwf	??_monitoring_ISR
 13622  0662  01FB               	clrf	??_monitoring_ISR+1
 13623  0663  087A               	movf	??_monitoring_ISR,w
 13624  0664  00F0               	movwf	___wmul@multiplier
 13625  0665  087B               	movf	??_monitoring_ISR+1,w
 13626  0666  00F1               	movwf	___wmul@multiplier+1
 13627  0667  3005               	movlw	5
 13628  0668  00F2               	movwf	___wmul@multiplicand
 13629  0669  3000               	movlw	0
 13630  066A  00F3               	movwf	___wmul@multiplicand+1
 13631  066B  3189  215D  3185   	fcall	___wmul
 13632  066E  0870               	movf	?___wmul,w
 13633  066F  3E2C               	addlw	44
 13634  0670  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13635  0671  3070               	movlw	112
 13636  0672  3D71               	addwfc	?___wmul+1,w
 13637  0673  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13638  0674  0020               	movlb	0	; select bank0
 13639  0675  0863               	movf	_temp,w
 13640  0676  00FC               	movwf	??_monitoring_ISR+2
 13641  0677  087C               	movf	??_monitoring_ISR+2,w
 13642  0678  00F8               	movwf	i1DATAEE_WriteByte@bData
 13643  0679  3189  213F  3185   	fcall	i1_DATAEE_WriteByte
 13644                           
 13645                           ;main.c: 455: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*4) , lumLevel);
 13646  067C  0021               	movlb	1	; select bank1
 13647  067D  0844               	movf	_idx_RingBuffer^(0+128),w
 13648  067E  00FA               	movwf	??_monitoring_ISR
 13649  067F  01FB               	clrf	??_monitoring_ISR+1
 13650  0680  087A               	movf	??_monitoring_ISR,w
 13651  0681  00F0               	movwf	___wmul@multiplier
 13652  0682  087B               	movf	??_monitoring_ISR+1,w
 13653  0683  00F1               	movwf	___wmul@multiplier+1
 13654  0684  3005               	movlw	5
 13655  0685  00F2               	movwf	___wmul@multiplicand
 13656  0686  3000               	movlw	0
 13657  0687  00F3               	movwf	___wmul@multiplicand+1
 13658  0688  3189  215D  3185   	fcall	___wmul
 13659  068B  0870               	movf	?___wmul,w
 13660  068C  3E34               	addlw	52
 13661  068D  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13662  068E  3070               	movlw	112
 13663  068F  3D71               	addwfc	?___wmul+1,w
 13664  0690  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13665  0691  0020               	movlb	0	; select bank0
 13666  0692  0862               	movf	_lumLevel,w
 13667  0693  00FC               	movwf	??_monitoring_ISR+2
 13668  0694  087C               	movf	??_monitoring_ISR+2,w
 13669  0695  00F8               	movwf	i1DATAEE_WriteByte@bData
 13670  0696  3189  213F  3185   	fcall	i1_DATAEE_WriteByte
 13671  0699                     i1l4681:
 13672                           
 13673                           ;main.c: 457: idx_RingBuffer++;
 13674  0699  3001               	movlw	1
 13675  069A  00FA               	movwf	??_monitoring_ISR
 13676  069B  087A               	movf	??_monitoring_ISR,w
 13677  069C  0021               	movlb	1	; select bank1
 13678  069D  07C4               	addwf	_idx_RingBuffer^(0+128),f
 13679  069E                     i1l4683:
 13680                           
 13681                           ;main.c: 458: if(idx_RingBuffer > NREG){
 13682  069E  0844               	movf	_idx_RingBuffer^(0+128),w
 13683  069F  0246               	subwf	_NREG^(0+128),w
 13684  06A0  1803               	skipnc
 13685  06A1  2EA3               	goto	u411_21
 13686  06A2  2EA4               	goto	u411_20
 13687  06A3                     u411_21:
 13688  06A3  2EA5               	goto	i1l4687
 13689  06A4                     u411_20:
 13690  06A4                     i1l4685:
 13691                           
 13692                           ;main.c: 459: idx_RingBuffer = 0;
 13693  06A4  01C4               	clrf	_idx_RingBuffer^(0+128)
 13694  06A5                     i1l4687:
 13695                           
 13696                           ;main.c: 460: };main.c: 461: prevTemp = temp;
 13697  06A5  0020               	movlb	0	; select bank0
 13698  06A6  0863               	movf	_temp,w
 13699  06A7  00FA               	movwf	??_monitoring_ISR
 13700  06A8  01FB               	clrf	??_monitoring_ISR+1
 13701  06A9  087A               	movf	??_monitoring_ISR,w
 13702  06AA  00EC               	movwf	_prevTemp
 13703  06AB  087B               	movf	??_monitoring_ISR+1,w
 13704  06AC  00ED               	movwf	_prevTemp+1
 13705  06AD                     i1l4689:
 13706                           
 13707                           ;main.c: 462: prevLumLevel = lumLevel;
 13708  06AD  0862               	movf	_lumLevel,w
 13709  06AE  00FA               	movwf	??_monitoring_ISR
 13710  06AF  01FB               	clrf	??_monitoring_ISR+1
 13711  06B0  087A               	movf	??_monitoring_ISR,w
 13712  06B1  00EA               	movwf	_prevLumLevel
 13713  06B2  087B               	movf	??_monitoring_ISR+1,w
 13714  06B3  00EB               	movwf	_prevLumLevel+1
 13715  06B4                     i1l4691:
 13716                           
 13717                           ;main.c: 463: };main.c: 466: if(ALAF == 'A'){
 13718  06B4  3041               	movlw	65
 13719  06B5  0665               	xorwf	_ALAF,w
 13720  06B6  1D03               	btfss	3,2
 13721  06B7  2EB9               	goto	u412_21
 13722  06B8  2EBA               	goto	u412_20
 13723  06B9                     u412_21:
 13724  06B9  2EF2               	goto	i1l1268
 13725  06BA                     u412_20:
 13726  06BA                     i1l4693:
 13727                           
 13728                           ;main.c: 468: if((lumAlarm.alarmLum > lumLevel) && (editingLumAlarm == 0)){
 13729  06BA  0851               	movf	_lumAlarm,w
 13730  06BB  0262               	subwf	_lumLevel,w
 13731  06BC  1803               	skipnc
 13732  06BD  2EBF               	goto	u413_21
 13733  06BE  2EC0               	goto	u413_20
 13734  06BF                     u413_21:
 13735  06BF  2ED4               	goto	i1l4707
 13736  06C0                     u413_20:
 13737  06C0                     i1l4695:
 13738  06C0  0860               	movf	_editingLumAlarm,w
 13739  06C1  1D03               	btfss	3,2
 13740  06C2  2EC4               	goto	u414_21
 13741  06C3  2EC5               	goto	u414_20
 13742  06C4                     u414_21:
 13743  06C4  2ED4               	goto	i1l4707
 13744  06C5                     u414_20:
 13745  06C5                     i1l4697:
 13746                           
 13747                           ;main.c: 469: if(!lumAlarm.triggered){
 13748  06C5  0853               	movf	_lumAlarm+2,w
 13749  06C6  1D03               	btfss	3,2
 13750  06C7  2EC9               	goto	u415_21
 13751  06C8  2ECA               	goto	u415_20
 13752  06C9                     u415_21:
 13753  06C9  2ECE               	goto	i1l4701
 13754  06CA                     u415_20:
 13755  06CA                     i1l4699:
 13756                           
 13757                           ;main.c: 470: alarmPWMStart.h = 0xff;
 13758  06CA  30FF               	movlw	255
 13759  06CB  00FA               	movwf	??_monitoring_ISR
 13760  06CC  087A               	movf	??_monitoring_ISR,w
 13761  06CD  00E7               	movwf	_alarmPWMStart
 13762  06CE                     i1l4701:
 13763                           
 13764                           ;main.c: 471: };main.c: 472: lumAlarm.triggered = 1;
 13765  06CE  01D3               	clrf	_lumAlarm+2
 13766  06CF  0AD3               	incf	_lumAlarm+2,f
 13767  06D0                     i1l4703:
 13768                           
 13769                           ;main.c: 474: lumAlarm.trigger = 1;
 13770  06D0  01D2               	clrf	_lumAlarm+1
 13771  06D1  0AD2               	incf	_lumAlarm+1,f
 13772  06D2                     i1l4705:
 13773  06D2  1616               	bsf	22,4	;volatile
 13774  06D3  2ED6               	goto	i1l4711
 13775  06D4                     i1l4707:
 13776                           
 13777                           ;main.c: 477: lumAlarm.triggered = 0;
 13778  06D4  01D3               	clrf	_lumAlarm+2
 13779  06D5                     i1l4709:
 13780  06D5  1216               	bcf	22,4	;volatile
 13781  06D6                     i1l4711:
 13782                           
 13783                           ;main.c: 479: };main.c: 482: if((tempAlarm.alarmTemp < temp) && (editingTempAlarm == 0))
      +                          {
 13784  06D6  0863               	movf	_temp,w
 13785  06D7  0254               	subwf	_tempAlarm,w
 13786  06D8  1803               	skipnc
 13787  06D9  2EDB               	goto	u416_21
 13788  06DA  2EDC               	goto	u416_20
 13789  06DB                     u416_21:
 13790  06DB  2EF0               	goto	i1l4725
 13791  06DC                     u416_20:
 13792  06DC                     i1l4713:
 13793  06DC  0861               	movf	_editingTempAlarm,w
 13794  06DD  1D03               	btfss	3,2
 13795  06DE  2EE0               	goto	u417_21
 13796  06DF  2EE1               	goto	u417_20
 13797  06E0                     u417_21:
 13798  06E0  2EF0               	goto	i1l4725
 13799  06E1                     u417_20:
 13800  06E1                     i1l4715:
 13801                           
 13802                           ;main.c: 483: if(!tempAlarm.triggered){
 13803  06E1  0856               	movf	_tempAlarm+2,w
 13804  06E2  1D03               	btfss	3,2
 13805  06E3  2EE5               	goto	u418_21
 13806  06E4  2EE6               	goto	u418_20
 13807  06E5                     u418_21:
 13808  06E5  2EEA               	goto	i1l4719
 13809  06E6                     u418_20:
 13810  06E6                     i1l4717:
 13811                           
 13812                           ;main.c: 484: alarmPWMStart.h = 0xff;
 13813  06E6  30FF               	movlw	255
 13814  06E7  00FA               	movwf	??_monitoring_ISR
 13815  06E8  087A               	movf	??_monitoring_ISR,w
 13816  06E9  00E7               	movwf	_alarmPWMStart
 13817  06EA                     i1l4719:
 13818                           
 13819                           ;main.c: 485: };main.c: 487: tempAlarm.triggered = 1;
 13820  06EA  01D6               	clrf	_tempAlarm+2
 13821  06EB  0AD6               	incf	_tempAlarm+2,f
 13822  06EC                     i1l4721:
 13823                           
 13824                           ;main.c: 489: tempAlarm.trigger = 1;
 13825  06EC  01D5               	clrf	_tempAlarm+1
 13826  06ED  0AD5               	incf	_tempAlarm+1,f
 13827  06EE                     i1l4723:
 13828  06EE  1696               	bsf	22,5	;volatile
 13829  06EF  2EF2               	goto	i1l1268
 13830  06F0                     i1l4725:
 13831                           
 13832                           ;main.c: 493: tempAlarm.triggered = 0;
 13833  06F0  01D6               	clrf	_tempAlarm+2
 13834  06F1                     i1l4727:
 13835  06F1  1296               	bcf	22,5	;volatile
 13836  06F2                     i1l1268:
 13837  06F2  0008               	return
 13838  06F3                     __end_of_monitoring_ISR:
 13839                           
 13840                           	psect	text35
 13841  06F3                     __ptext35:	
 13842 ;; *************** function _tsttc *****************
 13843 ;; Defined at:
 13844 ;;		line 76 in file "main.c"
 13845 ;; Parameters:    Size  Location     Type
 13846 ;;		None
 13847 ;; Auto vars:     Size  Location     Type
 13848 ;;  value           1    3[COMMON] unsigned char 
 13849 ;; Return value:  Size  Location     Type
 13850 ;;                  1    wreg      unsigned char 
 13851 ;; Registers used:
 13852 ;;		wreg, status,2, status,0, pclath, cstack
 13853 ;; Tracked objects:
 13854 ;;		On entry : 0/0
 13855 ;;		On exit  : 0/0
 13856 ;;		Unchanged: 0/0
 13857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13859 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13860 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13861 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13862 ;;Total ram usage:        2 bytes
 13863 ;; Hardware stack levels used:    1
 13864 ;; Hardware stack levels required when called:    1
 13865 ;; This function calls:
 13866 ;;		_ReadI2C
 13867 ;;		i1_WriteI2C
 13868 ;; This function is called by:
 13869 ;;		_monitoring_ISR
 13870 ;; This function uses a non-reentrant model
 13871 ;;
 13872                           
 13873                           
 13874                           ;psect for function _tsttc
 13875  06F3                     _tsttc:
 13876  06F3                     i1l919:	
 13877                           ;incstack = 0
 13878                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 13879                           ;main.c: 78: unsigned char value;;main.c: 79: do{
 13880                           
 13881  06F3                     i1l4039:	
 13882                           ;main.c: 80: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13883                           
 13884  06F3  0023               	movlb	3	; select bank3
 13885  06F4  0C0F               	rrf	15,w	;volatile
 13886  06F5  0C89               	rrf	9,f
 13887  06F6  3901               	andlw	1
 13888  06F7  00F2               	movwf	??_tsttc
 13889  06F8  0811               	movf	17,w	;volatile
 13890  06F9  391F               	andlw	31
 13891  06FA  0472               	iorwf	??_tsttc,w
 13892  06FB  1D03               	btfss	3,2
 13893  06FC  2EFE               	goto	u301_21
 13894  06FD  2EFF               	goto	u301_20
 13895  06FE                     u301_21:
 13896  06FE  2EF3               	goto	i1l4039
 13897  06FF                     u301_20:
 13898  06FF                     i1l922:
 13899                           
 13900                           ;main.c: 81: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 13901  06FF  1411               	bsf	17,0	;volatile
 13902  0700                     i1l923:
 13903  0700  1811               	btfsc	17,0	;volatile
 13904  0701  2F03               	goto	u302_21
 13905  0702  2F04               	goto	u302_20
 13906  0703                     u302_21:
 13907  0703  2F00               	goto	i1l923
 13908  0704                     u302_20:
 13909  0704                     i1l4041:
 13910  0704  0C0F               	rrf	15,w	;volatile
 13911  0705  0C89               	rrf	9,f
 13912  0706  3901               	andlw	1
 13913  0707  00F2               	movwf	??_tsttc
 13914  0708  0811               	movf	17,w	;volatile
 13915  0709  391F               	andlw	31
 13916  070A  0472               	iorwf	??_tsttc,w
 13917  070B  1D03               	btfss	3,2
 13918  070C  2F0E               	goto	u303_21
 13919  070D  2F0F               	goto	u303_20
 13920  070E                     u303_21:
 13921  070E  2F04               	goto	i1l4041
 13922  070F                     u303_20:
 13923  070F                     i1l4043:
 13924                           
 13925                           ;main.c: 83: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13926  070F  309A               	movlw	154
 13927  0710  318B  23B2  3186   	fcall	i1_WriteI2C
 13928  0713                     i1l4045:
 13929  0713  0023               	movlb	3	; select bank3
 13930  0714  0C0F               	rrf	15,w	;volatile
 13931  0715  0C89               	rrf	9,f
 13932  0716  3901               	andlw	1
 13933  0717  00F2               	movwf	??_tsttc
 13934  0718  0811               	movf	17,w	;volatile
 13935  0719  391F               	andlw	31
 13936  071A  0472               	iorwf	??_tsttc,w
 13937  071B  1D03               	btfss	3,2
 13938  071C  2F1E               	goto	u304_21
 13939  071D  2F1F               	goto	u304_20
 13940  071E                     u304_21:
 13941  071E  2F13               	goto	i1l4045
 13942  071F                     u304_20:
 13943  071F                     i1l4047:
 13944                           
 13945                           ;main.c: 84: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13946  071F  3001               	movlw	1
 13947  0720  318B  23B2  3186   	fcall	i1_WriteI2C
 13948  0723                     i1l4049:
 13949  0723  0023               	movlb	3	; select bank3
 13950  0724  0C0F               	rrf	15,w	;volatile
 13951  0725  0C89               	rrf	9,f
 13952  0726  3901               	andlw	1
 13953  0727  00F2               	movwf	??_tsttc
 13954  0728  0811               	movf	17,w	;volatile
 13955  0729  391F               	andlw	31
 13956  072A  0472               	iorwf	??_tsttc,w
 13957  072B  1D03               	btfss	3,2
 13958  072C  2F2E               	goto	u305_21
 13959  072D  2F2F               	goto	u305_20
 13960  072E                     u305_21:
 13961  072E  2F23               	goto	i1l4049
 13962  072F                     u305_20:
 13963  072F                     i1l934:
 13964                           
 13965                           ;main.c: 85: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 13966  072F  1491               	bsf	17,1	;volatile
 13967  0730                     i1l935:
 13968  0730  1891               	btfsc	17,1	;volatile
 13969  0731  2F33               	goto	u306_21
 13970  0732  2F34               	goto	u306_20
 13971  0733                     u306_21:
 13972  0733  2F30               	goto	i1l935
 13973  0734                     u306_20:
 13974  0734                     i1l4051:
 13975  0734  0C0F               	rrf	15,w	;volatile
 13976  0735  0C89               	rrf	9,f
 13977  0736  3901               	andlw	1
 13978  0737  00F2               	movwf	??_tsttc
 13979  0738  0811               	movf	17,w	;volatile
 13980  0739  391F               	andlw	31
 13981  073A  0472               	iorwf	??_tsttc,w
 13982  073B  1D03               	btfss	3,2
 13983  073C  2F3E               	goto	u307_21
 13984  073D  2F3F               	goto	u307_20
 13985  073E                     u307_21:
 13986  073E  2F34               	goto	i1l4051
 13987  073F                     u307_20:
 13988  073F                     i1l4053:
 13989                           
 13990                           ;main.c: 86: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13991  073F  309B               	movlw	155
 13992  0740  318B  23B2  3186   	fcall	i1_WriteI2C
 13993  0743                     i1l4055:
 13994  0743  0023               	movlb	3	; select bank3
 13995  0744  0C0F               	rrf	15,w	;volatile
 13996  0745  0C89               	rrf	9,f
 13997  0746  3901               	andlw	1
 13998  0747  00F2               	movwf	??_tsttc
 13999  0748  0811               	movf	17,w	;volatile
 14000  0749  391F               	andlw	31
 14001  074A  0472               	iorwf	??_tsttc,w
 14002  074B  1D03               	btfss	3,2
 14003  074C  2F4E               	goto	u308_21
 14004  074D  2F4F               	goto	u308_20
 14005  074E                     u308_21:
 14006  074E  2F43               	goto	i1l4055
 14007  074F                     u308_20:
 14008  074F                     i1l4057:
 14009                           
 14010                           ;main.c: 87: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14011  074F  3189  2125  3186   	fcall	_ReadI2C
 14012  0752  00F2               	movwf	??_tsttc
 14013  0753  0872               	movf	??_tsttc,w
 14014  0754  00F3               	movwf	tsttc@value
 14015  0755                     i1l4059:
 14016  0755  0023               	movlb	3	; select bank3
 14017  0756  0C0F               	rrf	15,w	;volatile
 14018  0757  0C89               	rrf	9,f
 14019  0758  3901               	andlw	1
 14020  0759  00F2               	movwf	??_tsttc
 14021  075A  0811               	movf	17,w	;volatile
 14022  075B  391F               	andlw	31
 14023  075C  0472               	iorwf	??_tsttc,w
 14024  075D  1D03               	btfss	3,2
 14025  075E  2F60               	goto	u309_21
 14026  075F  2F61               	goto	u309_20
 14027  0760                     u309_21:
 14028  0760  2F55               	goto	i1l4059
 14029  0761                     u309_20:
 14030  0761                     i1l946:
 14031                           
 14032                           ;main.c: 88: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14033  0761  1691               	bsf	17,5	;volatile
 14034  0762  1611               	bsf	17,4	;volatile
 14035  0763                     i1l947:
 14036  0763  1A11               	btfsc	17,4	;volatile
 14037  0764  2F66               	goto	u310_21
 14038  0765  2F67               	goto	u310_20
 14039  0766                     u310_21:
 14040  0766  2F63               	goto	i1l947
 14041  0767                     u310_20:
 14042  0767                     i1l4061:
 14043  0767  0C0F               	rrf	15,w	;volatile
 14044  0768  0C89               	rrf	9,f
 14045  0769  3901               	andlw	1
 14046  076A  00F2               	movwf	??_tsttc
 14047  076B  0811               	movf	17,w	;volatile
 14048  076C  391F               	andlw	31
 14049  076D  0472               	iorwf	??_tsttc,w
 14050  076E  1D03               	btfss	3,2
 14051  076F  2F71               	goto	u311_21
 14052  0770  2F72               	goto	u311_20
 14053  0771                     u311_21:
 14054  0771  2F67               	goto	i1l4061
 14055  0772                     u311_20:
 14056  0772                     i1l952:
 14057                           
 14058                           ;main.c: 89: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 14059  0772  1511               	bsf	17,2	;volatile
 14060  0773                     i1l953:
 14061  0773  1911               	btfsc	17,2	;volatile
 14062  0774  2F76               	goto	u312_21
 14063  0775  2F77               	goto	u312_20
 14064  0776                     u312_21:
 14065  0776  2F73               	goto	i1l953
 14066  0777                     u312_20:
 14067  0777                     i1l955:
 14068                           
 14069                           ;main.c: 90: } while (!(value & 0x40));
 14070  0777  1F73               	btfss	tsttc@value,6
 14071  0778  2F7A               	goto	u313_21
 14072  0779  2F7B               	goto	u313_20
 14073  077A                     u313_21:
 14074  077A  2EF3               	goto	i1l919
 14075  077B                     u313_20:
 14076  077B                     i1l4063:
 14077  077B  0C0F               	rrf	15,w	;volatile
 14078  077C  0C89               	rrf	9,f
 14079  077D  3901               	andlw	1
 14080  077E  00F2               	movwf	??_tsttc
 14081  077F  0811               	movf	17,w	;volatile
 14082  0780  391F               	andlw	31
 14083  0781  0472               	iorwf	??_tsttc,w
 14084  0782  1D03               	btfss	3,2
 14085  0783  2F85               	goto	u314_21
 14086  0784  2F86               	goto	u314_20
 14087  0785                     u314_21:
 14088  0785  2F7B               	goto	i1l4063
 14089  0786                     u314_20:
 14090  0786                     i1l959:
 14091                           
 14092                           ;main.c: 93: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 14093  0786  1411               	bsf	17,0	;volatile
 14094  0787                     i1l960:
 14095  0787  1811               	btfsc	17,0	;volatile
 14096  0788  2F8A               	goto	u315_21
 14097  0789  2F8B               	goto	u315_20
 14098  078A                     u315_21:
 14099  078A  2F87               	goto	i1l960
 14100  078B                     u315_20:
 14101  078B                     i1l4065:
 14102  078B  0C0F               	rrf	15,w	;volatile
 14103  078C  0C89               	rrf	9,f
 14104  078D  3901               	andlw	1
 14105  078E  00F2               	movwf	??_tsttc
 14106  078F  0811               	movf	17,w	;volatile
 14107  0790  391F               	andlw	31
 14108  0791  0472               	iorwf	??_tsttc,w
 14109  0792  1D03               	btfss	3,2
 14110  0793  2F95               	goto	u316_21
 14111  0794  2F96               	goto	u316_20
 14112  0795                     u316_21:
 14113  0795  2F8B               	goto	i1l4065
 14114  0796                     u316_20:
 14115  0796                     i1l4067:
 14116                           
 14117                           ;main.c: 94: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14118  0796  309A               	movlw	154
 14119  0797  318B  23B2  3186   	fcall	i1_WriteI2C
 14120  079A                     i1l4069:
 14121  079A  0023               	movlb	3	; select bank3
 14122  079B  0C0F               	rrf	15,w	;volatile
 14123  079C  0C89               	rrf	9,f
 14124  079D  3901               	andlw	1
 14125  079E  00F2               	movwf	??_tsttc
 14126  079F  0811               	movf	17,w	;volatile
 14127  07A0  391F               	andlw	31
 14128  07A1  0472               	iorwf	??_tsttc,w
 14129  07A2  1D03               	btfss	3,2
 14130  07A3  2FA5               	goto	u317_21
 14131  07A4  2FA6               	goto	u317_20
 14132  07A5                     u317_21:
 14133  07A5  2F9A               	goto	i1l4069
 14134  07A6                     u317_20:
 14135  07A6                     i1l4071:
 14136                           
 14137                           ;main.c: 95: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14138  07A6  3000               	movlw	0
 14139  07A7  318B  23B2  3186   	fcall	i1_WriteI2C
 14140  07AA                     i1l4073:
 14141  07AA  0023               	movlb	3	; select bank3
 14142  07AB  0C0F               	rrf	15,w	;volatile
 14143  07AC  0C89               	rrf	9,f
 14144  07AD  3901               	andlw	1
 14145  07AE  00F2               	movwf	??_tsttc
 14146  07AF  0811               	movf	17,w	;volatile
 14147  07B0  391F               	andlw	31
 14148  07B1  0472               	iorwf	??_tsttc,w
 14149  07B2  1D03               	btfss	3,2
 14150  07B3  2FB5               	goto	u318_21
 14151  07B4  2FB6               	goto	u318_20
 14152  07B5                     u318_21:
 14153  07B5  2FAA               	goto	i1l4073
 14154  07B6                     u318_20:
 14155  07B6                     i1l971:
 14156                           
 14157                           ;main.c: 96: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 14158  07B6  1491               	bsf	17,1	;volatile
 14159  07B7                     i1l972:
 14160  07B7  1891               	btfsc	17,1	;volatile
 14161  07B8  2FBA               	goto	u319_21
 14162  07B9  2FBB               	goto	u319_20
 14163  07BA                     u319_21:
 14164  07BA  2FB7               	goto	i1l972
 14165  07BB                     u319_20:
 14166  07BB                     i1l4075:
 14167  07BB  0C0F               	rrf	15,w	;volatile
 14168  07BC  0C89               	rrf	9,f
 14169  07BD  3901               	andlw	1
 14170  07BE  00F2               	movwf	??_tsttc
 14171  07BF  0811               	movf	17,w	;volatile
 14172  07C0  391F               	andlw	31
 14173  07C1  0472               	iorwf	??_tsttc,w
 14174  07C2  1D03               	btfss	3,2
 14175  07C3  2FC5               	goto	u320_21
 14176  07C4  2FC6               	goto	u320_20
 14177  07C5                     u320_21:
 14178  07C5  2FBB               	goto	i1l4075
 14179  07C6                     u320_20:
 14180  07C6                     i1l4077:
 14181                           
 14182                           ;main.c: 97: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14183  07C6  309B               	movlw	155
 14184  07C7  318B  23B2  3186   	fcall	i1_WriteI2C
 14185  07CA                     i1l4079:
 14186  07CA  0023               	movlb	3	; select bank3
 14187  07CB  0C0F               	rrf	15,w	;volatile
 14188  07CC  0C89               	rrf	9,f
 14189  07CD  3901               	andlw	1
 14190  07CE  00F2               	movwf	??_tsttc
 14191  07CF  0811               	movf	17,w	;volatile
 14192  07D0  391F               	andlw	31
 14193  07D1  0472               	iorwf	??_tsttc,w
 14194  07D2  1D03               	btfss	3,2
 14195  07D3  2FD5               	goto	u321_21
 14196  07D4  2FD6               	goto	u321_20
 14197  07D5                     u321_21:
 14198  07D5  2FCA               	goto	i1l4079
 14199  07D6                     u321_20:
 14200  07D6                     i1l4081:
 14201                           
 14202                           ;main.c: 98: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14203  07D6  3189  2125  3186   	fcall	_ReadI2C
 14204  07D9  00F2               	movwf	??_tsttc
 14205  07DA  0872               	movf	??_tsttc,w
 14206  07DB  00F3               	movwf	tsttc@value
 14207  07DC                     i1l4083:
 14208  07DC  0023               	movlb	3	; select bank3
 14209  07DD  0C0F               	rrf	15,w	;volatile
 14210  07DE  0C89               	rrf	9,f
 14211  07DF  3901               	andlw	1
 14212  07E0  00F2               	movwf	??_tsttc
 14213  07E1  0811               	movf	17,w	;volatile
 14214  07E2  391F               	andlw	31
 14215  07E3  0472               	iorwf	??_tsttc,w
 14216  07E4  1D03               	btfss	3,2
 14217  07E5  2FE7               	goto	u322_21
 14218  07E6  2FE8               	goto	u322_20
 14219  07E7                     u322_21:
 14220  07E7  2FDC               	goto	i1l4083
 14221  07E8                     u322_20:
 14222  07E8                     i1l983:
 14223                           
 14224                           ;main.c: 99: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14225  07E8  1691               	bsf	17,5	;volatile
 14226  07E9  1611               	bsf	17,4	;volatile
 14227  07EA                     i1l984:
 14228  07EA  1A11               	btfsc	17,4	;volatile
 14229  07EB  2FED               	goto	u323_21
 14230  07EC  2FEE               	goto	u323_20
 14231  07ED                     u323_21:
 14232  07ED  2FEA               	goto	i1l984
 14233  07EE                     u323_20:
 14234  07EE                     i1l4085:
 14235  07EE  0C0F               	rrf	15,w	;volatile
 14236  07EF  0C89               	rrf	9,f
 14237  07F0  3901               	andlw	1
 14238  07F1  00F2               	movwf	??_tsttc
 14239  07F2  0811               	movf	17,w	;volatile
 14240  07F3  391F               	andlw	31
 14241  07F4  0472               	iorwf	??_tsttc,w
 14242  07F5  1D03               	btfss	3,2
 14243  07F6  2FF8               	goto	u324_21
 14244  07F7  2FF9               	goto	u324_20
 14245  07F8                     u324_21:
 14246  07F8  2FEE               	goto	i1l4085
 14247  07F9                     u324_20:
 14248  07F9                     i1l989:
 14249                           
 14250                           ;main.c: 100: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 14251  07F9  1511               	bsf	17,2	;volatile
 14252  07FA                     i1l990:
 14253  07FA  1911               	btfsc	17,2	;volatile
 14254  07FB  2FFD               	goto	u325_21
 14255  07FC  2FFE               	goto	u325_20
 14256  07FD                     u325_21:
 14257  07FD  2FFA               	goto	i1l990
 14258  07FE                     u325_20:
 14259  07FE                     i1l4087:
 14260                           
 14261                           ;main.c: 102: return value;
 14262  07FE  0873               	movf	tsttc@value,w
 14263  07FF                     i1l993:
 14264  07FF  0008               	return
 14265  0800                     __end_of_tsttc:
 14266                           
 14267                           	psect	text36
 14268  0925                     __ptext36:	
 14269 ;; *************** function _ReadI2C *****************
 14270 ;; Defined at:
 14271 ;;		line 32 in file "I2C/i2c.c"
 14272 ;; Parameters:    Size  Location     Type
 14273 ;;		None
 14274 ;; Auto vars:     Size  Location     Type
 14275 ;;		None
 14276 ;; Return value:  Size  Location     Type
 14277 ;;                  1    wreg      unsigned char 
 14278 ;; Registers used:
 14279 ;;		wreg, status,2, status,0
 14280 ;; Tracked objects:
 14281 ;;		On entry : 0/0
 14282 ;;		On exit  : 0/0
 14283 ;;		Unchanged: 0/0
 14284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14287 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14288 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14289 ;;Total ram usage:        1 bytes
 14290 ;; Hardware stack levels used:    1
 14291 ;; This function calls:
 14292 ;;		Nothing
 14293 ;; This function is called by:
 14294 ;;		_tsttc
 14295 ;;		_LCDrecv
 14296 ;; This function uses a non-reentrant model
 14297 ;;
 14298                           
 14299                           
 14300                           ;psect for function _ReadI2C
 14301  0925                     _ReadI2C:
 14302  0925                     i1l3899:	
 14303                           ;incstack = 0
 14304                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 14305                           
 14306                           
 14307                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 14308  0925  300F               	movlw	15
 14309  0926  0023               	movlb	3	; select bank3
 14310  0927  0510               	andwf	16,w	;volatile
 14311  0928  00F0               	movwf	??_ReadI2C
 14312  0929  3008               	movlw	8
 14313  092A  0670               	xorwf	??_ReadI2C,w
 14314  092B  1903               	btfsc	3,2
 14315  092C  292E               	goto	u269_21
 14316  092D  292F               	goto	u269_20
 14317  092E                     u269_21:
 14318  092E  2938               	goto	i1l22
 14319  092F                     u269_20:
 14320  092F                     i1l3901:
 14321  092F  300F               	movlw	15
 14322  0930  0510               	andwf	16,w	;volatile
 14323  0931  00F0               	movwf	??_ReadI2C
 14324  0932  300B               	movlw	11
 14325  0933  0670               	xorwf	??_ReadI2C,w
 14326  0934  1D03               	btfss	3,2
 14327  0935  2937               	goto	u270_21
 14328  0936  2938               	goto	u270_20
 14329  0937                     u270_21:
 14330  0937  2939               	goto	i1l23
 14331  0938                     u270_20:
 14332  0938                     i1l22:
 14333                           
 14334                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
 14335  0938  1591               	bsf	17,3	;volatile
 14336  0939                     i1l23:
 14337  0939  1C0F               	btfss	15,0	;volatile
 14338  093A  293C               	goto	u271_21
 14339  093B  293D               	goto	u271_20
 14340  093C                     u271_21:
 14341  093C  2939               	goto	i1l23
 14342  093D                     u271_20:
 14343  093D                     i1l3903:
 14344                           
 14345                           ;i2c.c: 37: return ( SSP1BUF );
 14346  093D  080C               	movf	12,w	;volatile
 14347  093E                     i1l26:
 14348  093E  0008               	return
 14349  093F                     __end_of_ReadI2C:
 14350                           
 14351                           	psect	text37
 14352  0874                     __ptext37:	
 14353 ;; *************** function _ADCC_GetSingleConversion *****************
 14354 ;; Defined at:
 14355 ;;		line 130 in file "mcc_generated_files/adcc.c"
 14356 ;; Parameters:    Size  Location     Type
 14357 ;;  channel         1    wreg     enum E12086
 14358 ;; Auto vars:     Size  Location     Type
 14359 ;;  channel         1    3[COMMON] enum E12086
 14360 ;; Return value:  Size  Location     Type
 14361 ;;                  2    0[COMMON] unsigned int 
 14362 ;; Registers used:
 14363 ;;		wreg
 14364 ;; Tracked objects:
 14365 ;;		On entry : 0/0
 14366 ;;		On exit  : 0/0
 14367 ;;		Unchanged: 0/0
 14368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14369 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14372 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14373 ;;Total ram usage:        4 bytes
 14374 ;; Hardware stack levels used:    1
 14375 ;; This function calls:
 14376 ;;		Nothing
 14377 ;; This function is called by:
 14378 ;;		_monitoring_ISR
 14379 ;; This function uses a non-reentrant model
 14380 ;;
 14381                           
 14382                           
 14383                           ;psect for function _ADCC_GetSingleConversion
 14384  0874                     _ADCC_GetSingleConversion:
 14385                           
 14386                           ;incstack = 0
 14387                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 14388                           ;ADCC_GetSingleConversion@channel stored from wreg
 14389  0874  00F3               	movwf	ADCC_GetSingleConversion@channel
 14390  0875                     i1l4021:
 14391                           
 14392                           ;adcc.c: 133: ADPCH = channel;
 14393  0875  0873               	movf	ADCC_GetSingleConversion@channel,w
 14394  0876  0021               	movlb	1	; select bank1
 14395  0877  009E               	movwf	30	;volatile
 14396  0878                     i1l4023:
 14397                           
 14398                           ;adcc.c: 136: ADCON0bits.ADON = 1;
 14399  0878  1793               	bsf	19,7	;volatile
 14400  0879                     i1l4025:
 14401                           
 14402                           ;adcc.c: 139: ADCON0bits.ADCONT = 0;
 14403  0879  1313               	bcf	19,6	;volatile
 14404  087A                     i1l4027:
 14405                           
 14406                           ;adcc.c: 142: ADCON0bits.ADGO = 1;
 14407  087A  1413               	bsf	19,0	;volatile
 14408  087B                     i1l4029:
 14409                           
 14410                           ;adcc.c: 145: __nop();
 14411  087B  0000               	nop
 14412  087C                     i1l587:	
 14413                           ;adcc.c: 149: {
 14414                           
 14415  087C  0021               	movlb	1	; select bank1
 14416  087D  1813               	btfsc	19,0	;volatile
 14417  087E  2880               	goto	u300_21
 14418  087F  2881               	goto	u300_20
 14419  0880                     u300_21:
 14420  0880  287C               	goto	i1l587
 14421  0881                     u300_20:
 14422  0881                     i1l4031:
 14423                           
 14424                           ;adcc.c: 150: };adcc.c: 154: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14425  0881  080D               	movf	13,w	;volatile
 14426  0882  00F1               	movwf	?_ADCC_GetSingleConversion+1
 14427  0883  080C               	movf	12,w	;volatile
 14428  0884  00F0               	movwf	?_ADCC_GetSingleConversion
 14429  0885                     i1l590:
 14430  0885  0008               	return
 14431  0886                     __end_of_ADCC_GetSingleConversion:
 14432                           
 14433                           	psect	text38
 14434  0851                     __ptext38:	
 14435 ;; *************** function _TMR5_WriteTimer *****************
 14436 ;; Defined at:
 14437 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 14438 ;; Parameters:    Size  Location     Type
 14439 ;;  timerVal        2    0[COMMON] unsigned int 
 14440 ;; Auto vars:     Size  Location     Type
 14441 ;;		None
 14442 ;; Return value:  Size  Location     Type
 14443 ;;                  1    wreg      void 
 14444 ;; Registers used:
 14445 ;;		wreg, status,2
 14446 ;; Tracked objects:
 14447 ;;		On entry : 0/0
 14448 ;;		On exit  : 0/0
 14449 ;;		Unchanged: 0/0
 14450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14454 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14455 ;;Total ram usage:        2 bytes
 14456 ;; Hardware stack levels used:    1
 14457 ;; This function calls:
 14458 ;;		Nothing
 14459 ;; This function is called by:
 14460 ;;		_TMR5_ISR
 14461 ;;		_TMR5_Reload
 14462 ;; This function uses a non-reentrant model
 14463 ;;
 14464                           
 14465                           
 14466                           ;psect for function _TMR5_WriteTimer
 14467  0851                     _TMR5_WriteTimer:
 14468  0851                     i1l4437:	
 14469                           ;incstack = 0
 14470                           ; Regs used in _TMR5_WriteTimer: [wreg+status,2]
 14471                           
 14472                           
 14473                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 14474  0851  0024               	movlb	4	; select bank4
 14475  0852  1D1A               	btfss	26,2	;volatile
 14476  0853  2855               	goto	u357_21
 14477  0854  2856               	goto	u357_20
 14478  0855                     u357_21:
 14479  0855  285D               	goto	i1l4447
 14480  0856                     u357_20:
 14481  0856                     i1l4439:
 14482                           
 14483                           ;tmr5.c: 130: {;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 14484  0856  101A               	bcf	26,0	;volatile
 14485  0857                     i1l4441:
 14486                           
 14487                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 14488  0857  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 14489  0858  0099               	movwf	25	;volatile
 14490  0859                     i1l4443:
 14491                           
 14492                           ;tmr5.c: 136: TMR5L = timerVal;
 14493  0859  0870               	movf	TMR5_WriteTimer@timerVal,w
 14494  085A  0098               	movwf	24	;volatile
 14495  085B                     i1l4445:
 14496                           
 14497                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 14498  085B  141A               	bsf	26,0	;volatile
 14499                           
 14500                           ;tmr5.c: 140: }
 14501  085C  2861               	goto	i1l701
 14502  085D                     i1l4447:
 14503                           
 14504                           ;tmr5.c: 141: else;tmr5.c: 142: {;tmr5.c: 144: TMR5H = (timerVal >> 8);
 14505  085D  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 14506  085E  0099               	movwf	25	;volatile
 14507  085F                     i1l4449:
 14508                           
 14509                           ;tmr5.c: 145: TMR5L = timerVal;
 14510  085F  0870               	movf	TMR5_WriteTimer@timerVal,w
 14511  0860  0098               	movwf	24	;volatile
 14512  0861                     i1l701:
 14513  0861  0008               	return
 14514  0862                     __end_of_TMR5_WriteTimer:
 14515                           
 14516                           	psect	text39
 14517  08C7                     __ptext39:	
 14518 ;; *************** function _TMR3_ISR *****************
 14519 ;; Defined at:
 14520 ;;		line 164 in file "mcc_generated_files/tmr3.c"
 14521 ;; Parameters:    Size  Location     Type
 14522 ;;		None
 14523 ;; Auto vars:     Size  Location     Type
 14524 ;;		None
 14525 ;; Return value:  Size  Location     Type
 14526 ;;                  1    wreg      void 
 14527 ;; Registers used:
 14528 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14529 ;; Tracked objects:
 14530 ;;		On entry : 0/0
 14531 ;;		On exit  : 0/0
 14532 ;;		Unchanged: 0/0
 14533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14538 ;;Total ram usage:        0 bytes
 14539 ;; Hardware stack levels used:    1
 14540 ;; Hardware stack levels required when called:    5
 14541 ;; This function calls:
 14542 ;;		Absolute function
 14543 ;;		_TMR3_DefaultInterruptHandler
 14544 ;;		_TMR3_WriteTimer
 14545 ;;		_menuLCD_ISR
 14546 ;; This function is called by:
 14547 ;;		_INTERRUPT_InterruptManager
 14548 ;; This function uses a non-reentrant model
 14549 ;;
 14550                           
 14551                           
 14552                           ;psect for function _TMR3_ISR
 14553  08C7                     _TMR3_ISR:
 14554  08C7                     i1l4777:	
 14555                           ;incstack = 0
 14556                           ; Regs used in _TMR3_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14557                           
 14558                           
 14559                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
 14560  08C7  002E               	movlb	14	; select bank14
 14561  08C8  1110               	bcf	16,2	;volatile
 14562  08C9                     i1l4779:
 14563                           
 14564                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
 14565  08C9  0020               	movlb	0	; select bank0
 14566  08CA  086F               	movf	_timer3ReloadVal+1,w	;volatile
 14567  08CB  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 14568  08CC  086E               	movf	_timer3ReloadVal,w	;volatile
 14569  08CD  00F0               	movwf	TMR3_WriteTimer@timerVal
 14570  08CE  3188  2040  3188   	fcall	_TMR3_WriteTimer
 14571  08D1                     i1l4781:
 14572                           
 14573                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
 14574  08D1  0021               	movlb	1	; select bank1
 14575  08D2  0837               	movf	_TMR3_InterruptHandler^(0+128),w
 14576  08D3  0438               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 14577  08D4  1903               	btfsc	3,2
 14578  08D5  28D7               	goto	u422_21
 14579  08D6  28D8               	goto	u422_20
 14580  08D7                     u422_21:
 14581  08D7  28DD               	goto	i1l490
 14582  08D8                     u422_20:
 14583  08D8                     i1l4783:
 14584                           
 14585                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
 14586  08D8  0838               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 14587  08D9  008A               	movwf	10
 14588  08DA  0837               	movf	_TMR3_InterruptHandler^(0+128),w
 14589  08DB  000A               	callw
 14590  08DC  3188               	pagesel	$
 14591  08DD                     i1l490:
 14592  08DD  0008               	return
 14593  08DE                     __end_of_TMR3_ISR:
 14594                           
 14595                           	psect	text40
 14596  0002                     __ptext40:	
 14597 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 14598 ;; Defined at:
 14599 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 14600 ;; Parameters:    Size  Location     Type
 14601 ;;		None
 14602 ;; Auto vars:     Size  Location     Type
 14603 ;;		None
 14604 ;; Return value:  Size  Location     Type
 14605 ;;                  1    wreg      void 
 14606 ;; Registers used:
 14607 ;;		None
 14608 ;; Tracked objects:
 14609 ;;		On entry : 0/0
 14610 ;;		On exit  : 0/0
 14611 ;;		Unchanged: 0/0
 14612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14617 ;;Total ram usage:        0 bytes
 14618 ;; Hardware stack levels used:    1
 14619 ;; This function calls:
 14620 ;;		Nothing
 14621 ;; This function is called by:
 14622 ;;		_TMR3_Initialize
 14623 ;;		_TMR3_ISR
 14624 ;; This function uses a non-reentrant model
 14625 ;;
 14626                           
 14627                           
 14628                           ;psect for function _TMR3_DefaultInterruptHandler
 14629  0002                     _TMR3_DefaultInterruptHandler:
 14630  0002                     i1l496:	
 14631                           ;incstack = 0
 14632                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 14633                           
 14634  0002  0008               	return
 14635  0003                     __end_of_TMR3_DefaultInterruptHandler:
 14636                           
 14637                           	psect	text41
 14638  0264                     __ptext41:	
 14639 ;; *************** function _menuLCD_ISR *****************
 14640 ;; Defined at:
 14641 ;;		line 332 in file "main.c"
 14642 ;; Parameters:    Size  Location     Type
 14643 ;;		None
 14644 ;; Auto vars:     Size  Location     Type
 14645 ;;  diff            3   42[BANK0 ] struct Time
 14646 ;;  str             8   27[BANK0 ] unsigned char [8]
 14647 ;;  tt              4   35[BANK0 ] unsigned char [4]
 14648 ;;  l               3   39[BANK0 ] unsigned char [3]
 14649 ;; Return value:  Size  Location     Type
 14650 ;;                  1    wreg      void 
 14651 ;; Registers used:
 14652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14653 ;; Tracked objects:
 14654 ;;		On entry : 0/0
 14655 ;;		On exit  : 0/0
 14656 ;;		Unchanged: 0/0
 14657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14659 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14660 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14661 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14662 ;;Total ram usage:       24 bytes
 14663 ;; Hardware stack levels used:    1
 14664 ;; Hardware stack levels required when called:    4
 14665 ;; This function calls:
 14666 ;;		_LCDchar
 14667 ;;		_LCDcmd
 14668 ;;		_LCDstr
 14669 ;;		_PWM_Output_D4_Enable
 14670 ;;		_TMR2_StartTimer
 14671 ;;		_differenceBetweenTimePeriod
 14672 ;;		_sprintf
 14673 ;;		i1_PWM6_LoadDutyValue
 14674 ;;		i1_PWM_Output_D4_Disable
 14675 ;;		i1_TMR2_StopTimer
 14676 ;; This function is called by:
 14677 ;;		_main
 14678 ;;		_TMR3_ISR
 14679 ;; This function uses a non-reentrant model
 14680 ;;
 14681                           
 14682                           
 14683                           ;psect for function _menuLCD_ISR
 14684  0264                     _menuLCD_ISR:
 14685  0264                     i1l4563:	
 14686                           ;incstack = 0
 14687                           ; Regs used in _menuLCD_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14688                           
 14689                           
 14690                           ;main.c: 333: char str[8];;main.c: 334: if(editingClockAlarm){
 14691  0264  0020               	movlb	0	; select bank0
 14692  0265  085C               	movf	_editingClockAlarm,w
 14693  0266  045D               	iorwf	_editingClockAlarm+1,w
 14694  0267  1903               	btfsc	3,2
 14695  0268  2A6A               	goto	u386_21
 14696  0269  2A6B               	goto	u386_20
 14697  026A                     u386_21:
 14698  026A  2A89               	goto	i1l4567
 14699  026B                     u386_20:
 14700  026B                     i1l4565:
 14701                           
 14702                           ;main.c: 335: sprintf(str, "%02d:%02d:%02d", clkAlarm.alarmVal.h,clkAlarm.alarmVal.m,clk
      +                          Alarm.alarmVal.s);
 14703  026B  3000               	movlw	low (STR_1| (0+32768))
 14704  026C  00A0               	movwf	sprintf@f
 14705  026D  3090               	movlw	high (STR_1| (0+32768))
 14706  026E  00A1               	movwf	sprintf@f+1
 14707  026F  084D               	movf	_clkAlarm,w
 14708  0270  00B5               	movwf	??_menuLCD_ISR
 14709  0271  01B6               	clrf	??_menuLCD_ISR+1
 14710  0272  0835               	movf	??_menuLCD_ISR,w
 14711  0273  00A2               	movwf	?_sprintf+2
 14712  0274  0836               	movf	??_menuLCD_ISR+1,w
 14713  0275  00A3               	movwf	?_sprintf+3
 14714  0276  084E               	movf	_clkAlarm+1,w
 14715  0277  00B7               	movwf	??_menuLCD_ISR+2
 14716  0278  01B8               	clrf	??_menuLCD_ISR+3
 14717  0279  0837               	movf	??_menuLCD_ISR+2,w
 14718  027A  00A4               	movwf	?_sprintf+4
 14719  027B  0838               	movf	??_menuLCD_ISR+3,w
 14720  027C  00A5               	movwf	?_sprintf+5
 14721  027D  084F               	movf	_clkAlarm+2,w
 14722  027E  00B9               	movwf	??_menuLCD_ISR+4
 14723  027F  01BA               	clrf	??_menuLCD_ISR+5
 14724  0280  0839               	movf	??_menuLCD_ISR+4,w
 14725  0281  00A6               	movwf	?_sprintf+6
 14726  0282  083A               	movf	??_menuLCD_ISR+5,w
 14727  0283  00A7               	movwf	?_sprintf+7
 14728  0284  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 14729  0285  3184  2438  3182   	fcall	_sprintf
 14730                           
 14731                           ;main.c: 336: } else {
 14732  0288  2AA6               	goto	i1l4569
 14733  0289                     i1l4567:
 14734                           
 14735                           ;main.c: 337: sprintf(str, "%02d:%02d:%02d", t.h,t.m,t.s);
 14736  0289  3000               	movlw	low (STR_1| (0+32768))
 14737  028A  00A0               	movwf	sprintf@f
 14738  028B  3090               	movlw	high (STR_1| (0+32768))
 14739  028C  00A1               	movwf	sprintf@f+1
 14740  028D  0857               	movf	_t,w
 14741  028E  00B5               	movwf	??_menuLCD_ISR
 14742  028F  01B6               	clrf	??_menuLCD_ISR+1
 14743  0290  0835               	movf	??_menuLCD_ISR,w
 14744  0291  00A2               	movwf	?_sprintf+2
 14745  0292  0836               	movf	??_menuLCD_ISR+1,w
 14746  0293  00A3               	movwf	?_sprintf+3
 14747  0294  0858               	movf	_t+1,w
 14748  0295  00B7               	movwf	??_menuLCD_ISR+2
 14749  0296  01B8               	clrf	??_menuLCD_ISR+3
 14750  0297  0837               	movf	??_menuLCD_ISR+2,w
 14751  0298  00A4               	movwf	?_sprintf+4
 14752  0299  0838               	movf	??_menuLCD_ISR+3,w
 14753  029A  00A5               	movwf	?_sprintf+5
 14754  029B  0859               	movf	_t+2,w
 14755  029C  00B9               	movwf	??_menuLCD_ISR+4
 14756  029D  01BA               	clrf	??_menuLCD_ISR+5
 14757  029E  0839               	movf	??_menuLCD_ISR+4,w
 14758  029F  00A6               	movwf	?_sprintf+6
 14759  02A0  083A               	movf	??_menuLCD_ISR+5,w
 14760  02A1  00A7               	movwf	?_sprintf+7
 14761  02A2  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 14762  02A3  3184  2438  3182   	fcall	_sprintf
 14763  02A6                     i1l4569:
 14764                           
 14765                           ;main.c: 338: };main.c: 339: LCDcmd(0x80);
 14766  02A6  3080               	movlw	128
 14767  02A7  3197  27B3  3182   	fcall	_LCDcmd
 14768  02AA                     i1l4571:
 14769                           
 14770                           ;main.c: 340: LCDstr(str);
 14771  02AA  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 14772  02AB  3188  2086  3182   	fcall	_LCDstr
 14773  02AE                     i1l4573:
 14774                           
 14775                           ;main.c: 343: if(ALAF == 'A'){
 14776  02AE  3041               	movlw	65
 14777  02AF  0020               	movlb	0	; select bank0
 14778  02B0  0665               	xorwf	_ALAF,w
 14779  02B1  1D03               	btfss	3,2
 14780  02B2  2AB4               	goto	u387_21
 14781  02B3  2AB5               	goto	u387_20
 14782  02B4                     u387_21:
 14783  02B4  2B86               	goto	i1l4627
 14784  02B5                     u387_20:
 14785  02B5                     i1l4575:
 14786                           
 14787                           ;main.c: 344: LCDcmd(0x8F);
 14788  02B5  308F               	movlw	143
 14789  02B6  3197  27B3  3182   	fcall	_LCDcmd
 14790                           
 14791                           ;main.c: 345: LCDchar(ALAF);
 14792  02B9  0020               	movlb	0	; select bank0
 14793  02BA  0865               	movf	_ALAF,w
 14794  02BB  3197  27C1  3182   	fcall	_LCDchar
 14795  02BE                     i1l4577:
 14796                           
 14797                           ;main.c: 348: if(clkAlarm.trigger == 1){
 14798  02BE  0020               	movlb	0	; select bank0
 14799  02BF  0350               	decf	_clkAlarm+3,w
 14800  02C0  1D03               	btfss	3,2
 14801  02C1  2AC3               	goto	u388_21
 14802  02C2  2AC4               	goto	u388_20
 14803  02C3                     u388_21:
 14804  02C3  2ACD               	goto	i1l4581
 14805  02C4                     u388_20:
 14806  02C4                     i1l4579:
 14807                           
 14808                           ;main.c: 349: LCDcmd(0x8B);
 14809  02C4  308B               	movlw	139
 14810  02C5  3197  27B3  3182   	fcall	_LCDcmd
 14811                           
 14812                           ;main.c: 350: LCDchar('C');
 14813  02C8  3043               	movlw	67
 14814  02C9  3197  27C1  3182   	fcall	_LCDchar
 14815                           
 14816                           ;main.c: 351: } else{
 14817  02CC  2AD5               	goto	i1l4583
 14818  02CD                     i1l4581:
 14819                           
 14820                           ;main.c: 352: LCDcmd(0x8B);
 14821  02CD  308B               	movlw	139
 14822  02CE  3197  27B3  3182   	fcall	_LCDcmd
 14823                           
 14824                           ;main.c: 353: LCDchar(' ');
 14825  02D1  3020               	movlw	32
 14826  02D2  3197  27C1  3182   	fcall	_LCDchar
 14827  02D5                     i1l4583:
 14828                           
 14829                           ;main.c: 354: };main.c: 357: if(tempAlarm.trigger == 1){
 14830  02D5  0020               	movlb	0	; select bank0
 14831  02D6  0355               	decf	_tempAlarm+1,w
 14832  02D7  1D03               	btfss	3,2
 14833  02D8  2ADA               	goto	u389_21
 14834  02D9  2ADB               	goto	u389_20
 14835  02DA                     u389_21:
 14836  02DA  2AE4               	goto	i1l4587
 14837  02DB                     u389_20:
 14838  02DB                     i1l4585:
 14839                           
 14840                           ;main.c: 358: LCDcmd(0x8C);
 14841  02DB  308C               	movlw	140
 14842  02DC  3197  27B3  3182   	fcall	_LCDcmd
 14843                           
 14844                           ;main.c: 359: LCDchar('T');
 14845  02DF  3054               	movlw	84
 14846  02E0  3197  27C1  3182   	fcall	_LCDchar
 14847                           
 14848                           ;main.c: 360: } else{
 14849  02E3  2AEC               	goto	i1l4589
 14850  02E4                     i1l4587:
 14851                           
 14852                           ;main.c: 361: LCDcmd(0x8C);
 14853  02E4  308C               	movlw	140
 14854  02E5  3197  27B3  3182   	fcall	_LCDcmd
 14855                           
 14856                           ;main.c: 362: LCDchar(' ');
 14857  02E8  3020               	movlw	32
 14858  02E9  3197  27C1  3182   	fcall	_LCDchar
 14859  02EC                     i1l4589:
 14860                           
 14861                           ;main.c: 363: };main.c: 366: if(lumAlarm.trigger == 1){
 14862  02EC  0020               	movlb	0	; select bank0
 14863  02ED  0352               	decf	_lumAlarm+1,w
 14864  02EE  1D03               	btfss	3,2
 14865  02EF  2AF1               	goto	u390_21
 14866  02F0  2AF2               	goto	u390_20
 14867  02F1                     u390_21:
 14868  02F1  2AFB               	goto	i1l4593
 14869  02F2                     u390_20:
 14870  02F2                     i1l4591:
 14871                           
 14872                           ;main.c: 367: LCDcmd(0x8D);
 14873  02F2  308D               	movlw	141
 14874  02F3  3197  27B3  3182   	fcall	_LCDcmd
 14875                           
 14876                           ;main.c: 368: LCDchar('L');
 14877  02F6  304C               	movlw	76
 14878  02F7  3197  27C1  3182   	fcall	_LCDchar
 14879                           
 14880                           ;main.c: 369: } else{
 14881  02FA  2B03               	goto	i1l4595
 14882  02FB                     i1l4593:
 14883                           
 14884                           ;main.c: 370: LCDcmd(0x8D);
 14885  02FB  308D               	movlw	141
 14886  02FC  3197  27B3  3182   	fcall	_LCDcmd
 14887                           
 14888                           ;main.c: 371: LCDchar(' ');
 14889  02FF  3020               	movlw	32
 14890  0300  3197  27C1  3182   	fcall	_LCDchar
 14891  0303                     i1l4595:
 14892                           
 14893                           ;main.c: 372: };main.c: 373: if(clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigge
      +                          r){
 14894  0303  0020               	movlb	0	; select bank0
 14895  0304  0850               	movf	_clkAlarm+3,w
 14896  0305  1D03               	btfss	3,2
 14897  0306  2B08               	goto	u391_21
 14898  0307  2B09               	goto	u391_20
 14899  0308                     u391_21:
 14900  0308  2B13               	goto	i1l4601
 14901  0309                     u391_20:
 14902  0309                     i1l4597:
 14903  0309  0855               	movf	_tempAlarm+1,w
 14904  030A  1D03               	btfss	3,2
 14905  030B  2B0D               	goto	u392_21
 14906  030C  2B0E               	goto	u392_20
 14907  030D                     u392_21:
 14908  030D  2B13               	goto	i1l4601
 14909  030E                     u392_20:
 14910  030E                     i1l4599:
 14911  030E  0852               	movf	_lumAlarm+1,w
 14912  030F  1903               	btfsc	3,2
 14913  0310  2B12               	goto	u393_21
 14914  0311  2B13               	goto	u393_20
 14915  0312                     u393_21:
 14916  0312  2B8F               	goto	i1l1225
 14917  0313                     u393_20:
 14918  0313                     i1l4601:
 14919                           
 14920                           ;main.c: 374: if(alarmPWMStart.h == 0xff){
 14921  0313  0A67               	incf	_alarmPWMStart,w
 14922  0314  1D03               	btfss	3,2
 14923  0315  2B17               	goto	u394_21
 14924  0316  2B18               	goto	u394_20
 14925  0317                     u394_21:
 14926  0317  2B24               	goto	i1l1216
 14927  0318                     u394_20:
 14928  0318                     i1l4603:
 14929                           
 14930                           ;main.c: 375: alarmPWMStart.h = t.h;
 14931  0318  0857               	movf	_t,w
 14932  0319  00B5               	movwf	??_menuLCD_ISR
 14933  031A  0835               	movf	??_menuLCD_ISR,w
 14934  031B  00E7               	movwf	_alarmPWMStart
 14935                           
 14936                           ;main.c: 376: alarmPWMStart.m = t.m;
 14937  031C  0858               	movf	_t+1,w
 14938  031D  00B5               	movwf	??_menuLCD_ISR
 14939  031E  0835               	movf	??_menuLCD_ISR,w
 14940  031F  00E8               	movwf	_alarmPWMStart+1
 14941                           
 14942                           ;main.c: 377: alarmPWMStart.s = t.s;
 14943  0320  0859               	movf	_t+2,w
 14944  0321  00B5               	movwf	??_menuLCD_ISR
 14945  0322  0835               	movf	??_menuLCD_ISR,w
 14946  0323  00E9               	movwf	_alarmPWMStart+2
 14947  0324                     i1l1216:
 14948                           
 14949                           ;main.c: 378: };main.c: 379: struct Time diff = {0,0,0};
 14950  0324  0021               	movlb	1	; select bank1
 14951  0325  083D               	movf	menuLCD_ISR@F12828^(0+128),w
 14952  0326  0020               	movlb	0	; select bank0
 14953  0327  00CA               	movwf	menuLCD_ISR@diff
 14954  0328  0021               	movlb	1	; select bank1
 14955  0329  083E               	movf	(menuLCD_ISR@F12828+1)^(0+128),w
 14956  032A  0020               	movlb	0	; select bank0
 14957  032B  00CB               	movwf	menuLCD_ISR@diff+1
 14958  032C  0021               	movlb	1	; select bank1
 14959  032D  083F               	movf	(menuLCD_ISR@F12828+2)^(0+128),w
 14960  032E  0020               	movlb	0	; select bank0
 14961  032F  00CC               	movwf	menuLCD_ISR@diff+2
 14962  0330                     i1l4605:
 14963                           
 14964                           ;main.c: 380: differenceBetweenTimePeriod( t, alarmPWMStart, &diff);
 14965  0330  0857               	movf	_t,w
 14966  0331  00F0               	movwf	differenceBetweenTimePeriod@start
 14967  0332  0858               	movf	_t+1,w
 14968  0333  00F1               	movwf	differenceBetweenTimePeriod@start+1
 14969  0334  0859               	movf	_t+2,w
 14970  0335  00F2               	movwf	differenceBetweenTimePeriod@start+2
 14971  0336  0867               	movf	_alarmPWMStart,w
 14972  0337  00F3               	movwf	differenceBetweenTimePeriod@stop
 14973  0338  0868               	movf	_alarmPWMStart+1,w
 14974  0339  00F4               	movwf	differenceBetweenTimePeriod@stop+1
 14975  033A  0869               	movf	_alarmPWMStart+2,w
 14976  033B  00F5               	movwf	differenceBetweenTimePeriod@stop+2
 14977  033C  304A               	movlw	(low (menuLCD_ISR@diff| 0))& (0+255)
 14978  033D  00B5               	movwf	??_menuLCD_ISR
 14979  033E  0835               	movf	??_menuLCD_ISR,w
 14980  033F  00F6               	movwf	differenceBetweenTimePeriod@diff
 14981  0340  318A  2296  3182   	fcall	_differenceBetweenTimePeriod
 14982  0343                     i1l4607:
 14983                           
 14984                           ;main.c: 383: if(diff.s <= TALA){
 14985  0343  0020               	movlb	0	; select bank0
 14986  0344  084C               	movf	menuLCD_ISR@diff+2,w
 14987  0345  0266               	subwf	_TALA,w
 14988  0346  1C03               	skipc
 14989  0347  2B49               	goto	u395_21
 14990  0348  2B4A               	goto	u395_20
 14991  0349                     u395_21:
 14992  0349  2B74               	goto	i1l1219
 14993  034A                     u395_20:
 14994  034A                     i1l4609:
 14995                           
 14996                           ;main.c: 384: if(PWM6EN==0){
 14997  034A  0027               	movlb	7	; select bank7
 14998  034B  1B8E               	btfsc	14,7	;volatile
 14999  034C  2B4E               	goto	u396_21
 15000  034D  2B4F               	goto	u396_20
 15001  034E                     u396_21:
 15002  034E  2B55               	goto	i1l4613
 15003  034F                     u396_20:
 15004  034F                     i1l4611:
 15005                           
 15006                           ;main.c: 385: TMR2_StartTimer();
 15007  034F  3197  2781  3182   	fcall	_TMR2_StartTimer
 15008                           
 15009                           ;main.c: 386: PWM_Output_D4_Enable();
 15010  0352  3197  276F  3182   	fcall	_PWM_Output_D4_Enable
 15011  0355                     i1l4613:
 15012                           
 15013                           ;main.c: 387: };main.c: 388: if(dimingLed <= 1023){
 15014  0355  0020               	movlb	0	; select bank0
 15015  0356  085F               	movf	_dimingLed+1,w
 15016  0357  3A80               	xorlw	128
 15017  0358  00B5               	movwf	??_menuLCD_ISR
 15018  0359  3084               	movlw	132
 15019  035A  0235               	subwf	??_menuLCD_ISR,w
 15020  035B  1D03               	skipz
 15021  035C  2B5F               	goto	u397_25
 15022  035D  3000               	movlw	0
 15023  035E  025E               	subwf	_dimingLed,w
 15024  035F                     u397_25:
 15025  035F  1803               	skipnc
 15026  0360  2B62               	goto	u397_21
 15027  0361  2B63               	goto	u397_20
 15028  0362                     u397_21:
 15029  0362  2B69               	goto	i1l4617
 15030  0363                     u397_20:
 15031  0363                     i1l4615:
 15032                           
 15033                           ;main.c: 389: dimingLed += 200;
 15034  0363  30C8               	movlw	200
 15035  0364  0020               	movlb	0	; select bank0
 15036  0365  07DE               	addwf	_dimingLed,f
 15037  0366  3000               	movlw	0
 15038  0367  3DDF               	addwfc	_dimingLed+1,f
 15039                           
 15040                           ;main.c: 390: } else{
 15041  0368  2B6C               	goto	i1l4619
 15042  0369                     i1l4617:
 15043                           
 15044                           ;main.c: 391: dimingLed = 0;
 15045  0369  0020               	movlb	0	; select bank0
 15046  036A  01DE               	clrf	_dimingLed
 15047  036B  01DF               	clrf	_dimingLed+1
 15048  036C                     i1l4619:
 15049                           
 15050                           ;main.c: 392: };main.c: 393: PWM6_LoadDutyValue(dimingLed);
 15051  036C  085F               	movf	_dimingLed+1,w
 15052  036D  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 15053  036E  085E               	movf	_dimingLed,w
 15054  036F  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 15055  0370  3188  209A  3182   	fcall	i1_PWM6_LoadDutyValue
 15056                           
 15057                           ;main.c: 394: } else if(PWM6EN==1){
 15058  0373  2B8F               	goto	i1l1225
 15059  0374                     i1l1219:
 15060  0374  0027               	movlb	7	; select bank7
 15061  0375  1F8E               	btfss	14,7	;volatile
 15062  0376  2B78               	goto	u398_21
 15063  0377  2B79               	goto	u398_20
 15064  0378                     u398_21:
 15065  0378  2B8F               	goto	i1l1225
 15066  0379                     u398_20:
 15067  0379                     i1l4621:
 15068                           
 15069                           ;main.c: 395: PWM6_LoadDutyValue(0);
 15070  0379  3000               	movlw	0
 15071  037A  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 15072  037B  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 15073  037C  3188  209A  3182   	fcall	i1_PWM6_LoadDutyValue
 15074  037F                     i1l4623:
 15075                           
 15076                           ;main.c: 396: TMR2_StopTimer();
 15077  037F  3197  2785  3182   	fcall	i1_TMR2_StopTimer
 15078  0382                     i1l4625:
 15079                           
 15080                           ;main.c: 397: PWM_Output_D4_Disable();
 15081  0382  3197  2775  3182   	fcall	i1_PWM_Output_D4_Disable
 15082  0385  2B8F               	goto	i1l1225
 15083  0386                     i1l4627:
 15084                           
 15085                           ;main.c: 401: LCDcmd(0x8F);
 15086  0386  308F               	movlw	143
 15087  0387  3197  27B3  3182   	fcall	_LCDcmd
 15088                           
 15089                           ;main.c: 402: LCDchar(ALAF);
 15090  038A  0020               	movlb	0	; select bank0
 15091  038B  0865               	movf	_ALAF,w
 15092  038C  3197  27C1  3182   	fcall	_LCDchar
 15093  038F                     i1l1225:
 15094                           
 15095                           ;main.c: 403: };main.c: 405: LCDcmd(0xc0);
 15096  038F  30C0               	movlw	192
 15097  0390  3197  27B3  3182   	fcall	_LCDcmd
 15098  0393                     i1l4629:
 15099                           
 15100                           ;main.c: 406: char tt[4];;main.c: 407: if(editingTempAlarm){
 15101  0393  0020               	movlb	0	; select bank0
 15102  0394  0861               	movf	_editingTempAlarm,w
 15103  0395  1903               	btfsc	3,2
 15104  0396  2B98               	goto	u399_21
 15105  0397  2B99               	goto	u399_20
 15106  0398                     u399_21:
 15107  0398  2BA9               	goto	i1l4633
 15108  0399                     u399_20:
 15109  0399                     i1l4631:
 15110                           
 15111                           ;main.c: 408: sprintf(tt, "%02d C", tempAlarm.alarmTemp);
 15112  0399  300A               	movlw	low (STR_3| (0+32768))
 15113  039A  00A0               	movwf	sprintf@f
 15114  039B  3098               	movlw	high (STR_3| (0+32768))
 15115  039C  00A1               	movwf	sprintf@f+1
 15116  039D  0854               	movf	_tempAlarm,w
 15117  039E  00B5               	movwf	??_menuLCD_ISR
 15118  039F  01B6               	clrf	??_menuLCD_ISR+1
 15119  03A0  0835               	movf	??_menuLCD_ISR,w
 15120  03A1  00A2               	movwf	?_sprintf+2
 15121  03A2  0836               	movf	??_menuLCD_ISR+1,w
 15122  03A3  00A3               	movwf	?_sprintf+3
 15123  03A4  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 15124  03A5  3184  2438  3182   	fcall	_sprintf
 15125                           
 15126                           ;main.c: 409: } else{
 15127  03A8  2BB8               	goto	i1l4635
 15128  03A9                     i1l4633:
 15129                           
 15130                           ;main.c: 410: sprintf(tt, "%02d C", temp);
 15131  03A9  300A               	movlw	low (STR_3| (0+32768))
 15132  03AA  00A0               	movwf	sprintf@f
 15133  03AB  3098               	movlw	high (STR_3| (0+32768))
 15134  03AC  00A1               	movwf	sprintf@f+1
 15135  03AD  0863               	movf	_temp,w
 15136  03AE  00B5               	movwf	??_menuLCD_ISR
 15137  03AF  01B6               	clrf	??_menuLCD_ISR+1
 15138  03B0  0835               	movf	??_menuLCD_ISR,w
 15139  03B1  00A2               	movwf	?_sprintf+2
 15140  03B2  0836               	movf	??_menuLCD_ISR+1,w
 15141  03B3  00A3               	movwf	?_sprintf+3
 15142  03B4  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 15143  03B5  3184  2438  3182   	fcall	_sprintf
 15144  03B8                     i1l4635:
 15145                           
 15146                           ;main.c: 411: };main.c: 412: LCDstr(tt);
 15147  03B8  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 15148  03B9  3188  2086  3182   	fcall	_LCDstr
 15149  03BC                     i1l4637:
 15150                           
 15151                           ;main.c: 414: LCDcmd(0xcd);
 15152  03BC  30CD               	movlw	205
 15153  03BD  3197  27B3  3182   	fcall	_LCDcmd
 15154  03C0                     i1l4639:
 15155                           
 15156                           ;main.c: 415: char l[3];;main.c: 417: if(editingLumAlarm){
 15157  03C0  0020               	movlb	0	; select bank0
 15158  03C1  0860               	movf	_editingLumAlarm,w
 15159  03C2  1903               	btfsc	3,2
 15160  03C3  2BC5               	goto	u400_21
 15161  03C4  2BC6               	goto	u400_20
 15162  03C5                     u400_21:
 15163  03C5  2BD6               	goto	i1l4643
 15164  03C6                     u400_20:
 15165  03C6                     i1l4641:
 15166                           
 15167                           ;main.c: 418: sprintf(l, "L %d", lumAlarm.alarmLum);
 15168  03C6  3011               	movlw	low (STR_5| (0+32768))
 15169  03C7  00A0               	movwf	sprintf@f
 15170  03C8  3098               	movlw	high (STR_5| (0+32768))
 15171  03C9  00A1               	movwf	sprintf@f+1
 15172  03CA  0851               	movf	_lumAlarm,w
 15173  03CB  00B5               	movwf	??_menuLCD_ISR
 15174  03CC  01B6               	clrf	??_menuLCD_ISR+1
 15175  03CD  0835               	movf	??_menuLCD_ISR,w
 15176  03CE  00A2               	movwf	?_sprintf+2
 15177  03CF  0836               	movf	??_menuLCD_ISR+1,w
 15178  03D0  00A3               	movwf	?_sprintf+3
 15179  03D1  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 15180  03D2  3184  2438  3182   	fcall	_sprintf
 15181                           
 15182                           ;main.c: 419: } else{
 15183  03D5  2BE5               	goto	i1l4645
 15184  03D6                     i1l4643:
 15185                           
 15186                           ;main.c: 420: sprintf(l, "L %d", lumLevel);
 15187  03D6  3011               	movlw	low (STR_5| (0+32768))
 15188  03D7  00A0               	movwf	sprintf@f
 15189  03D8  3098               	movlw	high (STR_5| (0+32768))
 15190  03D9  00A1               	movwf	sprintf@f+1
 15191  03DA  0862               	movf	_lumLevel,w
 15192  03DB  00B5               	movwf	??_menuLCD_ISR
 15193  03DC  01B6               	clrf	??_menuLCD_ISR+1
 15194  03DD  0835               	movf	??_menuLCD_ISR,w
 15195  03DE  00A2               	movwf	?_sprintf+2
 15196  03DF  0836               	movf	??_menuLCD_ISR+1,w
 15197  03E0  00A3               	movwf	?_sprintf+3
 15198  03E1  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 15199  03E2  3184  2438  3182   	fcall	_sprintf
 15200  03E5                     i1l4645:
 15201                           
 15202                           ;main.c: 421: };main.c: 422: LCDstr(l);
 15203  03E5  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 15204  03E6  3188  2086  3182   	fcall	_LCDstr
 15205  03E9                     i1l4647:
 15206                           
 15207                           ;main.c: 424: if(mode == 1){
 15208  03E9  0020               	movlb	0	; select bank0
 15209  03EA  035A               	decf	_mode,w
 15210  03EB  045B               	iorwf	_mode+1,w
 15211  03EC  1D03               	btfss	3,2
 15212  03ED  2BEF               	goto	u401_21
 15213  03EE  2BF0               	goto	u401_20
 15214  03EF                     u401_21:
 15215  03EF  2C14               	goto	i1l4661
 15216  03F0                     u401_20:
 15217  03F0                     i1l4649:
 15218                           
 15219                           ;main.c: 425: if(editingClockAlarm == 1){
 15220  03F0  035C               	decf	_editingClockAlarm,w
 15221  03F1  045D               	iorwf	_editingClockAlarm+1,w
 15222  03F2  1D03               	btfss	3,2
 15223  03F3  2BF5               	goto	u402_21
 15224  03F4  2BF6               	goto	u402_20
 15225  03F5                     u402_21:
 15226  03F5  2BFB               	goto	i1l4653
 15227  03F6                     u402_20:
 15228  03F6                     i1l4651:
 15229                           
 15230                           ;main.c: 426: LCDcmd(0x81);
 15231  03F6  3081               	movlw	129
 15232  03F7  3197  27B3  3182   	fcall	_LCDcmd
 15233                           
 15234                           ;main.c: 427: } else if(editingClockAlarm == 2){
 15235  03FA  2C37               	goto	i1l1242
 15236  03FB                     i1l4653:
 15237  03FB  3002               	movlw	2
 15238  03FC  065C               	xorwf	_editingClockAlarm,w
 15239  03FD  045D               	iorwf	_editingClockAlarm+1,w
 15240  03FE  1D03               	btfss	3,2
 15241  03FF  2C01               	goto	u403_21
 15242  0400  2C02               	goto	u403_20
 15243  0401                     u403_21:
 15244  0401  2C07               	goto	i1l4657
 15245  0402                     u403_20:
 15246  0402                     i1l4655:
 15247                           
 15248                           ;main.c: 428: LCDcmd(0x84);
 15249  0402  3084               	movlw	132
 15250  0403  3197  27B3  3182   	fcall	_LCDcmd
 15251                           
 15252                           ;main.c: 429: } else if(editingClockAlarm == 3){
 15253  0406  2C37               	goto	i1l1242
 15254  0407                     i1l4657:
 15255  0407  3003               	movlw	3
 15256  0408  065C               	xorwf	_editingClockAlarm,w
 15257  0409  045D               	iorwf	_editingClockAlarm+1,w
 15258  040A  1D03               	btfss	3,2
 15259  040B  2C0D               	goto	u404_21
 15260  040C  2C0E               	goto	u404_20
 15261  040D                     u404_21:
 15262  040D  2C13               	goto	i1l1232
 15263  040E                     u404_20:
 15264  040E                     i1l4659:
 15265                           
 15266                           ;main.c: 430: LCDcmd(0x87);
 15267  040E  3087               	movlw	135
 15268  040F  3197  27B3  3182   	fcall	_LCDcmd
 15269  0412  2C37               	goto	i1l1242
 15270  0413                     i1l1232:
 15271                           
 15272                           ;main.c: 431: };main.c: 432: } else if(mode == 2){
 15273  0413  2C37               	goto	i1l1242
 15274  0414                     i1l4661:
 15275  0414  3002               	movlw	2
 15276  0415  065A               	xorwf	_mode,w
 15277  0416  045B               	iorwf	_mode+1,w
 15278  0417  1D03               	btfss	3,2
 15279  0418  2C1A               	goto	u405_21
 15280  0419  2C1B               	goto	u405_20
 15281  041A                     u405_21:
 15282  041A  2C20               	goto	i1l4665
 15283  041B                     u405_20:
 15284  041B                     i1l4663:
 15285                           
 15286                           ;main.c: 433: LCDcmd(0xc1);
 15287  041B  30C1               	movlw	193
 15288  041C  3197  27B3  3182   	fcall	_LCDcmd
 15289                           
 15290                           ;main.c: 434: } else if(mode == 3){
 15291  041F  2C37               	goto	i1l1242
 15292  0420                     i1l4665:
 15293  0420  3003               	movlw	3
 15294  0421  065A               	xorwf	_mode,w
 15295  0422  045B               	iorwf	_mode+1,w
 15296  0423  1D03               	btfss	3,2
 15297  0424  2C26               	goto	u406_21
 15298  0425  2C27               	goto	u406_20
 15299  0426                     u406_21:
 15300  0426  2C2C               	goto	i1l4669
 15301  0427                     u406_20:
 15302  0427                     i1l4667:
 15303                           
 15304                           ;main.c: 435: LCDcmd(0xcf);
 15305  0427  30CF               	movlw	207
 15306  0428  3197  27B3  3182   	fcall	_LCDcmd
 15307                           
 15308                           ;main.c: 436: } else if(mode == 4){
 15309  042B  2C37               	goto	i1l1242
 15310  042C                     i1l4669:
 15311  042C  3004               	movlw	4
 15312  042D  065A               	xorwf	_mode,w
 15313  042E  045B               	iorwf	_mode+1,w
 15314  042F  1D03               	btfss	3,2
 15315  0430  2C32               	goto	u407_21
 15316  0431  2C33               	goto	u407_20
 15317  0432                     u407_21:
 15318  0432  2C37               	goto	i1l1242
 15319  0433                     u407_20:
 15320  0433                     i1l4671:
 15321                           
 15322                           ;main.c: 437: LCDcmd(0x8f);
 15323  0433  308F               	movlw	143
 15324  0434  3197  27B3  3182   	fcall	_LCDcmd
 15325  0437                     i1l1242:
 15326  0437  0008               	return
 15327  0438                     __end_of_menuLCD_ISR:
 15328                           
 15329                           	psect	text42
 15330  1785                     __ptext42:	
 15331 ;; *************** function i1_TMR2_StopTimer *****************
 15332 ;; Defined at:
 15333 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 15334 ;; Parameters:    Size  Location     Type
 15335 ;;		None
 15336 ;; Auto vars:     Size  Location     Type
 15337 ;;		None
 15338 ;; Return value:  Size  Location     Type
 15339 ;;                  1    wreg      void 
 15340 ;; Registers used:
 15341 ;;		status,2, status,0, pclath, cstack
 15342 ;; Tracked objects:
 15343 ;;		On entry : 0/0
 15344 ;;		On exit  : 0/0
 15345 ;;		Unchanged: 0/0
 15346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15351 ;;Total ram usage:        0 bytes
 15352 ;; Hardware stack levels used:    1
 15353 ;; Hardware stack levels required when called:    1
 15354 ;; This function calls:
 15355 ;;		i1_TMR2_Stop
 15356 ;; This function is called by:
 15357 ;;		_menuLCD_ISR
 15358 ;; This function uses a non-reentrant model
 15359 ;;
 15360                           
 15361                           
 15362                           ;psect for function i1_TMR2_StopTimer
 15363  1785                     i1_TMR2_StopTimer:
 15364  1785                     i1l4249:	
 15365                           ;incstack = 0
 15366                           ; Regs used in i1_TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 15367                           
 15368                           
 15369                           ;tmr2.c: 119: TMR2_Stop();
 15370  1785  3197  2778  3197   	fcall	i1_TMR2_Stop
 15371  1788                     i1l779:
 15372  1788  0008               	return
 15373  1789                     __end_ofi1_TMR2_StopTimer:
 15374                           
 15375                           	psect	text43
 15376  1778                     __ptext43:	
 15377 ;; *************** function i1_TMR2_Stop *****************
 15378 ;; Defined at:
 15379 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 15380 ;; Parameters:    Size  Location     Type
 15381 ;;		None
 15382 ;; Auto vars:     Size  Location     Type
 15383 ;;		None
 15384 ;; Return value:  Size  Location     Type
 15385 ;;                  1    wreg      void 
 15386 ;; Registers used:
 15387 ;;		None
 15388 ;; Tracked objects:
 15389 ;;		On entry : 0/0
 15390 ;;		On exit  : 0/0
 15391 ;;		Unchanged: 0/0
 15392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15397 ;;Total ram usage:        0 bytes
 15398 ;; Hardware stack levels used:    1
 15399 ;; This function calls:
 15400 ;;		Nothing
 15401 ;; This function is called by:
 15402 ;;		i1_TMR2_StopTimer
 15403 ;; This function uses a non-reentrant model
 15404 ;;
 15405                           
 15406                           
 15407                           ;psect for function i1_TMR2_Stop
 15408  1778                     i1_TMR2_Stop:
 15409  1778                     i1l3985:	
 15410                           ;incstack = 0
 15411                           ; Regs used in i1_TMR2_Stop: []
 15412                           
 15413                           
 15414                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 15415  1778  0025               	movlb	5	; select bank5
 15416  1779  138E               	bcf	14,7	;volatile
 15417  177A                     i1l776:
 15418  177A  0008               	return
 15419  177B                     __end_ofi1_TMR2_Stop:
 15420                           
 15421                           	psect	text44
 15422  1775                     __ptext44:	
 15423 ;; *************** function i1_PWM_Output_D4_Disable *****************
 15424 ;; Defined at:
 15425 ;;		line 246 in file "main.c"
 15426 ;; Parameters:    Size  Location     Type
 15427 ;;		None
 15428 ;; Auto vars:     Size  Location     Type
 15429 ;;		None
 15430 ;; Return value:  Size  Location     Type
 15431 ;;                  1    wreg      void 
 15432 ;; Registers used:
 15433 ;;		None
 15434 ;; Tracked objects:
 15435 ;;		On entry : 0/0
 15436 ;;		On exit  : 0/0
 15437 ;;		Unchanged: 0/0
 15438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15443 ;;Total ram usage:        0 bytes
 15444 ;; Hardware stack levels used:    1
 15445 ;; This function calls:
 15446 ;;		Nothing
 15447 ;; This function is called by:
 15448 ;;		_menuLCD_ISR
 15449 ;; This function uses a non-reentrant model
 15450 ;;
 15451                           
 15452                           
 15453                           ;psect for function i1_PWM_Output_D4_Disable
 15454  1775                     i1_PWM_Output_D4_Disable:
 15455  1775                     i1l4271:	
 15456                           ;incstack = 0
 15457                           ; Regs used in i1_PWM_Output_D4_Disable: []
 15458                           
 15459                           
 15460                           ;main.c: 247: PWM6EN = 0;
 15461  1775  0027               	movlb	7	; select bank7
 15462  1776  138E               	bcf	14,7	;volatile
 15463  1777                     i1l1165:
 15464  1777  0008               	return
 15465  1778                     __end_ofi1_PWM_Output_D4_Disable:
 15466                           
 15467                           	psect	text45
 15468  089A                     __ptext45:	
 15469 ;; *************** function i1_PWM6_LoadDutyValue *****************
 15470 ;; Defined at:
 15471 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 15472 ;; Parameters:    Size  Location     Type
 15473 ;;  dutyValue       2    0[COMMON] unsigned int 
 15474 ;; Auto vars:     Size  Location     Type
 15475 ;;		None
 15476 ;; Return value:  Size  Location     Type
 15477 ;;                  1    wreg      void 
 15478 ;; Registers used:
 15479 ;;		wreg, status,2, status,0
 15480 ;; Tracked objects:
 15481 ;;		On entry : 0/0
 15482 ;;		On exit  : 0/0
 15483 ;;		Unchanged: 0/0
 15484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15487 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15488 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15489 ;;Total ram usage:        4 bytes
 15490 ;; Hardware stack levels used:    1
 15491 ;; This function calls:
 15492 ;;		Nothing
 15493 ;; This function is called by:
 15494 ;;		_menuLCD_ISR
 15495 ;; This function uses a non-reentrant model
 15496 ;;
 15497                           
 15498                           
 15499                           ;psect for function i1_PWM6_LoadDutyValue
 15500  089A                     i1_PWM6_LoadDutyValue:
 15501  089A                     i1l4247:	
 15502                           ;incstack = 0
 15503                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 15504                           
 15505                           
 15506                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 15507  089A  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 15508  089B  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 15509  089C  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 15510  089D  00F2               	movwf	??i1_PWM6_LoadDutyValue
 15511  089E  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 15512  089F  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 15513  08A0  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 15514  08A1  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 15515  08A2  0872               	movf	??i1_PWM6_LoadDutyValue,w
 15516  08A3  0027               	movlb	7	; select bank7
 15517  08A4  008D               	movwf	13	;volatile
 15518                           
 15519                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 15520  08A5  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 15521  08A6  3903               	andlw	3
 15522  08A7  00F2               	movwf	??i1_PWM6_LoadDutyValue
 15523  08A8  3005               	movlw	5
 15524  08A9                     u353_25:
 15525  08A9  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 15526  08AA  3EFF               	addlw	-1
 15527  08AB  1D03               	skipz
 15528  08AC  28A9               	goto	u353_25
 15529  08AD  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 15530  08AE  008C               	movwf	12	;volatile
 15531  08AF                     i1l734:
 15532  08AF  0008               	return
 15533  08B0                     __end_ofi1_PWM6_LoadDutyValue:
 15534                           
 15535                           	psect	text46
 15536  0438                     __ptext46:	
 15537 ;; *************** function _sprintf *****************
 15538 ;; Defined at:
 15539 ;;		line 505 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
 15540 ;; Parameters:    Size  Location     Type
 15541 ;;  sp              1    wreg     PTR unsigned char 
 15542 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 15543 ;;  f               2    0[BANK0 ] PTR const unsigned char 
 15544 ;;		 -> STR_6(5), STR_5(5), STR_4(7), STR_3(7), 
 15545 ;;		 -> STR_2(15), STR_1(15), 
 15546 ;; Auto vars:     Size  Location     Type
 15547 ;;  sp              1   20[BANK0 ] PTR unsigned char 
 15548 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 15549 ;;  tmpval          4    0        struct .
 15550 ;;  width           2   17[BANK0 ] int 
 15551 ;;  val             2   14[BANK0 ] unsigned int 
 15552 ;;  cp              2    0        PTR const unsigned char 
 15553 ;;  len             2    0        unsigned int 
 15554 ;;  c               1   19[BANK0 ] unsigned char 
 15555 ;;  flag            1   16[BANK0 ] unsigned char 
 15556 ;;  prec            1   13[BANK0 ] char 
 15557 ;;  ap              1   12[BANK0 ] PTR void [1]
 15558 ;;		 -> ?_sprintf(2), 
 15559 ;; Return value:  Size  Location     Type
 15560 ;;                  2    0[BANK0 ] int 
 15561 ;; Registers used:
 15562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15563 ;; Tracked objects:
 15564 ;;		On entry : 0/0
 15565 ;;		On exit  : 0/0
 15566 ;;		Unchanged: 0/0
 15567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15568 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15569 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15570 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15571 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15572 ;;Total ram usage:       21 bytes
 15573 ;; Hardware stack levels used:    1
 15574 ;; Hardware stack levels required when called:    1
 15575 ;; This function calls:
 15576 ;;		___lwdiv
 15577 ;;		___lwmod
 15578 ;;		___wmul
 15579 ;;		_isdigit
 15580 ;; This function is called by:
 15581 ;;		_menuLCD_ISR
 15582 ;; This function uses a non-reentrant model
 15583 ;;
 15584                           
 15585                           
 15586                           ;psect for function _sprintf
 15587  0438                     _sprintf:
 15588                           
 15589                           ;incstack = 0
 15590                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15591                           ;sprintf@sp stored from wreg
 15592  0438  0020               	movlb	0	; select bank0
 15593  0439  00B4               	movwf	sprintf@sp
 15594  043A                     i1l4115:
 15595                           
 15596                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 15597  043A  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 15598  043B  00A8               	movwf	??_sprintf
 15599  043C  0828               	movf	??_sprintf,w
 15600  043D  00AC               	movwf	sprintf@ap
 15601                           
 15602                           ;doprnt.c: 553: while((c = *f++)) {
 15603  043E  2DBC               	goto	i1l4219
 15604  043F                     i1l4117:
 15605                           
 15606                           ;doprnt.c: 555: if(c != '%')
 15607  043F  3025               	movlw	37
 15608  0440  0633               	xorwf	sprintf@c,w
 15609  0441  1903               	btfsc	3,2
 15610  0442  2C44               	goto	u329_21
 15611  0443  2C45               	goto	u329_20
 15612  0444                     u329_21:
 15613  0444  2C51               	goto	i1l4123
 15614  0445                     u329_20:
 15615  0445                     i1l4119:
 15616                           
 15617                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 15618  0445  0833               	movf	sprintf@c,w
 15619  0446  00A8               	movwf	??_sprintf
 15620  0447  0834               	movf	sprintf@sp,w
 15621  0448  0086               	movwf	6
 15622  0449  0187               	clrf	7
 15623  044A  0828               	movf	??_sprintf,w
 15624  044B  0081               	movwf	1
 15625  044C                     i1l4121:
 15626  044C  3001               	movlw	1
 15627  044D  00A8               	movwf	??_sprintf
 15628  044E  0828               	movf	??_sprintf,w
 15629  044F  07B4               	addwf	sprintf@sp,f
 15630                           
 15631                           ;doprnt.c: 559: continue;
 15632  0450  2DBC               	goto	i1l4219
 15633  0451                     i1l4123:
 15634                           
 15635                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 15636  0451  01B1               	clrf	sprintf@width
 15637  0452  01B2               	clrf	sprintf@width+1
 15638                           
 15639                           ;doprnt.c: 565: flag = 0;
 15640  0453  01B0               	clrf	sprintf@flag
 15641  0454  2C5A               	goto	i1l4129
 15642  0455                     i1l1537:	
 15643                           ;doprnt.c: 596: case '0':
 15644                           
 15645                           
 15646                           ;doprnt.c: 597: flag |= 0x04;
 15647  0455  1530               	bsf	sprintf@flag,2
 15648  0456                     i1l4125:
 15649                           
 15650                           ;doprnt.c: 598: f++;
 15651  0456  3001               	movlw	1
 15652  0457  07A0               	addwf	sprintf@f,f
 15653  0458  3000               	movlw	0
 15654  0459  3DA1               	addwfc	sprintf@f+1,f
 15655  045A                     i1l4129:	
 15656                           ;doprnt.c: 599: continue;
 15657                           
 15658  045A  0820               	movf	sprintf@f,w
 15659  045B  0084               	movwf	4
 15660  045C  0821               	movf	sprintf@f+1,w
 15661  045D  0085               	movwf	5
 15662  045E  0800               	movf	0,w	;code access
 15663                           
 15664                           ; Switch size 1, requested type "simple"
 15665                           ; Number of cases is 1, Range of values is 48 to 48
 15666                           ; switch strategies available:
 15667                           ; Name         Instructions Cycles
 15668                           ; simple_byte            4     3 (average)
 15669                           ; direct_byte           11     9 (fixed)
 15670                           ; jumptable            263     9 (fixed)
 15671                           ;	Chosen strategy is simple_byte
 15672  045F  3A30               	xorlw	48	; case 48
 15673  0460  1903               	skipnz
 15674  0461  2C55               	goto	i1l1537
 15675  0462  2C63               	goto	i1l4131
 15676  0463                     i1l4131:
 15677                           
 15678                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 15679  0463  0820               	movf	sprintf@f,w
 15680  0464  0084               	movwf	4
 15681  0465  0821               	movf	sprintf@f+1,w
 15682  0466  0085               	movwf	5
 15683  0467  0800               	movf	0,w	;code access
 15684  0468  3188  2062  3184   	fcall	_isdigit
 15685  046B  1C03               	btfss	3,0
 15686  046C  2C6E               	goto	u330_21
 15687  046D  2C6F               	goto	u330_20
 15688  046E                     u330_21:
 15689  046E  2CA2               	goto	i1l4145
 15690  046F                     u330_20:
 15691  046F                     i1l4133:
 15692                           
 15693                           ;doprnt.c: 615: width = 0;
 15694  046F  0020               	movlb	0	; select bank0
 15695  0470  01B1               	clrf	sprintf@width
 15696  0471  01B2               	clrf	sprintf@width+1
 15697  0472                     i1l4135:
 15698                           
 15699                           ;doprnt.c: 617: width *= 10;
 15700  0472  300A               	movlw	10
 15701  0473  00F0               	movwf	___wmul@multiplier
 15702  0474  3000               	movlw	0
 15703  0475  00F1               	movwf	___wmul@multiplier+1
 15704  0476  0020               	movlb	0	; select bank0
 15705  0477  0832               	movf	sprintf@width+1,w
 15706  0478  00F3               	movwf	___wmul@multiplicand+1
 15707  0479  0831               	movf	sprintf@width,w
 15708  047A  00F2               	movwf	___wmul@multiplicand
 15709  047B  3189  215D  3184   	fcall	___wmul
 15710  047E  0871               	movf	?___wmul+1,w
 15711  047F  0020               	movlb	0	; select bank0
 15712  0480  00B2               	movwf	sprintf@width+1
 15713  0481  0870               	movf	?___wmul,w
 15714  0482  00B1               	movwf	sprintf@width
 15715  0483                     i1l4137:
 15716                           
 15717                           ;doprnt.c: 618: width += *f++ - '0';
 15718  0483  0820               	movf	sprintf@f,w
 15719  0484  0084               	movwf	4
 15720  0485  0821               	movf	sprintf@f+1,w
 15721  0486  0085               	movwf	5
 15722  0487  0800               	movf	0,w	;code access
 15723  0488  3ED0               	addlw	208
 15724  0489  00A8               	movwf	??_sprintf
 15725  048A  30FF               	movlw	255
 15726  048B  1803               	skipnc
 15727  048C  3000               	movlw	0
 15728  048D  00A9               	movwf	??_sprintf+1
 15729  048E  0828               	movf	??_sprintf,w
 15730  048F  07B1               	addwf	sprintf@width,f
 15731  0490  0829               	movf	??_sprintf+1,w
 15732  0491  3DB2               	addwfc	sprintf@width+1,f
 15733  0492                     i1l4139:
 15734  0492  3001               	movlw	1
 15735  0493  07A0               	addwf	sprintf@f,f
 15736  0494  3000               	movlw	0
 15737  0495  3DA1               	addwfc	sprintf@f+1,f
 15738  0496                     i1l4141:
 15739                           
 15740                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 15741  0496  0820               	movf	sprintf@f,w
 15742  0497  0084               	movwf	4
 15743  0498  0821               	movf	sprintf@f+1,w
 15744  0499  0085               	movwf	5
 15745  049A  0800               	movf	0,w	;code access
 15746  049B  3188  2062  3184   	fcall	_isdigit
 15747  049E  1803               	btfsc	3,0
 15748  049F  2CA1               	goto	u331_21
 15749  04A0  2CA2               	goto	u331_20
 15750  04A1                     u331_21:
 15751  04A1  2C72               	goto	i1l4135
 15752  04A2                     u331_20:
 15753  04A2                     i1l4145:
 15754  04A2  0020               	movlb	0	; select bank0
 15755  04A3  0821               	movf	sprintf@f+1,w
 15756  04A4  00A9               	movwf	??_sprintf+1
 15757  04A5  0820               	movf	sprintf@f,w
 15758  04A6  00A8               	movwf	??_sprintf
 15759  04A7  0AA0               	incf	sprintf@f,f
 15760  04A8  1903               	skipnz
 15761  04A9  0AA1               	incf	sprintf@f+1,f
 15762  04AA  0828               	movf	??_sprintf,w
 15763  04AB  0084               	movwf	4
 15764  04AC  0829               	movf	??_sprintf+1,w
 15765  04AD  0085               	movwf	5
 15766  04AE  0800               	movf	0,w	;code access
 15767  04AF  00B3               	movwf	sprintf@c
 15768                           
 15769                           ; Switch size 1, requested type "simple"
 15770                           ; Number of cases is 3, Range of values is 0 to 105
 15771                           ; switch strategies available:
 15772                           ; Name         Instructions Cycles
 15773                           ; simple_byte           10     6 (average)
 15774                           ; direct_byte          218     6 (fixed)
 15775                           ; jumptable            260     6 (fixed)
 15776                           ;	Chosen strategy is simple_byte
 15777  04B0  3A00               	xorlw	0	; case 0
 15778  04B1  1903               	skipnz
 15779  04B2  2DD0               	goto	i1l4221
 15780  04B3  3A64               	xorlw	100	; case 100
 15781  04B4  1903               	skipnz
 15782  04B5  2CBA               	goto	i1l4147
 15783  04B6  3A0D               	xorlw	13	; case 105
 15784  04B7  1903               	skipnz
 15785  04B8  2CBA               	goto	i1l4147
 15786  04B9  2DBC               	goto	i1l4219
 15787  04BA                     i1l4147:
 15788                           
 15789                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 15790  04BA  082C               	movf	sprintf@ap,w
 15791  04BB  0086               	movwf	6
 15792  04BC  0187               	clrf	7
 15793  04BD  3F40               	moviw [0]fsr1
 15794  04BE  00AE               	movwf	sprintf@val
 15795  04BF  3F41               	moviw [1]fsr1
 15796  04C0  00AF               	movwf	sprintf@val+1
 15797  04C1                     i1l4149:
 15798  04C1  3002               	movlw	2
 15799  04C2  00A8               	movwf	??_sprintf
 15800  04C3  0828               	movf	??_sprintf,w
 15801  04C4  07AC               	addwf	sprintf@ap,f
 15802  04C5                     i1l4151:
 15803                           
 15804                           ;doprnt.c: 1287: if((int)val < 0) {
 15805  04C5  1FAF               	btfss	sprintf@val+1,7
 15806  04C6  2CC8               	goto	u332_21
 15807  04C7  2CC9               	goto	u332_20
 15808  04C8                     u332_21:
 15809  04C8  2CD2               	goto	i1l4157
 15810  04C9                     u332_20:
 15811  04C9                     i1l4153:
 15812                           
 15813                           ;doprnt.c: 1288: flag |= 0x03;
 15814  04C9  3003               	movlw	3
 15815  04CA  00A8               	movwf	??_sprintf
 15816  04CB  0828               	movf	??_sprintf,w
 15817  04CC  04B0               	iorwf	sprintf@flag,f
 15818  04CD                     i1l4155:
 15819                           
 15820                           ;doprnt.c: 1289: val = -val;
 15821  04CD  09AE               	comf	sprintf@val,f
 15822  04CE  09AF               	comf	sprintf@val+1,f
 15823  04CF  0AAE               	incf	sprintf@val,f
 15824  04D0  1903               	skipnz
 15825  04D1  0AAF               	incf	sprintf@val+1,f
 15826  04D2                     i1l4157:
 15827                           
 15828                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 15829  04D2  01B3               	clrf	sprintf@c
 15830  04D3  0AB3               	incf	sprintf@c,f
 15831  04D4                     i1l4163:
 15832                           
 15833                           ;doprnt.c: 1332: if(val < dpowers[c])
 15834  04D4  0833               	movf	sprintf@c,w
 15835  04D5  00A8               	movwf	??_sprintf
 15836  04D6  01A9               	clrf	??_sprintf+1
 15837  04D7  35A8               	lslf	??_sprintf,f
 15838  04D8  0DA9               	rlf	??_sprintf+1,f
 15839  04D9  3000               	movlw	low (_dpowers| (0+32768))
 15840  04DA  0728               	addwf	??_sprintf,w
 15841  04DB  0084               	movwf	4
 15842  04DC  3098               	movlw	high (_dpowers| (0+32768))
 15843  04DD  3D29               	addwfc	??_sprintf+1,w
 15844  04DE  0085               	movwf	5
 15845  04DF  3F00               	moviw [0]fsr0
 15846  04E0  00AA               	movwf	??_sprintf+2
 15847  04E1  3F01               	moviw [1]fsr0
 15848  04E2  00AB               	movwf	??_sprintf+3
 15849  04E3  082B               	movf	??_sprintf+3,w
 15850  04E4  022F               	subwf	sprintf@val+1,w
 15851  04E5  1D03               	skipz
 15852  04E6  2CE9               	goto	u333_25
 15853  04E7  082A               	movf	??_sprintf+2,w
 15854  04E8  022E               	subwf	sprintf@val,w
 15855  04E9                     u333_25:
 15856  04E9  1803               	skipnc
 15857  04EA  2CEC               	goto	u333_21
 15858  04EB  2CED               	goto	u333_20
 15859  04EC                     u333_21:
 15860  04EC  2CEE               	goto	i1l4167
 15861  04ED                     u333_20:
 15862  04ED  2CF8               	goto	i1l4169
 15863  04EE                     i1l4167:
 15864  04EE  3001               	movlw	1
 15865  04EF  00A8               	movwf	??_sprintf
 15866  04F0  0828               	movf	??_sprintf,w
 15867  04F1  07B3               	addwf	sprintf@c,f
 15868  04F2  3005               	movlw	5
 15869  04F3  0633               	xorwf	sprintf@c,w
 15870  04F4  1D03               	btfss	3,2
 15871  04F5  2CF7               	goto	u334_21
 15872  04F6  2CF8               	goto	u334_20
 15873  04F7                     u334_21:
 15874  04F7  2CD4               	goto	i1l4163
 15875  04F8                     u334_20:
 15876  04F8                     i1l4169:
 15877                           
 15878                           ;doprnt.c: 1371: if(width && flag & 0x03)
 15879  04F8  0831               	movf	sprintf@width,w
 15880  04F9  0432               	iorwf	sprintf@width+1,w
 15881  04FA  1903               	btfsc	3,2
 15882  04FB  2CFD               	goto	u335_21
 15883  04FC  2CFE               	goto	u335_20
 15884  04FD                     u335_21:
 15885  04FD  2D08               	goto	i1l1555
 15886  04FE                     u335_20:
 15887  04FE                     i1l4171:
 15888  04FE  0830               	movf	sprintf@flag,w
 15889  04FF  3903               	andlw	3
 15890  0500  1903               	btfsc	3,2
 15891  0501  2D03               	goto	u336_21
 15892  0502  2D04               	goto	u336_20
 15893  0503                     u336_21:
 15894  0503  2D08               	goto	i1l1555
 15895  0504                     u336_20:
 15896  0504                     i1l4173:
 15897                           
 15898                           ;doprnt.c: 1372: width--;
 15899  0504  30FF               	movlw	255
 15900  0505  07B1               	addwf	sprintf@width,f
 15901  0506  30FF               	movlw	255
 15902  0507  3DB2               	addwfc	sprintf@width+1,f
 15903  0508                     i1l1555:
 15904                           
 15905                           ;doprnt.c: 1407: if(width > c)
 15906  0508  0832               	movf	sprintf@width+1,w
 15907  0509  3A80               	xorlw	128
 15908  050A  3C80               	sublw	128
 15909  050B  1D03               	skipz
 15910  050C  2D0F               	goto	u337_25
 15911  050D  0831               	movf	sprintf@width,w
 15912  050E  0233               	subwf	sprintf@c,w
 15913  050F                     u337_25:
 15914  050F  1803               	skipnc
 15915  0510  2D12               	goto	u337_21
 15916  0511  2D13               	goto	u337_20
 15917  0512                     u337_21:
 15918  0512  2D1C               	goto	i1l4177
 15919  0513                     u337_20:
 15920  0513                     i1l4175:
 15921                           
 15922                           ;doprnt.c: 1408: width -= c;
 15923  0513  0020               	movlb	0	; select bank0
 15924  0514  0833               	movf	sprintf@c,w
 15925  0515  00A8               	movwf	??_sprintf
 15926  0516  01A9               	clrf	??_sprintf+1
 15927  0517  0828               	movf	??_sprintf,w
 15928  0518  02B1               	subwf	sprintf@width,f
 15929  0519  0829               	movf	??_sprintf+1,w
 15930  051A  3BB2               	subwfb	sprintf@width+1,f
 15931  051B  2D1F               	goto	i1l4179
 15932  051C                     i1l4177:
 15933                           
 15934                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 15935  051C  0020               	movlb	0	; select bank0
 15936  051D  01B1               	clrf	sprintf@width
 15937  051E  01B2               	clrf	sprintf@width+1
 15938  051F                     i1l4179:
 15939                           
 15940                           ;doprnt.c: 1413: if(flag & 0x04) {
 15941  051F  1D30               	btfss	sprintf@flag,2
 15942  0520  2D22               	goto	u338_21
 15943  0521  2D23               	goto	u338_20
 15944  0522                     u338_21:
 15945  0522  2D50               	goto	i1l4195
 15946  0523                     u338_20:
 15947  0523                     i1l4181:
 15948                           
 15949                           ;doprnt.c: 1418: if(flag & 0x03)
 15950  0523  0830               	movf	sprintf@flag,w
 15951  0524  3903               	andlw	3
 15952  0525  1903               	btfsc	3,2
 15953  0526  2D28               	goto	u339_21
 15954  0527  2D29               	goto	u339_20
 15955  0528                     u339_21:
 15956  0528  2D34               	goto	i1l4187
 15957  0529                     u339_20:
 15958  0529                     i1l4183:
 15959                           
 15960                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 15961  0529  302D               	movlw	45
 15962  052A  00A8               	movwf	??_sprintf
 15963  052B  0834               	movf	sprintf@sp,w
 15964  052C  0086               	movwf	6
 15965  052D  0187               	clrf	7
 15966  052E  0828               	movf	??_sprintf,w
 15967  052F  0081               	movwf	1
 15968  0530                     i1l4185:
 15969  0530  3001               	movlw	1
 15970  0531  00A8               	movwf	??_sprintf
 15971  0532  0828               	movf	??_sprintf,w
 15972  0533  07B4               	addwf	sprintf@sp,f
 15973  0534                     i1l4187:
 15974                           
 15975                           ;doprnt.c: 1441: if(width)
 15976  0534  0831               	movf	sprintf@width,w
 15977  0535  0432               	iorwf	sprintf@width+1,w
 15978  0536  1903               	btfsc	3,2
 15979  0537  2D39               	goto	u340_21
 15980  0538  2D3A               	goto	u340_20
 15981  0539                     u340_21:
 15982  0539  2D7C               	goto	i1l4209
 15983  053A                     u340_20:
 15984  053A                     i1l4189:
 15985                           
 15986                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 15987  053A  3030               	movlw	48
 15988  053B  00A8               	movwf	??_sprintf
 15989  053C  0834               	movf	sprintf@sp,w
 15990  053D  0086               	movwf	6
 15991  053E  0187               	clrf	7
 15992  053F  0828               	movf	??_sprintf,w
 15993  0540  0081               	movwf	1
 15994  0541                     i1l4191:
 15995  0541  3001               	movlw	1
 15996  0542  00A8               	movwf	??_sprintf
 15997  0543  0828               	movf	??_sprintf,w
 15998  0544  07B4               	addwf	sprintf@sp,f
 15999  0545                     i1l4193:
 16000                           
 16001                           ;doprnt.c: 1444: while(--width);
 16002  0545  30FF               	movlw	255
 16003  0546  07B1               	addwf	sprintf@width,f
 16004  0547  30FF               	movlw	255
 16005  0548  3DB2               	addwfc	sprintf@width+1,f
 16006  0549  0831               	movf	sprintf@width,w
 16007  054A  0432               	iorwf	sprintf@width+1,w
 16008  054B  1D03               	btfss	3,2
 16009  054C  2D4E               	goto	u341_21
 16010  054D  2D4F               	goto	u341_20
 16011  054E                     u341_21:
 16012  054E  2D3A               	goto	i1l4189
 16013  054F                     u341_20:
 16014  054F  2D7C               	goto	i1l4209
 16015  0550                     i1l4195:
 16016                           
 16017                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 16018  0550  0831               	movf	sprintf@width,w
 16019  0551  0432               	iorwf	sprintf@width+1,w
 16020  0552  1903               	btfsc	3,2
 16021  0553  2D55               	goto	u342_21
 16022  0554  2D56               	goto	u342_20
 16023  0555                     u342_21:
 16024  0555  2D6B               	goto	i1l4203
 16025  0556                     u342_20:
 16026  0556                     i1l4197:
 16027                           
 16028                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 16029  0556  3020               	movlw	32
 16030  0557  00A8               	movwf	??_sprintf
 16031  0558  0834               	movf	sprintf@sp,w
 16032  0559  0086               	movwf	6
 16033  055A  0187               	clrf	7
 16034  055B  0828               	movf	??_sprintf,w
 16035  055C  0081               	movwf	1
 16036  055D                     i1l4199:
 16037  055D  3001               	movlw	1
 16038  055E  00A8               	movwf	??_sprintf
 16039  055F  0828               	movf	??_sprintf,w
 16040  0560  07B4               	addwf	sprintf@sp,f
 16041  0561                     i1l4201:
 16042                           
 16043                           ;doprnt.c: 1457: while(--width);
 16044  0561  30FF               	movlw	255
 16045  0562  07B1               	addwf	sprintf@width,f
 16046  0563  30FF               	movlw	255
 16047  0564  3DB2               	addwfc	sprintf@width+1,f
 16048  0565  0831               	movf	sprintf@width,w
 16049  0566  0432               	iorwf	sprintf@width+1,w
 16050  0567  1D03               	btfss	3,2
 16051  0568  2D6A               	goto	u343_21
 16052  0569  2D6B               	goto	u343_20
 16053  056A                     u343_21:
 16054  056A  2D56               	goto	i1l4197
 16055  056B                     u343_20:
 16056  056B                     i1l4203:
 16057                           
 16058                           ;doprnt.c: 1464: if(flag & 0x03)
 16059  056B  0830               	movf	sprintf@flag,w
 16060  056C  3903               	andlw	3
 16061  056D  1903               	btfsc	3,2
 16062  056E  2D70               	goto	u344_21
 16063  056F  2D71               	goto	u344_20
 16064  0570                     u344_21:
 16065  0570  2D7C               	goto	i1l4209
 16066  0571                     u344_20:
 16067  0571                     i1l4205:
 16068                           
 16069                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 16070  0571  302D               	movlw	45
 16071  0572  00A8               	movwf	??_sprintf
 16072  0573  0834               	movf	sprintf@sp,w
 16073  0574  0086               	movwf	6
 16074  0575  0187               	clrf	7
 16075  0576  0828               	movf	??_sprintf,w
 16076  0577  0081               	movwf	1
 16077  0578                     i1l4207:
 16078  0578  3001               	movlw	1
 16079  0579  00A8               	movwf	??_sprintf
 16080  057A  0828               	movf	??_sprintf,w
 16081  057B  07B4               	addwf	sprintf@sp,f
 16082  057C                     i1l4209:
 16083                           
 16084                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 16085  057C  0833               	movf	sprintf@c,w
 16086  057D  00A8               	movwf	??_sprintf
 16087  057E  0828               	movf	??_sprintf,w
 16088  057F  00AD               	movwf	sprintf@prec
 16089                           
 16090                           ;doprnt.c: 1500: while(prec--) {
 16091  0580  2DB3               	goto	i1l4217
 16092  0581                     i1l4211:
 16093                           
 16094                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 16095  0581  300A               	movlw	10
 16096  0582  00F8               	movwf	___lwmod@divisor
 16097  0583  3000               	movlw	0
 16098  0584  00F9               	movwf	___lwmod@divisor+1
 16099  0585  082D               	movf	sprintf@prec,w
 16100  0586  00A8               	movwf	??_sprintf
 16101  0587  01A9               	clrf	??_sprintf+1
 16102  0588  35A8               	lslf	??_sprintf,f
 16103  0589  0DA9               	rlf	??_sprintf+1,f
 16104  058A  3000               	movlw	low (_dpowers| (0+32768))
 16105  058B  0728               	addwf	??_sprintf,w
 16106  058C  0084               	movwf	4
 16107  058D  3098               	movlw	high (_dpowers| (0+32768))
 16108  058E  3D29               	addwfc	??_sprintf+1,w
 16109  058F  0085               	movwf	5
 16110  0590  3F00               	moviw [0]fsr0
 16111  0591  00F0               	movwf	___lwdiv@divisor
 16112  0592  3F01               	moviw [1]fsr0
 16113  0593  00F1               	movwf	___lwdiv@divisor+1
 16114  0594  082F               	movf	sprintf@val+1,w
 16115  0595  00F3               	movwf	___lwdiv@dividend+1
 16116  0596  082E               	movf	sprintf@val,w
 16117  0597  00F2               	movwf	___lwdiv@dividend
 16118  0598  318B  2337  3184   	fcall	___lwdiv
 16119  059B  0871               	movf	?___lwdiv+1,w
 16120  059C  00FB               	movwf	___lwmod@dividend+1
 16121  059D  0870               	movf	?___lwdiv,w
 16122  059E  00FA               	movwf	___lwmod@dividend
 16123  059F  318A  22CA  3184   	fcall	___lwmod
 16124  05A2  0878               	movf	?___lwmod,w
 16125  05A3  3E30               	addlw	48
 16126  05A4  0020               	movlb	0	; select bank0
 16127  05A5  00AA               	movwf	??_sprintf+2
 16128  05A6  082A               	movf	??_sprintf+2,w
 16129  05A7  00B3               	movwf	sprintf@c
 16130  05A8                     i1l4213:
 16131                           
 16132                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 16133  05A8  0833               	movf	sprintf@c,w
 16134  05A9  00A8               	movwf	??_sprintf
 16135  05AA  0834               	movf	sprintf@sp,w
 16136  05AB  0086               	movwf	6
 16137  05AC  0187               	clrf	7
 16138  05AD  0828               	movf	??_sprintf,w
 16139  05AE  0081               	movwf	1
 16140  05AF                     i1l4215:
 16141  05AF  3001               	movlw	1
 16142  05B0  00A8               	movwf	??_sprintf
 16143  05B1  0828               	movf	??_sprintf,w
 16144  05B2  07B4               	addwf	sprintf@sp,f
 16145  05B3                     i1l4217:
 16146  05B3  30FF               	movlw	255
 16147  05B4  00A8               	movwf	??_sprintf
 16148  05B5  0828               	movf	??_sprintf,w
 16149  05B6  07AD               	addwf	sprintf@prec,f
 16150  05B7  0A2D               	incf	sprintf@prec,w
 16151  05B8  1D03               	btfss	3,2
 16152  05B9  2DBB               	goto	u345_21
 16153  05BA  2DBC               	goto	u345_20
 16154  05BB                     u345_21:
 16155  05BB  2D81               	goto	i1l4211
 16156  05BC                     u345_20:
 16157  05BC                     i1l4219:
 16158  05BC  0821               	movf	sprintf@f+1,w
 16159  05BD  00A9               	movwf	??_sprintf+1
 16160  05BE  0820               	movf	sprintf@f,w
 16161  05BF  00A8               	movwf	??_sprintf
 16162  05C0  0AA0               	incf	sprintf@f,f
 16163  05C1  1903               	skipnz
 16164  05C2  0AA1               	incf	sprintf@f+1,f
 16165  05C3  0828               	movf	??_sprintf,w
 16166  05C4  0084               	movwf	4
 16167  05C5  0829               	movf	??_sprintf+1,w
 16168  05C6  0085               	movwf	5
 16169  05C7  0800               	movf	0,w	;code access
 16170  05C8  00AA               	movwf	??_sprintf+2
 16171  05C9  082A               	movf	??_sprintf+2,w
 16172  05CA  00B3               	movwf	sprintf@c
 16173  05CB  0833               	movf	sprintf@c,w
 16174  05CC  1D03               	btfss	3,2
 16175  05CD  2DCF               	goto	u346_21
 16176  05CE  2DD0               	goto	u346_20
 16177  05CF                     u346_21:
 16178  05CF  2C3F               	goto	i1l4117
 16179  05D0                     u346_20:
 16180  05D0                     i1l4221:
 16181                           
 16182                           ;doprnt.c: 1564: *sp = 0;
 16183  05D0  0834               	movf	sprintf@sp,w
 16184  05D1  0086               	movwf	6
 16185  05D2  0187               	clrf	7
 16186  05D3  0181               	clrf	1
 16187  05D4                     i1l1572:
 16188  05D4  0008               	return
 16189  05D5                     __end_of_sprintf:
 16190                           
 16191                           	psect	text47
 16192  0862                     __ptext47:	
 16193 ;; *************** function _isdigit *****************
 16194 ;; Defined at:
 16195 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 16196 ;; Parameters:    Size  Location     Type
 16197 ;;  c               1    wreg     unsigned char 
 16198 ;; Auto vars:     Size  Location     Type
 16199 ;;  c               1    1[COMMON] unsigned char 
 16200 ;; Return value:  Size  Location     Type
 16201 ;;		None               void
 16202 ;; Registers used:
 16203 ;;		wreg, status,2, status,0
 16204 ;; Tracked objects:
 16205 ;;		On entry : 0/0
 16206 ;;		On exit  : 0/0
 16207 ;;		Unchanged: 0/0
 16208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16210 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16212 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16213 ;;Total ram usage:        2 bytes
 16214 ;; Hardware stack levels used:    1
 16215 ;; This function calls:
 16216 ;;		Nothing
 16217 ;; This function is called by:
 16218 ;;		_sprintf
 16219 ;; This function uses a non-reentrant model
 16220 ;;
 16221                           
 16222                           
 16223                           ;psect for function _isdigit
 16224  0862                     _isdigit:
 16225                           
 16226                           ;incstack = 0
 16227                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 16228                           ;isdigit@c stored from wreg
 16229  0862  00F1               	movwf	isdigit@c
 16230  0863                     i1l3911:
 16231  0863  01F0               	clrf	_isdigit$2957
 16232  0864                     i1l3913:
 16233  0864  303A               	movlw	58
 16234  0865  0271               	subwf	isdigit@c,w
 16235  0866  1803               	skipnc
 16236  0867  2869               	goto	u272_21
 16237  0868  286A               	goto	u272_20
 16238  0869                     u272_21:
 16239  0869  2872               	goto	i1l3919
 16240  086A                     u272_20:
 16241  086A                     i1l3915:
 16242  086A  3030               	movlw	48
 16243  086B  0271               	subwf	isdigit@c,w
 16244  086C  1C03               	skipc
 16245  086D  286F               	goto	u273_21
 16246  086E  2870               	goto	u273_20
 16247  086F                     u273_21:
 16248  086F  2872               	goto	i1l3919
 16249  0870                     u273_20:
 16250  0870                     i1l3917:
 16251  0870  01F0               	clrf	_isdigit$2957
 16252  0871  0AF0               	incf	_isdigit$2957,f
 16253  0872                     i1l3919:
 16254  0872  0C70               	rrf	_isdigit$2957,w
 16255  0873                     i1l2029:
 16256  0873  0008               	return
 16257  0874                     __end_of_isdigit:
 16258                           
 16259                           	psect	text48
 16260  095D                     __ptext48:	
 16261 ;; *************** function ___wmul *****************
 16262 ;; Defined at:
 16263 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 16264 ;; Parameters:    Size  Location     Type
 16265 ;;  multiplier      2    0[COMMON] unsigned int 
 16266 ;;  multiplicand    2    2[COMMON] unsigned int 
 16267 ;; Auto vars:     Size  Location     Type
 16268 ;;  product         2    4[COMMON] unsigned int 
 16269 ;; Return value:  Size  Location     Type
 16270 ;;                  2    0[COMMON] unsigned int 
 16271 ;; Registers used:
 16272 ;;		wreg, status,2, status,0
 16273 ;; Tracked objects:
 16274 ;;		On entry : 0/0
 16275 ;;		On exit  : 0/0
 16276 ;;		Unchanged: 0/0
 16277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16278 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16279 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16281 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16282 ;;Total ram usage:        6 bytes
 16283 ;; Hardware stack levels used:    1
 16284 ;; This function calls:
 16285 ;;		Nothing
 16286 ;; This function is called by:
 16287 ;;		_monitoring_ISR
 16288 ;;		_sprintf
 16289 ;;		_map
 16290 ;; This function uses a non-reentrant model
 16291 ;;
 16292                           
 16293                           
 16294                           ;psect for function ___wmul
 16295  095D                     ___wmul:
 16296  095D                     i1l3923:	
 16297                           ;incstack = 0
 16298                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 16299                           
 16300  095D  01F4               	clrf	___wmul@product
 16301  095E  01F5               	clrf	___wmul@product+1
 16302  095F                     i1l3925:
 16303  095F  1C70               	btfss	___wmul@multiplier,0
 16304  0960  2962               	goto	u274_21
 16305  0961  2963               	goto	u274_20
 16306  0962                     u274_21:
 16307  0962  2967               	goto	i1l1576
 16308  0963                     u274_20:
 16309  0963                     i1l3927:
 16310  0963  0872               	movf	___wmul@multiplicand,w
 16311  0964  07F4               	addwf	___wmul@product,f
 16312  0965  0873               	movf	___wmul@multiplicand+1,w
 16313  0966  3DF5               	addwfc	___wmul@product+1,f
 16314  0967                     i1l1576:
 16315  0967  3001               	movlw	1
 16316  0968                     u275_25:
 16317  0968  35F2               	lslf	___wmul@multiplicand,f
 16318  0969  0DF3               	rlf	___wmul@multiplicand+1,f
 16319  096A  0B89               	decfsz	9,f
 16320  096B  2968               	goto	u275_25
 16321  096C                     i1l3929:
 16322  096C  3001               	movlw	1
 16323  096D                     u276_25:
 16324  096D  36F1               	lsrf	___wmul@multiplier+1,f
 16325  096E  0CF0               	rrf	___wmul@multiplier,f
 16326  096F  0B89               	decfsz	9,f
 16327  0970  296D               	goto	u276_25
 16328  0971                     i1l3931:
 16329  0971  0870               	movf	___wmul@multiplier,w
 16330  0972  0471               	iorwf	___wmul@multiplier+1,w
 16331  0973  1D03               	btfss	3,2
 16332  0974  2976               	goto	u277_21
 16333  0975  2977               	goto	u277_20
 16334  0976                     u277_21:
 16335  0976  295F               	goto	i1l3925
 16336  0977                     u277_20:
 16337  0977                     i1l3933:
 16338  0977  0875               	movf	___wmul@product+1,w
 16339  0978  00F1               	movwf	?___wmul+1
 16340  0979  0874               	movf	___wmul@product,w
 16341  097A  00F0               	movwf	?___wmul
 16342  097B                     i1l1578:
 16343  097B  0008               	return
 16344  097C                     __end_of___wmul:
 16345                           
 16346                           	psect	text49
 16347  0ACA                     __ptext49:	
 16348 ;; *************** function ___lwmod *****************
 16349 ;; Defined at:
 16350 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 16351 ;; Parameters:    Size  Location     Type
 16352 ;;  divisor         2    8[COMMON] unsigned int 
 16353 ;;  dividend        2   10[COMMON] unsigned int 
 16354 ;; Auto vars:     Size  Location     Type
 16355 ;;  counter         1   13[COMMON] unsigned char 
 16356 ;; Return value:  Size  Location     Type
 16357 ;;                  2    8[COMMON] unsigned int 
 16358 ;; Registers used:
 16359 ;;		wreg, status,2, status,0
 16360 ;; Tracked objects:
 16361 ;;		On entry : 0/0
 16362 ;;		On exit  : 0/0
 16363 ;;		Unchanged: 0/0
 16364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16365 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16367 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16368 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16369 ;;Total ram usage:        6 bytes
 16370 ;; Hardware stack levels used:    1
 16371 ;; This function calls:
 16372 ;;		Nothing
 16373 ;; This function is called by:
 16374 ;;		_sprintf
 16375 ;; This function uses a non-reentrant model
 16376 ;;
 16377                           
 16378                           
 16379                           ;psect for function ___lwmod
 16380  0ACA                     ___lwmod:
 16381  0ACA                     i1l3963:	
 16382                           ;incstack = 0
 16383                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 16384                           
 16385  0ACA  0878               	movf	___lwmod@divisor,w
 16386  0ACB  0479               	iorwf	___lwmod@divisor+1,w
 16387  0ACC  1903               	btfsc	3,2
 16388  0ACD  2ACF               	goto	u285_21
 16389  0ACE  2AD0               	goto	u285_20
 16390  0ACF                     u285_21:
 16391  0ACF  2AF9               	goto	i1l3981
 16392  0AD0                     u285_20:
 16393  0AD0                     i1l3965:
 16394  0AD0  01FD               	clrf	___lwmod@counter
 16395  0AD1  0AFD               	incf	___lwmod@counter,f
 16396  0AD2  2ADC               	goto	i1l3971
 16397  0AD3                     i1l3967:
 16398  0AD3  3001               	movlw	1
 16399  0AD4                     u286_25:
 16400  0AD4  35F8               	lslf	___lwmod@divisor,f
 16401  0AD5  0DF9               	rlf	___lwmod@divisor+1,f
 16402  0AD6  0B89               	decfsz	9,f
 16403  0AD7  2AD4               	goto	u286_25
 16404  0AD8                     i1l3969:
 16405  0AD8  3001               	movlw	1
 16406  0AD9  00FC               	movwf	??___lwmod
 16407  0ADA  087C               	movf	??___lwmod,w
 16408  0ADB  07FD               	addwf	___lwmod@counter,f
 16409  0ADC                     i1l3971:
 16410  0ADC  1FF9               	btfss	___lwmod@divisor+1,7
 16411  0ADD  2ADF               	goto	u287_21
 16412  0ADE  2AE0               	goto	u287_20
 16413  0ADF                     u287_21:
 16414  0ADF  2AD3               	goto	i1l3967
 16415  0AE0                     u287_20:
 16416  0AE0                     i1l3973:
 16417  0AE0  0879               	movf	___lwmod@divisor+1,w
 16418  0AE1  027B               	subwf	___lwmod@dividend+1,w
 16419  0AE2  1D03               	skipz
 16420  0AE3  2AE6               	goto	u288_25
 16421  0AE4  0878               	movf	___lwmod@divisor,w
 16422  0AE5  027A               	subwf	___lwmod@dividend,w
 16423  0AE6                     u288_25:
 16424  0AE6  1C03               	skipc
 16425  0AE7  2AE9               	goto	u288_21
 16426  0AE8  2AEA               	goto	u288_20
 16427  0AE9                     u288_21:
 16428  0AE9  2AEE               	goto	i1l3977
 16429  0AEA                     u288_20:
 16430  0AEA                     i1l3975:
 16431  0AEA  0878               	movf	___lwmod@divisor,w
 16432  0AEB  02FA               	subwf	___lwmod@dividend,f
 16433  0AEC  0879               	movf	___lwmod@divisor+1,w
 16434  0AED  3BFB               	subwfb	___lwmod@dividend+1,f
 16435  0AEE                     i1l3977:
 16436  0AEE  3001               	movlw	1
 16437  0AEF                     u289_25:
 16438  0AEF  36F9               	lsrf	___lwmod@divisor+1,f
 16439  0AF0  0CF8               	rrf	___lwmod@divisor,f
 16440  0AF1  0B89               	decfsz	9,f
 16441  0AF2  2AEF               	goto	u289_25
 16442  0AF3                     i1l3979:
 16443  0AF3  3001               	movlw	1
 16444  0AF4  02FD               	subwf	___lwmod@counter,f
 16445  0AF5  1D03               	btfss	3,2
 16446  0AF6  2AF8               	goto	u290_21
 16447  0AF7  2AF9               	goto	u290_20
 16448  0AF8                     u290_21:
 16449  0AF8  2AE0               	goto	i1l3973
 16450  0AF9                     u290_20:
 16451  0AF9                     i1l3981:
 16452  0AF9  087B               	movf	___lwmod@dividend+1,w
 16453  0AFA  00F9               	movwf	?___lwmod+1
 16454  0AFB  087A               	movf	___lwmod@dividend,w
 16455  0AFC  00F8               	movwf	?___lwmod
 16456  0AFD                     i1l1858:
 16457  0AFD  0008               	return
 16458  0AFE                     __end_of___lwmod:
 16459                           
 16460                           	psect	text50
 16461  0B37                     __ptext50:	
 16462 ;; *************** function ___lwdiv *****************
 16463 ;; Defined at:
 16464 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 16465 ;; Parameters:    Size  Location     Type
 16466 ;;  divisor         2    0[COMMON] unsigned int 
 16467 ;;  dividend        2    2[COMMON] unsigned int 
 16468 ;; Auto vars:     Size  Location     Type
 16469 ;;  quotient        2    5[COMMON] unsigned int 
 16470 ;;  counter         1    7[COMMON] unsigned char 
 16471 ;; Return value:  Size  Location     Type
 16472 ;;                  2    0[COMMON] unsigned int 
 16473 ;; Registers used:
 16474 ;;		wreg, status,2, status,0
 16475 ;; Tracked objects:
 16476 ;;		On entry : 0/0
 16477 ;;		On exit  : 0/0
 16478 ;;		Unchanged: 0/0
 16479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16480 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16481 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16482 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16483 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16484 ;;Total ram usage:        8 bytes
 16485 ;; Hardware stack levels used:    1
 16486 ;; This function calls:
 16487 ;;		Nothing
 16488 ;; This function is called by:
 16489 ;;		_sprintf
 16490 ;; This function uses a non-reentrant model
 16491 ;;
 16492                           
 16493                           
 16494                           ;psect for function ___lwdiv
 16495  0B37                     ___lwdiv:
 16496  0B37                     i1l3937:	
 16497                           ;incstack = 0
 16498                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 16499                           
 16500  0B37  01F5               	clrf	___lwdiv@quotient
 16501  0B38  01F6               	clrf	___lwdiv@quotient+1
 16502  0B39                     i1l3939:
 16503  0B39  0870               	movf	___lwdiv@divisor,w
 16504  0B3A  0471               	iorwf	___lwdiv@divisor+1,w
 16505  0B3B  1903               	btfsc	3,2
 16506  0B3C  2B3E               	goto	u278_21
 16507  0B3D  2B3F               	goto	u278_20
 16508  0B3E                     u278_21:
 16509  0B3E  2B6E               	goto	i1l3959
 16510  0B3F                     u278_20:
 16511  0B3F                     i1l3941:
 16512  0B3F  01F7               	clrf	___lwdiv@counter
 16513  0B40  0AF7               	incf	___lwdiv@counter,f
 16514  0B41  2B4B               	goto	i1l3947
 16515  0B42                     i1l3943:
 16516  0B42  3001               	movlw	1
 16517  0B43                     u279_25:
 16518  0B43  35F0               	lslf	___lwdiv@divisor,f
 16519  0B44  0DF1               	rlf	___lwdiv@divisor+1,f
 16520  0B45  0B89               	decfsz	9,f
 16521  0B46  2B43               	goto	u279_25
 16522  0B47                     i1l3945:
 16523  0B47  3001               	movlw	1
 16524  0B48  00F4               	movwf	??___lwdiv
 16525  0B49  0874               	movf	??___lwdiv,w
 16526  0B4A  07F7               	addwf	___lwdiv@counter,f
 16527  0B4B                     i1l3947:
 16528  0B4B  1FF1               	btfss	___lwdiv@divisor+1,7
 16529  0B4C  2B4E               	goto	u280_21
 16530  0B4D  2B4F               	goto	u280_20
 16531  0B4E                     u280_21:
 16532  0B4E  2B42               	goto	i1l3943
 16533  0B4F                     u280_20:
 16534  0B4F                     i1l3949:
 16535  0B4F  3001               	movlw	1
 16536  0B50                     u281_25:
 16537  0B50  35F5               	lslf	___lwdiv@quotient,f
 16538  0B51  0DF6               	rlf	___lwdiv@quotient+1,f
 16539  0B52  0B89               	decfsz	9,f
 16540  0B53  2B50               	goto	u281_25
 16541  0B54  0871               	movf	___lwdiv@divisor+1,w
 16542  0B55  0273               	subwf	___lwdiv@dividend+1,w
 16543  0B56  1D03               	skipz
 16544  0B57  2B5A               	goto	u282_25
 16545  0B58  0870               	movf	___lwdiv@divisor,w
 16546  0B59  0272               	subwf	___lwdiv@dividend,w
 16547  0B5A                     u282_25:
 16548  0B5A  1C03               	skipc
 16549  0B5B  2B5D               	goto	u282_21
 16550  0B5C  2B5E               	goto	u282_20
 16551  0B5D                     u282_21:
 16552  0B5D  2B63               	goto	i1l3955
 16553  0B5E                     u282_20:
 16554  0B5E                     i1l3951:
 16555  0B5E  0870               	movf	___lwdiv@divisor,w
 16556  0B5F  02F2               	subwf	___lwdiv@dividend,f
 16557  0B60  0871               	movf	___lwdiv@divisor+1,w
 16558  0B61  3BF3               	subwfb	___lwdiv@dividend+1,f
 16559  0B62                     i1l3953:
 16560  0B62  1475               	bsf	___lwdiv@quotient,0
 16561  0B63                     i1l3955:
 16562  0B63  3001               	movlw	1
 16563  0B64                     u283_25:
 16564  0B64  36F1               	lsrf	___lwdiv@divisor+1,f
 16565  0B65  0CF0               	rrf	___lwdiv@divisor,f
 16566  0B66  0B89               	decfsz	9,f
 16567  0B67  2B64               	goto	u283_25
 16568  0B68                     i1l3957:
 16569  0B68  3001               	movlw	1
 16570  0B69  02F7               	subwf	___lwdiv@counter,f
 16571  0B6A  1D03               	btfss	3,2
 16572  0B6B  2B6D               	goto	u284_21
 16573  0B6C  2B6E               	goto	u284_20
 16574  0B6D                     u284_21:
 16575  0B6D  2B4F               	goto	i1l3949
 16576  0B6E                     u284_20:
 16577  0B6E                     i1l3959:
 16578  0B6E  0876               	movf	___lwdiv@quotient+1,w
 16579  0B6F  00F1               	movwf	?___lwdiv+1
 16580  0B70  0875               	movf	___lwdiv@quotient,w
 16581  0B71  00F0               	movwf	?___lwdiv
 16582  0B72                     i1l1848:
 16583  0B72  0008               	return
 16584  0B73                     __end_of___lwdiv:
 16585                           
 16586                           	psect	text51
 16587  0A96                     __ptext51:	
 16588 ;; *************** function _differenceBetweenTimePeriod *****************
 16589 ;; Defined at:
 16590 ;;		line 226 in file "main.c"
 16591 ;; Parameters:    Size  Location     Type
 16592 ;;  start           3    0[COMMON] struct Time
 16593 ;;  stop            3    3[COMMON] struct Time
 16594 ;;  diff            1    6[COMMON] PTR struct Time
 16595 ;;		 -> menuLCD_ISR@diff(3), 
 16596 ;; Auto vars:     Size  Location     Type
 16597 ;;		None
 16598 ;; Return value:  Size  Location     Type
 16599 ;;                  1    wreg      void 
 16600 ;; Registers used:
 16601 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16602 ;; Tracked objects:
 16603 ;;		On entry : 0/0
 16604 ;;		On exit  : 0/0
 16605 ;;		Unchanged: 0/0
 16606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16607 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16609 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16610 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16611 ;;Total ram usage:        8 bytes
 16612 ;; Hardware stack levels used:    1
 16613 ;; This function calls:
 16614 ;;		Nothing
 16615 ;; This function is called by:
 16616 ;;		_menuLCD_ISR
 16617 ;; This function uses a non-reentrant model
 16618 ;;
 16619                           
 16620                           
 16621                           ;psect for function _differenceBetweenTimePeriod
 16622  0A96                     _differenceBetweenTimePeriod:
 16623  0A96                     i1l4099:	
 16624                           ;incstack = 0
 16625                           ; Regs used in _differenceBetweenTimePeriod: [wreg+fsr1l+fsr1h+status,2+status,0]
 16626                           
 16627                           
 16628                           ;main.c: 229: while (stop.s > start.s) {
 16629  0A96  2A9D               	goto	i1l4103
 16630  0A97                     i1l4101:
 16631                           
 16632                           ;main.c: 230: --start.m;
 16633  0A97  3001               	movlw	1
 16634  0A98  02F1               	subwf	differenceBetweenTimePeriod@start+1,f
 16635                           
 16636                           ;main.c: 231: start.s += 60;
 16637  0A99  303C               	movlw	60
 16638  0A9A  00F7               	movwf	??_differenceBetweenTimePeriod
 16639  0A9B  0877               	movf	??_differenceBetweenTimePeriod,w
 16640  0A9C  07F2               	addwf	differenceBetweenTimePeriod@start+2,f
 16641  0A9D                     i1l4103:
 16642  0A9D  0875               	movf	differenceBetweenTimePeriod@stop+2,w
 16643  0A9E  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 16644  0A9F  1C03               	skipc
 16645  0AA0  2AA2               	goto	u327_21
 16646  0AA1  2AA3               	goto	u327_20
 16647  0AA2                     u327_21:
 16648  0AA2  2A97               	goto	i1l4101
 16649  0AA3                     u327_20:
 16650  0AA3                     i1l4105:
 16651                           
 16652                           ;main.c: 232: };main.c: 233: diff->s = start.s - stop.s;
 16653  0AA3  0875               	movf	differenceBetweenTimePeriod@stop+2,w
 16654  0AA4  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 16655  0AA5  00F7               	movwf	??_differenceBetweenTimePeriod
 16656  0AA6  0876               	movf	differenceBetweenTimePeriod@diff,w
 16657  0AA7  3E02               	addlw	2
 16658  0AA8  0086               	movwf	6
 16659  0AA9  0187               	clrf	7
 16660  0AAA  0877               	movf	??_differenceBetweenTimePeriod,w
 16661  0AAB  0081               	movwf	1
 16662                           
 16663                           ;main.c: 234: while (stop.m > start.m) {
 16664  0AAC  2AB3               	goto	i1l4109
 16665  0AAD                     i1l4107:
 16666                           
 16667                           ;main.c: 235: --start.h;
 16668  0AAD  3001               	movlw	1
 16669  0AAE  02F0               	subwf	differenceBetweenTimePeriod@start,f
 16670                           
 16671                           ;main.c: 236: start.m += 60;
 16672  0AAF  303C               	movlw	60
 16673  0AB0  00F7               	movwf	??_differenceBetweenTimePeriod
 16674  0AB1  0877               	movf	??_differenceBetweenTimePeriod,w
 16675  0AB2  07F1               	addwf	differenceBetweenTimePeriod@start+1,f
 16676  0AB3                     i1l4109:
 16677  0AB3  0874               	movf	differenceBetweenTimePeriod@stop+1,w
 16678  0AB4  0271               	subwf	differenceBetweenTimePeriod@start+1,w
 16679  0AB5  1C03               	skipc
 16680  0AB6  2AB8               	goto	u328_21
 16681  0AB7  2AB9               	goto	u328_20
 16682  0AB8                     u328_21:
 16683  0AB8  2AAD               	goto	i1l4107
 16684  0AB9                     u328_20:
 16685  0AB9                     i1l4111:
 16686                           
 16687                           ;main.c: 237: };main.c: 238: diff->m = start.m - stop.m;
 16688  0AB9  0874               	movf	differenceBetweenTimePeriod@stop+1,w
 16689  0ABA  0271               	subwf	differenceBetweenTimePeriod@start+1,w
 16690  0ABB  00F7               	movwf	??_differenceBetweenTimePeriod
 16691  0ABC  0A76               	incf	differenceBetweenTimePeriod@diff,w
 16692  0ABD  0086               	movwf	6
 16693  0ABE  0187               	clrf	7
 16694  0ABF  0877               	movf	??_differenceBetweenTimePeriod,w
 16695  0AC0  0081               	movwf	1
 16696                           
 16697                           ;main.c: 239: diff->h = start.h - stop.h;
 16698  0AC1  0873               	movf	differenceBetweenTimePeriod@stop,w
 16699  0AC2  0270               	subwf	differenceBetweenTimePeriod@start,w
 16700  0AC3  00F7               	movwf	??_differenceBetweenTimePeriod
 16701  0AC4  0876               	movf	differenceBetweenTimePeriod@diff,w
 16702  0AC5  0086               	movwf	6
 16703  0AC6  0187               	clrf	7
 16704  0AC7  0877               	movf	??_differenceBetweenTimePeriod,w
 16705  0AC8  0081               	movwf	1
 16706  0AC9                     i1l1159:
 16707  0AC9  0008               	return
 16708  0ACA                     __end_of_differenceBetweenTimePeriod:
 16709                           
 16710                           	psect	text52
 16711  1781                     __ptext52:	
 16712 ;; *************** function _TMR2_StartTimer *****************
 16713 ;; Defined at:
 16714 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 16715 ;; Parameters:    Size  Location     Type
 16716 ;;		None
 16717 ;; Auto vars:     Size  Location     Type
 16718 ;;		None
 16719 ;; Return value:  Size  Location     Type
 16720 ;;                  1    wreg      void 
 16721 ;; Registers used:
 16722 ;;		status,2, status,0, pclath, cstack
 16723 ;; Tracked objects:
 16724 ;;		On entry : 0/0
 16725 ;;		On exit  : 0/0
 16726 ;;		Unchanged: 0/0
 16727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16732 ;;Total ram usage:        0 bytes
 16733 ;; Hardware stack levels used:    1
 16734 ;; Hardware stack levels required when called:    1
 16735 ;; This function calls:
 16736 ;;		_TMR2_Start
 16737 ;; This function is called by:
 16738 ;;		_menuLCD_ISR
 16739 ;; This function uses a non-reentrant model
 16740 ;;
 16741                           
 16742                           
 16743                           ;psect for function _TMR2_StartTimer
 16744  1781                     _TMR2_StartTimer:
 16745  1781                     i1l4037:	
 16746                           ;incstack = 0
 16747                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
 16748                           
 16749                           
 16750                           ;tmr2.c: 108: TMR2_Start();
 16751  1781  3197  2772  3197   	fcall	_TMR2_Start
 16752  1784                     i1l773:
 16753  1784  0008               	return
 16754  1785                     __end_of_TMR2_StartTimer:
 16755                           
 16756                           	psect	text53
 16757  1772                     __ptext53:	
 16758 ;; *************** function _TMR2_Start *****************
 16759 ;; Defined at:
 16760 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 16761 ;; Parameters:    Size  Location     Type
 16762 ;;		None
 16763 ;; Auto vars:     Size  Location     Type
 16764 ;;		None
 16765 ;; Return value:  Size  Location     Type
 16766 ;;                  1    wreg      void 
 16767 ;; Registers used:
 16768 ;;		None
 16769 ;; Tracked objects:
 16770 ;;		On entry : 0/0
 16771 ;;		On exit  : 0/0
 16772 ;;		Unchanged: 0/0
 16773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16778 ;;Total ram usage:        0 bytes
 16779 ;; Hardware stack levels used:    1
 16780 ;; This function calls:
 16781 ;;		Nothing
 16782 ;; This function is called by:
 16783 ;;		_TMR2_StartTimer
 16784 ;; This function uses a non-reentrant model
 16785 ;;
 16786                           
 16787                           
 16788                           ;psect for function _TMR2_Start
 16789  1772                     _TMR2_Start:
 16790  1772                     i1l3907:	
 16791                           ;incstack = 0
 16792                           ; Regs used in _TMR2_Start: []
 16793                           
 16794                           
 16795                           ;tmr2.c: 103: T2CONbits.TMR2ON = 1;
 16796  1772  0025               	movlb	5	; select bank5
 16797  1773  178E               	bsf	14,7	;volatile
 16798  1774                     i1l770:
 16799  1774  0008               	return
 16800  1775                     __end_of_TMR2_Start:
 16801                           
 16802                           	psect	text54
 16803  176F                     __ptext54:	
 16804 ;; *************** function _PWM_Output_D4_Enable *****************
 16805 ;; Defined at:
 16806 ;;		line 242 in file "main.c"
 16807 ;; Parameters:    Size  Location     Type
 16808 ;;		None
 16809 ;; Auto vars:     Size  Location     Type
 16810 ;;		None
 16811 ;; Return value:  Size  Location     Type
 16812 ;;                  1    wreg      void 
 16813 ;; Registers used:
 16814 ;;		None
 16815 ;; Tracked objects:
 16816 ;;		On entry : 0/0
 16817 ;;		On exit  : 0/0
 16818 ;;		Unchanged: 0/0
 16819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16824 ;;Total ram usage:        0 bytes
 16825 ;; Hardware stack levels used:    1
 16826 ;; This function calls:
 16827 ;;		Nothing
 16828 ;; This function is called by:
 16829 ;;		_menuLCD_ISR
 16830 ;; This function uses a non-reentrant model
 16831 ;;
 16832                           
 16833                           
 16834                           ;psect for function _PWM_Output_D4_Enable
 16835  176F                     _PWM_Output_D4_Enable:
 16836  176F                     i1l4113:	
 16837                           ;incstack = 0
 16838                           ; Regs used in _PWM_Output_D4_Enable: []
 16839                           
 16840                           
 16841                           ;main.c: 243: PWM6EN = 1;
 16842  176F  0027               	movlb	7	; select bank7
 16843  1770  178E               	bsf	14,7	;volatile
 16844  1771                     i1l1162:
 16845  1771  0008               	return
 16846  1772                     __end_of_PWM_Output_D4_Enable:
 16847                           
 16848                           	psect	text55
 16849  0886                     __ptext55:	
 16850 ;; *************** function _LCDstr *****************
 16851 ;; Defined at:
 16852 ;;		line 206 in file "main.c"
 16853 ;; Parameters:    Size  Location     Type
 16854 ;;  p               1    wreg     PTR unsigned char 
 16855 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 16856 ;; Auto vars:     Size  Location     Type
 16857 ;;  p               1   11[COMMON] PTR unsigned char 
 16858 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 16859 ;;  c               1   10[COMMON] unsigned char 
 16860 ;; Return value:  Size  Location     Type
 16861 ;;                  1    wreg      void 
 16862 ;; Registers used:
 16863 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16864 ;; Tracked objects:
 16865 ;;		On entry : 0/0
 16866 ;;		On exit  : 0/0
 16867 ;;		Unchanged: 0/0
 16868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16870 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16871 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16872 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16873 ;;Total ram usage:        3 bytes
 16874 ;; Hardware stack levels used:    1
 16875 ;; Hardware stack levels required when called:    3
 16876 ;; This function calls:
 16877 ;;		_LCDchar
 16878 ;; This function is called by:
 16879 ;;		_menuLCD_ISR
 16880 ;; This function uses a non-reentrant model
 16881 ;;
 16882                           
 16883                           
 16884                           ;psect for function _LCDstr
 16885  0886                     _LCDstr:
 16886                           
 16887                           ;incstack = 0
 16888                           ; Regs used in _LCDstr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16889                           ;LCDstr@p stored from wreg
 16890  0886  00FB               	movwf	LCDstr@p
 16891  0887                     i1l4093:
 16892                           
 16893                           ;main.c: 208: unsigned char c;;main.c: 210: while((c = *p++)) LCDchar(c);
 16894  0887  288C               	goto	i1l4097
 16895  0888                     i1l4095:
 16896  0888  087A               	movf	LCDstr@c,w
 16897  0889  3197  27C1  3188   	fcall	_LCDchar
 16898  088C                     i1l4097:
 16899  088C  087B               	movf	LCDstr@p,w
 16900  088D  0086               	movwf	6
 16901  088E  0187               	clrf	7
 16902  088F  0AFB               	incf	LCDstr@p,f
 16903  0890  0801               	movf	1,w
 16904  0891  00F9               	movwf	??_LCDstr
 16905  0892  0879               	movf	??_LCDstr,w
 16906  0893  00FA               	movwf	LCDstr@c
 16907  0894  087A               	movf	LCDstr@c,w
 16908  0895  1D03               	btfss	3,2
 16909  0896  2898               	goto	u326_21
 16910  0897  2899               	goto	u326_20
 16911  0898                     u326_21:
 16912  0898  2888               	goto	i1l4095
 16913  0899                     u326_20:
 16914  0899                     i1l1146:
 16915  0899  0008               	return
 16916  089A                     __end_of_LCDstr:
 16917                           
 16918                           	psect	text56
 16919  17C1                     __ptext56:	
 16920 ;; *************** function _LCDchar *****************
 16921 ;; Defined at:
 16922 ;;		line 201 in file "main.c"
 16923 ;; Parameters:    Size  Location     Type
 16924 ;;  c               1    wreg     unsigned char 
 16925 ;; Auto vars:     Size  Location     Type
 16926 ;;  c               1    8[COMMON] unsigned char 
 16927 ;; Return value:  Size  Location     Type
 16928 ;;                  1    wreg      void 
 16929 ;; Registers used:
 16930 ;;		wreg, status,2, status,0, pclath, cstack
 16931 ;; Tracked objects:
 16932 ;;		On entry : 0/0
 16933 ;;		On exit  : 0/0
 16934 ;;		Unchanged: 0/0
 16935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16937 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16939 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16940 ;;Total ram usage:        1 bytes
 16941 ;; Hardware stack levels used:    1
 16942 ;; Hardware stack levels required when called:    2
 16943 ;; This function calls:
 16944 ;;		i1_LCDsend2x4
 16945 ;; This function is called by:
 16946 ;;		_LCDstr
 16947 ;;		_menuLCD_ISR
 16948 ;; This function uses a non-reentrant model
 16949 ;;
 16950                           
 16951                           
 16952                           ;psect for function _LCDchar
 16953  17C1                     _LCDchar:
 16954                           
 16955                           ;incstack = 0
 16956                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 16957                           ;LCDchar@c stored from wreg
 16958  17C1  00F8               	movwf	LCDchar@c
 16959  17C2                     i1l3909:
 16960                           
 16961                           ;main.c: 203: LCDsend2x4(c, 0x01);
 16962  17C2  01F2               	clrf	i1LCDsend2x4@mode
 16963  17C3  0AF2               	incf	i1LCDsend2x4@mode,f
 16964  17C4  0878               	movf	LCDchar@c,w
 16965  17C5  318D  2578  3197   	fcall	i1_LCDsend2x4
 16966  17C8                     i1l1140:
 16967  17C8  0008               	return
 16968  17C9                     __end_of_LCDchar:
 16969                           
 16970                           	psect	text57
 16971  17B3                     __ptext57:	
 16972 ;; *************** function _LCDcmd *****************
 16973 ;; Defined at:
 16974 ;;		line 196 in file "main.c"
 16975 ;; Parameters:    Size  Location     Type
 16976 ;;  c               1    wreg     unsigned char 
 16977 ;; Auto vars:     Size  Location     Type
 16978 ;;  c               1    8[COMMON] unsigned char 
 16979 ;; Return value:  Size  Location     Type
 16980 ;;                  1    wreg      void 
 16981 ;; Registers used:
 16982 ;;		wreg, status,2, status,0, pclath, cstack
 16983 ;; Tracked objects:
 16984 ;;		On entry : 0/0
 16985 ;;		On exit  : 0/0
 16986 ;;		Unchanged: 0/0
 16987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16989 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16991 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16992 ;;Total ram usage:        1 bytes
 16993 ;; Hardware stack levels used:    1
 16994 ;; Hardware stack levels required when called:    2
 16995 ;; This function calls:
 16996 ;;		i1_LCDsend2x4
 16997 ;; This function is called by:
 16998 ;;		_menuLCD_ISR
 16999 ;; This function uses a non-reentrant model
 17000 ;;
 17001                           
 17002                           
 17003                           ;psect for function _LCDcmd
 17004  17B3                     _LCDcmd:
 17005                           
 17006                           ;incstack = 0
 17007                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 17008                           ;LCDcmd@c stored from wreg
 17009  17B3  00F8               	movwf	LCDcmd@c
 17010  17B4                     i1l4091:
 17011                           
 17012                           ;main.c: 198: LCDsend2x4(c, 0);
 17013  17B4  01F2               	clrf	i1LCDsend2x4@mode
 17014  17B5  0878               	movf	LCDcmd@c,w
 17015  17B6  318D  2578  3197   	fcall	i1_LCDsend2x4
 17016  17B9                     i1l1137:
 17017  17B9  0008               	return
 17018  17BA                     __end_of_LCDcmd:
 17019                           
 17020                           	psect	text58
 17021  0D78                     __ptext58:	
 17022 ;; *************** function i1_LCDsend2x4 *****************
 17023 ;; Defined at:
 17024 ;;		line 150 in file "main.c"
 17025 ;; Parameters:    Size  Location     Type
 17026 ;;  c               1    wreg     unsigned char 
 17027 ;;  mode            1    2[COMMON] unsigned char 
 17028 ;; Auto vars:     Size  Location     Type
 17029 ;;  c               1    5[COMMON] unsigned char 
 17030 ;;  lc              1    7[COMMON] unsigned char 
 17031 ;;  hc              1    6[COMMON] unsigned char 
 17032 ;; Return value:  Size  Location     Type
 17033 ;;                  1    wreg      void 
 17034 ;; Registers used:
 17035 ;;		wreg, status,2, status,0, pclath, cstack
 17036 ;; Tracked objects:
 17037 ;;		On entry : 0/0
 17038 ;;		On exit  : 0/0
 17039 ;;		Unchanged: 0/0
 17040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17041 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17042 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17043 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17044 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17045 ;;Total ram usage:        6 bytes
 17046 ;; Hardware stack levels used:    1
 17047 ;; Hardware stack levels required when called:    1
 17048 ;; This function calls:
 17049 ;;		i1_WriteI2C
 17050 ;; This function is called by:
 17051 ;;		_LCDcmd
 17052 ;;		_LCDchar
 17053 ;; This function uses a non-reentrant model
 17054 ;;
 17055                           
 17056                           
 17057                           ;psect for function i1_LCDsend2x4
 17058  0D78                     i1_LCDsend2x4:
 17059                           
 17060                           ;incstack = 0
 17061                           ; Regs used in i1_LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 17062                           ;i1LCDsend2x4@c stored from wreg
 17063  0D78  00F5               	movwf	i1LCDsend2x4@c
 17064  0D79                     i1l3861:
 17065                           
 17066                           ;main.c: 152: unsigned char hc;;main.c: 153: unsigned char lc;;main.c: 155: hc = c & 0xf
      +                          0;
 17067  0D79  0875               	movf	i1LCDsend2x4@c,w
 17068  0D7A  39F0               	andlw	240
 17069  0D7B  00F3               	movwf	??i1_LCDsend2x4
 17070  0D7C  0873               	movf	??i1_LCDsend2x4,w
 17071  0D7D  00F6               	movwf	i1LCDsend2x4@hc
 17072  0D7E                     i1l3863:
 17073                           
 17074                           ;main.c: 156: lc = (c << 4) & 0xf0;
 17075  0D7E  0875               	movf	i1LCDsend2x4@c,w
 17076  0D7F  00F3               	movwf	??i1_LCDsend2x4
 17077  0D80  3003               	movlw	3
 17078  0D81                     u257_25:
 17079  0D81  35F3               	lslf	??i1_LCDsend2x4,f
 17080  0D82  3EFF               	addlw	-1
 17081  0D83  1D03               	skipz
 17082  0D84  2D81               	goto	u257_25
 17083  0D85  3573               	lslf	??i1_LCDsend2x4,w
 17084  0D86  39F0               	andlw	240
 17085  0D87  00F4               	movwf	??i1_LCDsend2x4+1
 17086  0D88  0874               	movf	??i1_LCDsend2x4+1,w
 17087  0D89  00F7               	movwf	i1LCDsend2x4@lc
 17088  0D8A                     i1l3865:	
 17089                           ;main.c: 158: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17090                           
 17091  0D8A  0023               	movlb	3	; select bank3
 17092  0D8B  0C0F               	rrf	15,w	;volatile
 17093  0D8C  0C89               	rrf	9,f
 17094  0D8D  3901               	andlw	1
 17095  0D8E  00F3               	movwf	??i1_LCDsend2x4
 17096  0D8F  0811               	movf	17,w	;volatile
 17097  0D90  391F               	andlw	31
 17098  0D91  0473               	iorwf	??i1_LCDsend2x4,w
 17099  0D92  1D03               	btfss	3,2
 17100  0D93  2D95               	goto	u258_21
 17101  0D94  2D96               	goto	u258_20
 17102  0D95                     u258_21:
 17103  0D95  2D8A               	goto	i1l3865
 17104  0D96                     u258_20:
 17105  0D96                     i1l1100:
 17106                           
 17107                           ;main.c: 159: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 17108  0D96  1411               	bsf	17,0	;volatile
 17109  0D97                     i1l1101:
 17110  0D97  1811               	btfsc	17,0	;volatile
 17111  0D98  2D9A               	goto	u259_21
 17112  0D99  2D9B               	goto	u259_20
 17113  0D9A                     u259_21:
 17114  0D9A  2D97               	goto	i1l1101
 17115  0D9B                     u259_20:
 17116  0D9B                     i1l3867:
 17117  0D9B  0C0F               	rrf	15,w	;volatile
 17118  0D9C  0C89               	rrf	9,f
 17119  0D9D  3901               	andlw	1
 17120  0D9E  00F3               	movwf	??i1_LCDsend2x4
 17121  0D9F  0811               	movf	17,w	;volatile
 17122  0DA0  391F               	andlw	31
 17123  0DA1  0473               	iorwf	??i1_LCDsend2x4,w
 17124  0DA2  1D03               	btfss	3,2
 17125  0DA3  2DA5               	goto	u260_21
 17126  0DA4  2DA6               	goto	u260_20
 17127  0DA5                     u260_21:
 17128  0DA5  2D9B               	goto	i1l3867
 17129  0DA6                     u260_20:
 17130  0DA6                     i1l3869:
 17131                           
 17132                           ;main.c: 160: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17133  0DA6  304E               	movlw	78
 17134  0DA7  318B  23B2  318D   	fcall	i1_WriteI2C
 17135  0DAA                     i1l3871:
 17136  0DAA  0023               	movlb	3	; select bank3
 17137  0DAB  0C0F               	rrf	15,w	;volatile
 17138  0DAC  0C89               	rrf	9,f
 17139  0DAD  3901               	andlw	1
 17140  0DAE  00F3               	movwf	??i1_LCDsend2x4
 17141  0DAF  0811               	movf	17,w	;volatile
 17142  0DB0  391F               	andlw	31
 17143  0DB1  0473               	iorwf	??i1_LCDsend2x4,w
 17144  0DB2  1D03               	btfss	3,2
 17145  0DB3  2DB5               	goto	u261_21
 17146  0DB4  2DB6               	goto	u261_20
 17147  0DB5                     u261_21:
 17148  0DB5  2DAA               	goto	i1l3871
 17149  0DB6                     u261_20:
 17150  0DB6                     i1l3873:
 17151                           
 17152                           ;main.c: 161: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 17153  0DB6  0876               	movf	i1LCDsend2x4@hc,w
 17154  0DB7  0472               	iorwf	i1LCDsend2x4@mode,w
 17155  0DB8  3808               	iorlw	8
 17156  0DB9  318B  23B2  318D   	fcall	i1_WriteI2C
 17157  0DBC                     i1l3875:
 17158  0DBC  0023               	movlb	3	; select bank3
 17159  0DBD  0C0F               	rrf	15,w	;volatile
 17160  0DBE  0C89               	rrf	9,f
 17161  0DBF  3901               	andlw	1
 17162  0DC0  00F3               	movwf	??i1_LCDsend2x4
 17163  0DC1  0811               	movf	17,w	;volatile
 17164  0DC2  391F               	andlw	31
 17165  0DC3  0473               	iorwf	??i1_LCDsend2x4,w
 17166  0DC4  1D03               	btfss	3,2
 17167  0DC5  2DC7               	goto	u262_21
 17168  0DC6  2DC8               	goto	u262_20
 17169  0DC7                     u262_21:
 17170  0DC7  2DBC               	goto	i1l3875
 17171  0DC8                     u262_20:
 17172  0DC8                     i1l3877:
 17173                           
 17174                           ;main.c: 162: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 17175  0DC8  0876               	movf	i1LCDsend2x4@hc,w
 17176  0DC9  0472               	iorwf	i1LCDsend2x4@mode,w
 17177  0DCA  380C               	iorlw	12
 17178  0DCB  318B  23B2  318D   	fcall	i1_WriteI2C
 17179  0DCE                     i1l3879:
 17180  0DCE  0023               	movlb	3	; select bank3
 17181  0DCF  0C0F               	rrf	15,w	;volatile
 17182  0DD0  0C89               	rrf	9,f
 17183  0DD1  3901               	andlw	1
 17184  0DD2  00F3               	movwf	??i1_LCDsend2x4
 17185  0DD3  0811               	movf	17,w	;volatile
 17186  0DD4  391F               	andlw	31
 17187  0DD5  0473               	iorwf	??i1_LCDsend2x4,w
 17188  0DD6  1D03               	btfss	3,2
 17189  0DD7  2DD9               	goto	u263_21
 17190  0DD8  2DDA               	goto	u263_20
 17191  0DD9                     u263_21:
 17192  0DD9  2DCE               	goto	i1l3879
 17193  0DDA                     u263_20:
 17194  0DDA                     i1l1115:
 17195  0DDA                     i1l3881:	
 17196                           ;main.c: 163: _delay((unsigned long)((1)*(1000000/4000000.0)));
 17197                           
 17198                           
 17199                           ;main.c: 164: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 17200  0DDA  0876               	movf	i1LCDsend2x4@hc,w
 17201  0DDB  0472               	iorwf	i1LCDsend2x4@mode,w
 17202  0DDC  3808               	iorlw	8
 17203  0DDD  318B  23B2  318D   	fcall	i1_WriteI2C
 17204  0DE0                     i1l3883:
 17205  0DE0  0023               	movlb	3	; select bank3
 17206  0DE1  0C0F               	rrf	15,w	;volatile
 17207  0DE2  0C89               	rrf	9,f
 17208  0DE3  3901               	andlw	1
 17209  0DE4  00F3               	movwf	??i1_LCDsend2x4
 17210  0DE5  0811               	movf	17,w	;volatile
 17211  0DE6  391F               	andlw	31
 17212  0DE7  0473               	iorwf	??i1_LCDsend2x4,w
 17213  0DE8  1D03               	btfss	3,2
 17214  0DE9  2DEB               	goto	u264_21
 17215  0DEA  2DEC               	goto	u264_20
 17216  0DEB                     u264_21:
 17217  0DEB  2DE0               	goto	i1l3883
 17218  0DEC                     u264_20:
 17219  0DEC                     i1l3885:
 17220                           
 17221                           ;main.c: 165: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 17222  0DEC  0877               	movf	i1LCDsend2x4@lc,w
 17223  0DED  0472               	iorwf	i1LCDsend2x4@mode,w
 17224  0DEE  3808               	iorlw	8
 17225  0DEF  318B  23B2  318D   	fcall	i1_WriteI2C
 17226  0DF2                     i1l3887:
 17227  0DF2  0023               	movlb	3	; select bank3
 17228  0DF3  0C0F               	rrf	15,w	;volatile
 17229  0DF4  0C89               	rrf	9,f
 17230  0DF5  3901               	andlw	1
 17231  0DF6  00F3               	movwf	??i1_LCDsend2x4
 17232  0DF7  0811               	movf	17,w	;volatile
 17233  0DF8  391F               	andlw	31
 17234  0DF9  0473               	iorwf	??i1_LCDsend2x4,w
 17235  0DFA  1D03               	btfss	3,2
 17236  0DFB  2DFD               	goto	u265_21
 17237  0DFC  2DFE               	goto	u265_20
 17238  0DFD                     u265_21:
 17239  0DFD  2DF2               	goto	i1l3887
 17240  0DFE                     u265_20:
 17241  0DFE                     i1l3889:
 17242                           
 17243                           ;main.c: 166: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 17244  0DFE  0877               	movf	i1LCDsend2x4@lc,w
 17245  0DFF  0472               	iorwf	i1LCDsend2x4@mode,w
 17246  0E00  380C               	iorlw	12
 17247  0E01  318B  23B2  318D   	fcall	i1_WriteI2C
 17248  0E04                     i1l3891:
 17249  0E04  0023               	movlb	3	; select bank3
 17250  0E05  0C0F               	rrf	15,w	;volatile
 17251  0E06  0C89               	rrf	9,f
 17252  0E07  3901               	andlw	1
 17253  0E08  00F3               	movwf	??i1_LCDsend2x4
 17254  0E09  0811               	movf	17,w	;volatile
 17255  0E0A  391F               	andlw	31
 17256  0E0B  0473               	iorwf	??i1_LCDsend2x4,w
 17257  0E0C  1D03               	btfss	3,2
 17258  0E0D  2E0F               	goto	u266_21
 17259  0E0E  2E10               	goto	u266_20
 17260  0E0F                     u266_21:
 17261  0E0F  2E04               	goto	i1l3891
 17262  0E10                     u266_20:
 17263  0E10                     i1l1124:
 17264  0E10                     i1l3893:	
 17265                           ;main.c: 167: _delay((unsigned long)((1)*(1000000/4000000.0)));
 17266                           
 17267                           
 17268                           ;main.c: 168: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 17269  0E10  0877               	movf	i1LCDsend2x4@lc,w
 17270  0E11  0472               	iorwf	i1LCDsend2x4@mode,w
 17271  0E12  3808               	iorlw	8
 17272  0E13  318B  23B2  318D   	fcall	i1_WriteI2C
 17273  0E16                     i1l3895:
 17274  0E16  0023               	movlb	3	; select bank3
 17275  0E17  0C0F               	rrf	15,w	;volatile
 17276  0E18  0C89               	rrf	9,f
 17277  0E19  3901               	andlw	1
 17278  0E1A  00F3               	movwf	??i1_LCDsend2x4
 17279  0E1B  0811               	movf	17,w	;volatile
 17280  0E1C  391F               	andlw	31
 17281  0E1D  0473               	iorwf	??i1_LCDsend2x4,w
 17282  0E1E  1D03               	btfss	3,2
 17283  0E1F  2E21               	goto	u267_21
 17284  0E20  2E22               	goto	u267_20
 17285  0E21                     u267_21:
 17286  0E21  2E16               	goto	i1l3895
 17287  0E22                     u267_20:
 17288  0E22                     i1l1127:
 17289                           
 17290                           ;main.c: 169: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 17291  0E22  1511               	bsf	17,2	;volatile
 17292  0E23                     i1l1128:
 17293  0E23  1911               	btfsc	17,2	;volatile
 17294  0E24  2E26               	goto	u268_21
 17295  0E25  2E27               	goto	u268_20
 17296  0E26                     u268_21:
 17297  0E26  2E23               	goto	i1l1128
 17298  0E27                     u268_20:
 17299  0E27                     i1l3897:
 17300                           
 17301                           ;main.c: 170: _delay((unsigned long)((50)*(1000000/4000000.0)));
 17302  0E27  3004               	movlw	4
 17303  0E28                     u502_27:
 17304  0E28  0B89               	decfsz	9,f
 17305  0E29  2E28               	goto	u502_27
 17306  0E2A                     i1l1131:
 17307  0E2A  0008               	return
 17308  0E2B                     __end_ofi1_LCDsend2x4:
 17309                           
 17310                           	psect	text59
 17311  0BB2                     __ptext59:	
 17312 ;; *************** function i1_WriteI2C *****************
 17313 ;; Defined at:
 17314 ;;		line 47 in file "I2C/i2c.c"
 17315 ;; Parameters:    Size  Location     Type
 17316 ;;  data_out        1    wreg     unsigned char 
 17317 ;; Auto vars:     Size  Location     Type
 17318 ;;  data_out        1    1[COMMON] unsigned char 
 17319 ;; Return value:  Size  Location     Type
 17320 ;;                  1    wreg      char 
 17321 ;; Registers used:
 17322 ;;		wreg, status,2, status,0
 17323 ;; Tracked objects:
 17324 ;;		On entry : 0/0
 17325 ;;		On exit  : 0/0
 17326 ;;		Unchanged: 0/0
 17327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17330 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17331 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17332 ;;Total ram usage:        2 bytes
 17333 ;; Hardware stack levels used:    1
 17334 ;; This function calls:
 17335 ;;		Nothing
 17336 ;; This function is called by:
 17337 ;;		_tsttc
 17338 ;;		i1_LCDsend2x4
 17339 ;; This function uses a non-reentrant model
 17340 ;;
 17341                           
 17342                           
 17343                           ;psect for function i1_WriteI2C
 17344  0BB2                     i1_WriteI2C:
 17345                           
 17346                           ;incstack = 0
 17347                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 17348                           ;i1WriteI2C@data_out stored from wreg
 17349  0BB2  00F1               	movwf	i1WriteI2C@data_out
 17350  0BB3                     i1l3831:
 17351                           
 17352                           ;i2c.c: 49: SSP1BUF = data_out;
 17353  0BB3  0871               	movf	i1WriteI2C@data_out,w
 17354  0BB4  0023               	movlb	3	; select bank3
 17355  0BB5  008C               	movwf	12	;volatile
 17356  0BB6                     i1l3833:
 17357                           
 17358                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 17359  0BB6  1F90               	btfss	16,7	;volatile
 17360  0BB7  2BB9               	goto	u248_21
 17361  0BB8  2BBA               	goto	u248_20
 17362  0BB9                     u248_21:
 17363  0BB9  2BBB               	goto	i1l3839
 17364  0BBA                     u248_20:
 17365  0BBA  2BFC               	goto	i1l30
 17366  0BBB                     i1l3839:
 17367                           
 17368                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 17369  0BBB  300F               	movlw	15
 17370  0BBC  0510               	andwf	16,w	;volatile
 17371  0BBD  00F0               	movwf	??i1_WriteI2C
 17372  0BBE  3008               	movlw	8
 17373  0BBF  0670               	xorwf	??i1_WriteI2C,w
 17374  0BC0  1903               	btfsc	3,2
 17375  0BC1  2BC3               	goto	u249_21
 17376  0BC2  2BC4               	goto	u249_20
 17377  0BC3                     u249_21:
 17378  0BC3  2BDA               	goto	i1l3851
 17379  0BC4                     u249_20:
 17380  0BC4                     i1l3841:
 17381  0BC4  300F               	movlw	15
 17382  0BC5  0510               	andwf	16,w	;volatile
 17383  0BC6  00F0               	movwf	??i1_WriteI2C
 17384  0BC7  300B               	movlw	11
 17385  0BC8  0670               	xorwf	??i1_WriteI2C,w
 17386  0BC9  1903               	btfsc	3,2
 17387  0BCA  2BCC               	goto	u250_21
 17388  0BCB  2BCD               	goto	u250_20
 17389  0BCC                     u250_21:
 17390  0BCC  2BDA               	goto	i1l3851
 17391  0BCD                     u250_20:
 17392  0BCD                     i1l3843:
 17393                           
 17394                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 17395  0BCD  1610               	bsf	16,4	;volatile
 17396  0BCE                     i1l33:	
 17397                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 17398                           
 17399  0BCE  002E               	movlb	14	; select bank14
 17400  0BCF  1C0F               	btfss	15,0	;volatile
 17401  0BD0  2BD2               	goto	u251_21
 17402  0BD1  2BD3               	goto	u251_20
 17403  0BD2                     u251_21:
 17404  0BD2  2BCE               	goto	i1l33
 17405  0BD3                     u251_20:
 17406  0BD3                     i1l35:
 17407                           
 17408                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 17409  0BD3  0023               	movlb	3	; select bank3
 17410  0BD4  190F               	btfsc	15,2	;volatile
 17411  0BD5  2BD7               	goto	u252_21
 17412  0BD6  2BD8               	goto	u252_20
 17413  0BD7                     u252_21:
 17414  0BD7  2BFC               	goto	i1l30
 17415  0BD8                     u252_20:
 17416  0BD8                     i1l3845:
 17417  0BD8  080F               	movf	15,w	;volatile
 17418  0BD9  2BFC               	goto	i1l30
 17419  0BDA                     i1l3851:
 17420                           
 17421                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 17422  0BDA  300F               	movlw	15
 17423  0BDB  0510               	andwf	16,w	;volatile
 17424  0BDC  00F0               	movwf	??i1_WriteI2C
 17425  0BDD  3008               	movlw	8
 17426  0BDE  0670               	xorwf	??i1_WriteI2C,w
 17427  0BDF  1903               	btfsc	3,2
 17428  0BE0  2BE2               	goto	u253_21
 17429  0BE1  2BE3               	goto	u253_20
 17430  0BE2                     u253_21:
 17431  0BE2  2BEC               	goto	i1l42
 17432  0BE3                     u253_20:
 17433  0BE3                     i1l3853:
 17434  0BE3  300F               	movlw	15
 17435  0BE4  0510               	andwf	16,w	;volatile
 17436  0BE5  00F0               	movwf	??i1_WriteI2C
 17437  0BE6  300B               	movlw	11
 17438  0BE7  0670               	xorwf	??i1_WriteI2C,w
 17439  0BE8  1D03               	btfss	3,2
 17440  0BE9  2BEB               	goto	u254_21
 17441  0BEA  2BEC               	goto	u254_20
 17442  0BEB                     u254_21:
 17443  0BEB  2BFC               	goto	i1l30
 17444  0BEC                     u254_20:
 17445  0BEC                     i1l42:
 17446  0BEC  180F               	btfsc	15,0	;volatile
 17447  0BED  2BEF               	goto	u255_21
 17448  0BEE  2BF0               	goto	u255_20
 17449  0BEF                     u255_21:
 17450  0BEF  2BEC               	goto	i1l42
 17451  0BF0                     u255_20:
 17452  0BF0                     i1l3855:
 17453  0BF0  0C0F               	rrf	15,w	;volatile
 17454  0BF1  0C89               	rrf	9,f
 17455  0BF2  3901               	andlw	1
 17456  0BF3  00F0               	movwf	??i1_WriteI2C
 17457  0BF4  0811               	movf	17,w	;volatile
 17458  0BF5  391F               	andlw	31
 17459  0BF6  0470               	iorwf	??i1_WriteI2C,w
 17460  0BF7  1D03               	btfss	3,2
 17461  0BF8  2BFA               	goto	u256_21
 17462  0BF9  2BFB               	goto	u256_20
 17463  0BFA                     u256_21:
 17464  0BFA  2BF0               	goto	i1l3855
 17465  0BFB                     u256_20:
 17466  0BFB                     i1l47:
 17467                           
 17468                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 17469  0BFB  0811               	movf	17,w	;volatile
 17470  0BFC                     i1l30:
 17471  0BFC  0008               	return
 17472  0BFD                     __end_ofi1_WriteI2C:
 17473                           
 17474                           	psect	text60
 17475  0840                     __ptext60:	
 17476 ;; *************** function _TMR3_WriteTimer *****************
 17477 ;; Defined at:
 17478 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 17479 ;; Parameters:    Size  Location     Type
 17480 ;;  timerVal        2    0[COMMON] unsigned int 
 17481 ;; Auto vars:     Size  Location     Type
 17482 ;;		None
 17483 ;; Return value:  Size  Location     Type
 17484 ;;                  1    wreg      void 
 17485 ;; Registers used:
 17486 ;;		wreg, status,2
 17487 ;; Tracked objects:
 17488 ;;		On entry : 0/0
 17489 ;;		On exit  : 0/0
 17490 ;;		Unchanged: 0/0
 17491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17495 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17496 ;;Total ram usage:        2 bytes
 17497 ;; Hardware stack levels used:    1
 17498 ;; This function calls:
 17499 ;;		Nothing
 17500 ;; This function is called by:
 17501 ;;		_TMR3_ISR
 17502 ;;		_TMR3_Reload
 17503 ;; This function uses a non-reentrant model
 17504 ;;
 17505                           
 17506                           
 17507                           ;psect for function _TMR3_WriteTimer
 17508  0840                     _TMR3_WriteTimer:
 17509  0840                     i1l4423:	
 17510                           ;incstack = 0
 17511                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 17512                           
 17513                           
 17514                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 17515  0840  0024               	movlb	4	; select bank4
 17516  0841  1D14               	btfss	20,2	;volatile
 17517  0842  2844               	goto	u356_21
 17518  0843  2845               	goto	u356_20
 17519  0844                     u356_21:
 17520  0844  284C               	goto	i1l4433
 17521  0845                     u356_20:
 17522  0845                     i1l4425:
 17523                           
 17524                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 17525  0845  1014               	bcf	20,0	;volatile
 17526  0846                     i1l4427:
 17527                           
 17528                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 17529  0846  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 17530  0847  0093               	movwf	19	;volatile
 17531  0848                     i1l4429:
 17532                           
 17533                           ;tmr3.c: 136: TMR3L = timerVal;
 17534  0848  0870               	movf	TMR3_WriteTimer@timerVal,w
 17535  0849  0092               	movwf	18	;volatile
 17536  084A                     i1l4431:
 17537                           
 17538                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 17539  084A  1414               	bsf	20,0	;volatile
 17540                           
 17541                           ;tmr3.c: 140: }
 17542  084B  2850               	goto	i1l477
 17543  084C                     i1l4433:
 17544                           
 17545                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 17546  084C  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 17547  084D  0093               	movwf	19	;volatile
 17548  084E                     i1l4435:
 17549                           
 17550                           ;tmr3.c: 145: TMR3L = timerVal;
 17551  084E  0870               	movf	TMR3_WriteTimer@timerVal,w
 17552  084F  0092               	movwf	18	;volatile
 17553  0850                     i1l477:
 17554  0850  0008               	return
 17555  0851                     __end_of_TMR3_WriteTimer:
 17556                           
 17557                           	psect	text61
 17558  08B0                     __ptext61:	
 17559 ;; *************** function _TMR1_ISR *****************
 17560 ;; Defined at:
 17561 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 17562 ;; Parameters:    Size  Location     Type
 17563 ;;		None
 17564 ;; Auto vars:     Size  Location     Type
 17565 ;;		None
 17566 ;; Return value:  Size  Location     Type
 17567 ;;                  1    wreg      void 
 17568 ;; Registers used:
 17569 ;;		wreg, status,2, status,0, pclath, cstack
 17570 ;; Tracked objects:
 17571 ;;		On entry : 0/0
 17572 ;;		On exit  : 0/0
 17573 ;;		Unchanged: 0/0
 17574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17579 ;;Total ram usage:        0 bytes
 17580 ;; Hardware stack levels used:    1
 17581 ;; Hardware stack levels required when called:    2
 17582 ;; This function calls:
 17583 ;;		Absolute function
 17584 ;;		_Clock_ISR
 17585 ;;		_TMR1_DefaultInterruptHandler
 17586 ;;		_TMR1_WriteTimer
 17587 ;; This function is called by:
 17588 ;;		_INTERRUPT_InterruptManager
 17589 ;; This function uses a non-reentrant model
 17590 ;;
 17591                           
 17592                           
 17593                           ;psect for function _TMR1_ISR
 17594  08B0                     _TMR1_ISR:
 17595  08B0                     i1l4785:	
 17596                           ;incstack = 0
 17597                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 17598                           
 17599                           
 17600                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 17601  08B0  002E               	movlb	14	; select bank14
 17602  08B1  1010               	bcf	16,0	;volatile
 17603  08B2                     i1l4787:
 17604                           
 17605                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 17606  08B2  0021               	movlb	1	; select bank1
 17607  08B3  083C               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 17608  08B4  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 17609  08B5  083B               	movf	_timer1ReloadVal^(0+128),w	;volatile
 17610  08B6  00F0               	movwf	TMR1_WriteTimer@timerVal
 17611  08B7  3188  202F  3188   	fcall	_TMR1_WriteTimer
 17612  08BA                     i1l4789:
 17613                           
 17614                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 17615  08BA  0021               	movlb	1	; select bank1
 17616  08BB  0839               	movf	_TMR1_InterruptHandler^(0+128),w
 17617  08BC  043A               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 17618  08BD  1903               	btfsc	3,2
 17619  08BE  28C0               	goto	u423_21
 17620  08BF  28C1               	goto	u423_20
 17621  08C0                     u423_21:
 17622  08C0  28C6               	goto	i1l426
 17623  08C1                     u423_20:
 17624  08C1                     i1l4791:
 17625                           
 17626                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 17627  08C1  083A               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 17628  08C2  008A               	movwf	10
 17629  08C3  0839               	movf	_TMR1_InterruptHandler^(0+128),w
 17630  08C4  000A               	callw
 17631  08C5  3188               	pagesel	$
 17632  08C6                     i1l426:
 17633  08C6  0008               	return
 17634  08C7                     __end_of_TMR1_ISR:
 17635                           
 17636                           	psect	text62
 17637  082F                     __ptext62:	
 17638 ;; *************** function _TMR1_WriteTimer *****************
 17639 ;; Defined at:
 17640 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 17641 ;; Parameters:    Size  Location     Type
 17642 ;;  timerVal        2    0[COMMON] unsigned int 
 17643 ;; Auto vars:     Size  Location     Type
 17644 ;;		None
 17645 ;; Return value:  Size  Location     Type
 17646 ;;                  1    wreg      void 
 17647 ;; Registers used:
 17648 ;;		wreg, status,2
 17649 ;; Tracked objects:
 17650 ;;		On entry : 0/0
 17651 ;;		On exit  : 0/0
 17652 ;;		Unchanged: 0/0
 17653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17657 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17658 ;;Total ram usage:        2 bytes
 17659 ;; Hardware stack levels used:    1
 17660 ;; This function calls:
 17661 ;;		Nothing
 17662 ;; This function is called by:
 17663 ;;		_TMR1_ISR
 17664 ;;		_TMR1_Reload
 17665 ;; This function uses a non-reentrant model
 17666 ;;
 17667                           
 17668                           
 17669                           ;psect for function _TMR1_WriteTimer
 17670  082F                     _TMR1_WriteTimer:
 17671  082F                     i1l4409:	
 17672                           ;incstack = 0
 17673                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 17674                           
 17675                           
 17676                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 17677  082F  0024               	movlb	4	; select bank4
 17678  0830  1D0E               	btfss	14,2	;volatile
 17679  0831  2833               	goto	u355_21
 17680  0832  2834               	goto	u355_20
 17681  0833                     u355_21:
 17682  0833  283B               	goto	i1l4419
 17683  0834                     u355_20:
 17684  0834                     i1l4411:
 17685                           
 17686                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 17687  0834  100E               	bcf	14,0	;volatile
 17688  0835                     i1l4413:
 17689                           
 17690                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 17691  0835  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17692  0836  008D               	movwf	13	;volatile
 17693  0837                     i1l4415:
 17694                           
 17695                           ;tmr1.c: 136: TMR1L = timerVal;
 17696  0837  0870               	movf	TMR1_WriteTimer@timerVal,w
 17697  0838  008C               	movwf	12	;volatile
 17698  0839                     i1l4417:
 17699                           
 17700                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 17701  0839  140E               	bsf	14,0	;volatile
 17702                           
 17703                           ;tmr1.c: 140: }
 17704  083A  283F               	goto	i1l413
 17705  083B                     i1l4419:
 17706                           
 17707                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 17708  083B  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17709  083C  008D               	movwf	13	;volatile
 17710  083D                     i1l4421:
 17711                           
 17712                           ;tmr1.c: 145: TMR1L = timerVal;
 17713  083D  0870               	movf	TMR1_WriteTimer@timerVal,w
 17714  083E  008C               	movwf	12	;volatile
 17715  083F                     i1l413:
 17716  083F  0008               	return
 17717  0840                     __end_of_TMR1_WriteTimer:
 17718                           
 17719                           	psect	text63
 17720  0EFF                     __ptext63:	
 17721 ;; *************** function _Clock_ISR *****************
 17722 ;; Defined at:
 17723 ;;		line 289 in file "main.c"
 17724 ;; Parameters:    Size  Location     Type
 17725 ;;		None
 17726 ;; Auto vars:     Size  Location     Type
 17727 ;;		None
 17728 ;; Return value:  Size  Location     Type
 17729 ;;                  1    wreg      void 
 17730 ;; Registers used:
 17731 ;;		wreg, status,2, status,0, pclath, cstack
 17732 ;; Tracked objects:
 17733 ;;		On entry : 0/0
 17734 ;;		On exit  : 0/0
 17735 ;;		Unchanged: 0/0
 17736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17739 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17740 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17741 ;;Total ram usage:        1 bytes
 17742 ;; Hardware stack levels used:    1
 17743 ;; Hardware stack levels required when called:    1
 17744 ;; This function calls:
 17745 ;;		i1_DATAEE_WriteByte
 17746 ;; This function is called by:
 17747 ;;		_main
 17748 ;;		_TMR1_ISR
 17749 ;; This function uses a non-reentrant model
 17750 ;;
 17751                           
 17752                           
 17753                           ;psect for function _Clock_ISR
 17754  0EFF                     _Clock_ISR:
 17755  0EFF                     i1l4505:	
 17756                           ;incstack = 0
 17757                           ; Regs used in _Clock_ISR: [wreg+status,2+status,0+pclath+cstack]
 17758                           
 17759                           
 17760                           ;main.c: 291: t.s++;
 17761  0EFF  3001               	movlw	1
 17762  0F00  00FA               	movwf	??_Clock_ISR
 17763  0F01  087A               	movf	??_Clock_ISR,w
 17764  0F02  0020               	movlb	0	; select bank0
 17765  0F03  07D9               	addwf	_t+2,f
 17766                           
 17767                           ;main.c: 293: if(t.s==60){
 17768  0F04  303C               	movlw	60
 17769  0F05  0659               	xorwf	_t+2,w
 17770  0F06  1D03               	btfss	3,2
 17771  0F07  2F09               	goto	u376_21
 17772  0F08  2F0A               	goto	u376_20
 17773  0F09                     u376_21:
 17774  0F09  2FB9               	goto	i1l4537
 17775  0F0A                     u376_20:
 17776  0F0A                     i1l4507:
 17777                           
 17778                           ;main.c: 294: t.m++;
 17779  0F0A  3001               	movlw	1
 17780  0F0B  00FA               	movwf	??_Clock_ISR
 17781  0F0C  087A               	movf	??_Clock_ISR,w
 17782  0F0D  07D8               	addwf	_t+1,f
 17783  0F0E                     i1l4509:
 17784                           
 17785                           ;main.c: 295: t.s=0;
 17786  0F0E  01D9               	clrf	_t+2
 17787  0F0F                     i1l4511:
 17788                           
 17789                           ;main.c: 298: DATAEE_WriteByte( 0x7000 + (1 * 8), NREG);
 17790  0F0F  3008               	movlw	8
 17791  0F10  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17792  0F11  3070               	movlw	112
 17793  0F12  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17794  0F13  0021               	movlb	1	; select bank1
 17795  0F14  0846               	movf	_NREG^(0+128),w
 17796  0F15  00FA               	movwf	??_Clock_ISR
 17797  0F16  087A               	movf	??_Clock_ISR,w
 17798  0F17  00F8               	movwf	i1DATAEE_WriteByte@bData
 17799  0F18  3189  213F  318E   	fcall	i1_DATAEE_WriteByte
 17800  0F1B                     i1l4513:
 17801                           
 17802                           ;main.c: 299: DATAEE_WriteByte( 0x7000 + (2 * 8), PMON);
 17803  0F1B  3010               	movlw	16
 17804  0F1C  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17805  0F1D  3070               	movlw	112
 17806  0F1E  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17807  0F1F  0021               	movlb	1	; select bank1
 17808  0F20  0845               	movf	_PMON^(0+128),w
 17809  0F21  00FA               	movwf	??_Clock_ISR
 17810  0F22  087A               	movf	??_Clock_ISR,w
 17811  0F23  00F8               	movwf	i1DATAEE_WriteByte@bData
 17812  0F24  3189  213F  318E   	fcall	i1_DATAEE_WriteByte
 17813  0F27                     i1l4515:
 17814                           
 17815                           ;main.c: 300: DATAEE_WriteByte( 0x7000 + (3 * 8), TALA);
 17816  0F27  3018               	movlw	24
 17817  0F28  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17818  0F29  3070               	movlw	112
 17819  0F2A  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17820  0F2B  0020               	movlb	0	; select bank0
 17821  0F2C  0866               	movf	_TALA,w
 17822  0F2D  00FA               	movwf	??_Clock_ISR
 17823  0F2E  087A               	movf	??_Clock_ISR,w
 17824  0F2F  00F8               	movwf	i1DATAEE_WriteByte@bData
 17825  0F30  3189  213F  318E   	fcall	i1_DATAEE_WriteByte
 17826  0F33                     i1l4517:
 17827                           
 17828                           ;main.c: 301: DATAEE_WriteByte( 0x7000 + (4 * 8), clkAlarm.alarmVal.h);
 17829  0F33  3020               	movlw	32
 17830  0F34  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17831  0F35  3070               	movlw	112
 17832  0F36  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17833  0F37  0020               	movlb	0	; select bank0
 17834  0F38  084D               	movf	_clkAlarm,w
 17835  0F39  00FA               	movwf	??_Clock_ISR
 17836  0F3A  087A               	movf	??_Clock_ISR,w
 17837  0F3B  00F8               	movwf	i1DATAEE_WriteByte@bData
 17838  0F3C  3189  213F  318E   	fcall	i1_DATAEE_WriteByte
 17839  0F3F                     i1l4519:
 17840                           
 17841                           ;main.c: 302: DATAEE_WriteByte( 0x7000 + (5 * 8), clkAlarm.alarmVal.m);
 17842  0F3F  3028               	movlw	40
 17843  0F40  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17844  0F41  3070               	movlw	112
 17845  0F42  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17846  0F43  0020               	movlb	0	; select bank0
 17847  0F44  084E               	movf	_clkAlarm+1,w
 17848  0F45  00FA               	movwf	??_Clock_ISR
 17849  0F46  087A               	movf	??_Clock_ISR,w
 17850  0F47  00F8               	movwf	i1DATAEE_WriteByte@bData
 17851  0F48  3189  213F  318E   	fcall	i1_DATAEE_WriteByte
 17852  0F4B                     i1l4521:
 17853                           
 17854                           ;main.c: 303: DATAEE_WriteByte( 0x7000 + (6 * 8), clkAlarm.alarmVal.s);
 17855  0F4B  3030               	movlw	48
 17856  0F4C  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17857  0F4D  3070               	movlw	112
 17858  0F4E  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17859  0F4F  0020               	movlb	0	; select bank0
 17860  0F50  084F               	movf	_clkAlarm+2,w
 17861  0F51  00FA               	movwf	??_Clock_ISR
 17862  0F52  087A               	movf	??_Clock_ISR,w
 17863  0F53  00F8               	movwf	i1DATAEE_WriteByte@bData
 17864  0F54  3189  213F  318E   	fcall	i1_DATAEE_WriteByte
 17865  0F57                     i1l4523:
 17866                           
 17867                           ;main.c: 304: DATAEE_WriteByte( 0x7000 + (7 * 8), tempAlarm.alarmTemp);
 17868  0F57  3038               	movlw	56
 17869  0F58  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17870  0F59  3070               	movlw	112
 17871  0F5A  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17872  0F5B  0020               	movlb	0	; select bank0
 17873  0F5C  0854               	movf	_tempAlarm,w
 17874  0F5D  00FA               	movwf	??_Clock_ISR
 17875  0F5E  087A               	movf	??_Clock_ISR,w
 17876  0F5F  00F8               	movwf	i1DATAEE_WriteByte@bData
 17877  0F60  3189  213F  318E   	fcall	i1_DATAEE_WriteByte
 17878  0F63                     i1l4525:
 17879                           
 17880                           ;main.c: 305: DATAEE_WriteByte( 0x7000 + (8 * 8), lumAlarm.alarmLum);
 17881  0F63  3040               	movlw	64
 17882  0F64  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17883  0F65  3070               	movlw	112
 17884  0F66  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17885  0F67  0020               	movlb	0	; select bank0
 17886  0F68  0851               	movf	_lumAlarm,w
 17887  0F69  00FA               	movwf	??_Clock_ISR
 17888  0F6A  087A               	movf	??_Clock_ISR,w
 17889  0F6B  00F8               	movwf	i1DATAEE_WriteByte@bData
 17890  0F6C  3189  213F  318E   	fcall	i1_DATAEE_WriteByte
 17891  0F6F                     i1l4527:
 17892                           
 17893                           ;main.c: 306: DATAEE_WriteByte( 0x7000 + (9 * 8), ALAF);
 17894  0F6F  3048               	movlw	72
 17895  0F70  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17896  0F71  3070               	movlw	112
 17897  0F72  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17898  0F73  0020               	movlb	0	; select bank0
 17899  0F74  0865               	movf	_ALAF,w
 17900  0F75  00FA               	movwf	??_Clock_ISR
 17901  0F76  087A               	movf	??_Clock_ISR,w
 17902  0F77  00F8               	movwf	i1DATAEE_WriteByte@bData
 17903  0F78  3189  213F  318E   	fcall	i1_DATAEE_WriteByte
 17904  0F7B                     i1l4529:
 17905                           
 17906                           ;main.c: 307: DATAEE_WriteByte( 0x7000 + (10 * 8), t.h);
 17907  0F7B  3050               	movlw	80
 17908  0F7C  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17909  0F7D  3070               	movlw	112
 17910  0F7E  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17911  0F7F  0020               	movlb	0	; select bank0
 17912  0F80  0857               	movf	_t,w
 17913  0F81  00FA               	movwf	??_Clock_ISR
 17914  0F82  087A               	movf	??_Clock_ISR,w
 17915  0F83  00F8               	movwf	i1DATAEE_WriteByte@bData
 17916  0F84  3189  213F  318E   	fcall	i1_DATAEE_WriteByte
 17917  0F87                     i1l4531:
 17918                           
 17919                           ;main.c: 308: DATAEE_WriteByte( 0x7000 + (11 * 8), t.m);
 17920  0F87  3058               	movlw	88
 17921  0F88  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17922  0F89  3070               	movlw	112
 17923  0F8A  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17924  0F8B  0020               	movlb	0	; select bank0
 17925  0F8C  0858               	movf	_t+1,w
 17926  0F8D  00FA               	movwf	??_Clock_ISR
 17927  0F8E  087A               	movf	??_Clock_ISR,w
 17928  0F8F  00F8               	movwf	i1DATAEE_WriteByte@bData
 17929  0F90  3189  213F  318E   	fcall	i1_DATAEE_WriteByte
 17930  0F93                     i1l4533:
 17931                           
 17932                           ;main.c: 309: DATAEE_WriteByte( 0x7000 + (12 * 8), idx_RingBuffer);
 17933  0F93  3060               	movlw	96
 17934  0F94  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17935  0F95  3070               	movlw	112
 17936  0F96  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17937  0F97  0021               	movlb	1	; select bank1
 17938  0F98  0844               	movf	_idx_RingBuffer^(0+128),w
 17939  0F99  00FA               	movwf	??_Clock_ISR
 17940  0F9A  087A               	movf	??_Clock_ISR,w
 17941  0F9B  00F8               	movwf	i1DATAEE_WriteByte@bData
 17942  0F9C  3189  213F  318E   	fcall	i1_DATAEE_WriteByte
 17943  0F9F                     i1l4535:
 17944                           
 17945                           ;main.c: 310: DATAEE_WriteByte( 0x7000 + (13 * 8), NREG + PMON + TALA + clkAlarm.alarmVa
      +                          l.h + clkAlarm.alarmVal.m + clkAlarm.alarmVal.s + tempAlarm.alarmTemp + lumAlarm.alarmLu
      +                          m + ALAF + t.h + t.m + idx_RingBuffer);
 17946  0F9F  3068               	movlw	104
 17947  0FA0  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17948  0FA1  3070               	movlw	112
 17949  0FA2  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17950  0FA3  0020               	movlb	0	; select bank0
 17951  0FA4  084E               	movf	_clkAlarm+1,w
 17952  0FA5  074F               	addwf	_clkAlarm+2,w
 17953  0FA6  0758               	addwf	_t+1,w
 17954  0FA7  074D               	addwf	_clkAlarm,w
 17955  0FA8  0754               	addwf	_tempAlarm,w
 17956  0FA9  0751               	addwf	_lumAlarm,w
 17957  0FAA  0757               	addwf	_t,w
 17958  0FAB  0021               	movlb	1	; select bank1
 17959  0FAC  0746               	addwf	_NREG^(0+128),w
 17960  0FAD  0745               	addwf	_PMON^(0+128),w
 17961  0FAE  0020               	movlb	0	; select bank0
 17962  0FAF  0766               	addwf	_TALA,w
 17963  0FB0  0765               	addwf	_ALAF,w
 17964  0FB1  0021               	movlb	1	; select bank1
 17965  0FB2  0744               	addwf	_idx_RingBuffer^(0+128),w
 17966  0FB3  00FA               	movwf	??_Clock_ISR
 17967  0FB4  087A               	movf	??_Clock_ISR,w
 17968  0FB5  00F8               	movwf	i1DATAEE_WriteByte@bData
 17969  0FB6  3189  213F  318E   	fcall	i1_DATAEE_WriteByte
 17970  0FB9                     i1l4537:
 17971                           
 17972                           ;main.c: 311: };main.c: 312: if(t.m==60){
 17973  0FB9  303C               	movlw	60
 17974  0FBA  0020               	movlb	0	; select bank0
 17975  0FBB  0658               	xorwf	_t+1,w
 17976  0FBC  1D03               	btfss	3,2
 17977  0FBD  2FBF               	goto	u377_21
 17978  0FBE  2FC0               	goto	u377_20
 17979  0FBF                     u377_21:
 17980  0FBF  2FC5               	goto	i1l4543
 17981  0FC0                     u377_20:
 17982  0FC0                     i1l4539:
 17983                           
 17984                           ;main.c: 313: t.h++;
 17985  0FC0  3001               	movlw	1
 17986  0FC1  00FA               	movwf	??_Clock_ISR
 17987  0FC2  087A               	movf	??_Clock_ISR,w
 17988  0FC3  07D7               	addwf	_t,f
 17989  0FC4                     i1l4541:
 17990                           
 17991                           ;main.c: 314: t.m=0;
 17992  0FC4  01D8               	clrf	_t+1
 17993  0FC5                     i1l4543:
 17994                           
 17995                           ;main.c: 315: };main.c: 316: if(t.h==24){
 17996  0FC5  3018               	movlw	24
 17997  0FC6  0657               	xorwf	_t,w
 17998  0FC7  1D03               	btfss	3,2
 17999  0FC8  2FCA               	goto	u378_21
 18000  0FC9  2FCB               	goto	u378_20
 18001  0FCA                     u378_21:
 18002  0FCA  2FCC               	goto	i1l4547
 18003  0FCB                     u378_20:
 18004  0FCB                     i1l4545:
 18005                           
 18006                           ;main.c: 317: t.h=0;
 18007  0FCB  01D7               	clrf	_t
 18008  0FCC                     i1l4547:
 18009                           
 18010                           ;main.c: 318: };main.c: 321: if((ALAF == 'A') && t.s >= clkAlarm.alarmVal.s && t.m >= cl
      +                          kAlarm.alarmVal.m && t.h >= clkAlarm.alarmVal.h && editingClockAlarm == 0){
 18011  0FCC  3041               	movlw	65
 18012  0FCD  0665               	xorwf	_ALAF,w
 18013  0FCE  1D03               	btfss	3,2
 18014  0FCF  2FD1               	goto	u379_21
 18015  0FD0  2FD2               	goto	u379_20
 18016  0FD1                     u379_21:
 18017  0FD1  2FF4               	goto	i1l4561
 18018  0FD2                     u379_20:
 18019  0FD2                     i1l4549:
 18020  0FD2  084F               	movf	_clkAlarm+2,w
 18021  0FD3  0259               	subwf	_t+2,w
 18022  0FD4  1C03               	skipc
 18023  0FD5  2FD7               	goto	u380_21
 18024  0FD6  2FD8               	goto	u380_20
 18025  0FD7                     u380_21:
 18026  0FD7  2FF4               	goto	i1l4561
 18027  0FD8                     u380_20:
 18028  0FD8                     i1l4551:
 18029  0FD8  084E               	movf	_clkAlarm+1,w
 18030  0FD9  0258               	subwf	_t+1,w
 18031  0FDA  1C03               	skipc
 18032  0FDB  2FDD               	goto	u381_21
 18033  0FDC  2FDE               	goto	u381_20
 18034  0FDD                     u381_21:
 18035  0FDD  2FF4               	goto	i1l4561
 18036  0FDE                     u381_20:
 18037  0FDE                     i1l4553:
 18038  0FDE  084D               	movf	_clkAlarm,w
 18039  0FDF  0257               	subwf	_t,w
 18040  0FE0  1C03               	skipc
 18041  0FE1  2FE3               	goto	u382_21
 18042  0FE2  2FE4               	goto	u382_20
 18043  0FE3                     u382_21:
 18044  0FE3  2FF4               	goto	i1l4561
 18045  0FE4                     u382_20:
 18046  0FE4                     i1l4555:
 18047  0FE4  085C               	movf	_editingClockAlarm,w
 18048  0FE5  045D               	iorwf	_editingClockAlarm+1,w
 18049  0FE6  1D03               	btfss	3,2
 18050  0FE7  2FE9               	goto	u383_21
 18051  0FE8  2FEA               	goto	u383_20
 18052  0FE9                     u383_21:
 18053  0FE9  2FF4               	goto	i1l4561
 18054  0FEA                     u383_20:
 18055  0FEA                     i1l4557:
 18056                           
 18057                           ;main.c: 322: alarmPWMStart.h = 0xff;
 18058  0FEA  30FF               	movlw	255
 18059  0FEB  00FA               	movwf	??_Clock_ISR
 18060  0FEC  087A               	movf	??_Clock_ISR,w
 18061  0FED  00E7               	movwf	_alarmPWMStart
 18062  0FEE                     i1l4559:
 18063                           
 18064                           ;main.c: 323: clkAlarm.trigger = 1;
 18065  0FEE  01D0               	clrf	_clkAlarm+3
 18066  0FEF  0AD0               	incf	_clkAlarm+3,f
 18067                           
 18068                           ;main.c: 324: clkAlarm.alarmVal.h = 25;
 18069  0FF0  3019               	movlw	25
 18070  0FF1  00FA               	movwf	??_Clock_ISR
 18071  0FF2  087A               	movf	??_Clock_ISR,w
 18072  0FF3  00CD               	movwf	_clkAlarm
 18073  0FF4                     i1l4561:
 18074  0FF4  1003               	clrc
 18075  0FF5  1F96               	btfss	22,7	;volatile
 18076  0FF6  1403               	setc
 18077  0FF7  1803               	btfsc	3,0
 18078  0FF8  2FFA               	goto	u384_21
 18079  0FF9  2FFD               	goto	u384_20
 18080  0FFA                     u384_21:
 18081  0FFA  0020               	movlb	0	; select bank0
 18082  0FFB  1796               	bsf	22,7	;volatile
 18083  0FFC  2FFF               	goto	u385_24
 18084  0FFD                     u384_20:
 18085  0FFD  0020               	movlb	0	; select bank0
 18086  0FFE  1396               	bcf	22,7	;volatile
 18087  0FFF                     u385_24:
 18088  0FFF                     i1l1201:
 18089  0FFF  0008               	return
 18090  1000                     __end_of_Clock_ISR:
 18091                           
 18092                           	psect	text64
 18093  176E                     __ptext64:	
 18094 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 18095 ;; Defined at:
 18096 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 18097 ;; Parameters:    Size  Location     Type
 18098 ;;		None
 18099 ;; Auto vars:     Size  Location     Type
 18100 ;;		None
 18101 ;; Return value:  Size  Location     Type
 18102 ;;                  1    wreg      void 
 18103 ;; Registers used:
 18104 ;;		None
 18105 ;; Tracked objects:
 18106 ;;		On entry : 0/0
 18107 ;;		On exit  : 0/0
 18108 ;;		Unchanged: 0/0
 18109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18114 ;;Total ram usage:        0 bytes
 18115 ;; Hardware stack levels used:    1
 18116 ;; This function calls:
 18117 ;;		Nothing
 18118 ;; This function is called by:
 18119 ;;		_TMR1_Initialize
 18120 ;;		_TMR1_ISR
 18121 ;; This function uses a non-reentrant model
 18122 ;;
 18123                           
 18124                           
 18125                           ;psect for function _TMR1_DefaultInterruptHandler
 18126  176E                     _TMR1_DefaultInterruptHandler:
 18127  176E                     i1l432:	
 18128                           ;incstack = 0
 18129                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 18130                           
 18131  176E  0008               	return
 18132  176F                     __end_of_TMR1_DefaultInterruptHandler:
 18133                           
 18134                           	psect	text65
 18135  093F                     __ptext65:	
 18136 ;; *************** function i1_DATAEE_WriteByte *****************
 18137 ;; Defined at:
 18138 ;;		line 180 in file "mcc_generated_files/memory.c"
 18139 ;; Parameters:    Size  Location     Type
 18140 ;;  bAdd            2    6[COMMON] unsigned int 
 18141 ;;  bData           1    8[COMMON] unsigned char 
 18142 ;; Auto vars:     Size  Location     Type
 18143 ;;  GIEBitValue     1    9[COMMON] unsigned char 
 18144 ;; Return value:  Size  Location     Type
 18145 ;;                  1    wreg      void 
 18146 ;; Registers used:
 18147 ;;		wreg, status,2, status,0
 18148 ;; Tracked objects:
 18149 ;;		On entry : 0/0
 18150 ;;		On exit  : 0/0
 18151 ;;		Unchanged: 0/0
 18152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18153 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18156 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18157 ;;Total ram usage:        4 bytes
 18158 ;; Hardware stack levels used:    1
 18159 ;; This function calls:
 18160 ;;		Nothing
 18161 ;; This function is called by:
 18162 ;;		_Clock_ISR
 18163 ;;		_monitoring_ISR
 18164 ;; This function uses a non-reentrant model
 18165 ;;
 18166                           
 18167                           
 18168                           ;psect for function i1_DATAEE_WriteByte
 18169  093F                     i1_DATAEE_WriteByte:
 18170  093F                     i1l4251:	
 18171                           ;incstack = 0
 18172                           ; Regs used in i1_DATAEE_WriteByte: [wreg+status,2+status,0]
 18173                           
 18174                           
 18175                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 18176  093F  3000               	movlw	0
 18177  0940  1B8B               	btfsc	11,7	;volatile
 18178  0941  3001               	movlw	1
 18179  0942  00F9               	movwf	i1DATAEE_WriteByte@GIEBitValue
 18180                           
 18181                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 18182  0943  0877               	movf	i1DATAEE_WriteByte@bAdd+1,w
 18183  0944  0030               	movlb	16	; select bank16
 18184  0945  009B               	movwf	27	;volatile
 18185  0946                     i1l4253:
 18186                           
 18187                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 18188  0946  0876               	movf	i1DATAEE_WriteByte@bAdd,w
 18189  0947  009A               	movwf	26	;volatile
 18190  0948                     i1l4255:
 18191                           
 18192                           ;memory.c: 186: NVMDATL = bData;
 18193  0948  0878               	movf	i1DATAEE_WriteByte@bData,w
 18194  0949  009C               	movwf	28	;volatile
 18195  094A                     i1l4257:
 18196                           
 18197                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 18198  094A  171E               	bsf	30,6	;volsfr
 18199  094B                     i1l4259:
 18200                           
 18201                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 18202  094B  151E               	bsf	30,2	;volsfr
 18203  094C                     i1l4261:
 18204                           
 18205                           ;memory.c: 189: INTCONbits.GIE = 0;
 18206  094C  138B               	bcf	11,7	;volatile
 18207  094D                     i1l4263:
 18208                           
 18209                           ;memory.c: 190: NVMCON2 = 0x55;
 18210  094D  3055               	movlw	85
 18211  094E  009F               	movwf	31	;volsfr
 18212  094F                     i1l4265:
 18213                           
 18214                           ;memory.c: 191: NVMCON2 = 0xAA;
 18215  094F  30AA               	movlw	170
 18216  0950  009F               	movwf	31	;volsfr
 18217  0951                     i1l4267:
 18218                           
 18219                           ;memory.c: 192: NVMCON1bits.WR = 1;
 18220  0951  149E               	bsf	30,1	;volsfr
 18221  0952                     i1l842:	
 18222                           ;memory.c: 195: {
 18223                           
 18224  0952  189E               	btfsc	30,1	;volsfr
 18225  0953  2955               	goto	u354_21
 18226  0954  2956               	goto	u354_20
 18227  0955                     u354_21:
 18228  0955  2952               	goto	i1l842
 18229  0956                     u354_20:
 18230  0956                     i1l844:
 18231                           
 18232                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 18233  0956  111E               	bcf	30,2	;volsfr
 18234  0957                     i1l4269:
 18235                           
 18236                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 18237  0957  0C79               	rrf	i1DATAEE_WriteByte@GIEBitValue,w
 18238  0958  1C03               	skipc
 18239  0959  138B               	bcf	11,7	;volatile
 18240  095A  1803               	skipnc
 18241  095B  178B               	bsf	11,7	;volatile
 18242  095C                     i1l845:
 18243  095C  0008               	return
 18244  095D                     __end_ofi1_DATAEE_WriteByte:
 18245                           
 18246                           	psect	text66
 18247  1789                     __ptext66:	
 18248 ;; *************** function _INT_ISR *****************
 18249 ;; Defined at:
 18250 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 18251 ;; Parameters:    Size  Location     Type
 18252 ;;		None
 18253 ;; Auto vars:     Size  Location     Type
 18254 ;;		None
 18255 ;; Return value:  Size  Location     Type
 18256 ;;                  1    wreg      void 
 18257 ;; Registers used:
 18258 ;;		wreg, status,2, status,0, pclath, cstack
 18259 ;; Tracked objects:
 18260 ;;		On entry : 0/0
 18261 ;;		On exit  : 0/0
 18262 ;;		Unchanged: 0/0
 18263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18268 ;;Total ram usage:        0 bytes
 18269 ;; Hardware stack levels used:    1
 18270 ;; Hardware stack levels required when called:    2
 18271 ;; This function calls:
 18272 ;;		_INT_CallBack
 18273 ;; This function is called by:
 18274 ;;		_INTERRUPT_InterruptManager
 18275 ;; This function uses a non-reentrant model
 18276 ;;
 18277                           
 18278                           
 18279                           ;psect for function _INT_ISR
 18280  1789                     _INT_ISR:
 18281  1789                     i1l4765:	
 18282                           ;incstack = 0
 18283                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 18284                           
 18285                           
 18286                           ;ext_int.c: 34: (PIR0bits.INTF = 0);
 18287  1789  002E               	movlb	14	; select bank14
 18288  178A  100C               	bcf	12,0	;volatile
 18289  178B                     i1l4767:
 18290                           
 18291                           ;ext_int.c: 37: INT_CallBack();
 18292  178B  3197  27E6  3197   	fcall	_INT_CallBack
 18293  178E                     i1l1360:
 18294  178E  0008               	return
 18295  178F                     __end_of_INT_ISR:
 18296                           
 18297                           	psect	text67
 18298  17E6                     __ptext67:	
 18299 ;; *************** function _INT_CallBack *****************
 18300 ;; Defined at:
 18301 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 18302 ;; Parameters:    Size  Location     Type
 18303 ;;		None
 18304 ;; Auto vars:     Size  Location     Type
 18305 ;;		None
 18306 ;; Return value:  Size  Location     Type
 18307 ;;                  1    wreg      void 
 18308 ;; Registers used:
 18309 ;;		wreg, status,2, status,0, pclath, cstack
 18310 ;; Tracked objects:
 18311 ;;		On entry : 0/0
 18312 ;;		On exit  : 0/0
 18313 ;;		Unchanged: 0/0
 18314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18319 ;;Total ram usage:        0 bytes
 18320 ;; Hardware stack levels used:    1
 18321 ;; Hardware stack levels required when called:    1
 18322 ;; This function calls:
 18323 ;;		Absolute function
 18324 ;;		_INT_DefaultInterruptHandler
 18325 ;;		_S1_ISR
 18326 ;; This function is called by:
 18327 ;;		_INT_ISR
 18328 ;; This function uses a non-reentrant model
 18329 ;;
 18330                           
 18331                           
 18332                           ;psect for function _INT_CallBack
 18333  17E6                     _INT_CallBack:
 18334  17E6                     i1l4729:	
 18335                           ;incstack = 0
 18336                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 18337                           
 18338                           
 18339                           ;ext_int.c: 44: if(INT_InterruptHandler)
 18340  17E6  0021               	movlb	1	; select bank1
 18341  17E7  0831               	movf	_INT_InterruptHandler^(0+128),w
 18342  17E8  0432               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
 18343  17E9  1903               	btfsc	3,2
 18344  17EA  2FEC               	goto	u419_21
 18345  17EB  2FED               	goto	u419_20
 18346  17EC                     u419_21:
 18347  17EC  2FF2               	goto	i1l1364
 18348  17ED                     u419_20:
 18349  17ED                     i1l4731:
 18350                           
 18351                           ;ext_int.c: 45: {;ext_int.c: 46: INT_InterruptHandler();
 18352  17ED  0832               	movf	(_INT_InterruptHandler+1)^(0+128),w
 18353  17EE  008A               	movwf	10
 18354  17EF  0831               	movf	_INT_InterruptHandler^(0+128),w
 18355  17F0  000A               	callw
 18356  17F1  3197               	pagesel	$
 18357  17F2                     i1l1364:
 18358  17F2  0008               	return
 18359  17F3                     __end_of_INT_CallBack:
 18360                           
 18361                           	psect	text68
 18362  176D                     __ptext68:	
 18363 ;; *************** function _INT_DefaultInterruptHandler *****************
 18364 ;; Defined at:
 18365 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 18366 ;; Parameters:    Size  Location     Type
 18367 ;;		None
 18368 ;; Auto vars:     Size  Location     Type
 18369 ;;		None
 18370 ;; Return value:  Size  Location     Type
 18371 ;;                  1    wreg      void 
 18372 ;; Registers used:
 18373 ;;		None
 18374 ;; Tracked objects:
 18375 ;;		On entry : 0/0
 18376 ;;		On exit  : 0/0
 18377 ;;		Unchanged: 0/0
 18378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18383 ;;Total ram usage:        0 bytes
 18384 ;; Hardware stack levels used:    1
 18385 ;; This function calls:
 18386 ;;		Nothing
 18387 ;; This function is called by:
 18388 ;;		_EXT_INT_Initialize
 18389 ;;		_INT_CallBack
 18390 ;; This function uses a non-reentrant model
 18391 ;;
 18392                           
 18393                           
 18394                           ;psect for function _INT_DefaultInterruptHandler
 18395  176D                     _INT_DefaultInterruptHandler:
 18396  176D                     i1l1370:	
 18397                           ;incstack = 0
 18398                           ; Regs used in _INT_DefaultInterruptHandler: []
 18399                           
 18400  176D  0008               	return
 18401  176E                     __end_of_INT_DefaultInterruptHandler:
 18402                           
 18403                           	psect	text69
 18404  0AFE                     __ptext69:	
 18405 ;; *************** function _S1_ISR *****************
 18406 ;; Defined at:
 18407 ;;		line 619 in file "main.c"
 18408 ;; Parameters:    Size  Location     Type
 18409 ;;		None
 18410 ;; Auto vars:     Size  Location     Type
 18411 ;;		None
 18412 ;; Return value:  Size  Location     Type
 18413 ;;                  1    wreg      void 
 18414 ;; Registers used:
 18415 ;;		wreg, status,2, status,0
 18416 ;; Tracked objects:
 18417 ;;		On entry : 0/0
 18418 ;;		On exit  : 0/0
 18419 ;;		Unchanged: 0/0
 18420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18423 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18424 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18425 ;;Total ram usage:        1 bytes
 18426 ;; Hardware stack levels used:    1
 18427 ;; This function calls:
 18428 ;;		Nothing
 18429 ;; This function is called by:
 18430 ;;		_main
 18431 ;;		_INT_CallBack
 18432 ;; This function uses a non-reentrant model
 18433 ;;
 18434                           
 18435                           
 18436                           ;psect for function _S1_ISR
 18437  0AFE                     _S1_ISR:
 18438  0AFE                     i1l4225:	
 18439                           ;incstack = 0
 18440                           ; Regs used in _S1_ISR: [wreg+status,2+status,0]
 18441                           
 18442                           
 18443                           ;main.c: 621: if(mode == 0 && (clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigger
      +                          )){
 18444  0AFE  0020               	movlb	0	; select bank0
 18445  0AFF  085A               	movf	_mode,w
 18446  0B00  045B               	iorwf	_mode+1,w
 18447  0B01  1D03               	btfss	3,2
 18448  0B02  2B04               	goto	u347_21
 18449  0B03  2B05               	goto	u347_20
 18450  0B04                     u347_21:
 18451  0B04  2B18               	goto	i1l4235
 18452  0B05                     u347_20:
 18453  0B05                     i1l4227:
 18454  0B05  0850               	movf	_clkAlarm+3,w
 18455  0B06  1D03               	btfss	3,2
 18456  0B07  2B09               	goto	u348_21
 18457  0B08  2B0A               	goto	u348_20
 18458  0B09                     u348_21:
 18459  0B09  2B14               	goto	i1l4233
 18460  0B0A                     u348_20:
 18461  0B0A                     i1l4229:
 18462  0B0A  0855               	movf	_tempAlarm+1,w
 18463  0B0B  1D03               	btfss	3,2
 18464  0B0C  2B0E               	goto	u349_21
 18465  0B0D  2B0F               	goto	u349_20
 18466  0B0E                     u349_21:
 18467  0B0E  2B14               	goto	i1l4233
 18468  0B0F                     u349_20:
 18469  0B0F                     i1l4231:
 18470  0B0F  0852               	movf	_lumAlarm+1,w
 18471  0B10  1903               	btfsc	3,2
 18472  0B11  2B13               	goto	u350_21
 18473  0B12  2B14               	goto	u350_20
 18474  0B13                     u350_21:
 18475  0B13  2B18               	goto	i1l4235
 18476  0B14                     u350_20:
 18477  0B14                     i1l4233:
 18478                           
 18479                           ;main.c: 622: clkAlarm.trigger = 0;
 18480  0B14  01D0               	clrf	_clkAlarm+3
 18481                           
 18482                           ;main.c: 623: tempAlarm.trigger = 0;
 18483  0B15  01D5               	clrf	_tempAlarm+1
 18484                           
 18485                           ;main.c: 624: lumAlarm.trigger = 0;
 18486  0B16  01D2               	clrf	_lumAlarm+1
 18487                           
 18488                           ;main.c: 625: } else{
 18489  0B17  2B36               	goto	i1l1325
 18490  0B18                     i1l4235:
 18491                           
 18492                           ;main.c: 626: if(mode == 1){
 18493  0B18  035A               	decf	_mode,w
 18494  0B19  045B               	iorwf	_mode+1,w
 18495  0B1A  1D03               	btfss	3,2
 18496  0B1B  2B1D               	goto	u351_21
 18497  0B1C  2B1E               	goto	u351_20
 18498  0B1D                     u351_21:
 18499  0B1D  2B32               	goto	i1l4241
 18500  0B1E                     u351_20:
 18501  0B1E                     i1l4237:
 18502                           
 18503                           ;main.c: 627: editingClockAlarm++;
 18504  0B1E  3001               	movlw	1
 18505  0B1F  07DC               	addwf	_editingClockAlarm,f
 18506  0B20  3000               	movlw	0
 18507  0B21  3DDD               	addwfc	_editingClockAlarm+1,f
 18508                           
 18509                           ;main.c: 628: if(editingClockAlarm > 3){
 18510  0B22  085D               	movf	_editingClockAlarm+1,w
 18511  0B23  3A80               	xorlw	128
 18512  0B24  00F0               	movwf	??_S1_ISR
 18513  0B25  3080               	movlw	128
 18514  0B26  0270               	subwf	??_S1_ISR,w
 18515  0B27  1D03               	skipz
 18516  0B28  2B2B               	goto	u352_25
 18517  0B29  3004               	movlw	4
 18518  0B2A  025C               	subwf	_editingClockAlarm,w
 18519  0B2B                     u352_25:
 18520  0B2B  1C03               	skipc
 18521  0B2C  2B2E               	goto	u352_21
 18522  0B2D  2B2F               	goto	u352_20
 18523  0B2E                     u352_21:
 18524  0B2E  2B36               	goto	i1l1325
 18525  0B2F                     u352_20:
 18526  0B2F                     i1l4239:
 18527                           
 18528                           ;main.c: 629: editingClockAlarm = 0;
 18529  0B2F  0020               	movlb	0	; select bank0
 18530  0B30  01DC               	clrf	_editingClockAlarm
 18531  0B31  01DD               	clrf	_editingClockAlarm+1
 18532  0B32                     i1l4241:
 18533                           
 18534                           ;main.c: 630: mode++;
 18535  0B32  3001               	movlw	1
 18536  0B33  07DA               	addwf	_mode,f
 18537  0B34  3000               	movlw	0
 18538  0B35  3DDB               	addwfc	_mode+1,f
 18539  0B36                     i1l1325:
 18540  0B36  0008               	return
 18541  0B37                     __end_of_S1_ISR:
 18542  007E                     btemp	set	126	;btemp
 18543  007E                     int$flags	set	126
 18544  007E                     wtemp0	set	126
 18545                           
 18546                           	psect	config
 18547                           
 18548                           ;Config register CONFIG1 @ 0x8007
 18549                           ;	External Oscillator mode selection bits
 18550                           ;	FEXTOSC = OFF, Oscillator not enabled
 18551                           ;	Power-up default value for COSC bits
 18552                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 18553                           ;	Clock Out Enable bit
 18554                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 18555                           ;	Clock Switch Enable bit
 18556                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 18557                           ;	Fail-Safe Clock Monitor Enable bit
 18558                           ;	FCMEN = ON, FSCM timer enabled
 18559  8007                     	org	32775
 18560  8007  3FEC               	dw	16364
 18561                           
 18562                           ;Config register CONFIG2 @ 0x8008
 18563                           ;	Master Clear Enable bit
 18564                           ;	MCLRE = ON, MCLR pin is Master Clear function
 18565                           ;	Power-up Timer Enable bit
 18566                           ;	PWRTE = OFF, PWRT disabled
 18567                           ;	Low-Power BOR enable bit
 18568                           ;	LPBOREN = OFF, ULPBOR disabled
 18569                           ;	Brown-out reset enable bits
 18570                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 18571                           ;	Brown-out Reset Voltage Selection
 18572                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 18573                           ;	Zero-cross detect disable
 18574                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 18575                           ;	Peripheral Pin Select one-way control
 18576                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 18577                           ;	Stack Overflow/Underflow Reset Enable bit
 18578                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 18579                           ;	Background Debugger
 18580                           ;	DEBUG = OFF, Background Debugger disabled
 18581  8008                     	org	32776
 18582  8008  3FFF               	dw	16383
 18583                           
 18584                           ;Config register CONFIG3 @ 0x8009
 18585                           ;	WDT Period Select bits
 18586                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 18587                           ;	WDT operating mode
 18588                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 18589                           ;	WDT Window Select bits
 18590                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 18591                           ;	WDT input clock selector
 18592                           ;	WDTCCS = SC, Software Control
 18593  8009                     	org	32777
 18594  8009  3F9F               	dw	16287
 18595                           
 18596                           ;Config register CONFIG4 @ 0x800A
 18597                           ;	UserNVM self-write protection bits
 18598                           ;	WRT = OFF, Write protection off
 18599                           ;	Scanner Enable bit
 18600                           ;	SCANE = available, Scanner module is available for use
 18601                           ;	Low Voltage Programming Enable bit
 18602                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 18603  800A                     	org	32778
 18604  800A  3FFF               	dw	16383
 18605                           
 18606                           ;Config register CONFIG5 @ 0x800B
 18607                           ;	UserNVM Program memory code protection bit
 18608                           ;	CP = OFF, Program Memory code protection disabled
 18609                           ;	DataNVM code protection bit
 18610                           ;	CPD = OFF, Data EEPROM code protection disabled
 18611  800B                     	org	32779
 18612  800B  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    10
    Data        7
    BSS         36
    Persistent  46
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      80
    BANK1            80     17      39
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), S1_ISR(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), S1_ISR(), Absolute function(), 

    differenceBetweenTimePeriod@diff	PTR struct Time size(1) Largest target is 3
		 -> menuLCD_ISR@diff(BANK0[3]), 

    LCDstr@p	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR5_ISR->_monitoring_ISR
    _monitoring_ISR->i1_DATAEE_WriteByte
    _tsttc->i1_WriteI2C
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->i1_LCDsend2x4
    _LCDcmd->i1_LCDsend2x4
    i1_LCDsend2x4->i1_WriteI2C
    _TMR1_ISR->_Clock_ISR
    _Clock_ISR->i1_DATAEE_WriteByte
    i1_DATAEE_WriteByte->___wmul
    _INT_CallBack->_S1_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR3_ISR->_menuLCD_ISR
    _menuLCD_ISR->_sprintf

Critical Paths under _main in BANK1

    _main->_LCDinit
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    7733
                                              9 BANK1      8     8      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
            _INT_SetInterruptHandler
                            _LCDinit
                 _PWM6_LoadDutyValue
              _PWM_Output_D4_Disable
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                     _TMR2_StopTimer
           _TMR3_SetInterruptHandler
           _TMR5_SetInterruptHandler
                          _editClock
                            _editLum
                           _editTemp
                   _i2c1_driver_open
                       _toggleAlarms
 ---------------------------------------------------------------------------------
 (1) _toggleAlarms                                         1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _editTemp                                             1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editLum                                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editClock                                            1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StopTimer                                       0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (2) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     696
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0     174
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     174
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Output_D4_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     220
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     780
                                              8 BANK1      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend2x4                                           6     5      1     736
                                              2 BANK1      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK1      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     4     1      3    4017
                                              0 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      2     0      2    1184
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    9775
                            _INT_ISR
                           _TMR1_ISR
                           _TMR3_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR5_ISR                                             0     0      0    2511
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                     _monitoring_ISR *
 ---------------------------------------------------------------------------------
 (6) _monitoring_ISR                                       3     3      0    2271
                                             10 COMMON     3     3      0
           _ADCC_GetSingleConversion
                             ___wmul
                              _tsttc
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (7) _tsttc                                                2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (6) _TMR5_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR5_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0    5999
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
                        _menuLCD_ISR *
 ---------------------------------------------------------------------------------
 (6) _menuLCD_ISR                                         24    24      0    5759
                                             21 BANK0     24    24      0
                            _LCDchar
                             _LCDcmd
                             _LCDstr
               _PWM_Output_D4_Enable
                    _TMR2_StartTimer
        _differenceBetweenTimePeriod
                            _sprintf
               i1_PWM6_LoadDutyValue
            i1_PWM_Output_D4_Disable
                   i1_TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (7) i1_TMR2_StopTimer                                     0     0      0       0
                        i1_TMR2_Stop
 ---------------------------------------------------------------------------------
 (8) i1_TMR2_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM_Output_D4_Disable                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM6_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             29    21      8    3411
                                              0 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    1156
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _differenceBetweenTimePeriod                          8     1      7     595
                                              0 COMMON     8     1      7
 ---------------------------------------------------------------------------------
 (7) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (8) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PWM_Output_D4_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LCDstr                                               3     3      0     550
                                              9 COMMON     3     3      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (8) _LCDchar                                              1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (7) _LCDcmd                                               1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (9) i1_LCDsend2x4                                         6     5      1     384
                                              2 COMMON     6     5      1
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) i1_WriteI2C                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _TMR3_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0    1265
                   Absolute function *
                          _Clock_ISR *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Clock_ISR                                            1     1      0    1025
                                             10 COMMON     1     1      0
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (7) i1_DATAEE_WriteByte                                   4     1      3    1025
                                              6 COMMON     4     1      3
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0       0
                   Absolute function *
        _INT_DefaultInterruptHandler *
                             _S1_ISR *
 ---------------------------------------------------------------------------------
 (7) _S1_ISR                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _INT_SetInterruptHandler
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _PWM6_LoadDutyValue
   _PWM_Output_D4_Disable
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_StopTimer
     _TMR2_Stop
   _TMR3_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _editClock
   _editLum
   _editTemp
   _i2c1_driver_open
   _toggleAlarms

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _S1_ISR *
   _TMR1_ISR
     Absolute function(Fake) *
     _Clock_ISR *
       i1_DATAEE_WriteByte
         ___wmul (ARG)
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *
     _menuLCD_ISR *
       _LCDchar
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDcmd
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDstr
         _LCDchar
           i1_LCDsend2x4
             i1_WriteI2C
       _PWM_Output_D4_Enable
       _TMR2_StartTimer
         _TMR2_Start
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       i1_PWM6_LoadDutyValue
       i1_PWM_Output_D4_Disable
       i1_TMR2_StopTimer
         i1_TMR2_Stop
   _TMR5_ISR
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _monitoring_ISR *
       _ADCC_GetSingleConversion
       ___wmul
       _tsttc
         _ReadI2C
         i1_WriteI2C
       i1_DATAEE_WriteByte
         ___wmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     11      27       7       48.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      85      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      85      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Nov 03 22:52:36 2020

                                       _t 0057          __end_of_TMR5_SetInterruptHandler 17A7  
                              i1_WriteI2C 0BB2                                        l30 0D01  
                                      l33 0CC9                                        l42 0CEB  
                                      l35 0CCE                                        l47 0CFF  
                     ___wmul@multiplicand 0072                         ??_TMR5_WriteTimer 0072  
             __size_of_PWM6_LoadDutyValue 0019                                       l124 0BB1  
                                     l243 17E5                                       l182 17D0  
                                     l176 09F7                                       l179 17D9  
                                     l429 179A                                       l463 09B9  
                                     l731 17FF                                       l493 17A0  
                                     l717 17A6                                       l734 0924  
                                     l575 090B                                       l399 099A  
                                     l761 081F                                       l842 0A10  
                                     l844 0A14                                       l845 0A1B  
                                     l687 09D8                                       l848 082E  
                                     l776 1780                                       l779 0803  
                                     l998 0C0E                                       l999 0C10  
                                     _PR2 028D                           _timer1ReloadVal 00BB  
                 __size_of_PMD_Initialize 0008                           _TMR2_Initialize 0812  
                                     wreg 0009                               ?_LCDsend2x4 00A2  
                         __end_of_LCDchar 17C9                                      l1010 0C49  
                                    l1011 0C4B                                      l1100 0E4D  
                                    l1101 0E4F                                      l1014 0C4F  
                                    l1131 0EFE                                      l1115 0E9F  
                                    l1124 0EDF                                      l1134 0D77  
                                    l1127 0EF5                                      l1311 0A82  
                                    l1128 0EF7                                      l1305 0A42  
                                    l1315 0A95                                      l1308 0A6A  
                                    l1165 177D                                      l1341 0242  
                                    l1342 0245                                      l1271 0C50  
                                    l1343 0248                                      l4001 0CD3  
                                    l1290 0A46                                      l4011 0CF0  
                                    l1339 023E                           _timer3ReloadVal 006E  
                                    l1373 0811                                      l4007 0CD5  
                                    l1367 1794                                      l1287 0CA7  
                                    l1296 0A69                                      l4009 0CE0  
                                    l4017 1795                                      l5001 0A93  
                                    l4019 179B                                      l4035 17A1  
                                    l1299 0A1F                                      l4301 0B9E  
                                    l5101 01E8                                      l4311 0BAA  
                                    l4303 0BA0                                      l5111 0228  
                                    l5103 01F5                                      l4321 17D4  
                                    l4313 0BAC                                      l4305 0BA2  
                                    l4401 098C                                      l5121 022E  
                                    l5113 022A                                      l5105 0202  
                                    l4331 08F5                                      l4323 17D5  
                                    l4315 0BAE                                      l4307 0BA5  
                                    l4403 098E                                      l5131 0237  
                                    l5123 0231                                      l5115 022B  
                                    l5107 020F                                      l5051 0078  
                                    l4501 0EE6                                      l4333 0907  
                                    l4245 178F                                      l4325 17D8  
                                    l4309 0BA7                                      l4317 17C9  
                                    l4405 098F                                      l4341 09A0  
                                    l5133 023A                                      l5125 0233  
                                    l5117 022C                                      l5109 021C  
                                    l5061 00A3                                      l5053 007B  
                                    l4503 0EFB                                      l4335 0909  
                                    l4319 17D1                                      l4327 17F3  
                                    l4407 0997                                      l4351 09AE  
                                    l4343 09A2                                      l5135 023B  
                                    l5127 0234                                      l5119 022D  
                                    l5071 00B5                                      l5063 00AF  
                                    l5055 009E                                      l4281 0B7F  
                                    l4273 0B73                                      l4329 17FA  
                                    l4353 09B6                                      l4345 09A4  
                                    l4337 099B                                      l4361 09C1  
                                    l5137 023F                                      l5129 0236  
                                    l5073 00CD                                      l5065 00B1  
                                    l5081 00EE                                      l5057 00A0  
                                    l5049 006E                                      l4291 0B8A  
                                    l4283 0B81                                      l4275 0B79  
                                    l4347 09AB                                      l4339 099E  
                                    l4371 09D5                                      l4363 09C3  
                                    l4355 09BA                                      l4451 177E  
                                    l5139 024B                                      l5091 01A8  
                                    l5083 00F4                                      l5075 00D1  
                                    l5059 00A2                                      l4461 0C27  
                                    l4453 0BFF                                      l4293 0B8C  
                                    l4285 0B83                                      l4277 0B7B  
                                    l4381 081A                                      l4373 0812  
                                    l4349 09AD                                      l4365 09CA  
                                    l4357 09BD                                      l5165 0251  
                                    l5093 01B4                                      l5085 00F9  
                                    l5077 00DE                                      l4463 0C36  
                                    l4455 0BFF                                      l4471 0E3E  
                                    l4295 0B98                                      l4287 0B86  
                                    l4279 0B7D                                      l4391 097C  
                                    l4383 081C                                      l4375 0815  
                                    l4367 09CC                                      l4359 09BF  
                                    l5095 01C1                                      l5087 0191  
                                    l5079 00EC                                      l4801 0A04  
                                    l4465 0C3A                                      l4457 0C14  
                                    l4481 0E7B                                      l4473 0E53  
                         __end_of_LCDinit 0D78                                      l4385 0804  
                                    l4297 0B9A                                      l4289 0B88  
                                    l4393 097F                                      l4377 0816  
                                    l4369 09CD                                      l5097 01CE  
                                    l5089 019D                                      l4811 0A0D  
                                    l4803 0A08                                      l4459 0C23  
                                    l4491 0EB5                                      l4483 0E8A  
                                    l4475 0E62                                      l4467 0E2D  
                                    l4387 0807                                      l4299 0B9C  
                                    l4395 0981                                      l4379 0819  
                                    l5099 01DB                                      l4821 0828  
                                    l4813 0A0F                                      l4805 0A09  
                                    l4493 0EBB                                      l4485 0E90  
                                    l4477 0E66                                      l4469 0E32  
                                    l4901 0D0B                                      l4389 080F  
                                    l4397 0983                                      l4741 09E5  
                                    l4733 09D9                                      l4823 0829  
                                    l4815 0A15                                      l4807 0A0A  
                                    l4495 0ECA                                      l4487 0E9F  
                                    l4479 0E75                                      l4911 0D2B  
                                    l4903 0D0F                                      l4399 0985  
                                    l4751 09F4                                      l4743 09E8  
                                    l4735 09DC                                      l4825 082A  
                                    l4817 0820                                      l4809 0A0B  
                                    l4497 0ED0                                      l4489 0EA6  
                                    l4921 0D4F                                      l4913 0D33  
                                    l4905 0D17                                      l4745 09EB  
                                    l4737 09DF                                      l4753 17DA  
                                    l4827 082B                                      l4819 0824  
                                    l4499 0EDF                                      l4931 0D6D  
                                    l4923 0D53                                      l4915 0D37  
                                    l4907 0D1B                                      l4747 09EE  
                                    l4739 09E2                                      l4755 17DF  
                                    l4829 082C                                      l4925 0D5B  
                                    l4917 0D3F                                      l4909 0D27  
                                    l4933 177B                                      l4749 09F1  
                                    l4941 0C63                                      l4757 17E0  
                                    l4927 0D61                                      l4919 0D43  
                                    l4951 0C80                                      l4943 0C6A  
                                    l4935 0C55                                      l4759 17E2  
                                    l4929 0D67                                      l4793 090C  
                                    l4953 0C87                                      l4945 0C71  
                                    l4937 0C5B                                      l4961 0C9E  
                                    l3995 0CB2                                      l3987 0CAA  
                                    l4795 0800                                      l4963 0CA5  
                                    l4955 0C8D                                      l4947 0C77  
                                    l4939 0C61                                      l4971 0A56  
                                    l4797 09F8                                      l3997 0CBC  
                                    l3989 0CAD                                      l4957 0C8F  
                                    l4949 0C79                                      l4981 0A23  
                                    l4973 0A57                                      l4965 0A43  
                                    l4799 0A00                                      l3999 0CC7  
                                    l4959 0C95                                      l4991 0A41  
                                    l4983 0A29                                      l4967 0A4A  
                                    l4975 0A60                                      l4985 0A2F  
                                    l4977 0A68                                      l4969 0A50  
                                    l4993 0A6F                                      l4899 0D02  
                                    l4987 0A30                                      l4979 0A1C  
                                    l4995 0A75                                      l4989 0A39  
                                    l4997 0A7C                                      l4999 0A8B  
                                    _ALAF 0065                           __end_of_LCDsend 0C50  
                                    STR_1 1000                                      STR_2 1000  
                                    STR_3 180A                                      STR_4 180A  
                                    STR_5 1811                                      STR_6 1811  
                                    _LATA 0016                                      _LATB 0017  
                         __end_of_INT_ISR 178F                                      _LATC 0018  
                                    _LATD 0019                                      _LATE 001A  
                                    u4200 17DF                                      u4201 17DE  
                                    _T2PR 028D                                      u5007 0D74  
                                    u3600 0C23                                      u3601 0C22  
                                    u5017 0EFC                                      u4250 0A14  
                                    u3610 0C36                                      u4251 0A13  
                                    u3611 0C35                                      u3620 0C49  
                                    u3700 0E9F                                      u3621 0C48  
                                    u3701 0E9E                                      u4245 091D  
                                    u2910 0CB1                                      u3630 0C4F  
                                    u3710 0EB5                                      u2911 0CB0  
                                    u3631 0C4E                                      u3711 0EB4  
                                    u2920 0CBC                                      u3720 0ECA  
                                    u4600 0CA5                                      u2921 0CBB  
                                    u3721 0EC9                                      u4601 0CA4  
                                    u2930 0CC7                                      u3730 0EDF  
                                    u3650 0E4D                                      u4530 0C55  
                                    u4610 0A4A                                      u2931 0CC6  
                                    u3731 0EDE                                      u3651 0E4C  
                                    u4531 0C54                                      u4611 0A49  
                                    u2940 0CCE                                      u3580 0C0E  
                                    u3740 0EF5                                      u3660 0E53  
                                    u4540 0C5B                                      u4620 0A56  
                                    _PMD0 0796                                      u2941 0CCD  
                                    u3581 0C0D                                      u3741 0EF4  
                                    u3661 0E52                                      u3645 0E35  
                                    u4541 0C5A                                      u4621 0A55  
                                    _PMD1 0797                                      i1l30 0BFC  
                                    i1l22 0938                                      u2950 0CD3  
                                    u3590 0C14                                      u3750 0EFB  
                                    u3670 0E62                                      u4550 0C61  
                                    u4630 0A68                                      _PMD2 0798  
                                    i1l23 0939                                      u2951 0CD2  
                                    u3591 0C13                                      u3751 0EFA  
                                    u3671 0E61                                      u4551 0C60  
                                    u4631 0A67                                      _PMD3 0799  
                                    u2960 0CE0                                      u3680 0E75  
                                    u4560 0C71                                      u4640 0A23  
                                    _PMD4 079A                                      i1l33 0BCE  
                                    u2961 0CDF                                      u3681 0E74  
                                    u4561 0C70                                      u4641 0A22  
                                    _PMD5 079B                                      i1l42 0BEC  
                                    i1l26 093E                                      u2970 0CEB  
                                    u3690 0E8A                                      u4570 0C77  
                                    u4650 0A2F                                      i1l35 0BD3  
                                    u2971 0CEA                                      u3691 0E89  
                                    u4571 0C76                                      u4651 0A2E  
                                    u2980 0CF0                                      u4580 0C87  
                                    u4660 0A41                                      u4820 00AF  
                                    u2981 0CEF                                      u4581 0C86  
                                    u4661 0A40                                      u4821 00AE  
                                    u2990 0CFF                                      u4590 0C8D  
                                    u4670 0A6F                                      u4830 00DE  
                                    i1l47 0BFB                                      u2991 0CFE  
                                    u4591 0C8C                                      u4671 0A6E  
                                    u4831 00DD                                      u4680 0A75  
                                    u4840 00EC                                      u4681 0A74  
                                    u4841 00EB                                      u4690 0A93  
                                    u4850 00F4                                      u4907 0C99  
                                    u4691 0A92                                      u4851 00F3  
                                    u4835 00DA                                      u4860 00F9  
                                    u4917 0D06                                      u4861 00F8  
                                    _TALA 0066                                      u4927 0D14  
                                    u4937 0D1C                                      u4947 0D28  
                                    u4957 0D30                                      u4877 0A86  
                                    u4967 0D3C                                      u4887 0A5B  
                                    u4977 0D44                                      u4897 0A34  
                                    _NREG 00C6                                      u4987 0D50  
                                    u4997 0D58                                      _PMON 00C5  
                                    _TMR2 028C                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                             main@notInit 00AD                              ?_menuLCD_ISR 0070  
                                    _main 006E                                      _mode 005A  
                                    _temp 0063                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
     __end_of_INT_DefaultInterruptHandler 176E               _INT_DefaultInterruptHandler 176D  
                                    start 004C                           _timer5ReloadVal 00B5  
                         _TMR3_Initialize 099B           __end_of_INT_SetInterruptHandler 1795  
              ??_TMR1_SetInterruptHandler 00A2                           __end_of_ReadI2C 093F  
               __size_of_DATAEE_WriteByte 0024            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 17DA                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                __end_of_i2c1_driver_open 17E6                                     ?_main 0070  
                                   _ADCLK 0098                                     _ADCNT 010C  
                                   _ADPCH 009E                                     _ADREF 009A  
                                   _ADPRE 009C                                     _ADRPT 010D  
                                   _T1CLK 0211                                     _T1CON 020E  
                                   _T3CLK 0217                                     _T2CON 028E  
                                   _T3CON 0214                                     _T5CLK 021D  
                                   _T2HLT 028F                                     _T5CON 021A  
                         __end_of___lwdiv 0B73                                     _T2TMR 028C  
                                   _T2RST 0291                                     i1l413 083F  
                                   i1l432 176E                           __end_of___lwmod 0AFE  
                                   i1l361 003B                                     i1l426 08C6  
                                   i1l362 004A                                     i1l354 0013  
                                   i1l363 0044                                     i1l701 0861  
                                   i1l357 0023                                     i1l359 002F  
                                   i1l720 0003                                     i1l368 004A  
                                   i1l490 08DD                                     i1l714 08F4  
                                   i1l477 0850                                     i1l734 08AF  
                                   i1l590 0885                                     i1l496 0002  
                                   i1l842 0952                                     i1l770 1774  
                                   i1l922 06FF                                     i1l587 087C  
                                   i1l923 0700                                     i1l844 0956  
                                   i1l845 095C                                     i1l773 1784  
                                   i1l934 072F                                     i1l935 0730  
                                   i1l919 06F3                                     i1l776 177A  
                                   i1l960 0787                                     i1l952 0772  
                                   i1l953 0773                                     i1l946 0761  
                                   i1l779 1788                                     i1l971 07B6  
                                   i1l955 0777                                     i1l947 0763  
                                   i1l972 07B7                                     i1l990 07FA  
                                   i1l983 07E8                                     i1l959 0786  
                                   i1l984 07EA                                     i1l993 07FF  
                                   i1l989 07F9                                     _OSCEN 0891  
                                   _TMR1H 020D                                     _TMR1L 020C  
                                   _TMR3H 0213                                     _TMR3L 0212  
                                   _TMR5H 0219                                     _TMR5L 0218  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                                     _WPUC3 7A7B  
                                   _WPUC4 7A7C                           __end_of_editLum 0A43  
                         _PWM6_Initialize 17F3         __size_of_TMR3_SetInterruptHandler 0006  
               ?_TMR3_SetInterruptHandler 00A0                  __end_ofi1_TMR2_StopTimer 1789  
                        __end_of_TMR1_ISR 08C7                          __end_of_TMR3_ISR 08DE  
                        __end_of_TMR5_ISR 08F5                           _DATAEE_ReadByte 0820  
          ??_TMR3_DefaultInterruptHandler 0070                           __end_of_dpowers 180A  
                      __size_of_TMR2_Stop 0003                               ?_TMR2_Start 0070  
                         __end_of_isdigit 0874                                     main@i 00AF  
                                   _tsttc 06F3                   __end_of_TMR1_Initialize 099B  
                                   pclath 000A                            menuLCD_ISR@str 003B  
                                   status 0003                                     wtemp0 007E  
                         __end_of_sprintf 05D5                    ??_PWM_Output_D4_Enable 0070  
                         _TMR2_StartTimer 1781                           _TMR1_WriteTimer 082F  
                         _TMR5_Initialize 09BA                           __initialization 004E  
                            ?i1_TMR2_Stop 0070                              __end_of_main 0264  
                             ?i1_WriteI2C 0070                       __size_of_LCDsend2x4 00D4  
                 __end_of_TMR2_Initialize 0820               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 00A9                  _TMR5_SetInterruptHandler 17A1  
                      __size_of_Clock_ISR 0101                     _TMR3_InterruptHandler 00B7  
        differenceBetweenTimePeriod@start 0070                                 ??_LCDchar 0078  
                               ??_LCDinit 00A8                                 ??_LCDsend 00A2  
                               ??_INT_ISR 0071                __end_ofi1_DATAEE_WriteByte 095D  
                                  _ADACCH 0091                                    _ADACCL 0090  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  _ADLTHH 010F                                    _ADLTHL 010E  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                                  _ADUTHL 0110                          __end_of_WriteI2C 0D02  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                                    _T1GATE 0210  
                                  _T1GCON 020F                                    ?_tsttc 0070  
                                  _T3GATE 0216                                    _T3GCON 0215  
                                  _T5GATE 021C                                    _T5GCON 021B  
                                  _RA6PPS 0F16                                    _RC3PPS 0F23  
                                  i1l1100 0D96                                    i1l1101 0D97  
                                  i1l1201 0FFF                   TMR1_WriteTimer@timerVal 0070  
                                  i1l1131 0E2A                                    i1l1115 0DDA  
                                  _RC4PPS 0F24                                    i1l1124 0E10  
                                  i1l1140 17C8                                    i1l1127 0E22  
                                  i1l1128 0E23                                    i1l1232 0413  
                                  i1l1216 0324                                    i1l1137 17B9  
                                  i1l1225 038F                                    i1l1146 0899  
                                  i1l1162 1771                                    i1l1242 0437  
                                  i1l1219 0374                                    i1l1325 0B36  
                                  i1l2029 0873                                    i1l1165 1777  
                                  i1l1159 0AC9                                    i1l1360 178E  
                                  _ODCONA 0F3A                                    i1l1370 176D  
                                  _ODCONB 0F45                                    _ODCONC 0F50  
                                  i1l1364 17F2                                    i1l1268 06F2  
                                  _ODCOND 0F5B                                    i1l4101 0A97  
                                  i1l4021 0875                                    _ODCONE 0F66  
                                  i1l4111 0AB9                                    i1l4103 0A9D  
                                  i1l4031 0881                                    i1l4023 0878  
                                  i1l4113 176F                                    i1l4105 0AA3  
                                  i1l4201 0561                                    i1l1537 0455  
                                  i1l4121 044C                                    i1l4025 0879  
                                  i1l4041 0704                                    i1l4107 0AAD  
                                  i1l4211 0581                                    i1l4203 056B  
                                  i1l1555 0508                                    i1l4131 0463  
                                  i1l4123 0451                                    i1l4115 043A  
                                  i1l4027 087A                                    i1l4051 0734  
                                  i1l4043 070F                                    i1l5011 000F  
                                  i1l1572 05D4                                    i1l4037 1781  
                                  i1l4109 0AB3                                    i1l4213 05A8  
                                  i1l4205 0571                                    i1l4221 05D0  
                                  i1l4141 0496                                    i1l4133 046F  
                                  i1l4125 0456                                    i1l4117 043F  
                                  i1l4029 087B                                    i1l4061 0767  
                                  i1l4053 073F                                    i1l4045 0713  
                                  i1l5021 002B                                    i1l5013 0017  
                                  i1l4231 0B0F                                    i1l4215 05AF  
                                  i1l4207 0578                                    i1l4151 04C5  
                                  i1l4135 0472                                    i1l4119 0445  
                                  i1l4071 07A6                                    i1l4063 077B  
                                  i1l4055 0743                                    i1l4047 071F  
                                  i1l4039 06F3                                    i1l5031 0048  
                                  i1l5023 0033                                    i1l5015 001B  
                                  i1l5007 0006                                    i1l1576 0967  
                                  i1l4241 0B32                                    i1l4233 0B14  
                                  i1l4225 0AFE                                    i1l4217 05B3  
                                  i1l4209 057C                                    i1l4153 04C9  
                                  i1l4137 0483                                    i1l4145 04A2  
                                  i1l4129 045A                                    i1l4081 07D6  
                                  i1l4073 07AA                                    i1l4065 078B  
                                  i1l4057 074F                                    i1l4049 0723  
                                  i1l5025 0037                                    i1l5017 001F  
                                  i1l5009 000B                                    i1l1578 097B  
                                  i1l4227 0B05                                    i1l4235 0B18  
                                  i1l4251 093F                                    i1l4411 0834  
                                  i1l4091 17B4                                    i1l4171 04FE  
                                  i1l4163 04D4                                    i1l4155 04CD  
                                  i1l4147 04BA                                    i1l4139 0492  
                                  i1l4219 05BC                                    i1l4083 07DC  
                                  i1l4075 07BB                                    i1l4067 0796  
                                  i1l4059 0755                                    i1l5027 003F  
                                  i1l5019 0027                   __end_of_TMR3_Initialize 09BA  
                                  i1l4237 0B1E                                    i1l4229 0B0A  
                                  i1l4261 094C                                    i1l4253 0946  
                                  i1l4421 083D                                    i1l4413 0835  
                                  i1l4093 0887                                    i1l4181 0523  
                                  i1l4173 0504                                    i1l4157 04D2  
                                  i1l4149 04C1                                    i1l4085 07EE  
                                  i1l4077 07C6                                    i1l4069 079A  
                                  i1l4239 0B2F                                    i1l4263 094D  
                                  i1l4255 0948                                    i1l4511 0F0F  
                                  i1l4415 0837                                    i1l4431 084A  
                                  i1l4423 0840                                    i1l4095 0888  
                                  i1l4191 0541                                    i1l4183 0529  
                                  i1l4175 0513                                    i1l4167 04EE  
                                  i1l4247 089A                                    i1l4271 1775  
                                  i1l4087 07FE                                    i1l4079 07CA  
                                  i1l1848 0B72                                    i1l4265 094F  
                                  i1l4257 094A                                    i1l4521 0F4B  
                                  i1l4513 0F1B                                    i1l4505 0EFF  
                                  i1l4417 0839                                    i1l4409 082F  
                                  i1l4425 0845                                    i1l4433 084C  
                                  i1l4097 088C                                    i1l4193 0545  
                                  i1l4185 0530                                    i1l4177 051C  
                                  i1l4169 04F8                                    i1l4249 1785  
                                  i1l4601 0313                                    i1l4441 0857  
                                  i1l1858 0AFD                                    i1l4267 0951  
                                  i1l4259 094B                                    i1l4531 0F87  
                                  i1l4523 0F57                                    i1l4515 0F27  
                                  i1l4507 0F0A                                    i1l4419 083B  
                                  i1l4435 084E                                    i1l4427 0846  
                                  i1l4099 0A96                                    i1l4187 0534  
                                  i1l4195 0550                                    i1l4179 051F  
                                  i1l4611 034F                                    i1l4603 0318  
                                  i1l4443 0859                                    i1l4269 0957  
                                  i1l4541 0FC4                                    i1l4533 0F93  
                                  i1l4525 0F63                                    i1l4517 0F33  
                                  i1l4509 0F0E                                    i1l4429 0848  
                                  i1l4197 0556                                    i1l4189 053A  
                                  i1l4621 0379                                    i1l4613 0355  
                                  i1l4605 0330                                    i1l4445 085B  
                                  i1l4437 0851                                    i1l3901 092F  
                                  i1l4701 06CE                                    i1l4551 0FD8  
                                  i1l4543 0FC5                                    i1l4535 0F9F  
                                  i1l4527 0F6F                                    i1l4519 0F3F  
                                  i1l3831 0BB3                                    i1l3911 0863  
                                  i1l4199 055D                                    i1l4631 0399  
                                  i1l4623 037F                                    i1l4615 0363  
                                  i1l4607 0343                                    i1l4439 0856  
                                  i1l4447 085D                                    i1l3903 093D  
                                  i1l4711 06D6                                    i1l4703 06D0  
                                  u300_20 0881                                    i1l4553 0FDE  
                                  i1l4561 0FF4                                    i1l4545 0FCB  
                                  i1l4529 0F7B                                    i1l4537 0FB9  
                                  i1l3841 0BC4                                    i1l3833 0BB6  
                                  i1l3913 0864                                    i1l4641 03C6  
                                  i1l4633 03A9                                    i1l4625 0382  
                                  i1l4617 0369                                    i1l4609 034A  
                                  i1l4449 085F                                    u300_21 0880  
                                  i1l4721 06EC                                    i1l4713 06DC  
                                  i1l4705 06D2                                    i1l4731 17ED  
                                  i1l4555 0FE4                                    i1l4547 0FCC  
                                  i1l4539 0FC0                                    i1l3843 0BCD  
                                  i1l3851 0BDA                                    i1l3907 1772  
                                  i1l3931 0971                                    i1l3923 095D  
                                  i1l3915 086A                                    i1l4651 03F6  
                                  i1l4643 03D6                                    i1l4635 03B8  
                                  i1l4619 036C                                    i1l4627 0386  
                                  i1l4571 02AA                                    i1l4563 0264  
                                  i1l4723 06EE                                    i1l4715 06E1  
                                  i1l4707 06D4                                    i1l4557 0FEA  
                                  i1l4549 0FD2                                    i1l3853 0BE3  
                                  i1l3845 0BD8                                    i1l3861 0D79  
                                  i1l3909 17C2                                    i1l3941 0B3F  
                                  i1l3933 0977                                    i1l3925 095F  
                                  i1l3917 0870                                    i1l4653 03FB  
                                  i1l4661 0414                                    i1l4645 03E5  
                                  i1l4637 03BC                                    i1l4629 0393  
                                  i1l4581 02CD                                    i1l4573 02AE  
                                  i1l4565 026B                                    i1l4717 06E6  
                                  i1l4725 06F0                                    i1l4709 06D5  
                                  i1l4559 0FEE                                    i1l3855 0BF0  
                                  i1l3839 0BBB                                    i1l3871 0DAA  
                                  i1l3863 0D7E                                    i1l3951 0B5E  
                                  i1l3943 0B42                                    i1l3927 0963  
                                  i1l3919 0872                                    i1l4671 0433  
                                  i1l4663 041B                                    i1l4655 0402  
                                  i1l4647 03E9                                    i1l4639 03C0  
                                  i1l4591 02F2                                    i1l4583 02D5  
                                  i1l4575 02B5                                    i1l4567 0289  
                                  i1l4727 06F1                                    i1l4719 06EA  
                                  u301_20 06FF                                    i1l4729 17E6  
                                  i1l3881 0DDA                                    i1l3873 0DB6  
                                  i1l3865 0D8A                                    i1l3953 0B62  
                                  i1l3945 0B47                                    i1l3937 0B37  
                                  i1l3929 096C                                    i1l4665 0420  
                                  i1l4657 0407                                    i1l4649 03F0  
                                  i1l4593 02FB                                    i1l4585 02DB  
                                  i1l4577 02BE                                    i1l4569 02A6  
                                  u301_21 06FE                                    i1l4681 0699  
                                  i1l4673 05D5                                    i1l3891 0E04  
                                  i1l3883 0DE0                                    i1l3875 0DBC  
                                  i1l3867 0D9B                                    i1l3955 0B63  
                                  i1l3947 0B4B                                    i1l3939 0B39  
                                  i1l3971 0ADC                                    i1l3963 0ACA  
                                  i1l4667 0427                                    i1l4659 040E  
                                  i1l4595 0303                                    i1l4587 02E4  
                                  i1l4579 02C4                                    i1l4683 069E  
                                  i1l4691 06B4                                    i1l4675 05EE  
                                  i1l4771 08E0                                    i1l4765 1789  
                                  i1l3893 0E10                                    i1l3885 0DEC  
                                  i1l3877 0DC8                                    i1l3869 0DA6  
                                  i1l3957 0B68                                    i1l3949 0B4F  
                                  i1l3973 0AE0                                    i1l3965 0AD0  
                                  i1l3981 0AF9                                    i1l4669 042C  
                                  i1l4597 0309                                    i1l4589 02EC  
                                  i1l4781 08D1                                    i1l4693 06BA  
                                  i1l4685 06A4                                    i1l4677 05FB  
                                  i1l4773 08E8                                    i1l4767 178B  
                                  i1l4791 08C1                                    i1l3895 0E16  
                                  i1l3887 0DF2                                    i1l3879 0DCE  
                                  i1l3959 0B6E                                    i1l3975 0AEA  
                                  i1l3967 0AD3                                    i1l4599 030E  
                                  i1l4783 08D8                                    i1l4695 06C0  
                                  i1l4687 06A5                                    i1l4679 0608  
                                  i1l4775 08EF                                    u310_20 0767  
                                  u302_20 0704                                    i1l4785 08B0  
                                  i1l3897 0E27                                    i1l3889 0DFE  
                                  i1l3977 0AEE                                    i1l3969 0AD8  
                                  i1l3985 1778                                    i1l4777 08C7  
                                  u310_21 0766                                    u302_21 0703  
                                  i1l4697 06C5                                    i1l4689 06AD  
                                  i1l4769 08DE                                    i1l4787 08B2  
                                  i1l3979 0AF3                                    i1l4779 08C9  
                                  i1l3899 0925                                    i1l4699 06CA  
                                  _S1_ISR 0AFE                                    i1l4789 08BA  
                                  u311_20 0772                                    u303_20 070F  
                                  u311_21 0771                                    u303_21 070E  
                                  u400_20 03C6                                    u320_20 07C6  
                                  u312_20 0777                                    u304_20 071F  
                                  u400_21 03C5                                    u320_21 07C5  
                                  u312_21 0776                                    u304_21 071E  
                                  u401_20 03F0                                    u321_20 07D6  
                                  u313_20 077B                                    u305_20 072F  
                                  u401_21 03EF                                    u321_21 07D5  
                                  u313_21 077A                                    u305_21 072E  
                                  _LCDcmd 17B3                                    u250_20 0BCD  
                                  u330_20 046F                                    u402_20 03F6  
                                  u322_20 07E8                                    u314_20 0786  
                                  u306_20 0734                                    u410_20 0608  
                                  u250_21 0BCC                                    u330_21 046E  
                                  u402_21 03F5                                    u322_21 07E7  
                                  u314_21 0785                                    u306_21 0733  
                                  u410_21 0607                                    u410_25 0604  
                                  u251_20 0BD3                                    u331_20 04A2  
                                  u403_20 0402                                    u323_20 07EE  
                                  u315_20 078B                                    u307_20 073F  
                                  u411_20 06A4                                    u251_21 0BD2  
                                  u331_21 04A1                                    u403_21 0401  
                                  u323_21 07ED                                    u315_21 078A  
                                  u307_21 073E                                    u411_21 06A3  
                                  u252_20 0BD8                                    u260_20 0DA6  
                                  u340_20 053A                                    u332_20 04C9  
                                  u404_20 040E                                    u324_20 07F9  
                                  u316_20 0796                                    u308_20 074F  
                                  u412_20 06BA                                    u252_21 0BD7  
                                  u260_21 0DA5                                    u340_21 0539  
                                  u332_21 04C8                                    u404_21 040D  
                                  u324_21 07F8                                    u316_21 0795  
                                  u308_21 074E                                    u412_21 06B9  
                                  u253_20 0BE3                                    u261_20 0DB6  
                                  u341_20 054F                                    u333_20 04ED  
                                  u405_20 041B                                    u325_20 07FE  
                                  u317_20 07A6                                    u309_20 0761  
                                  u413_20 06C0                                    u421_20 08EF  
                                  u253_21 0BE2                                    u261_21 0DB5  
                                  u341_21 054E                                    u333_21 04EC  
                                  u405_21 041A                                    u325_21 07FD  
                                  u317_21 07A5                                    u309_21 0760  
                                  u413_21 06BF                                    u421_21 08EE  
                                  u333_25 04E9                                    u350_20 0B14  
                                  u254_20 0BEC                                    u262_20 0DC8  
                                  u326_20 0899                                    u342_20 0556  
                                  u334_20 04F8                                    u406_20 0427  
                                  u422_20 08D8                                    u270_20 0938  
                                  u318_20 07B6                                    u414_20 06C5  
                                  u350_21 0B13                                    u254_21 0BEB  
                                  u262_21 0DC7                                    u326_21 0898  
                                  u342_21 0555                                    u334_21 04F7  
                                  u406_21 0426                                    u422_21 08D7  
                                  u270_21 0937                                    u318_21 07B5  
                                  u414_21 06C4                                    u502_27 0E28  
                                  u351_20 0B1E                                    u423_20 08C1  
                                  u255_20 0BF0                                    u263_20 0DDA  
                                  u327_20 0AA3                                    u343_20 056B  
                                  u335_20 04FE                                    u407_20 0433  
                                  u271_20 093D                                    u319_20 07BB  
                                  u415_20 06CA                                    u351_21 0B1D  
                                  u423_21 08C0                                    u255_21 0BEF  
                                  u263_21 0DD9                                    u327_21 0AA2  
                                  u343_21 056A                                    u335_21 04FD  
                                  u407_21 0432                                    u271_21 093C  
                                  u319_21 07BA                                    u415_21 06C9  
                                  u352_20 0B2F                                    u256_20 0BFB  
                                  u248_20 0BBA                                    u264_20 0DEC  
                                  u328_20 0AB9                                    u280_20 0B4F  
                                  u272_20 086A                                    u344_20 0571  
                                  u336_20 0504                                    u416_20 06DC  
                                  u352_21 0B2E                                    u256_21 0BFA  
                                  u248_21 0BB9                                    u264_21 0DEB  
                                  u328_21 0AB8                                    u280_21 0B4E  
                                  u272_21 0869                                    u344_21 0570  
                                  u336_21 0503                                    u416_21 06DB  
                                  _INTPPS 0E90                                    u352_25 0B2B  
                                  u408_25 05E5                                    u249_20 0BC4  
                                  u265_20 0DFE                                    u273_20 0870  
                                  u345_20 05BC                                    u337_20 0513  
                                  u329_20 0445                                    u417_20 06E1  
                                  u409_20 05FB                                    u249_21 0BC3  
                                  u265_21 0DFD                                    u273_21 086F  
                                  u345_21 05BB                                    u337_21 0512  
                                  u329_21 0444                                    u417_21 06E0  
                                  u409_21 05FA                                    u257_25 0D81  
                                  u281_25 0B50                                    u337_25 050F  
                                  u353_25 08A9                                    u409_25 05F7  
                                  u354_20 0956                                    u266_20 0E10  
                                  u258_20 0D96                                    u282_20 0B5E  
                                  u290_20 0AF9                                    u274_20 0963  
                                  u346_20 05D0                                    u338_20 0523  
                                  u418_20 06E6                                    u354_21 0955  
                                  u266_21 0E0F                                    u258_21 0D95  
                                  u282_21 0B5D                                    u290_21 0AF8  
                                  u274_21 0962                                    u346_21 05CF  
                                  u338_21 0522                                    u418_21 06E5  
                           main@corrupted 00AE                                    u282_25 0B5A  
                                  u347_20 0B05                                    u419_20 17ED  
                                  u355_20 0834                                    u267_20 0E22  
                                  u259_20 0D9B                                    u339_20 0529  
                                  u347_21 0B04                                    u419_21 17EC  
                                  u355_21 0833                                    u267_21 0E21  
                                  u259_21 0D9A                                    u339_21 0528  
                                  u283_25 0B64                                    u275_25 0968  
                                  u348_20 0B0A                                    u380_20 0FD8  
                                  u356_20 0845                                    u268_20 0E27  
                                  u284_20 0B6E                                    u348_21 0B09  
                                  u380_21 0FD7                                    u356_21 0844  
                                  u268_21 0E26                                    u284_21 0B6D  
                                  u276_25 096D                                    _LCDstr 0886  
                                  u349_20 0B0F                                    u381_20 0FDE  
                                  u285_20 0AD0                                    u277_20 0977  
                                  u357_20 0856                                    u269_20 092F  
                                  u349_21 0B0E                                    u381_21 0FDD  
                                  u285_21 0ACF                                    u277_21 0976  
                                  u357_21 0855                                    u269_21 092E  
                                  u382_20 0FE4                                    u278_20 0B3F  
                                  u390_20 02F2                                    u470_20 000B  
                                  u382_21 0FE3                                    u278_21 0B3E  
                                  u390_21 02F1                                    u470_21 000A  
                                  u286_25 0AD4                                    u383_20 0FEA  
                                  u287_20 0AE0                                    u391_20 0309  
                                  u471_20 000F                                    u383_21 0FE9  
                                  u287_21 0ADF                                    u391_21 0308  
                                  u471_21 000E                                    u279_25 0B43  
                                  u384_20 0FFD                                    u376_20 0F0A  
                                  u288_20 0AEA                                    u392_20 030E  
                                  u480_20 0043                                    u472_20 0017  
                                  u384_21 0FFA                                    u376_21 0F09  
                                  u288_21 0AE9                                    u392_21 030D  
                                  u480_21 0042                                    u472_21 0016  
                                  u288_25 0AE6                                    u377_20 0FC0  
                                  u393_20 0313                                    u481_20 0048  
                                  u473_20 001B                                    u377_21 0FBF  
                                  u393_21 0312                                    u481_21 0047  
                                  u473_21 001A                                    u385_24 0FFF  
                                  u289_25 0AEF                                    u378_20 0FCB  
                                  u394_20 0318                                    u386_20 026B  
                                  u474_20 001F                                    u378_21 0FCA  
                                  u394_21 0317                                    u386_21 026A  
                                  u474_21 001E                                    u379_20 0FD2  
                                  u395_20 034A                                    u387_20 02B5  
                                  u475_20 0027                                    u379_21 0FD1  
                                  u395_21 0349                                    u387_21 02B4  
                                  u475_21 0026                                    u396_20 034F  
                                  u388_20 02C4                                    u476_20 002B  
                                  u396_21 034E                                    u388_21 02C3  
                                  u476_21 002A                                    _OSCFRQ 0893  
                                  u397_20 0363                                    u389_20 02DB  
                                  u477_20 0033                                    u397_21 0362  
                                  u389_21 02DA                                    u477_21 0032  
                                  u397_25 035F                                    u398_20 0379  
                                  u478_20 0037                                    u398_21 0378  
                                  u478_21 0036                                    u399_20 0399  
                                  u479_20 003F                                    u399_21 0398  
                                  u479_21 003E                                    _PWM6EN 1C77  
                               ??_ReadI2C 0070                               LCDsend2x4@c 00A5  
                         _TMR3_WriteTimer 0840                          __end_of_editTemp 0A6A  
            __end_ofi1_PWM6_LoadDutyValue 08B0      __end_of_TMR1_DefaultInterruptHandler 176F  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 176E  
                            _CCPTMRS1bits 021F                             ?i1_LCDsend2x4 0072  
                                  ___wmul 095D                         __end_of_TMR2_Stop 1781  
                               ??___lwdiv 0074                                 ??___lwmod 007C  
                     __size_of_TMR2_Start 0003                   __end_of_PWM6_Initialize 1800  
                               ??_editLum 00A0                             ?_INT_CallBack 0070  
                 __end_of_DATAEE_ReadByte 082F                   __size_of_monitoring_ISR 011E  
                         _ADCC_Initialize 08F5                            _PMD_Initialize 17C9  
                               ??_isdigit 0070                  ?i1_PWM_Output_D4_Disable 0070  
                         menuLCD_ISR@diff 004A             i1DATAEE_WriteByte@GIEBitValue 0079  
       __size_of_ADCC_GetSingleConversion 0012          __size_of_INT_SetInterruptHandler 0006  
               ?_ADCC_GetSingleConversion 0070                   __end_of_TMR2_StartTimer 1785  
 INT_SetInterruptHandler@InterruptHandler 00A0  TMR5_SetInterruptHandler@InterruptHandler 00A0  
TMR3_SetInterruptHandler@InterruptHandler 00A0  TMR1_SetInterruptHandler@InterruptHandler 00A0  
                               ??_sprintf 0028                   __end_of_TMR1_WriteTimer 0840  
                 ??_PWM_Output_D4_Disable 00A0                       __size_ofi1_WriteI2C 004B  
                        ?_TMR1_Initialize 0070                   __end_of_TMR5_Initialize 09D9  
                       _SYSTEM_Initialize 09D9                   __end_of__initialization 006A  
                      ?_SYSTEM_Initialize 0070                         __end_of_Clock_ISR 1000  
                         _TMR5_WriteTimer 0851                      __size_of_menuLCD_ISR 01D4  
                          __pcstackCOMMON 0070                            ??i1_LCDsend2x4 0073  
                            __pidataBANK0 17BA                       ??_SYSTEM_Initialize 00A2  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                               ?_TMR3_ISR 0070                                 ?_TMR5_ISR 0070  
                        _DATAEE_WriteByte 09F8                              menuLCD_ISR@l 0047  
                      __size_of_editClock 0058           differenceBetweenTimePeriod@diff 0076  
                           __end_of_tsttc 0800                          ?_TMR2_Initialize 0070  
                          ??_INT_CallBack 0071           differenceBetweenTimePeriod@stop 0073  
                  __end_of_PMD_Initialize 17D1               __size_of_EXT_INT_Initialize 000E  
                            ??_LCDsend2x4 00A3                 __end_of_SYSTEM_Initialize 09F8  
                            sprintf@width 0031                   __end_of_TMR3_WriteTimer 0851  
                                 ??_tsttc 0072                                __pbssBANK0 004D  
                              __pbssBANK1 00BD                    i1DATAEE_WriteByte@bAdd 0076  
                                 ?_S1_ISR 0070                                   ?_LCDcmd 0070  
                        ?_TMR3_Initialize 0070                                   ?_LCDstr 0070  
                                 LCDcmd@c 0078                                   LCDstr@c 007A  
                                 LCDstr@p 007B                                __pmaintext 006E  
        __end_of_TMR3_SetInterruptHandler 17A1                                   ?___wmul 0070  
                              ??_TMR1_ISR 007B                                ??_TMR3_ISR 007E  
                 __end_of_ADCC_Initialize 090C                __end_of_PWM6_LoadDutyValue 0925  
                              ??_TMR5_ISR 007D                                __pintentry 0004  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                    __size_ofi1_TMR2_Stop 0003                        __end_of_LCDsend2x4 0EFF  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                               ?_WriteI2C 0070                          ?_PWM6_Initialize 0070  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
         __end_ofi1_PWM_Output_D4_Disable 1778                           ?_PMD_Initialize 0070  
                        ?_DATAEE_ReadByte 00A0                         ?_i2c1_driver_open 0070  
           i1PWM6_LoadDutyValue@dutyValue 0070                                   _LCDchar 17C1  
                                 _LCDinit 0D02                                   _LCDsend 0BFD  
                      ??_i2c1_driver_open 00A0                                   _INT_ISR 1789  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                               ?_editTemp 0070                      i1_PWM6_LoadDutyValue 089A  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
                                 _PWM6DCH 038D                                   _PWM6DCL 038C  
                       ?i1_TMR2_StopTimer 0070                                   _PWM6CON 038E  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                                   _SSP1MSK 018E  
                            ??_TMR2_Start 0070                   __size_of_TMR2_StopTimer 0004  
                        ?_TMR2_StartTimer 0070                          ?_TMR1_WriteTimer 0070  
                      ??i1_TMR2_StopTimer 0070                   __end_of_TMR5_WriteTimer 0862  
                            LCDsend2x4@hc 00A6                              LCDsend2x4@lc 00A7  
                       __end_of_editClock 0CA8                          ?_TMR5_Initialize 0070  
                         __size_of_S1_ISR 0039                           __size_of_LCDcmd 0007  
                    DATAEE_WriteByte@bAdd 00A0                        _i2c1_driver_i2cISR 00C0  
                         __size_of_LCDstr 0014                                   _ReadI2C 0925  
              ??_TMR5_SetInterruptHandler 00A2                              ??i1_WriteI2C 0070  
                         __size_of___wmul 001F                                   ___lwdiv 0B37  
                                 ___lwmod 0ACA                        __end_of_TMR2_Start 1775  
                              ??_WriteI2C 00A0                                   _editLum 0A1C  
                                 __ptext1 0A6A                                   __ptext2 17DA  
                                 __ptext3 0A43                                   __ptext4 0A1C  
                                 __ptext5 0C50                                   __ptext6 0800  
                                 __ptext7 177E                                   __ptext8 09D9  
                                 __ptext9 09BA                            _monitoring_ISR 05D5  
          ??_TMR1_DefaultInterruptHandler 0070                                 _T1CONbits 020E  
                                 _dpowers 1800                     _OSCILLATOR_Initialize 17D1  
                               _T2CONbits 028E                                   _isdigit 0862  
                               _T3CONbits 0214         __size_of_TMR1_SetInterruptHandler 0006  
                   ?i1_PWM6_LoadDutyValue 0070                  ??_PIN_MANAGER_Initialize 00A0  
               ?_TMR1_SetInterruptHandler 00A0                                 _T2HLTbits 028F  
                 _INT_SetInterruptHandler 178F                                 _T5CONbits 021A  
                              ??_editTemp 00A0                      __end_ofi1_LCDsend2x4 0E2B  
              __size_of_SYSTEM_Initialize 001F                                   _sprintf 0438  
                                 clrloop0 17A8                      end_of_initialization 006A  
                        ?_TMR3_WriteTimer 0070                                 _T2RSTbits 0291  
                      __end_ofi1_WriteI2C 0BFD                                   init_ram 17AD  
                                 initloop 17AE                      __end_of_INT_CallBack 17F3  
                          i1LCDsend2x4@hc 0076                            i1LCDsend2x4@lc 0077  
                      i1_DATAEE_WriteByte 093F             __size_of_PWM_Output_D4_Enable 0003  
            ?_differenceBetweenTimePeriod 0070                       ?i1_DATAEE_WriteByte 0076  
                        ?_ADCC_Initialize 0070          __end_of_ADCC_GetSingleConversion 0886  
                  __end_of_monitoring_ISR 06F3                                 _PORTCbits 000E  
                               _TMR2_Stop 177E                  _TMR3_SetInterruptHandler 179B  
                   _TMR5_InterruptHandler 00B3                                 _TRISCbits 0013  
                           ?_toggleAlarms 0070                      ??i1_DATAEE_WriteByte 0079  
                __end_of_DATAEE_WriteByte 0A1C                             _alarmPWMStart 0067  
                        ?_TMR5_WriteTimer 0070                   TMR5_WriteTimer@timerVal 0070  
          __size_of_PWM_Output_D4_Disable 0003             __end_of_PWM_Output_D4_Disable 177E  
                          __end_of_S1_ISR 0B37                            __end_of_LCDcmd 17BA  
                          __end_of_LCDstr 089A          __size_ofi1_PWM_Output_D4_Disable 0003  
                          LCDsend2x4@mode 00A2                                 _Clock_ISR 0EFF  
                          __end_of___wmul 097C                           ?_monitoring_ISR 0070  
                       __size_of_TMR1_ISR 0017                         __size_of_TMR3_ISR 0017  
                       __size_of_TMR5_ISR 0017                                ?_TMR2_Stop 0070  
                  ?_OSCILLATOR_Initialize 0070                 ??_INT_SetInterruptHandler 00A2  
                         main@checkSumAux 00AC                    ??i1_PWM6_LoadDutyValue 0072  
                           menuLCD_ISR@tt 0043                       start_initialization 004E  
    __end_of_TMR5_DefaultInterruptHandler 0004     __size_of_TMR5_DefaultInterruptHandler 0001  
            _TMR5_DefaultInterruptHandler 0003                            ??_toggleAlarms 00A0  
         __size_of_PIN_MANAGER_Initialize 003F                            _TMR2_StopTimer 0800  
                        WriteI2C@data_out 00A1                                  ??_S1_ISR 0070  
                                ??_LCDcmd 0078                                  ??_LCDstr 0079  
                           ??_menuLCD_ISR 0035                       DATAEE_ReadByte@bAdd 00A0  
            ?_INT_DefaultInterruptHandler 0070                  __size_of_TMR1_Initialize 001F  
                        ??_PMD_Initialize 00A0                                ?_Clock_ISR 0070  
                                ??___wmul 0074                               __pdataBANK0 0067  
              __end_of_EXT_INT_Initialize 0812                         _editingClockAlarm 005C  
                       __size_of_WriteI2C 005A                     __size_ofi1_LCDsend2x4 00B3  
                _ADCC_GetSingleConversion 0874                   i1DATAEE_WriteByte@bData 0078  
                  __end_of_TMR2_StopTimer 0804                                  ?_LCDchar 0070  
                                ?_LCDinit 0070                                  ?_LCDsend 0070  
                               ___latbits 0002                                  ?_INT_ISR 0070  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                      _PWM6_LoadDutyValue 090C                  __size_of_TMR2_Initialize 000E  
                            _isdigit$2957 0070                     __size_of_INT_CallBack 000D  
           ?_TMR5_DefaultInterruptHandler 0070      __size_of_differenceBetweenTimePeriod 0034  
                                LCDchar@c 0078                         __size_of_editTemp 0027  
                                LCDsend@c 00A3                       ?_PWM6_LoadDutyValue 00A0  
                             sprintf@flag 0030                 __size_of_i2c1_driver_open 000C  
                             sprintf@prec 002D                                  ?_ReadI2C 0070  
                               __pnvBANK0 006E                                 __pnvBANK1 00B1  
                               _editClock 0C50                          ___lwdiv@dividend 0072  
                  _PIN_MANAGER_Initialize 0B73                 __size_ofi1_TMR2_StopTimer 0004  
           ??_INT_DefaultInterruptHandler 0070                             ??i1_TMR2_Stop 0070  
                __size_of_TMR3_Initialize 001F                       __end_of_menuLCD_ISR 0438  
        __end_of_TMR1_SetInterruptHandler 179B           ADCC_GetSingleConversion@channel 0073  
                            i1_LCDsend2x4 0D78                                 _dimingLed 005E  
                                ?___lwdiv 0070                                  ?___lwmod 0078  
             _i2c1_driver_busCollisionISR 00C2                      ??_PWM6_LoadDutyValue 00A2  
                                ?_editLum 0070              ??_INTERRUPT_InterruptManager 007E  
                             ??_TMR2_Stop 00A0                              _INT_CallBack 17E6  
                                ?_isdigit 0070                           ?_TMR2_StopTimer 0070  
                __size_of_PWM6_Initialize 000D                          ___lwdiv@quotient 0075  
                                ?_sprintf 0020                                  _T2CLKCON 0290  
                __size_of_DATAEE_ReadByte 000F                            __size_of_tsttc 010D  
                 i1_PWM_Output_D4_Disable 1775                            ___wmul@product 0074  
                                _LATAbits 0016                                 clear_ram0 17A7  
                                _PIE0bits 0716                                  _PIE3bits 0719  
                                _PIE4bits 071A                  __size_of_TMR2_StartTimer 0004  
                           i1LCDsend2x4@c 0075                                ?_editClock 0070  
                               _tempAlarm 0054                                  _S1_Value 0064  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0048  
                                _PIR0bits 070C                                  _PIR3bits 070F  
                                _PIR4bits 0710                ??_TMR3_SetInterruptHandler 00A2  
                __size_of_TMR5_Initialize 001F                               ??_Clock_ISR 007A  
                    __end_of_toggleAlarms 0A96                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR1_ISR 08B0  
                                _TMR3_ISR 08C7                                  _TMR5_ISR 08DE  
                                _SSP1STAT 018F                         ??_TMR1_Initialize 00A2  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                       __end_ofi1_TMR2_Stop 177B  
                              _ADCON3bits 0096                         ___wmul@multiplier 0070  
                      i1WriteI2C@data_out 0071              __end_of_PWM_Output_D4_Enable 1772  
    __size_of_INT_DefaultInterruptHandler 0001         __size_of_TMR5_SetInterruptHandler 0006  
                        __size_of_LCDchar 0008                 ?_TMR5_SetInterruptHandler 00A0  
                   DATAEE_WriteByte@bData 00A2                          __size_of_LCDinit 0076  
                        __size_of_LCDsend 0053                          __size_of_INT_ISR 0006  
                       ?_DATAEE_WriteByte 00A0                         ??_TMR2_Initialize 00A0  
                             _menuLCD_ISR 0264            ??_TMR5_DefaultInterruptHandler 0070  
                      ??_DATAEE_WriteByte 00A3                          __size_of_ReadI2C 001A  
                              _ADSTATbits 0097                  __size_of_TMR3_WriteTimer 0011  
                        ??_monitoring_ISR 007A                   ??_OSCILLATOR_Initialize 00A0  
                        __size_of___lwdiv 003C                          __size_of___lwmod 0034  
                                _WriteI2C 0CA8                         ??_TMR3_Initialize 00A2  
                _TMR1_SetInterruptHandler 1795                          i1LCDsend2x4@mode 0072  
                        __size_of_editLum 0027                     _TMR1_InterruptHandler 00B9  
                              sprintf@val 002E                                  _clkAlarm 004D  
                __size_of_ADCC_Initialize 0017                          __size_of_isdigit 0012  
                                _editTemp 0A43                           ___lwdiv@divisor 0070  
                         ___lwdiv@counter 0077                                  __ptext10 17A1  
                                __ptext11 099B                                  __ptext20 0804  
                                __ptext12 179B                                  __ptext21 178F  
                                __ptext13 0812                                _T1GCONbits 020F  
                                __ptext30 0820                                  __ptext22 08F5  
                                __ptext14 097C                                  __ptext23 177B  
                                __ptext15 1795                                  __ptext40 0002  
                                __ptext32 08DE                                  __ptext24 090C  
                                __ptext16 17F3                                  __ptext41 0264  
                                __ptext33 0003                                  __ptext25 0D02  
                                __ptext17 17C9                                  __ptext50 0B37  
                                __ptext42 1785                                  __ptext34 05D5  
                                __ptext26 0E2B                                  __ptext18 0B73  
                                __ptext51 0A96                                  __ptext43 1778  
                                __ptext35 06F3                                  __ptext27 0BFD  
                                __ptext19 17D1                                  __ptext60 0840  
                                __ptext52 1781                                  __ptext44 1775  
                                __ptext36 0925                                  __ptext28 0CA8  
                                __ptext61 08B0                                  __ptext53 1772  
                                __ptext45 089A                                  __ptext37 0874  
                                __ptext29 09F8                                  __ptext62 082F  
                                __ptext54 176F                                  __ptext46 0438  
                                __ptext38 0851                                  __ptext63 0EFF  
                                __ptext55 0886                                  __ptext47 0862  
                                __ptext39 08C7                                  __ptext64 176E  
                                __ptext56 17C1                                  __ptext48 095D  
                                __ptext65 093F                                  __ptext57 17B3  
                                __ptext49 0ACA                                  __ptext66 1789  
                                __ptext58 0D78                                  __ptext67 17E6  
                                __ptext59 0BB2                                  __ptext68 176D  
                                __ptext69 0AFE                              _SSP1CON1bits 0190  
                            _SSP1CON2bits 0191                 ??i1_PWM_Output_D4_Disable 0070  
             __size_ofi1_DATAEE_WriteByte 001E                          __size_of_sprintf 019D  
                              _T3GCONbits 0215               DATAEE_WriteByte@GIEBitValue 00A3  
                 TMR3_WriteTimer@timerVal 0070                          _i2c1_driver_open 17DA  
                       ??_PWM6_Initialize 00A0                             __size_of_main 01F6  
                              _T5GCONbits 021B                                  _lumAlarm 0051  
                       ??_DATAEE_ReadByte 00A2                                  _lumLevel 0062  
                   _PWM_Output_D4_Disable 177B                               ??_editClock 00A0  
                        _editingTempAlarm 0061                          i1_TMR2_StopTimer 1785  
                __size_of_TMR5_WriteTimer 0011                                  _prevTemp 006C  
                              tsttc@value 0073                               i1_TMR2_Stop 1778  
              ??_ADCC_GetSingleConversion 0073                                  int$flags 007E  
                       ??_TMR2_StartTimer 0070        __end_of_INTERRUPT_InterruptManager 004C  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                         menuLCD_ISR@F12828 00BD  
    __end_of_TMR3_DefaultInterruptHandler 0003     __size_of_TMR3_DefaultInterruptHandler 0001  
            _TMR3_DefaultInterruptHandler 0002                         ??_TMR5_Initialize 00A2  
                              _INTCONbits 000B                               _NVMCON1bits 081E  
                            _prevLumLevel 006A             __size_ofi1_PWM6_LoadDutyValue 0016  
                    _INT_InterruptHandler 00B1                                  isdigit@c 0071  
                              _LCDsend2x4 0E2B                        _EXT_INT_Initialize 0804  
                                intlevel1 0000                                 sprintf@ap 002C  
                               sprintf@sp 0034                          ___lwmod@dividend 007A  
                 ?_PIN_MANAGER_Initialize 0070                     __size_of_toggleAlarms 002C  
                     ?_EXT_INT_Initialize 0070                           _editingLumAlarm 0060  
                    _PWM_Output_D4_Enable 176F       __end_of_differenceBetweenTimePeriod 0ACA  
             _differenceBetweenTimePeriod 0A96                  ?_INT_SetInterruptHandler 00A0  
                        ??_TMR2_StopTimer 00A0                         ??_TMR3_WriteTimer 0072  
                           __pstringtext1 1800                             __pstringtext2 1000  
                           __pstringtext3 180A                             __pstringtext4 1811  
                           __pstringtext5 0000                      ??_EXT_INT_Initialize 00A2  
           ??_differenceBetweenTimePeriod 0077                                  sprintf@c 0033  
                                sprintf@f 0020             ?_TMR3_DefaultInterruptHandler 0070  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                         ___lwmod@divisor 0078                           ___lwmod@counter 007D  
                          _idx_RingBuffer 00C4               PWM6_LoadDutyValue@dutyValue 00A0  
                            _toggleAlarms 0A6A                                _TMR2_Start 1772  
          __end_of_PIN_MANAGER_Initialize 0BB2                         ??_ADCC_Initialize 00A0  
                  ?_PWM_Output_D4_Disable 0070                     ?_PWM_Output_D4_Enable 0070  
                         _TMR1_Initialize 097C  
