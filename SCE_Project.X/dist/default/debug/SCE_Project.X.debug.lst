

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Oct 31 10:27:10 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text39,local,class=CODE,merge=1,delta=2,group=3
    63                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	text53,local,class=CODE,merge=1,delta=2
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	text55,local,class=CODE,merge=1,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	psect	text57,local,class=CODE,merge=1,delta=2
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    82                           	dabs	1,0x7E,2
    83  0000                     
    84                           ; Version 2.30
    85                           ; Generated 15/09/2020 GMT
    86                           ; 
    87                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution. Publication is not required when
   101                           ;        this file is used in an embedded application.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC16F18875 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000F                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0014                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001C                     	;# 
   147  001C                     	;# 
   148  001D                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  008C                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  008E                     	;# 
   157  008F                     	;# 
   158  0090                     	;# 
   159  0090                     	;# 
   160  0091                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0095                     	;# 
   164  0096                     	;# 
   165  0097                     	;# 
   166  0098                     	;# 
   167  0099                     	;# 
   168  009A                     	;# 
   169  009B                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010E                     	;# 
   177  010F                     	;# 
   178  0110                     	;# 
   179  0110                     	;# 
   180  0111                     	;# 
   181  0112                     	;# 
   182  0112                     	;# 
   183  0113                     	;# 
   184  0114                     	;# 
   185  0114                     	;# 
   186  0115                     	;# 
   187  0116                     	;# 
   188  0116                     	;# 
   189  0117                     	;# 
   190  0119                     	;# 
   191  0119                     	;# 
   192  0119                     	;# 
   193  011A                     	;# 
   194  011A                     	;# 
   195  011A                     	;# 
   196  011B                     	;# 
   197  011B                     	;# 
   198  011B                     	;# 
   199  011B                     	;# 
   200  011B                     	;# 
   201  011C                     	;# 
   202  011C                     	;# 
   203  011C                     	;# 
   204  011D                     	;# 
   205  011D                     	;# 
   206  011D                     	;# 
   207  011E                     	;# 
   208  011E                     	;# 
   209  011E                     	;# 
   210  011F                     	;# 
   211  011F                     	;# 
   212  011F                     	;# 
   213  011F                     	;# 
   214  011F                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  018E                     	;# 
   218  018F                     	;# 
   219  0190                     	;# 
   220  0191                     	;# 
   221  0192                     	;# 
   222  0196                     	;# 
   223  0197                     	;# 
   224  0198                     	;# 
   225  0199                     	;# 
   226  019A                     	;# 
   227  019B                     	;# 
   228  019C                     	;# 
   229  020C                     	;# 
   230  020C                     	;# 
   231  020D                     	;# 
   232  020E                     	;# 
   233  020F                     	;# 
   234  020F                     	;# 
   235  0210                     	;# 
   236  0210                     	;# 
   237  0211                     	;# 
   238  0211                     	;# 
   239  0212                     	;# 
   240  0212                     	;# 
   241  0213                     	;# 
   242  0214                     	;# 
   243  0215                     	;# 
   244  0215                     	;# 
   245  0216                     	;# 
   246  0216                     	;# 
   247  0217                     	;# 
   248  0217                     	;# 
   249  0218                     	;# 
   250  0218                     	;# 
   251  0219                     	;# 
   252  021A                     	;# 
   253  021B                     	;# 
   254  021B                     	;# 
   255  021C                     	;# 
   256  021C                     	;# 
   257  021D                     	;# 
   258  021D                     	;# 
   259  021E                     	;# 
   260  021F                     	;# 
   261  028C                     	;# 
   262  028C                     	;# 
   263  028D                     	;# 
   264  028D                     	;# 
   265  028E                     	;# 
   266  028F                     	;# 
   267  0290                     	;# 
   268  0290                     	;# 
   269  0291                     	;# 
   270  0292                     	;# 
   271  0292                     	;# 
   272  0293                     	;# 
   273  0293                     	;# 
   274  0294                     	;# 
   275  0295                     	;# 
   276  0296                     	;# 
   277  0296                     	;# 
   278  0297                     	;# 
   279  0298                     	;# 
   280  0298                     	;# 
   281  0299                     	;# 
   282  0299                     	;# 
   283  029A                     	;# 
   284  029B                     	;# 
   285  029C                     	;# 
   286  029C                     	;# 
   287  029D                     	;# 
   288  030C                     	;# 
   289  030C                     	;# 
   290  030D                     	;# 
   291  030E                     	;# 
   292  030F                     	;# 
   293  0310                     	;# 
   294  0310                     	;# 
   295  0311                     	;# 
   296  0312                     	;# 
   297  0313                     	;# 
   298  0314                     	;# 
   299  0314                     	;# 
   300  0315                     	;# 
   301  0316                     	;# 
   302  0317                     	;# 
   303  0318                     	;# 
   304  0318                     	;# 
   305  0319                     	;# 
   306  031A                     	;# 
   307  031B                     	;# 
   308  031C                     	;# 
   309  031C                     	;# 
   310  031D                     	;# 
   311  031E                     	;# 
   312  031F                     	;# 
   313  038C                     	;# 
   314  038C                     	;# 
   315  038D                     	;# 
   316  038E                     	;# 
   317  0390                     	;# 
   318  0390                     	;# 
   319  0391                     	;# 
   320  0392                     	;# 
   321  040C                     	;# 
   322  040D                     	;# 
   323  040E                     	;# 
   324  040F                     	;# 
   325  0410                     	;# 
   326  0411                     	;# 
   327  0416                     	;# 
   328  0416                     	;# 
   329  0417                     	;# 
   330  0418                     	;# 
   331  0418                     	;# 
   332  0419                     	;# 
   333  041A                     	;# 
   334  041A                     	;# 
   335  041B                     	;# 
   336  041C                     	;# 
   337  041C                     	;# 
   338  041D                     	;# 
   339  041E                     	;# 
   340  041F                     	;# 
   341  048C                     	;# 
   342  048C                     	;# 
   343  048D                     	;# 
   344  048E                     	;# 
   345  048F                     	;# 
   346  048F                     	;# 
   347  0490                     	;# 
   348  0491                     	;# 
   349  0492                     	;# 
   350  0492                     	;# 
   351  0493                     	;# 
   352  0494                     	;# 
   353  0495                     	;# 
   354  0495                     	;# 
   355  0496                     	;# 
   356  0497                     	;# 
   357  0498                     	;# 
   358  0499                     	;# 
   359  049A                     	;# 
   360  049B                     	;# 
   361  049C                     	;# 
   362  049D                     	;# 
   363  050C                     	;# 
   364  050C                     	;# 
   365  050D                     	;# 
   366  050E                     	;# 
   367  050F                     	;# 
   368  050F                     	;# 
   369  0510                     	;# 
   370  0511                     	;# 
   371  0512                     	;# 
   372  0512                     	;# 
   373  0513                     	;# 
   374  0514                     	;# 
   375  0515                     	;# 
   376  0515                     	;# 
   377  0516                     	;# 
   378  0517                     	;# 
   379  0518                     	;# 
   380  0519                     	;# 
   381  051A                     	;# 
   382  051B                     	;# 
   383  051C                     	;# 
   384  051D                     	;# 
   385  058C                     	;# 
   386  058C                     	;# 
   387  058D                     	;# 
   388  058E                     	;# 
   389  058F                     	;# 
   390  058F                     	;# 
   391  0590                     	;# 
   392  0591                     	;# 
   393  0592                     	;# 
   394  0593                     	;# 
   395  060C                     	;# 
   396  060D                     	;# 
   397  060E                     	;# 
   398  060F                     	;# 
   399  0610                     	;# 
   400  0611                     	;# 
   401  0612                     	;# 
   402  0613                     	;# 
   403  0614                     	;# 
   404  0616                     	;# 
   405  0617                     	;# 
   406  0618                     	;# 
   407  0619                     	;# 
   408  061A                     	;# 
   409  061B                     	;# 
   410  061C                     	;# 
   411  061D                     	;# 
   412  061E                     	;# 
   413  068C                     	;# 
   414  068D                     	;# 
   415  068E                     	;# 
   416  068F                     	;# 
   417  0690                     	;# 
   418  0691                     	;# 
   419  0692                     	;# 
   420  0693                     	;# 
   421  0694                     	;# 
   422  070C                     	;# 
   423  070D                     	;# 
   424  070E                     	;# 
   425  070F                     	;# 
   426  0710                     	;# 
   427  0711                     	;# 
   428  0712                     	;# 
   429  0713                     	;# 
   430  0714                     	;# 
   431  0716                     	;# 
   432  0717                     	;# 
   433  0718                     	;# 
   434  0719                     	;# 
   435  071A                     	;# 
   436  071B                     	;# 
   437  071C                     	;# 
   438  071D                     	;# 
   439  071E                     	;# 
   440  0796                     	;# 
   441  0797                     	;# 
   442  0798                     	;# 
   443  0799                     	;# 
   444  079A                     	;# 
   445  079B                     	;# 
   446  080C                     	;# 
   447  080D                     	;# 
   448  080E                     	;# 
   449  080F                     	;# 
   450  0810                     	;# 
   451  0811                     	;# 
   452  0812                     	;# 
   453  0813                     	;# 
   454  0814                     	;# 
   455  081A                     	;# 
   456  081B                     	;# 
   457  081C                     	;# 
   458  081D                     	;# 
   459  081E                     	;# 
   460  081F                     	;# 
   461  088C                     	;# 
   462  088D                     	;# 
   463  088E                     	;# 
   464  088F                     	;# 
   465  0890                     	;# 
   466  0891                     	;# 
   467  0892                     	;# 
   468  0893                     	;# 
   469  0895                     	;# 
   470  0896                     	;# 
   471  0897                     	;# 
   472  0898                     	;# 
   473  0899                     	;# 
   474  089A                     	;# 
   475  089B                     	;# 
   476  090C                     	;# 
   477  090E                     	;# 
   478  090F                     	;# 
   479  091F                     	;# 
   480  091F                     	;# 
   481  098F                     	;# 
   482  098F                     	;# 
   483  0990                     	;# 
   484  0991                     	;# 
   485  0992                     	;# 
   486  0993                     	;# 
   487  0994                     	;# 
   488  0995                     	;# 
   489  0996                     	;# 
   490  0997                     	;# 
   491  0E0F                     	;# 
   492  0E10                     	;# 
   493  0E11                     	;# 
   494  0E12                     	;# 
   495  0E13                     	;# 
   496  0E14                     	;# 
   497  0E15                     	;# 
   498  0E16                     	;# 
   499  0E17                     	;# 
   500  0E18                     	;# 
   501  0E19                     	;# 
   502  0E1A                     	;# 
   503  0E1B                     	;# 
   504  0E1C                     	;# 
   505  0E1D                     	;# 
   506  0E1E                     	;# 
   507  0E1F                     	;# 
   508  0E20                     	;# 
   509  0E21                     	;# 
   510  0E22                     	;# 
   511  0E23                     	;# 
   512  0E24                     	;# 
   513  0E25                     	;# 
   514  0E26                     	;# 
   515  0E27                     	;# 
   516  0E28                     	;# 
   517  0E29                     	;# 
   518  0E2A                     	;# 
   519  0E2B                     	;# 
   520  0E2C                     	;# 
   521  0E2D                     	;# 
   522  0E2E                     	;# 
   523  0E2F                     	;# 
   524  0E30                     	;# 
   525  0E31                     	;# 
   526  0E32                     	;# 
   527  0E33                     	;# 
   528  0E34                     	;# 
   529  0E35                     	;# 
   530  0E36                     	;# 
   531  0E37                     	;# 
   532  0E8F                     	;# 
   533  0E90                     	;# 
   534  0E91                     	;# 
   535  0E92                     	;# 
   536  0E93                     	;# 
   537  0E94                     	;# 
   538  0E95                     	;# 
   539  0E96                     	;# 
   540  0E97                     	;# 
   541  0E9C                     	;# 
   542  0E9D                     	;# 
   543  0E9E                     	;# 
   544  0EA1                     	;# 
   545  0EA2                     	;# 
   546  0EA3                     	;# 
   547  0EA4                     	;# 
   548  0EA5                     	;# 
   549  0EA9                     	;# 
   550  0EAA                     	;# 
   551  0EAB                     	;# 
   552  0EAC                     	;# 
   553  0EB1                     	;# 
   554  0EB2                     	;# 
   555  0EB3                     	;# 
   556  0EB8                     	;# 
   557  0EB9                     	;# 
   558  0EBA                     	;# 
   559  0EBB                     	;# 
   560  0EBC                     	;# 
   561  0EBD                     	;# 
   562  0EBE                     	;# 
   563  0EC3                     	;# 
   564  0EC5                     	;# 
   565  0EC6                     	;# 
   566  0EC7                     	;# 
   567  0EC8                     	;# 
   568  0EC9                     	;# 
   569  0ECA                     	;# 
   570  0ECB                     	;# 
   571  0ECC                     	;# 
   572  0F10                     	;# 
   573  0F11                     	;# 
   574  0F12                     	;# 
   575  0F13                     	;# 
   576  0F14                     	;# 
   577  0F15                     	;# 
   578  0F16                     	;# 
   579  0F17                     	;# 
   580  0F18                     	;# 
   581  0F19                     	;# 
   582  0F1A                     	;# 
   583  0F1B                     	;# 
   584  0F1C                     	;# 
   585  0F1D                     	;# 
   586  0F1E                     	;# 
   587  0F1F                     	;# 
   588  0F20                     	;# 
   589  0F21                     	;# 
   590  0F22                     	;# 
   591  0F23                     	;# 
   592  0F24                     	;# 
   593  0F25                     	;# 
   594  0F26                     	;# 
   595  0F27                     	;# 
   596  0F28                     	;# 
   597  0F29                     	;# 
   598  0F2A                     	;# 
   599  0F2B                     	;# 
   600  0F2C                     	;# 
   601  0F2D                     	;# 
   602  0F2E                     	;# 
   603  0F2F                     	;# 
   604  0F30                     	;# 
   605  0F31                     	;# 
   606  0F32                     	;# 
   607  0F38                     	;# 
   608  0F39                     	;# 
   609  0F3A                     	;# 
   610  0F3B                     	;# 
   611  0F3C                     	;# 
   612  0F3D                     	;# 
   613  0F3E                     	;# 
   614  0F3F                     	;# 
   615  0F40                     	;# 
   616  0F41                     	;# 
   617  0F43                     	;# 
   618  0F44                     	;# 
   619  0F45                     	;# 
   620  0F46                     	;# 
   621  0F47                     	;# 
   622  0F48                     	;# 
   623  0F49                     	;# 
   624  0F4A                     	;# 
   625  0F4B                     	;# 
   626  0F4C                     	;# 
   627  0F4E                     	;# 
   628  0F4F                     	;# 
   629  0F50                     	;# 
   630  0F51                     	;# 
   631  0F52                     	;# 
   632  0F53                     	;# 
   633  0F54                     	;# 
   634  0F55                     	;# 
   635  0F56                     	;# 
   636  0F57                     	;# 
   637  0F59                     	;# 
   638  0F5A                     	;# 
   639  0F5B                     	;# 
   640  0F5C                     	;# 
   641  0F5D                     	;# 
   642  0F61                     	;# 
   643  0F62                     	;# 
   644  0F64                     	;# 
   645  0F65                     	;# 
   646  0F66                     	;# 
   647  0F67                     	;# 
   648  0F68                     	;# 
   649  0F69                     	;# 
   650  0F6A                     	;# 
   651  0F6B                     	;# 
   652  0F6C                     	;# 
   653  0F6D                     	;# 
   654  0FE4                     	;# 
   655  0FE5                     	;# 
   656  0FE6                     	;# 
   657  0FE7                     	;# 
   658  0FE8                     	;# 
   659  0FE9                     	;# 
   660  0FEA                     	;# 
   661  0FEB                     	;# 
   662  0FED                     	;# 
   663  0FEE                     	;# 
   664  0FEF                     	;# 
   665  0000                     	;# 
   666  0001                     	;# 
   667  0002                     	;# 
   668  0003                     	;# 
   669  0004                     	;# 
   670  0005                     	;# 
   671  0006                     	;# 
   672  0007                     	;# 
   673  0008                     	;# 
   674  0009                     	;# 
   675  000A                     	;# 
   676  000B                     	;# 
   677  000C                     	;# 
   678  000D                     	;# 
   679  000E                     	;# 
   680  000F                     	;# 
   681  0010                     	;# 
   682  0011                     	;# 
   683  0012                     	;# 
   684  0013                     	;# 
   685  0014                     	;# 
   686  0015                     	;# 
   687  0016                     	;# 
   688  0017                     	;# 
   689  0018                     	;# 
   690  0019                     	;# 
   691  001A                     	;# 
   692  001C                     	;# 
   693  001C                     	;# 
   694  001D                     	;# 
   695  001D                     	;# 
   696  001E                     	;# 
   697  001F                     	;# 
   698  008C                     	;# 
   699  008C                     	;# 
   700  008D                     	;# 
   701  008E                     	;# 
   702  008E                     	;# 
   703  008F                     	;# 
   704  0090                     	;# 
   705  0090                     	;# 
   706  0091                     	;# 
   707  0093                     	;# 
   708  0094                     	;# 
   709  0095                     	;# 
   710  0096                     	;# 
   711  0097                     	;# 
   712  0098                     	;# 
   713  0099                     	;# 
   714  009A                     	;# 
   715  009B                     	;# 
   716  009C                     	;# 
   717  009D                     	;# 
   718  009E                     	;# 
   719  010C                     	;# 
   720  010D                     	;# 
   721  010E                     	;# 
   722  010E                     	;# 
   723  010F                     	;# 
   724  0110                     	;# 
   725  0110                     	;# 
   726  0111                     	;# 
   727  0112                     	;# 
   728  0112                     	;# 
   729  0113                     	;# 
   730  0114                     	;# 
   731  0114                     	;# 
   732  0115                     	;# 
   733  0116                     	;# 
   734  0116                     	;# 
   735  0117                     	;# 
   736  0119                     	;# 
   737  0119                     	;# 
   738  0119                     	;# 
   739  011A                     	;# 
   740  011A                     	;# 
   741  011A                     	;# 
   742  011B                     	;# 
   743  011B                     	;# 
   744  011B                     	;# 
   745  011B                     	;# 
   746  011B                     	;# 
   747  011C                     	;# 
   748  011C                     	;# 
   749  011C                     	;# 
   750  011D                     	;# 
   751  011D                     	;# 
   752  011D                     	;# 
   753  011E                     	;# 
   754  011E                     	;# 
   755  011E                     	;# 
   756  011F                     	;# 
   757  011F                     	;# 
   758  011F                     	;# 
   759  011F                     	;# 
   760  011F                     	;# 
   761  018C                     	;# 
   762  018D                     	;# 
   763  018E                     	;# 
   764  018F                     	;# 
   765  0190                     	;# 
   766  0191                     	;# 
   767  0192                     	;# 
   768  0196                     	;# 
   769  0197                     	;# 
   770  0198                     	;# 
   771  0199                     	;# 
   772  019A                     	;# 
   773  019B                     	;# 
   774  019C                     	;# 
   775  020C                     	;# 
   776  020C                     	;# 
   777  020D                     	;# 
   778  020E                     	;# 
   779  020F                     	;# 
   780  020F                     	;# 
   781  0210                     	;# 
   782  0210                     	;# 
   783  0211                     	;# 
   784  0211                     	;# 
   785  0212                     	;# 
   786  0212                     	;# 
   787  0213                     	;# 
   788  0214                     	;# 
   789  0215                     	;# 
   790  0215                     	;# 
   791  0216                     	;# 
   792  0216                     	;# 
   793  0217                     	;# 
   794  0217                     	;# 
   795  0218                     	;# 
   796  0218                     	;# 
   797  0219                     	;# 
   798  021A                     	;# 
   799  021B                     	;# 
   800  021B                     	;# 
   801  021C                     	;# 
   802  021C                     	;# 
   803  021D                     	;# 
   804  021D                     	;# 
   805  021E                     	;# 
   806  021F                     	;# 
   807  028C                     	;# 
   808  028C                     	;# 
   809  028D                     	;# 
   810  028D                     	;# 
   811  028E                     	;# 
   812  028F                     	;# 
   813  0290                     	;# 
   814  0290                     	;# 
   815  0291                     	;# 
   816  0292                     	;# 
   817  0292                     	;# 
   818  0293                     	;# 
   819  0293                     	;# 
   820  0294                     	;# 
   821  0295                     	;# 
   822  0296                     	;# 
   823  0296                     	;# 
   824  0297                     	;# 
   825  0298                     	;# 
   826  0298                     	;# 
   827  0299                     	;# 
   828  0299                     	;# 
   829  029A                     	;# 
   830  029B                     	;# 
   831  029C                     	;# 
   832  029C                     	;# 
   833  029D                     	;# 
   834  030C                     	;# 
   835  030C                     	;# 
   836  030D                     	;# 
   837  030E                     	;# 
   838  030F                     	;# 
   839  0310                     	;# 
   840  0310                     	;# 
   841  0311                     	;# 
   842  0312                     	;# 
   843  0313                     	;# 
   844  0314                     	;# 
   845  0314                     	;# 
   846  0315                     	;# 
   847  0316                     	;# 
   848  0317                     	;# 
   849  0318                     	;# 
   850  0318                     	;# 
   851  0319                     	;# 
   852  031A                     	;# 
   853  031B                     	;# 
   854  031C                     	;# 
   855  031C                     	;# 
   856  031D                     	;# 
   857  031E                     	;# 
   858  031F                     	;# 
   859  038C                     	;# 
   860  038C                     	;# 
   861  038D                     	;# 
   862  038E                     	;# 
   863  0390                     	;# 
   864  0390                     	;# 
   865  0391                     	;# 
   866  0392                     	;# 
   867  040C                     	;# 
   868  040D                     	;# 
   869  040E                     	;# 
   870  040F                     	;# 
   871  0410                     	;# 
   872  0411                     	;# 
   873  0416                     	;# 
   874  0416                     	;# 
   875  0417                     	;# 
   876  0418                     	;# 
   877  0418                     	;# 
   878  0419                     	;# 
   879  041A                     	;# 
   880  041A                     	;# 
   881  041B                     	;# 
   882  041C                     	;# 
   883  041C                     	;# 
   884  041D                     	;# 
   885  041E                     	;# 
   886  041F                     	;# 
   887  048C                     	;# 
   888  048C                     	;# 
   889  048D                     	;# 
   890  048E                     	;# 
   891  048F                     	;# 
   892  048F                     	;# 
   893  0490                     	;# 
   894  0491                     	;# 
   895  0492                     	;# 
   896  0492                     	;# 
   897  0493                     	;# 
   898  0494                     	;# 
   899  0495                     	;# 
   900  0495                     	;# 
   901  0496                     	;# 
   902  0497                     	;# 
   903  0498                     	;# 
   904  0499                     	;# 
   905  049A                     	;# 
   906  049B                     	;# 
   907  049C                     	;# 
   908  049D                     	;# 
   909  050C                     	;# 
   910  050C                     	;# 
   911  050D                     	;# 
   912  050E                     	;# 
   913  050F                     	;# 
   914  050F                     	;# 
   915  0510                     	;# 
   916  0511                     	;# 
   917  0512                     	;# 
   918  0512                     	;# 
   919  0513                     	;# 
   920  0514                     	;# 
   921  0515                     	;# 
   922  0515                     	;# 
   923  0516                     	;# 
   924  0517                     	;# 
   925  0518                     	;# 
   926  0519                     	;# 
   927  051A                     	;# 
   928  051B                     	;# 
   929  051C                     	;# 
   930  051D                     	;# 
   931  058C                     	;# 
   932  058C                     	;# 
   933  058D                     	;# 
   934  058E                     	;# 
   935  058F                     	;# 
   936  058F                     	;# 
   937  0590                     	;# 
   938  0591                     	;# 
   939  0592                     	;# 
   940  0593                     	;# 
   941  060C                     	;# 
   942  060D                     	;# 
   943  060E                     	;# 
   944  060F                     	;# 
   945  0610                     	;# 
   946  0611                     	;# 
   947  0612                     	;# 
   948  0613                     	;# 
   949  0614                     	;# 
   950  0616                     	;# 
   951  0617                     	;# 
   952  0618                     	;# 
   953  0619                     	;# 
   954  061A                     	;# 
   955  061B                     	;# 
   956  061C                     	;# 
   957  061D                     	;# 
   958  061E                     	;# 
   959  068C                     	;# 
   960  068D                     	;# 
   961  068E                     	;# 
   962  068F                     	;# 
   963  0690                     	;# 
   964  0691                     	;# 
   965  0692                     	;# 
   966  0693                     	;# 
   967  0694                     	;# 
   968  070C                     	;# 
   969  070D                     	;# 
   970  070E                     	;# 
   971  070F                     	;# 
   972  0710                     	;# 
   973  0711                     	;# 
   974  0712                     	;# 
   975  0713                     	;# 
   976  0714                     	;# 
   977  0716                     	;# 
   978  0717                     	;# 
   979  0718                     	;# 
   980  0719                     	;# 
   981  071A                     	;# 
   982  071B                     	;# 
   983  071C                     	;# 
   984  071D                     	;# 
   985  071E                     	;# 
   986  0796                     	;# 
   987  0797                     	;# 
   988  0798                     	;# 
   989  0799                     	;# 
   990  079A                     	;# 
   991  079B                     	;# 
   992  080C                     	;# 
   993  080D                     	;# 
   994  080E                     	;# 
   995  080F                     	;# 
   996  0810                     	;# 
   997  0811                     	;# 
   998  0812                     	;# 
   999  0813                     	;# 
  1000  0814                     	;# 
  1001  081A                     	;# 
  1002  081B                     	;# 
  1003  081C                     	;# 
  1004  081D                     	;# 
  1005  081E                     	;# 
  1006  081F                     	;# 
  1007  088C                     	;# 
  1008  088D                     	;# 
  1009  088E                     	;# 
  1010  088F                     	;# 
  1011  0890                     	;# 
  1012  0891                     	;# 
  1013  0892                     	;# 
  1014  0893                     	;# 
  1015  0895                     	;# 
  1016  0896                     	;# 
  1017  0897                     	;# 
  1018  0898                     	;# 
  1019  0899                     	;# 
  1020  089A                     	;# 
  1021  089B                     	;# 
  1022  090C                     	;# 
  1023  090E                     	;# 
  1024  090F                     	;# 
  1025  091F                     	;# 
  1026  091F                     	;# 
  1027  098F                     	;# 
  1028  098F                     	;# 
  1029  0990                     	;# 
  1030  0991                     	;# 
  1031  0992                     	;# 
  1032  0993                     	;# 
  1033  0994                     	;# 
  1034  0995                     	;# 
  1035  0996                     	;# 
  1036  0997                     	;# 
  1037  0E0F                     	;# 
  1038  0E10                     	;# 
  1039  0E11                     	;# 
  1040  0E12                     	;# 
  1041  0E13                     	;# 
  1042  0E14                     	;# 
  1043  0E15                     	;# 
  1044  0E16                     	;# 
  1045  0E17                     	;# 
  1046  0E18                     	;# 
  1047  0E19                     	;# 
  1048  0E1A                     	;# 
  1049  0E1B                     	;# 
  1050  0E1C                     	;# 
  1051  0E1D                     	;# 
  1052  0E1E                     	;# 
  1053  0E1F                     	;# 
  1054  0E20                     	;# 
  1055  0E21                     	;# 
  1056  0E22                     	;# 
  1057  0E23                     	;# 
  1058  0E24                     	;# 
  1059  0E25                     	;# 
  1060  0E26                     	;# 
  1061  0E27                     	;# 
  1062  0E28                     	;# 
  1063  0E29                     	;# 
  1064  0E2A                     	;# 
  1065  0E2B                     	;# 
  1066  0E2C                     	;# 
  1067  0E2D                     	;# 
  1068  0E2E                     	;# 
  1069  0E2F                     	;# 
  1070  0E30                     	;# 
  1071  0E31                     	;# 
  1072  0E32                     	;# 
  1073  0E33                     	;# 
  1074  0E34                     	;# 
  1075  0E35                     	;# 
  1076  0E36                     	;# 
  1077  0E37                     	;# 
  1078  0E8F                     	;# 
  1079  0E90                     	;# 
  1080  0E91                     	;# 
  1081  0E92                     	;# 
  1082  0E93                     	;# 
  1083  0E94                     	;# 
  1084  0E95                     	;# 
  1085  0E96                     	;# 
  1086  0E97                     	;# 
  1087  0E9C                     	;# 
  1088  0E9D                     	;# 
  1089  0E9E                     	;# 
  1090  0EA1                     	;# 
  1091  0EA2                     	;# 
  1092  0EA3                     	;# 
  1093  0EA4                     	;# 
  1094  0EA5                     	;# 
  1095  0EA9                     	;# 
  1096  0EAA                     	;# 
  1097  0EAB                     	;# 
  1098  0EAC                     	;# 
  1099  0EB1                     	;# 
  1100  0EB2                     	;# 
  1101  0EB3                     	;# 
  1102  0EB8                     	;# 
  1103  0EB9                     	;# 
  1104  0EBA                     	;# 
  1105  0EBB                     	;# 
  1106  0EBC                     	;# 
  1107  0EBD                     	;# 
  1108  0EBE                     	;# 
  1109  0EC3                     	;# 
  1110  0EC5                     	;# 
  1111  0EC6                     	;# 
  1112  0EC7                     	;# 
  1113  0EC8                     	;# 
  1114  0EC9                     	;# 
  1115  0ECA                     	;# 
  1116  0ECB                     	;# 
  1117  0ECC                     	;# 
  1118  0F10                     	;# 
  1119  0F11                     	;# 
  1120  0F12                     	;# 
  1121  0F13                     	;# 
  1122  0F14                     	;# 
  1123  0F15                     	;# 
  1124  0F16                     	;# 
  1125  0F17                     	;# 
  1126  0F18                     	;# 
  1127  0F19                     	;# 
  1128  0F1A                     	;# 
  1129  0F1B                     	;# 
  1130  0F1C                     	;# 
  1131  0F1D                     	;# 
  1132  0F1E                     	;# 
  1133  0F1F                     	;# 
  1134  0F20                     	;# 
  1135  0F21                     	;# 
  1136  0F22                     	;# 
  1137  0F23                     	;# 
  1138  0F24                     	;# 
  1139  0F25                     	;# 
  1140  0F26                     	;# 
  1141  0F27                     	;# 
  1142  0F28                     	;# 
  1143  0F29                     	;# 
  1144  0F2A                     	;# 
  1145  0F2B                     	;# 
  1146  0F2C                     	;# 
  1147  0F2D                     	;# 
  1148  0F2E                     	;# 
  1149  0F2F                     	;# 
  1150  0F30                     	;# 
  1151  0F31                     	;# 
  1152  0F32                     	;# 
  1153  0F38                     	;# 
  1154  0F39                     	;# 
  1155  0F3A                     	;# 
  1156  0F3B                     	;# 
  1157  0F3C                     	;# 
  1158  0F3D                     	;# 
  1159  0F3E                     	;# 
  1160  0F3F                     	;# 
  1161  0F40                     	;# 
  1162  0F41                     	;# 
  1163  0F43                     	;# 
  1164  0F44                     	;# 
  1165  0F45                     	;# 
  1166  0F46                     	;# 
  1167  0F47                     	;# 
  1168  0F48                     	;# 
  1169  0F49                     	;# 
  1170  0F4A                     	;# 
  1171  0F4B                     	;# 
  1172  0F4C                     	;# 
  1173  0F4E                     	;# 
  1174  0F4F                     	;# 
  1175  0F50                     	;# 
  1176  0F51                     	;# 
  1177  0F52                     	;# 
  1178  0F53                     	;# 
  1179  0F54                     	;# 
  1180  0F55                     	;# 
  1181  0F56                     	;# 
  1182  0F57                     	;# 
  1183  0F59                     	;# 
  1184  0F5A                     	;# 
  1185  0F5B                     	;# 
  1186  0F5C                     	;# 
  1187  0F5D                     	;# 
  1188  0F61                     	;# 
  1189  0F62                     	;# 
  1190  0F64                     	;# 
  1191  0F65                     	;# 
  1192  0F66                     	;# 
  1193  0F67                     	;# 
  1194  0F68                     	;# 
  1195  0F69                     	;# 
  1196  0F6A                     	;# 
  1197  0F6B                     	;# 
  1198  0F6C                     	;# 
  1199  0F6D                     	;# 
  1200  0FE4                     	;# 
  1201  0FE5                     	;# 
  1202  0FE6                     	;# 
  1203  0FE7                     	;# 
  1204  0FE8                     	;# 
  1205  0FE9                     	;# 
  1206  0FEA                     	;# 
  1207  0FEB                     	;# 
  1208  0FED                     	;# 
  1209  0FEE                     	;# 
  1210  0FEF                     	;# 
  1211  0000                     	;# 
  1212  0001                     	;# 
  1213  0002                     	;# 
  1214  0003                     	;# 
  1215  0004                     	;# 
  1216  0005                     	;# 
  1217  0006                     	;# 
  1218  0007                     	;# 
  1219  0008                     	;# 
  1220  0009                     	;# 
  1221  000A                     	;# 
  1222  000B                     	;# 
  1223  000C                     	;# 
  1224  000D                     	;# 
  1225  000E                     	;# 
  1226  000F                     	;# 
  1227  0010                     	;# 
  1228  0011                     	;# 
  1229  0012                     	;# 
  1230  0013                     	;# 
  1231  0014                     	;# 
  1232  0015                     	;# 
  1233  0016                     	;# 
  1234  0017                     	;# 
  1235  0018                     	;# 
  1236  0019                     	;# 
  1237  001A                     	;# 
  1238  001C                     	;# 
  1239  001C                     	;# 
  1240  001D                     	;# 
  1241  001D                     	;# 
  1242  001E                     	;# 
  1243  001F                     	;# 
  1244  008C                     	;# 
  1245  008C                     	;# 
  1246  008D                     	;# 
  1247  008E                     	;# 
  1248  008E                     	;# 
  1249  008F                     	;# 
  1250  0090                     	;# 
  1251  0090                     	;# 
  1252  0091                     	;# 
  1253  0093                     	;# 
  1254  0094                     	;# 
  1255  0095                     	;# 
  1256  0096                     	;# 
  1257  0097                     	;# 
  1258  0098                     	;# 
  1259  0099                     	;# 
  1260  009A                     	;# 
  1261  009B                     	;# 
  1262  009C                     	;# 
  1263  009D                     	;# 
  1264  009E                     	;# 
  1265  010C                     	;# 
  1266  010D                     	;# 
  1267  010E                     	;# 
  1268  010E                     	;# 
  1269  010F                     	;# 
  1270  0110                     	;# 
  1271  0110                     	;# 
  1272  0111                     	;# 
  1273  0112                     	;# 
  1274  0112                     	;# 
  1275  0113                     	;# 
  1276  0114                     	;# 
  1277  0114                     	;# 
  1278  0115                     	;# 
  1279  0116                     	;# 
  1280  0116                     	;# 
  1281  0117                     	;# 
  1282  0119                     	;# 
  1283  0119                     	;# 
  1284  0119                     	;# 
  1285  011A                     	;# 
  1286  011A                     	;# 
  1287  011A                     	;# 
  1288  011B                     	;# 
  1289  011B                     	;# 
  1290  011B                     	;# 
  1291  011B                     	;# 
  1292  011B                     	;# 
  1293  011C                     	;# 
  1294  011C                     	;# 
  1295  011C                     	;# 
  1296  011D                     	;# 
  1297  011D                     	;# 
  1298  011D                     	;# 
  1299  011E                     	;# 
  1300  011E                     	;# 
  1301  011E                     	;# 
  1302  011F                     	;# 
  1303  011F                     	;# 
  1304  011F                     	;# 
  1305  011F                     	;# 
  1306  011F                     	;# 
  1307  018C                     	;# 
  1308  018D                     	;# 
  1309  018E                     	;# 
  1310  018F                     	;# 
  1311  0190                     	;# 
  1312  0191                     	;# 
  1313  0192                     	;# 
  1314  0196                     	;# 
  1315  0197                     	;# 
  1316  0198                     	;# 
  1317  0199                     	;# 
  1318  019A                     	;# 
  1319  019B                     	;# 
  1320  019C                     	;# 
  1321  020C                     	;# 
  1322  020C                     	;# 
  1323  020D                     	;# 
  1324  020E                     	;# 
  1325  020F                     	;# 
  1326  020F                     	;# 
  1327  0210                     	;# 
  1328  0210                     	;# 
  1329  0211                     	;# 
  1330  0211                     	;# 
  1331  0212                     	;# 
  1332  0212                     	;# 
  1333  0213                     	;# 
  1334  0214                     	;# 
  1335  0215                     	;# 
  1336  0215                     	;# 
  1337  0216                     	;# 
  1338  0216                     	;# 
  1339  0217                     	;# 
  1340  0217                     	;# 
  1341  0218                     	;# 
  1342  0218                     	;# 
  1343  0219                     	;# 
  1344  021A                     	;# 
  1345  021B                     	;# 
  1346  021B                     	;# 
  1347  021C                     	;# 
  1348  021C                     	;# 
  1349  021D                     	;# 
  1350  021D                     	;# 
  1351  021E                     	;# 
  1352  021F                     	;# 
  1353  028C                     	;# 
  1354  028C                     	;# 
  1355  028D                     	;# 
  1356  028D                     	;# 
  1357  028E                     	;# 
  1358  028F                     	;# 
  1359  0290                     	;# 
  1360  0290                     	;# 
  1361  0291                     	;# 
  1362  0292                     	;# 
  1363  0292                     	;# 
  1364  0293                     	;# 
  1365  0293                     	;# 
  1366  0294                     	;# 
  1367  0295                     	;# 
  1368  0296                     	;# 
  1369  0296                     	;# 
  1370  0297                     	;# 
  1371  0298                     	;# 
  1372  0298                     	;# 
  1373  0299                     	;# 
  1374  0299                     	;# 
  1375  029A                     	;# 
  1376  029B                     	;# 
  1377  029C                     	;# 
  1378  029C                     	;# 
  1379  029D                     	;# 
  1380  030C                     	;# 
  1381  030C                     	;# 
  1382  030D                     	;# 
  1383  030E                     	;# 
  1384  030F                     	;# 
  1385  0310                     	;# 
  1386  0310                     	;# 
  1387  0311                     	;# 
  1388  0312                     	;# 
  1389  0313                     	;# 
  1390  0314                     	;# 
  1391  0314                     	;# 
  1392  0315                     	;# 
  1393  0316                     	;# 
  1394  0317                     	;# 
  1395  0318                     	;# 
  1396  0318                     	;# 
  1397  0319                     	;# 
  1398  031A                     	;# 
  1399  031B                     	;# 
  1400  031C                     	;# 
  1401  031C                     	;# 
  1402  031D                     	;# 
  1403  031E                     	;# 
  1404  031F                     	;# 
  1405  038C                     	;# 
  1406  038C                     	;# 
  1407  038D                     	;# 
  1408  038E                     	;# 
  1409  0390                     	;# 
  1410  0390                     	;# 
  1411  0391                     	;# 
  1412  0392                     	;# 
  1413  040C                     	;# 
  1414  040D                     	;# 
  1415  040E                     	;# 
  1416  040F                     	;# 
  1417  0410                     	;# 
  1418  0411                     	;# 
  1419  0416                     	;# 
  1420  0416                     	;# 
  1421  0417                     	;# 
  1422  0418                     	;# 
  1423  0418                     	;# 
  1424  0419                     	;# 
  1425  041A                     	;# 
  1426  041A                     	;# 
  1427  041B                     	;# 
  1428  041C                     	;# 
  1429  041C                     	;# 
  1430  041D                     	;# 
  1431  041E                     	;# 
  1432  041F                     	;# 
  1433  048C                     	;# 
  1434  048C                     	;# 
  1435  048D                     	;# 
  1436  048E                     	;# 
  1437  048F                     	;# 
  1438  048F                     	;# 
  1439  0490                     	;# 
  1440  0491                     	;# 
  1441  0492                     	;# 
  1442  0492                     	;# 
  1443  0493                     	;# 
  1444  0494                     	;# 
  1445  0495                     	;# 
  1446  0495                     	;# 
  1447  0496                     	;# 
  1448  0497                     	;# 
  1449  0498                     	;# 
  1450  0499                     	;# 
  1451  049A                     	;# 
  1452  049B                     	;# 
  1453  049C                     	;# 
  1454  049D                     	;# 
  1455  050C                     	;# 
  1456  050C                     	;# 
  1457  050D                     	;# 
  1458  050E                     	;# 
  1459  050F                     	;# 
  1460  050F                     	;# 
  1461  0510                     	;# 
  1462  0511                     	;# 
  1463  0512                     	;# 
  1464  0512                     	;# 
  1465  0513                     	;# 
  1466  0514                     	;# 
  1467  0515                     	;# 
  1468  0515                     	;# 
  1469  0516                     	;# 
  1470  0517                     	;# 
  1471  0518                     	;# 
  1472  0519                     	;# 
  1473  051A                     	;# 
  1474  051B                     	;# 
  1475  051C                     	;# 
  1476  051D                     	;# 
  1477  058C                     	;# 
  1478  058C                     	;# 
  1479  058D                     	;# 
  1480  058E                     	;# 
  1481  058F                     	;# 
  1482  058F                     	;# 
  1483  0590                     	;# 
  1484  0591                     	;# 
  1485  0592                     	;# 
  1486  0593                     	;# 
  1487  060C                     	;# 
  1488  060D                     	;# 
  1489  060E                     	;# 
  1490  060F                     	;# 
  1491  0610                     	;# 
  1492  0611                     	;# 
  1493  0612                     	;# 
  1494  0613                     	;# 
  1495  0614                     	;# 
  1496  0616                     	;# 
  1497  0617                     	;# 
  1498  0618                     	;# 
  1499  0619                     	;# 
  1500  061A                     	;# 
  1501  061B                     	;# 
  1502  061C                     	;# 
  1503  061D                     	;# 
  1504  061E                     	;# 
  1505  068C                     	;# 
  1506  068D                     	;# 
  1507  068E                     	;# 
  1508  068F                     	;# 
  1509  0690                     	;# 
  1510  0691                     	;# 
  1511  0692                     	;# 
  1512  0693                     	;# 
  1513  0694                     	;# 
  1514  070C                     	;# 
  1515  070D                     	;# 
  1516  070E                     	;# 
  1517  070F                     	;# 
  1518  0710                     	;# 
  1519  0711                     	;# 
  1520  0712                     	;# 
  1521  0713                     	;# 
  1522  0714                     	;# 
  1523  0716                     	;# 
  1524  0717                     	;# 
  1525  0718                     	;# 
  1526  0719                     	;# 
  1527  071A                     	;# 
  1528  071B                     	;# 
  1529  071C                     	;# 
  1530  071D                     	;# 
  1531  071E                     	;# 
  1532  0796                     	;# 
  1533  0797                     	;# 
  1534  0798                     	;# 
  1535  0799                     	;# 
  1536  079A                     	;# 
  1537  079B                     	;# 
  1538  080C                     	;# 
  1539  080D                     	;# 
  1540  080E                     	;# 
  1541  080F                     	;# 
  1542  0810                     	;# 
  1543  0811                     	;# 
  1544  0812                     	;# 
  1545  0813                     	;# 
  1546  0814                     	;# 
  1547  081A                     	;# 
  1548  081B                     	;# 
  1549  081C                     	;# 
  1550  081D                     	;# 
  1551  081E                     	;# 
  1552  081F                     	;# 
  1553  088C                     	;# 
  1554  088D                     	;# 
  1555  088E                     	;# 
  1556  088F                     	;# 
  1557  0890                     	;# 
  1558  0891                     	;# 
  1559  0892                     	;# 
  1560  0893                     	;# 
  1561  0895                     	;# 
  1562  0896                     	;# 
  1563  0897                     	;# 
  1564  0898                     	;# 
  1565  0899                     	;# 
  1566  089A                     	;# 
  1567  089B                     	;# 
  1568  090C                     	;# 
  1569  090E                     	;# 
  1570  090F                     	;# 
  1571  091F                     	;# 
  1572  091F                     	;# 
  1573  098F                     	;# 
  1574  098F                     	;# 
  1575  0990                     	;# 
  1576  0991                     	;# 
  1577  0992                     	;# 
  1578  0993                     	;# 
  1579  0994                     	;# 
  1580  0995                     	;# 
  1581  0996                     	;# 
  1582  0997                     	;# 
  1583  0E0F                     	;# 
  1584  0E10                     	;# 
  1585  0E11                     	;# 
  1586  0E12                     	;# 
  1587  0E13                     	;# 
  1588  0E14                     	;# 
  1589  0E15                     	;# 
  1590  0E16                     	;# 
  1591  0E17                     	;# 
  1592  0E18                     	;# 
  1593  0E19                     	;# 
  1594  0E1A                     	;# 
  1595  0E1B                     	;# 
  1596  0E1C                     	;# 
  1597  0E1D                     	;# 
  1598  0E1E                     	;# 
  1599  0E1F                     	;# 
  1600  0E20                     	;# 
  1601  0E21                     	;# 
  1602  0E22                     	;# 
  1603  0E23                     	;# 
  1604  0E24                     	;# 
  1605  0E25                     	;# 
  1606  0E26                     	;# 
  1607  0E27                     	;# 
  1608  0E28                     	;# 
  1609  0E29                     	;# 
  1610  0E2A                     	;# 
  1611  0E2B                     	;# 
  1612  0E2C                     	;# 
  1613  0E2D                     	;# 
  1614  0E2E                     	;# 
  1615  0E2F                     	;# 
  1616  0E30                     	;# 
  1617  0E31                     	;# 
  1618  0E32                     	;# 
  1619  0E33                     	;# 
  1620  0E34                     	;# 
  1621  0E35                     	;# 
  1622  0E36                     	;# 
  1623  0E37                     	;# 
  1624  0E8F                     	;# 
  1625  0E90                     	;# 
  1626  0E91                     	;# 
  1627  0E92                     	;# 
  1628  0E93                     	;# 
  1629  0E94                     	;# 
  1630  0E95                     	;# 
  1631  0E96                     	;# 
  1632  0E97                     	;# 
  1633  0E9C                     	;# 
  1634  0E9D                     	;# 
  1635  0E9E                     	;# 
  1636  0EA1                     	;# 
  1637  0EA2                     	;# 
  1638  0EA3                     	;# 
  1639  0EA4                     	;# 
  1640  0EA5                     	;# 
  1641  0EA9                     	;# 
  1642  0EAA                     	;# 
  1643  0EAB                     	;# 
  1644  0EAC                     	;# 
  1645  0EB1                     	;# 
  1646  0EB2                     	;# 
  1647  0EB3                     	;# 
  1648  0EB8                     	;# 
  1649  0EB9                     	;# 
  1650  0EBA                     	;# 
  1651  0EBB                     	;# 
  1652  0EBC                     	;# 
  1653  0EBD                     	;# 
  1654  0EBE                     	;# 
  1655  0EC3                     	;# 
  1656  0EC5                     	;# 
  1657  0EC6                     	;# 
  1658  0EC7                     	;# 
  1659  0EC8                     	;# 
  1660  0EC9                     	;# 
  1661  0ECA                     	;# 
  1662  0ECB                     	;# 
  1663  0ECC                     	;# 
  1664  0F10                     	;# 
  1665  0F11                     	;# 
  1666  0F12                     	;# 
  1667  0F13                     	;# 
  1668  0F14                     	;# 
  1669  0F15                     	;# 
  1670  0F16                     	;# 
  1671  0F17                     	;# 
  1672  0F18                     	;# 
  1673  0F19                     	;# 
  1674  0F1A                     	;# 
  1675  0F1B                     	;# 
  1676  0F1C                     	;# 
  1677  0F1D                     	;# 
  1678  0F1E                     	;# 
  1679  0F1F                     	;# 
  1680  0F20                     	;# 
  1681  0F21                     	;# 
  1682  0F22                     	;# 
  1683  0F23                     	;# 
  1684  0F24                     	;# 
  1685  0F25                     	;# 
  1686  0F26                     	;# 
  1687  0F27                     	;# 
  1688  0F28                     	;# 
  1689  0F29                     	;# 
  1690  0F2A                     	;# 
  1691  0F2B                     	;# 
  1692  0F2C                     	;# 
  1693  0F2D                     	;# 
  1694  0F2E                     	;# 
  1695  0F2F                     	;# 
  1696  0F30                     	;# 
  1697  0F31                     	;# 
  1698  0F32                     	;# 
  1699  0F38                     	;# 
  1700  0F39                     	;# 
  1701  0F3A                     	;# 
  1702  0F3B                     	;# 
  1703  0F3C                     	;# 
  1704  0F3D                     	;# 
  1705  0F3E                     	;# 
  1706  0F3F                     	;# 
  1707  0F40                     	;# 
  1708  0F41                     	;# 
  1709  0F43                     	;# 
  1710  0F44                     	;# 
  1711  0F45                     	;# 
  1712  0F46                     	;# 
  1713  0F47                     	;# 
  1714  0F48                     	;# 
  1715  0F49                     	;# 
  1716  0F4A                     	;# 
  1717  0F4B                     	;# 
  1718  0F4C                     	;# 
  1719  0F4E                     	;# 
  1720  0F4F                     	;# 
  1721  0F50                     	;# 
  1722  0F51                     	;# 
  1723  0F52                     	;# 
  1724  0F53                     	;# 
  1725  0F54                     	;# 
  1726  0F55                     	;# 
  1727  0F56                     	;# 
  1728  0F57                     	;# 
  1729  0F59                     	;# 
  1730  0F5A                     	;# 
  1731  0F5B                     	;# 
  1732  0F5C                     	;# 
  1733  0F5D                     	;# 
  1734  0F61                     	;# 
  1735  0F62                     	;# 
  1736  0F64                     	;# 
  1737  0F65                     	;# 
  1738  0F66                     	;# 
  1739  0F67                     	;# 
  1740  0F68                     	;# 
  1741  0F69                     	;# 
  1742  0F6A                     	;# 
  1743  0F6B                     	;# 
  1744  0F6C                     	;# 
  1745  0F6D                     	;# 
  1746  0FE4                     	;# 
  1747  0FE5                     	;# 
  1748  0FE6                     	;# 
  1749  0FE7                     	;# 
  1750  0FE8                     	;# 
  1751  0FE9                     	;# 
  1752  0FEA                     	;# 
  1753  0FEB                     	;# 
  1754  0FED                     	;# 
  1755  0FEE                     	;# 
  1756  0FEF                     	;# 
  1757  0000                     	;# 
  1758  0001                     	;# 
  1759  0002                     	;# 
  1760  0003                     	;# 
  1761  0004                     	;# 
  1762  0005                     	;# 
  1763  0006                     	;# 
  1764  0007                     	;# 
  1765  0008                     	;# 
  1766  0009                     	;# 
  1767  000A                     	;# 
  1768  000B                     	;# 
  1769  000C                     	;# 
  1770  000D                     	;# 
  1771  000E                     	;# 
  1772  000F                     	;# 
  1773  0010                     	;# 
  1774  0011                     	;# 
  1775  0012                     	;# 
  1776  0013                     	;# 
  1777  0014                     	;# 
  1778  0015                     	;# 
  1779  0016                     	;# 
  1780  0017                     	;# 
  1781  0018                     	;# 
  1782  0019                     	;# 
  1783  001A                     	;# 
  1784  001C                     	;# 
  1785  001C                     	;# 
  1786  001D                     	;# 
  1787  001D                     	;# 
  1788  001E                     	;# 
  1789  001F                     	;# 
  1790  008C                     	;# 
  1791  008C                     	;# 
  1792  008D                     	;# 
  1793  008E                     	;# 
  1794  008E                     	;# 
  1795  008F                     	;# 
  1796  0090                     	;# 
  1797  0090                     	;# 
  1798  0091                     	;# 
  1799  0093                     	;# 
  1800  0094                     	;# 
  1801  0095                     	;# 
  1802  0096                     	;# 
  1803  0097                     	;# 
  1804  0098                     	;# 
  1805  0099                     	;# 
  1806  009A                     	;# 
  1807  009B                     	;# 
  1808  009C                     	;# 
  1809  009D                     	;# 
  1810  009E                     	;# 
  1811  010C                     	;# 
  1812  010D                     	;# 
  1813  010E                     	;# 
  1814  010E                     	;# 
  1815  010F                     	;# 
  1816  0110                     	;# 
  1817  0110                     	;# 
  1818  0111                     	;# 
  1819  0112                     	;# 
  1820  0112                     	;# 
  1821  0113                     	;# 
  1822  0114                     	;# 
  1823  0114                     	;# 
  1824  0115                     	;# 
  1825  0116                     	;# 
  1826  0116                     	;# 
  1827  0117                     	;# 
  1828  0119                     	;# 
  1829  0119                     	;# 
  1830  0119                     	;# 
  1831  011A                     	;# 
  1832  011A                     	;# 
  1833  011A                     	;# 
  1834  011B                     	;# 
  1835  011B                     	;# 
  1836  011B                     	;# 
  1837  011B                     	;# 
  1838  011B                     	;# 
  1839  011C                     	;# 
  1840  011C                     	;# 
  1841  011C                     	;# 
  1842  011D                     	;# 
  1843  011D                     	;# 
  1844  011D                     	;# 
  1845  011E                     	;# 
  1846  011E                     	;# 
  1847  011E                     	;# 
  1848  011F                     	;# 
  1849  011F                     	;# 
  1850  011F                     	;# 
  1851  011F                     	;# 
  1852  011F                     	;# 
  1853  018C                     	;# 
  1854  018D                     	;# 
  1855  018E                     	;# 
  1856  018F                     	;# 
  1857  0190                     	;# 
  1858  0191                     	;# 
  1859  0192                     	;# 
  1860  0196                     	;# 
  1861  0197                     	;# 
  1862  0198                     	;# 
  1863  0199                     	;# 
  1864  019A                     	;# 
  1865  019B                     	;# 
  1866  019C                     	;# 
  1867  020C                     	;# 
  1868  020C                     	;# 
  1869  020D                     	;# 
  1870  020E                     	;# 
  1871  020F                     	;# 
  1872  020F                     	;# 
  1873  0210                     	;# 
  1874  0210                     	;# 
  1875  0211                     	;# 
  1876  0211                     	;# 
  1877  0212                     	;# 
  1878  0212                     	;# 
  1879  0213                     	;# 
  1880  0214                     	;# 
  1881  0215                     	;# 
  1882  0215                     	;# 
  1883  0216                     	;# 
  1884  0216                     	;# 
  1885  0217                     	;# 
  1886  0217                     	;# 
  1887  0218                     	;# 
  1888  0218                     	;# 
  1889  0219                     	;# 
  1890  021A                     	;# 
  1891  021B                     	;# 
  1892  021B                     	;# 
  1893  021C                     	;# 
  1894  021C                     	;# 
  1895  021D                     	;# 
  1896  021D                     	;# 
  1897  021E                     	;# 
  1898  021F                     	;# 
  1899  028C                     	;# 
  1900  028C                     	;# 
  1901  028D                     	;# 
  1902  028D                     	;# 
  1903  028E                     	;# 
  1904  028F                     	;# 
  1905  0290                     	;# 
  1906  0290                     	;# 
  1907  0291                     	;# 
  1908  0292                     	;# 
  1909  0292                     	;# 
  1910  0293                     	;# 
  1911  0293                     	;# 
  1912  0294                     	;# 
  1913  0295                     	;# 
  1914  0296                     	;# 
  1915  0296                     	;# 
  1916  0297                     	;# 
  1917  0298                     	;# 
  1918  0298                     	;# 
  1919  0299                     	;# 
  1920  0299                     	;# 
  1921  029A                     	;# 
  1922  029B                     	;# 
  1923  029C                     	;# 
  1924  029C                     	;# 
  1925  029D                     	;# 
  1926  030C                     	;# 
  1927  030C                     	;# 
  1928  030D                     	;# 
  1929  030E                     	;# 
  1930  030F                     	;# 
  1931  0310                     	;# 
  1932  0310                     	;# 
  1933  0311                     	;# 
  1934  0312                     	;# 
  1935  0313                     	;# 
  1936  0314                     	;# 
  1937  0314                     	;# 
  1938  0315                     	;# 
  1939  0316                     	;# 
  1940  0317                     	;# 
  1941  0318                     	;# 
  1942  0318                     	;# 
  1943  0319                     	;# 
  1944  031A                     	;# 
  1945  031B                     	;# 
  1946  031C                     	;# 
  1947  031C                     	;# 
  1948  031D                     	;# 
  1949  031E                     	;# 
  1950  031F                     	;# 
  1951  038C                     	;# 
  1952  038C                     	;# 
  1953  038D                     	;# 
  1954  038E                     	;# 
  1955  0390                     	;# 
  1956  0390                     	;# 
  1957  0391                     	;# 
  1958  0392                     	;# 
  1959  040C                     	;# 
  1960  040D                     	;# 
  1961  040E                     	;# 
  1962  040F                     	;# 
  1963  0410                     	;# 
  1964  0411                     	;# 
  1965  0416                     	;# 
  1966  0416                     	;# 
  1967  0417                     	;# 
  1968  0418                     	;# 
  1969  0418                     	;# 
  1970  0419                     	;# 
  1971  041A                     	;# 
  1972  041A                     	;# 
  1973  041B                     	;# 
  1974  041C                     	;# 
  1975  041C                     	;# 
  1976  041D                     	;# 
  1977  041E                     	;# 
  1978  041F                     	;# 
  1979  048C                     	;# 
  1980  048C                     	;# 
  1981  048D                     	;# 
  1982  048E                     	;# 
  1983  048F                     	;# 
  1984  048F                     	;# 
  1985  0490                     	;# 
  1986  0491                     	;# 
  1987  0492                     	;# 
  1988  0492                     	;# 
  1989  0493                     	;# 
  1990  0494                     	;# 
  1991  0495                     	;# 
  1992  0495                     	;# 
  1993  0496                     	;# 
  1994  0497                     	;# 
  1995  0498                     	;# 
  1996  0499                     	;# 
  1997  049A                     	;# 
  1998  049B                     	;# 
  1999  049C                     	;# 
  2000  049D                     	;# 
  2001  050C                     	;# 
  2002  050C                     	;# 
  2003  050D                     	;# 
  2004  050E                     	;# 
  2005  050F                     	;# 
  2006  050F                     	;# 
  2007  0510                     	;# 
  2008  0511                     	;# 
  2009  0512                     	;# 
  2010  0512                     	;# 
  2011  0513                     	;# 
  2012  0514                     	;# 
  2013  0515                     	;# 
  2014  0515                     	;# 
  2015  0516                     	;# 
  2016  0517                     	;# 
  2017  0518                     	;# 
  2018  0519                     	;# 
  2019  051A                     	;# 
  2020  051B                     	;# 
  2021  051C                     	;# 
  2022  051D                     	;# 
  2023  058C                     	;# 
  2024  058C                     	;# 
  2025  058D                     	;# 
  2026  058E                     	;# 
  2027  058F                     	;# 
  2028  058F                     	;# 
  2029  0590                     	;# 
  2030  0591                     	;# 
  2031  0592                     	;# 
  2032  0593                     	;# 
  2033  060C                     	;# 
  2034  060D                     	;# 
  2035  060E                     	;# 
  2036  060F                     	;# 
  2037  0610                     	;# 
  2038  0611                     	;# 
  2039  0612                     	;# 
  2040  0613                     	;# 
  2041  0614                     	;# 
  2042  0616                     	;# 
  2043  0617                     	;# 
  2044  0618                     	;# 
  2045  0619                     	;# 
  2046  061A                     	;# 
  2047  061B                     	;# 
  2048  061C                     	;# 
  2049  061D                     	;# 
  2050  061E                     	;# 
  2051  068C                     	;# 
  2052  068D                     	;# 
  2053  068E                     	;# 
  2054  068F                     	;# 
  2055  0690                     	;# 
  2056  0691                     	;# 
  2057  0692                     	;# 
  2058  0693                     	;# 
  2059  0694                     	;# 
  2060  070C                     	;# 
  2061  070D                     	;# 
  2062  070E                     	;# 
  2063  070F                     	;# 
  2064  0710                     	;# 
  2065  0711                     	;# 
  2066  0712                     	;# 
  2067  0713                     	;# 
  2068  0714                     	;# 
  2069  0716                     	;# 
  2070  0717                     	;# 
  2071  0718                     	;# 
  2072  0719                     	;# 
  2073  071A                     	;# 
  2074  071B                     	;# 
  2075  071C                     	;# 
  2076  071D                     	;# 
  2077  071E                     	;# 
  2078  0796                     	;# 
  2079  0797                     	;# 
  2080  0798                     	;# 
  2081  0799                     	;# 
  2082  079A                     	;# 
  2083  079B                     	;# 
  2084  080C                     	;# 
  2085  080D                     	;# 
  2086  080E                     	;# 
  2087  080F                     	;# 
  2088  0810                     	;# 
  2089  0811                     	;# 
  2090  0812                     	;# 
  2091  0813                     	;# 
  2092  0814                     	;# 
  2093  081A                     	;# 
  2094  081B                     	;# 
  2095  081C                     	;# 
  2096  081D                     	;# 
  2097  081E                     	;# 
  2098  081F                     	;# 
  2099  088C                     	;# 
  2100  088D                     	;# 
  2101  088E                     	;# 
  2102  088F                     	;# 
  2103  0890                     	;# 
  2104  0891                     	;# 
  2105  0892                     	;# 
  2106  0893                     	;# 
  2107  0895                     	;# 
  2108  0896                     	;# 
  2109  0897                     	;# 
  2110  0898                     	;# 
  2111  0899                     	;# 
  2112  089A                     	;# 
  2113  089B                     	;# 
  2114  090C                     	;# 
  2115  090E                     	;# 
  2116  090F                     	;# 
  2117  091F                     	;# 
  2118  091F                     	;# 
  2119  098F                     	;# 
  2120  098F                     	;# 
  2121  0990                     	;# 
  2122  0991                     	;# 
  2123  0992                     	;# 
  2124  0993                     	;# 
  2125  0994                     	;# 
  2126  0995                     	;# 
  2127  0996                     	;# 
  2128  0997                     	;# 
  2129  0E0F                     	;# 
  2130  0E10                     	;# 
  2131  0E11                     	;# 
  2132  0E12                     	;# 
  2133  0E13                     	;# 
  2134  0E14                     	;# 
  2135  0E15                     	;# 
  2136  0E16                     	;# 
  2137  0E17                     	;# 
  2138  0E18                     	;# 
  2139  0E19                     	;# 
  2140  0E1A                     	;# 
  2141  0E1B                     	;# 
  2142  0E1C                     	;# 
  2143  0E1D                     	;# 
  2144  0E1E                     	;# 
  2145  0E1F                     	;# 
  2146  0E20                     	;# 
  2147  0E21                     	;# 
  2148  0E22                     	;# 
  2149  0E23                     	;# 
  2150  0E24                     	;# 
  2151  0E25                     	;# 
  2152  0E26                     	;# 
  2153  0E27                     	;# 
  2154  0E28                     	;# 
  2155  0E29                     	;# 
  2156  0E2A                     	;# 
  2157  0E2B                     	;# 
  2158  0E2C                     	;# 
  2159  0E2D                     	;# 
  2160  0E2E                     	;# 
  2161  0E2F                     	;# 
  2162  0E30                     	;# 
  2163  0E31                     	;# 
  2164  0E32                     	;# 
  2165  0E33                     	;# 
  2166  0E34                     	;# 
  2167  0E35                     	;# 
  2168  0E36                     	;# 
  2169  0E37                     	;# 
  2170  0E8F                     	;# 
  2171  0E90                     	;# 
  2172  0E91                     	;# 
  2173  0E92                     	;# 
  2174  0E93                     	;# 
  2175  0E94                     	;# 
  2176  0E95                     	;# 
  2177  0E96                     	;# 
  2178  0E97                     	;# 
  2179  0E9C                     	;# 
  2180  0E9D                     	;# 
  2181  0E9E                     	;# 
  2182  0EA1                     	;# 
  2183  0EA2                     	;# 
  2184  0EA3                     	;# 
  2185  0EA4                     	;# 
  2186  0EA5                     	;# 
  2187  0EA9                     	;# 
  2188  0EAA                     	;# 
  2189  0EAB                     	;# 
  2190  0EAC                     	;# 
  2191  0EB1                     	;# 
  2192  0EB2                     	;# 
  2193  0EB3                     	;# 
  2194  0EB8                     	;# 
  2195  0EB9                     	;# 
  2196  0EBA                     	;# 
  2197  0EBB                     	;# 
  2198  0EBC                     	;# 
  2199  0EBD                     	;# 
  2200  0EBE                     	;# 
  2201  0EC3                     	;# 
  2202  0EC5                     	;# 
  2203  0EC6                     	;# 
  2204  0EC7                     	;# 
  2205  0EC8                     	;# 
  2206  0EC9                     	;# 
  2207  0ECA                     	;# 
  2208  0ECB                     	;# 
  2209  0ECC                     	;# 
  2210  0F10                     	;# 
  2211  0F11                     	;# 
  2212  0F12                     	;# 
  2213  0F13                     	;# 
  2214  0F14                     	;# 
  2215  0F15                     	;# 
  2216  0F16                     	;# 
  2217  0F17                     	;# 
  2218  0F18                     	;# 
  2219  0F19                     	;# 
  2220  0F1A                     	;# 
  2221  0F1B                     	;# 
  2222  0F1C                     	;# 
  2223  0F1D                     	;# 
  2224  0F1E                     	;# 
  2225  0F1F                     	;# 
  2226  0F20                     	;# 
  2227  0F21                     	;# 
  2228  0F22                     	;# 
  2229  0F23                     	;# 
  2230  0F24                     	;# 
  2231  0F25                     	;# 
  2232  0F26                     	;# 
  2233  0F27                     	;# 
  2234  0F28                     	;# 
  2235  0F29                     	;# 
  2236  0F2A                     	;# 
  2237  0F2B                     	;# 
  2238  0F2C                     	;# 
  2239  0F2D                     	;# 
  2240  0F2E                     	;# 
  2241  0F2F                     	;# 
  2242  0F30                     	;# 
  2243  0F31                     	;# 
  2244  0F32                     	;# 
  2245  0F38                     	;# 
  2246  0F39                     	;# 
  2247  0F3A                     	;# 
  2248  0F3B                     	;# 
  2249  0F3C                     	;# 
  2250  0F3D                     	;# 
  2251  0F3E                     	;# 
  2252  0F3F                     	;# 
  2253  0F40                     	;# 
  2254  0F41                     	;# 
  2255  0F43                     	;# 
  2256  0F44                     	;# 
  2257  0F45                     	;# 
  2258  0F46                     	;# 
  2259  0F47                     	;# 
  2260  0F48                     	;# 
  2261  0F49                     	;# 
  2262  0F4A                     	;# 
  2263  0F4B                     	;# 
  2264  0F4C                     	;# 
  2265  0F4E                     	;# 
  2266  0F4F                     	;# 
  2267  0F50                     	;# 
  2268  0F51                     	;# 
  2269  0F52                     	;# 
  2270  0F53                     	;# 
  2271  0F54                     	;# 
  2272  0F55                     	;# 
  2273  0F56                     	;# 
  2274  0F57                     	;# 
  2275  0F59                     	;# 
  2276  0F5A                     	;# 
  2277  0F5B                     	;# 
  2278  0F5C                     	;# 
  2279  0F5D                     	;# 
  2280  0F61                     	;# 
  2281  0F62                     	;# 
  2282  0F64                     	;# 
  2283  0F65                     	;# 
  2284  0F66                     	;# 
  2285  0F67                     	;# 
  2286  0F68                     	;# 
  2287  0F69                     	;# 
  2288  0F6A                     	;# 
  2289  0F6B                     	;# 
  2290  0F6C                     	;# 
  2291  0F6D                     	;# 
  2292  0FE4                     	;# 
  2293  0FE5                     	;# 
  2294  0FE6                     	;# 
  2295  0FE7                     	;# 
  2296  0FE8                     	;# 
  2297  0FE9                     	;# 
  2298  0FEA                     	;# 
  2299  0FEB                     	;# 
  2300  0FED                     	;# 
  2301  0FEE                     	;# 
  2302  0FEF                     	;# 
  2303  0000                     	;# 
  2304  0001                     	;# 
  2305  0002                     	;# 
  2306  0003                     	;# 
  2307  0004                     	;# 
  2308  0005                     	;# 
  2309  0006                     	;# 
  2310  0007                     	;# 
  2311  0008                     	;# 
  2312  0009                     	;# 
  2313  000A                     	;# 
  2314  000B                     	;# 
  2315  000C                     	;# 
  2316  000D                     	;# 
  2317  000E                     	;# 
  2318  000F                     	;# 
  2319  0010                     	;# 
  2320  0011                     	;# 
  2321  0012                     	;# 
  2322  0013                     	;# 
  2323  0014                     	;# 
  2324  0015                     	;# 
  2325  0016                     	;# 
  2326  0017                     	;# 
  2327  0018                     	;# 
  2328  0019                     	;# 
  2329  001A                     	;# 
  2330  001C                     	;# 
  2331  001C                     	;# 
  2332  001D                     	;# 
  2333  001D                     	;# 
  2334  001E                     	;# 
  2335  001F                     	;# 
  2336  008C                     	;# 
  2337  008C                     	;# 
  2338  008D                     	;# 
  2339  008E                     	;# 
  2340  008E                     	;# 
  2341  008F                     	;# 
  2342  0090                     	;# 
  2343  0090                     	;# 
  2344  0091                     	;# 
  2345  0093                     	;# 
  2346  0094                     	;# 
  2347  0095                     	;# 
  2348  0096                     	;# 
  2349  0097                     	;# 
  2350  0098                     	;# 
  2351  0099                     	;# 
  2352  009A                     	;# 
  2353  009B                     	;# 
  2354  009C                     	;# 
  2355  009D                     	;# 
  2356  009E                     	;# 
  2357  010C                     	;# 
  2358  010D                     	;# 
  2359  010E                     	;# 
  2360  010E                     	;# 
  2361  010F                     	;# 
  2362  0110                     	;# 
  2363  0110                     	;# 
  2364  0111                     	;# 
  2365  0112                     	;# 
  2366  0112                     	;# 
  2367  0113                     	;# 
  2368  0114                     	;# 
  2369  0114                     	;# 
  2370  0115                     	;# 
  2371  0116                     	;# 
  2372  0116                     	;# 
  2373  0117                     	;# 
  2374  0119                     	;# 
  2375  0119                     	;# 
  2376  0119                     	;# 
  2377  011A                     	;# 
  2378  011A                     	;# 
  2379  011A                     	;# 
  2380  011B                     	;# 
  2381  011B                     	;# 
  2382  011B                     	;# 
  2383  011B                     	;# 
  2384  011B                     	;# 
  2385  011C                     	;# 
  2386  011C                     	;# 
  2387  011C                     	;# 
  2388  011D                     	;# 
  2389  011D                     	;# 
  2390  011D                     	;# 
  2391  011E                     	;# 
  2392  011E                     	;# 
  2393  011E                     	;# 
  2394  011F                     	;# 
  2395  011F                     	;# 
  2396  011F                     	;# 
  2397  011F                     	;# 
  2398  011F                     	;# 
  2399  018C                     	;# 
  2400  018D                     	;# 
  2401  018E                     	;# 
  2402  018F                     	;# 
  2403  0190                     	;# 
  2404  0191                     	;# 
  2405  0192                     	;# 
  2406  0196                     	;# 
  2407  0197                     	;# 
  2408  0198                     	;# 
  2409  0199                     	;# 
  2410  019A                     	;# 
  2411  019B                     	;# 
  2412  019C                     	;# 
  2413  020C                     	;# 
  2414  020C                     	;# 
  2415  020D                     	;# 
  2416  020E                     	;# 
  2417  020F                     	;# 
  2418  020F                     	;# 
  2419  0210                     	;# 
  2420  0210                     	;# 
  2421  0211                     	;# 
  2422  0211                     	;# 
  2423  0212                     	;# 
  2424  0212                     	;# 
  2425  0213                     	;# 
  2426  0214                     	;# 
  2427  0215                     	;# 
  2428  0215                     	;# 
  2429  0216                     	;# 
  2430  0216                     	;# 
  2431  0217                     	;# 
  2432  0217                     	;# 
  2433  0218                     	;# 
  2434  0218                     	;# 
  2435  0219                     	;# 
  2436  021A                     	;# 
  2437  021B                     	;# 
  2438  021B                     	;# 
  2439  021C                     	;# 
  2440  021C                     	;# 
  2441  021D                     	;# 
  2442  021D                     	;# 
  2443  021E                     	;# 
  2444  021F                     	;# 
  2445  028C                     	;# 
  2446  028C                     	;# 
  2447  028D                     	;# 
  2448  028D                     	;# 
  2449  028E                     	;# 
  2450  028F                     	;# 
  2451  0290                     	;# 
  2452  0290                     	;# 
  2453  0291                     	;# 
  2454  0292                     	;# 
  2455  0292                     	;# 
  2456  0293                     	;# 
  2457  0293                     	;# 
  2458  0294                     	;# 
  2459  0295                     	;# 
  2460  0296                     	;# 
  2461  0296                     	;# 
  2462  0297                     	;# 
  2463  0298                     	;# 
  2464  0298                     	;# 
  2465  0299                     	;# 
  2466  0299                     	;# 
  2467  029A                     	;# 
  2468  029B                     	;# 
  2469  029C                     	;# 
  2470  029C                     	;# 
  2471  029D                     	;# 
  2472  030C                     	;# 
  2473  030C                     	;# 
  2474  030D                     	;# 
  2475  030E                     	;# 
  2476  030F                     	;# 
  2477  0310                     	;# 
  2478  0310                     	;# 
  2479  0311                     	;# 
  2480  0312                     	;# 
  2481  0313                     	;# 
  2482  0314                     	;# 
  2483  0314                     	;# 
  2484  0315                     	;# 
  2485  0316                     	;# 
  2486  0317                     	;# 
  2487  0318                     	;# 
  2488  0318                     	;# 
  2489  0319                     	;# 
  2490  031A                     	;# 
  2491  031B                     	;# 
  2492  031C                     	;# 
  2493  031C                     	;# 
  2494  031D                     	;# 
  2495  031E                     	;# 
  2496  031F                     	;# 
  2497  038C                     	;# 
  2498  038C                     	;# 
  2499  038D                     	;# 
  2500  038E                     	;# 
  2501  0390                     	;# 
  2502  0390                     	;# 
  2503  0391                     	;# 
  2504  0392                     	;# 
  2505  040C                     	;# 
  2506  040D                     	;# 
  2507  040E                     	;# 
  2508  040F                     	;# 
  2509  0410                     	;# 
  2510  0411                     	;# 
  2511  0416                     	;# 
  2512  0416                     	;# 
  2513  0417                     	;# 
  2514  0418                     	;# 
  2515  0418                     	;# 
  2516  0419                     	;# 
  2517  041A                     	;# 
  2518  041A                     	;# 
  2519  041B                     	;# 
  2520  041C                     	;# 
  2521  041C                     	;# 
  2522  041D                     	;# 
  2523  041E                     	;# 
  2524  041F                     	;# 
  2525  048C                     	;# 
  2526  048C                     	;# 
  2527  048D                     	;# 
  2528  048E                     	;# 
  2529  048F                     	;# 
  2530  048F                     	;# 
  2531  0490                     	;# 
  2532  0491                     	;# 
  2533  0492                     	;# 
  2534  0492                     	;# 
  2535  0493                     	;# 
  2536  0494                     	;# 
  2537  0495                     	;# 
  2538  0495                     	;# 
  2539  0496                     	;# 
  2540  0497                     	;# 
  2541  0498                     	;# 
  2542  0499                     	;# 
  2543  049A                     	;# 
  2544  049B                     	;# 
  2545  049C                     	;# 
  2546  049D                     	;# 
  2547  050C                     	;# 
  2548  050C                     	;# 
  2549  050D                     	;# 
  2550  050E                     	;# 
  2551  050F                     	;# 
  2552  050F                     	;# 
  2553  0510                     	;# 
  2554  0511                     	;# 
  2555  0512                     	;# 
  2556  0512                     	;# 
  2557  0513                     	;# 
  2558  0514                     	;# 
  2559  0515                     	;# 
  2560  0515                     	;# 
  2561  0516                     	;# 
  2562  0517                     	;# 
  2563  0518                     	;# 
  2564  0519                     	;# 
  2565  051A                     	;# 
  2566  051B                     	;# 
  2567  051C                     	;# 
  2568  051D                     	;# 
  2569  058C                     	;# 
  2570  058C                     	;# 
  2571  058D                     	;# 
  2572  058E                     	;# 
  2573  058F                     	;# 
  2574  058F                     	;# 
  2575  0590                     	;# 
  2576  0591                     	;# 
  2577  0592                     	;# 
  2578  0593                     	;# 
  2579  060C                     	;# 
  2580  060D                     	;# 
  2581  060E                     	;# 
  2582  060F                     	;# 
  2583  0610                     	;# 
  2584  0611                     	;# 
  2585  0612                     	;# 
  2586  0613                     	;# 
  2587  0614                     	;# 
  2588  0616                     	;# 
  2589  0617                     	;# 
  2590  0618                     	;# 
  2591  0619                     	;# 
  2592  061A                     	;# 
  2593  061B                     	;# 
  2594  061C                     	;# 
  2595  061D                     	;# 
  2596  061E                     	;# 
  2597  068C                     	;# 
  2598  068D                     	;# 
  2599  068E                     	;# 
  2600  068F                     	;# 
  2601  0690                     	;# 
  2602  0691                     	;# 
  2603  0692                     	;# 
  2604  0693                     	;# 
  2605  0694                     	;# 
  2606  070C                     	;# 
  2607  070D                     	;# 
  2608  070E                     	;# 
  2609  070F                     	;# 
  2610  0710                     	;# 
  2611  0711                     	;# 
  2612  0712                     	;# 
  2613  0713                     	;# 
  2614  0714                     	;# 
  2615  0716                     	;# 
  2616  0717                     	;# 
  2617  0718                     	;# 
  2618  0719                     	;# 
  2619  071A                     	;# 
  2620  071B                     	;# 
  2621  071C                     	;# 
  2622  071D                     	;# 
  2623  071E                     	;# 
  2624  0796                     	;# 
  2625  0797                     	;# 
  2626  0798                     	;# 
  2627  0799                     	;# 
  2628  079A                     	;# 
  2629  079B                     	;# 
  2630  080C                     	;# 
  2631  080D                     	;# 
  2632  080E                     	;# 
  2633  080F                     	;# 
  2634  0810                     	;# 
  2635  0811                     	;# 
  2636  0812                     	;# 
  2637  0813                     	;# 
  2638  0814                     	;# 
  2639  081A                     	;# 
  2640  081B                     	;# 
  2641  081C                     	;# 
  2642  081D                     	;# 
  2643  081E                     	;# 
  2644  081F                     	;# 
  2645  088C                     	;# 
  2646  088D                     	;# 
  2647  088E                     	;# 
  2648  088F                     	;# 
  2649  0890                     	;# 
  2650  0891                     	;# 
  2651  0892                     	;# 
  2652  0893                     	;# 
  2653  0895                     	;# 
  2654  0896                     	;# 
  2655  0897                     	;# 
  2656  0898                     	;# 
  2657  0899                     	;# 
  2658  089A                     	;# 
  2659  089B                     	;# 
  2660  090C                     	;# 
  2661  090E                     	;# 
  2662  090F                     	;# 
  2663  091F                     	;# 
  2664  091F                     	;# 
  2665  098F                     	;# 
  2666  098F                     	;# 
  2667  0990                     	;# 
  2668  0991                     	;# 
  2669  0992                     	;# 
  2670  0993                     	;# 
  2671  0994                     	;# 
  2672  0995                     	;# 
  2673  0996                     	;# 
  2674  0997                     	;# 
  2675  0E0F                     	;# 
  2676  0E10                     	;# 
  2677  0E11                     	;# 
  2678  0E12                     	;# 
  2679  0E13                     	;# 
  2680  0E14                     	;# 
  2681  0E15                     	;# 
  2682  0E16                     	;# 
  2683  0E17                     	;# 
  2684  0E18                     	;# 
  2685  0E19                     	;# 
  2686  0E1A                     	;# 
  2687  0E1B                     	;# 
  2688  0E1C                     	;# 
  2689  0E1D                     	;# 
  2690  0E1E                     	;# 
  2691  0E1F                     	;# 
  2692  0E20                     	;# 
  2693  0E21                     	;# 
  2694  0E22                     	;# 
  2695  0E23                     	;# 
  2696  0E24                     	;# 
  2697  0E25                     	;# 
  2698  0E26                     	;# 
  2699  0E27                     	;# 
  2700  0E28                     	;# 
  2701  0E29                     	;# 
  2702  0E2A                     	;# 
  2703  0E2B                     	;# 
  2704  0E2C                     	;# 
  2705  0E2D                     	;# 
  2706  0E2E                     	;# 
  2707  0E2F                     	;# 
  2708  0E30                     	;# 
  2709  0E31                     	;# 
  2710  0E32                     	;# 
  2711  0E33                     	;# 
  2712  0E34                     	;# 
  2713  0E35                     	;# 
  2714  0E36                     	;# 
  2715  0E37                     	;# 
  2716  0E8F                     	;# 
  2717  0E90                     	;# 
  2718  0E91                     	;# 
  2719  0E92                     	;# 
  2720  0E93                     	;# 
  2721  0E94                     	;# 
  2722  0E95                     	;# 
  2723  0E96                     	;# 
  2724  0E97                     	;# 
  2725  0E9C                     	;# 
  2726  0E9D                     	;# 
  2727  0E9E                     	;# 
  2728  0EA1                     	;# 
  2729  0EA2                     	;# 
  2730  0EA3                     	;# 
  2731  0EA4                     	;# 
  2732  0EA5                     	;# 
  2733  0EA9                     	;# 
  2734  0EAA                     	;# 
  2735  0EAB                     	;# 
  2736  0EAC                     	;# 
  2737  0EB1                     	;# 
  2738  0EB2                     	;# 
  2739  0EB3                     	;# 
  2740  0EB8                     	;# 
  2741  0EB9                     	;# 
  2742  0EBA                     	;# 
  2743  0EBB                     	;# 
  2744  0EBC                     	;# 
  2745  0EBD                     	;# 
  2746  0EBE                     	;# 
  2747  0EC3                     	;# 
  2748  0EC5                     	;# 
  2749  0EC6                     	;# 
  2750  0EC7                     	;# 
  2751  0EC8                     	;# 
  2752  0EC9                     	;# 
  2753  0ECA                     	;# 
  2754  0ECB                     	;# 
  2755  0ECC                     	;# 
  2756  0F10                     	;# 
  2757  0F11                     	;# 
  2758  0F12                     	;# 
  2759  0F13                     	;# 
  2760  0F14                     	;# 
  2761  0F15                     	;# 
  2762  0F16                     	;# 
  2763  0F17                     	;# 
  2764  0F18                     	;# 
  2765  0F19                     	;# 
  2766  0F1A                     	;# 
  2767  0F1B                     	;# 
  2768  0F1C                     	;# 
  2769  0F1D                     	;# 
  2770  0F1E                     	;# 
  2771  0F1F                     	;# 
  2772  0F20                     	;# 
  2773  0F21                     	;# 
  2774  0F22                     	;# 
  2775  0F23                     	;# 
  2776  0F24                     	;# 
  2777  0F25                     	;# 
  2778  0F26                     	;# 
  2779  0F27                     	;# 
  2780  0F28                     	;# 
  2781  0F29                     	;# 
  2782  0F2A                     	;# 
  2783  0F2B                     	;# 
  2784  0F2C                     	;# 
  2785  0F2D                     	;# 
  2786  0F2E                     	;# 
  2787  0F2F                     	;# 
  2788  0F30                     	;# 
  2789  0F31                     	;# 
  2790  0F32                     	;# 
  2791  0F38                     	;# 
  2792  0F39                     	;# 
  2793  0F3A                     	;# 
  2794  0F3B                     	;# 
  2795  0F3C                     	;# 
  2796  0F3D                     	;# 
  2797  0F3E                     	;# 
  2798  0F3F                     	;# 
  2799  0F40                     	;# 
  2800  0F41                     	;# 
  2801  0F43                     	;# 
  2802  0F44                     	;# 
  2803  0F45                     	;# 
  2804  0F46                     	;# 
  2805  0F47                     	;# 
  2806  0F48                     	;# 
  2807  0F49                     	;# 
  2808  0F4A                     	;# 
  2809  0F4B                     	;# 
  2810  0F4C                     	;# 
  2811  0F4E                     	;# 
  2812  0F4F                     	;# 
  2813  0F50                     	;# 
  2814  0F51                     	;# 
  2815  0F52                     	;# 
  2816  0F53                     	;# 
  2817  0F54                     	;# 
  2818  0F55                     	;# 
  2819  0F56                     	;# 
  2820  0F57                     	;# 
  2821  0F59                     	;# 
  2822  0F5A                     	;# 
  2823  0F5B                     	;# 
  2824  0F5C                     	;# 
  2825  0F5D                     	;# 
  2826  0F61                     	;# 
  2827  0F62                     	;# 
  2828  0F64                     	;# 
  2829  0F65                     	;# 
  2830  0F66                     	;# 
  2831  0F67                     	;# 
  2832  0F68                     	;# 
  2833  0F69                     	;# 
  2834  0F6A                     	;# 
  2835  0F6B                     	;# 
  2836  0F6C                     	;# 
  2837  0F6D                     	;# 
  2838  0FE4                     	;# 
  2839  0FE5                     	;# 
  2840  0FE6                     	;# 
  2841  0FE7                     	;# 
  2842  0FE8                     	;# 
  2843  0FE9                     	;# 
  2844  0FEA                     	;# 
  2845  0FEB                     	;# 
  2846  0FED                     	;# 
  2847  0FEE                     	;# 
  2848  0FEF                     	;# 
  2849  0000                     	;# 
  2850  0001                     	;# 
  2851  0002                     	;# 
  2852  0003                     	;# 
  2853  0004                     	;# 
  2854  0005                     	;# 
  2855  0006                     	;# 
  2856  0007                     	;# 
  2857  0008                     	;# 
  2858  0009                     	;# 
  2859  000A                     	;# 
  2860  000B                     	;# 
  2861  000C                     	;# 
  2862  000D                     	;# 
  2863  000E                     	;# 
  2864  000F                     	;# 
  2865  0010                     	;# 
  2866  0011                     	;# 
  2867  0012                     	;# 
  2868  0013                     	;# 
  2869  0014                     	;# 
  2870  0015                     	;# 
  2871  0016                     	;# 
  2872  0017                     	;# 
  2873  0018                     	;# 
  2874  0019                     	;# 
  2875  001A                     	;# 
  2876  001C                     	;# 
  2877  001C                     	;# 
  2878  001D                     	;# 
  2879  001D                     	;# 
  2880  001E                     	;# 
  2881  001F                     	;# 
  2882  008C                     	;# 
  2883  008C                     	;# 
  2884  008D                     	;# 
  2885  008E                     	;# 
  2886  008E                     	;# 
  2887  008F                     	;# 
  2888  0090                     	;# 
  2889  0090                     	;# 
  2890  0091                     	;# 
  2891  0093                     	;# 
  2892  0094                     	;# 
  2893  0095                     	;# 
  2894  0096                     	;# 
  2895  0097                     	;# 
  2896  0098                     	;# 
  2897  0099                     	;# 
  2898  009A                     	;# 
  2899  009B                     	;# 
  2900  009C                     	;# 
  2901  009D                     	;# 
  2902  009E                     	;# 
  2903  010C                     	;# 
  2904  010D                     	;# 
  2905  010E                     	;# 
  2906  010E                     	;# 
  2907  010F                     	;# 
  2908  0110                     	;# 
  2909  0110                     	;# 
  2910  0111                     	;# 
  2911  0112                     	;# 
  2912  0112                     	;# 
  2913  0113                     	;# 
  2914  0114                     	;# 
  2915  0114                     	;# 
  2916  0115                     	;# 
  2917  0116                     	;# 
  2918  0116                     	;# 
  2919  0117                     	;# 
  2920  0119                     	;# 
  2921  0119                     	;# 
  2922  0119                     	;# 
  2923  011A                     	;# 
  2924  011A                     	;# 
  2925  011A                     	;# 
  2926  011B                     	;# 
  2927  011B                     	;# 
  2928  011B                     	;# 
  2929  011B                     	;# 
  2930  011B                     	;# 
  2931  011C                     	;# 
  2932  011C                     	;# 
  2933  011C                     	;# 
  2934  011D                     	;# 
  2935  011D                     	;# 
  2936  011D                     	;# 
  2937  011E                     	;# 
  2938  011E                     	;# 
  2939  011E                     	;# 
  2940  011F                     	;# 
  2941  011F                     	;# 
  2942  011F                     	;# 
  2943  011F                     	;# 
  2944  011F                     	;# 
  2945  018C                     	;# 
  2946  018D                     	;# 
  2947  018E                     	;# 
  2948  018F                     	;# 
  2949  0190                     	;# 
  2950  0191                     	;# 
  2951  0192                     	;# 
  2952  0196                     	;# 
  2953  0197                     	;# 
  2954  0198                     	;# 
  2955  0199                     	;# 
  2956  019A                     	;# 
  2957  019B                     	;# 
  2958  019C                     	;# 
  2959  020C                     	;# 
  2960  020C                     	;# 
  2961  020D                     	;# 
  2962  020E                     	;# 
  2963  020F                     	;# 
  2964  020F                     	;# 
  2965  0210                     	;# 
  2966  0210                     	;# 
  2967  0211                     	;# 
  2968  0211                     	;# 
  2969  0212                     	;# 
  2970  0212                     	;# 
  2971  0213                     	;# 
  2972  0214                     	;# 
  2973  0215                     	;# 
  2974  0215                     	;# 
  2975  0216                     	;# 
  2976  0216                     	;# 
  2977  0217                     	;# 
  2978  0217                     	;# 
  2979  0218                     	;# 
  2980  0218                     	;# 
  2981  0219                     	;# 
  2982  021A                     	;# 
  2983  021B                     	;# 
  2984  021B                     	;# 
  2985  021C                     	;# 
  2986  021C                     	;# 
  2987  021D                     	;# 
  2988  021D                     	;# 
  2989  021E                     	;# 
  2990  021F                     	;# 
  2991  028C                     	;# 
  2992  028C                     	;# 
  2993  028D                     	;# 
  2994  028D                     	;# 
  2995  028E                     	;# 
  2996  028F                     	;# 
  2997  0290                     	;# 
  2998  0290                     	;# 
  2999  0291                     	;# 
  3000  0292                     	;# 
  3001  0292                     	;# 
  3002  0293                     	;# 
  3003  0293                     	;# 
  3004  0294                     	;# 
  3005  0295                     	;# 
  3006  0296                     	;# 
  3007  0296                     	;# 
  3008  0297                     	;# 
  3009  0298                     	;# 
  3010  0298                     	;# 
  3011  0299                     	;# 
  3012  0299                     	;# 
  3013  029A                     	;# 
  3014  029B                     	;# 
  3015  029C                     	;# 
  3016  029C                     	;# 
  3017  029D                     	;# 
  3018  030C                     	;# 
  3019  030C                     	;# 
  3020  030D                     	;# 
  3021  030E                     	;# 
  3022  030F                     	;# 
  3023  0310                     	;# 
  3024  0310                     	;# 
  3025  0311                     	;# 
  3026  0312                     	;# 
  3027  0313                     	;# 
  3028  0314                     	;# 
  3029  0314                     	;# 
  3030  0315                     	;# 
  3031  0316                     	;# 
  3032  0317                     	;# 
  3033  0318                     	;# 
  3034  0318                     	;# 
  3035  0319                     	;# 
  3036  031A                     	;# 
  3037  031B                     	;# 
  3038  031C                     	;# 
  3039  031C                     	;# 
  3040  031D                     	;# 
  3041  031E                     	;# 
  3042  031F                     	;# 
  3043  038C                     	;# 
  3044  038C                     	;# 
  3045  038D                     	;# 
  3046  038E                     	;# 
  3047  0390                     	;# 
  3048  0390                     	;# 
  3049  0391                     	;# 
  3050  0392                     	;# 
  3051  040C                     	;# 
  3052  040D                     	;# 
  3053  040E                     	;# 
  3054  040F                     	;# 
  3055  0410                     	;# 
  3056  0411                     	;# 
  3057  0416                     	;# 
  3058  0416                     	;# 
  3059  0417                     	;# 
  3060  0418                     	;# 
  3061  0418                     	;# 
  3062  0419                     	;# 
  3063  041A                     	;# 
  3064  041A                     	;# 
  3065  041B                     	;# 
  3066  041C                     	;# 
  3067  041C                     	;# 
  3068  041D                     	;# 
  3069  041E                     	;# 
  3070  041F                     	;# 
  3071  048C                     	;# 
  3072  048C                     	;# 
  3073  048D                     	;# 
  3074  048E                     	;# 
  3075  048F                     	;# 
  3076  048F                     	;# 
  3077  0490                     	;# 
  3078  0491                     	;# 
  3079  0492                     	;# 
  3080  0492                     	;# 
  3081  0493                     	;# 
  3082  0494                     	;# 
  3083  0495                     	;# 
  3084  0495                     	;# 
  3085  0496                     	;# 
  3086  0497                     	;# 
  3087  0498                     	;# 
  3088  0499                     	;# 
  3089  049A                     	;# 
  3090  049B                     	;# 
  3091  049C                     	;# 
  3092  049D                     	;# 
  3093  050C                     	;# 
  3094  050C                     	;# 
  3095  050D                     	;# 
  3096  050E                     	;# 
  3097  050F                     	;# 
  3098  050F                     	;# 
  3099  0510                     	;# 
  3100  0511                     	;# 
  3101  0512                     	;# 
  3102  0512                     	;# 
  3103  0513                     	;# 
  3104  0514                     	;# 
  3105  0515                     	;# 
  3106  0515                     	;# 
  3107  0516                     	;# 
  3108  0517                     	;# 
  3109  0518                     	;# 
  3110  0519                     	;# 
  3111  051A                     	;# 
  3112  051B                     	;# 
  3113  051C                     	;# 
  3114  051D                     	;# 
  3115  058C                     	;# 
  3116  058C                     	;# 
  3117  058D                     	;# 
  3118  058E                     	;# 
  3119  058F                     	;# 
  3120  058F                     	;# 
  3121  0590                     	;# 
  3122  0591                     	;# 
  3123  0592                     	;# 
  3124  0593                     	;# 
  3125  060C                     	;# 
  3126  060D                     	;# 
  3127  060E                     	;# 
  3128  060F                     	;# 
  3129  0610                     	;# 
  3130  0611                     	;# 
  3131  0612                     	;# 
  3132  0613                     	;# 
  3133  0614                     	;# 
  3134  0616                     	;# 
  3135  0617                     	;# 
  3136  0618                     	;# 
  3137  0619                     	;# 
  3138  061A                     	;# 
  3139  061B                     	;# 
  3140  061C                     	;# 
  3141  061D                     	;# 
  3142  061E                     	;# 
  3143  068C                     	;# 
  3144  068D                     	;# 
  3145  068E                     	;# 
  3146  068F                     	;# 
  3147  0690                     	;# 
  3148  0691                     	;# 
  3149  0692                     	;# 
  3150  0693                     	;# 
  3151  0694                     	;# 
  3152  070C                     	;# 
  3153  070D                     	;# 
  3154  070E                     	;# 
  3155  070F                     	;# 
  3156  0710                     	;# 
  3157  0711                     	;# 
  3158  0712                     	;# 
  3159  0713                     	;# 
  3160  0714                     	;# 
  3161  0716                     	;# 
  3162  0717                     	;# 
  3163  0718                     	;# 
  3164  0719                     	;# 
  3165  071A                     	;# 
  3166  071B                     	;# 
  3167  071C                     	;# 
  3168  071D                     	;# 
  3169  071E                     	;# 
  3170  0796                     	;# 
  3171  0797                     	;# 
  3172  0798                     	;# 
  3173  0799                     	;# 
  3174  079A                     	;# 
  3175  079B                     	;# 
  3176  080C                     	;# 
  3177  080D                     	;# 
  3178  080E                     	;# 
  3179  080F                     	;# 
  3180  0810                     	;# 
  3181  0811                     	;# 
  3182  0812                     	;# 
  3183  0813                     	;# 
  3184  0814                     	;# 
  3185  081A                     	;# 
  3186  081B                     	;# 
  3187  081C                     	;# 
  3188  081D                     	;# 
  3189  081E                     	;# 
  3190  081F                     	;# 
  3191  088C                     	;# 
  3192  088D                     	;# 
  3193  088E                     	;# 
  3194  088F                     	;# 
  3195  0890                     	;# 
  3196  0891                     	;# 
  3197  0892                     	;# 
  3198  0893                     	;# 
  3199  0895                     	;# 
  3200  0896                     	;# 
  3201  0897                     	;# 
  3202  0898                     	;# 
  3203  0899                     	;# 
  3204  089A                     	;# 
  3205  089B                     	;# 
  3206  090C                     	;# 
  3207  090E                     	;# 
  3208  090F                     	;# 
  3209  091F                     	;# 
  3210  091F                     	;# 
  3211  098F                     	;# 
  3212  098F                     	;# 
  3213  0990                     	;# 
  3214  0991                     	;# 
  3215  0992                     	;# 
  3216  0993                     	;# 
  3217  0994                     	;# 
  3218  0995                     	;# 
  3219  0996                     	;# 
  3220  0997                     	;# 
  3221  0E0F                     	;# 
  3222  0E10                     	;# 
  3223  0E11                     	;# 
  3224  0E12                     	;# 
  3225  0E13                     	;# 
  3226  0E14                     	;# 
  3227  0E15                     	;# 
  3228  0E16                     	;# 
  3229  0E17                     	;# 
  3230  0E18                     	;# 
  3231  0E19                     	;# 
  3232  0E1A                     	;# 
  3233  0E1B                     	;# 
  3234  0E1C                     	;# 
  3235  0E1D                     	;# 
  3236  0E1E                     	;# 
  3237  0E1F                     	;# 
  3238  0E20                     	;# 
  3239  0E21                     	;# 
  3240  0E22                     	;# 
  3241  0E23                     	;# 
  3242  0E24                     	;# 
  3243  0E25                     	;# 
  3244  0E26                     	;# 
  3245  0E27                     	;# 
  3246  0E28                     	;# 
  3247  0E29                     	;# 
  3248  0E2A                     	;# 
  3249  0E2B                     	;# 
  3250  0E2C                     	;# 
  3251  0E2D                     	;# 
  3252  0E2E                     	;# 
  3253  0E2F                     	;# 
  3254  0E30                     	;# 
  3255  0E31                     	;# 
  3256  0E32                     	;# 
  3257  0E33                     	;# 
  3258  0E34                     	;# 
  3259  0E35                     	;# 
  3260  0E36                     	;# 
  3261  0E37                     	;# 
  3262  0E8F                     	;# 
  3263  0E90                     	;# 
  3264  0E91                     	;# 
  3265  0E92                     	;# 
  3266  0E93                     	;# 
  3267  0E94                     	;# 
  3268  0E95                     	;# 
  3269  0E96                     	;# 
  3270  0E97                     	;# 
  3271  0E9C                     	;# 
  3272  0E9D                     	;# 
  3273  0E9E                     	;# 
  3274  0EA1                     	;# 
  3275  0EA2                     	;# 
  3276  0EA3                     	;# 
  3277  0EA4                     	;# 
  3278  0EA5                     	;# 
  3279  0EA9                     	;# 
  3280  0EAA                     	;# 
  3281  0EAB                     	;# 
  3282  0EAC                     	;# 
  3283  0EB1                     	;# 
  3284  0EB2                     	;# 
  3285  0EB3                     	;# 
  3286  0EB8                     	;# 
  3287  0EB9                     	;# 
  3288  0EBA                     	;# 
  3289  0EBB                     	;# 
  3290  0EBC                     	;# 
  3291  0EBD                     	;# 
  3292  0EBE                     	;# 
  3293  0EC3                     	;# 
  3294  0EC5                     	;# 
  3295  0EC6                     	;# 
  3296  0EC7                     	;# 
  3297  0EC8                     	;# 
  3298  0EC9                     	;# 
  3299  0ECA                     	;# 
  3300  0ECB                     	;# 
  3301  0ECC                     	;# 
  3302  0F10                     	;# 
  3303  0F11                     	;# 
  3304  0F12                     	;# 
  3305  0F13                     	;# 
  3306  0F14                     	;# 
  3307  0F15                     	;# 
  3308  0F16                     	;# 
  3309  0F17                     	;# 
  3310  0F18                     	;# 
  3311  0F19                     	;# 
  3312  0F1A                     	;# 
  3313  0F1B                     	;# 
  3314  0F1C                     	;# 
  3315  0F1D                     	;# 
  3316  0F1E                     	;# 
  3317  0F1F                     	;# 
  3318  0F20                     	;# 
  3319  0F21                     	;# 
  3320  0F22                     	;# 
  3321  0F23                     	;# 
  3322  0F24                     	;# 
  3323  0F25                     	;# 
  3324  0F26                     	;# 
  3325  0F27                     	;# 
  3326  0F28                     	;# 
  3327  0F29                     	;# 
  3328  0F2A                     	;# 
  3329  0F2B                     	;# 
  3330  0F2C                     	;# 
  3331  0F2D                     	;# 
  3332  0F2E                     	;# 
  3333  0F2F                     	;# 
  3334  0F30                     	;# 
  3335  0F31                     	;# 
  3336  0F32                     	;# 
  3337  0F38                     	;# 
  3338  0F39                     	;# 
  3339  0F3A                     	;# 
  3340  0F3B                     	;# 
  3341  0F3C                     	;# 
  3342  0F3D                     	;# 
  3343  0F3E                     	;# 
  3344  0F3F                     	;# 
  3345  0F40                     	;# 
  3346  0F41                     	;# 
  3347  0F43                     	;# 
  3348  0F44                     	;# 
  3349  0F45                     	;# 
  3350  0F46                     	;# 
  3351  0F47                     	;# 
  3352  0F48                     	;# 
  3353  0F49                     	;# 
  3354  0F4A                     	;# 
  3355  0F4B                     	;# 
  3356  0F4C                     	;# 
  3357  0F4E                     	;# 
  3358  0F4F                     	;# 
  3359  0F50                     	;# 
  3360  0F51                     	;# 
  3361  0F52                     	;# 
  3362  0F53                     	;# 
  3363  0F54                     	;# 
  3364  0F55                     	;# 
  3365  0F56                     	;# 
  3366  0F57                     	;# 
  3367  0F59                     	;# 
  3368  0F5A                     	;# 
  3369  0F5B                     	;# 
  3370  0F5C                     	;# 
  3371  0F5D                     	;# 
  3372  0F61                     	;# 
  3373  0F62                     	;# 
  3374  0F64                     	;# 
  3375  0F65                     	;# 
  3376  0F66                     	;# 
  3377  0F67                     	;# 
  3378  0F68                     	;# 
  3379  0F69                     	;# 
  3380  0F6A                     	;# 
  3381  0F6B                     	;# 
  3382  0F6C                     	;# 
  3383  0F6D                     	;# 
  3384  0FE4                     	;# 
  3385  0FE5                     	;# 
  3386  0FE6                     	;# 
  3387  0FE7                     	;# 
  3388  0FE8                     	;# 
  3389  0FE9                     	;# 
  3390  0FEA                     	;# 
  3391  0FEB                     	;# 
  3392  0FED                     	;# 
  3393  0FEE                     	;# 
  3394  0FEF                     	;# 
  3395  0000                     	;# 
  3396  0001                     	;# 
  3397  0002                     	;# 
  3398  0003                     	;# 
  3399  0004                     	;# 
  3400  0005                     	;# 
  3401  0006                     	;# 
  3402  0007                     	;# 
  3403  0008                     	;# 
  3404  0009                     	;# 
  3405  000A                     	;# 
  3406  000B                     	;# 
  3407  000C                     	;# 
  3408  000D                     	;# 
  3409  000E                     	;# 
  3410  000F                     	;# 
  3411  0010                     	;# 
  3412  0011                     	;# 
  3413  0012                     	;# 
  3414  0013                     	;# 
  3415  0014                     	;# 
  3416  0015                     	;# 
  3417  0016                     	;# 
  3418  0017                     	;# 
  3419  0018                     	;# 
  3420  0019                     	;# 
  3421  001A                     	;# 
  3422  001C                     	;# 
  3423  001C                     	;# 
  3424  001D                     	;# 
  3425  001D                     	;# 
  3426  001E                     	;# 
  3427  001F                     	;# 
  3428  008C                     	;# 
  3429  008C                     	;# 
  3430  008D                     	;# 
  3431  008E                     	;# 
  3432  008E                     	;# 
  3433  008F                     	;# 
  3434  0090                     	;# 
  3435  0090                     	;# 
  3436  0091                     	;# 
  3437  0093                     	;# 
  3438  0094                     	;# 
  3439  0095                     	;# 
  3440  0096                     	;# 
  3441  0097                     	;# 
  3442  0098                     	;# 
  3443  0099                     	;# 
  3444  009A                     	;# 
  3445  009B                     	;# 
  3446  009C                     	;# 
  3447  009D                     	;# 
  3448  009E                     	;# 
  3449  010C                     	;# 
  3450  010D                     	;# 
  3451  010E                     	;# 
  3452  010E                     	;# 
  3453  010F                     	;# 
  3454  0110                     	;# 
  3455  0110                     	;# 
  3456  0111                     	;# 
  3457  0112                     	;# 
  3458  0112                     	;# 
  3459  0113                     	;# 
  3460  0114                     	;# 
  3461  0114                     	;# 
  3462  0115                     	;# 
  3463  0116                     	;# 
  3464  0116                     	;# 
  3465  0117                     	;# 
  3466  0119                     	;# 
  3467  0119                     	;# 
  3468  0119                     	;# 
  3469  011A                     	;# 
  3470  011A                     	;# 
  3471  011A                     	;# 
  3472  011B                     	;# 
  3473  011B                     	;# 
  3474  011B                     	;# 
  3475  011B                     	;# 
  3476  011B                     	;# 
  3477  011C                     	;# 
  3478  011C                     	;# 
  3479  011C                     	;# 
  3480  011D                     	;# 
  3481  011D                     	;# 
  3482  011D                     	;# 
  3483  011E                     	;# 
  3484  011E                     	;# 
  3485  011E                     	;# 
  3486  011F                     	;# 
  3487  011F                     	;# 
  3488  011F                     	;# 
  3489  011F                     	;# 
  3490  011F                     	;# 
  3491  018C                     	;# 
  3492  018D                     	;# 
  3493  018E                     	;# 
  3494  018F                     	;# 
  3495  0190                     	;# 
  3496  0191                     	;# 
  3497  0192                     	;# 
  3498  0196                     	;# 
  3499  0197                     	;# 
  3500  0198                     	;# 
  3501  0199                     	;# 
  3502  019A                     	;# 
  3503  019B                     	;# 
  3504  019C                     	;# 
  3505  020C                     	;# 
  3506  020C                     	;# 
  3507  020D                     	;# 
  3508  020E                     	;# 
  3509  020F                     	;# 
  3510  020F                     	;# 
  3511  0210                     	;# 
  3512  0210                     	;# 
  3513  0211                     	;# 
  3514  0211                     	;# 
  3515  0212                     	;# 
  3516  0212                     	;# 
  3517  0213                     	;# 
  3518  0214                     	;# 
  3519  0215                     	;# 
  3520  0215                     	;# 
  3521  0216                     	;# 
  3522  0216                     	;# 
  3523  0217                     	;# 
  3524  0217                     	;# 
  3525  0218                     	;# 
  3526  0218                     	;# 
  3527  0219                     	;# 
  3528  021A                     	;# 
  3529  021B                     	;# 
  3530  021B                     	;# 
  3531  021C                     	;# 
  3532  021C                     	;# 
  3533  021D                     	;# 
  3534  021D                     	;# 
  3535  021E                     	;# 
  3536  021F                     	;# 
  3537  028C                     	;# 
  3538  028C                     	;# 
  3539  028D                     	;# 
  3540  028D                     	;# 
  3541  028E                     	;# 
  3542  028F                     	;# 
  3543  0290                     	;# 
  3544  0290                     	;# 
  3545  0291                     	;# 
  3546  0292                     	;# 
  3547  0292                     	;# 
  3548  0293                     	;# 
  3549  0293                     	;# 
  3550  0294                     	;# 
  3551  0295                     	;# 
  3552  0296                     	;# 
  3553  0296                     	;# 
  3554  0297                     	;# 
  3555  0298                     	;# 
  3556  0298                     	;# 
  3557  0299                     	;# 
  3558  0299                     	;# 
  3559  029A                     	;# 
  3560  029B                     	;# 
  3561  029C                     	;# 
  3562  029C                     	;# 
  3563  029D                     	;# 
  3564  030C                     	;# 
  3565  030C                     	;# 
  3566  030D                     	;# 
  3567  030E                     	;# 
  3568  030F                     	;# 
  3569  0310                     	;# 
  3570  0310                     	;# 
  3571  0311                     	;# 
  3572  0312                     	;# 
  3573  0313                     	;# 
  3574  0314                     	;# 
  3575  0314                     	;# 
  3576  0315                     	;# 
  3577  0316                     	;# 
  3578  0317                     	;# 
  3579  0318                     	;# 
  3580  0318                     	;# 
  3581  0319                     	;# 
  3582  031A                     	;# 
  3583  031B                     	;# 
  3584  031C                     	;# 
  3585  031C                     	;# 
  3586  031D                     	;# 
  3587  031E                     	;# 
  3588  031F                     	;# 
  3589  038C                     	;# 
  3590  038C                     	;# 
  3591  038D                     	;# 
  3592  038E                     	;# 
  3593  0390                     	;# 
  3594  0390                     	;# 
  3595  0391                     	;# 
  3596  0392                     	;# 
  3597  040C                     	;# 
  3598  040D                     	;# 
  3599  040E                     	;# 
  3600  040F                     	;# 
  3601  0410                     	;# 
  3602  0411                     	;# 
  3603  0416                     	;# 
  3604  0416                     	;# 
  3605  0417                     	;# 
  3606  0418                     	;# 
  3607  0418                     	;# 
  3608  0419                     	;# 
  3609  041A                     	;# 
  3610  041A                     	;# 
  3611  041B                     	;# 
  3612  041C                     	;# 
  3613  041C                     	;# 
  3614  041D                     	;# 
  3615  041E                     	;# 
  3616  041F                     	;# 
  3617  048C                     	;# 
  3618  048C                     	;# 
  3619  048D                     	;# 
  3620  048E                     	;# 
  3621  048F                     	;# 
  3622  048F                     	;# 
  3623  0490                     	;# 
  3624  0491                     	;# 
  3625  0492                     	;# 
  3626  0492                     	;# 
  3627  0493                     	;# 
  3628  0494                     	;# 
  3629  0495                     	;# 
  3630  0495                     	;# 
  3631  0496                     	;# 
  3632  0497                     	;# 
  3633  0498                     	;# 
  3634  0499                     	;# 
  3635  049A                     	;# 
  3636  049B                     	;# 
  3637  049C                     	;# 
  3638  049D                     	;# 
  3639  050C                     	;# 
  3640  050C                     	;# 
  3641  050D                     	;# 
  3642  050E                     	;# 
  3643  050F                     	;# 
  3644  050F                     	;# 
  3645  0510                     	;# 
  3646  0511                     	;# 
  3647  0512                     	;# 
  3648  0512                     	;# 
  3649  0513                     	;# 
  3650  0514                     	;# 
  3651  0515                     	;# 
  3652  0515                     	;# 
  3653  0516                     	;# 
  3654  0517                     	;# 
  3655  0518                     	;# 
  3656  0519                     	;# 
  3657  051A                     	;# 
  3658  051B                     	;# 
  3659  051C                     	;# 
  3660  051D                     	;# 
  3661  058C                     	;# 
  3662  058C                     	;# 
  3663  058D                     	;# 
  3664  058E                     	;# 
  3665  058F                     	;# 
  3666  058F                     	;# 
  3667  0590                     	;# 
  3668  0591                     	;# 
  3669  0592                     	;# 
  3670  0593                     	;# 
  3671  060C                     	;# 
  3672  060D                     	;# 
  3673  060E                     	;# 
  3674  060F                     	;# 
  3675  0610                     	;# 
  3676  0611                     	;# 
  3677  0612                     	;# 
  3678  0613                     	;# 
  3679  0614                     	;# 
  3680  0616                     	;# 
  3681  0617                     	;# 
  3682  0618                     	;# 
  3683  0619                     	;# 
  3684  061A                     	;# 
  3685  061B                     	;# 
  3686  061C                     	;# 
  3687  061D                     	;# 
  3688  061E                     	;# 
  3689  068C                     	;# 
  3690  068D                     	;# 
  3691  068E                     	;# 
  3692  068F                     	;# 
  3693  0690                     	;# 
  3694  0691                     	;# 
  3695  0692                     	;# 
  3696  0693                     	;# 
  3697  0694                     	;# 
  3698  070C                     	;# 
  3699  070D                     	;# 
  3700  070E                     	;# 
  3701  070F                     	;# 
  3702  0710                     	;# 
  3703  0711                     	;# 
  3704  0712                     	;# 
  3705  0713                     	;# 
  3706  0714                     	;# 
  3707  0716                     	;# 
  3708  0717                     	;# 
  3709  0718                     	;# 
  3710  0719                     	;# 
  3711  071A                     	;# 
  3712  071B                     	;# 
  3713  071C                     	;# 
  3714  071D                     	;# 
  3715  071E                     	;# 
  3716  0796                     	;# 
  3717  0797                     	;# 
  3718  0798                     	;# 
  3719  0799                     	;# 
  3720  079A                     	;# 
  3721  079B                     	;# 
  3722  080C                     	;# 
  3723  080D                     	;# 
  3724  080E                     	;# 
  3725  080F                     	;# 
  3726  0810                     	;# 
  3727  0811                     	;# 
  3728  0812                     	;# 
  3729  0813                     	;# 
  3730  0814                     	;# 
  3731  081A                     	;# 
  3732  081B                     	;# 
  3733  081C                     	;# 
  3734  081D                     	;# 
  3735  081E                     	;# 
  3736  081F                     	;# 
  3737  088C                     	;# 
  3738  088D                     	;# 
  3739  088E                     	;# 
  3740  088F                     	;# 
  3741  0890                     	;# 
  3742  0891                     	;# 
  3743  0892                     	;# 
  3744  0893                     	;# 
  3745  0895                     	;# 
  3746  0896                     	;# 
  3747  0897                     	;# 
  3748  0898                     	;# 
  3749  0899                     	;# 
  3750  089A                     	;# 
  3751  089B                     	;# 
  3752  090C                     	;# 
  3753  090E                     	;# 
  3754  090F                     	;# 
  3755  091F                     	;# 
  3756  091F                     	;# 
  3757  098F                     	;# 
  3758  098F                     	;# 
  3759  0990                     	;# 
  3760  0991                     	;# 
  3761  0992                     	;# 
  3762  0993                     	;# 
  3763  0994                     	;# 
  3764  0995                     	;# 
  3765  0996                     	;# 
  3766  0997                     	;# 
  3767  0E0F                     	;# 
  3768  0E10                     	;# 
  3769  0E11                     	;# 
  3770  0E12                     	;# 
  3771  0E13                     	;# 
  3772  0E14                     	;# 
  3773  0E15                     	;# 
  3774  0E16                     	;# 
  3775  0E17                     	;# 
  3776  0E18                     	;# 
  3777  0E19                     	;# 
  3778  0E1A                     	;# 
  3779  0E1B                     	;# 
  3780  0E1C                     	;# 
  3781  0E1D                     	;# 
  3782  0E1E                     	;# 
  3783  0E1F                     	;# 
  3784  0E20                     	;# 
  3785  0E21                     	;# 
  3786  0E22                     	;# 
  3787  0E23                     	;# 
  3788  0E24                     	;# 
  3789  0E25                     	;# 
  3790  0E26                     	;# 
  3791  0E27                     	;# 
  3792  0E28                     	;# 
  3793  0E29                     	;# 
  3794  0E2A                     	;# 
  3795  0E2B                     	;# 
  3796  0E2C                     	;# 
  3797  0E2D                     	;# 
  3798  0E2E                     	;# 
  3799  0E2F                     	;# 
  3800  0E30                     	;# 
  3801  0E31                     	;# 
  3802  0E32                     	;# 
  3803  0E33                     	;# 
  3804  0E34                     	;# 
  3805  0E35                     	;# 
  3806  0E36                     	;# 
  3807  0E37                     	;# 
  3808  0E8F                     	;# 
  3809  0E90                     	;# 
  3810  0E91                     	;# 
  3811  0E92                     	;# 
  3812  0E93                     	;# 
  3813  0E94                     	;# 
  3814  0E95                     	;# 
  3815  0E96                     	;# 
  3816  0E97                     	;# 
  3817  0E9C                     	;# 
  3818  0E9D                     	;# 
  3819  0E9E                     	;# 
  3820  0EA1                     	;# 
  3821  0EA2                     	;# 
  3822  0EA3                     	;# 
  3823  0EA4                     	;# 
  3824  0EA5                     	;# 
  3825  0EA9                     	;# 
  3826  0EAA                     	;# 
  3827  0EAB                     	;# 
  3828  0EAC                     	;# 
  3829  0EB1                     	;# 
  3830  0EB2                     	;# 
  3831  0EB3                     	;# 
  3832  0EB8                     	;# 
  3833  0EB9                     	;# 
  3834  0EBA                     	;# 
  3835  0EBB                     	;# 
  3836  0EBC                     	;# 
  3837  0EBD                     	;# 
  3838  0EBE                     	;# 
  3839  0EC3                     	;# 
  3840  0EC5                     	;# 
  3841  0EC6                     	;# 
  3842  0EC7                     	;# 
  3843  0EC8                     	;# 
  3844  0EC9                     	;# 
  3845  0ECA                     	;# 
  3846  0ECB                     	;# 
  3847  0ECC                     	;# 
  3848  0F10                     	;# 
  3849  0F11                     	;# 
  3850  0F12                     	;# 
  3851  0F13                     	;# 
  3852  0F14                     	;# 
  3853  0F15                     	;# 
  3854  0F16                     	;# 
  3855  0F17                     	;# 
  3856  0F18                     	;# 
  3857  0F19                     	;# 
  3858  0F1A                     	;# 
  3859  0F1B                     	;# 
  3860  0F1C                     	;# 
  3861  0F1D                     	;# 
  3862  0F1E                     	;# 
  3863  0F1F                     	;# 
  3864  0F20                     	;# 
  3865  0F21                     	;# 
  3866  0F22                     	;# 
  3867  0F23                     	;# 
  3868  0F24                     	;# 
  3869  0F25                     	;# 
  3870  0F26                     	;# 
  3871  0F27                     	;# 
  3872  0F28                     	;# 
  3873  0F29                     	;# 
  3874  0F2A                     	;# 
  3875  0F2B                     	;# 
  3876  0F2C                     	;# 
  3877  0F2D                     	;# 
  3878  0F2E                     	;# 
  3879  0F2F                     	;# 
  3880  0F30                     	;# 
  3881  0F31                     	;# 
  3882  0F32                     	;# 
  3883  0F38                     	;# 
  3884  0F39                     	;# 
  3885  0F3A                     	;# 
  3886  0F3B                     	;# 
  3887  0F3C                     	;# 
  3888  0F3D                     	;# 
  3889  0F3E                     	;# 
  3890  0F3F                     	;# 
  3891  0F40                     	;# 
  3892  0F41                     	;# 
  3893  0F43                     	;# 
  3894  0F44                     	;# 
  3895  0F45                     	;# 
  3896  0F46                     	;# 
  3897  0F47                     	;# 
  3898  0F48                     	;# 
  3899  0F49                     	;# 
  3900  0F4A                     	;# 
  3901  0F4B                     	;# 
  3902  0F4C                     	;# 
  3903  0F4E                     	;# 
  3904  0F4F                     	;# 
  3905  0F50                     	;# 
  3906  0F51                     	;# 
  3907  0F52                     	;# 
  3908  0F53                     	;# 
  3909  0F54                     	;# 
  3910  0F55                     	;# 
  3911  0F56                     	;# 
  3912  0F57                     	;# 
  3913  0F59                     	;# 
  3914  0F5A                     	;# 
  3915  0F5B                     	;# 
  3916  0F5C                     	;# 
  3917  0F5D                     	;# 
  3918  0F61                     	;# 
  3919  0F62                     	;# 
  3920  0F64                     	;# 
  3921  0F65                     	;# 
  3922  0F66                     	;# 
  3923  0F67                     	;# 
  3924  0F68                     	;# 
  3925  0F69                     	;# 
  3926  0F6A                     	;# 
  3927  0F6B                     	;# 
  3928  0F6C                     	;# 
  3929  0F6D                     	;# 
  3930  0FE4                     	;# 
  3931  0FE5                     	;# 
  3932  0FE6                     	;# 
  3933  0FE7                     	;# 
  3934  0FE8                     	;# 
  3935  0FE9                     	;# 
  3936  0FEA                     	;# 
  3937  0FEB                     	;# 
  3938  0FED                     	;# 
  3939  0FEE                     	;# 
  3940  0FEF                     	;# 
  3941  0000                     	;# 
  3942  0001                     	;# 
  3943  0002                     	;# 
  3944  0003                     	;# 
  3945  0004                     	;# 
  3946  0005                     	;# 
  3947  0006                     	;# 
  3948  0007                     	;# 
  3949  0008                     	;# 
  3950  0009                     	;# 
  3951  000A                     	;# 
  3952  000B                     	;# 
  3953  000C                     	;# 
  3954  000D                     	;# 
  3955  000E                     	;# 
  3956  000F                     	;# 
  3957  0010                     	;# 
  3958  0011                     	;# 
  3959  0012                     	;# 
  3960  0013                     	;# 
  3961  0014                     	;# 
  3962  0015                     	;# 
  3963  0016                     	;# 
  3964  0017                     	;# 
  3965  0018                     	;# 
  3966  0019                     	;# 
  3967  001A                     	;# 
  3968  001C                     	;# 
  3969  001C                     	;# 
  3970  001D                     	;# 
  3971  001D                     	;# 
  3972  001E                     	;# 
  3973  001F                     	;# 
  3974  008C                     	;# 
  3975  008C                     	;# 
  3976  008D                     	;# 
  3977  008E                     	;# 
  3978  008E                     	;# 
  3979  008F                     	;# 
  3980  0090                     	;# 
  3981  0090                     	;# 
  3982  0091                     	;# 
  3983  0093                     	;# 
  3984  0094                     	;# 
  3985  0095                     	;# 
  3986  0096                     	;# 
  3987  0097                     	;# 
  3988  0098                     	;# 
  3989  0099                     	;# 
  3990  009A                     	;# 
  3991  009B                     	;# 
  3992  009C                     	;# 
  3993  009D                     	;# 
  3994  009E                     	;# 
  3995  010C                     	;# 
  3996  010D                     	;# 
  3997  010E                     	;# 
  3998  010E                     	;# 
  3999  010F                     	;# 
  4000  0110                     	;# 
  4001  0110                     	;# 
  4002  0111                     	;# 
  4003  0112                     	;# 
  4004  0112                     	;# 
  4005  0113                     	;# 
  4006  0114                     	;# 
  4007  0114                     	;# 
  4008  0115                     	;# 
  4009  0116                     	;# 
  4010  0116                     	;# 
  4011  0117                     	;# 
  4012  0119                     	;# 
  4013  0119                     	;# 
  4014  0119                     	;# 
  4015  011A                     	;# 
  4016  011A                     	;# 
  4017  011A                     	;# 
  4018  011B                     	;# 
  4019  011B                     	;# 
  4020  011B                     	;# 
  4021  011B                     	;# 
  4022  011B                     	;# 
  4023  011C                     	;# 
  4024  011C                     	;# 
  4025  011C                     	;# 
  4026  011D                     	;# 
  4027  011D                     	;# 
  4028  011D                     	;# 
  4029  011E                     	;# 
  4030  011E                     	;# 
  4031  011E                     	;# 
  4032  011F                     	;# 
  4033  011F                     	;# 
  4034  011F                     	;# 
  4035  011F                     	;# 
  4036  011F                     	;# 
  4037  018C                     	;# 
  4038  018D                     	;# 
  4039  018E                     	;# 
  4040  018F                     	;# 
  4041  0190                     	;# 
  4042  0191                     	;# 
  4043  0192                     	;# 
  4044  0196                     	;# 
  4045  0197                     	;# 
  4046  0198                     	;# 
  4047  0199                     	;# 
  4048  019A                     	;# 
  4049  019B                     	;# 
  4050  019C                     	;# 
  4051  020C                     	;# 
  4052  020C                     	;# 
  4053  020D                     	;# 
  4054  020E                     	;# 
  4055  020F                     	;# 
  4056  020F                     	;# 
  4057  0210                     	;# 
  4058  0210                     	;# 
  4059  0211                     	;# 
  4060  0211                     	;# 
  4061  0212                     	;# 
  4062  0212                     	;# 
  4063  0213                     	;# 
  4064  0214                     	;# 
  4065  0215                     	;# 
  4066  0215                     	;# 
  4067  0216                     	;# 
  4068  0216                     	;# 
  4069  0217                     	;# 
  4070  0217                     	;# 
  4071  0218                     	;# 
  4072  0218                     	;# 
  4073  0219                     	;# 
  4074  021A                     	;# 
  4075  021B                     	;# 
  4076  021B                     	;# 
  4077  021C                     	;# 
  4078  021C                     	;# 
  4079  021D                     	;# 
  4080  021D                     	;# 
  4081  021E                     	;# 
  4082  021F                     	;# 
  4083  028C                     	;# 
  4084  028C                     	;# 
  4085  028D                     	;# 
  4086  028D                     	;# 
  4087  028E                     	;# 
  4088  028F                     	;# 
  4089  0290                     	;# 
  4090  0290                     	;# 
  4091  0291                     	;# 
  4092  0292                     	;# 
  4093  0292                     	;# 
  4094  0293                     	;# 
  4095  0293                     	;# 
  4096  0294                     	;# 
  4097  0295                     	;# 
  4098  0296                     	;# 
  4099  0296                     	;# 
  4100  0297                     	;# 
  4101  0298                     	;# 
  4102  0298                     	;# 
  4103  0299                     	;# 
  4104  0299                     	;# 
  4105  029A                     	;# 
  4106  029B                     	;# 
  4107  029C                     	;# 
  4108  029C                     	;# 
  4109  029D                     	;# 
  4110  030C                     	;# 
  4111  030C                     	;# 
  4112  030D                     	;# 
  4113  030E                     	;# 
  4114  030F                     	;# 
  4115  0310                     	;# 
  4116  0310                     	;# 
  4117  0311                     	;# 
  4118  0312                     	;# 
  4119  0313                     	;# 
  4120  0314                     	;# 
  4121  0314                     	;# 
  4122  0315                     	;# 
  4123  0316                     	;# 
  4124  0317                     	;# 
  4125  0318                     	;# 
  4126  0318                     	;# 
  4127  0319                     	;# 
  4128  031A                     	;# 
  4129  031B                     	;# 
  4130  031C                     	;# 
  4131  031C                     	;# 
  4132  031D                     	;# 
  4133  031E                     	;# 
  4134  031F                     	;# 
  4135  038C                     	;# 
  4136  038C                     	;# 
  4137  038D                     	;# 
  4138  038E                     	;# 
  4139  0390                     	;# 
  4140  0390                     	;# 
  4141  0391                     	;# 
  4142  0392                     	;# 
  4143  040C                     	;# 
  4144  040D                     	;# 
  4145  040E                     	;# 
  4146  040F                     	;# 
  4147  0410                     	;# 
  4148  0411                     	;# 
  4149  0416                     	;# 
  4150  0416                     	;# 
  4151  0417                     	;# 
  4152  0418                     	;# 
  4153  0418                     	;# 
  4154  0419                     	;# 
  4155  041A                     	;# 
  4156  041A                     	;# 
  4157  041B                     	;# 
  4158  041C                     	;# 
  4159  041C                     	;# 
  4160  041D                     	;# 
  4161  041E                     	;# 
  4162  041F                     	;# 
  4163  048C                     	;# 
  4164  048C                     	;# 
  4165  048D                     	;# 
  4166  048E                     	;# 
  4167  048F                     	;# 
  4168  048F                     	;# 
  4169  0490                     	;# 
  4170  0491                     	;# 
  4171  0492                     	;# 
  4172  0492                     	;# 
  4173  0493                     	;# 
  4174  0494                     	;# 
  4175  0495                     	;# 
  4176  0495                     	;# 
  4177  0496                     	;# 
  4178  0497                     	;# 
  4179  0498                     	;# 
  4180  0499                     	;# 
  4181  049A                     	;# 
  4182  049B                     	;# 
  4183  049C                     	;# 
  4184  049D                     	;# 
  4185  050C                     	;# 
  4186  050C                     	;# 
  4187  050D                     	;# 
  4188  050E                     	;# 
  4189  050F                     	;# 
  4190  050F                     	;# 
  4191  0510                     	;# 
  4192  0511                     	;# 
  4193  0512                     	;# 
  4194  0512                     	;# 
  4195  0513                     	;# 
  4196  0514                     	;# 
  4197  0515                     	;# 
  4198  0515                     	;# 
  4199  0516                     	;# 
  4200  0517                     	;# 
  4201  0518                     	;# 
  4202  0519                     	;# 
  4203  051A                     	;# 
  4204  051B                     	;# 
  4205  051C                     	;# 
  4206  051D                     	;# 
  4207  058C                     	;# 
  4208  058C                     	;# 
  4209  058D                     	;# 
  4210  058E                     	;# 
  4211  058F                     	;# 
  4212  058F                     	;# 
  4213  0590                     	;# 
  4214  0591                     	;# 
  4215  0592                     	;# 
  4216  0593                     	;# 
  4217  060C                     	;# 
  4218  060D                     	;# 
  4219  060E                     	;# 
  4220  060F                     	;# 
  4221  0610                     	;# 
  4222  0611                     	;# 
  4223  0612                     	;# 
  4224  0613                     	;# 
  4225  0614                     	;# 
  4226  0616                     	;# 
  4227  0617                     	;# 
  4228  0618                     	;# 
  4229  0619                     	;# 
  4230  061A                     	;# 
  4231  061B                     	;# 
  4232  061C                     	;# 
  4233  061D                     	;# 
  4234  061E                     	;# 
  4235  068C                     	;# 
  4236  068D                     	;# 
  4237  068E                     	;# 
  4238  068F                     	;# 
  4239  0690                     	;# 
  4240  0691                     	;# 
  4241  0692                     	;# 
  4242  0693                     	;# 
  4243  0694                     	;# 
  4244  070C                     	;# 
  4245  070D                     	;# 
  4246  070E                     	;# 
  4247  070F                     	;# 
  4248  0710                     	;# 
  4249  0711                     	;# 
  4250  0712                     	;# 
  4251  0713                     	;# 
  4252  0714                     	;# 
  4253  0716                     	;# 
  4254  0717                     	;# 
  4255  0718                     	;# 
  4256  0719                     	;# 
  4257  071A                     	;# 
  4258  071B                     	;# 
  4259  071C                     	;# 
  4260  071D                     	;# 
  4261  071E                     	;# 
  4262  0796                     	;# 
  4263  0797                     	;# 
  4264  0798                     	;# 
  4265  0799                     	;# 
  4266  079A                     	;# 
  4267  079B                     	;# 
  4268  080C                     	;# 
  4269  080D                     	;# 
  4270  080E                     	;# 
  4271  080F                     	;# 
  4272  0810                     	;# 
  4273  0811                     	;# 
  4274  0812                     	;# 
  4275  0813                     	;# 
  4276  0814                     	;# 
  4277  081A                     	;# 
  4278  081B                     	;# 
  4279  081C                     	;# 
  4280  081D                     	;# 
  4281  081E                     	;# 
  4282  081F                     	;# 
  4283  088C                     	;# 
  4284  088D                     	;# 
  4285  088E                     	;# 
  4286  088F                     	;# 
  4287  0890                     	;# 
  4288  0891                     	;# 
  4289  0892                     	;# 
  4290  0893                     	;# 
  4291  0895                     	;# 
  4292  0896                     	;# 
  4293  0897                     	;# 
  4294  0898                     	;# 
  4295  0899                     	;# 
  4296  089A                     	;# 
  4297  089B                     	;# 
  4298  090C                     	;# 
  4299  090E                     	;# 
  4300  090F                     	;# 
  4301  091F                     	;# 
  4302  091F                     	;# 
  4303  098F                     	;# 
  4304  098F                     	;# 
  4305  0990                     	;# 
  4306  0991                     	;# 
  4307  0992                     	;# 
  4308  0993                     	;# 
  4309  0994                     	;# 
  4310  0995                     	;# 
  4311  0996                     	;# 
  4312  0997                     	;# 
  4313  0E0F                     	;# 
  4314  0E10                     	;# 
  4315  0E11                     	;# 
  4316  0E12                     	;# 
  4317  0E13                     	;# 
  4318  0E14                     	;# 
  4319  0E15                     	;# 
  4320  0E16                     	;# 
  4321  0E17                     	;# 
  4322  0E18                     	;# 
  4323  0E19                     	;# 
  4324  0E1A                     	;# 
  4325  0E1B                     	;# 
  4326  0E1C                     	;# 
  4327  0E1D                     	;# 
  4328  0E1E                     	;# 
  4329  0E1F                     	;# 
  4330  0E20                     	;# 
  4331  0E21                     	;# 
  4332  0E22                     	;# 
  4333  0E23                     	;# 
  4334  0E24                     	;# 
  4335  0E25                     	;# 
  4336  0E26                     	;# 
  4337  0E27                     	;# 
  4338  0E28                     	;# 
  4339  0E29                     	;# 
  4340  0E2A                     	;# 
  4341  0E2B                     	;# 
  4342  0E2C                     	;# 
  4343  0E2D                     	;# 
  4344  0E2E                     	;# 
  4345  0E2F                     	;# 
  4346  0E30                     	;# 
  4347  0E31                     	;# 
  4348  0E32                     	;# 
  4349  0E33                     	;# 
  4350  0E34                     	;# 
  4351  0E35                     	;# 
  4352  0E36                     	;# 
  4353  0E37                     	;# 
  4354  0E8F                     	;# 
  4355  0E90                     	;# 
  4356  0E91                     	;# 
  4357  0E92                     	;# 
  4358  0E93                     	;# 
  4359  0E94                     	;# 
  4360  0E95                     	;# 
  4361  0E96                     	;# 
  4362  0E97                     	;# 
  4363  0E9C                     	;# 
  4364  0E9D                     	;# 
  4365  0E9E                     	;# 
  4366  0EA1                     	;# 
  4367  0EA2                     	;# 
  4368  0EA3                     	;# 
  4369  0EA4                     	;# 
  4370  0EA5                     	;# 
  4371  0EA9                     	;# 
  4372  0EAA                     	;# 
  4373  0EAB                     	;# 
  4374  0EAC                     	;# 
  4375  0EB1                     	;# 
  4376  0EB2                     	;# 
  4377  0EB3                     	;# 
  4378  0EB8                     	;# 
  4379  0EB9                     	;# 
  4380  0EBA                     	;# 
  4381  0EBB                     	;# 
  4382  0EBC                     	;# 
  4383  0EBD                     	;# 
  4384  0EBE                     	;# 
  4385  0EC3                     	;# 
  4386  0EC5                     	;# 
  4387  0EC6                     	;# 
  4388  0EC7                     	;# 
  4389  0EC8                     	;# 
  4390  0EC9                     	;# 
  4391  0ECA                     	;# 
  4392  0ECB                     	;# 
  4393  0ECC                     	;# 
  4394  0F10                     	;# 
  4395  0F11                     	;# 
  4396  0F12                     	;# 
  4397  0F13                     	;# 
  4398  0F14                     	;# 
  4399  0F15                     	;# 
  4400  0F16                     	;# 
  4401  0F17                     	;# 
  4402  0F18                     	;# 
  4403  0F19                     	;# 
  4404  0F1A                     	;# 
  4405  0F1B                     	;# 
  4406  0F1C                     	;# 
  4407  0F1D                     	;# 
  4408  0F1E                     	;# 
  4409  0F1F                     	;# 
  4410  0F20                     	;# 
  4411  0F21                     	;# 
  4412  0F22                     	;# 
  4413  0F23                     	;# 
  4414  0F24                     	;# 
  4415  0F25                     	;# 
  4416  0F26                     	;# 
  4417  0F27                     	;# 
  4418  0F28                     	;# 
  4419  0F29                     	;# 
  4420  0F2A                     	;# 
  4421  0F2B                     	;# 
  4422  0F2C                     	;# 
  4423  0F2D                     	;# 
  4424  0F2E                     	;# 
  4425  0F2F                     	;# 
  4426  0F30                     	;# 
  4427  0F31                     	;# 
  4428  0F32                     	;# 
  4429  0F38                     	;# 
  4430  0F39                     	;# 
  4431  0F3A                     	;# 
  4432  0F3B                     	;# 
  4433  0F3C                     	;# 
  4434  0F3D                     	;# 
  4435  0F3E                     	;# 
  4436  0F3F                     	;# 
  4437  0F40                     	;# 
  4438  0F41                     	;# 
  4439  0F43                     	;# 
  4440  0F44                     	;# 
  4441  0F45                     	;# 
  4442  0F46                     	;# 
  4443  0F47                     	;# 
  4444  0F48                     	;# 
  4445  0F49                     	;# 
  4446  0F4A                     	;# 
  4447  0F4B                     	;# 
  4448  0F4C                     	;# 
  4449  0F4E                     	;# 
  4450  0F4F                     	;# 
  4451  0F50                     	;# 
  4452  0F51                     	;# 
  4453  0F52                     	;# 
  4454  0F53                     	;# 
  4455  0F54                     	;# 
  4456  0F55                     	;# 
  4457  0F56                     	;# 
  4458  0F57                     	;# 
  4459  0F59                     	;# 
  4460  0F5A                     	;# 
  4461  0F5B                     	;# 
  4462  0F5C                     	;# 
  4463  0F5D                     	;# 
  4464  0F61                     	;# 
  4465  0F62                     	;# 
  4466  0F64                     	;# 
  4467  0F65                     	;# 
  4468  0F66                     	;# 
  4469  0F67                     	;# 
  4470  0F68                     	;# 
  4471  0F69                     	;# 
  4472  0F6A                     	;# 
  4473  0F6B                     	;# 
  4474  0F6C                     	;# 
  4475  0F6D                     	;# 
  4476  0FE4                     	;# 
  4477  0FE5                     	;# 
  4478  0FE6                     	;# 
  4479  0FE7                     	;# 
  4480  0FE8                     	;# 
  4481  0FE9                     	;# 
  4482  0FEA                     	;# 
  4483  0FEB                     	;# 
  4484  0FED                     	;# 
  4485  0FEE                     	;# 
  4486  0FEF                     	;# 
  4487  0000                     	;# 
  4488  0001                     	;# 
  4489  0002                     	;# 
  4490  0003                     	;# 
  4491  0004                     	;# 
  4492  0005                     	;# 
  4493  0006                     	;# 
  4494  0007                     	;# 
  4495  0008                     	;# 
  4496  0009                     	;# 
  4497  000A                     	;# 
  4498  000B                     	;# 
  4499  000C                     	;# 
  4500  000D                     	;# 
  4501  000E                     	;# 
  4502  000F                     	;# 
  4503  0010                     	;# 
  4504  0011                     	;# 
  4505  0012                     	;# 
  4506  0013                     	;# 
  4507  0014                     	;# 
  4508  0015                     	;# 
  4509  0016                     	;# 
  4510  0017                     	;# 
  4511  0018                     	;# 
  4512  0019                     	;# 
  4513  001A                     	;# 
  4514  001C                     	;# 
  4515  001C                     	;# 
  4516  001D                     	;# 
  4517  001D                     	;# 
  4518  001E                     	;# 
  4519  001F                     	;# 
  4520  008C                     	;# 
  4521  008C                     	;# 
  4522  008D                     	;# 
  4523  008E                     	;# 
  4524  008E                     	;# 
  4525  008F                     	;# 
  4526  0090                     	;# 
  4527  0090                     	;# 
  4528  0091                     	;# 
  4529  0093                     	;# 
  4530  0094                     	;# 
  4531  0095                     	;# 
  4532  0096                     	;# 
  4533  0097                     	;# 
  4534  0098                     	;# 
  4535  0099                     	;# 
  4536  009A                     	;# 
  4537  009B                     	;# 
  4538  009C                     	;# 
  4539  009D                     	;# 
  4540  009E                     	;# 
  4541  010C                     	;# 
  4542  010D                     	;# 
  4543  010E                     	;# 
  4544  010E                     	;# 
  4545  010F                     	;# 
  4546  0110                     	;# 
  4547  0110                     	;# 
  4548  0111                     	;# 
  4549  0112                     	;# 
  4550  0112                     	;# 
  4551  0113                     	;# 
  4552  0114                     	;# 
  4553  0114                     	;# 
  4554  0115                     	;# 
  4555  0116                     	;# 
  4556  0116                     	;# 
  4557  0117                     	;# 
  4558  0119                     	;# 
  4559  0119                     	;# 
  4560  0119                     	;# 
  4561  011A                     	;# 
  4562  011A                     	;# 
  4563  011A                     	;# 
  4564  011B                     	;# 
  4565  011B                     	;# 
  4566  011B                     	;# 
  4567  011B                     	;# 
  4568  011B                     	;# 
  4569  011C                     	;# 
  4570  011C                     	;# 
  4571  011C                     	;# 
  4572  011D                     	;# 
  4573  011D                     	;# 
  4574  011D                     	;# 
  4575  011E                     	;# 
  4576  011E                     	;# 
  4577  011E                     	;# 
  4578  011F                     	;# 
  4579  011F                     	;# 
  4580  011F                     	;# 
  4581  011F                     	;# 
  4582  011F                     	;# 
  4583  018C                     	;# 
  4584  018D                     	;# 
  4585  018E                     	;# 
  4586  018F                     	;# 
  4587  0190                     	;# 
  4588  0191                     	;# 
  4589  0192                     	;# 
  4590  0196                     	;# 
  4591  0197                     	;# 
  4592  0198                     	;# 
  4593  0199                     	;# 
  4594  019A                     	;# 
  4595  019B                     	;# 
  4596  019C                     	;# 
  4597  020C                     	;# 
  4598  020C                     	;# 
  4599  020D                     	;# 
  4600  020E                     	;# 
  4601  020F                     	;# 
  4602  020F                     	;# 
  4603  0210                     	;# 
  4604  0210                     	;# 
  4605  0211                     	;# 
  4606  0211                     	;# 
  4607  0212                     	;# 
  4608  0212                     	;# 
  4609  0213                     	;# 
  4610  0214                     	;# 
  4611  0215                     	;# 
  4612  0215                     	;# 
  4613  0216                     	;# 
  4614  0216                     	;# 
  4615  0217                     	;# 
  4616  0217                     	;# 
  4617  0218                     	;# 
  4618  0218                     	;# 
  4619  0219                     	;# 
  4620  021A                     	;# 
  4621  021B                     	;# 
  4622  021B                     	;# 
  4623  021C                     	;# 
  4624  021C                     	;# 
  4625  021D                     	;# 
  4626  021D                     	;# 
  4627  021E                     	;# 
  4628  021F                     	;# 
  4629  028C                     	;# 
  4630  028C                     	;# 
  4631  028D                     	;# 
  4632  028D                     	;# 
  4633  028E                     	;# 
  4634  028F                     	;# 
  4635  0290                     	;# 
  4636  0290                     	;# 
  4637  0291                     	;# 
  4638  0292                     	;# 
  4639  0292                     	;# 
  4640  0293                     	;# 
  4641  0293                     	;# 
  4642  0294                     	;# 
  4643  0295                     	;# 
  4644  0296                     	;# 
  4645  0296                     	;# 
  4646  0297                     	;# 
  4647  0298                     	;# 
  4648  0298                     	;# 
  4649  0299                     	;# 
  4650  0299                     	;# 
  4651  029A                     	;# 
  4652  029B                     	;# 
  4653  029C                     	;# 
  4654  029C                     	;# 
  4655  029D                     	;# 
  4656  030C                     	;# 
  4657  030C                     	;# 
  4658  030D                     	;# 
  4659  030E                     	;# 
  4660  030F                     	;# 
  4661  0310                     	;# 
  4662  0310                     	;# 
  4663  0311                     	;# 
  4664  0312                     	;# 
  4665  0313                     	;# 
  4666  0314                     	;# 
  4667  0314                     	;# 
  4668  0315                     	;# 
  4669  0316                     	;# 
  4670  0317                     	;# 
  4671  0318                     	;# 
  4672  0318                     	;# 
  4673  0319                     	;# 
  4674  031A                     	;# 
  4675  031B                     	;# 
  4676  031C                     	;# 
  4677  031C                     	;# 
  4678  031D                     	;# 
  4679  031E                     	;# 
  4680  031F                     	;# 
  4681  038C                     	;# 
  4682  038C                     	;# 
  4683  038D                     	;# 
  4684  038E                     	;# 
  4685  0390                     	;# 
  4686  0390                     	;# 
  4687  0391                     	;# 
  4688  0392                     	;# 
  4689  040C                     	;# 
  4690  040D                     	;# 
  4691  040E                     	;# 
  4692  040F                     	;# 
  4693  0410                     	;# 
  4694  0411                     	;# 
  4695  0416                     	;# 
  4696  0416                     	;# 
  4697  0417                     	;# 
  4698  0418                     	;# 
  4699  0418                     	;# 
  4700  0419                     	;# 
  4701  041A                     	;# 
  4702  041A                     	;# 
  4703  041B                     	;# 
  4704  041C                     	;# 
  4705  041C                     	;# 
  4706  041D                     	;# 
  4707  041E                     	;# 
  4708  041F                     	;# 
  4709  048C                     	;# 
  4710  048C                     	;# 
  4711  048D                     	;# 
  4712  048E                     	;# 
  4713  048F                     	;# 
  4714  048F                     	;# 
  4715  0490                     	;# 
  4716  0491                     	;# 
  4717  0492                     	;# 
  4718  0492                     	;# 
  4719  0493                     	;# 
  4720  0494                     	;# 
  4721  0495                     	;# 
  4722  0495                     	;# 
  4723  0496                     	;# 
  4724  0497                     	;# 
  4725  0498                     	;# 
  4726  0499                     	;# 
  4727  049A                     	;# 
  4728  049B                     	;# 
  4729  049C                     	;# 
  4730  049D                     	;# 
  4731  050C                     	;# 
  4732  050C                     	;# 
  4733  050D                     	;# 
  4734  050E                     	;# 
  4735  050F                     	;# 
  4736  050F                     	;# 
  4737  0510                     	;# 
  4738  0511                     	;# 
  4739  0512                     	;# 
  4740  0512                     	;# 
  4741  0513                     	;# 
  4742  0514                     	;# 
  4743  0515                     	;# 
  4744  0515                     	;# 
  4745  0516                     	;# 
  4746  0517                     	;# 
  4747  0518                     	;# 
  4748  0519                     	;# 
  4749  051A                     	;# 
  4750  051B                     	;# 
  4751  051C                     	;# 
  4752  051D                     	;# 
  4753  058C                     	;# 
  4754  058C                     	;# 
  4755  058D                     	;# 
  4756  058E                     	;# 
  4757  058F                     	;# 
  4758  058F                     	;# 
  4759  0590                     	;# 
  4760  0591                     	;# 
  4761  0592                     	;# 
  4762  0593                     	;# 
  4763  060C                     	;# 
  4764  060D                     	;# 
  4765  060E                     	;# 
  4766  060F                     	;# 
  4767  0610                     	;# 
  4768  0611                     	;# 
  4769  0612                     	;# 
  4770  0613                     	;# 
  4771  0614                     	;# 
  4772  0616                     	;# 
  4773  0617                     	;# 
  4774  0618                     	;# 
  4775  0619                     	;# 
  4776  061A                     	;# 
  4777  061B                     	;# 
  4778  061C                     	;# 
  4779  061D                     	;# 
  4780  061E                     	;# 
  4781  068C                     	;# 
  4782  068D                     	;# 
  4783  068E                     	;# 
  4784  068F                     	;# 
  4785  0690                     	;# 
  4786  0691                     	;# 
  4787  0692                     	;# 
  4788  0693                     	;# 
  4789  0694                     	;# 
  4790  070C                     	;# 
  4791  070D                     	;# 
  4792  070E                     	;# 
  4793  070F                     	;# 
  4794  0710                     	;# 
  4795  0711                     	;# 
  4796  0712                     	;# 
  4797  0713                     	;# 
  4798  0714                     	;# 
  4799  0716                     	;# 
  4800  0717                     	;# 
  4801  0718                     	;# 
  4802  0719                     	;# 
  4803  071A                     	;# 
  4804  071B                     	;# 
  4805  071C                     	;# 
  4806  071D                     	;# 
  4807  071E                     	;# 
  4808  0796                     	;# 
  4809  0797                     	;# 
  4810  0798                     	;# 
  4811  0799                     	;# 
  4812  079A                     	;# 
  4813  079B                     	;# 
  4814  080C                     	;# 
  4815  080D                     	;# 
  4816  080E                     	;# 
  4817  080F                     	;# 
  4818  0810                     	;# 
  4819  0811                     	;# 
  4820  0812                     	;# 
  4821  0813                     	;# 
  4822  0814                     	;# 
  4823  081A                     	;# 
  4824  081B                     	;# 
  4825  081C                     	;# 
  4826  081D                     	;# 
  4827  081E                     	;# 
  4828  081F                     	;# 
  4829  088C                     	;# 
  4830  088D                     	;# 
  4831  088E                     	;# 
  4832  088F                     	;# 
  4833  0890                     	;# 
  4834  0891                     	;# 
  4835  0892                     	;# 
  4836  0893                     	;# 
  4837  0895                     	;# 
  4838  0896                     	;# 
  4839  0897                     	;# 
  4840  0898                     	;# 
  4841  0899                     	;# 
  4842  089A                     	;# 
  4843  089B                     	;# 
  4844  090C                     	;# 
  4845  090E                     	;# 
  4846  090F                     	;# 
  4847  091F                     	;# 
  4848  091F                     	;# 
  4849  098F                     	;# 
  4850  098F                     	;# 
  4851  0990                     	;# 
  4852  0991                     	;# 
  4853  0992                     	;# 
  4854  0993                     	;# 
  4855  0994                     	;# 
  4856  0995                     	;# 
  4857  0996                     	;# 
  4858  0997                     	;# 
  4859  0E0F                     	;# 
  4860  0E10                     	;# 
  4861  0E11                     	;# 
  4862  0E12                     	;# 
  4863  0E13                     	;# 
  4864  0E14                     	;# 
  4865  0E15                     	;# 
  4866  0E16                     	;# 
  4867  0E17                     	;# 
  4868  0E18                     	;# 
  4869  0E19                     	;# 
  4870  0E1A                     	;# 
  4871  0E1B                     	;# 
  4872  0E1C                     	;# 
  4873  0E1D                     	;# 
  4874  0E1E                     	;# 
  4875  0E1F                     	;# 
  4876  0E20                     	;# 
  4877  0E21                     	;# 
  4878  0E22                     	;# 
  4879  0E23                     	;# 
  4880  0E24                     	;# 
  4881  0E25                     	;# 
  4882  0E26                     	;# 
  4883  0E27                     	;# 
  4884  0E28                     	;# 
  4885  0E29                     	;# 
  4886  0E2A                     	;# 
  4887  0E2B                     	;# 
  4888  0E2C                     	;# 
  4889  0E2D                     	;# 
  4890  0E2E                     	;# 
  4891  0E2F                     	;# 
  4892  0E30                     	;# 
  4893  0E31                     	;# 
  4894  0E32                     	;# 
  4895  0E33                     	;# 
  4896  0E34                     	;# 
  4897  0E35                     	;# 
  4898  0E36                     	;# 
  4899  0E37                     	;# 
  4900  0E8F                     	;# 
  4901  0E90                     	;# 
  4902  0E91                     	;# 
  4903  0E92                     	;# 
  4904  0E93                     	;# 
  4905  0E94                     	;# 
  4906  0E95                     	;# 
  4907  0E96                     	;# 
  4908  0E97                     	;# 
  4909  0E9C                     	;# 
  4910  0E9D                     	;# 
  4911  0E9E                     	;# 
  4912  0EA1                     	;# 
  4913  0EA2                     	;# 
  4914  0EA3                     	;# 
  4915  0EA4                     	;# 
  4916  0EA5                     	;# 
  4917  0EA9                     	;# 
  4918  0EAA                     	;# 
  4919  0EAB                     	;# 
  4920  0EAC                     	;# 
  4921  0EB1                     	;# 
  4922  0EB2                     	;# 
  4923  0EB3                     	;# 
  4924  0EB8                     	;# 
  4925  0EB9                     	;# 
  4926  0EBA                     	;# 
  4927  0EBB                     	;# 
  4928  0EBC                     	;# 
  4929  0EBD                     	;# 
  4930  0EBE                     	;# 
  4931  0EC3                     	;# 
  4932  0EC5                     	;# 
  4933  0EC6                     	;# 
  4934  0EC7                     	;# 
  4935  0EC8                     	;# 
  4936  0EC9                     	;# 
  4937  0ECA                     	;# 
  4938  0ECB                     	;# 
  4939  0ECC                     	;# 
  4940  0F10                     	;# 
  4941  0F11                     	;# 
  4942  0F12                     	;# 
  4943  0F13                     	;# 
  4944  0F14                     	;# 
  4945  0F15                     	;# 
  4946  0F16                     	;# 
  4947  0F17                     	;# 
  4948  0F18                     	;# 
  4949  0F19                     	;# 
  4950  0F1A                     	;# 
  4951  0F1B                     	;# 
  4952  0F1C                     	;# 
  4953  0F1D                     	;# 
  4954  0F1E                     	;# 
  4955  0F1F                     	;# 
  4956  0F20                     	;# 
  4957  0F21                     	;# 
  4958  0F22                     	;# 
  4959  0F23                     	;# 
  4960  0F24                     	;# 
  4961  0F25                     	;# 
  4962  0F26                     	;# 
  4963  0F27                     	;# 
  4964  0F28                     	;# 
  4965  0F29                     	;# 
  4966  0F2A                     	;# 
  4967  0F2B                     	;# 
  4968  0F2C                     	;# 
  4969  0F2D                     	;# 
  4970  0F2E                     	;# 
  4971  0F2F                     	;# 
  4972  0F30                     	;# 
  4973  0F31                     	;# 
  4974  0F32                     	;# 
  4975  0F38                     	;# 
  4976  0F39                     	;# 
  4977  0F3A                     	;# 
  4978  0F3B                     	;# 
  4979  0F3C                     	;# 
  4980  0F3D                     	;# 
  4981  0F3E                     	;# 
  4982  0F3F                     	;# 
  4983  0F40                     	;# 
  4984  0F41                     	;# 
  4985  0F43                     	;# 
  4986  0F44                     	;# 
  4987  0F45                     	;# 
  4988  0F46                     	;# 
  4989  0F47                     	;# 
  4990  0F48                     	;# 
  4991  0F49                     	;# 
  4992  0F4A                     	;# 
  4993  0F4B                     	;# 
  4994  0F4C                     	;# 
  4995  0F4E                     	;# 
  4996  0F4F                     	;# 
  4997  0F50                     	;# 
  4998  0F51                     	;# 
  4999  0F52                     	;# 
  5000  0F53                     	;# 
  5001  0F54                     	;# 
  5002  0F55                     	;# 
  5003  0F56                     	;# 
  5004  0F57                     	;# 
  5005  0F59                     	;# 
  5006  0F5A                     	;# 
  5007  0F5B                     	;# 
  5008  0F5C                     	;# 
  5009  0F5D                     	;# 
  5010  0F61                     	;# 
  5011  0F62                     	;# 
  5012  0F64                     	;# 
  5013  0F65                     	;# 
  5014  0F66                     	;# 
  5015  0F67                     	;# 
  5016  0F68                     	;# 
  5017  0F69                     	;# 
  5018  0F6A                     	;# 
  5019  0F6B                     	;# 
  5020  0F6C                     	;# 
  5021  0F6D                     	;# 
  5022  0FE4                     	;# 
  5023  0FE5                     	;# 
  5024  0FE6                     	;# 
  5025  0FE7                     	;# 
  5026  0FE8                     	;# 
  5027  0FE9                     	;# 
  5028  0FEA                     	;# 
  5029  0FEB                     	;# 
  5030  0FED                     	;# 
  5031  0FEE                     	;# 
  5032  0FEF                     	;# 
  5033  0000                     	;# 
  5034  0001                     	;# 
  5035  0002                     	;# 
  5036  0003                     	;# 
  5037  0004                     	;# 
  5038  0005                     	;# 
  5039  0006                     	;# 
  5040  0007                     	;# 
  5041  0008                     	;# 
  5042  0009                     	;# 
  5043  000A                     	;# 
  5044  000B                     	;# 
  5045  000C                     	;# 
  5046  000D                     	;# 
  5047  000E                     	;# 
  5048  000F                     	;# 
  5049  0010                     	;# 
  5050  0011                     	;# 
  5051  0012                     	;# 
  5052  0013                     	;# 
  5053  0014                     	;# 
  5054  0015                     	;# 
  5055  0016                     	;# 
  5056  0017                     	;# 
  5057  0018                     	;# 
  5058  0019                     	;# 
  5059  001A                     	;# 
  5060  001C                     	;# 
  5061  001C                     	;# 
  5062  001D                     	;# 
  5063  001D                     	;# 
  5064  001E                     	;# 
  5065  001F                     	;# 
  5066  008C                     	;# 
  5067  008C                     	;# 
  5068  008D                     	;# 
  5069  008E                     	;# 
  5070  008E                     	;# 
  5071  008F                     	;# 
  5072  0090                     	;# 
  5073  0090                     	;# 
  5074  0091                     	;# 
  5075  0093                     	;# 
  5076  0094                     	;# 
  5077  0095                     	;# 
  5078  0096                     	;# 
  5079  0097                     	;# 
  5080  0098                     	;# 
  5081  0099                     	;# 
  5082  009A                     	;# 
  5083  009B                     	;# 
  5084  009C                     	;# 
  5085  009D                     	;# 
  5086  009E                     	;# 
  5087  010C                     	;# 
  5088  010D                     	;# 
  5089  010E                     	;# 
  5090  010E                     	;# 
  5091  010F                     	;# 
  5092  0110                     	;# 
  5093  0110                     	;# 
  5094  0111                     	;# 
  5095  0112                     	;# 
  5096  0112                     	;# 
  5097  0113                     	;# 
  5098  0114                     	;# 
  5099  0114                     	;# 
  5100  0115                     	;# 
  5101  0116                     	;# 
  5102  0116                     	;# 
  5103  0117                     	;# 
  5104  0119                     	;# 
  5105  0119                     	;# 
  5106  0119                     	;# 
  5107  011A                     	;# 
  5108  011A                     	;# 
  5109  011A                     	;# 
  5110  011B                     	;# 
  5111  011B                     	;# 
  5112  011B                     	;# 
  5113  011B                     	;# 
  5114  011B                     	;# 
  5115  011C                     	;# 
  5116  011C                     	;# 
  5117  011C                     	;# 
  5118  011D                     	;# 
  5119  011D                     	;# 
  5120  011D                     	;# 
  5121  011E                     	;# 
  5122  011E                     	;# 
  5123  011E                     	;# 
  5124  011F                     	;# 
  5125  011F                     	;# 
  5126  011F                     	;# 
  5127  011F                     	;# 
  5128  011F                     	;# 
  5129  018C                     	;# 
  5130  018D                     	;# 
  5131  018E                     	;# 
  5132  018F                     	;# 
  5133  0190                     	;# 
  5134  0191                     	;# 
  5135  0192                     	;# 
  5136  0196                     	;# 
  5137  0197                     	;# 
  5138  0198                     	;# 
  5139  0199                     	;# 
  5140  019A                     	;# 
  5141  019B                     	;# 
  5142  019C                     	;# 
  5143  020C                     	;# 
  5144  020C                     	;# 
  5145  020D                     	;# 
  5146  020E                     	;# 
  5147  020F                     	;# 
  5148  020F                     	;# 
  5149  0210                     	;# 
  5150  0210                     	;# 
  5151  0211                     	;# 
  5152  0211                     	;# 
  5153  0212                     	;# 
  5154  0212                     	;# 
  5155  0213                     	;# 
  5156  0214                     	;# 
  5157  0215                     	;# 
  5158  0215                     	;# 
  5159  0216                     	;# 
  5160  0216                     	;# 
  5161  0217                     	;# 
  5162  0217                     	;# 
  5163  0218                     	;# 
  5164  0218                     	;# 
  5165  0219                     	;# 
  5166  021A                     	;# 
  5167  021B                     	;# 
  5168  021B                     	;# 
  5169  021C                     	;# 
  5170  021C                     	;# 
  5171  021D                     	;# 
  5172  021D                     	;# 
  5173  021E                     	;# 
  5174  021F                     	;# 
  5175  028C                     	;# 
  5176  028C                     	;# 
  5177  028D                     	;# 
  5178  028D                     	;# 
  5179  028E                     	;# 
  5180  028F                     	;# 
  5181  0290                     	;# 
  5182  0290                     	;# 
  5183  0291                     	;# 
  5184  0292                     	;# 
  5185  0292                     	;# 
  5186  0293                     	;# 
  5187  0293                     	;# 
  5188  0294                     	;# 
  5189  0295                     	;# 
  5190  0296                     	;# 
  5191  0296                     	;# 
  5192  0297                     	;# 
  5193  0298                     	;# 
  5194  0298                     	;# 
  5195  0299                     	;# 
  5196  0299                     	;# 
  5197  029A                     	;# 
  5198  029B                     	;# 
  5199  029C                     	;# 
  5200  029C                     	;# 
  5201  029D                     	;# 
  5202  030C                     	;# 
  5203  030C                     	;# 
  5204  030D                     	;# 
  5205  030E                     	;# 
  5206  030F                     	;# 
  5207  0310                     	;# 
  5208  0310                     	;# 
  5209  0311                     	;# 
  5210  0312                     	;# 
  5211  0313                     	;# 
  5212  0314                     	;# 
  5213  0314                     	;# 
  5214  0315                     	;# 
  5215  0316                     	;# 
  5216  0317                     	;# 
  5217  0318                     	;# 
  5218  0318                     	;# 
  5219  0319                     	;# 
  5220  031A                     	;# 
  5221  031B                     	;# 
  5222  031C                     	;# 
  5223  031C                     	;# 
  5224  031D                     	;# 
  5225  031E                     	;# 
  5226  031F                     	;# 
  5227  038C                     	;# 
  5228  038C                     	;# 
  5229  038D                     	;# 
  5230  038E                     	;# 
  5231  0390                     	;# 
  5232  0390                     	;# 
  5233  0391                     	;# 
  5234  0392                     	;# 
  5235  040C                     	;# 
  5236  040D                     	;# 
  5237  040E                     	;# 
  5238  040F                     	;# 
  5239  0410                     	;# 
  5240  0411                     	;# 
  5241  0416                     	;# 
  5242  0416                     	;# 
  5243  0417                     	;# 
  5244  0418                     	;# 
  5245  0418                     	;# 
  5246  0419                     	;# 
  5247  041A                     	;# 
  5248  041A                     	;# 
  5249  041B                     	;# 
  5250  041C                     	;# 
  5251  041C                     	;# 
  5252  041D                     	;# 
  5253  041E                     	;# 
  5254  041F                     	;# 
  5255  048C                     	;# 
  5256  048C                     	;# 
  5257  048D                     	;# 
  5258  048E                     	;# 
  5259  048F                     	;# 
  5260  048F                     	;# 
  5261  0490                     	;# 
  5262  0491                     	;# 
  5263  0492                     	;# 
  5264  0492                     	;# 
  5265  0493                     	;# 
  5266  0494                     	;# 
  5267  0495                     	;# 
  5268  0495                     	;# 
  5269  0496                     	;# 
  5270  0497                     	;# 
  5271  0498                     	;# 
  5272  0499                     	;# 
  5273  049A                     	;# 
  5274  049B                     	;# 
  5275  049C                     	;# 
  5276  049D                     	;# 
  5277  050C                     	;# 
  5278  050C                     	;# 
  5279  050D                     	;# 
  5280  050E                     	;# 
  5281  050F                     	;# 
  5282  050F                     	;# 
  5283  0510                     	;# 
  5284  0511                     	;# 
  5285  0512                     	;# 
  5286  0512                     	;# 
  5287  0513                     	;# 
  5288  0514                     	;# 
  5289  0515                     	;# 
  5290  0515                     	;# 
  5291  0516                     	;# 
  5292  0517                     	;# 
  5293  0518                     	;# 
  5294  0519                     	;# 
  5295  051A                     	;# 
  5296  051B                     	;# 
  5297  051C                     	;# 
  5298  051D                     	;# 
  5299  058C                     	;# 
  5300  058C                     	;# 
  5301  058D                     	;# 
  5302  058E                     	;# 
  5303  058F                     	;# 
  5304  058F                     	;# 
  5305  0590                     	;# 
  5306  0591                     	;# 
  5307  0592                     	;# 
  5308  0593                     	;# 
  5309  060C                     	;# 
  5310  060D                     	;# 
  5311  060E                     	;# 
  5312  060F                     	;# 
  5313  0610                     	;# 
  5314  0611                     	;# 
  5315  0612                     	;# 
  5316  0613                     	;# 
  5317  0614                     	;# 
  5318  0616                     	;# 
  5319  0617                     	;# 
  5320  0618                     	;# 
  5321  0619                     	;# 
  5322  061A                     	;# 
  5323  061B                     	;# 
  5324  061C                     	;# 
  5325  061D                     	;# 
  5326  061E                     	;# 
  5327  068C                     	;# 
  5328  068D                     	;# 
  5329  068E                     	;# 
  5330  068F                     	;# 
  5331  0690                     	;# 
  5332  0691                     	;# 
  5333  0692                     	;# 
  5334  0693                     	;# 
  5335  0694                     	;# 
  5336  070C                     	;# 
  5337  070D                     	;# 
  5338  070E                     	;# 
  5339  070F                     	;# 
  5340  0710                     	;# 
  5341  0711                     	;# 
  5342  0712                     	;# 
  5343  0713                     	;# 
  5344  0714                     	;# 
  5345  0716                     	;# 
  5346  0717                     	;# 
  5347  0718                     	;# 
  5348  0719                     	;# 
  5349  071A                     	;# 
  5350  071B                     	;# 
  5351  071C                     	;# 
  5352  071D                     	;# 
  5353  071E                     	;# 
  5354  0796                     	;# 
  5355  0797                     	;# 
  5356  0798                     	;# 
  5357  0799                     	;# 
  5358  079A                     	;# 
  5359  079B                     	;# 
  5360  080C                     	;# 
  5361  080D                     	;# 
  5362  080E                     	;# 
  5363  080F                     	;# 
  5364  0810                     	;# 
  5365  0811                     	;# 
  5366  0812                     	;# 
  5367  0813                     	;# 
  5368  0814                     	;# 
  5369  081A                     	;# 
  5370  081B                     	;# 
  5371  081C                     	;# 
  5372  081D                     	;# 
  5373  081E                     	;# 
  5374  081F                     	;# 
  5375  088C                     	;# 
  5376  088D                     	;# 
  5377  088E                     	;# 
  5378  088F                     	;# 
  5379  0890                     	;# 
  5380  0891                     	;# 
  5381  0892                     	;# 
  5382  0893                     	;# 
  5383  0895                     	;# 
  5384  0896                     	;# 
  5385  0897                     	;# 
  5386  0898                     	;# 
  5387  0899                     	;# 
  5388  089A                     	;# 
  5389  089B                     	;# 
  5390  090C                     	;# 
  5391  090E                     	;# 
  5392  090F                     	;# 
  5393  091F                     	;# 
  5394  091F                     	;# 
  5395  098F                     	;# 
  5396  098F                     	;# 
  5397  0990                     	;# 
  5398  0991                     	;# 
  5399  0992                     	;# 
  5400  0993                     	;# 
  5401  0994                     	;# 
  5402  0995                     	;# 
  5403  0996                     	;# 
  5404  0997                     	;# 
  5405  0E0F                     	;# 
  5406  0E10                     	;# 
  5407  0E11                     	;# 
  5408  0E12                     	;# 
  5409  0E13                     	;# 
  5410  0E14                     	;# 
  5411  0E15                     	;# 
  5412  0E16                     	;# 
  5413  0E17                     	;# 
  5414  0E18                     	;# 
  5415  0E19                     	;# 
  5416  0E1A                     	;# 
  5417  0E1B                     	;# 
  5418  0E1C                     	;# 
  5419  0E1D                     	;# 
  5420  0E1E                     	;# 
  5421  0E1F                     	;# 
  5422  0E20                     	;# 
  5423  0E21                     	;# 
  5424  0E22                     	;# 
  5425  0E23                     	;# 
  5426  0E24                     	;# 
  5427  0E25                     	;# 
  5428  0E26                     	;# 
  5429  0E27                     	;# 
  5430  0E28                     	;# 
  5431  0E29                     	;# 
  5432  0E2A                     	;# 
  5433  0E2B                     	;# 
  5434  0E2C                     	;# 
  5435  0E2D                     	;# 
  5436  0E2E                     	;# 
  5437  0E2F                     	;# 
  5438  0E30                     	;# 
  5439  0E31                     	;# 
  5440  0E32                     	;# 
  5441  0E33                     	;# 
  5442  0E34                     	;# 
  5443  0E35                     	;# 
  5444  0E36                     	;# 
  5445  0E37                     	;# 
  5446  0E8F                     	;# 
  5447  0E90                     	;# 
  5448  0E91                     	;# 
  5449  0E92                     	;# 
  5450  0E93                     	;# 
  5451  0E94                     	;# 
  5452  0E95                     	;# 
  5453  0E96                     	;# 
  5454  0E97                     	;# 
  5455  0E9C                     	;# 
  5456  0E9D                     	;# 
  5457  0E9E                     	;# 
  5458  0EA1                     	;# 
  5459  0EA2                     	;# 
  5460  0EA3                     	;# 
  5461  0EA4                     	;# 
  5462  0EA5                     	;# 
  5463  0EA9                     	;# 
  5464  0EAA                     	;# 
  5465  0EAB                     	;# 
  5466  0EAC                     	;# 
  5467  0EB1                     	;# 
  5468  0EB2                     	;# 
  5469  0EB3                     	;# 
  5470  0EB8                     	;# 
  5471  0EB9                     	;# 
  5472  0EBA                     	;# 
  5473  0EBB                     	;# 
  5474  0EBC                     	;# 
  5475  0EBD                     	;# 
  5476  0EBE                     	;# 
  5477  0EC3                     	;# 
  5478  0EC5                     	;# 
  5479  0EC6                     	;# 
  5480  0EC7                     	;# 
  5481  0EC8                     	;# 
  5482  0EC9                     	;# 
  5483  0ECA                     	;# 
  5484  0ECB                     	;# 
  5485  0ECC                     	;# 
  5486  0F10                     	;# 
  5487  0F11                     	;# 
  5488  0F12                     	;# 
  5489  0F13                     	;# 
  5490  0F14                     	;# 
  5491  0F15                     	;# 
  5492  0F16                     	;# 
  5493  0F17                     	;# 
  5494  0F18                     	;# 
  5495  0F19                     	;# 
  5496  0F1A                     	;# 
  5497  0F1B                     	;# 
  5498  0F1C                     	;# 
  5499  0F1D                     	;# 
  5500  0F1E                     	;# 
  5501  0F1F                     	;# 
  5502  0F20                     	;# 
  5503  0F21                     	;# 
  5504  0F22                     	;# 
  5505  0F23                     	;# 
  5506  0F24                     	;# 
  5507  0F25                     	;# 
  5508  0F26                     	;# 
  5509  0F27                     	;# 
  5510  0F28                     	;# 
  5511  0F29                     	;# 
  5512  0F2A                     	;# 
  5513  0F2B                     	;# 
  5514  0F2C                     	;# 
  5515  0F2D                     	;# 
  5516  0F2E                     	;# 
  5517  0F2F                     	;# 
  5518  0F30                     	;# 
  5519  0F31                     	;# 
  5520  0F32                     	;# 
  5521  0F38                     	;# 
  5522  0F39                     	;# 
  5523  0F3A                     	;# 
  5524  0F3B                     	;# 
  5525  0F3C                     	;# 
  5526  0F3D                     	;# 
  5527  0F3E                     	;# 
  5528  0F3F                     	;# 
  5529  0F40                     	;# 
  5530  0F41                     	;# 
  5531  0F43                     	;# 
  5532  0F44                     	;# 
  5533  0F45                     	;# 
  5534  0F46                     	;# 
  5535  0F47                     	;# 
  5536  0F48                     	;# 
  5537  0F49                     	;# 
  5538  0F4A                     	;# 
  5539  0F4B                     	;# 
  5540  0F4C                     	;# 
  5541  0F4E                     	;# 
  5542  0F4F                     	;# 
  5543  0F50                     	;# 
  5544  0F51                     	;# 
  5545  0F52                     	;# 
  5546  0F53                     	;# 
  5547  0F54                     	;# 
  5548  0F55                     	;# 
  5549  0F56                     	;# 
  5550  0F57                     	;# 
  5551  0F59                     	;# 
  5552  0F5A                     	;# 
  5553  0F5B                     	;# 
  5554  0F5C                     	;# 
  5555  0F5D                     	;# 
  5556  0F61                     	;# 
  5557  0F62                     	;# 
  5558  0F64                     	;# 
  5559  0F65                     	;# 
  5560  0F66                     	;# 
  5561  0F67                     	;# 
  5562  0F68                     	;# 
  5563  0F69                     	;# 
  5564  0F6A                     	;# 
  5565  0F6B                     	;# 
  5566  0F6C                     	;# 
  5567  0F6D                     	;# 
  5568  0FE4                     	;# 
  5569  0FE5                     	;# 
  5570  0FE6                     	;# 
  5571  0FE7                     	;# 
  5572  0FE8                     	;# 
  5573  0FE9                     	;# 
  5574  0FEA                     	;# 
  5575  0FEB                     	;# 
  5576  0FED                     	;# 
  5577  0FEE                     	;# 
  5578  0FEF                     	;# 
  5579  0000                     	;# 
  5580  0001                     	;# 
  5581  0002                     	;# 
  5582  0003                     	;# 
  5583  0004                     	;# 
  5584  0005                     	;# 
  5585  0006                     	;# 
  5586  0007                     	;# 
  5587  0008                     	;# 
  5588  0009                     	;# 
  5589  000A                     	;# 
  5590  000B                     	;# 
  5591  000C                     	;# 
  5592  000D                     	;# 
  5593  000E                     	;# 
  5594  000F                     	;# 
  5595  0010                     	;# 
  5596  0011                     	;# 
  5597  0012                     	;# 
  5598  0013                     	;# 
  5599  0014                     	;# 
  5600  0015                     	;# 
  5601  0016                     	;# 
  5602  0017                     	;# 
  5603  0018                     	;# 
  5604  0019                     	;# 
  5605  001A                     	;# 
  5606  001C                     	;# 
  5607  001C                     	;# 
  5608  001D                     	;# 
  5609  001D                     	;# 
  5610  001E                     	;# 
  5611  001F                     	;# 
  5612  008C                     	;# 
  5613  008C                     	;# 
  5614  008D                     	;# 
  5615  008E                     	;# 
  5616  008E                     	;# 
  5617  008F                     	;# 
  5618  0090                     	;# 
  5619  0090                     	;# 
  5620  0091                     	;# 
  5621  0093                     	;# 
  5622  0094                     	;# 
  5623  0095                     	;# 
  5624  0096                     	;# 
  5625  0097                     	;# 
  5626  0098                     	;# 
  5627  0099                     	;# 
  5628  009A                     	;# 
  5629  009B                     	;# 
  5630  009C                     	;# 
  5631  009D                     	;# 
  5632  009E                     	;# 
  5633  010C                     	;# 
  5634  010D                     	;# 
  5635  010E                     	;# 
  5636  010E                     	;# 
  5637  010F                     	;# 
  5638  0110                     	;# 
  5639  0110                     	;# 
  5640  0111                     	;# 
  5641  0112                     	;# 
  5642  0112                     	;# 
  5643  0113                     	;# 
  5644  0114                     	;# 
  5645  0114                     	;# 
  5646  0115                     	;# 
  5647  0116                     	;# 
  5648  0116                     	;# 
  5649  0117                     	;# 
  5650  0119                     	;# 
  5651  0119                     	;# 
  5652  0119                     	;# 
  5653  011A                     	;# 
  5654  011A                     	;# 
  5655  011A                     	;# 
  5656  011B                     	;# 
  5657  011B                     	;# 
  5658  011B                     	;# 
  5659  011B                     	;# 
  5660  011B                     	;# 
  5661  011C                     	;# 
  5662  011C                     	;# 
  5663  011C                     	;# 
  5664  011D                     	;# 
  5665  011D                     	;# 
  5666  011D                     	;# 
  5667  011E                     	;# 
  5668  011E                     	;# 
  5669  011E                     	;# 
  5670  011F                     	;# 
  5671  011F                     	;# 
  5672  011F                     	;# 
  5673  011F                     	;# 
  5674  011F                     	;# 
  5675  018C                     	;# 
  5676  018D                     	;# 
  5677  018E                     	;# 
  5678  018F                     	;# 
  5679  0190                     	;# 
  5680  0191                     	;# 
  5681  0192                     	;# 
  5682  0196                     	;# 
  5683  0197                     	;# 
  5684  0198                     	;# 
  5685  0199                     	;# 
  5686  019A                     	;# 
  5687  019B                     	;# 
  5688  019C                     	;# 
  5689  020C                     	;# 
  5690  020C                     	;# 
  5691  020D                     	;# 
  5692  020E                     	;# 
  5693  020F                     	;# 
  5694  020F                     	;# 
  5695  0210                     	;# 
  5696  0210                     	;# 
  5697  0211                     	;# 
  5698  0211                     	;# 
  5699  0212                     	;# 
  5700  0212                     	;# 
  5701  0213                     	;# 
  5702  0214                     	;# 
  5703  0215                     	;# 
  5704  0215                     	;# 
  5705  0216                     	;# 
  5706  0216                     	;# 
  5707  0217                     	;# 
  5708  0217                     	;# 
  5709  0218                     	;# 
  5710  0218                     	;# 
  5711  0219                     	;# 
  5712  021A                     	;# 
  5713  021B                     	;# 
  5714  021B                     	;# 
  5715  021C                     	;# 
  5716  021C                     	;# 
  5717  021D                     	;# 
  5718  021D                     	;# 
  5719  021E                     	;# 
  5720  021F                     	;# 
  5721  028C                     	;# 
  5722  028C                     	;# 
  5723  028D                     	;# 
  5724  028D                     	;# 
  5725  028E                     	;# 
  5726  028F                     	;# 
  5727  0290                     	;# 
  5728  0290                     	;# 
  5729  0291                     	;# 
  5730  0292                     	;# 
  5731  0292                     	;# 
  5732  0293                     	;# 
  5733  0293                     	;# 
  5734  0294                     	;# 
  5735  0295                     	;# 
  5736  0296                     	;# 
  5737  0296                     	;# 
  5738  0297                     	;# 
  5739  0298                     	;# 
  5740  0298                     	;# 
  5741  0299                     	;# 
  5742  0299                     	;# 
  5743  029A                     	;# 
  5744  029B                     	;# 
  5745  029C                     	;# 
  5746  029C                     	;# 
  5747  029D                     	;# 
  5748  030C                     	;# 
  5749  030C                     	;# 
  5750  030D                     	;# 
  5751  030E                     	;# 
  5752  030F                     	;# 
  5753  0310                     	;# 
  5754  0310                     	;# 
  5755  0311                     	;# 
  5756  0312                     	;# 
  5757  0313                     	;# 
  5758  0314                     	;# 
  5759  0314                     	;# 
  5760  0315                     	;# 
  5761  0316                     	;# 
  5762  0317                     	;# 
  5763  0318                     	;# 
  5764  0318                     	;# 
  5765  0319                     	;# 
  5766  031A                     	;# 
  5767  031B                     	;# 
  5768  031C                     	;# 
  5769  031C                     	;# 
  5770  031D                     	;# 
  5771  031E                     	;# 
  5772  031F                     	;# 
  5773  038C                     	;# 
  5774  038C                     	;# 
  5775  038D                     	;# 
  5776  038E                     	;# 
  5777  0390                     	;# 
  5778  0390                     	;# 
  5779  0391                     	;# 
  5780  0392                     	;# 
  5781  040C                     	;# 
  5782  040D                     	;# 
  5783  040E                     	;# 
  5784  040F                     	;# 
  5785  0410                     	;# 
  5786  0411                     	;# 
  5787  0416                     	;# 
  5788  0416                     	;# 
  5789  0417                     	;# 
  5790  0418                     	;# 
  5791  0418                     	;# 
  5792  0419                     	;# 
  5793  041A                     	;# 
  5794  041A                     	;# 
  5795  041B                     	;# 
  5796  041C                     	;# 
  5797  041C                     	;# 
  5798  041D                     	;# 
  5799  041E                     	;# 
  5800  041F                     	;# 
  5801  048C                     	;# 
  5802  048C                     	;# 
  5803  048D                     	;# 
  5804  048E                     	;# 
  5805  048F                     	;# 
  5806  048F                     	;# 
  5807  0490                     	;# 
  5808  0491                     	;# 
  5809  0492                     	;# 
  5810  0492                     	;# 
  5811  0493                     	;# 
  5812  0494                     	;# 
  5813  0495                     	;# 
  5814  0495                     	;# 
  5815  0496                     	;# 
  5816  0497                     	;# 
  5817  0498                     	;# 
  5818  0499                     	;# 
  5819  049A                     	;# 
  5820  049B                     	;# 
  5821  049C                     	;# 
  5822  049D                     	;# 
  5823  050C                     	;# 
  5824  050C                     	;# 
  5825  050D                     	;# 
  5826  050E                     	;# 
  5827  050F                     	;# 
  5828  050F                     	;# 
  5829  0510                     	;# 
  5830  0511                     	;# 
  5831  0512                     	;# 
  5832  0512                     	;# 
  5833  0513                     	;# 
  5834  0514                     	;# 
  5835  0515                     	;# 
  5836  0515                     	;# 
  5837  0516                     	;# 
  5838  0517                     	;# 
  5839  0518                     	;# 
  5840  0519                     	;# 
  5841  051A                     	;# 
  5842  051B                     	;# 
  5843  051C                     	;# 
  5844  051D                     	;# 
  5845  058C                     	;# 
  5846  058C                     	;# 
  5847  058D                     	;# 
  5848  058E                     	;# 
  5849  058F                     	;# 
  5850  058F                     	;# 
  5851  0590                     	;# 
  5852  0591                     	;# 
  5853  0592                     	;# 
  5854  0593                     	;# 
  5855  060C                     	;# 
  5856  060D                     	;# 
  5857  060E                     	;# 
  5858  060F                     	;# 
  5859  0610                     	;# 
  5860  0611                     	;# 
  5861  0612                     	;# 
  5862  0613                     	;# 
  5863  0614                     	;# 
  5864  0616                     	;# 
  5865  0617                     	;# 
  5866  0618                     	;# 
  5867  0619                     	;# 
  5868  061A                     	;# 
  5869  061B                     	;# 
  5870  061C                     	;# 
  5871  061D                     	;# 
  5872  061E                     	;# 
  5873  068C                     	;# 
  5874  068D                     	;# 
  5875  068E                     	;# 
  5876  068F                     	;# 
  5877  0690                     	;# 
  5878  0691                     	;# 
  5879  0692                     	;# 
  5880  0693                     	;# 
  5881  0694                     	;# 
  5882  070C                     	;# 
  5883  070D                     	;# 
  5884  070E                     	;# 
  5885  070F                     	;# 
  5886  0710                     	;# 
  5887  0711                     	;# 
  5888  0712                     	;# 
  5889  0713                     	;# 
  5890  0714                     	;# 
  5891  0716                     	;# 
  5892  0717                     	;# 
  5893  0718                     	;# 
  5894  0719                     	;# 
  5895  071A                     	;# 
  5896  071B                     	;# 
  5897  071C                     	;# 
  5898  071D                     	;# 
  5899  071E                     	;# 
  5900  0796                     	;# 
  5901  0797                     	;# 
  5902  0798                     	;# 
  5903  0799                     	;# 
  5904  079A                     	;# 
  5905  079B                     	;# 
  5906  080C                     	;# 
  5907  080D                     	;# 
  5908  080E                     	;# 
  5909  080F                     	;# 
  5910  0810                     	;# 
  5911  0811                     	;# 
  5912  0812                     	;# 
  5913  0813                     	;# 
  5914  0814                     	;# 
  5915  081A                     	;# 
  5916  081B                     	;# 
  5917  081C                     	;# 
  5918  081D                     	;# 
  5919  081E                     	;# 
  5920  081F                     	;# 
  5921  088C                     	;# 
  5922  088D                     	;# 
  5923  088E                     	;# 
  5924  088F                     	;# 
  5925  0890                     	;# 
  5926  0891                     	;# 
  5927  0892                     	;# 
  5928  0893                     	;# 
  5929  0895                     	;# 
  5930  0896                     	;# 
  5931  0897                     	;# 
  5932  0898                     	;# 
  5933  0899                     	;# 
  5934  089A                     	;# 
  5935  089B                     	;# 
  5936  090C                     	;# 
  5937  090E                     	;# 
  5938  090F                     	;# 
  5939  091F                     	;# 
  5940  091F                     	;# 
  5941  098F                     	;# 
  5942  098F                     	;# 
  5943  0990                     	;# 
  5944  0991                     	;# 
  5945  0992                     	;# 
  5946  0993                     	;# 
  5947  0994                     	;# 
  5948  0995                     	;# 
  5949  0996                     	;# 
  5950  0997                     	;# 
  5951  0E0F                     	;# 
  5952  0E10                     	;# 
  5953  0E11                     	;# 
  5954  0E12                     	;# 
  5955  0E13                     	;# 
  5956  0E14                     	;# 
  5957  0E15                     	;# 
  5958  0E16                     	;# 
  5959  0E17                     	;# 
  5960  0E18                     	;# 
  5961  0E19                     	;# 
  5962  0E1A                     	;# 
  5963  0E1B                     	;# 
  5964  0E1C                     	;# 
  5965  0E1D                     	;# 
  5966  0E1E                     	;# 
  5967  0E1F                     	;# 
  5968  0E20                     	;# 
  5969  0E21                     	;# 
  5970  0E22                     	;# 
  5971  0E23                     	;# 
  5972  0E24                     	;# 
  5973  0E25                     	;# 
  5974  0E26                     	;# 
  5975  0E27                     	;# 
  5976  0E28                     	;# 
  5977  0E29                     	;# 
  5978  0E2A                     	;# 
  5979  0E2B                     	;# 
  5980  0E2C                     	;# 
  5981  0E2D                     	;# 
  5982  0E2E                     	;# 
  5983  0E2F                     	;# 
  5984  0E30                     	;# 
  5985  0E31                     	;# 
  5986  0E32                     	;# 
  5987  0E33                     	;# 
  5988  0E34                     	;# 
  5989  0E35                     	;# 
  5990  0E36                     	;# 
  5991  0E37                     	;# 
  5992  0E8F                     	;# 
  5993  0E90                     	;# 
  5994  0E91                     	;# 
  5995  0E92                     	;# 
  5996  0E93                     	;# 
  5997  0E94                     	;# 
  5998  0E95                     	;# 
  5999  0E96                     	;# 
  6000  0E97                     	;# 
  6001  0E9C                     	;# 
  6002  0E9D                     	;# 
  6003  0E9E                     	;# 
  6004  0EA1                     	;# 
  6005  0EA2                     	;# 
  6006  0EA3                     	;# 
  6007  0EA4                     	;# 
  6008  0EA5                     	;# 
  6009  0EA9                     	;# 
  6010  0EAA                     	;# 
  6011  0EAB                     	;# 
  6012  0EAC                     	;# 
  6013  0EB1                     	;# 
  6014  0EB2                     	;# 
  6015  0EB3                     	;# 
  6016  0EB8                     	;# 
  6017  0EB9                     	;# 
  6018  0EBA                     	;# 
  6019  0EBB                     	;# 
  6020  0EBC                     	;# 
  6021  0EBD                     	;# 
  6022  0EBE                     	;# 
  6023  0EC3                     	;# 
  6024  0EC5                     	;# 
  6025  0EC6                     	;# 
  6026  0EC7                     	;# 
  6027  0EC8                     	;# 
  6028  0EC9                     	;# 
  6029  0ECA                     	;# 
  6030  0ECB                     	;# 
  6031  0ECC                     	;# 
  6032  0F10                     	;# 
  6033  0F11                     	;# 
  6034  0F12                     	;# 
  6035  0F13                     	;# 
  6036  0F14                     	;# 
  6037  0F15                     	;# 
  6038  0F16                     	;# 
  6039  0F17                     	;# 
  6040  0F18                     	;# 
  6041  0F19                     	;# 
  6042  0F1A                     	;# 
  6043  0F1B                     	;# 
  6044  0F1C                     	;# 
  6045  0F1D                     	;# 
  6046  0F1E                     	;# 
  6047  0F1F                     	;# 
  6048  0F20                     	;# 
  6049  0F21                     	;# 
  6050  0F22                     	;# 
  6051  0F23                     	;# 
  6052  0F24                     	;# 
  6053  0F25                     	;# 
  6054  0F26                     	;# 
  6055  0F27                     	;# 
  6056  0F28                     	;# 
  6057  0F29                     	;# 
  6058  0F2A                     	;# 
  6059  0F2B                     	;# 
  6060  0F2C                     	;# 
  6061  0F2D                     	;# 
  6062  0F2E                     	;# 
  6063  0F2F                     	;# 
  6064  0F30                     	;# 
  6065  0F31                     	;# 
  6066  0F32                     	;# 
  6067  0F38                     	;# 
  6068  0F39                     	;# 
  6069  0F3A                     	;# 
  6070  0F3B                     	;# 
  6071  0F3C                     	;# 
  6072  0F3D                     	;# 
  6073  0F3E                     	;# 
  6074  0F3F                     	;# 
  6075  0F40                     	;# 
  6076  0F41                     	;# 
  6077  0F43                     	;# 
  6078  0F44                     	;# 
  6079  0F45                     	;# 
  6080  0F46                     	;# 
  6081  0F47                     	;# 
  6082  0F48                     	;# 
  6083  0F49                     	;# 
  6084  0F4A                     	;# 
  6085  0F4B                     	;# 
  6086  0F4C                     	;# 
  6087  0F4E                     	;# 
  6088  0F4F                     	;# 
  6089  0F50                     	;# 
  6090  0F51                     	;# 
  6091  0F52                     	;# 
  6092  0F53                     	;# 
  6093  0F54                     	;# 
  6094  0F55                     	;# 
  6095  0F56                     	;# 
  6096  0F57                     	;# 
  6097  0F59                     	;# 
  6098  0F5A                     	;# 
  6099  0F5B                     	;# 
  6100  0F5C                     	;# 
  6101  0F5D                     	;# 
  6102  0F61                     	;# 
  6103  0F62                     	;# 
  6104  0F64                     	;# 
  6105  0F65                     	;# 
  6106  0F66                     	;# 
  6107  0F67                     	;# 
  6108  0F68                     	;# 
  6109  0F69                     	;# 
  6110  0F6A                     	;# 
  6111  0F6B                     	;# 
  6112  0F6C                     	;# 
  6113  0F6D                     	;# 
  6114  0FE4                     	;# 
  6115  0FE5                     	;# 
  6116  0FE6                     	;# 
  6117  0FE7                     	;# 
  6118  0FE8                     	;# 
  6119  0FE9                     	;# 
  6120  0FEA                     	;# 
  6121  0FEB                     	;# 
  6122  0FED                     	;# 
  6123  0FEE                     	;# 
  6124  0FEF                     	;# 
  6125  0000                     	;# 
  6126  0001                     	;# 
  6127  0002                     	;# 
  6128  0003                     	;# 
  6129  0004                     	;# 
  6130  0005                     	;# 
  6131  0006                     	;# 
  6132  0007                     	;# 
  6133  0008                     	;# 
  6134  0009                     	;# 
  6135  000A                     	;# 
  6136  000B                     	;# 
  6137  000C                     	;# 
  6138  000D                     	;# 
  6139  000E                     	;# 
  6140  000F                     	;# 
  6141  0010                     	;# 
  6142  0011                     	;# 
  6143  0012                     	;# 
  6144  0013                     	;# 
  6145  0014                     	;# 
  6146  0015                     	;# 
  6147  0016                     	;# 
  6148  0017                     	;# 
  6149  0018                     	;# 
  6150  0019                     	;# 
  6151  001A                     	;# 
  6152  001C                     	;# 
  6153  001C                     	;# 
  6154  001D                     	;# 
  6155  001D                     	;# 
  6156  001E                     	;# 
  6157  001F                     	;# 
  6158  008C                     	;# 
  6159  008C                     	;# 
  6160  008D                     	;# 
  6161  008E                     	;# 
  6162  008E                     	;# 
  6163  008F                     	;# 
  6164  0090                     	;# 
  6165  0090                     	;# 
  6166  0091                     	;# 
  6167  0093                     	;# 
  6168  0094                     	;# 
  6169  0095                     	;# 
  6170  0096                     	;# 
  6171  0097                     	;# 
  6172  0098                     	;# 
  6173  0099                     	;# 
  6174  009A                     	;# 
  6175  009B                     	;# 
  6176  009C                     	;# 
  6177  009D                     	;# 
  6178  009E                     	;# 
  6179  010C                     	;# 
  6180  010D                     	;# 
  6181  010E                     	;# 
  6182  010E                     	;# 
  6183  010F                     	;# 
  6184  0110                     	;# 
  6185  0110                     	;# 
  6186  0111                     	;# 
  6187  0112                     	;# 
  6188  0112                     	;# 
  6189  0113                     	;# 
  6190  0114                     	;# 
  6191  0114                     	;# 
  6192  0115                     	;# 
  6193  0116                     	;# 
  6194  0116                     	;# 
  6195  0117                     	;# 
  6196  0119                     	;# 
  6197  0119                     	;# 
  6198  0119                     	;# 
  6199  011A                     	;# 
  6200  011A                     	;# 
  6201  011A                     	;# 
  6202  011B                     	;# 
  6203  011B                     	;# 
  6204  011B                     	;# 
  6205  011B                     	;# 
  6206  011B                     	;# 
  6207  011C                     	;# 
  6208  011C                     	;# 
  6209  011C                     	;# 
  6210  011D                     	;# 
  6211  011D                     	;# 
  6212  011D                     	;# 
  6213  011E                     	;# 
  6214  011E                     	;# 
  6215  011E                     	;# 
  6216  011F                     	;# 
  6217  011F                     	;# 
  6218  011F                     	;# 
  6219  011F                     	;# 
  6220  011F                     	;# 
  6221  018C                     	;# 
  6222  018D                     	;# 
  6223  018E                     	;# 
  6224  018F                     	;# 
  6225  0190                     	;# 
  6226  0191                     	;# 
  6227  0192                     	;# 
  6228  0196                     	;# 
  6229  0197                     	;# 
  6230  0198                     	;# 
  6231  0199                     	;# 
  6232  019A                     	;# 
  6233  019B                     	;# 
  6234  019C                     	;# 
  6235  020C                     	;# 
  6236  020C                     	;# 
  6237  020D                     	;# 
  6238  020E                     	;# 
  6239  020F                     	;# 
  6240  020F                     	;# 
  6241  0210                     	;# 
  6242  0210                     	;# 
  6243  0211                     	;# 
  6244  0211                     	;# 
  6245  0212                     	;# 
  6246  0212                     	;# 
  6247  0213                     	;# 
  6248  0214                     	;# 
  6249  0215                     	;# 
  6250  0215                     	;# 
  6251  0216                     	;# 
  6252  0216                     	;# 
  6253  0217                     	;# 
  6254  0217                     	;# 
  6255  0218                     	;# 
  6256  0218                     	;# 
  6257  0219                     	;# 
  6258  021A                     	;# 
  6259  021B                     	;# 
  6260  021B                     	;# 
  6261  021C                     	;# 
  6262  021C                     	;# 
  6263  021D                     	;# 
  6264  021D                     	;# 
  6265  021E                     	;# 
  6266  021F                     	;# 
  6267  028C                     	;# 
  6268  028C                     	;# 
  6269  028D                     	;# 
  6270  028D                     	;# 
  6271  028E                     	;# 
  6272  028F                     	;# 
  6273  0290                     	;# 
  6274  0290                     	;# 
  6275  0291                     	;# 
  6276  0292                     	;# 
  6277  0292                     	;# 
  6278  0293                     	;# 
  6279  0293                     	;# 
  6280  0294                     	;# 
  6281  0295                     	;# 
  6282  0296                     	;# 
  6283  0296                     	;# 
  6284  0297                     	;# 
  6285  0298                     	;# 
  6286  0298                     	;# 
  6287  0299                     	;# 
  6288  0299                     	;# 
  6289  029A                     	;# 
  6290  029B                     	;# 
  6291  029C                     	;# 
  6292  029C                     	;# 
  6293  029D                     	;# 
  6294  030C                     	;# 
  6295  030C                     	;# 
  6296  030D                     	;# 
  6297  030E                     	;# 
  6298  030F                     	;# 
  6299  0310                     	;# 
  6300  0310                     	;# 
  6301  0311                     	;# 
  6302  0312                     	;# 
  6303  0313                     	;# 
  6304  0314                     	;# 
  6305  0314                     	;# 
  6306  0315                     	;# 
  6307  0316                     	;# 
  6308  0317                     	;# 
  6309  0318                     	;# 
  6310  0318                     	;# 
  6311  0319                     	;# 
  6312  031A                     	;# 
  6313  031B                     	;# 
  6314  031C                     	;# 
  6315  031C                     	;# 
  6316  031D                     	;# 
  6317  031E                     	;# 
  6318  031F                     	;# 
  6319  038C                     	;# 
  6320  038C                     	;# 
  6321  038D                     	;# 
  6322  038E                     	;# 
  6323  0390                     	;# 
  6324  0390                     	;# 
  6325  0391                     	;# 
  6326  0392                     	;# 
  6327  040C                     	;# 
  6328  040D                     	;# 
  6329  040E                     	;# 
  6330  040F                     	;# 
  6331  0410                     	;# 
  6332  0411                     	;# 
  6333  0416                     	;# 
  6334  0416                     	;# 
  6335  0417                     	;# 
  6336  0418                     	;# 
  6337  0418                     	;# 
  6338  0419                     	;# 
  6339  041A                     	;# 
  6340  041A                     	;# 
  6341  041B                     	;# 
  6342  041C                     	;# 
  6343  041C                     	;# 
  6344  041D                     	;# 
  6345  041E                     	;# 
  6346  041F                     	;# 
  6347  048C                     	;# 
  6348  048C                     	;# 
  6349  048D                     	;# 
  6350  048E                     	;# 
  6351  048F                     	;# 
  6352  048F                     	;# 
  6353  0490                     	;# 
  6354  0491                     	;# 
  6355  0492                     	;# 
  6356  0492                     	;# 
  6357  0493                     	;# 
  6358  0494                     	;# 
  6359  0495                     	;# 
  6360  0495                     	;# 
  6361  0496                     	;# 
  6362  0497                     	;# 
  6363  0498                     	;# 
  6364  0499                     	;# 
  6365  049A                     	;# 
  6366  049B                     	;# 
  6367  049C                     	;# 
  6368  049D                     	;# 
  6369  050C                     	;# 
  6370  050C                     	;# 
  6371  050D                     	;# 
  6372  050E                     	;# 
  6373  050F                     	;# 
  6374  050F                     	;# 
  6375  0510                     	;# 
  6376  0511                     	;# 
  6377  0512                     	;# 
  6378  0512                     	;# 
  6379  0513                     	;# 
  6380  0514                     	;# 
  6381  0515                     	;# 
  6382  0515                     	;# 
  6383  0516                     	;# 
  6384  0517                     	;# 
  6385  0518                     	;# 
  6386  0519                     	;# 
  6387  051A                     	;# 
  6388  051B                     	;# 
  6389  051C                     	;# 
  6390  051D                     	;# 
  6391  058C                     	;# 
  6392  058C                     	;# 
  6393  058D                     	;# 
  6394  058E                     	;# 
  6395  058F                     	;# 
  6396  058F                     	;# 
  6397  0590                     	;# 
  6398  0591                     	;# 
  6399  0592                     	;# 
  6400  0593                     	;# 
  6401  060C                     	;# 
  6402  060D                     	;# 
  6403  060E                     	;# 
  6404  060F                     	;# 
  6405  0610                     	;# 
  6406  0611                     	;# 
  6407  0612                     	;# 
  6408  0613                     	;# 
  6409  0614                     	;# 
  6410  0616                     	;# 
  6411  0617                     	;# 
  6412  0618                     	;# 
  6413  0619                     	;# 
  6414  061A                     	;# 
  6415  061B                     	;# 
  6416  061C                     	;# 
  6417  061D                     	;# 
  6418  061E                     	;# 
  6419  068C                     	;# 
  6420  068D                     	;# 
  6421  068E                     	;# 
  6422  068F                     	;# 
  6423  0690                     	;# 
  6424  0691                     	;# 
  6425  0692                     	;# 
  6426  0693                     	;# 
  6427  0694                     	;# 
  6428  070C                     	;# 
  6429  070D                     	;# 
  6430  070E                     	;# 
  6431  070F                     	;# 
  6432  0710                     	;# 
  6433  0711                     	;# 
  6434  0712                     	;# 
  6435  0713                     	;# 
  6436  0714                     	;# 
  6437  0716                     	;# 
  6438  0717                     	;# 
  6439  0718                     	;# 
  6440  0719                     	;# 
  6441  071A                     	;# 
  6442  071B                     	;# 
  6443  071C                     	;# 
  6444  071D                     	;# 
  6445  071E                     	;# 
  6446  0796                     	;# 
  6447  0797                     	;# 
  6448  0798                     	;# 
  6449  0799                     	;# 
  6450  079A                     	;# 
  6451  079B                     	;# 
  6452  080C                     	;# 
  6453  080D                     	;# 
  6454  080E                     	;# 
  6455  080F                     	;# 
  6456  0810                     	;# 
  6457  0811                     	;# 
  6458  0812                     	;# 
  6459  0813                     	;# 
  6460  0814                     	;# 
  6461  081A                     	;# 
  6462  081B                     	;# 
  6463  081C                     	;# 
  6464  081D                     	;# 
  6465  081E                     	;# 
  6466  081F                     	;# 
  6467  088C                     	;# 
  6468  088D                     	;# 
  6469  088E                     	;# 
  6470  088F                     	;# 
  6471  0890                     	;# 
  6472  0891                     	;# 
  6473  0892                     	;# 
  6474  0893                     	;# 
  6475  0895                     	;# 
  6476  0896                     	;# 
  6477  0897                     	;# 
  6478  0898                     	;# 
  6479  0899                     	;# 
  6480  089A                     	;# 
  6481  089B                     	;# 
  6482  090C                     	;# 
  6483  090E                     	;# 
  6484  090F                     	;# 
  6485  091F                     	;# 
  6486  091F                     	;# 
  6487  098F                     	;# 
  6488  098F                     	;# 
  6489  0990                     	;# 
  6490  0991                     	;# 
  6491  0992                     	;# 
  6492  0993                     	;# 
  6493  0994                     	;# 
  6494  0995                     	;# 
  6495  0996                     	;# 
  6496  0997                     	;# 
  6497  0E0F                     	;# 
  6498  0E10                     	;# 
  6499  0E11                     	;# 
  6500  0E12                     	;# 
  6501  0E13                     	;# 
  6502  0E14                     	;# 
  6503  0E15                     	;# 
  6504  0E16                     	;# 
  6505  0E17                     	;# 
  6506  0E18                     	;# 
  6507  0E19                     	;# 
  6508  0E1A                     	;# 
  6509  0E1B                     	;# 
  6510  0E1C                     	;# 
  6511  0E1D                     	;# 
  6512  0E1E                     	;# 
  6513  0E1F                     	;# 
  6514  0E20                     	;# 
  6515  0E21                     	;# 
  6516  0E22                     	;# 
  6517  0E23                     	;# 
  6518  0E24                     	;# 
  6519  0E25                     	;# 
  6520  0E26                     	;# 
  6521  0E27                     	;# 
  6522  0E28                     	;# 
  6523  0E29                     	;# 
  6524  0E2A                     	;# 
  6525  0E2B                     	;# 
  6526  0E2C                     	;# 
  6527  0E2D                     	;# 
  6528  0E2E                     	;# 
  6529  0E2F                     	;# 
  6530  0E30                     	;# 
  6531  0E31                     	;# 
  6532  0E32                     	;# 
  6533  0E33                     	;# 
  6534  0E34                     	;# 
  6535  0E35                     	;# 
  6536  0E36                     	;# 
  6537  0E37                     	;# 
  6538  0E8F                     	;# 
  6539  0E90                     	;# 
  6540  0E91                     	;# 
  6541  0E92                     	;# 
  6542  0E93                     	;# 
  6543  0E94                     	;# 
  6544  0E95                     	;# 
  6545  0E96                     	;# 
  6546  0E97                     	;# 
  6547  0E9C                     	;# 
  6548  0E9D                     	;# 
  6549  0E9E                     	;# 
  6550  0EA1                     	;# 
  6551  0EA2                     	;# 
  6552  0EA3                     	;# 
  6553  0EA4                     	;# 
  6554  0EA5                     	;# 
  6555  0EA9                     	;# 
  6556  0EAA                     	;# 
  6557  0EAB                     	;# 
  6558  0EAC                     	;# 
  6559  0EB1                     	;# 
  6560  0EB2                     	;# 
  6561  0EB3                     	;# 
  6562  0EB8                     	;# 
  6563  0EB9                     	;# 
  6564  0EBA                     	;# 
  6565  0EBB                     	;# 
  6566  0EBC                     	;# 
  6567  0EBD                     	;# 
  6568  0EBE                     	;# 
  6569  0EC3                     	;# 
  6570  0EC5                     	;# 
  6571  0EC6                     	;# 
  6572  0EC7                     	;# 
  6573  0EC8                     	;# 
  6574  0EC9                     	;# 
  6575  0ECA                     	;# 
  6576  0ECB                     	;# 
  6577  0ECC                     	;# 
  6578  0F10                     	;# 
  6579  0F11                     	;# 
  6580  0F12                     	;# 
  6581  0F13                     	;# 
  6582  0F14                     	;# 
  6583  0F15                     	;# 
  6584  0F16                     	;# 
  6585  0F17                     	;# 
  6586  0F18                     	;# 
  6587  0F19                     	;# 
  6588  0F1A                     	;# 
  6589  0F1B                     	;# 
  6590  0F1C                     	;# 
  6591  0F1D                     	;# 
  6592  0F1E                     	;# 
  6593  0F1F                     	;# 
  6594  0F20                     	;# 
  6595  0F21                     	;# 
  6596  0F22                     	;# 
  6597  0F23                     	;# 
  6598  0F24                     	;# 
  6599  0F25                     	;# 
  6600  0F26                     	;# 
  6601  0F27                     	;# 
  6602  0F28                     	;# 
  6603  0F29                     	;# 
  6604  0F2A                     	;# 
  6605  0F2B                     	;# 
  6606  0F2C                     	;# 
  6607  0F2D                     	;# 
  6608  0F2E                     	;# 
  6609  0F2F                     	;# 
  6610  0F30                     	;# 
  6611  0F31                     	;# 
  6612  0F32                     	;# 
  6613  0F38                     	;# 
  6614  0F39                     	;# 
  6615  0F3A                     	;# 
  6616  0F3B                     	;# 
  6617  0F3C                     	;# 
  6618  0F3D                     	;# 
  6619  0F3E                     	;# 
  6620  0F3F                     	;# 
  6621  0F40                     	;# 
  6622  0F41                     	;# 
  6623  0F43                     	;# 
  6624  0F44                     	;# 
  6625  0F45                     	;# 
  6626  0F46                     	;# 
  6627  0F47                     	;# 
  6628  0F48                     	;# 
  6629  0F49                     	;# 
  6630  0F4A                     	;# 
  6631  0F4B                     	;# 
  6632  0F4C                     	;# 
  6633  0F4E                     	;# 
  6634  0F4F                     	;# 
  6635  0F50                     	;# 
  6636  0F51                     	;# 
  6637  0F52                     	;# 
  6638  0F53                     	;# 
  6639  0F54                     	;# 
  6640  0F55                     	;# 
  6641  0F56                     	;# 
  6642  0F57                     	;# 
  6643  0F59                     	;# 
  6644  0F5A                     	;# 
  6645  0F5B                     	;# 
  6646  0F5C                     	;# 
  6647  0F5D                     	;# 
  6648  0F61                     	;# 
  6649  0F62                     	;# 
  6650  0F64                     	;# 
  6651  0F65                     	;# 
  6652  0F66                     	;# 
  6653  0F67                     	;# 
  6654  0F68                     	;# 
  6655  0F69                     	;# 
  6656  0F6A                     	;# 
  6657  0F6B                     	;# 
  6658  0F6C                     	;# 
  6659  0F6D                     	;# 
  6660  0FE4                     	;# 
  6661  0FE5                     	;# 
  6662  0FE6                     	;# 
  6663  0FE7                     	;# 
  6664  0FE8                     	;# 
  6665  0FE9                     	;# 
  6666  0FEA                     	;# 
  6667  0FEB                     	;# 
  6668  0FED                     	;# 
  6669  0FEE                     	;# 
  6670  0FEF                     	;# 
  6671  0000                     	;# 
  6672  0001                     	;# 
  6673  0002                     	;# 
  6674  0003                     	;# 
  6675  0004                     	;# 
  6676  0005                     	;# 
  6677  0006                     	;# 
  6678  0007                     	;# 
  6679  0008                     	;# 
  6680  0009                     	;# 
  6681  000A                     	;# 
  6682  000B                     	;# 
  6683  000C                     	;# 
  6684  000D                     	;# 
  6685  000E                     	;# 
  6686  000F                     	;# 
  6687  0010                     	;# 
  6688  0011                     	;# 
  6689  0012                     	;# 
  6690  0013                     	;# 
  6691  0014                     	;# 
  6692  0015                     	;# 
  6693  0016                     	;# 
  6694  0017                     	;# 
  6695  0018                     	;# 
  6696  0019                     	;# 
  6697  001A                     	;# 
  6698  001C                     	;# 
  6699  001C                     	;# 
  6700  001D                     	;# 
  6701  001D                     	;# 
  6702  001E                     	;# 
  6703  001F                     	;# 
  6704  008C                     	;# 
  6705  008C                     	;# 
  6706  008D                     	;# 
  6707  008E                     	;# 
  6708  008E                     	;# 
  6709  008F                     	;# 
  6710  0090                     	;# 
  6711  0090                     	;# 
  6712  0091                     	;# 
  6713  0093                     	;# 
  6714  0094                     	;# 
  6715  0095                     	;# 
  6716  0096                     	;# 
  6717  0097                     	;# 
  6718  0098                     	;# 
  6719  0099                     	;# 
  6720  009A                     	;# 
  6721  009B                     	;# 
  6722  009C                     	;# 
  6723  009D                     	;# 
  6724  009E                     	;# 
  6725  010C                     	;# 
  6726  010D                     	;# 
  6727  010E                     	;# 
  6728  010E                     	;# 
  6729  010F                     	;# 
  6730  0110                     	;# 
  6731  0110                     	;# 
  6732  0111                     	;# 
  6733  0112                     	;# 
  6734  0112                     	;# 
  6735  0113                     	;# 
  6736  0114                     	;# 
  6737  0114                     	;# 
  6738  0115                     	;# 
  6739  0116                     	;# 
  6740  0116                     	;# 
  6741  0117                     	;# 
  6742  0119                     	;# 
  6743  0119                     	;# 
  6744  0119                     	;# 
  6745  011A                     	;# 
  6746  011A                     	;# 
  6747  011A                     	;# 
  6748  011B                     	;# 
  6749  011B                     	;# 
  6750  011B                     	;# 
  6751  011B                     	;# 
  6752  011B                     	;# 
  6753  011C                     	;# 
  6754  011C                     	;# 
  6755  011C                     	;# 
  6756  011D                     	;# 
  6757  011D                     	;# 
  6758  011D                     	;# 
  6759  011E                     	;# 
  6760  011E                     	;# 
  6761  011E                     	;# 
  6762  011F                     	;# 
  6763  011F                     	;# 
  6764  011F                     	;# 
  6765  011F                     	;# 
  6766  011F                     	;# 
  6767  018C                     	;# 
  6768  018D                     	;# 
  6769  018E                     	;# 
  6770  018F                     	;# 
  6771  0190                     	;# 
  6772  0191                     	;# 
  6773  0192                     	;# 
  6774  0196                     	;# 
  6775  0197                     	;# 
  6776  0198                     	;# 
  6777  0199                     	;# 
  6778  019A                     	;# 
  6779  019B                     	;# 
  6780  019C                     	;# 
  6781  020C                     	;# 
  6782  020C                     	;# 
  6783  020D                     	;# 
  6784  020E                     	;# 
  6785  020F                     	;# 
  6786  020F                     	;# 
  6787  0210                     	;# 
  6788  0210                     	;# 
  6789  0211                     	;# 
  6790  0211                     	;# 
  6791  0212                     	;# 
  6792  0212                     	;# 
  6793  0213                     	;# 
  6794  0214                     	;# 
  6795  0215                     	;# 
  6796  0215                     	;# 
  6797  0216                     	;# 
  6798  0216                     	;# 
  6799  0217                     	;# 
  6800  0217                     	;# 
  6801  0218                     	;# 
  6802  0218                     	;# 
  6803  0219                     	;# 
  6804  021A                     	;# 
  6805  021B                     	;# 
  6806  021B                     	;# 
  6807  021C                     	;# 
  6808  021C                     	;# 
  6809  021D                     	;# 
  6810  021D                     	;# 
  6811  021E                     	;# 
  6812  021F                     	;# 
  6813  028C                     	;# 
  6814  028C                     	;# 
  6815  028D                     	;# 
  6816  028D                     	;# 
  6817  028E                     	;# 
  6818  028F                     	;# 
  6819  0290                     	;# 
  6820  0290                     	;# 
  6821  0291                     	;# 
  6822  0292                     	;# 
  6823  0292                     	;# 
  6824  0293                     	;# 
  6825  0293                     	;# 
  6826  0294                     	;# 
  6827  0295                     	;# 
  6828  0296                     	;# 
  6829  0296                     	;# 
  6830  0297                     	;# 
  6831  0298                     	;# 
  6832  0298                     	;# 
  6833  0299                     	;# 
  6834  0299                     	;# 
  6835  029A                     	;# 
  6836  029B                     	;# 
  6837  029C                     	;# 
  6838  029C                     	;# 
  6839  029D                     	;# 
  6840  030C                     	;# 
  6841  030C                     	;# 
  6842  030D                     	;# 
  6843  030E                     	;# 
  6844  030F                     	;# 
  6845  0310                     	;# 
  6846  0310                     	;# 
  6847  0311                     	;# 
  6848  0312                     	;# 
  6849  0313                     	;# 
  6850  0314                     	;# 
  6851  0314                     	;# 
  6852  0315                     	;# 
  6853  0316                     	;# 
  6854  0317                     	;# 
  6855  0318                     	;# 
  6856  0318                     	;# 
  6857  0319                     	;# 
  6858  031A                     	;# 
  6859  031B                     	;# 
  6860  031C                     	;# 
  6861  031C                     	;# 
  6862  031D                     	;# 
  6863  031E                     	;# 
  6864  031F                     	;# 
  6865  038C                     	;# 
  6866  038C                     	;# 
  6867  038D                     	;# 
  6868  038E                     	;# 
  6869  0390                     	;# 
  6870  0390                     	;# 
  6871  0391                     	;# 
  6872  0392                     	;# 
  6873  040C                     	;# 
  6874  040D                     	;# 
  6875  040E                     	;# 
  6876  040F                     	;# 
  6877  0410                     	;# 
  6878  0411                     	;# 
  6879  0416                     	;# 
  6880  0416                     	;# 
  6881  0417                     	;# 
  6882  0418                     	;# 
  6883  0418                     	;# 
  6884  0419                     	;# 
  6885  041A                     	;# 
  6886  041A                     	;# 
  6887  041B                     	;# 
  6888  041C                     	;# 
  6889  041C                     	;# 
  6890  041D                     	;# 
  6891  041E                     	;# 
  6892  041F                     	;# 
  6893  048C                     	;# 
  6894  048C                     	;# 
  6895  048D                     	;# 
  6896  048E                     	;# 
  6897  048F                     	;# 
  6898  048F                     	;# 
  6899  0490                     	;# 
  6900  0491                     	;# 
  6901  0492                     	;# 
  6902  0492                     	;# 
  6903  0493                     	;# 
  6904  0494                     	;# 
  6905  0495                     	;# 
  6906  0495                     	;# 
  6907  0496                     	;# 
  6908  0497                     	;# 
  6909  0498                     	;# 
  6910  0499                     	;# 
  6911  049A                     	;# 
  6912  049B                     	;# 
  6913  049C                     	;# 
  6914  049D                     	;# 
  6915  050C                     	;# 
  6916  050C                     	;# 
  6917  050D                     	;# 
  6918  050E                     	;# 
  6919  050F                     	;# 
  6920  050F                     	;# 
  6921  0510                     	;# 
  6922  0511                     	;# 
  6923  0512                     	;# 
  6924  0512                     	;# 
  6925  0513                     	;# 
  6926  0514                     	;# 
  6927  0515                     	;# 
  6928  0515                     	;# 
  6929  0516                     	;# 
  6930  0517                     	;# 
  6931  0518                     	;# 
  6932  0519                     	;# 
  6933  051A                     	;# 
  6934  051B                     	;# 
  6935  051C                     	;# 
  6936  051D                     	;# 
  6937  058C                     	;# 
  6938  058C                     	;# 
  6939  058D                     	;# 
  6940  058E                     	;# 
  6941  058F                     	;# 
  6942  058F                     	;# 
  6943  0590                     	;# 
  6944  0591                     	;# 
  6945  0592                     	;# 
  6946  0593                     	;# 
  6947  060C                     	;# 
  6948  060D                     	;# 
  6949  060E                     	;# 
  6950  060F                     	;# 
  6951  0610                     	;# 
  6952  0611                     	;# 
  6953  0612                     	;# 
  6954  0613                     	;# 
  6955  0614                     	;# 
  6956  0616                     	;# 
  6957  0617                     	;# 
  6958  0618                     	;# 
  6959  0619                     	;# 
  6960  061A                     	;# 
  6961  061B                     	;# 
  6962  061C                     	;# 
  6963  061D                     	;# 
  6964  061E                     	;# 
  6965  068C                     	;# 
  6966  068D                     	;# 
  6967  068E                     	;# 
  6968  068F                     	;# 
  6969  0690                     	;# 
  6970  0691                     	;# 
  6971  0692                     	;# 
  6972  0693                     	;# 
  6973  0694                     	;# 
  6974  070C                     	;# 
  6975  070D                     	;# 
  6976  070E                     	;# 
  6977  070F                     	;# 
  6978  0710                     	;# 
  6979  0711                     	;# 
  6980  0712                     	;# 
  6981  0713                     	;# 
  6982  0714                     	;# 
  6983  0716                     	;# 
  6984  0717                     	;# 
  6985  0718                     	;# 
  6986  0719                     	;# 
  6987  071A                     	;# 
  6988  071B                     	;# 
  6989  071C                     	;# 
  6990  071D                     	;# 
  6991  071E                     	;# 
  6992  0796                     	;# 
  6993  0797                     	;# 
  6994  0798                     	;# 
  6995  0799                     	;# 
  6996  079A                     	;# 
  6997  079B                     	;# 
  6998  080C                     	;# 
  6999  080D                     	;# 
  7000  080E                     	;# 
  7001  080F                     	;# 
  7002  0810                     	;# 
  7003  0811                     	;# 
  7004  0812                     	;# 
  7005  0813                     	;# 
  7006  0814                     	;# 
  7007  081A                     	;# 
  7008  081B                     	;# 
  7009  081C                     	;# 
  7010  081D                     	;# 
  7011  081E                     	;# 
  7012  081F                     	;# 
  7013  088C                     	;# 
  7014  088D                     	;# 
  7015  088E                     	;# 
  7016  088F                     	;# 
  7017  0890                     	;# 
  7018  0891                     	;# 
  7019  0892                     	;# 
  7020  0893                     	;# 
  7021  0895                     	;# 
  7022  0896                     	;# 
  7023  0897                     	;# 
  7024  0898                     	;# 
  7025  0899                     	;# 
  7026  089A                     	;# 
  7027  089B                     	;# 
  7028  090C                     	;# 
  7029  090E                     	;# 
  7030  090F                     	;# 
  7031  091F                     	;# 
  7032  091F                     	;# 
  7033  098F                     	;# 
  7034  098F                     	;# 
  7035  0990                     	;# 
  7036  0991                     	;# 
  7037  0992                     	;# 
  7038  0993                     	;# 
  7039  0994                     	;# 
  7040  0995                     	;# 
  7041  0996                     	;# 
  7042  0997                     	;# 
  7043  0E0F                     	;# 
  7044  0E10                     	;# 
  7045  0E11                     	;# 
  7046  0E12                     	;# 
  7047  0E13                     	;# 
  7048  0E14                     	;# 
  7049  0E15                     	;# 
  7050  0E16                     	;# 
  7051  0E17                     	;# 
  7052  0E18                     	;# 
  7053  0E19                     	;# 
  7054  0E1A                     	;# 
  7055  0E1B                     	;# 
  7056  0E1C                     	;# 
  7057  0E1D                     	;# 
  7058  0E1E                     	;# 
  7059  0E1F                     	;# 
  7060  0E20                     	;# 
  7061  0E21                     	;# 
  7062  0E22                     	;# 
  7063  0E23                     	;# 
  7064  0E24                     	;# 
  7065  0E25                     	;# 
  7066  0E26                     	;# 
  7067  0E27                     	;# 
  7068  0E28                     	;# 
  7069  0E29                     	;# 
  7070  0E2A                     	;# 
  7071  0E2B                     	;# 
  7072  0E2C                     	;# 
  7073  0E2D                     	;# 
  7074  0E2E                     	;# 
  7075  0E2F                     	;# 
  7076  0E30                     	;# 
  7077  0E31                     	;# 
  7078  0E32                     	;# 
  7079  0E33                     	;# 
  7080  0E34                     	;# 
  7081  0E35                     	;# 
  7082  0E36                     	;# 
  7083  0E37                     	;# 
  7084  0E8F                     	;# 
  7085  0E90                     	;# 
  7086  0E91                     	;# 
  7087  0E92                     	;# 
  7088  0E93                     	;# 
  7089  0E94                     	;# 
  7090  0E95                     	;# 
  7091  0E96                     	;# 
  7092  0E97                     	;# 
  7093  0E9C                     	;# 
  7094  0E9D                     	;# 
  7095  0E9E                     	;# 
  7096  0EA1                     	;# 
  7097  0EA2                     	;# 
  7098  0EA3                     	;# 
  7099  0EA4                     	;# 
  7100  0EA5                     	;# 
  7101  0EA9                     	;# 
  7102  0EAA                     	;# 
  7103  0EAB                     	;# 
  7104  0EAC                     	;# 
  7105  0EB1                     	;# 
  7106  0EB2                     	;# 
  7107  0EB3                     	;# 
  7108  0EB8                     	;# 
  7109  0EB9                     	;# 
  7110  0EBA                     	;# 
  7111  0EBB                     	;# 
  7112  0EBC                     	;# 
  7113  0EBD                     	;# 
  7114  0EBE                     	;# 
  7115  0EC3                     	;# 
  7116  0EC5                     	;# 
  7117  0EC6                     	;# 
  7118  0EC7                     	;# 
  7119  0EC8                     	;# 
  7120  0EC9                     	;# 
  7121  0ECA                     	;# 
  7122  0ECB                     	;# 
  7123  0ECC                     	;# 
  7124  0F10                     	;# 
  7125  0F11                     	;# 
  7126  0F12                     	;# 
  7127  0F13                     	;# 
  7128  0F14                     	;# 
  7129  0F15                     	;# 
  7130  0F16                     	;# 
  7131  0F17                     	;# 
  7132  0F18                     	;# 
  7133  0F19                     	;# 
  7134  0F1A                     	;# 
  7135  0F1B                     	;# 
  7136  0F1C                     	;# 
  7137  0F1D                     	;# 
  7138  0F1E                     	;# 
  7139  0F1F                     	;# 
  7140  0F20                     	;# 
  7141  0F21                     	;# 
  7142  0F22                     	;# 
  7143  0F23                     	;# 
  7144  0F24                     	;# 
  7145  0F25                     	;# 
  7146  0F26                     	;# 
  7147  0F27                     	;# 
  7148  0F28                     	;# 
  7149  0F29                     	;# 
  7150  0F2A                     	;# 
  7151  0F2B                     	;# 
  7152  0F2C                     	;# 
  7153  0F2D                     	;# 
  7154  0F2E                     	;# 
  7155  0F2F                     	;# 
  7156  0F30                     	;# 
  7157  0F31                     	;# 
  7158  0F32                     	;# 
  7159  0F38                     	;# 
  7160  0F39                     	;# 
  7161  0F3A                     	;# 
  7162  0F3B                     	;# 
  7163  0F3C                     	;# 
  7164  0F3D                     	;# 
  7165  0F3E                     	;# 
  7166  0F3F                     	;# 
  7167  0F40                     	;# 
  7168  0F41                     	;# 
  7169  0F43                     	;# 
  7170  0F44                     	;# 
  7171  0F45                     	;# 
  7172  0F46                     	;# 
  7173  0F47                     	;# 
  7174  0F48                     	;# 
  7175  0F49                     	;# 
  7176  0F4A                     	;# 
  7177  0F4B                     	;# 
  7178  0F4C                     	;# 
  7179  0F4E                     	;# 
  7180  0F4F                     	;# 
  7181  0F50                     	;# 
  7182  0F51                     	;# 
  7183  0F52                     	;# 
  7184  0F53                     	;# 
  7185  0F54                     	;# 
  7186  0F55                     	;# 
  7187  0F56                     	;# 
  7188  0F57                     	;# 
  7189  0F59                     	;# 
  7190  0F5A                     	;# 
  7191  0F5B                     	;# 
  7192  0F5C                     	;# 
  7193  0F5D                     	;# 
  7194  0F61                     	;# 
  7195  0F62                     	;# 
  7196  0F64                     	;# 
  7197  0F65                     	;# 
  7198  0F66                     	;# 
  7199  0F67                     	;# 
  7200  0F68                     	;# 
  7201  0F69                     	;# 
  7202  0F6A                     	;# 
  7203  0F6B                     	;# 
  7204  0F6C                     	;# 
  7205  0F6D                     	;# 
  7206  0FE4                     	;# 
  7207  0FE5                     	;# 
  7208  0FE6                     	;# 
  7209  0FE7                     	;# 
  7210  0FE8                     	;# 
  7211  0FE9                     	;# 
  7212  0FEA                     	;# 
  7213  0FEB                     	;# 
  7214  0FED                     	;# 
  7215  0FEE                     	;# 
  7216  0FEF                     	;# 
  7217                           
  7218                           	psect	idataBANK0
  7219  0B68                     __pidataBANK0:
  7220                           
  7221                           ;initializer for _clkAlarm
  7222  0B68  3400               	retlw	0
  7223  0B69  3400               	retlw	0
  7224  0B6A  3401               	retlw	1
  7225  0B6B  3400               	retlw	0
  7226  0B6C  3400               	retlw	0
  7227  0B6D  3400               	retlw	0
  7228  0B6E  3400               	retlw	0
  7229                           
  7230                           ;initializer for _lumAlarm
  7231  0B6F  3404               	retlw	4
  7232  0B70  3400               	retlw	0
  7233                           
  7234                           ;initializer for _tempAlarm
  7235  0B71  341C               	retlw	28
  7236  0B72  3400               	retlw	0
  7237                           
  7238                           ;initializer for _alarmsEnable
  7239  0B73  3401               	retlw	1
  7240                           
  7241                           	psect	idataBANK1
  7242  0B36                     __pidataBANK1:
  7243                           
  7244                           ;initializer for _alarmPWMStart
  7245  0B36  34FF               	retlw	255
  7246  0B37  34FF               	retlw	255
  7247  0B38  34FF               	retlw	255
  7248  0B39  34FF               	retlw	255
  7249  0B3A  34FF               	retlw	255
  7250  0B3B  34FF               	retlw	255
  7251                           
  7252                           	psect	stringtext1
  7253  100F                     __pstringtext1:
  7254  100F                     _dpowers:
  7255  100F  3401               	retlw	1
  7256  1010  3400               	retlw	0
  7257  1011  340A               	retlw	10
  7258  1012  3400               	retlw	0
  7259  1013  3464               	retlw	100
  7260  1014  3400               	retlw	0
  7261  1015  34E8               	retlw	232
  7262  1016  3403               	retlw	3
  7263  1017  3410               	retlw	16
  7264  1018  3427               	retlw	39
  7265  1019                     __end_of_dpowers:
  7266                           
  7267                           	psect	nvBANK0
  7268  006D                     __pnvBANK0:
  7269  006D                     _timer3ReloadVal:
  7270  006D                     	ds	2
  7271                           
  7272                           	psect	nvBANK1
  7273  00A0                     __pnvBANK1:
  7274  00A0                     _TMR5_InterruptHandler:
  7275  00A0                     	ds	2
  7276  00A2                     _timer5ReloadVal:
  7277  00A2                     	ds	2
  7278  00A4                     _TMR3_InterruptHandler:
  7279  00A4                     	ds	2
  7280  00A6                     _TMR1_InterruptHandler:
  7281  00A6                     	ds	2
  7282  00A8                     _timer1ReloadVal:
  7283  00A8                     	ds	2
  7284  0013                     _TRISCbits	set	19
  7285  000E                     _PORTCbits	set	14
  7286  000D                     _PORTBbits	set	13
  7287  0016                     _LATAbits	set	22
  7288  000B                     _INTCONbits	set	11
  7289  0014                     _TRISD	set	20
  7290  0013                     _TRISC	set	19
  7291  0012                     _TRISB	set	18
  7292  0011                     _TRISA	set	17
  7293  0015                     _TRISE	set	21
  7294  0018                     _LATC	set	24
  7295  0017                     _LATB	set	23
  7296  0016                     _LATA	set	22
  7297  0019                     _LATD	set	25
  7298  001A                     _LATE	set	26
  7299  0094                     _ADCON1bits	set	148
  7300  008E                     _ADPREVL	set	142
  7301  008F                     _ADPREVH	set	143
  7302  0097                     _ADSTATbits	set	151
  7303  0090                     _ADACCL	set	144
  7304  0091                     _ADACCH	set	145
  7305  0095                     _ADCON2bits	set	149
  7306  009C                     _ADPRE	set	156
  7307  0096                     _ADCON3bits	set	150
  7308  008C                     _ADRESL	set	140
  7309  008D                     _ADRESH	set	141
  7310  0093                     _ADCON0bits	set	147
  7311  009D                     _ADACQ	set	157
  7312  0093                     _ADCON0	set	147
  7313  0098                     _ADCLK	set	152
  7314  0099                     _ADACT	set	153
  7315  009A                     _ADREF	set	154
  7316  0097                     _ADSTAT	set	151
  7317  0096                     _ADCON3	set	150
  7318  0095                     _ADCON2	set	149
  7319  0094                     _ADCON1	set	148
  7320  009B                     _ADCAP	set	155
  7321  009E                     _ADPCH	set	158
  7322  0116                     _ADERRL	set	278
  7323  0117                     _ADERRH	set	279
  7324  0114                     _ADFLTRL	set	276
  7325  0115                     _ADFLTRH	set	277
  7326  010C                     _ADCNT	set	268
  7327  010D                     _ADRPT	set	269
  7328  0113                     _ADSTPTH	set	275
  7329  0112                     _ADSTPTL	set	274
  7330  0111                     _ADUTHH	set	273
  7331  0110                     _ADUTHL	set	272
  7332  010F                     _ADLTHH	set	271
  7333  010E                     _ADLTHL	set	270
  7334  018E                     _SSP1MSK	set	398
  7335  018D                     _SSP1ADD	set	397
  7336  018F                     _SSP1STAT	set	399
  7337  0191                     _SSP1CON2	set	401
  7338  0190                     _SSP1CON1bits	set	400
  7339  018C                     _SSP1BUF	set	396
  7340  018F                     _SSP1STATbits	set	399
  7341  0191                     _SSP1CON2bits	set	401
  7342  0190                     _SSP1CON1	set	400
  7343  021F                     _CCPTMRS1bits	set	543
  7344  021B                     _T5GCONbits	set	539
  7345  021A                     _T5CONbits	set	538
  7346  021A                     _T5CON	set	538
  7347  0218                     _TMR5L	set	536
  7348  0219                     _TMR5H	set	537
  7349  021D                     _T5CLK	set	541
  7350  021C                     _T5GATE	set	540
  7351  021B                     _T5GCON	set	539
  7352  0215                     _T3GCONbits	set	533
  7353  0214                     _T3CONbits	set	532
  7354  0214                     _T3CON	set	532
  7355  0212                     _TMR3L	set	530
  7356  0213                     _TMR3H	set	531
  7357  0217                     _T3CLK	set	535
  7358  0216                     _T3GATE	set	534
  7359  0215                     _T3GCON	set	533
  7360  020F                     _T1GCONbits	set	527
  7361  020E                     _T1CONbits	set	526
  7362  020E                     _T1CON	set	526
  7363  020C                     _TMR1L	set	524
  7364  020D                     _TMR1H	set	525
  7365  0211                     _T1CLK	set	529
  7366  0210                     _T1GATE	set	528
  7367  020F                     _T1GCON	set	527
  7368  028D                     _PR2	set	653
  7369  028C                     _TMR2	set	652
  7370  028E                     _T2CONbits	set	654
  7371  0291                     _T2RSTbits	set	657
  7372  028F                     _T2HLTbits	set	655
  7373  028E                     _T2CON	set	654
  7374  028C                     _T2TMR	set	652
  7375  028D                     _T2PR	set	653
  7376  0291                     _T2RST	set	657
  7377  028F                     _T2HLT	set	655
  7378  0290                     _T2CLKCON	set	656
  7379  038C                     _PWM6DCL	set	908
  7380  038D                     _PWM6DCH	set	909
  7381  038E                     _PWM6CON	set	910
  7382  1C77                     _PWM6EN	set	7287
  7383  0710                     _PIR4bits	set	1808
  7384  071A                     _PIE4bits	set	1818
  7385  0719                     _PIE3bits	set	1817
  7386  070F                     _PIR3bits	set	1807
  7387  079B                     _PMD5	set	1947
  7388  079A                     _PMD4	set	1946
  7389  0799                     _PMD3	set	1945
  7390  0798                     _PMD2	set	1944
  7391  0797                     _PMD1	set	1943
  7392  0796                     _PMD0	set	1942
  7393  0892                     _OSCTUNE	set	2194
  7394  0893                     _OSCFRQ	set	2195
  7395  0891                     _OSCEN	set	2193
  7396  088F                     _OSCCON3	set	2191
  7397  088D                     _OSCCON1	set	2189
  7398  0EC6                     _SSP1DATPPS	set	3782
  7399  0EC5                     _SSP1CLKPPS	set	3781
  7400  0F16                     _RA6PPS	set	3862
  7401  0F24                     _RC4PPS	set	3876
  7402  0F23                     _RC3PPS	set	3875
  7403  0F67                     _SLRCONE	set	3943
  7404  0F5C                     _SLRCOND	set	3932
  7405  0F51                     _SLRCONC	set	3921
  7406  0F46                     _SLRCONB	set	3910
  7407  0F3B                     _SLRCONA	set	3899
  7408  0F5B                     _ODCOND	set	3931
  7409  0F50                     _ODCONC	set	3920
  7410  0F45                     _ODCONB	set	3909
  7411  0F3A                     _ODCONA	set	3898
  7412  0F66                     _ODCONE	set	3942
  7413  0F4F                     _WPUC	set	3919
  7414  0F39                     _WPUA	set	3897
  7415  0F44                     _WPUB	set	3908
  7416  0F65                     _WPUE	set	3941
  7417  0F5A                     _WPUD	set	3930
  7418  0F38                     _ANSELA	set	3896
  7419  0F64                     _ANSELE	set	3940
  7420  0F43                     _ANSELB	set	3907
  7421  0F4E                     _ANSELC	set	3918
  7422  0F59                     _ANSELD	set	3929
  7423  7A7C                     _WPUC4	set	31356
  7424  7A7B                     _WPUC3	set	31355
  7425                           
  7426                           	psect	stringtext2
  7427  1000                     __pstringtext2:
  7428  1000                     STR_1:
  7429  1000  3425               	retlw	37	;'%'
  7430  1001  3430               	retlw	48	;'0'
  7431  1002  3432               	retlw	50	;'2'
  7432  1003  3464               	retlw	100	;'d'
  7433  1004  343A               	retlw	58	;':'
  7434  1005  3425               	retlw	37	;'%'
  7435  1006  3430               	retlw	48	;'0'
  7436  1007  3432               	retlw	50	;'2'
  7437  1008  3464               	retlw	100	;'d'
  7438  1009  343A               	retlw	58	;':'
  7439  100A  3425               	retlw	37	;'%'
  7440  100B  3430               	retlw	48	;'0'
  7441  100C  3432               	retlw	50	;'2'
  7442  100D  3464               	retlw	100	;'d'
  7443  100E  3400               	retlw	0
  7444                           
  7445                           	psect	stringtext3
  7446  1019                     __pstringtext3:
  7447  1019                     STR_3:
  7448  1019  3425               	retlw	37	;'%'
  7449  101A  3430               	retlw	48	;'0'
  7450  101B  3432               	retlw	50	;'2'
  7451  101C  3464               	retlw	100	;'d'
  7452  101D  3420               	retlw	32	;' '
  7453  101E  3443               	retlw	67	;'C'
  7454  101F  3400               	retlw	0
  7455                           
  7456                           	psect	stringtext4
  7457  1020                     __pstringtext4:
  7458  1020                     STR_5:
  7459  1020  344C               	retlw	76	;'L'
  7460  1021  3420               	retlw	32	;' '
  7461  1022  3425               	retlw	37	;'%'
  7462  1023  3464               	retlw	100	;'d'
  7463  1024  3400               	retlw	0
  7464                           
  7465                           	psect	stringtext5
  7466  0000                     __pstringtext5:
  7467  1019                     
  7468                           	psect	cinit
  7469  0042                     start_initialization:	
  7470                           ; #config settings
  7471                           
  7472  0042                     __initialization:
  7473                           
  7474                           ; Initialize objects allocated to BANK0
  7475  0042  3068               	movlw	low __pidataBANK0
  7476  0043  0084               	movwf	4
  7477  0044  308B               	movlw	(high __pidataBANK0)| (0+128)
  7478  0045  0085               	movwf	5
  7479  0046  3061               	movlw	low __pdataBANK0
  7480  0047  0086               	movwf	6
  7481  0048  3000               	movlw	high __pdataBANK0
  7482  0049  0087               	movwf	7
  7483  004A  300C               	movlw	12
  7484  004B  318B  2330  3180   	fcall	init_ram
  7485                           
  7486                           ; Initialize objects allocated to BANK1
  7487  004E  3036               	movlw	low __pidataBANK1
  7488  004F  0084               	movwf	4
  7489  0050  308B               	movlw	(high __pidataBANK1)| (0+128)
  7490  0051  0085               	movwf	5
  7491  0052  30BA               	movlw	low __pdataBANK1
  7492  0053  0086               	movwf	6
  7493  0054  3000               	movlw	high __pdataBANK1
  7494  0055  0087               	movwf	7
  7495  0056  3006               	movlw	6
  7496  0057  318B  2330  3180   	fcall	init_ram
  7497                           
  7498                           ; Clear objects allocated to BANK0
  7499  005A  304C               	movlw	low __pbssBANK0
  7500  005B  0084               	movwf	4
  7501  005C  3000               	movlw	high __pbssBANK0
  7502  005D  0085               	movwf	5
  7503  005E  3015               	movlw	21
  7504  005F  318B  232A  3180   	fcall	clear_ram0
  7505                           
  7506                           ; Clear objects allocated to BANK1
  7507  0062  0021               	movlb	1	; select bank1
  7508  0063  01B4               	clrf	__pbssBANK1& (0+127)
  7509  0064  01B5               	clrf	(__pbssBANK1+1)& (0+127)
  7510  0065  01B6               	clrf	(__pbssBANK1+2)& (0+127)
  7511  0066  01B7               	clrf	(__pbssBANK1+3)& (0+127)
  7512  0067  01B8               	clrf	(__pbssBANK1+4)& (0+127)
  7513  0068  01B9               	clrf	(__pbssBANK1+5)& (0+127)
  7514  0069                     end_of_initialization:	
  7515                           ;End of C runtime variable initialization code
  7516                           
  7517  0069                     __end_of__initialization:
  7518  0069  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7519  006A  0020               	movlb	0
  7520  006B  3186  2EF3         	ljmp	_main	;jump to C main() function
  7521                           
  7522                           	psect	bssBANK0
  7523  004C                     __pbssBANK0:
  7524  004C                     _t:
  7525  004C                     	ds	6
  7526  0052                     _mode:
  7527  0052                     	ds	2
  7528  0054                     _editingClockAlarm:
  7529  0054                     	ds	2
  7530  0056                     _dimingLed:
  7531  0056                     	ds	2
  7532  0058                     _i2c1_driver_i2cISR:
  7533  0058                     	ds	2
  7534  005A                     _i2c1_driver_busCollisionISR:
  7535  005A                     	ds	2
  7536  005C                     _togglingAlarm:
  7537  005C                     	ds	1
  7538  005D                     _editingLumAlarm:
  7539  005D                     	ds	1
  7540  005E                     _editingTempAlarm:
  7541  005E                     	ds	1
  7542  005F                     _lumLevel:
  7543  005F                     	ds	1
  7544  0060                     _temp:
  7545  0060                     	ds	1
  7546                           
  7547                           	psect	dataBANK0
  7548  0061                     __pdataBANK0:
  7549  0061                     _clkAlarm:
  7550  0061                     	ds	7
  7551  0068                     _lumAlarm:
  7552  0068                     	ds	2
  7553  006A                     _tempAlarm:
  7554  006A                     	ds	2
  7555  006C                     _alarmsEnable:
  7556  006C                     	ds	1
  7557                           
  7558                           	psect	bssBANK1
  7559  00B4                     __pbssBANK1:
  7560  00B4                     menuLCD_ISR@F12791:
  7561  00B4                     	ds	6
  7562                           
  7563                           	psect	dataBANK1
  7564  00BA                     __pdataBANK1:
  7565  00BA                     _alarmPWMStart:
  7566  00BA                     	ds	6
  7567                           
  7568                           	psect	inittext
  7569  0B30                     init_ram:
  7570  0B30  00FE               	movwf	btemp
  7571  0B31                     initloop:
  7572  0B31  0012               	moviw fsr0++
  7573  0B32  001E               	movwi fsr1++
  7574  0B33  0BFE               	decfsz	btemp,f
  7575  0B34  2B31               	goto	initloop
  7576  0B35  3400               	retlw	0
  7577                           
  7578                           	psect	clrtext
  7579  0B2A                     clear_ram0:	
  7580                           ;	Called with FSR0 containing the base address, and
  7581                           ;	WREG with the size to clear
  7582                           
  7583  0B2A  0064               	clrwdt	;clear the watchdog before getting into this loop
  7584  0B2B                     clrloop0:
  7585  0B2B  0180               	clrf	0	;clear RAM location pointed to by FSR
  7586  0B2C  3101               	addfsr 0,1
  7587  0B2D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7588  0B2E  2B2B               	goto	clrloop0	;have we reached the end yet?
  7589  0B2F  3400               	retlw	0	;all done for this memory range, return
  7590                           
  7591                           	psect	cstackBANK1
  7592  00AA                     __pcstackBANK1:
  7593  00AA                     ??_PMD_Initialize:
  7594  00AA                     ??_OSCILLATOR_Initialize:	
  7595                           ; 1 bytes @ 0x0
  7596                           
  7597  00AA                     ??_PWM6_Initialize:	
  7598                           ; 1 bytes @ 0x0
  7599                           
  7600  00AA                     ??_ADCC_Initialize:	
  7601                           ; 1 bytes @ 0x0
  7602                           
  7603  00AA                     ??_TMR2_Initialize:	
  7604                           ; 1 bytes @ 0x0
  7605                           
  7606  00AA                     ?_TMR1_SetInterruptHandler:	
  7607                           ; 1 bytes @ 0x0
  7608                           
  7609  00AA                     ?_TMR3_SetInterruptHandler:	
  7610                           ; 1 bytes @ 0x0
  7611                           
  7612  00AA                     ?_TMR5_SetInterruptHandler:	
  7613                           ; 1 bytes @ 0x0
  7614                           
  7615  00AA                     ??_WriteI2C:	
  7616                           ; 1 bytes @ 0x0
  7617                           
  7618  00AA                     ??_PIN_MANAGER_Initialize:	
  7619                           ; 1 bytes @ 0x0
  7620                           
  7621  00AA                     ??_i2c1_driver_open:	
  7622                           ; 1 bytes @ 0x0
  7623                           
  7624  00AA                     ??_TMR2_Stop:	
  7625                           ; 1 bytes @ 0x0
  7626                           
  7627  00AA                     ??_TMR2_StopTimer:	
  7628                           ; 1 bytes @ 0x0
  7629                           
  7630  00AA                     ??_PWM_Output_D4_Disable:	
  7631                           ; 1 bytes @ 0x0
  7632                           
  7633  00AA                     ??_editClock:	
  7634                           ; 1 bytes @ 0x0
  7635                           
  7636  00AA                     ??_editTemp:	
  7637                           ; 1 bytes @ 0x0
  7638                           
  7639  00AA                     TMR1_SetInterruptHandler@InterruptHandler:	
  7640                           ; 1 bytes @ 0x0
  7641                           
  7642  00AA                     TMR3_SetInterruptHandler@InterruptHandler:	
  7643                           ; 2 bytes @ 0x0
  7644                           
  7645  00AA                     TMR5_SetInterruptHandler@InterruptHandler:	
  7646                           ; 2 bytes @ 0x0
  7647                           
  7648                           
  7649                           ; 2 bytes @ 0x0
  7650  00AA                     	ds	1
  7651  00AB                     WriteI2C@data_out:
  7652                           
  7653                           ; 1 bytes @ 0x1
  7654  00AB                     	ds	1
  7655  00AC                     ??_TMR3_Initialize:
  7656  00AC                     ??_TMR5_Initialize:	
  7657                           ; 1 bytes @ 0x2
  7658                           
  7659  00AC                     ??_TMR1_Initialize:	
  7660                           ; 1 bytes @ 0x2
  7661                           
  7662  00AC                     ??_TMR1_SetInterruptHandler:	
  7663                           ; 1 bytes @ 0x2
  7664                           
  7665  00AC                     ??_TMR3_SetInterruptHandler:	
  7666                           ; 1 bytes @ 0x2
  7667                           
  7668  00AC                     ??_TMR5_SetInterruptHandler:	
  7669                           ; 1 bytes @ 0x2
  7670                           
  7671  00AC                     ??_SYSTEM_Initialize:	
  7672                           ; 1 bytes @ 0x2
  7673                           
  7674  00AC                     ??_LCDsend:	
  7675                           ; 1 bytes @ 0x2
  7676                           
  7677  00AC                     ?_LCDsend2x4:	
  7678                           ; 1 bytes @ 0x2
  7679                           
  7680  00AC                     LCDsend2x4@mode:	
  7681                           ; 1 bytes @ 0x2
  7682                           
  7683                           
  7684                           ; 1 bytes @ 0x2
  7685  00AC                     	ds	1
  7686  00AD                     ??_LCDsend2x4:
  7687  00AD                     LCDsend@c:	
  7688                           ; 1 bytes @ 0x3
  7689                           
  7690                           
  7691                           ; 1 bytes @ 0x3
  7692  00AD                     	ds	2
  7693  00AF                     LCDsend2x4@c:
  7694                           
  7695                           ; 1 bytes @ 0x5
  7696  00AF                     	ds	1
  7697  00B0                     LCDsend2x4@hc:
  7698                           
  7699                           ; 1 bytes @ 0x6
  7700  00B0                     	ds	1
  7701  00B1                     LCDsend2x4@lc:
  7702                           
  7703                           ; 1 bytes @ 0x7
  7704  00B1                     	ds	1
  7705  00B2                     ??_LCDinit:
  7706                           
  7707                           ; 1 bytes @ 0x8
  7708  00B2                     	ds	1
  7709  00B3                     ??_main:
  7710                           
  7711                           ; 1 bytes @ 0x9
  7712  00B3                     	ds	1
  7713                           
  7714                           	psect	cstackCOMMON
  7715  0070                     __pcstackCOMMON:
  7716  0070                     ?_isdigit:
  7717  0070                     ?_i2c1_driver_open:	
  7718                           ; 1 bit 
  7719                           
  7720  0070                     ?_PMD_Initialize:	
  7721                           ; 1 bit 
  7722                           
  7723  0070                     ?_OSCILLATOR_Initialize:	
  7724                           ; 1 bytes @ 0x0
  7725                           
  7726  0070                     ?_PWM6_Initialize:	
  7727                           ; 1 bytes @ 0x0
  7728                           
  7729  0070                     ?_ADCC_Initialize:	
  7730                           ; 1 bytes @ 0x0
  7731                           
  7732  0070                     ?_TMR3_Initialize:	
  7733                           ; 1 bytes @ 0x0
  7734                           
  7735  0070                     ?_TMR2_Initialize:	
  7736                           ; 1 bytes @ 0x0
  7737                           
  7738  0070                     ?_TMR5_Initialize:	
  7739                           ; 1 bytes @ 0x0
  7740                           
  7741  0070                     ?_TMR1_Initialize:	
  7742                           ; 1 bytes @ 0x0
  7743                           
  7744  0070                     ?_TMR5_ISR:	
  7745                           ; 1 bytes @ 0x0
  7746                           
  7747  0070                     ?_TMR3_ISR:	
  7748                           ; 1 bytes @ 0x0
  7749                           
  7750  0070                     ?_TMR1_ISR:	
  7751                           ; 1 bytes @ 0x0
  7752                           
  7753  0070                     ?_TMR1_DefaultInterruptHandler:	
  7754                           ; 1 bytes @ 0x0
  7755                           
  7756  0070                     ??_TMR1_DefaultInterruptHandler:	
  7757                           ; 1 bytes @ 0x0
  7758                           
  7759  0070                     ?_TMR3_DefaultInterruptHandler:	
  7760                           ; 1 bytes @ 0x0
  7761                           
  7762  0070                     ??_TMR3_DefaultInterruptHandler:	
  7763                           ; 1 bytes @ 0x0
  7764                           
  7765  0070                     ?_TMR5_DefaultInterruptHandler:	
  7766                           ; 1 bytes @ 0x0
  7767                           
  7768  0070                     ??_TMR5_DefaultInterruptHandler:	
  7769                           ; 1 bytes @ 0x0
  7770                           
  7771  0070                     ??_isdigit:	
  7772                           ; 1 bytes @ 0x0
  7773                           
  7774  0070                     ?_ReadI2C:	
  7775                           ; 1 bytes @ 0x0
  7776                           
  7777  0070                     ??_ReadI2C:	
  7778                           ; 1 bytes @ 0x0
  7779                           
  7780  0070                     ?_WriteI2C:	
  7781                           ; 1 bytes @ 0x0
  7782                           
  7783  0070                     ?_PIN_MANAGER_Initialize:	
  7784                           ; 1 bytes @ 0x0
  7785                           
  7786  0070                     ?_SYSTEM_Initialize:	
  7787                           ; 1 bytes @ 0x0
  7788                           
  7789  0070                     ?_INTERRUPT_InterruptManager:	
  7790                           ; 1 bytes @ 0x0
  7791                           
  7792  0070                     ?_TMR1_WriteTimer:	
  7793                           ; 1 bytes @ 0x0
  7794                           
  7795  0070                     ?_TMR3_WriteTimer:	
  7796                           ; 1 bytes @ 0x0
  7797                           
  7798  0070                     ?_TMR5_WriteTimer:	
  7799                           ; 1 bytes @ 0x0
  7800                           
  7801  0070                     ?_PWM6_LoadDutyValue:	
  7802                           ; 1 bytes @ 0x0
  7803                           
  7804  0070                     ?_TMR2_Start:	
  7805                           ; 1 bytes @ 0x0
  7806                           
  7807  0070                     ??_TMR2_Start:	
  7808                           ; 1 bytes @ 0x0
  7809                           
  7810  0070                     ?_TMR2_StartTimer:	
  7811                           ; 1 bytes @ 0x0
  7812                           
  7813  0070                     ??_TMR2_StartTimer:	
  7814                           ; 1 bytes @ 0x0
  7815                           
  7816  0070                     ?_TMR2_Stop:	
  7817                           ; 1 bytes @ 0x0
  7818                           
  7819  0070                     ?_TMR2_StopTimer:	
  7820                           ; 1 bytes @ 0x0
  7821                           
  7822  0070                     ?_tsttc:	
  7823                           ; 1 bytes @ 0x0
  7824                           
  7825  0070                     ?_LCDsend:	
  7826                           ; 1 bytes @ 0x0
  7827                           
  7828  0070                     ?_LCDinit:	
  7829                           ; 1 bytes @ 0x0
  7830                           
  7831  0070                     ?_LCDcmd:	
  7832                           ; 1 bytes @ 0x0
  7833                           
  7834  0070                     ?_LCDchar:	
  7835                           ; 1 bytes @ 0x0
  7836                           
  7837  0070                     ?_LCDstr:	
  7838                           ; 1 bytes @ 0x0
  7839                           
  7840  0070                     ?_differenceBetweenTimePeriod:	
  7841                           ; 1 bytes @ 0x0
  7842                           
  7843  0070                     ?_PWM_Output_D4_Enable:	
  7844                           ; 1 bytes @ 0x0
  7845                           
  7846  0070                     ??_PWM_Output_D4_Enable:	
  7847                           ; 1 bytes @ 0x0
  7848                           
  7849  0070                     ?_PWM_Output_D4_Disable:	
  7850                           ; 1 bytes @ 0x0
  7851                           
  7852  0070                     ?_Clock_ISR:	
  7853                           ; 1 bytes @ 0x0
  7854                           
  7855  0070                     ??_Clock_ISR:	
  7856                           ; 1 bytes @ 0x0
  7857                           
  7858  0070                     ?_menuLCD_ISR:	
  7859                           ; 1 bytes @ 0x0
  7860                           
  7861  0070                     ?_monitoring_ISR:	
  7862                           ; 1 bytes @ 0x0
  7863                           
  7864  0070                     ?_editClock:	
  7865                           ; 1 bytes @ 0x0
  7866                           
  7867  0070                     ?_editTemp:	
  7868                           ; 1 bytes @ 0x0
  7869                           
  7870  0070                     ?_main:	
  7871                           ; 1 bytes @ 0x0
  7872                           
  7873  0070                     ?i1_WriteI2C:	
  7874                           ; 1 bytes @ 0x0
  7875                           
  7876  0070                     ??i1_WriteI2C:	
  7877                           ; 1 bytes @ 0x0
  7878                           
  7879  0070                     ?i1_TMR2_Stop:	
  7880                           ; 1 bytes @ 0x0
  7881                           
  7882  0070                     ??i1_TMR2_Stop:	
  7883                           ; 1 bytes @ 0x0
  7884                           
  7885  0070                     ?i1_TMR2_StopTimer:	
  7886                           ; 1 bytes @ 0x0
  7887                           
  7888  0070                     ??i1_TMR2_StopTimer:	
  7889                           ; 1 bytes @ 0x0
  7890                           
  7891  0070                     ?i1_PWM_Output_D4_Disable:	
  7892                           ; 1 bytes @ 0x0
  7893                           
  7894  0070                     ??i1_PWM_Output_D4_Disable:	
  7895                           ; 1 bytes @ 0x0
  7896                           
  7897  0070                     ?_ADCC_GetSingleConversion:	
  7898                           ; 1 bytes @ 0x0
  7899                           
  7900  0070                     ?___wmul:	
  7901                           ; 2 bytes @ 0x0
  7902                           
  7903  0070                     ?___lwdiv:	
  7904                           ; 2 bytes @ 0x0
  7905                           
  7906  0070                     _isdigit$2812:	
  7907                           ; 2 bytes @ 0x0
  7908                           
  7909  0070                     TMR1_WriteTimer@timerVal:	
  7910                           ; 1 bytes @ 0x0
  7911                           
  7912  0070                     TMR3_WriteTimer@timerVal:	
  7913                           ; 2 bytes @ 0x0
  7914                           
  7915  0070                     TMR5_WriteTimer@timerVal:	
  7916                           ; 2 bytes @ 0x0
  7917                           
  7918  0070                     PWM6_LoadDutyValue@dutyValue:	
  7919                           ; 2 bytes @ 0x0
  7920                           
  7921  0070                     ___wmul@multiplier:	
  7922                           ; 2 bytes @ 0x0
  7923                           
  7924  0070                     ___lwdiv@divisor:	
  7925                           ; 2 bytes @ 0x0
  7926                           
  7927  0070                     differenceBetweenTimePeriod@start:	
  7928                           ; 2 bytes @ 0x0
  7929                           
  7930                           
  7931                           ; 6 bytes @ 0x0
  7932  0070                     	ds	1
  7933  0071                     isdigit@c:
  7934  0071                     i1WriteI2C@data_out:	
  7935                           ; 1 bytes @ 0x1
  7936                           
  7937                           
  7938                           ; 1 bytes @ 0x1
  7939  0071                     	ds	1
  7940  0072                     ??_TMR1_ISR:
  7941  0072                     ??_TMR1_WriteTimer:	
  7942                           ; 1 bytes @ 0x2
  7943                           
  7944  0072                     ??_TMR3_WriteTimer:	
  7945                           ; 1 bytes @ 0x2
  7946                           
  7947  0072                     ??_TMR5_WriteTimer:	
  7948                           ; 1 bytes @ 0x2
  7949                           
  7950  0072                     ??_PWM6_LoadDutyValue:	
  7951                           ; 1 bytes @ 0x2
  7952                           
  7953  0072                     ??_tsttc:	
  7954                           ; 1 bytes @ 0x2
  7955                           
  7956  0072                     ?i1_LCDsend2x4:	
  7957                           ; 1 bytes @ 0x2
  7958                           
  7959  0072                     i1LCDsend2x4@mode:	
  7960                           ; 1 bytes @ 0x2
  7961                           
  7962  0072                     ___wmul@multiplicand:	
  7963                           ; 1 bytes @ 0x2
  7964                           
  7965  0072                     ___lwdiv@dividend:	
  7966                           ; 2 bytes @ 0x2
  7967                           
  7968                           
  7969                           ; 2 bytes @ 0x2
  7970  0072                     	ds	1
  7971  0073                     ??_ADCC_GetSingleConversion:
  7972  0073                     ??i1_LCDsend2x4:	
  7973                           ; 1 bytes @ 0x3
  7974                           
  7975  0073                     ADCC_GetSingleConversion@channel:	
  7976                           ; 1 bytes @ 0x3
  7977                           
  7978  0073                     tsttc@value:	
  7979                           ; 1 bytes @ 0x3
  7980                           
  7981                           
  7982                           ; 1 bytes @ 0x3
  7983  0073                     	ds	1
  7984  0074                     ??_monitoring_ISR:
  7985  0074                     ??___wmul:	
  7986                           ; 1 bytes @ 0x4
  7987                           
  7988  0074                     ??___lwdiv:	
  7989                           ; 1 bytes @ 0x4
  7990                           
  7991  0074                     ___wmul@product:	
  7992                           ; 1 bytes @ 0x4
  7993                           
  7994                           
  7995                           ; 2 bytes @ 0x4
  7996  0074                     	ds	1
  7997  0075                     i1LCDsend2x4@c:
  7998  0075                     ___lwdiv@quotient:	
  7999                           ; 1 bytes @ 0x5
  8000                           
  8001                           
  8002                           ; 2 bytes @ 0x5
  8003  0075                     	ds	1
  8004  0076                     i1LCDsend2x4@hc:
  8005  0076                     differenceBetweenTimePeriod@stop:	
  8006                           ; 1 bytes @ 0x6
  8007                           
  8008                           
  8009                           ; 6 bytes @ 0x6
  8010  0076                     	ds	1
  8011  0077                     ??_TMR5_ISR:
  8012  0077                     ___lwdiv@counter:	
  8013                           ; 1 bytes @ 0x7
  8014                           
  8015  0077                     i1LCDsend2x4@lc:	
  8016                           ; 1 bytes @ 0x7
  8017                           
  8018                           
  8019                           ; 1 bytes @ 0x7
  8020  0077                     	ds	1
  8021  0078                     ??_LCDcmd:
  8022  0078                     ??_LCDchar:	
  8023                           ; 1 bytes @ 0x8
  8024                           
  8025  0078                     ?___lwmod:	
  8026                           ; 1 bytes @ 0x8
  8027                           
  8028  0078                     LCDcmd@c:	
  8029                           ; 2 bytes @ 0x8
  8030                           
  8031  0078                     LCDchar@c:	
  8032                           ; 1 bytes @ 0x8
  8033                           
  8034  0078                     ___lwmod@divisor:	
  8035                           ; 1 bytes @ 0x8
  8036                           
  8037                           
  8038                           ; 2 bytes @ 0x8
  8039  0078                     	ds	1
  8040  0079                     ??_LCDstr:
  8041                           
  8042                           ; 1 bytes @ 0x9
  8043  0079                     	ds	1
  8044  007A                     LCDstr@c:
  8045  007A                     ___lwmod@dividend:	
  8046                           ; 1 bytes @ 0xA
  8047                           
  8048                           
  8049                           ; 2 bytes @ 0xA
  8050  007A                     	ds	1
  8051  007B                     LCDstr@p:
  8052                           
  8053                           ; 1 bytes @ 0xB
  8054  007B                     	ds	1
  8055  007C                     ??___lwmod:
  8056  007C                     differenceBetweenTimePeriod@diff:	
  8057                           ; 1 bytes @ 0xC
  8058                           
  8059                           
  8060                           ; 1 bytes @ 0xC
  8061  007C                     	ds	1
  8062  007D                     ___lwmod@counter:
  8063                           
  8064                           ; 1 bytes @ 0xD
  8065  007D                     	ds	1
  8066  007E                     ??_TMR3_ISR:
  8067  007E                     ??_INTERRUPT_InterruptManager:	
  8068                           ; 1 bytes @ 0xE
  8069                           
  8070                           
  8071                           	psect	cstackBANK0
  8072  0020                     __pcstackBANK0:	
  8073                           ; 1 bytes @ 0xE
  8074                           
  8075  0020                     ??_differenceBetweenTimePeriod:
  8076  0020                     ?_sprintf:	
  8077                           ; 1 bytes @ 0x0
  8078                           
  8079  0020                     sprintf@f:	
  8080                           ; 2 bytes @ 0x0
  8081                           
  8082                           
  8083                           ; 2 bytes @ 0x0
  8084  0020                     	ds	8
  8085  0028                     ??_sprintf:
  8086                           
  8087                           ; 1 bytes @ 0x8
  8088  0028                     	ds	4
  8089  002C                     sprintf@ap:
  8090                           
  8091                           ; 1 bytes @ 0xC
  8092  002C                     	ds	1
  8093  002D                     sprintf@prec:
  8094                           
  8095                           ; 1 bytes @ 0xD
  8096  002D                     	ds	1
  8097  002E                     sprintf@val:
  8098                           
  8099                           ; 2 bytes @ 0xE
  8100  002E                     	ds	2
  8101  0030                     sprintf@flag:
  8102                           
  8103                           ; 1 bytes @ 0x10
  8104  0030                     	ds	1
  8105  0031                     sprintf@width:
  8106                           
  8107                           ; 2 bytes @ 0x11
  8108  0031                     	ds	2
  8109  0033                     sprintf@c:
  8110                           
  8111                           ; 1 bytes @ 0x13
  8112  0033                     	ds	1
  8113  0034                     sprintf@sp:
  8114                           
  8115                           ; 1 bytes @ 0x14
  8116  0034                     	ds	1
  8117  0035                     ??_menuLCD_ISR:
  8118                           
  8119                           ; 1 bytes @ 0x15
  8120  0035                     	ds	2
  8121  0037                     menuLCD_ISR@str:
  8122                           
  8123                           ; 8 bytes @ 0x17
  8124  0037                     	ds	8
  8125  003F                     menuLCD_ISR@tt:
  8126                           
  8127                           ; 4 bytes @ 0x1F
  8128  003F                     	ds	4
  8129  0043                     menuLCD_ISR@l:
  8130                           
  8131                           ; 3 bytes @ 0x23
  8132  0043                     	ds	3
  8133  0046                     menuLCD_ISR@diff:
  8134                           
  8135                           ; 6 bytes @ 0x26
  8136  0046                     	ds	6
  8137                           
  8138                           	psect	maintext
  8139  06F3                     __pmaintext:	
  8140 ;;
  8141 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  8142 ;;
  8143 ;; *************** function _main *****************
  8144 ;; Defined at:
  8145 ;;		line 511 in file "main.c"
  8146 ;; Parameters:    Size  Location     Type
  8147 ;;		None
  8148 ;; Auto vars:     Size  Location     Type
  8149 ;;		None
  8150 ;; Return value:  Size  Location     Type
  8151 ;;                  1    wreg      void 
  8152 ;; Registers used:
  8153 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8154 ;; Tracked objects:
  8155 ;;		On entry : B1F/0
  8156 ;;		On exit  : 0/0
  8157 ;;		Unchanged: 0/0
  8158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8161 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8162 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8163 ;;Total ram usage:        1 bytes
  8164 ;; Hardware stack levels required when called:   10
  8165 ;; This function calls:
  8166 ;;		_LCDinit
  8167 ;;		_PWM_Output_D4_Disable
  8168 ;;		_SYSTEM_Initialize
  8169 ;;		_TMR1_SetInterruptHandler
  8170 ;;		_TMR2_StopTimer
  8171 ;;		_TMR3_SetInterruptHandler
  8172 ;;		_TMR5_SetInterruptHandler
  8173 ;;		_editClock
  8174 ;;		_editTemp
  8175 ;;		_i2c1_driver_open
  8176 ;; This function is called by:
  8177 ;;		Startup code after reset
  8178 ;; This function uses a non-reentrant model
  8179 ;;
  8180                           
  8181                           
  8182                           ;psect for function _main
  8183  06F3                     _main:
  8184  06F3                     l4354:	
  8185                           ;incstack = 0
  8186                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8187                           
  8188                           
  8189                           ;main.c: 514: SYSTEM_Initialize();
  8190  06F3  318C  246F  3186   	fcall	_SYSTEM_Initialize
  8191  06F6                     l4356:
  8192                           
  8193                           ;main.c: 516: TMR2_StopTimer();
  8194  06F6  318B  2314  3186   	fcall	_TMR2_StopTimer
  8195  06F9                     l4358:
  8196                           
  8197                           ;main.c: 517: PWM_Output_D4_Disable();
  8198  06F9  318B  2306  3186   	fcall	_PWM_Output_D4_Disable
  8199                           
  8200                           ;main.c: 519: TMR1_SetInterruptHandler(Clock_ISR);
  8201  06FC  308E               	movlw	low _Clock_ISR
  8202  06FD  0021               	movlb	1	; select bank1
  8203  06FE  00AA               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  8204  06FF  300F               	movlw	high _Clock_ISR
  8205  0700  00AB               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8206  0701  318B  2318  3186   	fcall	_TMR1_SetInterruptHandler
  8207                           
  8208                           ;main.c: 521: TMR3_SetInterruptHandler(menuLCD_ISR);
  8209  0704  306D               	movlw	low _menuLCD_ISR
  8210  0705  0021               	movlb	1	; select bank1
  8211  0706  00AA               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  8212  0707  3000               	movlw	high _menuLCD_ISR
  8213  0708  00AB               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8214  0709  318B  231E  3186   	fcall	_TMR3_SetInterruptHandler
  8215                           
  8216                           ;main.c: 523: TMR5_SetInterruptHandler(monitoring_ISR);
  8217  070C  30AF               	movlw	low _monitoring_ISR
  8218  070D  0021               	movlb	1	; select bank1
  8219  070E  00AA               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
  8220  070F  300D               	movlw	high _monitoring_ISR
  8221  0710  00AB               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8222  0711  318B  2324  3186   	fcall	_TMR5_SetInterruptHandler
  8223                           
  8224                           ;main.c: 525: i2c1_driver_open();
  8225  0714  318B  235C  3186   	fcall	_i2c1_driver_open
  8226  0717                     l4360:
  8227                           
  8228                           ;main.c: 526: TRISCbits.TRISC3 = 1;
  8229  0717  0020               	movlb	0	; select bank0
  8230  0718  1593               	bsf	19,3	;volatile
  8231  0719                     l4362:
  8232                           
  8233                           ;main.c: 527: TRISCbits.TRISC4 = 1;
  8234  0719  1613               	bsf	19,4	;volatile
  8235  071A                     l4364:
  8236                           
  8237                           ;main.c: 528: WPUC3 = 1;
  8238  071A  003E               	movlb	30	; select bank30
  8239  071B  15CF               	bsf	79,3	;volatile
  8240  071C                     l4366:
  8241                           
  8242                           ;main.c: 529: WPUC4 = 1;
  8243  071C  164F               	bsf	79,4	;volatile
  8244                           
  8245                           ;main.c: 530: LCDinit();
  8246  071D  3187  2772  3186   	fcall	_LCDinit
  8247  0720                     l4368:
  8248                           
  8249                           ;main.c: 533: (INTCONbits.GIE = 1);
  8250  0720  178B               	bsf	11,7	;volatile
  8251  0721                     l4370:
  8252                           
  8253                           ;main.c: 536: (INTCONbits.PEIE = 1);
  8254  0721  170B               	bsf	11,6	;volatile
  8255  0722                     l4372:
  8256                           
  8257                           ;main.c: 539: {;main.c: 540: if(PORTBbits.RB4 == 0){
  8258  0722  0020               	movlb	0	; select bank0
  8259  0723  1A0D               	btfsc	13,4	;volatile
  8260  0724  2F26               	goto	u4271
  8261  0725  2F27               	goto	u4270
  8262  0726                     u4271:
  8263  0726  2F5A               	goto	l4392
  8264  0727                     u4270:
  8265  0727                     l4374:
  8266                           
  8267                           ;main.c: 541: _delay((unsigned long)((50)*(1000000/4000.0)));
  8268  0727  3011               	movlw	17
  8269  0728  0021               	movlb	1	; select bank1
  8270  0729  00B3               	movwf	??_main^(0+128)
  8271  072A  303A               	movlw	58
  8272  072B                     u4337:
  8273  072B  0B89               	decfsz	9,f
  8274  072C  2F2B               	goto	u4337
  8275  072D  0BB3               	decfsz	??_main^(0+128),f
  8276  072E  2F2B               	goto	u4337
  8277  072F  0000               	nop
  8278  0730                     l4376:
  8279                           
  8280                           ;main.c: 543: if(mode == 0 && (clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigger
      +                          )){
  8281  0730  0020               	movlb	0	; select bank0
  8282  0731  0852               	movf	_mode,w
  8283  0732  0453               	iorwf	_mode+1,w
  8284  0733  1D03               	btfss	3,2
  8285  0734  2F36               	goto	u4281
  8286  0735  2F37               	goto	u4280
  8287  0736                     u4281:
  8288  0736  2F4A               	goto	l4386
  8289  0737                     u4280:
  8290  0737                     l4378:
  8291  0737  0867               	movf	_clkAlarm+6,w
  8292  0738  1D03               	btfss	3,2
  8293  0739  2F3B               	goto	u4291
  8294  073A  2F3C               	goto	u4290
  8295  073B                     u4291:
  8296  073B  2F46               	goto	l4384
  8297  073C                     u4290:
  8298  073C                     l4380:
  8299  073C  086B               	movf	_tempAlarm+1,w
  8300  073D  1D03               	btfss	3,2
  8301  073E  2F40               	goto	u4301
  8302  073F  2F41               	goto	u4300
  8303  0740                     u4301:
  8304  0740  2F46               	goto	l4384
  8305  0741                     u4300:
  8306  0741                     l4382:
  8307  0741  0869               	movf	_lumAlarm+1,w
  8308  0742  1903               	btfsc	3,2
  8309  0743  2F45               	goto	u4311
  8310  0744  2F46               	goto	u4310
  8311  0745                     u4311:
  8312  0745  2F4A               	goto	l4386
  8313  0746                     u4310:
  8314  0746                     l4384:
  8315                           
  8316                           ;main.c: 544: clkAlarm.trigger = 0;
  8317  0746  01E7               	clrf	_clkAlarm+6
  8318                           
  8319                           ;main.c: 545: tempAlarm.trigger = 0;
  8320  0747  01EB               	clrf	_tempAlarm+1
  8321                           
  8322                           ;main.c: 546: lumAlarm.trigger = 0;
  8323  0748  01E9               	clrf	_lumAlarm+1
  8324                           
  8325                           ;main.c: 547: }
  8326  0749  2F4E               	goto	l1226
  8327  074A                     l4386:
  8328                           
  8329                           ;main.c: 548: else{;main.c: 549: mode = 1;
  8330  074A  3001               	movlw	1
  8331  074B  00D2               	movwf	_mode
  8332  074C  3000               	movlw	0
  8333  074D  00D3               	movwf	_mode+1
  8334  074E                     l1226:
  8335  074E  1E0D               	btfss	13,4	;volatile
  8336  074F  2F51               	goto	u4321
  8337  0750  2F52               	goto	u4320
  8338  0751                     u4321:
  8339  0751  2F4E               	goto	l1226
  8340  0752                     u4320:
  8341  0752  2F5A               	goto	l4392
  8342  0753                     l4388:
  8343                           
  8344                           ;main.c: 557: editClock();
  8345  0753  3186  2666  3186   	fcall	_editClock
  8346  0756                     l1233:	
  8347                           ;main.c: 558: case 2:
  8348                           
  8349                           
  8350                           ;main.c: 559: editTemp();
  8351  0756  318D  253B  3186   	fcall	_editTemp
  8352                           
  8353                           ;main.c: 560: continue;
  8354  0759  2F22               	goto	l4372
  8355  075A                     l4392:
  8356                           
  8357                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8358                           ; Switch size 1, requested type "simple"
  8359                           ; Number of cases is 1, Range of values is 0 to 0
  8360                           ; switch strategies available:
  8361                           ; Name         Instructions Cycles
  8362                           ; simple_byte            4     3 (average)
  8363                           ; direct_byte            8     6 (fixed)
  8364                           ; jumptable            260     6 (fixed)
  8365                           ;	Chosen strategy is simple_byte
  8366  075A  0853               	movf	_mode+1,w
  8367  075B  3A00               	xorlw	0	; case 0
  8368  075C  1903               	skipnz
  8369  075D  2F5F               	goto	l4418
  8370  075E  2F22               	goto	l4372
  8371  075F                     l4418:
  8372                           
  8373                           ; Switch size 1, requested type "simple"
  8374                           ; Number of cases is 5, Range of values is 0 to 4
  8375                           ; switch strategies available:
  8376                           ; Name         Instructions Cycles
  8377                           ; direct_byte           16     6 (fixed)
  8378                           ; simple_byte           16     9 (average)
  8379                           ; jumptable            260     6 (fixed)
  8380                           ;	Chosen strategy is simple_byte
  8381  075F  0852               	movf	_mode,w
  8382  0760  3A00               	xorlw	0	; case 0
  8383  0761  1903               	skipnz
  8384  0762  2F22               	goto	l4372
  8385  0763  3A01               	xorlw	1	; case 1
  8386  0764  1903               	skipnz
  8387  0765  2F53               	goto	l4388
  8388  0766  3A03               	xorlw	3	; case 2
  8389  0767  1903               	skipnz
  8390  0768  2F56               	goto	l1233
  8391  0769  3A01               	xorlw	1	; case 3
  8392  076A  1903               	skipnz
  8393  076B  2F22               	goto	l4372
  8394  076C  3A07               	xorlw	7	; case 4
  8395  076D  1903               	skipnz
  8396  076E  2F22               	goto	l4372
  8397  076F  2F22               	goto	l4372
  8398  0770  3180  2840         	ljmp	start
  8399  0772                     __end_of_main:
  8400                           
  8401                           	psect	text1
  8402  0B5C                     __ptext1:	
  8403 ;; *************** function _i2c1_driver_open *****************
  8404 ;; Defined at:
  8405 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  8406 ;; Parameters:    Size  Location     Type
  8407 ;;		None
  8408 ;; Auto vars:     Size  Location     Type
  8409 ;;		None
  8410 ;; Return value:  Size  Location     Type
  8411 ;;		None               void
  8412 ;; Registers used:
  8413 ;;		wreg, status,2
  8414 ;; Tracked objects:
  8415 ;;		On entry : 0/0
  8416 ;;		On exit  : 0/0
  8417 ;;		Unchanged: 0/0
  8418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8423 ;;Total ram usage:        0 bytes
  8424 ;; Hardware stack levels used:    1
  8425 ;; Hardware stack levels required when called:    7
  8426 ;; This function calls:
  8427 ;;		Nothing
  8428 ;; This function is called by:
  8429 ;;		_main
  8430 ;; This function uses a non-reentrant model
  8431 ;;
  8432                           
  8433                           
  8434                           ;psect for function _i2c1_driver_open
  8435  0B5C                     _i2c1_driver_open:
  8436  0B5C                     l4118:	
  8437                           ;incstack = 0
  8438                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  8439                           
  8440                           
  8441                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
  8442  0B5C  0023               	movlb	3	; select bank3
  8443  0B5D  1A90               	btfsc	16,5	;volatile
  8444  0B5E  2B60               	goto	u3721
  8445  0B5F  2B61               	goto	u3720
  8446  0B60                     u3721:
  8447  0B60  2B67               	goto	l239
  8448  0B61                     u3720:
  8449  0B61                     l4120:
  8450                           
  8451                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
  8452  0B61  018F               	clrf	15	;volatile
  8453  0B62                     l4122:
  8454                           
  8455                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
  8456  0B62  3028               	movlw	40
  8457  0B63  0090               	movwf	16	;volatile
  8458  0B64                     l4124:
  8459                           
  8460                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
  8461  0B64  0191               	clrf	17	;volatile
  8462                           
  8463                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
  8464  0B65  3003               	movlw	3
  8465  0B66  008D               	movwf	13	;volatile
  8466  0B67                     l239:
  8467  0B67  0008               	return
  8468  0B68                     __end_of_i2c1_driver_open:
  8469                           
  8470                           	psect	text2
  8471  0D3B                     __ptext2:	
  8472 ;; *************** function _editTemp *****************
  8473 ;; Defined at:
  8474 ;;		line 487 in file "main.c"
  8475 ;; Parameters:    Size  Location     Type
  8476 ;;		None
  8477 ;; Auto vars:     Size  Location     Type
  8478 ;;		None
  8479 ;; Return value:  Size  Location     Type
  8480 ;;                  1    wreg      void 
  8481 ;; Registers used:
  8482 ;;		wreg, status,2, status,0
  8483 ;; Tracked objects:
  8484 ;;		On entry : 0/0
  8485 ;;		On exit  : 0/0
  8486 ;;		Unchanged: 0/0
  8487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8490 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8491 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8492 ;;Total ram usage:        1 bytes
  8493 ;; Hardware stack levels used:    1
  8494 ;; Hardware stack levels required when called:    7
  8495 ;; This function calls:
  8496 ;;		Nothing
  8497 ;; This function is called by:
  8498 ;;		_main
  8499 ;; This function uses a non-reentrant model
  8500 ;;
  8501                           
  8502                           
  8503                           ;psect for function _editTemp
  8504  0D3B                     _editTemp:
  8505  0D3B                     l4292:	
  8506                           ;incstack = 0
  8507                           ; Regs used in _editTemp: [wreg+status,2+status,0]
  8508                           
  8509                           
  8510                           ;main.c: 488: editingTempAlarm = 1;
  8511  0D3B  0020               	movlb	0	; select bank0
  8512  0D3C  01DE               	clrf	_editingTempAlarm
  8513  0D3D  0ADE               	incf	_editingTempAlarm,f
  8514  0D3E                     l4294:
  8515                           
  8516                           ;main.c: 490: tempAlarm.alarmTemp = 0;
  8517  0D3E  01EA               	clrf	_tempAlarm
  8518  0D3F                     l4296:
  8519                           
  8520                           ;main.c: 493: if(PORTBbits.RB4 == 0){
  8521  0D3F  0020               	movlb	0	; select bank0
  8522  0D40  1A0D               	btfsc	13,4	;volatile
  8523  0D41  2D43               	goto	u4131
  8524  0D42  2D44               	goto	u4130
  8525  0D43                     u4131:
  8526  0D43  2D57               	goto	l1207
  8527  0D44                     u4130:
  8528  0D44                     l4298:
  8529                           
  8530                           ;main.c: 494: _delay((unsigned long)((50)*(1000000/4000.0)));
  8531  0D44  3011               	movlw	17
  8532  0D45  0021               	movlb	1	; select bank1
  8533  0D46  00AA               	movwf	??_editTemp^(0+128)
  8534  0D47  303A               	movlw	58
  8535  0D48                     u4347:
  8536  0D48  0B89               	decfsz	9,f
  8537  0D49  2D48               	goto	u4347
  8538  0D4A  0BAA               	decfsz	??_editTemp^(0+128),f
  8539  0D4B  2D48               	goto	u4347
  8540  0D4C  0000               	nop
  8541  0D4D                     l4300:
  8542                           
  8543                           ;main.c: 495: editingTempAlarm = 0;
  8544  0D4D  0020               	movlb	0	; select bank0
  8545  0D4E  01DE               	clrf	_editingTempAlarm
  8546  0D4F                     l4302:
  8547                           
  8548                           ;main.c: 496: mode++;
  8549  0D4F  3001               	movlw	1
  8550  0D50  07D2               	addwf	_mode,f
  8551  0D51  3000               	movlw	0
  8552  0D52  3DD3               	addwfc	_mode+1,f
  8553  0D53                     l1208:	
  8554                           ;main.c: 497: while(PORTBbits.RB4==0){};
  8555                           
  8556  0D53  1E0D               	btfss	13,4	;volatile
  8557  0D54  2D56               	goto	u4141
  8558  0D55  2D57               	goto	u4140
  8559  0D56                     u4141:
  8560  0D56  2D53               	goto	l1208
  8561  0D57                     u4140:
  8562  0D57                     l1207:
  8563                           
  8564                           ;main.c: 498: };main.c: 500: if(PORTCbits.RC5 == 0){
  8565  0D57  1A8E               	btfsc	14,5	;volatile
  8566  0D58  2D5A               	goto	u4151
  8567  0D59  2D5B               	goto	u4150
  8568  0D5A                     u4151:
  8569  0D5A  2D3F               	goto	l4296
  8570  0D5B                     u4150:
  8571  0D5B                     l4304:
  8572                           
  8573                           ;main.c: 501: tempAlarm.alarmTemp++;
  8574  0D5B  3001               	movlw	1
  8575  0D5C  0021               	movlb	1	; select bank1
  8576  0D5D  00AA               	movwf	??_editTemp^(0+128)
  8577  0D5E  082A               	movf	??_editTemp^(0+128),w
  8578  0D5F  0020               	movlb	0	; select bank0
  8579  0D60  07EA               	addwf	_tempAlarm,f
  8580  0D61                     l4306:
  8581                           
  8582                           ;main.c: 502: if(tempAlarm.alarmTemp > 50){
  8583  0D61  3033               	movlw	51
  8584  0D62  026A               	subwf	_tempAlarm,w
  8585  0D63  1C03               	skipc
  8586  0D64  2D66               	goto	u4161
  8587  0D65  2D67               	goto	u4160
  8588  0D66                     u4161:
  8589  0D66  2D68               	goto	l4310
  8590  0D67                     u4160:
  8591  0D67                     l4308:
  8592                           
  8593                           ;main.c: 503: tempAlarm.alarmTemp = 0;
  8594  0D67  01EA               	clrf	_tempAlarm
  8595  0D68                     l4310:
  8596                           
  8597                           ;main.c: 504: };main.c: 505: _delay((unsigned long)((50)*(1000000/4000.0)));
  8598  0D68  3011               	movlw	17
  8599  0D69  0021               	movlb	1	; select bank1
  8600  0D6A  00AA               	movwf	??_editTemp^(0+128)
  8601  0D6B  303A               	movlw	58
  8602  0D6C                     u4357:
  8603  0D6C  0B89               	decfsz	9,f
  8604  0D6D  2D6C               	goto	u4357
  8605  0D6E  0BAA               	decfsz	??_editTemp^(0+128),f
  8606  0D6F  2D6C               	goto	u4357
  8607  0D70  0000               	nop
  8608  0D71  2D3F               	goto	l4296
  8609  0D72  0008               	return
  8610  0D73                     __end_of_editTemp:
  8611                           
  8612                           	psect	text3
  8613  0666                     __ptext3:	
  8614 ;; *************** function _editClock *****************
  8615 ;; Defined at:
  8616 ;;		line 446 in file "main.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;		None
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;		None
  8621 ;; Return value:  Size  Location     Type
  8622 ;;                  1    wreg      void 
  8623 ;; Registers used:
  8624 ;;		wreg, status,2, status,0
  8625 ;; Tracked objects:
  8626 ;;		On entry : 0/0
  8627 ;;		On exit  : 0/0
  8628 ;;		Unchanged: 0/0
  8629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8632 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8633 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8634 ;;Total ram usage:        1 bytes
  8635 ;; Hardware stack levels used:    1
  8636 ;; Hardware stack levels required when called:    7
  8637 ;; This function calls:
  8638 ;;		Nothing
  8639 ;; This function is called by:
  8640 ;;		_main
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644                           
  8645                           ;psect for function _editClock
  8646  0666                     _editClock:
  8647  0666                     l4258:	
  8648                           ;incstack = 0
  8649                           ; Regs used in _editClock: [wreg+status,2+status,0]
  8650                           
  8651                           
  8652                           ;main.c: 448: editingClockAlarm = 1;
  8653  0666  3001               	movlw	1
  8654  0667  0020               	movlb	0	; select bank0
  8655  0668  00D4               	movwf	_editingClockAlarm
  8656  0669  3000               	movlw	0
  8657  066A  00D5               	movwf	_editingClockAlarm+1
  8658  066B                     l4260:
  8659                           
  8660                           ;main.c: 451: if(PORTBbits.RB4 == 0){
  8661  066B  0020               	movlb	0	; select bank0
  8662  066C  1A0D               	btfsc	13,4	;volatile
  8663  066D  2E6F               	goto	u4031
  8664  066E  2E70               	goto	u4030
  8665  066F                     u4031:
  8666  066F  2E9A               	goto	l1184
  8667  0670                     u4030:
  8668  0670                     l4262:
  8669                           
  8670                           ;main.c: 452: _delay((unsigned long)((50)*(1000000/4000.0)));
  8671  0670  3011               	movlw	17
  8672  0671  0021               	movlb	1	; select bank1
  8673  0672  00AA               	movwf	??_editClock^(0+128)
  8674  0673  303A               	movlw	58
  8675  0674                     u4367:
  8676  0674  0B89               	decfsz	9,f
  8677  0675  2E74               	goto	u4367
  8678  0676  0BAA               	decfsz	??_editClock^(0+128),f
  8679  0677  2E74               	goto	u4367
  8680  0678  0000               	nop
  8681                           
  8682                           ;main.c: 453: editingClockAlarm++;
  8683  0679  3001               	movlw	1
  8684  067A  0020               	movlb	0	; select bank0
  8685  067B  07D4               	addwf	_editingClockAlarm,f
  8686  067C  3000               	movlw	0
  8687  067D  3DD5               	addwfc	_editingClockAlarm+1,f
  8688                           
  8689                           ;main.c: 454: if(editingClockAlarm > 3){
  8690  067E  0855               	movf	_editingClockAlarm+1,w
  8691  067F  3A80               	xorlw	128
  8692  0680  0021               	movlb	1	; select bank1
  8693  0681  00AA               	movwf	??_editClock^(0+128)
  8694  0682  3080               	movlw	128
  8695  0683  022A               	subwf	??_editClock^(0+128),w
  8696  0684  1D03               	skipz
  8697  0685  2E89               	goto	u4045
  8698  0686  3004               	movlw	4
  8699  0687  0020               	movlb	0	; select bank0
  8700  0688  0254               	subwf	_editingClockAlarm,w
  8701  0689                     u4045:
  8702  0689  1C03               	skipc
  8703  068A  2E8C               	goto	u4041
  8704  068B  2E8D               	goto	u4040
  8705  068C                     u4041:
  8706  068C  2E95               	goto	l1187
  8707  068D                     u4040:
  8708  068D                     l4264:
  8709                           
  8710                           ;main.c: 455: editingClockAlarm = 0;
  8711  068D  0020               	movlb	0	; select bank0
  8712  068E  01D4               	clrf	_editingClockAlarm
  8713  068F  01D5               	clrf	_editingClockAlarm+1
  8714  0690                     l4266:
  8715                           
  8716                           ;main.c: 456: mode++;
  8717  0690  3001               	movlw	1
  8718  0691  07D2               	addwf	_mode,f
  8719  0692  3000               	movlw	0
  8720  0693  3DD3               	addwfc	_mode+1,f
  8721                           
  8722                           ;main.c: 457: break;
  8723  0694  2EF2               	goto	l1203
  8724  0695                     l1187:
  8725  0695  0020               	movlb	0	; select bank0
  8726  0696  1E0D               	btfss	13,4	;volatile
  8727  0697  2E99               	goto	u4051
  8728  0698  2E9A               	goto	u4050
  8729  0699                     u4051:
  8730  0699  2E95               	goto	l1187
  8731  069A                     u4050:
  8732  069A                     l1184:
  8733                           
  8734                           ;main.c: 460: };main.c: 462: if(PORTCbits.RC5 == 0){
  8735  069A  1A8E               	btfsc	14,5	;volatile
  8736  069B  2E9D               	goto	u4061
  8737  069C  2E9E               	goto	u4060
  8738  069D                     u4061:
  8739  069D  2E6B               	goto	l4260
  8740  069E                     u4060:
  8741  069E                     l4268:
  8742                           
  8743                           ;main.c: 463: if(editingClockAlarm == 1){
  8744  069E  0354               	decf	_editingClockAlarm,w
  8745  069F  0455               	iorwf	_editingClockAlarm+1,w
  8746  06A0  1D03               	btfss	3,2
  8747  06A1  2EA3               	goto	u4071
  8748  06A2  2EA4               	goto	u4070
  8749  06A3                     u4071:
  8750  06A3  2EBD               	goto	l4276
  8751  06A4                     u4070:
  8752  06A4                     l4270:
  8753                           
  8754                           ;main.c: 464: if(clkAlarm.alarmVal.h >= 23){
  8755  06A4  0862               	movf	_clkAlarm+1,w
  8756  06A5  3A80               	xorlw	128
  8757  06A6  0021               	movlb	1	; select bank1
  8758  06A7  00AA               	movwf	??_editClock^(0+128)
  8759  06A8  3080               	movlw	128
  8760  06A9  022A               	subwf	??_editClock^(0+128),w
  8761  06AA  1D03               	skipz
  8762  06AB  2EAF               	goto	u4085
  8763  06AC  3017               	movlw	23
  8764  06AD  0020               	movlb	0	; select bank0
  8765  06AE  0261               	subwf	_clkAlarm,w
  8766  06AF                     u4085:
  8767  06AF  1C03               	skipc
  8768  06B0  2EB2               	goto	u4081
  8769  06B1  2EB3               	goto	u4080
  8770  06B2                     u4081:
  8771  06B2  2EB7               	goto	l4274
  8772  06B3                     u4080:
  8773  06B3                     l4272:
  8774                           
  8775                           ;main.c: 465: clkAlarm.alarmVal.h = 0;
  8776  06B3  0020               	movlb	0	; select bank0
  8777  06B4  01E1               	clrf	_clkAlarm
  8778  06B5  01E2               	clrf	_clkAlarm+1
  8779                           
  8780                           ;main.c: 466: } else{
  8781  06B6  2EE8               	goto	l1194
  8782  06B7                     l4274:
  8783                           
  8784                           ;main.c: 467: clkAlarm.alarmVal.h++;
  8785  06B7  3001               	movlw	1
  8786  06B8  0020               	movlb	0	; select bank0
  8787  06B9  07E1               	addwf	_clkAlarm,f
  8788  06BA  3000               	movlw	0
  8789  06BB  3DE2               	addwfc	_clkAlarm+1,f
  8790  06BC  2EE8               	goto	l1194
  8791  06BD                     l4276:
  8792  06BD  3002               	movlw	2
  8793  06BE  0654               	xorwf	_editingClockAlarm,w
  8794  06BF  0455               	iorwf	_editingClockAlarm+1,w
  8795  06C0  1D03               	btfss	3,2
  8796  06C1  2EC3               	goto	u4091
  8797  06C2  2EC4               	goto	u4090
  8798  06C3                     u4091:
  8799  06C3  2ED3               	goto	l4284
  8800  06C4                     u4090:
  8801  06C4                     l4278:
  8802                           
  8803                           ;main.c: 470: if(clkAlarm.alarmVal.m == 59){
  8804  06C4  303B               	movlw	59
  8805  06C5  0663               	xorwf	_clkAlarm+2,w
  8806  06C6  0464               	iorwf	_clkAlarm+3,w
  8807  06C7  1D03               	btfss	3,2
  8808  06C8  2ECA               	goto	u4101
  8809  06C9  2ECB               	goto	u4100
  8810  06CA                     u4101:
  8811  06CA  2ECE               	goto	l4282
  8812  06CB                     u4100:
  8813  06CB                     l4280:
  8814                           
  8815                           ;main.c: 471: clkAlarm.alarmVal.m = 0;
  8816  06CB  01E3               	clrf	_clkAlarm+2
  8817  06CC  01E4               	clrf	_clkAlarm+3
  8818                           
  8819                           ;main.c: 472: } else{
  8820  06CD  2EE8               	goto	l1194
  8821  06CE                     l4282:
  8822                           
  8823                           ;main.c: 473: clkAlarm.alarmVal.m++;
  8824  06CE  3001               	movlw	1
  8825  06CF  07E3               	addwf	_clkAlarm+2,f
  8826  06D0  3000               	movlw	0
  8827  06D1  3DE4               	addwfc	_clkAlarm+3,f
  8828  06D2  2EE8               	goto	l1194
  8829  06D3                     l4284:
  8830  06D3  3003               	movlw	3
  8831  06D4  0654               	xorwf	_editingClockAlarm,w
  8832  06D5  0455               	iorwf	_editingClockAlarm+1,w
  8833  06D6  1D03               	btfss	3,2
  8834  06D7  2ED9               	goto	u4111
  8835  06D8  2EDA               	goto	u4110
  8836  06D9                     u4111:
  8837  06D9  2EE8               	goto	l1194
  8838  06DA                     u4110:
  8839  06DA                     l4286:
  8840                           
  8841                           ;main.c: 476: if(clkAlarm.alarmVal.s == 59){
  8842  06DA  303B               	movlw	59
  8843  06DB  0665               	xorwf	_clkAlarm+4,w
  8844  06DC  0466               	iorwf	_clkAlarm+5,w
  8845  06DD  1D03               	btfss	3,2
  8846  06DE  2EE0               	goto	u4121
  8847  06DF  2EE1               	goto	u4120
  8848  06E0                     u4121:
  8849  06E0  2EE4               	goto	l4290
  8850  06E1                     u4120:
  8851  06E1                     l4288:
  8852                           
  8853                           ;main.c: 477: clkAlarm.alarmVal.s = 0;
  8854  06E1  01E5               	clrf	_clkAlarm+4
  8855  06E2  01E6               	clrf	_clkAlarm+5
  8856                           
  8857                           ;main.c: 478: } else{
  8858  06E3  2EE8               	goto	l1194
  8859  06E4                     l4290:
  8860                           
  8861                           ;main.c: 479: clkAlarm.alarmVal.s++;
  8862  06E4  3001               	movlw	1
  8863  06E5  07E5               	addwf	_clkAlarm+4,f
  8864  06E6  3000               	movlw	0
  8865  06E7  3DE6               	addwfc	_clkAlarm+5,f
  8866  06E8                     l1194:
  8867                           
  8868                           ;main.c: 480: };main.c: 481: };main.c: 482: _delay((unsigned long)((50)*(1000000/4000.0)
      +                          ));
  8869  06E8  3011               	movlw	17
  8870  06E9  0021               	movlb	1	; select bank1
  8871  06EA  00AA               	movwf	??_editClock^(0+128)
  8872  06EB  303A               	movlw	58
  8873  06EC                     u4377:
  8874  06EC  0B89               	decfsz	9,f
  8875  06ED  2EEC               	goto	u4377
  8876  06EE  0BAA               	decfsz	??_editClock^(0+128),f
  8877  06EF  2EEC               	goto	u4377
  8878  06F0  0000               	nop
  8879  06F1  2E6B               	goto	l4260
  8880  06F2                     l1203:
  8881  06F2  0008               	return
  8882  06F3                     __end_of_editClock:
  8883                           
  8884                           	psect	text4
  8885  0B14                     __ptext4:	
  8886 ;; *************** function _TMR2_StopTimer *****************
  8887 ;; Defined at:
  8888 ;;		line 117 in file "mcc_generated_files/tmr2.c"
  8889 ;; Parameters:    Size  Location     Type
  8890 ;;		None
  8891 ;; Auto vars:     Size  Location     Type
  8892 ;;		None
  8893 ;; Return value:  Size  Location     Type
  8894 ;;                  1    wreg      void 
  8895 ;; Registers used:
  8896 ;;		status,2, status,0, pclath, cstack
  8897 ;; Tracked objects:
  8898 ;;		On entry : 0/0
  8899 ;;		On exit  : 0/0
  8900 ;;		Unchanged: 0/0
  8901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8906 ;;Total ram usage:        0 bytes
  8907 ;; Hardware stack levels used:    1
  8908 ;; Hardware stack levels required when called:    8
  8909 ;; This function calls:
  8910 ;;		_TMR2_Stop
  8911 ;; This function is called by:
  8912 ;;		_main
  8913 ;; This function uses a non-reentrant model
  8914 ;;
  8915                           
  8916                           
  8917                           ;psect for function _TMR2_StopTimer
  8918  0B14                     _TMR2_StopTimer:
  8919  0B14                     l4154:	
  8920                           ;incstack = 0
  8921                           ; Regs used in _TMR2_StopTimer: [status,2+status,0+pclath+cstack]
  8922                           
  8923                           
  8924                           ;tmr2.c: 119: TMR2_Stop();
  8925  0B14  318B  2309  318B   	fcall	_TMR2_Stop
  8926  0B17                     l767:
  8927  0B17  0008               	return
  8928  0B18                     __end_of_TMR2_StopTimer:
  8929                           
  8930                           	psect	text5
  8931  0B09                     __ptext5:	
  8932 ;; *************** function _TMR2_Stop *****************
  8933 ;; Defined at:
  8934 ;;		line 111 in file "mcc_generated_files/tmr2.c"
  8935 ;; Parameters:    Size  Location     Type
  8936 ;;		None
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;		None
  8939 ;; Return value:  Size  Location     Type
  8940 ;;                  1    wreg      void 
  8941 ;; Registers used:
  8942 ;;		None
  8943 ;; Tracked objects:
  8944 ;;		On entry : 0/0
  8945 ;;		On exit  : 0/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8952 ;;Total ram usage:        0 bytes
  8953 ;; Hardware stack levels used:    1
  8954 ;; Hardware stack levels required when called:    7
  8955 ;; This function calls:
  8956 ;;		Nothing
  8957 ;; This function is called by:
  8958 ;;		_TMR2_StopTimer
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           
  8963                           ;psect for function _TMR2_Stop
  8964  0B09                     _TMR2_Stop:
  8965  0B09                     l3896:	
  8966                           ;incstack = 0
  8967                           ; Regs used in _TMR2_Stop: []
  8968                           
  8969                           
  8970                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
  8971  0B09  0025               	movlb	5	; select bank5
  8972  0B0A  138E               	bcf	14,7	;volatile
  8973  0B0B                     l764:
  8974  0B0B  0008               	return
  8975  0B0C                     __end_of_TMR2_Stop:
  8976                           
  8977                           	psect	text6
  8978  0C6F                     __ptext6:	
  8979 ;; *************** function _SYSTEM_Initialize *****************
  8980 ;; Defined at:
  8981 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8982 ;; Parameters:    Size  Location     Type
  8983 ;;		None
  8984 ;; Auto vars:     Size  Location     Type
  8985 ;;		None
  8986 ;; Return value:  Size  Location     Type
  8987 ;;                  1    wreg      void 
  8988 ;; Registers used:
  8989 ;;		wreg, status,2, status,0, pclath, cstack
  8990 ;; Tracked objects:
  8991 ;;		On entry : 0/0
  8992 ;;		On exit  : 0/0
  8993 ;;		Unchanged: 0/0
  8994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8999 ;;Total ram usage:        0 bytes
  9000 ;; Hardware stack levels used:    1
  9001 ;; Hardware stack levels required when called:    9
  9002 ;; This function calls:
  9003 ;;		_ADCC_Initialize
  9004 ;;		_OSCILLATOR_Initialize
  9005 ;;		_PIN_MANAGER_Initialize
  9006 ;;		_PMD_Initialize
  9007 ;;		_PWM6_Initialize
  9008 ;;		_TMR1_Initialize
  9009 ;;		_TMR2_Initialize
  9010 ;;		_TMR3_Initialize
  9011 ;;		_TMR5_Initialize
  9012 ;; This function is called by:
  9013 ;;		_main
  9014 ;; This function uses a non-reentrant model
  9015 ;;
  9016                           
  9017                           
  9018                           ;psect for function _SYSTEM_Initialize
  9019  0C6F                     _SYSTEM_Initialize:
  9020  0C6F                     l4100:	
  9021                           ;incstack = 0
  9022                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9023                           
  9024                           
  9025                           ;mcc.c: 52: PMD_Initialize();
  9026  0C6F  318B  234B  318C   	fcall	_PMD_Initialize
  9027  0C72                     l4102:
  9028                           
  9029                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  9030  0C72  318D  25EB  318C   	fcall	_PIN_MANAGER_Initialize
  9031  0C75                     l4104:
  9032                           
  9033                           ;mcc.c: 54: OSCILLATOR_Initialize();
  9034  0C75  318B  2353  318C   	fcall	_OSCILLATOR_Initialize
  9035  0C78                     l4106:
  9036                           
  9037                           ;mcc.c: 55: PWM6_Initialize();
  9038  0C78  318B  2374  318C   	fcall	_PWM6_Initialize
  9039  0C7B                     l4108:
  9040                           
  9041                           ;mcc.c: 56: ADCC_Initialize();
  9042  0C7B  3187  27E8  318C   	fcall	_ADCC_Initialize
  9043  0C7E                     l4110:
  9044                           
  9045                           ;mcc.c: 57: TMR3_Initialize();
  9046  0C7E  318C  24C9  318C   	fcall	_TMR3_Initialize
  9047  0C81                     l4112:
  9048                           
  9049                           ;mcc.c: 58: TMR2_Initialize();
  9050  0C81  318B  2381  318C   	fcall	_TMR2_Initialize
  9051  0C84                     l4114:
  9052                           
  9053                           ;mcc.c: 59: TMR5_Initialize();
  9054  0C84  318C  24E8  318C   	fcall	_TMR5_Initialize
  9055  0C87                     l4116:
  9056                           
  9057                           ;mcc.c: 60: TMR1_Initialize();
  9058  0C87  318C  24AA  318C   	fcall	_TMR1_Initialize
  9059  0C8A                     l172:
  9060  0C8A  0008               	return
  9061  0C8B                     __end_of_SYSTEM_Initialize:
  9062                           
  9063                           	psect	text7
  9064  0CE8                     __ptext7:	
  9065 ;; *************** function _TMR5_Initialize *****************
  9066 ;; Defined at:
  9067 ;;		line 64 in file "mcc_generated_files/tmr5.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;		None
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;		None
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  1    wreg      void 
  9074 ;; Registers used:
  9075 ;;		wreg, status,2, status,0, pclath, cstack
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9085 ;;Total ram usage:        0 bytes
  9086 ;; Hardware stack levels used:    1
  9087 ;; Hardware stack levels required when called:    8
  9088 ;; This function calls:
  9089 ;;		_TMR5_SetInterruptHandler
  9090 ;; This function is called by:
  9091 ;;		_SYSTEM_Initialize
  9092 ;; This function uses a non-reentrant model
  9093 ;;
  9094                           
  9095                           
  9096                           ;psect for function _TMR5_Initialize
  9097  0CE8                     _TMR5_Initialize:
  9098  0CE8                     l3818:	
  9099                           ;incstack = 0
  9100                           ; Regs used in _TMR5_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9101                           
  9102                           
  9103                           ;tmr5.c: 69: T5GCON = 0x00;
  9104  0CE8  0024               	movlb	4	; select bank4
  9105  0CE9  019B               	clrf	27	;volatile
  9106                           
  9107                           ;tmr5.c: 72: T5GATE = 0x00;
  9108  0CEA  019C               	clrf	28	;volatile
  9109  0CEB                     l3820:
  9110                           
  9111                           ;tmr5.c: 75: T5CLK = 0x04;
  9112  0CEB  3004               	movlw	4
  9113  0CEC  009D               	movwf	29	;volatile
  9114  0CED                     l3822:
  9115                           
  9116                           ;tmr5.c: 79: TMR5H = 0x4A;
  9117  0CED  304A               	movlw	74
  9118  0CEE  0099               	movwf	25	;volatile
  9119  0CEF                     l3824:
  9120                           
  9121                           ;tmr5.c: 82: TMR5L = 0x5C;
  9122  0CEF  305C               	movlw	92
  9123  0CF0  0098               	movwf	24	;volatile
  9124  0CF1                     l3826:
  9125                           
  9126                           ;tmr5.c: 85: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  9127  0CF1  0819               	movf	25,w	;volatile
  9128  0CF2  0021               	movlb	1	; select bank1
  9129  0CF3  00A3               	movwf	(_timer5ReloadVal+1)^(0+128)	;volatile
  9130  0CF4  0024               	movlb	4	; select bank4
  9131  0CF5  0818               	movf	24,w	;volatile
  9132  0CF6  0021               	movlb	1	; select bank1
  9133  0CF7  00A2               	movwf	_timer5ReloadVal^(0+128)	;volatile
  9134  0CF8                     l3828:
  9135                           
  9136                           ;tmr5.c: 88: PIR4bits.TMR5IF = 0;
  9137  0CF8  002E               	movlb	14	; select bank14
  9138  0CF9  1210               	bcf	16,4	;volatile
  9139  0CFA                     l3830:
  9140                           
  9141                           ;tmr5.c: 91: PIE4bits.TMR5IE = 1;
  9142  0CFA  161A               	bsf	26,4	;volatile
  9143  0CFB                     l3832:
  9144                           
  9145                           ;tmr5.c: 94: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
  9146  0CFB  30FF               	movlw	low _TMR5_DefaultInterruptHandler
  9147  0CFC  0021               	movlb	1	; select bank1
  9148  0CFD  00AA               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
  9149  0CFE  3007               	movlw	high _TMR5_DefaultInterruptHandler
  9150  0CFF  00AB               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9151  0D00  318B  2324  318C   	fcall	_TMR5_SetInterruptHandler
  9152  0D03                     l3834:
  9153                           
  9154                           ;tmr5.c: 97: T5CON = 0x11;
  9155  0D03  3011               	movlw	17
  9156  0D04  0024               	movlb	4	; select bank4
  9157  0D05  009A               	movwf	26	;volatile
  9158  0D06                     l675:
  9159  0D06  0008               	return
  9160  0D07                     __end_of_TMR5_Initialize:
  9161                           
  9162                           	psect	text8
  9163  0B24                     __ptext8:	
  9164 ;; *************** function _TMR5_SetInterruptHandler *****************
  9165 ;; Defined at:
  9166 ;;		line 179 in file "mcc_generated_files/tmr5.c"
  9167 ;; Parameters:    Size  Location     Type
  9168 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  9169 ;;		 -> monitoring_ISR(1), TMR5_DefaultInterruptHandler(1), 
  9170 ;; Auto vars:     Size  Location     Type
  9171 ;;		None
  9172 ;; Return value:  Size  Location     Type
  9173 ;;                  1    wreg      void 
  9174 ;; Registers used:
  9175 ;;		wreg
  9176 ;; Tracked objects:
  9177 ;;		On entry : 0/0
  9178 ;;		On exit  : 0/0
  9179 ;;		Unchanged: 0/0
  9180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9181 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9184 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9185 ;;Total ram usage:        2 bytes
  9186 ;; Hardware stack levels used:    1
  9187 ;; Hardware stack levels required when called:    7
  9188 ;; This function calls:
  9189 ;;		Nothing
  9190 ;; This function is called by:
  9191 ;;		_TMR5_Initialize
  9192 ;;		_main
  9193 ;; This function uses a non-reentrant model
  9194 ;;
  9195                           
  9196                           
  9197                           ;psect for function _TMR5_SetInterruptHandler
  9198  0B24                     _TMR5_SetInterruptHandler:
  9199  0B24                     l3532:	
  9200                           ;incstack = 0
  9201                           ; Regs used in _TMR5_SetInterruptHandler: [wreg]
  9202                           
  9203                           
  9204                           ;tmr5.c: 180: TMR5_InterruptHandler = InterruptHandler;
  9205  0B24  0021               	movlb	1	; select bank1
  9206  0B25  082B               	movf	(TMR5_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  9207  0B26  00A1               	movwf	(_TMR5_InterruptHandler+1)^(0+128)
  9208  0B27  082A               	movf	TMR5_SetInterruptHandler@InterruptHandler^(0+128),w
  9209  0B28  00A0               	movwf	_TMR5_InterruptHandler^(0+128)
  9210  0B29                     l705:
  9211  0B29  0008               	return
  9212  0B2A                     __end_of_TMR5_SetInterruptHandler:
  9213                           
  9214                           	psect	text9
  9215  0CC9                     __ptext9:	
  9216 ;; *************** function _TMR3_Initialize *****************
  9217 ;; Defined at:
  9218 ;;		line 64 in file "mcc_generated_files/tmr3.c"
  9219 ;; Parameters:    Size  Location     Type
  9220 ;;		None
  9221 ;; Auto vars:     Size  Location     Type
  9222 ;;		None
  9223 ;; Return value:  Size  Location     Type
  9224 ;;                  1    wreg      void 
  9225 ;; Registers used:
  9226 ;;		wreg, status,2, status,0, pclath, cstack
  9227 ;; Tracked objects:
  9228 ;;		On entry : 0/0
  9229 ;;		On exit  : 0/0
  9230 ;;		Unchanged: 0/0
  9231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9236 ;;Total ram usage:        0 bytes
  9237 ;; Hardware stack levels used:    1
  9238 ;; Hardware stack levels required when called:    8
  9239 ;; This function calls:
  9240 ;;		_TMR3_SetInterruptHandler
  9241 ;; This function is called by:
  9242 ;;		_SYSTEM_Initialize
  9243 ;; This function uses a non-reentrant model
  9244 ;;
  9245                           
  9246                           
  9247                           ;psect for function _TMR3_Initialize
  9248  0CC9                     _TMR3_Initialize:
  9249  0CC9                     l3788:	
  9250                           ;incstack = 0
  9251                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9252                           
  9253                           
  9254                           ;tmr3.c: 69: T3GCON = 0x00;
  9255  0CC9  0024               	movlb	4	; select bank4
  9256  0CCA  0195               	clrf	21	;volatile
  9257                           
  9258                           ;tmr3.c: 72: T3GATE = 0x00;
  9259  0CCB  0196               	clrf	22	;volatile
  9260  0CCC                     l3790:
  9261                           
  9262                           ;tmr3.c: 75: T3CLK = 0x04;
  9263  0CCC  3004               	movlw	4
  9264  0CCD  0097               	movwf	23	;volatile
  9265  0CCE                     l3792:
  9266                           
  9267                           ;tmr3.c: 78: TMR3H = 0xE7;
  9268  0CCE  30E7               	movlw	231
  9269  0CCF  0093               	movwf	19	;volatile
  9270  0CD0                     l3794:
  9271                           
  9272                           ;tmr3.c: 81: TMR3L = 0xC8;
  9273  0CD0  30C8               	movlw	200
  9274  0CD1  0092               	movwf	18	;volatile
  9275  0CD2                     l3796:
  9276                           
  9277                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  9278  0CD2  0813               	movf	19,w	;volatile
  9279  0CD3  0020               	movlb	0	; select bank0
  9280  0CD4  00EE               	movwf	_timer3ReloadVal+1	;volatile
  9281  0CD5  0024               	movlb	4	; select bank4
  9282  0CD6  0812               	movf	18,w	;volatile
  9283  0CD7  0020               	movlb	0	; select bank0
  9284  0CD8  00ED               	movwf	_timer3ReloadVal	;volatile
  9285  0CD9                     l3798:
  9286                           
  9287                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
  9288  0CD9  002E               	movlb	14	; select bank14
  9289  0CDA  1110               	bcf	16,2	;volatile
  9290  0CDB                     l3800:
  9291                           
  9292                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
  9293  0CDB  151A               	bsf	26,2	;volatile
  9294  0CDC                     l3802:
  9295                           
  9296                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  9297  0CDC  3003               	movlw	low _TMR3_DefaultInterruptHandler
  9298  0CDD  0021               	movlb	1	; select bank1
  9299  0CDE  00AA               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  9300  0CDF  3000               	movlw	high _TMR3_DefaultInterruptHandler
  9301  0CE0  00AB               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9302  0CE1  318B  231E  318C   	fcall	_TMR3_SetInterruptHandler
  9303  0CE4                     l3804:
  9304                           
  9305                           ;tmr3.c: 96: T3CON = 0x01;
  9306  0CE4  3001               	movlw	1
  9307  0CE5  0024               	movlb	4	; select bank4
  9308  0CE6  0094               	movwf	20	;volatile
  9309  0CE7                     l451:
  9310  0CE7  0008               	return
  9311  0CE8                     __end_of_TMR3_Initialize:
  9312                           
  9313                           	psect	text10
  9314  0B1E                     __ptext10:	
  9315 ;; *************** function _TMR3_SetInterruptHandler *****************
  9316 ;; Defined at:
  9317 ;;		line 178 in file "mcc_generated_files/tmr3.c"
  9318 ;; Parameters:    Size  Location     Type
  9319 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  9320 ;;		 -> menuLCD_ISR(1), TMR3_DefaultInterruptHandler(1), 
  9321 ;; Auto vars:     Size  Location     Type
  9322 ;;		None
  9323 ;; Return value:  Size  Location     Type
  9324 ;;                  1    wreg      void 
  9325 ;; Registers used:
  9326 ;;		wreg
  9327 ;; Tracked objects:
  9328 ;;		On entry : 0/0
  9329 ;;		On exit  : 0/0
  9330 ;;		Unchanged: 0/0
  9331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9332 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9335 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9336 ;;Total ram usage:        2 bytes
  9337 ;; Hardware stack levels used:    1
  9338 ;; Hardware stack levels required when called:    7
  9339 ;; This function calls:
  9340 ;;		Nothing
  9341 ;; This function is called by:
  9342 ;;		_TMR3_Initialize
  9343 ;;		_main
  9344 ;; This function uses a non-reentrant model
  9345 ;;
  9346                           
  9347                           
  9348                           ;psect for function _TMR3_SetInterruptHandler
  9349  0B1E                     _TMR3_SetInterruptHandler:
  9350  0B1E                     l3516:	
  9351                           ;incstack = 0
  9352                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
  9353                           
  9354                           
  9355                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
  9356  0B1E  0021               	movlb	1	; select bank1
  9357  0B1F  082B               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  9358  0B20  00A5               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
  9359  0B21  082A               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
  9360  0B22  00A4               	movwf	_TMR3_InterruptHandler^(0+128)
  9361  0B23                     l481:
  9362  0B23  0008               	return
  9363  0B24                     __end_of_TMR3_SetInterruptHandler:
  9364                           
  9365                           	psect	text11
  9366  0B81                     __ptext11:	
  9367 ;; *************** function _TMR2_Initialize *****************
  9368 ;; Defined at:
  9369 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;		None
  9372 ;; Auto vars:     Size  Location     Type
  9373 ;;		None
  9374 ;; Return value:  Size  Location     Type
  9375 ;;                  1    wreg      void 
  9376 ;; Registers used:
  9377 ;;		wreg, status,2
  9378 ;; Tracked objects:
  9379 ;;		On entry : 0/0
  9380 ;;		On exit  : 0/0
  9381 ;;		Unchanged: 0/0
  9382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9387 ;;Total ram usage:        0 bytes
  9388 ;; Hardware stack levels used:    1
  9389 ;; Hardware stack levels required when called:    7
  9390 ;; This function calls:
  9391 ;;		Nothing
  9392 ;; This function is called by:
  9393 ;;		_SYSTEM_Initialize
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           
  9398                           ;psect for function _TMR2_Initialize
  9399  0B81                     _TMR2_Initialize:
  9400  0B81                     l3806:	
  9401                           ;incstack = 0
  9402                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9403                           
  9404                           
  9405                           ;tmr2.c: 67: T2CLKCON = 0x01;
  9406  0B81  3001               	movlw	1
  9407  0B82  0025               	movlb	5	; select bank5
  9408  0B83  0090               	movwf	16	;volatile
  9409  0B84                     l3808:
  9410                           
  9411                           ;tmr2.c: 70: T2HLT = 0x00;
  9412  0B84  018F               	clrf	15	;volatile
  9413  0B85                     l3810:
  9414                           
  9415                           ;tmr2.c: 73: T2RST = 0x00;
  9416  0B85  0191               	clrf	17	;volatile
  9417                           
  9418                           ;tmr2.c: 76: T2PR = 0xFF;
  9419  0B86  30FF               	movlw	255
  9420  0B87  008D               	movwf	13	;volatile
  9421  0B88                     l3812:
  9422                           
  9423                           ;tmr2.c: 79: T2TMR = 0x00;
  9424  0B88  018C               	clrf	12	;volatile
  9425  0B89                     l3814:
  9426                           
  9427                           ;tmr2.c: 82: PIR4bits.TMR2IF = 0;
  9428  0B89  002E               	movlb	14	; select bank14
  9429  0B8A  1090               	bcf	16,1	;volatile
  9430  0B8B                     l3816:
  9431                           
  9432                           ;tmr2.c: 85: T2CON = 0x80;
  9433  0B8B  3080               	movlw	128
  9434  0B8C  0025               	movlb	5	; select bank5
  9435  0B8D  008E               	movwf	14	;volatile
  9436  0B8E                     l749:
  9437  0B8E  0008               	return
  9438  0B8F                     __end_of_TMR2_Initialize:
  9439                           
  9440                           	psect	text12
  9441  0CAA                     __ptext12:	
  9442 ;; *************** function _TMR1_Initialize *****************
  9443 ;; Defined at:
  9444 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;		None
  9447 ;; Auto vars:     Size  Location     Type
  9448 ;;		None
  9449 ;; Return value:  Size  Location     Type
  9450 ;;                  1    wreg      void 
  9451 ;; Registers used:
  9452 ;;		wreg, status,2, status,0, pclath, cstack
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9462 ;;Total ram usage:        0 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; Hardware stack levels required when called:    8
  9465 ;; This function calls:
  9466 ;;		_TMR1_SetInterruptHandler
  9467 ;; This function is called by:
  9468 ;;		_SYSTEM_Initialize
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           
  9473                           ;psect for function _TMR1_Initialize
  9474  0CAA                     _TMR1_Initialize:
  9475  0CAA                     l3836:	
  9476                           ;incstack = 0
  9477                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9478                           
  9479                           
  9480                           ;tmr1.c: 69: T1GCON = 0x00;
  9481  0CAA  0024               	movlb	4	; select bank4
  9482  0CAB  018F               	clrf	15	;volatile
  9483                           
  9484                           ;tmr1.c: 72: T1GATE = 0x00;
  9485  0CAC  0190               	clrf	16	;volatile
  9486  0CAD                     l3838:
  9487                           
  9488                           ;tmr1.c: 75: T1CLK = 0x04;
  9489  0CAD  3004               	movlw	4
  9490  0CAE  0091               	movwf	17	;volatile
  9491  0CAF                     l3840:
  9492                           
  9493                           ;tmr1.c: 78: TMR1H = 0x86;
  9494  0CAF  3086               	movlw	134
  9495  0CB0  008D               	movwf	13	;volatile
  9496  0CB1                     l3842:
  9497                           
  9498                           ;tmr1.c: 81: TMR1L = 0xE8;
  9499  0CB1  30E8               	movlw	232
  9500  0CB2  008C               	movwf	12	;volatile
  9501  0CB3                     l3844:
  9502                           
  9503                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  9504  0CB3  080D               	movf	13,w	;volatile
  9505  0CB4  0021               	movlb	1	; select bank1
  9506  0CB5  00A9               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  9507  0CB6  0024               	movlb	4	; select bank4
  9508  0CB7  080C               	movf	12,w	;volatile
  9509  0CB8  0021               	movlb	1	; select bank1
  9510  0CB9  00A8               	movwf	_timer1ReloadVal^(0+128)	;volatile
  9511  0CBA                     l3846:
  9512                           
  9513                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
  9514  0CBA  002E               	movlb	14	; select bank14
  9515  0CBB  1010               	bcf	16,0	;volatile
  9516  0CBC                     l3848:
  9517                           
  9518                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
  9519  0CBC  141A               	bsf	26,0	;volatile
  9520  0CBD                     l3850:
  9521                           
  9522                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  9523  0CBD  3002               	movlw	low _TMR1_DefaultInterruptHandler
  9524  0CBE  0021               	movlb	1	; select bank1
  9525  0CBF  00AA               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  9526  0CC0  3000               	movlw	high _TMR1_DefaultInterruptHandler
  9527  0CC1  00AB               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9528  0CC2  318B  2318  318C   	fcall	_TMR1_SetInterruptHandler
  9529  0CC5                     l3852:
  9530                           
  9531                           ;tmr1.c: 96: T1CON = 0x01;
  9532  0CC5  3001               	movlw	1
  9533  0CC6  0024               	movlb	4	; select bank4
  9534  0CC7  008E               	movwf	14	;volatile
  9535  0CC8                     l387:
  9536  0CC8  0008               	return
  9537  0CC9                     __end_of_TMR1_Initialize:
  9538                           
  9539                           	psect	text13
  9540  0B18                     __ptext13:	
  9541 ;; *************** function _TMR1_SetInterruptHandler *****************
  9542 ;; Defined at:
  9543 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  9544 ;; Parameters:    Size  Location     Type
  9545 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  9546 ;;		 -> Clock_ISR(1), TMR1_DefaultInterruptHandler(1), 
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;		None
  9549 ;; Return value:  Size  Location     Type
  9550 ;;                  1    wreg      void 
  9551 ;; Registers used:
  9552 ;;		wreg
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : 0/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9558 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9561 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9562 ;;Total ram usage:        2 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:    7
  9565 ;; This function calls:
  9566 ;;		Nothing
  9567 ;; This function is called by:
  9568 ;;		_TMR1_Initialize
  9569 ;;		_main
  9570 ;; This function uses a non-reentrant model
  9571 ;;
  9572                           
  9573                           
  9574                           ;psect for function _TMR1_SetInterruptHandler
  9575  0B18                     _TMR1_SetInterruptHandler:
  9576  0B18                     l3514:	
  9577                           ;incstack = 0
  9578                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  9579                           
  9580                           
  9581                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
  9582  0B18  0021               	movlb	1	; select bank1
  9583  0B19  082B               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  9584  0B1A  00A7               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  9585  0B1B  082A               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
  9586  0B1C  00A6               	movwf	_TMR1_InterruptHandler^(0+128)
  9587  0B1D                     l417:
  9588  0B1D  0008               	return
  9589  0B1E                     __end_of_TMR1_SetInterruptHandler:
  9590                           
  9591                           	psect	text14
  9592  0B74                     __ptext14:	
  9593 ;; *************** function _PWM6_Initialize *****************
  9594 ;; Defined at:
  9595 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  9596 ;; Parameters:    Size  Location     Type
  9597 ;;		None
  9598 ;; Auto vars:     Size  Location     Type
  9599 ;;		None
  9600 ;; Return value:  Size  Location     Type
  9601 ;;                  1    wreg      void 
  9602 ;; Registers used:
  9603 ;;		wreg, status,2, status,0
  9604 ;; Tracked objects:
  9605 ;;		On entry : 0/0
  9606 ;;		On exit  : 0/0
  9607 ;;		Unchanged: 0/0
  9608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9613 ;;Total ram usage:        0 bytes
  9614 ;; Hardware stack levels used:    1
  9615 ;; Hardware stack levels required when called:    7
  9616 ;; This function calls:
  9617 ;;		Nothing
  9618 ;; This function is called by:
  9619 ;;		_SYSTEM_Initialize
  9620 ;; This function uses a non-reentrant model
  9621 ;;
  9622                           
  9623                           
  9624                           ;psect for function _PWM6_Initialize
  9625  0B74                     _PWM6_Initialize:
  9626  0B74                     l3778:	
  9627                           ;incstack = 0
  9628                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  9629                           
  9630                           
  9631                           ;pwm6.c: 62: PWM6CON = 0x80;
  9632  0B74  3080               	movlw	128
  9633  0B75  0027               	movlb	7	; select bank7
  9634  0B76  008E               	movwf	14	;volatile
  9635                           
  9636                           ;pwm6.c: 65: PWM6DCH = 0xFF;
  9637  0B77  30FF               	movlw	255
  9638  0B78  008D               	movwf	13	;volatile
  9639                           
  9640                           ;pwm6.c: 68: PWM6DCL = 0xC0;
  9641  0B79  30C0               	movlw	192
  9642  0B7A  008C               	movwf	12	;volatile
  9643  0B7B                     l3780:
  9644                           
  9645                           ;pwm6.c: 71: CCPTMRS1bits.P6TSEL = 1;
  9646  0B7B  0024               	movlb	4	; select bank4
  9647  0B7C  081F               	movf	31,w	;volatile
  9648  0B7D  39F3               	andlw	-13
  9649  0B7E  3804               	iorlw	4
  9650  0B7F  009F               	movwf	31	;volatile
  9651  0B80                     l719:
  9652  0B80  0008               	return
  9653  0B81                     __end_of_PWM6_Initialize:
  9654                           
  9655                           	psect	text15
  9656  0B4B                     __ptext15:	
  9657 ;; *************** function _PMD_Initialize *****************
  9658 ;; Defined at:
  9659 ;;		line 77 in file "mcc_generated_files/mcc.c"
  9660 ;; Parameters:    Size  Location     Type
  9661 ;;		None
  9662 ;; Auto vars:     Size  Location     Type
  9663 ;;		None
  9664 ;; Return value:  Size  Location     Type
  9665 ;;                  1    wreg      void 
  9666 ;; Registers used:
  9667 ;;		status,2
  9668 ;; Tracked objects:
  9669 ;;		On entry : 0/0
  9670 ;;		On exit  : 0/0
  9671 ;;		Unchanged: 0/0
  9672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9677 ;;Total ram usage:        0 bytes
  9678 ;; Hardware stack levels used:    1
  9679 ;; Hardware stack levels required when called:    7
  9680 ;; This function calls:
  9681 ;;		Nothing
  9682 ;; This function is called by:
  9683 ;;		_SYSTEM_Initialize
  9684 ;; This function uses a non-reentrant model
  9685 ;;
  9686                           
  9687                           
  9688                           ;psect for function _PMD_Initialize
  9689  0B4B                     _PMD_Initialize:
  9690  0B4B                     l3768:	
  9691                           ;incstack = 0
  9692                           ; Regs used in _PMD_Initialize: [status,2]
  9693                           
  9694                           
  9695                           ;mcc.c: 80: PMD0 = 0x00;
  9696  0B4B  002F               	movlb	15	; select bank15
  9697  0B4C  0196               	clrf	22	;volatile
  9698                           
  9699                           ;mcc.c: 82: PMD1 = 0x00;
  9700  0B4D  0197               	clrf	23	;volatile
  9701                           
  9702                           ;mcc.c: 84: PMD2 = 0x00;
  9703  0B4E  0198               	clrf	24	;volatile
  9704                           
  9705                           ;mcc.c: 86: PMD3 = 0x00;
  9706  0B4F  0199               	clrf	25	;volatile
  9707                           
  9708                           ;mcc.c: 88: PMD4 = 0x00;
  9709  0B50  019A               	clrf	26	;volatile
  9710                           
  9711                           ;mcc.c: 90: PMD5 = 0x00;
  9712  0B51  019B               	clrf	27	;volatile
  9713  0B52                     l178:
  9714  0B52  0008               	return
  9715  0B53                     __end_of_PMD_Initialize:
  9716                           
  9717                           	psect	text16
  9718  0DEB                     __ptext16:	
  9719 ;; *************** function _PIN_MANAGER_Initialize *****************
  9720 ;; Defined at:
  9721 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  9722 ;; Parameters:    Size  Location     Type
  9723 ;;		None
  9724 ;; Auto vars:     Size  Location     Type
  9725 ;;		None
  9726 ;; Return value:  Size  Location     Type
  9727 ;;                  1    wreg      void 
  9728 ;; Registers used:
  9729 ;;		wreg, status,2
  9730 ;; Tracked objects:
  9731 ;;		On entry : 0/0
  9732 ;;		On exit  : 0/0
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9739 ;;Total ram usage:        0 bytes
  9740 ;; Hardware stack levels used:    1
  9741 ;; Hardware stack levels required when called:    7
  9742 ;; This function calls:
  9743 ;;		Nothing
  9744 ;; This function is called by:
  9745 ;;		_SYSTEM_Initialize
  9746 ;; This function uses a non-reentrant model
  9747 ;;
  9748                           
  9749                           
  9750                           ;psect for function _PIN_MANAGER_Initialize
  9751  0DEB                     _PIN_MANAGER_Initialize:
  9752  0DEB                     l3726:	
  9753                           ;incstack = 0
  9754                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9755                           
  9756                           
  9757                           ;pin_manager.c: 62: LATE = 0x00;
  9758  0DEB  0020               	movlb	0	; select bank0
  9759  0DEC  019A               	clrf	26	;volatile
  9760                           
  9761                           ;pin_manager.c: 63: LATD = 0x00;
  9762  0DED  0199               	clrf	25	;volatile
  9763                           
  9764                           ;pin_manager.c: 64: LATA = 0x00;
  9765  0DEE  0196               	clrf	22	;volatile
  9766                           
  9767                           ;pin_manager.c: 65: LATB = 0x00;
  9768  0DEF  0197               	clrf	23	;volatile
  9769                           
  9770                           ;pin_manager.c: 66: LATC = 0x00;
  9771  0DF0  0198               	clrf	24	;volatile
  9772  0DF1                     l3728:
  9773                           
  9774                           ;pin_manager.c: 71: TRISE = 0x07;
  9775  0DF1  3007               	movlw	7
  9776  0DF2  0095               	movwf	21	;volatile
  9777  0DF3                     l3730:
  9778                           
  9779                           ;pin_manager.c: 72: TRISA = 0x0F;
  9780  0DF3  300F               	movlw	15
  9781  0DF4  0091               	movwf	17	;volatile
  9782  0DF5                     l3732:
  9783                           
  9784                           ;pin_manager.c: 73: TRISB = 0xFF;
  9785  0DF5  30FF               	movlw	255
  9786  0DF6  0092               	movwf	18	;volatile
  9787  0DF7                     l3734:
  9788                           
  9789                           ;pin_manager.c: 74: TRISC = 0xFF;
  9790  0DF7  30FF               	movlw	255
  9791  0DF8  0093               	movwf	19	;volatile
  9792  0DF9                     l3736:
  9793                           
  9794                           ;pin_manager.c: 75: TRISD = 0xFF;
  9795  0DF9  30FF               	movlw	255
  9796  0DFA  0094               	movwf	20	;volatile
  9797  0DFB                     l3738:
  9798                           
  9799                           ;pin_manager.c: 80: ANSELD = 0xFF;
  9800  0DFB  30FF               	movlw	255
  9801  0DFC  003E               	movlb	30	; select bank30
  9802  0DFD  00D9               	movwf	89	;volatile
  9803  0DFE                     l3740:
  9804                           
  9805                           ;pin_manager.c: 81: ANSELC = 0xC7;
  9806  0DFE  30C7               	movlw	199
  9807  0DFF  00CE               	movwf	78	;volatile
  9808  0E00                     l3742:
  9809                           
  9810                           ;pin_manager.c: 82: ANSELB = 0xEF;
  9811  0E00  30EF               	movlw	239
  9812  0E01  00C3               	movwf	67	;volatile
  9813  0E02                     l3744:
  9814                           
  9815                           ;pin_manager.c: 83: ANSELE = 0x07;
  9816  0E02  3007               	movlw	7
  9817  0E03  00E4               	movwf	100	;volatile
  9818  0E04                     l3746:
  9819                           
  9820                           ;pin_manager.c: 84: ANSELA = 0x4F;
  9821  0E04  304F               	movlw	79
  9822  0E05  00B8               	movwf	56	;volatile
  9823                           
  9824                           ;pin_manager.c: 89: WPUD = 0x00;
  9825  0E06  01DA               	clrf	90	;volatile
  9826                           
  9827                           ;pin_manager.c: 90: WPUE = 0x00;
  9828  0E07  01E5               	clrf	101	;volatile
  9829                           
  9830                           ;pin_manager.c: 91: WPUB = 0x00;
  9831  0E08  01C4               	clrf	68	;volatile
  9832                           
  9833                           ;pin_manager.c: 92: WPUA = 0x00;
  9834  0E09  01B9               	clrf	57	;volatile
  9835                           
  9836                           ;pin_manager.c: 93: WPUC = 0x00;
  9837  0E0A  01CF               	clrf	79	;volatile
  9838                           
  9839                           ;pin_manager.c: 98: ODCONE = 0x00;
  9840  0E0B  01E6               	clrf	102	;volatile
  9841                           
  9842                           ;pin_manager.c: 99: ODCONA = 0x00;
  9843  0E0C  01BA               	clrf	58	;volatile
  9844                           
  9845                           ;pin_manager.c: 100: ODCONB = 0x00;
  9846  0E0D  01C5               	clrf	69	;volatile
  9847                           
  9848                           ;pin_manager.c: 101: ODCONC = 0x00;
  9849  0E0E  01D0               	clrf	80	;volatile
  9850                           
  9851                           ;pin_manager.c: 102: ODCOND = 0x00;
  9852  0E0F  01DB               	clrf	91	;volatile
  9853  0E10                     l3748:
  9854                           
  9855                           ;pin_manager.c: 107: SLRCONA = 0xFF;
  9856  0E10  30FF               	movlw	255
  9857  0E11  00BB               	movwf	59	;volatile
  9858  0E12                     l3750:
  9859                           
  9860                           ;pin_manager.c: 108: SLRCONB = 0xFF;
  9861  0E12  30FF               	movlw	255
  9862  0E13  00C6               	movwf	70	;volatile
  9863  0E14                     l3752:
  9864                           
  9865                           ;pin_manager.c: 109: SLRCONC = 0xFF;
  9866  0E14  30FF               	movlw	255
  9867  0E15  00D1               	movwf	81	;volatile
  9868  0E16                     l3754:
  9869                           
  9870                           ;pin_manager.c: 110: SLRCOND = 0xFF;
  9871  0E16  30FF               	movlw	255
  9872  0E17  00DC               	movwf	92	;volatile
  9873  0E18                     l3756:
  9874                           
  9875                           ;pin_manager.c: 111: SLRCONE = 0x07;
  9876  0E18  3007               	movlw	7
  9877  0E19  00E7               	movwf	103	;volatile
  9878  0E1A                     l3758:
  9879                           
  9880                           ;pin_manager.c: 120: SSP1CLKPPS = 0x13;
  9881  0E1A  3013               	movlw	19
  9882  0E1B  003D               	movlb	29	; select bank29
  9883  0E1C  00C5               	movwf	69	;volatile
  9884  0E1D                     l3760:
  9885                           
  9886                           ;pin_manager.c: 121: RC3PPS = 0x14;
  9887  0E1D  3014               	movlw	20
  9888  0E1E  003E               	movlb	30	; select bank30
  9889  0E1F  00A3               	movwf	35	;volatile
  9890  0E20                     l3762:
  9891                           
  9892                           ;pin_manager.c: 122: RC4PPS = 0x15;
  9893  0E20  3015               	movlw	21
  9894  0E21  00A4               	movwf	36	;volatile
  9895  0E22                     l3764:
  9896                           
  9897                           ;pin_manager.c: 123: RA6PPS = 0x0E;
  9898  0E22  300E               	movlw	14
  9899  0E23  0096               	movwf	22	;volatile
  9900  0E24                     l3766:
  9901                           
  9902                           ;pin_manager.c: 124: SSP1DATPPS = 0x14;
  9903  0E24  3014               	movlw	20
  9904  0E25  003D               	movlb	29	; select bank29
  9905  0E26  00C6               	movwf	70	;volatile
  9906  0E27                     l122:
  9907  0E27  0008               	return
  9908  0E28                     __end_of_PIN_MANAGER_Initialize:
  9909                           
  9910                           	psect	text17
  9911  0B53                     __ptext17:	
  9912 ;; *************** function _OSCILLATOR_Initialize *****************
  9913 ;; Defined at:
  9914 ;;		line 63 in file "mcc_generated_files/mcc.c"
  9915 ;; Parameters:    Size  Location     Type
  9916 ;;		None
  9917 ;; Auto vars:     Size  Location     Type
  9918 ;;		None
  9919 ;; Return value:  Size  Location     Type
  9920 ;;                  1    wreg      void 
  9921 ;; Registers used:
  9922 ;;		wreg, status,2
  9923 ;; Tracked objects:
  9924 ;;		On entry : 0/0
  9925 ;;		On exit  : 0/0
  9926 ;;		Unchanged: 0/0
  9927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9932 ;;Total ram usage:        0 bytes
  9933 ;; Hardware stack levels used:    1
  9934 ;; Hardware stack levels required when called:    7
  9935 ;; This function calls:
  9936 ;;		Nothing
  9937 ;; This function is called by:
  9938 ;;		_SYSTEM_Initialize
  9939 ;; This function uses a non-reentrant model
  9940 ;;
  9941                           
  9942                           
  9943                           ;psect for function _OSCILLATOR_Initialize
  9944  0B53                     _OSCILLATOR_Initialize:
  9945  0B53                     l3770:	
  9946                           ;incstack = 0
  9947                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9948                           
  9949                           
  9950                           ;mcc.c: 66: OSCCON1 = 0x62;
  9951  0B53  3062               	movlw	98
  9952  0B54  0031               	movlb	17	; select bank17
  9953  0B55  008D               	movwf	13	;volatile
  9954  0B56                     l3772:
  9955                           
  9956                           ;mcc.c: 68: OSCCON3 = 0x00;
  9957  0B56  018F               	clrf	15	;volatile
  9958  0B57                     l3774:
  9959                           
  9960                           ;mcc.c: 70: OSCEN = 0x00;
  9961  0B57  0191               	clrf	17	;volatile
  9962                           
  9963                           ;mcc.c: 72: OSCFRQ = 0x02;
  9964  0B58  3002               	movlw	2
  9965  0B59  0093               	movwf	19	;volatile
  9966  0B5A                     l3776:
  9967                           
  9968                           ;mcc.c: 74: OSCTUNE = 0x00;
  9969  0B5A  0192               	clrf	18	;volatile
  9970  0B5B                     l175:
  9971  0B5B  0008               	return
  9972  0B5C                     __end_of_OSCILLATOR_Initialize:
  9973                           
  9974                           	psect	text18
  9975  07E8                     __ptext18:	
  9976 ;; *************** function _ADCC_Initialize *****************
  9977 ;; Defined at:
  9978 ;;		line 63 in file "mcc_generated_files/adcc.c"
  9979 ;; Parameters:    Size  Location     Type
  9980 ;;		None
  9981 ;; Auto vars:     Size  Location     Type
  9982 ;;		None
  9983 ;; Return value:  Size  Location     Type
  9984 ;;                  1    wreg      void 
  9985 ;; Registers used:
  9986 ;;		wreg, status,2
  9987 ;; Tracked objects:
  9988 ;;		On entry : 0/0
  9989 ;;		On exit  : 0/0
  9990 ;;		Unchanged: 0/0
  9991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9996 ;;Total ram usage:        0 bytes
  9997 ;; Hardware stack levels used:    1
  9998 ;; Hardware stack levels required when called:    7
  9999 ;; This function calls:
 10000 ;;		Nothing
 10001 ;; This function is called by:
 10002 ;;		_SYSTEM_Initialize
 10003 ;; This function uses a non-reentrant model
 10004 ;;
 10005                           
 10006                           
 10007                           ;psect for function _ADCC_Initialize
 10008  07E8                     _ADCC_Initialize:
 10009  07E8                     l3782:	
 10010                           ;incstack = 0
 10011                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10012                           
 10013                           
 10014                           ;adcc.c: 67: ADLTHL = 0x00;
 10015  07E8  0022               	movlb	2	; select bank2
 10016  07E9  018E               	clrf	14	;volatile
 10017                           
 10018                           ;adcc.c: 69: ADLTHH = 0x00;
 10019  07EA  018F               	clrf	15	;volatile
 10020                           
 10021                           ;adcc.c: 71: ADUTHL = 0x00;
 10022  07EB  0190               	clrf	16	;volatile
 10023                           
 10024                           ;adcc.c: 73: ADUTHH = 0x00;
 10025  07EC  0191               	clrf	17	;volatile
 10026                           
 10027                           ;adcc.c: 75: ADSTPTL = 0x00;
 10028  07ED  0192               	clrf	18	;volatile
 10029                           
 10030                           ;adcc.c: 77: ADSTPTH = 0x00;
 10031  07EE  0193               	clrf	19	;volatile
 10032                           
 10033                           ;adcc.c: 79: ADRPT = 0x00;
 10034  07EF  018D               	clrf	13	;volatile
 10035                           
 10036                           ;adcc.c: 81: ADPCH = 0x00;
 10037  07F0  0021               	movlb	1	; select bank1
 10038  07F1  019E               	clrf	30	;volatile
 10039                           
 10040                           ;adcc.c: 83: ADCAP = 0x00;
 10041  07F2  019B               	clrf	27	;volatile
 10042                           
 10043                           ;adcc.c: 85: ADCON1 = 0x00;
 10044  07F3  0194               	clrf	20	;volatile
 10045                           
 10046                           ;adcc.c: 87: ADCON2 = 0x00;
 10047  07F4  0195               	clrf	21	;volatile
 10048                           
 10049                           ;adcc.c: 89: ADCON3 = 0x00;
 10050  07F5  0196               	clrf	22	;volatile
 10051                           
 10052                           ;adcc.c: 91: ADSTAT = 0x00;
 10053  07F6  0197               	clrf	23	;volatile
 10054                           
 10055                           ;adcc.c: 93: ADREF = 0x00;
 10056  07F7  019A               	clrf	26	;volatile
 10057                           
 10058                           ;adcc.c: 95: ADACT = 0x00;
 10059  07F8  0199               	clrf	25	;volatile
 10060                           
 10061                           ;adcc.c: 97: ADCLK = 0x00;
 10062  07F9  0198               	clrf	24	;volatile
 10063  07FA                     l3784:
 10064                           
 10065                           ;adcc.c: 99: ADCON0 = 0x80;
 10066  07FA  3080               	movlw	128
 10067  07FB  0093               	movwf	19	;volatile
 10068  07FC                     l3786:
 10069                           
 10070                           ;adcc.c: 101: ADACQ = 0xFF;
 10071  07FC  30FF               	movlw	255
 10072  07FD  009D               	movwf	29	;volatile
 10073  07FE                     l563:
 10074  07FE  0008               	return
 10075  07FF                     __end_of_ADCC_Initialize:
 10076                           
 10077                           	psect	text19
 10078  0B06                     __ptext19:	
 10079 ;; *************** function _PWM_Output_D4_Disable *****************
 10080 ;; Defined at:
 10081 ;;		line 228 in file "main.c"
 10082 ;; Parameters:    Size  Location     Type
 10083 ;;		None
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;		None
 10086 ;; Return value:  Size  Location     Type
 10087 ;;                  1    wreg      void 
 10088 ;; Registers used:
 10089 ;;		None
 10090 ;; Tracked objects:
 10091 ;;		On entry : 0/0
 10092 ;;		On exit  : 0/0
 10093 ;;		Unchanged: 0/0
 10094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10099 ;;Total ram usage:        0 bytes
 10100 ;; Hardware stack levels used:    1
 10101 ;; Hardware stack levels required when called:    7
 10102 ;; This function calls:
 10103 ;;		Nothing
 10104 ;; This function is called by:
 10105 ;;		_main
 10106 ;; This function uses a non-reentrant model
 10107 ;;
 10108                           
 10109                           
 10110                           ;psect for function _PWM_Output_D4_Disable
 10111  0B06                     _PWM_Output_D4_Disable:
 10112  0B06                     l4256:	
 10113                           ;incstack = 0
 10114                           ; Regs used in _PWM_Output_D4_Disable: []
 10115                           
 10116                           
 10117                           ;main.c: 229: PWM6EN = 0;
 10118  0B06  0027               	movlb	7	; select bank7
 10119  0B07  138E               	bcf	14,7	;volatile
 10120  0B08                     l1090:
 10121  0B08  0008               	return
 10122  0B09                     __end_of_PWM_Output_D4_Disable:
 10123                           
 10124                           	psect	text20
 10125  0772                     __ptext20:	
 10126 ;; *************** function _LCDinit *****************
 10127 ;; Defined at:
 10128 ;;		line 155 in file "main.c"
 10129 ;; Parameters:    Size  Location     Type
 10130 ;;		None
 10131 ;; Auto vars:     Size  Location     Type
 10132 ;;		None
 10133 ;; Return value:  Size  Location     Type
 10134 ;;                  1    wreg      void 
 10135 ;; Registers used:
 10136 ;;		wreg, status,2, status,0, pclath, cstack
 10137 ;; Tracked objects:
 10138 ;;		On entry : 0/0
 10139 ;;		On exit  : 0/0
 10140 ;;		Unchanged: 0/0
 10141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10144 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10145 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10146 ;;Total ram usage:        1 bytes
 10147 ;; Hardware stack levels used:    1
 10148 ;; Hardware stack levels required when called:    9
 10149 ;; This function calls:
 10150 ;;		_LCDsend
 10151 ;;		_LCDsend2x4
 10152 ;; This function is called by:
 10153 ;;		_main
 10154 ;; This function uses a non-reentrant model
 10155 ;;
 10156                           
 10157                           
 10158                           ;psect for function _LCDinit
 10159  0772                     _LCDinit:
 10160  0772                     l4222:	
 10161                           ;incstack = 0
 10162                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 10163                           
 10164                           
 10165                           ;main.c: 157: _delay((unsigned long)((50)*(1000000/4000.0)));
 10166  0772  3011               	movlw	17
 10167  0773  0021               	movlb	1	; select bank1
 10168  0774  00B2               	movwf	??_LCDinit^(0+128)
 10169  0775  303A               	movlw	58
 10170  0776                     u4387:
 10171  0776  0B89               	decfsz	9,f
 10172  0777  2F76               	goto	u4387
 10173  0778  0BB2               	decfsz	??_LCDinit^(0+128),f
 10174  0779  2F76               	goto	u4387
 10175  077A  0000               	nop
 10176  077B                     l4224:
 10177                           
 10178                           ;main.c: 158: LCDsend(0x30);
 10179  077B  3030               	movlw	48
 10180  077C  318E  2673  3187   	fcall	_LCDsend
 10181  077F                     l4226:
 10182                           
 10183                           ;main.c: 159: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 10184  077F  3034               	movlw	52
 10185  0780  318E  2673  3187   	fcall	_LCDsend
 10186  0783  3029               	movlw	41
 10187  0784                     u4397:
 10188  0784  0B89               	decfsz	9,f
 10189  0785  2F84               	goto	u4397
 10190  0786  3200               	nop2
 10191  0787                     l4228:
 10192  0787  3030               	movlw	48
 10193  0788  318E  2673  3187   	fcall	_LCDsend
 10194  078B                     l4230:
 10195                           
 10196                           ;main.c: 160: _delay((unsigned long)((5)*(1000000/4000.0)));
 10197  078B  30FA               	movlw	250
 10198  078C                     u4407:
 10199  078C  3200               	nop2
 10200  078D  0B89               	decfsz	9,f
 10201  078E  2F8C               	goto	u4407
 10202                           
 10203                           ;main.c: 161: LCDsend(0x30);
 10204  078F  3030               	movlw	48
 10205  0790  318E  2673  3187   	fcall	_LCDsend
 10206                           
 10207                           ;main.c: 162: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 10208  0793  3034               	movlw	52
 10209  0794  318E  2673  3187   	fcall	_LCDsend
 10210  0797                     l4232:
 10211  0797  3029               	movlw	41
 10212  0798                     u4417:
 10213  0798  0B89               	decfsz	9,f
 10214  0799  2F98               	goto	u4417
 10215  079A  3200               	nop2
 10216  079B                     l4234:
 10217  079B  3030               	movlw	48
 10218  079C  318E  2673  3187   	fcall	_LCDsend
 10219                           
 10220                           ;main.c: 163: _delay((unsigned long)((100)*(1000000/4000000.0)));
 10221  079F  3008               	movlw	8
 10222  07A0                     u4427:
 10223  07A0  0B89               	decfsz	9,f
 10224  07A1  2FA0               	goto	u4427
 10225  07A2  0000               	nop
 10226  07A3                     l4236:
 10227                           
 10228                           ;main.c: 164: LCDsend(0x30);
 10229  07A3  3030               	movlw	48
 10230  07A4  318E  2673  3187   	fcall	_LCDsend
 10231  07A7                     l4238:
 10232                           
 10233                           ;main.c: 165: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 10234  07A7  3034               	movlw	52
 10235  07A8  318E  2673  3187   	fcall	_LCDsend
 10236  07AB  3029               	movlw	41
 10237  07AC                     u4437:
 10238  07AC  0B89               	decfsz	9,f
 10239  07AD  2FAC               	goto	u4437
 10240  07AE  3200               	nop2
 10241  07AF                     l4240:
 10242  07AF  3030               	movlw	48
 10243  07B0  318E  2673  3187   	fcall	_LCDsend
 10244  07B3                     l4242:
 10245                           
 10246                           ;main.c: 166: _delay((unsigned long)((100)*(1000000/4000000.0)));
 10247  07B3  3008               	movlw	8
 10248  07B4                     u4447:
 10249  07B4  0B89               	decfsz	9,f
 10250  07B5  2FB4               	goto	u4447
 10251  07B6  0000               	nop
 10252                           
 10253                           ;main.c: 167: LCDsend(0x20);
 10254  07B7  3020               	movlw	32
 10255  07B8  318E  2673  3187   	fcall	_LCDsend
 10256                           
 10257                           ;main.c: 168: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
 10258  07BB  3024               	movlw	36
 10259  07BC  318E  2673  3187   	fcall	_LCDsend
 10260  07BF                     l4244:
 10261  07BF  3029               	movlw	41
 10262  07C0                     u4457:
 10263  07C0  0B89               	decfsz	9,f
 10264  07C1  2FC0               	goto	u4457
 10265  07C2  3200               	nop2
 10266  07C3                     l4246:
 10267  07C3  3020               	movlw	32
 10268  07C4  318E  2673  3187   	fcall	_LCDsend
 10269                           
 10270                           ;main.c: 169: _delay((unsigned long)((5)*(1000000/4000.0)));
 10271  07C7  30FA               	movlw	250
 10272  07C8                     u4467:
 10273  07C8  3200               	nop2
 10274  07C9  0B89               	decfsz	9,f
 10275  07CA  2FC8               	goto	u4467
 10276  07CB                     l4248:
 10277                           
 10278                           ;main.c: 171: LCDsend2x4(0x28, 0);
 10279  07CB  0021               	movlb	1	; select bank1
 10280  07CC  01AC               	clrf	LCDsend2x4@mode^(0+128)
 10281  07CD  3028               	movlw	40
 10282  07CE  3184  24DF  3187   	fcall	_LCDsend2x4
 10283  07D1                     l4250:
 10284                           
 10285                           ;main.c: 172: LCDsend2x4(0x06, 0);
 10286  07D1  0021               	movlb	1	; select bank1
 10287  07D2  01AC               	clrf	LCDsend2x4@mode^(0+128)
 10288  07D3  3006               	movlw	6
 10289  07D4  3184  24DF  3187   	fcall	_LCDsend2x4
 10290  07D7                     l4252:
 10291                           
 10292                           ;main.c: 173: LCDsend2x4(0x0f, 0);
 10293  07D7  0021               	movlb	1	; select bank1
 10294  07D8  01AC               	clrf	LCDsend2x4@mode^(0+128)
 10295  07D9  300F               	movlw	15
 10296  07DA  3184  24DF  3187   	fcall	_LCDsend2x4
 10297  07DD                     l4254:
 10298                           
 10299                           ;main.c: 174: LCDsend2x4(0x01, 0);
 10300  07DD  0021               	movlb	1	; select bank1
 10301  07DE  01AC               	clrf	LCDsend2x4@mode^(0+128)
 10302  07DF  3001               	movlw	1
 10303  07E0  3184  24DF  3187   	fcall	_LCDsend2x4
 10304                           
 10305                           ;main.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
 10306  07E3  30A6               	movlw	166
 10307  07E4                     u4477:
 10308  07E4  0B89               	decfsz	9,f
 10309  07E5  2FE4               	goto	u4477
 10310  07E6  3200               	nop2
 10311  07E7                     l1059:
 10312  07E7  0008               	return
 10313  07E8                     __end_of_LCDinit:
 10314                           
 10315                           	psect	text21
 10316  04DF                     __ptext21:	
 10317 ;; *************** function _LCDsend2x4 *****************
 10318 ;; Defined at:
 10319 ;;		line 132 in file "main.c"
 10320 ;; Parameters:    Size  Location     Type
 10321 ;;  c               1    wreg     unsigned char 
 10322 ;;  mode            1    2[BANK1 ] unsigned char 
 10323 ;; Auto vars:     Size  Location     Type
 10324 ;;  c               1    5[BANK1 ] unsigned char 
 10325 ;;  lc              1    7[BANK1 ] unsigned char 
 10326 ;;  hc              1    6[BANK1 ] unsigned char 
 10327 ;; Return value:  Size  Location     Type
 10328 ;;                  1    wreg      void 
 10329 ;; Registers used:
 10330 ;;		wreg, status,2, status,0, pclath, cstack
 10331 ;; Tracked objects:
 10332 ;;		On entry : 0/0
 10333 ;;		On exit  : 0/0
 10334 ;;		Unchanged: 0/0
 10335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10336 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10337 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10338 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10339 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10340 ;;Total ram usage:        6 bytes
 10341 ;; Hardware stack levels used:    1
 10342 ;; Hardware stack levels required when called:    8
 10343 ;; This function calls:
 10344 ;;		_WriteI2C
 10345 ;; This function is called by:
 10346 ;;		_LCDinit
 10347 ;; This function uses a non-reentrant model
 10348 ;;
 10349                           
 10350                           
 10351                           ;psect for function _LCDsend2x4
 10352  04DF                     _LCDsend2x4:
 10353                           
 10354                           ;incstack = 0
 10355                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 10356                           ;LCDsend2x4@c stored from wreg
 10357  04DF  0021               	movlb	1	; select bank1
 10358  04E0  00AF               	movwf	LCDsend2x4@c^(0+128)
 10359  04E1                     l3912:
 10360                           
 10361                           ;main.c: 134: unsigned char hc;;main.c: 135: unsigned char lc;;main.c: 137: hc = c & 0xf
      +                          0;
 10362  04E1  082F               	movf	LCDsend2x4@c^(0+128),w
 10363  04E2  39F0               	andlw	240
 10364  04E3  00AD               	movwf	??_LCDsend2x4^(0+128)
 10365  04E4  082D               	movf	??_LCDsend2x4^(0+128),w
 10366  04E5  00B0               	movwf	LCDsend2x4@hc^(0+128)
 10367  04E6                     l3914:
 10368                           
 10369                           ;main.c: 138: lc = (c << 4) & 0xf0;
 10370  04E6  082F               	movf	LCDsend2x4@c^(0+128),w
 10371  04E7  00AD               	movwf	??_LCDsend2x4^(0+128)
 10372  04E8  3003               	movlw	3
 10373  04E9                     u3285:
 10374  04E9  35AD               	lslf	??_LCDsend2x4^(0+128),f
 10375  04EA  3EFF               	addlw	-1
 10376  04EB  1D03               	skipz
 10377  04EC  2CE9               	goto	u3285
 10378  04ED  352D               	lslf	??_LCDsend2x4^(0+128),w
 10379  04EE  39F0               	andlw	240
 10380  04EF  00AE               	movwf	(??_LCDsend2x4+1)^(0+128)
 10381  04F0  082E               	movf	(??_LCDsend2x4+1)^(0+128),w
 10382  04F1  00B1               	movwf	LCDsend2x4@lc^(0+128)
 10383  04F2                     l3916:	
 10384                           ;main.c: 140: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10385                           
 10386  04F2  0023               	movlb	3	; select bank3
 10387  04F3  0C0F               	rrf	15,w	;volatile
 10388  04F4  0C89               	rrf	9,f
 10389  04F5  3901               	andlw	1
 10390  04F6  0021               	movlb	1	; select bank1
 10391  04F7  00AD               	movwf	??_LCDsend2x4^(0+128)
 10392  04F8  0023               	movlb	3	; select bank3
 10393  04F9  0811               	movf	17,w	;volatile
 10394  04FA  391F               	andlw	31
 10395  04FB  0021               	movlb	1	; select bank1
 10396  04FC  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10397  04FD  1D03               	btfss	3,2
 10398  04FE  2D00               	goto	u3291
 10399  04FF  2D01               	goto	u3290
 10400  0500                     u3291:
 10401  0500  2CF2               	goto	l3916
 10402  0501                     u3290:
 10403  0501                     l1025:
 10404                           
 10405                           ;main.c: 141: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 10406  0501  0023               	movlb	3	; select bank3
 10407  0502  1411               	bsf	17,0	;volatile
 10408  0503                     l1026:
 10409  0503  1811               	btfsc	17,0	;volatile
 10410  0504  2D06               	goto	u3301
 10411  0505  2D07               	goto	u3300
 10412  0506                     u3301:
 10413  0506  2D03               	goto	l1026
 10414  0507                     u3300:
 10415  0507                     l3918:
 10416  0507  0023               	movlb	3	; select bank3
 10417  0508  0C0F               	rrf	15,w	;volatile
 10418  0509  0C89               	rrf	9,f
 10419  050A  3901               	andlw	1
 10420  050B  0021               	movlb	1	; select bank1
 10421  050C  00AD               	movwf	??_LCDsend2x4^(0+128)
 10422  050D  0023               	movlb	3	; select bank3
 10423  050E  0811               	movf	17,w	;volatile
 10424  050F  391F               	andlw	31
 10425  0510  0021               	movlb	1	; select bank1
 10426  0511  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10427  0512  1D03               	btfss	3,2
 10428  0513  2D15               	goto	u3311
 10429  0514  2D16               	goto	u3310
 10430  0515                     u3311:
 10431  0515  2D07               	goto	l3918
 10432  0516                     u3310:
 10433  0516                     l3920:
 10434                           
 10435                           ;main.c: 142: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10436  0516  304E               	movlw	78
 10437  0517  318E  26C6  3184   	fcall	_WriteI2C
 10438  051A                     l3922:
 10439  051A  0023               	movlb	3	; select bank3
 10440  051B  0C0F               	rrf	15,w	;volatile
 10441  051C  0C89               	rrf	9,f
 10442  051D  3901               	andlw	1
 10443  051E  0021               	movlb	1	; select bank1
 10444  051F  00AD               	movwf	??_LCDsend2x4^(0+128)
 10445  0520  0023               	movlb	3	; select bank3
 10446  0521  0811               	movf	17,w	;volatile
 10447  0522  391F               	andlw	31
 10448  0523  0021               	movlb	1	; select bank1
 10449  0524  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10450  0525  1D03               	btfss	3,2
 10451  0526  2D28               	goto	u3321
 10452  0527  2D29               	goto	u3320
 10453  0528                     u3321:
 10454  0528  2D1A               	goto	l3922
 10455  0529                     u3320:
 10456  0529                     l3924:
 10457                           
 10458                           ;main.c: 143: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10459  0529  0830               	movf	LCDsend2x4@hc^(0+128),w
 10460  052A  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 10461  052B  3808               	iorlw	8
 10462  052C  318E  26C6  3184   	fcall	_WriteI2C
 10463  052F                     l3926:
 10464  052F  0023               	movlb	3	; select bank3
 10465  0530  0C0F               	rrf	15,w	;volatile
 10466  0531  0C89               	rrf	9,f
 10467  0532  3901               	andlw	1
 10468  0533  0021               	movlb	1	; select bank1
 10469  0534  00AD               	movwf	??_LCDsend2x4^(0+128)
 10470  0535  0023               	movlb	3	; select bank3
 10471  0536  0811               	movf	17,w	;volatile
 10472  0537  391F               	andlw	31
 10473  0538  0021               	movlb	1	; select bank1
 10474  0539  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10475  053A  1D03               	btfss	3,2
 10476  053B  2D3D               	goto	u3331
 10477  053C  2D3E               	goto	u3330
 10478  053D                     u3331:
 10479  053D  2D2F               	goto	l3926
 10480  053E                     u3330:
 10481  053E                     l3928:
 10482                           
 10483                           ;main.c: 144: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 10484  053E  0830               	movf	LCDsend2x4@hc^(0+128),w
 10485  053F  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 10486  0540  380C               	iorlw	12
 10487  0541  318E  26C6  3184   	fcall	_WriteI2C
 10488  0544                     l3930:
 10489  0544  0023               	movlb	3	; select bank3
 10490  0545  0C0F               	rrf	15,w	;volatile
 10491  0546  0C89               	rrf	9,f
 10492  0547  3901               	andlw	1
 10493  0548  0021               	movlb	1	; select bank1
 10494  0549  00AD               	movwf	??_LCDsend2x4^(0+128)
 10495  054A  0023               	movlb	3	; select bank3
 10496  054B  0811               	movf	17,w	;volatile
 10497  054C  391F               	andlw	31
 10498  054D  0021               	movlb	1	; select bank1
 10499  054E  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10500  054F  1D03               	btfss	3,2
 10501  0550  2D52               	goto	u3341
 10502  0551  2D53               	goto	u3340
 10503  0552                     u3341:
 10504  0552  2D44               	goto	l3930
 10505  0553                     u3340:
 10506  0553                     l1040:
 10507  0553                     l3932:	
 10508                           ;main.c: 145: _delay((unsigned long)((1)*(1000000/4000000.0)));
 10509                           
 10510                           
 10511                           ;main.c: 146: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10512  0553  0021               	movlb	1	; select bank1
 10513  0554  0830               	movf	LCDsend2x4@hc^(0+128),w
 10514  0555  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 10515  0556  3808               	iorlw	8
 10516  0557  318E  26C6  3184   	fcall	_WriteI2C
 10517  055A                     l3934:
 10518  055A  0023               	movlb	3	; select bank3
 10519  055B  0C0F               	rrf	15,w	;volatile
 10520  055C  0C89               	rrf	9,f
 10521  055D  3901               	andlw	1
 10522  055E  0021               	movlb	1	; select bank1
 10523  055F  00AD               	movwf	??_LCDsend2x4^(0+128)
 10524  0560  0023               	movlb	3	; select bank3
 10525  0561  0811               	movf	17,w	;volatile
 10526  0562  391F               	andlw	31
 10527  0563  0021               	movlb	1	; select bank1
 10528  0564  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10529  0565  1D03               	btfss	3,2
 10530  0566  2D68               	goto	u3351
 10531  0567  2D69               	goto	u3350
 10532  0568                     u3351:
 10533  0568  2D5A               	goto	l3934
 10534  0569                     u3350:
 10535  0569                     l3936:
 10536                           
 10537                           ;main.c: 147: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10538  0569  0831               	movf	LCDsend2x4@lc^(0+128),w
 10539  056A  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 10540  056B  3808               	iorlw	8
 10541  056C  318E  26C6  3184   	fcall	_WriteI2C
 10542  056F                     l3938:
 10543  056F  0023               	movlb	3	; select bank3
 10544  0570  0C0F               	rrf	15,w	;volatile
 10545  0571  0C89               	rrf	9,f
 10546  0572  3901               	andlw	1
 10547  0573  0021               	movlb	1	; select bank1
 10548  0574  00AD               	movwf	??_LCDsend2x4^(0+128)
 10549  0575  0023               	movlb	3	; select bank3
 10550  0576  0811               	movf	17,w	;volatile
 10551  0577  391F               	andlw	31
 10552  0578  0021               	movlb	1	; select bank1
 10553  0579  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10554  057A  1D03               	btfss	3,2
 10555  057B  2D7D               	goto	u3361
 10556  057C  2D7E               	goto	u3360
 10557  057D                     u3361:
 10558  057D  2D6F               	goto	l3938
 10559  057E                     u3360:
 10560  057E                     l3940:
 10561                           
 10562                           ;main.c: 148: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 10563  057E  0831               	movf	LCDsend2x4@lc^(0+128),w
 10564  057F  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 10565  0580  380C               	iorlw	12
 10566  0581  318E  26C6  3184   	fcall	_WriteI2C
 10567  0584                     l3942:
 10568  0584  0023               	movlb	3	; select bank3
 10569  0585  0C0F               	rrf	15,w	;volatile
 10570  0586  0C89               	rrf	9,f
 10571  0587  3901               	andlw	1
 10572  0588  0021               	movlb	1	; select bank1
 10573  0589  00AD               	movwf	??_LCDsend2x4^(0+128)
 10574  058A  0023               	movlb	3	; select bank3
 10575  058B  0811               	movf	17,w	;volatile
 10576  058C  391F               	andlw	31
 10577  058D  0021               	movlb	1	; select bank1
 10578  058E  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10579  058F  1D03               	btfss	3,2
 10580  0590  2D92               	goto	u3371
 10581  0591  2D93               	goto	u3370
 10582  0592                     u3371:
 10583  0592  2D84               	goto	l3942
 10584  0593                     u3370:
 10585  0593                     l1049:
 10586  0593                     l3944:	
 10587                           ;main.c: 149: _delay((unsigned long)((1)*(1000000/4000000.0)));
 10588                           
 10589                           
 10590                           ;main.c: 150: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10591  0593  0021               	movlb	1	; select bank1
 10592  0594  0831               	movf	LCDsend2x4@lc^(0+128),w
 10593  0595  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 10594  0596  3808               	iorlw	8
 10595  0597  318E  26C6  3184   	fcall	_WriteI2C
 10596  059A                     l3946:
 10597  059A  0023               	movlb	3	; select bank3
 10598  059B  0C0F               	rrf	15,w	;volatile
 10599  059C  0C89               	rrf	9,f
 10600  059D  3901               	andlw	1
 10601  059E  0021               	movlb	1	; select bank1
 10602  059F  00AD               	movwf	??_LCDsend2x4^(0+128)
 10603  05A0  0023               	movlb	3	; select bank3
 10604  05A1  0811               	movf	17,w	;volatile
 10605  05A2  391F               	andlw	31
 10606  05A3  0021               	movlb	1	; select bank1
 10607  05A4  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10608  05A5  1D03               	btfss	3,2
 10609  05A6  2DA8               	goto	u3381
 10610  05A7  2DA9               	goto	u3380
 10611  05A8                     u3381:
 10612  05A8  2D9A               	goto	l3946
 10613  05A9                     u3380:
 10614  05A9                     l1052:
 10615                           
 10616                           ;main.c: 151: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 10617  05A9  0023               	movlb	3	; select bank3
 10618  05AA  1511               	bsf	17,2	;volatile
 10619  05AB                     l1053:
 10620  05AB  1911               	btfsc	17,2	;volatile
 10621  05AC  2DAE               	goto	u3391
 10622  05AD  2DAF               	goto	u3390
 10623  05AE                     u3391:
 10624  05AE  2DAB               	goto	l1053
 10625  05AF                     u3390:
 10626  05AF                     l3948:
 10627                           
 10628                           ;main.c: 152: _delay((unsigned long)((50)*(1000000/4000000.0)));
 10629  05AF  3004               	movlw	4
 10630  05B0                     u4487:
 10631  05B0  0B89               	decfsz	9,f
 10632  05B1  2DB0               	goto	u4487
 10633  05B2                     l1056:
 10634  05B2  0008               	return
 10635  05B3                     __end_of_LCDsend2x4:
 10636                           
 10637                           	psect	text22
 10638  0E73                     __ptext22:	
 10639 ;; *************** function _LCDsend *****************
 10640 ;; Defined at:
 10641 ;;		line 93 in file "main.c"
 10642 ;; Parameters:    Size  Location     Type
 10643 ;;  c               1    wreg     unsigned char 
 10644 ;; Auto vars:     Size  Location     Type
 10645 ;;  c               1    3[BANK1 ] unsigned char 
 10646 ;; Return value:  Size  Location     Type
 10647 ;;                  1    wreg      void 
 10648 ;; Registers used:
 10649 ;;		wreg, status,2, status,0, pclath, cstack
 10650 ;; Tracked objects:
 10651 ;;		On entry : 0/0
 10652 ;;		On exit  : 0/0
 10653 ;;		Unchanged: 0/0
 10654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10656 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10657 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10658 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10659 ;;Total ram usage:        2 bytes
 10660 ;; Hardware stack levels used:    1
 10661 ;; Hardware stack levels required when called:    8
 10662 ;; This function calls:
 10663 ;;		_WriteI2C
 10664 ;; This function is called by:
 10665 ;;		_LCDinit
 10666 ;; This function uses a non-reentrant model
 10667 ;;
 10668                           
 10669                           
 10670                           ;psect for function _LCDsend
 10671  0E73                     _LCDsend:
 10672                           
 10673                           ;incstack = 0
 10674                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 10675                           ;LCDsend@c stored from wreg
 10676  0E73  0021               	movlb	1	; select bank1
 10677  0E74  00AD               	movwf	LCDsend@c^(0+128)
 10678  0E75                     l3898:
 10679  0E75                     l3900:	
 10680                           ;main.c: 95: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10681                           
 10682  0E75  0023               	movlb	3	; select bank3
 10683  0E76  0C0F               	rrf	15,w	;volatile
 10684  0E77  0C89               	rrf	9,f
 10685  0E78  3901               	andlw	1
 10686  0E79  0021               	movlb	1	; select bank1
 10687  0E7A  00AC               	movwf	??_LCDsend^(0+128)
 10688  0E7B  0023               	movlb	3	; select bank3
 10689  0E7C  0811               	movf	17,w	;volatile
 10690  0E7D  391F               	andlw	31
 10691  0E7E  0021               	movlb	1	; select bank1
 10692  0E7F  042C               	iorwf	??_LCDsend^(0+128),w
 10693  0E80  1D03               	btfss	3,2
 10694  0E81  2E83               	goto	u3221
 10695  0E82  2E84               	goto	u3220
 10696  0E83                     u3221:
 10697  0E83  2E75               	goto	l3900
 10698  0E84                     u3220:
 10699  0E84                     l923:
 10700                           
 10701                           ;main.c: 96: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 10702  0E84  0023               	movlb	3	; select bank3
 10703  0E85  1411               	bsf	17,0	;volatile
 10704  0E86                     l924:
 10705  0E86  1811               	btfsc	17,0	;volatile
 10706  0E87  2E89               	goto	u3231
 10707  0E88  2E8A               	goto	u3230
 10708  0E89                     u3231:
 10709  0E89  2E86               	goto	l924
 10710  0E8A                     u3230:
 10711  0E8A                     l3902:
 10712  0E8A  0023               	movlb	3	; select bank3
 10713  0E8B  0C0F               	rrf	15,w	;volatile
 10714  0E8C  0C89               	rrf	9,f
 10715  0E8D  3901               	andlw	1
 10716  0E8E  0021               	movlb	1	; select bank1
 10717  0E8F  00AC               	movwf	??_LCDsend^(0+128)
 10718  0E90  0023               	movlb	3	; select bank3
 10719  0E91  0811               	movf	17,w	;volatile
 10720  0E92  391F               	andlw	31
 10721  0E93  0021               	movlb	1	; select bank1
 10722  0E94  042C               	iorwf	??_LCDsend^(0+128),w
 10723  0E95  1D03               	btfss	3,2
 10724  0E96  2E98               	goto	u3241
 10725  0E97  2E99               	goto	u3240
 10726  0E98                     u3241:
 10727  0E98  2E8A               	goto	l3902
 10728  0E99                     u3240:
 10729  0E99                     l3904:
 10730                           
 10731                           ;main.c: 97: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10732  0E99  304E               	movlw	78
 10733  0E9A  318E  26C6  318E   	fcall	_WriteI2C
 10734  0E9D                     l3906:
 10735  0E9D  0023               	movlb	3	; select bank3
 10736  0E9E  0C0F               	rrf	15,w	;volatile
 10737  0E9F  0C89               	rrf	9,f
 10738  0EA0  3901               	andlw	1
 10739  0EA1  0021               	movlb	1	; select bank1
 10740  0EA2  00AC               	movwf	??_LCDsend^(0+128)
 10741  0EA3  0023               	movlb	3	; select bank3
 10742  0EA4  0811               	movf	17,w	;volatile
 10743  0EA5  391F               	andlw	31
 10744  0EA6  0021               	movlb	1	; select bank1
 10745  0EA7  042C               	iorwf	??_LCDsend^(0+128),w
 10746  0EA8  1D03               	btfss	3,2
 10747  0EA9  2EAB               	goto	u3251
 10748  0EAA  2EAC               	goto	u3250
 10749  0EAB                     u3251:
 10750  0EAB  2E9D               	goto	l3906
 10751  0EAC                     u3250:
 10752  0EAC                     l3908:
 10753                           
 10754                           ;main.c: 98: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10755  0EAC  082D               	movf	LCDsend@c^(0+128),w
 10756  0EAD  318E  26C6  318E   	fcall	_WriteI2C
 10757  0EB0                     l3910:
 10758  0EB0  0023               	movlb	3	; select bank3
 10759  0EB1  0C0F               	rrf	15,w	;volatile
 10760  0EB2  0C89               	rrf	9,f
 10761  0EB3  3901               	andlw	1
 10762  0EB4  0021               	movlb	1	; select bank1
 10763  0EB5  00AC               	movwf	??_LCDsend^(0+128)
 10764  0EB6  0023               	movlb	3	; select bank3
 10765  0EB7  0811               	movf	17,w	;volatile
 10766  0EB8  391F               	andlw	31
 10767  0EB9  0021               	movlb	1	; select bank1
 10768  0EBA  042C               	iorwf	??_LCDsend^(0+128),w
 10769  0EBB  1D03               	btfss	3,2
 10770  0EBC  2EBE               	goto	u3261
 10771  0EBD  2EBF               	goto	u3260
 10772  0EBE                     u3261:
 10773  0EBE  2EB0               	goto	l3910
 10774  0EBF                     u3260:
 10775  0EBF                     l935:
 10776                           
 10777                           ;main.c: 99: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 10778  0EBF  0023               	movlb	3	; select bank3
 10779  0EC0  1511               	bsf	17,2	;volatile
 10780  0EC1                     l936:
 10781  0EC1  1911               	btfsc	17,2	;volatile
 10782  0EC2  2EC4               	goto	u3271
 10783  0EC3  2EC5               	goto	u3270
 10784  0EC4                     u3271:
 10785  0EC4  2EC1               	goto	l936
 10786  0EC5                     u3270:
 10787  0EC5                     l939:
 10788  0EC5  0008               	return
 10789  0EC6                     __end_of_LCDsend:
 10790                           
 10791                           	psect	text23
 10792  0EC6                     __ptext23:	
 10793 ;; *************** function _WriteI2C *****************
 10794 ;; Defined at:
 10795 ;;		line 47 in file "I2C/i2c.c"
 10796 ;; Parameters:    Size  Location     Type
 10797 ;;  data_out        1    wreg     unsigned char 
 10798 ;; Auto vars:     Size  Location     Type
 10799 ;;  data_out        1    1[BANK1 ] unsigned char 
 10800 ;; Return value:  Size  Location     Type
 10801 ;;                  1    wreg      char 
 10802 ;; Registers used:
 10803 ;;		wreg, status,2, status,0
 10804 ;; Tracked objects:
 10805 ;;		On entry : 0/0
 10806 ;;		On exit  : 0/0
 10807 ;;		Unchanged: 0/0
 10808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10810 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10811 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10812 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10813 ;;Total ram usage:        2 bytes
 10814 ;; Hardware stack levels used:    1
 10815 ;; Hardware stack levels required when called:    7
 10816 ;; This function calls:
 10817 ;;		Nothing
 10818 ;; This function is called by:
 10819 ;;		_LCDsend
 10820 ;;		_LCDsend2x4
 10821 ;;		_LCDrecv
 10822 ;; This function uses a non-reentrant model
 10823 ;;
 10824                           
 10825                           
 10826                           ;psect for function _WriteI2C
 10827  0EC6                     _WriteI2C:
 10828                           
 10829                           ;incstack = 0
 10830                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 10831                           ;WriteI2C@data_out stored from wreg
 10832  0EC6  0021               	movlb	1	; select bank1
 10833  0EC7  00AB               	movwf	WriteI2C@data_out^(0+128)
 10834  0EC8                     l3484:
 10835                           
 10836                           ;i2c.c: 49: SSP1BUF = data_out;
 10837  0EC8  082B               	movf	WriteI2C@data_out^(0+128),w
 10838  0EC9  0023               	movlb	3	; select bank3
 10839  0ECA  008C               	movwf	12	;volatile
 10840  0ECB                     l3486:
 10841                           
 10842                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 10843  0ECB  1F90               	btfss	16,7	;volatile
 10844  0ECC  2ECE               	goto	u2621
 10845  0ECD  2ECF               	goto	u2620
 10846  0ECE                     u2621:
 10847  0ECE  2ED0               	goto	l3492
 10848  0ECF                     u2620:
 10849  0ECF  2F1F               	goto	l30
 10850  0ED0                     l3492:
 10851                           
 10852                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 10853  0ED0  300F               	movlw	15
 10854  0ED1  0510               	andwf	16,w	;volatile
 10855  0ED2  0021               	movlb	1	; select bank1
 10856  0ED3  00AA               	movwf	??_WriteI2C^(0+128)
 10857  0ED4  3008               	movlw	8
 10858  0ED5  062A               	xorwf	??_WriteI2C^(0+128),w
 10859  0ED6  1903               	btfsc	3,2
 10860  0ED7  2ED9               	goto	u2631
 10861  0ED8  2EDA               	goto	u2630
 10862  0ED9                     u2631:
 10863  0ED9  2EF3               	goto	l3504
 10864  0EDA                     u2630:
 10865  0EDA                     l3494:
 10866  0EDA  300F               	movlw	15
 10867  0EDB  0023               	movlb	3	; select bank3
 10868  0EDC  0510               	andwf	16,w	;volatile
 10869  0EDD  0021               	movlb	1	; select bank1
 10870  0EDE  00AA               	movwf	??_WriteI2C^(0+128)
 10871  0EDF  300B               	movlw	11
 10872  0EE0  062A               	xorwf	??_WriteI2C^(0+128),w
 10873  0EE1  1903               	btfsc	3,2
 10874  0EE2  2EE4               	goto	u2641
 10875  0EE3  2EE5               	goto	u2640
 10876  0EE4                     u2641:
 10877  0EE4  2EF3               	goto	l3504
 10878  0EE5                     u2640:
 10879  0EE5                     l3496:
 10880                           
 10881                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 10882  0EE5  0023               	movlb	3	; select bank3
 10883  0EE6  1610               	bsf	16,4	;volatile
 10884  0EE7                     l33:	
 10885                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 10886                           
 10887  0EE7  002E               	movlb	14	; select bank14
 10888  0EE8  1C0F               	btfss	15,0	;volatile
 10889  0EE9  2EEB               	goto	u2651
 10890  0EEA  2EEC               	goto	u2650
 10891  0EEB                     u2651:
 10892  0EEB  2EE7               	goto	l33
 10893  0EEC                     u2650:
 10894  0EEC                     l35:
 10895                           
 10896                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 10897  0EEC  0023               	movlb	3	; select bank3
 10898  0EED  190F               	btfsc	15,2	;volatile
 10899  0EEE  2EF0               	goto	u2661
 10900  0EEF  2EF1               	goto	u2660
 10901  0EF0                     u2661:
 10902  0EF0  2F1F               	goto	l30
 10903  0EF1                     u2660:
 10904  0EF1                     l3498:
 10905  0EF1  080F               	movf	15,w	;volatile
 10906  0EF2  2F1F               	goto	l30
 10907  0EF3                     l3504:
 10908                           
 10909                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 10910  0EF3  300F               	movlw	15
 10911  0EF4  0023               	movlb	3	; select bank3
 10912  0EF5  0510               	andwf	16,w	;volatile
 10913  0EF6  0021               	movlb	1	; select bank1
 10914  0EF7  00AA               	movwf	??_WriteI2C^(0+128)
 10915  0EF8  3008               	movlw	8
 10916  0EF9  062A               	xorwf	??_WriteI2C^(0+128),w
 10917  0EFA  1903               	btfsc	3,2
 10918  0EFB  2EFD               	goto	u2671
 10919  0EFC  2EFE               	goto	u2670
 10920  0EFD                     u2671:
 10921  0EFD  2F09               	goto	l42
 10922  0EFE                     u2670:
 10923  0EFE                     l3506:
 10924  0EFE  300F               	movlw	15
 10925  0EFF  0023               	movlb	3	; select bank3
 10926  0F00  0510               	andwf	16,w	;volatile
 10927  0F01  0021               	movlb	1	; select bank1
 10928  0F02  00AA               	movwf	??_WriteI2C^(0+128)
 10929  0F03  300B               	movlw	11
 10930  0F04  062A               	xorwf	??_WriteI2C^(0+128),w
 10931  0F05  1D03               	btfss	3,2
 10932  0F06  2F08               	goto	u2681
 10933  0F07  2F09               	goto	u2680
 10934  0F08                     u2681:
 10935  0F08  2F1F               	goto	l30
 10936  0F09                     u2680:
 10937  0F09                     l42:
 10938  0F09  0023               	movlb	3	; select bank3
 10939  0F0A  180F               	btfsc	15,0	;volatile
 10940  0F0B  2F0D               	goto	u2691
 10941  0F0C  2F0E               	goto	u2690
 10942  0F0D                     u2691:
 10943  0F0D  2F09               	goto	l42
 10944  0F0E                     u2690:
 10945  0F0E                     l3508:
 10946  0F0E  0023               	movlb	3	; select bank3
 10947  0F0F  0C0F               	rrf	15,w	;volatile
 10948  0F10  0C89               	rrf	9,f
 10949  0F11  3901               	andlw	1
 10950  0F12  0021               	movlb	1	; select bank1
 10951  0F13  00AA               	movwf	??_WriteI2C^(0+128)
 10952  0F14  0023               	movlb	3	; select bank3
 10953  0F15  0811               	movf	17,w	;volatile
 10954  0F16  391F               	andlw	31
 10955  0F17  0021               	movlb	1	; select bank1
 10956  0F18  042A               	iorwf	??_WriteI2C^(0+128),w
 10957  0F19  1D03               	btfss	3,2
 10958  0F1A  2F1C               	goto	u2701
 10959  0F1B  2F1D               	goto	u2700
 10960  0F1C                     u2701:
 10961  0F1C  2F0E               	goto	l3508
 10962  0F1D                     u2700:
 10963  0F1D                     l47:
 10964                           
 10965                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 10966  0F1D  0023               	movlb	3	; select bank3
 10967  0F1E  0811               	movf	17,w	;volatile
 10968  0F1F                     l30:
 10969  0F1F  0008               	return
 10970  0F20                     __end_of_WriteI2C:
 10971                           
 10972                           	psect	intentry
 10973  0004                     __pintentry:	
 10974 ;; *************** function _INTERRUPT_InterruptManager *****************
 10975 ;; Defined at:
 10976 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10977 ;; Parameters:    Size  Location     Type
 10978 ;;		None
 10979 ;; Auto vars:     Size  Location     Type
 10980 ;;		None
 10981 ;; Return value:  Size  Location     Type
 10982 ;;                  1    wreg      void 
 10983 ;; Registers used:
 10984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10985 ;; Tracked objects:
 10986 ;;		On entry : 0/0
 10987 ;;		On exit  : 0/0
 10988 ;;		Unchanged: 0/0
 10989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10994 ;;Total ram usage:        0 bytes
 10995 ;; Hardware stack levels used:    1
 10996 ;; Hardware stack levels required when called:    6
 10997 ;; This function calls:
 10998 ;;		_TMR1_ISR
 10999 ;;		_TMR3_ISR
 11000 ;;		_TMR5_ISR
 11001 ;; This function is called by:
 11002 ;;		Interrupt level 1
 11003 ;; This function uses a non-reentrant model
 11004 ;;
 11005                           
 11006  0004                     _INTERRUPT_InterruptManager:
 11007                           
 11008                           ;incstack = 0
 11009  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11010                           
 11011                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11012  0005  3180               	pagesel	$
 11013  0006                     i1l4316:
 11014                           
 11015                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
 11016  0006  1F0B               	btfss	11,6	;volatile
 11017  0007  2809               	goto	u417_21
 11018  0008  280A               	goto	u417_20
 11019  0009                     u417_21:
 11020  0009  283E               	goto	i1l356
 11021  000A                     u417_20:
 11022  000A                     i1l4318:
 11023                           
 11024                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE4bits.TMR5IE == 1 && PIR4bits
      +                          .TMR5IF == 1)
 11025  000A  002E               	movlb	14	; select bank14
 11026  000B  1E1A               	btfss	26,4	;volatile
 11027  000C  280E               	goto	u418_21
 11028  000D  280F               	goto	u418_20
 11029  000E                     u418_21:
 11030  000E  2817               	goto	i1l345
 11031  000F                     u418_20:
 11032  000F                     i1l4320:
 11033  000F  1E10               	btfss	16,4	;volatile
 11034  0010  2812               	goto	u419_21
 11035  0011  2813               	goto	u419_20
 11036  0012                     u419_21:
 11037  0012  2817               	goto	i1l345
 11038  0013                     u419_20:
 11039  0013                     i1l4322:
 11040                           
 11041                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: TMR5_ISR();
 11042  0013  318C  243E  3180   	fcall	_TMR5_ISR
 11043                           
 11044                           ;interrupt_manager.c: 60: }
 11045  0016  283E               	goto	i1l356
 11046  0017                     i1l345:
 11047                           
 11048                           ;interrupt_manager.c: 61: else if(PIE4bits.TMR3IE == 1 && PIR4bits.TMR3IF == 1)
 11049  0017  1D1A               	btfss	26,2	;volatile
 11050  0018  281A               	goto	u420_21
 11051  0019  281B               	goto	u420_20
 11052  001A                     u420_21:
 11053  001A  2823               	goto	i1l347
 11054  001B                     u420_20:
 11055  001B                     i1l4324:
 11056  001B  1D10               	btfss	16,2	;volatile
 11057  001C  281E               	goto	u421_21
 11058  001D  281F               	goto	u421_20
 11059  001E                     u421_21:
 11060  001E  2823               	goto	i1l347
 11061  001F                     u421_20:
 11062  001F                     i1l4326:
 11063                           
 11064                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR3_ISR();
 11065  001F  318C  2427  3180   	fcall	_TMR3_ISR
 11066                           
 11067                           ;interrupt_manager.c: 64: }
 11068  0022  283E               	goto	i1l356
 11069  0023                     i1l347:
 11070                           
 11071                           ;interrupt_manager.c: 65: else if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 11072  0023  1C1A               	btfss	26,0	;volatile
 11073  0024  2826               	goto	u422_21
 11074  0025  2827               	goto	u422_20
 11075  0026                     u422_21:
 11076  0026  282F               	goto	i1l349
 11077  0027                     u422_20:
 11078  0027                     i1l4328:
 11079  0027  1C10               	btfss	16,0	;volatile
 11080  0028  282A               	goto	u423_21
 11081  0029  282B               	goto	u423_20
 11082  002A                     u423_21:
 11083  002A  282F               	goto	i1l349
 11084  002B                     u423_20:
 11085  002B                     i1l4330:
 11086                           
 11087                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: TMR1_ISR();
 11088  002B  318C  2410  3180   	fcall	_TMR1_ISR
 11089                           
 11090                           ;interrupt_manager.c: 68: }
 11091  002E  283E               	goto	i1l356
 11092  002F                     i1l349:
 11093                           
 11094                           ;interrupt_manager.c: 69: else if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 11095  002F  1C99               	btfss	25,1	;volatile
 11096  0030  2832               	goto	u424_21
 11097  0031  2833               	goto	u424_20
 11098  0032                     u424_21:
 11099  0032  2838               	goto	i1l351
 11100  0033                     u424_20:
 11101  0033                     i1l4332:
 11102                           
 11103                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: i2c1_driver_busCollisionISR();
 11104  0033  1C8F               	btfss	15,1	;volatile
 11105  0034  2836               	goto	u425_21
 11106  0035  2837               	goto	u425_20
 11107  0036                     u425_21:
 11108  0036  2838               	goto	i1l351
 11109  0037                     u425_20:
 11110  0037  283E               	goto	i1l356
 11111  0038                     i1l351:
 11112                           
 11113                           ;interrupt_manager.c: 73: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 11114  0038  1C19               	btfss	25,0	;volatile
 11115  0039  283B               	goto	u426_21
 11116  003A  283C               	goto	u426_20
 11117  003B                     u426_21:
 11118  003B  283E               	goto	i1l350
 11119  003C                     u426_20:
 11120  003C                     i1l4336:
 11121                           
 11122                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: i2c1_driver_i2cISR();
 11123  003C  080F               	movf	15,w	;volatile
 11124  003D  283E               	goto	i1l356
 11125  003E                     i1l350:
 11126  003E                     i1l356:
 11127  003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11128  003F  0009               	retfie
 11129  0040                     __end_of_INTERRUPT_InterruptManager:
 11130                           
 11131                           	psect	text25
 11132  0C3E                     __ptext25:	
 11133 ;; *************** function _TMR5_ISR *****************
 11134 ;; Defined at:
 11135 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 11136 ;; Parameters:    Size  Location     Type
 11137 ;;		None
 11138 ;; Auto vars:     Size  Location     Type
 11139 ;;		None
 11140 ;; Return value:  Size  Location     Type
 11141 ;;                  1    wreg      void 
 11142 ;; Registers used:
 11143 ;;		wreg, status,2, status,0, pclath, cstack
 11144 ;; Tracked objects:
 11145 ;;		On entry : 0/0
 11146 ;;		On exit  : 0/0
 11147 ;;		Unchanged: 0/0
 11148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11153 ;;Total ram usage:        0 bytes
 11154 ;; Hardware stack levels used:    1
 11155 ;; Hardware stack levels required when called:    3
 11156 ;; This function calls:
 11157 ;;		Absolute function
 11158 ;;		_TMR5_DefaultInterruptHandler
 11159 ;;		_TMR5_WriteTimer
 11160 ;;		_monitoring_ISR
 11161 ;; This function is called by:
 11162 ;;		_INTERRUPT_InterruptManager
 11163 ;; This function uses a non-reentrant model
 11164 ;;
 11165                           
 11166                           
 11167                           ;psect for function _TMR5_ISR
 11168  0C3E                     _TMR5_ISR:
 11169  0C3E                     i1l4130:	
 11170                           ;incstack = 0
 11171                           ; Regs used in _TMR5_ISR: [wreg+status,2+status,0+pclath+cstack]
 11172                           
 11173                           
 11174                           ;tmr5.c: 169: PIR4bits.TMR5IF = 0;
 11175  0C3E  002E               	movlb	14	; select bank14
 11176  0C3F  1210               	bcf	16,4	;volatile
 11177  0C40                     i1l4132:
 11178                           
 11179                           ;tmr5.c: 170: TMR5_WriteTimer(timer5ReloadVal);
 11180  0C40  0021               	movlb	1	; select bank1
 11181  0C41  0823               	movf	(_timer5ReloadVal+1)^(0+128),w	;volatile
 11182  0C42  00F1               	movwf	TMR5_WriteTimer@timerVal+1
 11183  0C43  0822               	movf	_timer5ReloadVal^(0+128),w	;volatile
 11184  0C44  00F0               	movwf	TMR5_WriteTimer@timerVal
 11185  0C45  318B  23B1  318C   	fcall	_TMR5_WriteTimer
 11186  0C48                     i1l4134:
 11187                           
 11188                           ;tmr5.c: 172: if(TMR5_InterruptHandler)
 11189  0C48  0021               	movlb	1	; select bank1
 11190  0C49  0820               	movf	_TMR5_InterruptHandler^(0+128),w
 11191  0C4A  0421               	iorwf	(_TMR5_InterruptHandler+1)^(0+128),w
 11192  0C4B  1903               	btfsc	3,2
 11193  0C4C  2C4E               	goto	u373_21
 11194  0C4D  2C4F               	goto	u373_20
 11195  0C4E                     u373_21:
 11196  0C4E  2C54               	goto	i1l702
 11197  0C4F                     u373_20:
 11198  0C4F                     i1l4136:
 11199                           
 11200                           ;tmr5.c: 173: {;tmr5.c: 174: TMR5_InterruptHandler();
 11201  0C4F  0821               	movf	(_TMR5_InterruptHandler+1)^(0+128),w
 11202  0C50  008A               	movwf	10
 11203  0C51  0820               	movf	_TMR5_InterruptHandler^(0+128),w
 11204  0C52  000A               	callw
 11205  0C53  318C               	pagesel	$
 11206  0C54                     i1l702:
 11207  0C54  0008               	return
 11208  0C55                     __end_of_TMR5_ISR:
 11209                           
 11210                           	psect	text26
 11211  07FF                     __ptext26:	
 11212 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 11213 ;; Defined at:
 11214 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 11215 ;; Parameters:    Size  Location     Type
 11216 ;;		None
 11217 ;; Auto vars:     Size  Location     Type
 11218 ;;		None
 11219 ;; Return value:  Size  Location     Type
 11220 ;;                  1    wreg      void 
 11221 ;; Registers used:
 11222 ;;		None
 11223 ;; Tracked objects:
 11224 ;;		On entry : 0/0
 11225 ;;		On exit  : 0/0
 11226 ;;		Unchanged: 0/0
 11227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11232 ;;Total ram usage:        0 bytes
 11233 ;; Hardware stack levels used:    1
 11234 ;; This function calls:
 11235 ;;		Nothing
 11236 ;; This function is called by:
 11237 ;;		_TMR5_Initialize
 11238 ;;		_TMR5_ISR
 11239 ;; This function uses a non-reentrant model
 11240 ;;
 11241                           
 11242                           
 11243                           ;psect for function _TMR5_DefaultInterruptHandler
 11244  07FF                     _TMR5_DefaultInterruptHandler:
 11245  07FF                     i1l708:	
 11246                           ;incstack = 0
 11247                           ; Regs used in _TMR5_DefaultInterruptHandler: []
 11248                           
 11249  07FF  0008               	return
 11250  0800                     __end_of_TMR5_DefaultInterruptHandler:
 11251                           
 11252                           	psect	text27
 11253  0DAF                     __ptext27:	
 11254 ;; *************** function _monitoring_ISR *****************
 11255 ;; Defined at:
 11256 ;;		line 417 in file "main.c"
 11257 ;; Parameters:    Size  Location     Type
 11258 ;;		None
 11259 ;; Auto vars:     Size  Location     Type
 11260 ;;		None
 11261 ;; Return value:  Size  Location     Type
 11262 ;;                  1    wreg      void 
 11263 ;; Registers used:
 11264 ;;		wreg, status,2, status,0, pclath, cstack
 11265 ;; Tracked objects:
 11266 ;;		On entry : 0/0
 11267 ;;		On exit  : 0/0
 11268 ;;		Unchanged: 0/0
 11269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11272 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11273 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11274 ;;Total ram usage:        3 bytes
 11275 ;; Hardware stack levels used:    1
 11276 ;; Hardware stack levels required when called:    2
 11277 ;; This function calls:
 11278 ;;		_ADCC_GetSingleConversion
 11279 ;;		_tsttc
 11280 ;; This function is called by:
 11281 ;;		_main
 11282 ;;		_TMR5_ISR
 11283 ;; This function uses a non-reentrant model
 11284 ;;
 11285                           
 11286                           
 11287                           ;psect for function _monitoring_ISR
 11288  0DAF                     _monitoring_ISR:
 11289  0DAF                     i1l4082:	
 11290                           ;incstack = 0
 11291                           ; Regs used in _monitoring_ISR: [wreg+status,2+status,0+pclath+cstack]
 11292                           
 11293                           
 11294                           ;main.c: 418: temp = tsttc();
 11295  0DAF  3183  23D2  318D   	fcall	_tsttc
 11296  0DB2  00F4               	movwf	??_monitoring_ISR
 11297  0DB3  0874               	movf	??_monitoring_ISR,w
 11298  0DB4  0020               	movlb	0	; select bank0
 11299  0DB5  00E0               	movwf	_temp
 11300                           
 11301                           ;main.c: 420: lumLevel = ADCC_GetSingleConversion(channel_ANA0) >> 13;
 11302  0DB6  3000               	movlw	0
 11303  0DB7  318B  23D4  318D   	fcall	_ADCC_GetSingleConversion
 11304  0DBA  0870               	movf	?_ADCC_GetSingleConversion,w
 11305  0DBB  00F4               	movwf	??_monitoring_ISR
 11306  0DBC  0871               	movf	?_ADCC_GetSingleConversion+1,w
 11307  0DBD  00F5               	movwf	??_monitoring_ISR+1
 11308  0DBE  300D               	movlw	13
 11309  0DBF                     u369_25:
 11310  0DBF  36F5               	lsrf	??_monitoring_ISR+1,f
 11311  0DC0  0CF4               	rrf	??_monitoring_ISR,f
 11312  0DC1  0B89               	decfsz	9,f
 11313  0DC2  2DBF               	goto	u369_25
 11314  0DC3  0874               	movf	??_monitoring_ISR,w
 11315  0DC4  00F6               	movwf	??_monitoring_ISR+2
 11316  0DC5  0876               	movf	??_monitoring_ISR+2,w
 11317  0DC6  0020               	movlb	0	; select bank0
 11318  0DC7  00DF               	movwf	_lumLevel
 11319  0DC8                     i1l4084:
 11320                           
 11321                           ;main.c: 423: if(lumAlarm.alarmLum > lumLevel){
 11322  0DC8  0868               	movf	_lumAlarm,w
 11323  0DC9  025F               	subwf	_lumLevel,w
 11324  0DCA  1803               	skipnc
 11325  0DCB  2DCD               	goto	u370_21
 11326  0DCC  2DCE               	goto	u370_20
 11327  0DCD                     u370_21:
 11328  0DCD  2DD8               	goto	i1l1172
 11329  0DCE                     u370_20:
 11330  0DCE                     i1l4086:
 11331                           
 11332                           ;main.c: 424: alarmPWMStart.h = -1;
 11333  0DCE  30FF               	movlw	255
 11334  0DCF  0021               	movlb	1	; select bank1
 11335  0DD0  00BA               	movwf	_alarmPWMStart^(0+128)
 11336  0DD1  30FF               	movlw	255
 11337  0DD2  00BB               	movwf	(_alarmPWMStart^(0+128)+1)
 11338  0DD3                     i1l4088:
 11339                           
 11340                           ;main.c: 425: lumAlarm.trigger = 1;
 11341  0DD3  0020               	movlb	0	; select bank0
 11342  0DD4  01E9               	clrf	_lumAlarm+1
 11343  0DD5  0AE9               	incf	_lumAlarm+1,f
 11344  0DD6                     i1l4090:
 11345  0DD6  1616               	bsf	22,4	;volatile
 11346  0DD7  2DD9               	goto	i1l4092
 11347  0DD8                     i1l1172:	
 11348                           ;main.c: 428: do { LATAbits.LATA4 = 0; } while(0);
 11349                           
 11350  0DD8  1216               	bcf	22,4	;volatile
 11351  0DD9                     i1l4092:
 11352                           
 11353                           ;main.c: 429: };main.c: 432: if(tempAlarm.alarmTemp < temp){
 11354  0DD9  0860               	movf	_temp,w
 11355  0DDA  026A               	subwf	_tempAlarm,w
 11356  0DDB  1803               	skipnc
 11357  0DDC  2DDE               	goto	u371_21
 11358  0DDD  2DDF               	goto	u371_20
 11359  0DDE                     u371_21:
 11360  0DDE  2DE9               	goto	i1l1178
 11361  0DDF                     u371_20:
 11362  0DDF                     i1l4094:
 11363                           
 11364                           ;main.c: 433: alarmPWMStart.h = -1;
 11365  0DDF  30FF               	movlw	255
 11366  0DE0  0021               	movlb	1	; select bank1
 11367  0DE1  00BA               	movwf	_alarmPWMStart^(0+128)
 11368  0DE2  30FF               	movlw	255
 11369  0DE3  00BB               	movwf	(_alarmPWMStart^(0+128)+1)
 11370  0DE4                     i1l4096:
 11371                           
 11372                           ;main.c: 434: tempAlarm.trigger = 1;
 11373  0DE4  0020               	movlb	0	; select bank0
 11374  0DE5  01EB               	clrf	_tempAlarm+1
 11375  0DE6  0AEB               	incf	_tempAlarm+1,f
 11376  0DE7                     i1l4098:
 11377  0DE7  1696               	bsf	22,5	;volatile
 11378  0DE8  2DEA               	goto	i1l1180
 11379  0DE9                     i1l1178:	
 11380                           ;main.c: 437: do { LATAbits.LATA5 = 0; } while(0);
 11381                           
 11382  0DE9  1296               	bcf	22,5	;volatile
 11383  0DEA                     i1l1180:
 11384  0DEA  0008               	return
 11385  0DEB                     __end_of_monitoring_ISR:
 11386                           
 11387                           	psect	text28
 11388  03D2                     __ptext28:	
 11389 ;; *************** function _tsttc *****************
 11390 ;; Defined at:
 11391 ;;		line 58 in file "main.c"
 11392 ;; Parameters:    Size  Location     Type
 11393 ;;		None
 11394 ;; Auto vars:     Size  Location     Type
 11395 ;;  value           1    3[COMMON] unsigned char 
 11396 ;; Return value:  Size  Location     Type
 11397 ;;                  1    wreg      unsigned char 
 11398 ;; Registers used:
 11399 ;;		wreg, status,2, status,0, pclath, cstack
 11400 ;; Tracked objects:
 11401 ;;		On entry : 0/0
 11402 ;;		On exit  : 0/0
 11403 ;;		Unchanged: 0/0
 11404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11407 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11408 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11409 ;;Total ram usage:        2 bytes
 11410 ;; Hardware stack levels used:    1
 11411 ;; Hardware stack levels required when called:    1
 11412 ;; This function calls:
 11413 ;;		_ReadI2C
 11414 ;;		i1_WriteI2C
 11415 ;; This function is called by:
 11416 ;;		_monitoring_ISR
 11417 ;; This function uses a non-reentrant model
 11418 ;;
 11419                           
 11420                           
 11421                           ;psect for function _tsttc
 11422  03D2                     _tsttc:
 11423  03D2                     i1l844:	
 11424                           ;incstack = 0
 11425                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 11426                           ;main.c: 60: unsigned char value;;main.c: 61: do{
 11427                           
 11428  03D2                     i1l3538:	
 11429                           ;main.c: 62: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11430                           
 11431  03D2  0023               	movlb	3	; select bank3
 11432  03D3  0C0F               	rrf	15,w	;volatile
 11433  03D4  0C89               	rrf	9,f
 11434  03D5  3901               	andlw	1
 11435  03D6  00F2               	movwf	??_tsttc
 11436  03D7  0811               	movf	17,w	;volatile
 11437  03D8  391F               	andlw	31
 11438  03D9  0472               	iorwf	??_tsttc,w
 11439  03DA  1D03               	btfss	3,2
 11440  03DB  2BDD               	goto	u273_21
 11441  03DC  2BDE               	goto	u273_20
 11442  03DD                     u273_21:
 11443  03DD  2BD2               	goto	i1l3538
 11444  03DE                     u273_20:
 11445  03DE                     i1l847:
 11446                           
 11447                           ;main.c: 63: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 11448  03DE  1411               	bsf	17,0	;volatile
 11449  03DF                     i1l848:
 11450  03DF  1811               	btfsc	17,0	;volatile
 11451  03E0  2BE2               	goto	u274_21
 11452  03E1  2BE3               	goto	u274_20
 11453  03E2                     u274_21:
 11454  03E2  2BDF               	goto	i1l848
 11455  03E3                     u274_20:
 11456  03E3                     i1l3540:
 11457  03E3  0C0F               	rrf	15,w	;volatile
 11458  03E4  0C89               	rrf	9,f
 11459  03E5  3901               	andlw	1
 11460  03E6  00F2               	movwf	??_tsttc
 11461  03E7  0811               	movf	17,w	;volatile
 11462  03E8  391F               	andlw	31
 11463  03E9  0472               	iorwf	??_tsttc,w
 11464  03EA  1D03               	btfss	3,2
 11465  03EB  2BED               	goto	u275_21
 11466  03EC  2BEE               	goto	u275_20
 11467  03ED                     u275_21:
 11468  03ED  2BE3               	goto	i1l3540
 11469  03EE                     u275_20:
 11470  03EE                     i1l3542:
 11471                           
 11472                           ;main.c: 65: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11473  03EE  309A               	movlw	154
 11474  03EF  318E  2628  3183   	fcall	i1_WriteI2C
 11475  03F2                     i1l3544:
 11476  03F2  0023               	movlb	3	; select bank3
 11477  03F3  0C0F               	rrf	15,w	;volatile
 11478  03F4  0C89               	rrf	9,f
 11479  03F5  3901               	andlw	1
 11480  03F6  00F2               	movwf	??_tsttc
 11481  03F7  0811               	movf	17,w	;volatile
 11482  03F8  391F               	andlw	31
 11483  03F9  0472               	iorwf	??_tsttc,w
 11484  03FA  1D03               	btfss	3,2
 11485  03FB  2BFD               	goto	u276_21
 11486  03FC  2BFE               	goto	u276_20
 11487  03FD                     u276_21:
 11488  03FD  2BF2               	goto	i1l3544
 11489  03FE                     u276_20:
 11490  03FE                     i1l3546:
 11491                           
 11492                           ;main.c: 66: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11493  03FE  3001               	movlw	1
 11494  03FF  318E  2628  3183   	fcall	i1_WriteI2C
 11495  0402                     i1l3548:
 11496  0402  0023               	movlb	3	; select bank3
 11497  0403  0C0F               	rrf	15,w	;volatile
 11498  0404  0C89               	rrf	9,f
 11499  0405  3901               	andlw	1
 11500  0406  00F2               	movwf	??_tsttc
 11501  0407  0811               	movf	17,w	;volatile
 11502  0408  391F               	andlw	31
 11503  0409  0472               	iorwf	??_tsttc,w
 11504  040A  1D03               	btfss	3,2
 11505  040B  2C0D               	goto	u277_21
 11506  040C  2C0E               	goto	u277_20
 11507  040D                     u277_21:
 11508  040D  2C02               	goto	i1l3548
 11509  040E                     u277_20:
 11510  040E                     i1l859:
 11511                           
 11512                           ;main.c: 67: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 11513  040E  1491               	bsf	17,1	;volatile
 11514  040F                     i1l860:
 11515  040F  1891               	btfsc	17,1	;volatile
 11516  0410  2C12               	goto	u278_21
 11517  0411  2C13               	goto	u278_20
 11518  0412                     u278_21:
 11519  0412  2C0F               	goto	i1l860
 11520  0413                     u278_20:
 11521  0413                     i1l3550:
 11522  0413  0C0F               	rrf	15,w	;volatile
 11523  0414  0C89               	rrf	9,f
 11524  0415  3901               	andlw	1
 11525  0416  00F2               	movwf	??_tsttc
 11526  0417  0811               	movf	17,w	;volatile
 11527  0418  391F               	andlw	31
 11528  0419  0472               	iorwf	??_tsttc,w
 11529  041A  1D03               	btfss	3,2
 11530  041B  2C1D               	goto	u279_21
 11531  041C  2C1E               	goto	u279_20
 11532  041D                     u279_21:
 11533  041D  2C13               	goto	i1l3550
 11534  041E                     u279_20:
 11535  041E                     i1l3552:
 11536                           
 11537                           ;main.c: 68: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11538  041E  309B               	movlw	155
 11539  041F  318E  2628  3183   	fcall	i1_WriteI2C
 11540  0422                     i1l3554:
 11541  0422  0023               	movlb	3	; select bank3
 11542  0423  0C0F               	rrf	15,w	;volatile
 11543  0424  0C89               	rrf	9,f
 11544  0425  3901               	andlw	1
 11545  0426  00F2               	movwf	??_tsttc
 11546  0427  0811               	movf	17,w	;volatile
 11547  0428  391F               	andlw	31
 11548  0429  0472               	iorwf	??_tsttc,w
 11549  042A  1D03               	btfss	3,2
 11550  042B  2C2D               	goto	u280_21
 11551  042C  2C2E               	goto	u280_20
 11552  042D                     u280_21:
 11553  042D  2C22               	goto	i1l3554
 11554  042E                     u280_20:
 11555  042E                     i1l3556:
 11556                           
 11557                           ;main.c: 69: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11558  042E  318C  2455  3183   	fcall	_ReadI2C
 11559  0431  00F2               	movwf	??_tsttc
 11560  0432  0872               	movf	??_tsttc,w
 11561  0433  00F3               	movwf	tsttc@value
 11562  0434                     i1l3558:
 11563  0434  0023               	movlb	3	; select bank3
 11564  0435  0C0F               	rrf	15,w	;volatile
 11565  0436  0C89               	rrf	9,f
 11566  0437  3901               	andlw	1
 11567  0438  00F2               	movwf	??_tsttc
 11568  0439  0811               	movf	17,w	;volatile
 11569  043A  391F               	andlw	31
 11570  043B  0472               	iorwf	??_tsttc,w
 11571  043C  1D03               	btfss	3,2
 11572  043D  2C3F               	goto	u281_21
 11573  043E  2C40               	goto	u281_20
 11574  043F                     u281_21:
 11575  043F  2C34               	goto	i1l3558
 11576  0440                     u281_20:
 11577  0440                     i1l871:
 11578                           
 11579                           ;main.c: 70: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11580  0440  1691               	bsf	17,5	;volatile
 11581  0441  1611               	bsf	17,4	;volatile
 11582  0442                     i1l872:
 11583  0442  1A11               	btfsc	17,4	;volatile
 11584  0443  2C45               	goto	u282_21
 11585  0444  2C46               	goto	u282_20
 11586  0445                     u282_21:
 11587  0445  2C42               	goto	i1l872
 11588  0446                     u282_20:
 11589  0446                     i1l3560:
 11590  0446  0C0F               	rrf	15,w	;volatile
 11591  0447  0C89               	rrf	9,f
 11592  0448  3901               	andlw	1
 11593  0449  00F2               	movwf	??_tsttc
 11594  044A  0811               	movf	17,w	;volatile
 11595  044B  391F               	andlw	31
 11596  044C  0472               	iorwf	??_tsttc,w
 11597  044D  1D03               	btfss	3,2
 11598  044E  2C50               	goto	u283_21
 11599  044F  2C51               	goto	u283_20
 11600  0450                     u283_21:
 11601  0450  2C46               	goto	i1l3560
 11602  0451                     u283_20:
 11603  0451                     i1l877:
 11604                           
 11605                           ;main.c: 71: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11606  0451  1511               	bsf	17,2	;volatile
 11607  0452                     i1l878:
 11608  0452  1911               	btfsc	17,2	;volatile
 11609  0453  2C55               	goto	u284_21
 11610  0454  2C56               	goto	u284_20
 11611  0455                     u284_21:
 11612  0455  2C52               	goto	i1l878
 11613  0456                     u284_20:
 11614  0456                     i1l880:
 11615                           
 11616                           ;main.c: 72: } while (!(value & 0x40));
 11617  0456  1F73               	btfss	tsttc@value,6
 11618  0457  2C59               	goto	u285_21
 11619  0458  2C5A               	goto	u285_20
 11620  0459                     u285_21:
 11621  0459  2BD2               	goto	i1l844
 11622  045A                     u285_20:
 11623  045A                     i1l3562:
 11624  045A  0C0F               	rrf	15,w	;volatile
 11625  045B  0C89               	rrf	9,f
 11626  045C  3901               	andlw	1
 11627  045D  00F2               	movwf	??_tsttc
 11628  045E  0811               	movf	17,w	;volatile
 11629  045F  391F               	andlw	31
 11630  0460  0472               	iorwf	??_tsttc,w
 11631  0461  1D03               	btfss	3,2
 11632  0462  2C64               	goto	u286_21
 11633  0463  2C65               	goto	u286_20
 11634  0464                     u286_21:
 11635  0464  2C5A               	goto	i1l3562
 11636  0465                     u286_20:
 11637  0465                     i1l884:
 11638                           
 11639                           ;main.c: 75: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 11640  0465  1411               	bsf	17,0	;volatile
 11641  0466                     i1l885:
 11642  0466  1811               	btfsc	17,0	;volatile
 11643  0467  2C69               	goto	u287_21
 11644  0468  2C6A               	goto	u287_20
 11645  0469                     u287_21:
 11646  0469  2C66               	goto	i1l885
 11647  046A                     u287_20:
 11648  046A                     i1l3564:
 11649  046A  0C0F               	rrf	15,w	;volatile
 11650  046B  0C89               	rrf	9,f
 11651  046C  3901               	andlw	1
 11652  046D  00F2               	movwf	??_tsttc
 11653  046E  0811               	movf	17,w	;volatile
 11654  046F  391F               	andlw	31
 11655  0470  0472               	iorwf	??_tsttc,w
 11656  0471  1D03               	btfss	3,2
 11657  0472  2C74               	goto	u288_21
 11658  0473  2C75               	goto	u288_20
 11659  0474                     u288_21:
 11660  0474  2C6A               	goto	i1l3564
 11661  0475                     u288_20:
 11662  0475                     i1l3566:
 11663                           
 11664                           ;main.c: 76: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11665  0475  309A               	movlw	154
 11666  0476  318E  2628  3183   	fcall	i1_WriteI2C
 11667  0479                     i1l3568:
 11668  0479  0023               	movlb	3	; select bank3
 11669  047A  0C0F               	rrf	15,w	;volatile
 11670  047B  0C89               	rrf	9,f
 11671  047C  3901               	andlw	1
 11672  047D  00F2               	movwf	??_tsttc
 11673  047E  0811               	movf	17,w	;volatile
 11674  047F  391F               	andlw	31
 11675  0480  0472               	iorwf	??_tsttc,w
 11676  0481  1D03               	btfss	3,2
 11677  0482  2C84               	goto	u289_21
 11678  0483  2C85               	goto	u289_20
 11679  0484                     u289_21:
 11680  0484  2C79               	goto	i1l3568
 11681  0485                     u289_20:
 11682  0485                     i1l3570:
 11683                           
 11684                           ;main.c: 77: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11685  0485  3000               	movlw	0
 11686  0486  318E  2628  3183   	fcall	i1_WriteI2C
 11687  0489                     i1l3572:
 11688  0489  0023               	movlb	3	; select bank3
 11689  048A  0C0F               	rrf	15,w	;volatile
 11690  048B  0C89               	rrf	9,f
 11691  048C  3901               	andlw	1
 11692  048D  00F2               	movwf	??_tsttc
 11693  048E  0811               	movf	17,w	;volatile
 11694  048F  391F               	andlw	31
 11695  0490  0472               	iorwf	??_tsttc,w
 11696  0491  1D03               	btfss	3,2
 11697  0492  2C94               	goto	u290_21
 11698  0493  2C95               	goto	u290_20
 11699  0494                     u290_21:
 11700  0494  2C89               	goto	i1l3572
 11701  0495                     u290_20:
 11702  0495                     i1l896:
 11703                           
 11704                           ;main.c: 78: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 11705  0495  1491               	bsf	17,1	;volatile
 11706  0496                     i1l897:
 11707  0496  1891               	btfsc	17,1	;volatile
 11708  0497  2C99               	goto	u291_21
 11709  0498  2C9A               	goto	u291_20
 11710  0499                     u291_21:
 11711  0499  2C96               	goto	i1l897
 11712  049A                     u291_20:
 11713  049A                     i1l3574:
 11714  049A  0C0F               	rrf	15,w	;volatile
 11715  049B  0C89               	rrf	9,f
 11716  049C  3901               	andlw	1
 11717  049D  00F2               	movwf	??_tsttc
 11718  049E  0811               	movf	17,w	;volatile
 11719  049F  391F               	andlw	31
 11720  04A0  0472               	iorwf	??_tsttc,w
 11721  04A1  1D03               	btfss	3,2
 11722  04A2  2CA4               	goto	u292_21
 11723  04A3  2CA5               	goto	u292_20
 11724  04A4                     u292_21:
 11725  04A4  2C9A               	goto	i1l3574
 11726  04A5                     u292_20:
 11727  04A5                     i1l3576:
 11728                           
 11729                           ;main.c: 79: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11730  04A5  309B               	movlw	155
 11731  04A6  318E  2628  3183   	fcall	i1_WriteI2C
 11732  04A9                     i1l3578:
 11733  04A9  0023               	movlb	3	; select bank3
 11734  04AA  0C0F               	rrf	15,w	;volatile
 11735  04AB  0C89               	rrf	9,f
 11736  04AC  3901               	andlw	1
 11737  04AD  00F2               	movwf	??_tsttc
 11738  04AE  0811               	movf	17,w	;volatile
 11739  04AF  391F               	andlw	31
 11740  04B0  0472               	iorwf	??_tsttc,w
 11741  04B1  1D03               	btfss	3,2
 11742  04B2  2CB4               	goto	u293_21
 11743  04B3  2CB5               	goto	u293_20
 11744  04B4                     u293_21:
 11745  04B4  2CA9               	goto	i1l3578
 11746  04B5                     u293_20:
 11747  04B5                     i1l3580:
 11748                           
 11749                           ;main.c: 80: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11750  04B5  318C  2455  3183   	fcall	_ReadI2C
 11751  04B8  00F2               	movwf	??_tsttc
 11752  04B9  0872               	movf	??_tsttc,w
 11753  04BA  00F3               	movwf	tsttc@value
 11754  04BB                     i1l3582:
 11755  04BB  0023               	movlb	3	; select bank3
 11756  04BC  0C0F               	rrf	15,w	;volatile
 11757  04BD  0C89               	rrf	9,f
 11758  04BE  3901               	andlw	1
 11759  04BF  00F2               	movwf	??_tsttc
 11760  04C0  0811               	movf	17,w	;volatile
 11761  04C1  391F               	andlw	31
 11762  04C2  0472               	iorwf	??_tsttc,w
 11763  04C3  1D03               	btfss	3,2
 11764  04C4  2CC6               	goto	u294_21
 11765  04C5  2CC7               	goto	u294_20
 11766  04C6                     u294_21:
 11767  04C6  2CBB               	goto	i1l3582
 11768  04C7                     u294_20:
 11769  04C7                     i1l908:
 11770                           
 11771                           ;main.c: 81: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11772  04C7  1691               	bsf	17,5	;volatile
 11773  04C8  1611               	bsf	17,4	;volatile
 11774  04C9                     i1l909:
 11775  04C9  1A11               	btfsc	17,4	;volatile
 11776  04CA  2CCC               	goto	u295_21
 11777  04CB  2CCD               	goto	u295_20
 11778  04CC                     u295_21:
 11779  04CC  2CC9               	goto	i1l909
 11780  04CD                     u295_20:
 11781  04CD                     i1l3584:
 11782  04CD  0C0F               	rrf	15,w	;volatile
 11783  04CE  0C89               	rrf	9,f
 11784  04CF  3901               	andlw	1
 11785  04D0  00F2               	movwf	??_tsttc
 11786  04D1  0811               	movf	17,w	;volatile
 11787  04D2  391F               	andlw	31
 11788  04D3  0472               	iorwf	??_tsttc,w
 11789  04D4  1D03               	btfss	3,2
 11790  04D5  2CD7               	goto	u296_21
 11791  04D6  2CD8               	goto	u296_20
 11792  04D7                     u296_21:
 11793  04D7  2CCD               	goto	i1l3584
 11794  04D8                     u296_20:
 11795  04D8                     i1l914:
 11796                           
 11797                           ;main.c: 82: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11798  04D8  1511               	bsf	17,2	;volatile
 11799  04D9                     i1l915:
 11800  04D9  1911               	btfsc	17,2	;volatile
 11801  04DA  2CDC               	goto	u297_21
 11802  04DB  2CDD               	goto	u297_20
 11803  04DC                     u297_21:
 11804  04DC  2CD9               	goto	i1l915
 11805  04DD                     u297_20:
 11806  04DD                     i1l3586:
 11807                           
 11808                           ;main.c: 84: return value;
 11809  04DD  0873               	movf	tsttc@value,w
 11810  04DE                     i1l918:
 11811  04DE  0008               	return
 11812  04DF                     __end_of_tsttc:
 11813                           
 11814                           	psect	text29
 11815  0C55                     __ptext29:	
 11816 ;; *************** function _ReadI2C *****************
 11817 ;; Defined at:
 11818 ;;		line 32 in file "I2C/i2c.c"
 11819 ;; Parameters:    Size  Location     Type
 11820 ;;		None
 11821 ;; Auto vars:     Size  Location     Type
 11822 ;;		None
 11823 ;; Return value:  Size  Location     Type
 11824 ;;                  1    wreg      unsigned char 
 11825 ;; Registers used:
 11826 ;;		wreg, status,2, status,0
 11827 ;; Tracked objects:
 11828 ;;		On entry : 0/0
 11829 ;;		On exit  : 0/0
 11830 ;;		Unchanged: 0/0
 11831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11835 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11836 ;;Total ram usage:        1 bytes
 11837 ;; Hardware stack levels used:    1
 11838 ;; This function calls:
 11839 ;;		Nothing
 11840 ;; This function is called by:
 11841 ;;		_tsttc
 11842 ;;		_LCDrecv
 11843 ;; This function uses a non-reentrant model
 11844 ;;
 11845                           
 11846                           
 11847                           ;psect for function _ReadI2C
 11848  0C55                     _ReadI2C:
 11849  0C55                     i1l3396:	
 11850                           ;incstack = 0
 11851                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 11852                           
 11853                           
 11854                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 11855  0C55  300F               	movlw	15
 11856  0C56  0023               	movlb	3	; select bank3
 11857  0C57  0510               	andwf	16,w	;volatile
 11858  0C58  00F0               	movwf	??_ReadI2C
 11859  0C59  3008               	movlw	8
 11860  0C5A  0670               	xorwf	??_ReadI2C,w
 11861  0C5B  1903               	btfsc	3,2
 11862  0C5C  2C5E               	goto	u240_21
 11863  0C5D  2C5F               	goto	u240_20
 11864  0C5E                     u240_21:
 11865  0C5E  2C68               	goto	i1l22
 11866  0C5F                     u240_20:
 11867  0C5F                     i1l3398:
 11868  0C5F  300F               	movlw	15
 11869  0C60  0510               	andwf	16,w	;volatile
 11870  0C61  00F0               	movwf	??_ReadI2C
 11871  0C62  300B               	movlw	11
 11872  0C63  0670               	xorwf	??_ReadI2C,w
 11873  0C64  1D03               	btfss	3,2
 11874  0C65  2C67               	goto	u241_21
 11875  0C66  2C68               	goto	u241_20
 11876  0C67                     u241_21:
 11877  0C67  2C69               	goto	i1l23
 11878  0C68                     u241_20:
 11879  0C68                     i1l22:
 11880                           
 11881                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
 11882  0C68  1591               	bsf	17,3	;volatile
 11883  0C69                     i1l23:
 11884  0C69  1C0F               	btfss	15,0	;volatile
 11885  0C6A  2C6C               	goto	u242_21
 11886  0C6B  2C6D               	goto	u242_20
 11887  0C6C                     u242_21:
 11888  0C6C  2C69               	goto	i1l23
 11889  0C6D                     u242_20:
 11890  0C6D                     i1l3400:
 11891                           
 11892                           ;i2c.c: 37: return ( SSP1BUF );
 11893  0C6D  080C               	movf	12,w	;volatile
 11894  0C6E                     i1l26:
 11895  0C6E  0008               	return
 11896  0C6F                     __end_of_ReadI2C:
 11897                           
 11898                           	psect	text30
 11899  0BD4                     __ptext30:	
 11900 ;; *************** function _ADCC_GetSingleConversion *****************
 11901 ;; Defined at:
 11902 ;;		line 130 in file "mcc_generated_files/adcc.c"
 11903 ;; Parameters:    Size  Location     Type
 11904 ;;  channel         1    wreg     enum E12086
 11905 ;; Auto vars:     Size  Location     Type
 11906 ;;  channel         1    3[COMMON] enum E12086
 11907 ;; Return value:  Size  Location     Type
 11908 ;;                  2    0[COMMON] unsigned int 
 11909 ;; Registers used:
 11910 ;;		wreg
 11911 ;; Tracked objects:
 11912 ;;		On entry : 0/0
 11913 ;;		On exit  : 0/0
 11914 ;;		Unchanged: 0/0
 11915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11916 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11917 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11919 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11920 ;;Total ram usage:        4 bytes
 11921 ;; Hardware stack levels used:    1
 11922 ;; This function calls:
 11923 ;;		Nothing
 11924 ;; This function is called by:
 11925 ;;		_monitoring_ISR
 11926 ;; This function uses a non-reentrant model
 11927 ;;
 11928                           
 11929                           
 11930                           ;psect for function _ADCC_GetSingleConversion
 11931  0BD4                     _ADCC_GetSingleConversion:
 11932                           
 11933                           ;incstack = 0
 11934                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 11935                           ;ADCC_GetSingleConversion@channel stored from wreg
 11936  0BD4  00F3               	movwf	ADCC_GetSingleConversion@channel
 11937  0BD5                     i1l3518:
 11938                           
 11939                           ;adcc.c: 133: ADPCH = channel;
 11940  0BD5  0873               	movf	ADCC_GetSingleConversion@channel,w
 11941  0BD6  0021               	movlb	1	; select bank1
 11942  0BD7  009E               	movwf	30	;volatile
 11943  0BD8                     i1l3520:
 11944                           
 11945                           ;adcc.c: 136: ADCON0bits.ADON = 1;
 11946  0BD8  1793               	bsf	19,7	;volatile
 11947  0BD9                     i1l3522:
 11948                           
 11949                           ;adcc.c: 139: ADCON0bits.ADCONT = 0;
 11950  0BD9  1313               	bcf	19,6	;volatile
 11951  0BDA                     i1l3524:
 11952                           
 11953                           ;adcc.c: 142: ADCON0bits.ADGO = 1;
 11954  0BDA  1413               	bsf	19,0	;volatile
 11955  0BDB                     i1l3526:
 11956                           
 11957                           ;adcc.c: 145: __nop();
 11958  0BDB  0000               	nop
 11959  0BDC                     i1l575:	
 11960                           ;adcc.c: 149: {
 11961                           
 11962  0BDC  0021               	movlb	1	; select bank1
 11963  0BDD  1813               	btfsc	19,0	;volatile
 11964  0BDE  2BE0               	goto	u271_21
 11965  0BDF  2BE1               	goto	u271_20
 11966  0BE0                     u271_21:
 11967  0BE0  2BDC               	goto	i1l575
 11968  0BE1                     u271_20:
 11969  0BE1                     i1l3528:
 11970                           
 11971                           ;adcc.c: 150: };adcc.c: 154: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 11972  0BE1  080D               	movf	13,w	;volatile
 11973  0BE2  00F1               	movwf	?_ADCC_GetSingleConversion+1
 11974  0BE3  080C               	movf	12,w	;volatile
 11975  0BE4  00F0               	movwf	?_ADCC_GetSingleConversion
 11976  0BE5                     i1l578:
 11977  0BE5  0008               	return
 11978  0BE6                     __end_of_ADCC_GetSingleConversion:
 11979                           
 11980                           	psect	text31
 11981  0BB1                     __ptext31:	
 11982 ;; *************** function _TMR5_WriteTimer *****************
 11983 ;; Defined at:
 11984 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 11985 ;; Parameters:    Size  Location     Type
 11986 ;;  timerVal        2    0[COMMON] unsigned int 
 11987 ;; Auto vars:     Size  Location     Type
 11988 ;;		None
 11989 ;; Return value:  Size  Location     Type
 11990 ;;                  1    wreg      void 
 11991 ;; Registers used:
 11992 ;;		wreg, status,2
 11993 ;; Tracked objects:
 11994 ;;		On entry : 0/0
 11995 ;;		On exit  : 0/0
 11996 ;;		Unchanged: 0/0
 11997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12001 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12002 ;;Total ram usage:        2 bytes
 12003 ;; Hardware stack levels used:    1
 12004 ;; This function calls:
 12005 ;;		Nothing
 12006 ;; This function is called by:
 12007 ;;		_TMR5_ISR
 12008 ;;		_TMR5_Reload
 12009 ;; This function uses a non-reentrant model
 12010 ;;
 12011                           
 12012                           
 12013                           ;psect for function _TMR5_WriteTimer
 12014  0BB1                     _TMR5_WriteTimer:
 12015  0BB1                     i1l3882:	
 12016                           ;incstack = 0
 12017                           ; Regs used in _TMR5_WriteTimer: [wreg+status,2]
 12018                           
 12019                           
 12020                           ;tmr5.c: 130: if (T5CONbits.nT5SYNC == 1)
 12021  0BB1  0024               	movlb	4	; select bank4
 12022  0BB2  1D1A               	btfss	26,2	;volatile
 12023  0BB3  2BB5               	goto	u321_21
 12024  0BB4  2BB6               	goto	u321_20
 12025  0BB5                     u321_21:
 12026  0BB5  2BBD               	goto	i1l3892
 12027  0BB6                     u321_20:
 12028  0BB6                     i1l3884:
 12029                           
 12030                           ;tmr5.c: 131: {;tmr5.c: 133: T5CONbits.TMR5ON = 0;
 12031  0BB6  101A               	bcf	26,0	;volatile
 12032  0BB7                     i1l3886:
 12033                           
 12034                           ;tmr5.c: 136: TMR5H = (timerVal >> 8);
 12035  0BB7  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 12036  0BB8  0099               	movwf	25	;volatile
 12037  0BB9                     i1l3888:
 12038                           
 12039                           ;tmr5.c: 137: TMR5L = timerVal;
 12040  0BB9  0870               	movf	TMR5_WriteTimer@timerVal,w
 12041  0BBA  0098               	movwf	24	;volatile
 12042  0BBB                     i1l3890:
 12043                           
 12044                           ;tmr5.c: 140: T5CONbits.TMR5ON =1;
 12045  0BBB  141A               	bsf	26,0	;volatile
 12046                           
 12047                           ;tmr5.c: 141: }
 12048  0BBC  2BC1               	goto	i1l689
 12049  0BBD                     i1l3892:
 12050                           
 12051                           ;tmr5.c: 142: else;tmr5.c: 143: {;tmr5.c: 145: TMR5H = (timerVal >> 8);
 12052  0BBD  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 12053  0BBE  0099               	movwf	25	;volatile
 12054  0BBF                     i1l3894:
 12055                           
 12056                           ;tmr5.c: 146: TMR5L = timerVal;
 12057  0BBF  0870               	movf	TMR5_WriteTimer@timerVal,w
 12058  0BC0  0098               	movwf	24	;volatile
 12059  0BC1                     i1l689:
 12060  0BC1  0008               	return
 12061  0BC2                     __end_of_TMR5_WriteTimer:
 12062                           
 12063                           	psect	text32
 12064  0C27                     __ptext32:	
 12065 ;; *************** function _TMR3_ISR *****************
 12066 ;; Defined at:
 12067 ;;		line 164 in file "mcc_generated_files/tmr3.c"
 12068 ;; Parameters:    Size  Location     Type
 12069 ;;		None
 12070 ;; Auto vars:     Size  Location     Type
 12071 ;;		None
 12072 ;; Return value:  Size  Location     Type
 12073 ;;                  1    wreg      void 
 12074 ;; Registers used:
 12075 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12076 ;; Tracked objects:
 12077 ;;		On entry : 0/0
 12078 ;;		On exit  : 0/0
 12079 ;;		Unchanged: 0/0
 12080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12085 ;;Total ram usage:        0 bytes
 12086 ;; Hardware stack levels used:    1
 12087 ;; Hardware stack levels required when called:    5
 12088 ;; This function calls:
 12089 ;;		Absolute function
 12090 ;;		_TMR3_DefaultInterruptHandler
 12091 ;;		_TMR3_WriteTimer
 12092 ;;		_menuLCD_ISR
 12093 ;; This function is called by:
 12094 ;;		_INTERRUPT_InterruptManager
 12095 ;; This function uses a non-reentrant model
 12096 ;;
 12097                           
 12098                           
 12099                           ;psect for function _TMR3_ISR
 12100  0C27                     _TMR3_ISR:
 12101  0C27                     i1l4138:	
 12102                           ;incstack = 0
 12103                           ; Regs used in _TMR3_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12104                           
 12105                           
 12106                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
 12107  0C27  002E               	movlb	14	; select bank14
 12108  0C28  1110               	bcf	16,2	;volatile
 12109  0C29                     i1l4140:
 12110                           
 12111                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
 12112  0C29  0020               	movlb	0	; select bank0
 12113  0C2A  086E               	movf	_timer3ReloadVal+1,w	;volatile
 12114  0C2B  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 12115  0C2C  086D               	movf	_timer3ReloadVal,w	;volatile
 12116  0C2D  00F0               	movwf	TMR3_WriteTimer@timerVal
 12117  0C2E  318B  23A0  318C   	fcall	_TMR3_WriteTimer
 12118  0C31                     i1l4142:
 12119                           
 12120                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
 12121  0C31  0021               	movlb	1	; select bank1
 12122  0C32  0824               	movf	_TMR3_InterruptHandler^(0+128),w
 12123  0C33  0425               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 12124  0C34  1903               	btfsc	3,2
 12125  0C35  2C37               	goto	u374_21
 12126  0C36  2C38               	goto	u374_20
 12127  0C37                     u374_21:
 12128  0C37  2C3D               	goto	i1l478
 12129  0C38                     u374_20:
 12130  0C38                     i1l4144:
 12131                           
 12132                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
 12133  0C38  0825               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 12134  0C39  008A               	movwf	10
 12135  0C3A  0824               	movf	_TMR3_InterruptHandler^(0+128),w
 12136  0C3B  000A               	callw
 12137  0C3C  318C               	pagesel	$
 12138  0C3D                     i1l478:
 12139  0C3D  0008               	return
 12140  0C3E                     __end_of_TMR3_ISR:
 12141                           
 12142                           	psect	text33
 12143  0003                     __ptext33:	
 12144 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 12145 ;; Defined at:
 12146 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 12147 ;; Parameters:    Size  Location     Type
 12148 ;;		None
 12149 ;; Auto vars:     Size  Location     Type
 12150 ;;		None
 12151 ;; Return value:  Size  Location     Type
 12152 ;;                  1    wreg      void 
 12153 ;; Registers used:
 12154 ;;		None
 12155 ;; Tracked objects:
 12156 ;;		On entry : 0/0
 12157 ;;		On exit  : 0/0
 12158 ;;		Unchanged: 0/0
 12159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12164 ;;Total ram usage:        0 bytes
 12165 ;; Hardware stack levels used:    1
 12166 ;; This function calls:
 12167 ;;		Nothing
 12168 ;; This function is called by:
 12169 ;;		_TMR3_Initialize
 12170 ;;		_TMR3_ISR
 12171 ;; This function uses a non-reentrant model
 12172 ;;
 12173                           
 12174                           
 12175                           ;psect for function _TMR3_DefaultInterruptHandler
 12176  0003                     _TMR3_DefaultInterruptHandler:
 12177  0003                     i1l484:	
 12178                           ;incstack = 0
 12179                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 12180                           
 12181  0003  0008               	return
 12182  0004                     __end_of_TMR3_DefaultInterruptHandler:
 12183                           
 12184                           	psect	text34
 12185  006D                     __ptext34:	
 12186 ;; *************** function _menuLCD_ISR *****************
 12187 ;; Defined at:
 12188 ;;		line 316 in file "main.c"
 12189 ;; Parameters:    Size  Location     Type
 12190 ;;		None
 12191 ;; Auto vars:     Size  Location     Type
 12192 ;;  diff            6   38[BANK0 ] struct Time
 12193 ;;  str             8   23[BANK0 ] unsigned char [8]
 12194 ;;  tt              4   31[BANK0 ] unsigned char [4]
 12195 ;;  l               3   35[BANK0 ] unsigned char [3]
 12196 ;; Return value:  Size  Location     Type
 12197 ;;                  1    wreg      void 
 12198 ;; Registers used:
 12199 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12200 ;; Tracked objects:
 12201 ;;		On entry : 0/0
 12202 ;;		On exit  : 0/0
 12203 ;;		Unchanged: 0/0
 12204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12206 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12207 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12208 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12209 ;;Total ram usage:       23 bytes
 12210 ;; Hardware stack levels used:    1
 12211 ;; Hardware stack levels required when called:    4
 12212 ;; This function calls:
 12213 ;;		_LCDchar
 12214 ;;		_LCDcmd
 12215 ;;		_LCDstr
 12216 ;;		_PWM6_LoadDutyValue
 12217 ;;		_PWM_Output_D4_Enable
 12218 ;;		_TMR2_StartTimer
 12219 ;;		_differenceBetweenTimePeriod
 12220 ;;		_sprintf
 12221 ;;		i1_PWM_Output_D4_Disable
 12222 ;;		i1_TMR2_StopTimer
 12223 ;; This function is called by:
 12224 ;;		_main
 12225 ;;		_TMR3_ISR
 12226 ;; This function uses a non-reentrant model
 12227 ;;
 12228                           
 12229                           
 12230                           ;psect for function _menuLCD_ISR
 12231  006D                     _menuLCD_ISR:
 12232  006D                     i1l3982:	
 12233                           ;incstack = 0
 12234                           ; Regs used in _menuLCD_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12235                           
 12236                           
 12237                           ;main.c: 317: char str[8];;main.c: 318: if(editingClockAlarm){
 12238  006D  0020               	movlb	0	; select bank0
 12239  006E  0854               	movf	_editingClockAlarm,w
 12240  006F  0455               	iorwf	_editingClockAlarm+1,w
 12241  0070  1903               	btfsc	3,2
 12242  0071  2873               	goto	u349_21
 12243  0072  2874               	goto	u349_20
 12244  0073                     u349_21:
 12245  0073  2889               	goto	i1l3986
 12246  0074                     u349_20:
 12247  0074                     i1l3984:
 12248                           
 12249                           ;main.c: 319: sprintf(str, "%02d:%02d:%02d", clkAlarm.alarmVal.h,clkAlarm.alarmVal.m,clk
      +                          Alarm.alarmVal.s);
 12250  0074  3000               	movlw	low (STR_1| (0+32768))
 12251  0075  00A0               	movwf	sprintf@f
 12252  0076  3090               	movlw	high (STR_1| (0+32768))
 12253  0077  00A1               	movwf	sprintf@f+1
 12254  0078  0862               	movf	_clkAlarm+1,w
 12255  0079  00A3               	movwf	?_sprintf+3
 12256  007A  0861               	movf	_clkAlarm,w
 12257  007B  00A2               	movwf	?_sprintf+2
 12258  007C  0864               	movf	_clkAlarm+3,w
 12259  007D  00A5               	movwf	?_sprintf+5
 12260  007E  0863               	movf	_clkAlarm+2,w
 12261  007F  00A4               	movwf	?_sprintf+4
 12262  0080  0866               	movf	_clkAlarm+5,w
 12263  0081  00A7               	movwf	?_sprintf+7
 12264  0082  0865               	movf	_clkAlarm+4,w
 12265  0083  00A6               	movwf	?_sprintf+6
 12266  0084  3037               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 12267  0085  3182  2235  3180   	fcall	_sprintf
 12268                           
 12269                           ;main.c: 320: } else {
 12270  0088  289D               	goto	i1l3988
 12271  0089                     i1l3986:
 12272                           
 12273                           ;main.c: 321: sprintf(str, "%02d:%02d:%02d", t.h,t.m,t.s);
 12274  0089  3000               	movlw	low (STR_1| (0+32768))
 12275  008A  00A0               	movwf	sprintf@f
 12276  008B  3090               	movlw	high (STR_1| (0+32768))
 12277  008C  00A1               	movwf	sprintf@f+1
 12278  008D  084D               	movf	_t+1,w
 12279  008E  00A3               	movwf	?_sprintf+3
 12280  008F  084C               	movf	_t,w
 12281  0090  00A2               	movwf	?_sprintf+2
 12282  0091  084F               	movf	_t+3,w
 12283  0092  00A5               	movwf	?_sprintf+5
 12284  0093  084E               	movf	_t+2,w
 12285  0094  00A4               	movwf	?_sprintf+4
 12286  0095  0851               	movf	_t+5,w
 12287  0096  00A7               	movwf	?_sprintf+7
 12288  0097  0850               	movf	_t+4,w
 12289  0098  00A6               	movwf	?_sprintf+6
 12290  0099  3037               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 12291  009A  3182  2235  3180   	fcall	_sprintf
 12292  009D                     i1l3988:
 12293                           
 12294                           ;main.c: 322: };main.c: 323: LCDcmd(0x80);
 12295  009D  3080               	movlw	128
 12296  009E  318B  233C  3180   	fcall	_LCDcmd
 12297  00A1                     i1l3990:
 12298                           
 12299                           ;main.c: 324: LCDstr(str);
 12300  00A1  3037               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 12301  00A2  318B  23E6  3180   	fcall	_LCDstr
 12302  00A5                     i1l3992:
 12303                           
 12304                           ;main.c: 327: if(alarmsEnable){
 12305  00A5  0020               	movlb	0	; select bank0
 12306  00A6  086C               	movf	_alarmsEnable,w
 12307  00A7  1903               	btfsc	3,2
 12308  00A8  28AA               	goto	u350_21
 12309  00A9  28AB               	goto	u350_20
 12310  00AA                     u350_21:
 12311  00AA  29B1               	goto	i1l4048
 12312  00AB                     u350_20:
 12313  00AB                     i1l3994:
 12314                           
 12315                           ;main.c: 328: LCDcmd(0x8F);
 12316  00AB  308F               	movlw	143
 12317  00AC  318B  233C  3180   	fcall	_LCDcmd
 12318                           
 12319                           ;main.c: 329: LCDchar('A');
 12320  00AF  3041               	movlw	65
 12321  00B0  318B  2343  3180   	fcall	_LCDchar
 12322  00B3                     i1l3996:
 12323                           
 12324                           ;main.c: 332: if(clkAlarm.trigger == 1){
 12325  00B3  0020               	movlb	0	; select bank0
 12326  00B4  0367               	decf	_clkAlarm+6,w
 12327  00B5  1D03               	btfss	3,2
 12328  00B6  28B8               	goto	u351_21
 12329  00B7  28B9               	goto	u351_20
 12330  00B8                     u351_21:
 12331  00B8  28C2               	goto	i1l4000
 12332  00B9                     u351_20:
 12333  00B9                     i1l3998:
 12334                           
 12335                           ;main.c: 333: LCDcmd(0x8B);
 12336  00B9  308B               	movlw	139
 12337  00BA  318B  233C  3180   	fcall	_LCDcmd
 12338                           
 12339                           ;main.c: 334: LCDchar('C');
 12340  00BD  3043               	movlw	67
 12341  00BE  318B  2343  3180   	fcall	_LCDchar
 12342                           
 12343                           ;main.c: 335: } else{
 12344  00C1  28CA               	goto	i1l4002
 12345  00C2                     i1l4000:
 12346                           
 12347                           ;main.c: 336: LCDcmd(0x8B);
 12348  00C2  308B               	movlw	139
 12349  00C3  318B  233C  3180   	fcall	_LCDcmd
 12350                           
 12351                           ;main.c: 337: LCDchar(' ');
 12352  00C6  3020               	movlw	32
 12353  00C7  318B  2343  3180   	fcall	_LCDchar
 12354  00CA                     i1l4002:
 12355                           
 12356                           ;main.c: 338: };main.c: 341: if(tempAlarm.trigger == 1){
 12357  00CA  0020               	movlb	0	; select bank0
 12358  00CB  036B               	decf	_tempAlarm+1,w
 12359  00CC  1D03               	btfss	3,2
 12360  00CD  28CF               	goto	u352_21
 12361  00CE  28D0               	goto	u352_20
 12362  00CF                     u352_21:
 12363  00CF  28D9               	goto	i1l4006
 12364  00D0                     u352_20:
 12365  00D0                     i1l4004:
 12366                           
 12367                           ;main.c: 342: LCDcmd(0x8C);
 12368  00D0  308C               	movlw	140
 12369  00D1  318B  233C  3180   	fcall	_LCDcmd
 12370                           
 12371                           ;main.c: 343: LCDchar('T');
 12372  00D4  3054               	movlw	84
 12373  00D5  318B  2343  3180   	fcall	_LCDchar
 12374                           
 12375                           ;main.c: 344: } else{
 12376  00D8  28E1               	goto	i1l4008
 12377  00D9                     i1l4006:
 12378                           
 12379                           ;main.c: 345: LCDcmd(0x8C);
 12380  00D9  308C               	movlw	140
 12381  00DA  318B  233C  3180   	fcall	_LCDcmd
 12382                           
 12383                           ;main.c: 346: LCDchar(' ');
 12384  00DD  3020               	movlw	32
 12385  00DE  318B  2343  3180   	fcall	_LCDchar
 12386  00E1                     i1l4008:
 12387                           
 12388                           ;main.c: 347: };main.c: 350: if(lumAlarm.trigger == 1){
 12389  00E1  0020               	movlb	0	; select bank0
 12390  00E2  0369               	decf	_lumAlarm+1,w
 12391  00E3  1D03               	btfss	3,2
 12392  00E4  28E6               	goto	u353_21
 12393  00E5  28E7               	goto	u353_20
 12394  00E6                     u353_21:
 12395  00E6  28F0               	goto	i1l4012
 12396  00E7                     u353_20:
 12397  00E7                     i1l4010:
 12398                           
 12399                           ;main.c: 351: LCDcmd(0x8D);
 12400  00E7  308D               	movlw	141
 12401  00E8  318B  233C  3180   	fcall	_LCDcmd
 12402                           
 12403                           ;main.c: 352: LCDchar('L');
 12404  00EB  304C               	movlw	76
 12405  00EC  318B  2343  3180   	fcall	_LCDchar
 12406                           
 12407                           ;main.c: 353: } else{
 12408  00EF  28F8               	goto	i1l4014
 12409  00F0                     i1l4012:
 12410                           
 12411                           ;main.c: 354: LCDcmd(0x8D);
 12412  00F0  308D               	movlw	141
 12413  00F1  318B  233C  3180   	fcall	_LCDcmd
 12414                           
 12415                           ;main.c: 355: LCDchar(' ');
 12416  00F4  3020               	movlw	32
 12417  00F5  318B  2343  3180   	fcall	_LCDchar
 12418  00F8                     i1l4014:
 12419                           
 12420                           ;main.c: 356: };main.c: 357: if(clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigge
      +                          r){
 12421  00F8  0020               	movlb	0	; select bank0
 12422  00F9  0867               	movf	_clkAlarm+6,w
 12423  00FA  1D03               	btfss	3,2
 12424  00FB  28FD               	goto	u354_21
 12425  00FC  28FE               	goto	u354_20
 12426  00FD                     u354_21:
 12427  00FD  2908               	goto	i1l4020
 12428  00FE                     u354_20:
 12429  00FE                     i1l4016:
 12430  00FE  086B               	movf	_tempAlarm+1,w
 12431  00FF  1D03               	btfss	3,2
 12432  0100  2902               	goto	u355_21
 12433  0101  2903               	goto	u355_20
 12434  0102                     u355_21:
 12435  0102  2908               	goto	i1l4020
 12436  0103                     u355_20:
 12437  0103                     i1l4018:
 12438  0103  0869               	movf	_lumAlarm+1,w
 12439  0104  1903               	btfsc	3,2
 12440  0105  2907               	goto	u356_21
 12441  0106  2908               	goto	u356_20
 12442  0107                     u356_21:
 12443  0107  29B9               	goto	i1l1154
 12444  0108                     u356_20:
 12445  0108                     i1l4020:
 12446                           
 12447                           ;main.c: 358: if(alarmPWMStart.h == -1){
 12448  0108  0021               	movlb	1	; select bank1
 12449  0109  0A3A               	incf	_alarmPWMStart^(0+128),w
 12450  010A  1D03               	skipz
 12451  010B  2910               	goto	u357_21
 12452  010C  0A3B               	incf	(_alarmPWMStart+1)^(0+128),w
 12453  010D  1D03               	btfss	3,2
 12454  010E  2910               	goto	u357_21
 12455  010F  2911               	goto	u357_20
 12456  0110                     u357_21:
 12457  0110  2929               	goto	i1l4024
 12458  0111                     u357_20:
 12459  0111                     i1l4022:
 12460                           
 12461                           ;main.c: 359: alarmPWMStart.h = t.h;
 12462  0111  0020               	movlb	0	; select bank0
 12463  0112  084D               	movf	_t+1,w
 12464  0113  0021               	movlb	1	; select bank1
 12465  0114  00BB               	movwf	(_alarmPWMStart+1)^(0+128)
 12466  0115  0020               	movlb	0	; select bank0
 12467  0116  084C               	movf	_t,w
 12468  0117  0021               	movlb	1	; select bank1
 12469  0118  00BA               	movwf	_alarmPWMStart^(0+128)
 12470                           
 12471                           ;main.c: 360: alarmPWMStart.m = t.m;
 12472  0119  0020               	movlb	0	; select bank0
 12473  011A  084F               	movf	_t+3,w
 12474  011B  0021               	movlb	1	; select bank1
 12475  011C  00BD               	movwf	((_alarmPWMStart+1)^(0+128)+2)
 12476  011D  0020               	movlb	0	; select bank0
 12477  011E  084E               	movf	_t+2,w
 12478  011F  0021               	movlb	1	; select bank1
 12479  0120  00BC               	movwf	(_alarmPWMStart^(0+128)+2)
 12480                           
 12481                           ;main.c: 361: alarmPWMStart.s = t.s;
 12482  0121  0020               	movlb	0	; select bank0
 12483  0122  0851               	movf	_t+5,w
 12484  0123  0021               	movlb	1	; select bank1
 12485  0124  00BF               	movwf	((_alarmPWMStart+1)^(0+128)+4)
 12486  0125  0020               	movlb	0	; select bank0
 12487  0126  0850               	movf	_t+4,w
 12488  0127  0021               	movlb	1	; select bank1
 12489  0128  00BE               	movwf	(_alarmPWMStart^(0+128)+4)
 12490  0129                     i1l4024:
 12491                           
 12492                           ;main.c: 362: };main.c: 363: struct Time diff = {0,0,0};
 12493  0129  30B4               	movlw	low menuLCD_ISR@F12791
 12494  012A  0086               	movwf	6
 12495  012B  3000               	movlw	high menuLCD_ISR@F12791
 12496  012C  0087               	movwf	7
 12497  012D  3046               	movlw	low menuLCD_ISR@diff
 12498  012E  0084               	movwf	4
 12499  012F  3000               	movlw	high menuLCD_ISR@diff
 12500  0130  0085               	movwf	5
 12501  0131  3006               	movlw	6
 12502  0132  0020               	movlb	0	; select bank0
 12503  0133  00B5               	movwf	??_menuLCD_ISR
 12504  0134                     u358_20:
 12505  0134  0016               	moviw fsr1++
 12506  0135  001A               	movwi fsr0++
 12507  0136  0BB5               	decfsz	??_menuLCD_ISR,f
 12508  0137  2934               	goto	u358_20
 12509  0138                     i1l4026:
 12510                           
 12511                           ;main.c: 364: differenceBetweenTimePeriod( t, alarmPWMStart, &diff);
 12512  0138  304C               	movlw	low _t
 12513  0139  0086               	movwf	6
 12514  013A  3000               	movlw	high _t
 12515  013B  0087               	movwf	7
 12516  013C  3070               	movlw	low differenceBetweenTimePeriod@start
 12517  013D  0084               	movwf	4
 12518  013E  3000               	movlw	high differenceBetweenTimePeriod@start
 12519  013F  0085               	movwf	5
 12520  0140  3F40               	moviw [0]fsr1
 12521  0141  3F80               	movwi [0]fsr0
 12522  0142  3F41               	moviw [1]fsr1
 12523  0143  3F81               	movwi [1]fsr0
 12524  0144  3F42               	moviw [2]fsr1
 12525  0145  3F82               	movwi [2]fsr0
 12526  0146  3F43               	moviw [3]fsr1
 12527  0147  3F83               	movwi [3]fsr0
 12528  0148  3F44               	moviw [4]fsr1
 12529  0149  3F84               	movwi [4]fsr0
 12530  014A  3F45               	moviw [5]fsr1
 12531  014B  3F85               	movwi [5]fsr0
 12532  014C  30BA               	movlw	low _alarmPWMStart
 12533  014D  0086               	movwf	6
 12534  014E  3000               	movlw	high _alarmPWMStart
 12535  014F  0087               	movwf	7
 12536  0150  3076               	movlw	low differenceBetweenTimePeriod@stop
 12537  0151  0084               	movwf	4
 12538  0152  3000               	movlw	high differenceBetweenTimePeriod@stop
 12539  0153  0085               	movwf	5
 12540  0154  3F40               	moviw [0]fsr1
 12541  0155  3F80               	movwi [0]fsr0
 12542  0156  3F41               	moviw [1]fsr1
 12543  0157  3F81               	movwi [1]fsr0
 12544  0158  3F42               	moviw [2]fsr1
 12545  0159  3F82               	movwi [2]fsr0
 12546  015A  3F43               	moviw [3]fsr1
 12547  015B  3F83               	movwi [3]fsr0
 12548  015C  3F44               	moviw [4]fsr1
 12549  015D  3F84               	movwi [4]fsr0
 12550  015E  3F45               	moviw [5]fsr1
 12551  015F  3F85               	movwi [5]fsr0
 12552  0160  3046               	movlw	(low (menuLCD_ISR@diff| 0))& (0+255)
 12553  0161  00B5               	movwf	??_menuLCD_ISR
 12554  0162  0835               	movf	??_menuLCD_ISR,w
 12555  0163  00FC               	movwf	differenceBetweenTimePeriod@diff
 12556  0164  318F  2720  3180   	fcall	_differenceBetweenTimePeriod
 12557  0167                     i1l4028:
 12558                           
 12559                           ;main.c: 367: if(diff.s <= 5){
 12560  0167  0020               	movlb	0	; select bank0
 12561  0168  084B               	movf	menuLCD_ISR@diff+5,w
 12562  0169  3A80               	xorlw	128
 12563  016A  00B5               	movwf	??_menuLCD_ISR
 12564  016B  3080               	movlw	128
 12565  016C  0235               	subwf	??_menuLCD_ISR,w
 12566  016D  1D03               	skipz
 12567  016E  2971               	goto	u359_25
 12568  016F  3006               	movlw	6
 12569  0170  024A               	subwf	menuLCD_ISR@diff+4,w
 12570  0171                     u359_25:
 12571  0171  1803               	skipnc
 12572  0172  2974               	goto	u359_21
 12573  0173  2975               	goto	u359_20
 12574  0174                     u359_21:
 12575  0174  299F               	goto	i1l1148
 12576  0175                     u359_20:
 12577  0175                     i1l4030:
 12578                           
 12579                           ;main.c: 368: if(PWM6EN==0){
 12580  0175  0027               	movlb	7	; select bank7
 12581  0176  1B8E               	btfsc	14,7	;volatile
 12582  0177  2979               	goto	u360_21
 12583  0178  297A               	goto	u360_20
 12584  0179                     u360_21:
 12585  0179  2980               	goto	i1l4034
 12586  017A                     u360_20:
 12587  017A                     i1l4032:
 12588                           
 12589                           ;main.c: 369: TMR2_StartTimer();
 12590  017A  318B  230C  3180   	fcall	_TMR2_StartTimer
 12591                           
 12592                           ;main.c: 370: PWM_Output_D4_Enable();
 12593  017D  318A  22FA  3180   	fcall	_PWM_Output_D4_Enable
 12594  0180                     i1l4034:
 12595                           
 12596                           ;main.c: 371: };main.c: 372: if(dimingLed <= 1023){
 12597  0180  0020               	movlb	0	; select bank0
 12598  0181  0857               	movf	_dimingLed+1,w
 12599  0182  3A80               	xorlw	128
 12600  0183  00B5               	movwf	??_menuLCD_ISR
 12601  0184  3084               	movlw	132
 12602  0185  0235               	subwf	??_menuLCD_ISR,w
 12603  0186  1D03               	skipz
 12604  0187  298A               	goto	u361_25
 12605  0188  3000               	movlw	0
 12606  0189  0256               	subwf	_dimingLed,w
 12607  018A                     u361_25:
 12608  018A  1803               	skipnc
 12609  018B  298D               	goto	u361_21
 12610  018C  298E               	goto	u361_20
 12611  018D                     u361_21:
 12612  018D  2994               	goto	i1l4038
 12613  018E                     u361_20:
 12614  018E                     i1l4036:
 12615                           
 12616                           ;main.c: 373: dimingLed += 200;
 12617  018E  30C8               	movlw	200
 12618  018F  0020               	movlb	0	; select bank0
 12619  0190  07D6               	addwf	_dimingLed,f
 12620  0191  3000               	movlw	0
 12621  0192  3DD7               	addwfc	_dimingLed+1,f
 12622                           
 12623                           ;main.c: 374: } else{
 12624  0193  2997               	goto	i1l4040
 12625  0194                     i1l4038:
 12626                           
 12627                           ;main.c: 375: dimingLed = 0;
 12628  0194  0020               	movlb	0	; select bank0
 12629  0195  01D6               	clrf	_dimingLed
 12630  0196  01D7               	clrf	_dimingLed+1
 12631  0197                     i1l4040:
 12632                           
 12633                           ;main.c: 376: };main.c: 377: PWM6_LoadDutyValue(dimingLed);
 12634  0197  0857               	movf	_dimingLed+1,w
 12635  0198  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12636  0199  0856               	movf	_dimingLed,w
 12637  019A  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
 12638  019B  318B  23FA  3180   	fcall	_PWM6_LoadDutyValue
 12639                           
 12640                           ;main.c: 378: } else if(PWM6EN==1){
 12641  019E  29B9               	goto	i1l1154
 12642  019F                     i1l1148:
 12643  019F  0027               	movlb	7	; select bank7
 12644  01A0  1F8E               	btfss	14,7	;volatile
 12645  01A1  29A3               	goto	u362_21
 12646  01A2  29A4               	goto	u362_20
 12647  01A3                     u362_21:
 12648  01A3  29B9               	goto	i1l1154
 12649  01A4                     u362_20:
 12650  01A4                     i1l4042:
 12651                           
 12652                           ;main.c: 379: PWM6_LoadDutyValue(0);
 12653  01A4  3000               	movlw	0
 12654  01A5  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
 12655  01A6  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12656  01A7  318B  23FA  3180   	fcall	_PWM6_LoadDutyValue
 12657  01AA                     i1l4044:
 12658                           
 12659                           ;main.c: 380: TMR2_StopTimer();
 12660  01AA  318B  2310  3180   	fcall	i1_TMR2_StopTimer
 12661  01AD                     i1l4046:
 12662                           
 12663                           ;main.c: 381: PWM_Output_D4_Disable();
 12664  01AD  318B  2300  3180   	fcall	i1_PWM_Output_D4_Disable
 12665  01B0  29B9               	goto	i1l1154
 12666  01B1                     i1l4048:
 12667                           
 12668                           ;main.c: 385: LCDcmd(0x8F);
 12669  01B1  308F               	movlw	143
 12670  01B2  318B  233C  3180   	fcall	_LCDcmd
 12671                           
 12672                           ;main.c: 386: LCDchar('a');
 12673  01B5  3061               	movlw	97
 12674  01B6  318B  2343  3180   	fcall	_LCDchar
 12675  01B9                     i1l1154:
 12676                           
 12677                           ;main.c: 387: };main.c: 389: LCDcmd(0xc0);
 12678  01B9  30C0               	movlw	192
 12679  01BA  318B  233C  3180   	fcall	_LCDcmd
 12680  01BD                     i1l4050:
 12681                           
 12682                           ;main.c: 390: char tt[4];;main.c: 391: if(editingTempAlarm){
 12683  01BD  0020               	movlb	0	; select bank0
 12684  01BE  085E               	movf	_editingTempAlarm,w
 12685  01BF  1903               	btfsc	3,2
 12686  01C0  29C2               	goto	u363_21
 12687  01C1  29C3               	goto	u363_20
 12688  01C2                     u363_21:
 12689  01C2  29D3               	goto	i1l4054
 12690  01C3                     u363_20:
 12691  01C3                     i1l4052:
 12692                           
 12693                           ;main.c: 392: sprintf(tt, "%02d C", tempAlarm.alarmTemp);
 12694  01C3  3019               	movlw	low (STR_3| (0+32768))
 12695  01C4  00A0               	movwf	sprintf@f
 12696  01C5  3090               	movlw	high (STR_3| (0+32768))
 12697  01C6  00A1               	movwf	sprintf@f+1
 12698  01C7  086A               	movf	_tempAlarm,w
 12699  01C8  00B5               	movwf	??_menuLCD_ISR
 12700  01C9  01B6               	clrf	??_menuLCD_ISR+1
 12701  01CA  0835               	movf	??_menuLCD_ISR,w
 12702  01CB  00A2               	movwf	?_sprintf+2
 12703  01CC  0836               	movf	??_menuLCD_ISR+1,w
 12704  01CD  00A3               	movwf	?_sprintf+3
 12705  01CE  303F               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 12706  01CF  3182  2235  3180   	fcall	_sprintf
 12707                           
 12708                           ;main.c: 393: } else{
 12709  01D2  29E2               	goto	i1l4056
 12710  01D3                     i1l4054:
 12711                           
 12712                           ;main.c: 394: sprintf(tt, "%02d C", temp);
 12713  01D3  3019               	movlw	low (STR_3| (0+32768))
 12714  01D4  00A0               	movwf	sprintf@f
 12715  01D5  3090               	movlw	high (STR_3| (0+32768))
 12716  01D6  00A1               	movwf	sprintf@f+1
 12717  01D7  0860               	movf	_temp,w
 12718  01D8  00B5               	movwf	??_menuLCD_ISR
 12719  01D9  01B6               	clrf	??_menuLCD_ISR+1
 12720  01DA  0835               	movf	??_menuLCD_ISR,w
 12721  01DB  00A2               	movwf	?_sprintf+2
 12722  01DC  0836               	movf	??_menuLCD_ISR+1,w
 12723  01DD  00A3               	movwf	?_sprintf+3
 12724  01DE  303F               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 12725  01DF  3182  2235  3180   	fcall	_sprintf
 12726  01E2                     i1l4056:
 12727                           
 12728                           ;main.c: 395: };main.c: 396: LCDstr(tt);
 12729  01E2  303F               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 12730  01E3  318B  23E6  3180   	fcall	_LCDstr
 12731  01E6                     i1l4058:
 12732                           
 12733                           ;main.c: 398: LCDcmd(0xcd);
 12734  01E6  30CD               	movlw	205
 12735  01E7  318B  233C  3180   	fcall	_LCDcmd
 12736  01EA                     i1l4060:
 12737                           
 12738                           ;main.c: 399: char l[3];;main.c: 400: sprintf(l, "L %d", lumLevel);
 12739  01EA  3020               	movlw	low (STR_5| (0+32768))
 12740  01EB  0020               	movlb	0	; select bank0
 12741  01EC  00A0               	movwf	sprintf@f
 12742  01ED  3090               	movlw	high (STR_5| (0+32768))
 12743  01EE  00A1               	movwf	sprintf@f+1
 12744  01EF  085F               	movf	_lumLevel,w
 12745  01F0  00B5               	movwf	??_menuLCD_ISR
 12746  01F1  01B6               	clrf	??_menuLCD_ISR+1
 12747  01F2  0835               	movf	??_menuLCD_ISR,w
 12748  01F3  00A2               	movwf	?_sprintf+2
 12749  01F4  0836               	movf	??_menuLCD_ISR+1,w
 12750  01F5  00A3               	movwf	?_sprintf+3
 12751  01F6  3043               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 12752  01F7  3182  2235  3180   	fcall	_sprintf
 12753  01FA                     i1l4062:
 12754                           
 12755                           ;main.c: 401: LCDstr(l);
 12756  01FA  3043               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 12757  01FB  318B  23E6  3180   	fcall	_LCDstr
 12758  01FE                     i1l4064:
 12759                           
 12760                           ;main.c: 403: if(mode == 1){
 12761  01FE  0020               	movlb	0	; select bank0
 12762  01FF  0352               	decf	_mode,w
 12763  0200  0453               	iorwf	_mode+1,w
 12764  0201  1D03               	btfss	3,2
 12765  0202  2A04               	goto	u364_21
 12766  0203  2A05               	goto	u364_20
 12767  0204                     u364_21:
 12768  0204  2A29               	goto	i1l4078
 12769  0205                     u364_20:
 12770  0205                     i1l4066:
 12771                           
 12772                           ;main.c: 404: if(editingClockAlarm == 1){
 12773  0205  0354               	decf	_editingClockAlarm,w
 12774  0206  0455               	iorwf	_editingClockAlarm+1,w
 12775  0207  1D03               	btfss	3,2
 12776  0208  2A0A               	goto	u365_21
 12777  0209  2A0B               	goto	u365_20
 12778  020A                     u365_21:
 12779  020A  2A10               	goto	i1l4070
 12780  020B                     u365_20:
 12781  020B                     i1l4068:
 12782                           
 12783                           ;main.c: 405: LCDcmd(0x81);
 12784  020B  3081               	movlw	129
 12785  020C  318B  233C  3180   	fcall	_LCDcmd
 12786                           
 12787                           ;main.c: 406: } else if(editingClockAlarm == 2){
 12788  020F  2A34               	goto	i1l1165
 12789  0210                     i1l4070:
 12790  0210  3002               	movlw	2
 12791  0211  0654               	xorwf	_editingClockAlarm,w
 12792  0212  0455               	iorwf	_editingClockAlarm+1,w
 12793  0213  1D03               	btfss	3,2
 12794  0214  2A16               	goto	u366_21
 12795  0215  2A17               	goto	u366_20
 12796  0216                     u366_21:
 12797  0216  2A1C               	goto	i1l4074
 12798  0217                     u366_20:
 12799  0217                     i1l4072:
 12800                           
 12801                           ;main.c: 407: LCDcmd(0x84);
 12802  0217  3084               	movlw	132
 12803  0218  318B  233C  3180   	fcall	_LCDcmd
 12804                           
 12805                           ;main.c: 408: } else if(editingClockAlarm == 3){
 12806  021B  2A34               	goto	i1l1165
 12807  021C                     i1l4074:
 12808  021C  3003               	movlw	3
 12809  021D  0654               	xorwf	_editingClockAlarm,w
 12810  021E  0455               	iorwf	_editingClockAlarm+1,w
 12811  021F  1D03               	btfss	3,2
 12812  0220  2A22               	goto	u367_21
 12813  0221  2A23               	goto	u367_20
 12814  0222                     u367_21:
 12815  0222  2A28               	goto	i1l1159
 12816  0223                     u367_20:
 12817  0223                     i1l4076:
 12818                           
 12819                           ;main.c: 409: LCDcmd(0x87);
 12820  0223  3087               	movlw	135
 12821  0224  318B  233C  3180   	fcall	_LCDcmd
 12822  0227  2A34               	goto	i1l1165
 12823  0228                     i1l1159:
 12824                           
 12825                           ;main.c: 410: };main.c: 411: } else if(mode == 2){
 12826  0228  2A34               	goto	i1l1165
 12827  0229                     i1l4078:
 12828  0229  3002               	movlw	2
 12829  022A  0652               	xorwf	_mode,w
 12830  022B  0453               	iorwf	_mode+1,w
 12831  022C  1D03               	btfss	3,2
 12832  022D  2A2F               	goto	u368_21
 12833  022E  2A30               	goto	u368_20
 12834  022F                     u368_21:
 12835  022F  2A34               	goto	i1l1165
 12836  0230                     u368_20:
 12837  0230                     i1l4080:
 12838                           
 12839                           ;main.c: 412: LCDcmd(0xc1);
 12840  0230  30C1               	movlw	193
 12841  0231  318B  233C  3180   	fcall	_LCDcmd
 12842  0234                     i1l1165:
 12843  0234  0008               	return
 12844  0235                     __end_of_menuLCD_ISR:
 12845                           
 12846                           	psect	text35
 12847  0B10                     __ptext35:	
 12848 ;; *************** function i1_TMR2_StopTimer *****************
 12849 ;; Defined at:
 12850 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 12851 ;; Parameters:    Size  Location     Type
 12852 ;;		None
 12853 ;; Auto vars:     Size  Location     Type
 12854 ;;		None
 12855 ;; Return value:  Size  Location     Type
 12856 ;;                  1    wreg      void 
 12857 ;; Registers used:
 12858 ;;		status,2, status,0, pclath, cstack
 12859 ;; Tracked objects:
 12860 ;;		On entry : 0/0
 12861 ;;		On exit  : 0/0
 12862 ;;		Unchanged: 0/0
 12863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12868 ;;Total ram usage:        0 bytes
 12869 ;; Hardware stack levels used:    1
 12870 ;; Hardware stack levels required when called:    1
 12871 ;; This function calls:
 12872 ;;		i1_TMR2_Stop
 12873 ;; This function is called by:
 12874 ;;		_menuLCD_ISR
 12875 ;; This function uses a non-reentrant model
 12876 ;;
 12877                           
 12878                           
 12879                           ;psect for function i1_TMR2_StopTimer
 12880  0B10                     i1_TMR2_StopTimer:
 12881  0B10                     i1l3722:	
 12882                           ;incstack = 0
 12883                           ; Regs used in i1_TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 12884                           
 12885                           
 12886                           ;tmr2.c: 119: TMR2_Stop();
 12887  0B10  318B  2303  318B   	fcall	i1_TMR2_Stop
 12888  0B13                     i1l767:
 12889  0B13  0008               	return
 12890  0B14                     __end_ofi1_TMR2_StopTimer:
 12891                           
 12892                           	psect	text36
 12893  0B03                     __ptext36:	
 12894 ;; *************** function i1_TMR2_Stop *****************
 12895 ;; Defined at:
 12896 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 12897 ;; Parameters:    Size  Location     Type
 12898 ;;		None
 12899 ;; Auto vars:     Size  Location     Type
 12900 ;;		None
 12901 ;; Return value:  Size  Location     Type
 12902 ;;                  1    wreg      void 
 12903 ;; Registers used:
 12904 ;;		None
 12905 ;; Tracked objects:
 12906 ;;		On entry : 0/0
 12907 ;;		On exit  : 0/0
 12908 ;;		Unchanged: 0/0
 12909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12914 ;;Total ram usage:        0 bytes
 12915 ;; Hardware stack levels used:    1
 12916 ;; This function calls:
 12917 ;;		Nothing
 12918 ;; This function is called by:
 12919 ;;		i1_TMR2_StopTimer
 12920 ;; This function uses a non-reentrant model
 12921 ;;
 12922                           
 12923                           
 12924                           ;psect for function i1_TMR2_Stop
 12925  0B03                     i1_TMR2_Stop:
 12926  0B03                     i1l3482:	
 12927                           ;incstack = 0
 12928                           ; Regs used in i1_TMR2_Stop: []
 12929                           
 12930                           
 12931                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 12932  0B03  0025               	movlb	5	; select bank5
 12933  0B04  138E               	bcf	14,7	;volatile
 12934  0B05                     i1l764:
 12935  0B05  0008               	return
 12936  0B06                     __end_ofi1_TMR2_Stop:
 12937                           
 12938                           	psect	text37
 12939  0B00                     __ptext37:	
 12940 ;; *************** function i1_PWM_Output_D4_Disable *****************
 12941 ;; Defined at:
 12942 ;;		line 228 in file "main.c"
 12943 ;; Parameters:    Size  Location     Type
 12944 ;;		None
 12945 ;; Auto vars:     Size  Location     Type
 12946 ;;		None
 12947 ;; Return value:  Size  Location     Type
 12948 ;;                  1    wreg      void 
 12949 ;; Registers used:
 12950 ;;		None
 12951 ;; Tracked objects:
 12952 ;;		On entry : 0/0
 12953 ;;		On exit  : 0/0
 12954 ;;		Unchanged: 0/0
 12955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12960 ;;Total ram usage:        0 bytes
 12961 ;; Hardware stack levels used:    1
 12962 ;; This function calls:
 12963 ;;		Nothing
 12964 ;; This function is called by:
 12965 ;;		_menuLCD_ISR
 12966 ;; This function uses a non-reentrant model
 12967 ;;
 12968                           
 12969                           
 12970                           ;psect for function i1_PWM_Output_D4_Disable
 12971  0B00                     i1_PWM_Output_D4_Disable:
 12972  0B00                     i1l3724:	
 12973                           ;incstack = 0
 12974                           ; Regs used in i1_PWM_Output_D4_Disable: []
 12975                           
 12976                           
 12977                           ;main.c: 229: PWM6EN = 0;
 12978  0B00  0027               	movlb	7	; select bank7
 12979  0B01  138E               	bcf	14,7	;volatile
 12980  0B02                     i1l1090:
 12981  0B02  0008               	return
 12982  0B03                     __end_ofi1_PWM_Output_D4_Disable:
 12983                           
 12984                           	psect	text38
 12985  0235                     __ptext38:	
 12986 ;; *************** function _sprintf *****************
 12987 ;; Defined at:
 12988 ;;		line 505 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
 12989 ;; Parameters:    Size  Location     Type
 12990 ;;  sp              1    wreg     PTR unsigned char 
 12991 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 12992 ;;  f               2    0[BANK0 ] PTR const unsigned char 
 12993 ;;		 -> STR_5(5), STR_4(7), STR_3(7), STR_2(15), 
 12994 ;;		 -> STR_1(15), 
 12995 ;; Auto vars:     Size  Location     Type
 12996 ;;  sp              1   20[BANK0 ] PTR unsigned char 
 12997 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 12998 ;;  tmpval          4    0        struct .
 12999 ;;  width           2   17[BANK0 ] int 
 13000 ;;  val             2   14[BANK0 ] unsigned int 
 13001 ;;  cp              2    0        PTR const unsigned char 
 13002 ;;  len             2    0        unsigned int 
 13003 ;;  c               1   19[BANK0 ] unsigned char 
 13004 ;;  flag            1   16[BANK0 ] unsigned char 
 13005 ;;  prec            1   13[BANK0 ] char 
 13006 ;;  ap              1   12[BANK0 ] PTR void [1]
 13007 ;;		 -> ?_sprintf(2), 
 13008 ;; Return value:  Size  Location     Type
 13009 ;;                  2    0[BANK0 ] int 
 13010 ;; Registers used:
 13011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13012 ;; Tracked objects:
 13013 ;;		On entry : 0/0
 13014 ;;		On exit  : 0/0
 13015 ;;		Unchanged: 0/0
 13016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13017 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13018 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13019 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13020 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13021 ;;Total ram usage:       21 bytes
 13022 ;; Hardware stack levels used:    1
 13023 ;; Hardware stack levels required when called:    1
 13024 ;; This function calls:
 13025 ;;		___lwdiv
 13026 ;;		___lwmod
 13027 ;;		___wmul
 13028 ;;		_isdigit
 13029 ;; This function is called by:
 13030 ;;		_menuLCD_ISR
 13031 ;; This function uses a non-reentrant model
 13032 ;;
 13033                           
 13034                           
 13035                           ;psect for function _sprintf
 13036  0235                     _sprintf:
 13037                           
 13038                           ;incstack = 0
 13039                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13040                           ;sprintf@sp stored from wreg
 13041  0235  0020               	movlb	0	; select bank0
 13042  0236  00B4               	movwf	sprintf@sp
 13043  0237                     i1l3612:
 13044                           
 13045                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 13046  0237  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 13047  0238  00A8               	movwf	??_sprintf
 13048  0239  0828               	movf	??_sprintf,w
 13049  023A  00AC               	movwf	sprintf@ap
 13050                           
 13051                           ;doprnt.c: 553: while((c = *f++)) {
 13052  023B  2BB9               	goto	i1l3716
 13053  023C                     i1l3614:
 13054                           
 13055                           ;doprnt.c: 555: if(c != '%')
 13056  023C  3025               	movlw	37
 13057  023D  0633               	xorwf	sprintf@c,w
 13058  023E  1903               	btfsc	3,2
 13059  023F  2A41               	goto	u301_21
 13060  0240  2A42               	goto	u301_20
 13061  0241                     u301_21:
 13062  0241  2A4E               	goto	i1l3620
 13063  0242                     u301_20:
 13064  0242                     i1l3616:
 13065                           
 13066                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 13067  0242  0833               	movf	sprintf@c,w
 13068  0243  00A8               	movwf	??_sprintf
 13069  0244  0834               	movf	sprintf@sp,w
 13070  0245  0086               	movwf	6
 13071  0246  0187               	clrf	7
 13072  0247  0828               	movf	??_sprintf,w
 13073  0248  0081               	movwf	1
 13074  0249                     i1l3618:
 13075  0249  3001               	movlw	1
 13076  024A  00A8               	movwf	??_sprintf
 13077  024B  0828               	movf	??_sprintf,w
 13078  024C  07B4               	addwf	sprintf@sp,f
 13079                           
 13080                           ;doprnt.c: 559: continue;
 13081  024D  2BB9               	goto	i1l3716
 13082  024E                     i1l3620:
 13083                           
 13084                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 13085  024E  01B1               	clrf	sprintf@width
 13086  024F  01B2               	clrf	sprintf@width+1
 13087                           
 13088                           ;doprnt.c: 565: flag = 0;
 13089  0250  01B0               	clrf	sprintf@flag
 13090  0251  2A57               	goto	i1l3626
 13091  0252                     i1l1402:	
 13092                           ;doprnt.c: 596: case '0':
 13093                           
 13094                           
 13095                           ;doprnt.c: 597: flag |= 0x04;
 13096  0252  1530               	bsf	sprintf@flag,2
 13097  0253                     i1l3622:
 13098                           
 13099                           ;doprnt.c: 598: f++;
 13100  0253  3001               	movlw	1
 13101  0254  07A0               	addwf	sprintf@f,f
 13102  0255  3000               	movlw	0
 13103  0256  3DA1               	addwfc	sprintf@f+1,f
 13104  0257                     i1l3626:	
 13105                           ;doprnt.c: 599: continue;
 13106                           
 13107  0257  0820               	movf	sprintf@f,w
 13108  0258  0084               	movwf	4
 13109  0259  0821               	movf	sprintf@f+1,w
 13110  025A  0085               	movwf	5
 13111  025B  0800               	movf	0,w	;code access
 13112                           
 13113                           ; Switch size 1, requested type "simple"
 13114                           ; Number of cases is 1, Range of values is 48 to 48
 13115                           ; switch strategies available:
 13116                           ; Name         Instructions Cycles
 13117                           ; simple_byte            4     3 (average)
 13118                           ; direct_byte           11     9 (fixed)
 13119                           ; jumptable            263     9 (fixed)
 13120                           ;	Chosen strategy is simple_byte
 13121  025C  3A30               	xorlw	48	; case 48
 13122  025D  1903               	skipnz
 13123  025E  2A52               	goto	i1l1402
 13124  025F  2A60               	goto	i1l3628
 13125  0260                     i1l3628:
 13126                           
 13127                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 13128  0260  0820               	movf	sprintf@f,w
 13129  0261  0084               	movwf	4
 13130  0262  0821               	movf	sprintf@f+1,w
 13131  0263  0085               	movwf	5
 13132  0264  0800               	movf	0,w	;code access
 13133  0265  318B  23C2  3182   	fcall	_isdigit
 13134  0268  1C03               	btfss	3,0
 13135  0269  2A6B               	goto	u302_21
 13136  026A  2A6C               	goto	u302_20
 13137  026B                     u302_21:
 13138  026B  2A9F               	goto	i1l3642
 13139  026C                     u302_20:
 13140  026C                     i1l3630:
 13141                           
 13142                           ;doprnt.c: 615: width = 0;
 13143  026C  0020               	movlb	0	; select bank0
 13144  026D  01B1               	clrf	sprintf@width
 13145  026E  01B2               	clrf	sprintf@width+1
 13146  026F                     i1l3632:
 13147                           
 13148                           ;doprnt.c: 617: width *= 10;
 13149  026F  300A               	movlw	10
 13150  0270  00F0               	movwf	___wmul@multiplier
 13151  0271  3000               	movlw	0
 13152  0272  00F1               	movwf	___wmul@multiplier+1
 13153  0273  0020               	movlb	0	; select bank0
 13154  0274  0832               	movf	sprintf@width+1,w
 13155  0275  00F3               	movwf	___wmul@multiplicand+1
 13156  0276  0831               	movf	sprintf@width,w
 13157  0277  00F2               	movwf	___wmul@multiplicand
 13158  0278  318C  248B  3182   	fcall	___wmul
 13159  027B  0871               	movf	?___wmul+1,w
 13160  027C  0020               	movlb	0	; select bank0
 13161  027D  00B2               	movwf	sprintf@width+1
 13162  027E  0870               	movf	?___wmul,w
 13163  027F  00B1               	movwf	sprintf@width
 13164  0280                     i1l3634:
 13165                           
 13166                           ;doprnt.c: 618: width += *f++ - '0';
 13167  0280  0820               	movf	sprintf@f,w
 13168  0281  0084               	movwf	4
 13169  0282  0821               	movf	sprintf@f+1,w
 13170  0283  0085               	movwf	5
 13171  0284  0800               	movf	0,w	;code access
 13172  0285  3ED0               	addlw	208
 13173  0286  00A8               	movwf	??_sprintf
 13174  0287  30FF               	movlw	255
 13175  0288  1803               	skipnc
 13176  0289  3000               	movlw	0
 13177  028A  00A9               	movwf	??_sprintf+1
 13178  028B  0828               	movf	??_sprintf,w
 13179  028C  07B1               	addwf	sprintf@width,f
 13180  028D  0829               	movf	??_sprintf+1,w
 13181  028E  3DB2               	addwfc	sprintf@width+1,f
 13182  028F                     i1l3636:
 13183  028F  3001               	movlw	1
 13184  0290  07A0               	addwf	sprintf@f,f
 13185  0291  3000               	movlw	0
 13186  0292  3DA1               	addwfc	sprintf@f+1,f
 13187  0293                     i1l3638:
 13188                           
 13189                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 13190  0293  0820               	movf	sprintf@f,w
 13191  0294  0084               	movwf	4
 13192  0295  0821               	movf	sprintf@f+1,w
 13193  0296  0085               	movwf	5
 13194  0297  0800               	movf	0,w	;code access
 13195  0298  318B  23C2  3182   	fcall	_isdigit
 13196  029B  1803               	btfsc	3,0
 13197  029C  2A9E               	goto	u303_21
 13198  029D  2A9F               	goto	u303_20
 13199  029E                     u303_21:
 13200  029E  2A6F               	goto	i1l3632
 13201  029F                     u303_20:
 13202  029F                     i1l3642:
 13203  029F  0020               	movlb	0	; select bank0
 13204  02A0  0821               	movf	sprintf@f+1,w
 13205  02A1  00A9               	movwf	??_sprintf+1
 13206  02A2  0820               	movf	sprintf@f,w
 13207  02A3  00A8               	movwf	??_sprintf
 13208  02A4  0AA0               	incf	sprintf@f,f
 13209  02A5  1903               	skipnz
 13210  02A6  0AA1               	incf	sprintf@f+1,f
 13211  02A7  0828               	movf	??_sprintf,w
 13212  02A8  0084               	movwf	4
 13213  02A9  0829               	movf	??_sprintf+1,w
 13214  02AA  0085               	movwf	5
 13215  02AB  0800               	movf	0,w	;code access
 13216  02AC  00B3               	movwf	sprintf@c
 13217                           
 13218                           ; Switch size 1, requested type "simple"
 13219                           ; Number of cases is 3, Range of values is 0 to 105
 13220                           ; switch strategies available:
 13221                           ; Name         Instructions Cycles
 13222                           ; simple_byte           10     6 (average)
 13223                           ; direct_byte          218     6 (fixed)
 13224                           ; jumptable            260     6 (fixed)
 13225                           ;	Chosen strategy is simple_byte
 13226  02AD  3A00               	xorlw	0	; case 0
 13227  02AE  1903               	skipnz
 13228  02AF  2BCD               	goto	i1l3718
 13229  02B0  3A64               	xorlw	100	; case 100
 13230  02B1  1903               	skipnz
 13231  02B2  2AB7               	goto	i1l3644
 13232  02B3  3A0D               	xorlw	13	; case 105
 13233  02B4  1903               	skipnz
 13234  02B5  2AB7               	goto	i1l3644
 13235  02B6  2BB9               	goto	i1l3716
 13236  02B7                     i1l3644:
 13237                           
 13238                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 13239  02B7  082C               	movf	sprintf@ap,w
 13240  02B8  0086               	movwf	6
 13241  02B9  0187               	clrf	7
 13242  02BA  3F40               	moviw [0]fsr1
 13243  02BB  00AE               	movwf	sprintf@val
 13244  02BC  3F41               	moviw [1]fsr1
 13245  02BD  00AF               	movwf	sprintf@val+1
 13246  02BE                     i1l3646:
 13247  02BE  3002               	movlw	2
 13248  02BF  00A8               	movwf	??_sprintf
 13249  02C0  0828               	movf	??_sprintf,w
 13250  02C1  07AC               	addwf	sprintf@ap,f
 13251  02C2                     i1l3648:
 13252                           
 13253                           ;doprnt.c: 1287: if((int)val < 0) {
 13254  02C2  1FAF               	btfss	sprintf@val+1,7
 13255  02C3  2AC5               	goto	u304_21
 13256  02C4  2AC6               	goto	u304_20
 13257  02C5                     u304_21:
 13258  02C5  2ACF               	goto	i1l3654
 13259  02C6                     u304_20:
 13260  02C6                     i1l3650:
 13261                           
 13262                           ;doprnt.c: 1288: flag |= 0x03;
 13263  02C6  3003               	movlw	3
 13264  02C7  00A8               	movwf	??_sprintf
 13265  02C8  0828               	movf	??_sprintf,w
 13266  02C9  04B0               	iorwf	sprintf@flag,f
 13267  02CA                     i1l3652:
 13268                           
 13269                           ;doprnt.c: 1289: val = -val;
 13270  02CA  09AE               	comf	sprintf@val,f
 13271  02CB  09AF               	comf	sprintf@val+1,f
 13272  02CC  0AAE               	incf	sprintf@val,f
 13273  02CD  1903               	skipnz
 13274  02CE  0AAF               	incf	sprintf@val+1,f
 13275  02CF                     i1l3654:
 13276                           
 13277                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 13278  02CF  01B3               	clrf	sprintf@c
 13279  02D0  0AB3               	incf	sprintf@c,f
 13280  02D1                     i1l3660:
 13281                           
 13282                           ;doprnt.c: 1332: if(val < dpowers[c])
 13283  02D1  0833               	movf	sprintf@c,w
 13284  02D2  00A8               	movwf	??_sprintf
 13285  02D3  01A9               	clrf	??_sprintf+1
 13286  02D4  35A8               	lslf	??_sprintf,f
 13287  02D5  0DA9               	rlf	??_sprintf+1,f
 13288  02D6  300F               	movlw	low (_dpowers| (0+32768))
 13289  02D7  0728               	addwf	??_sprintf,w
 13290  02D8  0084               	movwf	4
 13291  02D9  3090               	movlw	high (_dpowers| (0+32768))
 13292  02DA  3D29               	addwfc	??_sprintf+1,w
 13293  02DB  0085               	movwf	5
 13294  02DC  3F00               	moviw [0]fsr0
 13295  02DD  00AA               	movwf	??_sprintf+2
 13296  02DE  3F01               	moviw [1]fsr0
 13297  02DF  00AB               	movwf	??_sprintf+3
 13298  02E0  082B               	movf	??_sprintf+3,w
 13299  02E1  022F               	subwf	sprintf@val+1,w
 13300  02E2  1D03               	skipz
 13301  02E3  2AE6               	goto	u305_25
 13302  02E4  082A               	movf	??_sprintf+2,w
 13303  02E5  022E               	subwf	sprintf@val,w
 13304  02E6                     u305_25:
 13305  02E6  1803               	skipnc
 13306  02E7  2AE9               	goto	u305_21
 13307  02E8  2AEA               	goto	u305_20
 13308  02E9                     u305_21:
 13309  02E9  2AEB               	goto	i1l3664
 13310  02EA                     u305_20:
 13311  02EA  2AF5               	goto	i1l3666
 13312  02EB                     i1l3664:
 13313  02EB  3001               	movlw	1
 13314  02EC  00A8               	movwf	??_sprintf
 13315  02ED  0828               	movf	??_sprintf,w
 13316  02EE  07B3               	addwf	sprintf@c,f
 13317  02EF  3005               	movlw	5
 13318  02F0  0633               	xorwf	sprintf@c,w
 13319  02F1  1D03               	btfss	3,2
 13320  02F2  2AF4               	goto	u306_21
 13321  02F3  2AF5               	goto	u306_20
 13322  02F4                     u306_21:
 13323  02F4  2AD1               	goto	i1l3660
 13324  02F5                     u306_20:
 13325  02F5                     i1l3666:
 13326                           
 13327                           ;doprnt.c: 1371: if(width && flag & 0x03)
 13328  02F5  0831               	movf	sprintf@width,w
 13329  02F6  0432               	iorwf	sprintf@width+1,w
 13330  02F7  1903               	btfsc	3,2
 13331  02F8  2AFA               	goto	u307_21
 13332  02F9  2AFB               	goto	u307_20
 13333  02FA                     u307_21:
 13334  02FA  2B05               	goto	i1l1420
 13335  02FB                     u307_20:
 13336  02FB                     i1l3668:
 13337  02FB  0830               	movf	sprintf@flag,w
 13338  02FC  3903               	andlw	3
 13339  02FD  1903               	btfsc	3,2
 13340  02FE  2B00               	goto	u308_21
 13341  02FF  2B01               	goto	u308_20
 13342  0300                     u308_21:
 13343  0300  2B05               	goto	i1l1420
 13344  0301                     u308_20:
 13345  0301                     i1l3670:
 13346                           
 13347                           ;doprnt.c: 1372: width--;
 13348  0301  30FF               	movlw	255
 13349  0302  07B1               	addwf	sprintf@width,f
 13350  0303  30FF               	movlw	255
 13351  0304  3DB2               	addwfc	sprintf@width+1,f
 13352  0305                     i1l1420:
 13353                           
 13354                           ;doprnt.c: 1407: if(width > c)
 13355  0305  0832               	movf	sprintf@width+1,w
 13356  0306  3A80               	xorlw	128
 13357  0307  3C80               	sublw	128
 13358  0308  1D03               	skipz
 13359  0309  2B0C               	goto	u309_25
 13360  030A  0831               	movf	sprintf@width,w
 13361  030B  0233               	subwf	sprintf@c,w
 13362  030C                     u309_25:
 13363  030C  1803               	skipnc
 13364  030D  2B0F               	goto	u309_21
 13365  030E  2B10               	goto	u309_20
 13366  030F                     u309_21:
 13367  030F  2B19               	goto	i1l3674
 13368  0310                     u309_20:
 13369  0310                     i1l3672:
 13370                           
 13371                           ;doprnt.c: 1408: width -= c;
 13372  0310  0020               	movlb	0	; select bank0
 13373  0311  0833               	movf	sprintf@c,w
 13374  0312  00A8               	movwf	??_sprintf
 13375  0313  01A9               	clrf	??_sprintf+1
 13376  0314  0828               	movf	??_sprintf,w
 13377  0315  02B1               	subwf	sprintf@width,f
 13378  0316  0829               	movf	??_sprintf+1,w
 13379  0317  3BB2               	subwfb	sprintf@width+1,f
 13380  0318  2B1C               	goto	i1l3676
 13381  0319                     i1l3674:
 13382                           
 13383                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 13384  0319  0020               	movlb	0	; select bank0
 13385  031A  01B1               	clrf	sprintf@width
 13386  031B  01B2               	clrf	sprintf@width+1
 13387  031C                     i1l3676:
 13388                           
 13389                           ;doprnt.c: 1413: if(flag & 0x04) {
 13390  031C  1D30               	btfss	sprintf@flag,2
 13391  031D  2B1F               	goto	u310_21
 13392  031E  2B20               	goto	u310_20
 13393  031F                     u310_21:
 13394  031F  2B4D               	goto	i1l3692
 13395  0320                     u310_20:
 13396  0320                     i1l3678:
 13397                           
 13398                           ;doprnt.c: 1418: if(flag & 0x03)
 13399  0320  0830               	movf	sprintf@flag,w
 13400  0321  3903               	andlw	3
 13401  0322  1903               	btfsc	3,2
 13402  0323  2B25               	goto	u311_21
 13403  0324  2B26               	goto	u311_20
 13404  0325                     u311_21:
 13405  0325  2B31               	goto	i1l3684
 13406  0326                     u311_20:
 13407  0326                     i1l3680:
 13408                           
 13409                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 13410  0326  302D               	movlw	45
 13411  0327  00A8               	movwf	??_sprintf
 13412  0328  0834               	movf	sprintf@sp,w
 13413  0329  0086               	movwf	6
 13414  032A  0187               	clrf	7
 13415  032B  0828               	movf	??_sprintf,w
 13416  032C  0081               	movwf	1
 13417  032D                     i1l3682:
 13418  032D  3001               	movlw	1
 13419  032E  00A8               	movwf	??_sprintf
 13420  032F  0828               	movf	??_sprintf,w
 13421  0330  07B4               	addwf	sprintf@sp,f
 13422  0331                     i1l3684:
 13423                           
 13424                           ;doprnt.c: 1441: if(width)
 13425  0331  0831               	movf	sprintf@width,w
 13426  0332  0432               	iorwf	sprintf@width+1,w
 13427  0333  1903               	btfsc	3,2
 13428  0334  2B36               	goto	u312_21
 13429  0335  2B37               	goto	u312_20
 13430  0336                     u312_21:
 13431  0336  2B79               	goto	i1l3706
 13432  0337                     u312_20:
 13433  0337                     i1l3686:
 13434                           
 13435                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 13436  0337  3030               	movlw	48
 13437  0338  00A8               	movwf	??_sprintf
 13438  0339  0834               	movf	sprintf@sp,w
 13439  033A  0086               	movwf	6
 13440  033B  0187               	clrf	7
 13441  033C  0828               	movf	??_sprintf,w
 13442  033D  0081               	movwf	1
 13443  033E                     i1l3688:
 13444  033E  3001               	movlw	1
 13445  033F  00A8               	movwf	??_sprintf
 13446  0340  0828               	movf	??_sprintf,w
 13447  0341  07B4               	addwf	sprintf@sp,f
 13448  0342                     i1l3690:
 13449                           
 13450                           ;doprnt.c: 1444: while(--width);
 13451  0342  30FF               	movlw	255
 13452  0343  07B1               	addwf	sprintf@width,f
 13453  0344  30FF               	movlw	255
 13454  0345  3DB2               	addwfc	sprintf@width+1,f
 13455  0346  0831               	movf	sprintf@width,w
 13456  0347  0432               	iorwf	sprintf@width+1,w
 13457  0348  1D03               	btfss	3,2
 13458  0349  2B4B               	goto	u313_21
 13459  034A  2B4C               	goto	u313_20
 13460  034B                     u313_21:
 13461  034B  2B37               	goto	i1l3686
 13462  034C                     u313_20:
 13463  034C  2B79               	goto	i1l3706
 13464  034D                     i1l3692:
 13465                           
 13466                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 13467  034D  0831               	movf	sprintf@width,w
 13468  034E  0432               	iorwf	sprintf@width+1,w
 13469  034F  1903               	btfsc	3,2
 13470  0350  2B52               	goto	u314_21
 13471  0351  2B53               	goto	u314_20
 13472  0352                     u314_21:
 13473  0352  2B68               	goto	i1l3700
 13474  0353                     u314_20:
 13475  0353                     i1l3694:
 13476                           
 13477                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 13478  0353  3020               	movlw	32
 13479  0354  00A8               	movwf	??_sprintf
 13480  0355  0834               	movf	sprintf@sp,w
 13481  0356  0086               	movwf	6
 13482  0357  0187               	clrf	7
 13483  0358  0828               	movf	??_sprintf,w
 13484  0359  0081               	movwf	1
 13485  035A                     i1l3696:
 13486  035A  3001               	movlw	1
 13487  035B  00A8               	movwf	??_sprintf
 13488  035C  0828               	movf	??_sprintf,w
 13489  035D  07B4               	addwf	sprintf@sp,f
 13490  035E                     i1l3698:
 13491                           
 13492                           ;doprnt.c: 1457: while(--width);
 13493  035E  30FF               	movlw	255
 13494  035F  07B1               	addwf	sprintf@width,f
 13495  0360  30FF               	movlw	255
 13496  0361  3DB2               	addwfc	sprintf@width+1,f
 13497  0362  0831               	movf	sprintf@width,w
 13498  0363  0432               	iorwf	sprintf@width+1,w
 13499  0364  1D03               	btfss	3,2
 13500  0365  2B67               	goto	u315_21
 13501  0366  2B68               	goto	u315_20
 13502  0367                     u315_21:
 13503  0367  2B53               	goto	i1l3694
 13504  0368                     u315_20:
 13505  0368                     i1l3700:
 13506                           
 13507                           ;doprnt.c: 1464: if(flag & 0x03)
 13508  0368  0830               	movf	sprintf@flag,w
 13509  0369  3903               	andlw	3
 13510  036A  1903               	btfsc	3,2
 13511  036B  2B6D               	goto	u316_21
 13512  036C  2B6E               	goto	u316_20
 13513  036D                     u316_21:
 13514  036D  2B79               	goto	i1l3706
 13515  036E                     u316_20:
 13516  036E                     i1l3702:
 13517                           
 13518                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 13519  036E  302D               	movlw	45
 13520  036F  00A8               	movwf	??_sprintf
 13521  0370  0834               	movf	sprintf@sp,w
 13522  0371  0086               	movwf	6
 13523  0372  0187               	clrf	7
 13524  0373  0828               	movf	??_sprintf,w
 13525  0374  0081               	movwf	1
 13526  0375                     i1l3704:
 13527  0375  3001               	movlw	1
 13528  0376  00A8               	movwf	??_sprintf
 13529  0377  0828               	movf	??_sprintf,w
 13530  0378  07B4               	addwf	sprintf@sp,f
 13531  0379                     i1l3706:
 13532                           
 13533                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 13534  0379  0833               	movf	sprintf@c,w
 13535  037A  00A8               	movwf	??_sprintf
 13536  037B  0828               	movf	??_sprintf,w
 13537  037C  00AD               	movwf	sprintf@prec
 13538                           
 13539                           ;doprnt.c: 1500: while(prec--) {
 13540  037D  2BB0               	goto	i1l3714
 13541  037E                     i1l3708:
 13542                           
 13543                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 13544  037E  300A               	movlw	10
 13545  037F  00F8               	movwf	___lwmod@divisor
 13546  0380  3000               	movlw	0
 13547  0381  00F9               	movwf	___lwmod@divisor+1
 13548  0382  082D               	movf	sprintf@prec,w
 13549  0383  00A8               	movwf	??_sprintf
 13550  0384  01A9               	clrf	??_sprintf+1
 13551  0385  35A8               	lslf	??_sprintf,f
 13552  0386  0DA9               	rlf	??_sprintf+1,f
 13553  0387  300F               	movlw	low (_dpowers| (0+32768))
 13554  0388  0728               	addwf	??_sprintf,w
 13555  0389  0084               	movwf	4
 13556  038A  3090               	movlw	high (_dpowers| (0+32768))
 13557  038B  3D29               	addwfc	??_sprintf+1,w
 13558  038C  0085               	movwf	5
 13559  038D  3F00               	moviw [0]fsr0
 13560  038E  00F0               	movwf	___lwdiv@divisor
 13561  038F  3F01               	moviw [1]fsr0
 13562  0390  00F1               	movwf	___lwdiv@divisor+1
 13563  0391  082F               	movf	sprintf@val+1,w
 13564  0392  00F3               	movwf	___lwdiv@dividend+1
 13565  0393  082E               	movf	sprintf@val,w
 13566  0394  00F2               	movwf	___lwdiv@dividend
 13567  0395  318D  2573  3182   	fcall	___lwdiv
 13568  0398  0871               	movf	?___lwdiv+1,w
 13569  0399  00FB               	movwf	___lwmod@dividend+1
 13570  039A  0870               	movf	?___lwdiv,w
 13571  039B  00FA               	movwf	___lwmod@dividend
 13572  039C  318D  2507  3182   	fcall	___lwmod
 13573  039F  0878               	movf	?___lwmod,w
 13574  03A0  3E30               	addlw	48
 13575  03A1  0020               	movlb	0	; select bank0
 13576  03A2  00AA               	movwf	??_sprintf+2
 13577  03A3  082A               	movf	??_sprintf+2,w
 13578  03A4  00B3               	movwf	sprintf@c
 13579  03A5                     i1l3710:
 13580                           
 13581                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 13582  03A5  0833               	movf	sprintf@c,w
 13583  03A6  00A8               	movwf	??_sprintf
 13584  03A7  0834               	movf	sprintf@sp,w
 13585  03A8  0086               	movwf	6
 13586  03A9  0187               	clrf	7
 13587  03AA  0828               	movf	??_sprintf,w
 13588  03AB  0081               	movwf	1
 13589  03AC                     i1l3712:
 13590  03AC  3001               	movlw	1
 13591  03AD  00A8               	movwf	??_sprintf
 13592  03AE  0828               	movf	??_sprintf,w
 13593  03AF  07B4               	addwf	sprintf@sp,f
 13594  03B0                     i1l3714:
 13595  03B0  30FF               	movlw	255
 13596  03B1  00A8               	movwf	??_sprintf
 13597  03B2  0828               	movf	??_sprintf,w
 13598  03B3  07AD               	addwf	sprintf@prec,f
 13599  03B4  0A2D               	incf	sprintf@prec,w
 13600  03B5  1D03               	btfss	3,2
 13601  03B6  2BB8               	goto	u317_21
 13602  03B7  2BB9               	goto	u317_20
 13603  03B8                     u317_21:
 13604  03B8  2B7E               	goto	i1l3708
 13605  03B9                     u317_20:
 13606  03B9                     i1l3716:
 13607  03B9  0821               	movf	sprintf@f+1,w
 13608  03BA  00A9               	movwf	??_sprintf+1
 13609  03BB  0820               	movf	sprintf@f,w
 13610  03BC  00A8               	movwf	??_sprintf
 13611  03BD  0AA0               	incf	sprintf@f,f
 13612  03BE  1903               	skipnz
 13613  03BF  0AA1               	incf	sprintf@f+1,f
 13614  03C0  0828               	movf	??_sprintf,w
 13615  03C1  0084               	movwf	4
 13616  03C2  0829               	movf	??_sprintf+1,w
 13617  03C3  0085               	movwf	5
 13618  03C4  0800               	movf	0,w	;code access
 13619  03C5  00AA               	movwf	??_sprintf+2
 13620  03C6  082A               	movf	??_sprintf+2,w
 13621  03C7  00B3               	movwf	sprintf@c
 13622  03C8  0833               	movf	sprintf@c,w
 13623  03C9  1D03               	btfss	3,2
 13624  03CA  2BCC               	goto	u318_21
 13625  03CB  2BCD               	goto	u318_20
 13626  03CC                     u318_21:
 13627  03CC  2A3C               	goto	i1l3614
 13628  03CD                     u318_20:
 13629  03CD                     i1l3718:
 13630                           
 13631                           ;doprnt.c: 1564: *sp = 0;
 13632  03CD  0834               	movf	sprintf@sp,w
 13633  03CE  0086               	movwf	6
 13634  03CF  0187               	clrf	7
 13635  03D0  0181               	clrf	1
 13636  03D1                     i1l1437:
 13637  03D1  0008               	return
 13638  03D2                     __end_of_sprintf:
 13639                           
 13640                           	psect	text39
 13641  0BC2                     __ptext39:	
 13642 ;; *************** function _isdigit *****************
 13643 ;; Defined at:
 13644 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 13645 ;; Parameters:    Size  Location     Type
 13646 ;;  c               1    wreg     unsigned char 
 13647 ;; Auto vars:     Size  Location     Type
 13648 ;;  c               1    1[COMMON] unsigned char 
 13649 ;; Return value:  Size  Location     Type
 13650 ;;		None               void
 13651 ;; Registers used:
 13652 ;;		wreg, status,2, status,0
 13653 ;; Tracked objects:
 13654 ;;		On entry : 0/0
 13655 ;;		On exit  : 0/0
 13656 ;;		Unchanged: 0/0
 13657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13659 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13661 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13662 ;;Total ram usage:        2 bytes
 13663 ;; Hardware stack levels used:    1
 13664 ;; This function calls:
 13665 ;;		Nothing
 13666 ;; This function is called by:
 13667 ;;		_sprintf
 13668 ;; This function uses a non-reentrant model
 13669 ;;
 13670                           
 13671                           
 13672                           ;psect for function _isdigit
 13673  0BC2                     _isdigit:
 13674                           
 13675                           ;incstack = 0
 13676                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 13677                           ;isdigit@c stored from wreg
 13678  0BC2  00F1               	movwf	isdigit@c
 13679  0BC3                     i1l3408:
 13680  0BC3  01F0               	clrf	_isdigit$2812
 13681  0BC4                     i1l3410:
 13682  0BC4  303A               	movlw	58
 13683  0BC5  0271               	subwf	isdigit@c,w
 13684  0BC6  1803               	skipnc
 13685  0BC7  2BC9               	goto	u243_21
 13686  0BC8  2BCA               	goto	u243_20
 13687  0BC9                     u243_21:
 13688  0BC9  2BD2               	goto	i1l3416
 13689  0BCA                     u243_20:
 13690  0BCA                     i1l3412:
 13691  0BCA  3030               	movlw	48
 13692  0BCB  0271               	subwf	isdigit@c,w
 13693  0BCC  1C03               	skipc
 13694  0BCD  2BCF               	goto	u244_21
 13695  0BCE  2BD0               	goto	u244_20
 13696  0BCF                     u244_21:
 13697  0BCF  2BD2               	goto	i1l3416
 13698  0BD0                     u244_20:
 13699  0BD0                     i1l3414:
 13700  0BD0  01F0               	clrf	_isdigit$2812
 13701  0BD1  0AF0               	incf	_isdigit$2812,f
 13702  0BD2                     i1l3416:
 13703  0BD2  0C70               	rrf	_isdigit$2812,w
 13704  0BD3                     i1l1894:
 13705  0BD3  0008               	return
 13706  0BD4                     __end_of_isdigit:
 13707                           
 13708                           	psect	text40
 13709  0C8B                     __ptext40:	
 13710 ;; *************** function ___wmul *****************
 13711 ;; Defined at:
 13712 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 13713 ;; Parameters:    Size  Location     Type
 13714 ;;  multiplier      2    0[COMMON] unsigned int 
 13715 ;;  multiplicand    2    2[COMMON] unsigned int 
 13716 ;; Auto vars:     Size  Location     Type
 13717 ;;  product         2    4[COMMON] unsigned int 
 13718 ;; Return value:  Size  Location     Type
 13719 ;;                  2    0[COMMON] unsigned int 
 13720 ;; Registers used:
 13721 ;;		wreg, status,2, status,0
 13722 ;; Tracked objects:
 13723 ;;		On entry : 0/0
 13724 ;;		On exit  : 0/0
 13725 ;;		Unchanged: 0/0
 13726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13727 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13728 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13730 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13731 ;;Total ram usage:        6 bytes
 13732 ;; Hardware stack levels used:    1
 13733 ;; This function calls:
 13734 ;;		Nothing
 13735 ;; This function is called by:
 13736 ;;		_sprintf
 13737 ;;		_map
 13738 ;; This function uses a non-reentrant model
 13739 ;;
 13740                           
 13741                           
 13742                           ;psect for function ___wmul
 13743  0C8B                     ___wmul:
 13744  0C8B                     i1l3420:	
 13745                           ;incstack = 0
 13746                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13747                           
 13748  0C8B  01F4               	clrf	___wmul@product
 13749  0C8C  01F5               	clrf	___wmul@product+1
 13750  0C8D                     i1l3422:
 13751  0C8D  1C70               	btfss	___wmul@multiplier,0
 13752  0C8E  2C90               	goto	u245_21
 13753  0C8F  2C91               	goto	u245_20
 13754  0C90                     u245_21:
 13755  0C90  2C95               	goto	i1l1441
 13756  0C91                     u245_20:
 13757  0C91                     i1l3424:
 13758  0C91  0872               	movf	___wmul@multiplicand,w
 13759  0C92  07F4               	addwf	___wmul@product,f
 13760  0C93  0873               	movf	___wmul@multiplicand+1,w
 13761  0C94  3DF5               	addwfc	___wmul@product+1,f
 13762  0C95                     i1l1441:
 13763  0C95  3001               	movlw	1
 13764  0C96                     u246_25:
 13765  0C96  35F2               	lslf	___wmul@multiplicand,f
 13766  0C97  0DF3               	rlf	___wmul@multiplicand+1,f
 13767  0C98  0B89               	decfsz	9,f
 13768  0C99  2C96               	goto	u246_25
 13769  0C9A                     i1l3426:
 13770  0C9A  3001               	movlw	1
 13771  0C9B                     u247_25:
 13772  0C9B  36F1               	lsrf	___wmul@multiplier+1,f
 13773  0C9C  0CF0               	rrf	___wmul@multiplier,f
 13774  0C9D  0B89               	decfsz	9,f
 13775  0C9E  2C9B               	goto	u247_25
 13776  0C9F                     i1l3428:
 13777  0C9F  0870               	movf	___wmul@multiplier,w
 13778  0CA0  0471               	iorwf	___wmul@multiplier+1,w
 13779  0CA1  1D03               	btfss	3,2
 13780  0CA2  2CA4               	goto	u248_21
 13781  0CA3  2CA5               	goto	u248_20
 13782  0CA4                     u248_21:
 13783  0CA4  2C8D               	goto	i1l3422
 13784  0CA5                     u248_20:
 13785  0CA5                     i1l3430:
 13786  0CA5  0875               	movf	___wmul@product+1,w
 13787  0CA6  00F1               	movwf	?___wmul+1
 13788  0CA7  0874               	movf	___wmul@product,w
 13789  0CA8  00F0               	movwf	?___wmul
 13790  0CA9                     i1l1443:
 13791  0CA9  0008               	return
 13792  0CAA                     __end_of___wmul:
 13793                           
 13794                           	psect	text41
 13795  0D07                     __ptext41:	
 13796 ;; *************** function ___lwmod *****************
 13797 ;; Defined at:
 13798 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 13799 ;; Parameters:    Size  Location     Type
 13800 ;;  divisor         2    8[COMMON] unsigned int 
 13801 ;;  dividend        2   10[COMMON] unsigned int 
 13802 ;; Auto vars:     Size  Location     Type
 13803 ;;  counter         1   13[COMMON] unsigned char 
 13804 ;; Return value:  Size  Location     Type
 13805 ;;                  2    8[COMMON] unsigned int 
 13806 ;; Registers used:
 13807 ;;		wreg, status,2, status,0
 13808 ;; Tracked objects:
 13809 ;;		On entry : 0/0
 13810 ;;		On exit  : 0/0
 13811 ;;		Unchanged: 0/0
 13812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13813 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13814 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13815 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13816 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13817 ;;Total ram usage:        6 bytes
 13818 ;; Hardware stack levels used:    1
 13819 ;; This function calls:
 13820 ;;		Nothing
 13821 ;; This function is called by:
 13822 ;;		_sprintf
 13823 ;; This function uses a non-reentrant model
 13824 ;;
 13825                           
 13826                           
 13827                           ;psect for function ___lwmod
 13828  0D07                     ___lwmod:
 13829  0D07                     i1l3460:	
 13830                           ;incstack = 0
 13831                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13832                           
 13833  0D07  0878               	movf	___lwmod@divisor,w
 13834  0D08  0479               	iorwf	___lwmod@divisor+1,w
 13835  0D09  1903               	btfsc	3,2
 13836  0D0A  2D0C               	goto	u256_21
 13837  0D0B  2D0D               	goto	u256_20
 13838  0D0C                     u256_21:
 13839  0D0C  2D36               	goto	i1l3478
 13840  0D0D                     u256_20:
 13841  0D0D                     i1l3462:
 13842  0D0D  01FD               	clrf	___lwmod@counter
 13843  0D0E  0AFD               	incf	___lwmod@counter,f
 13844  0D0F  2D19               	goto	i1l3468
 13845  0D10                     i1l3464:
 13846  0D10  3001               	movlw	1
 13847  0D11                     u257_25:
 13848  0D11  35F8               	lslf	___lwmod@divisor,f
 13849  0D12  0DF9               	rlf	___lwmod@divisor+1,f
 13850  0D13  0B89               	decfsz	9,f
 13851  0D14  2D11               	goto	u257_25
 13852  0D15                     i1l3466:
 13853  0D15  3001               	movlw	1
 13854  0D16  00FC               	movwf	??___lwmod
 13855  0D17  087C               	movf	??___lwmod,w
 13856  0D18  07FD               	addwf	___lwmod@counter,f
 13857  0D19                     i1l3468:
 13858  0D19  1FF9               	btfss	___lwmod@divisor+1,7
 13859  0D1A  2D1C               	goto	u258_21
 13860  0D1B  2D1D               	goto	u258_20
 13861  0D1C                     u258_21:
 13862  0D1C  2D10               	goto	i1l3464
 13863  0D1D                     u258_20:
 13864  0D1D                     i1l3470:
 13865  0D1D  0879               	movf	___lwmod@divisor+1,w
 13866  0D1E  027B               	subwf	___lwmod@dividend+1,w
 13867  0D1F  1D03               	skipz
 13868  0D20  2D23               	goto	u259_25
 13869  0D21  0878               	movf	___lwmod@divisor,w
 13870  0D22  027A               	subwf	___lwmod@dividend,w
 13871  0D23                     u259_25:
 13872  0D23  1C03               	skipc
 13873  0D24  2D26               	goto	u259_21
 13874  0D25  2D27               	goto	u259_20
 13875  0D26                     u259_21:
 13876  0D26  2D2B               	goto	i1l3474
 13877  0D27                     u259_20:
 13878  0D27                     i1l3472:
 13879  0D27  0878               	movf	___lwmod@divisor,w
 13880  0D28  02FA               	subwf	___lwmod@dividend,f
 13881  0D29  0879               	movf	___lwmod@divisor+1,w
 13882  0D2A  3BFB               	subwfb	___lwmod@dividend+1,f
 13883  0D2B                     i1l3474:
 13884  0D2B  3001               	movlw	1
 13885  0D2C                     u260_25:
 13886  0D2C  36F9               	lsrf	___lwmod@divisor+1,f
 13887  0D2D  0CF8               	rrf	___lwmod@divisor,f
 13888  0D2E  0B89               	decfsz	9,f
 13889  0D2F  2D2C               	goto	u260_25
 13890  0D30                     i1l3476:
 13891  0D30  3001               	movlw	1
 13892  0D31  02FD               	subwf	___lwmod@counter,f
 13893  0D32  1D03               	btfss	3,2
 13894  0D33  2D35               	goto	u261_21
 13895  0D34  2D36               	goto	u261_20
 13896  0D35                     u261_21:
 13897  0D35  2D1D               	goto	i1l3470
 13898  0D36                     u261_20:
 13899  0D36                     i1l3478:
 13900  0D36  087B               	movf	___lwmod@dividend+1,w
 13901  0D37  00F9               	movwf	?___lwmod+1
 13902  0D38  087A               	movf	___lwmod@dividend,w
 13903  0D39  00F8               	movwf	?___lwmod
 13904  0D3A                     i1l1723:
 13905  0D3A  0008               	return
 13906  0D3B                     __end_of___lwmod:
 13907                           
 13908                           	psect	text42
 13909  0D73                     __ptext42:	
 13910 ;; *************** function ___lwdiv *****************
 13911 ;; Defined at:
 13912 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 13913 ;; Parameters:    Size  Location     Type
 13914 ;;  divisor         2    0[COMMON] unsigned int 
 13915 ;;  dividend        2    2[COMMON] unsigned int 
 13916 ;; Auto vars:     Size  Location     Type
 13917 ;;  quotient        2    5[COMMON] unsigned int 
 13918 ;;  counter         1    7[COMMON] unsigned char 
 13919 ;; Return value:  Size  Location     Type
 13920 ;;                  2    0[COMMON] unsigned int 
 13921 ;; Registers used:
 13922 ;;		wreg, status,2, status,0
 13923 ;; Tracked objects:
 13924 ;;		On entry : 0/0
 13925 ;;		On exit  : 0/0
 13926 ;;		Unchanged: 0/0
 13927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13929 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13930 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13931 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13932 ;;Total ram usage:        8 bytes
 13933 ;; Hardware stack levels used:    1
 13934 ;; This function calls:
 13935 ;;		Nothing
 13936 ;; This function is called by:
 13937 ;;		_sprintf
 13938 ;; This function uses a non-reentrant model
 13939 ;;
 13940                           
 13941                           
 13942                           ;psect for function ___lwdiv
 13943  0D73                     ___lwdiv:
 13944  0D73                     i1l3434:	
 13945                           ;incstack = 0
 13946                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 13947                           
 13948  0D73  01F5               	clrf	___lwdiv@quotient
 13949  0D74  01F6               	clrf	___lwdiv@quotient+1
 13950  0D75                     i1l3436:
 13951  0D75  0870               	movf	___lwdiv@divisor,w
 13952  0D76  0471               	iorwf	___lwdiv@divisor+1,w
 13953  0D77  1903               	btfsc	3,2
 13954  0D78  2D7A               	goto	u249_21
 13955  0D79  2D7B               	goto	u249_20
 13956  0D7A                     u249_21:
 13957  0D7A  2DAA               	goto	i1l3456
 13958  0D7B                     u249_20:
 13959  0D7B                     i1l3438:
 13960  0D7B  01F7               	clrf	___lwdiv@counter
 13961  0D7C  0AF7               	incf	___lwdiv@counter,f
 13962  0D7D  2D87               	goto	i1l3444
 13963  0D7E                     i1l3440:
 13964  0D7E  3001               	movlw	1
 13965  0D7F                     u250_25:
 13966  0D7F  35F0               	lslf	___lwdiv@divisor,f
 13967  0D80  0DF1               	rlf	___lwdiv@divisor+1,f
 13968  0D81  0B89               	decfsz	9,f
 13969  0D82  2D7F               	goto	u250_25
 13970  0D83                     i1l3442:
 13971  0D83  3001               	movlw	1
 13972  0D84  00F4               	movwf	??___lwdiv
 13973  0D85  0874               	movf	??___lwdiv,w
 13974  0D86  07F7               	addwf	___lwdiv@counter,f
 13975  0D87                     i1l3444:
 13976  0D87  1FF1               	btfss	___lwdiv@divisor+1,7
 13977  0D88  2D8A               	goto	u251_21
 13978  0D89  2D8B               	goto	u251_20
 13979  0D8A                     u251_21:
 13980  0D8A  2D7E               	goto	i1l3440
 13981  0D8B                     u251_20:
 13982  0D8B                     i1l3446:
 13983  0D8B  3001               	movlw	1
 13984  0D8C                     u252_25:
 13985  0D8C  35F5               	lslf	___lwdiv@quotient,f
 13986  0D8D  0DF6               	rlf	___lwdiv@quotient+1,f
 13987  0D8E  0B89               	decfsz	9,f
 13988  0D8F  2D8C               	goto	u252_25
 13989  0D90  0871               	movf	___lwdiv@divisor+1,w
 13990  0D91  0273               	subwf	___lwdiv@dividend+1,w
 13991  0D92  1D03               	skipz
 13992  0D93  2D96               	goto	u253_25
 13993  0D94  0870               	movf	___lwdiv@divisor,w
 13994  0D95  0272               	subwf	___lwdiv@dividend,w
 13995  0D96                     u253_25:
 13996  0D96  1C03               	skipc
 13997  0D97  2D99               	goto	u253_21
 13998  0D98  2D9A               	goto	u253_20
 13999  0D99                     u253_21:
 14000  0D99  2D9F               	goto	i1l3452
 14001  0D9A                     u253_20:
 14002  0D9A                     i1l3448:
 14003  0D9A  0870               	movf	___lwdiv@divisor,w
 14004  0D9B  02F2               	subwf	___lwdiv@dividend,f
 14005  0D9C  0871               	movf	___lwdiv@divisor+1,w
 14006  0D9D  3BF3               	subwfb	___lwdiv@dividend+1,f
 14007  0D9E                     i1l3450:
 14008  0D9E  1475               	bsf	___lwdiv@quotient,0
 14009  0D9F                     i1l3452:
 14010  0D9F  3001               	movlw	1
 14011  0DA0                     u254_25:
 14012  0DA0  36F1               	lsrf	___lwdiv@divisor+1,f
 14013  0DA1  0CF0               	rrf	___lwdiv@divisor,f
 14014  0DA2  0B89               	decfsz	9,f
 14015  0DA3  2DA0               	goto	u254_25
 14016  0DA4                     i1l3454:
 14017  0DA4  3001               	movlw	1
 14018  0DA5  02F7               	subwf	___lwdiv@counter,f
 14019  0DA6  1D03               	btfss	3,2
 14020  0DA7  2DA9               	goto	u255_21
 14021  0DA8  2DAA               	goto	u255_20
 14022  0DA9                     u255_21:
 14023  0DA9  2D8B               	goto	i1l3446
 14024  0DAA                     u255_20:
 14025  0DAA                     i1l3456:
 14026  0DAA  0876               	movf	___lwdiv@quotient+1,w
 14027  0DAB  00F1               	movwf	?___lwdiv+1
 14028  0DAC  0875               	movf	___lwdiv@quotient,w
 14029  0DAD  00F0               	movwf	?___lwdiv
 14030  0DAE                     i1l1713:
 14031  0DAE  0008               	return
 14032  0DAF                     __end_of___lwdiv:
 14033                           
 14034                           	psect	text43
 14035  0F20                     __ptext43:	
 14036 ;; *************** function _differenceBetweenTimePeriod *****************
 14037 ;; Defined at:
 14038 ;;		line 208 in file "main.c"
 14039 ;; Parameters:    Size  Location     Type
 14040 ;;  start           6    0[COMMON] struct Time
 14041 ;;  stop            6    6[COMMON] struct Time
 14042 ;;  diff            1   12[COMMON] PTR struct Time
 14043 ;;		 -> menuLCD_ISR@diff(6), 
 14044 ;; Auto vars:     Size  Location     Type
 14045 ;;		None
 14046 ;; Return value:  Size  Location     Type
 14047 ;;                  1    wreg      void 
 14048 ;; Registers used:
 14049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 14050 ;; Tracked objects:
 14051 ;;		On entry : 0/0
 14052 ;;		On exit  : 0/0
 14053 ;;		Unchanged: 0/0
 14054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14055 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14057 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14058 ;;      Totals:        13       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14059 ;;Total ram usage:       15 bytes
 14060 ;; Hardware stack levels used:    1
 14061 ;; This function calls:
 14062 ;;		Nothing
 14063 ;; This function is called by:
 14064 ;;		_menuLCD_ISR
 14065 ;; This function uses a non-reentrant model
 14066 ;;
 14067                           
 14068                           
 14069                           ;psect for function _differenceBetweenTimePeriod
 14070  0F20                     _differenceBetweenTimePeriod:
 14071  0F20                     i1l3598:	
 14072                           ;incstack = 0
 14073                           ; Regs used in _differenceBetweenTimePeriod: [wreg-fsr1h+status,2+status,0]
 14074                           
 14075                           
 14076                           ;main.c: 211: while (stop.s > start.s) {
 14077  0F20  2F29               	goto	i1l1078
 14078  0F21                     i1l3600:
 14079                           
 14080                           ;main.c: 212: --start.m;
 14081  0F21  30FF               	movlw	255
 14082  0F22  07F2               	addwf	differenceBetweenTimePeriod@start+2,f
 14083  0F23  30FF               	movlw	255
 14084  0F24  3DF3               	addwfc	differenceBetweenTimePeriod@start+3,f
 14085                           
 14086                           ;main.c: 213: start.s += 60;
 14087  0F25  303C               	movlw	60
 14088  0F26  07F4               	addwf	differenceBetweenTimePeriod@start+4,f
 14089  0F27  3000               	movlw	0
 14090  0F28  3DF5               	addwfc	differenceBetweenTimePeriod@start+5,f
 14091  0F29                     i1l1078:
 14092  0F29  0875               	movf	differenceBetweenTimePeriod@start+5,w
 14093  0F2A  3A80               	xorlw	128
 14094  0F2B  0020               	movlb	0	; select bank0
 14095  0F2C  00A0               	movwf	??_differenceBetweenTimePeriod
 14096  0F2D  087B               	movf	differenceBetweenTimePeriod@stop+5,w
 14097  0F2E  3A80               	xorlw	128
 14098  0F2F  0220               	subwf	??_differenceBetweenTimePeriod,w
 14099  0F30  1D03               	skipz
 14100  0F31  2F34               	goto	u299_25
 14101  0F32  087A               	movf	differenceBetweenTimePeriod@stop+4,w
 14102  0F33  0274               	subwf	differenceBetweenTimePeriod@start+4,w
 14103  0F34                     u299_25:
 14104  0F34  1C03               	skipc
 14105  0F35  2F37               	goto	u299_21
 14106  0F36  2F38               	goto	u299_20
 14107  0F37                     u299_21:
 14108  0F37  2F21               	goto	i1l3600
 14109  0F38                     u299_20:
 14110  0F38                     i1l3602:
 14111                           
 14112                           ;main.c: 214: };main.c: 215: diff->s = start.s - stop.s;
 14113  0F38  3004               	movlw	4
 14114  0F39  3E76               	addlw	(low (differenceBetweenTimePeriod@stop| 0))& (0+255)
 14115  0F3A  0086               	movwf	6
 14116  0F3B  0187               	clrf	7
 14117  0F3C  3004               	movlw	4
 14118  0F3D  3E70               	addlw	(low (differenceBetweenTimePeriod@start| 0))& (0+255)
 14119  0F3E  0084               	movwf	4
 14120  0F3F  0185               	clrf	5
 14121  0F40  3F40               	moviw [0]fsr1
 14122  0F41  0200               	subwf	0,w
 14123  0F42  0020               	movlb	0	; select bank0
 14124  0F43  00A0               	movwf	??_differenceBetweenTimePeriod
 14125  0F44  3101               	addfsr 0,1
 14126  0F45  3F41               	moviw [1]fsr1
 14127  0F46  3B00               	subwfb	0,w
 14128  0F47  00A1               	movwf	??_differenceBetweenTimePeriod+1
 14129  0F48  087C               	movf	differenceBetweenTimePeriod@diff,w
 14130  0F49  3E04               	addlw	4
 14131  0F4A  0086               	movwf	6
 14132  0F4B  0187               	clrf	7
 14133  0F4C  0820               	movf	??_differenceBetweenTimePeriod,w
 14134  0F4D  3FC0               	movwi [0]fsr1
 14135  0F4E  0821               	movf	??_differenceBetweenTimePeriod+1,w
 14136  0F4F  3FC1               	movwi [1]fsr1
 14137                           
 14138                           ;main.c: 216: while (stop.m > start.m) {
 14139  0F50  2F59               	goto	i1l1081
 14140  0F51                     i1l3604:
 14141                           
 14142                           ;main.c: 217: --start.h;
 14143  0F51  30FF               	movlw	255
 14144  0F52  07F0               	addwf	differenceBetweenTimePeriod@start,f
 14145  0F53  30FF               	movlw	255
 14146  0F54  3DF1               	addwfc	differenceBetweenTimePeriod@start+1,f
 14147                           
 14148                           ;main.c: 218: start.m += 60;
 14149  0F55  303C               	movlw	60
 14150  0F56  07F2               	addwf	differenceBetweenTimePeriod@start+2,f
 14151  0F57  3000               	movlw	0
 14152  0F58  3DF3               	addwfc	differenceBetweenTimePeriod@start+3,f
 14153  0F59                     i1l1081:
 14154  0F59  0873               	movf	differenceBetweenTimePeriod@start+3,w
 14155  0F5A  3A80               	xorlw	128
 14156  0F5B  0020               	movlb	0	; select bank0
 14157  0F5C  00A0               	movwf	??_differenceBetweenTimePeriod
 14158  0F5D  0879               	movf	differenceBetweenTimePeriod@stop+3,w
 14159  0F5E  3A80               	xorlw	128
 14160  0F5F  0220               	subwf	??_differenceBetweenTimePeriod,w
 14161  0F60  1D03               	skipz
 14162  0F61  2F64               	goto	u300_25
 14163  0F62  0878               	movf	differenceBetweenTimePeriod@stop+2,w
 14164  0F63  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 14165  0F64                     u300_25:
 14166  0F64  1C03               	skipc
 14167  0F65  2F67               	goto	u300_21
 14168  0F66  2F68               	goto	u300_20
 14169  0F67                     u300_21:
 14170  0F67  2F51               	goto	i1l3604
 14171  0F68                     u300_20:
 14172  0F68                     i1l3606:
 14173                           
 14174                           ;main.c: 219: };main.c: 220: diff->m = start.m - stop.m;
 14175  0F68  3002               	movlw	2
 14176  0F69  3E76               	addlw	(low (differenceBetweenTimePeriod@stop| 0))& (0+255)
 14177  0F6A  0086               	movwf	6
 14178  0F6B  0187               	clrf	7
 14179  0F6C  3002               	movlw	2
 14180  0F6D  3E70               	addlw	(low (differenceBetweenTimePeriod@start| 0))& (0+255)
 14181  0F6E  0084               	movwf	4
 14182  0F6F  0185               	clrf	5
 14183  0F70  3F40               	moviw [0]fsr1
 14184  0F71  0200               	subwf	0,w
 14185  0F72  0020               	movlb	0	; select bank0
 14186  0F73  00A0               	movwf	??_differenceBetweenTimePeriod
 14187  0F74  3101               	addfsr 0,1
 14188  0F75  3F41               	moviw [1]fsr1
 14189  0F76  3B00               	subwfb	0,w
 14190  0F77  00A1               	movwf	??_differenceBetweenTimePeriod+1
 14191  0F78  087C               	movf	differenceBetweenTimePeriod@diff,w
 14192  0F79  3E02               	addlw	2
 14193  0F7A  0086               	movwf	6
 14194  0F7B  0187               	clrf	7
 14195  0F7C  0820               	movf	??_differenceBetweenTimePeriod,w
 14196  0F7D  3FC0               	movwi [0]fsr1
 14197  0F7E  0821               	movf	??_differenceBetweenTimePeriod+1,w
 14198  0F7F  3FC1               	movwi [1]fsr1
 14199  0F80                     i1l3608:
 14200                           
 14201                           ;main.c: 221: diff->h = start.h - stop.h;
 14202  0F80  0876               	movf	differenceBetweenTimePeriod@stop,w
 14203  0F81  0270               	subwf	differenceBetweenTimePeriod@start,w
 14204  0F82  00A0               	movwf	??_differenceBetweenTimePeriod
 14205  0F83  0877               	movf	differenceBetweenTimePeriod@stop+1,w
 14206  0F84  3B71               	subwfb	differenceBetweenTimePeriod@start+1,w
 14207  0F85  00A1               	movwf	??_differenceBetweenTimePeriod+1
 14208  0F86  087C               	movf	differenceBetweenTimePeriod@diff,w
 14209  0F87  0086               	movwf	6
 14210  0F88  0187               	clrf	7
 14211  0F89  0820               	movf	??_differenceBetweenTimePeriod,w
 14212  0F8A  3FC0               	movwi [0]fsr1
 14213  0F8B  0821               	movf	??_differenceBetweenTimePeriod+1,w
 14214  0F8C  3FC1               	movwi [1]fsr1
 14215  0F8D                     i1l1084:
 14216  0F8D  0008               	return
 14217  0F8E                     __end_of_differenceBetweenTimePeriod:
 14218                           
 14219                           	psect	text44
 14220  0B0C                     __ptext44:	
 14221 ;; *************** function _TMR2_StartTimer *****************
 14222 ;; Defined at:
 14223 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 14224 ;; Parameters:    Size  Location     Type
 14225 ;;		None
 14226 ;; Auto vars:     Size  Location     Type
 14227 ;;		None
 14228 ;; Return value:  Size  Location     Type
 14229 ;;                  1    wreg      void 
 14230 ;; Registers used:
 14231 ;;		status,2, status,0, pclath, cstack
 14232 ;; Tracked objects:
 14233 ;;		On entry : 0/0
 14234 ;;		On exit  : 0/0
 14235 ;;		Unchanged: 0/0
 14236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14241 ;;Total ram usage:        0 bytes
 14242 ;; Hardware stack levels used:    1
 14243 ;; Hardware stack levels required when called:    1
 14244 ;; This function calls:
 14245 ;;		_TMR2_Start
 14246 ;; This function is called by:
 14247 ;;		_menuLCD_ISR
 14248 ;; This function uses a non-reentrant model
 14249 ;;
 14250                           
 14251                           
 14252                           ;psect for function _TMR2_StartTimer
 14253  0B0C                     _TMR2_StartTimer:
 14254  0B0C                     i1l3536:	
 14255                           ;incstack = 0
 14256                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
 14257                           
 14258                           
 14259                           ;tmr2.c: 108: TMR2_Start();
 14260  0B0C  318A  22FD  318B   	fcall	_TMR2_Start
 14261  0B0F                     i1l761:
 14262  0B0F  0008               	return
 14263  0B10                     __end_of_TMR2_StartTimer:
 14264                           
 14265                           	psect	text45
 14266  0AFD                     __ptext45:	
 14267 ;; *************** function _TMR2_Start *****************
 14268 ;; Defined at:
 14269 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 14270 ;; Parameters:    Size  Location     Type
 14271 ;;		None
 14272 ;; Auto vars:     Size  Location     Type
 14273 ;;		None
 14274 ;; Return value:  Size  Location     Type
 14275 ;;                  1    wreg      void 
 14276 ;; Registers used:
 14277 ;;		None
 14278 ;; Tracked objects:
 14279 ;;		On entry : 0/0
 14280 ;;		On exit  : 0/0
 14281 ;;		Unchanged: 0/0
 14282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14287 ;;Total ram usage:        0 bytes
 14288 ;; Hardware stack levels used:    1
 14289 ;; This function calls:
 14290 ;;		Nothing
 14291 ;; This function is called by:
 14292 ;;		_TMR2_StartTimer
 14293 ;; This function uses a non-reentrant model
 14294 ;;
 14295                           
 14296                           
 14297                           ;psect for function _TMR2_Start
 14298  0AFD                     _TMR2_Start:
 14299  0AFD                     i1l3404:	
 14300                           ;incstack = 0
 14301                           ; Regs used in _TMR2_Start: []
 14302                           
 14303                           
 14304                           ;tmr2.c: 103: T2CONbits.TMR2ON = 1;
 14305  0AFD  0025               	movlb	5	; select bank5
 14306  0AFE  178E               	bsf	14,7	;volatile
 14307  0AFF                     i1l758:
 14308  0AFF  0008               	return
 14309  0B00                     __end_of_TMR2_Start:
 14310                           
 14311                           	psect	text46
 14312  0AFA                     __ptext46:	
 14313 ;; *************** function _PWM_Output_D4_Enable *****************
 14314 ;; Defined at:
 14315 ;;		line 224 in file "main.c"
 14316 ;; Parameters:    Size  Location     Type
 14317 ;;		None
 14318 ;; Auto vars:     Size  Location     Type
 14319 ;;		None
 14320 ;; Return value:  Size  Location     Type
 14321 ;;                  1    wreg      void 
 14322 ;; Registers used:
 14323 ;;		None
 14324 ;; Tracked objects:
 14325 ;;		On entry : 0/0
 14326 ;;		On exit  : 0/0
 14327 ;;		Unchanged: 0/0
 14328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14333 ;;Total ram usage:        0 bytes
 14334 ;; Hardware stack levels used:    1
 14335 ;; This function calls:
 14336 ;;		Nothing
 14337 ;; This function is called by:
 14338 ;;		_menuLCD_ISR
 14339 ;; This function uses a non-reentrant model
 14340 ;;
 14341                           
 14342                           
 14343                           ;psect for function _PWM_Output_D4_Enable
 14344  0AFA                     _PWM_Output_D4_Enable:
 14345  0AFA                     i1l3610:	
 14346                           ;incstack = 0
 14347                           ; Regs used in _PWM_Output_D4_Enable: []
 14348                           
 14349                           
 14350                           ;main.c: 225: PWM6EN = 1;
 14351  0AFA  0027               	movlb	7	; select bank7
 14352  0AFB  178E               	bsf	14,7	;volatile
 14353  0AFC                     i1l1087:
 14354  0AFC  0008               	return
 14355  0AFD                     __end_of_PWM_Output_D4_Enable:
 14356                           
 14357                           	psect	text47
 14358  0BFA                     __ptext47:	
 14359 ;; *************** function _PWM6_LoadDutyValue *****************
 14360 ;; Defined at:
 14361 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 14362 ;; Parameters:    Size  Location     Type
 14363 ;;  dutyValue       2    0[COMMON] unsigned int 
 14364 ;; Auto vars:     Size  Location     Type
 14365 ;;		None
 14366 ;; Return value:  Size  Location     Type
 14367 ;;                  1    wreg      void 
 14368 ;; Registers used:
 14369 ;;		wreg, status,2, status,0
 14370 ;; Tracked objects:
 14371 ;;		On entry : 0/0
 14372 ;;		On exit  : 0/0
 14373 ;;		Unchanged: 0/0
 14374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14375 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14377 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14378 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14379 ;;Total ram usage:        4 bytes
 14380 ;; Hardware stack levels used:    1
 14381 ;; This function calls:
 14382 ;;		Nothing
 14383 ;; This function is called by:
 14384 ;;		_menuLCD_ISR
 14385 ;; This function uses a non-reentrant model
 14386 ;;
 14387                           
 14388                           
 14389                           ;psect for function _PWM6_LoadDutyValue
 14390  0BFA                     _PWM6_LoadDutyValue:
 14391  0BFA                     i1l3534:	
 14392                           ;incstack = 0
 14393                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 14394                           
 14395                           
 14396                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 14397  0BFA  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 14398  0BFB  00F3               	movwf	??_PWM6_LoadDutyValue+1
 14399  0BFC  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 14400  0BFD  00F2               	movwf	??_PWM6_LoadDutyValue
 14401  0BFE  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 14402  0BFF  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 14403  0C00  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 14404  0C01  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 14405  0C02  0872               	movf	??_PWM6_LoadDutyValue,w
 14406  0C03  0027               	movlb	7	; select bank7
 14407  0C04  008D               	movwf	13	;volatile
 14408                           
 14409                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 14410  0C05  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 14411  0C06  3903               	andlw	3
 14412  0C07  00F2               	movwf	??_PWM6_LoadDutyValue
 14413  0C08  3005               	movlw	5
 14414  0C09                     u272_25:
 14415  0C09  35F2               	lslf	??_PWM6_LoadDutyValue,f
 14416  0C0A  3EFF               	addlw	-1
 14417  0C0B  1D03               	skipz
 14418  0C0C  2C09               	goto	u272_25
 14419  0C0D  3572               	lslf	??_PWM6_LoadDutyValue,w
 14420  0C0E  008C               	movwf	12	;volatile
 14421  0C0F                     i1l722:
 14422  0C0F  0008               	return
 14423  0C10                     __end_of_PWM6_LoadDutyValue:
 14424                           
 14425                           	psect	text48
 14426  0BE6                     __ptext48:	
 14427 ;; *************** function _LCDstr *****************
 14428 ;; Defined at:
 14429 ;;		line 188 in file "main.c"
 14430 ;; Parameters:    Size  Location     Type
 14431 ;;  p               1    wreg     PTR unsigned char 
 14432 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 14433 ;; Auto vars:     Size  Location     Type
 14434 ;;  p               1   11[COMMON] PTR unsigned char 
 14435 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 14436 ;;  c               1   10[COMMON] unsigned char 
 14437 ;; Return value:  Size  Location     Type
 14438 ;;                  1    wreg      void 
 14439 ;; Registers used:
 14440 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14441 ;; Tracked objects:
 14442 ;;		On entry : 0/0
 14443 ;;		On exit  : 0/0
 14444 ;;		Unchanged: 0/0
 14445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14447 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14448 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14449 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14450 ;;Total ram usage:        3 bytes
 14451 ;; Hardware stack levels used:    1
 14452 ;; Hardware stack levels required when called:    3
 14453 ;; This function calls:
 14454 ;;		_LCDchar
 14455 ;; This function is called by:
 14456 ;;		_menuLCD_ISR
 14457 ;; This function uses a non-reentrant model
 14458 ;;
 14459                           
 14460                           
 14461                           ;psect for function _LCDstr
 14462  0BE6                     _LCDstr:
 14463                           
 14464                           ;incstack = 0
 14465                           ; Regs used in _LCDstr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14466                           ;LCDstr@p stored from wreg
 14467  0BE6  00FB               	movwf	LCDstr@p
 14468  0BE7                     i1l3592:
 14469                           
 14470                           ;main.c: 190: unsigned char c;;main.c: 192: while((c = *p++)) LCDchar(c);
 14471  0BE7  2BEC               	goto	i1l3596
 14472  0BE8                     i1l3594:
 14473  0BE8  087A               	movf	LCDstr@c,w
 14474  0BE9  318B  2343  318B   	fcall	_LCDchar
 14475  0BEC                     i1l3596:
 14476  0BEC  087B               	movf	LCDstr@p,w
 14477  0BED  0086               	movwf	6
 14478  0BEE  0187               	clrf	7
 14479  0BEF  0AFB               	incf	LCDstr@p,f
 14480  0BF0  0801               	movf	1,w
 14481  0BF1  00F9               	movwf	??_LCDstr
 14482  0BF2  0879               	movf	??_LCDstr,w
 14483  0BF3  00FA               	movwf	LCDstr@c
 14484  0BF4  087A               	movf	LCDstr@c,w
 14485  0BF5  1D03               	btfss	3,2
 14486  0BF6  2BF8               	goto	u298_21
 14487  0BF7  2BF9               	goto	u298_20
 14488  0BF8                     u298_21:
 14489  0BF8  2BE8               	goto	i1l3594
 14490  0BF9                     u298_20:
 14491  0BF9                     i1l1071:
 14492  0BF9  0008               	return
 14493  0BFA                     __end_of_LCDstr:
 14494                           
 14495                           	psect	text49
 14496  0B43                     __ptext49:	
 14497 ;; *************** function _LCDchar *****************
 14498 ;; Defined at:
 14499 ;;		line 183 in file "main.c"
 14500 ;; Parameters:    Size  Location     Type
 14501 ;;  c               1    wreg     unsigned char 
 14502 ;; Auto vars:     Size  Location     Type
 14503 ;;  c               1    8[COMMON] unsigned char 
 14504 ;; Return value:  Size  Location     Type
 14505 ;;                  1    wreg      void 
 14506 ;; Registers used:
 14507 ;;		wreg, status,2, status,0, pclath, cstack
 14508 ;; Tracked objects:
 14509 ;;		On entry : 0/0
 14510 ;;		On exit  : 0/0
 14511 ;;		Unchanged: 0/0
 14512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14516 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14517 ;;Total ram usage:        1 bytes
 14518 ;; Hardware stack levels used:    1
 14519 ;; Hardware stack levels required when called:    2
 14520 ;; This function calls:
 14521 ;;		i1_LCDsend2x4
 14522 ;; This function is called by:
 14523 ;;		_LCDstr
 14524 ;;		_menuLCD_ISR
 14525 ;; This function uses a non-reentrant model
 14526 ;;
 14527                           
 14528                           
 14529                           ;psect for function _LCDchar
 14530  0B43                     _LCDchar:
 14531                           
 14532                           ;incstack = 0
 14533                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 14534                           ;LCDchar@c stored from wreg
 14535  0B43  00F8               	movwf	LCDchar@c
 14536  0B44                     i1l3406:
 14537                           
 14538                           ;main.c: 185: LCDsend2x4(c, 0x01);
 14539  0B44  01F2               	clrf	i1LCDsend2x4@mode
 14540  0B45  0AF2               	incf	i1LCDsend2x4@mode,f
 14541  0B46  0878               	movf	LCDchar@c,w
 14542  0B47  3185  25B3  318B   	fcall	i1_LCDsend2x4
 14543  0B4A                     i1l1065:
 14544  0B4A  0008               	return
 14545  0B4B                     __end_of_LCDchar:
 14546                           
 14547                           	psect	text50
 14548  0B3C                     __ptext50:	
 14549 ;; *************** function _LCDcmd *****************
 14550 ;; Defined at:
 14551 ;;		line 178 in file "main.c"
 14552 ;; Parameters:    Size  Location     Type
 14553 ;;  c               1    wreg     unsigned char 
 14554 ;; Auto vars:     Size  Location     Type
 14555 ;;  c               1    8[COMMON] unsigned char 
 14556 ;; Return value:  Size  Location     Type
 14557 ;;                  1    wreg      void 
 14558 ;; Registers used:
 14559 ;;		wreg, status,2, status,0, pclath, cstack
 14560 ;; Tracked objects:
 14561 ;;		On entry : 0/0
 14562 ;;		On exit  : 0/0
 14563 ;;		Unchanged: 0/0
 14564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14566 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14568 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14569 ;;Total ram usage:        1 bytes
 14570 ;; Hardware stack levels used:    1
 14571 ;; Hardware stack levels required when called:    2
 14572 ;; This function calls:
 14573 ;;		i1_LCDsend2x4
 14574 ;; This function is called by:
 14575 ;;		_menuLCD_ISR
 14576 ;; This function uses a non-reentrant model
 14577 ;;
 14578                           
 14579                           
 14580                           ;psect for function _LCDcmd
 14581  0B3C                     _LCDcmd:
 14582                           
 14583                           ;incstack = 0
 14584                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 14585                           ;LCDcmd@c stored from wreg
 14586  0B3C  00F8               	movwf	LCDcmd@c
 14587  0B3D                     i1l3590:
 14588                           
 14589                           ;main.c: 180: LCDsend2x4(c, 0);
 14590  0B3D  01F2               	clrf	i1LCDsend2x4@mode
 14591  0B3E  0878               	movf	LCDcmd@c,w
 14592  0B3F  3185  25B3  318B   	fcall	i1_LCDsend2x4
 14593  0B42                     i1l1062:
 14594  0B42  0008               	return
 14595  0B43                     __end_of_LCDcmd:
 14596                           
 14597                           	psect	text51
 14598  05B3                     __ptext51:	
 14599 ;; *************** function i1_LCDsend2x4 *****************
 14600 ;; Defined at:
 14601 ;;		line 132 in file "main.c"
 14602 ;; Parameters:    Size  Location     Type
 14603 ;;  c               1    wreg     unsigned char 
 14604 ;;  mode            1    2[COMMON] unsigned char 
 14605 ;; Auto vars:     Size  Location     Type
 14606 ;;  c               1    5[COMMON] unsigned char 
 14607 ;;  lc              1    7[COMMON] unsigned char 
 14608 ;;  hc              1    6[COMMON] unsigned char 
 14609 ;; Return value:  Size  Location     Type
 14610 ;;                  1    wreg      void 
 14611 ;; Registers used:
 14612 ;;		wreg, status,2, status,0, pclath, cstack
 14613 ;; Tracked objects:
 14614 ;;		On entry : 0/0
 14615 ;;		On exit  : 0/0
 14616 ;;		Unchanged: 0/0
 14617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14618 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14619 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14620 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14621 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14622 ;;Total ram usage:        6 bytes
 14623 ;; Hardware stack levels used:    1
 14624 ;; Hardware stack levels required when called:    1
 14625 ;; This function calls:
 14626 ;;		i1_WriteI2C
 14627 ;; This function is called by:
 14628 ;;		_LCDcmd
 14629 ;;		_LCDchar
 14630 ;; This function uses a non-reentrant model
 14631 ;;
 14632                           
 14633                           
 14634                           ;psect for function i1_LCDsend2x4
 14635  05B3                     i1_LCDsend2x4:
 14636                           
 14637                           ;incstack = 0
 14638                           ; Regs used in i1_LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 14639                           ;i1LCDsend2x4@c stored from wreg
 14640  05B3  00F5               	movwf	i1LCDsend2x4@c
 14641  05B4                     i1l3358:
 14642                           
 14643                           ;main.c: 134: unsigned char hc;;main.c: 135: unsigned char lc;;main.c: 137: hc = c & 0xf
      +                          0;
 14644  05B4  0875               	movf	i1LCDsend2x4@c,w
 14645  05B5  39F0               	andlw	240
 14646  05B6  00F3               	movwf	??i1_LCDsend2x4
 14647  05B7  0873               	movf	??i1_LCDsend2x4,w
 14648  05B8  00F6               	movwf	i1LCDsend2x4@hc
 14649  05B9                     i1l3360:
 14650                           
 14651                           ;main.c: 138: lc = (c << 4) & 0xf0;
 14652  05B9  0875               	movf	i1LCDsend2x4@c,w
 14653  05BA  00F3               	movwf	??i1_LCDsend2x4
 14654  05BB  3003               	movlw	3
 14655  05BC                     u228_25:
 14656  05BC  35F3               	lslf	??i1_LCDsend2x4,f
 14657  05BD  3EFF               	addlw	-1
 14658  05BE  1D03               	skipz
 14659  05BF  2DBC               	goto	u228_25
 14660  05C0  3573               	lslf	??i1_LCDsend2x4,w
 14661  05C1  39F0               	andlw	240
 14662  05C2  00F4               	movwf	??i1_LCDsend2x4+1
 14663  05C3  0874               	movf	??i1_LCDsend2x4+1,w
 14664  05C4  00F7               	movwf	i1LCDsend2x4@lc
 14665  05C5                     i1l3362:	
 14666                           ;main.c: 140: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14667                           
 14668  05C5  0023               	movlb	3	; select bank3
 14669  05C6  0C0F               	rrf	15,w	;volatile
 14670  05C7  0C89               	rrf	9,f
 14671  05C8  3901               	andlw	1
 14672  05C9  00F3               	movwf	??i1_LCDsend2x4
 14673  05CA  0811               	movf	17,w	;volatile
 14674  05CB  391F               	andlw	31
 14675  05CC  0473               	iorwf	??i1_LCDsend2x4,w
 14676  05CD  1D03               	btfss	3,2
 14677  05CE  2DD0               	goto	u229_21
 14678  05CF  2DD1               	goto	u229_20
 14679  05D0                     u229_21:
 14680  05D0  2DC5               	goto	i1l3362
 14681  05D1                     u229_20:
 14682  05D1                     i1l1025:
 14683                           
 14684                           ;main.c: 141: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 14685  05D1  1411               	bsf	17,0	;volatile
 14686  05D2                     i1l1026:
 14687  05D2  1811               	btfsc	17,0	;volatile
 14688  05D3  2DD5               	goto	u230_21
 14689  05D4  2DD6               	goto	u230_20
 14690  05D5                     u230_21:
 14691  05D5  2DD2               	goto	i1l1026
 14692  05D6                     u230_20:
 14693  05D6                     i1l3364:
 14694  05D6  0C0F               	rrf	15,w	;volatile
 14695  05D7  0C89               	rrf	9,f
 14696  05D8  3901               	andlw	1
 14697  05D9  00F3               	movwf	??i1_LCDsend2x4
 14698  05DA  0811               	movf	17,w	;volatile
 14699  05DB  391F               	andlw	31
 14700  05DC  0473               	iorwf	??i1_LCDsend2x4,w
 14701  05DD  1D03               	btfss	3,2
 14702  05DE  2DE0               	goto	u231_21
 14703  05DF  2DE1               	goto	u231_20
 14704  05E0                     u231_21:
 14705  05E0  2DD6               	goto	i1l3364
 14706  05E1                     u231_20:
 14707  05E1                     i1l3366:
 14708                           
 14709                           ;main.c: 142: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14710  05E1  304E               	movlw	78
 14711  05E2  318E  2628  3185   	fcall	i1_WriteI2C
 14712  05E5                     i1l3368:
 14713  05E5  0023               	movlb	3	; select bank3
 14714  05E6  0C0F               	rrf	15,w	;volatile
 14715  05E7  0C89               	rrf	9,f
 14716  05E8  3901               	andlw	1
 14717  05E9  00F3               	movwf	??i1_LCDsend2x4
 14718  05EA  0811               	movf	17,w	;volatile
 14719  05EB  391F               	andlw	31
 14720  05EC  0473               	iorwf	??i1_LCDsend2x4,w
 14721  05ED  1D03               	btfss	3,2
 14722  05EE  2DF0               	goto	u232_21
 14723  05EF  2DF1               	goto	u232_20
 14724  05F0                     u232_21:
 14725  05F0  2DE5               	goto	i1l3368
 14726  05F1                     u232_20:
 14727  05F1                     i1l3370:
 14728                           
 14729                           ;main.c: 143: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14730  05F1  0876               	movf	i1LCDsend2x4@hc,w
 14731  05F2  0472               	iorwf	i1LCDsend2x4@mode,w
 14732  05F3  3808               	iorlw	8
 14733  05F4  318E  2628  3185   	fcall	i1_WriteI2C
 14734  05F7                     i1l3372:
 14735  05F7  0023               	movlb	3	; select bank3
 14736  05F8  0C0F               	rrf	15,w	;volatile
 14737  05F9  0C89               	rrf	9,f
 14738  05FA  3901               	andlw	1
 14739  05FB  00F3               	movwf	??i1_LCDsend2x4
 14740  05FC  0811               	movf	17,w	;volatile
 14741  05FD  391F               	andlw	31
 14742  05FE  0473               	iorwf	??i1_LCDsend2x4,w
 14743  05FF  1D03               	btfss	3,2
 14744  0600  2E02               	goto	u233_21
 14745  0601  2E03               	goto	u233_20
 14746  0602                     u233_21:
 14747  0602  2DF7               	goto	i1l3372
 14748  0603                     u233_20:
 14749  0603                     i1l3374:
 14750                           
 14751                           ;main.c: 144: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 14752  0603  0876               	movf	i1LCDsend2x4@hc,w
 14753  0604  0472               	iorwf	i1LCDsend2x4@mode,w
 14754  0605  380C               	iorlw	12
 14755  0606  318E  2628  3185   	fcall	i1_WriteI2C
 14756  0609                     i1l3376:
 14757  0609  0023               	movlb	3	; select bank3
 14758  060A  0C0F               	rrf	15,w	;volatile
 14759  060B  0C89               	rrf	9,f
 14760  060C  3901               	andlw	1
 14761  060D  00F3               	movwf	??i1_LCDsend2x4
 14762  060E  0811               	movf	17,w	;volatile
 14763  060F  391F               	andlw	31
 14764  0610  0473               	iorwf	??i1_LCDsend2x4,w
 14765  0611  1D03               	btfss	3,2
 14766  0612  2E14               	goto	u234_21
 14767  0613  2E15               	goto	u234_20
 14768  0614                     u234_21:
 14769  0614  2E09               	goto	i1l3376
 14770  0615                     u234_20:
 14771  0615                     i1l1040:
 14772  0615                     i1l3378:	
 14773                           ;main.c: 145: _delay((unsigned long)((1)*(1000000/4000000.0)));
 14774                           
 14775                           
 14776                           ;main.c: 146: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14777  0615  0876               	movf	i1LCDsend2x4@hc,w
 14778  0616  0472               	iorwf	i1LCDsend2x4@mode,w
 14779  0617  3808               	iorlw	8
 14780  0618  318E  2628  3185   	fcall	i1_WriteI2C
 14781  061B                     i1l3380:
 14782  061B  0023               	movlb	3	; select bank3
 14783  061C  0C0F               	rrf	15,w	;volatile
 14784  061D  0C89               	rrf	9,f
 14785  061E  3901               	andlw	1
 14786  061F  00F3               	movwf	??i1_LCDsend2x4
 14787  0620  0811               	movf	17,w	;volatile
 14788  0621  391F               	andlw	31
 14789  0622  0473               	iorwf	??i1_LCDsend2x4,w
 14790  0623  1D03               	btfss	3,2
 14791  0624  2E26               	goto	u235_21
 14792  0625  2E27               	goto	u235_20
 14793  0626                     u235_21:
 14794  0626  2E1B               	goto	i1l3380
 14795  0627                     u235_20:
 14796  0627                     i1l3382:
 14797                           
 14798                           ;main.c: 147: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14799  0627  0877               	movf	i1LCDsend2x4@lc,w
 14800  0628  0472               	iorwf	i1LCDsend2x4@mode,w
 14801  0629  3808               	iorlw	8
 14802  062A  318E  2628  3185   	fcall	i1_WriteI2C
 14803  062D                     i1l3384:
 14804  062D  0023               	movlb	3	; select bank3
 14805  062E  0C0F               	rrf	15,w	;volatile
 14806  062F  0C89               	rrf	9,f
 14807  0630  3901               	andlw	1
 14808  0631  00F3               	movwf	??i1_LCDsend2x4
 14809  0632  0811               	movf	17,w	;volatile
 14810  0633  391F               	andlw	31
 14811  0634  0473               	iorwf	??i1_LCDsend2x4,w
 14812  0635  1D03               	btfss	3,2
 14813  0636  2E38               	goto	u236_21
 14814  0637  2E39               	goto	u236_20
 14815  0638                     u236_21:
 14816  0638  2E2D               	goto	i1l3384
 14817  0639                     u236_20:
 14818  0639                     i1l3386:
 14819                           
 14820                           ;main.c: 148: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 14821  0639  0877               	movf	i1LCDsend2x4@lc,w
 14822  063A  0472               	iorwf	i1LCDsend2x4@mode,w
 14823  063B  380C               	iorlw	12
 14824  063C  318E  2628  3185   	fcall	i1_WriteI2C
 14825  063F                     i1l3388:
 14826  063F  0023               	movlb	3	; select bank3
 14827  0640  0C0F               	rrf	15,w	;volatile
 14828  0641  0C89               	rrf	9,f
 14829  0642  3901               	andlw	1
 14830  0643  00F3               	movwf	??i1_LCDsend2x4
 14831  0644  0811               	movf	17,w	;volatile
 14832  0645  391F               	andlw	31
 14833  0646  0473               	iorwf	??i1_LCDsend2x4,w
 14834  0647  1D03               	btfss	3,2
 14835  0648  2E4A               	goto	u237_21
 14836  0649  2E4B               	goto	u237_20
 14837  064A                     u237_21:
 14838  064A  2E3F               	goto	i1l3388
 14839  064B                     u237_20:
 14840  064B                     i1l1049:
 14841  064B                     i1l3390:	
 14842                           ;main.c: 149: _delay((unsigned long)((1)*(1000000/4000000.0)));
 14843                           
 14844                           
 14845                           ;main.c: 150: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14846  064B  0877               	movf	i1LCDsend2x4@lc,w
 14847  064C  0472               	iorwf	i1LCDsend2x4@mode,w
 14848  064D  3808               	iorlw	8
 14849  064E  318E  2628  3185   	fcall	i1_WriteI2C
 14850  0651                     i1l3392:
 14851  0651  0023               	movlb	3	; select bank3
 14852  0652  0C0F               	rrf	15,w	;volatile
 14853  0653  0C89               	rrf	9,f
 14854  0654  3901               	andlw	1
 14855  0655  00F3               	movwf	??i1_LCDsend2x4
 14856  0656  0811               	movf	17,w	;volatile
 14857  0657  391F               	andlw	31
 14858  0658  0473               	iorwf	??i1_LCDsend2x4,w
 14859  0659  1D03               	btfss	3,2
 14860  065A  2E5C               	goto	u238_21
 14861  065B  2E5D               	goto	u238_20
 14862  065C                     u238_21:
 14863  065C  2E51               	goto	i1l3392
 14864  065D                     u238_20:
 14865  065D                     i1l1052:
 14866                           
 14867                           ;main.c: 151: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 14868  065D  1511               	bsf	17,2	;volatile
 14869  065E                     i1l1053:
 14870  065E  1911               	btfsc	17,2	;volatile
 14871  065F  2E61               	goto	u239_21
 14872  0660  2E62               	goto	u239_20
 14873  0661                     u239_21:
 14874  0661  2E5E               	goto	i1l1053
 14875  0662                     u239_20:
 14876  0662                     i1l3394:
 14877                           
 14878                           ;main.c: 152: _delay((unsigned long)((50)*(1000000/4000000.0)));
 14879  0662  3004               	movlw	4
 14880  0663                     u449_27:
 14881  0663  0B89               	decfsz	9,f
 14882  0664  2E63               	goto	u449_27
 14883  0665                     i1l1056:
 14884  0665  0008               	return
 14885  0666                     __end_ofi1_LCDsend2x4:
 14886                           
 14887                           	psect	text52
 14888  0E28                     __ptext52:	
 14889 ;; *************** function i1_WriteI2C *****************
 14890 ;; Defined at:
 14891 ;;		line 47 in file "I2C/i2c.c"
 14892 ;; Parameters:    Size  Location     Type
 14893 ;;  data_out        1    wreg     unsigned char 
 14894 ;; Auto vars:     Size  Location     Type
 14895 ;;  data_out        1    1[COMMON] unsigned char 
 14896 ;; Return value:  Size  Location     Type
 14897 ;;                  1    wreg      char 
 14898 ;; Registers used:
 14899 ;;		wreg, status,2, status,0
 14900 ;; Tracked objects:
 14901 ;;		On entry : 0/0
 14902 ;;		On exit  : 0/0
 14903 ;;		Unchanged: 0/0
 14904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14906 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14907 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14908 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14909 ;;Total ram usage:        2 bytes
 14910 ;; Hardware stack levels used:    1
 14911 ;; This function calls:
 14912 ;;		Nothing
 14913 ;; This function is called by:
 14914 ;;		_tsttc
 14915 ;;		i1_LCDsend2x4
 14916 ;; This function uses a non-reentrant model
 14917 ;;
 14918                           
 14919                           
 14920                           ;psect for function i1_WriteI2C
 14921  0E28                     i1_WriteI2C:
 14922                           
 14923                           ;incstack = 0
 14924                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 14925                           ;i1WriteI2C@data_out stored from wreg
 14926  0E28  00F1               	movwf	i1WriteI2C@data_out
 14927  0E29                     i1l3328:
 14928                           
 14929                           ;i2c.c: 49: SSP1BUF = data_out;
 14930  0E29  0871               	movf	i1WriteI2C@data_out,w
 14931  0E2A  0023               	movlb	3	; select bank3
 14932  0E2B  008C               	movwf	12	;volatile
 14933  0E2C                     i1l3330:
 14934                           
 14935                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 14936  0E2C  1F90               	btfss	16,7	;volatile
 14937  0E2D  2E2F               	goto	u219_21
 14938  0E2E  2E30               	goto	u219_20
 14939  0E2F                     u219_21:
 14940  0E2F  2E31               	goto	i1l3336
 14941  0E30                     u219_20:
 14942  0E30  2E72               	goto	i1l30
 14943  0E31                     i1l3336:
 14944                           
 14945                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 14946  0E31  300F               	movlw	15
 14947  0E32  0510               	andwf	16,w	;volatile
 14948  0E33  00F0               	movwf	??i1_WriteI2C
 14949  0E34  3008               	movlw	8
 14950  0E35  0670               	xorwf	??i1_WriteI2C,w
 14951  0E36  1903               	btfsc	3,2
 14952  0E37  2E39               	goto	u220_21
 14953  0E38  2E3A               	goto	u220_20
 14954  0E39                     u220_21:
 14955  0E39  2E50               	goto	i1l3348
 14956  0E3A                     u220_20:
 14957  0E3A                     i1l3338:
 14958  0E3A  300F               	movlw	15
 14959  0E3B  0510               	andwf	16,w	;volatile
 14960  0E3C  00F0               	movwf	??i1_WriteI2C
 14961  0E3D  300B               	movlw	11
 14962  0E3E  0670               	xorwf	??i1_WriteI2C,w
 14963  0E3F  1903               	btfsc	3,2
 14964  0E40  2E42               	goto	u221_21
 14965  0E41  2E43               	goto	u221_20
 14966  0E42                     u221_21:
 14967  0E42  2E50               	goto	i1l3348
 14968  0E43                     u221_20:
 14969  0E43                     i1l3340:
 14970                           
 14971                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 14972  0E43  1610               	bsf	16,4	;volatile
 14973  0E44                     i1l33:	
 14974                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 14975                           
 14976  0E44  002E               	movlb	14	; select bank14
 14977  0E45  1C0F               	btfss	15,0	;volatile
 14978  0E46  2E48               	goto	u222_21
 14979  0E47  2E49               	goto	u222_20
 14980  0E48                     u222_21:
 14981  0E48  2E44               	goto	i1l33
 14982  0E49                     u222_20:
 14983  0E49                     i1l35:
 14984                           
 14985                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 14986  0E49  0023               	movlb	3	; select bank3
 14987  0E4A  190F               	btfsc	15,2	;volatile
 14988  0E4B  2E4D               	goto	u223_21
 14989  0E4C  2E4E               	goto	u223_20
 14990  0E4D                     u223_21:
 14991  0E4D  2E72               	goto	i1l30
 14992  0E4E                     u223_20:
 14993  0E4E                     i1l3342:
 14994  0E4E  080F               	movf	15,w	;volatile
 14995  0E4F  2E72               	goto	i1l30
 14996  0E50                     i1l3348:
 14997                           
 14998                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 14999  0E50  300F               	movlw	15
 15000  0E51  0510               	andwf	16,w	;volatile
 15001  0E52  00F0               	movwf	??i1_WriteI2C
 15002  0E53  3008               	movlw	8
 15003  0E54  0670               	xorwf	??i1_WriteI2C,w
 15004  0E55  1903               	btfsc	3,2
 15005  0E56  2E58               	goto	u224_21
 15006  0E57  2E59               	goto	u224_20
 15007  0E58                     u224_21:
 15008  0E58  2E62               	goto	i1l42
 15009  0E59                     u224_20:
 15010  0E59                     i1l3350:
 15011  0E59  300F               	movlw	15
 15012  0E5A  0510               	andwf	16,w	;volatile
 15013  0E5B  00F0               	movwf	??i1_WriteI2C
 15014  0E5C  300B               	movlw	11
 15015  0E5D  0670               	xorwf	??i1_WriteI2C,w
 15016  0E5E  1D03               	btfss	3,2
 15017  0E5F  2E61               	goto	u225_21
 15018  0E60  2E62               	goto	u225_20
 15019  0E61                     u225_21:
 15020  0E61  2E72               	goto	i1l30
 15021  0E62                     u225_20:
 15022  0E62                     i1l42:
 15023  0E62  180F               	btfsc	15,0	;volatile
 15024  0E63  2E65               	goto	u226_21
 15025  0E64  2E66               	goto	u226_20
 15026  0E65                     u226_21:
 15027  0E65  2E62               	goto	i1l42
 15028  0E66                     u226_20:
 15029  0E66                     i1l3352:
 15030  0E66  0C0F               	rrf	15,w	;volatile
 15031  0E67  0C89               	rrf	9,f
 15032  0E68  3901               	andlw	1
 15033  0E69  00F0               	movwf	??i1_WriteI2C
 15034  0E6A  0811               	movf	17,w	;volatile
 15035  0E6B  391F               	andlw	31
 15036  0E6C  0470               	iorwf	??i1_WriteI2C,w
 15037  0E6D  1D03               	btfss	3,2
 15038  0E6E  2E70               	goto	u227_21
 15039  0E6F  2E71               	goto	u227_20
 15040  0E70                     u227_21:
 15041  0E70  2E66               	goto	i1l3352
 15042  0E71                     u227_20:
 15043  0E71                     i1l47:
 15044                           
 15045                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 15046  0E71  0811               	movf	17,w	;volatile
 15047  0E72                     i1l30:
 15048  0E72  0008               	return
 15049  0E73                     __end_ofi1_WriteI2C:
 15050                           
 15051                           	psect	text53
 15052  0BA0                     __ptext53:	
 15053 ;; *************** function _TMR3_WriteTimer *****************
 15054 ;; Defined at:
 15055 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 15056 ;; Parameters:    Size  Location     Type
 15057 ;;  timerVal        2    0[COMMON] unsigned int 
 15058 ;; Auto vars:     Size  Location     Type
 15059 ;;		None
 15060 ;; Return value:  Size  Location     Type
 15061 ;;                  1    wreg      void 
 15062 ;; Registers used:
 15063 ;;		wreg, status,2
 15064 ;; Tracked objects:
 15065 ;;		On entry : 0/0
 15066 ;;		On exit  : 0/0
 15067 ;;		Unchanged: 0/0
 15068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15069 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15073 ;;Total ram usage:        2 bytes
 15074 ;; Hardware stack levels used:    1
 15075 ;; This function calls:
 15076 ;;		Nothing
 15077 ;; This function is called by:
 15078 ;;		_TMR3_ISR
 15079 ;;		_TMR3_Reload
 15080 ;; This function uses a non-reentrant model
 15081 ;;
 15082                           
 15083                           
 15084                           ;psect for function _TMR3_WriteTimer
 15085  0BA0                     _TMR3_WriteTimer:
 15086  0BA0                     i1l3868:	
 15087                           ;incstack = 0
 15088                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 15089                           
 15090                           
 15091                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 15092  0BA0  0024               	movlb	4	; select bank4
 15093  0BA1  1D14               	btfss	20,2	;volatile
 15094  0BA2  2BA4               	goto	u320_21
 15095  0BA3  2BA5               	goto	u320_20
 15096  0BA4                     u320_21:
 15097  0BA4  2BAC               	goto	i1l3878
 15098  0BA5                     u320_20:
 15099  0BA5                     i1l3870:
 15100                           
 15101                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 15102  0BA5  1014               	bcf	20,0	;volatile
 15103  0BA6                     i1l3872:
 15104                           
 15105                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 15106  0BA6  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 15107  0BA7  0093               	movwf	19	;volatile
 15108  0BA8                     i1l3874:
 15109                           
 15110                           ;tmr3.c: 136: TMR3L = timerVal;
 15111  0BA8  0870               	movf	TMR3_WriteTimer@timerVal,w
 15112  0BA9  0092               	movwf	18	;volatile
 15113  0BAA                     i1l3876:
 15114                           
 15115                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 15116  0BAA  1414               	bsf	20,0	;volatile
 15117                           
 15118                           ;tmr3.c: 140: }
 15119  0BAB  2BB0               	goto	i1l465
 15120  0BAC                     i1l3878:
 15121                           
 15122                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 15123  0BAC  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 15124  0BAD  0093               	movwf	19	;volatile
 15125  0BAE                     i1l3880:
 15126                           
 15127                           ;tmr3.c: 145: TMR3L = timerVal;
 15128  0BAE  0870               	movf	TMR3_WriteTimer@timerVal,w
 15129  0BAF  0092               	movwf	18	;volatile
 15130  0BB0                     i1l465:
 15131  0BB0  0008               	return
 15132  0BB1                     __end_of_TMR3_WriteTimer:
 15133                           
 15134                           	psect	text54
 15135  0C10                     __ptext54:	
 15136 ;; *************** function _TMR1_ISR *****************
 15137 ;; Defined at:
 15138 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 15139 ;; Parameters:    Size  Location     Type
 15140 ;;		None
 15141 ;; Auto vars:     Size  Location     Type
 15142 ;;		None
 15143 ;; Return value:  Size  Location     Type
 15144 ;;                  1    wreg      void 
 15145 ;; Registers used:
 15146 ;;		wreg, status,2, status,0, pclath, cstack
 15147 ;; Tracked objects:
 15148 ;;		On entry : 0/0
 15149 ;;		On exit  : 0/0
 15150 ;;		Unchanged: 0/0
 15151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15156 ;;Total ram usage:        0 bytes
 15157 ;; Hardware stack levels used:    1
 15158 ;; Hardware stack levels required when called:    1
 15159 ;; This function calls:
 15160 ;;		Absolute function
 15161 ;;		_Clock_ISR
 15162 ;;		_TMR1_DefaultInterruptHandler
 15163 ;;		_TMR1_WriteTimer
 15164 ;; This function is called by:
 15165 ;;		_INTERRUPT_InterruptManager
 15166 ;; This function uses a non-reentrant model
 15167 ;;
 15168                           
 15169                           
 15170                           ;psect for function _TMR1_ISR
 15171  0C10                     _TMR1_ISR:
 15172  0C10                     i1l4146:	
 15173                           ;incstack = 0
 15174                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 15175                           
 15176                           
 15177                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 15178  0C10  002E               	movlb	14	; select bank14
 15179  0C11  1010               	bcf	16,0	;volatile
 15180  0C12                     i1l4148:
 15181                           
 15182                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 15183  0C12  0021               	movlb	1	; select bank1
 15184  0C13  0829               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 15185  0C14  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 15186  0C15  0828               	movf	_timer1ReloadVal^(0+128),w	;volatile
 15187  0C16  00F0               	movwf	TMR1_WriteTimer@timerVal
 15188  0C17  318B  238F  318C   	fcall	_TMR1_WriteTimer
 15189  0C1A                     i1l4150:
 15190                           
 15191                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 15192  0C1A  0021               	movlb	1	; select bank1
 15193  0C1B  0826               	movf	_TMR1_InterruptHandler^(0+128),w
 15194  0C1C  0427               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 15195  0C1D  1903               	btfsc	3,2
 15196  0C1E  2C20               	goto	u375_21
 15197  0C1F  2C21               	goto	u375_20
 15198  0C20                     u375_21:
 15199  0C20  2C26               	goto	i1l414
 15200  0C21                     u375_20:
 15201  0C21                     i1l4152:
 15202                           
 15203                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 15204  0C21  0827               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 15205  0C22  008A               	movwf	10
 15206  0C23  0826               	movf	_TMR1_InterruptHandler^(0+128),w
 15207  0C24  000A               	callw
 15208  0C25  318C               	pagesel	$
 15209  0C26                     i1l414:
 15210  0C26  0008               	return
 15211  0C27                     __end_of_TMR1_ISR:
 15212                           
 15213                           	psect	text55
 15214  0B8F                     __ptext55:	
 15215 ;; *************** function _TMR1_WriteTimer *****************
 15216 ;; Defined at:
 15217 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 15218 ;; Parameters:    Size  Location     Type
 15219 ;;  timerVal        2    0[COMMON] unsigned int 
 15220 ;; Auto vars:     Size  Location     Type
 15221 ;;		None
 15222 ;; Return value:  Size  Location     Type
 15223 ;;                  1    wreg      void 
 15224 ;; Registers used:
 15225 ;;		wreg, status,2
 15226 ;; Tracked objects:
 15227 ;;		On entry : 0/0
 15228 ;;		On exit  : 0/0
 15229 ;;		Unchanged: 0/0
 15230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15235 ;;Total ram usage:        2 bytes
 15236 ;; Hardware stack levels used:    1
 15237 ;; This function calls:
 15238 ;;		Nothing
 15239 ;; This function is called by:
 15240 ;;		_TMR1_ISR
 15241 ;;		_TMR1_Reload
 15242 ;; This function uses a non-reentrant model
 15243 ;;
 15244                           
 15245                           
 15246                           ;psect for function _TMR1_WriteTimer
 15247  0B8F                     _TMR1_WriteTimer:
 15248  0B8F                     i1l3854:	
 15249                           ;incstack = 0
 15250                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 15251                           
 15252                           
 15253                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 15254  0B8F  0024               	movlb	4	; select bank4
 15255  0B90  1D0E               	btfss	14,2	;volatile
 15256  0B91  2B93               	goto	u319_21
 15257  0B92  2B94               	goto	u319_20
 15258  0B93                     u319_21:
 15259  0B93  2B9B               	goto	i1l3864
 15260  0B94                     u319_20:
 15261  0B94                     i1l3856:
 15262                           
 15263                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 15264  0B94  100E               	bcf	14,0	;volatile
 15265  0B95                     i1l3858:
 15266                           
 15267                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 15268  0B95  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15269  0B96  008D               	movwf	13	;volatile
 15270  0B97                     i1l3860:
 15271                           
 15272                           ;tmr1.c: 136: TMR1L = timerVal;
 15273  0B97  0870               	movf	TMR1_WriteTimer@timerVal,w
 15274  0B98  008C               	movwf	12	;volatile
 15275  0B99                     i1l3862:
 15276                           
 15277                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 15278  0B99  140E               	bsf	14,0	;volatile
 15279                           
 15280                           ;tmr1.c: 140: }
 15281  0B9A  2B9F               	goto	i1l401
 15282  0B9B                     i1l3864:
 15283                           
 15284                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 15285  0B9B  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15286  0B9C  008D               	movwf	13	;volatile
 15287  0B9D                     i1l3866:
 15288                           
 15289                           ;tmr1.c: 145: TMR1L = timerVal;
 15290  0B9D  0870               	movf	TMR1_WriteTimer@timerVal,w
 15291  0B9E  008C               	movwf	12	;volatile
 15292  0B9F                     i1l401:
 15293  0B9F  0008               	return
 15294  0BA0                     __end_of_TMR1_WriteTimer:
 15295                           
 15296                           	psect	text56
 15297  0F8E                     __ptext56:	
 15298 ;; *************** function _Clock_ISR *****************
 15299 ;; Defined at:
 15300 ;;		line 287 in file "main.c"
 15301 ;; Parameters:    Size  Location     Type
 15302 ;;		None
 15303 ;; Auto vars:     Size  Location     Type
 15304 ;;		None
 15305 ;; Return value:  Size  Location     Type
 15306 ;;                  1    wreg      void 
 15307 ;; Registers used:
 15308 ;;		wreg, status,2, status,0
 15309 ;; Tracked objects:
 15310 ;;		On entry : 0/0
 15311 ;;		On exit  : 0/0
 15312 ;;		Unchanged: 0/0
 15313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15316 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15317 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15318 ;;Total ram usage:        1 bytes
 15319 ;; Hardware stack levels used:    1
 15320 ;; This function calls:
 15321 ;;		Nothing
 15322 ;; This function is called by:
 15323 ;;		_main
 15324 ;;		_TMR1_ISR
 15325 ;; This function uses a non-reentrant model
 15326 ;;
 15327                           
 15328                           
 15329                           ;psect for function _Clock_ISR
 15330  0F8E                     _Clock_ISR:
 15331  0F8E                     i1l3950:	
 15332                           ;incstack = 0
 15333                           ; Regs used in _Clock_ISR: [wreg+status,2+status,0]
 15334                           
 15335                           
 15336                           ;main.c: 289: t.s++;
 15337  0F8E  3001               	movlw	1
 15338  0F8F  0020               	movlb	0	; select bank0
 15339  0F90  07D0               	addwf	_t+4,f
 15340  0F91  3000               	movlw	0
 15341  0F92  3DD1               	addwfc	_t+5,f
 15342  0F93                     i1l3952:
 15343                           
 15344                           ;main.c: 291: if(t.s==60){
 15345  0F93  303C               	movlw	60
 15346  0F94  0650               	xorwf	_t+4,w
 15347  0F95  0451               	iorwf	_t+5,w
 15348  0F96  1D03               	btfss	3,2
 15349  0F97  2F99               	goto	u340_21
 15350  0F98  2F9A               	goto	u340_20
 15351  0F99                     u340_21:
 15352  0F99  2FA0               	goto	i1l3958
 15353  0F9A                     u340_20:
 15354  0F9A                     i1l3954:
 15355                           
 15356                           ;main.c: 292: t.m++;
 15357  0F9A  3001               	movlw	1
 15358  0F9B  07CE               	addwf	_t+2,f
 15359  0F9C  3000               	movlw	0
 15360  0F9D  3DCF               	addwfc	_t+3,f
 15361  0F9E                     i1l3956:
 15362                           
 15363                           ;main.c: 293: t.s=0;
 15364  0F9E  01D0               	clrf	_t+4
 15365  0F9F  01D1               	clrf	_t+5
 15366  0FA0                     i1l3958:
 15367                           
 15368                           ;main.c: 294: };main.c: 295: if(t.m==60){
 15369  0FA0  303C               	movlw	60
 15370  0FA1  064E               	xorwf	_t+2,w
 15371  0FA2  044F               	iorwf	_t+3,w
 15372  0FA3  1D03               	btfss	3,2
 15373  0FA4  2FA6               	goto	u341_21
 15374  0FA5  2FA7               	goto	u341_20
 15375  0FA6                     u341_21:
 15376  0FA6  2FAD               	goto	i1l3964
 15377  0FA7                     u341_20:
 15378  0FA7                     i1l3960:
 15379                           
 15380                           ;main.c: 297: t.h++;
 15381  0FA7  3001               	movlw	1
 15382  0FA8  07CC               	addwf	_t,f
 15383  0FA9  3000               	movlw	0
 15384  0FAA  3DCD               	addwfc	_t+1,f
 15385  0FAB                     i1l3962:
 15386                           
 15387                           ;main.c: 298: t.m=0;
 15388  0FAB  01CE               	clrf	_t+2
 15389  0FAC  01CF               	clrf	_t+3
 15390  0FAD                     i1l3964:
 15391                           
 15392                           ;main.c: 299: };main.c: 300: if(t.h==24){
 15393  0FAD  3018               	movlw	24
 15394  0FAE  064C               	xorwf	_t,w
 15395  0FAF  044D               	iorwf	_t+1,w
 15396  0FB0  1D03               	btfss	3,2
 15397  0FB1  2FB3               	goto	u342_21
 15398  0FB2  2FB4               	goto	u342_20
 15399  0FB3                     u342_21:
 15400  0FB3  2FB6               	goto	i1l3968
 15401  0FB4                     u342_20:
 15402  0FB4                     i1l3966:
 15403                           
 15404                           ;main.c: 301: t.h=0;
 15405  0FB4  01CC               	clrf	_t
 15406  0FB5  01CD               	clrf	_t+1
 15407  0FB6                     i1l3968:
 15408                           
 15409                           ;main.c: 302: };main.c: 305: if(alarmsEnable == 1 && t.s >= clkAlarm.alarmVal.s && t.m >
      +                          = clkAlarm.alarmVal.m && t.h >= clkAlarm.alarmVal.h){
 15410  0FB6  036C               	decf	_alarmsEnable,w
 15411  0FB7  1D03               	btfss	3,2
 15412  0FB8  2FBA               	goto	u343_21
 15413  0FB9  2FBB               	goto	u343_20
 15414  0FBA                     u343_21:
 15415  0FBA  2FF3               	goto	i1l3980
 15416  0FBB                     u343_20:
 15417  0FBB                     i1l3970:
 15418  0FBB  0851               	movf	_t+5,w
 15419  0FBC  3A80               	xorlw	128
 15420  0FBD  00F0               	movwf	??_Clock_ISR
 15421  0FBE  0866               	movf	_clkAlarm+5,w
 15422  0FBF  3A80               	xorlw	128
 15423  0FC0  0270               	subwf	??_Clock_ISR,w
 15424  0FC1  1D03               	skipz
 15425  0FC2  2FC5               	goto	u344_25
 15426  0FC3  0865               	movf	_clkAlarm+4,w
 15427  0FC4  0250               	subwf	_t+4,w
 15428  0FC5                     u344_25:
 15429  0FC5  1C03               	skipc
 15430  0FC6  2FC8               	goto	u344_21
 15431  0FC7  2FC9               	goto	u344_20
 15432  0FC8                     u344_21:
 15433  0FC8  2FF3               	goto	i1l3980
 15434  0FC9                     u344_20:
 15435  0FC9                     i1l3972:
 15436  0FC9  0020               	movlb	0	; select bank0
 15437  0FCA  084F               	movf	_t+3,w
 15438  0FCB  3A80               	xorlw	128
 15439  0FCC  00F0               	movwf	??_Clock_ISR
 15440  0FCD  0864               	movf	_clkAlarm+3,w
 15441  0FCE  3A80               	xorlw	128
 15442  0FCF  0270               	subwf	??_Clock_ISR,w
 15443  0FD0  1D03               	skipz
 15444  0FD1  2FD4               	goto	u345_25
 15445  0FD2  0863               	movf	_clkAlarm+2,w
 15446  0FD3  024E               	subwf	_t+2,w
 15447  0FD4                     u345_25:
 15448  0FD4  1C03               	skipc
 15449  0FD5  2FD7               	goto	u345_21
 15450  0FD6  2FD8               	goto	u345_20
 15451  0FD7                     u345_21:
 15452  0FD7  2FF3               	goto	i1l3980
 15453  0FD8                     u345_20:
 15454  0FD8                     i1l3974:
 15455  0FD8  0020               	movlb	0	; select bank0
 15456  0FD9  084D               	movf	_t+1,w
 15457  0FDA  3A80               	xorlw	128
 15458  0FDB  00F0               	movwf	??_Clock_ISR
 15459  0FDC  0862               	movf	_clkAlarm+1,w
 15460  0FDD  3A80               	xorlw	128
 15461  0FDE  0270               	subwf	??_Clock_ISR,w
 15462  0FDF  1D03               	skipz
 15463  0FE0  2FE3               	goto	u346_25
 15464  0FE1  0861               	movf	_clkAlarm,w
 15465  0FE2  024C               	subwf	_t,w
 15466  0FE3                     u346_25:
 15467  0FE3  1C03               	skipc
 15468  0FE4  2FE6               	goto	u346_21
 15469  0FE5  2FE7               	goto	u346_20
 15470  0FE6                     u346_21:
 15471  0FE6  2FF3               	goto	i1l3980
 15472  0FE7                     u346_20:
 15473  0FE7                     i1l3976:
 15474                           
 15475                           ;main.c: 306: alarmPWMStart.h = -1;
 15476  0FE7  30FF               	movlw	255
 15477  0FE8  0021               	movlb	1	; select bank1
 15478  0FE9  00BA               	movwf	_alarmPWMStart^(0+128)
 15479  0FEA  30FF               	movlw	255
 15480  0FEB  00BB               	movwf	(_alarmPWMStart^(0+128)+1)
 15481  0FEC                     i1l3978:
 15482                           
 15483                           ;main.c: 307: clkAlarm.trigger = 1;
 15484  0FEC  0020               	movlb	0	; select bank0
 15485  0FED  01E7               	clrf	_clkAlarm+6
 15486  0FEE  0AE7               	incf	_clkAlarm+6,f
 15487                           
 15488                           ;main.c: 308: clkAlarm.alarmVal.h = 25;
 15489  0FEF  3019               	movlw	25
 15490  0FF0  00E1               	movwf	_clkAlarm
 15491  0FF1  3000               	movlw	0
 15492  0FF2  00E2               	movwf	_clkAlarm+1
 15493  0FF3                     i1l3980:
 15494  0FF3  1003               	clrc
 15495  0FF4  0020               	movlb	0	; select bank0
 15496  0FF5  1F96               	btfss	22,7	;volatile
 15497  0FF6  1403               	setc
 15498  0FF7  1803               	btfsc	3,0
 15499  0FF8  2FFA               	goto	u347_21
 15500  0FF9  2FFD               	goto	u347_20
 15501  0FFA                     u347_21:
 15502  0FFA  0020               	movlb	0	; select bank0
 15503  0FFB  1796               	bsf	22,7	;volatile
 15504  0FFC  2FFF               	goto	u348_24
 15505  0FFD                     u347_20:
 15506  0FFD  0020               	movlb	0	; select bank0
 15507  0FFE  1396               	bcf	22,7	;volatile
 15508  0FFF                     u348_24:
 15509  0FFF                     i1l1130:
 15510  0FFF  0008               	return
 15511  1000                     __end_of_Clock_ISR:
 15512                           
 15513                           	psect	text57
 15514  0002                     __ptext57:	
 15515 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 15516 ;; Defined at:
 15517 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 15518 ;; Parameters:    Size  Location     Type
 15519 ;;		None
 15520 ;; Auto vars:     Size  Location     Type
 15521 ;;		None
 15522 ;; Return value:  Size  Location     Type
 15523 ;;                  1    wreg      void 
 15524 ;; Registers used:
 15525 ;;		None
 15526 ;; Tracked objects:
 15527 ;;		On entry : 0/0
 15528 ;;		On exit  : 0/0
 15529 ;;		Unchanged: 0/0
 15530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15535 ;;Total ram usage:        0 bytes
 15536 ;; Hardware stack levels used:    1
 15537 ;; This function calls:
 15538 ;;		Nothing
 15539 ;; This function is called by:
 15540 ;;		_TMR1_Initialize
 15541 ;;		_TMR1_ISR
 15542 ;; This function uses a non-reentrant model
 15543 ;;
 15544                           
 15545                           
 15546                           ;psect for function _TMR1_DefaultInterruptHandler
 15547  0002                     _TMR1_DefaultInterruptHandler:
 15548  0002                     i1l420:	
 15549                           ;incstack = 0
 15550                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 15551                           
 15552  0002  0008               	return
 15553  0003                     __end_of_TMR1_DefaultInterruptHandler:
 15554  007E                     btemp	set	126	;btemp
 15555  007E                     int$flags	set	126
 15556  007E                     wtemp0	set	126
 15557                           
 15558                           	psect	config
 15559                           
 15560                           ;Config register CONFIG1 @ 0x8007
 15561                           ;	External Oscillator mode selection bits
 15562                           ;	FEXTOSC = OFF, Oscillator not enabled
 15563                           ;	Power-up default value for COSC bits
 15564                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 15565                           ;	Clock Out Enable bit
 15566                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 15567                           ;	Clock Switch Enable bit
 15568                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 15569                           ;	Fail-Safe Clock Monitor Enable bit
 15570                           ;	FCMEN = ON, FSCM timer enabled
 15571  8007                     	org	32775
 15572  8007  3FEC               	dw	16364
 15573                           
 15574                           ;Config register CONFIG2 @ 0x8008
 15575                           ;	Master Clear Enable bit
 15576                           ;	MCLRE = ON, MCLR pin is Master Clear function
 15577                           ;	Power-up Timer Enable bit
 15578                           ;	PWRTE = OFF, PWRT disabled
 15579                           ;	Low-Power BOR enable bit
 15580                           ;	LPBOREN = OFF, ULPBOR disabled
 15581                           ;	Brown-out reset enable bits
 15582                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 15583                           ;	Brown-out Reset Voltage Selection
 15584                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 15585                           ;	Zero-cross detect disable
 15586                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 15587                           ;	Peripheral Pin Select one-way control
 15588                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 15589                           ;	Stack Overflow/Underflow Reset Enable bit
 15590                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 15591                           ;	Background Debugger
 15592                           ;	DEBUG = OFF, Background Debugger disabled
 15593  8008                     	org	32776
 15594  8008  3FFF               	dw	16383
 15595                           
 15596                           ;Config register CONFIG3 @ 0x8009
 15597                           ;	WDT Period Select bits
 15598                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 15599                           ;	WDT operating mode
 15600                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 15601                           ;	WDT Window Select bits
 15602                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 15603                           ;	WDT input clock selector
 15604                           ;	WDTCCS = SC, Software Control
 15605  8009                     	org	32777
 15606  8009  3F9F               	dw	16287
 15607                           
 15608                           ;Config register CONFIG4 @ 0x800A
 15609                           ;	UserNVM self-write protection bits
 15610                           ;	WRT = OFF, Write protection off
 15611                           ;	Scanner Enable bit
 15612                           ;	SCANE = available, Scanner module is available for use
 15613                           ;	Low Voltage Programming Enable bit
 15614                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 15615  800A                     	org	32778
 15616  800A  3FFF               	dw	16383
 15617                           
 15618                           ;Config register CONFIG5 @ 0x800B
 15619                           ;	UserNVM Program memory code protection bit
 15620                           ;	CP = OFF, Program Memory code protection disabled
 15621                           ;	DataNVM code protection bit
 15622                           ;	CPD = OFF, Data EEPROM code protection disabled
 15623  800B                     	org	32779
 15624  800B  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    10
    Data        18
    BSS         27
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     44      79
    BANK1            80     10      32
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[15]), 
		 -> STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    differenceBetweenTimePeriod@diff	PTR struct Time size(1) Largest target is 6
		 -> menuLCD_ISR@diff(BANK0[6]), 

    LCDstr@p	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR5_ISR->_monitoring_ISR
    _monitoring_ISR->_ADCC_GetSingleConversion
    _monitoring_ISR->_tsttc
    _tsttc->i1_WriteI2C
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->i1_LCDsend2x4
    _LCDcmd->i1_LCDsend2x4
    i1_LCDsend2x4->i1_WriteI2C
    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR3_ISR->_menuLCD_ISR
    _menuLCD_ISR->_sprintf

Critical Paths under _main in BANK1

    _main->_LCDinit
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1824
                                              9 BANK1      1     1      0
                            _LCDinit
              _PWM_Output_D4_Disable
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                     _TMR2_StopTimer
           _TMR3_SetInterruptHandler
           _TMR5_SetInterruptHandler
                          _editClock
                           _editTemp
                   _i2c1_driver_open
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _editTemp                                             1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editClock                                            1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StopTimer                                       0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (2) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     522
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0     174
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     174
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Output_D4_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     780
                                              8 BANK1      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend2x4                                           6     5      1     736
                                              2 BANK1      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK1      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    5778
                           _TMR1_ISR
                           _TMR3_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR5_ISR                                             0     0      0     330
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                     _monitoring_ISR *
 ---------------------------------------------------------------------------------
 (6) _monitoring_ISR                                       3     3      0      90
                                              4 COMMON     3     3      0
           _ADCC_GetSingleConversion
                              _tsttc
 ---------------------------------------------------------------------------------
 (7) _tsttc                                                2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (6) _TMR5_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR5_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0    5208
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
                        _menuLCD_ISR *
 ---------------------------------------------------------------------------------
 (6) _menuLCD_ISR                                         23    23      0    4968
                                             21 BANK0     23    23      0
                            _LCDchar
                             _LCDcmd
                             _LCDstr
                 _PWM6_LoadDutyValue
               _PWM_Output_D4_Enable
                    _TMR2_StartTimer
        _differenceBetweenTimePeriod
                            _sprintf
            i1_PWM_Output_D4_Disable
                   i1_TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (7) i1_TMR2_StopTimer                                     0     0      0       0
                        i1_TMR2_Stop
 ---------------------------------------------------------------------------------
 (8) i1_TMR2_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM_Output_D4_Disable                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             29    21      8    2542
                                              0 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _differenceBetweenTimePeriod                         15     2     13     595
                                              0 COMMON    13     0     13
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (8) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PWM_Output_D4_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PWM6_LoadDutyValue                                   4     2      2     196
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _LCDstr                                               3     3      0     550
                                              9 COMMON     3     3      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (8) _LCDchar                                              1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (7) _LCDcmd                                               1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (9) i1_LCDsend2x4                                         6     5      1     384
                                              2 COMMON     6     5      1
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) i1_WriteI2C                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _TMR3_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
                          _Clock_ISR *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Clock_ISR                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _PWM_Output_D4_Disable
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_StopTimer
     _TMR2_Stop
   _TMR3_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _editClock
   _editTemp
   _i2c1_driver_open

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _Clock_ISR *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *
     _menuLCD_ISR *
       _LCDchar
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDcmd
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDstr
         _LCDchar
           i1_LCDsend2x4
             i1_WriteI2C
       _PWM6_LoadDutyValue
       _PWM_Output_D4_Enable
       _TMR2_StartTimer
         _TMR2_Start
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       i1_PWM_Output_D4_Disable
       i1_TMR2_StopTimer
         i1_TMR2_Stop
   _TMR5_ISR
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _monitoring_ISR *
       _ADCC_GetSingleConversion
       _tsttc
         _ReadI2C
         i1_WriteI2C

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2C      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      A      20       7       40.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      7D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      7D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Oct 31 10:27:10 2020

                                       _t 004C          __end_of_TMR5_SetInterruptHandler 0B2A  
                              i1_WriteI2C 0E28                                        l30 0F1F  
                                      l33 0EE7                                        l42 0F09  
                                      l35 0EEC                                        l47 0F1D  
                     ___wmul@multiplicand 0072                         ??_TMR5_WriteTimer 0072  
             __size_of_PWM6_LoadDutyValue 0016                                       l122 0E27  
                                     l172 0C8A                                       l175 0B5B  
                                     l239 0B67                                       l417 0B1D  
                                     l178 0B52                                       l451 0CE7  
                                     l481 0B23                                       l705 0B29  
                                     l563 07FE                                       l387 0CC8  
                                     l719 0B80                                       l923 0E84  
                                     l675 0D06                                       l924 0E86  
                                     l764 0B0B                                       l749 0B8E  
                                     l935 0EBF                                       l767 0B17  
                                     l936 0EC1                                       l939 0EC5  
                                     _PR2 028D                           _timer1ReloadVal 00A8  
                 __size_of_PMD_Initialize 0008                           _TMR2_Initialize 0B81  
                                     wreg 0009                               ?_LCDsend2x4 00AC  
                         __end_of_LCDchar 0B4B                                      l1040 0553  
                                    l1025 0501                                      l1026 0503  
                                    l1203 06F2                                      l1052 05A9  
                                    l1053 05AB                                      l1207 0D57  
                                    l1056 05B2                                      l1208 0D53  
                                    l1049 0593                                      l1233 0756  
                                    l1090 0B08                                      l1226 074E  
                                    l1059 07E7                                      l1184 069A  
                                    l1194 06E8                                      l1187 0695  
                         _timer3ReloadVal 006D                                      l4100 0C6F  
                                    l4110 0C7E                                      l4102 0C72  
                                    l4112 0C81                                      l4104 0C75  
                                    l4120 0B61                                      l4114 0C84  
                                    l4106 0C78                                      l4122 0B62  
                                    l4116 0C87                                      l4108 0C7B  
                                    l4300 0D4D                                      l4124 0B64  
                                    l4230 078B                                      l4222 0772  
                                    l4310 0D68                                      l4302 0D4F  
                                    l4118 0B5C                                      l3504 0EF3  
                                    l4240 07AF                                      l4232 0797  
                                    l4224 077B                                      l4304 0D5B  
                                    l3506 0EFE                                      l4250 07D1  
                                    l4242 07B3                                      l4234 079B  
                                    l4226 077F                                      l3514 0B18  
                                    l4154 0B14                                      l4306 0D61  
                                    l3508 0F0E                                      l4252 07D7  
                                    l4244 07BF                                      l4236 07A3  
                                    l4228 0787                                      l3516 0B1E  
                                    l3532 0B24                                      l4260 066B  
                                    l4308 0D67                                      l4254 07DD  
                                    l4246 07C3                                      l4238 07A7  
                                    l4270 06A4                                      l4262 0670  
                                    l4248 07CB                                      l4256 0B06  
                                    l3800 0CDB                                      l4280 06CB  
                                    l4272 06B3                                      l4264 068D  
                                    l4360 0717                                      l3730 0DF3  
                                    l3810 0B85                                      l3802 0CDC  
                                    l4290 06E4                                      l4282 06CE  
                                    l4274 06B7                                      l4266 0690  
                                    l4258 0666                                      l4418 075F  
                                    l4370 0721                                      l4362 0719  
                                    l4354 06F3                                      l3492 0ED0  
                                    l3484 0EC8                                      l3900 0E75  
                                    l3740 0DFE                                      l3732 0DF5  
                                    l3812 0B88                                      l3804 0CE4  
                                    l3820 0CEB                                      l4284 06D3  
                                    l4276 06BD                                      l4268 069E  
                                    l4292 0D3B                                      l4380 073C  
                                    l4372 0722                                      l4364 071A  
                                    l4356 06F6                                      l3494 0EDA  
                                    l3486 0ECB                                      l3910 0EB0  
                                    l3902 0E8A                                      l3750 0E12  
                                    l3742 0E00                                      l3734 0DF7  
                                    l3726 0DEB                                      l3814 0B89  
                                    l3806 0B81                                      l3830 0CFA  
                                    l3822 0CED                                      l4286 06DA  
                                    l4278 06C4                                      l4294 0D3E  
                                    l4382 0741                                      l4374 0727  
                                    l4366 071C                                      l4358 06F9  
                                    l3496 0EE5                                      l3904 0E99  
                                    l3920 0516                                      l3912 04E1  
                                    l3760 0E1D                                      l3752 0E14  
                                    l3744 0E02                                      l3736 0DF9  
                                    l3728 0DF1                                      l3840 0CAF  
                                    l3816 0B8B                                      l3808 0B84  
                                    l3832 0CFB                                      l3824 0CEF  
                                    l4288 06E1                                      l4296 0D3F  
                                    l4384 0746                                      l4376 0730  
                                    l4392 075A                                      l4368 0720  
                         __end_of_LCDinit 07E8                                      l3498 0EF1  
                                    l3906 0E9D                                      l3930 0544  
                                    l3922 051A                                      l3914 04E6  
                                    l3770 0B53                                      l3762 0E20  
                                    l3754 0E16                                      l3746 0E04  
                                    l3738 0DFB                                      l3850 0CBD  
                                    l3842 0CB1                                      l3834 0D03  
                                    l3826 0CF1                                      l3818 0CE8  
                                    l4298 0D44                                      l4378 0737  
                                    l4386 074A                                      l3908 0EAC  
                                    l3940 057E                                      l3932 0553  
                                    l3924 0529                                      l3916 04F2  
                                    l3772 0B56                                      l3764 0E22  
                                    l3756 0E18                                      l3748 0E10  
                                    l3780 0B7B                                      l3852 0CC5  
                                    l3844 0CB3                                      l3836 0CAA  
                                    l3828 0CF8                                      l4388 0753  
                                    l3942 0584                                      l3934 055A  
                                    l3926 052F                                      l3918 0507  
                                    l3782 07E8                                      l3774 0B57  
                                    l3766 0E24                                      l3758 0E1A  
                                    l3846 0CBA                                      l3838 0CAD  
                                    l3790 0CCC                                      l3944 0593  
                                    l3936 0569                                      l3928 053E  
                                    l3784 07FA                                      l3776 0B5A  
                                    l3768 0B4B                                      l3848 0CBC  
                                    l3792 0CCE                                      l3946 059A  
                                    l3938 056F                                      l3786 07FC  
                                    l3778 0B74                                      l3794 0CD0  
                                    l3948 05AF                                      l3796 0CD2  
                                    l3788 0CC9                                      l3798 0CD9  
                                    l3896 0B09                                      l3898 0E75  
                         __end_of_LCDsend 0EC6                                      STR_1 1000  
                                    STR_2 1000                                      STR_3 1019  
                                    STR_4 1019                                      STR_5 1020  
                                    _LATA 0016                                      _LATB 0017  
                                    _LATC 0018                                      _LATD 0019  
                                    _LATE 001A                                      u3220 0E84  
                                    u3300 0507                                      u4100 06CB  
                                    u3221 0E83                                      u3301 0506  
                                    u4101 06CA                                      u3230 0E8A  
                                    u3310 0516                                      u4110 06DA  
                                    u4030 0670                                      u3231 0E89  
                                    u3311 0515                                      u4111 06D9  
                                    u4031 066F                                      u3240 0E99  
                                    u3320 0529                                      u4120 06E1  
                                    u4040 068D                                      u3241 0E98  
                                    u3321 0528                                      u4121 06E0  
                                    u4041 068C                                      u3250 0EAC  
                                    u3330 053E                                      u4050 069A  
                                    u4130 0D44                                      _T2PR 028D  
                                    u3251 0EAB                                      u3331 053D  
                                    u4051 0699                                      u4131 0D43  
                                    u2700 0F1D                                      u2620 0ECF  
                                    u3260 0EBF                                      u3340 0553  
                                    u4060 069E                                      u4140 0D57  
                                    u4300 0741                                      u2701 0F1C  
                                    u2621 0ECE                                      u3261 0EBE  
                                    u3341 0552                                      u4061 069D  
                                    u4045 0689                                      u4141 0D56  
                                    u4301 0740                                      u2630 0EDA  
                                    u3270 0EC5                                      u3350 0569  
                                    u4070 06A4                                      u4150 0D5B  
                                    u4310 0746                                      u2631 0ED9  
                                    u3271 0EC4                                      u3351 0568  
                                    u4071 06A3                                      u4151 0D5A  
                                    u4311 0745                                      u2640 0EE5  
                                    u3360 057E                                      u4080 06B3  
                                    u4160 0D67                                      u4320 0752  
                                    u2641 0EE4                                      u3361 057D  
                                    u4081 06B2                                      u4161 0D66  
                                    u4321 0751                                      u2650 0EEC  
                                    u3370 0593                                      u3290 0501  
                                    u4090 06C4                                      u2651 0EEB  
                                    u3371 0592                                      u3291 0500  
                                    u4091 06C3                                      u2660 0EF1  
                                    u3380 05A9                                      u2661 0EF0  
                                    u3381 05A8                                      u3285 04E9  
                                    u4085 06AF                                      u2670 0EFE  
                                    u3390 05AF                                      u4270 0727  
                                    u2671 0EFD                                      u3391 05AE  
                                    u4407 078C                                      u4271 0726  
                                    u2680 0F09                                      u3720 0B61  
                                    u4280 0737                                      u2681 0F08  
                                    u4417 0798                                      u3721 0B60  
                                    u4281 0736                                      u4337 072B  
                                    u2690 0F0E                                      u4290 073C  
                                    u2691 0F0D                                      u4427 07A0  
                                    u4347 0D48                                      u4291 073B  
                                    _PMD0 0796                                      u4437 07AC  
                                    u4357 0D6C                                      _PMD1 0797  
                                    i1l30 0E72                                      i1l22 0C68  
                                    _PMD2 0798                                      i1l23 0C69  
                                    u4447 07B4                                      u4367 0674  
                                    _PMD3 0799                                      _PMD4 079A  
                                    i1l33 0E44                                      u4457 07C0  
                                    u4377 06EC                                      _PMD5 079B  
                                    i1l42 0E62                                      i1l26 0C6E  
                                    i1l35 0E49                                      u4467 07C8  
                                    u4387 0776                                      u4477 07E4  
                                    u4397 0784                                      i1l47 0E71  
                                    u4487 05B0                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                              ?_menuLCD_ISR 0070  
                                    _main 06F3                                      _mode 0052  
                                    _temp 0060                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                                    start 0040                           _timer5ReloadVal 00A2  
                         _TMR3_Initialize 0CC9                ??_TMR1_SetInterruptHandler 00AC  
                         __end_of_ReadI2C 0C6F            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 0B5C                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                __end_of_i2c1_driver_open 0B68                                     ?_main 0070  
                                   _ADCLK 0098                                     _ADCNT 010C  
                                   _ADPCH 009E                                     _ADREF 009A  
                                   _ADPRE 009C                                     _ADRPT 010D  
                                   _T1CLK 0211                                     _T1CON 020E  
                                   _T3CLK 0217                                     _T2CON 028E  
                                   _T3CON 0214                                     _T5CLK 021D  
                                   _T2HLT 028F                                     _T5CON 021A  
                         __end_of___lwdiv 0DAF                                     _T2TMR 028C  
                                   i1l401 0B9F                                     _T2RST 0291  
                                   i1l420 0002                                     i1l414 0C26  
                                   i1l350 003E                                     i1l351 0038  
                         __end_of___lwmod 0D3B                                     i1l345 0017  
                                   i1l347 0023                                     i1l356 003E  
                                   i1l349 002F                                     i1l702 0C54  
                                   i1l465 0BB0                                     i1l722 0C0F  
                                   i1l484 0003                                     i1l708 07FF  
                                   i1l478 0C3D                                     i1l575 0BDC  
                                   i1l761 0B0F                                     i1l578 0BE5  
                                   i1l914 04D8                                     i1l915 04D9  
                                   i1l764 0B05                                     i1l908 04C7  
                                   i1l860 040F                                     i1l844 03D2  
                                   i1l909 04C9                                     i1l758 0AFF  
                                   i1l918 04DE                                     i1l767 0B13  
                                   i1l871 0440                                     i1l847 03DE  
                                   i1l880 0456                                     i1l872 0442  
                                   i1l848 03DF                                     i1l689 0BC1  
                                   i1l859 040E                                     i1l884 0465  
                                   i1l885 0466                                     i1l877 0451  
                                   i1l878 0452                                     i1l896 0495  
                                   i1l897 0496                                     _OSCEN 0891  
                                   _TMR1H 020D                                     _TMR1L 020C  
                                   _TMR3H 0213                                     _TMR3L 0212  
                                   _TMR5H 0219                                     _TMR5L 0218  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                                     _WPUC3 7A7B  
                                   _WPUC4 7A7C                           _PWM6_Initialize 0B74  
       __size_of_TMR3_SetInterruptHandler 0006                 ?_TMR3_SetInterruptHandler 00AA  
                __end_ofi1_TMR2_StopTimer 0B14                          __end_of_TMR1_ISR 0C27  
                        __end_of_TMR3_ISR 0C3E                          __end_of_TMR5_ISR 0C55  
          ??_TMR3_DefaultInterruptHandler 0070                           __end_of_dpowers 1019  
                      __size_of_TMR2_Stop 0003                               ?_TMR2_Start 0070  
                         __end_of_isdigit 0BD4                                     _tsttc 03D2  
                 __end_of_TMR1_Initialize 0CC9                                     pclath 000A  
                          menuLCD_ISR@str 0037                                     status 0003  
                                   wtemp0 007E                           __end_of_sprintf 03D2  
                  ??_PWM_Output_D4_Enable 0070                           _TMR2_StartTimer 0B0C  
                         _TMR1_WriteTimer 0B8F                           _TMR5_Initialize 0CE8  
                         __initialization 0042                              ?i1_TMR2_Stop 0070  
                            __end_of_main 0772                               ?i1_WriteI2C 0070  
                     __size_of_LCDsend2x4 00D4                   __end_of_TMR2_Initialize 0B8F  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 00B3  
                _TMR5_SetInterruptHandler 0B24                        __size_of_Clock_ISR 0072  
                   _TMR3_InterruptHandler 00A4          differenceBetweenTimePeriod@start 0070  
                               ??_LCDchar 0078                                 ??_LCDinit 00B2  
                               ??_LCDsend 00AC                                    _ADACCH 0091  
                                  _ADACCL 0090                                    _ADCON0 0093  
                                  _ADCON1 0094                                    _ADCON2 0095  
                                  _ADCON3 0096                                    _ADERRH 0117  
                                  _ADERRL 0116                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                                    _ADUTHL 0110  
                        __end_of_WriteI2C 0F20                                    _ANSELA 0F38  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  ?_tsttc 0070                                    _T3GATE 0216  
                                  _T3GCON 0215                                    _T5GATE 021C  
                                  _T5GCON 021B                                    _RA6PPS 0F16  
                                  _RC3PPS 0F23                                    i1l1040 0615  
                                  i1l1025 05D1                                    i1l1130 0FFF  
                                  i1l1026 05D2                   TMR1_WriteTimer@timerVal 0070  
                                  _RC4PPS 0F24                                    i1l1052 065D  
                                  i1l1053 065E                                    i1l1062 0B42  
                                  i1l1071 0BF9                                    i1l1056 0665  
                                  i1l1049 064B                                    i1l1065 0B4A  
                                  i1l1081 0F59                                    i1l1402 0252  
                                  i1l1090 0B02                                    i1l1154 01B9  
                                  i1l1084 0F8D                                    i1l1420 0305  
                                  i1l1148 019F                                    i1l1180 0DEA  
                                  i1l1172 0DD8                                    i1l1165 0234  
                                  i1l1078 0F29                                    i1l1087 0AFC  
                                  i1l1159 0228                                    i1l4000 00C2  
                                  i1l1441 0C95                                    _ODCONA 0F3A  
                                  i1l4010 00E7                                    i1l4002 00CA  
                                  i1l1178 0DE9                                    _ODCONB 0F45  
                                  i1l1443 0CA9                                    _ODCONC 0F50  
                                  i1l4020 0108                                    i1l4012 00F0  
                                  i1l4004 00D0                                    _ODCOND 0F5B  
                                  i1l1437 03D1                                    _ODCONE 0F66  
                                  i1l4030 0175                                    i1l4022 0111  
                                  i1l4014 00F8                                    i1l4006 00D9  
                                  i1l4040 0197                                    i1l4032 017A  
                                  i1l4024 0129                                    i1l4016 00FE  
                                  i1l4008 00E1                                    i1l3400 0C6D  
                                  i1l1713 0DAE                                    i1l3330 0E2C  
                                  i1l3410 0BC4                                    i1l4050 01BD  
                                  i1l4042 01A4                                    i1l4034 0180  
                                  i1l4026 0138                                    i1l4018 0103  
                                  i1l4130 0C3E                                    i1l1723 0D3A  
                                  i1l3340 0E43                                    i1l3404 0AFD  
                                  i1l3420 0C8B                                    i1l3412 0BCA  
                                  i1l4060 01EA                                    i1l4052 01C3  
                                  i1l4044 01AA                                    i1l4036 018E  
                                  i1l4028 0167                                    i1l4140 0C29  
                                  i1l4132 0C40                                    i1l4150 0C1A  
                                  i1l3350 0E59                                    i1l3342 0E4E  
                                  i1l3406 0B44                                    i1l3430 0CA5  
                                  i1l3422 0C8D                                    i1l3414 0BD0  
                                  i1l4070 0210                                    i1l4062 01FA  
                                  i1l4054 01D3                                    i1l4046 01AD  
                                  i1l4038 0194                                    i1l4142 0C31  
                                  i1l4134 0C48                                    i1l4152 0C21  
                                  i1l3352 0E66                                    i1l3336 0E31  
                                  i1l3328 0E29                                    i1l3360 05B9  
                                  i1l3600 0F21                                    i1l3440 0D7E  
                                  i1l3424 0C91                                    i1l3416 0BD2  
                                  i1l3408 0BC3                                    i1l4080 0230  
                                  i1l4072 0217                                    i1l4064 01FE  
                                  i1l4056 01E2                                    i1l4048 01B1  
                                  i1l4144 0C38                                    i1l3520 0BD8  
                                  i1l4136 0C4F                                    i1l4320 000F  
                                  i1l4146 0C10                                    i1l3338 0E3A  
                                  i1l3370 05F1                                    i1l3362 05C5  
                                  i1l3610 0AFA                                    i1l3602 0F38  
                                  i1l3450 0D9E                                    i1l3442 0D83  
                                  i1l3434 0D73                                    i1l3426 0C9A  
                                  i1l4074 021C                                    i1l4066 0205  
                                  i1l4058 01E6                                    i1l4138 0C27  
                                  i1l3522 0BD9                                    i1l4090 0DD6  
                                  i1l4082 0DAF                                    i1l4330 002B  
                                  i1l4322 0013                                    i1l4148 0C12  
                                  i1l3348 0E50                                    i1l3380 061B  
                                  i1l3372 05F7                                    i1l3364 05D6  
                                  i1l3604 0F51                                    i1l3452 0D9F  
                                  i1l3444 0D87                                    i1l3436 0D75  
                                  i1l3460 0D07                                    i1l3428 0C9F  
                                  i1l3700 0368                                    i1l3620 024E  
                                  i1l3612 0237                                    i1l4076 0223  
                                  i1l4068 020B                                    i1l3524 0BDA  
                                  i1l3540 03E3                                    i1l4092 0DD9  
                                  i1l4084 0DC8                                    i1l4332 0033  
                                  i1l4324 001B                                    i1l4316 0006  
                 __end_of_TMR3_Initialize 0CE8                                    i1l3390 064B  
                                  i1l3382 0627                                    i1l3374 0603  
                                  i1l3366 05E1                                    i1l3358 05B4  
                                  i1l3534 0BFA                                    i1l3606 0F68  
                                  i1l3454 0DA4                                    i1l3446 0D8B  
                                  i1l3438 0D7B                                    i1l3470 0D1D  
                                  i1l3462 0D0D                                    i1l3710 03A5  
                                  i1l3702 036E                                    i1l3630 026C  
                                  i1l3622 0253                                    i1l3614 023C  
                                  i1l4078 0229                                    i1l3526 0BDB  
                                  i1l3518 0BD5                                    i1l3550 0413  
                                  i1l3542 03EE                                    i1l4094 0DDF  
                                  i1l4086 0DCE                                    i1l4326 001F  
                                  i1l4318 000A                                    i1l3392 0651  
                                  i1l3384 062D                                    i1l3376 0609  
                                  i1l3368 05E5                                    i1l3536 0B0C  
                                  i1l3608 0F80                                    i1l3448 0D9A  
                                  i1l3456 0DAA                                    i1l3472 0D27  
                                  i1l3464 0D10                                    i1l3712 03AC  
                                  i1l3704 0375                                    i1l3632 026F  
                                  i1l3616 0242                                    i1l3528 0BE1  
                                  i1l3560 0446                                    i1l3552 041E  
                                  i1l3544 03F2                                    i1l4096 0DE4  
                                  i1l4088 0DD3                                    i1l4336 003C  
                                  i1l4328 0027                                    i1l3394 0662  
                                  i1l3386 0639                                    i1l3378 0615  
                                  i1l3474 0D2B                                    i1l3466 0D15  
                                  i1l3714 03B0                                    i1l3706 0379  
                                  i1l3650 02C6                                    i1l3634 0280  
                                  i1l3642 029F                                    i1l3626 0257  
                                  i1l3618 0249                                    i1l3482 0B03  
                                  i1l3722 0B10                                    i1l3570 0485  
                                  i1l3562 045A                                    i1l3554 0422  
                                  i1l3546 03FE                                    i1l3538 03D2  
                                  i1l4098 0DE7                                    i1l3388 063F  
                                  i1l3476 0D30                                    i1l3468 0D19  
                                  i1l3708 037E                                    i1l3660 02D1  
                                  i1l3652 02CA                                    i1l3644 02B7  
                                  i1l3636 028F                                    i1l3628 0260  
                                  i1l3716 03B9                                    i1l3724 0B00  
                                  i1l3396 0C55                                    i1l3580 04B5  
                                  i1l3572 0489                                    i1l3564 046A  
                                  i1l3556 042E                                    i1l3548 0402  
                                  i1l3590 0B3D                                    i1l3478 0D36  
                                  i1l1894 0BD3                                    i1l3670 0301  
                                  i1l3654 02CF                                    i1l3646 02BE  
                                  i1l3718 03CD                                    i1l3638 0293  
                                  i1l3398 0C5F                                    i1l3582 04BB  
                                  i1l3574 049A                                    i1l3566 0475  
                                  i1l3558 0434                                    u220_20 0E3A  
                                  i1l3592 0BE7                                    u300_20 0F68  
                                  i1l3680 0326                                    i1l3672 0310  
                                  i1l3664 02EB                                    i1l3648 02C2  
                                  i1l3584 04CD                                    i1l3576 04A5  
                                  i1l3568 0479                                    u220_21 0E39  
                                  u300_21 0F67                                    i1l3594 0BE8  
                                  i1l3690 0342                                    i1l3682 032D  
                                  i1l3674 0319                                    i1l3666 02F5  
                                  i1l3586 04DD                                    i1l3578 04A9  
                                  i1l3860 0B97                                    i1l3596 0BEC  
                                  i1l3684 0331                                    i1l3692 034D  
                                  i1l3676 031C                                    i1l3668 02FB  
                                  u300_25 0F64                                    i1l3950 0F8E  
                                  i1l3862 0B99                                    i1l3854 0B8F  
                                  i1l3870 0BA5                                    i1l3598 0F20  
                                  i1l3694 0353                                    i1l3686 0337  
                                  i1l3678 0320                                    i1l3960 0FA7  
                                  i1l3952 0F93                                    i1l3856 0B94  
                                  i1l3864 0B9B                                    i1l3880 0BAE  
                                  i1l3872 0BA6                                    u221_20 0E43  
                                  i1l3696 035A                                    i1l3688 033E  
                                  u301_20 0242                                    u221_21 0E42  
                                  u301_21 0241                                    i1l3970 0FBB  
                                  i1l3962 0FAB                                    i1l3954 0F9A  
                                  i1l3866 0B9D                                    i1l3858 0B95  
                                  i1l3874 0BA8                                    i1l3698 035E  
                                  i1l3890 0BBB                                    i1l3882 0BB1  
                                  i1l3972 0FC9                                    i1l3980 0FF3  
                                  i1l3964 0FAD                                    i1l3956 0F9E  
                                  i1l3876 0BAA                                    i1l3868 0BA0  
                                  i1l3884 0BB6                                    i1l3892 0BBD  
                                  i1l3974 0FD8                                    i1l3966 0FB4  
                                  i1l3958 0FA0                                    i1l3878 0BAC  
                                  i1l3990 00A1                                    i1l3982 006D  
                                  i1l3894 0BBF                                    i1l3886 0BB7  
                                  i1l3976 0FE7                                    i1l3968 0FB6  
                                  u222_20 0E49                                    u230_20 05D6  
                                  u310_20 0320                                    u302_20 026C  
                                  i1l3992 00A5                                    i1l3984 0074  
                                  i1l3888 0BB9                                    u222_21 0E48  
                                  u230_21 05D5                                    u310_21 031F  
                                  u302_21 026B                                    i1l3978 0FEC  
                                  i1l3994 00AB                                    i1l3986 0089  
                                  i1l3996 00B3                                    i1l3988 009D  
                                  i1l3998 00B9                                    u223_20 0E4E  
                                  u231_20 05E1                                    u311_20 0326  
                                  u303_20 029F                                    u223_21 0E4D  
                                  u231_21 05E0                                    u311_21 0325  
                                  u303_21 029E                                    u320_20 0BA5  
                                  u224_20 0E59                                    u232_20 05F1  
                                  u312_20 0337                                    u304_20 02C6  
                                  u240_20 0C5F                                    u320_21 0BA4  
                                  u224_21 0E58                                    u232_21 05F0  
                                  u312_21 0336                                    u304_21 02C5  
                                  u240_21 0C5E                                    u225_20 0E62  
                                  u233_20 0603                                    u313_20 034C  
                                  u305_20 02EA                                    u321_20 0BB6  
                                  u241_20 0C68                                    u225_21 0E61  
                                  u233_21 0602                                    u313_21 034B  
                                  u305_21 02E9                                    u321_21 0BB5  
                                  u241_21 0C67                                    _LCDcmd 0B3C  
                                  u305_25 02E6                                    u226_20 0E66  
                                  u234_20 0615                                    u314_20 0353  
                                  u306_20 02F5                                    u242_20 0C6D  
                                  u226_21 0E65                                    u234_21 0614  
                                  u314_21 0352                                    u306_21 02F4  
                                  u242_21 0C6C                                    u250_25 0D7F  
                                  u227_20 0E71                                    u219_20 0E30  
                                  u235_20 0627                                    u251_20 0D8B  
                                  u243_20 0BCA                                    u315_20 0368  
                                  u307_20 02FB                                    u227_21 0E70  
                                  u219_21 0E2F                                    u235_21 0626  
                                  u251_21 0D8A                                    u243_21 0BC9  
                                  u315_21 0367                                    u307_21 02FA  
                                  u340_20 0F9A                                    u236_20 0639  
                                  u244_20 0BD0                                    u316_20 036E  
                                  u308_20 0301                                    u420_20 001B  
                                  u340_21 0F99                                    u236_21 0638  
                                  u244_21 0BCF                                    u316_21 036D  
                                  u308_21 0300                                    u420_21 001A  
                                  u228_25 05BC                                    u252_25 0D8C  
                                  u260_25 0D2C                                    u341_20 0FA7  
                                  u237_20 064B                                    u229_20 05D1  
                                  u253_20 0D9A                                    u261_20 0D36  
                                  u245_20 0C91                                    u317_20 03B9  
                                  u309_20 0310                                    u421_20 001F  
                                  u341_21 0FA6                                    u237_21 064A  
                                  u229_21 05D0                                    u253_21 0D99  
                                  u261_21 0D35                                    u245_21 0C90  
                                  u317_21 03B8                                    u309_21 030F  
                                  u421_21 001E                                    u253_25 0D96  
                                  u309_25 030C                                    u342_20 0FB4  
                                  u238_20 065D                                    u318_20 03CD  
                                  u350_20 00AB                                    u422_20 0027  
                                  u342_21 0FB3                                    u238_21 065C  
                                  u318_21 03CC                                    u350_21 00AA  
                                  u422_21 0026                                    u254_25 0DA0  
                                  u246_25 0C96                                    u343_20 0FBB  
                                  u319_20 0B94                                    u239_20 0662  
                                  u255_20 0DAA                                    u351_20 00B9  
                                  u271_20 0BE1                                    u423_20 002B  
                                  u343_21 0FBA                                    u319_21 0B93  
                                  u239_21 0661                                    u255_21 0DA9  
                                  u351_21 00B8                                    u271_21 0BE0  
                                  u423_21 002A                                    u247_25 0C9B  
                                  u344_20 0FC9                                    u256_20 0D0D  
                                  u248_20 0CA5                                    u360_20 017A  
                                  u352_20 00D0                                    u280_20 042E  
                                  u424_20 0033                                    u344_21 0FC8  
                                  u256_21 0D0C                                    u248_21 0CA4  
                                  u360_21 0179                                    u352_21 00CF  
                                  u280_21 042D                                    u424_21 0032  
                                  u344_25 0FC5                                    u272_25 0C09  
                                  u345_20 0FD8                                    u249_20 0D7B  
                                  u361_20 018E                                    u353_20 00E7  
                                  u281_20 0440                                    u273_20 03DE  
                                  u425_20 0037                                    u417_20 000A  
                                  u345_21 0FD7                                    u249_21 0D7A  
                                  u361_21 018D                                    u353_21 00E6  
                                  u281_21 043F                                    u273_21 03DD  
                                  u425_21 0036                                    u417_21 0009  
                                  u345_25 0FD4                                    u257_25 0D11  
                                  u361_25 018A                                    u346_20 0FE7  
                                  u258_20 0D1D                                    u362_20 01A4  
                                  u354_20 00FE                                    u290_20 0495  
                                  u282_20 0446                                    u274_20 03E3  
                                  u370_20 0DCE                                    u426_20 003C  
                                  u418_20 000F                                    u346_21 0FE6  
                                  u258_21 0D1C                                    u362_21 01A3  
                                  u354_21 00FD                                    u290_21 0494  
                                  u282_21 0445                                    u274_21 03E2  
                                  u370_21 0DCD                                    u426_21 003B  
                                  u418_21 000E                                    u346_25 0FE3  
                                  u347_20 0FFD                                    u259_20 0D27  
                                  u363_20 01C3                                    u355_20 0103  
                                  u291_20 049A                                    u283_20 0451  
                                  u275_20 03EE                                    u371_20 0DDF  
                                  u419_20 0013                                    u347_21 0FFA  
                                  u259_21 0D26                                    u363_21 01C2  
                                  u355_21 0102                                    u291_21 0499  
                                  u283_21 0450                                    u275_21 03ED  
                                  u371_21 0DDE                                    u419_21 0012  
                                  u259_25 0D23                                    u364_20 0205  
                                  u356_20 0108                                    u292_20 04A5  
                                  u284_20 0456                                    u276_20 03FE  
                                  u364_21 0204                                    u356_21 0107  
                                  u292_21 04A4                                    u284_21 0455  
                                  u276_21 03FD                                    u348_24 0FFF  
                                  _LCDstr 0BE6                                    u365_20 020B  
                                  u357_20 0111                                    u349_20 0074  
                                  u293_20 04B5                                    u285_20 045A  
                                  u277_20 040E                                    u373_20 0C4F  
                                  u365_21 020A                                    u357_21 0110  
                                  u349_21 0073                                    u293_21 04B4  
                                  u285_21 0459                                    u277_21 040D  
                                  u373_21 0C4E                                    u366_20 0217  
                                  u358_20 0134                                    u374_20 0C38  
                                  u294_20 04C7                                    u286_20 0465  
                                  u278_20 0413                                    u366_21 0216  
                                  u374_21 0C37                                    u294_21 04C6  
                                  u286_21 0464                                    u278_21 0412  
                                  u375_20 0C21                                    u367_20 0223  
                                  u359_20 0175                                    u295_20 04CD  
                                  u287_20 046A                                    u279_20 041E  
                                  u375_21 0C20                                    u367_21 0222  
                                  u359_21 0174                                    u295_21 04CC  
                                  u287_21 0469                                    u279_21 041D  
                                  u359_25 0171                                    u368_20 0230  
                                  u296_20 04D8                                    u288_20 0475  
                                  u368_21 022F                                    u296_21 04D7  
                                  u288_21 0474                                    u297_20 04DD  
                                  u289_20 0485                                    u297_21 04DC  
                                  u289_21 0484                                    u369_25 0DBF  
                                  u449_27 0663                                    u298_20 0BF9  
                                  u298_21 0BF8                                    u299_20 0F38  
                                  u299_21 0F37                                    u299_25 0F34  
                                  _OSCFRQ 0893                                    _PWM6EN 1C77  
                               ??_ReadI2C 0070                               LCDsend2x4@c 00AF  
                         _TMR3_WriteTimer 0BA0                          __end_of_editTemp 0D73  
    __end_of_TMR1_DefaultInterruptHandler 0003     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0002                              _CCPTMRS1bits 021F  
                           ?i1_LCDsend2x4 0072                                    ___wmul 0C8B  
                       __end_of_TMR2_Stop 0B0C                                 ??___lwdiv 0074  
                               ??___lwmod 007C                       __size_of_TMR2_Start 0003  
                 __end_of_PWM6_Initialize 0B81                   __size_of_monitoring_ISR 003C  
                         _ADCC_Initialize 07E8                            _PMD_Initialize 0B4B  
                               ??_isdigit 0070                  ?i1_PWM_Output_D4_Disable 0070  
                         menuLCD_ISR@diff 0046         __size_of_ADCC_GetSingleConversion 0012  
               ?_ADCC_GetSingleConversion 0070                   __end_of_TMR2_StartTimer 0B10  
TMR5_SetInterruptHandler@InterruptHandler 00AA  TMR3_SetInterruptHandler@InterruptHandler 00AA  
TMR1_SetInterruptHandler@InterruptHandler 00AA                                 ??_sprintf 0028  
                 __end_of_TMR1_WriteTimer 0BA0                   ??_PWM_Output_D4_Disable 00AA  
                     __size_ofi1_WriteI2C 004B                          ?_TMR1_Initialize 0070  
                 __end_of_TMR5_Initialize 0D07                         _SYSTEM_Initialize 0C6F  
                 __end_of__initialization 0069                        ?_SYSTEM_Initialize 0070  
                       __end_of_Clock_ISR 1000                           _TMR5_WriteTimer 0BB1  
                    __size_of_menuLCD_ISR 01C8                            __pcstackCOMMON 0070  
                          ??i1_LCDsend2x4 0073                              __pidataBANK0 0B68  
                            __pidataBANK1 0B36                       ??_SYSTEM_Initialize 00AC  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                               ?_TMR3_ISR 0070                                 ?_TMR5_ISR 0070  
                            menuLCD_ISR@l 0043                        __size_of_editClock 008D  
         differenceBetweenTimePeriod@diff 007C                             __end_of_tsttc 04DF  
                        ?_TMR2_Initialize 0070           differenceBetweenTimePeriod@stop 0076  
                  __end_of_PMD_Initialize 0B53                              _alarmsEnable 006C  
                            ??_LCDsend2x4 00AD                 __end_of_SYSTEM_Initialize 0C8B  
                            sprintf@width 0031                   __end_of_TMR3_WriteTimer 0BB1  
                                 ??_tsttc 0072                                __pbssBANK0 004C  
                              __pbssBANK1 00B4                                   ?_LCDcmd 0070  
                        ?_TMR3_Initialize 0070                                   ?_LCDstr 0070  
                                 LCDcmd@c 0078                                   LCDstr@c 007A  
                                 LCDstr@p 007B                                __pmaintext 06F3  
        __end_of_TMR3_SetInterruptHandler 0B24                                   ?___wmul 0070  
                              ??_TMR1_ISR 0072                                ??_TMR3_ISR 007E  
                 __end_of_ADCC_Initialize 07FF                __end_of_PWM6_LoadDutyValue 0C10  
                              ??_TMR5_ISR 0077                                __pintentry 0004  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                    __size_ofi1_TMR2_Stop 0003                        __end_of_LCDsend2x4 05B3  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                               ?_WriteI2C 0070                          ?_PWM6_Initialize 0070  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
         __end_ofi1_PWM_Output_D4_Disable 0B03                           ?_PMD_Initialize 0070  
                       ?_i2c1_driver_open 0070                                   _LCDchar 0B43  
                                 _LCDinit 0772                                   _LCDsend 0E73  
                      ??_i2c1_driver_open 00AA                                   _OSCCON1 088D  
                                 _OSCCON3 088F                                 ?_editTemp 0070  
                                 _OSCTUNE 0892                                   _PWM6DCH 038D  
                                 _PWM6DCL 038C                         ?i1_TMR2_StopTimer 0070  
                                 _PWM6CON 038E                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                                 _SSP1MSK 018E                              ??_TMR2_Start 0070  
                 __size_of_TMR2_StopTimer 0004                          ?_TMR2_StartTimer 0070  
                        ?_TMR1_WriteTimer 0070                        ??i1_TMR2_StopTimer 0070  
                 __end_of_TMR5_WriteTimer 0BC2                              LCDsend2x4@hc 00B0  
                            LCDsend2x4@lc 00B1                         __end_of_editClock 06F3  
                        ?_TMR5_Initialize 0070                           __size_of_LCDcmd 0007  
                      _i2c1_driver_i2cISR 0058                           __size_of_LCDstr 0014  
                                 _ReadI2C 0C55                ??_TMR5_SetInterruptHandler 00AC  
                            ??i1_WriteI2C 0070                           __size_of___wmul 001F  
                                 ___lwdiv 0D73                                   ___lwmod 0D07  
                      __end_of_TMR2_Start 0B00                                ??_WriteI2C 00AA  
                                 __ptext1 0B5C                                   __ptext2 0D3B  
                                 __ptext3 0666                                   __ptext4 0B14  
                                 __ptext5 0B09                                   __ptext6 0C6F  
                                 __ptext7 0CE8                                   __ptext8 0B24  
                                 __ptext9 0CC9                            _monitoring_ISR 0DAF  
          ??_TMR1_DefaultInterruptHandler 0070                                 _T1CONbits 020E  
                                 _dpowers 100F                     _OSCILLATOR_Initialize 0B53  
                               _T2CONbits 028E                                   _isdigit 0BC2  
                               _T3CONbits 0214         __size_of_TMR1_SetInterruptHandler 0006  
                ??_PIN_MANAGER_Initialize 00AA                 ?_TMR1_SetInterruptHandler 00AA  
                               _T2HLTbits 028F                                 _T5CONbits 021A  
                              ??_editTemp 00AA                      __end_ofi1_LCDsend2x4 0666  
              __size_of_SYSTEM_Initialize 001C                                   _sprintf 0235  
                                 clrloop0 0B2B                      end_of_initialization 0069  
                        ?_TMR3_WriteTimer 0070                                 _T2RSTbits 0291  
                      __end_ofi1_WriteI2C 0E73                                   init_ram 0B30  
                                 initloop 0B31                            i1LCDsend2x4@hc 0076  
                          i1LCDsend2x4@lc 0077             __size_of_PWM_Output_D4_Enable 0003  
            ?_differenceBetweenTimePeriod 0070                          ?_ADCC_Initialize 0070  
        __end_of_ADCC_GetSingleConversion 0BE6                    __end_of_monitoring_ISR 0DEB  
                               _PORTBbits 000D                                 _PORTCbits 000E  
                               _TMR2_Stop 0B09                  _TMR3_SetInterruptHandler 0B1E  
                   _TMR5_InterruptHandler 00A0                                 _TRISCbits 0013  
                           _alarmPWMStart 00BA                          ?_TMR5_WriteTimer 0070  
                 TMR5_WriteTimer@timerVal 0070            __size_of_PWM_Output_D4_Disable 0003  
           __end_of_PWM_Output_D4_Disable 0B09                            __end_of_LCDcmd 0B43  
                          __end_of_LCDstr 0BFA          __size_ofi1_PWM_Output_D4_Disable 0003  
                          LCDsend2x4@mode 00AC                                 _Clock_ISR 0F8E  
                          __end_of___wmul 0CAA                           ?_monitoring_ISR 0070  
                       __size_of_TMR1_ISR 0017                         __size_of_TMR3_ISR 0017  
                       __size_of_TMR5_ISR 0017                                ?_TMR2_Stop 0070  
                  ?_OSCILLATOR_Initialize 0070                             menuLCD_ISR@tt 003F  
                     start_initialization 0042      __end_of_TMR5_DefaultInterruptHandler 0800  
   __size_of_TMR5_DefaultInterruptHandler 0001              _TMR5_DefaultInterruptHandler 07FF  
         __size_of_PIN_MANAGER_Initialize 003D                            _TMR2_StopTimer 0B14  
                        WriteI2C@data_out 00AB                                  ??_LCDcmd 0078  
                                ??_LCDstr 0079                             ??_menuLCD_ISR 0035  
                __size_of_TMR1_Initialize 001F                          ??_PMD_Initialize 00AA  
                              ?_Clock_ISR 0070                                  ??___wmul 0074  
                             __pdataBANK0 0061                               __pdataBANK1 00BA  
                       _editingClockAlarm 0054                         __size_of_WriteI2C 005A  
                   __size_ofi1_LCDsend2x4 00B3                  _ADCC_GetSingleConversion 0BD4  
                  __end_of_TMR2_StopTimer 0B18                                  ?_LCDchar 0070  
                                ?_LCDinit 0070                                  ?_LCDsend 0070  
                               ___latbits 0002                             __pcstackBANK0 0020  
                           __pcstackBANK1 00AA                        _PWM6_LoadDutyValue 0BFA  
                __size_of_TMR2_Initialize 000E                              _isdigit$2812 0070  
           ?_TMR5_DefaultInterruptHandler 0070      __size_of_differenceBetweenTimePeriod 006E  
                                LCDchar@c 0078                         __size_of_editTemp 0038  
                                LCDsend@c 00AD                       ?_PWM6_LoadDutyValue 0070  
                             sprintf@flag 0030                 __size_of_i2c1_driver_open 000C  
                             sprintf@prec 002D                                  ?_ReadI2C 0070  
                               __pnvBANK0 006D                                 __pnvBANK1 00A0  
                               _editClock 0666                          ___lwdiv@dividend 0072  
                  _PIN_MANAGER_Initialize 0DEB                 __size_ofi1_TMR2_StopTimer 0004  
                           ??i1_TMR2_Stop 0070                  __size_of_TMR3_Initialize 001F  
                     __end_of_menuLCD_ISR 0235          __end_of_TMR1_SetInterruptHandler 0B1E  
         ADCC_GetSingleConversion@channel 0073                              i1_LCDsend2x4 05B3  
                               _dimingLed 0056                                  ?___lwdiv 0070  
                                ?___lwmod 0078               _i2c1_driver_busCollisionISR 005A  
                    ??_PWM6_LoadDutyValue 0072              ??_INTERRUPT_InterruptManager 007E  
                             ??_TMR2_Stop 00AA                                  ?_isdigit 0070  
                         ?_TMR2_StopTimer 0070                  __size_of_PWM6_Initialize 000D  
                        ___lwdiv@quotient 0075                                  ?_sprintf 0020  
                                _T2CLKCON 0290                            __size_of_tsttc 010D  
                 i1_PWM_Output_D4_Disable 0B00                            ___wmul@product 0074  
                                _LATAbits 0016                                 clear_ram0 0B2A  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR2_StartTimer 0004                             i1LCDsend2x4@c 0075  
                              ?_editClock 0070                                 _tempAlarm 006A  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 003C  
                                _PIR3bits 070F                                  _PIR4bits 0710  
              ??_TMR3_SetInterruptHandler 00AC                  __size_of_TMR5_Initialize 001F  
                             ??_Clock_ISR 0070                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR1_ISR 0C10  
                                _TMR3_ISR 0C27                                  _TMR5_ISR 0C3E  
                                _SSP1STAT 018F                         ??_TMR1_Initialize 00AC  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                       __end_ofi1_TMR2_Stop 0B06  
                              _ADCON3bits 0096                         ___wmul@multiplier 0070  
                      i1WriteI2C@data_out 0071              __end_of_PWM_Output_D4_Enable 0AFD  
       __size_of_TMR5_SetInterruptHandler 0006                          __size_of_LCDchar 0008  
               ?_TMR5_SetInterruptHandler 00AA                          __size_of_LCDinit 0076  
                        __size_of_LCDsend 0053                         ??_TMR2_Initialize 00AA  
                             _menuLCD_ISR 006D            ??_TMR5_DefaultInterruptHandler 0070  
                        __size_of_ReadI2C 001A                                _ADSTATbits 0097  
                __size_of_TMR3_WriteTimer 0011                          ??_monitoring_ISR 0074  
                 ??_OSCILLATOR_Initialize 00AA                          __size_of___lwdiv 003C  
                        __size_of___lwmod 0034                                  _WriteI2C 0EC6  
                       ??_TMR3_Initialize 00AC                  _TMR1_SetInterruptHandler 0B18  
                        i1LCDsend2x4@mode 0072                     _TMR1_InterruptHandler 00A6  
                              sprintf@val 002E                                  _clkAlarm 0061  
                __size_of_ADCC_Initialize 0017                          __size_of_isdigit 0012  
                                _editTemp 0D3B                           ___lwdiv@divisor 0070  
                         ___lwdiv@counter 0077                                  __ptext10 0B1E  
                                __ptext11 0B81                                  __ptext20 0772  
                                __ptext12 0CAA                                  __ptext21 04DF  
                                __ptext13 0B18                                _T1GCONbits 020F  
                                __ptext30 0BD4                                  __ptext22 0E73  
                                __ptext14 0B74                                  __ptext31 0BB1  
                                __ptext23 0EC6                                  __ptext15 0B4B  
                                __ptext40 0C8B                                  __ptext32 0C27  
                                __ptext16 0DEB                                  __ptext41 0D07  
                                __ptext33 0003                                  __ptext25 0C3E  
                                __ptext17 0B53                                  __ptext50 0B3C  
                                __ptext42 0D73                                  __ptext34 006D  
                                __ptext26 07FF                                  __ptext18 07E8  
                                __ptext51 05B3                                  __ptext43 0F20  
                                __ptext35 0B10                                  __ptext27 0DAF  
                                __ptext19 0B06                                  __ptext52 0E28  
                                __ptext44 0B0C                                  __ptext36 0B03  
                                __ptext28 03D2                                  __ptext53 0BA0  
                                __ptext45 0AFD                                  __ptext37 0B00  
                                __ptext29 0C55                                  __ptext54 0C10  
                                __ptext46 0AFA                                  __ptext38 0235  
                                __ptext55 0B8F                                  __ptext47 0BFA  
                                __ptext39 0BC2                                  __ptext56 0F8E  
                                __ptext48 0BE6                                  __ptext57 0002  
                                __ptext49 0B43                              _SSP1CON1bits 0190  
                            _SSP1CON2bits 0191                 ??i1_PWM_Output_D4_Disable 0070  
                        __size_of_sprintf 019D                                _T3GCONbits 0215  
                 TMR3_WriteTimer@timerVal 0070                          _i2c1_driver_open 0B5C  
                       ??_PWM6_Initialize 00AA                             __size_of_main 007F  
                              _T5GCONbits 021B                                  _lumAlarm 0068  
                                _lumLevel 005F                     _PWM_Output_D4_Disable 0B06  
                             ??_editClock 00AA                          _editingTempAlarm 005E  
                        i1_TMR2_StopTimer 0B10                  __size_of_TMR5_WriteTimer 0011  
                              tsttc@value 0073                               i1_TMR2_Stop 0B03  
              ??_ADCC_GetSingleConversion 0073                                  int$flags 007E  
                       ??_TMR2_StartTimer 0070        __end_of_INTERRUPT_InterruptManager 0040  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                         menuLCD_ISR@F12791 00B4  
    __end_of_TMR3_DefaultInterruptHandler 0004     __size_of_TMR3_DefaultInterruptHandler 0001  
            _TMR3_DefaultInterruptHandler 0003                         ??_TMR5_Initialize 00AC  
                              _INTCONbits 000B                                  isdigit@c 0071  
                              _LCDsend2x4 04DF                                  intlevel1 0000  
                               sprintf@ap 002C                                 sprintf@sp 0034  
                        ___lwmod@dividend 007A                   ?_PIN_MANAGER_Initialize 0070  
                         _editingLumAlarm 005D                      _PWM_Output_D4_Enable 0AFA  
     __end_of_differenceBetweenTimePeriod 0F8E               _differenceBetweenTimePeriod 0F20  
                        ??_TMR2_StopTimer 00AA                         ??_TMR3_WriteTimer 0072  
                           __pstringtext1 100F                             __pstringtext2 1000  
                           __pstringtext3 1019                             __pstringtext4 1020  
                           __pstringtext5 0000             ??_differenceBetweenTimePeriod 0020  
                                sprintf@c 0033                                  sprintf@f 0020  
           ?_TMR3_DefaultInterruptHandler 0070                                _SSP1DATPPS 0EC6  
                              _SSP1CLKPPS 0EC5                           ___lwmod@divisor 0078  
                         ___lwmod@counter 007D               PWM6_LoadDutyValue@dutyValue 0070  
                              _TMR2_Start 0AFD            __end_of_PIN_MANAGER_Initialize 0E28  
                       ??_ADCC_Initialize 00AA                             _togglingAlarm 005C  
                  ?_PWM_Output_D4_Disable 0070                     ?_PWM_Output_D4_Enable 0070  
                         _TMR1_Initialize 0CAA  
