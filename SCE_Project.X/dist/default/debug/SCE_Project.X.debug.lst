

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Oct 31 12:50:08 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text45,local,class=CODE,merge=1,delta=2,group=3
    69                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	text53,local,class=CODE,merge=1,delta=2
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	text55,local,class=CODE,merge=1,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	psect	text57,local,class=CODE,merge=1,delta=2
    81                           	psect	text58,local,class=CODE,merge=1,delta=2
    82                           	psect	text59,local,class=CODE,merge=1,delta=2
    83                           	psect	text60,local,class=CODE,merge=1,delta=2
    84                           	psect	text61,local,class=CODE,merge=1,delta=2
    85                           	psect	text62,local,class=CODE,merge=1,delta=2
    86                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    87                           	dabs	1,0x7E,2
    88  0000                     
    89                           ; Version 2.30
    90                           ; Generated 15/09/2020 GMT
    91                           ; 
    92                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    93                           ; All rights reserved.
    94                           ; 
    95                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    96                           ; 
    97                           ; Redistribution and use in source and binary forms, with or without modification, are
    98                           ; permitted provided that the following conditions are met:
    99                           ; 
   100                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   101                           ;        conditions and the following disclaimer.
   102                           ; 
   103                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   104                           ;        of conditions and the following disclaimer in the documentation and/or other
   105                           ;        materials provided with the distribution. Publication is not required when
   106                           ;        this file is used in an embedded application.
   107                           ; 
   108                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   109                           ;        software without specific prior written permission.
   110                           ; 
   111                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   112                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   113                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   114                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   115                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   116                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   117                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   118                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   119                           ; 
   120                           ; 
   121                           ; Code-generator required, PIC16F18875 Definitions
   122                           ; 
   123                           ; SFR Addresses
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0016                     	;# 
   147  0017                     	;# 
   148  0018                     	;# 
   149  0019                     	;# 
   150  001A                     	;# 
   151  001C                     	;# 
   152  001C                     	;# 
   153  001D                     	;# 
   154  001D                     	;# 
   155  001E                     	;# 
   156  001F                     	;# 
   157  008C                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  008E                     	;# 
   162  008F                     	;# 
   163  0090                     	;# 
   164  0090                     	;# 
   165  0091                     	;# 
   166  0093                     	;# 
   167  0094                     	;# 
   168  0095                     	;# 
   169  0096                     	;# 
   170  0097                     	;# 
   171  0098                     	;# 
   172  0099                     	;# 
   173  009A                     	;# 
   174  009B                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  0110                     	;# 
   184  0110                     	;# 
   185  0111                     	;# 
   186  0112                     	;# 
   187  0112                     	;# 
   188  0113                     	;# 
   189  0114                     	;# 
   190  0114                     	;# 
   191  0115                     	;# 
   192  0116                     	;# 
   193  0116                     	;# 
   194  0117                     	;# 
   195  0119                     	;# 
   196  0119                     	;# 
   197  0119                     	;# 
   198  011A                     	;# 
   199  011A                     	;# 
   200  011A                     	;# 
   201  011B                     	;# 
   202  011B                     	;# 
   203  011B                     	;# 
   204  011B                     	;# 
   205  011B                     	;# 
   206  011C                     	;# 
   207  011C                     	;# 
   208  011C                     	;# 
   209  011D                     	;# 
   210  011D                     	;# 
   211  011D                     	;# 
   212  011E                     	;# 
   213  011E                     	;# 
   214  011E                     	;# 
   215  011F                     	;# 
   216  011F                     	;# 
   217  011F                     	;# 
   218  011F                     	;# 
   219  011F                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  018E                     	;# 
   223  018F                     	;# 
   224  0190                     	;# 
   225  0191                     	;# 
   226  0192                     	;# 
   227  0196                     	;# 
   228  0197                     	;# 
   229  0198                     	;# 
   230  0199                     	;# 
   231  019A                     	;# 
   232  019B                     	;# 
   233  019C                     	;# 
   234  020C                     	;# 
   235  020C                     	;# 
   236  020D                     	;# 
   237  020E                     	;# 
   238  020F                     	;# 
   239  020F                     	;# 
   240  0210                     	;# 
   241  0210                     	;# 
   242  0211                     	;# 
   243  0211                     	;# 
   244  0212                     	;# 
   245  0212                     	;# 
   246  0213                     	;# 
   247  0214                     	;# 
   248  0215                     	;# 
   249  0215                     	;# 
   250  0216                     	;# 
   251  0216                     	;# 
   252  0217                     	;# 
   253  0217                     	;# 
   254  0218                     	;# 
   255  0218                     	;# 
   256  0219                     	;# 
   257  021A                     	;# 
   258  021B                     	;# 
   259  021B                     	;# 
   260  021C                     	;# 
   261  021C                     	;# 
   262  021D                     	;# 
   263  021D                     	;# 
   264  021E                     	;# 
   265  021F                     	;# 
   266  028C                     	;# 
   267  028C                     	;# 
   268  028D                     	;# 
   269  028D                     	;# 
   270  028E                     	;# 
   271  028F                     	;# 
   272  0290                     	;# 
   273  0290                     	;# 
   274  0291                     	;# 
   275  0292                     	;# 
   276  0292                     	;# 
   277  0293                     	;# 
   278  0293                     	;# 
   279  0294                     	;# 
   280  0295                     	;# 
   281  0296                     	;# 
   282  0296                     	;# 
   283  0297                     	;# 
   284  0298                     	;# 
   285  0298                     	;# 
   286  0299                     	;# 
   287  0299                     	;# 
   288  029A                     	;# 
   289  029B                     	;# 
   290  029C                     	;# 
   291  029C                     	;# 
   292  029D                     	;# 
   293  030C                     	;# 
   294  030C                     	;# 
   295  030D                     	;# 
   296  030E                     	;# 
   297  030F                     	;# 
   298  0310                     	;# 
   299  0310                     	;# 
   300  0311                     	;# 
   301  0312                     	;# 
   302  0313                     	;# 
   303  0314                     	;# 
   304  0314                     	;# 
   305  0315                     	;# 
   306  0316                     	;# 
   307  0317                     	;# 
   308  0318                     	;# 
   309  0318                     	;# 
   310  0319                     	;# 
   311  031A                     	;# 
   312  031B                     	;# 
   313  031C                     	;# 
   314  031C                     	;# 
   315  031D                     	;# 
   316  031E                     	;# 
   317  031F                     	;# 
   318  038C                     	;# 
   319  038C                     	;# 
   320  038D                     	;# 
   321  038E                     	;# 
   322  0390                     	;# 
   323  0390                     	;# 
   324  0391                     	;# 
   325  0392                     	;# 
   326  040C                     	;# 
   327  040D                     	;# 
   328  040E                     	;# 
   329  040F                     	;# 
   330  0410                     	;# 
   331  0411                     	;# 
   332  0416                     	;# 
   333  0416                     	;# 
   334  0417                     	;# 
   335  0418                     	;# 
   336  0418                     	;# 
   337  0419                     	;# 
   338  041A                     	;# 
   339  041A                     	;# 
   340  041B                     	;# 
   341  041C                     	;# 
   342  041C                     	;# 
   343  041D                     	;# 
   344  041E                     	;# 
   345  041F                     	;# 
   346  048C                     	;# 
   347  048C                     	;# 
   348  048D                     	;# 
   349  048E                     	;# 
   350  048F                     	;# 
   351  048F                     	;# 
   352  0490                     	;# 
   353  0491                     	;# 
   354  0492                     	;# 
   355  0492                     	;# 
   356  0493                     	;# 
   357  0494                     	;# 
   358  0495                     	;# 
   359  0495                     	;# 
   360  0496                     	;# 
   361  0497                     	;# 
   362  0498                     	;# 
   363  0499                     	;# 
   364  049A                     	;# 
   365  049B                     	;# 
   366  049C                     	;# 
   367  049D                     	;# 
   368  050C                     	;# 
   369  050C                     	;# 
   370  050D                     	;# 
   371  050E                     	;# 
   372  050F                     	;# 
   373  050F                     	;# 
   374  0510                     	;# 
   375  0511                     	;# 
   376  0512                     	;# 
   377  0512                     	;# 
   378  0513                     	;# 
   379  0514                     	;# 
   380  0515                     	;# 
   381  0515                     	;# 
   382  0516                     	;# 
   383  0517                     	;# 
   384  0518                     	;# 
   385  0519                     	;# 
   386  051A                     	;# 
   387  051B                     	;# 
   388  051C                     	;# 
   389  051D                     	;# 
   390  058C                     	;# 
   391  058C                     	;# 
   392  058D                     	;# 
   393  058E                     	;# 
   394  058F                     	;# 
   395  058F                     	;# 
   396  0590                     	;# 
   397  0591                     	;# 
   398  0592                     	;# 
   399  0593                     	;# 
   400  060C                     	;# 
   401  060D                     	;# 
   402  060E                     	;# 
   403  060F                     	;# 
   404  0610                     	;# 
   405  0611                     	;# 
   406  0612                     	;# 
   407  0613                     	;# 
   408  0614                     	;# 
   409  0616                     	;# 
   410  0617                     	;# 
   411  0618                     	;# 
   412  0619                     	;# 
   413  061A                     	;# 
   414  061B                     	;# 
   415  061C                     	;# 
   416  061D                     	;# 
   417  061E                     	;# 
   418  068C                     	;# 
   419  068D                     	;# 
   420  068E                     	;# 
   421  068F                     	;# 
   422  0690                     	;# 
   423  0691                     	;# 
   424  0692                     	;# 
   425  0693                     	;# 
   426  0694                     	;# 
   427  070C                     	;# 
   428  070D                     	;# 
   429  070E                     	;# 
   430  070F                     	;# 
   431  0710                     	;# 
   432  0711                     	;# 
   433  0712                     	;# 
   434  0713                     	;# 
   435  0714                     	;# 
   436  0716                     	;# 
   437  0717                     	;# 
   438  0718                     	;# 
   439  0719                     	;# 
   440  071A                     	;# 
   441  071B                     	;# 
   442  071C                     	;# 
   443  071D                     	;# 
   444  071E                     	;# 
   445  0796                     	;# 
   446  0797                     	;# 
   447  0798                     	;# 
   448  0799                     	;# 
   449  079A                     	;# 
   450  079B                     	;# 
   451  080C                     	;# 
   452  080D                     	;# 
   453  080E                     	;# 
   454  080F                     	;# 
   455  0810                     	;# 
   456  0811                     	;# 
   457  0812                     	;# 
   458  0813                     	;# 
   459  0814                     	;# 
   460  081A                     	;# 
   461  081B                     	;# 
   462  081C                     	;# 
   463  081D                     	;# 
   464  081E                     	;# 
   465  081F                     	;# 
   466  088C                     	;# 
   467  088D                     	;# 
   468  088E                     	;# 
   469  088F                     	;# 
   470  0890                     	;# 
   471  0891                     	;# 
   472  0892                     	;# 
   473  0893                     	;# 
   474  0895                     	;# 
   475  0896                     	;# 
   476  0897                     	;# 
   477  0898                     	;# 
   478  0899                     	;# 
   479  089A                     	;# 
   480  089B                     	;# 
   481  090C                     	;# 
   482  090E                     	;# 
   483  090F                     	;# 
   484  091F                     	;# 
   485  091F                     	;# 
   486  098F                     	;# 
   487  098F                     	;# 
   488  0990                     	;# 
   489  0991                     	;# 
   490  0992                     	;# 
   491  0993                     	;# 
   492  0994                     	;# 
   493  0995                     	;# 
   494  0996                     	;# 
   495  0997                     	;# 
   496  0E0F                     	;# 
   497  0E10                     	;# 
   498  0E11                     	;# 
   499  0E12                     	;# 
   500  0E13                     	;# 
   501  0E14                     	;# 
   502  0E15                     	;# 
   503  0E16                     	;# 
   504  0E17                     	;# 
   505  0E18                     	;# 
   506  0E19                     	;# 
   507  0E1A                     	;# 
   508  0E1B                     	;# 
   509  0E1C                     	;# 
   510  0E1D                     	;# 
   511  0E1E                     	;# 
   512  0E1F                     	;# 
   513  0E20                     	;# 
   514  0E21                     	;# 
   515  0E22                     	;# 
   516  0E23                     	;# 
   517  0E24                     	;# 
   518  0E25                     	;# 
   519  0E26                     	;# 
   520  0E27                     	;# 
   521  0E28                     	;# 
   522  0E29                     	;# 
   523  0E2A                     	;# 
   524  0E2B                     	;# 
   525  0E2C                     	;# 
   526  0E2D                     	;# 
   527  0E2E                     	;# 
   528  0E2F                     	;# 
   529  0E30                     	;# 
   530  0E31                     	;# 
   531  0E32                     	;# 
   532  0E33                     	;# 
   533  0E34                     	;# 
   534  0E35                     	;# 
   535  0E36                     	;# 
   536  0E37                     	;# 
   537  0E8F                     	;# 
   538  0E90                     	;# 
   539  0E91                     	;# 
   540  0E92                     	;# 
   541  0E93                     	;# 
   542  0E94                     	;# 
   543  0E95                     	;# 
   544  0E96                     	;# 
   545  0E97                     	;# 
   546  0E9C                     	;# 
   547  0E9D                     	;# 
   548  0E9E                     	;# 
   549  0EA1                     	;# 
   550  0EA2                     	;# 
   551  0EA3                     	;# 
   552  0EA4                     	;# 
   553  0EA5                     	;# 
   554  0EA9                     	;# 
   555  0EAA                     	;# 
   556  0EAB                     	;# 
   557  0EAC                     	;# 
   558  0EB1                     	;# 
   559  0EB2                     	;# 
   560  0EB3                     	;# 
   561  0EB8                     	;# 
   562  0EB9                     	;# 
   563  0EBA                     	;# 
   564  0EBB                     	;# 
   565  0EBC                     	;# 
   566  0EBD                     	;# 
   567  0EBE                     	;# 
   568  0EC3                     	;# 
   569  0EC5                     	;# 
   570  0EC6                     	;# 
   571  0EC7                     	;# 
   572  0EC8                     	;# 
   573  0EC9                     	;# 
   574  0ECA                     	;# 
   575  0ECB                     	;# 
   576  0ECC                     	;# 
   577  0F10                     	;# 
   578  0F11                     	;# 
   579  0F12                     	;# 
   580  0F13                     	;# 
   581  0F14                     	;# 
   582  0F15                     	;# 
   583  0F16                     	;# 
   584  0F17                     	;# 
   585  0F18                     	;# 
   586  0F19                     	;# 
   587  0F1A                     	;# 
   588  0F1B                     	;# 
   589  0F1C                     	;# 
   590  0F1D                     	;# 
   591  0F1E                     	;# 
   592  0F1F                     	;# 
   593  0F20                     	;# 
   594  0F21                     	;# 
   595  0F22                     	;# 
   596  0F23                     	;# 
   597  0F24                     	;# 
   598  0F25                     	;# 
   599  0F26                     	;# 
   600  0F27                     	;# 
   601  0F28                     	;# 
   602  0F29                     	;# 
   603  0F2A                     	;# 
   604  0F2B                     	;# 
   605  0F2C                     	;# 
   606  0F2D                     	;# 
   607  0F2E                     	;# 
   608  0F2F                     	;# 
   609  0F30                     	;# 
   610  0F31                     	;# 
   611  0F32                     	;# 
   612  0F38                     	;# 
   613  0F39                     	;# 
   614  0F3A                     	;# 
   615  0F3B                     	;# 
   616  0F3C                     	;# 
   617  0F3D                     	;# 
   618  0F3E                     	;# 
   619  0F3F                     	;# 
   620  0F40                     	;# 
   621  0F41                     	;# 
   622  0F43                     	;# 
   623  0F44                     	;# 
   624  0F45                     	;# 
   625  0F46                     	;# 
   626  0F47                     	;# 
   627  0F48                     	;# 
   628  0F49                     	;# 
   629  0F4A                     	;# 
   630  0F4B                     	;# 
   631  0F4C                     	;# 
   632  0F4E                     	;# 
   633  0F4F                     	;# 
   634  0F50                     	;# 
   635  0F51                     	;# 
   636  0F52                     	;# 
   637  0F53                     	;# 
   638  0F54                     	;# 
   639  0F55                     	;# 
   640  0F56                     	;# 
   641  0F57                     	;# 
   642  0F59                     	;# 
   643  0F5A                     	;# 
   644  0F5B                     	;# 
   645  0F5C                     	;# 
   646  0F5D                     	;# 
   647  0F61                     	;# 
   648  0F62                     	;# 
   649  0F64                     	;# 
   650  0F65                     	;# 
   651  0F66                     	;# 
   652  0F67                     	;# 
   653  0F68                     	;# 
   654  0F69                     	;# 
   655  0F6A                     	;# 
   656  0F6B                     	;# 
   657  0F6C                     	;# 
   658  0F6D                     	;# 
   659  0FE4                     	;# 
   660  0FE5                     	;# 
   661  0FE6                     	;# 
   662  0FE7                     	;# 
   663  0FE8                     	;# 
   664  0FE9                     	;# 
   665  0FEA                     	;# 
   666  0FEB                     	;# 
   667  0FED                     	;# 
   668  0FEE                     	;# 
   669  0FEF                     	;# 
   670  0000                     	;# 
   671  0001                     	;# 
   672  0002                     	;# 
   673  0003                     	;# 
   674  0004                     	;# 
   675  0005                     	;# 
   676  0006                     	;# 
   677  0007                     	;# 
   678  0008                     	;# 
   679  0009                     	;# 
   680  000A                     	;# 
   681  000B                     	;# 
   682  000C                     	;# 
   683  000D                     	;# 
   684  000E                     	;# 
   685  000F                     	;# 
   686  0010                     	;# 
   687  0011                     	;# 
   688  0012                     	;# 
   689  0013                     	;# 
   690  0014                     	;# 
   691  0015                     	;# 
   692  0016                     	;# 
   693  0017                     	;# 
   694  0018                     	;# 
   695  0019                     	;# 
   696  001A                     	;# 
   697  001C                     	;# 
   698  001C                     	;# 
   699  001D                     	;# 
   700  001D                     	;# 
   701  001E                     	;# 
   702  001F                     	;# 
   703  008C                     	;# 
   704  008C                     	;# 
   705  008D                     	;# 
   706  008E                     	;# 
   707  008E                     	;# 
   708  008F                     	;# 
   709  0090                     	;# 
   710  0090                     	;# 
   711  0091                     	;# 
   712  0093                     	;# 
   713  0094                     	;# 
   714  0095                     	;# 
   715  0096                     	;# 
   716  0097                     	;# 
   717  0098                     	;# 
   718  0099                     	;# 
   719  009A                     	;# 
   720  009B                     	;# 
   721  009C                     	;# 
   722  009D                     	;# 
   723  009E                     	;# 
   724  010C                     	;# 
   725  010D                     	;# 
   726  010E                     	;# 
   727  010E                     	;# 
   728  010F                     	;# 
   729  0110                     	;# 
   730  0110                     	;# 
   731  0111                     	;# 
   732  0112                     	;# 
   733  0112                     	;# 
   734  0113                     	;# 
   735  0114                     	;# 
   736  0114                     	;# 
   737  0115                     	;# 
   738  0116                     	;# 
   739  0116                     	;# 
   740  0117                     	;# 
   741  0119                     	;# 
   742  0119                     	;# 
   743  0119                     	;# 
   744  011A                     	;# 
   745  011A                     	;# 
   746  011A                     	;# 
   747  011B                     	;# 
   748  011B                     	;# 
   749  011B                     	;# 
   750  011B                     	;# 
   751  011B                     	;# 
   752  011C                     	;# 
   753  011C                     	;# 
   754  011C                     	;# 
   755  011D                     	;# 
   756  011D                     	;# 
   757  011D                     	;# 
   758  011E                     	;# 
   759  011E                     	;# 
   760  011E                     	;# 
   761  011F                     	;# 
   762  011F                     	;# 
   763  011F                     	;# 
   764  011F                     	;# 
   765  011F                     	;# 
   766  018C                     	;# 
   767  018D                     	;# 
   768  018E                     	;# 
   769  018F                     	;# 
   770  0190                     	;# 
   771  0191                     	;# 
   772  0192                     	;# 
   773  0196                     	;# 
   774  0197                     	;# 
   775  0198                     	;# 
   776  0199                     	;# 
   777  019A                     	;# 
   778  019B                     	;# 
   779  019C                     	;# 
   780  020C                     	;# 
   781  020C                     	;# 
   782  020D                     	;# 
   783  020E                     	;# 
   784  020F                     	;# 
   785  020F                     	;# 
   786  0210                     	;# 
   787  0210                     	;# 
   788  0211                     	;# 
   789  0211                     	;# 
   790  0212                     	;# 
   791  0212                     	;# 
   792  0213                     	;# 
   793  0214                     	;# 
   794  0215                     	;# 
   795  0215                     	;# 
   796  0216                     	;# 
   797  0216                     	;# 
   798  0217                     	;# 
   799  0217                     	;# 
   800  0218                     	;# 
   801  0218                     	;# 
   802  0219                     	;# 
   803  021A                     	;# 
   804  021B                     	;# 
   805  021B                     	;# 
   806  021C                     	;# 
   807  021C                     	;# 
   808  021D                     	;# 
   809  021D                     	;# 
   810  021E                     	;# 
   811  021F                     	;# 
   812  028C                     	;# 
   813  028C                     	;# 
   814  028D                     	;# 
   815  028D                     	;# 
   816  028E                     	;# 
   817  028F                     	;# 
   818  0290                     	;# 
   819  0290                     	;# 
   820  0291                     	;# 
   821  0292                     	;# 
   822  0292                     	;# 
   823  0293                     	;# 
   824  0293                     	;# 
   825  0294                     	;# 
   826  0295                     	;# 
   827  0296                     	;# 
   828  0296                     	;# 
   829  0297                     	;# 
   830  0298                     	;# 
   831  0298                     	;# 
   832  0299                     	;# 
   833  0299                     	;# 
   834  029A                     	;# 
   835  029B                     	;# 
   836  029C                     	;# 
   837  029C                     	;# 
   838  029D                     	;# 
   839  030C                     	;# 
   840  030C                     	;# 
   841  030D                     	;# 
   842  030E                     	;# 
   843  030F                     	;# 
   844  0310                     	;# 
   845  0310                     	;# 
   846  0311                     	;# 
   847  0312                     	;# 
   848  0313                     	;# 
   849  0314                     	;# 
   850  0314                     	;# 
   851  0315                     	;# 
   852  0316                     	;# 
   853  0317                     	;# 
   854  0318                     	;# 
   855  0318                     	;# 
   856  0319                     	;# 
   857  031A                     	;# 
   858  031B                     	;# 
   859  031C                     	;# 
   860  031C                     	;# 
   861  031D                     	;# 
   862  031E                     	;# 
   863  031F                     	;# 
   864  038C                     	;# 
   865  038C                     	;# 
   866  038D                     	;# 
   867  038E                     	;# 
   868  0390                     	;# 
   869  0390                     	;# 
   870  0391                     	;# 
   871  0392                     	;# 
   872  040C                     	;# 
   873  040D                     	;# 
   874  040E                     	;# 
   875  040F                     	;# 
   876  0410                     	;# 
   877  0411                     	;# 
   878  0416                     	;# 
   879  0416                     	;# 
   880  0417                     	;# 
   881  0418                     	;# 
   882  0418                     	;# 
   883  0419                     	;# 
   884  041A                     	;# 
   885  041A                     	;# 
   886  041B                     	;# 
   887  041C                     	;# 
   888  041C                     	;# 
   889  041D                     	;# 
   890  041E                     	;# 
   891  041F                     	;# 
   892  048C                     	;# 
   893  048C                     	;# 
   894  048D                     	;# 
   895  048E                     	;# 
   896  048F                     	;# 
   897  048F                     	;# 
   898  0490                     	;# 
   899  0491                     	;# 
   900  0492                     	;# 
   901  0492                     	;# 
   902  0493                     	;# 
   903  0494                     	;# 
   904  0495                     	;# 
   905  0495                     	;# 
   906  0496                     	;# 
   907  0497                     	;# 
   908  0498                     	;# 
   909  0499                     	;# 
   910  049A                     	;# 
   911  049B                     	;# 
   912  049C                     	;# 
   913  049D                     	;# 
   914  050C                     	;# 
   915  050C                     	;# 
   916  050D                     	;# 
   917  050E                     	;# 
   918  050F                     	;# 
   919  050F                     	;# 
   920  0510                     	;# 
   921  0511                     	;# 
   922  0512                     	;# 
   923  0512                     	;# 
   924  0513                     	;# 
   925  0514                     	;# 
   926  0515                     	;# 
   927  0515                     	;# 
   928  0516                     	;# 
   929  0517                     	;# 
   930  0518                     	;# 
   931  0519                     	;# 
   932  051A                     	;# 
   933  051B                     	;# 
   934  051C                     	;# 
   935  051D                     	;# 
   936  058C                     	;# 
   937  058C                     	;# 
   938  058D                     	;# 
   939  058E                     	;# 
   940  058F                     	;# 
   941  058F                     	;# 
   942  0590                     	;# 
   943  0591                     	;# 
   944  0592                     	;# 
   945  0593                     	;# 
   946  060C                     	;# 
   947  060D                     	;# 
   948  060E                     	;# 
   949  060F                     	;# 
   950  0610                     	;# 
   951  0611                     	;# 
   952  0612                     	;# 
   953  0613                     	;# 
   954  0614                     	;# 
   955  0616                     	;# 
   956  0617                     	;# 
   957  0618                     	;# 
   958  0619                     	;# 
   959  061A                     	;# 
   960  061B                     	;# 
   961  061C                     	;# 
   962  061D                     	;# 
   963  061E                     	;# 
   964  068C                     	;# 
   965  068D                     	;# 
   966  068E                     	;# 
   967  068F                     	;# 
   968  0690                     	;# 
   969  0691                     	;# 
   970  0692                     	;# 
   971  0693                     	;# 
   972  0694                     	;# 
   973  070C                     	;# 
   974  070D                     	;# 
   975  070E                     	;# 
   976  070F                     	;# 
   977  0710                     	;# 
   978  0711                     	;# 
   979  0712                     	;# 
   980  0713                     	;# 
   981  0714                     	;# 
   982  0716                     	;# 
   983  0717                     	;# 
   984  0718                     	;# 
   985  0719                     	;# 
   986  071A                     	;# 
   987  071B                     	;# 
   988  071C                     	;# 
   989  071D                     	;# 
   990  071E                     	;# 
   991  0796                     	;# 
   992  0797                     	;# 
   993  0798                     	;# 
   994  0799                     	;# 
   995  079A                     	;# 
   996  079B                     	;# 
   997  080C                     	;# 
   998  080D                     	;# 
   999  080E                     	;# 
  1000  080F                     	;# 
  1001  0810                     	;# 
  1002  0811                     	;# 
  1003  0812                     	;# 
  1004  0813                     	;# 
  1005  0814                     	;# 
  1006  081A                     	;# 
  1007  081B                     	;# 
  1008  081C                     	;# 
  1009  081D                     	;# 
  1010  081E                     	;# 
  1011  081F                     	;# 
  1012  088C                     	;# 
  1013  088D                     	;# 
  1014  088E                     	;# 
  1015  088F                     	;# 
  1016  0890                     	;# 
  1017  0891                     	;# 
  1018  0892                     	;# 
  1019  0893                     	;# 
  1020  0895                     	;# 
  1021  0896                     	;# 
  1022  0897                     	;# 
  1023  0898                     	;# 
  1024  0899                     	;# 
  1025  089A                     	;# 
  1026  089B                     	;# 
  1027  090C                     	;# 
  1028  090E                     	;# 
  1029  090F                     	;# 
  1030  091F                     	;# 
  1031  091F                     	;# 
  1032  098F                     	;# 
  1033  098F                     	;# 
  1034  0990                     	;# 
  1035  0991                     	;# 
  1036  0992                     	;# 
  1037  0993                     	;# 
  1038  0994                     	;# 
  1039  0995                     	;# 
  1040  0996                     	;# 
  1041  0997                     	;# 
  1042  0E0F                     	;# 
  1043  0E10                     	;# 
  1044  0E11                     	;# 
  1045  0E12                     	;# 
  1046  0E13                     	;# 
  1047  0E14                     	;# 
  1048  0E15                     	;# 
  1049  0E16                     	;# 
  1050  0E17                     	;# 
  1051  0E18                     	;# 
  1052  0E19                     	;# 
  1053  0E1A                     	;# 
  1054  0E1B                     	;# 
  1055  0E1C                     	;# 
  1056  0E1D                     	;# 
  1057  0E1E                     	;# 
  1058  0E1F                     	;# 
  1059  0E20                     	;# 
  1060  0E21                     	;# 
  1061  0E22                     	;# 
  1062  0E23                     	;# 
  1063  0E24                     	;# 
  1064  0E25                     	;# 
  1065  0E26                     	;# 
  1066  0E27                     	;# 
  1067  0E28                     	;# 
  1068  0E29                     	;# 
  1069  0E2A                     	;# 
  1070  0E2B                     	;# 
  1071  0E2C                     	;# 
  1072  0E2D                     	;# 
  1073  0E2E                     	;# 
  1074  0E2F                     	;# 
  1075  0E30                     	;# 
  1076  0E31                     	;# 
  1077  0E32                     	;# 
  1078  0E33                     	;# 
  1079  0E34                     	;# 
  1080  0E35                     	;# 
  1081  0E36                     	;# 
  1082  0E37                     	;# 
  1083  0E8F                     	;# 
  1084  0E90                     	;# 
  1085  0E91                     	;# 
  1086  0E92                     	;# 
  1087  0E93                     	;# 
  1088  0E94                     	;# 
  1089  0E95                     	;# 
  1090  0E96                     	;# 
  1091  0E97                     	;# 
  1092  0E9C                     	;# 
  1093  0E9D                     	;# 
  1094  0E9E                     	;# 
  1095  0EA1                     	;# 
  1096  0EA2                     	;# 
  1097  0EA3                     	;# 
  1098  0EA4                     	;# 
  1099  0EA5                     	;# 
  1100  0EA9                     	;# 
  1101  0EAA                     	;# 
  1102  0EAB                     	;# 
  1103  0EAC                     	;# 
  1104  0EB1                     	;# 
  1105  0EB2                     	;# 
  1106  0EB3                     	;# 
  1107  0EB8                     	;# 
  1108  0EB9                     	;# 
  1109  0EBA                     	;# 
  1110  0EBB                     	;# 
  1111  0EBC                     	;# 
  1112  0EBD                     	;# 
  1113  0EBE                     	;# 
  1114  0EC3                     	;# 
  1115  0EC5                     	;# 
  1116  0EC6                     	;# 
  1117  0EC7                     	;# 
  1118  0EC8                     	;# 
  1119  0EC9                     	;# 
  1120  0ECA                     	;# 
  1121  0ECB                     	;# 
  1122  0ECC                     	;# 
  1123  0F10                     	;# 
  1124  0F11                     	;# 
  1125  0F12                     	;# 
  1126  0F13                     	;# 
  1127  0F14                     	;# 
  1128  0F15                     	;# 
  1129  0F16                     	;# 
  1130  0F17                     	;# 
  1131  0F18                     	;# 
  1132  0F19                     	;# 
  1133  0F1A                     	;# 
  1134  0F1B                     	;# 
  1135  0F1C                     	;# 
  1136  0F1D                     	;# 
  1137  0F1E                     	;# 
  1138  0F1F                     	;# 
  1139  0F20                     	;# 
  1140  0F21                     	;# 
  1141  0F22                     	;# 
  1142  0F23                     	;# 
  1143  0F24                     	;# 
  1144  0F25                     	;# 
  1145  0F26                     	;# 
  1146  0F27                     	;# 
  1147  0F28                     	;# 
  1148  0F29                     	;# 
  1149  0F2A                     	;# 
  1150  0F2B                     	;# 
  1151  0F2C                     	;# 
  1152  0F2D                     	;# 
  1153  0F2E                     	;# 
  1154  0F2F                     	;# 
  1155  0F30                     	;# 
  1156  0F31                     	;# 
  1157  0F32                     	;# 
  1158  0F38                     	;# 
  1159  0F39                     	;# 
  1160  0F3A                     	;# 
  1161  0F3B                     	;# 
  1162  0F3C                     	;# 
  1163  0F3D                     	;# 
  1164  0F3E                     	;# 
  1165  0F3F                     	;# 
  1166  0F40                     	;# 
  1167  0F41                     	;# 
  1168  0F43                     	;# 
  1169  0F44                     	;# 
  1170  0F45                     	;# 
  1171  0F46                     	;# 
  1172  0F47                     	;# 
  1173  0F48                     	;# 
  1174  0F49                     	;# 
  1175  0F4A                     	;# 
  1176  0F4B                     	;# 
  1177  0F4C                     	;# 
  1178  0F4E                     	;# 
  1179  0F4F                     	;# 
  1180  0F50                     	;# 
  1181  0F51                     	;# 
  1182  0F52                     	;# 
  1183  0F53                     	;# 
  1184  0F54                     	;# 
  1185  0F55                     	;# 
  1186  0F56                     	;# 
  1187  0F57                     	;# 
  1188  0F59                     	;# 
  1189  0F5A                     	;# 
  1190  0F5B                     	;# 
  1191  0F5C                     	;# 
  1192  0F5D                     	;# 
  1193  0F61                     	;# 
  1194  0F62                     	;# 
  1195  0F64                     	;# 
  1196  0F65                     	;# 
  1197  0F66                     	;# 
  1198  0F67                     	;# 
  1199  0F68                     	;# 
  1200  0F69                     	;# 
  1201  0F6A                     	;# 
  1202  0F6B                     	;# 
  1203  0F6C                     	;# 
  1204  0F6D                     	;# 
  1205  0FE4                     	;# 
  1206  0FE5                     	;# 
  1207  0FE6                     	;# 
  1208  0FE7                     	;# 
  1209  0FE8                     	;# 
  1210  0FE9                     	;# 
  1211  0FEA                     	;# 
  1212  0FEB                     	;# 
  1213  0FED                     	;# 
  1214  0FEE                     	;# 
  1215  0FEF                     	;# 
  1216  0000                     	;# 
  1217  0001                     	;# 
  1218  0002                     	;# 
  1219  0003                     	;# 
  1220  0004                     	;# 
  1221  0005                     	;# 
  1222  0006                     	;# 
  1223  0007                     	;# 
  1224  0008                     	;# 
  1225  0009                     	;# 
  1226  000A                     	;# 
  1227  000B                     	;# 
  1228  000C                     	;# 
  1229  000D                     	;# 
  1230  000E                     	;# 
  1231  000F                     	;# 
  1232  0010                     	;# 
  1233  0011                     	;# 
  1234  0012                     	;# 
  1235  0013                     	;# 
  1236  0014                     	;# 
  1237  0015                     	;# 
  1238  0016                     	;# 
  1239  0017                     	;# 
  1240  0018                     	;# 
  1241  0019                     	;# 
  1242  001A                     	;# 
  1243  001C                     	;# 
  1244  001C                     	;# 
  1245  001D                     	;# 
  1246  001D                     	;# 
  1247  001E                     	;# 
  1248  001F                     	;# 
  1249  008C                     	;# 
  1250  008C                     	;# 
  1251  008D                     	;# 
  1252  008E                     	;# 
  1253  008E                     	;# 
  1254  008F                     	;# 
  1255  0090                     	;# 
  1256  0090                     	;# 
  1257  0091                     	;# 
  1258  0093                     	;# 
  1259  0094                     	;# 
  1260  0095                     	;# 
  1261  0096                     	;# 
  1262  0097                     	;# 
  1263  0098                     	;# 
  1264  0099                     	;# 
  1265  009A                     	;# 
  1266  009B                     	;# 
  1267  009C                     	;# 
  1268  009D                     	;# 
  1269  009E                     	;# 
  1270  010C                     	;# 
  1271  010D                     	;# 
  1272  010E                     	;# 
  1273  010E                     	;# 
  1274  010F                     	;# 
  1275  0110                     	;# 
  1276  0110                     	;# 
  1277  0111                     	;# 
  1278  0112                     	;# 
  1279  0112                     	;# 
  1280  0113                     	;# 
  1281  0114                     	;# 
  1282  0114                     	;# 
  1283  0115                     	;# 
  1284  0116                     	;# 
  1285  0116                     	;# 
  1286  0117                     	;# 
  1287  0119                     	;# 
  1288  0119                     	;# 
  1289  0119                     	;# 
  1290  011A                     	;# 
  1291  011A                     	;# 
  1292  011A                     	;# 
  1293  011B                     	;# 
  1294  011B                     	;# 
  1295  011B                     	;# 
  1296  011B                     	;# 
  1297  011B                     	;# 
  1298  011C                     	;# 
  1299  011C                     	;# 
  1300  011C                     	;# 
  1301  011D                     	;# 
  1302  011D                     	;# 
  1303  011D                     	;# 
  1304  011E                     	;# 
  1305  011E                     	;# 
  1306  011E                     	;# 
  1307  011F                     	;# 
  1308  011F                     	;# 
  1309  011F                     	;# 
  1310  011F                     	;# 
  1311  011F                     	;# 
  1312  018C                     	;# 
  1313  018D                     	;# 
  1314  018E                     	;# 
  1315  018F                     	;# 
  1316  0190                     	;# 
  1317  0191                     	;# 
  1318  0192                     	;# 
  1319  0196                     	;# 
  1320  0197                     	;# 
  1321  0198                     	;# 
  1322  0199                     	;# 
  1323  019A                     	;# 
  1324  019B                     	;# 
  1325  019C                     	;# 
  1326  020C                     	;# 
  1327  020C                     	;# 
  1328  020D                     	;# 
  1329  020E                     	;# 
  1330  020F                     	;# 
  1331  020F                     	;# 
  1332  0210                     	;# 
  1333  0210                     	;# 
  1334  0211                     	;# 
  1335  0211                     	;# 
  1336  0212                     	;# 
  1337  0212                     	;# 
  1338  0213                     	;# 
  1339  0214                     	;# 
  1340  0215                     	;# 
  1341  0215                     	;# 
  1342  0216                     	;# 
  1343  0216                     	;# 
  1344  0217                     	;# 
  1345  0217                     	;# 
  1346  0218                     	;# 
  1347  0218                     	;# 
  1348  0219                     	;# 
  1349  021A                     	;# 
  1350  021B                     	;# 
  1351  021B                     	;# 
  1352  021C                     	;# 
  1353  021C                     	;# 
  1354  021D                     	;# 
  1355  021D                     	;# 
  1356  021E                     	;# 
  1357  021F                     	;# 
  1358  028C                     	;# 
  1359  028C                     	;# 
  1360  028D                     	;# 
  1361  028D                     	;# 
  1362  028E                     	;# 
  1363  028F                     	;# 
  1364  0290                     	;# 
  1365  0290                     	;# 
  1366  0291                     	;# 
  1367  0292                     	;# 
  1368  0292                     	;# 
  1369  0293                     	;# 
  1370  0293                     	;# 
  1371  0294                     	;# 
  1372  0295                     	;# 
  1373  0296                     	;# 
  1374  0296                     	;# 
  1375  0297                     	;# 
  1376  0298                     	;# 
  1377  0298                     	;# 
  1378  0299                     	;# 
  1379  0299                     	;# 
  1380  029A                     	;# 
  1381  029B                     	;# 
  1382  029C                     	;# 
  1383  029C                     	;# 
  1384  029D                     	;# 
  1385  030C                     	;# 
  1386  030C                     	;# 
  1387  030D                     	;# 
  1388  030E                     	;# 
  1389  030F                     	;# 
  1390  0310                     	;# 
  1391  0310                     	;# 
  1392  0311                     	;# 
  1393  0312                     	;# 
  1394  0313                     	;# 
  1395  0314                     	;# 
  1396  0314                     	;# 
  1397  0315                     	;# 
  1398  0316                     	;# 
  1399  0317                     	;# 
  1400  0318                     	;# 
  1401  0318                     	;# 
  1402  0319                     	;# 
  1403  031A                     	;# 
  1404  031B                     	;# 
  1405  031C                     	;# 
  1406  031C                     	;# 
  1407  031D                     	;# 
  1408  031E                     	;# 
  1409  031F                     	;# 
  1410  038C                     	;# 
  1411  038C                     	;# 
  1412  038D                     	;# 
  1413  038E                     	;# 
  1414  0390                     	;# 
  1415  0390                     	;# 
  1416  0391                     	;# 
  1417  0392                     	;# 
  1418  040C                     	;# 
  1419  040D                     	;# 
  1420  040E                     	;# 
  1421  040F                     	;# 
  1422  0410                     	;# 
  1423  0411                     	;# 
  1424  0416                     	;# 
  1425  0416                     	;# 
  1426  0417                     	;# 
  1427  0418                     	;# 
  1428  0418                     	;# 
  1429  0419                     	;# 
  1430  041A                     	;# 
  1431  041A                     	;# 
  1432  041B                     	;# 
  1433  041C                     	;# 
  1434  041C                     	;# 
  1435  041D                     	;# 
  1436  041E                     	;# 
  1437  041F                     	;# 
  1438  048C                     	;# 
  1439  048C                     	;# 
  1440  048D                     	;# 
  1441  048E                     	;# 
  1442  048F                     	;# 
  1443  048F                     	;# 
  1444  0490                     	;# 
  1445  0491                     	;# 
  1446  0492                     	;# 
  1447  0492                     	;# 
  1448  0493                     	;# 
  1449  0494                     	;# 
  1450  0495                     	;# 
  1451  0495                     	;# 
  1452  0496                     	;# 
  1453  0497                     	;# 
  1454  0498                     	;# 
  1455  0499                     	;# 
  1456  049A                     	;# 
  1457  049B                     	;# 
  1458  049C                     	;# 
  1459  049D                     	;# 
  1460  050C                     	;# 
  1461  050C                     	;# 
  1462  050D                     	;# 
  1463  050E                     	;# 
  1464  050F                     	;# 
  1465  050F                     	;# 
  1466  0510                     	;# 
  1467  0511                     	;# 
  1468  0512                     	;# 
  1469  0512                     	;# 
  1470  0513                     	;# 
  1471  0514                     	;# 
  1472  0515                     	;# 
  1473  0515                     	;# 
  1474  0516                     	;# 
  1475  0517                     	;# 
  1476  0518                     	;# 
  1477  0519                     	;# 
  1478  051A                     	;# 
  1479  051B                     	;# 
  1480  051C                     	;# 
  1481  051D                     	;# 
  1482  058C                     	;# 
  1483  058C                     	;# 
  1484  058D                     	;# 
  1485  058E                     	;# 
  1486  058F                     	;# 
  1487  058F                     	;# 
  1488  0590                     	;# 
  1489  0591                     	;# 
  1490  0592                     	;# 
  1491  0593                     	;# 
  1492  060C                     	;# 
  1493  060D                     	;# 
  1494  060E                     	;# 
  1495  060F                     	;# 
  1496  0610                     	;# 
  1497  0611                     	;# 
  1498  0612                     	;# 
  1499  0613                     	;# 
  1500  0614                     	;# 
  1501  0616                     	;# 
  1502  0617                     	;# 
  1503  0618                     	;# 
  1504  0619                     	;# 
  1505  061A                     	;# 
  1506  061B                     	;# 
  1507  061C                     	;# 
  1508  061D                     	;# 
  1509  061E                     	;# 
  1510  068C                     	;# 
  1511  068D                     	;# 
  1512  068E                     	;# 
  1513  068F                     	;# 
  1514  0690                     	;# 
  1515  0691                     	;# 
  1516  0692                     	;# 
  1517  0693                     	;# 
  1518  0694                     	;# 
  1519  070C                     	;# 
  1520  070D                     	;# 
  1521  070E                     	;# 
  1522  070F                     	;# 
  1523  0710                     	;# 
  1524  0711                     	;# 
  1525  0712                     	;# 
  1526  0713                     	;# 
  1527  0714                     	;# 
  1528  0716                     	;# 
  1529  0717                     	;# 
  1530  0718                     	;# 
  1531  0719                     	;# 
  1532  071A                     	;# 
  1533  071B                     	;# 
  1534  071C                     	;# 
  1535  071D                     	;# 
  1536  071E                     	;# 
  1537  0796                     	;# 
  1538  0797                     	;# 
  1539  0798                     	;# 
  1540  0799                     	;# 
  1541  079A                     	;# 
  1542  079B                     	;# 
  1543  080C                     	;# 
  1544  080D                     	;# 
  1545  080E                     	;# 
  1546  080F                     	;# 
  1547  0810                     	;# 
  1548  0811                     	;# 
  1549  0812                     	;# 
  1550  0813                     	;# 
  1551  0814                     	;# 
  1552  081A                     	;# 
  1553  081B                     	;# 
  1554  081C                     	;# 
  1555  081D                     	;# 
  1556  081E                     	;# 
  1557  081F                     	;# 
  1558  088C                     	;# 
  1559  088D                     	;# 
  1560  088E                     	;# 
  1561  088F                     	;# 
  1562  0890                     	;# 
  1563  0891                     	;# 
  1564  0892                     	;# 
  1565  0893                     	;# 
  1566  0895                     	;# 
  1567  0896                     	;# 
  1568  0897                     	;# 
  1569  0898                     	;# 
  1570  0899                     	;# 
  1571  089A                     	;# 
  1572  089B                     	;# 
  1573  090C                     	;# 
  1574  090E                     	;# 
  1575  090F                     	;# 
  1576  091F                     	;# 
  1577  091F                     	;# 
  1578  098F                     	;# 
  1579  098F                     	;# 
  1580  0990                     	;# 
  1581  0991                     	;# 
  1582  0992                     	;# 
  1583  0993                     	;# 
  1584  0994                     	;# 
  1585  0995                     	;# 
  1586  0996                     	;# 
  1587  0997                     	;# 
  1588  0E0F                     	;# 
  1589  0E10                     	;# 
  1590  0E11                     	;# 
  1591  0E12                     	;# 
  1592  0E13                     	;# 
  1593  0E14                     	;# 
  1594  0E15                     	;# 
  1595  0E16                     	;# 
  1596  0E17                     	;# 
  1597  0E18                     	;# 
  1598  0E19                     	;# 
  1599  0E1A                     	;# 
  1600  0E1B                     	;# 
  1601  0E1C                     	;# 
  1602  0E1D                     	;# 
  1603  0E1E                     	;# 
  1604  0E1F                     	;# 
  1605  0E20                     	;# 
  1606  0E21                     	;# 
  1607  0E22                     	;# 
  1608  0E23                     	;# 
  1609  0E24                     	;# 
  1610  0E25                     	;# 
  1611  0E26                     	;# 
  1612  0E27                     	;# 
  1613  0E28                     	;# 
  1614  0E29                     	;# 
  1615  0E2A                     	;# 
  1616  0E2B                     	;# 
  1617  0E2C                     	;# 
  1618  0E2D                     	;# 
  1619  0E2E                     	;# 
  1620  0E2F                     	;# 
  1621  0E30                     	;# 
  1622  0E31                     	;# 
  1623  0E32                     	;# 
  1624  0E33                     	;# 
  1625  0E34                     	;# 
  1626  0E35                     	;# 
  1627  0E36                     	;# 
  1628  0E37                     	;# 
  1629  0E8F                     	;# 
  1630  0E90                     	;# 
  1631  0E91                     	;# 
  1632  0E92                     	;# 
  1633  0E93                     	;# 
  1634  0E94                     	;# 
  1635  0E95                     	;# 
  1636  0E96                     	;# 
  1637  0E97                     	;# 
  1638  0E9C                     	;# 
  1639  0E9D                     	;# 
  1640  0E9E                     	;# 
  1641  0EA1                     	;# 
  1642  0EA2                     	;# 
  1643  0EA3                     	;# 
  1644  0EA4                     	;# 
  1645  0EA5                     	;# 
  1646  0EA9                     	;# 
  1647  0EAA                     	;# 
  1648  0EAB                     	;# 
  1649  0EAC                     	;# 
  1650  0EB1                     	;# 
  1651  0EB2                     	;# 
  1652  0EB3                     	;# 
  1653  0EB8                     	;# 
  1654  0EB9                     	;# 
  1655  0EBA                     	;# 
  1656  0EBB                     	;# 
  1657  0EBC                     	;# 
  1658  0EBD                     	;# 
  1659  0EBE                     	;# 
  1660  0EC3                     	;# 
  1661  0EC5                     	;# 
  1662  0EC6                     	;# 
  1663  0EC7                     	;# 
  1664  0EC8                     	;# 
  1665  0EC9                     	;# 
  1666  0ECA                     	;# 
  1667  0ECB                     	;# 
  1668  0ECC                     	;# 
  1669  0F10                     	;# 
  1670  0F11                     	;# 
  1671  0F12                     	;# 
  1672  0F13                     	;# 
  1673  0F14                     	;# 
  1674  0F15                     	;# 
  1675  0F16                     	;# 
  1676  0F17                     	;# 
  1677  0F18                     	;# 
  1678  0F19                     	;# 
  1679  0F1A                     	;# 
  1680  0F1B                     	;# 
  1681  0F1C                     	;# 
  1682  0F1D                     	;# 
  1683  0F1E                     	;# 
  1684  0F1F                     	;# 
  1685  0F20                     	;# 
  1686  0F21                     	;# 
  1687  0F22                     	;# 
  1688  0F23                     	;# 
  1689  0F24                     	;# 
  1690  0F25                     	;# 
  1691  0F26                     	;# 
  1692  0F27                     	;# 
  1693  0F28                     	;# 
  1694  0F29                     	;# 
  1695  0F2A                     	;# 
  1696  0F2B                     	;# 
  1697  0F2C                     	;# 
  1698  0F2D                     	;# 
  1699  0F2E                     	;# 
  1700  0F2F                     	;# 
  1701  0F30                     	;# 
  1702  0F31                     	;# 
  1703  0F32                     	;# 
  1704  0F38                     	;# 
  1705  0F39                     	;# 
  1706  0F3A                     	;# 
  1707  0F3B                     	;# 
  1708  0F3C                     	;# 
  1709  0F3D                     	;# 
  1710  0F3E                     	;# 
  1711  0F3F                     	;# 
  1712  0F40                     	;# 
  1713  0F41                     	;# 
  1714  0F43                     	;# 
  1715  0F44                     	;# 
  1716  0F45                     	;# 
  1717  0F46                     	;# 
  1718  0F47                     	;# 
  1719  0F48                     	;# 
  1720  0F49                     	;# 
  1721  0F4A                     	;# 
  1722  0F4B                     	;# 
  1723  0F4C                     	;# 
  1724  0F4E                     	;# 
  1725  0F4F                     	;# 
  1726  0F50                     	;# 
  1727  0F51                     	;# 
  1728  0F52                     	;# 
  1729  0F53                     	;# 
  1730  0F54                     	;# 
  1731  0F55                     	;# 
  1732  0F56                     	;# 
  1733  0F57                     	;# 
  1734  0F59                     	;# 
  1735  0F5A                     	;# 
  1736  0F5B                     	;# 
  1737  0F5C                     	;# 
  1738  0F5D                     	;# 
  1739  0F61                     	;# 
  1740  0F62                     	;# 
  1741  0F64                     	;# 
  1742  0F65                     	;# 
  1743  0F66                     	;# 
  1744  0F67                     	;# 
  1745  0F68                     	;# 
  1746  0F69                     	;# 
  1747  0F6A                     	;# 
  1748  0F6B                     	;# 
  1749  0F6C                     	;# 
  1750  0F6D                     	;# 
  1751  0FE4                     	;# 
  1752  0FE5                     	;# 
  1753  0FE6                     	;# 
  1754  0FE7                     	;# 
  1755  0FE8                     	;# 
  1756  0FE9                     	;# 
  1757  0FEA                     	;# 
  1758  0FEB                     	;# 
  1759  0FED                     	;# 
  1760  0FEE                     	;# 
  1761  0FEF                     	;# 
  1762  0000                     	;# 
  1763  0001                     	;# 
  1764  0002                     	;# 
  1765  0003                     	;# 
  1766  0004                     	;# 
  1767  0005                     	;# 
  1768  0006                     	;# 
  1769  0007                     	;# 
  1770  0008                     	;# 
  1771  0009                     	;# 
  1772  000A                     	;# 
  1773  000B                     	;# 
  1774  000C                     	;# 
  1775  000D                     	;# 
  1776  000E                     	;# 
  1777  000F                     	;# 
  1778  0010                     	;# 
  1779  0011                     	;# 
  1780  0012                     	;# 
  1781  0013                     	;# 
  1782  0014                     	;# 
  1783  0015                     	;# 
  1784  0016                     	;# 
  1785  0017                     	;# 
  1786  0018                     	;# 
  1787  0019                     	;# 
  1788  001A                     	;# 
  1789  001C                     	;# 
  1790  001C                     	;# 
  1791  001D                     	;# 
  1792  001D                     	;# 
  1793  001E                     	;# 
  1794  001F                     	;# 
  1795  008C                     	;# 
  1796  008C                     	;# 
  1797  008D                     	;# 
  1798  008E                     	;# 
  1799  008E                     	;# 
  1800  008F                     	;# 
  1801  0090                     	;# 
  1802  0090                     	;# 
  1803  0091                     	;# 
  1804  0093                     	;# 
  1805  0094                     	;# 
  1806  0095                     	;# 
  1807  0096                     	;# 
  1808  0097                     	;# 
  1809  0098                     	;# 
  1810  0099                     	;# 
  1811  009A                     	;# 
  1812  009B                     	;# 
  1813  009C                     	;# 
  1814  009D                     	;# 
  1815  009E                     	;# 
  1816  010C                     	;# 
  1817  010D                     	;# 
  1818  010E                     	;# 
  1819  010E                     	;# 
  1820  010F                     	;# 
  1821  0110                     	;# 
  1822  0110                     	;# 
  1823  0111                     	;# 
  1824  0112                     	;# 
  1825  0112                     	;# 
  1826  0113                     	;# 
  1827  0114                     	;# 
  1828  0114                     	;# 
  1829  0115                     	;# 
  1830  0116                     	;# 
  1831  0116                     	;# 
  1832  0117                     	;# 
  1833  0119                     	;# 
  1834  0119                     	;# 
  1835  0119                     	;# 
  1836  011A                     	;# 
  1837  011A                     	;# 
  1838  011A                     	;# 
  1839  011B                     	;# 
  1840  011B                     	;# 
  1841  011B                     	;# 
  1842  011B                     	;# 
  1843  011B                     	;# 
  1844  011C                     	;# 
  1845  011C                     	;# 
  1846  011C                     	;# 
  1847  011D                     	;# 
  1848  011D                     	;# 
  1849  011D                     	;# 
  1850  011E                     	;# 
  1851  011E                     	;# 
  1852  011E                     	;# 
  1853  011F                     	;# 
  1854  011F                     	;# 
  1855  011F                     	;# 
  1856  011F                     	;# 
  1857  011F                     	;# 
  1858  018C                     	;# 
  1859  018D                     	;# 
  1860  018E                     	;# 
  1861  018F                     	;# 
  1862  0190                     	;# 
  1863  0191                     	;# 
  1864  0192                     	;# 
  1865  0196                     	;# 
  1866  0197                     	;# 
  1867  0198                     	;# 
  1868  0199                     	;# 
  1869  019A                     	;# 
  1870  019B                     	;# 
  1871  019C                     	;# 
  1872  020C                     	;# 
  1873  020C                     	;# 
  1874  020D                     	;# 
  1875  020E                     	;# 
  1876  020F                     	;# 
  1877  020F                     	;# 
  1878  0210                     	;# 
  1879  0210                     	;# 
  1880  0211                     	;# 
  1881  0211                     	;# 
  1882  0212                     	;# 
  1883  0212                     	;# 
  1884  0213                     	;# 
  1885  0214                     	;# 
  1886  0215                     	;# 
  1887  0215                     	;# 
  1888  0216                     	;# 
  1889  0216                     	;# 
  1890  0217                     	;# 
  1891  0217                     	;# 
  1892  0218                     	;# 
  1893  0218                     	;# 
  1894  0219                     	;# 
  1895  021A                     	;# 
  1896  021B                     	;# 
  1897  021B                     	;# 
  1898  021C                     	;# 
  1899  021C                     	;# 
  1900  021D                     	;# 
  1901  021D                     	;# 
  1902  021E                     	;# 
  1903  021F                     	;# 
  1904  028C                     	;# 
  1905  028C                     	;# 
  1906  028D                     	;# 
  1907  028D                     	;# 
  1908  028E                     	;# 
  1909  028F                     	;# 
  1910  0290                     	;# 
  1911  0290                     	;# 
  1912  0291                     	;# 
  1913  0292                     	;# 
  1914  0292                     	;# 
  1915  0293                     	;# 
  1916  0293                     	;# 
  1917  0294                     	;# 
  1918  0295                     	;# 
  1919  0296                     	;# 
  1920  0296                     	;# 
  1921  0297                     	;# 
  1922  0298                     	;# 
  1923  0298                     	;# 
  1924  0299                     	;# 
  1925  0299                     	;# 
  1926  029A                     	;# 
  1927  029B                     	;# 
  1928  029C                     	;# 
  1929  029C                     	;# 
  1930  029D                     	;# 
  1931  030C                     	;# 
  1932  030C                     	;# 
  1933  030D                     	;# 
  1934  030E                     	;# 
  1935  030F                     	;# 
  1936  0310                     	;# 
  1937  0310                     	;# 
  1938  0311                     	;# 
  1939  0312                     	;# 
  1940  0313                     	;# 
  1941  0314                     	;# 
  1942  0314                     	;# 
  1943  0315                     	;# 
  1944  0316                     	;# 
  1945  0317                     	;# 
  1946  0318                     	;# 
  1947  0318                     	;# 
  1948  0319                     	;# 
  1949  031A                     	;# 
  1950  031B                     	;# 
  1951  031C                     	;# 
  1952  031C                     	;# 
  1953  031D                     	;# 
  1954  031E                     	;# 
  1955  031F                     	;# 
  1956  038C                     	;# 
  1957  038C                     	;# 
  1958  038D                     	;# 
  1959  038E                     	;# 
  1960  0390                     	;# 
  1961  0390                     	;# 
  1962  0391                     	;# 
  1963  0392                     	;# 
  1964  040C                     	;# 
  1965  040D                     	;# 
  1966  040E                     	;# 
  1967  040F                     	;# 
  1968  0410                     	;# 
  1969  0411                     	;# 
  1970  0416                     	;# 
  1971  0416                     	;# 
  1972  0417                     	;# 
  1973  0418                     	;# 
  1974  0418                     	;# 
  1975  0419                     	;# 
  1976  041A                     	;# 
  1977  041A                     	;# 
  1978  041B                     	;# 
  1979  041C                     	;# 
  1980  041C                     	;# 
  1981  041D                     	;# 
  1982  041E                     	;# 
  1983  041F                     	;# 
  1984  048C                     	;# 
  1985  048C                     	;# 
  1986  048D                     	;# 
  1987  048E                     	;# 
  1988  048F                     	;# 
  1989  048F                     	;# 
  1990  0490                     	;# 
  1991  0491                     	;# 
  1992  0492                     	;# 
  1993  0492                     	;# 
  1994  0493                     	;# 
  1995  0494                     	;# 
  1996  0495                     	;# 
  1997  0495                     	;# 
  1998  0496                     	;# 
  1999  0497                     	;# 
  2000  0498                     	;# 
  2001  0499                     	;# 
  2002  049A                     	;# 
  2003  049B                     	;# 
  2004  049C                     	;# 
  2005  049D                     	;# 
  2006  050C                     	;# 
  2007  050C                     	;# 
  2008  050D                     	;# 
  2009  050E                     	;# 
  2010  050F                     	;# 
  2011  050F                     	;# 
  2012  0510                     	;# 
  2013  0511                     	;# 
  2014  0512                     	;# 
  2015  0512                     	;# 
  2016  0513                     	;# 
  2017  0514                     	;# 
  2018  0515                     	;# 
  2019  0515                     	;# 
  2020  0516                     	;# 
  2021  0517                     	;# 
  2022  0518                     	;# 
  2023  0519                     	;# 
  2024  051A                     	;# 
  2025  051B                     	;# 
  2026  051C                     	;# 
  2027  051D                     	;# 
  2028  058C                     	;# 
  2029  058C                     	;# 
  2030  058D                     	;# 
  2031  058E                     	;# 
  2032  058F                     	;# 
  2033  058F                     	;# 
  2034  0590                     	;# 
  2035  0591                     	;# 
  2036  0592                     	;# 
  2037  0593                     	;# 
  2038  060C                     	;# 
  2039  060D                     	;# 
  2040  060E                     	;# 
  2041  060F                     	;# 
  2042  0610                     	;# 
  2043  0611                     	;# 
  2044  0612                     	;# 
  2045  0613                     	;# 
  2046  0614                     	;# 
  2047  0616                     	;# 
  2048  0617                     	;# 
  2049  0618                     	;# 
  2050  0619                     	;# 
  2051  061A                     	;# 
  2052  061B                     	;# 
  2053  061C                     	;# 
  2054  061D                     	;# 
  2055  061E                     	;# 
  2056  068C                     	;# 
  2057  068D                     	;# 
  2058  068E                     	;# 
  2059  068F                     	;# 
  2060  0690                     	;# 
  2061  0691                     	;# 
  2062  0692                     	;# 
  2063  0693                     	;# 
  2064  0694                     	;# 
  2065  070C                     	;# 
  2066  070D                     	;# 
  2067  070E                     	;# 
  2068  070F                     	;# 
  2069  0710                     	;# 
  2070  0711                     	;# 
  2071  0712                     	;# 
  2072  0713                     	;# 
  2073  0714                     	;# 
  2074  0716                     	;# 
  2075  0717                     	;# 
  2076  0718                     	;# 
  2077  0719                     	;# 
  2078  071A                     	;# 
  2079  071B                     	;# 
  2080  071C                     	;# 
  2081  071D                     	;# 
  2082  071E                     	;# 
  2083  0796                     	;# 
  2084  0797                     	;# 
  2085  0798                     	;# 
  2086  0799                     	;# 
  2087  079A                     	;# 
  2088  079B                     	;# 
  2089  080C                     	;# 
  2090  080D                     	;# 
  2091  080E                     	;# 
  2092  080F                     	;# 
  2093  0810                     	;# 
  2094  0811                     	;# 
  2095  0812                     	;# 
  2096  0813                     	;# 
  2097  0814                     	;# 
  2098  081A                     	;# 
  2099  081B                     	;# 
  2100  081C                     	;# 
  2101  081D                     	;# 
  2102  081E                     	;# 
  2103  081F                     	;# 
  2104  088C                     	;# 
  2105  088D                     	;# 
  2106  088E                     	;# 
  2107  088F                     	;# 
  2108  0890                     	;# 
  2109  0891                     	;# 
  2110  0892                     	;# 
  2111  0893                     	;# 
  2112  0895                     	;# 
  2113  0896                     	;# 
  2114  0897                     	;# 
  2115  0898                     	;# 
  2116  0899                     	;# 
  2117  089A                     	;# 
  2118  089B                     	;# 
  2119  090C                     	;# 
  2120  090E                     	;# 
  2121  090F                     	;# 
  2122  091F                     	;# 
  2123  091F                     	;# 
  2124  098F                     	;# 
  2125  098F                     	;# 
  2126  0990                     	;# 
  2127  0991                     	;# 
  2128  0992                     	;# 
  2129  0993                     	;# 
  2130  0994                     	;# 
  2131  0995                     	;# 
  2132  0996                     	;# 
  2133  0997                     	;# 
  2134  0E0F                     	;# 
  2135  0E10                     	;# 
  2136  0E11                     	;# 
  2137  0E12                     	;# 
  2138  0E13                     	;# 
  2139  0E14                     	;# 
  2140  0E15                     	;# 
  2141  0E16                     	;# 
  2142  0E17                     	;# 
  2143  0E18                     	;# 
  2144  0E19                     	;# 
  2145  0E1A                     	;# 
  2146  0E1B                     	;# 
  2147  0E1C                     	;# 
  2148  0E1D                     	;# 
  2149  0E1E                     	;# 
  2150  0E1F                     	;# 
  2151  0E20                     	;# 
  2152  0E21                     	;# 
  2153  0E22                     	;# 
  2154  0E23                     	;# 
  2155  0E24                     	;# 
  2156  0E25                     	;# 
  2157  0E26                     	;# 
  2158  0E27                     	;# 
  2159  0E28                     	;# 
  2160  0E29                     	;# 
  2161  0E2A                     	;# 
  2162  0E2B                     	;# 
  2163  0E2C                     	;# 
  2164  0E2D                     	;# 
  2165  0E2E                     	;# 
  2166  0E2F                     	;# 
  2167  0E30                     	;# 
  2168  0E31                     	;# 
  2169  0E32                     	;# 
  2170  0E33                     	;# 
  2171  0E34                     	;# 
  2172  0E35                     	;# 
  2173  0E36                     	;# 
  2174  0E37                     	;# 
  2175  0E8F                     	;# 
  2176  0E90                     	;# 
  2177  0E91                     	;# 
  2178  0E92                     	;# 
  2179  0E93                     	;# 
  2180  0E94                     	;# 
  2181  0E95                     	;# 
  2182  0E96                     	;# 
  2183  0E97                     	;# 
  2184  0E9C                     	;# 
  2185  0E9D                     	;# 
  2186  0E9E                     	;# 
  2187  0EA1                     	;# 
  2188  0EA2                     	;# 
  2189  0EA3                     	;# 
  2190  0EA4                     	;# 
  2191  0EA5                     	;# 
  2192  0EA9                     	;# 
  2193  0EAA                     	;# 
  2194  0EAB                     	;# 
  2195  0EAC                     	;# 
  2196  0EB1                     	;# 
  2197  0EB2                     	;# 
  2198  0EB3                     	;# 
  2199  0EB8                     	;# 
  2200  0EB9                     	;# 
  2201  0EBA                     	;# 
  2202  0EBB                     	;# 
  2203  0EBC                     	;# 
  2204  0EBD                     	;# 
  2205  0EBE                     	;# 
  2206  0EC3                     	;# 
  2207  0EC5                     	;# 
  2208  0EC6                     	;# 
  2209  0EC7                     	;# 
  2210  0EC8                     	;# 
  2211  0EC9                     	;# 
  2212  0ECA                     	;# 
  2213  0ECB                     	;# 
  2214  0ECC                     	;# 
  2215  0F10                     	;# 
  2216  0F11                     	;# 
  2217  0F12                     	;# 
  2218  0F13                     	;# 
  2219  0F14                     	;# 
  2220  0F15                     	;# 
  2221  0F16                     	;# 
  2222  0F17                     	;# 
  2223  0F18                     	;# 
  2224  0F19                     	;# 
  2225  0F1A                     	;# 
  2226  0F1B                     	;# 
  2227  0F1C                     	;# 
  2228  0F1D                     	;# 
  2229  0F1E                     	;# 
  2230  0F1F                     	;# 
  2231  0F20                     	;# 
  2232  0F21                     	;# 
  2233  0F22                     	;# 
  2234  0F23                     	;# 
  2235  0F24                     	;# 
  2236  0F25                     	;# 
  2237  0F26                     	;# 
  2238  0F27                     	;# 
  2239  0F28                     	;# 
  2240  0F29                     	;# 
  2241  0F2A                     	;# 
  2242  0F2B                     	;# 
  2243  0F2C                     	;# 
  2244  0F2D                     	;# 
  2245  0F2E                     	;# 
  2246  0F2F                     	;# 
  2247  0F30                     	;# 
  2248  0F31                     	;# 
  2249  0F32                     	;# 
  2250  0F38                     	;# 
  2251  0F39                     	;# 
  2252  0F3A                     	;# 
  2253  0F3B                     	;# 
  2254  0F3C                     	;# 
  2255  0F3D                     	;# 
  2256  0F3E                     	;# 
  2257  0F3F                     	;# 
  2258  0F40                     	;# 
  2259  0F41                     	;# 
  2260  0F43                     	;# 
  2261  0F44                     	;# 
  2262  0F45                     	;# 
  2263  0F46                     	;# 
  2264  0F47                     	;# 
  2265  0F48                     	;# 
  2266  0F49                     	;# 
  2267  0F4A                     	;# 
  2268  0F4B                     	;# 
  2269  0F4C                     	;# 
  2270  0F4E                     	;# 
  2271  0F4F                     	;# 
  2272  0F50                     	;# 
  2273  0F51                     	;# 
  2274  0F52                     	;# 
  2275  0F53                     	;# 
  2276  0F54                     	;# 
  2277  0F55                     	;# 
  2278  0F56                     	;# 
  2279  0F57                     	;# 
  2280  0F59                     	;# 
  2281  0F5A                     	;# 
  2282  0F5B                     	;# 
  2283  0F5C                     	;# 
  2284  0F5D                     	;# 
  2285  0F61                     	;# 
  2286  0F62                     	;# 
  2287  0F64                     	;# 
  2288  0F65                     	;# 
  2289  0F66                     	;# 
  2290  0F67                     	;# 
  2291  0F68                     	;# 
  2292  0F69                     	;# 
  2293  0F6A                     	;# 
  2294  0F6B                     	;# 
  2295  0F6C                     	;# 
  2296  0F6D                     	;# 
  2297  0FE4                     	;# 
  2298  0FE5                     	;# 
  2299  0FE6                     	;# 
  2300  0FE7                     	;# 
  2301  0FE8                     	;# 
  2302  0FE9                     	;# 
  2303  0FEA                     	;# 
  2304  0FEB                     	;# 
  2305  0FED                     	;# 
  2306  0FEE                     	;# 
  2307  0FEF                     	;# 
  2308  0000                     	;# 
  2309  0001                     	;# 
  2310  0002                     	;# 
  2311  0003                     	;# 
  2312  0004                     	;# 
  2313  0005                     	;# 
  2314  0006                     	;# 
  2315  0007                     	;# 
  2316  0008                     	;# 
  2317  0009                     	;# 
  2318  000A                     	;# 
  2319  000B                     	;# 
  2320  000C                     	;# 
  2321  000D                     	;# 
  2322  000E                     	;# 
  2323  000F                     	;# 
  2324  0010                     	;# 
  2325  0011                     	;# 
  2326  0012                     	;# 
  2327  0013                     	;# 
  2328  0014                     	;# 
  2329  0015                     	;# 
  2330  0016                     	;# 
  2331  0017                     	;# 
  2332  0018                     	;# 
  2333  0019                     	;# 
  2334  001A                     	;# 
  2335  001C                     	;# 
  2336  001C                     	;# 
  2337  001D                     	;# 
  2338  001D                     	;# 
  2339  001E                     	;# 
  2340  001F                     	;# 
  2341  008C                     	;# 
  2342  008C                     	;# 
  2343  008D                     	;# 
  2344  008E                     	;# 
  2345  008E                     	;# 
  2346  008F                     	;# 
  2347  0090                     	;# 
  2348  0090                     	;# 
  2349  0091                     	;# 
  2350  0093                     	;# 
  2351  0094                     	;# 
  2352  0095                     	;# 
  2353  0096                     	;# 
  2354  0097                     	;# 
  2355  0098                     	;# 
  2356  0099                     	;# 
  2357  009A                     	;# 
  2358  009B                     	;# 
  2359  009C                     	;# 
  2360  009D                     	;# 
  2361  009E                     	;# 
  2362  010C                     	;# 
  2363  010D                     	;# 
  2364  010E                     	;# 
  2365  010E                     	;# 
  2366  010F                     	;# 
  2367  0110                     	;# 
  2368  0110                     	;# 
  2369  0111                     	;# 
  2370  0112                     	;# 
  2371  0112                     	;# 
  2372  0113                     	;# 
  2373  0114                     	;# 
  2374  0114                     	;# 
  2375  0115                     	;# 
  2376  0116                     	;# 
  2377  0116                     	;# 
  2378  0117                     	;# 
  2379  0119                     	;# 
  2380  0119                     	;# 
  2381  0119                     	;# 
  2382  011A                     	;# 
  2383  011A                     	;# 
  2384  011A                     	;# 
  2385  011B                     	;# 
  2386  011B                     	;# 
  2387  011B                     	;# 
  2388  011B                     	;# 
  2389  011B                     	;# 
  2390  011C                     	;# 
  2391  011C                     	;# 
  2392  011C                     	;# 
  2393  011D                     	;# 
  2394  011D                     	;# 
  2395  011D                     	;# 
  2396  011E                     	;# 
  2397  011E                     	;# 
  2398  011E                     	;# 
  2399  011F                     	;# 
  2400  011F                     	;# 
  2401  011F                     	;# 
  2402  011F                     	;# 
  2403  011F                     	;# 
  2404  018C                     	;# 
  2405  018D                     	;# 
  2406  018E                     	;# 
  2407  018F                     	;# 
  2408  0190                     	;# 
  2409  0191                     	;# 
  2410  0192                     	;# 
  2411  0196                     	;# 
  2412  0197                     	;# 
  2413  0198                     	;# 
  2414  0199                     	;# 
  2415  019A                     	;# 
  2416  019B                     	;# 
  2417  019C                     	;# 
  2418  020C                     	;# 
  2419  020C                     	;# 
  2420  020D                     	;# 
  2421  020E                     	;# 
  2422  020F                     	;# 
  2423  020F                     	;# 
  2424  0210                     	;# 
  2425  0210                     	;# 
  2426  0211                     	;# 
  2427  0211                     	;# 
  2428  0212                     	;# 
  2429  0212                     	;# 
  2430  0213                     	;# 
  2431  0214                     	;# 
  2432  0215                     	;# 
  2433  0215                     	;# 
  2434  0216                     	;# 
  2435  0216                     	;# 
  2436  0217                     	;# 
  2437  0217                     	;# 
  2438  0218                     	;# 
  2439  0218                     	;# 
  2440  0219                     	;# 
  2441  021A                     	;# 
  2442  021B                     	;# 
  2443  021B                     	;# 
  2444  021C                     	;# 
  2445  021C                     	;# 
  2446  021D                     	;# 
  2447  021D                     	;# 
  2448  021E                     	;# 
  2449  021F                     	;# 
  2450  028C                     	;# 
  2451  028C                     	;# 
  2452  028D                     	;# 
  2453  028D                     	;# 
  2454  028E                     	;# 
  2455  028F                     	;# 
  2456  0290                     	;# 
  2457  0290                     	;# 
  2458  0291                     	;# 
  2459  0292                     	;# 
  2460  0292                     	;# 
  2461  0293                     	;# 
  2462  0293                     	;# 
  2463  0294                     	;# 
  2464  0295                     	;# 
  2465  0296                     	;# 
  2466  0296                     	;# 
  2467  0297                     	;# 
  2468  0298                     	;# 
  2469  0298                     	;# 
  2470  0299                     	;# 
  2471  0299                     	;# 
  2472  029A                     	;# 
  2473  029B                     	;# 
  2474  029C                     	;# 
  2475  029C                     	;# 
  2476  029D                     	;# 
  2477  030C                     	;# 
  2478  030C                     	;# 
  2479  030D                     	;# 
  2480  030E                     	;# 
  2481  030F                     	;# 
  2482  0310                     	;# 
  2483  0310                     	;# 
  2484  0311                     	;# 
  2485  0312                     	;# 
  2486  0313                     	;# 
  2487  0314                     	;# 
  2488  0314                     	;# 
  2489  0315                     	;# 
  2490  0316                     	;# 
  2491  0317                     	;# 
  2492  0318                     	;# 
  2493  0318                     	;# 
  2494  0319                     	;# 
  2495  031A                     	;# 
  2496  031B                     	;# 
  2497  031C                     	;# 
  2498  031C                     	;# 
  2499  031D                     	;# 
  2500  031E                     	;# 
  2501  031F                     	;# 
  2502  038C                     	;# 
  2503  038C                     	;# 
  2504  038D                     	;# 
  2505  038E                     	;# 
  2506  0390                     	;# 
  2507  0390                     	;# 
  2508  0391                     	;# 
  2509  0392                     	;# 
  2510  040C                     	;# 
  2511  040D                     	;# 
  2512  040E                     	;# 
  2513  040F                     	;# 
  2514  0410                     	;# 
  2515  0411                     	;# 
  2516  0416                     	;# 
  2517  0416                     	;# 
  2518  0417                     	;# 
  2519  0418                     	;# 
  2520  0418                     	;# 
  2521  0419                     	;# 
  2522  041A                     	;# 
  2523  041A                     	;# 
  2524  041B                     	;# 
  2525  041C                     	;# 
  2526  041C                     	;# 
  2527  041D                     	;# 
  2528  041E                     	;# 
  2529  041F                     	;# 
  2530  048C                     	;# 
  2531  048C                     	;# 
  2532  048D                     	;# 
  2533  048E                     	;# 
  2534  048F                     	;# 
  2535  048F                     	;# 
  2536  0490                     	;# 
  2537  0491                     	;# 
  2538  0492                     	;# 
  2539  0492                     	;# 
  2540  0493                     	;# 
  2541  0494                     	;# 
  2542  0495                     	;# 
  2543  0495                     	;# 
  2544  0496                     	;# 
  2545  0497                     	;# 
  2546  0498                     	;# 
  2547  0499                     	;# 
  2548  049A                     	;# 
  2549  049B                     	;# 
  2550  049C                     	;# 
  2551  049D                     	;# 
  2552  050C                     	;# 
  2553  050C                     	;# 
  2554  050D                     	;# 
  2555  050E                     	;# 
  2556  050F                     	;# 
  2557  050F                     	;# 
  2558  0510                     	;# 
  2559  0511                     	;# 
  2560  0512                     	;# 
  2561  0512                     	;# 
  2562  0513                     	;# 
  2563  0514                     	;# 
  2564  0515                     	;# 
  2565  0515                     	;# 
  2566  0516                     	;# 
  2567  0517                     	;# 
  2568  0518                     	;# 
  2569  0519                     	;# 
  2570  051A                     	;# 
  2571  051B                     	;# 
  2572  051C                     	;# 
  2573  051D                     	;# 
  2574  058C                     	;# 
  2575  058C                     	;# 
  2576  058D                     	;# 
  2577  058E                     	;# 
  2578  058F                     	;# 
  2579  058F                     	;# 
  2580  0590                     	;# 
  2581  0591                     	;# 
  2582  0592                     	;# 
  2583  0593                     	;# 
  2584  060C                     	;# 
  2585  060D                     	;# 
  2586  060E                     	;# 
  2587  060F                     	;# 
  2588  0610                     	;# 
  2589  0611                     	;# 
  2590  0612                     	;# 
  2591  0613                     	;# 
  2592  0614                     	;# 
  2593  0616                     	;# 
  2594  0617                     	;# 
  2595  0618                     	;# 
  2596  0619                     	;# 
  2597  061A                     	;# 
  2598  061B                     	;# 
  2599  061C                     	;# 
  2600  061D                     	;# 
  2601  061E                     	;# 
  2602  068C                     	;# 
  2603  068D                     	;# 
  2604  068E                     	;# 
  2605  068F                     	;# 
  2606  0690                     	;# 
  2607  0691                     	;# 
  2608  0692                     	;# 
  2609  0693                     	;# 
  2610  0694                     	;# 
  2611  070C                     	;# 
  2612  070D                     	;# 
  2613  070E                     	;# 
  2614  070F                     	;# 
  2615  0710                     	;# 
  2616  0711                     	;# 
  2617  0712                     	;# 
  2618  0713                     	;# 
  2619  0714                     	;# 
  2620  0716                     	;# 
  2621  0717                     	;# 
  2622  0718                     	;# 
  2623  0719                     	;# 
  2624  071A                     	;# 
  2625  071B                     	;# 
  2626  071C                     	;# 
  2627  071D                     	;# 
  2628  071E                     	;# 
  2629  0796                     	;# 
  2630  0797                     	;# 
  2631  0798                     	;# 
  2632  0799                     	;# 
  2633  079A                     	;# 
  2634  079B                     	;# 
  2635  080C                     	;# 
  2636  080D                     	;# 
  2637  080E                     	;# 
  2638  080F                     	;# 
  2639  0810                     	;# 
  2640  0811                     	;# 
  2641  0812                     	;# 
  2642  0813                     	;# 
  2643  0814                     	;# 
  2644  081A                     	;# 
  2645  081B                     	;# 
  2646  081C                     	;# 
  2647  081D                     	;# 
  2648  081E                     	;# 
  2649  081F                     	;# 
  2650  088C                     	;# 
  2651  088D                     	;# 
  2652  088E                     	;# 
  2653  088F                     	;# 
  2654  0890                     	;# 
  2655  0891                     	;# 
  2656  0892                     	;# 
  2657  0893                     	;# 
  2658  0895                     	;# 
  2659  0896                     	;# 
  2660  0897                     	;# 
  2661  0898                     	;# 
  2662  0899                     	;# 
  2663  089A                     	;# 
  2664  089B                     	;# 
  2665  090C                     	;# 
  2666  090E                     	;# 
  2667  090F                     	;# 
  2668  091F                     	;# 
  2669  091F                     	;# 
  2670  098F                     	;# 
  2671  098F                     	;# 
  2672  0990                     	;# 
  2673  0991                     	;# 
  2674  0992                     	;# 
  2675  0993                     	;# 
  2676  0994                     	;# 
  2677  0995                     	;# 
  2678  0996                     	;# 
  2679  0997                     	;# 
  2680  0E0F                     	;# 
  2681  0E10                     	;# 
  2682  0E11                     	;# 
  2683  0E12                     	;# 
  2684  0E13                     	;# 
  2685  0E14                     	;# 
  2686  0E15                     	;# 
  2687  0E16                     	;# 
  2688  0E17                     	;# 
  2689  0E18                     	;# 
  2690  0E19                     	;# 
  2691  0E1A                     	;# 
  2692  0E1B                     	;# 
  2693  0E1C                     	;# 
  2694  0E1D                     	;# 
  2695  0E1E                     	;# 
  2696  0E1F                     	;# 
  2697  0E20                     	;# 
  2698  0E21                     	;# 
  2699  0E22                     	;# 
  2700  0E23                     	;# 
  2701  0E24                     	;# 
  2702  0E25                     	;# 
  2703  0E26                     	;# 
  2704  0E27                     	;# 
  2705  0E28                     	;# 
  2706  0E29                     	;# 
  2707  0E2A                     	;# 
  2708  0E2B                     	;# 
  2709  0E2C                     	;# 
  2710  0E2D                     	;# 
  2711  0E2E                     	;# 
  2712  0E2F                     	;# 
  2713  0E30                     	;# 
  2714  0E31                     	;# 
  2715  0E32                     	;# 
  2716  0E33                     	;# 
  2717  0E34                     	;# 
  2718  0E35                     	;# 
  2719  0E36                     	;# 
  2720  0E37                     	;# 
  2721  0E8F                     	;# 
  2722  0E90                     	;# 
  2723  0E91                     	;# 
  2724  0E92                     	;# 
  2725  0E93                     	;# 
  2726  0E94                     	;# 
  2727  0E95                     	;# 
  2728  0E96                     	;# 
  2729  0E97                     	;# 
  2730  0E9C                     	;# 
  2731  0E9D                     	;# 
  2732  0E9E                     	;# 
  2733  0EA1                     	;# 
  2734  0EA2                     	;# 
  2735  0EA3                     	;# 
  2736  0EA4                     	;# 
  2737  0EA5                     	;# 
  2738  0EA9                     	;# 
  2739  0EAA                     	;# 
  2740  0EAB                     	;# 
  2741  0EAC                     	;# 
  2742  0EB1                     	;# 
  2743  0EB2                     	;# 
  2744  0EB3                     	;# 
  2745  0EB8                     	;# 
  2746  0EB9                     	;# 
  2747  0EBA                     	;# 
  2748  0EBB                     	;# 
  2749  0EBC                     	;# 
  2750  0EBD                     	;# 
  2751  0EBE                     	;# 
  2752  0EC3                     	;# 
  2753  0EC5                     	;# 
  2754  0EC6                     	;# 
  2755  0EC7                     	;# 
  2756  0EC8                     	;# 
  2757  0EC9                     	;# 
  2758  0ECA                     	;# 
  2759  0ECB                     	;# 
  2760  0ECC                     	;# 
  2761  0F10                     	;# 
  2762  0F11                     	;# 
  2763  0F12                     	;# 
  2764  0F13                     	;# 
  2765  0F14                     	;# 
  2766  0F15                     	;# 
  2767  0F16                     	;# 
  2768  0F17                     	;# 
  2769  0F18                     	;# 
  2770  0F19                     	;# 
  2771  0F1A                     	;# 
  2772  0F1B                     	;# 
  2773  0F1C                     	;# 
  2774  0F1D                     	;# 
  2775  0F1E                     	;# 
  2776  0F1F                     	;# 
  2777  0F20                     	;# 
  2778  0F21                     	;# 
  2779  0F22                     	;# 
  2780  0F23                     	;# 
  2781  0F24                     	;# 
  2782  0F25                     	;# 
  2783  0F26                     	;# 
  2784  0F27                     	;# 
  2785  0F28                     	;# 
  2786  0F29                     	;# 
  2787  0F2A                     	;# 
  2788  0F2B                     	;# 
  2789  0F2C                     	;# 
  2790  0F2D                     	;# 
  2791  0F2E                     	;# 
  2792  0F2F                     	;# 
  2793  0F30                     	;# 
  2794  0F31                     	;# 
  2795  0F32                     	;# 
  2796  0F38                     	;# 
  2797  0F39                     	;# 
  2798  0F3A                     	;# 
  2799  0F3B                     	;# 
  2800  0F3C                     	;# 
  2801  0F3D                     	;# 
  2802  0F3E                     	;# 
  2803  0F3F                     	;# 
  2804  0F40                     	;# 
  2805  0F41                     	;# 
  2806  0F43                     	;# 
  2807  0F44                     	;# 
  2808  0F45                     	;# 
  2809  0F46                     	;# 
  2810  0F47                     	;# 
  2811  0F48                     	;# 
  2812  0F49                     	;# 
  2813  0F4A                     	;# 
  2814  0F4B                     	;# 
  2815  0F4C                     	;# 
  2816  0F4E                     	;# 
  2817  0F4F                     	;# 
  2818  0F50                     	;# 
  2819  0F51                     	;# 
  2820  0F52                     	;# 
  2821  0F53                     	;# 
  2822  0F54                     	;# 
  2823  0F55                     	;# 
  2824  0F56                     	;# 
  2825  0F57                     	;# 
  2826  0F59                     	;# 
  2827  0F5A                     	;# 
  2828  0F5B                     	;# 
  2829  0F5C                     	;# 
  2830  0F5D                     	;# 
  2831  0F61                     	;# 
  2832  0F62                     	;# 
  2833  0F64                     	;# 
  2834  0F65                     	;# 
  2835  0F66                     	;# 
  2836  0F67                     	;# 
  2837  0F68                     	;# 
  2838  0F69                     	;# 
  2839  0F6A                     	;# 
  2840  0F6B                     	;# 
  2841  0F6C                     	;# 
  2842  0F6D                     	;# 
  2843  0FE4                     	;# 
  2844  0FE5                     	;# 
  2845  0FE6                     	;# 
  2846  0FE7                     	;# 
  2847  0FE8                     	;# 
  2848  0FE9                     	;# 
  2849  0FEA                     	;# 
  2850  0FEB                     	;# 
  2851  0FED                     	;# 
  2852  0FEE                     	;# 
  2853  0FEF                     	;# 
  2854  0000                     	;# 
  2855  0001                     	;# 
  2856  0002                     	;# 
  2857  0003                     	;# 
  2858  0004                     	;# 
  2859  0005                     	;# 
  2860  0006                     	;# 
  2861  0007                     	;# 
  2862  0008                     	;# 
  2863  0009                     	;# 
  2864  000A                     	;# 
  2865  000B                     	;# 
  2866  000C                     	;# 
  2867  000D                     	;# 
  2868  000E                     	;# 
  2869  000F                     	;# 
  2870  0010                     	;# 
  2871  0011                     	;# 
  2872  0012                     	;# 
  2873  0013                     	;# 
  2874  0014                     	;# 
  2875  0015                     	;# 
  2876  0016                     	;# 
  2877  0017                     	;# 
  2878  0018                     	;# 
  2879  0019                     	;# 
  2880  001A                     	;# 
  2881  001C                     	;# 
  2882  001C                     	;# 
  2883  001D                     	;# 
  2884  001D                     	;# 
  2885  001E                     	;# 
  2886  001F                     	;# 
  2887  008C                     	;# 
  2888  008C                     	;# 
  2889  008D                     	;# 
  2890  008E                     	;# 
  2891  008E                     	;# 
  2892  008F                     	;# 
  2893  0090                     	;# 
  2894  0090                     	;# 
  2895  0091                     	;# 
  2896  0093                     	;# 
  2897  0094                     	;# 
  2898  0095                     	;# 
  2899  0096                     	;# 
  2900  0097                     	;# 
  2901  0098                     	;# 
  2902  0099                     	;# 
  2903  009A                     	;# 
  2904  009B                     	;# 
  2905  009C                     	;# 
  2906  009D                     	;# 
  2907  009E                     	;# 
  2908  010C                     	;# 
  2909  010D                     	;# 
  2910  010E                     	;# 
  2911  010E                     	;# 
  2912  010F                     	;# 
  2913  0110                     	;# 
  2914  0110                     	;# 
  2915  0111                     	;# 
  2916  0112                     	;# 
  2917  0112                     	;# 
  2918  0113                     	;# 
  2919  0114                     	;# 
  2920  0114                     	;# 
  2921  0115                     	;# 
  2922  0116                     	;# 
  2923  0116                     	;# 
  2924  0117                     	;# 
  2925  0119                     	;# 
  2926  0119                     	;# 
  2927  0119                     	;# 
  2928  011A                     	;# 
  2929  011A                     	;# 
  2930  011A                     	;# 
  2931  011B                     	;# 
  2932  011B                     	;# 
  2933  011B                     	;# 
  2934  011B                     	;# 
  2935  011B                     	;# 
  2936  011C                     	;# 
  2937  011C                     	;# 
  2938  011C                     	;# 
  2939  011D                     	;# 
  2940  011D                     	;# 
  2941  011D                     	;# 
  2942  011E                     	;# 
  2943  011E                     	;# 
  2944  011E                     	;# 
  2945  011F                     	;# 
  2946  011F                     	;# 
  2947  011F                     	;# 
  2948  011F                     	;# 
  2949  011F                     	;# 
  2950  018C                     	;# 
  2951  018D                     	;# 
  2952  018E                     	;# 
  2953  018F                     	;# 
  2954  0190                     	;# 
  2955  0191                     	;# 
  2956  0192                     	;# 
  2957  0196                     	;# 
  2958  0197                     	;# 
  2959  0198                     	;# 
  2960  0199                     	;# 
  2961  019A                     	;# 
  2962  019B                     	;# 
  2963  019C                     	;# 
  2964  020C                     	;# 
  2965  020C                     	;# 
  2966  020D                     	;# 
  2967  020E                     	;# 
  2968  020F                     	;# 
  2969  020F                     	;# 
  2970  0210                     	;# 
  2971  0210                     	;# 
  2972  0211                     	;# 
  2973  0211                     	;# 
  2974  0212                     	;# 
  2975  0212                     	;# 
  2976  0213                     	;# 
  2977  0214                     	;# 
  2978  0215                     	;# 
  2979  0215                     	;# 
  2980  0216                     	;# 
  2981  0216                     	;# 
  2982  0217                     	;# 
  2983  0217                     	;# 
  2984  0218                     	;# 
  2985  0218                     	;# 
  2986  0219                     	;# 
  2987  021A                     	;# 
  2988  021B                     	;# 
  2989  021B                     	;# 
  2990  021C                     	;# 
  2991  021C                     	;# 
  2992  021D                     	;# 
  2993  021D                     	;# 
  2994  021E                     	;# 
  2995  021F                     	;# 
  2996  028C                     	;# 
  2997  028C                     	;# 
  2998  028D                     	;# 
  2999  028D                     	;# 
  3000  028E                     	;# 
  3001  028F                     	;# 
  3002  0290                     	;# 
  3003  0290                     	;# 
  3004  0291                     	;# 
  3005  0292                     	;# 
  3006  0292                     	;# 
  3007  0293                     	;# 
  3008  0293                     	;# 
  3009  0294                     	;# 
  3010  0295                     	;# 
  3011  0296                     	;# 
  3012  0296                     	;# 
  3013  0297                     	;# 
  3014  0298                     	;# 
  3015  0298                     	;# 
  3016  0299                     	;# 
  3017  0299                     	;# 
  3018  029A                     	;# 
  3019  029B                     	;# 
  3020  029C                     	;# 
  3021  029C                     	;# 
  3022  029D                     	;# 
  3023  030C                     	;# 
  3024  030C                     	;# 
  3025  030D                     	;# 
  3026  030E                     	;# 
  3027  030F                     	;# 
  3028  0310                     	;# 
  3029  0310                     	;# 
  3030  0311                     	;# 
  3031  0312                     	;# 
  3032  0313                     	;# 
  3033  0314                     	;# 
  3034  0314                     	;# 
  3035  0315                     	;# 
  3036  0316                     	;# 
  3037  0317                     	;# 
  3038  0318                     	;# 
  3039  0318                     	;# 
  3040  0319                     	;# 
  3041  031A                     	;# 
  3042  031B                     	;# 
  3043  031C                     	;# 
  3044  031C                     	;# 
  3045  031D                     	;# 
  3046  031E                     	;# 
  3047  031F                     	;# 
  3048  038C                     	;# 
  3049  038C                     	;# 
  3050  038D                     	;# 
  3051  038E                     	;# 
  3052  0390                     	;# 
  3053  0390                     	;# 
  3054  0391                     	;# 
  3055  0392                     	;# 
  3056  040C                     	;# 
  3057  040D                     	;# 
  3058  040E                     	;# 
  3059  040F                     	;# 
  3060  0410                     	;# 
  3061  0411                     	;# 
  3062  0416                     	;# 
  3063  0416                     	;# 
  3064  0417                     	;# 
  3065  0418                     	;# 
  3066  0418                     	;# 
  3067  0419                     	;# 
  3068  041A                     	;# 
  3069  041A                     	;# 
  3070  041B                     	;# 
  3071  041C                     	;# 
  3072  041C                     	;# 
  3073  041D                     	;# 
  3074  041E                     	;# 
  3075  041F                     	;# 
  3076  048C                     	;# 
  3077  048C                     	;# 
  3078  048D                     	;# 
  3079  048E                     	;# 
  3080  048F                     	;# 
  3081  048F                     	;# 
  3082  0490                     	;# 
  3083  0491                     	;# 
  3084  0492                     	;# 
  3085  0492                     	;# 
  3086  0493                     	;# 
  3087  0494                     	;# 
  3088  0495                     	;# 
  3089  0495                     	;# 
  3090  0496                     	;# 
  3091  0497                     	;# 
  3092  0498                     	;# 
  3093  0499                     	;# 
  3094  049A                     	;# 
  3095  049B                     	;# 
  3096  049C                     	;# 
  3097  049D                     	;# 
  3098  050C                     	;# 
  3099  050C                     	;# 
  3100  050D                     	;# 
  3101  050E                     	;# 
  3102  050F                     	;# 
  3103  050F                     	;# 
  3104  0510                     	;# 
  3105  0511                     	;# 
  3106  0512                     	;# 
  3107  0512                     	;# 
  3108  0513                     	;# 
  3109  0514                     	;# 
  3110  0515                     	;# 
  3111  0515                     	;# 
  3112  0516                     	;# 
  3113  0517                     	;# 
  3114  0518                     	;# 
  3115  0519                     	;# 
  3116  051A                     	;# 
  3117  051B                     	;# 
  3118  051C                     	;# 
  3119  051D                     	;# 
  3120  058C                     	;# 
  3121  058C                     	;# 
  3122  058D                     	;# 
  3123  058E                     	;# 
  3124  058F                     	;# 
  3125  058F                     	;# 
  3126  0590                     	;# 
  3127  0591                     	;# 
  3128  0592                     	;# 
  3129  0593                     	;# 
  3130  060C                     	;# 
  3131  060D                     	;# 
  3132  060E                     	;# 
  3133  060F                     	;# 
  3134  0610                     	;# 
  3135  0611                     	;# 
  3136  0612                     	;# 
  3137  0613                     	;# 
  3138  0614                     	;# 
  3139  0616                     	;# 
  3140  0617                     	;# 
  3141  0618                     	;# 
  3142  0619                     	;# 
  3143  061A                     	;# 
  3144  061B                     	;# 
  3145  061C                     	;# 
  3146  061D                     	;# 
  3147  061E                     	;# 
  3148  068C                     	;# 
  3149  068D                     	;# 
  3150  068E                     	;# 
  3151  068F                     	;# 
  3152  0690                     	;# 
  3153  0691                     	;# 
  3154  0692                     	;# 
  3155  0693                     	;# 
  3156  0694                     	;# 
  3157  070C                     	;# 
  3158  070D                     	;# 
  3159  070E                     	;# 
  3160  070F                     	;# 
  3161  0710                     	;# 
  3162  0711                     	;# 
  3163  0712                     	;# 
  3164  0713                     	;# 
  3165  0714                     	;# 
  3166  0716                     	;# 
  3167  0717                     	;# 
  3168  0718                     	;# 
  3169  0719                     	;# 
  3170  071A                     	;# 
  3171  071B                     	;# 
  3172  071C                     	;# 
  3173  071D                     	;# 
  3174  071E                     	;# 
  3175  0796                     	;# 
  3176  0797                     	;# 
  3177  0798                     	;# 
  3178  0799                     	;# 
  3179  079A                     	;# 
  3180  079B                     	;# 
  3181  080C                     	;# 
  3182  080D                     	;# 
  3183  080E                     	;# 
  3184  080F                     	;# 
  3185  0810                     	;# 
  3186  0811                     	;# 
  3187  0812                     	;# 
  3188  0813                     	;# 
  3189  0814                     	;# 
  3190  081A                     	;# 
  3191  081B                     	;# 
  3192  081C                     	;# 
  3193  081D                     	;# 
  3194  081E                     	;# 
  3195  081F                     	;# 
  3196  088C                     	;# 
  3197  088D                     	;# 
  3198  088E                     	;# 
  3199  088F                     	;# 
  3200  0890                     	;# 
  3201  0891                     	;# 
  3202  0892                     	;# 
  3203  0893                     	;# 
  3204  0895                     	;# 
  3205  0896                     	;# 
  3206  0897                     	;# 
  3207  0898                     	;# 
  3208  0899                     	;# 
  3209  089A                     	;# 
  3210  089B                     	;# 
  3211  090C                     	;# 
  3212  090E                     	;# 
  3213  090F                     	;# 
  3214  091F                     	;# 
  3215  091F                     	;# 
  3216  098F                     	;# 
  3217  098F                     	;# 
  3218  0990                     	;# 
  3219  0991                     	;# 
  3220  0992                     	;# 
  3221  0993                     	;# 
  3222  0994                     	;# 
  3223  0995                     	;# 
  3224  0996                     	;# 
  3225  0997                     	;# 
  3226  0E0F                     	;# 
  3227  0E10                     	;# 
  3228  0E11                     	;# 
  3229  0E12                     	;# 
  3230  0E13                     	;# 
  3231  0E14                     	;# 
  3232  0E15                     	;# 
  3233  0E16                     	;# 
  3234  0E17                     	;# 
  3235  0E18                     	;# 
  3236  0E19                     	;# 
  3237  0E1A                     	;# 
  3238  0E1B                     	;# 
  3239  0E1C                     	;# 
  3240  0E1D                     	;# 
  3241  0E1E                     	;# 
  3242  0E1F                     	;# 
  3243  0E20                     	;# 
  3244  0E21                     	;# 
  3245  0E22                     	;# 
  3246  0E23                     	;# 
  3247  0E24                     	;# 
  3248  0E25                     	;# 
  3249  0E26                     	;# 
  3250  0E27                     	;# 
  3251  0E28                     	;# 
  3252  0E29                     	;# 
  3253  0E2A                     	;# 
  3254  0E2B                     	;# 
  3255  0E2C                     	;# 
  3256  0E2D                     	;# 
  3257  0E2E                     	;# 
  3258  0E2F                     	;# 
  3259  0E30                     	;# 
  3260  0E31                     	;# 
  3261  0E32                     	;# 
  3262  0E33                     	;# 
  3263  0E34                     	;# 
  3264  0E35                     	;# 
  3265  0E36                     	;# 
  3266  0E37                     	;# 
  3267  0E8F                     	;# 
  3268  0E90                     	;# 
  3269  0E91                     	;# 
  3270  0E92                     	;# 
  3271  0E93                     	;# 
  3272  0E94                     	;# 
  3273  0E95                     	;# 
  3274  0E96                     	;# 
  3275  0E97                     	;# 
  3276  0E9C                     	;# 
  3277  0E9D                     	;# 
  3278  0E9E                     	;# 
  3279  0EA1                     	;# 
  3280  0EA2                     	;# 
  3281  0EA3                     	;# 
  3282  0EA4                     	;# 
  3283  0EA5                     	;# 
  3284  0EA9                     	;# 
  3285  0EAA                     	;# 
  3286  0EAB                     	;# 
  3287  0EAC                     	;# 
  3288  0EB1                     	;# 
  3289  0EB2                     	;# 
  3290  0EB3                     	;# 
  3291  0EB8                     	;# 
  3292  0EB9                     	;# 
  3293  0EBA                     	;# 
  3294  0EBB                     	;# 
  3295  0EBC                     	;# 
  3296  0EBD                     	;# 
  3297  0EBE                     	;# 
  3298  0EC3                     	;# 
  3299  0EC5                     	;# 
  3300  0EC6                     	;# 
  3301  0EC7                     	;# 
  3302  0EC8                     	;# 
  3303  0EC9                     	;# 
  3304  0ECA                     	;# 
  3305  0ECB                     	;# 
  3306  0ECC                     	;# 
  3307  0F10                     	;# 
  3308  0F11                     	;# 
  3309  0F12                     	;# 
  3310  0F13                     	;# 
  3311  0F14                     	;# 
  3312  0F15                     	;# 
  3313  0F16                     	;# 
  3314  0F17                     	;# 
  3315  0F18                     	;# 
  3316  0F19                     	;# 
  3317  0F1A                     	;# 
  3318  0F1B                     	;# 
  3319  0F1C                     	;# 
  3320  0F1D                     	;# 
  3321  0F1E                     	;# 
  3322  0F1F                     	;# 
  3323  0F20                     	;# 
  3324  0F21                     	;# 
  3325  0F22                     	;# 
  3326  0F23                     	;# 
  3327  0F24                     	;# 
  3328  0F25                     	;# 
  3329  0F26                     	;# 
  3330  0F27                     	;# 
  3331  0F28                     	;# 
  3332  0F29                     	;# 
  3333  0F2A                     	;# 
  3334  0F2B                     	;# 
  3335  0F2C                     	;# 
  3336  0F2D                     	;# 
  3337  0F2E                     	;# 
  3338  0F2F                     	;# 
  3339  0F30                     	;# 
  3340  0F31                     	;# 
  3341  0F32                     	;# 
  3342  0F38                     	;# 
  3343  0F39                     	;# 
  3344  0F3A                     	;# 
  3345  0F3B                     	;# 
  3346  0F3C                     	;# 
  3347  0F3D                     	;# 
  3348  0F3E                     	;# 
  3349  0F3F                     	;# 
  3350  0F40                     	;# 
  3351  0F41                     	;# 
  3352  0F43                     	;# 
  3353  0F44                     	;# 
  3354  0F45                     	;# 
  3355  0F46                     	;# 
  3356  0F47                     	;# 
  3357  0F48                     	;# 
  3358  0F49                     	;# 
  3359  0F4A                     	;# 
  3360  0F4B                     	;# 
  3361  0F4C                     	;# 
  3362  0F4E                     	;# 
  3363  0F4F                     	;# 
  3364  0F50                     	;# 
  3365  0F51                     	;# 
  3366  0F52                     	;# 
  3367  0F53                     	;# 
  3368  0F54                     	;# 
  3369  0F55                     	;# 
  3370  0F56                     	;# 
  3371  0F57                     	;# 
  3372  0F59                     	;# 
  3373  0F5A                     	;# 
  3374  0F5B                     	;# 
  3375  0F5C                     	;# 
  3376  0F5D                     	;# 
  3377  0F61                     	;# 
  3378  0F62                     	;# 
  3379  0F64                     	;# 
  3380  0F65                     	;# 
  3381  0F66                     	;# 
  3382  0F67                     	;# 
  3383  0F68                     	;# 
  3384  0F69                     	;# 
  3385  0F6A                     	;# 
  3386  0F6B                     	;# 
  3387  0F6C                     	;# 
  3388  0F6D                     	;# 
  3389  0FE4                     	;# 
  3390  0FE5                     	;# 
  3391  0FE6                     	;# 
  3392  0FE7                     	;# 
  3393  0FE8                     	;# 
  3394  0FE9                     	;# 
  3395  0FEA                     	;# 
  3396  0FEB                     	;# 
  3397  0FED                     	;# 
  3398  0FEE                     	;# 
  3399  0FEF                     	;# 
  3400  0000                     	;# 
  3401  0001                     	;# 
  3402  0002                     	;# 
  3403  0003                     	;# 
  3404  0004                     	;# 
  3405  0005                     	;# 
  3406  0006                     	;# 
  3407  0007                     	;# 
  3408  0008                     	;# 
  3409  0009                     	;# 
  3410  000A                     	;# 
  3411  000B                     	;# 
  3412  000C                     	;# 
  3413  000D                     	;# 
  3414  000E                     	;# 
  3415  000F                     	;# 
  3416  0010                     	;# 
  3417  0011                     	;# 
  3418  0012                     	;# 
  3419  0013                     	;# 
  3420  0014                     	;# 
  3421  0015                     	;# 
  3422  0016                     	;# 
  3423  0017                     	;# 
  3424  0018                     	;# 
  3425  0019                     	;# 
  3426  001A                     	;# 
  3427  001C                     	;# 
  3428  001C                     	;# 
  3429  001D                     	;# 
  3430  001D                     	;# 
  3431  001E                     	;# 
  3432  001F                     	;# 
  3433  008C                     	;# 
  3434  008C                     	;# 
  3435  008D                     	;# 
  3436  008E                     	;# 
  3437  008E                     	;# 
  3438  008F                     	;# 
  3439  0090                     	;# 
  3440  0090                     	;# 
  3441  0091                     	;# 
  3442  0093                     	;# 
  3443  0094                     	;# 
  3444  0095                     	;# 
  3445  0096                     	;# 
  3446  0097                     	;# 
  3447  0098                     	;# 
  3448  0099                     	;# 
  3449  009A                     	;# 
  3450  009B                     	;# 
  3451  009C                     	;# 
  3452  009D                     	;# 
  3453  009E                     	;# 
  3454  010C                     	;# 
  3455  010D                     	;# 
  3456  010E                     	;# 
  3457  010E                     	;# 
  3458  010F                     	;# 
  3459  0110                     	;# 
  3460  0110                     	;# 
  3461  0111                     	;# 
  3462  0112                     	;# 
  3463  0112                     	;# 
  3464  0113                     	;# 
  3465  0114                     	;# 
  3466  0114                     	;# 
  3467  0115                     	;# 
  3468  0116                     	;# 
  3469  0116                     	;# 
  3470  0117                     	;# 
  3471  0119                     	;# 
  3472  0119                     	;# 
  3473  0119                     	;# 
  3474  011A                     	;# 
  3475  011A                     	;# 
  3476  011A                     	;# 
  3477  011B                     	;# 
  3478  011B                     	;# 
  3479  011B                     	;# 
  3480  011B                     	;# 
  3481  011B                     	;# 
  3482  011C                     	;# 
  3483  011C                     	;# 
  3484  011C                     	;# 
  3485  011D                     	;# 
  3486  011D                     	;# 
  3487  011D                     	;# 
  3488  011E                     	;# 
  3489  011E                     	;# 
  3490  011E                     	;# 
  3491  011F                     	;# 
  3492  011F                     	;# 
  3493  011F                     	;# 
  3494  011F                     	;# 
  3495  011F                     	;# 
  3496  018C                     	;# 
  3497  018D                     	;# 
  3498  018E                     	;# 
  3499  018F                     	;# 
  3500  0190                     	;# 
  3501  0191                     	;# 
  3502  0192                     	;# 
  3503  0196                     	;# 
  3504  0197                     	;# 
  3505  0198                     	;# 
  3506  0199                     	;# 
  3507  019A                     	;# 
  3508  019B                     	;# 
  3509  019C                     	;# 
  3510  020C                     	;# 
  3511  020C                     	;# 
  3512  020D                     	;# 
  3513  020E                     	;# 
  3514  020F                     	;# 
  3515  020F                     	;# 
  3516  0210                     	;# 
  3517  0210                     	;# 
  3518  0211                     	;# 
  3519  0211                     	;# 
  3520  0212                     	;# 
  3521  0212                     	;# 
  3522  0213                     	;# 
  3523  0214                     	;# 
  3524  0215                     	;# 
  3525  0215                     	;# 
  3526  0216                     	;# 
  3527  0216                     	;# 
  3528  0217                     	;# 
  3529  0217                     	;# 
  3530  0218                     	;# 
  3531  0218                     	;# 
  3532  0219                     	;# 
  3533  021A                     	;# 
  3534  021B                     	;# 
  3535  021B                     	;# 
  3536  021C                     	;# 
  3537  021C                     	;# 
  3538  021D                     	;# 
  3539  021D                     	;# 
  3540  021E                     	;# 
  3541  021F                     	;# 
  3542  028C                     	;# 
  3543  028C                     	;# 
  3544  028D                     	;# 
  3545  028D                     	;# 
  3546  028E                     	;# 
  3547  028F                     	;# 
  3548  0290                     	;# 
  3549  0290                     	;# 
  3550  0291                     	;# 
  3551  0292                     	;# 
  3552  0292                     	;# 
  3553  0293                     	;# 
  3554  0293                     	;# 
  3555  0294                     	;# 
  3556  0295                     	;# 
  3557  0296                     	;# 
  3558  0296                     	;# 
  3559  0297                     	;# 
  3560  0298                     	;# 
  3561  0298                     	;# 
  3562  0299                     	;# 
  3563  0299                     	;# 
  3564  029A                     	;# 
  3565  029B                     	;# 
  3566  029C                     	;# 
  3567  029C                     	;# 
  3568  029D                     	;# 
  3569  030C                     	;# 
  3570  030C                     	;# 
  3571  030D                     	;# 
  3572  030E                     	;# 
  3573  030F                     	;# 
  3574  0310                     	;# 
  3575  0310                     	;# 
  3576  0311                     	;# 
  3577  0312                     	;# 
  3578  0313                     	;# 
  3579  0314                     	;# 
  3580  0314                     	;# 
  3581  0315                     	;# 
  3582  0316                     	;# 
  3583  0317                     	;# 
  3584  0318                     	;# 
  3585  0318                     	;# 
  3586  0319                     	;# 
  3587  031A                     	;# 
  3588  031B                     	;# 
  3589  031C                     	;# 
  3590  031C                     	;# 
  3591  031D                     	;# 
  3592  031E                     	;# 
  3593  031F                     	;# 
  3594  038C                     	;# 
  3595  038C                     	;# 
  3596  038D                     	;# 
  3597  038E                     	;# 
  3598  0390                     	;# 
  3599  0390                     	;# 
  3600  0391                     	;# 
  3601  0392                     	;# 
  3602  040C                     	;# 
  3603  040D                     	;# 
  3604  040E                     	;# 
  3605  040F                     	;# 
  3606  0410                     	;# 
  3607  0411                     	;# 
  3608  0416                     	;# 
  3609  0416                     	;# 
  3610  0417                     	;# 
  3611  0418                     	;# 
  3612  0418                     	;# 
  3613  0419                     	;# 
  3614  041A                     	;# 
  3615  041A                     	;# 
  3616  041B                     	;# 
  3617  041C                     	;# 
  3618  041C                     	;# 
  3619  041D                     	;# 
  3620  041E                     	;# 
  3621  041F                     	;# 
  3622  048C                     	;# 
  3623  048C                     	;# 
  3624  048D                     	;# 
  3625  048E                     	;# 
  3626  048F                     	;# 
  3627  048F                     	;# 
  3628  0490                     	;# 
  3629  0491                     	;# 
  3630  0492                     	;# 
  3631  0492                     	;# 
  3632  0493                     	;# 
  3633  0494                     	;# 
  3634  0495                     	;# 
  3635  0495                     	;# 
  3636  0496                     	;# 
  3637  0497                     	;# 
  3638  0498                     	;# 
  3639  0499                     	;# 
  3640  049A                     	;# 
  3641  049B                     	;# 
  3642  049C                     	;# 
  3643  049D                     	;# 
  3644  050C                     	;# 
  3645  050C                     	;# 
  3646  050D                     	;# 
  3647  050E                     	;# 
  3648  050F                     	;# 
  3649  050F                     	;# 
  3650  0510                     	;# 
  3651  0511                     	;# 
  3652  0512                     	;# 
  3653  0512                     	;# 
  3654  0513                     	;# 
  3655  0514                     	;# 
  3656  0515                     	;# 
  3657  0515                     	;# 
  3658  0516                     	;# 
  3659  0517                     	;# 
  3660  0518                     	;# 
  3661  0519                     	;# 
  3662  051A                     	;# 
  3663  051B                     	;# 
  3664  051C                     	;# 
  3665  051D                     	;# 
  3666  058C                     	;# 
  3667  058C                     	;# 
  3668  058D                     	;# 
  3669  058E                     	;# 
  3670  058F                     	;# 
  3671  058F                     	;# 
  3672  0590                     	;# 
  3673  0591                     	;# 
  3674  0592                     	;# 
  3675  0593                     	;# 
  3676  060C                     	;# 
  3677  060D                     	;# 
  3678  060E                     	;# 
  3679  060F                     	;# 
  3680  0610                     	;# 
  3681  0611                     	;# 
  3682  0612                     	;# 
  3683  0613                     	;# 
  3684  0614                     	;# 
  3685  0616                     	;# 
  3686  0617                     	;# 
  3687  0618                     	;# 
  3688  0619                     	;# 
  3689  061A                     	;# 
  3690  061B                     	;# 
  3691  061C                     	;# 
  3692  061D                     	;# 
  3693  061E                     	;# 
  3694  068C                     	;# 
  3695  068D                     	;# 
  3696  068E                     	;# 
  3697  068F                     	;# 
  3698  0690                     	;# 
  3699  0691                     	;# 
  3700  0692                     	;# 
  3701  0693                     	;# 
  3702  0694                     	;# 
  3703  070C                     	;# 
  3704  070D                     	;# 
  3705  070E                     	;# 
  3706  070F                     	;# 
  3707  0710                     	;# 
  3708  0711                     	;# 
  3709  0712                     	;# 
  3710  0713                     	;# 
  3711  0714                     	;# 
  3712  0716                     	;# 
  3713  0717                     	;# 
  3714  0718                     	;# 
  3715  0719                     	;# 
  3716  071A                     	;# 
  3717  071B                     	;# 
  3718  071C                     	;# 
  3719  071D                     	;# 
  3720  071E                     	;# 
  3721  0796                     	;# 
  3722  0797                     	;# 
  3723  0798                     	;# 
  3724  0799                     	;# 
  3725  079A                     	;# 
  3726  079B                     	;# 
  3727  080C                     	;# 
  3728  080D                     	;# 
  3729  080E                     	;# 
  3730  080F                     	;# 
  3731  0810                     	;# 
  3732  0811                     	;# 
  3733  0812                     	;# 
  3734  0813                     	;# 
  3735  0814                     	;# 
  3736  081A                     	;# 
  3737  081B                     	;# 
  3738  081C                     	;# 
  3739  081D                     	;# 
  3740  081E                     	;# 
  3741  081F                     	;# 
  3742  088C                     	;# 
  3743  088D                     	;# 
  3744  088E                     	;# 
  3745  088F                     	;# 
  3746  0890                     	;# 
  3747  0891                     	;# 
  3748  0892                     	;# 
  3749  0893                     	;# 
  3750  0895                     	;# 
  3751  0896                     	;# 
  3752  0897                     	;# 
  3753  0898                     	;# 
  3754  0899                     	;# 
  3755  089A                     	;# 
  3756  089B                     	;# 
  3757  090C                     	;# 
  3758  090E                     	;# 
  3759  090F                     	;# 
  3760  091F                     	;# 
  3761  091F                     	;# 
  3762  098F                     	;# 
  3763  098F                     	;# 
  3764  0990                     	;# 
  3765  0991                     	;# 
  3766  0992                     	;# 
  3767  0993                     	;# 
  3768  0994                     	;# 
  3769  0995                     	;# 
  3770  0996                     	;# 
  3771  0997                     	;# 
  3772  0E0F                     	;# 
  3773  0E10                     	;# 
  3774  0E11                     	;# 
  3775  0E12                     	;# 
  3776  0E13                     	;# 
  3777  0E14                     	;# 
  3778  0E15                     	;# 
  3779  0E16                     	;# 
  3780  0E17                     	;# 
  3781  0E18                     	;# 
  3782  0E19                     	;# 
  3783  0E1A                     	;# 
  3784  0E1B                     	;# 
  3785  0E1C                     	;# 
  3786  0E1D                     	;# 
  3787  0E1E                     	;# 
  3788  0E1F                     	;# 
  3789  0E20                     	;# 
  3790  0E21                     	;# 
  3791  0E22                     	;# 
  3792  0E23                     	;# 
  3793  0E24                     	;# 
  3794  0E25                     	;# 
  3795  0E26                     	;# 
  3796  0E27                     	;# 
  3797  0E28                     	;# 
  3798  0E29                     	;# 
  3799  0E2A                     	;# 
  3800  0E2B                     	;# 
  3801  0E2C                     	;# 
  3802  0E2D                     	;# 
  3803  0E2E                     	;# 
  3804  0E2F                     	;# 
  3805  0E30                     	;# 
  3806  0E31                     	;# 
  3807  0E32                     	;# 
  3808  0E33                     	;# 
  3809  0E34                     	;# 
  3810  0E35                     	;# 
  3811  0E36                     	;# 
  3812  0E37                     	;# 
  3813  0E8F                     	;# 
  3814  0E90                     	;# 
  3815  0E91                     	;# 
  3816  0E92                     	;# 
  3817  0E93                     	;# 
  3818  0E94                     	;# 
  3819  0E95                     	;# 
  3820  0E96                     	;# 
  3821  0E97                     	;# 
  3822  0E9C                     	;# 
  3823  0E9D                     	;# 
  3824  0E9E                     	;# 
  3825  0EA1                     	;# 
  3826  0EA2                     	;# 
  3827  0EA3                     	;# 
  3828  0EA4                     	;# 
  3829  0EA5                     	;# 
  3830  0EA9                     	;# 
  3831  0EAA                     	;# 
  3832  0EAB                     	;# 
  3833  0EAC                     	;# 
  3834  0EB1                     	;# 
  3835  0EB2                     	;# 
  3836  0EB3                     	;# 
  3837  0EB8                     	;# 
  3838  0EB9                     	;# 
  3839  0EBA                     	;# 
  3840  0EBB                     	;# 
  3841  0EBC                     	;# 
  3842  0EBD                     	;# 
  3843  0EBE                     	;# 
  3844  0EC3                     	;# 
  3845  0EC5                     	;# 
  3846  0EC6                     	;# 
  3847  0EC7                     	;# 
  3848  0EC8                     	;# 
  3849  0EC9                     	;# 
  3850  0ECA                     	;# 
  3851  0ECB                     	;# 
  3852  0ECC                     	;# 
  3853  0F10                     	;# 
  3854  0F11                     	;# 
  3855  0F12                     	;# 
  3856  0F13                     	;# 
  3857  0F14                     	;# 
  3858  0F15                     	;# 
  3859  0F16                     	;# 
  3860  0F17                     	;# 
  3861  0F18                     	;# 
  3862  0F19                     	;# 
  3863  0F1A                     	;# 
  3864  0F1B                     	;# 
  3865  0F1C                     	;# 
  3866  0F1D                     	;# 
  3867  0F1E                     	;# 
  3868  0F1F                     	;# 
  3869  0F20                     	;# 
  3870  0F21                     	;# 
  3871  0F22                     	;# 
  3872  0F23                     	;# 
  3873  0F24                     	;# 
  3874  0F25                     	;# 
  3875  0F26                     	;# 
  3876  0F27                     	;# 
  3877  0F28                     	;# 
  3878  0F29                     	;# 
  3879  0F2A                     	;# 
  3880  0F2B                     	;# 
  3881  0F2C                     	;# 
  3882  0F2D                     	;# 
  3883  0F2E                     	;# 
  3884  0F2F                     	;# 
  3885  0F30                     	;# 
  3886  0F31                     	;# 
  3887  0F32                     	;# 
  3888  0F38                     	;# 
  3889  0F39                     	;# 
  3890  0F3A                     	;# 
  3891  0F3B                     	;# 
  3892  0F3C                     	;# 
  3893  0F3D                     	;# 
  3894  0F3E                     	;# 
  3895  0F3F                     	;# 
  3896  0F40                     	;# 
  3897  0F41                     	;# 
  3898  0F43                     	;# 
  3899  0F44                     	;# 
  3900  0F45                     	;# 
  3901  0F46                     	;# 
  3902  0F47                     	;# 
  3903  0F48                     	;# 
  3904  0F49                     	;# 
  3905  0F4A                     	;# 
  3906  0F4B                     	;# 
  3907  0F4C                     	;# 
  3908  0F4E                     	;# 
  3909  0F4F                     	;# 
  3910  0F50                     	;# 
  3911  0F51                     	;# 
  3912  0F52                     	;# 
  3913  0F53                     	;# 
  3914  0F54                     	;# 
  3915  0F55                     	;# 
  3916  0F56                     	;# 
  3917  0F57                     	;# 
  3918  0F59                     	;# 
  3919  0F5A                     	;# 
  3920  0F5B                     	;# 
  3921  0F5C                     	;# 
  3922  0F5D                     	;# 
  3923  0F61                     	;# 
  3924  0F62                     	;# 
  3925  0F64                     	;# 
  3926  0F65                     	;# 
  3927  0F66                     	;# 
  3928  0F67                     	;# 
  3929  0F68                     	;# 
  3930  0F69                     	;# 
  3931  0F6A                     	;# 
  3932  0F6B                     	;# 
  3933  0F6C                     	;# 
  3934  0F6D                     	;# 
  3935  0FE4                     	;# 
  3936  0FE5                     	;# 
  3937  0FE6                     	;# 
  3938  0FE7                     	;# 
  3939  0FE8                     	;# 
  3940  0FE9                     	;# 
  3941  0FEA                     	;# 
  3942  0FEB                     	;# 
  3943  0FED                     	;# 
  3944  0FEE                     	;# 
  3945  0FEF                     	;# 
  3946  0000                     	;# 
  3947  0001                     	;# 
  3948  0002                     	;# 
  3949  0003                     	;# 
  3950  0004                     	;# 
  3951  0005                     	;# 
  3952  0006                     	;# 
  3953  0007                     	;# 
  3954  0008                     	;# 
  3955  0009                     	;# 
  3956  000A                     	;# 
  3957  000B                     	;# 
  3958  000C                     	;# 
  3959  000D                     	;# 
  3960  000E                     	;# 
  3961  000F                     	;# 
  3962  0010                     	;# 
  3963  0011                     	;# 
  3964  0012                     	;# 
  3965  0013                     	;# 
  3966  0014                     	;# 
  3967  0015                     	;# 
  3968  0016                     	;# 
  3969  0017                     	;# 
  3970  0018                     	;# 
  3971  0019                     	;# 
  3972  001A                     	;# 
  3973  001C                     	;# 
  3974  001C                     	;# 
  3975  001D                     	;# 
  3976  001D                     	;# 
  3977  001E                     	;# 
  3978  001F                     	;# 
  3979  008C                     	;# 
  3980  008C                     	;# 
  3981  008D                     	;# 
  3982  008E                     	;# 
  3983  008E                     	;# 
  3984  008F                     	;# 
  3985  0090                     	;# 
  3986  0090                     	;# 
  3987  0091                     	;# 
  3988  0093                     	;# 
  3989  0094                     	;# 
  3990  0095                     	;# 
  3991  0096                     	;# 
  3992  0097                     	;# 
  3993  0098                     	;# 
  3994  0099                     	;# 
  3995  009A                     	;# 
  3996  009B                     	;# 
  3997  009C                     	;# 
  3998  009D                     	;# 
  3999  009E                     	;# 
  4000  010C                     	;# 
  4001  010D                     	;# 
  4002  010E                     	;# 
  4003  010E                     	;# 
  4004  010F                     	;# 
  4005  0110                     	;# 
  4006  0110                     	;# 
  4007  0111                     	;# 
  4008  0112                     	;# 
  4009  0112                     	;# 
  4010  0113                     	;# 
  4011  0114                     	;# 
  4012  0114                     	;# 
  4013  0115                     	;# 
  4014  0116                     	;# 
  4015  0116                     	;# 
  4016  0117                     	;# 
  4017  0119                     	;# 
  4018  0119                     	;# 
  4019  0119                     	;# 
  4020  011A                     	;# 
  4021  011A                     	;# 
  4022  011A                     	;# 
  4023  011B                     	;# 
  4024  011B                     	;# 
  4025  011B                     	;# 
  4026  011B                     	;# 
  4027  011B                     	;# 
  4028  011C                     	;# 
  4029  011C                     	;# 
  4030  011C                     	;# 
  4031  011D                     	;# 
  4032  011D                     	;# 
  4033  011D                     	;# 
  4034  011E                     	;# 
  4035  011E                     	;# 
  4036  011E                     	;# 
  4037  011F                     	;# 
  4038  011F                     	;# 
  4039  011F                     	;# 
  4040  011F                     	;# 
  4041  011F                     	;# 
  4042  018C                     	;# 
  4043  018D                     	;# 
  4044  018E                     	;# 
  4045  018F                     	;# 
  4046  0190                     	;# 
  4047  0191                     	;# 
  4048  0192                     	;# 
  4049  0196                     	;# 
  4050  0197                     	;# 
  4051  0198                     	;# 
  4052  0199                     	;# 
  4053  019A                     	;# 
  4054  019B                     	;# 
  4055  019C                     	;# 
  4056  020C                     	;# 
  4057  020C                     	;# 
  4058  020D                     	;# 
  4059  020E                     	;# 
  4060  020F                     	;# 
  4061  020F                     	;# 
  4062  0210                     	;# 
  4063  0210                     	;# 
  4064  0211                     	;# 
  4065  0211                     	;# 
  4066  0212                     	;# 
  4067  0212                     	;# 
  4068  0213                     	;# 
  4069  0214                     	;# 
  4070  0215                     	;# 
  4071  0215                     	;# 
  4072  0216                     	;# 
  4073  0216                     	;# 
  4074  0217                     	;# 
  4075  0217                     	;# 
  4076  0218                     	;# 
  4077  0218                     	;# 
  4078  0219                     	;# 
  4079  021A                     	;# 
  4080  021B                     	;# 
  4081  021B                     	;# 
  4082  021C                     	;# 
  4083  021C                     	;# 
  4084  021D                     	;# 
  4085  021D                     	;# 
  4086  021E                     	;# 
  4087  021F                     	;# 
  4088  028C                     	;# 
  4089  028C                     	;# 
  4090  028D                     	;# 
  4091  028D                     	;# 
  4092  028E                     	;# 
  4093  028F                     	;# 
  4094  0290                     	;# 
  4095  0290                     	;# 
  4096  0291                     	;# 
  4097  0292                     	;# 
  4098  0292                     	;# 
  4099  0293                     	;# 
  4100  0293                     	;# 
  4101  0294                     	;# 
  4102  0295                     	;# 
  4103  0296                     	;# 
  4104  0296                     	;# 
  4105  0297                     	;# 
  4106  0298                     	;# 
  4107  0298                     	;# 
  4108  0299                     	;# 
  4109  0299                     	;# 
  4110  029A                     	;# 
  4111  029B                     	;# 
  4112  029C                     	;# 
  4113  029C                     	;# 
  4114  029D                     	;# 
  4115  030C                     	;# 
  4116  030C                     	;# 
  4117  030D                     	;# 
  4118  030E                     	;# 
  4119  030F                     	;# 
  4120  0310                     	;# 
  4121  0310                     	;# 
  4122  0311                     	;# 
  4123  0312                     	;# 
  4124  0313                     	;# 
  4125  0314                     	;# 
  4126  0314                     	;# 
  4127  0315                     	;# 
  4128  0316                     	;# 
  4129  0317                     	;# 
  4130  0318                     	;# 
  4131  0318                     	;# 
  4132  0319                     	;# 
  4133  031A                     	;# 
  4134  031B                     	;# 
  4135  031C                     	;# 
  4136  031C                     	;# 
  4137  031D                     	;# 
  4138  031E                     	;# 
  4139  031F                     	;# 
  4140  038C                     	;# 
  4141  038C                     	;# 
  4142  038D                     	;# 
  4143  038E                     	;# 
  4144  0390                     	;# 
  4145  0390                     	;# 
  4146  0391                     	;# 
  4147  0392                     	;# 
  4148  040C                     	;# 
  4149  040D                     	;# 
  4150  040E                     	;# 
  4151  040F                     	;# 
  4152  0410                     	;# 
  4153  0411                     	;# 
  4154  0416                     	;# 
  4155  0416                     	;# 
  4156  0417                     	;# 
  4157  0418                     	;# 
  4158  0418                     	;# 
  4159  0419                     	;# 
  4160  041A                     	;# 
  4161  041A                     	;# 
  4162  041B                     	;# 
  4163  041C                     	;# 
  4164  041C                     	;# 
  4165  041D                     	;# 
  4166  041E                     	;# 
  4167  041F                     	;# 
  4168  048C                     	;# 
  4169  048C                     	;# 
  4170  048D                     	;# 
  4171  048E                     	;# 
  4172  048F                     	;# 
  4173  048F                     	;# 
  4174  0490                     	;# 
  4175  0491                     	;# 
  4176  0492                     	;# 
  4177  0492                     	;# 
  4178  0493                     	;# 
  4179  0494                     	;# 
  4180  0495                     	;# 
  4181  0495                     	;# 
  4182  0496                     	;# 
  4183  0497                     	;# 
  4184  0498                     	;# 
  4185  0499                     	;# 
  4186  049A                     	;# 
  4187  049B                     	;# 
  4188  049C                     	;# 
  4189  049D                     	;# 
  4190  050C                     	;# 
  4191  050C                     	;# 
  4192  050D                     	;# 
  4193  050E                     	;# 
  4194  050F                     	;# 
  4195  050F                     	;# 
  4196  0510                     	;# 
  4197  0511                     	;# 
  4198  0512                     	;# 
  4199  0512                     	;# 
  4200  0513                     	;# 
  4201  0514                     	;# 
  4202  0515                     	;# 
  4203  0515                     	;# 
  4204  0516                     	;# 
  4205  0517                     	;# 
  4206  0518                     	;# 
  4207  0519                     	;# 
  4208  051A                     	;# 
  4209  051B                     	;# 
  4210  051C                     	;# 
  4211  051D                     	;# 
  4212  058C                     	;# 
  4213  058C                     	;# 
  4214  058D                     	;# 
  4215  058E                     	;# 
  4216  058F                     	;# 
  4217  058F                     	;# 
  4218  0590                     	;# 
  4219  0591                     	;# 
  4220  0592                     	;# 
  4221  0593                     	;# 
  4222  060C                     	;# 
  4223  060D                     	;# 
  4224  060E                     	;# 
  4225  060F                     	;# 
  4226  0610                     	;# 
  4227  0611                     	;# 
  4228  0612                     	;# 
  4229  0613                     	;# 
  4230  0614                     	;# 
  4231  0616                     	;# 
  4232  0617                     	;# 
  4233  0618                     	;# 
  4234  0619                     	;# 
  4235  061A                     	;# 
  4236  061B                     	;# 
  4237  061C                     	;# 
  4238  061D                     	;# 
  4239  061E                     	;# 
  4240  068C                     	;# 
  4241  068D                     	;# 
  4242  068E                     	;# 
  4243  068F                     	;# 
  4244  0690                     	;# 
  4245  0691                     	;# 
  4246  0692                     	;# 
  4247  0693                     	;# 
  4248  0694                     	;# 
  4249  070C                     	;# 
  4250  070D                     	;# 
  4251  070E                     	;# 
  4252  070F                     	;# 
  4253  0710                     	;# 
  4254  0711                     	;# 
  4255  0712                     	;# 
  4256  0713                     	;# 
  4257  0714                     	;# 
  4258  0716                     	;# 
  4259  0717                     	;# 
  4260  0718                     	;# 
  4261  0719                     	;# 
  4262  071A                     	;# 
  4263  071B                     	;# 
  4264  071C                     	;# 
  4265  071D                     	;# 
  4266  071E                     	;# 
  4267  0796                     	;# 
  4268  0797                     	;# 
  4269  0798                     	;# 
  4270  0799                     	;# 
  4271  079A                     	;# 
  4272  079B                     	;# 
  4273  080C                     	;# 
  4274  080D                     	;# 
  4275  080E                     	;# 
  4276  080F                     	;# 
  4277  0810                     	;# 
  4278  0811                     	;# 
  4279  0812                     	;# 
  4280  0813                     	;# 
  4281  0814                     	;# 
  4282  081A                     	;# 
  4283  081B                     	;# 
  4284  081C                     	;# 
  4285  081D                     	;# 
  4286  081E                     	;# 
  4287  081F                     	;# 
  4288  088C                     	;# 
  4289  088D                     	;# 
  4290  088E                     	;# 
  4291  088F                     	;# 
  4292  0890                     	;# 
  4293  0891                     	;# 
  4294  0892                     	;# 
  4295  0893                     	;# 
  4296  0895                     	;# 
  4297  0896                     	;# 
  4298  0897                     	;# 
  4299  0898                     	;# 
  4300  0899                     	;# 
  4301  089A                     	;# 
  4302  089B                     	;# 
  4303  090C                     	;# 
  4304  090E                     	;# 
  4305  090F                     	;# 
  4306  091F                     	;# 
  4307  091F                     	;# 
  4308  098F                     	;# 
  4309  098F                     	;# 
  4310  0990                     	;# 
  4311  0991                     	;# 
  4312  0992                     	;# 
  4313  0993                     	;# 
  4314  0994                     	;# 
  4315  0995                     	;# 
  4316  0996                     	;# 
  4317  0997                     	;# 
  4318  0E0F                     	;# 
  4319  0E10                     	;# 
  4320  0E11                     	;# 
  4321  0E12                     	;# 
  4322  0E13                     	;# 
  4323  0E14                     	;# 
  4324  0E15                     	;# 
  4325  0E16                     	;# 
  4326  0E17                     	;# 
  4327  0E18                     	;# 
  4328  0E19                     	;# 
  4329  0E1A                     	;# 
  4330  0E1B                     	;# 
  4331  0E1C                     	;# 
  4332  0E1D                     	;# 
  4333  0E1E                     	;# 
  4334  0E1F                     	;# 
  4335  0E20                     	;# 
  4336  0E21                     	;# 
  4337  0E22                     	;# 
  4338  0E23                     	;# 
  4339  0E24                     	;# 
  4340  0E25                     	;# 
  4341  0E26                     	;# 
  4342  0E27                     	;# 
  4343  0E28                     	;# 
  4344  0E29                     	;# 
  4345  0E2A                     	;# 
  4346  0E2B                     	;# 
  4347  0E2C                     	;# 
  4348  0E2D                     	;# 
  4349  0E2E                     	;# 
  4350  0E2F                     	;# 
  4351  0E30                     	;# 
  4352  0E31                     	;# 
  4353  0E32                     	;# 
  4354  0E33                     	;# 
  4355  0E34                     	;# 
  4356  0E35                     	;# 
  4357  0E36                     	;# 
  4358  0E37                     	;# 
  4359  0E8F                     	;# 
  4360  0E90                     	;# 
  4361  0E91                     	;# 
  4362  0E92                     	;# 
  4363  0E93                     	;# 
  4364  0E94                     	;# 
  4365  0E95                     	;# 
  4366  0E96                     	;# 
  4367  0E97                     	;# 
  4368  0E9C                     	;# 
  4369  0E9D                     	;# 
  4370  0E9E                     	;# 
  4371  0EA1                     	;# 
  4372  0EA2                     	;# 
  4373  0EA3                     	;# 
  4374  0EA4                     	;# 
  4375  0EA5                     	;# 
  4376  0EA9                     	;# 
  4377  0EAA                     	;# 
  4378  0EAB                     	;# 
  4379  0EAC                     	;# 
  4380  0EB1                     	;# 
  4381  0EB2                     	;# 
  4382  0EB3                     	;# 
  4383  0EB8                     	;# 
  4384  0EB9                     	;# 
  4385  0EBA                     	;# 
  4386  0EBB                     	;# 
  4387  0EBC                     	;# 
  4388  0EBD                     	;# 
  4389  0EBE                     	;# 
  4390  0EC3                     	;# 
  4391  0EC5                     	;# 
  4392  0EC6                     	;# 
  4393  0EC7                     	;# 
  4394  0EC8                     	;# 
  4395  0EC9                     	;# 
  4396  0ECA                     	;# 
  4397  0ECB                     	;# 
  4398  0ECC                     	;# 
  4399  0F10                     	;# 
  4400  0F11                     	;# 
  4401  0F12                     	;# 
  4402  0F13                     	;# 
  4403  0F14                     	;# 
  4404  0F15                     	;# 
  4405  0F16                     	;# 
  4406  0F17                     	;# 
  4407  0F18                     	;# 
  4408  0F19                     	;# 
  4409  0F1A                     	;# 
  4410  0F1B                     	;# 
  4411  0F1C                     	;# 
  4412  0F1D                     	;# 
  4413  0F1E                     	;# 
  4414  0F1F                     	;# 
  4415  0F20                     	;# 
  4416  0F21                     	;# 
  4417  0F22                     	;# 
  4418  0F23                     	;# 
  4419  0F24                     	;# 
  4420  0F25                     	;# 
  4421  0F26                     	;# 
  4422  0F27                     	;# 
  4423  0F28                     	;# 
  4424  0F29                     	;# 
  4425  0F2A                     	;# 
  4426  0F2B                     	;# 
  4427  0F2C                     	;# 
  4428  0F2D                     	;# 
  4429  0F2E                     	;# 
  4430  0F2F                     	;# 
  4431  0F30                     	;# 
  4432  0F31                     	;# 
  4433  0F32                     	;# 
  4434  0F38                     	;# 
  4435  0F39                     	;# 
  4436  0F3A                     	;# 
  4437  0F3B                     	;# 
  4438  0F3C                     	;# 
  4439  0F3D                     	;# 
  4440  0F3E                     	;# 
  4441  0F3F                     	;# 
  4442  0F40                     	;# 
  4443  0F41                     	;# 
  4444  0F43                     	;# 
  4445  0F44                     	;# 
  4446  0F45                     	;# 
  4447  0F46                     	;# 
  4448  0F47                     	;# 
  4449  0F48                     	;# 
  4450  0F49                     	;# 
  4451  0F4A                     	;# 
  4452  0F4B                     	;# 
  4453  0F4C                     	;# 
  4454  0F4E                     	;# 
  4455  0F4F                     	;# 
  4456  0F50                     	;# 
  4457  0F51                     	;# 
  4458  0F52                     	;# 
  4459  0F53                     	;# 
  4460  0F54                     	;# 
  4461  0F55                     	;# 
  4462  0F56                     	;# 
  4463  0F57                     	;# 
  4464  0F59                     	;# 
  4465  0F5A                     	;# 
  4466  0F5B                     	;# 
  4467  0F5C                     	;# 
  4468  0F5D                     	;# 
  4469  0F61                     	;# 
  4470  0F62                     	;# 
  4471  0F64                     	;# 
  4472  0F65                     	;# 
  4473  0F66                     	;# 
  4474  0F67                     	;# 
  4475  0F68                     	;# 
  4476  0F69                     	;# 
  4477  0F6A                     	;# 
  4478  0F6B                     	;# 
  4479  0F6C                     	;# 
  4480  0F6D                     	;# 
  4481  0FE4                     	;# 
  4482  0FE5                     	;# 
  4483  0FE6                     	;# 
  4484  0FE7                     	;# 
  4485  0FE8                     	;# 
  4486  0FE9                     	;# 
  4487  0FEA                     	;# 
  4488  0FEB                     	;# 
  4489  0FED                     	;# 
  4490  0FEE                     	;# 
  4491  0FEF                     	;# 
  4492  0000                     	;# 
  4493  0001                     	;# 
  4494  0002                     	;# 
  4495  0003                     	;# 
  4496  0004                     	;# 
  4497  0005                     	;# 
  4498  0006                     	;# 
  4499  0007                     	;# 
  4500  0008                     	;# 
  4501  0009                     	;# 
  4502  000A                     	;# 
  4503  000B                     	;# 
  4504  000C                     	;# 
  4505  000D                     	;# 
  4506  000E                     	;# 
  4507  000F                     	;# 
  4508  0010                     	;# 
  4509  0011                     	;# 
  4510  0012                     	;# 
  4511  0013                     	;# 
  4512  0014                     	;# 
  4513  0015                     	;# 
  4514  0016                     	;# 
  4515  0017                     	;# 
  4516  0018                     	;# 
  4517  0019                     	;# 
  4518  001A                     	;# 
  4519  001C                     	;# 
  4520  001C                     	;# 
  4521  001D                     	;# 
  4522  001D                     	;# 
  4523  001E                     	;# 
  4524  001F                     	;# 
  4525  008C                     	;# 
  4526  008C                     	;# 
  4527  008D                     	;# 
  4528  008E                     	;# 
  4529  008E                     	;# 
  4530  008F                     	;# 
  4531  0090                     	;# 
  4532  0090                     	;# 
  4533  0091                     	;# 
  4534  0093                     	;# 
  4535  0094                     	;# 
  4536  0095                     	;# 
  4537  0096                     	;# 
  4538  0097                     	;# 
  4539  0098                     	;# 
  4540  0099                     	;# 
  4541  009A                     	;# 
  4542  009B                     	;# 
  4543  009C                     	;# 
  4544  009D                     	;# 
  4545  009E                     	;# 
  4546  010C                     	;# 
  4547  010D                     	;# 
  4548  010E                     	;# 
  4549  010E                     	;# 
  4550  010F                     	;# 
  4551  0110                     	;# 
  4552  0110                     	;# 
  4553  0111                     	;# 
  4554  0112                     	;# 
  4555  0112                     	;# 
  4556  0113                     	;# 
  4557  0114                     	;# 
  4558  0114                     	;# 
  4559  0115                     	;# 
  4560  0116                     	;# 
  4561  0116                     	;# 
  4562  0117                     	;# 
  4563  0119                     	;# 
  4564  0119                     	;# 
  4565  0119                     	;# 
  4566  011A                     	;# 
  4567  011A                     	;# 
  4568  011A                     	;# 
  4569  011B                     	;# 
  4570  011B                     	;# 
  4571  011B                     	;# 
  4572  011B                     	;# 
  4573  011B                     	;# 
  4574  011C                     	;# 
  4575  011C                     	;# 
  4576  011C                     	;# 
  4577  011D                     	;# 
  4578  011D                     	;# 
  4579  011D                     	;# 
  4580  011E                     	;# 
  4581  011E                     	;# 
  4582  011E                     	;# 
  4583  011F                     	;# 
  4584  011F                     	;# 
  4585  011F                     	;# 
  4586  011F                     	;# 
  4587  011F                     	;# 
  4588  018C                     	;# 
  4589  018D                     	;# 
  4590  018E                     	;# 
  4591  018F                     	;# 
  4592  0190                     	;# 
  4593  0191                     	;# 
  4594  0192                     	;# 
  4595  0196                     	;# 
  4596  0197                     	;# 
  4597  0198                     	;# 
  4598  0199                     	;# 
  4599  019A                     	;# 
  4600  019B                     	;# 
  4601  019C                     	;# 
  4602  020C                     	;# 
  4603  020C                     	;# 
  4604  020D                     	;# 
  4605  020E                     	;# 
  4606  020F                     	;# 
  4607  020F                     	;# 
  4608  0210                     	;# 
  4609  0210                     	;# 
  4610  0211                     	;# 
  4611  0211                     	;# 
  4612  0212                     	;# 
  4613  0212                     	;# 
  4614  0213                     	;# 
  4615  0214                     	;# 
  4616  0215                     	;# 
  4617  0215                     	;# 
  4618  0216                     	;# 
  4619  0216                     	;# 
  4620  0217                     	;# 
  4621  0217                     	;# 
  4622  0218                     	;# 
  4623  0218                     	;# 
  4624  0219                     	;# 
  4625  021A                     	;# 
  4626  021B                     	;# 
  4627  021B                     	;# 
  4628  021C                     	;# 
  4629  021C                     	;# 
  4630  021D                     	;# 
  4631  021D                     	;# 
  4632  021E                     	;# 
  4633  021F                     	;# 
  4634  028C                     	;# 
  4635  028C                     	;# 
  4636  028D                     	;# 
  4637  028D                     	;# 
  4638  028E                     	;# 
  4639  028F                     	;# 
  4640  0290                     	;# 
  4641  0290                     	;# 
  4642  0291                     	;# 
  4643  0292                     	;# 
  4644  0292                     	;# 
  4645  0293                     	;# 
  4646  0293                     	;# 
  4647  0294                     	;# 
  4648  0295                     	;# 
  4649  0296                     	;# 
  4650  0296                     	;# 
  4651  0297                     	;# 
  4652  0298                     	;# 
  4653  0298                     	;# 
  4654  0299                     	;# 
  4655  0299                     	;# 
  4656  029A                     	;# 
  4657  029B                     	;# 
  4658  029C                     	;# 
  4659  029C                     	;# 
  4660  029D                     	;# 
  4661  030C                     	;# 
  4662  030C                     	;# 
  4663  030D                     	;# 
  4664  030E                     	;# 
  4665  030F                     	;# 
  4666  0310                     	;# 
  4667  0310                     	;# 
  4668  0311                     	;# 
  4669  0312                     	;# 
  4670  0313                     	;# 
  4671  0314                     	;# 
  4672  0314                     	;# 
  4673  0315                     	;# 
  4674  0316                     	;# 
  4675  0317                     	;# 
  4676  0318                     	;# 
  4677  0318                     	;# 
  4678  0319                     	;# 
  4679  031A                     	;# 
  4680  031B                     	;# 
  4681  031C                     	;# 
  4682  031C                     	;# 
  4683  031D                     	;# 
  4684  031E                     	;# 
  4685  031F                     	;# 
  4686  038C                     	;# 
  4687  038C                     	;# 
  4688  038D                     	;# 
  4689  038E                     	;# 
  4690  0390                     	;# 
  4691  0390                     	;# 
  4692  0391                     	;# 
  4693  0392                     	;# 
  4694  040C                     	;# 
  4695  040D                     	;# 
  4696  040E                     	;# 
  4697  040F                     	;# 
  4698  0410                     	;# 
  4699  0411                     	;# 
  4700  0416                     	;# 
  4701  0416                     	;# 
  4702  0417                     	;# 
  4703  0418                     	;# 
  4704  0418                     	;# 
  4705  0419                     	;# 
  4706  041A                     	;# 
  4707  041A                     	;# 
  4708  041B                     	;# 
  4709  041C                     	;# 
  4710  041C                     	;# 
  4711  041D                     	;# 
  4712  041E                     	;# 
  4713  041F                     	;# 
  4714  048C                     	;# 
  4715  048C                     	;# 
  4716  048D                     	;# 
  4717  048E                     	;# 
  4718  048F                     	;# 
  4719  048F                     	;# 
  4720  0490                     	;# 
  4721  0491                     	;# 
  4722  0492                     	;# 
  4723  0492                     	;# 
  4724  0493                     	;# 
  4725  0494                     	;# 
  4726  0495                     	;# 
  4727  0495                     	;# 
  4728  0496                     	;# 
  4729  0497                     	;# 
  4730  0498                     	;# 
  4731  0499                     	;# 
  4732  049A                     	;# 
  4733  049B                     	;# 
  4734  049C                     	;# 
  4735  049D                     	;# 
  4736  050C                     	;# 
  4737  050C                     	;# 
  4738  050D                     	;# 
  4739  050E                     	;# 
  4740  050F                     	;# 
  4741  050F                     	;# 
  4742  0510                     	;# 
  4743  0511                     	;# 
  4744  0512                     	;# 
  4745  0512                     	;# 
  4746  0513                     	;# 
  4747  0514                     	;# 
  4748  0515                     	;# 
  4749  0515                     	;# 
  4750  0516                     	;# 
  4751  0517                     	;# 
  4752  0518                     	;# 
  4753  0519                     	;# 
  4754  051A                     	;# 
  4755  051B                     	;# 
  4756  051C                     	;# 
  4757  051D                     	;# 
  4758  058C                     	;# 
  4759  058C                     	;# 
  4760  058D                     	;# 
  4761  058E                     	;# 
  4762  058F                     	;# 
  4763  058F                     	;# 
  4764  0590                     	;# 
  4765  0591                     	;# 
  4766  0592                     	;# 
  4767  0593                     	;# 
  4768  060C                     	;# 
  4769  060D                     	;# 
  4770  060E                     	;# 
  4771  060F                     	;# 
  4772  0610                     	;# 
  4773  0611                     	;# 
  4774  0612                     	;# 
  4775  0613                     	;# 
  4776  0614                     	;# 
  4777  0616                     	;# 
  4778  0617                     	;# 
  4779  0618                     	;# 
  4780  0619                     	;# 
  4781  061A                     	;# 
  4782  061B                     	;# 
  4783  061C                     	;# 
  4784  061D                     	;# 
  4785  061E                     	;# 
  4786  068C                     	;# 
  4787  068D                     	;# 
  4788  068E                     	;# 
  4789  068F                     	;# 
  4790  0690                     	;# 
  4791  0691                     	;# 
  4792  0692                     	;# 
  4793  0693                     	;# 
  4794  0694                     	;# 
  4795  070C                     	;# 
  4796  070D                     	;# 
  4797  070E                     	;# 
  4798  070F                     	;# 
  4799  0710                     	;# 
  4800  0711                     	;# 
  4801  0712                     	;# 
  4802  0713                     	;# 
  4803  0714                     	;# 
  4804  0716                     	;# 
  4805  0717                     	;# 
  4806  0718                     	;# 
  4807  0719                     	;# 
  4808  071A                     	;# 
  4809  071B                     	;# 
  4810  071C                     	;# 
  4811  071D                     	;# 
  4812  071E                     	;# 
  4813  0796                     	;# 
  4814  0797                     	;# 
  4815  0798                     	;# 
  4816  0799                     	;# 
  4817  079A                     	;# 
  4818  079B                     	;# 
  4819  080C                     	;# 
  4820  080D                     	;# 
  4821  080E                     	;# 
  4822  080F                     	;# 
  4823  0810                     	;# 
  4824  0811                     	;# 
  4825  0812                     	;# 
  4826  0813                     	;# 
  4827  0814                     	;# 
  4828  081A                     	;# 
  4829  081B                     	;# 
  4830  081C                     	;# 
  4831  081D                     	;# 
  4832  081E                     	;# 
  4833  081F                     	;# 
  4834  088C                     	;# 
  4835  088D                     	;# 
  4836  088E                     	;# 
  4837  088F                     	;# 
  4838  0890                     	;# 
  4839  0891                     	;# 
  4840  0892                     	;# 
  4841  0893                     	;# 
  4842  0895                     	;# 
  4843  0896                     	;# 
  4844  0897                     	;# 
  4845  0898                     	;# 
  4846  0899                     	;# 
  4847  089A                     	;# 
  4848  089B                     	;# 
  4849  090C                     	;# 
  4850  090E                     	;# 
  4851  090F                     	;# 
  4852  091F                     	;# 
  4853  091F                     	;# 
  4854  098F                     	;# 
  4855  098F                     	;# 
  4856  0990                     	;# 
  4857  0991                     	;# 
  4858  0992                     	;# 
  4859  0993                     	;# 
  4860  0994                     	;# 
  4861  0995                     	;# 
  4862  0996                     	;# 
  4863  0997                     	;# 
  4864  0E0F                     	;# 
  4865  0E10                     	;# 
  4866  0E11                     	;# 
  4867  0E12                     	;# 
  4868  0E13                     	;# 
  4869  0E14                     	;# 
  4870  0E15                     	;# 
  4871  0E16                     	;# 
  4872  0E17                     	;# 
  4873  0E18                     	;# 
  4874  0E19                     	;# 
  4875  0E1A                     	;# 
  4876  0E1B                     	;# 
  4877  0E1C                     	;# 
  4878  0E1D                     	;# 
  4879  0E1E                     	;# 
  4880  0E1F                     	;# 
  4881  0E20                     	;# 
  4882  0E21                     	;# 
  4883  0E22                     	;# 
  4884  0E23                     	;# 
  4885  0E24                     	;# 
  4886  0E25                     	;# 
  4887  0E26                     	;# 
  4888  0E27                     	;# 
  4889  0E28                     	;# 
  4890  0E29                     	;# 
  4891  0E2A                     	;# 
  4892  0E2B                     	;# 
  4893  0E2C                     	;# 
  4894  0E2D                     	;# 
  4895  0E2E                     	;# 
  4896  0E2F                     	;# 
  4897  0E30                     	;# 
  4898  0E31                     	;# 
  4899  0E32                     	;# 
  4900  0E33                     	;# 
  4901  0E34                     	;# 
  4902  0E35                     	;# 
  4903  0E36                     	;# 
  4904  0E37                     	;# 
  4905  0E8F                     	;# 
  4906  0E90                     	;# 
  4907  0E91                     	;# 
  4908  0E92                     	;# 
  4909  0E93                     	;# 
  4910  0E94                     	;# 
  4911  0E95                     	;# 
  4912  0E96                     	;# 
  4913  0E97                     	;# 
  4914  0E9C                     	;# 
  4915  0E9D                     	;# 
  4916  0E9E                     	;# 
  4917  0EA1                     	;# 
  4918  0EA2                     	;# 
  4919  0EA3                     	;# 
  4920  0EA4                     	;# 
  4921  0EA5                     	;# 
  4922  0EA9                     	;# 
  4923  0EAA                     	;# 
  4924  0EAB                     	;# 
  4925  0EAC                     	;# 
  4926  0EB1                     	;# 
  4927  0EB2                     	;# 
  4928  0EB3                     	;# 
  4929  0EB8                     	;# 
  4930  0EB9                     	;# 
  4931  0EBA                     	;# 
  4932  0EBB                     	;# 
  4933  0EBC                     	;# 
  4934  0EBD                     	;# 
  4935  0EBE                     	;# 
  4936  0EC3                     	;# 
  4937  0EC5                     	;# 
  4938  0EC6                     	;# 
  4939  0EC7                     	;# 
  4940  0EC8                     	;# 
  4941  0EC9                     	;# 
  4942  0ECA                     	;# 
  4943  0ECB                     	;# 
  4944  0ECC                     	;# 
  4945  0F10                     	;# 
  4946  0F11                     	;# 
  4947  0F12                     	;# 
  4948  0F13                     	;# 
  4949  0F14                     	;# 
  4950  0F15                     	;# 
  4951  0F16                     	;# 
  4952  0F17                     	;# 
  4953  0F18                     	;# 
  4954  0F19                     	;# 
  4955  0F1A                     	;# 
  4956  0F1B                     	;# 
  4957  0F1C                     	;# 
  4958  0F1D                     	;# 
  4959  0F1E                     	;# 
  4960  0F1F                     	;# 
  4961  0F20                     	;# 
  4962  0F21                     	;# 
  4963  0F22                     	;# 
  4964  0F23                     	;# 
  4965  0F24                     	;# 
  4966  0F25                     	;# 
  4967  0F26                     	;# 
  4968  0F27                     	;# 
  4969  0F28                     	;# 
  4970  0F29                     	;# 
  4971  0F2A                     	;# 
  4972  0F2B                     	;# 
  4973  0F2C                     	;# 
  4974  0F2D                     	;# 
  4975  0F2E                     	;# 
  4976  0F2F                     	;# 
  4977  0F30                     	;# 
  4978  0F31                     	;# 
  4979  0F32                     	;# 
  4980  0F38                     	;# 
  4981  0F39                     	;# 
  4982  0F3A                     	;# 
  4983  0F3B                     	;# 
  4984  0F3C                     	;# 
  4985  0F3D                     	;# 
  4986  0F3E                     	;# 
  4987  0F3F                     	;# 
  4988  0F40                     	;# 
  4989  0F41                     	;# 
  4990  0F43                     	;# 
  4991  0F44                     	;# 
  4992  0F45                     	;# 
  4993  0F46                     	;# 
  4994  0F47                     	;# 
  4995  0F48                     	;# 
  4996  0F49                     	;# 
  4997  0F4A                     	;# 
  4998  0F4B                     	;# 
  4999  0F4C                     	;# 
  5000  0F4E                     	;# 
  5001  0F4F                     	;# 
  5002  0F50                     	;# 
  5003  0F51                     	;# 
  5004  0F52                     	;# 
  5005  0F53                     	;# 
  5006  0F54                     	;# 
  5007  0F55                     	;# 
  5008  0F56                     	;# 
  5009  0F57                     	;# 
  5010  0F59                     	;# 
  5011  0F5A                     	;# 
  5012  0F5B                     	;# 
  5013  0F5C                     	;# 
  5014  0F5D                     	;# 
  5015  0F61                     	;# 
  5016  0F62                     	;# 
  5017  0F64                     	;# 
  5018  0F65                     	;# 
  5019  0F66                     	;# 
  5020  0F67                     	;# 
  5021  0F68                     	;# 
  5022  0F69                     	;# 
  5023  0F6A                     	;# 
  5024  0F6B                     	;# 
  5025  0F6C                     	;# 
  5026  0F6D                     	;# 
  5027  0FE4                     	;# 
  5028  0FE5                     	;# 
  5029  0FE6                     	;# 
  5030  0FE7                     	;# 
  5031  0FE8                     	;# 
  5032  0FE9                     	;# 
  5033  0FEA                     	;# 
  5034  0FEB                     	;# 
  5035  0FED                     	;# 
  5036  0FEE                     	;# 
  5037  0FEF                     	;# 
  5038  0000                     	;# 
  5039  0001                     	;# 
  5040  0002                     	;# 
  5041  0003                     	;# 
  5042  0004                     	;# 
  5043  0005                     	;# 
  5044  0006                     	;# 
  5045  0007                     	;# 
  5046  0008                     	;# 
  5047  0009                     	;# 
  5048  000A                     	;# 
  5049  000B                     	;# 
  5050  000C                     	;# 
  5051  000D                     	;# 
  5052  000E                     	;# 
  5053  000F                     	;# 
  5054  0010                     	;# 
  5055  0011                     	;# 
  5056  0012                     	;# 
  5057  0013                     	;# 
  5058  0014                     	;# 
  5059  0015                     	;# 
  5060  0016                     	;# 
  5061  0017                     	;# 
  5062  0018                     	;# 
  5063  0019                     	;# 
  5064  001A                     	;# 
  5065  001C                     	;# 
  5066  001C                     	;# 
  5067  001D                     	;# 
  5068  001D                     	;# 
  5069  001E                     	;# 
  5070  001F                     	;# 
  5071  008C                     	;# 
  5072  008C                     	;# 
  5073  008D                     	;# 
  5074  008E                     	;# 
  5075  008E                     	;# 
  5076  008F                     	;# 
  5077  0090                     	;# 
  5078  0090                     	;# 
  5079  0091                     	;# 
  5080  0093                     	;# 
  5081  0094                     	;# 
  5082  0095                     	;# 
  5083  0096                     	;# 
  5084  0097                     	;# 
  5085  0098                     	;# 
  5086  0099                     	;# 
  5087  009A                     	;# 
  5088  009B                     	;# 
  5089  009C                     	;# 
  5090  009D                     	;# 
  5091  009E                     	;# 
  5092  010C                     	;# 
  5093  010D                     	;# 
  5094  010E                     	;# 
  5095  010E                     	;# 
  5096  010F                     	;# 
  5097  0110                     	;# 
  5098  0110                     	;# 
  5099  0111                     	;# 
  5100  0112                     	;# 
  5101  0112                     	;# 
  5102  0113                     	;# 
  5103  0114                     	;# 
  5104  0114                     	;# 
  5105  0115                     	;# 
  5106  0116                     	;# 
  5107  0116                     	;# 
  5108  0117                     	;# 
  5109  0119                     	;# 
  5110  0119                     	;# 
  5111  0119                     	;# 
  5112  011A                     	;# 
  5113  011A                     	;# 
  5114  011A                     	;# 
  5115  011B                     	;# 
  5116  011B                     	;# 
  5117  011B                     	;# 
  5118  011B                     	;# 
  5119  011B                     	;# 
  5120  011C                     	;# 
  5121  011C                     	;# 
  5122  011C                     	;# 
  5123  011D                     	;# 
  5124  011D                     	;# 
  5125  011D                     	;# 
  5126  011E                     	;# 
  5127  011E                     	;# 
  5128  011E                     	;# 
  5129  011F                     	;# 
  5130  011F                     	;# 
  5131  011F                     	;# 
  5132  011F                     	;# 
  5133  011F                     	;# 
  5134  018C                     	;# 
  5135  018D                     	;# 
  5136  018E                     	;# 
  5137  018F                     	;# 
  5138  0190                     	;# 
  5139  0191                     	;# 
  5140  0192                     	;# 
  5141  0196                     	;# 
  5142  0197                     	;# 
  5143  0198                     	;# 
  5144  0199                     	;# 
  5145  019A                     	;# 
  5146  019B                     	;# 
  5147  019C                     	;# 
  5148  020C                     	;# 
  5149  020C                     	;# 
  5150  020D                     	;# 
  5151  020E                     	;# 
  5152  020F                     	;# 
  5153  020F                     	;# 
  5154  0210                     	;# 
  5155  0210                     	;# 
  5156  0211                     	;# 
  5157  0211                     	;# 
  5158  0212                     	;# 
  5159  0212                     	;# 
  5160  0213                     	;# 
  5161  0214                     	;# 
  5162  0215                     	;# 
  5163  0215                     	;# 
  5164  0216                     	;# 
  5165  0216                     	;# 
  5166  0217                     	;# 
  5167  0217                     	;# 
  5168  0218                     	;# 
  5169  0218                     	;# 
  5170  0219                     	;# 
  5171  021A                     	;# 
  5172  021B                     	;# 
  5173  021B                     	;# 
  5174  021C                     	;# 
  5175  021C                     	;# 
  5176  021D                     	;# 
  5177  021D                     	;# 
  5178  021E                     	;# 
  5179  021F                     	;# 
  5180  028C                     	;# 
  5181  028C                     	;# 
  5182  028D                     	;# 
  5183  028D                     	;# 
  5184  028E                     	;# 
  5185  028F                     	;# 
  5186  0290                     	;# 
  5187  0290                     	;# 
  5188  0291                     	;# 
  5189  0292                     	;# 
  5190  0292                     	;# 
  5191  0293                     	;# 
  5192  0293                     	;# 
  5193  0294                     	;# 
  5194  0295                     	;# 
  5195  0296                     	;# 
  5196  0296                     	;# 
  5197  0297                     	;# 
  5198  0298                     	;# 
  5199  0298                     	;# 
  5200  0299                     	;# 
  5201  0299                     	;# 
  5202  029A                     	;# 
  5203  029B                     	;# 
  5204  029C                     	;# 
  5205  029C                     	;# 
  5206  029D                     	;# 
  5207  030C                     	;# 
  5208  030C                     	;# 
  5209  030D                     	;# 
  5210  030E                     	;# 
  5211  030F                     	;# 
  5212  0310                     	;# 
  5213  0310                     	;# 
  5214  0311                     	;# 
  5215  0312                     	;# 
  5216  0313                     	;# 
  5217  0314                     	;# 
  5218  0314                     	;# 
  5219  0315                     	;# 
  5220  0316                     	;# 
  5221  0317                     	;# 
  5222  0318                     	;# 
  5223  0318                     	;# 
  5224  0319                     	;# 
  5225  031A                     	;# 
  5226  031B                     	;# 
  5227  031C                     	;# 
  5228  031C                     	;# 
  5229  031D                     	;# 
  5230  031E                     	;# 
  5231  031F                     	;# 
  5232  038C                     	;# 
  5233  038C                     	;# 
  5234  038D                     	;# 
  5235  038E                     	;# 
  5236  0390                     	;# 
  5237  0390                     	;# 
  5238  0391                     	;# 
  5239  0392                     	;# 
  5240  040C                     	;# 
  5241  040D                     	;# 
  5242  040E                     	;# 
  5243  040F                     	;# 
  5244  0410                     	;# 
  5245  0411                     	;# 
  5246  0416                     	;# 
  5247  0416                     	;# 
  5248  0417                     	;# 
  5249  0418                     	;# 
  5250  0418                     	;# 
  5251  0419                     	;# 
  5252  041A                     	;# 
  5253  041A                     	;# 
  5254  041B                     	;# 
  5255  041C                     	;# 
  5256  041C                     	;# 
  5257  041D                     	;# 
  5258  041E                     	;# 
  5259  041F                     	;# 
  5260  048C                     	;# 
  5261  048C                     	;# 
  5262  048D                     	;# 
  5263  048E                     	;# 
  5264  048F                     	;# 
  5265  048F                     	;# 
  5266  0490                     	;# 
  5267  0491                     	;# 
  5268  0492                     	;# 
  5269  0492                     	;# 
  5270  0493                     	;# 
  5271  0494                     	;# 
  5272  0495                     	;# 
  5273  0495                     	;# 
  5274  0496                     	;# 
  5275  0497                     	;# 
  5276  0498                     	;# 
  5277  0499                     	;# 
  5278  049A                     	;# 
  5279  049B                     	;# 
  5280  049C                     	;# 
  5281  049D                     	;# 
  5282  050C                     	;# 
  5283  050C                     	;# 
  5284  050D                     	;# 
  5285  050E                     	;# 
  5286  050F                     	;# 
  5287  050F                     	;# 
  5288  0510                     	;# 
  5289  0511                     	;# 
  5290  0512                     	;# 
  5291  0512                     	;# 
  5292  0513                     	;# 
  5293  0514                     	;# 
  5294  0515                     	;# 
  5295  0515                     	;# 
  5296  0516                     	;# 
  5297  0517                     	;# 
  5298  0518                     	;# 
  5299  0519                     	;# 
  5300  051A                     	;# 
  5301  051B                     	;# 
  5302  051C                     	;# 
  5303  051D                     	;# 
  5304  058C                     	;# 
  5305  058C                     	;# 
  5306  058D                     	;# 
  5307  058E                     	;# 
  5308  058F                     	;# 
  5309  058F                     	;# 
  5310  0590                     	;# 
  5311  0591                     	;# 
  5312  0592                     	;# 
  5313  0593                     	;# 
  5314  060C                     	;# 
  5315  060D                     	;# 
  5316  060E                     	;# 
  5317  060F                     	;# 
  5318  0610                     	;# 
  5319  0611                     	;# 
  5320  0612                     	;# 
  5321  0613                     	;# 
  5322  0614                     	;# 
  5323  0616                     	;# 
  5324  0617                     	;# 
  5325  0618                     	;# 
  5326  0619                     	;# 
  5327  061A                     	;# 
  5328  061B                     	;# 
  5329  061C                     	;# 
  5330  061D                     	;# 
  5331  061E                     	;# 
  5332  068C                     	;# 
  5333  068D                     	;# 
  5334  068E                     	;# 
  5335  068F                     	;# 
  5336  0690                     	;# 
  5337  0691                     	;# 
  5338  0692                     	;# 
  5339  0693                     	;# 
  5340  0694                     	;# 
  5341  070C                     	;# 
  5342  070D                     	;# 
  5343  070E                     	;# 
  5344  070F                     	;# 
  5345  0710                     	;# 
  5346  0711                     	;# 
  5347  0712                     	;# 
  5348  0713                     	;# 
  5349  0714                     	;# 
  5350  0716                     	;# 
  5351  0717                     	;# 
  5352  0718                     	;# 
  5353  0719                     	;# 
  5354  071A                     	;# 
  5355  071B                     	;# 
  5356  071C                     	;# 
  5357  071D                     	;# 
  5358  071E                     	;# 
  5359  0796                     	;# 
  5360  0797                     	;# 
  5361  0798                     	;# 
  5362  0799                     	;# 
  5363  079A                     	;# 
  5364  079B                     	;# 
  5365  080C                     	;# 
  5366  080D                     	;# 
  5367  080E                     	;# 
  5368  080F                     	;# 
  5369  0810                     	;# 
  5370  0811                     	;# 
  5371  0812                     	;# 
  5372  0813                     	;# 
  5373  0814                     	;# 
  5374  081A                     	;# 
  5375  081B                     	;# 
  5376  081C                     	;# 
  5377  081D                     	;# 
  5378  081E                     	;# 
  5379  081F                     	;# 
  5380  088C                     	;# 
  5381  088D                     	;# 
  5382  088E                     	;# 
  5383  088F                     	;# 
  5384  0890                     	;# 
  5385  0891                     	;# 
  5386  0892                     	;# 
  5387  0893                     	;# 
  5388  0895                     	;# 
  5389  0896                     	;# 
  5390  0897                     	;# 
  5391  0898                     	;# 
  5392  0899                     	;# 
  5393  089A                     	;# 
  5394  089B                     	;# 
  5395  090C                     	;# 
  5396  090E                     	;# 
  5397  090F                     	;# 
  5398  091F                     	;# 
  5399  091F                     	;# 
  5400  098F                     	;# 
  5401  098F                     	;# 
  5402  0990                     	;# 
  5403  0991                     	;# 
  5404  0992                     	;# 
  5405  0993                     	;# 
  5406  0994                     	;# 
  5407  0995                     	;# 
  5408  0996                     	;# 
  5409  0997                     	;# 
  5410  0E0F                     	;# 
  5411  0E10                     	;# 
  5412  0E11                     	;# 
  5413  0E12                     	;# 
  5414  0E13                     	;# 
  5415  0E14                     	;# 
  5416  0E15                     	;# 
  5417  0E16                     	;# 
  5418  0E17                     	;# 
  5419  0E18                     	;# 
  5420  0E19                     	;# 
  5421  0E1A                     	;# 
  5422  0E1B                     	;# 
  5423  0E1C                     	;# 
  5424  0E1D                     	;# 
  5425  0E1E                     	;# 
  5426  0E1F                     	;# 
  5427  0E20                     	;# 
  5428  0E21                     	;# 
  5429  0E22                     	;# 
  5430  0E23                     	;# 
  5431  0E24                     	;# 
  5432  0E25                     	;# 
  5433  0E26                     	;# 
  5434  0E27                     	;# 
  5435  0E28                     	;# 
  5436  0E29                     	;# 
  5437  0E2A                     	;# 
  5438  0E2B                     	;# 
  5439  0E2C                     	;# 
  5440  0E2D                     	;# 
  5441  0E2E                     	;# 
  5442  0E2F                     	;# 
  5443  0E30                     	;# 
  5444  0E31                     	;# 
  5445  0E32                     	;# 
  5446  0E33                     	;# 
  5447  0E34                     	;# 
  5448  0E35                     	;# 
  5449  0E36                     	;# 
  5450  0E37                     	;# 
  5451  0E8F                     	;# 
  5452  0E90                     	;# 
  5453  0E91                     	;# 
  5454  0E92                     	;# 
  5455  0E93                     	;# 
  5456  0E94                     	;# 
  5457  0E95                     	;# 
  5458  0E96                     	;# 
  5459  0E97                     	;# 
  5460  0E9C                     	;# 
  5461  0E9D                     	;# 
  5462  0E9E                     	;# 
  5463  0EA1                     	;# 
  5464  0EA2                     	;# 
  5465  0EA3                     	;# 
  5466  0EA4                     	;# 
  5467  0EA5                     	;# 
  5468  0EA9                     	;# 
  5469  0EAA                     	;# 
  5470  0EAB                     	;# 
  5471  0EAC                     	;# 
  5472  0EB1                     	;# 
  5473  0EB2                     	;# 
  5474  0EB3                     	;# 
  5475  0EB8                     	;# 
  5476  0EB9                     	;# 
  5477  0EBA                     	;# 
  5478  0EBB                     	;# 
  5479  0EBC                     	;# 
  5480  0EBD                     	;# 
  5481  0EBE                     	;# 
  5482  0EC3                     	;# 
  5483  0EC5                     	;# 
  5484  0EC6                     	;# 
  5485  0EC7                     	;# 
  5486  0EC8                     	;# 
  5487  0EC9                     	;# 
  5488  0ECA                     	;# 
  5489  0ECB                     	;# 
  5490  0ECC                     	;# 
  5491  0F10                     	;# 
  5492  0F11                     	;# 
  5493  0F12                     	;# 
  5494  0F13                     	;# 
  5495  0F14                     	;# 
  5496  0F15                     	;# 
  5497  0F16                     	;# 
  5498  0F17                     	;# 
  5499  0F18                     	;# 
  5500  0F19                     	;# 
  5501  0F1A                     	;# 
  5502  0F1B                     	;# 
  5503  0F1C                     	;# 
  5504  0F1D                     	;# 
  5505  0F1E                     	;# 
  5506  0F1F                     	;# 
  5507  0F20                     	;# 
  5508  0F21                     	;# 
  5509  0F22                     	;# 
  5510  0F23                     	;# 
  5511  0F24                     	;# 
  5512  0F25                     	;# 
  5513  0F26                     	;# 
  5514  0F27                     	;# 
  5515  0F28                     	;# 
  5516  0F29                     	;# 
  5517  0F2A                     	;# 
  5518  0F2B                     	;# 
  5519  0F2C                     	;# 
  5520  0F2D                     	;# 
  5521  0F2E                     	;# 
  5522  0F2F                     	;# 
  5523  0F30                     	;# 
  5524  0F31                     	;# 
  5525  0F32                     	;# 
  5526  0F38                     	;# 
  5527  0F39                     	;# 
  5528  0F3A                     	;# 
  5529  0F3B                     	;# 
  5530  0F3C                     	;# 
  5531  0F3D                     	;# 
  5532  0F3E                     	;# 
  5533  0F3F                     	;# 
  5534  0F40                     	;# 
  5535  0F41                     	;# 
  5536  0F43                     	;# 
  5537  0F44                     	;# 
  5538  0F45                     	;# 
  5539  0F46                     	;# 
  5540  0F47                     	;# 
  5541  0F48                     	;# 
  5542  0F49                     	;# 
  5543  0F4A                     	;# 
  5544  0F4B                     	;# 
  5545  0F4C                     	;# 
  5546  0F4E                     	;# 
  5547  0F4F                     	;# 
  5548  0F50                     	;# 
  5549  0F51                     	;# 
  5550  0F52                     	;# 
  5551  0F53                     	;# 
  5552  0F54                     	;# 
  5553  0F55                     	;# 
  5554  0F56                     	;# 
  5555  0F57                     	;# 
  5556  0F59                     	;# 
  5557  0F5A                     	;# 
  5558  0F5B                     	;# 
  5559  0F5C                     	;# 
  5560  0F5D                     	;# 
  5561  0F61                     	;# 
  5562  0F62                     	;# 
  5563  0F64                     	;# 
  5564  0F65                     	;# 
  5565  0F66                     	;# 
  5566  0F67                     	;# 
  5567  0F68                     	;# 
  5568  0F69                     	;# 
  5569  0F6A                     	;# 
  5570  0F6B                     	;# 
  5571  0F6C                     	;# 
  5572  0F6D                     	;# 
  5573  0FE4                     	;# 
  5574  0FE5                     	;# 
  5575  0FE6                     	;# 
  5576  0FE7                     	;# 
  5577  0FE8                     	;# 
  5578  0FE9                     	;# 
  5579  0FEA                     	;# 
  5580  0FEB                     	;# 
  5581  0FED                     	;# 
  5582  0FEE                     	;# 
  5583  0FEF                     	;# 
  5584  0000                     	;# 
  5585  0001                     	;# 
  5586  0002                     	;# 
  5587  0003                     	;# 
  5588  0004                     	;# 
  5589  0005                     	;# 
  5590  0006                     	;# 
  5591  0007                     	;# 
  5592  0008                     	;# 
  5593  0009                     	;# 
  5594  000A                     	;# 
  5595  000B                     	;# 
  5596  000C                     	;# 
  5597  000D                     	;# 
  5598  000E                     	;# 
  5599  000F                     	;# 
  5600  0010                     	;# 
  5601  0011                     	;# 
  5602  0012                     	;# 
  5603  0013                     	;# 
  5604  0014                     	;# 
  5605  0015                     	;# 
  5606  0016                     	;# 
  5607  0017                     	;# 
  5608  0018                     	;# 
  5609  0019                     	;# 
  5610  001A                     	;# 
  5611  001C                     	;# 
  5612  001C                     	;# 
  5613  001D                     	;# 
  5614  001D                     	;# 
  5615  001E                     	;# 
  5616  001F                     	;# 
  5617  008C                     	;# 
  5618  008C                     	;# 
  5619  008D                     	;# 
  5620  008E                     	;# 
  5621  008E                     	;# 
  5622  008F                     	;# 
  5623  0090                     	;# 
  5624  0090                     	;# 
  5625  0091                     	;# 
  5626  0093                     	;# 
  5627  0094                     	;# 
  5628  0095                     	;# 
  5629  0096                     	;# 
  5630  0097                     	;# 
  5631  0098                     	;# 
  5632  0099                     	;# 
  5633  009A                     	;# 
  5634  009B                     	;# 
  5635  009C                     	;# 
  5636  009D                     	;# 
  5637  009E                     	;# 
  5638  010C                     	;# 
  5639  010D                     	;# 
  5640  010E                     	;# 
  5641  010E                     	;# 
  5642  010F                     	;# 
  5643  0110                     	;# 
  5644  0110                     	;# 
  5645  0111                     	;# 
  5646  0112                     	;# 
  5647  0112                     	;# 
  5648  0113                     	;# 
  5649  0114                     	;# 
  5650  0114                     	;# 
  5651  0115                     	;# 
  5652  0116                     	;# 
  5653  0116                     	;# 
  5654  0117                     	;# 
  5655  0119                     	;# 
  5656  0119                     	;# 
  5657  0119                     	;# 
  5658  011A                     	;# 
  5659  011A                     	;# 
  5660  011A                     	;# 
  5661  011B                     	;# 
  5662  011B                     	;# 
  5663  011B                     	;# 
  5664  011B                     	;# 
  5665  011B                     	;# 
  5666  011C                     	;# 
  5667  011C                     	;# 
  5668  011C                     	;# 
  5669  011D                     	;# 
  5670  011D                     	;# 
  5671  011D                     	;# 
  5672  011E                     	;# 
  5673  011E                     	;# 
  5674  011E                     	;# 
  5675  011F                     	;# 
  5676  011F                     	;# 
  5677  011F                     	;# 
  5678  011F                     	;# 
  5679  011F                     	;# 
  5680  018C                     	;# 
  5681  018D                     	;# 
  5682  018E                     	;# 
  5683  018F                     	;# 
  5684  0190                     	;# 
  5685  0191                     	;# 
  5686  0192                     	;# 
  5687  0196                     	;# 
  5688  0197                     	;# 
  5689  0198                     	;# 
  5690  0199                     	;# 
  5691  019A                     	;# 
  5692  019B                     	;# 
  5693  019C                     	;# 
  5694  020C                     	;# 
  5695  020C                     	;# 
  5696  020D                     	;# 
  5697  020E                     	;# 
  5698  020F                     	;# 
  5699  020F                     	;# 
  5700  0210                     	;# 
  5701  0210                     	;# 
  5702  0211                     	;# 
  5703  0211                     	;# 
  5704  0212                     	;# 
  5705  0212                     	;# 
  5706  0213                     	;# 
  5707  0214                     	;# 
  5708  0215                     	;# 
  5709  0215                     	;# 
  5710  0216                     	;# 
  5711  0216                     	;# 
  5712  0217                     	;# 
  5713  0217                     	;# 
  5714  0218                     	;# 
  5715  0218                     	;# 
  5716  0219                     	;# 
  5717  021A                     	;# 
  5718  021B                     	;# 
  5719  021B                     	;# 
  5720  021C                     	;# 
  5721  021C                     	;# 
  5722  021D                     	;# 
  5723  021D                     	;# 
  5724  021E                     	;# 
  5725  021F                     	;# 
  5726  028C                     	;# 
  5727  028C                     	;# 
  5728  028D                     	;# 
  5729  028D                     	;# 
  5730  028E                     	;# 
  5731  028F                     	;# 
  5732  0290                     	;# 
  5733  0290                     	;# 
  5734  0291                     	;# 
  5735  0292                     	;# 
  5736  0292                     	;# 
  5737  0293                     	;# 
  5738  0293                     	;# 
  5739  0294                     	;# 
  5740  0295                     	;# 
  5741  0296                     	;# 
  5742  0296                     	;# 
  5743  0297                     	;# 
  5744  0298                     	;# 
  5745  0298                     	;# 
  5746  0299                     	;# 
  5747  0299                     	;# 
  5748  029A                     	;# 
  5749  029B                     	;# 
  5750  029C                     	;# 
  5751  029C                     	;# 
  5752  029D                     	;# 
  5753  030C                     	;# 
  5754  030C                     	;# 
  5755  030D                     	;# 
  5756  030E                     	;# 
  5757  030F                     	;# 
  5758  0310                     	;# 
  5759  0310                     	;# 
  5760  0311                     	;# 
  5761  0312                     	;# 
  5762  0313                     	;# 
  5763  0314                     	;# 
  5764  0314                     	;# 
  5765  0315                     	;# 
  5766  0316                     	;# 
  5767  0317                     	;# 
  5768  0318                     	;# 
  5769  0318                     	;# 
  5770  0319                     	;# 
  5771  031A                     	;# 
  5772  031B                     	;# 
  5773  031C                     	;# 
  5774  031C                     	;# 
  5775  031D                     	;# 
  5776  031E                     	;# 
  5777  031F                     	;# 
  5778  038C                     	;# 
  5779  038C                     	;# 
  5780  038D                     	;# 
  5781  038E                     	;# 
  5782  0390                     	;# 
  5783  0390                     	;# 
  5784  0391                     	;# 
  5785  0392                     	;# 
  5786  040C                     	;# 
  5787  040D                     	;# 
  5788  040E                     	;# 
  5789  040F                     	;# 
  5790  0410                     	;# 
  5791  0411                     	;# 
  5792  0416                     	;# 
  5793  0416                     	;# 
  5794  0417                     	;# 
  5795  0418                     	;# 
  5796  0418                     	;# 
  5797  0419                     	;# 
  5798  041A                     	;# 
  5799  041A                     	;# 
  5800  041B                     	;# 
  5801  041C                     	;# 
  5802  041C                     	;# 
  5803  041D                     	;# 
  5804  041E                     	;# 
  5805  041F                     	;# 
  5806  048C                     	;# 
  5807  048C                     	;# 
  5808  048D                     	;# 
  5809  048E                     	;# 
  5810  048F                     	;# 
  5811  048F                     	;# 
  5812  0490                     	;# 
  5813  0491                     	;# 
  5814  0492                     	;# 
  5815  0492                     	;# 
  5816  0493                     	;# 
  5817  0494                     	;# 
  5818  0495                     	;# 
  5819  0495                     	;# 
  5820  0496                     	;# 
  5821  0497                     	;# 
  5822  0498                     	;# 
  5823  0499                     	;# 
  5824  049A                     	;# 
  5825  049B                     	;# 
  5826  049C                     	;# 
  5827  049D                     	;# 
  5828  050C                     	;# 
  5829  050C                     	;# 
  5830  050D                     	;# 
  5831  050E                     	;# 
  5832  050F                     	;# 
  5833  050F                     	;# 
  5834  0510                     	;# 
  5835  0511                     	;# 
  5836  0512                     	;# 
  5837  0512                     	;# 
  5838  0513                     	;# 
  5839  0514                     	;# 
  5840  0515                     	;# 
  5841  0515                     	;# 
  5842  0516                     	;# 
  5843  0517                     	;# 
  5844  0518                     	;# 
  5845  0519                     	;# 
  5846  051A                     	;# 
  5847  051B                     	;# 
  5848  051C                     	;# 
  5849  051D                     	;# 
  5850  058C                     	;# 
  5851  058C                     	;# 
  5852  058D                     	;# 
  5853  058E                     	;# 
  5854  058F                     	;# 
  5855  058F                     	;# 
  5856  0590                     	;# 
  5857  0591                     	;# 
  5858  0592                     	;# 
  5859  0593                     	;# 
  5860  060C                     	;# 
  5861  060D                     	;# 
  5862  060E                     	;# 
  5863  060F                     	;# 
  5864  0610                     	;# 
  5865  0611                     	;# 
  5866  0612                     	;# 
  5867  0613                     	;# 
  5868  0614                     	;# 
  5869  0616                     	;# 
  5870  0617                     	;# 
  5871  0618                     	;# 
  5872  0619                     	;# 
  5873  061A                     	;# 
  5874  061B                     	;# 
  5875  061C                     	;# 
  5876  061D                     	;# 
  5877  061E                     	;# 
  5878  068C                     	;# 
  5879  068D                     	;# 
  5880  068E                     	;# 
  5881  068F                     	;# 
  5882  0690                     	;# 
  5883  0691                     	;# 
  5884  0692                     	;# 
  5885  0693                     	;# 
  5886  0694                     	;# 
  5887  070C                     	;# 
  5888  070D                     	;# 
  5889  070E                     	;# 
  5890  070F                     	;# 
  5891  0710                     	;# 
  5892  0711                     	;# 
  5893  0712                     	;# 
  5894  0713                     	;# 
  5895  0714                     	;# 
  5896  0716                     	;# 
  5897  0717                     	;# 
  5898  0718                     	;# 
  5899  0719                     	;# 
  5900  071A                     	;# 
  5901  071B                     	;# 
  5902  071C                     	;# 
  5903  071D                     	;# 
  5904  071E                     	;# 
  5905  0796                     	;# 
  5906  0797                     	;# 
  5907  0798                     	;# 
  5908  0799                     	;# 
  5909  079A                     	;# 
  5910  079B                     	;# 
  5911  080C                     	;# 
  5912  080D                     	;# 
  5913  080E                     	;# 
  5914  080F                     	;# 
  5915  0810                     	;# 
  5916  0811                     	;# 
  5917  0812                     	;# 
  5918  0813                     	;# 
  5919  0814                     	;# 
  5920  081A                     	;# 
  5921  081B                     	;# 
  5922  081C                     	;# 
  5923  081D                     	;# 
  5924  081E                     	;# 
  5925  081F                     	;# 
  5926  088C                     	;# 
  5927  088D                     	;# 
  5928  088E                     	;# 
  5929  088F                     	;# 
  5930  0890                     	;# 
  5931  0891                     	;# 
  5932  0892                     	;# 
  5933  0893                     	;# 
  5934  0895                     	;# 
  5935  0896                     	;# 
  5936  0897                     	;# 
  5937  0898                     	;# 
  5938  0899                     	;# 
  5939  089A                     	;# 
  5940  089B                     	;# 
  5941  090C                     	;# 
  5942  090E                     	;# 
  5943  090F                     	;# 
  5944  091F                     	;# 
  5945  091F                     	;# 
  5946  098F                     	;# 
  5947  098F                     	;# 
  5948  0990                     	;# 
  5949  0991                     	;# 
  5950  0992                     	;# 
  5951  0993                     	;# 
  5952  0994                     	;# 
  5953  0995                     	;# 
  5954  0996                     	;# 
  5955  0997                     	;# 
  5956  0E0F                     	;# 
  5957  0E10                     	;# 
  5958  0E11                     	;# 
  5959  0E12                     	;# 
  5960  0E13                     	;# 
  5961  0E14                     	;# 
  5962  0E15                     	;# 
  5963  0E16                     	;# 
  5964  0E17                     	;# 
  5965  0E18                     	;# 
  5966  0E19                     	;# 
  5967  0E1A                     	;# 
  5968  0E1B                     	;# 
  5969  0E1C                     	;# 
  5970  0E1D                     	;# 
  5971  0E1E                     	;# 
  5972  0E1F                     	;# 
  5973  0E20                     	;# 
  5974  0E21                     	;# 
  5975  0E22                     	;# 
  5976  0E23                     	;# 
  5977  0E24                     	;# 
  5978  0E25                     	;# 
  5979  0E26                     	;# 
  5980  0E27                     	;# 
  5981  0E28                     	;# 
  5982  0E29                     	;# 
  5983  0E2A                     	;# 
  5984  0E2B                     	;# 
  5985  0E2C                     	;# 
  5986  0E2D                     	;# 
  5987  0E2E                     	;# 
  5988  0E2F                     	;# 
  5989  0E30                     	;# 
  5990  0E31                     	;# 
  5991  0E32                     	;# 
  5992  0E33                     	;# 
  5993  0E34                     	;# 
  5994  0E35                     	;# 
  5995  0E36                     	;# 
  5996  0E37                     	;# 
  5997  0E8F                     	;# 
  5998  0E90                     	;# 
  5999  0E91                     	;# 
  6000  0E92                     	;# 
  6001  0E93                     	;# 
  6002  0E94                     	;# 
  6003  0E95                     	;# 
  6004  0E96                     	;# 
  6005  0E97                     	;# 
  6006  0E9C                     	;# 
  6007  0E9D                     	;# 
  6008  0E9E                     	;# 
  6009  0EA1                     	;# 
  6010  0EA2                     	;# 
  6011  0EA3                     	;# 
  6012  0EA4                     	;# 
  6013  0EA5                     	;# 
  6014  0EA9                     	;# 
  6015  0EAA                     	;# 
  6016  0EAB                     	;# 
  6017  0EAC                     	;# 
  6018  0EB1                     	;# 
  6019  0EB2                     	;# 
  6020  0EB3                     	;# 
  6021  0EB8                     	;# 
  6022  0EB9                     	;# 
  6023  0EBA                     	;# 
  6024  0EBB                     	;# 
  6025  0EBC                     	;# 
  6026  0EBD                     	;# 
  6027  0EBE                     	;# 
  6028  0EC3                     	;# 
  6029  0EC5                     	;# 
  6030  0EC6                     	;# 
  6031  0EC7                     	;# 
  6032  0EC8                     	;# 
  6033  0EC9                     	;# 
  6034  0ECA                     	;# 
  6035  0ECB                     	;# 
  6036  0ECC                     	;# 
  6037  0F10                     	;# 
  6038  0F11                     	;# 
  6039  0F12                     	;# 
  6040  0F13                     	;# 
  6041  0F14                     	;# 
  6042  0F15                     	;# 
  6043  0F16                     	;# 
  6044  0F17                     	;# 
  6045  0F18                     	;# 
  6046  0F19                     	;# 
  6047  0F1A                     	;# 
  6048  0F1B                     	;# 
  6049  0F1C                     	;# 
  6050  0F1D                     	;# 
  6051  0F1E                     	;# 
  6052  0F1F                     	;# 
  6053  0F20                     	;# 
  6054  0F21                     	;# 
  6055  0F22                     	;# 
  6056  0F23                     	;# 
  6057  0F24                     	;# 
  6058  0F25                     	;# 
  6059  0F26                     	;# 
  6060  0F27                     	;# 
  6061  0F28                     	;# 
  6062  0F29                     	;# 
  6063  0F2A                     	;# 
  6064  0F2B                     	;# 
  6065  0F2C                     	;# 
  6066  0F2D                     	;# 
  6067  0F2E                     	;# 
  6068  0F2F                     	;# 
  6069  0F30                     	;# 
  6070  0F31                     	;# 
  6071  0F32                     	;# 
  6072  0F38                     	;# 
  6073  0F39                     	;# 
  6074  0F3A                     	;# 
  6075  0F3B                     	;# 
  6076  0F3C                     	;# 
  6077  0F3D                     	;# 
  6078  0F3E                     	;# 
  6079  0F3F                     	;# 
  6080  0F40                     	;# 
  6081  0F41                     	;# 
  6082  0F43                     	;# 
  6083  0F44                     	;# 
  6084  0F45                     	;# 
  6085  0F46                     	;# 
  6086  0F47                     	;# 
  6087  0F48                     	;# 
  6088  0F49                     	;# 
  6089  0F4A                     	;# 
  6090  0F4B                     	;# 
  6091  0F4C                     	;# 
  6092  0F4E                     	;# 
  6093  0F4F                     	;# 
  6094  0F50                     	;# 
  6095  0F51                     	;# 
  6096  0F52                     	;# 
  6097  0F53                     	;# 
  6098  0F54                     	;# 
  6099  0F55                     	;# 
  6100  0F56                     	;# 
  6101  0F57                     	;# 
  6102  0F59                     	;# 
  6103  0F5A                     	;# 
  6104  0F5B                     	;# 
  6105  0F5C                     	;# 
  6106  0F5D                     	;# 
  6107  0F61                     	;# 
  6108  0F62                     	;# 
  6109  0F64                     	;# 
  6110  0F65                     	;# 
  6111  0F66                     	;# 
  6112  0F67                     	;# 
  6113  0F68                     	;# 
  6114  0F69                     	;# 
  6115  0F6A                     	;# 
  6116  0F6B                     	;# 
  6117  0F6C                     	;# 
  6118  0F6D                     	;# 
  6119  0FE4                     	;# 
  6120  0FE5                     	;# 
  6121  0FE6                     	;# 
  6122  0FE7                     	;# 
  6123  0FE8                     	;# 
  6124  0FE9                     	;# 
  6125  0FEA                     	;# 
  6126  0FEB                     	;# 
  6127  0FED                     	;# 
  6128  0FEE                     	;# 
  6129  0FEF                     	;# 
  6130  0000                     	;# 
  6131  0001                     	;# 
  6132  0002                     	;# 
  6133  0003                     	;# 
  6134  0004                     	;# 
  6135  0005                     	;# 
  6136  0006                     	;# 
  6137  0007                     	;# 
  6138  0008                     	;# 
  6139  0009                     	;# 
  6140  000A                     	;# 
  6141  000B                     	;# 
  6142  000C                     	;# 
  6143  000D                     	;# 
  6144  000E                     	;# 
  6145  000F                     	;# 
  6146  0010                     	;# 
  6147  0011                     	;# 
  6148  0012                     	;# 
  6149  0013                     	;# 
  6150  0014                     	;# 
  6151  0015                     	;# 
  6152  0016                     	;# 
  6153  0017                     	;# 
  6154  0018                     	;# 
  6155  0019                     	;# 
  6156  001A                     	;# 
  6157  001C                     	;# 
  6158  001C                     	;# 
  6159  001D                     	;# 
  6160  001D                     	;# 
  6161  001E                     	;# 
  6162  001F                     	;# 
  6163  008C                     	;# 
  6164  008C                     	;# 
  6165  008D                     	;# 
  6166  008E                     	;# 
  6167  008E                     	;# 
  6168  008F                     	;# 
  6169  0090                     	;# 
  6170  0090                     	;# 
  6171  0091                     	;# 
  6172  0093                     	;# 
  6173  0094                     	;# 
  6174  0095                     	;# 
  6175  0096                     	;# 
  6176  0097                     	;# 
  6177  0098                     	;# 
  6178  0099                     	;# 
  6179  009A                     	;# 
  6180  009B                     	;# 
  6181  009C                     	;# 
  6182  009D                     	;# 
  6183  009E                     	;# 
  6184  010C                     	;# 
  6185  010D                     	;# 
  6186  010E                     	;# 
  6187  010E                     	;# 
  6188  010F                     	;# 
  6189  0110                     	;# 
  6190  0110                     	;# 
  6191  0111                     	;# 
  6192  0112                     	;# 
  6193  0112                     	;# 
  6194  0113                     	;# 
  6195  0114                     	;# 
  6196  0114                     	;# 
  6197  0115                     	;# 
  6198  0116                     	;# 
  6199  0116                     	;# 
  6200  0117                     	;# 
  6201  0119                     	;# 
  6202  0119                     	;# 
  6203  0119                     	;# 
  6204  011A                     	;# 
  6205  011A                     	;# 
  6206  011A                     	;# 
  6207  011B                     	;# 
  6208  011B                     	;# 
  6209  011B                     	;# 
  6210  011B                     	;# 
  6211  011B                     	;# 
  6212  011C                     	;# 
  6213  011C                     	;# 
  6214  011C                     	;# 
  6215  011D                     	;# 
  6216  011D                     	;# 
  6217  011D                     	;# 
  6218  011E                     	;# 
  6219  011E                     	;# 
  6220  011E                     	;# 
  6221  011F                     	;# 
  6222  011F                     	;# 
  6223  011F                     	;# 
  6224  011F                     	;# 
  6225  011F                     	;# 
  6226  018C                     	;# 
  6227  018D                     	;# 
  6228  018E                     	;# 
  6229  018F                     	;# 
  6230  0190                     	;# 
  6231  0191                     	;# 
  6232  0192                     	;# 
  6233  0196                     	;# 
  6234  0197                     	;# 
  6235  0198                     	;# 
  6236  0199                     	;# 
  6237  019A                     	;# 
  6238  019B                     	;# 
  6239  019C                     	;# 
  6240  020C                     	;# 
  6241  020C                     	;# 
  6242  020D                     	;# 
  6243  020E                     	;# 
  6244  020F                     	;# 
  6245  020F                     	;# 
  6246  0210                     	;# 
  6247  0210                     	;# 
  6248  0211                     	;# 
  6249  0211                     	;# 
  6250  0212                     	;# 
  6251  0212                     	;# 
  6252  0213                     	;# 
  6253  0214                     	;# 
  6254  0215                     	;# 
  6255  0215                     	;# 
  6256  0216                     	;# 
  6257  0216                     	;# 
  6258  0217                     	;# 
  6259  0217                     	;# 
  6260  0218                     	;# 
  6261  0218                     	;# 
  6262  0219                     	;# 
  6263  021A                     	;# 
  6264  021B                     	;# 
  6265  021B                     	;# 
  6266  021C                     	;# 
  6267  021C                     	;# 
  6268  021D                     	;# 
  6269  021D                     	;# 
  6270  021E                     	;# 
  6271  021F                     	;# 
  6272  028C                     	;# 
  6273  028C                     	;# 
  6274  028D                     	;# 
  6275  028D                     	;# 
  6276  028E                     	;# 
  6277  028F                     	;# 
  6278  0290                     	;# 
  6279  0290                     	;# 
  6280  0291                     	;# 
  6281  0292                     	;# 
  6282  0292                     	;# 
  6283  0293                     	;# 
  6284  0293                     	;# 
  6285  0294                     	;# 
  6286  0295                     	;# 
  6287  0296                     	;# 
  6288  0296                     	;# 
  6289  0297                     	;# 
  6290  0298                     	;# 
  6291  0298                     	;# 
  6292  0299                     	;# 
  6293  0299                     	;# 
  6294  029A                     	;# 
  6295  029B                     	;# 
  6296  029C                     	;# 
  6297  029C                     	;# 
  6298  029D                     	;# 
  6299  030C                     	;# 
  6300  030C                     	;# 
  6301  030D                     	;# 
  6302  030E                     	;# 
  6303  030F                     	;# 
  6304  0310                     	;# 
  6305  0310                     	;# 
  6306  0311                     	;# 
  6307  0312                     	;# 
  6308  0313                     	;# 
  6309  0314                     	;# 
  6310  0314                     	;# 
  6311  0315                     	;# 
  6312  0316                     	;# 
  6313  0317                     	;# 
  6314  0318                     	;# 
  6315  0318                     	;# 
  6316  0319                     	;# 
  6317  031A                     	;# 
  6318  031B                     	;# 
  6319  031C                     	;# 
  6320  031C                     	;# 
  6321  031D                     	;# 
  6322  031E                     	;# 
  6323  031F                     	;# 
  6324  038C                     	;# 
  6325  038C                     	;# 
  6326  038D                     	;# 
  6327  038E                     	;# 
  6328  0390                     	;# 
  6329  0390                     	;# 
  6330  0391                     	;# 
  6331  0392                     	;# 
  6332  040C                     	;# 
  6333  040D                     	;# 
  6334  040E                     	;# 
  6335  040F                     	;# 
  6336  0410                     	;# 
  6337  0411                     	;# 
  6338  0416                     	;# 
  6339  0416                     	;# 
  6340  0417                     	;# 
  6341  0418                     	;# 
  6342  0418                     	;# 
  6343  0419                     	;# 
  6344  041A                     	;# 
  6345  041A                     	;# 
  6346  041B                     	;# 
  6347  041C                     	;# 
  6348  041C                     	;# 
  6349  041D                     	;# 
  6350  041E                     	;# 
  6351  041F                     	;# 
  6352  048C                     	;# 
  6353  048C                     	;# 
  6354  048D                     	;# 
  6355  048E                     	;# 
  6356  048F                     	;# 
  6357  048F                     	;# 
  6358  0490                     	;# 
  6359  0491                     	;# 
  6360  0492                     	;# 
  6361  0492                     	;# 
  6362  0493                     	;# 
  6363  0494                     	;# 
  6364  0495                     	;# 
  6365  0495                     	;# 
  6366  0496                     	;# 
  6367  0497                     	;# 
  6368  0498                     	;# 
  6369  0499                     	;# 
  6370  049A                     	;# 
  6371  049B                     	;# 
  6372  049C                     	;# 
  6373  049D                     	;# 
  6374  050C                     	;# 
  6375  050C                     	;# 
  6376  050D                     	;# 
  6377  050E                     	;# 
  6378  050F                     	;# 
  6379  050F                     	;# 
  6380  0510                     	;# 
  6381  0511                     	;# 
  6382  0512                     	;# 
  6383  0512                     	;# 
  6384  0513                     	;# 
  6385  0514                     	;# 
  6386  0515                     	;# 
  6387  0515                     	;# 
  6388  0516                     	;# 
  6389  0517                     	;# 
  6390  0518                     	;# 
  6391  0519                     	;# 
  6392  051A                     	;# 
  6393  051B                     	;# 
  6394  051C                     	;# 
  6395  051D                     	;# 
  6396  058C                     	;# 
  6397  058C                     	;# 
  6398  058D                     	;# 
  6399  058E                     	;# 
  6400  058F                     	;# 
  6401  058F                     	;# 
  6402  0590                     	;# 
  6403  0591                     	;# 
  6404  0592                     	;# 
  6405  0593                     	;# 
  6406  060C                     	;# 
  6407  060D                     	;# 
  6408  060E                     	;# 
  6409  060F                     	;# 
  6410  0610                     	;# 
  6411  0611                     	;# 
  6412  0612                     	;# 
  6413  0613                     	;# 
  6414  0614                     	;# 
  6415  0616                     	;# 
  6416  0617                     	;# 
  6417  0618                     	;# 
  6418  0619                     	;# 
  6419  061A                     	;# 
  6420  061B                     	;# 
  6421  061C                     	;# 
  6422  061D                     	;# 
  6423  061E                     	;# 
  6424  068C                     	;# 
  6425  068D                     	;# 
  6426  068E                     	;# 
  6427  068F                     	;# 
  6428  0690                     	;# 
  6429  0691                     	;# 
  6430  0692                     	;# 
  6431  0693                     	;# 
  6432  0694                     	;# 
  6433  070C                     	;# 
  6434  070D                     	;# 
  6435  070E                     	;# 
  6436  070F                     	;# 
  6437  0710                     	;# 
  6438  0711                     	;# 
  6439  0712                     	;# 
  6440  0713                     	;# 
  6441  0714                     	;# 
  6442  0716                     	;# 
  6443  0717                     	;# 
  6444  0718                     	;# 
  6445  0719                     	;# 
  6446  071A                     	;# 
  6447  071B                     	;# 
  6448  071C                     	;# 
  6449  071D                     	;# 
  6450  071E                     	;# 
  6451  0796                     	;# 
  6452  0797                     	;# 
  6453  0798                     	;# 
  6454  0799                     	;# 
  6455  079A                     	;# 
  6456  079B                     	;# 
  6457  080C                     	;# 
  6458  080D                     	;# 
  6459  080E                     	;# 
  6460  080F                     	;# 
  6461  0810                     	;# 
  6462  0811                     	;# 
  6463  0812                     	;# 
  6464  0813                     	;# 
  6465  0814                     	;# 
  6466  081A                     	;# 
  6467  081B                     	;# 
  6468  081C                     	;# 
  6469  081D                     	;# 
  6470  081E                     	;# 
  6471  081F                     	;# 
  6472  088C                     	;# 
  6473  088D                     	;# 
  6474  088E                     	;# 
  6475  088F                     	;# 
  6476  0890                     	;# 
  6477  0891                     	;# 
  6478  0892                     	;# 
  6479  0893                     	;# 
  6480  0895                     	;# 
  6481  0896                     	;# 
  6482  0897                     	;# 
  6483  0898                     	;# 
  6484  0899                     	;# 
  6485  089A                     	;# 
  6486  089B                     	;# 
  6487  090C                     	;# 
  6488  090E                     	;# 
  6489  090F                     	;# 
  6490  091F                     	;# 
  6491  091F                     	;# 
  6492  098F                     	;# 
  6493  098F                     	;# 
  6494  0990                     	;# 
  6495  0991                     	;# 
  6496  0992                     	;# 
  6497  0993                     	;# 
  6498  0994                     	;# 
  6499  0995                     	;# 
  6500  0996                     	;# 
  6501  0997                     	;# 
  6502  0E0F                     	;# 
  6503  0E10                     	;# 
  6504  0E11                     	;# 
  6505  0E12                     	;# 
  6506  0E13                     	;# 
  6507  0E14                     	;# 
  6508  0E15                     	;# 
  6509  0E16                     	;# 
  6510  0E17                     	;# 
  6511  0E18                     	;# 
  6512  0E19                     	;# 
  6513  0E1A                     	;# 
  6514  0E1B                     	;# 
  6515  0E1C                     	;# 
  6516  0E1D                     	;# 
  6517  0E1E                     	;# 
  6518  0E1F                     	;# 
  6519  0E20                     	;# 
  6520  0E21                     	;# 
  6521  0E22                     	;# 
  6522  0E23                     	;# 
  6523  0E24                     	;# 
  6524  0E25                     	;# 
  6525  0E26                     	;# 
  6526  0E27                     	;# 
  6527  0E28                     	;# 
  6528  0E29                     	;# 
  6529  0E2A                     	;# 
  6530  0E2B                     	;# 
  6531  0E2C                     	;# 
  6532  0E2D                     	;# 
  6533  0E2E                     	;# 
  6534  0E2F                     	;# 
  6535  0E30                     	;# 
  6536  0E31                     	;# 
  6537  0E32                     	;# 
  6538  0E33                     	;# 
  6539  0E34                     	;# 
  6540  0E35                     	;# 
  6541  0E36                     	;# 
  6542  0E37                     	;# 
  6543  0E8F                     	;# 
  6544  0E90                     	;# 
  6545  0E91                     	;# 
  6546  0E92                     	;# 
  6547  0E93                     	;# 
  6548  0E94                     	;# 
  6549  0E95                     	;# 
  6550  0E96                     	;# 
  6551  0E97                     	;# 
  6552  0E9C                     	;# 
  6553  0E9D                     	;# 
  6554  0E9E                     	;# 
  6555  0EA1                     	;# 
  6556  0EA2                     	;# 
  6557  0EA3                     	;# 
  6558  0EA4                     	;# 
  6559  0EA5                     	;# 
  6560  0EA9                     	;# 
  6561  0EAA                     	;# 
  6562  0EAB                     	;# 
  6563  0EAC                     	;# 
  6564  0EB1                     	;# 
  6565  0EB2                     	;# 
  6566  0EB3                     	;# 
  6567  0EB8                     	;# 
  6568  0EB9                     	;# 
  6569  0EBA                     	;# 
  6570  0EBB                     	;# 
  6571  0EBC                     	;# 
  6572  0EBD                     	;# 
  6573  0EBE                     	;# 
  6574  0EC3                     	;# 
  6575  0EC5                     	;# 
  6576  0EC6                     	;# 
  6577  0EC7                     	;# 
  6578  0EC8                     	;# 
  6579  0EC9                     	;# 
  6580  0ECA                     	;# 
  6581  0ECB                     	;# 
  6582  0ECC                     	;# 
  6583  0F10                     	;# 
  6584  0F11                     	;# 
  6585  0F12                     	;# 
  6586  0F13                     	;# 
  6587  0F14                     	;# 
  6588  0F15                     	;# 
  6589  0F16                     	;# 
  6590  0F17                     	;# 
  6591  0F18                     	;# 
  6592  0F19                     	;# 
  6593  0F1A                     	;# 
  6594  0F1B                     	;# 
  6595  0F1C                     	;# 
  6596  0F1D                     	;# 
  6597  0F1E                     	;# 
  6598  0F1F                     	;# 
  6599  0F20                     	;# 
  6600  0F21                     	;# 
  6601  0F22                     	;# 
  6602  0F23                     	;# 
  6603  0F24                     	;# 
  6604  0F25                     	;# 
  6605  0F26                     	;# 
  6606  0F27                     	;# 
  6607  0F28                     	;# 
  6608  0F29                     	;# 
  6609  0F2A                     	;# 
  6610  0F2B                     	;# 
  6611  0F2C                     	;# 
  6612  0F2D                     	;# 
  6613  0F2E                     	;# 
  6614  0F2F                     	;# 
  6615  0F30                     	;# 
  6616  0F31                     	;# 
  6617  0F32                     	;# 
  6618  0F38                     	;# 
  6619  0F39                     	;# 
  6620  0F3A                     	;# 
  6621  0F3B                     	;# 
  6622  0F3C                     	;# 
  6623  0F3D                     	;# 
  6624  0F3E                     	;# 
  6625  0F3F                     	;# 
  6626  0F40                     	;# 
  6627  0F41                     	;# 
  6628  0F43                     	;# 
  6629  0F44                     	;# 
  6630  0F45                     	;# 
  6631  0F46                     	;# 
  6632  0F47                     	;# 
  6633  0F48                     	;# 
  6634  0F49                     	;# 
  6635  0F4A                     	;# 
  6636  0F4B                     	;# 
  6637  0F4C                     	;# 
  6638  0F4E                     	;# 
  6639  0F4F                     	;# 
  6640  0F50                     	;# 
  6641  0F51                     	;# 
  6642  0F52                     	;# 
  6643  0F53                     	;# 
  6644  0F54                     	;# 
  6645  0F55                     	;# 
  6646  0F56                     	;# 
  6647  0F57                     	;# 
  6648  0F59                     	;# 
  6649  0F5A                     	;# 
  6650  0F5B                     	;# 
  6651  0F5C                     	;# 
  6652  0F5D                     	;# 
  6653  0F61                     	;# 
  6654  0F62                     	;# 
  6655  0F64                     	;# 
  6656  0F65                     	;# 
  6657  0F66                     	;# 
  6658  0F67                     	;# 
  6659  0F68                     	;# 
  6660  0F69                     	;# 
  6661  0F6A                     	;# 
  6662  0F6B                     	;# 
  6663  0F6C                     	;# 
  6664  0F6D                     	;# 
  6665  0FE4                     	;# 
  6666  0FE5                     	;# 
  6667  0FE6                     	;# 
  6668  0FE7                     	;# 
  6669  0FE8                     	;# 
  6670  0FE9                     	;# 
  6671  0FEA                     	;# 
  6672  0FEB                     	;# 
  6673  0FED                     	;# 
  6674  0FEE                     	;# 
  6675  0FEF                     	;# 
  6676  0000                     	;# 
  6677  0001                     	;# 
  6678  0002                     	;# 
  6679  0003                     	;# 
  6680  0004                     	;# 
  6681  0005                     	;# 
  6682  0006                     	;# 
  6683  0007                     	;# 
  6684  0008                     	;# 
  6685  0009                     	;# 
  6686  000A                     	;# 
  6687  000B                     	;# 
  6688  000C                     	;# 
  6689  000D                     	;# 
  6690  000E                     	;# 
  6691  000F                     	;# 
  6692  0010                     	;# 
  6693  0011                     	;# 
  6694  0012                     	;# 
  6695  0013                     	;# 
  6696  0014                     	;# 
  6697  0015                     	;# 
  6698  0016                     	;# 
  6699  0017                     	;# 
  6700  0018                     	;# 
  6701  0019                     	;# 
  6702  001A                     	;# 
  6703  001C                     	;# 
  6704  001C                     	;# 
  6705  001D                     	;# 
  6706  001D                     	;# 
  6707  001E                     	;# 
  6708  001F                     	;# 
  6709  008C                     	;# 
  6710  008C                     	;# 
  6711  008D                     	;# 
  6712  008E                     	;# 
  6713  008E                     	;# 
  6714  008F                     	;# 
  6715  0090                     	;# 
  6716  0090                     	;# 
  6717  0091                     	;# 
  6718  0093                     	;# 
  6719  0094                     	;# 
  6720  0095                     	;# 
  6721  0096                     	;# 
  6722  0097                     	;# 
  6723  0098                     	;# 
  6724  0099                     	;# 
  6725  009A                     	;# 
  6726  009B                     	;# 
  6727  009C                     	;# 
  6728  009D                     	;# 
  6729  009E                     	;# 
  6730  010C                     	;# 
  6731  010D                     	;# 
  6732  010E                     	;# 
  6733  010E                     	;# 
  6734  010F                     	;# 
  6735  0110                     	;# 
  6736  0110                     	;# 
  6737  0111                     	;# 
  6738  0112                     	;# 
  6739  0112                     	;# 
  6740  0113                     	;# 
  6741  0114                     	;# 
  6742  0114                     	;# 
  6743  0115                     	;# 
  6744  0116                     	;# 
  6745  0116                     	;# 
  6746  0117                     	;# 
  6747  0119                     	;# 
  6748  0119                     	;# 
  6749  0119                     	;# 
  6750  011A                     	;# 
  6751  011A                     	;# 
  6752  011A                     	;# 
  6753  011B                     	;# 
  6754  011B                     	;# 
  6755  011B                     	;# 
  6756  011B                     	;# 
  6757  011B                     	;# 
  6758  011C                     	;# 
  6759  011C                     	;# 
  6760  011C                     	;# 
  6761  011D                     	;# 
  6762  011D                     	;# 
  6763  011D                     	;# 
  6764  011E                     	;# 
  6765  011E                     	;# 
  6766  011E                     	;# 
  6767  011F                     	;# 
  6768  011F                     	;# 
  6769  011F                     	;# 
  6770  011F                     	;# 
  6771  011F                     	;# 
  6772  018C                     	;# 
  6773  018D                     	;# 
  6774  018E                     	;# 
  6775  018F                     	;# 
  6776  0190                     	;# 
  6777  0191                     	;# 
  6778  0192                     	;# 
  6779  0196                     	;# 
  6780  0197                     	;# 
  6781  0198                     	;# 
  6782  0199                     	;# 
  6783  019A                     	;# 
  6784  019B                     	;# 
  6785  019C                     	;# 
  6786  020C                     	;# 
  6787  020C                     	;# 
  6788  020D                     	;# 
  6789  020E                     	;# 
  6790  020F                     	;# 
  6791  020F                     	;# 
  6792  0210                     	;# 
  6793  0210                     	;# 
  6794  0211                     	;# 
  6795  0211                     	;# 
  6796  0212                     	;# 
  6797  0212                     	;# 
  6798  0213                     	;# 
  6799  0214                     	;# 
  6800  0215                     	;# 
  6801  0215                     	;# 
  6802  0216                     	;# 
  6803  0216                     	;# 
  6804  0217                     	;# 
  6805  0217                     	;# 
  6806  0218                     	;# 
  6807  0218                     	;# 
  6808  0219                     	;# 
  6809  021A                     	;# 
  6810  021B                     	;# 
  6811  021B                     	;# 
  6812  021C                     	;# 
  6813  021C                     	;# 
  6814  021D                     	;# 
  6815  021D                     	;# 
  6816  021E                     	;# 
  6817  021F                     	;# 
  6818  028C                     	;# 
  6819  028C                     	;# 
  6820  028D                     	;# 
  6821  028D                     	;# 
  6822  028E                     	;# 
  6823  028F                     	;# 
  6824  0290                     	;# 
  6825  0290                     	;# 
  6826  0291                     	;# 
  6827  0292                     	;# 
  6828  0292                     	;# 
  6829  0293                     	;# 
  6830  0293                     	;# 
  6831  0294                     	;# 
  6832  0295                     	;# 
  6833  0296                     	;# 
  6834  0296                     	;# 
  6835  0297                     	;# 
  6836  0298                     	;# 
  6837  0298                     	;# 
  6838  0299                     	;# 
  6839  0299                     	;# 
  6840  029A                     	;# 
  6841  029B                     	;# 
  6842  029C                     	;# 
  6843  029C                     	;# 
  6844  029D                     	;# 
  6845  030C                     	;# 
  6846  030C                     	;# 
  6847  030D                     	;# 
  6848  030E                     	;# 
  6849  030F                     	;# 
  6850  0310                     	;# 
  6851  0310                     	;# 
  6852  0311                     	;# 
  6853  0312                     	;# 
  6854  0313                     	;# 
  6855  0314                     	;# 
  6856  0314                     	;# 
  6857  0315                     	;# 
  6858  0316                     	;# 
  6859  0317                     	;# 
  6860  0318                     	;# 
  6861  0318                     	;# 
  6862  0319                     	;# 
  6863  031A                     	;# 
  6864  031B                     	;# 
  6865  031C                     	;# 
  6866  031C                     	;# 
  6867  031D                     	;# 
  6868  031E                     	;# 
  6869  031F                     	;# 
  6870  038C                     	;# 
  6871  038C                     	;# 
  6872  038D                     	;# 
  6873  038E                     	;# 
  6874  0390                     	;# 
  6875  0390                     	;# 
  6876  0391                     	;# 
  6877  0392                     	;# 
  6878  040C                     	;# 
  6879  040D                     	;# 
  6880  040E                     	;# 
  6881  040F                     	;# 
  6882  0410                     	;# 
  6883  0411                     	;# 
  6884  0416                     	;# 
  6885  0416                     	;# 
  6886  0417                     	;# 
  6887  0418                     	;# 
  6888  0418                     	;# 
  6889  0419                     	;# 
  6890  041A                     	;# 
  6891  041A                     	;# 
  6892  041B                     	;# 
  6893  041C                     	;# 
  6894  041C                     	;# 
  6895  041D                     	;# 
  6896  041E                     	;# 
  6897  041F                     	;# 
  6898  048C                     	;# 
  6899  048C                     	;# 
  6900  048D                     	;# 
  6901  048E                     	;# 
  6902  048F                     	;# 
  6903  048F                     	;# 
  6904  0490                     	;# 
  6905  0491                     	;# 
  6906  0492                     	;# 
  6907  0492                     	;# 
  6908  0493                     	;# 
  6909  0494                     	;# 
  6910  0495                     	;# 
  6911  0495                     	;# 
  6912  0496                     	;# 
  6913  0497                     	;# 
  6914  0498                     	;# 
  6915  0499                     	;# 
  6916  049A                     	;# 
  6917  049B                     	;# 
  6918  049C                     	;# 
  6919  049D                     	;# 
  6920  050C                     	;# 
  6921  050C                     	;# 
  6922  050D                     	;# 
  6923  050E                     	;# 
  6924  050F                     	;# 
  6925  050F                     	;# 
  6926  0510                     	;# 
  6927  0511                     	;# 
  6928  0512                     	;# 
  6929  0512                     	;# 
  6930  0513                     	;# 
  6931  0514                     	;# 
  6932  0515                     	;# 
  6933  0515                     	;# 
  6934  0516                     	;# 
  6935  0517                     	;# 
  6936  0518                     	;# 
  6937  0519                     	;# 
  6938  051A                     	;# 
  6939  051B                     	;# 
  6940  051C                     	;# 
  6941  051D                     	;# 
  6942  058C                     	;# 
  6943  058C                     	;# 
  6944  058D                     	;# 
  6945  058E                     	;# 
  6946  058F                     	;# 
  6947  058F                     	;# 
  6948  0590                     	;# 
  6949  0591                     	;# 
  6950  0592                     	;# 
  6951  0593                     	;# 
  6952  060C                     	;# 
  6953  060D                     	;# 
  6954  060E                     	;# 
  6955  060F                     	;# 
  6956  0610                     	;# 
  6957  0611                     	;# 
  6958  0612                     	;# 
  6959  0613                     	;# 
  6960  0614                     	;# 
  6961  0616                     	;# 
  6962  0617                     	;# 
  6963  0618                     	;# 
  6964  0619                     	;# 
  6965  061A                     	;# 
  6966  061B                     	;# 
  6967  061C                     	;# 
  6968  061D                     	;# 
  6969  061E                     	;# 
  6970  068C                     	;# 
  6971  068D                     	;# 
  6972  068E                     	;# 
  6973  068F                     	;# 
  6974  0690                     	;# 
  6975  0691                     	;# 
  6976  0692                     	;# 
  6977  0693                     	;# 
  6978  0694                     	;# 
  6979  070C                     	;# 
  6980  070D                     	;# 
  6981  070E                     	;# 
  6982  070F                     	;# 
  6983  0710                     	;# 
  6984  0711                     	;# 
  6985  0712                     	;# 
  6986  0713                     	;# 
  6987  0714                     	;# 
  6988  0716                     	;# 
  6989  0717                     	;# 
  6990  0718                     	;# 
  6991  0719                     	;# 
  6992  071A                     	;# 
  6993  071B                     	;# 
  6994  071C                     	;# 
  6995  071D                     	;# 
  6996  071E                     	;# 
  6997  0796                     	;# 
  6998  0797                     	;# 
  6999  0798                     	;# 
  7000  0799                     	;# 
  7001  079A                     	;# 
  7002  079B                     	;# 
  7003  080C                     	;# 
  7004  080D                     	;# 
  7005  080E                     	;# 
  7006  080F                     	;# 
  7007  0810                     	;# 
  7008  0811                     	;# 
  7009  0812                     	;# 
  7010  0813                     	;# 
  7011  0814                     	;# 
  7012  081A                     	;# 
  7013  081B                     	;# 
  7014  081C                     	;# 
  7015  081D                     	;# 
  7016  081E                     	;# 
  7017  081F                     	;# 
  7018  088C                     	;# 
  7019  088D                     	;# 
  7020  088E                     	;# 
  7021  088F                     	;# 
  7022  0890                     	;# 
  7023  0891                     	;# 
  7024  0892                     	;# 
  7025  0893                     	;# 
  7026  0895                     	;# 
  7027  0896                     	;# 
  7028  0897                     	;# 
  7029  0898                     	;# 
  7030  0899                     	;# 
  7031  089A                     	;# 
  7032  089B                     	;# 
  7033  090C                     	;# 
  7034  090E                     	;# 
  7035  090F                     	;# 
  7036  091F                     	;# 
  7037  091F                     	;# 
  7038  098F                     	;# 
  7039  098F                     	;# 
  7040  0990                     	;# 
  7041  0991                     	;# 
  7042  0992                     	;# 
  7043  0993                     	;# 
  7044  0994                     	;# 
  7045  0995                     	;# 
  7046  0996                     	;# 
  7047  0997                     	;# 
  7048  0E0F                     	;# 
  7049  0E10                     	;# 
  7050  0E11                     	;# 
  7051  0E12                     	;# 
  7052  0E13                     	;# 
  7053  0E14                     	;# 
  7054  0E15                     	;# 
  7055  0E16                     	;# 
  7056  0E17                     	;# 
  7057  0E18                     	;# 
  7058  0E19                     	;# 
  7059  0E1A                     	;# 
  7060  0E1B                     	;# 
  7061  0E1C                     	;# 
  7062  0E1D                     	;# 
  7063  0E1E                     	;# 
  7064  0E1F                     	;# 
  7065  0E20                     	;# 
  7066  0E21                     	;# 
  7067  0E22                     	;# 
  7068  0E23                     	;# 
  7069  0E24                     	;# 
  7070  0E25                     	;# 
  7071  0E26                     	;# 
  7072  0E27                     	;# 
  7073  0E28                     	;# 
  7074  0E29                     	;# 
  7075  0E2A                     	;# 
  7076  0E2B                     	;# 
  7077  0E2C                     	;# 
  7078  0E2D                     	;# 
  7079  0E2E                     	;# 
  7080  0E2F                     	;# 
  7081  0E30                     	;# 
  7082  0E31                     	;# 
  7083  0E32                     	;# 
  7084  0E33                     	;# 
  7085  0E34                     	;# 
  7086  0E35                     	;# 
  7087  0E36                     	;# 
  7088  0E37                     	;# 
  7089  0E8F                     	;# 
  7090  0E90                     	;# 
  7091  0E91                     	;# 
  7092  0E92                     	;# 
  7093  0E93                     	;# 
  7094  0E94                     	;# 
  7095  0E95                     	;# 
  7096  0E96                     	;# 
  7097  0E97                     	;# 
  7098  0E9C                     	;# 
  7099  0E9D                     	;# 
  7100  0E9E                     	;# 
  7101  0EA1                     	;# 
  7102  0EA2                     	;# 
  7103  0EA3                     	;# 
  7104  0EA4                     	;# 
  7105  0EA5                     	;# 
  7106  0EA9                     	;# 
  7107  0EAA                     	;# 
  7108  0EAB                     	;# 
  7109  0EAC                     	;# 
  7110  0EB1                     	;# 
  7111  0EB2                     	;# 
  7112  0EB3                     	;# 
  7113  0EB8                     	;# 
  7114  0EB9                     	;# 
  7115  0EBA                     	;# 
  7116  0EBB                     	;# 
  7117  0EBC                     	;# 
  7118  0EBD                     	;# 
  7119  0EBE                     	;# 
  7120  0EC3                     	;# 
  7121  0EC5                     	;# 
  7122  0EC6                     	;# 
  7123  0EC7                     	;# 
  7124  0EC8                     	;# 
  7125  0EC9                     	;# 
  7126  0ECA                     	;# 
  7127  0ECB                     	;# 
  7128  0ECC                     	;# 
  7129  0F10                     	;# 
  7130  0F11                     	;# 
  7131  0F12                     	;# 
  7132  0F13                     	;# 
  7133  0F14                     	;# 
  7134  0F15                     	;# 
  7135  0F16                     	;# 
  7136  0F17                     	;# 
  7137  0F18                     	;# 
  7138  0F19                     	;# 
  7139  0F1A                     	;# 
  7140  0F1B                     	;# 
  7141  0F1C                     	;# 
  7142  0F1D                     	;# 
  7143  0F1E                     	;# 
  7144  0F1F                     	;# 
  7145  0F20                     	;# 
  7146  0F21                     	;# 
  7147  0F22                     	;# 
  7148  0F23                     	;# 
  7149  0F24                     	;# 
  7150  0F25                     	;# 
  7151  0F26                     	;# 
  7152  0F27                     	;# 
  7153  0F28                     	;# 
  7154  0F29                     	;# 
  7155  0F2A                     	;# 
  7156  0F2B                     	;# 
  7157  0F2C                     	;# 
  7158  0F2D                     	;# 
  7159  0F2E                     	;# 
  7160  0F2F                     	;# 
  7161  0F30                     	;# 
  7162  0F31                     	;# 
  7163  0F32                     	;# 
  7164  0F38                     	;# 
  7165  0F39                     	;# 
  7166  0F3A                     	;# 
  7167  0F3B                     	;# 
  7168  0F3C                     	;# 
  7169  0F3D                     	;# 
  7170  0F3E                     	;# 
  7171  0F3F                     	;# 
  7172  0F40                     	;# 
  7173  0F41                     	;# 
  7174  0F43                     	;# 
  7175  0F44                     	;# 
  7176  0F45                     	;# 
  7177  0F46                     	;# 
  7178  0F47                     	;# 
  7179  0F48                     	;# 
  7180  0F49                     	;# 
  7181  0F4A                     	;# 
  7182  0F4B                     	;# 
  7183  0F4C                     	;# 
  7184  0F4E                     	;# 
  7185  0F4F                     	;# 
  7186  0F50                     	;# 
  7187  0F51                     	;# 
  7188  0F52                     	;# 
  7189  0F53                     	;# 
  7190  0F54                     	;# 
  7191  0F55                     	;# 
  7192  0F56                     	;# 
  7193  0F57                     	;# 
  7194  0F59                     	;# 
  7195  0F5A                     	;# 
  7196  0F5B                     	;# 
  7197  0F5C                     	;# 
  7198  0F5D                     	;# 
  7199  0F61                     	;# 
  7200  0F62                     	;# 
  7201  0F64                     	;# 
  7202  0F65                     	;# 
  7203  0F66                     	;# 
  7204  0F67                     	;# 
  7205  0F68                     	;# 
  7206  0F69                     	;# 
  7207  0F6A                     	;# 
  7208  0F6B                     	;# 
  7209  0F6C                     	;# 
  7210  0F6D                     	;# 
  7211  0FE4                     	;# 
  7212  0FE5                     	;# 
  7213  0FE6                     	;# 
  7214  0FE7                     	;# 
  7215  0FE8                     	;# 
  7216  0FE9                     	;# 
  7217  0FEA                     	;# 
  7218  0FEB                     	;# 
  7219  0FED                     	;# 
  7220  0FEE                     	;# 
  7221  0FEF                     	;# 
  7222  0000                     	;# 
  7223  0001                     	;# 
  7224  0002                     	;# 
  7225  0003                     	;# 
  7226  0004                     	;# 
  7227  0005                     	;# 
  7228  0006                     	;# 
  7229  0007                     	;# 
  7230  0008                     	;# 
  7231  0009                     	;# 
  7232  000A                     	;# 
  7233  000B                     	;# 
  7234  000C                     	;# 
  7235  000D                     	;# 
  7236  000E                     	;# 
  7237  000F                     	;# 
  7238  0010                     	;# 
  7239  0011                     	;# 
  7240  0012                     	;# 
  7241  0013                     	;# 
  7242  0014                     	;# 
  7243  0015                     	;# 
  7244  0016                     	;# 
  7245  0017                     	;# 
  7246  0018                     	;# 
  7247  0019                     	;# 
  7248  001A                     	;# 
  7249  001C                     	;# 
  7250  001C                     	;# 
  7251  001D                     	;# 
  7252  001D                     	;# 
  7253  001E                     	;# 
  7254  001F                     	;# 
  7255  008C                     	;# 
  7256  008C                     	;# 
  7257  008D                     	;# 
  7258  008E                     	;# 
  7259  008E                     	;# 
  7260  008F                     	;# 
  7261  0090                     	;# 
  7262  0090                     	;# 
  7263  0091                     	;# 
  7264  0093                     	;# 
  7265  0094                     	;# 
  7266  0095                     	;# 
  7267  0096                     	;# 
  7268  0097                     	;# 
  7269  0098                     	;# 
  7270  0099                     	;# 
  7271  009A                     	;# 
  7272  009B                     	;# 
  7273  009C                     	;# 
  7274  009D                     	;# 
  7275  009E                     	;# 
  7276  010C                     	;# 
  7277  010D                     	;# 
  7278  010E                     	;# 
  7279  010E                     	;# 
  7280  010F                     	;# 
  7281  0110                     	;# 
  7282  0110                     	;# 
  7283  0111                     	;# 
  7284  0112                     	;# 
  7285  0112                     	;# 
  7286  0113                     	;# 
  7287  0114                     	;# 
  7288  0114                     	;# 
  7289  0115                     	;# 
  7290  0116                     	;# 
  7291  0116                     	;# 
  7292  0117                     	;# 
  7293  0119                     	;# 
  7294  0119                     	;# 
  7295  0119                     	;# 
  7296  011A                     	;# 
  7297  011A                     	;# 
  7298  011A                     	;# 
  7299  011B                     	;# 
  7300  011B                     	;# 
  7301  011B                     	;# 
  7302  011B                     	;# 
  7303  011B                     	;# 
  7304  011C                     	;# 
  7305  011C                     	;# 
  7306  011C                     	;# 
  7307  011D                     	;# 
  7308  011D                     	;# 
  7309  011D                     	;# 
  7310  011E                     	;# 
  7311  011E                     	;# 
  7312  011E                     	;# 
  7313  011F                     	;# 
  7314  011F                     	;# 
  7315  011F                     	;# 
  7316  011F                     	;# 
  7317  011F                     	;# 
  7318  018C                     	;# 
  7319  018D                     	;# 
  7320  018E                     	;# 
  7321  018F                     	;# 
  7322  0190                     	;# 
  7323  0191                     	;# 
  7324  0192                     	;# 
  7325  0196                     	;# 
  7326  0197                     	;# 
  7327  0198                     	;# 
  7328  0199                     	;# 
  7329  019A                     	;# 
  7330  019B                     	;# 
  7331  019C                     	;# 
  7332  020C                     	;# 
  7333  020C                     	;# 
  7334  020D                     	;# 
  7335  020E                     	;# 
  7336  020F                     	;# 
  7337  020F                     	;# 
  7338  0210                     	;# 
  7339  0210                     	;# 
  7340  0211                     	;# 
  7341  0211                     	;# 
  7342  0212                     	;# 
  7343  0212                     	;# 
  7344  0213                     	;# 
  7345  0214                     	;# 
  7346  0215                     	;# 
  7347  0215                     	;# 
  7348  0216                     	;# 
  7349  0216                     	;# 
  7350  0217                     	;# 
  7351  0217                     	;# 
  7352  0218                     	;# 
  7353  0218                     	;# 
  7354  0219                     	;# 
  7355  021A                     	;# 
  7356  021B                     	;# 
  7357  021B                     	;# 
  7358  021C                     	;# 
  7359  021C                     	;# 
  7360  021D                     	;# 
  7361  021D                     	;# 
  7362  021E                     	;# 
  7363  021F                     	;# 
  7364  028C                     	;# 
  7365  028C                     	;# 
  7366  028D                     	;# 
  7367  028D                     	;# 
  7368  028E                     	;# 
  7369  028F                     	;# 
  7370  0290                     	;# 
  7371  0290                     	;# 
  7372  0291                     	;# 
  7373  0292                     	;# 
  7374  0292                     	;# 
  7375  0293                     	;# 
  7376  0293                     	;# 
  7377  0294                     	;# 
  7378  0295                     	;# 
  7379  0296                     	;# 
  7380  0296                     	;# 
  7381  0297                     	;# 
  7382  0298                     	;# 
  7383  0298                     	;# 
  7384  0299                     	;# 
  7385  0299                     	;# 
  7386  029A                     	;# 
  7387  029B                     	;# 
  7388  029C                     	;# 
  7389  029C                     	;# 
  7390  029D                     	;# 
  7391  030C                     	;# 
  7392  030C                     	;# 
  7393  030D                     	;# 
  7394  030E                     	;# 
  7395  030F                     	;# 
  7396  0310                     	;# 
  7397  0310                     	;# 
  7398  0311                     	;# 
  7399  0312                     	;# 
  7400  0313                     	;# 
  7401  0314                     	;# 
  7402  0314                     	;# 
  7403  0315                     	;# 
  7404  0316                     	;# 
  7405  0317                     	;# 
  7406  0318                     	;# 
  7407  0318                     	;# 
  7408  0319                     	;# 
  7409  031A                     	;# 
  7410  031B                     	;# 
  7411  031C                     	;# 
  7412  031C                     	;# 
  7413  031D                     	;# 
  7414  031E                     	;# 
  7415  031F                     	;# 
  7416  038C                     	;# 
  7417  038C                     	;# 
  7418  038D                     	;# 
  7419  038E                     	;# 
  7420  0390                     	;# 
  7421  0390                     	;# 
  7422  0391                     	;# 
  7423  0392                     	;# 
  7424  040C                     	;# 
  7425  040D                     	;# 
  7426  040E                     	;# 
  7427  040F                     	;# 
  7428  0410                     	;# 
  7429  0411                     	;# 
  7430  0416                     	;# 
  7431  0416                     	;# 
  7432  0417                     	;# 
  7433  0418                     	;# 
  7434  0418                     	;# 
  7435  0419                     	;# 
  7436  041A                     	;# 
  7437  041A                     	;# 
  7438  041B                     	;# 
  7439  041C                     	;# 
  7440  041C                     	;# 
  7441  041D                     	;# 
  7442  041E                     	;# 
  7443  041F                     	;# 
  7444  048C                     	;# 
  7445  048C                     	;# 
  7446  048D                     	;# 
  7447  048E                     	;# 
  7448  048F                     	;# 
  7449  048F                     	;# 
  7450  0490                     	;# 
  7451  0491                     	;# 
  7452  0492                     	;# 
  7453  0492                     	;# 
  7454  0493                     	;# 
  7455  0494                     	;# 
  7456  0495                     	;# 
  7457  0495                     	;# 
  7458  0496                     	;# 
  7459  0497                     	;# 
  7460  0498                     	;# 
  7461  0499                     	;# 
  7462  049A                     	;# 
  7463  049B                     	;# 
  7464  049C                     	;# 
  7465  049D                     	;# 
  7466  050C                     	;# 
  7467  050C                     	;# 
  7468  050D                     	;# 
  7469  050E                     	;# 
  7470  050F                     	;# 
  7471  050F                     	;# 
  7472  0510                     	;# 
  7473  0511                     	;# 
  7474  0512                     	;# 
  7475  0512                     	;# 
  7476  0513                     	;# 
  7477  0514                     	;# 
  7478  0515                     	;# 
  7479  0515                     	;# 
  7480  0516                     	;# 
  7481  0517                     	;# 
  7482  0518                     	;# 
  7483  0519                     	;# 
  7484  051A                     	;# 
  7485  051B                     	;# 
  7486  051C                     	;# 
  7487  051D                     	;# 
  7488  058C                     	;# 
  7489  058C                     	;# 
  7490  058D                     	;# 
  7491  058E                     	;# 
  7492  058F                     	;# 
  7493  058F                     	;# 
  7494  0590                     	;# 
  7495  0591                     	;# 
  7496  0592                     	;# 
  7497  0593                     	;# 
  7498  060C                     	;# 
  7499  060D                     	;# 
  7500  060E                     	;# 
  7501  060F                     	;# 
  7502  0610                     	;# 
  7503  0611                     	;# 
  7504  0612                     	;# 
  7505  0613                     	;# 
  7506  0614                     	;# 
  7507  0616                     	;# 
  7508  0617                     	;# 
  7509  0618                     	;# 
  7510  0619                     	;# 
  7511  061A                     	;# 
  7512  061B                     	;# 
  7513  061C                     	;# 
  7514  061D                     	;# 
  7515  061E                     	;# 
  7516  068C                     	;# 
  7517  068D                     	;# 
  7518  068E                     	;# 
  7519  068F                     	;# 
  7520  0690                     	;# 
  7521  0691                     	;# 
  7522  0692                     	;# 
  7523  0693                     	;# 
  7524  0694                     	;# 
  7525  070C                     	;# 
  7526  070D                     	;# 
  7527  070E                     	;# 
  7528  070F                     	;# 
  7529  0710                     	;# 
  7530  0711                     	;# 
  7531  0712                     	;# 
  7532  0713                     	;# 
  7533  0714                     	;# 
  7534  0716                     	;# 
  7535  0717                     	;# 
  7536  0718                     	;# 
  7537  0719                     	;# 
  7538  071A                     	;# 
  7539  071B                     	;# 
  7540  071C                     	;# 
  7541  071D                     	;# 
  7542  071E                     	;# 
  7543  0796                     	;# 
  7544  0797                     	;# 
  7545  0798                     	;# 
  7546  0799                     	;# 
  7547  079A                     	;# 
  7548  079B                     	;# 
  7549  080C                     	;# 
  7550  080D                     	;# 
  7551  080E                     	;# 
  7552  080F                     	;# 
  7553  0810                     	;# 
  7554  0811                     	;# 
  7555  0812                     	;# 
  7556  0813                     	;# 
  7557  0814                     	;# 
  7558  081A                     	;# 
  7559  081B                     	;# 
  7560  081C                     	;# 
  7561  081D                     	;# 
  7562  081E                     	;# 
  7563  081F                     	;# 
  7564  088C                     	;# 
  7565  088D                     	;# 
  7566  088E                     	;# 
  7567  088F                     	;# 
  7568  0890                     	;# 
  7569  0891                     	;# 
  7570  0892                     	;# 
  7571  0893                     	;# 
  7572  0895                     	;# 
  7573  0896                     	;# 
  7574  0897                     	;# 
  7575  0898                     	;# 
  7576  0899                     	;# 
  7577  089A                     	;# 
  7578  089B                     	;# 
  7579  090C                     	;# 
  7580  090E                     	;# 
  7581  090F                     	;# 
  7582  091F                     	;# 
  7583  091F                     	;# 
  7584  098F                     	;# 
  7585  098F                     	;# 
  7586  0990                     	;# 
  7587  0991                     	;# 
  7588  0992                     	;# 
  7589  0993                     	;# 
  7590  0994                     	;# 
  7591  0995                     	;# 
  7592  0996                     	;# 
  7593  0997                     	;# 
  7594  0E0F                     	;# 
  7595  0E10                     	;# 
  7596  0E11                     	;# 
  7597  0E12                     	;# 
  7598  0E13                     	;# 
  7599  0E14                     	;# 
  7600  0E15                     	;# 
  7601  0E16                     	;# 
  7602  0E17                     	;# 
  7603  0E18                     	;# 
  7604  0E19                     	;# 
  7605  0E1A                     	;# 
  7606  0E1B                     	;# 
  7607  0E1C                     	;# 
  7608  0E1D                     	;# 
  7609  0E1E                     	;# 
  7610  0E1F                     	;# 
  7611  0E20                     	;# 
  7612  0E21                     	;# 
  7613  0E22                     	;# 
  7614  0E23                     	;# 
  7615  0E24                     	;# 
  7616  0E25                     	;# 
  7617  0E26                     	;# 
  7618  0E27                     	;# 
  7619  0E28                     	;# 
  7620  0E29                     	;# 
  7621  0E2A                     	;# 
  7622  0E2B                     	;# 
  7623  0E2C                     	;# 
  7624  0E2D                     	;# 
  7625  0E2E                     	;# 
  7626  0E2F                     	;# 
  7627  0E30                     	;# 
  7628  0E31                     	;# 
  7629  0E32                     	;# 
  7630  0E33                     	;# 
  7631  0E34                     	;# 
  7632  0E35                     	;# 
  7633  0E36                     	;# 
  7634  0E37                     	;# 
  7635  0E8F                     	;# 
  7636  0E90                     	;# 
  7637  0E91                     	;# 
  7638  0E92                     	;# 
  7639  0E93                     	;# 
  7640  0E94                     	;# 
  7641  0E95                     	;# 
  7642  0E96                     	;# 
  7643  0E97                     	;# 
  7644  0E9C                     	;# 
  7645  0E9D                     	;# 
  7646  0E9E                     	;# 
  7647  0EA1                     	;# 
  7648  0EA2                     	;# 
  7649  0EA3                     	;# 
  7650  0EA4                     	;# 
  7651  0EA5                     	;# 
  7652  0EA9                     	;# 
  7653  0EAA                     	;# 
  7654  0EAB                     	;# 
  7655  0EAC                     	;# 
  7656  0EB1                     	;# 
  7657  0EB2                     	;# 
  7658  0EB3                     	;# 
  7659  0EB8                     	;# 
  7660  0EB9                     	;# 
  7661  0EBA                     	;# 
  7662  0EBB                     	;# 
  7663  0EBC                     	;# 
  7664  0EBD                     	;# 
  7665  0EBE                     	;# 
  7666  0EC3                     	;# 
  7667  0EC5                     	;# 
  7668  0EC6                     	;# 
  7669  0EC7                     	;# 
  7670  0EC8                     	;# 
  7671  0EC9                     	;# 
  7672  0ECA                     	;# 
  7673  0ECB                     	;# 
  7674  0ECC                     	;# 
  7675  0F10                     	;# 
  7676  0F11                     	;# 
  7677  0F12                     	;# 
  7678  0F13                     	;# 
  7679  0F14                     	;# 
  7680  0F15                     	;# 
  7681  0F16                     	;# 
  7682  0F17                     	;# 
  7683  0F18                     	;# 
  7684  0F19                     	;# 
  7685  0F1A                     	;# 
  7686  0F1B                     	;# 
  7687  0F1C                     	;# 
  7688  0F1D                     	;# 
  7689  0F1E                     	;# 
  7690  0F1F                     	;# 
  7691  0F20                     	;# 
  7692  0F21                     	;# 
  7693  0F22                     	;# 
  7694  0F23                     	;# 
  7695  0F24                     	;# 
  7696  0F25                     	;# 
  7697  0F26                     	;# 
  7698  0F27                     	;# 
  7699  0F28                     	;# 
  7700  0F29                     	;# 
  7701  0F2A                     	;# 
  7702  0F2B                     	;# 
  7703  0F2C                     	;# 
  7704  0F2D                     	;# 
  7705  0F2E                     	;# 
  7706  0F2F                     	;# 
  7707  0F30                     	;# 
  7708  0F31                     	;# 
  7709  0F32                     	;# 
  7710  0F38                     	;# 
  7711  0F39                     	;# 
  7712  0F3A                     	;# 
  7713  0F3B                     	;# 
  7714  0F3C                     	;# 
  7715  0F3D                     	;# 
  7716  0F3E                     	;# 
  7717  0F3F                     	;# 
  7718  0F40                     	;# 
  7719  0F41                     	;# 
  7720  0F43                     	;# 
  7721  0F44                     	;# 
  7722  0F45                     	;# 
  7723  0F46                     	;# 
  7724  0F47                     	;# 
  7725  0F48                     	;# 
  7726  0F49                     	;# 
  7727  0F4A                     	;# 
  7728  0F4B                     	;# 
  7729  0F4C                     	;# 
  7730  0F4E                     	;# 
  7731  0F4F                     	;# 
  7732  0F50                     	;# 
  7733  0F51                     	;# 
  7734  0F52                     	;# 
  7735  0F53                     	;# 
  7736  0F54                     	;# 
  7737  0F55                     	;# 
  7738  0F56                     	;# 
  7739  0F57                     	;# 
  7740  0F59                     	;# 
  7741  0F5A                     	;# 
  7742  0F5B                     	;# 
  7743  0F5C                     	;# 
  7744  0F5D                     	;# 
  7745  0F61                     	;# 
  7746  0F62                     	;# 
  7747  0F64                     	;# 
  7748  0F65                     	;# 
  7749  0F66                     	;# 
  7750  0F67                     	;# 
  7751  0F68                     	;# 
  7752  0F69                     	;# 
  7753  0F6A                     	;# 
  7754  0F6B                     	;# 
  7755  0F6C                     	;# 
  7756  0F6D                     	;# 
  7757  0FE4                     	;# 
  7758  0FE5                     	;# 
  7759  0FE6                     	;# 
  7760  0FE7                     	;# 
  7761  0FE8                     	;# 
  7762  0FE9                     	;# 
  7763  0FEA                     	;# 
  7764  0FEB                     	;# 
  7765  0FED                     	;# 
  7766  0FEE                     	;# 
  7767  0FEF                     	;# 
  7768                           
  7769                           	psect	idataBANK0
  7770  0A0D                     __pidataBANK0:
  7771                           
  7772                           ;initializer for _clkAlarm
  7773  0A0D  3401               	retlw	1
  7774  0A0E  3400               	retlw	0
  7775  0A0F  3400               	retlw	0
  7776  0A10  3400               	retlw	0
  7777                           
  7778                           ;initializer for _lumAlarm
  7779  0A11  3404               	retlw	4
  7780  0A12  3400               	retlw	0
  7781  0A13  3400               	retlw	0
  7782                           
  7783                           ;initializer for _tempAlarm
  7784  0A14  341C               	retlw	28
  7785  0A15  3400               	retlw	0
  7786  0A16  3400               	retlw	0
  7787                           
  7788                           ;initializer for _prevLumLevel
  7789  0A17  34FF               	retlw	255
  7790  0A18  34FF               	retlw	255
  7791                           
  7792                           ;initializer for _prevTemp
  7793  0A19  34FF               	retlw	255
  7794  0A1A  34FF               	retlw	255
  7795                           
  7796                           ;initializer for _alarmsEnable
  7797  0A1B  3401               	retlw	1
  7798                           
  7799                           	psect	idataBANK1
  7800  098D                     __pidataBANK1:
  7801                           
  7802                           ;initializer for _alarmPWMStart
  7803  098D  34FF               	retlw	255
  7804  098E  34FF               	retlw	255
  7805  098F  34FF               	retlw	255
  7806                           
  7807                           	psect	stringtext1
  7808  100F                     __pstringtext1:
  7809  100F                     _dpowers:
  7810  100F  3401               	retlw	1
  7811  1010  3400               	retlw	0
  7812  1011  340A               	retlw	10
  7813  1012  3400               	retlw	0
  7814  1013  3464               	retlw	100
  7815  1014  3400               	retlw	0
  7816  1015  34E8               	retlw	232
  7817  1016  3403               	retlw	3
  7818  1017  3410               	retlw	16
  7819  1018  3427               	retlw	39
  7820  1019                     __end_of_dpowers:
  7821                           
  7822                           	psect	nvBANK0
  7823  006B                     __pnvBANK0:
  7824  006B                     _timer5ReloadVal:
  7825  006B                     	ds	2
  7826  006D                     _timer3ReloadVal:
  7827  006D                     	ds	2
  7828                           
  7829                           	psect	nvBANK1
  7830  00AA                     __pnvBANK1:
  7831  00AA                     _TMR5_InterruptHandler:
  7832  00AA                     	ds	2
  7833  00AC                     _TMR3_InterruptHandler:
  7834  00AC                     	ds	2
  7835  00AE                     _TMR1_InterruptHandler:
  7836  00AE                     	ds	2
  7837  00B0                     _timer1ReloadVal:
  7838  00B0                     	ds	2
  7839  0013                     _TRISCbits	set	19
  7840  000E                     _PORTCbits	set	14
  7841  000D                     _PORTBbits	set	13
  7842  0016                     _LATAbits	set	22
  7843  000B                     _INTCONbits	set	11
  7844  0014                     _TRISD	set	20
  7845  0013                     _TRISC	set	19
  7846  0012                     _TRISB	set	18
  7847  0011                     _TRISA	set	17
  7848  0015                     _TRISE	set	21
  7849  0018                     _LATC	set	24
  7850  0017                     _LATB	set	23
  7851  0016                     _LATA	set	22
  7852  0019                     _LATD	set	25
  7853  001A                     _LATE	set	26
  7854  0094                     _ADCON1bits	set	148
  7855  008E                     _ADPREVL	set	142
  7856  008F                     _ADPREVH	set	143
  7857  0097                     _ADSTATbits	set	151
  7858  0090                     _ADACCL	set	144
  7859  0091                     _ADACCH	set	145
  7860  0095                     _ADCON2bits	set	149
  7861  009C                     _ADPRE	set	156
  7862  0096                     _ADCON3bits	set	150
  7863  008C                     _ADRESL	set	140
  7864  008D                     _ADRESH	set	141
  7865  0093                     _ADCON0bits	set	147
  7866  009D                     _ADACQ	set	157
  7867  0093                     _ADCON0	set	147
  7868  0098                     _ADCLK	set	152
  7869  0099                     _ADACT	set	153
  7870  009A                     _ADREF	set	154
  7871  0097                     _ADSTAT	set	151
  7872  0096                     _ADCON3	set	150
  7873  0095                     _ADCON2	set	149
  7874  0094                     _ADCON1	set	148
  7875  009B                     _ADCAP	set	155
  7876  009E                     _ADPCH	set	158
  7877  0116                     _ADERRL	set	278
  7878  0117                     _ADERRH	set	279
  7879  0114                     _ADFLTRL	set	276
  7880  0115                     _ADFLTRH	set	277
  7881  010C                     _ADCNT	set	268
  7882  010D                     _ADRPT	set	269
  7883  0113                     _ADSTPTH	set	275
  7884  0112                     _ADSTPTL	set	274
  7885  0111                     _ADUTHH	set	273
  7886  0110                     _ADUTHL	set	272
  7887  010F                     _ADLTHH	set	271
  7888  010E                     _ADLTHL	set	270
  7889  018E                     _SSP1MSK	set	398
  7890  018D                     _SSP1ADD	set	397
  7891  018F                     _SSP1STAT	set	399
  7892  0191                     _SSP1CON2	set	401
  7893  0190                     _SSP1CON1bits	set	400
  7894  018C                     _SSP1BUF	set	396
  7895  018F                     _SSP1STATbits	set	399
  7896  0191                     _SSP1CON2bits	set	401
  7897  0190                     _SSP1CON1	set	400
  7898  021F                     _CCPTMRS1bits	set	543
  7899  021B                     _T5GCONbits	set	539
  7900  021A                     _T5CONbits	set	538
  7901  021A                     _T5CON	set	538
  7902  0218                     _TMR5L	set	536
  7903  0219                     _TMR5H	set	537
  7904  021D                     _T5CLK	set	541
  7905  021C                     _T5GATE	set	540
  7906  021B                     _T5GCON	set	539
  7907  0215                     _T3GCONbits	set	533
  7908  0214                     _T3CONbits	set	532
  7909  0214                     _T3CON	set	532
  7910  0212                     _TMR3L	set	530
  7911  0213                     _TMR3H	set	531
  7912  0217                     _T3CLK	set	535
  7913  0216                     _T3GATE	set	534
  7914  0215                     _T3GCON	set	533
  7915  020F                     _T1GCONbits	set	527
  7916  020E                     _T1CONbits	set	526
  7917  020E                     _T1CON	set	526
  7918  020C                     _TMR1L	set	524
  7919  020D                     _TMR1H	set	525
  7920  0211                     _T1CLK	set	529
  7921  0210                     _T1GATE	set	528
  7922  020F                     _T1GCON	set	527
  7923  028D                     _PR2	set	653
  7924  028C                     _TMR2	set	652
  7925  028E                     _T2CONbits	set	654
  7926  0291                     _T2RSTbits	set	657
  7927  028F                     _T2HLTbits	set	655
  7928  028E                     _T2CON	set	654
  7929  028C                     _T2TMR	set	652
  7930  028D                     _T2PR	set	653
  7931  0291                     _T2RST	set	657
  7932  028F                     _T2HLT	set	655
  7933  0290                     _T2CLKCON	set	656
  7934  038C                     _PWM6DCL	set	908
  7935  038D                     _PWM6DCH	set	909
  7936  038E                     _PWM6CON	set	910
  7937  1C77                     _PWM6EN	set	7287
  7938  0710                     _PIR4bits	set	1808
  7939  071A                     _PIE4bits	set	1818
  7940  0719                     _PIE3bits	set	1817
  7941  070F                     _PIR3bits	set	1807
  7942  079B                     _PMD5	set	1947
  7943  079A                     _PMD4	set	1946
  7944  0799                     _PMD3	set	1945
  7945  0798                     _PMD2	set	1944
  7946  0797                     _PMD1	set	1943
  7947  0796                     _PMD0	set	1942
  7948  081F                     _NVMCON2	set	2079
  7949  081C                     _NVMDATL	set	2076
  7950  081D                     _NVMDATH	set	2077
  7951  081E                     _NVMCON1bits	set	2078
  7952  081B                     _NVMADRH	set	2075
  7953  081A                     _NVMADRL	set	2074
  7954  0892                     _OSCTUNE	set	2194
  7955  0893                     _OSCFRQ	set	2195
  7956  0891                     _OSCEN	set	2193
  7957  088F                     _OSCCON3	set	2191
  7958  088D                     _OSCCON1	set	2189
  7959  0EC6                     _SSP1DATPPS	set	3782
  7960  0EC5                     _SSP1CLKPPS	set	3781
  7961  0F16                     _RA6PPS	set	3862
  7962  0F24                     _RC4PPS	set	3876
  7963  0F23                     _RC3PPS	set	3875
  7964  0F67                     _SLRCONE	set	3943
  7965  0F5C                     _SLRCOND	set	3932
  7966  0F51                     _SLRCONC	set	3921
  7967  0F46                     _SLRCONB	set	3910
  7968  0F3B                     _SLRCONA	set	3899
  7969  0F5B                     _ODCOND	set	3931
  7970  0F50                     _ODCONC	set	3920
  7971  0F45                     _ODCONB	set	3909
  7972  0F3A                     _ODCONA	set	3898
  7973  0F66                     _ODCONE	set	3942
  7974  0F4F                     _WPUC	set	3919
  7975  0F39                     _WPUA	set	3897
  7976  0F44                     _WPUB	set	3908
  7977  0F65                     _WPUE	set	3941
  7978  0F5A                     _WPUD	set	3930
  7979  0F38                     _ANSELA	set	3896
  7980  0F64                     _ANSELE	set	3940
  7981  0F43                     _ANSELB	set	3907
  7982  0F4E                     _ANSELC	set	3918
  7983  0F59                     _ANSELD	set	3929
  7984  7A7C                     _WPUC4	set	31356
  7985  7A7B                     _WPUC3	set	31355
  7986                           
  7987                           	psect	stringtext2
  7988  1000                     __pstringtext2:
  7989  1000                     STR_1:
  7990  1000  3425               	retlw	37	;'%'
  7991  1001  3430               	retlw	48	;'0'
  7992  1002  3432               	retlw	50	;'2'
  7993  1003  3464               	retlw	100	;'d'
  7994  1004  343A               	retlw	58	;':'
  7995  1005  3425               	retlw	37	;'%'
  7996  1006  3430               	retlw	48	;'0'
  7997  1007  3432               	retlw	50	;'2'
  7998  1008  3464               	retlw	100	;'d'
  7999  1009  343A               	retlw	58	;':'
  8000  100A  3425               	retlw	37	;'%'
  8001  100B  3430               	retlw	48	;'0'
  8002  100C  3432               	retlw	50	;'2'
  8003  100D  3464               	retlw	100	;'d'
  8004  100E  3400               	retlw	0
  8005                           
  8006                           	psect	stringtext3
  8007  1019                     __pstringtext3:
  8008  1019                     STR_3:
  8009  1019  3425               	retlw	37	;'%'
  8010  101A  3430               	retlw	48	;'0'
  8011  101B  3432               	retlw	50	;'2'
  8012  101C  3464               	retlw	100	;'d'
  8013  101D  3420               	retlw	32	;' '
  8014  101E  3443               	retlw	67	;'C'
  8015  101F  3400               	retlw	0
  8016                           
  8017                           	psect	stringtext4
  8018  1020                     __pstringtext4:
  8019  1020                     STR_5:
  8020  1020  344C               	retlw	76	;'L'
  8021  1021  3420               	retlw	32	;' '
  8022  1022  3425               	retlw	37	;'%'
  8023  1023  3464               	retlw	100	;'d'
  8024  1024  3400               	retlw	0
  8025                           
  8026                           	psect	stringtext5
  8027  0000                     __pstringtext5:
  8028  1019                     
  8029                           	psect	cinit
  8030  0042                     start_initialization:	
  8031                           ; #config settings
  8032                           
  8033  0042                     __initialization:
  8034                           
  8035                           ; Initialize objects allocated to BANK0
  8036  0042  300D               	movlw	low __pidataBANK0
  8037  0043  0084               	movwf	4
  8038  0044  308A               	movlw	(high __pidataBANK0)| (0+128)
  8039  0045  0085               	movwf	5
  8040  0046  305C               	movlw	low __pdataBANK0
  8041  0047  0086               	movwf	6
  8042  0048  3000               	movlw	high __pdataBANK0
  8043  0049  0087               	movwf	7
  8044  004A  300F               	movlw	15
  8045  004B  3189  21B4  3180   	fcall	init_ram
  8046                           
  8047                           ; Initialize objects allocated to BANK1
  8048  004E  308D               	movlw	low __pidataBANK1
  8049  004F  0084               	movwf	4
  8050  0050  3089               	movlw	(high __pidataBANK1)| (0+128)
  8051  0051  0085               	movwf	5
  8052  0052  30B9               	movlw	low __pdataBANK1
  8053  0053  0086               	movwf	6
  8054  0054  3000               	movlw	high __pdataBANK1
  8055  0055  0087               	movwf	7
  8056  0056  3003               	movlw	3
  8057  0057  3189  21B4  3180   	fcall	init_ram
  8058                           
  8059                           ; Clear objects allocated to BANK0
  8060  005A  304D               	movlw	low __pbssBANK0
  8061  005B  0084               	movwf	4
  8062  005C  3000               	movlw	high __pbssBANK0
  8063  005D  0085               	movwf	5
  8064  005E  300F               	movlw	15
  8065  005F  3189  21AE  3180   	fcall	clear_ram0
  8066                           
  8067                           ; Clear objects allocated to BANK1
  8068  0062  30B2               	movlw	low __pbssBANK1
  8069  0063  0084               	movwf	4
  8070  0064  3000               	movlw	high __pbssBANK1
  8071  0065  0085               	movwf	5
  8072  0066  3007               	movlw	7
  8073  0067  3189  21AE  3180   	fcall	clear_ram0
  8074  006A                     end_of_initialization:	
  8075                           ;End of C runtime variable initialization code
  8076                           
  8077  006A                     __end_of__initialization:
  8078  006A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8079  006B  0020               	movlb	0
  8080  006C  318F  2F74         	ljmp	_main	;jump to C main() function
  8081                           
  8082                           	psect	bssBANK0
  8083  004D                     __pbssBANK0:
  8084  004D                     _t:
  8085  004D                     	ds	3
  8086  0050                     _regIdx:
  8087  0050                     	ds	2
  8088  0052                     _mode:
  8089  0052                     	ds	2
  8090  0054                     _editingClockAlarm:
  8091  0054                     	ds	2
  8092  0056                     _dimingLed:
  8093  0056                     	ds	2
  8094  0058                     _editingLumAlarm:
  8095  0058                     	ds	1
  8096  0059                     _editingTempAlarm:
  8097  0059                     	ds	1
  8098  005A                     _lumLevel:
  8099  005A                     	ds	1
  8100  005B                     _temp:
  8101  005B                     	ds	1
  8102                           
  8103                           	psect	dataBANK0
  8104  005C                     __pdataBANK0:
  8105  005C                     _clkAlarm:
  8106  005C                     	ds	4
  8107  0060                     _lumAlarm:
  8108  0060                     	ds	3
  8109  0063                     _tempAlarm:
  8110  0063                     	ds	3
  8111  0066                     _prevLumLevel:
  8112  0066                     	ds	2
  8113  0068                     _prevTemp:
  8114  0068                     	ds	2
  8115  006A                     _alarmsEnable:
  8116  006A                     	ds	1
  8117                           
  8118                           	psect	bssBANK1
  8119  00B2                     __pbssBANK1:
  8120  00B2                     menuLCD_ISR@F12809:
  8121  00B2                     	ds	3
  8122  00B5                     _i2c1_driver_i2cISR:
  8123  00B5                     	ds	2
  8124  00B7                     _i2c1_driver_busCollisionISR:
  8125  00B7                     	ds	2
  8126                           
  8127                           	psect	dataBANK1
  8128  00B9                     __pdataBANK1:
  8129  00B9                     _alarmPWMStart:
  8130  00B9                     	ds	3
  8131                           
  8132                           	psect	inittext
  8133  09B4                     init_ram:
  8134  09B4  00FE               	movwf	btemp
  8135  09B5                     initloop:
  8136  09B5  0012               	moviw fsr0++
  8137  09B6  001E               	movwi fsr1++
  8138  09B7  0BFE               	decfsz	btemp,f
  8139  09B8  29B5               	goto	initloop
  8140  09B9  3400               	retlw	0
  8141                           
  8142                           	psect	clrtext
  8143  09AE                     clear_ram0:	
  8144                           ;	Called with FSR0 containing the base address, and
  8145                           ;	WREG with the size to clear
  8146                           
  8147  09AE  0064               	clrwdt	;clear the watchdog before getting into this loop
  8148  09AF                     clrloop0:
  8149  09AF  0180               	clrf	0	;clear RAM location pointed to by FSR
  8150  09B0  3101               	addfsr 0,1
  8151  09B1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  8152  09B2  29AF               	goto	clrloop0	;have we reached the end yet?
  8153  09B3  3400               	retlw	0	;all done for this memory range, return
  8154                           
  8155                           	psect	cstackBANK1
  8156  00A0                     __pcstackBANK1:
  8157  00A0                     ??_PMD_Initialize:
  8158  00A0                     ??_OSCILLATOR_Initialize:	
  8159                           ; 1 bytes @ 0x0
  8160                           
  8161  00A0                     ??_PWM6_Initialize:	
  8162                           ; 1 bytes @ 0x0
  8163                           
  8164  00A0                     ??_ADCC_Initialize:	
  8165                           ; 1 bytes @ 0x0
  8166                           
  8167  00A0                     ??_TMR2_Initialize:	
  8168                           ; 1 bytes @ 0x0
  8169                           
  8170  00A0                     ?_TMR1_SetInterruptHandler:	
  8171                           ; 1 bytes @ 0x0
  8172                           
  8173  00A0                     ?_TMR3_SetInterruptHandler:	
  8174                           ; 1 bytes @ 0x0
  8175                           
  8176  00A0                     ?_TMR5_SetInterruptHandler:	
  8177                           ; 1 bytes @ 0x0
  8178                           
  8179  00A0                     ??_WriteI2C:	
  8180                           ; 1 bytes @ 0x0
  8181                           
  8182  00A0                     ??_PIN_MANAGER_Initialize:	
  8183                           ; 1 bytes @ 0x0
  8184                           
  8185  00A0                     ??_i2c1_driver_open:	
  8186                           ; 1 bytes @ 0x0
  8187                           
  8188  00A0                     ?_PWM6_LoadDutyValue:	
  8189                           ; 1 bytes @ 0x0
  8190                           
  8191  00A0                     ??_TMR2_Stop:	
  8192                           ; 1 bytes @ 0x0
  8193                           
  8194  00A0                     ??_TMR2_StopTimer:	
  8195                           ; 1 bytes @ 0x0
  8196                           
  8197  00A0                     ??_PWM_Output_D4_Disable:	
  8198                           ; 1 bytes @ 0x0
  8199                           
  8200  00A0                     ??_editClock:	
  8201                           ; 1 bytes @ 0x0
  8202                           
  8203  00A0                     ??_editTemp:	
  8204                           ; 1 bytes @ 0x0
  8205                           
  8206  00A0                     ??_editLum:	
  8207                           ; 1 bytes @ 0x0
  8208                           
  8209  00A0                     ??_toggleAlarms:	
  8210                           ; 1 bytes @ 0x0
  8211                           
  8212  00A0                     TMR1_SetInterruptHandler@InterruptHandler:	
  8213                           ; 1 bytes @ 0x0
  8214                           
  8215  00A0                     TMR3_SetInterruptHandler@InterruptHandler:	
  8216                           ; 2 bytes @ 0x0
  8217                           
  8218  00A0                     TMR5_SetInterruptHandler@InterruptHandler:	
  8219                           ; 2 bytes @ 0x0
  8220                           
  8221  00A0                     PWM6_LoadDutyValue@dutyValue:	
  8222                           ; 2 bytes @ 0x0
  8223                           
  8224                           
  8225                           ; 2 bytes @ 0x0
  8226  00A0                     	ds	1
  8227  00A1                     WriteI2C@data_out:
  8228                           
  8229                           ; 1 bytes @ 0x1
  8230  00A1                     	ds	1
  8231  00A2                     ??_TMR3_Initialize:
  8232  00A2                     ??_TMR5_Initialize:	
  8233                           ; 1 bytes @ 0x2
  8234                           
  8235  00A2                     ??_TMR1_Initialize:	
  8236                           ; 1 bytes @ 0x2
  8237                           
  8238  00A2                     ??_TMR1_SetInterruptHandler:	
  8239                           ; 1 bytes @ 0x2
  8240                           
  8241  00A2                     ??_TMR3_SetInterruptHandler:	
  8242                           ; 1 bytes @ 0x2
  8243                           
  8244  00A2                     ??_TMR5_SetInterruptHandler:	
  8245                           ; 1 bytes @ 0x2
  8246                           
  8247  00A2                     ??_SYSTEM_Initialize:	
  8248                           ; 1 bytes @ 0x2
  8249                           
  8250  00A2                     ??_PWM6_LoadDutyValue:	
  8251                           ; 1 bytes @ 0x2
  8252                           
  8253  00A2                     ??_LCDsend:	
  8254                           ; 1 bytes @ 0x2
  8255                           
  8256  00A2                     ?_LCDsend2x4:	
  8257                           ; 1 bytes @ 0x2
  8258                           
  8259  00A2                     LCDsend2x4@mode:	
  8260                           ; 1 bytes @ 0x2
  8261                           
  8262                           
  8263                           ; 1 bytes @ 0x2
  8264  00A2                     	ds	1
  8265  00A3                     ??_LCDsend2x4:
  8266  00A3                     LCDsend@c:	
  8267                           ; 1 bytes @ 0x3
  8268                           
  8269                           
  8270                           ; 1 bytes @ 0x3
  8271  00A3                     	ds	2
  8272  00A5                     LCDsend2x4@c:
  8273                           
  8274                           ; 1 bytes @ 0x5
  8275  00A5                     	ds	1
  8276  00A6                     LCDsend2x4@hc:
  8277                           
  8278                           ; 1 bytes @ 0x6
  8279  00A6                     	ds	1
  8280  00A7                     LCDsend2x4@lc:
  8281                           
  8282                           ; 1 bytes @ 0x7
  8283  00A7                     	ds	1
  8284  00A8                     ??_LCDinit:
  8285                           
  8286                           ; 1 bytes @ 0x8
  8287  00A8                     	ds	1
  8288  00A9                     ??_main:
  8289                           
  8290                           ; 1 bytes @ 0x9
  8291  00A9                     	ds	1
  8292                           
  8293                           	psect	cstackCOMMON
  8294  0070                     __pcstackCOMMON:
  8295  0070                     ?_isdigit:
  8296  0070                     ?_i2c1_driver_open:	
  8297                           ; 1 bit 
  8298                           
  8299  0070                     ?_PMD_Initialize:	
  8300                           ; 1 bit 
  8301                           
  8302  0070                     ?_OSCILLATOR_Initialize:	
  8303                           ; 1 bytes @ 0x0
  8304                           
  8305  0070                     ?_PWM6_Initialize:	
  8306                           ; 1 bytes @ 0x0
  8307                           
  8308  0070                     ?_ADCC_Initialize:	
  8309                           ; 1 bytes @ 0x0
  8310                           
  8311  0070                     ?_TMR3_Initialize:	
  8312                           ; 1 bytes @ 0x0
  8313                           
  8314  0070                     ?_TMR5_Initialize:	
  8315                           ; 1 bytes @ 0x0
  8316                           
  8317  0070                     ?_TMR2_Initialize:	
  8318                           ; 1 bytes @ 0x0
  8319                           
  8320  0070                     ?_TMR1_Initialize:	
  8321                           ; 1 bytes @ 0x0
  8322                           
  8323  0070                     ?_TMR5_ISR:	
  8324                           ; 1 bytes @ 0x0
  8325                           
  8326  0070                     ?_TMR3_ISR:	
  8327                           ; 1 bytes @ 0x0
  8328                           
  8329  0070                     ?_TMR1_ISR:	
  8330                           ; 1 bytes @ 0x0
  8331                           
  8332  0070                     ?_TMR1_DefaultInterruptHandler:	
  8333                           ; 1 bytes @ 0x0
  8334                           
  8335  0070                     ??_TMR1_DefaultInterruptHandler:	
  8336                           ; 1 bytes @ 0x0
  8337                           
  8338  0070                     ?_TMR3_DefaultInterruptHandler:	
  8339                           ; 1 bytes @ 0x0
  8340                           
  8341  0070                     ??_TMR3_DefaultInterruptHandler:	
  8342                           ; 1 bytes @ 0x0
  8343                           
  8344  0070                     ?_TMR5_DefaultInterruptHandler:	
  8345                           ; 1 bytes @ 0x0
  8346                           
  8347  0070                     ??_TMR5_DefaultInterruptHandler:	
  8348                           ; 1 bytes @ 0x0
  8349                           
  8350  0070                     ??_isdigit:	
  8351                           ; 1 bytes @ 0x0
  8352                           
  8353  0070                     ?_ReadI2C:	
  8354                           ; 1 bytes @ 0x0
  8355                           
  8356  0070                     ??_ReadI2C:	
  8357                           ; 1 bytes @ 0x0
  8358                           
  8359  0070                     ?_WriteI2C:	
  8360                           ; 1 bytes @ 0x0
  8361                           
  8362  0070                     ?_PIN_MANAGER_Initialize:	
  8363                           ; 1 bytes @ 0x0
  8364                           
  8365  0070                     ?_SYSTEM_Initialize:	
  8366                           ; 1 bytes @ 0x0
  8367                           
  8368  0070                     ?_INTERRUPT_InterruptManager:	
  8369                           ; 1 bytes @ 0x0
  8370                           
  8371  0070                     ?_TMR1_WriteTimer:	
  8372                           ; 1 bytes @ 0x0
  8373                           
  8374  0070                     ?_TMR3_WriteTimer:	
  8375                           ; 1 bytes @ 0x0
  8376                           
  8377  0070                     ?_TMR5_WriteTimer:	
  8378                           ; 1 bytes @ 0x0
  8379                           
  8380  0070                     ?_TMR2_Start:	
  8381                           ; 1 bytes @ 0x0
  8382                           
  8383  0070                     ??_TMR2_Start:	
  8384                           ; 1 bytes @ 0x0
  8385                           
  8386  0070                     ?_TMR2_StartTimer:	
  8387                           ; 1 bytes @ 0x0
  8388                           
  8389  0070                     ??_TMR2_StartTimer:	
  8390                           ; 1 bytes @ 0x0
  8391                           
  8392  0070                     ?_TMR2_Stop:	
  8393                           ; 1 bytes @ 0x0
  8394                           
  8395  0070                     ?_TMR2_StopTimer:	
  8396                           ; 1 bytes @ 0x0
  8397                           
  8398  0070                     ?_tsttc:	
  8399                           ; 1 bytes @ 0x0
  8400                           
  8401  0070                     ?_LCDsend:	
  8402                           ; 1 bytes @ 0x0
  8403                           
  8404  0070                     ?_LCDinit:	
  8405                           ; 1 bytes @ 0x0
  8406                           
  8407  0070                     ?_LCDcmd:	
  8408                           ; 1 bytes @ 0x0
  8409                           
  8410  0070                     ?_LCDchar:	
  8411                           ; 1 bytes @ 0x0
  8412                           
  8413  0070                     ?_LCDstr:	
  8414                           ; 1 bytes @ 0x0
  8415                           
  8416  0070                     ?_differenceBetweenTimePeriod:	
  8417                           ; 1 bytes @ 0x0
  8418                           
  8419  0070                     ?_PWM_Output_D4_Enable:	
  8420                           ; 1 bytes @ 0x0
  8421                           
  8422  0070                     ??_PWM_Output_D4_Enable:	
  8423                           ; 1 bytes @ 0x0
  8424                           
  8425  0070                     ?_PWM_Output_D4_Disable:	
  8426                           ; 1 bytes @ 0x0
  8427                           
  8428  0070                     ?_Clock_ISR:	
  8429                           ; 1 bytes @ 0x0
  8430                           
  8431  0070                     ??_Clock_ISR:	
  8432                           ; 1 bytes @ 0x0
  8433                           
  8434  0070                     ?_menuLCD_ISR:	
  8435                           ; 1 bytes @ 0x0
  8436                           
  8437  0070                     ?_monitoring_ISR:	
  8438                           ; 1 bytes @ 0x0
  8439                           
  8440  0070                     ?_editClock:	
  8441                           ; 1 bytes @ 0x0
  8442                           
  8443  0070                     ?_editTemp:	
  8444                           ; 1 bytes @ 0x0
  8445                           
  8446  0070                     ?_editLum:	
  8447                           ; 1 bytes @ 0x0
  8448                           
  8449  0070                     ?_toggleAlarms:	
  8450                           ; 1 bytes @ 0x0
  8451                           
  8452  0070                     ?_main:	
  8453                           ; 1 bytes @ 0x0
  8454                           
  8455  0070                     ?i1_WriteI2C:	
  8456                           ; 1 bytes @ 0x0
  8457                           
  8458  0070                     ??i1_WriteI2C:	
  8459                           ; 1 bytes @ 0x0
  8460                           
  8461  0070                     ?i1_PWM6_LoadDutyValue:	
  8462                           ; 1 bytes @ 0x0
  8463                           
  8464  0070                     ?i1_TMR2_Stop:	
  8465                           ; 1 bytes @ 0x0
  8466                           
  8467  0070                     ??i1_TMR2_Stop:	
  8468                           ; 1 bytes @ 0x0
  8469                           
  8470  0070                     ?i1_TMR2_StopTimer:	
  8471                           ; 1 bytes @ 0x0
  8472                           
  8473  0070                     ??i1_TMR2_StopTimer:	
  8474                           ; 1 bytes @ 0x0
  8475                           
  8476  0070                     ?i1_PWM_Output_D4_Disable:	
  8477                           ; 1 bytes @ 0x0
  8478                           
  8479  0070                     ??i1_PWM_Output_D4_Disable:	
  8480                           ; 1 bytes @ 0x0
  8481                           
  8482  0070                     ?_ADCC_GetSingleConversion:	
  8483                           ; 1 bytes @ 0x0
  8484                           
  8485  0070                     ?___wmul:	
  8486                           ; 2 bytes @ 0x0
  8487                           
  8488  0070                     ?___lwdiv:	
  8489                           ; 2 bytes @ 0x0
  8490                           
  8491  0070                     _isdigit$2900:	
  8492                           ; 2 bytes @ 0x0
  8493                           
  8494  0070                     TMR1_WriteTimer@timerVal:	
  8495                           ; 1 bytes @ 0x0
  8496                           
  8497  0070                     TMR3_WriteTimer@timerVal:	
  8498                           ; 2 bytes @ 0x0
  8499                           
  8500  0070                     TMR5_WriteTimer@timerVal:	
  8501                           ; 2 bytes @ 0x0
  8502                           
  8503  0070                     ___wmul@multiplier:	
  8504                           ; 2 bytes @ 0x0
  8505                           
  8506  0070                     ___lwdiv@divisor:	
  8507                           ; 2 bytes @ 0x0
  8508                           
  8509  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  8510                           ; 2 bytes @ 0x0
  8511                           
  8512  0070                     differenceBetweenTimePeriod@start:	
  8513                           ; 2 bytes @ 0x0
  8514                           
  8515                           
  8516                           ; 3 bytes @ 0x0
  8517  0070                     	ds	1
  8518  0071                     isdigit@c:
  8519  0071                     i1WriteI2C@data_out:	
  8520                           ; 1 bytes @ 0x1
  8521                           
  8522                           
  8523                           ; 1 bytes @ 0x1
  8524  0071                     	ds	1
  8525  0072                     ??_TMR1_ISR:
  8526  0072                     ??_TMR1_WriteTimer:	
  8527                           ; 1 bytes @ 0x2
  8528                           
  8529  0072                     ??_TMR3_WriteTimer:	
  8530                           ; 1 bytes @ 0x2
  8531                           
  8532  0072                     ??_TMR5_WriteTimer:	
  8533                           ; 1 bytes @ 0x2
  8534                           
  8535  0072                     ??_tsttc:	
  8536                           ; 1 bytes @ 0x2
  8537                           
  8538  0072                     ??i1_PWM6_LoadDutyValue:	
  8539                           ; 1 bytes @ 0x2
  8540                           
  8541  0072                     ?i1_LCDsend2x4:	
  8542                           ; 1 bytes @ 0x2
  8543                           
  8544  0072                     i1LCDsend2x4@mode:	
  8545                           ; 1 bytes @ 0x2
  8546                           
  8547  0072                     ___wmul@multiplicand:	
  8548                           ; 1 bytes @ 0x2
  8549                           
  8550  0072                     ___lwdiv@dividend:	
  8551                           ; 2 bytes @ 0x2
  8552                           
  8553                           
  8554                           ; 2 bytes @ 0x2
  8555  0072                     	ds	1
  8556  0073                     ??_ADCC_GetSingleConversion:
  8557  0073                     ??i1_LCDsend2x4:	
  8558                           ; 1 bytes @ 0x3
  8559                           
  8560  0073                     ADCC_GetSingleConversion@channel:	
  8561                           ; 1 bytes @ 0x3
  8562                           
  8563  0073                     tsttc@value:	
  8564                           ; 1 bytes @ 0x3
  8565                           
  8566  0073                     differenceBetweenTimePeriod@stop:	
  8567                           ; 1 bytes @ 0x3
  8568                           
  8569                           
  8570                           ; 3 bytes @ 0x3
  8571  0073                     	ds	1
  8572  0074                     ??___wmul:
  8573  0074                     ??___lwdiv:	
  8574                           ; 1 bytes @ 0x4
  8575                           
  8576  0074                     ___wmul@product:	
  8577                           ; 1 bytes @ 0x4
  8578                           
  8579                           
  8580                           ; 2 bytes @ 0x4
  8581  0074                     	ds	1
  8582  0075                     i1LCDsend2x4@c:
  8583  0075                     ___lwdiv@quotient:	
  8584                           ; 1 bytes @ 0x5
  8585                           
  8586                           
  8587                           ; 2 bytes @ 0x5
  8588  0075                     	ds	1
  8589  0076                     ?_DATAEE_WriteByte:
  8590  0076                     ?_DATAEE_ReadByte:	
  8591                           ; 1 bytes @ 0x6
  8592                           
  8593  0076                     differenceBetweenTimePeriod@diff:	
  8594                           ; 1 bytes @ 0x6
  8595                           
  8596  0076                     i1LCDsend2x4@hc:	
  8597                           ; 1 bytes @ 0x6
  8598                           
  8599  0076                     DATAEE_WriteByte@bAdd:	
  8600                           ; 1 bytes @ 0x6
  8601                           
  8602  0076                     DATAEE_ReadByte@bAdd:	
  8603                           ; 2 bytes @ 0x6
  8604                           
  8605                           
  8606                           ; 2 bytes @ 0x6
  8607  0076                     	ds	1
  8608  0077                     ??_differenceBetweenTimePeriod:
  8609  0077                     ___lwdiv@counter:	
  8610                           ; 1 bytes @ 0x7
  8611                           
  8612  0077                     i1LCDsend2x4@lc:	
  8613                           ; 1 bytes @ 0x7
  8614                           
  8615                           
  8616                           ; 1 bytes @ 0x7
  8617  0077                     	ds	1
  8618  0078                     ??_DATAEE_ReadByte:
  8619  0078                     ??_LCDcmd:	
  8620                           ; 1 bytes @ 0x8
  8621                           
  8622  0078                     ??_LCDchar:	
  8623                           ; 1 bytes @ 0x8
  8624                           
  8625  0078                     ?___lwmod:	
  8626                           ; 1 bytes @ 0x8
  8627                           
  8628  0078                     LCDcmd@c:	
  8629                           ; 2 bytes @ 0x8
  8630                           
  8631  0078                     LCDchar@c:	
  8632                           ; 1 bytes @ 0x8
  8633                           
  8634  0078                     DATAEE_WriteByte@bData:	
  8635                           ; 1 bytes @ 0x8
  8636                           
  8637  0078                     ___lwmod@divisor:	
  8638                           ; 1 bytes @ 0x8
  8639                           
  8640                           
  8641                           ; 2 bytes @ 0x8
  8642  0078                     	ds	1
  8643  0079                     ??_DATAEE_WriteByte:
  8644  0079                     ??_LCDstr:	
  8645                           ; 1 bytes @ 0x9
  8646                           
  8647  0079                     DATAEE_WriteByte@GIEBitValue:	
  8648                           ; 1 bytes @ 0x9
  8649                           
  8650                           
  8651                           ; 1 bytes @ 0x9
  8652  0079                     	ds	1
  8653  007A                     ??_monitoring_ISR:
  8654  007A                     LCDstr@c:	
  8655                           ; 1 bytes @ 0xA
  8656                           
  8657  007A                     ___lwmod@dividend:	
  8658                           ; 1 bytes @ 0xA
  8659                           
  8660                           
  8661                           ; 2 bytes @ 0xA
  8662  007A                     	ds	1
  8663  007B                     LCDstr@p:
  8664                           
  8665                           ; 1 bytes @ 0xB
  8666  007B                     	ds	1
  8667  007C                     ??___lwmod:
  8668                           
  8669                           ; 1 bytes @ 0xC
  8670  007C                     	ds	1
  8671  007D                     ??_TMR5_ISR:
  8672  007D                     ___lwmod@counter:	
  8673                           ; 1 bytes @ 0xD
  8674                           
  8675                           
  8676                           ; 1 bytes @ 0xD
  8677  007D                     	ds	1
  8678  007E                     ??_TMR3_ISR:
  8679  007E                     ??_INTERRUPT_InterruptManager:	
  8680                           ; 1 bytes @ 0xE
  8681                           
  8682                           
  8683                           	psect	cstackBANK0
  8684  0020                     __pcstackBANK0:	
  8685                           ; 1 bytes @ 0xE
  8686                           
  8687  0020                     ?_sprintf:
  8688  0020                     sprintf@f:	
  8689                           ; 2 bytes @ 0x0
  8690                           
  8691                           
  8692                           ; 2 bytes @ 0x0
  8693  0020                     	ds	2
  8694  0022                     monitoring_ISR@test1:
  8695                           
  8696                           ; 1 bytes @ 0x2
  8697  0022                     	ds	1
  8698  0023                     monitoring_ISR@test2:
  8699                           
  8700                           ; 1 bytes @ 0x3
  8701  0023                     	ds	1
  8702  0024                     monitoring_ISR@test3:
  8703                           
  8704                           ; 1 bytes @ 0x4
  8705  0024                     	ds	4
  8706  0028                     ??_sprintf:
  8707                           
  8708                           ; 1 bytes @ 0x8
  8709  0028                     	ds	4
  8710  002C                     sprintf@ap:
  8711                           
  8712                           ; 1 bytes @ 0xC
  8713  002C                     	ds	1
  8714  002D                     sprintf@prec:
  8715                           
  8716                           ; 1 bytes @ 0xD
  8717  002D                     	ds	1
  8718  002E                     sprintf@val:
  8719                           
  8720                           ; 2 bytes @ 0xE
  8721  002E                     	ds	2
  8722  0030                     sprintf@flag:
  8723                           
  8724                           ; 1 bytes @ 0x10
  8725  0030                     	ds	1
  8726  0031                     sprintf@width:
  8727                           
  8728                           ; 2 bytes @ 0x11
  8729  0031                     	ds	2
  8730  0033                     sprintf@c:
  8731                           
  8732                           ; 1 bytes @ 0x13
  8733  0033                     	ds	1
  8734  0034                     sprintf@sp:
  8735                           
  8736                           ; 1 bytes @ 0x14
  8737  0034                     	ds	1
  8738  0035                     ??_menuLCD_ISR:
  8739                           
  8740                           ; 1 bytes @ 0x15
  8741  0035                     	ds	6
  8742  003B                     menuLCD_ISR@str:
  8743                           
  8744                           ; 8 bytes @ 0x1B
  8745  003B                     	ds	8
  8746  0043                     menuLCD_ISR@tt:
  8747                           
  8748                           ; 4 bytes @ 0x23
  8749  0043                     	ds	4
  8750  0047                     menuLCD_ISR@l:
  8751                           
  8752                           ; 3 bytes @ 0x27
  8753  0047                     	ds	3
  8754  004A                     menuLCD_ISR@diff:
  8755                           
  8756                           ; 3 bytes @ 0x2A
  8757  004A                     	ds	3
  8758                           
  8759                           	psect	maintext
  8760  0F74                     __pmaintext:	
  8761 ;;
  8762 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  8763 ;;
  8764 ;; *************** function _main *****************
  8765 ;; Defined at:
  8766 ;;		line 610 in file "main.c"
  8767 ;; Parameters:    Size  Location     Type
  8768 ;;		None
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;		None
  8771 ;; Return value:  Size  Location     Type
  8772 ;;                  1    wreg      void 
  8773 ;; Registers used:
  8774 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8775 ;; Tracked objects:
  8776 ;;		On entry : B1F/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8782 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8783 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8784 ;;Total ram usage:        1 bytes
  8785 ;; Hardware stack levels required when called:   10
  8786 ;; This function calls:
  8787 ;;		_LCDinit
  8788 ;;		_PWM6_LoadDutyValue
  8789 ;;		_PWM_Output_D4_Disable
  8790 ;;		_SYSTEM_Initialize
  8791 ;;		_TMR1_SetInterruptHandler
  8792 ;;		_TMR2_StopTimer
  8793 ;;		_TMR3_SetInterruptHandler
  8794 ;;		_TMR5_SetInterruptHandler
  8795 ;;		_editClock
  8796 ;;		_editLum
  8797 ;;		_editTemp
  8798 ;;		_i2c1_driver_open
  8799 ;;		_toggleAlarms
  8800 ;; This function is called by:
  8801 ;;		Startup code after reset
  8802 ;; This function uses a non-reentrant model
  8803 ;;
  8804                           
  8805                           
  8806                           ;psect for function _main
  8807  0F74                     _main:
  8808  0F74                     l4807:	
  8809                           ;incstack = 0
  8810                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8811                           
  8812                           
  8813                           ;main.c: 613: SYSTEM_Initialize();
  8814  0F74  318B  232C  318F   	fcall	_SYSTEM_Initialize
  8815                           
  8816                           ;main.c: 615: PWM6_LoadDutyValue(0);
  8817  0F77  3000               	movlw	0
  8818  0F78  0021               	movlb	1	; select bank1
  8819  0F79  00A0               	movwf	PWM6_LoadDutyValue@dutyValue^(0+128)
  8820  0F7A  00A1               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128)
  8821  0F7B  318A  22F9  318F   	fcall	_PWM6_LoadDutyValue
  8822  0F7E                     l4809:
  8823                           
  8824                           ;main.c: 616: TMR2_StopTimer();
  8825  0F7E  3189  2198  318F   	fcall	_TMR2_StopTimer
  8826  0F81                     l4811:
  8827                           
  8828                           ;main.c: 617: PWM_Output_D4_Disable();
  8829  0F81  3189  2187  318F   	fcall	_PWM_Output_D4_Disable
  8830                           
  8831                           ;main.c: 619: TMR1_SetInterruptHandler(Clock_ISR);
  8832  0F84  30C7               	movlw	low _Clock_ISR
  8833  0F85  0021               	movlb	1	; select bank1
  8834  0F86  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  8835  0F87  300D               	movlw	high _Clock_ISR
  8836  0F88  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8837  0F89  3189  219C  318F   	fcall	_TMR1_SetInterruptHandler
  8838                           
  8839                           ;main.c: 621: TMR3_SetInterruptHandler(menuLCD_ISR);
  8840  0F8C  306E               	movlw	low _menuLCD_ISR
  8841  0F8D  0021               	movlb	1	; select bank1
  8842  0F8E  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  8843  0F8F  3000               	movlw	high _menuLCD_ISR
  8844  0F90  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8845  0F91  3189  21A2  318F   	fcall	_TMR3_SetInterruptHandler
  8846                           
  8847                           ;main.c: 623: TMR5_SetInterruptHandler(monitoring_ISR);
  8848  0F94  30CD               	movlw	low _monitoring_ISR
  8849  0F95  0021               	movlb	1	; select bank1
  8850  0F96  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
  8851  0F97  3003               	movlw	high _monitoring_ISR
  8852  0F98  00A1               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8853  0F99  3189  21A8  318F   	fcall	_TMR5_SetInterruptHandler
  8854                           
  8855                           ;main.c: 629: i2c1_driver_open();
  8856  0F9C  3189  21E6  318F   	fcall	_i2c1_driver_open
  8857  0F9F                     l4813:
  8858                           
  8859                           ;main.c: 630: TRISCbits.TRISC3 = 1;
  8860  0F9F  0020               	movlb	0	; select bank0
  8861  0FA0  1593               	bsf	19,3	;volatile
  8862  0FA1                     l4815:
  8863                           
  8864                           ;main.c: 631: TRISCbits.TRISC4 = 1;
  8865  0FA1  1613               	bsf	19,4	;volatile
  8866  0FA2                     l4817:
  8867                           
  8868                           ;main.c: 632: WPUC3 = 1;
  8869  0FA2  003E               	movlb	30	; select bank30
  8870  0FA3  15CF               	bsf	79,3	;volatile
  8871  0FA4                     l4819:
  8872                           
  8873                           ;main.c: 633: WPUC4 = 1;
  8874  0FA4  164F               	bsf	79,4	;volatile
  8875                           
  8876                           ;main.c: 634: LCDinit();
  8877  0FA5  318E  2678  318F   	fcall	_LCDinit
  8878  0FA8                     l4821:
  8879                           
  8880                           ;main.c: 637: (INTCONbits.GIE = 1);
  8881  0FA8  178B               	bsf	11,7	;volatile
  8882  0FA9                     l4823:
  8883                           
  8884                           ;main.c: 640: (INTCONbits.PEIE = 1);
  8885  0FA9  170B               	bsf	11,6	;volatile
  8886  0FAA                     l4825:
  8887                           
  8888                           ;main.c: 643: {;main.c: 644: if(PORTBbits.RB4 == 0){
  8889  0FAA  0020               	movlb	0	; select bank0
  8890  0FAB  1A0D               	btfsc	13,4	;volatile
  8891  0FAC  2FAE               	goto	u4731
  8892  0FAD  2FAF               	goto	u4730
  8893  0FAE                     u4731:
  8894  0FAE  2FE8               	goto	l4843
  8895  0FAF                     u4730:
  8896  0FAF                     l4827:
  8897                           
  8898                           ;main.c: 645: _delay((unsigned long)((50)*(1000000/4000.0)));
  8899  0FAF  3011               	movlw	17
  8900  0FB0  0021               	movlb	1	; select bank1
  8901  0FB1  00A9               	movwf	??_main^(0+128)
  8902  0FB2  303A               	movlw	58
  8903  0FB3                     u4797:
  8904  0FB3  0B89               	decfsz	9,f
  8905  0FB4  2FB3               	goto	u4797
  8906  0FB5  0BA9               	decfsz	??_main^(0+128),f
  8907  0FB6  2FB3               	goto	u4797
  8908  0FB7  0000               	nop
  8909  0FB8                     l4829:
  8910                           
  8911                           ;main.c: 647: if(mode == 0 && (clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigger
      +                          )){
  8912  0FB8  0020               	movlb	0	; select bank0
  8913  0FB9  0852               	movf	_mode,w
  8914  0FBA  0453               	iorwf	_mode+1,w
  8915  0FBB  1D03               	btfss	3,2
  8916  0FBC  2FBE               	goto	u4741
  8917  0FBD  2FBF               	goto	u4740
  8918  0FBE                     u4741:
  8919  0FBE  2FD2               	goto	l4839
  8920  0FBF                     u4740:
  8921  0FBF                     l4831:
  8922  0FBF  085F               	movf	_clkAlarm+3,w
  8923  0FC0  1D03               	btfss	3,2
  8924  0FC1  2FC3               	goto	u4751
  8925  0FC2  2FC4               	goto	u4750
  8926  0FC3                     u4751:
  8927  0FC3  2FCE               	goto	l4837
  8928  0FC4                     u4750:
  8929  0FC4                     l4833:
  8930  0FC4  0864               	movf	_tempAlarm+1,w
  8931  0FC5  1D03               	btfss	3,2
  8932  0FC6  2FC8               	goto	u4761
  8933  0FC7  2FC9               	goto	u4760
  8934  0FC8                     u4761:
  8935  0FC8  2FCE               	goto	l4837
  8936  0FC9                     u4760:
  8937  0FC9                     l4835:
  8938  0FC9  0861               	movf	_lumAlarm+1,w
  8939  0FCA  1903               	btfsc	3,2
  8940  0FCB  2FCD               	goto	u4771
  8941  0FCC  2FCE               	goto	u4770
  8942  0FCD                     u4771:
  8943  0FCD  2FD2               	goto	l4839
  8944  0FCE                     u4770:
  8945  0FCE                     l4837:
  8946                           
  8947                           ;main.c: 648: clkAlarm.trigger = 0;
  8948  0FCE  01DF               	clrf	_clkAlarm+3
  8949                           
  8950                           ;main.c: 649: tempAlarm.trigger = 0;
  8951  0FCF  01E4               	clrf	_tempAlarm+1
  8952                           
  8953                           ;main.c: 650: lumAlarm.trigger = 0;
  8954  0FD0  01E1               	clrf	_lumAlarm+1
  8955                           
  8956                           ;main.c: 651: }
  8957  0FD1  2FD6               	goto	l1270
  8958  0FD2                     l4839:
  8959                           
  8960                           ;main.c: 652: else{;main.c: 653: mode = 1;
  8961  0FD2  3001               	movlw	1
  8962  0FD3  00D2               	movwf	_mode
  8963  0FD4  3000               	movlw	0
  8964  0FD5  00D3               	movwf	_mode+1
  8965  0FD6                     l1270:
  8966  0FD6  1E0D               	btfss	13,4	;volatile
  8967  0FD7  2FD9               	goto	u4781
  8968  0FD8  2FDA               	goto	u4780
  8969  0FD9                     u4781:
  8970  0FD9  2FD6               	goto	l1270
  8971  0FDA                     u4780:
  8972  0FDA  2FE8               	goto	l4843
  8973  0FDB                     l4841:
  8974                           
  8975                           ;main.c: 661: editClock();
  8976  0FDB  318E  26EE  318F   	fcall	_editClock
  8977  0FDE                     l1277:	
  8978                           ;main.c: 662: case 2:
  8979                           
  8980                           
  8981                           ;main.c: 663: editTemp();
  8982  0FDE  318C  24B4  318F   	fcall	_editTemp
  8983  0FE1                     l1278:	
  8984                           ;main.c: 664: case 3:
  8985                           
  8986                           
  8987                           ;main.c: 665: editLum();
  8988  0FE1  318C  247B  318F   	fcall	_editLum
  8989  0FE4                     l1279:	
  8990                           ;main.c: 666: case 4:
  8991                           
  8992                           
  8993                           ;main.c: 667: toggleAlarms();
  8994  0FE4  318B  23E2  318F   	fcall	_toggleAlarms
  8995                           
  8996                           ;main.c: 668: }
  8997  0FE7  2FAA               	goto	l4825
  8998  0FE8                     l4843:
  8999                           
  9000                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9001                           ; Switch size 1, requested type "simple"
  9002                           ; Number of cases is 1, Range of values is 0 to 0
  9003                           ; switch strategies available:
  9004                           ; Name         Instructions Cycles
  9005                           ; simple_byte            4     3 (average)
  9006                           ; direct_byte            8     6 (fixed)
  9007                           ; jumptable            260     6 (fixed)
  9008                           ;	Chosen strategy is simple_byte
  9009  0FE8  0853               	movf	_mode+1,w
  9010  0FE9  3A00               	xorlw	0	; case 0
  9011  0FEA  1903               	skipnz
  9012  0FEB  2FED               	goto	l4869
  9013  0FEC  2FAA               	goto	l4825
  9014  0FED                     l4869:
  9015                           
  9016                           ; Switch size 1, requested type "simple"
  9017                           ; Number of cases is 5, Range of values is 0 to 4
  9018                           ; switch strategies available:
  9019                           ; Name         Instructions Cycles
  9020                           ; direct_byte           16     6 (fixed)
  9021                           ; simple_byte           16     9 (average)
  9022                           ; jumptable            260     6 (fixed)
  9023                           ;	Chosen strategy is simple_byte
  9024  0FED  0852               	movf	_mode,w
  9025  0FEE  3A00               	xorlw	0	; case 0
  9026  0FEF  1903               	skipnz
  9027  0FF0  2FAA               	goto	l4825
  9028  0FF1  3A01               	xorlw	1	; case 1
  9029  0FF2  1903               	skipnz
  9030  0FF3  2FDB               	goto	l4841
  9031  0FF4  3A03               	xorlw	3	; case 2
  9032  0FF5  1903               	skipnz
  9033  0FF6  2FDE               	goto	l1277
  9034  0FF7  3A01               	xorlw	1	; case 3
  9035  0FF8  1903               	skipnz
  9036  0FF9  2FE1               	goto	l1278
  9037  0FFA  3A07               	xorlw	7	; case 4
  9038  0FFB  1903               	skipnz
  9039  0FFC  2FE4               	goto	l1279
  9040  0FFD  2FAA               	goto	l4825
  9041  0FFE  3180  2840         	ljmp	start
  9042  1000                     __end_of_main:
  9043                           
  9044                           	psect	text1
  9045  0BE2                     __ptext1:	
  9046 ;; *************** function _toggleAlarms *****************
  9047 ;; Defined at:
  9048 ;;		line 593 in file "main.c"
  9049 ;; Parameters:    Size  Location     Type
  9050 ;;		None
  9051 ;; Auto vars:     Size  Location     Type
  9052 ;;		None
  9053 ;; Return value:  Size  Location     Type
  9054 ;;                  1    wreg      void 
  9055 ;; Registers used:
  9056 ;;		wreg, status,2, status,0
  9057 ;; Tracked objects:
  9058 ;;		On entry : 0/0
  9059 ;;		On exit  : 0/0
  9060 ;;		Unchanged: 0/0
  9061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9064 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9065 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9066 ;;Total ram usage:        1 bytes
  9067 ;; Hardware stack levels used:    1
  9068 ;; Hardware stack levels required when called:    7
  9069 ;; This function calls:
  9070 ;;		Nothing
  9071 ;; This function is called by:
  9072 ;;		_main
  9073 ;; This function uses a non-reentrant model
  9074 ;;
  9075                           
  9076                           
  9077                           ;psect for function _toggleAlarms
  9078  0BE2                     _toggleAlarms:
  9079  0BE2                     l1251:	
  9080                           ;incstack = 0
  9081                           ; Regs used in _toggleAlarms: [wreg+status,2+status,0]
  9082                           ;main.c: 595: while(1){
  9083                           
  9084                           
  9085                           ;main.c: 596: if(PORTBbits.RB4 == 0){
  9086  0BE2  0020               	movlb	0	; select bank0
  9087  0BE3  1A0D               	btfsc	13,4	;volatile
  9088  0BE4  2BE6               	goto	u4581
  9089  0BE5  2BE7               	goto	u4580
  9090  0BE6                     u4581:
  9091  0BE6  2BF8               	goto	l1252
  9092  0BE7                     u4580:
  9093  0BE7                     l4757:
  9094                           
  9095                           ;main.c: 597: _delay((unsigned long)((50)*(1000000/4000.0)));
  9096  0BE7  3011               	movlw	17
  9097  0BE8  0021               	movlb	1	; select bank1
  9098  0BE9  00A0               	movwf	??_toggleAlarms^(0+128)
  9099  0BEA  303A               	movlw	58
  9100  0BEB                     u4807:
  9101  0BEB  0B89               	decfsz	9,f
  9102  0BEC  2BEB               	goto	u4807
  9103  0BED  0BA0               	decfsz	??_toggleAlarms^(0+128),f
  9104  0BEE  2BEB               	goto	u4807
  9105  0BEF  0000               	nop
  9106  0BF0                     l4759:
  9107                           
  9108                           ;main.c: 598: mode = 0;
  9109  0BF0  0020               	movlb	0	; select bank0
  9110  0BF1  01D2               	clrf	_mode
  9111  0BF2  01D3               	clrf	_mode+1
  9112  0BF3                     l1253:	
  9113                           ;main.c: 599: while(PORTBbits.RB4==0){};
  9114                           
  9115  0BF3  1E0D               	btfss	13,4	;volatile
  9116  0BF4  2BF6               	goto	u4591
  9117  0BF5  2BF7               	goto	u4590
  9118  0BF6                     u4591:
  9119  0BF6  2BF3               	goto	l1253
  9120  0BF7                     u4590:
  9121  0BF7  2C12               	goto	l1259
  9122  0BF8                     l1252:
  9123                           
  9124                           ;main.c: 601: };main.c: 603: if(PORTCbits.RC5 == 0){
  9125  0BF8  1A8E               	btfsc	14,5	;volatile
  9126  0BF9  2BFB               	goto	u4601
  9127  0BFA  2BFC               	goto	u4600
  9128  0BFB                     u4601:
  9129  0BFB  2BE2               	goto	l1251
  9130  0BFC                     u4600:
  9131  0BFC                     l4761:
  9132                           
  9133                           ;main.c: 604: alarmsEnable = !alarmsEnable;
  9134  0BFC  086A               	movf	_alarmsEnable,w
  9135  0BFD  1903               	btfsc	3,2
  9136  0BFE  2C00               	goto	u4611
  9137  0BFF  2C02               	goto	u4610
  9138  0C00                     u4611:
  9139  0C00  3001               	movlw	1
  9140  0C01  2C03               	goto	u4620
  9141  0C02                     u4610:
  9142  0C02  3000               	movlw	0
  9143  0C03                     u4620:
  9144  0C03  0021               	movlb	1	; select bank1
  9145  0C04  00A0               	movwf	??_toggleAlarms^(0+128)
  9146  0C05  0820               	movf	??_toggleAlarms^(0+128),w
  9147  0C06  0020               	movlb	0	; select bank0
  9148  0C07  00EA               	movwf	_alarmsEnable
  9149  0C08                     l4763:
  9150                           
  9151                           ;main.c: 605: _delay((unsigned long)((100)*(1000000/4000.0)));
  9152  0C08  3021               	movlw	33
  9153  0C09  0021               	movlb	1	; select bank1
  9154  0C0A  00A0               	movwf	??_toggleAlarms^(0+128)
  9155  0C0B  3076               	movlw	118
  9156  0C0C                     u4817:
  9157  0C0C  0B89               	decfsz	9,f
  9158  0C0D  2C0C               	goto	u4817
  9159  0C0E  0BA0               	decfsz	??_toggleAlarms^(0+128),f
  9160  0C0F  2C0C               	goto	u4817
  9161  0C10  0000               	nop
  9162  0C11  2BE2               	goto	l1251
  9163  0C12                     l1259:
  9164  0C12  0008               	return
  9165  0C13                     __end_of_toggleAlarms:
  9166                           
  9167                           	psect	text2
  9168  09E6                     __ptext2:	
  9169 ;; *************** function _i2c1_driver_open *****************
  9170 ;; Defined at:
  9171 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;		None
  9174 ;; Auto vars:     Size  Location     Type
  9175 ;;		None
  9176 ;; Return value:  Size  Location     Type
  9177 ;;		None               void
  9178 ;; Registers used:
  9179 ;;		wreg, status,2
  9180 ;; Tracked objects:
  9181 ;;		On entry : 0/0
  9182 ;;		On exit  : 0/0
  9183 ;;		Unchanged: 0/0
  9184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9189 ;;Total ram usage:        0 bytes
  9190 ;; Hardware stack levels used:    1
  9191 ;; Hardware stack levels required when called:    7
  9192 ;; This function calls:
  9193 ;;		Nothing
  9194 ;; This function is called by:
  9195 ;;		_main
  9196 ;; This function uses a non-reentrant model
  9197 ;;
  9198                           
  9199                           
  9200                           ;psect for function _i2c1_driver_open
  9201  09E6                     _i2c1_driver_open:
  9202  09E6                     l4531:	
  9203                           ;incstack = 0
  9204                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  9205                           
  9206                           
  9207                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
  9208  09E6  0023               	movlb	3	; select bank3
  9209  09E7  1A90               	btfsc	16,5	;volatile
  9210  09E8  29EA               	goto	u4081
  9211  09E9  29EB               	goto	u4080
  9212  09EA                     u4081:
  9213  09EA  29F1               	goto	l239
  9214  09EB                     u4080:
  9215  09EB                     l4533:
  9216                           
  9217                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
  9218  09EB  018F               	clrf	15	;volatile
  9219  09EC                     l4535:
  9220                           
  9221                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
  9222  09EC  3028               	movlw	40
  9223  09ED  0090               	movwf	16	;volatile
  9224  09EE                     l4537:
  9225                           
  9226                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
  9227  09EE  0191               	clrf	17	;volatile
  9228                           
  9229                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
  9230  09EF  3003               	movlw	3
  9231  09F0  008D               	movwf	13	;volatile
  9232  09F1                     l239:
  9233  09F1  0008               	return
  9234  09F2                     __end_of_i2c1_driver_open:
  9235                           
  9236                           	psect	text3
  9237  0CB4                     __ptext3:	
  9238 ;; *************** function _editTemp *****************
  9239 ;; Defined at:
  9240 ;;		line 546 in file "main.c"
  9241 ;; Parameters:    Size  Location     Type
  9242 ;;		None
  9243 ;; Auto vars:     Size  Location     Type
  9244 ;;		None
  9245 ;; Return value:  Size  Location     Type
  9246 ;;                  1    wreg      void 
  9247 ;; Registers used:
  9248 ;;		wreg, status,2, status,0
  9249 ;; Tracked objects:
  9250 ;;		On entry : 0/0
  9251 ;;		On exit  : 0/0
  9252 ;;		Unchanged: 0/0
  9253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9256 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9257 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9258 ;;Total ram usage:        1 bytes
  9259 ;; Hardware stack levels used:    1
  9260 ;; Hardware stack levels required when called:    7
  9261 ;; This function calls:
  9262 ;;		Nothing
  9263 ;; This function is called by:
  9264 ;;		_main
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           
  9269                           ;psect for function _editTemp
  9270  0CB4                     _editTemp:
  9271  0CB4                     l4717:	
  9272                           ;incstack = 0
  9273                           ; Regs used in _editTemp: [wreg+status,2+status,0]
  9274                           
  9275                           
  9276                           ;main.c: 547: editingTempAlarm = 1;
  9277  0CB4  0020               	movlb	0	; select bank0
  9278  0CB5  01D9               	clrf	_editingTempAlarm
  9279  0CB6  0AD9               	incf	_editingTempAlarm,f
  9280  0CB7                     l4719:
  9281                           
  9282                           ;main.c: 549: tempAlarm.alarmTemp = 0;
  9283  0CB7  01E3               	clrf	_tempAlarm
  9284  0CB8                     l4721:
  9285                           
  9286                           ;main.c: 552: if(PORTBbits.RB4 == 0){
  9287  0CB8  0020               	movlb	0	; select bank0
  9288  0CB9  1A0D               	btfsc	13,4	;volatile
  9289  0CBA  2CBC               	goto	u4501
  9290  0CBB  2CBD               	goto	u4500
  9291  0CBC                     u4501:
  9292  0CBC  2CD1               	goto	l1228
  9293  0CBD                     u4500:
  9294  0CBD                     l4723:
  9295                           
  9296                           ;main.c: 553: _delay((unsigned long)((50)*(1000000/4000.0)));
  9297  0CBD  3011               	movlw	17
  9298  0CBE  0021               	movlb	1	; select bank1
  9299  0CBF  00A0               	movwf	??_editTemp^(0+128)
  9300  0CC0  303A               	movlw	58
  9301  0CC1                     u4827:
  9302  0CC1  0B89               	decfsz	9,f
  9303  0CC2  2CC1               	goto	u4827
  9304  0CC3  0BA0               	decfsz	??_editTemp^(0+128),f
  9305  0CC4  2CC1               	goto	u4827
  9306  0CC5  0000               	nop
  9307  0CC6                     l4725:
  9308                           
  9309                           ;main.c: 554: editingTempAlarm = 0;
  9310  0CC6  0020               	movlb	0	; select bank0
  9311  0CC7  01D9               	clrf	_editingTempAlarm
  9312  0CC8                     l4727:
  9313                           
  9314                           ;main.c: 555: mode = 3;
  9315  0CC8  3003               	movlw	3
  9316  0CC9  00D2               	movwf	_mode
  9317  0CCA  3000               	movlw	0
  9318  0CCB  00D3               	movwf	_mode+1
  9319  0CCC                     l1229:	
  9320                           ;main.c: 556: while(PORTBbits.RB4==0){};
  9321                           
  9322  0CCC  1E0D               	btfss	13,4	;volatile
  9323  0CCD  2CCF               	goto	u4511
  9324  0CCE  2CD0               	goto	u4510
  9325  0CCF                     u4511:
  9326  0CCF  2CCC               	goto	l1229
  9327  0CD0                     u4510:
  9328  0CD0  2CEC               	goto	l1236
  9329  0CD1                     l1228:
  9330                           
  9331                           ;main.c: 558: };main.c: 560: if(PORTCbits.RC5 == 0){
  9332  0CD1  1A8E               	btfsc	14,5	;volatile
  9333  0CD2  2CD4               	goto	u4521
  9334  0CD3  2CD5               	goto	u4520
  9335  0CD4                     u4521:
  9336  0CD4  2CB8               	goto	l4721
  9337  0CD5                     u4520:
  9338  0CD5                     l4729:
  9339                           
  9340                           ;main.c: 561: tempAlarm.alarmTemp++;
  9341  0CD5  3001               	movlw	1
  9342  0CD6  0021               	movlb	1	; select bank1
  9343  0CD7  00A0               	movwf	??_editTemp^(0+128)
  9344  0CD8  0820               	movf	??_editTemp^(0+128),w
  9345  0CD9  0020               	movlb	0	; select bank0
  9346  0CDA  07E3               	addwf	_tempAlarm,f
  9347  0CDB                     l4731:
  9348                           
  9349                           ;main.c: 562: if(tempAlarm.alarmTemp > 50){
  9350  0CDB  3033               	movlw	51
  9351  0CDC  0263               	subwf	_tempAlarm,w
  9352  0CDD  1C03               	skipc
  9353  0CDE  2CE0               	goto	u4531
  9354  0CDF  2CE1               	goto	u4530
  9355  0CE0                     u4531:
  9356  0CE0  2CE2               	goto	l4735
  9357  0CE1                     u4530:
  9358  0CE1                     l4733:
  9359                           
  9360                           ;main.c: 563: tempAlarm.alarmTemp = 0;
  9361  0CE1  01E3               	clrf	_tempAlarm
  9362  0CE2                     l4735:
  9363                           
  9364                           ;main.c: 564: };main.c: 565: _delay((unsigned long)((100)*(1000000/4000.0)));
  9365  0CE2  3021               	movlw	33
  9366  0CE3  0021               	movlb	1	; select bank1
  9367  0CE4  00A0               	movwf	??_editTemp^(0+128)
  9368  0CE5  3076               	movlw	118
  9369  0CE6                     u4837:
  9370  0CE6  0B89               	decfsz	9,f
  9371  0CE7  2CE6               	goto	u4837
  9372  0CE8  0BA0               	decfsz	??_editTemp^(0+128),f
  9373  0CE9  2CE6               	goto	u4837
  9374  0CEA  0000               	nop
  9375  0CEB  2CB8               	goto	l4721
  9376  0CEC                     l1236:
  9377  0CEC  0008               	return
  9378  0CED                     __end_of_editTemp:
  9379                           
  9380                           	psect	text4
  9381  0C7B                     __ptext4:	
  9382 ;; *************** function _editLum *****************
  9383 ;; Defined at:
  9384 ;;		line 570 in file "main.c"
  9385 ;; Parameters:    Size  Location     Type
  9386 ;;		None
  9387 ;; Auto vars:     Size  Location     Type
  9388 ;;		None
  9389 ;; Return value:  Size  Location     Type
  9390 ;;                  1    wreg      void 
  9391 ;; Registers used:
  9392 ;;		wreg, status,2, status,0
  9393 ;; Tracked objects:
  9394 ;;		On entry : 0/0
  9395 ;;		On exit  : 0/0
  9396 ;;		Unchanged: 0/0
  9397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9400 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9401 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9402 ;;Total ram usage:        1 bytes
  9403 ;; Hardware stack levels used:    1
  9404 ;; Hardware stack levels required when called:    7
  9405 ;; This function calls:
  9406 ;;		Nothing
  9407 ;; This function is called by:
  9408 ;;		_main
  9409 ;; This function uses a non-reentrant model
  9410 ;;
  9411                           
  9412                           
  9413                           ;psect for function _editLum
  9414  0C7B                     _editLum:
  9415  0C7B                     l4737:	
  9416                           ;incstack = 0
  9417                           ; Regs used in _editLum: [wreg+status,2+status,0]
  9418                           
  9419                           
  9420                           ;main.c: 571: editingLumAlarm = 1;
  9421  0C7B  0020               	movlb	0	; select bank0
  9422  0C7C  01D8               	clrf	_editingLumAlarm
  9423  0C7D  0AD8               	incf	_editingLumAlarm,f
  9424  0C7E                     l4739:
  9425                           
  9426                           ;main.c: 572: lumAlarm.alarmLum = 0;
  9427  0C7E  01E0               	clrf	_lumAlarm
  9428  0C7F                     l4741:
  9429                           
  9430                           ;main.c: 575: if(PORTBbits.RB4 == 0){
  9431  0C7F  0020               	movlb	0	; select bank0
  9432  0C80  1A0D               	btfsc	13,4	;volatile
  9433  0C81  2C83               	goto	u4541
  9434  0C82  2C84               	goto	u4540
  9435  0C83                     u4541:
  9436  0C83  2C98               	goto	l1240
  9437  0C84                     u4540:
  9438  0C84                     l4743:
  9439                           
  9440                           ;main.c: 576: _delay((unsigned long)((50)*(1000000/4000.0)));
  9441  0C84  3011               	movlw	17
  9442  0C85  0021               	movlb	1	; select bank1
  9443  0C86  00A0               	movwf	??_editLum^(0+128)
  9444  0C87  303A               	movlw	58
  9445  0C88                     u4847:
  9446  0C88  0B89               	decfsz	9,f
  9447  0C89  2C88               	goto	u4847
  9448  0C8A  0BA0               	decfsz	??_editLum^(0+128),f
  9449  0C8B  2C88               	goto	u4847
  9450  0C8C  0000               	nop
  9451  0C8D                     l4745:
  9452                           
  9453                           ;main.c: 577: editingLumAlarm = 0;
  9454  0C8D  0020               	movlb	0	; select bank0
  9455  0C8E  01D8               	clrf	_editingLumAlarm
  9456  0C8F                     l4747:
  9457                           
  9458                           ;main.c: 578: mode = 4;
  9459  0C8F  3004               	movlw	4
  9460  0C90  00D2               	movwf	_mode
  9461  0C91  3000               	movlw	0
  9462  0C92  00D3               	movwf	_mode+1
  9463  0C93                     l1241:	
  9464                           ;main.c: 579: while(PORTBbits.RB4==0){};
  9465                           
  9466  0C93  1E0D               	btfss	13,4	;volatile
  9467  0C94  2C96               	goto	u4551
  9468  0C95  2C97               	goto	u4550
  9469  0C96                     u4551:
  9470  0C96  2C93               	goto	l1241
  9471  0C97                     u4550:
  9472  0C97  2CB3               	goto	l1248
  9473  0C98                     l1240:
  9474                           
  9475                           ;main.c: 581: };main.c: 583: if(PORTCbits.RC5 == 0){
  9476  0C98  1A8E               	btfsc	14,5	;volatile
  9477  0C99  2C9B               	goto	u4561
  9478  0C9A  2C9C               	goto	u4560
  9479  0C9B                     u4561:
  9480  0C9B  2C7F               	goto	l4741
  9481  0C9C                     u4560:
  9482  0C9C                     l4749:
  9483                           
  9484                           ;main.c: 584: lumAlarm.alarmLum++;
  9485  0C9C  3001               	movlw	1
  9486  0C9D  0021               	movlb	1	; select bank1
  9487  0C9E  00A0               	movwf	??_editLum^(0+128)
  9488  0C9F  0820               	movf	??_editLum^(0+128),w
  9489  0CA0  0020               	movlb	0	; select bank0
  9490  0CA1  07E0               	addwf	_lumAlarm,f
  9491  0CA2                     l4751:
  9492                           
  9493                           ;main.c: 585: if(lumAlarm.alarmLum > 7){
  9494  0CA2  3008               	movlw	8
  9495  0CA3  0260               	subwf	_lumAlarm,w
  9496  0CA4  1C03               	skipc
  9497  0CA5  2CA7               	goto	u4571
  9498  0CA6  2CA8               	goto	u4570
  9499  0CA7                     u4571:
  9500  0CA7  2CA9               	goto	l4755
  9501  0CA8                     u4570:
  9502  0CA8                     l4753:
  9503                           
  9504                           ;main.c: 586: lumAlarm.alarmLum = 0;
  9505  0CA8  01E0               	clrf	_lumAlarm
  9506  0CA9                     l4755:
  9507                           
  9508                           ;main.c: 587: };main.c: 588: _delay((unsigned long)((100)*(1000000/4000.0)));
  9509  0CA9  3021               	movlw	33
  9510  0CAA  0021               	movlb	1	; select bank1
  9511  0CAB  00A0               	movwf	??_editLum^(0+128)
  9512  0CAC  3076               	movlw	118
  9513  0CAD                     u4857:
  9514  0CAD  0B89               	decfsz	9,f
  9515  0CAE  2CAD               	goto	u4857
  9516  0CAF  0BA0               	decfsz	??_editLum^(0+128),f
  9517  0CB0  2CAD               	goto	u4857
  9518  0CB1  0000               	nop
  9519  0CB2  2C7F               	goto	l4741
  9520  0CB3                     l1248:
  9521  0CB3  0008               	return
  9522  0CB4                     __end_of_editLum:
  9523                           
  9524                           	psect	text5
  9525  0EEE                     __ptext5:	
  9526 ;; *************** function _editClock *****************
  9527 ;; Defined at:
  9528 ;;		line 502 in file "main.c"
  9529 ;; Parameters:    Size  Location     Type
  9530 ;;		None
  9531 ;; Auto vars:     Size  Location     Type
  9532 ;;		None
  9533 ;; Return value:  Size  Location     Type
  9534 ;;                  1    wreg      void 
  9535 ;; Registers used:
  9536 ;;		wreg, status,2, status,0
  9537 ;; Tracked objects:
  9538 ;;		On entry : 0/0
  9539 ;;		On exit  : 0/0
  9540 ;;		Unchanged: 0/0
  9541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9544 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9545 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9546 ;;Total ram usage:        1 bytes
  9547 ;; Hardware stack levels used:    1
  9548 ;; Hardware stack levels required when called:    7
  9549 ;; This function calls:
  9550 ;;		Nothing
  9551 ;; This function is called by:
  9552 ;;		_main
  9553 ;; This function uses a non-reentrant model
  9554 ;;
  9555                           
  9556                           
  9557                           ;psect for function _editClock
  9558  0EEE                     _editClock:
  9559  0EEE                     l4673:	
  9560                           ;incstack = 0
  9561                           ; Regs used in _editClock: [wreg+status,2+status,0]
  9562                           
  9563                           
  9564                           ;main.c: 504: editingClockAlarm = 1;
  9565  0EEE  3001               	movlw	1
  9566  0EEF  0020               	movlb	0	; select bank0
  9567  0EF0  00D4               	movwf	_editingClockAlarm
  9568  0EF1  3000               	movlw	0
  9569  0EF2  00D5               	movwf	_editingClockAlarm+1
  9570  0EF3                     l4675:
  9571                           
  9572                           ;main.c: 505: clkAlarm.alarmVal.h = 0;
  9573  0EF3  01DC               	clrf	_clkAlarm
  9574  0EF4                     l4677:
  9575                           
  9576                           ;main.c: 506: clkAlarm.alarmVal.m = 0;
  9577  0EF4  01DD               	clrf	_clkAlarm+1
  9578  0EF5                     l4679:
  9579                           
  9580                           ;main.c: 507: clkAlarm.alarmVal.s = 0;
  9581  0EF5  01DE               	clrf	_clkAlarm+2
  9582  0EF6                     l4681:
  9583                           
  9584                           ;main.c: 510: if(PORTBbits.RB4 == 0){
  9585  0EF6  0020               	movlb	0	; select bank0
  9586  0EF7  1A0D               	btfsc	13,4	;volatile
  9587  0EF8  2EFA               	goto	u4401
  9588  0EF9  2EFB               	goto	u4400
  9589  0EFA                     u4401:
  9590  0EFA  2F24               	goto	l1205
  9591  0EFB                     u4400:
  9592  0EFB                     l4683:
  9593                           
  9594                           ;main.c: 511: _delay((unsigned long)((50)*(1000000/4000.0)));
  9595  0EFB  3011               	movlw	17
  9596  0EFC  0021               	movlb	1	; select bank1
  9597  0EFD  00A0               	movwf	??_editClock^(0+128)
  9598  0EFE  303A               	movlw	58
  9599  0EFF                     u4867:
  9600  0EFF  0B89               	decfsz	9,f
  9601  0F00  2EFF               	goto	u4867
  9602  0F01  0BA0               	decfsz	??_editClock^(0+128),f
  9603  0F02  2EFF               	goto	u4867
  9604  0F03  0000               	nop
  9605                           
  9606                           ;main.c: 512: editingClockAlarm++;
  9607  0F04  3001               	movlw	1
  9608  0F05  0020               	movlb	0	; select bank0
  9609  0F06  07D4               	addwf	_editingClockAlarm,f
  9610  0F07  3000               	movlw	0
  9611  0F08  3DD5               	addwfc	_editingClockAlarm+1,f
  9612  0F09                     l1206:	
  9613                           ;main.c: 513: while(PORTBbits.RB4==0){};
  9614                           
  9615  0F09  1E0D               	btfss	13,4	;volatile
  9616  0F0A  2F0C               	goto	u4411
  9617  0F0B  2F0D               	goto	u4410
  9618  0F0C                     u4411:
  9619  0F0C  2F09               	goto	l1206
  9620  0F0D                     u4410:
  9621  0F0D                     l4685:
  9622                           
  9623                           ;main.c: 514: if(editingClockAlarm > 3){
  9624  0F0D  0855               	movf	_editingClockAlarm+1,w
  9625  0F0E  3A80               	xorlw	128
  9626  0F0F  0021               	movlb	1	; select bank1
  9627  0F10  00A0               	movwf	??_editClock^(0+128)
  9628  0F11  3080               	movlw	128
  9629  0F12  0220               	subwf	??_editClock^(0+128),w
  9630  0F13  1D03               	skipz
  9631  0F14  2F18               	goto	u4425
  9632  0F15  3004               	movlw	4
  9633  0F16  0020               	movlb	0	; select bank0
  9634  0F17  0254               	subwf	_editingClockAlarm,w
  9635  0F18                     u4425:
  9636  0F18  1C03               	skipc
  9637  0F19  2F1B               	goto	u4421
  9638  0F1A  2F1C               	goto	u4420
  9639  0F1B                     u4421:
  9640  0F1B  2F24               	goto	l1205
  9641  0F1C                     u4420:
  9642  0F1C                     l4687:
  9643                           
  9644                           ;main.c: 515: editingClockAlarm = 0;
  9645  0F1C  0020               	movlb	0	; select bank0
  9646  0F1D  01D4               	clrf	_editingClockAlarm
  9647  0F1E  01D5               	clrf	_editingClockAlarm+1
  9648  0F1F                     l4689:
  9649                           
  9650                           ;main.c: 516: mode = 2;
  9651  0F1F  3002               	movlw	2
  9652  0F20  00D2               	movwf	_mode
  9653  0F21  3000               	movlw	0
  9654  0F22  00D3               	movwf	_mode+1
  9655                           
  9656                           ;main.c: 517: break;
  9657  0F23  2F73               	goto	l1224
  9658  0F24                     l1205:
  9659                           
  9660                           ;main.c: 518: };main.c: 519: };main.c: 521: if(PORTCbits.RC5 == 0){
  9661  0F24  0020               	movlb	0	; select bank0
  9662  0F25  1A8E               	btfsc	14,5	;volatile
  9663  0F26  2F28               	goto	u4431
  9664  0F27  2F29               	goto	u4430
  9665  0F28                     u4431:
  9666  0F28  2EF6               	goto	l4681
  9667  0F29                     u4430:
  9668  0F29                     l4691:
  9669                           
  9670                           ;main.c: 522: if(editingClockAlarm == 1){
  9671  0F29  0354               	decf	_editingClockAlarm,w
  9672  0F2A  0455               	iorwf	_editingClockAlarm+1,w
  9673  0F2B  1D03               	btfss	3,2
  9674  0F2C  2F2E               	goto	u4441
  9675  0F2D  2F2F               	goto	u4440
  9676  0F2E                     u4441:
  9677  0F2E  2F3E               	goto	l4699
  9678  0F2F                     u4440:
  9679  0F2F                     l4693:
  9680                           
  9681                           ;main.c: 523: if(clkAlarm.alarmVal.h >= 23){
  9682  0F2F  3017               	movlw	23
  9683  0F30  025C               	subwf	_clkAlarm,w
  9684  0F31  1C03               	skipc
  9685  0F32  2F34               	goto	u4451
  9686  0F33  2F35               	goto	u4450
  9687  0F34                     u4451:
  9688  0F34  2F37               	goto	l4697
  9689  0F35                     u4450:
  9690  0F35                     l4695:
  9691                           
  9692                           ;main.c: 524: clkAlarm.alarmVal.h = 0;
  9693  0F35  01DC               	clrf	_clkAlarm
  9694                           
  9695                           ;main.c: 525: } else{
  9696  0F36  2F69               	goto	l4715
  9697  0F37                     l4697:
  9698                           
  9699                           ;main.c: 526: clkAlarm.alarmVal.h++;
  9700  0F37  3001               	movlw	1
  9701  0F38  0021               	movlb	1	; select bank1
  9702  0F39  00A0               	movwf	??_editClock^(0+128)
  9703  0F3A  0820               	movf	??_editClock^(0+128),w
  9704  0F3B  0020               	movlb	0	; select bank0
  9705  0F3C  07DC               	addwf	_clkAlarm,f
  9706  0F3D  2F69               	goto	l4715
  9707  0F3E                     l4699:
  9708  0F3E  3002               	movlw	2
  9709  0F3F  0654               	xorwf	_editingClockAlarm,w
  9710  0F40  0455               	iorwf	_editingClockAlarm+1,w
  9711  0F41  1D03               	btfss	3,2
  9712  0F42  2F44               	goto	u4461
  9713  0F43  2F45               	goto	u4460
  9714  0F44                     u4461:
  9715  0F44  2F54               	goto	l4707
  9716  0F45                     u4460:
  9717  0F45                     l4701:
  9718                           
  9719                           ;main.c: 529: if(clkAlarm.alarmVal.m == 59){
  9720  0F45  303B               	movlw	59
  9721  0F46  065D               	xorwf	_clkAlarm+1,w
  9722  0F47  1D03               	btfss	3,2
  9723  0F48  2F4A               	goto	u4471
  9724  0F49  2F4B               	goto	u4470
  9725  0F4A                     u4471:
  9726  0F4A  2F4D               	goto	l4705
  9727  0F4B                     u4470:
  9728  0F4B                     l4703:
  9729                           
  9730                           ;main.c: 530: clkAlarm.alarmVal.m = 0;
  9731  0F4B  01DD               	clrf	_clkAlarm+1
  9732                           
  9733                           ;main.c: 531: } else{
  9734  0F4C  2F69               	goto	l4715
  9735  0F4D                     l4705:
  9736                           
  9737                           ;main.c: 532: clkAlarm.alarmVal.m++;
  9738  0F4D  3001               	movlw	1
  9739  0F4E  0021               	movlb	1	; select bank1
  9740  0F4F  00A0               	movwf	??_editClock^(0+128)
  9741  0F50  0820               	movf	??_editClock^(0+128),w
  9742  0F51  0020               	movlb	0	; select bank0
  9743  0F52  07DD               	addwf	_clkAlarm+1,f
  9744  0F53  2F69               	goto	l4715
  9745  0F54                     l4707:
  9746  0F54  3003               	movlw	3
  9747  0F55  0654               	xorwf	_editingClockAlarm,w
  9748  0F56  0455               	iorwf	_editingClockAlarm+1,w
  9749  0F57  1D03               	btfss	3,2
  9750  0F58  2F5A               	goto	u4481
  9751  0F59  2F5B               	goto	u4480
  9752  0F5A                     u4481:
  9753  0F5A  2F69               	goto	l4715
  9754  0F5B                     u4480:
  9755  0F5B                     l4709:
  9756                           
  9757                           ;main.c: 535: if(clkAlarm.alarmVal.s == 59){
  9758  0F5B  303B               	movlw	59
  9759  0F5C  065E               	xorwf	_clkAlarm+2,w
  9760  0F5D  1D03               	btfss	3,2
  9761  0F5E  2F60               	goto	u4491
  9762  0F5F  2F61               	goto	u4490
  9763  0F60                     u4491:
  9764  0F60  2F63               	goto	l4713
  9765  0F61                     u4490:
  9766  0F61                     l4711:
  9767                           
  9768                           ;main.c: 536: clkAlarm.alarmVal.s = 0;
  9769  0F61  01DE               	clrf	_clkAlarm+2
  9770                           
  9771                           ;main.c: 537: } else{
  9772  0F62  2F69               	goto	l4715
  9773  0F63                     l4713:
  9774                           
  9775                           ;main.c: 538: clkAlarm.alarmVal.s++;
  9776  0F63  3001               	movlw	1
  9777  0F64  0021               	movlb	1	; select bank1
  9778  0F65  00A0               	movwf	??_editClock^(0+128)
  9779  0F66  0820               	movf	??_editClock^(0+128),w
  9780  0F67  0020               	movlb	0	; select bank0
  9781  0F68  07DE               	addwf	_clkAlarm+2,f
  9782  0F69                     l4715:
  9783                           
  9784                           ;main.c: 539: };main.c: 540: };main.c: 541: _delay((unsigned long)((100)*(1000000/4000.0
      +                          )));
  9785  0F69  3021               	movlw	33
  9786  0F6A  0021               	movlb	1	; select bank1
  9787  0F6B  00A0               	movwf	??_editClock^(0+128)
  9788  0F6C  3076               	movlw	118
  9789  0F6D                     u4877:
  9790  0F6D  0B89               	decfsz	9,f
  9791  0F6E  2F6D               	goto	u4877
  9792  0F6F  0BA0               	decfsz	??_editClock^(0+128),f
  9793  0F70  2F6D               	goto	u4877
  9794  0F71  0000               	nop
  9795  0F72  2EF6               	goto	l4681
  9796  0F73                     l1224:
  9797  0F73  0008               	return
  9798  0F74                     __end_of_editClock:
  9799                           
  9800                           	psect	text6
  9801  0998                     __ptext6:	
  9802 ;; *************** function _TMR2_StopTimer *****************
  9803 ;; Defined at:
  9804 ;;		line 117 in file "mcc_generated_files/tmr2.c"
  9805 ;; Parameters:    Size  Location     Type
  9806 ;;		None
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;		None
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  1    wreg      void 
  9811 ;; Registers used:
  9812 ;;		status,2, status,0, pclath, cstack
  9813 ;; Tracked objects:
  9814 ;;		On entry : 0/0
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9822 ;;Total ram usage:        0 bytes
  9823 ;; Hardware stack levels used:    1
  9824 ;; Hardware stack levels required when called:    8
  9825 ;; This function calls:
  9826 ;;		_TMR2_Stop
  9827 ;; This function is called by:
  9828 ;;		_main
  9829 ;; This function uses a non-reentrant model
  9830 ;;
  9831                           
  9832                           
  9833                           ;psect for function _TMR2_StopTimer
  9834  0998                     _TMR2_StopTimer:
  9835  0998                     l4569:	
  9836                           ;incstack = 0
  9837                           ; Regs used in _TMR2_StopTimer: [status,2+status,0+pclath+cstack]
  9838                           
  9839                           
  9840                           ;tmr2.c: 119: TMR2_Stop();
  9841  0998  3189  218A  3189   	fcall	_TMR2_Stop
  9842  099B                     l767:
  9843  099B  0008               	return
  9844  099C                     __end_of_TMR2_StopTimer:
  9845                           
  9846                           	psect	text7
  9847  098A                     __ptext7:	
  9848 ;; *************** function _TMR2_Stop *****************
  9849 ;; Defined at:
  9850 ;;		line 111 in file "mcc_generated_files/tmr2.c"
  9851 ;; Parameters:    Size  Location     Type
  9852 ;;		None
  9853 ;; Auto vars:     Size  Location     Type
  9854 ;;		None
  9855 ;; Return value:  Size  Location     Type
  9856 ;;                  1    wreg      void 
  9857 ;; Registers used:
  9858 ;;		None
  9859 ;; Tracked objects:
  9860 ;;		On entry : 0/0
  9861 ;;		On exit  : 0/0
  9862 ;;		Unchanged: 0/0
  9863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9868 ;;Total ram usage:        0 bytes
  9869 ;; Hardware stack levels used:    1
  9870 ;; Hardware stack levels required when called:    7
  9871 ;; This function calls:
  9872 ;;		Nothing
  9873 ;; This function is called by:
  9874 ;;		_TMR2_StopTimer
  9875 ;; This function uses a non-reentrant model
  9876 ;;
  9877                           
  9878                           
  9879                           ;psect for function _TMR2_Stop
  9880  098A                     _TMR2_Stop:
  9881  098A                     l4261:	
  9882                           ;incstack = 0
  9883                           ; Regs used in _TMR2_Stop: []
  9884                           
  9885                           
  9886                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
  9887  098A  0025               	movlb	5	; select bank5
  9888  098B  138E               	bcf	14,7	;volatile
  9889  098C                     l764:
  9890  098C  0008               	return
  9891  098D                     __end_of_TMR2_Stop:
  9892                           
  9893                           	psect	text8
  9894  0B2C                     __ptext8:	
  9895 ;; *************** function _SYSTEM_Initialize *****************
  9896 ;; Defined at:
  9897 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9898 ;; Parameters:    Size  Location     Type
  9899 ;;		None
  9900 ;; Auto vars:     Size  Location     Type
  9901 ;;		None
  9902 ;; Return value:  Size  Location     Type
  9903 ;;                  1    wreg      void 
  9904 ;; Registers used:
  9905 ;;		wreg, status,2, status,0, pclath, cstack
  9906 ;; Tracked objects:
  9907 ;;		On entry : 0/0
  9908 ;;		On exit  : 0/0
  9909 ;;		Unchanged: 0/0
  9910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9915 ;;Total ram usage:        0 bytes
  9916 ;; Hardware stack levels used:    1
  9917 ;; Hardware stack levels required when called:    9
  9918 ;; This function calls:
  9919 ;;		_ADCC_Initialize
  9920 ;;		_OSCILLATOR_Initialize
  9921 ;;		_PIN_MANAGER_Initialize
  9922 ;;		_PMD_Initialize
  9923 ;;		_PWM6_Initialize
  9924 ;;		_TMR1_Initialize
  9925 ;;		_TMR2_Initialize
  9926 ;;		_TMR3_Initialize
  9927 ;;		_TMR5_Initialize
  9928 ;; This function is called by:
  9929 ;;		_main
  9930 ;; This function uses a non-reentrant model
  9931 ;;
  9932                           
  9933                           
  9934                           ;psect for function _SYSTEM_Initialize
  9935  0B2C                     _SYSTEM_Initialize:
  9936  0B2C                     l4513:	
  9937                           ;incstack = 0
  9938                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9939                           
  9940                           
  9941                           ;mcc.c: 52: PMD_Initialize();
  9942  0B2C  3189  21C9  318B   	fcall	_PMD_Initialize
  9943  0B2F                     l4515:
  9944                           
  9945                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  9946  0B2F  3187  27C3  318B   	fcall	_PIN_MANAGER_Initialize
  9947  0B32                     l4517:
  9948                           
  9949                           ;mcc.c: 54: OSCILLATOR_Initialize();
  9950  0B32  3189  21D1  318B   	fcall	_OSCILLATOR_Initialize
  9951  0B35                     l4519:
  9952                           
  9953                           ;mcc.c: 55: PWM6_Initialize();
  9954  0B35  3189  21F2  318B   	fcall	_PWM6_Initialize
  9955  0B38                     l4521:
  9956                           
  9957                           ;mcc.c: 56: ADCC_Initialize();
  9958  0B38  318A  22E2  318B   	fcall	_ADCC_Initialize
  9959  0B3B                     l4523:
  9960                           
  9961                           ;mcc.c: 57: TMR3_Initialize();
  9962  0B3B  318B  23A4  318B   	fcall	_TMR3_Initialize
  9963  0B3E                     l4525:
  9964                           
  9965                           ;mcc.c: 58: TMR5_Initialize();
  9966  0B3E  318B  23C3  318B   	fcall	_TMR5_Initialize
  9967  0B41                     l4527:
  9968                           
  9969                           ;mcc.c: 59: TMR2_Initialize();
  9970  0B41  3189  21FF  318B   	fcall	_TMR2_Initialize
  9971  0B44                     l4529:
  9972                           
  9973                           ;mcc.c: 60: TMR1_Initialize();
  9974  0B44  318B  2385  318B   	fcall	_TMR1_Initialize
  9975  0B47                     l172:
  9976  0B47  0008               	return
  9977  0B48                     __end_of_SYSTEM_Initialize:
  9978                           
  9979                           	psect	text9
  9980  0BC3                     __ptext9:	
  9981 ;; *************** function _TMR5_Initialize *****************
  9982 ;; Defined at:
  9983 ;;		line 64 in file "mcc_generated_files/tmr5.c"
  9984 ;; Parameters:    Size  Location     Type
  9985 ;;		None
  9986 ;; Auto vars:     Size  Location     Type
  9987 ;;		None
  9988 ;; Return value:  Size  Location     Type
  9989 ;;                  1    wreg      void 
  9990 ;; Registers used:
  9991 ;;		wreg, status,2, status,0, pclath, cstack
  9992 ;; Tracked objects:
  9993 ;;		On entry : 0/0
  9994 ;;		On exit  : 0/0
  9995 ;;		Unchanged: 0/0
  9996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10001 ;;Total ram usage:        0 bytes
 10002 ;; Hardware stack levels used:    1
 10003 ;; Hardware stack levels required when called:    8
 10004 ;; This function calls:
 10005 ;;		_TMR5_SetInterruptHandler
 10006 ;; This function is called by:
 10007 ;;		_SYSTEM_Initialize
 10008 ;; This function uses a non-reentrant model
 10009 ;;
 10010                           
 10011                           
 10012                           ;psect for function _TMR5_Initialize
 10013  0BC3                     _TMR5_Initialize:
 10014  0BC3                     l4171:	
 10015                           ;incstack = 0
 10016                           ; Regs used in _TMR5_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10017                           
 10018                           
 10019                           ;tmr5.c: 69: T5GCON = 0x00;
 10020  0BC3  0024               	movlb	4	; select bank4
 10021  0BC4  019B               	clrf	27	;volatile
 10022                           
 10023                           ;tmr5.c: 72: T5GATE = 0x00;
 10024  0BC5  019C               	clrf	28	;volatile
 10025  0BC6                     l4173:
 10026                           
 10027                           ;tmr5.c: 75: T5CLK = 0x04;
 10028  0BC6  3004               	movlw	4
 10029  0BC7  009D               	movwf	29	;volatile
 10030  0BC8                     l4175:
 10031                           
 10032                           ;tmr5.c: 79: TMR5H = 0x4A;
 10033  0BC8  304A               	movlw	74
 10034  0BC9  0099               	movwf	25	;volatile
 10035  0BCA                     l4177:
 10036                           
 10037                           ;tmr5.c: 82: TMR5L = 0x5C;
 10038  0BCA  305C               	movlw	92
 10039  0BCB  0098               	movwf	24	;volatile
 10040  0BCC                     l4179:
 10041                           
 10042                           ;tmr5.c: 85: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 10043  0BCC  0819               	movf	25,w	;volatile
 10044  0BCD  0020               	movlb	0	; select bank0
 10045  0BCE  00EC               	movwf	_timer5ReloadVal+1	;volatile
 10046  0BCF  0024               	movlb	4	; select bank4
 10047  0BD0  0818               	movf	24,w	;volatile
 10048  0BD1  0020               	movlb	0	; select bank0
 10049  0BD2  00EB               	movwf	_timer5ReloadVal	;volatile
 10050  0BD3                     l4181:
 10051                           
 10052                           ;tmr5.c: 88: PIR4bits.TMR5IF = 0;
 10053  0BD3  002E               	movlb	14	; select bank14
 10054  0BD4  1210               	bcf	16,4	;volatile
 10055  0BD5                     l4183:
 10056                           
 10057                           ;tmr5.c: 91: PIE4bits.TMR5IE = 1;
 10058  0BD5  161A               	bsf	26,4	;volatile
 10059  0BD6                     l4185:
 10060                           
 10061                           ;tmr5.c: 94: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 10062  0BD6  3003               	movlw	low _TMR5_DefaultInterruptHandler
 10063  0BD7  0021               	movlb	1	; select bank1
 10064  0BD8  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
 10065  0BD9  3000               	movlw	high _TMR5_DefaultInterruptHandler
 10066  0BDA  00A1               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10067  0BDB  3189  21A8  318B   	fcall	_TMR5_SetInterruptHandler
 10068  0BDE                     l4187:
 10069                           
 10070                           ;tmr5.c: 97: T5CON = 0x11;
 10071  0BDE  3011               	movlw	17
 10072  0BDF  0024               	movlb	4	; select bank4
 10073  0BE0  009A               	movwf	26	;volatile
 10074  0BE1                     l675:
 10075  0BE1  0008               	return
 10076  0BE2                     __end_of_TMR5_Initialize:
 10077                           
 10078                           	psect	text10
 10079  09A8                     __ptext10:	
 10080 ;; *************** function _TMR5_SetInterruptHandler *****************
 10081 ;; Defined at:
 10082 ;;		line 179 in file "mcc_generated_files/tmr5.c"
 10083 ;; Parameters:    Size  Location     Type
 10084 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 10085 ;;		 -> monitoring_ISR(1), TMR5_DefaultInterruptHandler(1), 
 10086 ;; Auto vars:     Size  Location     Type
 10087 ;;		None
 10088 ;; Return value:  Size  Location     Type
 10089 ;;                  1    wreg      void 
 10090 ;; Registers used:
 10091 ;;		wreg
 10092 ;; Tracked objects:
 10093 ;;		On entry : 0/0
 10094 ;;		On exit  : 0/0
 10095 ;;		Unchanged: 0/0
 10096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10097 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10100 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10101 ;;Total ram usage:        2 bytes
 10102 ;; Hardware stack levels used:    1
 10103 ;; Hardware stack levels required when called:    7
 10104 ;; This function calls:
 10105 ;;		Nothing
 10106 ;; This function is called by:
 10107 ;;		_TMR5_Initialize
 10108 ;;		_main
 10109 ;; This function uses a non-reentrant model
 10110 ;;
 10111                           
 10112                           
 10113                           ;psect for function _TMR5_SetInterruptHandler
 10114  09A8                     _TMR5_SetInterruptHandler:
 10115  09A8                     l3859:	
 10116                           ;incstack = 0
 10117                           ; Regs used in _TMR5_SetInterruptHandler: [wreg]
 10118                           
 10119                           
 10120                           ;tmr5.c: 180: TMR5_InterruptHandler = InterruptHandler;
 10121  09A8  0021               	movlb	1	; select bank1
 10122  09A9  0821               	movf	(TMR5_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 10123  09AA  00AB               	movwf	(_TMR5_InterruptHandler+1)^(0+128)
 10124  09AB  0820               	movf	TMR5_SetInterruptHandler@InterruptHandler^(0+128),w
 10125  09AC  00AA               	movwf	_TMR5_InterruptHandler^(0+128)
 10126  09AD                     l705:
 10127  09AD  0008               	return
 10128  09AE                     __end_of_TMR5_SetInterruptHandler:
 10129                           
 10130                           	psect	text11
 10131  0BA4                     __ptext11:	
 10132 ;; *************** function _TMR3_Initialize *****************
 10133 ;; Defined at:
 10134 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 10135 ;; Parameters:    Size  Location     Type
 10136 ;;		None
 10137 ;; Auto vars:     Size  Location     Type
 10138 ;;		None
 10139 ;; Return value:  Size  Location     Type
 10140 ;;                  1    wreg      void 
 10141 ;; Registers used:
 10142 ;;		wreg, status,2, status,0, pclath, cstack
 10143 ;; Tracked objects:
 10144 ;;		On entry : 0/0
 10145 ;;		On exit  : 0/0
 10146 ;;		Unchanged: 0/0
 10147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10152 ;;Total ram usage:        0 bytes
 10153 ;; Hardware stack levels used:    1
 10154 ;; Hardware stack levels required when called:    8
 10155 ;; This function calls:
 10156 ;;		_TMR3_SetInterruptHandler
 10157 ;; This function is called by:
 10158 ;;		_SYSTEM_Initialize
 10159 ;; This function uses a non-reentrant model
 10160 ;;
 10161                           
 10162                           
 10163                           ;psect for function _TMR3_Initialize
 10164  0BA4                     _TMR3_Initialize:
 10165  0BA4                     l4153:	
 10166                           ;incstack = 0
 10167                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10168                           
 10169                           
 10170                           ;tmr3.c: 69: T3GCON = 0x00;
 10171  0BA4  0024               	movlb	4	; select bank4
 10172  0BA5  0195               	clrf	21	;volatile
 10173                           
 10174                           ;tmr3.c: 72: T3GATE = 0x00;
 10175  0BA6  0196               	clrf	22	;volatile
 10176  0BA7                     l4155:
 10177                           
 10178                           ;tmr3.c: 75: T3CLK = 0x04;
 10179  0BA7  3004               	movlw	4
 10180  0BA8  0097               	movwf	23	;volatile
 10181  0BA9                     l4157:
 10182                           
 10183                           ;tmr3.c: 78: TMR3H = 0xE7;
 10184  0BA9  30E7               	movlw	231
 10185  0BAA  0093               	movwf	19	;volatile
 10186  0BAB                     l4159:
 10187                           
 10188                           ;tmr3.c: 81: TMR3L = 0xC8;
 10189  0BAB  30C8               	movlw	200
 10190  0BAC  0092               	movwf	18	;volatile
 10191  0BAD                     l4161:
 10192                           
 10193                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 10194  0BAD  0813               	movf	19,w	;volatile
 10195  0BAE  0020               	movlb	0	; select bank0
 10196  0BAF  00EE               	movwf	_timer3ReloadVal+1	;volatile
 10197  0BB0  0024               	movlb	4	; select bank4
 10198  0BB1  0812               	movf	18,w	;volatile
 10199  0BB2  0020               	movlb	0	; select bank0
 10200  0BB3  00ED               	movwf	_timer3ReloadVal	;volatile
 10201  0BB4                     l4163:
 10202                           
 10203                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
 10204  0BB4  002E               	movlb	14	; select bank14
 10205  0BB5  1110               	bcf	16,2	;volatile
 10206  0BB6                     l4165:
 10207                           
 10208                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
 10209  0BB6  151A               	bsf	26,2	;volatile
 10210  0BB7                     l4167:
 10211                           
 10212                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
 10213  0BB7  3002               	movlw	low _TMR3_DefaultInterruptHandler
 10214  0BB8  0021               	movlb	1	; select bank1
 10215  0BB9  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
 10216  0BBA  3000               	movlw	high _TMR3_DefaultInterruptHandler
 10217  0BBB  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10218  0BBC  3189  21A2  318B   	fcall	_TMR3_SetInterruptHandler
 10219  0BBF                     l4169:
 10220                           
 10221                           ;tmr3.c: 96: T3CON = 0x01;
 10222  0BBF  3001               	movlw	1
 10223  0BC0  0024               	movlb	4	; select bank4
 10224  0BC1  0094               	movwf	20	;volatile
 10225  0BC2                     l451:
 10226  0BC2  0008               	return
 10227  0BC3                     __end_of_TMR3_Initialize:
 10228                           
 10229                           	psect	text12
 10230  09A2                     __ptext12:	
 10231 ;; *************** function _TMR3_SetInterruptHandler *****************
 10232 ;; Defined at:
 10233 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 10234 ;; Parameters:    Size  Location     Type
 10235 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 10236 ;;		 -> menuLCD_ISR(1), TMR3_DefaultInterruptHandler(1), 
 10237 ;; Auto vars:     Size  Location     Type
 10238 ;;		None
 10239 ;; Return value:  Size  Location     Type
 10240 ;;                  1    wreg      void 
 10241 ;; Registers used:
 10242 ;;		wreg
 10243 ;; Tracked objects:
 10244 ;;		On entry : 0/0
 10245 ;;		On exit  : 0/0
 10246 ;;		Unchanged: 0/0
 10247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10248 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10251 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10252 ;;Total ram usage:        2 bytes
 10253 ;; Hardware stack levels used:    1
 10254 ;; Hardware stack levels required when called:    7
 10255 ;; This function calls:
 10256 ;;		Nothing
 10257 ;; This function is called by:
 10258 ;;		_TMR3_Initialize
 10259 ;;		_main
 10260 ;; This function uses a non-reentrant model
 10261 ;;
 10262                           
 10263                           
 10264                           ;psect for function _TMR3_SetInterruptHandler
 10265  09A2                     _TMR3_SetInterruptHandler:
 10266  09A2                     l3843:	
 10267                           ;incstack = 0
 10268                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
 10269                           
 10270                           
 10271                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
 10272  09A2  0021               	movlb	1	; select bank1
 10273  09A3  0821               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 10274  09A4  00AD               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
 10275  09A5  0820               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
 10276  09A6  00AC               	movwf	_TMR3_InterruptHandler^(0+128)
 10277  09A7                     l481:
 10278  09A7  0008               	return
 10279  09A8                     __end_of_TMR3_SetInterruptHandler:
 10280                           
 10281                           	psect	text13
 10282  09FF                     __ptext13:	
 10283 ;; *************** function _TMR2_Initialize *****************
 10284 ;; Defined at:
 10285 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 10286 ;; Parameters:    Size  Location     Type
 10287 ;;		None
 10288 ;; Auto vars:     Size  Location     Type
 10289 ;;		None
 10290 ;; Return value:  Size  Location     Type
 10291 ;;                  1    wreg      void 
 10292 ;; Registers used:
 10293 ;;		wreg, status,2
 10294 ;; Tracked objects:
 10295 ;;		On entry : 0/0
 10296 ;;		On exit  : 0/0
 10297 ;;		Unchanged: 0/0
 10298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10303 ;;Total ram usage:        0 bytes
 10304 ;; Hardware stack levels used:    1
 10305 ;; Hardware stack levels required when called:    7
 10306 ;; This function calls:
 10307 ;;		Nothing
 10308 ;; This function is called by:
 10309 ;;		_SYSTEM_Initialize
 10310 ;; This function uses a non-reentrant model
 10311 ;;
 10312                           
 10313                           
 10314                           ;psect for function _TMR2_Initialize
 10315  09FF                     _TMR2_Initialize:
 10316  09FF                     l4189:	
 10317                           ;incstack = 0
 10318                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 10319                           
 10320                           
 10321                           ;tmr2.c: 67: T2CLKCON = 0x01;
 10322  09FF  3001               	movlw	1
 10323  0A00  0025               	movlb	5	; select bank5
 10324  0A01  0090               	movwf	16	;volatile
 10325  0A02                     l4191:
 10326                           
 10327                           ;tmr2.c: 70: T2HLT = 0x00;
 10328  0A02  018F               	clrf	15	;volatile
 10329  0A03                     l4193:
 10330                           
 10331                           ;tmr2.c: 73: T2RST = 0x00;
 10332  0A03  0191               	clrf	17	;volatile
 10333                           
 10334                           ;tmr2.c: 76: T2PR = 0xFF;
 10335  0A04  30FF               	movlw	255
 10336  0A05  008D               	movwf	13	;volatile
 10337  0A06                     l4195:
 10338                           
 10339                           ;tmr2.c: 79: T2TMR = 0x00;
 10340  0A06  018C               	clrf	12	;volatile
 10341  0A07                     l4197:
 10342                           
 10343                           ;tmr2.c: 82: PIR4bits.TMR2IF = 0;
 10344  0A07  002E               	movlb	14	; select bank14
 10345  0A08  1090               	bcf	16,1	;volatile
 10346  0A09                     l4199:
 10347                           
 10348                           ;tmr2.c: 85: T2CON = 0x80;
 10349  0A09  3080               	movlw	128
 10350  0A0A  0025               	movlb	5	; select bank5
 10351  0A0B  008E               	movwf	14	;volatile
 10352  0A0C                     l749:
 10353  0A0C  0008               	return
 10354  0A0D                     __end_of_TMR2_Initialize:
 10355                           
 10356                           	psect	text14
 10357  0B85                     __ptext14:	
 10358 ;; *************** function _TMR1_Initialize *****************
 10359 ;; Defined at:
 10360 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 10361 ;; Parameters:    Size  Location     Type
 10362 ;;		None
 10363 ;; Auto vars:     Size  Location     Type
 10364 ;;		None
 10365 ;; Return value:  Size  Location     Type
 10366 ;;                  1    wreg      void 
 10367 ;; Registers used:
 10368 ;;		wreg, status,2, status,0, pclath, cstack
 10369 ;; Tracked objects:
 10370 ;;		On entry : 0/0
 10371 ;;		On exit  : 0/0
 10372 ;;		Unchanged: 0/0
 10373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10378 ;;Total ram usage:        0 bytes
 10379 ;; Hardware stack levels used:    1
 10380 ;; Hardware stack levels required when called:    8
 10381 ;; This function calls:
 10382 ;;		_TMR1_SetInterruptHandler
 10383 ;; This function is called by:
 10384 ;;		_SYSTEM_Initialize
 10385 ;; This function uses a non-reentrant model
 10386 ;;
 10387                           
 10388                           
 10389                           ;psect for function _TMR1_Initialize
 10390  0B85                     _TMR1_Initialize:
 10391  0B85                     l4201:	
 10392                           ;incstack = 0
 10393                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10394                           
 10395                           
 10396                           ;tmr1.c: 69: T1GCON = 0x00;
 10397  0B85  0024               	movlb	4	; select bank4
 10398  0B86  018F               	clrf	15	;volatile
 10399                           
 10400                           ;tmr1.c: 72: T1GATE = 0x00;
 10401  0B87  0190               	clrf	16	;volatile
 10402  0B88                     l4203:
 10403                           
 10404                           ;tmr1.c: 75: T1CLK = 0x04;
 10405  0B88  3004               	movlw	4
 10406  0B89  0091               	movwf	17	;volatile
 10407  0B8A                     l4205:
 10408                           
 10409                           ;tmr1.c: 78: TMR1H = 0x86;
 10410  0B8A  3086               	movlw	134
 10411  0B8B  008D               	movwf	13	;volatile
 10412  0B8C                     l4207:
 10413                           
 10414                           ;tmr1.c: 81: TMR1L = 0xE8;
 10415  0B8C  30E8               	movlw	232
 10416  0B8D  008C               	movwf	12	;volatile
 10417  0B8E                     l4209:
 10418                           
 10419                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 10420  0B8E  080D               	movf	13,w	;volatile
 10421  0B8F  0021               	movlb	1	; select bank1
 10422  0B90  00B1               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 10423  0B91  0024               	movlb	4	; select bank4
 10424  0B92  080C               	movf	12,w	;volatile
 10425  0B93  0021               	movlb	1	; select bank1
 10426  0B94  00B0               	movwf	_timer1ReloadVal^(0+128)	;volatile
 10427  0B95                     l4211:
 10428                           
 10429                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
 10430  0B95  002E               	movlb	14	; select bank14
 10431  0B96  1010               	bcf	16,0	;volatile
 10432  0B97                     l4213:
 10433                           
 10434                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
 10435  0B97  141A               	bsf	26,0	;volatile
 10436  0B98                     l4215:
 10437                           
 10438                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 10439  0B98  307A               	movlw	low _TMR1_DefaultInterruptHandler
 10440  0B99  0021               	movlb	1	; select bank1
 10441  0B9A  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
 10442  0B9B  3009               	movlw	high _TMR1_DefaultInterruptHandler
 10443  0B9C  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10444  0B9D  3189  219C  318B   	fcall	_TMR1_SetInterruptHandler
 10445  0BA0                     l4217:
 10446                           
 10447                           ;tmr1.c: 96: T1CON = 0x01;
 10448  0BA0  3001               	movlw	1
 10449  0BA1  0024               	movlb	4	; select bank4
 10450  0BA2  008E               	movwf	14	;volatile
 10451  0BA3                     l387:
 10452  0BA3  0008               	return
 10453  0BA4                     __end_of_TMR1_Initialize:
 10454                           
 10455                           	psect	text15
 10456  099C                     __ptext15:	
 10457 ;; *************** function _TMR1_SetInterruptHandler *****************
 10458 ;; Defined at:
 10459 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 10460 ;; Parameters:    Size  Location     Type
 10461 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 10462 ;;		 -> Clock_ISR(1), TMR1_DefaultInterruptHandler(1), 
 10463 ;; Auto vars:     Size  Location     Type
 10464 ;;		None
 10465 ;; Return value:  Size  Location     Type
 10466 ;;                  1    wreg      void 
 10467 ;; Registers used:
 10468 ;;		wreg
 10469 ;; Tracked objects:
 10470 ;;		On entry : 0/0
 10471 ;;		On exit  : 0/0
 10472 ;;		Unchanged: 0/0
 10473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10474 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10477 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10478 ;;Total ram usage:        2 bytes
 10479 ;; Hardware stack levels used:    1
 10480 ;; Hardware stack levels required when called:    7
 10481 ;; This function calls:
 10482 ;;		Nothing
 10483 ;; This function is called by:
 10484 ;;		_TMR1_Initialize
 10485 ;;		_main
 10486 ;; This function uses a non-reentrant model
 10487 ;;
 10488                           
 10489                           
 10490                           ;psect for function _TMR1_SetInterruptHandler
 10491  099C                     _TMR1_SetInterruptHandler:
 10492  099C                     l3841:	
 10493                           ;incstack = 0
 10494                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 10495                           
 10496                           
 10497                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
 10498  099C  0021               	movlb	1	; select bank1
 10499  099D  0821               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 10500  099E  00AF               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 10501  099F  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
 10502  09A0  00AE               	movwf	_TMR1_InterruptHandler^(0+128)
 10503  09A1                     l417:
 10504  09A1  0008               	return
 10505  09A2                     __end_of_TMR1_SetInterruptHandler:
 10506                           
 10507                           	psect	text16
 10508  09F2                     __ptext16:	
 10509 ;; *************** function _PWM6_Initialize *****************
 10510 ;; Defined at:
 10511 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 10512 ;; Parameters:    Size  Location     Type
 10513 ;;		None
 10514 ;; Auto vars:     Size  Location     Type
 10515 ;;		None
 10516 ;; Return value:  Size  Location     Type
 10517 ;;                  1    wreg      void 
 10518 ;; Registers used:
 10519 ;;		wreg, status,2, status,0
 10520 ;; Tracked objects:
 10521 ;;		On entry : 0/0
 10522 ;;		On exit  : 0/0
 10523 ;;		Unchanged: 0/0
 10524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10529 ;;Total ram usage:        0 bytes
 10530 ;; Hardware stack levels used:    1
 10531 ;; Hardware stack levels required when called:    7
 10532 ;; This function calls:
 10533 ;;		Nothing
 10534 ;; This function is called by:
 10535 ;;		_SYSTEM_Initialize
 10536 ;; This function uses a non-reentrant model
 10537 ;;
 10538                           
 10539                           
 10540                           ;psect for function _PWM6_Initialize
 10541  09F2                     _PWM6_Initialize:
 10542  09F2                     l4143:	
 10543                           ;incstack = 0
 10544                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 10545                           
 10546                           
 10547                           ;pwm6.c: 62: PWM6CON = 0x80;
 10548  09F2  3080               	movlw	128
 10549  09F3  0027               	movlb	7	; select bank7
 10550  09F4  008E               	movwf	14	;volatile
 10551                           
 10552                           ;pwm6.c: 65: PWM6DCH = 0xFF;
 10553  09F5  30FF               	movlw	255
 10554  09F6  008D               	movwf	13	;volatile
 10555                           
 10556                           ;pwm6.c: 68: PWM6DCL = 0xC0;
 10557  09F7  30C0               	movlw	192
 10558  09F8  008C               	movwf	12	;volatile
 10559  09F9                     l4145:
 10560                           
 10561                           ;pwm6.c: 71: CCPTMRS1bits.P6TSEL = 1;
 10562  09F9  0024               	movlb	4	; select bank4
 10563  09FA  081F               	movf	31,w	;volatile
 10564  09FB  39F3               	andlw	-13
 10565  09FC  3804               	iorlw	4
 10566  09FD  009F               	movwf	31	;volatile
 10567  09FE                     l719:
 10568  09FE  0008               	return
 10569  09FF                     __end_of_PWM6_Initialize:
 10570                           
 10571                           	psect	text17
 10572  09C9                     __ptext17:	
 10573 ;; *************** function _PMD_Initialize *****************
 10574 ;; Defined at:
 10575 ;;		line 77 in file "mcc_generated_files/mcc.c"
 10576 ;; Parameters:    Size  Location     Type
 10577 ;;		None
 10578 ;; Auto vars:     Size  Location     Type
 10579 ;;		None
 10580 ;; Return value:  Size  Location     Type
 10581 ;;                  1    wreg      void 
 10582 ;; Registers used:
 10583 ;;		status,2
 10584 ;; Tracked objects:
 10585 ;;		On entry : 0/0
 10586 ;;		On exit  : 0/0
 10587 ;;		Unchanged: 0/0
 10588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10593 ;;Total ram usage:        0 bytes
 10594 ;; Hardware stack levels used:    1
 10595 ;; Hardware stack levels required when called:    7
 10596 ;; This function calls:
 10597 ;;		Nothing
 10598 ;; This function is called by:
 10599 ;;		_SYSTEM_Initialize
 10600 ;; This function uses a non-reentrant model
 10601 ;;
 10602                           
 10603                           
 10604                           ;psect for function _PMD_Initialize
 10605  09C9                     _PMD_Initialize:
 10606  09C9                     l4133:	
 10607                           ;incstack = 0
 10608                           ; Regs used in _PMD_Initialize: [status,2]
 10609                           
 10610                           
 10611                           ;mcc.c: 80: PMD0 = 0x00;
 10612  09C9  002F               	movlb	15	; select bank15
 10613  09CA  0196               	clrf	22	;volatile
 10614                           
 10615                           ;mcc.c: 82: PMD1 = 0x00;
 10616  09CB  0197               	clrf	23	;volatile
 10617                           
 10618                           ;mcc.c: 84: PMD2 = 0x00;
 10619  09CC  0198               	clrf	24	;volatile
 10620                           
 10621                           ;mcc.c: 86: PMD3 = 0x00;
 10622  09CD  0199               	clrf	25	;volatile
 10623                           
 10624                           ;mcc.c: 88: PMD4 = 0x00;
 10625  09CE  019A               	clrf	26	;volatile
 10626                           
 10627                           ;mcc.c: 90: PMD5 = 0x00;
 10628  09CF  019B               	clrf	27	;volatile
 10629  09D0                     l178:
 10630  09D0  0008               	return
 10631  09D1                     __end_of_PMD_Initialize:
 10632                           
 10633                           	psect	text18
 10634  07C3                     __ptext18:	
 10635 ;; *************** function _PIN_MANAGER_Initialize *****************
 10636 ;; Defined at:
 10637 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 10638 ;; Parameters:    Size  Location     Type
 10639 ;;		None
 10640 ;; Auto vars:     Size  Location     Type
 10641 ;;		None
 10642 ;; Return value:  Size  Location     Type
 10643 ;;                  1    wreg      void 
 10644 ;; Registers used:
 10645 ;;		wreg, status,2
 10646 ;; Tracked objects:
 10647 ;;		On entry : 0/0
 10648 ;;		On exit  : 0/0
 10649 ;;		Unchanged: 0/0
 10650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10655 ;;Total ram usage:        0 bytes
 10656 ;; Hardware stack levels used:    1
 10657 ;; Hardware stack levels required when called:    7
 10658 ;; This function calls:
 10659 ;;		Nothing
 10660 ;; This function is called by:
 10661 ;;		_SYSTEM_Initialize
 10662 ;; This function uses a non-reentrant model
 10663 ;;
 10664                           
 10665                           
 10666                           ;psect for function _PIN_MANAGER_Initialize
 10667  07C3                     _PIN_MANAGER_Initialize:
 10668  07C3                     l4091:	
 10669                           ;incstack = 0
 10670                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10671                           
 10672                           
 10673                           ;pin_manager.c: 62: LATE = 0x00;
 10674  07C3  0020               	movlb	0	; select bank0
 10675  07C4  019A               	clrf	26	;volatile
 10676                           
 10677                           ;pin_manager.c: 63: LATD = 0x00;
 10678  07C5  0199               	clrf	25	;volatile
 10679                           
 10680                           ;pin_manager.c: 64: LATA = 0x00;
 10681  07C6  0196               	clrf	22	;volatile
 10682                           
 10683                           ;pin_manager.c: 65: LATB = 0x00;
 10684  07C7  0197               	clrf	23	;volatile
 10685                           
 10686                           ;pin_manager.c: 66: LATC = 0x00;
 10687  07C8  0198               	clrf	24	;volatile
 10688  07C9                     l4093:
 10689                           
 10690                           ;pin_manager.c: 71: TRISE = 0x07;
 10691  07C9  3007               	movlw	7
 10692  07CA  0095               	movwf	21	;volatile
 10693  07CB                     l4095:
 10694                           
 10695                           ;pin_manager.c: 72: TRISA = 0x0F;
 10696  07CB  300F               	movlw	15
 10697  07CC  0091               	movwf	17	;volatile
 10698  07CD                     l4097:
 10699                           
 10700                           ;pin_manager.c: 73: TRISB = 0xFF;
 10701  07CD  30FF               	movlw	255
 10702  07CE  0092               	movwf	18	;volatile
 10703  07CF                     l4099:
 10704                           
 10705                           ;pin_manager.c: 74: TRISC = 0xFF;
 10706  07CF  30FF               	movlw	255
 10707  07D0  0093               	movwf	19	;volatile
 10708  07D1                     l4101:
 10709                           
 10710                           ;pin_manager.c: 75: TRISD = 0xFF;
 10711  07D1  30FF               	movlw	255
 10712  07D2  0094               	movwf	20	;volatile
 10713  07D3                     l4103:
 10714                           
 10715                           ;pin_manager.c: 80: ANSELD = 0xFF;
 10716  07D3  30FF               	movlw	255
 10717  07D4  003E               	movlb	30	; select bank30
 10718  07D5  00D9               	movwf	89	;volatile
 10719  07D6                     l4105:
 10720                           
 10721                           ;pin_manager.c: 81: ANSELC = 0xC7;
 10722  07D6  30C7               	movlw	199
 10723  07D7  00CE               	movwf	78	;volatile
 10724  07D8                     l4107:
 10725                           
 10726                           ;pin_manager.c: 82: ANSELB = 0xEF;
 10727  07D8  30EF               	movlw	239
 10728  07D9  00C3               	movwf	67	;volatile
 10729  07DA                     l4109:
 10730                           
 10731                           ;pin_manager.c: 83: ANSELE = 0x07;
 10732  07DA  3007               	movlw	7
 10733  07DB  00E4               	movwf	100	;volatile
 10734  07DC                     l4111:
 10735                           
 10736                           ;pin_manager.c: 84: ANSELA = 0x4F;
 10737  07DC  304F               	movlw	79
 10738  07DD  00B8               	movwf	56	;volatile
 10739                           
 10740                           ;pin_manager.c: 89: WPUD = 0x00;
 10741  07DE  01DA               	clrf	90	;volatile
 10742                           
 10743                           ;pin_manager.c: 90: WPUE = 0x00;
 10744  07DF  01E5               	clrf	101	;volatile
 10745                           
 10746                           ;pin_manager.c: 91: WPUB = 0x00;
 10747  07E0  01C4               	clrf	68	;volatile
 10748                           
 10749                           ;pin_manager.c: 92: WPUA = 0x00;
 10750  07E1  01B9               	clrf	57	;volatile
 10751                           
 10752                           ;pin_manager.c: 93: WPUC = 0x00;
 10753  07E2  01CF               	clrf	79	;volatile
 10754                           
 10755                           ;pin_manager.c: 98: ODCONE = 0x00;
 10756  07E3  01E6               	clrf	102	;volatile
 10757                           
 10758                           ;pin_manager.c: 99: ODCONA = 0x00;
 10759  07E4  01BA               	clrf	58	;volatile
 10760                           
 10761                           ;pin_manager.c: 100: ODCONB = 0x00;
 10762  07E5  01C5               	clrf	69	;volatile
 10763                           
 10764                           ;pin_manager.c: 101: ODCONC = 0x00;
 10765  07E6  01D0               	clrf	80	;volatile
 10766                           
 10767                           ;pin_manager.c: 102: ODCOND = 0x00;
 10768  07E7  01DB               	clrf	91	;volatile
 10769  07E8                     l4113:
 10770                           
 10771                           ;pin_manager.c: 107: SLRCONA = 0xFF;
 10772  07E8  30FF               	movlw	255
 10773  07E9  00BB               	movwf	59	;volatile
 10774  07EA                     l4115:
 10775                           
 10776                           ;pin_manager.c: 108: SLRCONB = 0xFF;
 10777  07EA  30FF               	movlw	255
 10778  07EB  00C6               	movwf	70	;volatile
 10779  07EC                     l4117:
 10780                           
 10781                           ;pin_manager.c: 109: SLRCONC = 0xFF;
 10782  07EC  30FF               	movlw	255
 10783  07ED  00D1               	movwf	81	;volatile
 10784  07EE                     l4119:
 10785                           
 10786                           ;pin_manager.c: 110: SLRCOND = 0xFF;
 10787  07EE  30FF               	movlw	255
 10788  07EF  00DC               	movwf	92	;volatile
 10789  07F0                     l4121:
 10790                           
 10791                           ;pin_manager.c: 111: SLRCONE = 0x07;
 10792  07F0  3007               	movlw	7
 10793  07F1  00E7               	movwf	103	;volatile
 10794  07F2                     l4123:
 10795                           
 10796                           ;pin_manager.c: 120: SSP1CLKPPS = 0x13;
 10797  07F2  3013               	movlw	19
 10798  07F3  003D               	movlb	29	; select bank29
 10799  07F4  00C5               	movwf	69	;volatile
 10800  07F5                     l4125:
 10801                           
 10802                           ;pin_manager.c: 121: RC3PPS = 0x14;
 10803  07F5  3014               	movlw	20
 10804  07F6  003E               	movlb	30	; select bank30
 10805  07F7  00A3               	movwf	35	;volatile
 10806  07F8                     l4127:
 10807                           
 10808                           ;pin_manager.c: 122: RC4PPS = 0x15;
 10809  07F8  3015               	movlw	21
 10810  07F9  00A4               	movwf	36	;volatile
 10811  07FA                     l4129:
 10812                           
 10813                           ;pin_manager.c: 123: RA6PPS = 0x0E;
 10814  07FA  300E               	movlw	14
 10815  07FB  0096               	movwf	22	;volatile
 10816  07FC                     l4131:
 10817                           
 10818                           ;pin_manager.c: 124: SSP1DATPPS = 0x14;
 10819  07FC  3014               	movlw	20
 10820  07FD  003D               	movlb	29	; select bank29
 10821  07FE  00C6               	movwf	70	;volatile
 10822  07FF                     l122:
 10823  07FF  0008               	return
 10824  0800                     __end_of_PIN_MANAGER_Initialize:
 10825                           
 10826                           	psect	text19
 10827  09D1                     __ptext19:	
 10828 ;; *************** function _OSCILLATOR_Initialize *****************
 10829 ;; Defined at:
 10830 ;;		line 63 in file "mcc_generated_files/mcc.c"
 10831 ;; Parameters:    Size  Location     Type
 10832 ;;		None
 10833 ;; Auto vars:     Size  Location     Type
 10834 ;;		None
 10835 ;; Return value:  Size  Location     Type
 10836 ;;                  1    wreg      void 
 10837 ;; Registers used:
 10838 ;;		wreg, status,2
 10839 ;; Tracked objects:
 10840 ;;		On entry : 0/0
 10841 ;;		On exit  : 0/0
 10842 ;;		Unchanged: 0/0
 10843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10848 ;;Total ram usage:        0 bytes
 10849 ;; Hardware stack levels used:    1
 10850 ;; Hardware stack levels required when called:    7
 10851 ;; This function calls:
 10852 ;;		Nothing
 10853 ;; This function is called by:
 10854 ;;		_SYSTEM_Initialize
 10855 ;; This function uses a non-reentrant model
 10856 ;;
 10857                           
 10858                           
 10859                           ;psect for function _OSCILLATOR_Initialize
 10860  09D1                     _OSCILLATOR_Initialize:
 10861  09D1                     l4135:	
 10862                           ;incstack = 0
 10863                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10864                           
 10865                           
 10866                           ;mcc.c: 66: OSCCON1 = 0x62;
 10867  09D1  3062               	movlw	98
 10868  09D2  0031               	movlb	17	; select bank17
 10869  09D3  008D               	movwf	13	;volatile
 10870  09D4                     l4137:
 10871                           
 10872                           ;mcc.c: 68: OSCCON3 = 0x00;
 10873  09D4  018F               	clrf	15	;volatile
 10874  09D5                     l4139:
 10875                           
 10876                           ;mcc.c: 70: OSCEN = 0x00;
 10877  09D5  0191               	clrf	17	;volatile
 10878                           
 10879                           ;mcc.c: 72: OSCFRQ = 0x02;
 10880  09D6  3002               	movlw	2
 10881  09D7  0093               	movwf	19	;volatile
 10882  09D8                     l4141:
 10883                           
 10884                           ;mcc.c: 74: OSCTUNE = 0x00;
 10885  09D8  0192               	clrf	18	;volatile
 10886  09D9                     l175:
 10887  09D9  0008               	return
 10888  09DA                     __end_of_OSCILLATOR_Initialize:
 10889                           
 10890                           	psect	text20
 10891  0AE2                     __ptext20:	
 10892 ;; *************** function _ADCC_Initialize *****************
 10893 ;; Defined at:
 10894 ;;		line 63 in file "mcc_generated_files/adcc.c"
 10895 ;; Parameters:    Size  Location     Type
 10896 ;;		None
 10897 ;; Auto vars:     Size  Location     Type
 10898 ;;		None
 10899 ;; Return value:  Size  Location     Type
 10900 ;;                  1    wreg      void 
 10901 ;; Registers used:
 10902 ;;		wreg, status,2
 10903 ;; Tracked objects:
 10904 ;;		On entry : 0/0
 10905 ;;		On exit  : 0/0
 10906 ;;		Unchanged: 0/0
 10907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10912 ;;Total ram usage:        0 bytes
 10913 ;; Hardware stack levels used:    1
 10914 ;; Hardware stack levels required when called:    7
 10915 ;; This function calls:
 10916 ;;		Nothing
 10917 ;; This function is called by:
 10918 ;;		_SYSTEM_Initialize
 10919 ;; This function uses a non-reentrant model
 10920 ;;
 10921                           
 10922                           
 10923                           ;psect for function _ADCC_Initialize
 10924  0AE2                     _ADCC_Initialize:
 10925  0AE2                     l4147:	
 10926                           ;incstack = 0
 10927                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10928                           
 10929                           
 10930                           ;adcc.c: 67: ADLTHL = 0x00;
 10931  0AE2  0022               	movlb	2	; select bank2
 10932  0AE3  018E               	clrf	14	;volatile
 10933                           
 10934                           ;adcc.c: 69: ADLTHH = 0x00;
 10935  0AE4  018F               	clrf	15	;volatile
 10936                           
 10937                           ;adcc.c: 71: ADUTHL = 0x00;
 10938  0AE5  0190               	clrf	16	;volatile
 10939                           
 10940                           ;adcc.c: 73: ADUTHH = 0x00;
 10941  0AE6  0191               	clrf	17	;volatile
 10942                           
 10943                           ;adcc.c: 75: ADSTPTL = 0x00;
 10944  0AE7  0192               	clrf	18	;volatile
 10945                           
 10946                           ;adcc.c: 77: ADSTPTH = 0x00;
 10947  0AE8  0193               	clrf	19	;volatile
 10948                           
 10949                           ;adcc.c: 79: ADRPT = 0x00;
 10950  0AE9  018D               	clrf	13	;volatile
 10951                           
 10952                           ;adcc.c: 81: ADPCH = 0x00;
 10953  0AEA  0021               	movlb	1	; select bank1
 10954  0AEB  019E               	clrf	30	;volatile
 10955                           
 10956                           ;adcc.c: 83: ADCAP = 0x00;
 10957  0AEC  019B               	clrf	27	;volatile
 10958                           
 10959                           ;adcc.c: 85: ADCON1 = 0x00;
 10960  0AED  0194               	clrf	20	;volatile
 10961                           
 10962                           ;adcc.c: 87: ADCON2 = 0x00;
 10963  0AEE  0195               	clrf	21	;volatile
 10964                           
 10965                           ;adcc.c: 89: ADCON3 = 0x00;
 10966  0AEF  0196               	clrf	22	;volatile
 10967                           
 10968                           ;adcc.c: 91: ADSTAT = 0x00;
 10969  0AF0  0197               	clrf	23	;volatile
 10970                           
 10971                           ;adcc.c: 93: ADREF = 0x00;
 10972  0AF1  019A               	clrf	26	;volatile
 10973                           
 10974                           ;adcc.c: 95: ADACT = 0x00;
 10975  0AF2  0199               	clrf	25	;volatile
 10976                           
 10977                           ;adcc.c: 97: ADCLK = 0x00;
 10978  0AF3  0198               	clrf	24	;volatile
 10979  0AF4                     l4149:
 10980                           
 10981                           ;adcc.c: 99: ADCON0 = 0x80;
 10982  0AF4  3080               	movlw	128
 10983  0AF5  0093               	movwf	19	;volatile
 10984  0AF6                     l4151:
 10985                           
 10986                           ;adcc.c: 101: ADACQ = 0xFF;
 10987  0AF6  30FF               	movlw	255
 10988  0AF7  009D               	movwf	29	;volatile
 10989  0AF8                     l563:
 10990  0AF8  0008               	return
 10991  0AF9                     __end_of_ADCC_Initialize:
 10992                           
 10993                           	psect	text21
 10994  0987                     __ptext21:	
 10995 ;; *************** function _PWM_Output_D4_Disable *****************
 10996 ;; Defined at:
 10997 ;;		line 233 in file "main.c"
 10998 ;; Parameters:    Size  Location     Type
 10999 ;;		None
 11000 ;; Auto vars:     Size  Location     Type
 11001 ;;		None
 11002 ;; Return value:  Size  Location     Type
 11003 ;;                  1    wreg      void 
 11004 ;; Registers used:
 11005 ;;		None
 11006 ;; Tracked objects:
 11007 ;;		On entry : 0/0
 11008 ;;		On exit  : 0/0
 11009 ;;		Unchanged: 0/0
 11010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11015 ;;Total ram usage:        0 bytes
 11016 ;; Hardware stack levels used:    1
 11017 ;; Hardware stack levels required when called:    7
 11018 ;; This function calls:
 11019 ;;		Nothing
 11020 ;; This function is called by:
 11021 ;;		_main
 11022 ;; This function uses a non-reentrant model
 11023 ;;
 11024                           
 11025                           
 11026                           ;psect for function _PWM_Output_D4_Disable
 11027  0987                     _PWM_Output_D4_Disable:
 11028  0987                     l4671:	
 11029                           ;incstack = 0
 11030                           ; Regs used in _PWM_Output_D4_Disable: []
 11031                           
 11032                           
 11033                           ;main.c: 234: PWM6EN = 0;
 11034  0987  0027               	movlb	7	; select bank7
 11035  0988  138E               	bcf	14,7	;volatile
 11036  0989                     l1094:
 11037  0989  0008               	return
 11038  098A                     __end_of_PWM_Output_D4_Disable:
 11039                           
 11040                           	psect	text22
 11041  0AF9                     __ptext22:	
 11042 ;; *************** function _PWM6_LoadDutyValue *****************
 11043 ;; Defined at:
 11044 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 11045 ;; Parameters:    Size  Location     Type
 11046 ;;  dutyValue       2    0[BANK1 ] unsigned int 
 11047 ;; Auto vars:     Size  Location     Type
 11048 ;;		None
 11049 ;; Return value:  Size  Location     Type
 11050 ;;                  1    wreg      void 
 11051 ;; Registers used:
 11052 ;;		wreg, status,2, status,0
 11053 ;; Tracked objects:
 11054 ;;		On entry : 0/0
 11055 ;;		On exit  : 0/0
 11056 ;;		Unchanged: 0/0
 11057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11058 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11060 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11061 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11062 ;;Total ram usage:        4 bytes
 11063 ;; Hardware stack levels used:    1
 11064 ;; Hardware stack levels required when called:    7
 11065 ;; This function calls:
 11066 ;;		Nothing
 11067 ;; This function is called by:
 11068 ;;		_main
 11069 ;; This function uses a non-reentrant model
 11070 ;;
 11071                           
 11072                           
 11073                           ;psect for function _PWM6_LoadDutyValue
 11074  0AF9                     _PWM6_LoadDutyValue:
 11075  0AF9                     l4567:	
 11076                           ;incstack = 0
 11077                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 11078                           
 11079                           
 11080                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 11081  0AF9  0021               	movlb	1	; select bank1
 11082  0AFA  0821               	movf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128),w
 11083  0AFB  00A3               	movwf	(??_PWM6_LoadDutyValue^(0+128)+1)
 11084  0AFC  0820               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 11085  0AFD  00A2               	movwf	??_PWM6_LoadDutyValue^(0+128)
 11086  0AFE  36A3               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 11087  0AFF  0CA2               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 11088  0B00  36A3               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 11089  0B01  0CA2               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 11090  0B02  0822               	movf	??_PWM6_LoadDutyValue^(0+128),w
 11091  0B03  0027               	movlb	7	; select bank7
 11092  0B04  008D               	movwf	13	;volatile
 11093                           
 11094                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 11095  0B05  0021               	movlb	1	; select bank1
 11096  0B06  0820               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 11097  0B07  3903               	andlw	3
 11098  0B08  00A2               	movwf	??_PWM6_LoadDutyValue^(0+128)
 11099  0B09  3005               	movlw	5
 11100  0B0A                     u4125:
 11101  0B0A  35A2               	lslf	??_PWM6_LoadDutyValue^(0+128),f
 11102  0B0B  3EFF               	addlw	-1
 11103  0B0C  1D03               	skipz
 11104  0B0D  2B0A               	goto	u4125
 11105  0B0E  3522               	lslf	??_PWM6_LoadDutyValue^(0+128),w
 11106  0B0F  0027               	movlb	7	; select bank7
 11107  0B10  008C               	movwf	12	;volatile
 11108  0B11                     l722:
 11109  0B11  0008               	return
 11110  0B12                     __end_of_PWM6_LoadDutyValue:
 11111                           
 11112                           	psect	text23
 11113  0E78                     __ptext23:	
 11114 ;; *************** function _LCDinit *****************
 11115 ;; Defined at:
 11116 ;;		line 160 in file "main.c"
 11117 ;; Parameters:    Size  Location     Type
 11118 ;;		None
 11119 ;; Auto vars:     Size  Location     Type
 11120 ;;		None
 11121 ;; Return value:  Size  Location     Type
 11122 ;;                  1    wreg      void 
 11123 ;; Registers used:
 11124 ;;		wreg, status,2, status,0, pclath, cstack
 11125 ;; Tracked objects:
 11126 ;;		On entry : 0/0
 11127 ;;		On exit  : 0/0
 11128 ;;		Unchanged: 0/0
 11129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11132 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11133 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11134 ;;Total ram usage:        1 bytes
 11135 ;; Hardware stack levels used:    1
 11136 ;; Hardware stack levels required when called:    9
 11137 ;; This function calls:
 11138 ;;		_LCDsend
 11139 ;;		_LCDsend2x4
 11140 ;; This function is called by:
 11141 ;;		_main
 11142 ;; This function uses a non-reentrant model
 11143 ;;
 11144                           
 11145                           
 11146                           ;psect for function _LCDinit
 11147  0E78                     _LCDinit:
 11148  0E78                     l4637:	
 11149                           ;incstack = 0
 11150                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 11151                           
 11152                           
 11153                           ;main.c: 162: _delay((unsigned long)((50)*(1000000/4000.0)));
 11154  0E78  3011               	movlw	17
 11155  0E79  0021               	movlb	1	; select bank1
 11156  0E7A  00A8               	movwf	??_LCDinit^(0+128)
 11157  0E7B  303A               	movlw	58
 11158  0E7C                     u4887:
 11159  0E7C  0B89               	decfsz	9,f
 11160  0E7D  2E7C               	goto	u4887
 11161  0E7E  0BA8               	decfsz	??_LCDinit^(0+128),f
 11162  0E7F  2E7C               	goto	u4887
 11163  0E80  0000               	nop
 11164  0E81                     l4639:
 11165                           
 11166                           ;main.c: 163: LCDsend(0x30);
 11167  0E81  3030               	movlw	48
 11168  0E82  318D  2574  318E   	fcall	_LCDsend
 11169  0E85                     l4641:
 11170                           
 11171                           ;main.c: 164: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 11172  0E85  3034               	movlw	52
 11173  0E86  318D  2574  318E   	fcall	_LCDsend
 11174  0E89  3029               	movlw	41
 11175  0E8A                     u4897:
 11176  0E8A  0B89               	decfsz	9,f
 11177  0E8B  2E8A               	goto	u4897
 11178  0E8C  3200               	nop2
 11179  0E8D                     l4643:
 11180  0E8D  3030               	movlw	48
 11181  0E8E  318D  2574  318E   	fcall	_LCDsend
 11182  0E91                     l4645:
 11183                           
 11184                           ;main.c: 165: _delay((unsigned long)((5)*(1000000/4000.0)));
 11185  0E91  30FA               	movlw	250
 11186  0E92                     u4907:
 11187  0E92  3200               	nop2
 11188  0E93  0B89               	decfsz	9,f
 11189  0E94  2E92               	goto	u4907
 11190                           
 11191                           ;main.c: 166: LCDsend(0x30);
 11192  0E95  3030               	movlw	48
 11193  0E96  318D  2574  318E   	fcall	_LCDsend
 11194                           
 11195                           ;main.c: 167: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 11196  0E99  3034               	movlw	52
 11197  0E9A  318D  2574  318E   	fcall	_LCDsend
 11198  0E9D                     l4647:
 11199  0E9D  3029               	movlw	41
 11200  0E9E                     u4917:
 11201  0E9E  0B89               	decfsz	9,f
 11202  0E9F  2E9E               	goto	u4917
 11203  0EA0  3200               	nop2
 11204  0EA1                     l4649:
 11205  0EA1  3030               	movlw	48
 11206  0EA2  318D  2574  318E   	fcall	_LCDsend
 11207                           
 11208                           ;main.c: 168: _delay((unsigned long)((100)*(1000000/4000000.0)));
 11209  0EA5  3008               	movlw	8
 11210  0EA6                     u4927:
 11211  0EA6  0B89               	decfsz	9,f
 11212  0EA7  2EA6               	goto	u4927
 11213  0EA8  0000               	nop
 11214  0EA9                     l4651:
 11215                           
 11216                           ;main.c: 169: LCDsend(0x30);
 11217  0EA9  3030               	movlw	48
 11218  0EAA  318D  2574  318E   	fcall	_LCDsend
 11219  0EAD                     l4653:
 11220                           
 11221                           ;main.c: 170: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 11222  0EAD  3034               	movlw	52
 11223  0EAE  318D  2574  318E   	fcall	_LCDsend
 11224  0EB1  3029               	movlw	41
 11225  0EB2                     u4937:
 11226  0EB2  0B89               	decfsz	9,f
 11227  0EB3  2EB2               	goto	u4937
 11228  0EB4  3200               	nop2
 11229  0EB5                     l4655:
 11230  0EB5  3030               	movlw	48
 11231  0EB6  318D  2574  318E   	fcall	_LCDsend
 11232  0EB9                     l4657:
 11233                           
 11234                           ;main.c: 171: _delay((unsigned long)((100)*(1000000/4000000.0)));
 11235  0EB9  3008               	movlw	8
 11236  0EBA                     u4947:
 11237  0EBA  0B89               	decfsz	9,f
 11238  0EBB  2EBA               	goto	u4947
 11239  0EBC  0000               	nop
 11240                           
 11241                           ;main.c: 172: LCDsend(0x20);
 11242  0EBD  3020               	movlw	32
 11243  0EBE  318D  2574  318E   	fcall	_LCDsend
 11244                           
 11245                           ;main.c: 173: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
 11246  0EC1  3024               	movlw	36
 11247  0EC2  318D  2574  318E   	fcall	_LCDsend
 11248  0EC5                     l4659:
 11249  0EC5  3029               	movlw	41
 11250  0EC6                     u4957:
 11251  0EC6  0B89               	decfsz	9,f
 11252  0EC7  2EC6               	goto	u4957
 11253  0EC8  3200               	nop2
 11254  0EC9                     l4661:
 11255  0EC9  3020               	movlw	32
 11256  0ECA  318D  2574  318E   	fcall	_LCDsend
 11257                           
 11258                           ;main.c: 174: _delay((unsigned long)((5)*(1000000/4000.0)));
 11259  0ECD  30FA               	movlw	250
 11260  0ECE                     u4967:
 11261  0ECE  3200               	nop2
 11262  0ECF  0B89               	decfsz	9,f
 11263  0ED0  2ECE               	goto	u4967
 11264  0ED1                     l4663:
 11265                           
 11266                           ;main.c: 176: LCDsend2x4(0x28, 0);
 11267  0ED1  0021               	movlb	1	; select bank1
 11268  0ED2  01A2               	clrf	LCDsend2x4@mode^(0+128)
 11269  0ED3  3028               	movlw	40
 11270  0ED4  3186  263C  318E   	fcall	_LCDsend2x4
 11271  0ED7                     l4665:
 11272                           
 11273                           ;main.c: 177: LCDsend2x4(0x06, 0);
 11274  0ED7  0021               	movlb	1	; select bank1
 11275  0ED8  01A2               	clrf	LCDsend2x4@mode^(0+128)
 11276  0ED9  3006               	movlw	6
 11277  0EDA  3186  263C  318E   	fcall	_LCDsend2x4
 11278  0EDD                     l4667:
 11279                           
 11280                           ;main.c: 178: LCDsend2x4(0x0f, 0);
 11281  0EDD  0021               	movlb	1	; select bank1
 11282  0EDE  01A2               	clrf	LCDsend2x4@mode^(0+128)
 11283  0EDF  300F               	movlw	15
 11284  0EE0  3186  263C  318E   	fcall	_LCDsend2x4
 11285  0EE3                     l4669:
 11286                           
 11287                           ;main.c: 179: LCDsend2x4(0x01, 0);
 11288  0EE3  0021               	movlb	1	; select bank1
 11289  0EE4  01A2               	clrf	LCDsend2x4@mode^(0+128)
 11290  0EE5  3001               	movlw	1
 11291  0EE6  3186  263C  318E   	fcall	_LCDsend2x4
 11292                           
 11293                           ;main.c: 180: _delay((unsigned long)((2)*(1000000/4000.0)));
 11294  0EE9  30A6               	movlw	166
 11295  0EEA                     u4977:
 11296  0EEA  0B89               	decfsz	9,f
 11297  0EEB  2EEA               	goto	u4977
 11298  0EEC  3200               	nop2
 11299  0EED                     l1063:
 11300  0EED  0008               	return
 11301  0EEE                     __end_of_LCDinit:
 11302                           
 11303                           	psect	text24
 11304  063C                     __ptext24:	
 11305 ;; *************** function _LCDsend2x4 *****************
 11306 ;; Defined at:
 11307 ;;		line 137 in file "main.c"
 11308 ;; Parameters:    Size  Location     Type
 11309 ;;  c               1    wreg     unsigned char 
 11310 ;;  mode            1    2[BANK1 ] unsigned char 
 11311 ;; Auto vars:     Size  Location     Type
 11312 ;;  c               1    5[BANK1 ] unsigned char 
 11313 ;;  lc              1    7[BANK1 ] unsigned char 
 11314 ;;  hc              1    6[BANK1 ] unsigned char 
 11315 ;; Return value:  Size  Location     Type
 11316 ;;                  1    wreg      void 
 11317 ;; Registers used:
 11318 ;;		wreg, status,2, status,0, pclath, cstack
 11319 ;; Tracked objects:
 11320 ;;		On entry : 0/0
 11321 ;;		On exit  : 0/0
 11322 ;;		Unchanged: 0/0
 11323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11324 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11325 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11326 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11327 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 11328 ;;Total ram usage:        6 bytes
 11329 ;; Hardware stack levels used:    1
 11330 ;; Hardware stack levels required when called:    8
 11331 ;; This function calls:
 11332 ;;		_WriteI2C
 11333 ;; This function is called by:
 11334 ;;		_LCDinit
 11335 ;; This function uses a non-reentrant model
 11336 ;;
 11337                           
 11338                           
 11339                           ;psect for function _LCDsend2x4
 11340  063C                     _LCDsend2x4:
 11341                           
 11342                           ;incstack = 0
 11343                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 11344                           ;LCDsend2x4@c stored from wreg
 11345  063C  0021               	movlb	1	; select bank1
 11346  063D  00A5               	movwf	LCDsend2x4@c^(0+128)
 11347  063E                     l4277:
 11348                           
 11349                           ;main.c: 139: unsigned char hc;;main.c: 140: unsigned char lc;;main.c: 142: hc = c & 0xf
      +                          0;
 11350  063E  0825               	movf	LCDsend2x4@c^(0+128),w
 11351  063F  39F0               	andlw	240
 11352  0640  00A3               	movwf	??_LCDsend2x4^(0+128)
 11353  0641  0823               	movf	??_LCDsend2x4^(0+128),w
 11354  0642  00A6               	movwf	LCDsend2x4@hc^(0+128)
 11355  0643                     l4279:
 11356                           
 11357                           ;main.c: 143: lc = (c << 4) & 0xf0;
 11358  0643  0825               	movf	LCDsend2x4@c^(0+128),w
 11359  0644  00A3               	movwf	??_LCDsend2x4^(0+128)
 11360  0645  3003               	movlw	3
 11361  0646                     u3545:
 11362  0646  35A3               	lslf	??_LCDsend2x4^(0+128),f
 11363  0647  3EFF               	addlw	-1
 11364  0648  1D03               	skipz
 11365  0649  2E46               	goto	u3545
 11366  064A  3523               	lslf	??_LCDsend2x4^(0+128),w
 11367  064B  39F0               	andlw	240
 11368  064C  00A4               	movwf	(??_LCDsend2x4+1)^(0+128)
 11369  064D  0824               	movf	(??_LCDsend2x4+1)^(0+128),w
 11370  064E  00A7               	movwf	LCDsend2x4@lc^(0+128)
 11371  064F                     l4281:	
 11372                           ;main.c: 145: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11373                           
 11374  064F  0023               	movlb	3	; select bank3
 11375  0650  0C0F               	rrf	15,w	;volatile
 11376  0651  0C89               	rrf	9,f
 11377  0652  3901               	andlw	1
 11378  0653  0021               	movlb	1	; select bank1
 11379  0654  00A3               	movwf	??_LCDsend2x4^(0+128)
 11380  0655  0023               	movlb	3	; select bank3
 11381  0656  0811               	movf	17,w	;volatile
 11382  0657  391F               	andlw	31
 11383  0658  0021               	movlb	1	; select bank1
 11384  0659  0423               	iorwf	??_LCDsend2x4^(0+128),w
 11385  065A  1D03               	btfss	3,2
 11386  065B  2E5D               	goto	u3551
 11387  065C  2E5E               	goto	u3550
 11388  065D                     u3551:
 11389  065D  2E4F               	goto	l4281
 11390  065E                     u3550:
 11391  065E                     l1029:
 11392                           
 11393                           ;main.c: 146: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 11394  065E  0023               	movlb	3	; select bank3
 11395  065F  1411               	bsf	17,0	;volatile
 11396  0660                     l1030:
 11397  0660  1811               	btfsc	17,0	;volatile
 11398  0661  2E63               	goto	u3561
 11399  0662  2E64               	goto	u3560
 11400  0663                     u3561:
 11401  0663  2E60               	goto	l1030
 11402  0664                     u3560:
 11403  0664                     l4283:
 11404  0664  0023               	movlb	3	; select bank3
 11405  0665  0C0F               	rrf	15,w	;volatile
 11406  0666  0C89               	rrf	9,f
 11407  0667  3901               	andlw	1
 11408  0668  0021               	movlb	1	; select bank1
 11409  0669  00A3               	movwf	??_LCDsend2x4^(0+128)
 11410  066A  0023               	movlb	3	; select bank3
 11411  066B  0811               	movf	17,w	;volatile
 11412  066C  391F               	andlw	31
 11413  066D  0021               	movlb	1	; select bank1
 11414  066E  0423               	iorwf	??_LCDsend2x4^(0+128),w
 11415  066F  1D03               	btfss	3,2
 11416  0670  2E72               	goto	u3571
 11417  0671  2E73               	goto	u3570
 11418  0672                     u3571:
 11419  0672  2E64               	goto	l4283
 11420  0673                     u3570:
 11421  0673                     l4285:
 11422                           
 11423                           ;main.c: 147: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11424  0673  304E               	movlw	78
 11425  0674  318E  261E  3186   	fcall	_WriteI2C
 11426  0677                     l4287:
 11427  0677  0023               	movlb	3	; select bank3
 11428  0678  0C0F               	rrf	15,w	;volatile
 11429  0679  0C89               	rrf	9,f
 11430  067A  3901               	andlw	1
 11431  067B  0021               	movlb	1	; select bank1
 11432  067C  00A3               	movwf	??_LCDsend2x4^(0+128)
 11433  067D  0023               	movlb	3	; select bank3
 11434  067E  0811               	movf	17,w	;volatile
 11435  067F  391F               	andlw	31
 11436  0680  0021               	movlb	1	; select bank1
 11437  0681  0423               	iorwf	??_LCDsend2x4^(0+128),w
 11438  0682  1D03               	btfss	3,2
 11439  0683  2E85               	goto	u3581
 11440  0684  2E86               	goto	u3580
 11441  0685                     u3581:
 11442  0685  2E77               	goto	l4287
 11443  0686                     u3580:
 11444  0686                     l4289:
 11445                           
 11446                           ;main.c: 148: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 11447  0686  0826               	movf	LCDsend2x4@hc^(0+128),w
 11448  0687  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 11449  0688  3808               	iorlw	8
 11450  0689  318E  261E  3186   	fcall	_WriteI2C
 11451  068C                     l4291:
 11452  068C  0023               	movlb	3	; select bank3
 11453  068D  0C0F               	rrf	15,w	;volatile
 11454  068E  0C89               	rrf	9,f
 11455  068F  3901               	andlw	1
 11456  0690  0021               	movlb	1	; select bank1
 11457  0691  00A3               	movwf	??_LCDsend2x4^(0+128)
 11458  0692  0023               	movlb	3	; select bank3
 11459  0693  0811               	movf	17,w	;volatile
 11460  0694  391F               	andlw	31
 11461  0695  0021               	movlb	1	; select bank1
 11462  0696  0423               	iorwf	??_LCDsend2x4^(0+128),w
 11463  0697  1D03               	btfss	3,2
 11464  0698  2E9A               	goto	u3591
 11465  0699  2E9B               	goto	u3590
 11466  069A                     u3591:
 11467  069A  2E8C               	goto	l4291
 11468  069B                     u3590:
 11469  069B                     l4293:
 11470                           
 11471                           ;main.c: 149: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 11472  069B  0826               	movf	LCDsend2x4@hc^(0+128),w
 11473  069C  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 11474  069D  380C               	iorlw	12
 11475  069E  318E  261E  3186   	fcall	_WriteI2C
 11476  06A1                     l4295:
 11477  06A1  0023               	movlb	3	; select bank3
 11478  06A2  0C0F               	rrf	15,w	;volatile
 11479  06A3  0C89               	rrf	9,f
 11480  06A4  3901               	andlw	1
 11481  06A5  0021               	movlb	1	; select bank1
 11482  06A6  00A3               	movwf	??_LCDsend2x4^(0+128)
 11483  06A7  0023               	movlb	3	; select bank3
 11484  06A8  0811               	movf	17,w	;volatile
 11485  06A9  391F               	andlw	31
 11486  06AA  0021               	movlb	1	; select bank1
 11487  06AB  0423               	iorwf	??_LCDsend2x4^(0+128),w
 11488  06AC  1D03               	btfss	3,2
 11489  06AD  2EAF               	goto	u3601
 11490  06AE  2EB0               	goto	u3600
 11491  06AF                     u3601:
 11492  06AF  2EA1               	goto	l4295
 11493  06B0                     u3600:
 11494  06B0                     l1044:
 11495  06B0                     l4297:	
 11496                           ;main.c: 150: _delay((unsigned long)((1)*(1000000/4000000.0)));
 11497                           
 11498                           
 11499                           ;main.c: 151: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 11500  06B0  0021               	movlb	1	; select bank1
 11501  06B1  0826               	movf	LCDsend2x4@hc^(0+128),w
 11502  06B2  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 11503  06B3  3808               	iorlw	8
 11504  06B4  318E  261E  3186   	fcall	_WriteI2C
 11505  06B7                     l4299:
 11506  06B7  0023               	movlb	3	; select bank3
 11507  06B8  0C0F               	rrf	15,w	;volatile
 11508  06B9  0C89               	rrf	9,f
 11509  06BA  3901               	andlw	1
 11510  06BB  0021               	movlb	1	; select bank1
 11511  06BC  00A3               	movwf	??_LCDsend2x4^(0+128)
 11512  06BD  0023               	movlb	3	; select bank3
 11513  06BE  0811               	movf	17,w	;volatile
 11514  06BF  391F               	andlw	31
 11515  06C0  0021               	movlb	1	; select bank1
 11516  06C1  0423               	iorwf	??_LCDsend2x4^(0+128),w
 11517  06C2  1D03               	btfss	3,2
 11518  06C3  2EC5               	goto	u3611
 11519  06C4  2EC6               	goto	u3610
 11520  06C5                     u3611:
 11521  06C5  2EB7               	goto	l4299
 11522  06C6                     u3610:
 11523  06C6                     l4301:
 11524                           
 11525                           ;main.c: 152: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 11526  06C6  0827               	movf	LCDsend2x4@lc^(0+128),w
 11527  06C7  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 11528  06C8  3808               	iorlw	8
 11529  06C9  318E  261E  3186   	fcall	_WriteI2C
 11530  06CC                     l4303:
 11531  06CC  0023               	movlb	3	; select bank3
 11532  06CD  0C0F               	rrf	15,w	;volatile
 11533  06CE  0C89               	rrf	9,f
 11534  06CF  3901               	andlw	1
 11535  06D0  0021               	movlb	1	; select bank1
 11536  06D1  00A3               	movwf	??_LCDsend2x4^(0+128)
 11537  06D2  0023               	movlb	3	; select bank3
 11538  06D3  0811               	movf	17,w	;volatile
 11539  06D4  391F               	andlw	31
 11540  06D5  0021               	movlb	1	; select bank1
 11541  06D6  0423               	iorwf	??_LCDsend2x4^(0+128),w
 11542  06D7  1D03               	btfss	3,2
 11543  06D8  2EDA               	goto	u3621
 11544  06D9  2EDB               	goto	u3620
 11545  06DA                     u3621:
 11546  06DA  2ECC               	goto	l4303
 11547  06DB                     u3620:
 11548  06DB                     l4305:
 11549                           
 11550                           ;main.c: 153: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 11551  06DB  0827               	movf	LCDsend2x4@lc^(0+128),w
 11552  06DC  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 11553  06DD  380C               	iorlw	12
 11554  06DE  318E  261E  3186   	fcall	_WriteI2C
 11555  06E1                     l4307:
 11556  06E1  0023               	movlb	3	; select bank3
 11557  06E2  0C0F               	rrf	15,w	;volatile
 11558  06E3  0C89               	rrf	9,f
 11559  06E4  3901               	andlw	1
 11560  06E5  0021               	movlb	1	; select bank1
 11561  06E6  00A3               	movwf	??_LCDsend2x4^(0+128)
 11562  06E7  0023               	movlb	3	; select bank3
 11563  06E8  0811               	movf	17,w	;volatile
 11564  06E9  391F               	andlw	31
 11565  06EA  0021               	movlb	1	; select bank1
 11566  06EB  0423               	iorwf	??_LCDsend2x4^(0+128),w
 11567  06EC  1D03               	btfss	3,2
 11568  06ED  2EEF               	goto	u3631
 11569  06EE  2EF0               	goto	u3630
 11570  06EF                     u3631:
 11571  06EF  2EE1               	goto	l4307
 11572  06F0                     u3630:
 11573  06F0                     l1053:
 11574  06F0                     l4309:	
 11575                           ;main.c: 154: _delay((unsigned long)((1)*(1000000/4000000.0)));
 11576                           
 11577                           
 11578                           ;main.c: 155: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 11579  06F0  0021               	movlb	1	; select bank1
 11580  06F1  0827               	movf	LCDsend2x4@lc^(0+128),w
 11581  06F2  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 11582  06F3  3808               	iorlw	8
 11583  06F4  318E  261E  3186   	fcall	_WriteI2C
 11584  06F7                     l4311:
 11585  06F7  0023               	movlb	3	; select bank3
 11586  06F8  0C0F               	rrf	15,w	;volatile
 11587  06F9  0C89               	rrf	9,f
 11588  06FA  3901               	andlw	1
 11589  06FB  0021               	movlb	1	; select bank1
 11590  06FC  00A3               	movwf	??_LCDsend2x4^(0+128)
 11591  06FD  0023               	movlb	3	; select bank3
 11592  06FE  0811               	movf	17,w	;volatile
 11593  06FF  391F               	andlw	31
 11594  0700  0021               	movlb	1	; select bank1
 11595  0701  0423               	iorwf	??_LCDsend2x4^(0+128),w
 11596  0702  1D03               	btfss	3,2
 11597  0703  2F05               	goto	u3641
 11598  0704  2F06               	goto	u3640
 11599  0705                     u3641:
 11600  0705  2EF7               	goto	l4311
 11601  0706                     u3640:
 11602  0706                     l1056:
 11603                           
 11604                           ;main.c: 156: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11605  0706  0023               	movlb	3	; select bank3
 11606  0707  1511               	bsf	17,2	;volatile
 11607  0708                     l1057:
 11608  0708  1911               	btfsc	17,2	;volatile
 11609  0709  2F0B               	goto	u3651
 11610  070A  2F0C               	goto	u3650
 11611  070B                     u3651:
 11612  070B  2F08               	goto	l1057
 11613  070C                     u3650:
 11614  070C                     l4313:
 11615                           
 11616                           ;main.c: 157: _delay((unsigned long)((50)*(1000000/4000000.0)));
 11617  070C  3004               	movlw	4
 11618  070D                     u4987:
 11619  070D  0B89               	decfsz	9,f
 11620  070E  2F0D               	goto	u4987
 11621  070F                     l1060:
 11622  070F  0008               	return
 11623  0710                     __end_of_LCDsend2x4:
 11624                           
 11625                           	psect	text25
 11626  0D74                     __ptext25:	
 11627 ;; *************** function _LCDsend *****************
 11628 ;; Defined at:
 11629 ;;		line 98 in file "main.c"
 11630 ;; Parameters:    Size  Location     Type
 11631 ;;  c               1    wreg     unsigned char 
 11632 ;; Auto vars:     Size  Location     Type
 11633 ;;  c               1    3[BANK1 ] unsigned char 
 11634 ;; Return value:  Size  Location     Type
 11635 ;;                  1    wreg      void 
 11636 ;; Registers used:
 11637 ;;		wreg, status,2, status,0, pclath, cstack
 11638 ;; Tracked objects:
 11639 ;;		On entry : 0/0
 11640 ;;		On exit  : 0/0
 11641 ;;		Unchanged: 0/0
 11642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11644 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11645 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11646 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11647 ;;Total ram usage:        2 bytes
 11648 ;; Hardware stack levels used:    1
 11649 ;; Hardware stack levels required when called:    8
 11650 ;; This function calls:
 11651 ;;		_WriteI2C
 11652 ;; This function is called by:
 11653 ;;		_LCDinit
 11654 ;; This function uses a non-reentrant model
 11655 ;;
 11656                           
 11657                           
 11658                           ;psect for function _LCDsend
 11659  0D74                     _LCDsend:
 11660                           
 11661                           ;incstack = 0
 11662                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 11663                           ;LCDsend@c stored from wreg
 11664  0D74  0021               	movlb	1	; select bank1
 11665  0D75  00A3               	movwf	LCDsend@c^(0+128)
 11666  0D76                     l4263:
 11667  0D76                     l4265:	
 11668                           ;main.c: 100: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11669                           
 11670  0D76  0023               	movlb	3	; select bank3
 11671  0D77  0C0F               	rrf	15,w	;volatile
 11672  0D78  0C89               	rrf	9,f
 11673  0D79  3901               	andlw	1
 11674  0D7A  0021               	movlb	1	; select bank1
 11675  0D7B  00A2               	movwf	??_LCDsend^(0+128)
 11676  0D7C  0023               	movlb	3	; select bank3
 11677  0D7D  0811               	movf	17,w	;volatile
 11678  0D7E  391F               	andlw	31
 11679  0D7F  0021               	movlb	1	; select bank1
 11680  0D80  0422               	iorwf	??_LCDsend^(0+128),w
 11681  0D81  1D03               	btfss	3,2
 11682  0D82  2D84               	goto	u3481
 11683  0D83  2D85               	goto	u3480
 11684  0D84                     u3481:
 11685  0D84  2D76               	goto	l4265
 11686  0D85                     u3480:
 11687  0D85                     l927:
 11688                           
 11689                           ;main.c: 101: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 11690  0D85  0023               	movlb	3	; select bank3
 11691  0D86  1411               	bsf	17,0	;volatile
 11692  0D87                     l928:
 11693  0D87  1811               	btfsc	17,0	;volatile
 11694  0D88  2D8A               	goto	u3491
 11695  0D89  2D8B               	goto	u3490
 11696  0D8A                     u3491:
 11697  0D8A  2D87               	goto	l928
 11698  0D8B                     u3490:
 11699  0D8B                     l4267:
 11700  0D8B  0023               	movlb	3	; select bank3
 11701  0D8C  0C0F               	rrf	15,w	;volatile
 11702  0D8D  0C89               	rrf	9,f
 11703  0D8E  3901               	andlw	1
 11704  0D8F  0021               	movlb	1	; select bank1
 11705  0D90  00A2               	movwf	??_LCDsend^(0+128)
 11706  0D91  0023               	movlb	3	; select bank3
 11707  0D92  0811               	movf	17,w	;volatile
 11708  0D93  391F               	andlw	31
 11709  0D94  0021               	movlb	1	; select bank1
 11710  0D95  0422               	iorwf	??_LCDsend^(0+128),w
 11711  0D96  1D03               	btfss	3,2
 11712  0D97  2D99               	goto	u3501
 11713  0D98  2D9A               	goto	u3500
 11714  0D99                     u3501:
 11715  0D99  2D8B               	goto	l4267
 11716  0D9A                     u3500:
 11717  0D9A                     l4269:
 11718                           
 11719                           ;main.c: 102: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11720  0D9A  304E               	movlw	78
 11721  0D9B  318E  261E  318D   	fcall	_WriteI2C
 11722  0D9E                     l4271:
 11723  0D9E  0023               	movlb	3	; select bank3
 11724  0D9F  0C0F               	rrf	15,w	;volatile
 11725  0DA0  0C89               	rrf	9,f
 11726  0DA1  3901               	andlw	1
 11727  0DA2  0021               	movlb	1	; select bank1
 11728  0DA3  00A2               	movwf	??_LCDsend^(0+128)
 11729  0DA4  0023               	movlb	3	; select bank3
 11730  0DA5  0811               	movf	17,w	;volatile
 11731  0DA6  391F               	andlw	31
 11732  0DA7  0021               	movlb	1	; select bank1
 11733  0DA8  0422               	iorwf	??_LCDsend^(0+128),w
 11734  0DA9  1D03               	btfss	3,2
 11735  0DAA  2DAC               	goto	u3511
 11736  0DAB  2DAD               	goto	u3510
 11737  0DAC                     u3511:
 11738  0DAC  2D9E               	goto	l4271
 11739  0DAD                     u3510:
 11740  0DAD                     l4273:
 11741                           
 11742                           ;main.c: 103: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11743  0DAD  0823               	movf	LCDsend@c^(0+128),w
 11744  0DAE  318E  261E  318D   	fcall	_WriteI2C
 11745  0DB1                     l4275:
 11746  0DB1  0023               	movlb	3	; select bank3
 11747  0DB2  0C0F               	rrf	15,w	;volatile
 11748  0DB3  0C89               	rrf	9,f
 11749  0DB4  3901               	andlw	1
 11750  0DB5  0021               	movlb	1	; select bank1
 11751  0DB6  00A2               	movwf	??_LCDsend^(0+128)
 11752  0DB7  0023               	movlb	3	; select bank3
 11753  0DB8  0811               	movf	17,w	;volatile
 11754  0DB9  391F               	andlw	31
 11755  0DBA  0021               	movlb	1	; select bank1
 11756  0DBB  0422               	iorwf	??_LCDsend^(0+128),w
 11757  0DBC  1D03               	btfss	3,2
 11758  0DBD  2DBF               	goto	u3521
 11759  0DBE  2DC0               	goto	u3520
 11760  0DBF                     u3521:
 11761  0DBF  2DB1               	goto	l4275
 11762  0DC0                     u3520:
 11763  0DC0                     l939:
 11764                           
 11765                           ;main.c: 104: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11766  0DC0  0023               	movlb	3	; select bank3
 11767  0DC1  1511               	bsf	17,2	;volatile
 11768  0DC2                     l940:
 11769  0DC2  1911               	btfsc	17,2	;volatile
 11770  0DC3  2DC5               	goto	u3531
 11771  0DC4  2DC6               	goto	u3530
 11772  0DC5                     u3531:
 11773  0DC5  2DC2               	goto	l940
 11774  0DC6                     u3530:
 11775  0DC6                     l943:
 11776  0DC6  0008               	return
 11777  0DC7                     __end_of_LCDsend:
 11778                           
 11779                           	psect	text26
 11780  0E1E                     __ptext26:	
 11781 ;; *************** function _WriteI2C *****************
 11782 ;; Defined at:
 11783 ;;		line 47 in file "I2C/i2c.c"
 11784 ;; Parameters:    Size  Location     Type
 11785 ;;  data_out        1    wreg     unsigned char 
 11786 ;; Auto vars:     Size  Location     Type
 11787 ;;  data_out        1    1[BANK1 ] unsigned char 
 11788 ;; Return value:  Size  Location     Type
 11789 ;;                  1    wreg      char 
 11790 ;; Registers used:
 11791 ;;		wreg, status,2, status,0
 11792 ;; Tracked objects:
 11793 ;;		On entry : 0/0
 11794 ;;		On exit  : 0/0
 11795 ;;		Unchanged: 0/0
 11796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11798 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11799 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11800 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11801 ;;Total ram usage:        2 bytes
 11802 ;; Hardware stack levels used:    1
 11803 ;; Hardware stack levels required when called:    7
 11804 ;; This function calls:
 11805 ;;		Nothing
 11806 ;; This function is called by:
 11807 ;;		_LCDsend
 11808 ;;		_LCDsend2x4
 11809 ;;		_LCDrecv
 11810 ;; This function uses a non-reentrant model
 11811 ;;
 11812                           
 11813                           
 11814                           ;psect for function _WriteI2C
 11815  0E1E                     _WriteI2C:
 11816                           
 11817                           ;incstack = 0
 11818                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 11819                           ;WriteI2C@data_out stored from wreg
 11820  0E1E  0021               	movlb	1	; select bank1
 11821  0E1F  00A1               	movwf	WriteI2C@data_out^(0+128)
 11822  0E20                     l3811:
 11823                           
 11824                           ;i2c.c: 49: SSP1BUF = data_out;
 11825  0E20  0821               	movf	WriteI2C@data_out^(0+128),w
 11826  0E21  0023               	movlb	3	; select bank3
 11827  0E22  008C               	movwf	12	;volatile
 11828  0E23                     l3813:
 11829                           
 11830                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 11831  0E23  1F90               	btfss	16,7	;volatile
 11832  0E24  2E26               	goto	u2871
 11833  0E25  2E27               	goto	u2870
 11834  0E26                     u2871:
 11835  0E26  2E28               	goto	l3819
 11836  0E27                     u2870:
 11837  0E27  2E77               	goto	l30
 11838  0E28                     l3819:
 11839                           
 11840                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 11841  0E28  300F               	movlw	15
 11842  0E29  0510               	andwf	16,w	;volatile
 11843  0E2A  0021               	movlb	1	; select bank1
 11844  0E2B  00A0               	movwf	??_WriteI2C^(0+128)
 11845  0E2C  3008               	movlw	8
 11846  0E2D  0620               	xorwf	??_WriteI2C^(0+128),w
 11847  0E2E  1903               	btfsc	3,2
 11848  0E2F  2E31               	goto	u2881
 11849  0E30  2E32               	goto	u2880
 11850  0E31                     u2881:
 11851  0E31  2E4B               	goto	l3831
 11852  0E32                     u2880:
 11853  0E32                     l3821:
 11854  0E32  300F               	movlw	15
 11855  0E33  0023               	movlb	3	; select bank3
 11856  0E34  0510               	andwf	16,w	;volatile
 11857  0E35  0021               	movlb	1	; select bank1
 11858  0E36  00A0               	movwf	??_WriteI2C^(0+128)
 11859  0E37  300B               	movlw	11
 11860  0E38  0620               	xorwf	??_WriteI2C^(0+128),w
 11861  0E39  1903               	btfsc	3,2
 11862  0E3A  2E3C               	goto	u2891
 11863  0E3B  2E3D               	goto	u2890
 11864  0E3C                     u2891:
 11865  0E3C  2E4B               	goto	l3831
 11866  0E3D                     u2890:
 11867  0E3D                     l3823:
 11868                           
 11869                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 11870  0E3D  0023               	movlb	3	; select bank3
 11871  0E3E  1610               	bsf	16,4	;volatile
 11872  0E3F                     l33:	
 11873                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 11874                           
 11875  0E3F  002E               	movlb	14	; select bank14
 11876  0E40  1C0F               	btfss	15,0	;volatile
 11877  0E41  2E43               	goto	u2901
 11878  0E42  2E44               	goto	u2900
 11879  0E43                     u2901:
 11880  0E43  2E3F               	goto	l33
 11881  0E44                     u2900:
 11882  0E44                     l35:
 11883                           
 11884                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 11885  0E44  0023               	movlb	3	; select bank3
 11886  0E45  190F               	btfsc	15,2	;volatile
 11887  0E46  2E48               	goto	u2911
 11888  0E47  2E49               	goto	u2910
 11889  0E48                     u2911:
 11890  0E48  2E77               	goto	l30
 11891  0E49                     u2910:
 11892  0E49                     l3825:
 11893  0E49  080F               	movf	15,w	;volatile
 11894  0E4A  2E77               	goto	l30
 11895  0E4B                     l3831:
 11896                           
 11897                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 11898  0E4B  300F               	movlw	15
 11899  0E4C  0023               	movlb	3	; select bank3
 11900  0E4D  0510               	andwf	16,w	;volatile
 11901  0E4E  0021               	movlb	1	; select bank1
 11902  0E4F  00A0               	movwf	??_WriteI2C^(0+128)
 11903  0E50  3008               	movlw	8
 11904  0E51  0620               	xorwf	??_WriteI2C^(0+128),w
 11905  0E52  1903               	btfsc	3,2
 11906  0E53  2E55               	goto	u2921
 11907  0E54  2E56               	goto	u2920
 11908  0E55                     u2921:
 11909  0E55  2E61               	goto	l42
 11910  0E56                     u2920:
 11911  0E56                     l3833:
 11912  0E56  300F               	movlw	15
 11913  0E57  0023               	movlb	3	; select bank3
 11914  0E58  0510               	andwf	16,w	;volatile
 11915  0E59  0021               	movlb	1	; select bank1
 11916  0E5A  00A0               	movwf	??_WriteI2C^(0+128)
 11917  0E5B  300B               	movlw	11
 11918  0E5C  0620               	xorwf	??_WriteI2C^(0+128),w
 11919  0E5D  1D03               	btfss	3,2
 11920  0E5E  2E60               	goto	u2931
 11921  0E5F  2E61               	goto	u2930
 11922  0E60                     u2931:
 11923  0E60  2E77               	goto	l30
 11924  0E61                     u2930:
 11925  0E61                     l42:
 11926  0E61  0023               	movlb	3	; select bank3
 11927  0E62  180F               	btfsc	15,0	;volatile
 11928  0E63  2E65               	goto	u2941
 11929  0E64  2E66               	goto	u2940
 11930  0E65                     u2941:
 11931  0E65  2E61               	goto	l42
 11932  0E66                     u2940:
 11933  0E66                     l3835:
 11934  0E66  0023               	movlb	3	; select bank3
 11935  0E67  0C0F               	rrf	15,w	;volatile
 11936  0E68  0C89               	rrf	9,f
 11937  0E69  3901               	andlw	1
 11938  0E6A  0021               	movlb	1	; select bank1
 11939  0E6B  00A0               	movwf	??_WriteI2C^(0+128)
 11940  0E6C  0023               	movlb	3	; select bank3
 11941  0E6D  0811               	movf	17,w	;volatile
 11942  0E6E  391F               	andlw	31
 11943  0E6F  0021               	movlb	1	; select bank1
 11944  0E70  0420               	iorwf	??_WriteI2C^(0+128),w
 11945  0E71  1D03               	btfss	3,2
 11946  0E72  2E74               	goto	u2951
 11947  0E73  2E75               	goto	u2950
 11948  0E74                     u2951:
 11949  0E74  2E66               	goto	l3835
 11950  0E75                     u2950:
 11951  0E75                     l47:
 11952                           
 11953                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 11954  0E75  0023               	movlb	3	; select bank3
 11955  0E76  0811               	movf	17,w	;volatile
 11956  0E77                     l30:
 11957  0E77  0008               	return
 11958  0E78                     __end_of_WriteI2C:
 11959                           
 11960                           	psect	intentry
 11961  0004                     __pintentry:	
 11962 ;; *************** function _INTERRUPT_InterruptManager *****************
 11963 ;; Defined at:
 11964 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11965 ;; Parameters:    Size  Location     Type
 11966 ;;		None
 11967 ;; Auto vars:     Size  Location     Type
 11968 ;;		None
 11969 ;; Return value:  Size  Location     Type
 11970 ;;                  1    wreg      void 
 11971 ;; Registers used:
 11972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11973 ;; Tracked objects:
 11974 ;;		On entry : 0/0
 11975 ;;		On exit  : 0/0
 11976 ;;		Unchanged: 0/0
 11977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11982 ;;Total ram usage:        0 bytes
 11983 ;; Hardware stack levels used:    1
 11984 ;; Hardware stack levels required when called:    6
 11985 ;; This function calls:
 11986 ;;		_TMR1_ISR
 11987 ;;		_TMR3_ISR
 11988 ;;		_TMR5_ISR
 11989 ;; This function is called by:
 11990 ;;		Interrupt level 1
 11991 ;; This function uses a non-reentrant model
 11992 ;;
 11993                           
 11994  0004                     _INTERRUPT_InterruptManager:
 11995                           
 11996                           ;incstack = 0
 11997  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11998                           
 11999                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12000  0005  3180               	pagesel	$
 12001  0006                     i1l4769:
 12002                           
 12003                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
 12004  0006  1F0B               	btfss	11,6	;volatile
 12005  0007  2809               	goto	u463_21
 12006  0008  280A               	goto	u463_20
 12007  0009                     u463_21:
 12008  0009  283E               	goto	i1l356
 12009  000A                     u463_20:
 12010  000A                     i1l4771:
 12011                           
 12012                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE4bits.TMR5IE == 1 && PIR4bits
      +                          .TMR5IF == 1)
 12013  000A  002E               	movlb	14	; select bank14
 12014  000B  1E1A               	btfss	26,4	;volatile
 12015  000C  280E               	goto	u464_21
 12016  000D  280F               	goto	u464_20
 12017  000E                     u464_21:
 12018  000E  2817               	goto	i1l345
 12019  000F                     u464_20:
 12020  000F                     i1l4773:
 12021  000F  1E10               	btfss	16,4	;volatile
 12022  0010  2812               	goto	u465_21
 12023  0011  2813               	goto	u465_20
 12024  0012                     u465_21:
 12025  0012  2817               	goto	i1l345
 12026  0013                     u465_20:
 12027  0013                     i1l4775:
 12028                           
 12029                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: TMR5_ISR();
 12030  0013  318A  22CB  3180   	fcall	_TMR5_ISR
 12031                           
 12032                           ;interrupt_manager.c: 60: }
 12033  0016  283E               	goto	i1l356
 12034  0017                     i1l345:
 12035                           
 12036                           ;interrupt_manager.c: 61: else if(PIE4bits.TMR3IE == 1 && PIR4bits.TMR3IF == 1)
 12037  0017  1D1A               	btfss	26,2	;volatile
 12038  0018  281A               	goto	u466_21
 12039  0019  281B               	goto	u466_20
 12040  001A                     u466_21:
 12041  001A  2823               	goto	i1l347
 12042  001B                     u466_20:
 12043  001B                     i1l4777:
 12044  001B  1D10               	btfss	16,2	;volatile
 12045  001C  281E               	goto	u467_21
 12046  001D  281F               	goto	u467_20
 12047  001E                     u467_21:
 12048  001E  2823               	goto	i1l347
 12049  001F                     u467_20:
 12050  001F                     i1l4779:
 12051                           
 12052                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR3_ISR();
 12053  001F  318A  22B4  3180   	fcall	_TMR3_ISR
 12054                           
 12055                           ;interrupt_manager.c: 64: }
 12056  0022  283E               	goto	i1l356
 12057  0023                     i1l347:
 12058                           
 12059                           ;interrupt_manager.c: 65: else if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 12060  0023  1C1A               	btfss	26,0	;volatile
 12061  0024  2826               	goto	u468_21
 12062  0025  2827               	goto	u468_20
 12063  0026                     u468_21:
 12064  0026  282F               	goto	i1l349
 12065  0027                     u468_20:
 12066  0027                     i1l4781:
 12067  0027  1C10               	btfss	16,0	;volatile
 12068  0028  282A               	goto	u469_21
 12069  0029  282B               	goto	u469_20
 12070  002A                     u469_21:
 12071  002A  282F               	goto	i1l349
 12072  002B                     u469_20:
 12073  002B                     i1l4783:
 12074                           
 12075                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: TMR1_ISR();
 12076  002B  318A  229D  3180   	fcall	_TMR1_ISR
 12077                           
 12078                           ;interrupt_manager.c: 68: }
 12079  002E  283E               	goto	i1l356
 12080  002F                     i1l349:
 12081                           
 12082                           ;interrupt_manager.c: 69: else if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 12083  002F  1C99               	btfss	25,1	;volatile
 12084  0030  2832               	goto	u470_21
 12085  0031  2833               	goto	u470_20
 12086  0032                     u470_21:
 12087  0032  2838               	goto	i1l351
 12088  0033                     u470_20:
 12089  0033                     i1l4785:
 12090                           
 12091                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: i2c1_driver_busCollisionISR();
 12092  0033  1C8F               	btfss	15,1	;volatile
 12093  0034  2836               	goto	u471_21
 12094  0035  2837               	goto	u471_20
 12095  0036                     u471_21:
 12096  0036  2838               	goto	i1l351
 12097  0037                     u471_20:
 12098  0037  283E               	goto	i1l356
 12099  0038                     i1l351:
 12100                           
 12101                           ;interrupt_manager.c: 73: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 12102  0038  1C19               	btfss	25,0	;volatile
 12103  0039  283B               	goto	u472_21
 12104  003A  283C               	goto	u472_20
 12105  003B                     u472_21:
 12106  003B  283E               	goto	i1l350
 12107  003C                     u472_20:
 12108  003C                     i1l4789:
 12109                           
 12110                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: i2c1_driver_i2cISR();
 12111  003C  080F               	movf	15,w	;volatile
 12112  003D  283E               	goto	i1l356
 12113  003E                     i1l350:
 12114  003E                     i1l356:
 12115  003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 12116  003F  0009               	retfie
 12117  0040                     __end_of_INTERRUPT_InterruptManager:
 12118                           
 12119                           	psect	text28
 12120  0ACB                     __ptext28:	
 12121 ;; *************** function _TMR5_ISR *****************
 12122 ;; Defined at:
 12123 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 12124 ;; Parameters:    Size  Location     Type
 12125 ;;		None
 12126 ;; Auto vars:     Size  Location     Type
 12127 ;;		None
 12128 ;; Return value:  Size  Location     Type
 12129 ;;                  1    wreg      void 
 12130 ;; Registers used:
 12131 ;;		wreg, status,2, status,0, pclath, cstack
 12132 ;; Tracked objects:
 12133 ;;		On entry : 0/0
 12134 ;;		On exit  : 0/0
 12135 ;;		Unchanged: 0/0
 12136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12141 ;;Total ram usage:        0 bytes
 12142 ;; Hardware stack levels used:    1
 12143 ;; Hardware stack levels required when called:    3
 12144 ;; This function calls:
 12145 ;;		Absolute function
 12146 ;;		_TMR5_DefaultInterruptHandler
 12147 ;;		_TMR5_WriteTimer
 12148 ;;		_monitoring_ISR
 12149 ;; This function is called by:
 12150 ;;		_INTERRUPT_InterruptManager
 12151 ;; This function uses a non-reentrant model
 12152 ;;
 12153                           
 12154                           
 12155                           ;psect for function _TMR5_ISR
 12156  0ACB                     _TMR5_ISR:
 12157  0ACB                     i1l4543:	
 12158                           ;incstack = 0
 12159                           ; Regs used in _TMR5_ISR: [wreg+status,2+status,0+pclath+cstack]
 12160                           
 12161                           
 12162                           ;tmr5.c: 169: PIR4bits.TMR5IF = 0;
 12163  0ACB  002E               	movlb	14	; select bank14
 12164  0ACC  1210               	bcf	16,4	;volatile
 12165  0ACD                     i1l4545:
 12166                           
 12167                           ;tmr5.c: 170: TMR5_WriteTimer(timer5ReloadVal);
 12168  0ACD  0020               	movlb	0	; select bank0
 12169  0ACE  086C               	movf	_timer5ReloadVal+1,w	;volatile
 12170  0ACF  00F1               	movwf	TMR5_WriteTimer@timerVal+1
 12171  0AD0  086B               	movf	_timer5ReloadVal,w	;volatile
 12172  0AD1  00F0               	movwf	TMR5_WriteTimer@timerVal
 12173  0AD2  318A  223E  318A   	fcall	_TMR5_WriteTimer
 12174  0AD5                     i1l4547:
 12175                           
 12176                           ;tmr5.c: 172: if(TMR5_InterruptHandler)
 12177  0AD5  0021               	movlb	1	; select bank1
 12178  0AD6  082A               	movf	_TMR5_InterruptHandler^(0+128),w
 12179  0AD7  042B               	iorwf	(_TMR5_InterruptHandler+1)^(0+128),w
 12180  0AD8  1903               	btfsc	3,2
 12181  0AD9  2ADB               	goto	u409_21
 12182  0ADA  2ADC               	goto	u409_20
 12183  0ADB                     u409_21:
 12184  0ADB  2AE1               	goto	i1l702
 12185  0ADC                     u409_20:
 12186  0ADC                     i1l4549:
 12187                           
 12188                           ;tmr5.c: 173: {;tmr5.c: 174: TMR5_InterruptHandler();
 12189  0ADC  082B               	movf	(_TMR5_InterruptHandler+1)^(0+128),w
 12190  0ADD  008A               	movwf	10
 12191  0ADE  082A               	movf	_TMR5_InterruptHandler^(0+128),w
 12192  0ADF  000A               	callw
 12193  0AE0  318A               	pagesel	$
 12194  0AE1                     i1l702:
 12195  0AE1  0008               	return
 12196  0AE2                     __end_of_TMR5_ISR:
 12197                           
 12198                           	psect	text29
 12199  0003                     __ptext29:	
 12200 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 12201 ;; Defined at:
 12202 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 12203 ;; Parameters:    Size  Location     Type
 12204 ;;		None
 12205 ;; Auto vars:     Size  Location     Type
 12206 ;;		None
 12207 ;; Return value:  Size  Location     Type
 12208 ;;                  1    wreg      void 
 12209 ;; Registers used:
 12210 ;;		None
 12211 ;; Tracked objects:
 12212 ;;		On entry : 0/0
 12213 ;;		On exit  : 0/0
 12214 ;;		Unchanged: 0/0
 12215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12220 ;;Total ram usage:        0 bytes
 12221 ;; Hardware stack levels used:    1
 12222 ;; This function calls:
 12223 ;;		Nothing
 12224 ;; This function is called by:
 12225 ;;		_TMR5_Initialize
 12226 ;;		_TMR5_ISR
 12227 ;; This function uses a non-reentrant model
 12228 ;;
 12229                           
 12230                           
 12231                           ;psect for function _TMR5_DefaultInterruptHandler
 12232  0003                     _TMR5_DefaultInterruptHandler:
 12233  0003                     i1l708:	
 12234                           ;incstack = 0
 12235                           ; Regs used in _TMR5_DefaultInterruptHandler: []
 12236                           
 12237  0003  0008               	return
 12238  0004                     __end_of_TMR5_DefaultInterruptHandler:
 12239                           
 12240                           	psect	text30
 12241  03CD                     __ptext30:	
 12242 ;; *************** function _monitoring_ISR *****************
 12243 ;; Defined at:
 12244 ;;		line 437 in file "main.c"
 12245 ;; Parameters:    Size  Location     Type
 12246 ;;		None
 12247 ;; Auto vars:     Size  Location     Type
 12248 ;;  a               2    0        int 
 12249 ;;  test3           1    4[BANK0 ] unsigned char 
 12250 ;;  test2           1    3[BANK0 ] unsigned char 
 12251 ;;  test1           1    2[BANK0 ] unsigned char 
 12252 ;; Return value:  Size  Location     Type
 12253 ;;                  1    wreg      void 
 12254 ;; Registers used:
 12255 ;;		wreg, status,2, status,0, pclath, cstack
 12256 ;; Tracked objects:
 12257 ;;		On entry : 0/0
 12258 ;;		On exit  : 0/0
 12259 ;;		Unchanged: 0/0
 12260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12262 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12263 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12264 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12265 ;;Total ram usage:        8 bytes
 12266 ;; Hardware stack levels used:    1
 12267 ;; Hardware stack levels required when called:    2
 12268 ;; This function calls:
 12269 ;;		_ADCC_GetSingleConversion
 12270 ;;		_DATAEE_ReadByte
 12271 ;;		_DATAEE_WriteByte
 12272 ;;		___wmul
 12273 ;;		_tsttc
 12274 ;; This function is called by:
 12275 ;;		_main
 12276 ;;		_TMR5_ISR
 12277 ;; This function uses a non-reentrant model
 12278 ;;
 12279                           
 12280                           
 12281                           ;psect for function _monitoring_ISR
 12282  03CD                     _monitoring_ISR:
 12283  03CD                     i1l4455:	
 12284                           ;incstack = 0
 12285                           ; Regs used in _monitoring_ISR: [wreg+status,2+status,0+pclath+cstack]
 12286                           
 12287                           
 12288                           ;main.c: 438: temp = (uint8_t)tsttc();
 12289  03CD  3185  252F  3183   	fcall	_tsttc
 12290  03D0  00FA               	movwf	??_monitoring_ISR
 12291  03D1  087A               	movf	??_monitoring_ISR,w
 12292  03D2  0020               	movlb	0	; select bank0
 12293  03D3  00DB               	movwf	_temp
 12294                           
 12295                           ;main.c: 440: lumLevel = ADCC_GetSingleConversion(channel_ANA0) >> 13;
 12296  03D4  3000               	movlw	0
 12297  03D5  318A  2261  3183   	fcall	_ADCC_GetSingleConversion
 12298  03D8  0870               	movf	?_ADCC_GetSingleConversion,w
 12299  03D9  00FA               	movwf	??_monitoring_ISR
 12300  03DA  0871               	movf	?_ADCC_GetSingleConversion+1,w
 12301  03DB  00FB               	movwf	??_monitoring_ISR+1
 12302  03DC  300D               	movlw	13
 12303  03DD                     u397_25:
 12304  03DD  36FB               	lsrf	??_monitoring_ISR+1,f
 12305  03DE  0CFA               	rrf	??_monitoring_ISR,f
 12306  03DF  0B89               	decfsz	9,f
 12307  03E0  2BDD               	goto	u397_25
 12308  03E1  087A               	movf	??_monitoring_ISR,w
 12309  03E2  00FC               	movwf	??_monitoring_ISR+2
 12310  03E3  087C               	movf	??_monitoring_ISR+2,w
 12311  03E4  0020               	movlb	0	; select bank0
 12312  03E5  00DA               	movwf	_lumLevel
 12313  03E6                     i1l4457:
 12314                           
 12315                           ;main.c: 442: if(prevTemp != temp || prevLumLevel != lumLevel){
 12316  03E6  085B               	movf	_temp,w
 12317  03E7  00FA               	movwf	??_monitoring_ISR
 12318  03E8  01FB               	clrf	??_monitoring_ISR+1
 12319  03E9  0869               	movf	_prevTemp+1,w
 12320  03EA  067B               	xorwf	??_monitoring_ISR+1,w
 12321  03EB  1D03               	skipz
 12322  03EC  2BEF               	goto	u398_25
 12323  03ED  0868               	movf	_prevTemp,w
 12324  03EE  067A               	xorwf	??_monitoring_ISR,w
 12325  03EF                     u398_25:
 12326  03EF  1D03               	skipz
 12327  03F0  2BF2               	goto	u398_21
 12328  03F1  2BF3               	goto	u398_20
 12329  03F2                     u398_21:
 12330  03F2  2C00               	goto	i1l4461
 12331  03F3                     u398_20:
 12332  03F3                     i1l4459:
 12333  03F3  085A               	movf	_lumLevel,w
 12334  03F4  00FA               	movwf	??_monitoring_ISR
 12335  03F5  01FB               	clrf	??_monitoring_ISR+1
 12336  03F6  0867               	movf	_prevLumLevel+1,w
 12337  03F7  067B               	xorwf	??_monitoring_ISR+1,w
 12338  03F8  1D03               	skipz
 12339  03F9  2BFC               	goto	u399_25
 12340  03FA  0866               	movf	_prevLumLevel,w
 12341  03FB  067A               	xorwf	??_monitoring_ISR,w
 12342  03FC                     u399_25:
 12343  03FC  1903               	skipnz
 12344  03FD  2BFF               	goto	u399_21
 12345  03FE  2C00               	goto	u399_20
 12346  03FF                     u399_21:
 12347  03FF  2CED               	goto	i1l4475
 12348  0400                     u399_20:
 12349  0400                     i1l4461:
 12350                           
 12351                           ;main.c: 444: DATAEE_WriteByte( (regIdx * 0x28) + 0x7000 + (sizeof(uint8_t)*0) , t.h);
 12352  0400  0851               	movf	_regIdx+1,w
 12353  0401  00F1               	movwf	___wmul@multiplier+1
 12354  0402  0850               	movf	_regIdx,w
 12355  0403  00F0               	movwf	___wmul@multiplier
 12356  0404  3028               	movlw	40
 12357  0405  00F2               	movwf	___wmul@multiplicand
 12358  0406  3000               	movlw	0
 12359  0407  00F3               	movwf	___wmul@multiplicand+1
 12360  0408  318B  2366  3183   	fcall	___wmul
 12361  040B  0870               	movf	?___wmul,w
 12362  040C  3E00               	addlw	0
 12363  040D  00F6               	movwf	DATAEE_WriteByte@bAdd
 12364  040E  3070               	movlw	112
 12365  040F  3D71               	addwfc	?___wmul+1,w
 12366  0410  00F7               	movwf	DATAEE_WriteByte@bAdd+1
 12367  0411  0020               	movlb	0	; select bank0
 12368  0412  084D               	movf	_t,w
 12369  0413  00FA               	movwf	??_monitoring_ISR
 12370  0414  087A               	movf	??_monitoring_ISR,w
 12371  0415  00F8               	movwf	DATAEE_WriteByte@bData
 12372  0416  318B  2348  3183   	fcall	_DATAEE_WriteByte
 12373                           
 12374                           ;main.c: 445: DATAEE_WriteByte( (regIdx * 0x28) + 0x7000 + (sizeof(uint8_t)*1) , t.m);
 12375  0419  0020               	movlb	0	; select bank0
 12376  041A  0851               	movf	_regIdx+1,w
 12377  041B  00F1               	movwf	___wmul@multiplier+1
 12378  041C  0850               	movf	_regIdx,w
 12379  041D  00F0               	movwf	___wmul@multiplier
 12380  041E  3028               	movlw	40
 12381  041F  00F2               	movwf	___wmul@multiplicand
 12382  0420  3000               	movlw	0
 12383  0421  00F3               	movwf	___wmul@multiplicand+1
 12384  0422  318B  2366  3183   	fcall	___wmul
 12385  0425  0870               	movf	?___wmul,w
 12386  0426  3E01               	addlw	1
 12387  0427  00F6               	movwf	DATAEE_WriteByte@bAdd
 12388  0428  3070               	movlw	112
 12389  0429  3D71               	addwfc	?___wmul+1,w
 12390  042A  00F7               	movwf	DATAEE_WriteByte@bAdd+1
 12391  042B  0020               	movlb	0	; select bank0
 12392  042C  084E               	movf	_t+1,w
 12393  042D  00FA               	movwf	??_monitoring_ISR
 12394  042E  087A               	movf	??_monitoring_ISR,w
 12395  042F  00F8               	movwf	DATAEE_WriteByte@bData
 12396  0430  318B  2348  3183   	fcall	_DATAEE_WriteByte
 12397                           
 12398                           ;main.c: 446: DATAEE_WriteByte( (regIdx * 0x28) + 0x7000 + (sizeof(uint8_t)*2) , t.s);
 12399  0433  0020               	movlb	0	; select bank0
 12400  0434  0851               	movf	_regIdx+1,w
 12401  0435  00F1               	movwf	___wmul@multiplier+1
 12402  0436  0850               	movf	_regIdx,w
 12403  0437  00F0               	movwf	___wmul@multiplier
 12404  0438  3028               	movlw	40
 12405  0439  00F2               	movwf	___wmul@multiplicand
 12406  043A  3000               	movlw	0
 12407  043B  00F3               	movwf	___wmul@multiplicand+1
 12408  043C  318B  2366  3183   	fcall	___wmul
 12409  043F  0870               	movf	?___wmul,w
 12410  0440  3E02               	addlw	2
 12411  0441  00F6               	movwf	DATAEE_WriteByte@bAdd
 12412  0442  3070               	movlw	112
 12413  0443  3D71               	addwfc	?___wmul+1,w
 12414  0444  00F7               	movwf	DATAEE_WriteByte@bAdd+1
 12415  0445  0020               	movlb	0	; select bank0
 12416  0446  084F               	movf	_t+2,w
 12417  0447  00FA               	movwf	??_monitoring_ISR
 12418  0448  087A               	movf	??_monitoring_ISR,w
 12419  0449  00F8               	movwf	DATAEE_WriteByte@bData
 12420  044A  318B  2348  3183   	fcall	_DATAEE_WriteByte
 12421                           
 12422                           ;main.c: 447: DATAEE_WriteByte( (regIdx * 0x28) + 0x7000 + (sizeof(uint8_t)*3) , temp);
 12423  044D  0020               	movlb	0	; select bank0
 12424  044E  0851               	movf	_regIdx+1,w
 12425  044F  00F1               	movwf	___wmul@multiplier+1
 12426  0450  0850               	movf	_regIdx,w
 12427  0451  00F0               	movwf	___wmul@multiplier
 12428  0452  3028               	movlw	40
 12429  0453  00F2               	movwf	___wmul@multiplicand
 12430  0454  3000               	movlw	0
 12431  0455  00F3               	movwf	___wmul@multiplicand+1
 12432  0456  318B  2366  3183   	fcall	___wmul
 12433  0459  0870               	movf	?___wmul,w
 12434  045A  3E03               	addlw	3
 12435  045B  00F6               	movwf	DATAEE_WriteByte@bAdd
 12436  045C  3070               	movlw	112
 12437  045D  3D71               	addwfc	?___wmul+1,w
 12438  045E  00F7               	movwf	DATAEE_WriteByte@bAdd+1
 12439  045F  0020               	movlb	0	; select bank0
 12440  0460  085B               	movf	_temp,w
 12441  0461  00FA               	movwf	??_monitoring_ISR
 12442  0462  087A               	movf	??_monitoring_ISR,w
 12443  0463  00F8               	movwf	DATAEE_WriteByte@bData
 12444  0464  318B  2348  3183   	fcall	_DATAEE_WriteByte
 12445                           
 12446                           ;main.c: 448: DATAEE_WriteByte( (regIdx * 0x28) + 0x7000 + (sizeof(uint8_t)*4) , lumLeve
      +                          l);
 12447  0467  0020               	movlb	0	; select bank0
 12448  0468  0851               	movf	_regIdx+1,w
 12449  0469  00F1               	movwf	___wmul@multiplier+1
 12450  046A  0850               	movf	_regIdx,w
 12451  046B  00F0               	movwf	___wmul@multiplier
 12452  046C  3028               	movlw	40
 12453  046D  00F2               	movwf	___wmul@multiplicand
 12454  046E  3000               	movlw	0
 12455  046F  00F3               	movwf	___wmul@multiplicand+1
 12456  0470  318B  2366  3183   	fcall	___wmul
 12457  0473  0870               	movf	?___wmul,w
 12458  0474  3E04               	addlw	4
 12459  0475  00F6               	movwf	DATAEE_WriteByte@bAdd
 12460  0476  3070               	movlw	112
 12461  0477  3D71               	addwfc	?___wmul+1,w
 12462  0478  00F7               	movwf	DATAEE_WriteByte@bAdd+1
 12463  0479  0020               	movlb	0	; select bank0
 12464  047A  085A               	movf	_lumLevel,w
 12465  047B  00FA               	movwf	??_monitoring_ISR
 12466  047C  087A               	movf	??_monitoring_ISR,w
 12467  047D  00F8               	movwf	DATAEE_WriteByte@bData
 12468  047E  318B  2348  3183   	fcall	_DATAEE_WriteByte
 12469                           
 12470                           ;main.c: 450: uint8_t test1 = DATAEE_ReadByte((regIdx * 0x28) + 0x7000 + (sizeof(uint8_t
      +                          )*2));
 12471  0481  0020               	movlb	0	; select bank0
 12472  0482  0851               	movf	_regIdx+1,w
 12473  0483  00F1               	movwf	___wmul@multiplier+1
 12474  0484  0850               	movf	_regIdx,w
 12475  0485  00F0               	movwf	___wmul@multiplier
 12476  0486  3028               	movlw	40
 12477  0487  00F2               	movwf	___wmul@multiplicand
 12478  0488  3000               	movlw	0
 12479  0489  00F3               	movwf	___wmul@multiplicand+1
 12480  048A  318B  2366  3183   	fcall	___wmul
 12481  048D  0870               	movf	?___wmul,w
 12482  048E  3E02               	addlw	2
 12483  048F  00F6               	movwf	DATAEE_ReadByte@bAdd
 12484  0490  3070               	movlw	112
 12485  0491  3D71               	addwfc	?___wmul+1,w
 12486  0492  00F7               	movwf	DATAEE_ReadByte@bAdd+1
 12487  0493  3189  21DA  3183   	fcall	_DATAEE_ReadByte
 12488  0496  00FA               	movwf	??_monitoring_ISR
 12489  0497  087A               	movf	??_monitoring_ISR,w
 12490  0498  0020               	movlb	0	; select bank0
 12491  0499  00A2               	movwf	monitoring_ISR@test1
 12492                           
 12493                           ;main.c: 451: uint8_t test2 = DATAEE_ReadByte((regIdx * 0x28) + 0x7000 + (sizeof(uint8_t
      +                          )*3));
 12494  049A  0851               	movf	_regIdx+1,w
 12495  049B  00F1               	movwf	___wmul@multiplier+1
 12496  049C  0850               	movf	_regIdx,w
 12497  049D  00F0               	movwf	___wmul@multiplier
 12498  049E  3028               	movlw	40
 12499  049F  00F2               	movwf	___wmul@multiplicand
 12500  04A0  3000               	movlw	0
 12501  04A1  00F3               	movwf	___wmul@multiplicand+1
 12502  04A2  318B  2366  3183   	fcall	___wmul
 12503  04A5  0870               	movf	?___wmul,w
 12504  04A6  3E03               	addlw	3
 12505  04A7  00F6               	movwf	DATAEE_ReadByte@bAdd
 12506  04A8  3070               	movlw	112
 12507  04A9  3D71               	addwfc	?___wmul+1,w
 12508  04AA  00F7               	movwf	DATAEE_ReadByte@bAdd+1
 12509  04AB  3189  21DA  3183   	fcall	_DATAEE_ReadByte
 12510  04AE  00FA               	movwf	??_monitoring_ISR
 12511  04AF  087A               	movf	??_monitoring_ISR,w
 12512  04B0  0020               	movlb	0	; select bank0
 12513  04B1  00A3               	movwf	monitoring_ISR@test2
 12514                           
 12515                           ;main.c: 452: uint8_t test3 = DATAEE_ReadByte((regIdx * 0x28) + 0x7000 + (sizeof(uint8_t
      +                          )*4));
 12516  04B2  0851               	movf	_regIdx+1,w
 12517  04B3  00F1               	movwf	___wmul@multiplier+1
 12518  04B4  0850               	movf	_regIdx,w
 12519  04B5  00F0               	movwf	___wmul@multiplier
 12520  04B6  3028               	movlw	40
 12521  04B7  00F2               	movwf	___wmul@multiplicand
 12522  04B8  3000               	movlw	0
 12523  04B9  00F3               	movwf	___wmul@multiplicand+1
 12524  04BA  318B  2366  3183   	fcall	___wmul
 12525  04BD  0870               	movf	?___wmul,w
 12526  04BE  3E04               	addlw	4
 12527  04BF  00F6               	movwf	DATAEE_ReadByte@bAdd
 12528  04C0  3070               	movlw	112
 12529  04C1  3D71               	addwfc	?___wmul+1,w
 12530  04C2  00F7               	movwf	DATAEE_ReadByte@bAdd+1
 12531  04C3  3189  21DA  3183   	fcall	_DATAEE_ReadByte
 12532  04C6  00FA               	movwf	??_monitoring_ISR
 12533  04C7  087A               	movf	??_monitoring_ISR,w
 12534  04C8  0020               	movlb	0	; select bank0
 12535  04C9  00A4               	movwf	monitoring_ISR@test3
 12536  04CA                     i1l4463:
 12537  04CA                     i1l4465:
 12538                           
 12539                           ;main.c: 456: regIdx++;
 12540  04CA  3001               	movlw	1
 12541  04CB  07D0               	addwf	_regIdx,f
 12542  04CC  3000               	movlw	0
 12543  04CD  3DD1               	addwfc	_regIdx+1,f
 12544  04CE                     i1l4467:
 12545                           
 12546                           ;main.c: 457: if(regIdx > 2){
 12547  04CE  0851               	movf	_regIdx+1,w
 12548  04CF  3A80               	xorlw	128
 12549  04D0  00FA               	movwf	??_monitoring_ISR
 12550  04D1  3080               	movlw	128
 12551  04D2  027A               	subwf	??_monitoring_ISR,w
 12552  04D3  1D03               	skipz
 12553  04D4  2CD7               	goto	u400_25
 12554  04D5  3003               	movlw	3
 12555  04D6  0250               	subwf	_regIdx,w
 12556  04D7                     u400_25:
 12557  04D7  1C03               	skipc
 12558  04D8  2CDA               	goto	u400_21
 12559  04D9  2CDB               	goto	u400_20
 12560  04DA                     u400_21:
 12561  04DA  2CDE               	goto	i1l4471
 12562  04DB                     u400_20:
 12563  04DB                     i1l4469:
 12564                           
 12565                           ;main.c: 458: regIdx = 0;
 12566  04DB  0020               	movlb	0	; select bank0
 12567  04DC  01D0               	clrf	_regIdx
 12568  04DD  01D1               	clrf	_regIdx+1
 12569  04DE                     i1l4471:
 12570                           
 12571                           ;main.c: 459: };main.c: 460: prevTemp = temp;
 12572  04DE  0020               	movlb	0	; select bank0
 12573  04DF  085B               	movf	_temp,w
 12574  04E0  00FA               	movwf	??_monitoring_ISR
 12575  04E1  01FB               	clrf	??_monitoring_ISR+1
 12576  04E2  087A               	movf	??_monitoring_ISR,w
 12577  04E3  00E8               	movwf	_prevTemp
 12578  04E4  087B               	movf	??_monitoring_ISR+1,w
 12579  04E5  00E9               	movwf	_prevTemp+1
 12580  04E6                     i1l4473:
 12581                           
 12582                           ;main.c: 461: prevLumLevel = lumLevel;
 12583  04E6  085A               	movf	_lumLevel,w
 12584  04E7  00FA               	movwf	??_monitoring_ISR
 12585  04E8  01FB               	clrf	??_monitoring_ISR+1
 12586  04E9  087A               	movf	??_monitoring_ISR,w
 12587  04EA  00E6               	movwf	_prevLumLevel
 12588  04EB  087B               	movf	??_monitoring_ISR+1,w
 12589  04EC  00E7               	movwf	_prevLumLevel+1
 12590  04ED                     i1l4475:
 12591                           
 12592                           ;main.c: 462: };main.c: 465: if(alarmsEnable){
 12593  04ED  086A               	movf	_alarmsEnable,w
 12594  04EE  1903               	btfsc	3,2
 12595  04EF  2CF1               	goto	u401_21
 12596  04F0  2CF2               	goto	u401_20
 12597  04F1                     u401_21:
 12598  04F1  2D2E               	goto	i1l1201
 12599  04F2                     u401_20:
 12600  04F2                     i1l4477:
 12601                           
 12602                           ;main.c: 467: if((lumAlarm.alarmLum > lumLevel) && (editingLumAlarm == 0)){
 12603  04F2  0860               	movf	_lumAlarm,w
 12604  04F3  025A               	subwf	_lumLevel,w
 12605  04F4  1803               	skipnc
 12606  04F5  2CF7               	goto	u402_21
 12607  04F6  2CF8               	goto	u402_20
 12608  04F7                     u402_21:
 12609  04F7  2D0E               	goto	i1l4491
 12610  04F8                     u402_20:
 12611  04F8                     i1l4479:
 12612  04F8  0858               	movf	_editingLumAlarm,w
 12613  04F9  1D03               	btfss	3,2
 12614  04FA  2CFC               	goto	u403_21
 12615  04FB  2CFD               	goto	u403_20
 12616  04FC                     u403_21:
 12617  04FC  2D0E               	goto	i1l4491
 12618  04FD                     u403_20:
 12619  04FD                     i1l4481:
 12620                           
 12621                           ;main.c: 468: if(!lumAlarm.triggered){
 12622  04FD  0862               	movf	_lumAlarm+2,w
 12623  04FE  1D03               	btfss	3,2
 12624  04FF  2D01               	goto	u404_21
 12625  0500  2D02               	goto	u404_20
 12626  0501                     u404_21:
 12627  0501  2D07               	goto	i1l4485
 12628  0502                     u404_20:
 12629  0502                     i1l4483:
 12630                           
 12631                           ;main.c: 469: alarmPWMStart.h = -1;
 12632  0502  30FF               	movlw	255
 12633  0503  00FA               	movwf	??_monitoring_ISR
 12634  0504  087A               	movf	??_monitoring_ISR,w
 12635  0505  0021               	movlb	1	; select bank1
 12636  0506  00B9               	movwf	_alarmPWMStart^(0+128)
 12637  0507                     i1l4485:
 12638                           
 12639                           ;main.c: 470: };main.c: 471: lumAlarm.triggered = 1;
 12640  0507  0020               	movlb	0	; select bank0
 12641  0508  01E2               	clrf	_lumAlarm+2
 12642  0509  0AE2               	incf	_lumAlarm+2,f
 12643  050A                     i1l4487:
 12644                           
 12645                           ;main.c: 473: lumAlarm.trigger = 1;
 12646  050A  01E1               	clrf	_lumAlarm+1
 12647  050B  0AE1               	incf	_lumAlarm+1,f
 12648  050C                     i1l4489:
 12649  050C  1616               	bsf	22,4	;volatile
 12650  050D  2D10               	goto	i1l4495
 12651  050E                     i1l4491:
 12652                           
 12653                           ;main.c: 476: lumAlarm.triggered = 0;
 12654  050E  01E2               	clrf	_lumAlarm+2
 12655  050F                     i1l4493:
 12656  050F  1216               	bcf	22,4	;volatile
 12657  0510                     i1l4495:
 12658                           
 12659                           ;main.c: 478: };main.c: 481: if((tempAlarm.alarmTemp < temp) && (editingTempAlarm == 0))
      +                          {
 12660  0510  085B               	movf	_temp,w
 12661  0511  0263               	subwf	_tempAlarm,w
 12662  0512  1803               	skipnc
 12663  0513  2D15               	goto	u405_21
 12664  0514  2D16               	goto	u405_20
 12665  0515                     u405_21:
 12666  0515  2D2C               	goto	i1l4509
 12667  0516                     u405_20:
 12668  0516                     i1l4497:
 12669  0516  0859               	movf	_editingTempAlarm,w
 12670  0517  1D03               	btfss	3,2
 12671  0518  2D1A               	goto	u406_21
 12672  0519  2D1B               	goto	u406_20
 12673  051A                     u406_21:
 12674  051A  2D2C               	goto	i1l4509
 12675  051B                     u406_20:
 12676  051B                     i1l4499:
 12677                           
 12678                           ;main.c: 482: if(!tempAlarm.triggered){
 12679  051B  0865               	movf	_tempAlarm+2,w
 12680  051C  1D03               	btfss	3,2
 12681  051D  2D1F               	goto	u407_21
 12682  051E  2D20               	goto	u407_20
 12683  051F                     u407_21:
 12684  051F  2D25               	goto	i1l4503
 12685  0520                     u407_20:
 12686  0520                     i1l4501:
 12687                           
 12688                           ;main.c: 483: alarmPWMStart.h = -1;
 12689  0520  30FF               	movlw	255
 12690  0521  00FA               	movwf	??_monitoring_ISR
 12691  0522  087A               	movf	??_monitoring_ISR,w
 12692  0523  0021               	movlb	1	; select bank1
 12693  0524  00B9               	movwf	_alarmPWMStart^(0+128)
 12694  0525                     i1l4503:
 12695                           
 12696                           ;main.c: 484: };main.c: 486: tempAlarm.triggered = 1;
 12697  0525  0020               	movlb	0	; select bank0
 12698  0526  01E5               	clrf	_tempAlarm+2
 12699  0527  0AE5               	incf	_tempAlarm+2,f
 12700  0528                     i1l4505:
 12701                           
 12702                           ;main.c: 488: tempAlarm.trigger = 1;
 12703  0528  01E4               	clrf	_tempAlarm+1
 12704  0529  0AE4               	incf	_tempAlarm+1,f
 12705  052A                     i1l4507:
 12706  052A  1696               	bsf	22,5	;volatile
 12707  052B  2D2E               	goto	i1l1201
 12708  052C                     i1l4509:
 12709                           
 12710                           ;main.c: 492: tempAlarm.triggered = 0;
 12711  052C  01E5               	clrf	_tempAlarm+2
 12712  052D                     i1l4511:
 12713  052D  1296               	bcf	22,5	;volatile
 12714  052E                     i1l1201:
 12715  052E  0008               	return
 12716  052F                     __end_of_monitoring_ISR:
 12717                           
 12718                           	psect	text31
 12719  052F                     __ptext31:	
 12720 ;; *************** function _tsttc *****************
 12721 ;; Defined at:
 12722 ;;		line 63 in file "main.c"
 12723 ;; Parameters:    Size  Location     Type
 12724 ;;		None
 12725 ;; Auto vars:     Size  Location     Type
 12726 ;;  value           1    3[COMMON] unsigned char 
 12727 ;; Return value:  Size  Location     Type
 12728 ;;                  1    wreg      unsigned char 
 12729 ;; Registers used:
 12730 ;;		wreg, status,2, status,0, pclath, cstack
 12731 ;; Tracked objects:
 12732 ;;		On entry : 0/0
 12733 ;;		On exit  : 0/0
 12734 ;;		Unchanged: 0/0
 12735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12738 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12739 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12740 ;;Total ram usage:        2 bytes
 12741 ;; Hardware stack levels used:    1
 12742 ;; Hardware stack levels required when called:    1
 12743 ;; This function calls:
 12744 ;;		_ReadI2C
 12745 ;;		i1_WriteI2C
 12746 ;; This function is called by:
 12747 ;;		_monitoring_ISR
 12748 ;; This function uses a non-reentrant model
 12749 ;;
 12750                           
 12751                           
 12752                           ;psect for function _tsttc
 12753  052F                     _tsttc:
 12754  052F                     i1l848:	
 12755                           ;incstack = 0
 12756                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 12757                           ;main.c: 65: unsigned char value;;main.c: 66: do{
 12758                           
 12759  052F                     i1l3863:	
 12760                           ;main.c: 67: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12761                           
 12762  052F  0023               	movlb	3	; select bank3
 12763  0530  0C0F               	rrf	15,w	;volatile
 12764  0531  0C89               	rrf	9,f
 12765  0532  3901               	andlw	1
 12766  0533  00F2               	movwf	??_tsttc
 12767  0534  0811               	movf	17,w	;volatile
 12768  0535  391F               	andlw	31
 12769  0536  0472               	iorwf	??_tsttc,w
 12770  0537  1D03               	btfss	3,2
 12771  0538  2D3A               	goto	u297_21
 12772  0539  2D3B               	goto	u297_20
 12773  053A                     u297_21:
 12774  053A  2D2F               	goto	i1l3863
 12775  053B                     u297_20:
 12776  053B                     i1l851:
 12777                           
 12778                           ;main.c: 68: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 12779  053B  1411               	bsf	17,0	;volatile
 12780  053C                     i1l852:
 12781  053C  1811               	btfsc	17,0	;volatile
 12782  053D  2D3F               	goto	u298_21
 12783  053E  2D40               	goto	u298_20
 12784  053F                     u298_21:
 12785  053F  2D3C               	goto	i1l852
 12786  0540                     u298_20:
 12787  0540                     i1l3865:
 12788  0540  0C0F               	rrf	15,w	;volatile
 12789  0541  0C89               	rrf	9,f
 12790  0542  3901               	andlw	1
 12791  0543  00F2               	movwf	??_tsttc
 12792  0544  0811               	movf	17,w	;volatile
 12793  0545  391F               	andlw	31
 12794  0546  0472               	iorwf	??_tsttc,w
 12795  0547  1D03               	btfss	3,2
 12796  0548  2D4A               	goto	u299_21
 12797  0549  2D4B               	goto	u299_20
 12798  054A                     u299_21:
 12799  054A  2D40               	goto	i1l3865
 12800  054B                     u299_20:
 12801  054B                     i1l3867:
 12802                           
 12803                           ;main.c: 70: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12804  054B  309A               	movlw	154
 12805  054C  318D  2529  3185   	fcall	i1_WriteI2C
 12806  054F                     i1l3869:
 12807  054F  0023               	movlb	3	; select bank3
 12808  0550  0C0F               	rrf	15,w	;volatile
 12809  0551  0C89               	rrf	9,f
 12810  0552  3901               	andlw	1
 12811  0553  00F2               	movwf	??_tsttc
 12812  0554  0811               	movf	17,w	;volatile
 12813  0555  391F               	andlw	31
 12814  0556  0472               	iorwf	??_tsttc,w
 12815  0557  1D03               	btfss	3,2
 12816  0558  2D5A               	goto	u300_21
 12817  0559  2D5B               	goto	u300_20
 12818  055A                     u300_21:
 12819  055A  2D4F               	goto	i1l3869
 12820  055B                     u300_20:
 12821  055B                     i1l3871:
 12822                           
 12823                           ;main.c: 71: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12824  055B  3001               	movlw	1
 12825  055C  318D  2529  3185   	fcall	i1_WriteI2C
 12826  055F                     i1l3873:
 12827  055F  0023               	movlb	3	; select bank3
 12828  0560  0C0F               	rrf	15,w	;volatile
 12829  0561  0C89               	rrf	9,f
 12830  0562  3901               	andlw	1
 12831  0563  00F2               	movwf	??_tsttc
 12832  0564  0811               	movf	17,w	;volatile
 12833  0565  391F               	andlw	31
 12834  0566  0472               	iorwf	??_tsttc,w
 12835  0567  1D03               	btfss	3,2
 12836  0568  2D6A               	goto	u301_21
 12837  0569  2D6B               	goto	u301_20
 12838  056A                     u301_21:
 12839  056A  2D5F               	goto	i1l3873
 12840  056B                     u301_20:
 12841  056B                     i1l863:
 12842                           
 12843                           ;main.c: 72: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 12844  056B  1491               	bsf	17,1	;volatile
 12845  056C                     i1l864:
 12846  056C  1891               	btfsc	17,1	;volatile
 12847  056D  2D6F               	goto	u302_21
 12848  056E  2D70               	goto	u302_20
 12849  056F                     u302_21:
 12850  056F  2D6C               	goto	i1l864
 12851  0570                     u302_20:
 12852  0570                     i1l3875:
 12853  0570  0C0F               	rrf	15,w	;volatile
 12854  0571  0C89               	rrf	9,f
 12855  0572  3901               	andlw	1
 12856  0573  00F2               	movwf	??_tsttc
 12857  0574  0811               	movf	17,w	;volatile
 12858  0575  391F               	andlw	31
 12859  0576  0472               	iorwf	??_tsttc,w
 12860  0577  1D03               	btfss	3,2
 12861  0578  2D7A               	goto	u303_21
 12862  0579  2D7B               	goto	u303_20
 12863  057A                     u303_21:
 12864  057A  2D70               	goto	i1l3875
 12865  057B                     u303_20:
 12866  057B                     i1l3877:
 12867                           
 12868                           ;main.c: 73: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12869  057B  309B               	movlw	155
 12870  057C  318D  2529  3185   	fcall	i1_WriteI2C
 12871  057F                     i1l3879:
 12872  057F  0023               	movlb	3	; select bank3
 12873  0580  0C0F               	rrf	15,w	;volatile
 12874  0581  0C89               	rrf	9,f
 12875  0582  3901               	andlw	1
 12876  0583  00F2               	movwf	??_tsttc
 12877  0584  0811               	movf	17,w	;volatile
 12878  0585  391F               	andlw	31
 12879  0586  0472               	iorwf	??_tsttc,w
 12880  0587  1D03               	btfss	3,2
 12881  0588  2D8A               	goto	u304_21
 12882  0589  2D8B               	goto	u304_20
 12883  058A                     u304_21:
 12884  058A  2D7F               	goto	i1l3879
 12885  058B                     u304_20:
 12886  058B                     i1l3881:
 12887                           
 12888                           ;main.c: 74: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12889  058B  318B  2312  3185   	fcall	_ReadI2C
 12890  058E  00F2               	movwf	??_tsttc
 12891  058F  0872               	movf	??_tsttc,w
 12892  0590  00F3               	movwf	tsttc@value
 12893  0591                     i1l3883:
 12894  0591  0023               	movlb	3	; select bank3
 12895  0592  0C0F               	rrf	15,w	;volatile
 12896  0593  0C89               	rrf	9,f
 12897  0594  3901               	andlw	1
 12898  0595  00F2               	movwf	??_tsttc
 12899  0596  0811               	movf	17,w	;volatile
 12900  0597  391F               	andlw	31
 12901  0598  0472               	iorwf	??_tsttc,w
 12902  0599  1D03               	btfss	3,2
 12903  059A  2D9C               	goto	u305_21
 12904  059B  2D9D               	goto	u305_20
 12905  059C                     u305_21:
 12906  059C  2D91               	goto	i1l3883
 12907  059D                     u305_20:
 12908  059D                     i1l875:
 12909                           
 12910                           ;main.c: 75: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12911  059D  1691               	bsf	17,5	;volatile
 12912  059E  1611               	bsf	17,4	;volatile
 12913  059F                     i1l876:
 12914  059F  1A11               	btfsc	17,4	;volatile
 12915  05A0  2DA2               	goto	u306_21
 12916  05A1  2DA3               	goto	u306_20
 12917  05A2                     u306_21:
 12918  05A2  2D9F               	goto	i1l876
 12919  05A3                     u306_20:
 12920  05A3                     i1l3885:
 12921  05A3  0C0F               	rrf	15,w	;volatile
 12922  05A4  0C89               	rrf	9,f
 12923  05A5  3901               	andlw	1
 12924  05A6  00F2               	movwf	??_tsttc
 12925  05A7  0811               	movf	17,w	;volatile
 12926  05A8  391F               	andlw	31
 12927  05A9  0472               	iorwf	??_tsttc,w
 12928  05AA  1D03               	btfss	3,2
 12929  05AB  2DAD               	goto	u307_21
 12930  05AC  2DAE               	goto	u307_20
 12931  05AD                     u307_21:
 12932  05AD  2DA3               	goto	i1l3885
 12933  05AE                     u307_20:
 12934  05AE                     i1l881:
 12935                           
 12936                           ;main.c: 76: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 12937  05AE  1511               	bsf	17,2	;volatile
 12938  05AF                     i1l882:
 12939  05AF  1911               	btfsc	17,2	;volatile
 12940  05B0  2DB2               	goto	u308_21
 12941  05B1  2DB3               	goto	u308_20
 12942  05B2                     u308_21:
 12943  05B2  2DAF               	goto	i1l882
 12944  05B3                     u308_20:
 12945  05B3                     i1l884:
 12946                           
 12947                           ;main.c: 77: } while (!(value & 0x40));
 12948  05B3  1F73               	btfss	tsttc@value,6
 12949  05B4  2DB6               	goto	u309_21
 12950  05B5  2DB7               	goto	u309_20
 12951  05B6                     u309_21:
 12952  05B6  2D2F               	goto	i1l848
 12953  05B7                     u309_20:
 12954  05B7                     i1l3887:
 12955  05B7  0C0F               	rrf	15,w	;volatile
 12956  05B8  0C89               	rrf	9,f
 12957  05B9  3901               	andlw	1
 12958  05BA  00F2               	movwf	??_tsttc
 12959  05BB  0811               	movf	17,w	;volatile
 12960  05BC  391F               	andlw	31
 12961  05BD  0472               	iorwf	??_tsttc,w
 12962  05BE  1D03               	btfss	3,2
 12963  05BF  2DC1               	goto	u310_21
 12964  05C0  2DC2               	goto	u310_20
 12965  05C1                     u310_21:
 12966  05C1  2DB7               	goto	i1l3887
 12967  05C2                     u310_20:
 12968  05C2                     i1l888:
 12969                           
 12970                           ;main.c: 80: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 12971  05C2  1411               	bsf	17,0	;volatile
 12972  05C3                     i1l889:
 12973  05C3  1811               	btfsc	17,0	;volatile
 12974  05C4  2DC6               	goto	u311_21
 12975  05C5  2DC7               	goto	u311_20
 12976  05C6                     u311_21:
 12977  05C6  2DC3               	goto	i1l889
 12978  05C7                     u311_20:
 12979  05C7                     i1l3889:
 12980  05C7  0C0F               	rrf	15,w	;volatile
 12981  05C8  0C89               	rrf	9,f
 12982  05C9  3901               	andlw	1
 12983  05CA  00F2               	movwf	??_tsttc
 12984  05CB  0811               	movf	17,w	;volatile
 12985  05CC  391F               	andlw	31
 12986  05CD  0472               	iorwf	??_tsttc,w
 12987  05CE  1D03               	btfss	3,2
 12988  05CF  2DD1               	goto	u312_21
 12989  05D0  2DD2               	goto	u312_20
 12990  05D1                     u312_21:
 12991  05D1  2DC7               	goto	i1l3889
 12992  05D2                     u312_20:
 12993  05D2                     i1l3891:
 12994                           
 12995                           ;main.c: 81: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12996  05D2  309A               	movlw	154
 12997  05D3  318D  2529  3185   	fcall	i1_WriteI2C
 12998  05D6                     i1l3893:
 12999  05D6  0023               	movlb	3	; select bank3
 13000  05D7  0C0F               	rrf	15,w	;volatile
 13001  05D8  0C89               	rrf	9,f
 13002  05D9  3901               	andlw	1
 13003  05DA  00F2               	movwf	??_tsttc
 13004  05DB  0811               	movf	17,w	;volatile
 13005  05DC  391F               	andlw	31
 13006  05DD  0472               	iorwf	??_tsttc,w
 13007  05DE  1D03               	btfss	3,2
 13008  05DF  2DE1               	goto	u313_21
 13009  05E0  2DE2               	goto	u313_20
 13010  05E1                     u313_21:
 13011  05E1  2DD6               	goto	i1l3893
 13012  05E2                     u313_20:
 13013  05E2                     i1l3895:
 13014                           
 13015                           ;main.c: 82: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13016  05E2  3000               	movlw	0
 13017  05E3  318D  2529  3185   	fcall	i1_WriteI2C
 13018  05E6                     i1l3897:
 13019  05E6  0023               	movlb	3	; select bank3
 13020  05E7  0C0F               	rrf	15,w	;volatile
 13021  05E8  0C89               	rrf	9,f
 13022  05E9  3901               	andlw	1
 13023  05EA  00F2               	movwf	??_tsttc
 13024  05EB  0811               	movf	17,w	;volatile
 13025  05EC  391F               	andlw	31
 13026  05ED  0472               	iorwf	??_tsttc,w
 13027  05EE  1D03               	btfss	3,2
 13028  05EF  2DF1               	goto	u314_21
 13029  05F0  2DF2               	goto	u314_20
 13030  05F1                     u314_21:
 13031  05F1  2DE6               	goto	i1l3897
 13032  05F2                     u314_20:
 13033  05F2                     i1l900:
 13034                           
 13035                           ;main.c: 83: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 13036  05F2  1491               	bsf	17,1	;volatile
 13037  05F3                     i1l901:
 13038  05F3  1891               	btfsc	17,1	;volatile
 13039  05F4  2DF6               	goto	u315_21
 13040  05F5  2DF7               	goto	u315_20
 13041  05F6                     u315_21:
 13042  05F6  2DF3               	goto	i1l901
 13043  05F7                     u315_20:
 13044  05F7                     i1l3899:
 13045  05F7  0C0F               	rrf	15,w	;volatile
 13046  05F8  0C89               	rrf	9,f
 13047  05F9  3901               	andlw	1
 13048  05FA  00F2               	movwf	??_tsttc
 13049  05FB  0811               	movf	17,w	;volatile
 13050  05FC  391F               	andlw	31
 13051  05FD  0472               	iorwf	??_tsttc,w
 13052  05FE  1D03               	btfss	3,2
 13053  05FF  2E01               	goto	u316_21
 13054  0600  2E02               	goto	u316_20
 13055  0601                     u316_21:
 13056  0601  2DF7               	goto	i1l3899
 13057  0602                     u316_20:
 13058  0602                     i1l3901:
 13059                           
 13060                           ;main.c: 84: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13061  0602  309B               	movlw	155
 13062  0603  318D  2529  3185   	fcall	i1_WriteI2C
 13063  0606                     i1l3903:
 13064  0606  0023               	movlb	3	; select bank3
 13065  0607  0C0F               	rrf	15,w	;volatile
 13066  0608  0C89               	rrf	9,f
 13067  0609  3901               	andlw	1
 13068  060A  00F2               	movwf	??_tsttc
 13069  060B  0811               	movf	17,w	;volatile
 13070  060C  391F               	andlw	31
 13071  060D  0472               	iorwf	??_tsttc,w
 13072  060E  1D03               	btfss	3,2
 13073  060F  2E11               	goto	u317_21
 13074  0610  2E12               	goto	u317_20
 13075  0611                     u317_21:
 13076  0611  2E06               	goto	i1l3903
 13077  0612                     u317_20:
 13078  0612                     i1l3905:
 13079                           
 13080                           ;main.c: 85: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13081  0612  318B  2312  3185   	fcall	_ReadI2C
 13082  0615  00F2               	movwf	??_tsttc
 13083  0616  0872               	movf	??_tsttc,w
 13084  0617  00F3               	movwf	tsttc@value
 13085  0618                     i1l3907:
 13086  0618  0023               	movlb	3	; select bank3
 13087  0619  0C0F               	rrf	15,w	;volatile
 13088  061A  0C89               	rrf	9,f
 13089  061B  3901               	andlw	1
 13090  061C  00F2               	movwf	??_tsttc
 13091  061D  0811               	movf	17,w	;volatile
 13092  061E  391F               	andlw	31
 13093  061F  0472               	iorwf	??_tsttc,w
 13094  0620  1D03               	btfss	3,2
 13095  0621  2E23               	goto	u318_21
 13096  0622  2E24               	goto	u318_20
 13097  0623                     u318_21:
 13098  0623  2E18               	goto	i1l3907
 13099  0624                     u318_20:
 13100  0624                     i1l912:
 13101                           
 13102                           ;main.c: 86: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13103  0624  1691               	bsf	17,5	;volatile
 13104  0625  1611               	bsf	17,4	;volatile
 13105  0626                     i1l913:
 13106  0626  1A11               	btfsc	17,4	;volatile
 13107  0627  2E29               	goto	u319_21
 13108  0628  2E2A               	goto	u319_20
 13109  0629                     u319_21:
 13110  0629  2E26               	goto	i1l913
 13111  062A                     u319_20:
 13112  062A                     i1l3909:
 13113  062A  0C0F               	rrf	15,w	;volatile
 13114  062B  0C89               	rrf	9,f
 13115  062C  3901               	andlw	1
 13116  062D  00F2               	movwf	??_tsttc
 13117  062E  0811               	movf	17,w	;volatile
 13118  062F  391F               	andlw	31
 13119  0630  0472               	iorwf	??_tsttc,w
 13120  0631  1D03               	btfss	3,2
 13121  0632  2E34               	goto	u320_21
 13122  0633  2E35               	goto	u320_20
 13123  0634                     u320_21:
 13124  0634  2E2A               	goto	i1l3909
 13125  0635                     u320_20:
 13126  0635                     i1l918:
 13127                           
 13128                           ;main.c: 87: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 13129  0635  1511               	bsf	17,2	;volatile
 13130  0636                     i1l919:
 13131  0636  1911               	btfsc	17,2	;volatile
 13132  0637  2E39               	goto	u321_21
 13133  0638  2E3A               	goto	u321_20
 13134  0639                     u321_21:
 13135  0639  2E36               	goto	i1l919
 13136  063A                     u321_20:
 13137  063A                     i1l3911:
 13138                           
 13139                           ;main.c: 89: return value;
 13140  063A  0873               	movf	tsttc@value,w
 13141  063B                     i1l922:
 13142  063B  0008               	return
 13143  063C                     __end_of_tsttc:
 13144                           
 13145                           	psect	text32
 13146  0B12                     __ptext32:	
 13147 ;; *************** function _ReadI2C *****************
 13148 ;; Defined at:
 13149 ;;		line 32 in file "I2C/i2c.c"
 13150 ;; Parameters:    Size  Location     Type
 13151 ;;		None
 13152 ;; Auto vars:     Size  Location     Type
 13153 ;;		None
 13154 ;; Return value:  Size  Location     Type
 13155 ;;                  1    wreg      unsigned char 
 13156 ;; Registers used:
 13157 ;;		wreg, status,2, status,0
 13158 ;; Tracked objects:
 13159 ;;		On entry : 0/0
 13160 ;;		On exit  : 0/0
 13161 ;;		Unchanged: 0/0
 13162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13165 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13166 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13167 ;;Total ram usage:        1 bytes
 13168 ;; Hardware stack levels used:    1
 13169 ;; This function calls:
 13170 ;;		Nothing
 13171 ;; This function is called by:
 13172 ;;		_tsttc
 13173 ;;		_LCDrecv
 13174 ;; This function uses a non-reentrant model
 13175 ;;
 13176                           
 13177                           
 13178                           ;psect for function _ReadI2C
 13179  0B12                     _ReadI2C:
 13180  0B12                     i1l3723:	
 13181                           ;incstack = 0
 13182                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 13183                           
 13184                           
 13185                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 13186  0B12  300F               	movlw	15
 13187  0B13  0023               	movlb	3	; select bank3
 13188  0B14  0510               	andwf	16,w	;volatile
 13189  0B15  00F0               	movwf	??_ReadI2C
 13190  0B16  3008               	movlw	8
 13191  0B17  0670               	xorwf	??_ReadI2C,w
 13192  0B18  1903               	btfsc	3,2
 13193  0B19  2B1B               	goto	u265_21
 13194  0B1A  2B1C               	goto	u265_20
 13195  0B1B                     u265_21:
 13196  0B1B  2B25               	goto	i1l22
 13197  0B1C                     u265_20:
 13198  0B1C                     i1l3725:
 13199  0B1C  300F               	movlw	15
 13200  0B1D  0510               	andwf	16,w	;volatile
 13201  0B1E  00F0               	movwf	??_ReadI2C
 13202  0B1F  300B               	movlw	11
 13203  0B20  0670               	xorwf	??_ReadI2C,w
 13204  0B21  1D03               	btfss	3,2
 13205  0B22  2B24               	goto	u266_21
 13206  0B23  2B25               	goto	u266_20
 13207  0B24                     u266_21:
 13208  0B24  2B26               	goto	i1l23
 13209  0B25                     u266_20:
 13210  0B25                     i1l22:
 13211                           
 13212                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
 13213  0B25  1591               	bsf	17,3	;volatile
 13214  0B26                     i1l23:
 13215  0B26  1C0F               	btfss	15,0	;volatile
 13216  0B27  2B29               	goto	u267_21
 13217  0B28  2B2A               	goto	u267_20
 13218  0B29                     u267_21:
 13219  0B29  2B26               	goto	i1l23
 13220  0B2A                     u267_20:
 13221  0B2A                     i1l3727:
 13222                           
 13223                           ;i2c.c: 37: return ( SSP1BUF );
 13224  0B2A  080C               	movf	12,w	;volatile
 13225  0B2B                     i1l26:
 13226  0B2B  0008               	return
 13227  0B2C                     __end_of_ReadI2C:
 13228                           
 13229                           	psect	text33
 13230  0B48                     __ptext33:	
 13231 ;; *************** function _DATAEE_WriteByte *****************
 13232 ;; Defined at:
 13233 ;;		line 180 in file "mcc_generated_files/memory.c"
 13234 ;; Parameters:    Size  Location     Type
 13235 ;;  bAdd            2    6[COMMON] unsigned int 
 13236 ;;  bData           1    8[COMMON] unsigned char 
 13237 ;; Auto vars:     Size  Location     Type
 13238 ;;  GIEBitValue     1    9[COMMON] unsigned char 
 13239 ;; Return value:  Size  Location     Type
 13240 ;;                  1    wreg      void 
 13241 ;; Registers used:
 13242 ;;		wreg, status,2, status,0
 13243 ;; Tracked objects:
 13244 ;;		On entry : 0/0
 13245 ;;		On exit  : 0/0
 13246 ;;		Unchanged: 0/0
 13247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13248 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13249 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13251 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13252 ;;Total ram usage:        4 bytes
 13253 ;; Hardware stack levels used:    1
 13254 ;; This function calls:
 13255 ;;		Nothing
 13256 ;; This function is called by:
 13257 ;;		_monitoring_ISR
 13258 ;; This function uses a non-reentrant model
 13259 ;;
 13260                           
 13261                           
 13262                           ;psect for function _DATAEE_WriteByte
 13263  0B48                     _DATAEE_WriteByte:
 13264  0B48                     i1l4049:	
 13265                           ;incstack = 0
 13266                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 13267                           
 13268                           
 13269                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 13270  0B48  3000               	movlw	0
 13271  0B49  1B8B               	btfsc	11,7	;volatile
 13272  0B4A  3001               	movlw	1
 13273  0B4B  00F9               	movwf	DATAEE_WriteByte@GIEBitValue
 13274                           
 13275                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 13276  0B4C  0877               	movf	DATAEE_WriteByte@bAdd+1,w
 13277  0B4D  0030               	movlb	16	; select bank16
 13278  0B4E  009B               	movwf	27	;volatile
 13279  0B4F                     i1l4051:
 13280                           
 13281                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 13282  0B4F  0876               	movf	DATAEE_WriteByte@bAdd,w
 13283  0B50  009A               	movwf	26	;volatile
 13284  0B51                     i1l4053:
 13285                           
 13286                           ;memory.c: 186: NVMDATL = bData;
 13287  0B51  0878               	movf	DATAEE_WriteByte@bData,w
 13288  0B52  009C               	movwf	28	;volatile
 13289  0B53                     i1l4055:
 13290                           
 13291                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 13292  0B53  171E               	bsf	30,6	;volsfr
 13293  0B54                     i1l4057:
 13294                           
 13295                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 13296  0B54  151E               	bsf	30,2	;volsfr
 13297  0B55                     i1l4059:
 13298                           
 13299                           ;memory.c: 189: INTCONbits.GIE = 0;
 13300  0B55  138B               	bcf	11,7	;volatile
 13301  0B56                     i1l4061:
 13302                           
 13303                           ;memory.c: 190: NVMCON2 = 0x55;
 13304  0B56  3055               	movlw	85
 13305  0B57  009F               	movwf	31	;volsfr
 13306  0B58                     i1l4063:
 13307                           
 13308                           ;memory.c: 191: NVMCON2 = 0xAA;
 13309  0B58  30AA               	movlw	170
 13310  0B59  009F               	movwf	31	;volsfr
 13311  0B5A                     i1l4065:
 13312                           
 13313                           ;memory.c: 192: NVMCON1bits.WR = 1;
 13314  0B5A  149E               	bsf	30,1	;volsfr
 13315  0B5B                     i1l1323:	
 13316                           ;memory.c: 195: {
 13317                           
 13318  0B5B  189E               	btfsc	30,1	;volsfr
 13319  0B5C  2B5E               	goto	u343_21
 13320  0B5D  2B5F               	goto	u343_20
 13321  0B5E                     u343_21:
 13322  0B5E  2B5B               	goto	i1l1323
 13323  0B5F                     u343_20:
 13324  0B5F                     i1l1325:
 13325                           
 13326                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 13327  0B5F  111E               	bcf	30,2	;volsfr
 13328  0B60                     i1l4067:
 13329                           
 13330                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 13331  0B60  0C79               	rrf	DATAEE_WriteByte@GIEBitValue,w
 13332  0B61  1C03               	skipc
 13333  0B62  138B               	bcf	11,7	;volatile
 13334  0B63  1803               	skipnc
 13335  0B64  178B               	bsf	11,7	;volatile
 13336  0B65                     i1l1326:
 13337  0B65  0008               	return
 13338  0B66                     __end_of_DATAEE_WriteByte:
 13339                           
 13340                           	psect	text34
 13341  09DA                     __ptext34:	
 13342 ;; *************** function _DATAEE_ReadByte *****************
 13343 ;; Defined at:
 13344 ;;		line 202 in file "mcc_generated_files/memory.c"
 13345 ;; Parameters:    Size  Location     Type
 13346 ;;  bAdd            2    6[COMMON] unsigned int 
 13347 ;; Auto vars:     Size  Location     Type
 13348 ;;		None
 13349 ;; Return value:  Size  Location     Type
 13350 ;;                  1    wreg      unsigned char 
 13351 ;; Registers used:
 13352 ;;		wreg, status,2
 13353 ;; Tracked objects:
 13354 ;;		On entry : 0/0
 13355 ;;		On exit  : 0/0
 13356 ;;		Unchanged: 0/0
 13357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13361 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13362 ;;Total ram usage:        2 bytes
 13363 ;; Hardware stack levels used:    1
 13364 ;; This function calls:
 13365 ;;		Nothing
 13366 ;; This function is called by:
 13367 ;;		_monitoring_ISR
 13368 ;; This function uses a non-reentrant model
 13369 ;;
 13370                           
 13371                           
 13372                           ;psect for function _DATAEE_ReadByte
 13373  09DA                     _DATAEE_ReadByte:
 13374  09DA                     i1l4069:	
 13375                           ;incstack = 0
 13376                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 13377                           
 13378                           
 13379                           ;memory.c: 204: NVMADRH = ((bAdd >> 8) & 0xFF);
 13380  09DA  0877               	movf	DATAEE_ReadByte@bAdd+1,w
 13381  09DB  0030               	movlb	16	; select bank16
 13382  09DC  009B               	movwf	27	;volatile
 13383  09DD                     i1l4071:
 13384                           
 13385                           ;memory.c: 205: NVMADRL = (bAdd & 0xFF);
 13386  09DD  0876               	movf	DATAEE_ReadByte@bAdd,w
 13387  09DE  009A               	movwf	26	;volatile
 13388  09DF                     i1l4073:
 13389                           
 13390                           ;memory.c: 206: NVMCON1bits.NVMREGS = 1;
 13391  09DF  171E               	bsf	30,6	;volsfr
 13392  09E0                     i1l4075:
 13393                           
 13394                           ;memory.c: 207: NVMCON1bits.RD = 1;
 13395  09E0  141E               	bsf	30,0	;volsfr
 13396  09E1                     i1l4077:
 13397                           
 13398                           ;memory.c: 208: __nop();
 13399  09E1  0000               	nop
 13400  09E2                     i1l4079:
 13401                           
 13402                           ;memory.c: 209: __nop();
 13403  09E2  0000               	nop
 13404  09E3                     i1l4081:
 13405                           
 13406                           ;memory.c: 211: return (NVMDATL);
 13407  09E3  0030               	movlb	16	; select bank16
 13408  09E4  081C               	movf	28,w	;volatile
 13409  09E5                     i1l1329:
 13410  09E5  0008               	return
 13411  09E6                     __end_of_DATAEE_ReadByte:
 13412                           
 13413                           	psect	text35
 13414  0A61                     __ptext35:	
 13415 ;; *************** function _ADCC_GetSingleConversion *****************
 13416 ;; Defined at:
 13417 ;;		line 130 in file "mcc_generated_files/adcc.c"
 13418 ;; Parameters:    Size  Location     Type
 13419 ;;  channel         1    wreg     enum E12086
 13420 ;; Auto vars:     Size  Location     Type
 13421 ;;  channel         1    3[COMMON] enum E12086
 13422 ;; Return value:  Size  Location     Type
 13423 ;;                  2    0[COMMON] unsigned int 
 13424 ;; Registers used:
 13425 ;;		wreg
 13426 ;; Tracked objects:
 13427 ;;		On entry : 0/0
 13428 ;;		On exit  : 0/0
 13429 ;;		Unchanged: 0/0
 13430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13431 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13434 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13435 ;;Total ram usage:        4 bytes
 13436 ;; Hardware stack levels used:    1
 13437 ;; This function calls:
 13438 ;;		Nothing
 13439 ;; This function is called by:
 13440 ;;		_monitoring_ISR
 13441 ;; This function uses a non-reentrant model
 13442 ;;
 13443                           
 13444                           
 13445                           ;psect for function _ADCC_GetSingleConversion
 13446  0A61                     _ADCC_GetSingleConversion:
 13447                           
 13448                           ;incstack = 0
 13449                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 13450                           ;ADCC_GetSingleConversion@channel stored from wreg
 13451  0A61  00F3               	movwf	ADCC_GetSingleConversion@channel
 13452  0A62                     i1l3845:
 13453                           
 13454                           ;adcc.c: 133: ADPCH = channel;
 13455  0A62  0873               	movf	ADCC_GetSingleConversion@channel,w
 13456  0A63  0021               	movlb	1	; select bank1
 13457  0A64  009E               	movwf	30	;volatile
 13458  0A65                     i1l3847:
 13459                           
 13460                           ;adcc.c: 136: ADCON0bits.ADON = 1;
 13461  0A65  1793               	bsf	19,7	;volatile
 13462  0A66                     i1l3849:
 13463                           
 13464                           ;adcc.c: 139: ADCON0bits.ADCONT = 0;
 13465  0A66  1313               	bcf	19,6	;volatile
 13466  0A67                     i1l3851:
 13467                           
 13468                           ;adcc.c: 142: ADCON0bits.ADGO = 1;
 13469  0A67  1413               	bsf	19,0	;volatile
 13470  0A68                     i1l3853:
 13471                           
 13472                           ;adcc.c: 145: __nop();
 13473  0A68  0000               	nop
 13474  0A69                     i1l575:	
 13475                           ;adcc.c: 149: {
 13476                           
 13477  0A69  0021               	movlb	1	; select bank1
 13478  0A6A  1813               	btfsc	19,0	;volatile
 13479  0A6B  2A6D               	goto	u296_21
 13480  0A6C  2A6E               	goto	u296_20
 13481  0A6D                     u296_21:
 13482  0A6D  2A69               	goto	i1l575
 13483  0A6E                     u296_20:
 13484  0A6E                     i1l3855:
 13485                           
 13486                           ;adcc.c: 150: };adcc.c: 154: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 13487  0A6E  080D               	movf	13,w	;volatile
 13488  0A6F  00F1               	movwf	?_ADCC_GetSingleConversion+1
 13489  0A70  080C               	movf	12,w	;volatile
 13490  0A71  00F0               	movwf	?_ADCC_GetSingleConversion
 13491  0A72                     i1l578:
 13492  0A72  0008               	return
 13493  0A73                     __end_of_ADCC_GetSingleConversion:
 13494                           
 13495                           	psect	text36
 13496  0A3E                     __ptext36:	
 13497 ;; *************** function _TMR5_WriteTimer *****************
 13498 ;; Defined at:
 13499 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 13500 ;; Parameters:    Size  Location     Type
 13501 ;;  timerVal        2    0[COMMON] unsigned int 
 13502 ;; Auto vars:     Size  Location     Type
 13503 ;;		None
 13504 ;; Return value:  Size  Location     Type
 13505 ;;                  1    wreg      void 
 13506 ;; Registers used:
 13507 ;;		wreg, status,2
 13508 ;; Tracked objects:
 13509 ;;		On entry : 0/0
 13510 ;;		On exit  : 0/0
 13511 ;;		Unchanged: 0/0
 13512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13516 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13517 ;;Total ram usage:        2 bytes
 13518 ;; Hardware stack levels used:    1
 13519 ;; This function calls:
 13520 ;;		Nothing
 13521 ;; This function is called by:
 13522 ;;		_TMR5_ISR
 13523 ;;		_TMR5_Reload
 13524 ;; This function uses a non-reentrant model
 13525 ;;
 13526                           
 13527                           
 13528                           ;psect for function _TMR5_WriteTimer
 13529  0A3E                     _TMR5_WriteTimer:
 13530  0A3E                     i1l4247:	
 13531                           ;incstack = 0
 13532                           ; Regs used in _TMR5_WriteTimer: [wreg+status,2]
 13533                           
 13534                           
 13535                           ;tmr5.c: 130: if (T5CONbits.nT5SYNC == 1)
 13536  0A3E  0024               	movlb	4	; select bank4
 13537  0A3F  1D1A               	btfss	26,2	;volatile
 13538  0A40  2A42               	goto	u347_21
 13539  0A41  2A43               	goto	u347_20
 13540  0A42                     u347_21:
 13541  0A42  2A4A               	goto	i1l4257
 13542  0A43                     u347_20:
 13543  0A43                     i1l4249:
 13544                           
 13545                           ;tmr5.c: 131: {;tmr5.c: 133: T5CONbits.TMR5ON = 0;
 13546  0A43  101A               	bcf	26,0	;volatile
 13547  0A44                     i1l4251:
 13548                           
 13549                           ;tmr5.c: 136: TMR5H = (timerVal >> 8);
 13550  0A44  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 13551  0A45  0099               	movwf	25	;volatile
 13552  0A46                     i1l4253:
 13553                           
 13554                           ;tmr5.c: 137: TMR5L = timerVal;
 13555  0A46  0870               	movf	TMR5_WriteTimer@timerVal,w
 13556  0A47  0098               	movwf	24	;volatile
 13557  0A48                     i1l4255:
 13558                           
 13559                           ;tmr5.c: 140: T5CONbits.TMR5ON =1;
 13560  0A48  141A               	bsf	26,0	;volatile
 13561                           
 13562                           ;tmr5.c: 141: }
 13563  0A49  2A4E               	goto	i1l689
 13564  0A4A                     i1l4257:
 13565                           
 13566                           ;tmr5.c: 142: else;tmr5.c: 143: {;tmr5.c: 145: TMR5H = (timerVal >> 8);
 13567  0A4A  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 13568  0A4B  0099               	movwf	25	;volatile
 13569  0A4C                     i1l4259:
 13570                           
 13571                           ;tmr5.c: 146: TMR5L = timerVal;
 13572  0A4C  0870               	movf	TMR5_WriteTimer@timerVal,w
 13573  0A4D  0098               	movwf	24	;volatile
 13574  0A4E                     i1l689:
 13575  0A4E  0008               	return
 13576  0A4F                     __end_of_TMR5_WriteTimer:
 13577                           
 13578                           	psect	text37
 13579  0AB4                     __ptext37:	
 13580 ;; *************** function _TMR3_ISR *****************
 13581 ;; Defined at:
 13582 ;;		line 164 in file "mcc_generated_files/tmr3.c"
 13583 ;; Parameters:    Size  Location     Type
 13584 ;;		None
 13585 ;; Auto vars:     Size  Location     Type
 13586 ;;		None
 13587 ;; Return value:  Size  Location     Type
 13588 ;;                  1    wreg      void 
 13589 ;; Registers used:
 13590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13591 ;; Tracked objects:
 13592 ;;		On entry : 0/0
 13593 ;;		On exit  : 0/0
 13594 ;;		Unchanged: 0/0
 13595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13600 ;;Total ram usage:        0 bytes
 13601 ;; Hardware stack levels used:    1
 13602 ;; Hardware stack levels required when called:    5
 13603 ;; This function calls:
 13604 ;;		Absolute function
 13605 ;;		_TMR3_DefaultInterruptHandler
 13606 ;;		_TMR3_WriteTimer
 13607 ;;		_menuLCD_ISR
 13608 ;; This function is called by:
 13609 ;;		_INTERRUPT_InterruptManager
 13610 ;; This function uses a non-reentrant model
 13611 ;;
 13612                           
 13613                           
 13614                           ;psect for function _TMR3_ISR
 13615  0AB4                     _TMR3_ISR:
 13616  0AB4                     i1l4551:	
 13617                           ;incstack = 0
 13618                           ; Regs used in _TMR3_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13619                           
 13620                           
 13621                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
 13622  0AB4  002E               	movlb	14	; select bank14
 13623  0AB5  1110               	bcf	16,2	;volatile
 13624  0AB6                     i1l4553:
 13625                           
 13626                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
 13627  0AB6  0020               	movlb	0	; select bank0
 13628  0AB7  086E               	movf	_timer3ReloadVal+1,w	;volatile
 13629  0AB8  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 13630  0AB9  086D               	movf	_timer3ReloadVal,w	;volatile
 13631  0ABA  00F0               	movwf	TMR3_WriteTimer@timerVal
 13632  0ABB  318A  222D  318A   	fcall	_TMR3_WriteTimer
 13633  0ABE                     i1l4555:
 13634                           
 13635                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
 13636  0ABE  0021               	movlb	1	; select bank1
 13637  0ABF  082C               	movf	_TMR3_InterruptHandler^(0+128),w
 13638  0AC0  042D               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 13639  0AC1  1903               	btfsc	3,2
 13640  0AC2  2AC4               	goto	u410_21
 13641  0AC3  2AC5               	goto	u410_20
 13642  0AC4                     u410_21:
 13643  0AC4  2ACA               	goto	i1l478
 13644  0AC5                     u410_20:
 13645  0AC5                     i1l4557:
 13646                           
 13647                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
 13648  0AC5  082D               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 13649  0AC6  008A               	movwf	10
 13650  0AC7  082C               	movf	_TMR3_InterruptHandler^(0+128),w
 13651  0AC8  000A               	callw
 13652  0AC9  318A               	pagesel	$
 13653  0ACA                     i1l478:
 13654  0ACA  0008               	return
 13655  0ACB                     __end_of_TMR3_ISR:
 13656                           
 13657                           	psect	text38
 13658  0002                     __ptext38:	
 13659 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 13660 ;; Defined at:
 13661 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 13662 ;; Parameters:    Size  Location     Type
 13663 ;;		None
 13664 ;; Auto vars:     Size  Location     Type
 13665 ;;		None
 13666 ;; Return value:  Size  Location     Type
 13667 ;;                  1    wreg      void 
 13668 ;; Registers used:
 13669 ;;		None
 13670 ;; Tracked objects:
 13671 ;;		On entry : 0/0
 13672 ;;		On exit  : 0/0
 13673 ;;		Unchanged: 0/0
 13674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13679 ;;Total ram usage:        0 bytes
 13680 ;; Hardware stack levels used:    1
 13681 ;; This function calls:
 13682 ;;		Nothing
 13683 ;; This function is called by:
 13684 ;;		_TMR3_Initialize
 13685 ;;		_TMR3_ISR
 13686 ;; This function uses a non-reentrant model
 13687 ;;
 13688                           
 13689                           
 13690                           ;psect for function _TMR3_DefaultInterruptHandler
 13691  0002                     _TMR3_DefaultInterruptHandler:
 13692  0002                     i1l484:	
 13693                           ;incstack = 0
 13694                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 13695                           
 13696  0002  0008               	return
 13697  0003                     __end_of_TMR3_DefaultInterruptHandler:
 13698                           
 13699                           	psect	text39
 13700  006E                     __ptext39:	
 13701 ;; *************** function _menuLCD_ISR *****************
 13702 ;; Defined at:
 13703 ;;		line 324 in file "main.c"
 13704 ;; Parameters:    Size  Location     Type
 13705 ;;		None
 13706 ;; Auto vars:     Size  Location     Type
 13707 ;;  diff            3   42[BANK0 ] struct Time
 13708 ;;  str             8   27[BANK0 ] unsigned char [8]
 13709 ;;  tt              4   35[BANK0 ] unsigned char [4]
 13710 ;;  l               3   39[BANK0 ] unsigned char [3]
 13711 ;; Return value:  Size  Location     Type
 13712 ;;                  1    wreg      void 
 13713 ;; Registers used:
 13714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13715 ;; Tracked objects:
 13716 ;;		On entry : 0/0
 13717 ;;		On exit  : 0/0
 13718 ;;		Unchanged: 0/0
 13719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13721 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13722 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13723 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13724 ;;Total ram usage:       24 bytes
 13725 ;; Hardware stack levels used:    1
 13726 ;; Hardware stack levels required when called:    4
 13727 ;; This function calls:
 13728 ;;		_LCDchar
 13729 ;;		_LCDcmd
 13730 ;;		_LCDstr
 13731 ;;		_PWM_Output_D4_Enable
 13732 ;;		_TMR2_StartTimer
 13733 ;;		_differenceBetweenTimePeriod
 13734 ;;		_sprintf
 13735 ;;		i1_PWM6_LoadDutyValue
 13736 ;;		i1_PWM_Output_D4_Disable
 13737 ;;		i1_TMR2_StopTimer
 13738 ;; This function is called by:
 13739 ;;		_main
 13740 ;;		_TMR3_ISR
 13741 ;; This function uses a non-reentrant model
 13742 ;;
 13743                           
 13744                           
 13745                           ;psect for function _menuLCD_ISR
 13746  006E                     _menuLCD_ISR:
 13747  006E                     i1l4347:	
 13748                           ;incstack = 0
 13749                           ; Regs used in _menuLCD_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13750                           
 13751                           
 13752                           ;main.c: 325: char str[8];;main.c: 326: if(editingClockAlarm){
 13753  006E  0020               	movlb	0	; select bank0
 13754  006F  0854               	movf	_editingClockAlarm,w
 13755  0070  0455               	iorwf	_editingClockAlarm+1,w
 13756  0071  1903               	btfsc	3,2
 13757  0072  2874               	goto	u376_21
 13758  0073  2875               	goto	u376_20
 13759  0074                     u376_21:
 13760  0074  2893               	goto	i1l4351
 13761  0075                     u376_20:
 13762  0075                     i1l4349:
 13763                           
 13764                           ;main.c: 327: sprintf(str, "%02d:%02d:%02d", clkAlarm.alarmVal.h,clkAlarm.alarmVal.m,clk
      +                          Alarm.alarmVal.s);
 13765  0075  3000               	movlw	low (STR_1| (0+32768))
 13766  0076  00A0               	movwf	sprintf@f
 13767  0077  3090               	movlw	high (STR_1| (0+32768))
 13768  0078  00A1               	movwf	sprintf@f+1
 13769  0079  085C               	movf	_clkAlarm,w
 13770  007A  00B5               	movwf	??_menuLCD_ISR
 13771  007B  01B6               	clrf	??_menuLCD_ISR+1
 13772  007C  0835               	movf	??_menuLCD_ISR,w
 13773  007D  00A2               	movwf	?_sprintf+2
 13774  007E  0836               	movf	??_menuLCD_ISR+1,w
 13775  007F  00A3               	movwf	?_sprintf+3
 13776  0080  085D               	movf	_clkAlarm+1,w
 13777  0081  00B7               	movwf	??_menuLCD_ISR+2
 13778  0082  01B8               	clrf	??_menuLCD_ISR+3
 13779  0083  0837               	movf	??_menuLCD_ISR+2,w
 13780  0084  00A4               	movwf	?_sprintf+4
 13781  0085  0838               	movf	??_menuLCD_ISR+3,w
 13782  0086  00A5               	movwf	?_sprintf+5
 13783  0087  085E               	movf	_clkAlarm+2,w
 13784  0088  00B9               	movwf	??_menuLCD_ISR+4
 13785  0089  01BA               	clrf	??_menuLCD_ISR+5
 13786  008A  0839               	movf	??_menuLCD_ISR+4,w
 13787  008B  00A6               	movwf	?_sprintf+6
 13788  008C  083A               	movf	??_menuLCD_ISR+5,w
 13789  008D  00A7               	movwf	?_sprintf+7
 13790  008E  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 13791  008F  3182  2230  3180   	fcall	_sprintf
 13792                           
 13793                           ;main.c: 328: } else {
 13794  0092  28B0               	goto	i1l4353
 13795  0093                     i1l4351:
 13796                           
 13797                           ;main.c: 329: sprintf(str, "%02d:%02d:%02d", t.h,t.m,t.s);
 13798  0093  3000               	movlw	low (STR_1| (0+32768))
 13799  0094  00A0               	movwf	sprintf@f
 13800  0095  3090               	movlw	high (STR_1| (0+32768))
 13801  0096  00A1               	movwf	sprintf@f+1
 13802  0097  084D               	movf	_t,w
 13803  0098  00B5               	movwf	??_menuLCD_ISR
 13804  0099  01B6               	clrf	??_menuLCD_ISR+1
 13805  009A  0835               	movf	??_menuLCD_ISR,w
 13806  009B  00A2               	movwf	?_sprintf+2
 13807  009C  0836               	movf	??_menuLCD_ISR+1,w
 13808  009D  00A3               	movwf	?_sprintf+3
 13809  009E  084E               	movf	_t+1,w
 13810  009F  00B7               	movwf	??_menuLCD_ISR+2
 13811  00A0  01B8               	clrf	??_menuLCD_ISR+3
 13812  00A1  0837               	movf	??_menuLCD_ISR+2,w
 13813  00A2  00A4               	movwf	?_sprintf+4
 13814  00A3  0838               	movf	??_menuLCD_ISR+3,w
 13815  00A4  00A5               	movwf	?_sprintf+5
 13816  00A5  084F               	movf	_t+2,w
 13817  00A6  00B9               	movwf	??_menuLCD_ISR+4
 13818  00A7  01BA               	clrf	??_menuLCD_ISR+5
 13819  00A8  0839               	movf	??_menuLCD_ISR+4,w
 13820  00A9  00A6               	movwf	?_sprintf+6
 13821  00AA  083A               	movf	??_menuLCD_ISR+5,w
 13822  00AB  00A7               	movwf	?_sprintf+7
 13823  00AC  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 13824  00AD  3182  2230  3180   	fcall	_sprintf
 13825  00B0                     i1l4353:
 13826                           
 13827                           ;main.c: 330: };main.c: 331: LCDcmd(0x80);
 13828  00B0  3080               	movlw	128
 13829  00B1  3189  21BA  3180   	fcall	_LCDcmd
 13830  00B4                     i1l4355:
 13831                           
 13832                           ;main.c: 332: LCDstr(str);
 13833  00B4  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 13834  00B5  318A  2273  3180   	fcall	_LCDstr
 13835  00B8                     i1l4357:
 13836                           
 13837                           ;main.c: 335: if(alarmsEnable){
 13838  00B8  0020               	movlb	0	; select bank0
 13839  00B9  086A               	movf	_alarmsEnable,w
 13840  00BA  1903               	btfsc	3,2
 13841  00BB  28BD               	goto	u377_21
 13842  00BC  28BE               	goto	u377_20
 13843  00BD                     u377_21:
 13844  00BD  297F               	goto	i1l4409
 13845  00BE                     u377_20:
 13846  00BE                     i1l4359:
 13847                           
 13848                           ;main.c: 336: LCDcmd(0x8F);
 13849  00BE  308F               	movlw	143
 13850  00BF  3189  21BA  3180   	fcall	_LCDcmd
 13851                           
 13852                           ;main.c: 337: LCDchar('A');
 13853  00C2  3041               	movlw	65
 13854  00C3  3189  21C1  3180   	fcall	_LCDchar
 13855  00C6                     i1l4361:
 13856                           
 13857                           ;main.c: 340: if(clkAlarm.trigger == 1){
 13858  00C6  0020               	movlb	0	; select bank0
 13859  00C7  035F               	decf	_clkAlarm+3,w
 13860  00C8  1D03               	btfss	3,2
 13861  00C9  28CB               	goto	u378_21
 13862  00CA  28CC               	goto	u378_20
 13863  00CB                     u378_21:
 13864  00CB  28D5               	goto	i1l4365
 13865  00CC                     u378_20:
 13866  00CC                     i1l4363:
 13867                           
 13868                           ;main.c: 341: LCDcmd(0x8B);
 13869  00CC  308B               	movlw	139
 13870  00CD  3189  21BA  3180   	fcall	_LCDcmd
 13871                           
 13872                           ;main.c: 342: LCDchar('C');
 13873  00D0  3043               	movlw	67
 13874  00D1  3189  21C1  3180   	fcall	_LCDchar
 13875                           
 13876                           ;main.c: 343: } else{
 13877  00D4  28DD               	goto	i1l4367
 13878  00D5                     i1l4365:
 13879                           
 13880                           ;main.c: 344: LCDcmd(0x8B);
 13881  00D5  308B               	movlw	139
 13882  00D6  3189  21BA  3180   	fcall	_LCDcmd
 13883                           
 13884                           ;main.c: 345: LCDchar(' ');
 13885  00D9  3020               	movlw	32
 13886  00DA  3189  21C1  3180   	fcall	_LCDchar
 13887  00DD                     i1l4367:
 13888                           
 13889                           ;main.c: 346: };main.c: 349: if(tempAlarm.trigger == 1){
 13890  00DD  0020               	movlb	0	; select bank0
 13891  00DE  0364               	decf	_tempAlarm+1,w
 13892  00DF  1D03               	btfss	3,2
 13893  00E0  28E2               	goto	u379_21
 13894  00E1  28E3               	goto	u379_20
 13895  00E2                     u379_21:
 13896  00E2  28EC               	goto	i1l4371
 13897  00E3                     u379_20:
 13898  00E3                     i1l4369:
 13899                           
 13900                           ;main.c: 350: LCDcmd(0x8C);
 13901  00E3  308C               	movlw	140
 13902  00E4  3189  21BA  3180   	fcall	_LCDcmd
 13903                           
 13904                           ;main.c: 351: LCDchar('T');
 13905  00E7  3054               	movlw	84
 13906  00E8  3189  21C1  3180   	fcall	_LCDchar
 13907                           
 13908                           ;main.c: 352: } else{
 13909  00EB  28F4               	goto	i1l4373
 13910  00EC                     i1l4371:
 13911                           
 13912                           ;main.c: 353: LCDcmd(0x8C);
 13913  00EC  308C               	movlw	140
 13914  00ED  3189  21BA  3180   	fcall	_LCDcmd
 13915                           
 13916                           ;main.c: 354: LCDchar(' ');
 13917  00F0  3020               	movlw	32
 13918  00F1  3189  21C1  3180   	fcall	_LCDchar
 13919  00F4                     i1l4373:
 13920                           
 13921                           ;main.c: 355: };main.c: 358: if(lumAlarm.trigger == 1){
 13922  00F4  0020               	movlb	0	; select bank0
 13923  00F5  0361               	decf	_lumAlarm+1,w
 13924  00F6  1D03               	btfss	3,2
 13925  00F7  28F9               	goto	u380_21
 13926  00F8  28FA               	goto	u380_20
 13927  00F9                     u380_21:
 13928  00F9  2903               	goto	i1l4377
 13929  00FA                     u380_20:
 13930  00FA                     i1l4375:
 13931                           
 13932                           ;main.c: 359: LCDcmd(0x8D);
 13933  00FA  308D               	movlw	141
 13934  00FB  3189  21BA  3180   	fcall	_LCDcmd
 13935                           
 13936                           ;main.c: 360: LCDchar('L');
 13937  00FE  304C               	movlw	76
 13938  00FF  3189  21C1  3180   	fcall	_LCDchar
 13939                           
 13940                           ;main.c: 361: } else{
 13941  0102  290B               	goto	i1l4379
 13942  0103                     i1l4377:
 13943                           
 13944                           ;main.c: 362: LCDcmd(0x8D);
 13945  0103  308D               	movlw	141
 13946  0104  3189  21BA  3180   	fcall	_LCDcmd
 13947                           
 13948                           ;main.c: 363: LCDchar(' ');
 13949  0107  3020               	movlw	32
 13950  0108  3189  21C1  3180   	fcall	_LCDchar
 13951  010B                     i1l4379:
 13952                           
 13953                           ;main.c: 364: };main.c: 365: if(clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigge
      +                          r){
 13954  010B  0020               	movlb	0	; select bank0
 13955  010C  085F               	movf	_clkAlarm+3,w
 13956  010D  1D03               	btfss	3,2
 13957  010E  2910               	goto	u381_21
 13958  010F  2911               	goto	u381_20
 13959  0110                     u381_21:
 13960  0110  291B               	goto	i1l1149
 13961  0111                     u381_20:
 13962  0111                     i1l4381:
 13963  0111  0864               	movf	_tempAlarm+1,w
 13964  0112  1D03               	btfss	3,2
 13965  0113  2915               	goto	u382_21
 13966  0114  2916               	goto	u382_20
 13967  0115                     u382_21:
 13968  0115  291B               	goto	i1l1149
 13969  0116                     u382_20:
 13970  0116                     i1l4383:
 13971  0116  0861               	movf	_lumAlarm+1,w
 13972  0117  1903               	btfsc	3,2
 13973  0118  291A               	goto	u383_21
 13974  0119  291B               	goto	u383_20
 13975  011A                     u383_21:
 13976  011A  2987               	goto	i1l1158
 13977  011B                     u383_20:
 13978  011B                     i1l1149:
 13979                           
 13980                           ;main.c: 370: };main.c: 371: struct Time diff = {0,0,0};
 13981  011B  0021               	movlb	1	; select bank1
 13982  011C  0832               	movf	menuLCD_ISR@F12809^(0+128),w
 13983  011D  0020               	movlb	0	; select bank0
 13984  011E  00CA               	movwf	menuLCD_ISR@diff
 13985  011F  0021               	movlb	1	; select bank1
 13986  0120  0833               	movf	(menuLCD_ISR@F12809+1)^(0+128),w
 13987  0121  0020               	movlb	0	; select bank0
 13988  0122  00CB               	movwf	menuLCD_ISR@diff+1
 13989  0123  0021               	movlb	1	; select bank1
 13990  0124  0834               	movf	(menuLCD_ISR@F12809+2)^(0+128),w
 13991  0125  0020               	movlb	0	; select bank0
 13992  0126  00CC               	movwf	menuLCD_ISR@diff+2
 13993  0127                     i1l4387:
 13994                           
 13995                           ;main.c: 372: differenceBetweenTimePeriod( t, alarmPWMStart, &diff);
 13996  0127  084D               	movf	_t,w
 13997  0128  00F0               	movwf	differenceBetweenTimePeriod@start
 13998  0129  084E               	movf	_t+1,w
 13999  012A  00F1               	movwf	differenceBetweenTimePeriod@start+1
 14000  012B  084F               	movf	_t+2,w
 14001  012C  00F2               	movwf	differenceBetweenTimePeriod@start+2
 14002  012D  0021               	movlb	1	; select bank1
 14003  012E  0839               	movf	_alarmPWMStart^(0+128),w
 14004  012F  00F3               	movwf	differenceBetweenTimePeriod@stop
 14005  0130  083A               	movf	(_alarmPWMStart+1)^(0+128),w
 14006  0131  00F4               	movwf	differenceBetweenTimePeriod@stop+1
 14007  0132  083B               	movf	(_alarmPWMStart+2)^(0+128),w
 14008  0133  00F5               	movwf	differenceBetweenTimePeriod@stop+2
 14009  0134  304A               	movlw	(low (menuLCD_ISR@diff| 0))& (0+255)
 14010  0135  0020               	movlb	0	; select bank0
 14011  0136  00B5               	movwf	??_menuLCD_ISR
 14012  0137  0835               	movf	??_menuLCD_ISR,w
 14013  0138  00F6               	movwf	differenceBetweenTimePeriod@diff
 14014  0139  318C  2413  3180   	fcall	_differenceBetweenTimePeriod
 14015  013C                     i1l4389:
 14016                           
 14017                           ;main.c: 375: if(diff.s <= 5){
 14018  013C  3006               	movlw	6
 14019  013D  0020               	movlb	0	; select bank0
 14020  013E  024C               	subwf	menuLCD_ISR@diff+2,w
 14021  013F  1803               	skipnc
 14022  0140  2942               	goto	u384_21
 14023  0141  2943               	goto	u384_20
 14024  0142                     u384_21:
 14025  0142  296D               	goto	i1l1152
 14026  0143                     u384_20:
 14027  0143                     i1l4391:
 14028                           
 14029                           ;main.c: 376: if(PWM6EN==0){
 14030  0143  0027               	movlb	7	; select bank7
 14031  0144  1B8E               	btfsc	14,7	;volatile
 14032  0145  2947               	goto	u385_21
 14033  0146  2948               	goto	u385_20
 14034  0147                     u385_21:
 14035  0147  294E               	goto	i1l4395
 14036  0148                     u385_20:
 14037  0148                     i1l4393:
 14038                           
 14039                           ;main.c: 377: TMR2_StartTimer();
 14040  0148  3189  2190  3180   	fcall	_TMR2_StartTimer
 14041                           
 14042                           ;main.c: 378: PWM_Output_D4_Enable();
 14043  014B  3189  217B  3180   	fcall	_PWM_Output_D4_Enable
 14044  014E                     i1l4395:
 14045                           
 14046                           ;main.c: 379: };main.c: 380: if(dimingLed <= 1023){
 14047  014E  0020               	movlb	0	; select bank0
 14048  014F  0857               	movf	_dimingLed+1,w
 14049  0150  3A80               	xorlw	128
 14050  0151  00B5               	movwf	??_menuLCD_ISR
 14051  0152  3084               	movlw	132
 14052  0153  0235               	subwf	??_menuLCD_ISR,w
 14053  0154  1D03               	skipz
 14054  0155  2958               	goto	u386_25
 14055  0156  3000               	movlw	0
 14056  0157  0256               	subwf	_dimingLed,w
 14057  0158                     u386_25:
 14058  0158  1803               	skipnc
 14059  0159  295B               	goto	u386_21
 14060  015A  295C               	goto	u386_20
 14061  015B                     u386_21:
 14062  015B  2962               	goto	i1l4399
 14063  015C                     u386_20:
 14064  015C                     i1l4397:
 14065                           
 14066                           ;main.c: 381: dimingLed += 200;
 14067  015C  30C8               	movlw	200
 14068  015D  0020               	movlb	0	; select bank0
 14069  015E  07D6               	addwf	_dimingLed,f
 14070  015F  3000               	movlw	0
 14071  0160  3DD7               	addwfc	_dimingLed+1,f
 14072                           
 14073                           ;main.c: 382: } else{
 14074  0161  2965               	goto	i1l4401
 14075  0162                     i1l4399:
 14076                           
 14077                           ;main.c: 383: dimingLed = 0;
 14078  0162  0020               	movlb	0	; select bank0
 14079  0163  01D6               	clrf	_dimingLed
 14080  0164  01D7               	clrf	_dimingLed+1
 14081  0165                     i1l4401:
 14082                           
 14083                           ;main.c: 384: };main.c: 385: PWM6_LoadDutyValue(dimingLed);
 14084  0165  0857               	movf	_dimingLed+1,w
 14085  0166  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 14086  0167  0856               	movf	_dimingLed,w
 14087  0168  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 14088  0169  318A  2287  3180   	fcall	i1_PWM6_LoadDutyValue
 14089                           
 14090                           ;main.c: 386: } else if(PWM6EN==1){
 14091  016C  2987               	goto	i1l1158
 14092  016D                     i1l1152:
 14093  016D  0027               	movlb	7	; select bank7
 14094  016E  1F8E               	btfss	14,7	;volatile
 14095  016F  2971               	goto	u387_21
 14096  0170  2972               	goto	u387_20
 14097  0171                     u387_21:
 14098  0171  2987               	goto	i1l1158
 14099  0172                     u387_20:
 14100  0172                     i1l4403:
 14101                           
 14102                           ;main.c: 387: PWM6_LoadDutyValue(0);
 14103  0172  3000               	movlw	0
 14104  0173  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 14105  0174  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 14106  0175  318A  2287  3180   	fcall	i1_PWM6_LoadDutyValue
 14107  0178                     i1l4405:
 14108                           
 14109                           ;main.c: 388: TMR2_StopTimer();
 14110  0178  3189  2194  3180   	fcall	i1_TMR2_StopTimer
 14111  017B                     i1l4407:
 14112                           
 14113                           ;main.c: 389: PWM_Output_D4_Disable();
 14114  017B  3189  2181  3180   	fcall	i1_PWM_Output_D4_Disable
 14115  017E  2987               	goto	i1l1158
 14116  017F                     i1l4409:
 14117                           
 14118                           ;main.c: 393: LCDcmd(0x8F);
 14119  017F  308F               	movlw	143
 14120  0180  3189  21BA  3180   	fcall	_LCDcmd
 14121                           
 14122                           ;main.c: 394: LCDchar('a');
 14123  0183  3061               	movlw	97
 14124  0184  3189  21C1  3180   	fcall	_LCDchar
 14125  0187                     i1l1158:
 14126                           
 14127                           ;main.c: 395: };main.c: 397: LCDcmd(0xc0);
 14128  0187  30C0               	movlw	192
 14129  0188  3189  21BA  3180   	fcall	_LCDcmd
 14130  018B                     i1l4411:
 14131                           
 14132                           ;main.c: 398: char tt[4];;main.c: 399: if(editingTempAlarm){
 14133  018B  0020               	movlb	0	; select bank0
 14134  018C  0859               	movf	_editingTempAlarm,w
 14135  018D  1903               	btfsc	3,2
 14136  018E  2990               	goto	u388_21
 14137  018F  2991               	goto	u388_20
 14138  0190                     u388_21:
 14139  0190  29A1               	goto	i1l4415
 14140  0191                     u388_20:
 14141  0191                     i1l4413:
 14142                           
 14143                           ;main.c: 400: sprintf(tt, "%02d C", tempAlarm.alarmTemp);
 14144  0191  3019               	movlw	low (STR_3| (0+32768))
 14145  0192  00A0               	movwf	sprintf@f
 14146  0193  3090               	movlw	high (STR_3| (0+32768))
 14147  0194  00A1               	movwf	sprintf@f+1
 14148  0195  0863               	movf	_tempAlarm,w
 14149  0196  00B5               	movwf	??_menuLCD_ISR
 14150  0197  01B6               	clrf	??_menuLCD_ISR+1
 14151  0198  0835               	movf	??_menuLCD_ISR,w
 14152  0199  00A2               	movwf	?_sprintf+2
 14153  019A  0836               	movf	??_menuLCD_ISR+1,w
 14154  019B  00A3               	movwf	?_sprintf+3
 14155  019C  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 14156  019D  3182  2230  3180   	fcall	_sprintf
 14157                           
 14158                           ;main.c: 401: } else{
 14159  01A0  29B0               	goto	i1l4417
 14160  01A1                     i1l4415:
 14161                           
 14162                           ;main.c: 402: sprintf(tt, "%02d C", temp);
 14163  01A1  3019               	movlw	low (STR_3| (0+32768))
 14164  01A2  00A0               	movwf	sprintf@f
 14165  01A3  3090               	movlw	high (STR_3| (0+32768))
 14166  01A4  00A1               	movwf	sprintf@f+1
 14167  01A5  085B               	movf	_temp,w
 14168  01A6  00B5               	movwf	??_menuLCD_ISR
 14169  01A7  01B6               	clrf	??_menuLCD_ISR+1
 14170  01A8  0835               	movf	??_menuLCD_ISR,w
 14171  01A9  00A2               	movwf	?_sprintf+2
 14172  01AA  0836               	movf	??_menuLCD_ISR+1,w
 14173  01AB  00A3               	movwf	?_sprintf+3
 14174  01AC  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 14175  01AD  3182  2230  3180   	fcall	_sprintf
 14176  01B0                     i1l4417:
 14177                           
 14178                           ;main.c: 403: };main.c: 404: LCDstr(tt);
 14179  01B0  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 14180  01B1  318A  2273  3180   	fcall	_LCDstr
 14181  01B4                     i1l4419:
 14182                           
 14183                           ;main.c: 406: LCDcmd(0xcd);
 14184  01B4  30CD               	movlw	205
 14185  01B5  3189  21BA  3180   	fcall	_LCDcmd
 14186  01B8                     i1l4421:
 14187                           
 14188                           ;main.c: 407: char l[3];;main.c: 409: if(editingLumAlarm){
 14189  01B8  0020               	movlb	0	; select bank0
 14190  01B9  0858               	movf	_editingLumAlarm,w
 14191  01BA  1903               	btfsc	3,2
 14192  01BB  29BD               	goto	u389_21
 14193  01BC  29BE               	goto	u389_20
 14194  01BD                     u389_21:
 14195  01BD  29CE               	goto	i1l4425
 14196  01BE                     u389_20:
 14197  01BE                     i1l4423:
 14198                           
 14199                           ;main.c: 410: sprintf(l, "L %d", lumAlarm.alarmLum);
 14200  01BE  3020               	movlw	low (STR_5| (0+32768))
 14201  01BF  00A0               	movwf	sprintf@f
 14202  01C0  3090               	movlw	high (STR_5| (0+32768))
 14203  01C1  00A1               	movwf	sprintf@f+1
 14204  01C2  0860               	movf	_lumAlarm,w
 14205  01C3  00B5               	movwf	??_menuLCD_ISR
 14206  01C4  01B6               	clrf	??_menuLCD_ISR+1
 14207  01C5  0835               	movf	??_menuLCD_ISR,w
 14208  01C6  00A2               	movwf	?_sprintf+2
 14209  01C7  0836               	movf	??_menuLCD_ISR+1,w
 14210  01C8  00A3               	movwf	?_sprintf+3
 14211  01C9  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 14212  01CA  3182  2230  3180   	fcall	_sprintf
 14213                           
 14214                           ;main.c: 411: } else{
 14215  01CD  29DD               	goto	i1l4427
 14216  01CE                     i1l4425:
 14217                           
 14218                           ;main.c: 412: sprintf(l, "L %d", lumLevel);
 14219  01CE  3020               	movlw	low (STR_5| (0+32768))
 14220  01CF  00A0               	movwf	sprintf@f
 14221  01D0  3090               	movlw	high (STR_5| (0+32768))
 14222  01D1  00A1               	movwf	sprintf@f+1
 14223  01D2  085A               	movf	_lumLevel,w
 14224  01D3  00B5               	movwf	??_menuLCD_ISR
 14225  01D4  01B6               	clrf	??_menuLCD_ISR+1
 14226  01D5  0835               	movf	??_menuLCD_ISR,w
 14227  01D6  00A2               	movwf	?_sprintf+2
 14228  01D7  0836               	movf	??_menuLCD_ISR+1,w
 14229  01D8  00A3               	movwf	?_sprintf+3
 14230  01D9  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 14231  01DA  3182  2230  3180   	fcall	_sprintf
 14232  01DD                     i1l4427:
 14233                           
 14234                           ;main.c: 413: };main.c: 414: LCDstr(l);
 14235  01DD  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 14236  01DE  318A  2273  3180   	fcall	_LCDstr
 14237  01E1                     i1l4429:
 14238                           
 14239                           ;main.c: 416: if(mode == 1){
 14240  01E1  0020               	movlb	0	; select bank0
 14241  01E2  0352               	decf	_mode,w
 14242  01E3  0453               	iorwf	_mode+1,w
 14243  01E4  1D03               	btfss	3,2
 14244  01E5  29E7               	goto	u390_21
 14245  01E6  29E8               	goto	u390_20
 14246  01E7                     u390_21:
 14247  01E7  2A0C               	goto	i1l4443
 14248  01E8                     u390_20:
 14249  01E8                     i1l4431:
 14250                           
 14251                           ;main.c: 417: if(editingClockAlarm == 1){
 14252  01E8  0354               	decf	_editingClockAlarm,w
 14253  01E9  0455               	iorwf	_editingClockAlarm+1,w
 14254  01EA  1D03               	btfss	3,2
 14255  01EB  29ED               	goto	u391_21
 14256  01EC  29EE               	goto	u391_20
 14257  01ED                     u391_21:
 14258  01ED  29F3               	goto	i1l4435
 14259  01EE                     u391_20:
 14260  01EE                     i1l4433:
 14261                           
 14262                           ;main.c: 418: LCDcmd(0x81);
 14263  01EE  3081               	movlw	129
 14264  01EF  3189  21BA  3180   	fcall	_LCDcmd
 14265                           
 14266                           ;main.c: 419: } else if(editingClockAlarm == 2){
 14267  01F2  2A2F               	goto	i1l1175
 14268  01F3                     i1l4435:
 14269  01F3  3002               	movlw	2
 14270  01F4  0654               	xorwf	_editingClockAlarm,w
 14271  01F5  0455               	iorwf	_editingClockAlarm+1,w
 14272  01F6  1D03               	btfss	3,2
 14273  01F7  29F9               	goto	u392_21
 14274  01F8  29FA               	goto	u392_20
 14275  01F9                     u392_21:
 14276  01F9  29FF               	goto	i1l4439
 14277  01FA                     u392_20:
 14278  01FA                     i1l4437:
 14279                           
 14280                           ;main.c: 420: LCDcmd(0x84);
 14281  01FA  3084               	movlw	132
 14282  01FB  3189  21BA  3180   	fcall	_LCDcmd
 14283                           
 14284                           ;main.c: 421: } else if(editingClockAlarm == 3){
 14285  01FE  2A2F               	goto	i1l1175
 14286  01FF                     i1l4439:
 14287  01FF  3003               	movlw	3
 14288  0200  0654               	xorwf	_editingClockAlarm,w
 14289  0201  0455               	iorwf	_editingClockAlarm+1,w
 14290  0202  1D03               	btfss	3,2
 14291  0203  2A05               	goto	u393_21
 14292  0204  2A06               	goto	u393_20
 14293  0205                     u393_21:
 14294  0205  2A0B               	goto	i1l1165
 14295  0206                     u393_20:
 14296  0206                     i1l4441:
 14297                           
 14298                           ;main.c: 422: LCDcmd(0x87);
 14299  0206  3087               	movlw	135
 14300  0207  3189  21BA  3180   	fcall	_LCDcmd
 14301  020A  2A2F               	goto	i1l1175
 14302  020B                     i1l1165:
 14303                           
 14304                           ;main.c: 423: };main.c: 424: } else if(mode == 2){
 14305  020B  2A2F               	goto	i1l1175
 14306  020C                     i1l4443:
 14307  020C  3002               	movlw	2
 14308  020D  0652               	xorwf	_mode,w
 14309  020E  0453               	iorwf	_mode+1,w
 14310  020F  1D03               	btfss	3,2
 14311  0210  2A12               	goto	u394_21
 14312  0211  2A13               	goto	u394_20
 14313  0212                     u394_21:
 14314  0212  2A18               	goto	i1l4447
 14315  0213                     u394_20:
 14316  0213                     i1l4445:
 14317                           
 14318                           ;main.c: 425: LCDcmd(0xc1);
 14319  0213  30C1               	movlw	193
 14320  0214  3189  21BA  3180   	fcall	_LCDcmd
 14321                           
 14322                           ;main.c: 426: } else if(mode == 3){
 14323  0217  2A2F               	goto	i1l1175
 14324  0218                     i1l4447:
 14325  0218  3003               	movlw	3
 14326  0219  0652               	xorwf	_mode,w
 14327  021A  0453               	iorwf	_mode+1,w
 14328  021B  1D03               	btfss	3,2
 14329  021C  2A1E               	goto	u395_21
 14330  021D  2A1F               	goto	u395_20
 14331  021E                     u395_21:
 14332  021E  2A24               	goto	i1l4451
 14333  021F                     u395_20:
 14334  021F                     i1l4449:
 14335                           
 14336                           ;main.c: 427: LCDcmd(0xcf);
 14337  021F  30CF               	movlw	207
 14338  0220  3189  21BA  3180   	fcall	_LCDcmd
 14339                           
 14340                           ;main.c: 428: } else if(mode == 4){
 14341  0223  2A2F               	goto	i1l1175
 14342  0224                     i1l4451:
 14343  0224  3004               	movlw	4
 14344  0225  0652               	xorwf	_mode,w
 14345  0226  0453               	iorwf	_mode+1,w
 14346  0227  1D03               	btfss	3,2
 14347  0228  2A2A               	goto	u396_21
 14348  0229  2A2B               	goto	u396_20
 14349  022A                     u396_21:
 14350  022A  2A2F               	goto	i1l1175
 14351  022B                     u396_20:
 14352  022B                     i1l4453:
 14353                           
 14354                           ;main.c: 429: LCDcmd(0x8f);
 14355  022B  308F               	movlw	143
 14356  022C  3189  21BA  3180   	fcall	_LCDcmd
 14357  022F                     i1l1175:
 14358  022F  0008               	return
 14359  0230                     __end_of_menuLCD_ISR:
 14360                           
 14361                           	psect	text40
 14362  0994                     __ptext40:	
 14363 ;; *************** function i1_TMR2_StopTimer *****************
 14364 ;; Defined at:
 14365 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 14366 ;; Parameters:    Size  Location     Type
 14367 ;;		None
 14368 ;; Auto vars:     Size  Location     Type
 14369 ;;		None
 14370 ;; Return value:  Size  Location     Type
 14371 ;;                  1    wreg      void 
 14372 ;; Registers used:
 14373 ;;		status,2, status,0, pclath, cstack
 14374 ;; Tracked objects:
 14375 ;;		On entry : 0/0
 14376 ;;		On exit  : 0/0
 14377 ;;		Unchanged: 0/0
 14378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14383 ;;Total ram usage:        0 bytes
 14384 ;; Hardware stack levels used:    1
 14385 ;; Hardware stack levels required when called:    1
 14386 ;; This function calls:
 14387 ;;		i1_TMR2_Stop
 14388 ;; This function is called by:
 14389 ;;		_menuLCD_ISR
 14390 ;; This function uses a non-reentrant model
 14391 ;;
 14392                           
 14393                           
 14394                           ;psect for function i1_TMR2_StopTimer
 14395  0994                     i1_TMR2_StopTimer:
 14396  0994                     i1l4087:	
 14397                           ;incstack = 0
 14398                           ; Regs used in i1_TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 14399                           
 14400                           
 14401                           ;tmr2.c: 119: TMR2_Stop();
 14402  0994  3189  2184  3189   	fcall	i1_TMR2_Stop
 14403  0997                     i1l767:
 14404  0997  0008               	return
 14405  0998                     __end_ofi1_TMR2_StopTimer:
 14406                           
 14407                           	psect	text41
 14408  0984                     __ptext41:	
 14409 ;; *************** function i1_TMR2_Stop *****************
 14410 ;; Defined at:
 14411 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 14412 ;; Parameters:    Size  Location     Type
 14413 ;;		None
 14414 ;; Auto vars:     Size  Location     Type
 14415 ;;		None
 14416 ;; Return value:  Size  Location     Type
 14417 ;;                  1    wreg      void 
 14418 ;; Registers used:
 14419 ;;		None
 14420 ;; Tracked objects:
 14421 ;;		On entry : 0/0
 14422 ;;		On exit  : 0/0
 14423 ;;		Unchanged: 0/0
 14424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14429 ;;Total ram usage:        0 bytes
 14430 ;; Hardware stack levels used:    1
 14431 ;; This function calls:
 14432 ;;		Nothing
 14433 ;; This function is called by:
 14434 ;;		i1_TMR2_StopTimer
 14435 ;; This function uses a non-reentrant model
 14436 ;;
 14437                           
 14438                           
 14439                           ;psect for function i1_TMR2_Stop
 14440  0984                     i1_TMR2_Stop:
 14441  0984                     i1l3809:	
 14442                           ;incstack = 0
 14443                           ; Regs used in i1_TMR2_Stop: []
 14444                           
 14445                           
 14446                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 14447  0984  0025               	movlb	5	; select bank5
 14448  0985  138E               	bcf	14,7	;volatile
 14449  0986                     i1l764:
 14450  0986  0008               	return
 14451  0987                     __end_ofi1_TMR2_Stop:
 14452                           
 14453                           	psect	text42
 14454  0981                     __ptext42:	
 14455 ;; *************** function i1_PWM_Output_D4_Disable *****************
 14456 ;; Defined at:
 14457 ;;		line 233 in file "main.c"
 14458 ;; Parameters:    Size  Location     Type
 14459 ;;		None
 14460 ;; Auto vars:     Size  Location     Type
 14461 ;;		None
 14462 ;; Return value:  Size  Location     Type
 14463 ;;                  1    wreg      void 
 14464 ;; Registers used:
 14465 ;;		None
 14466 ;; Tracked objects:
 14467 ;;		On entry : 0/0
 14468 ;;		On exit  : 0/0
 14469 ;;		Unchanged: 0/0
 14470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14475 ;;Total ram usage:        0 bytes
 14476 ;; Hardware stack levels used:    1
 14477 ;; This function calls:
 14478 ;;		Nothing
 14479 ;; This function is called by:
 14480 ;;		_menuLCD_ISR
 14481 ;; This function uses a non-reentrant model
 14482 ;;
 14483                           
 14484                           
 14485                           ;psect for function i1_PWM_Output_D4_Disable
 14486  0981                     i1_PWM_Output_D4_Disable:
 14487  0981                     i1l4089:	
 14488                           ;incstack = 0
 14489                           ; Regs used in i1_PWM_Output_D4_Disable: []
 14490                           
 14491                           
 14492                           ;main.c: 234: PWM6EN = 0;
 14493  0981  0027               	movlb	7	; select bank7
 14494  0982  138E               	bcf	14,7	;volatile
 14495  0983                     i1l1094:
 14496  0983  0008               	return
 14497  0984                     __end_ofi1_PWM_Output_D4_Disable:
 14498                           
 14499                           	psect	text43
 14500  0A87                     __ptext43:	
 14501 ;; *************** function i1_PWM6_LoadDutyValue *****************
 14502 ;; Defined at:
 14503 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 14504 ;; Parameters:    Size  Location     Type
 14505 ;;  dutyValue       2    0[COMMON] unsigned int 
 14506 ;; Auto vars:     Size  Location     Type
 14507 ;;		None
 14508 ;; Return value:  Size  Location     Type
 14509 ;;                  1    wreg      void 
 14510 ;; Registers used:
 14511 ;;		wreg, status,2, status,0
 14512 ;; Tracked objects:
 14513 ;;		On entry : 0/0
 14514 ;;		On exit  : 0/0
 14515 ;;		Unchanged: 0/0
 14516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14519 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14520 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14521 ;;Total ram usage:        4 bytes
 14522 ;; Hardware stack levels used:    1
 14523 ;; This function calls:
 14524 ;;		Nothing
 14525 ;; This function is called by:
 14526 ;;		_menuLCD_ISR
 14527 ;; This function uses a non-reentrant model
 14528 ;;
 14529                           
 14530                           
 14531                           ;psect for function i1_PWM6_LoadDutyValue
 14532  0A87                     i1_PWM6_LoadDutyValue:
 14533  0A87                     i1l4085:	
 14534                           ;incstack = 0
 14535                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 14536                           
 14537                           
 14538                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 14539  0A87  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 14540  0A88  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 14541  0A89  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 14542  0A8A  00F2               	movwf	??i1_PWM6_LoadDutyValue
 14543  0A8B  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 14544  0A8C  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 14545  0A8D  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 14546  0A8E  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 14547  0A8F  0872               	movf	??i1_PWM6_LoadDutyValue,w
 14548  0A90  0027               	movlb	7	; select bank7
 14549  0A91  008D               	movwf	13	;volatile
 14550                           
 14551                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 14552  0A92  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 14553  0A93  3903               	andlw	3
 14554  0A94  00F2               	movwf	??i1_PWM6_LoadDutyValue
 14555  0A95  3005               	movlw	5
 14556  0A96                     u344_25:
 14557  0A96  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 14558  0A97  3EFF               	addlw	-1
 14559  0A98  1D03               	skipz
 14560  0A99  2A96               	goto	u344_25
 14561  0A9A  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 14562  0A9B  008C               	movwf	12	;volatile
 14563  0A9C                     i1l722:
 14564  0A9C  0008               	return
 14565  0A9D                     __end_ofi1_PWM6_LoadDutyValue:
 14566                           
 14567                           	psect	text44
 14568  0230                     __ptext44:	
 14569 ;; *************** function _sprintf *****************
 14570 ;; Defined at:
 14571 ;;		line 505 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
 14572 ;; Parameters:    Size  Location     Type
 14573 ;;  sp              1    wreg     PTR unsigned char 
 14574 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 14575 ;;  f               2    0[BANK0 ] PTR const unsigned char 
 14576 ;;		 -> STR_6(5), STR_5(5), STR_4(7), STR_3(7), 
 14577 ;;		 -> STR_2(15), STR_1(15), 
 14578 ;; Auto vars:     Size  Location     Type
 14579 ;;  sp              1   20[BANK0 ] PTR unsigned char 
 14580 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 14581 ;;  tmpval          4    0        struct .
 14582 ;;  width           2   17[BANK0 ] int 
 14583 ;;  val             2   14[BANK0 ] unsigned int 
 14584 ;;  cp              2    0        PTR const unsigned char 
 14585 ;;  len             2    0        unsigned int 
 14586 ;;  c               1   19[BANK0 ] unsigned char 
 14587 ;;  flag            1   16[BANK0 ] unsigned char 
 14588 ;;  prec            1   13[BANK0 ] char 
 14589 ;;  ap              1   12[BANK0 ] PTR void [1]
 14590 ;;		 -> ?_sprintf(2), 
 14591 ;; Return value:  Size  Location     Type
 14592 ;;                  2    0[BANK0 ] int 
 14593 ;; Registers used:
 14594 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14595 ;; Tracked objects:
 14596 ;;		On entry : 0/0
 14597 ;;		On exit  : 0/0
 14598 ;;		Unchanged: 0/0
 14599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14600 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14601 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14602 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14603 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14604 ;;Total ram usage:       21 bytes
 14605 ;; Hardware stack levels used:    1
 14606 ;; Hardware stack levels required when called:    1
 14607 ;; This function calls:
 14608 ;;		___lwdiv
 14609 ;;		___lwmod
 14610 ;;		___wmul
 14611 ;;		_isdigit
 14612 ;; This function is called by:
 14613 ;;		_menuLCD_ISR
 14614 ;; This function uses a non-reentrant model
 14615 ;;
 14616                           
 14617                           
 14618                           ;psect for function _sprintf
 14619  0230                     _sprintf:
 14620                           
 14621                           ;incstack = 0
 14622                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14623                           ;sprintf@sp stored from wreg
 14624  0230  0020               	movlb	0	; select bank0
 14625  0231  00B4               	movwf	sprintf@sp
 14626  0232                     i1l3939:
 14627                           
 14628                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 14629  0232  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 14630  0233  00A8               	movwf	??_sprintf
 14631  0234  0828               	movf	??_sprintf,w
 14632  0235  00AC               	movwf	sprintf@ap
 14633                           
 14634                           ;doprnt.c: 553: while((c = *f++)) {
 14635  0236  2BB4               	goto	i1l4043
 14636  0237                     i1l3941:
 14637                           
 14638                           ;doprnt.c: 555: if(c != '%')
 14639  0237  3025               	movlw	37
 14640  0238  0633               	xorwf	sprintf@c,w
 14641  0239  1903               	btfsc	3,2
 14642  023A  2A3C               	goto	u325_21
 14643  023B  2A3D               	goto	u325_20
 14644  023C                     u325_21:
 14645  023C  2A49               	goto	i1l3947
 14646  023D                     u325_20:
 14647  023D                     i1l3943:
 14648                           
 14649                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 14650  023D  0833               	movf	sprintf@c,w
 14651  023E  00A8               	movwf	??_sprintf
 14652  023F  0834               	movf	sprintf@sp,w
 14653  0240  0086               	movwf	6
 14654  0241  0187               	clrf	7
 14655  0242  0828               	movf	??_sprintf,w
 14656  0243  0081               	movwf	1
 14657  0244                     i1l3945:
 14658  0244  3001               	movlw	1
 14659  0245  00A8               	movwf	??_sprintf
 14660  0246  0828               	movf	??_sprintf,w
 14661  0247  07B4               	addwf	sprintf@sp,f
 14662                           
 14663                           ;doprnt.c: 559: continue;
 14664  0248  2BB4               	goto	i1l4043
 14665  0249                     i1l3947:
 14666                           
 14667                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 14668  0249  01B1               	clrf	sprintf@width
 14669  024A  01B2               	clrf	sprintf@width+1
 14670                           
 14671                           ;doprnt.c: 565: flag = 0;
 14672  024B  01B0               	clrf	sprintf@flag
 14673  024C  2A52               	goto	i1l3953
 14674  024D                     i1l1493:	
 14675                           ;doprnt.c: 596: case '0':
 14676                           
 14677                           
 14678                           ;doprnt.c: 597: flag |= 0x04;
 14679  024D  1530               	bsf	sprintf@flag,2
 14680  024E                     i1l3949:
 14681                           
 14682                           ;doprnt.c: 598: f++;
 14683  024E  3001               	movlw	1
 14684  024F  07A0               	addwf	sprintf@f,f
 14685  0250  3000               	movlw	0
 14686  0251  3DA1               	addwfc	sprintf@f+1,f
 14687  0252                     i1l3953:	
 14688                           ;doprnt.c: 599: continue;
 14689                           
 14690  0252  0820               	movf	sprintf@f,w
 14691  0253  0084               	movwf	4
 14692  0254  0821               	movf	sprintf@f+1,w
 14693  0255  0085               	movwf	5
 14694  0256  0800               	movf	0,w	;code access
 14695                           
 14696                           ; Switch size 1, requested type "simple"
 14697                           ; Number of cases is 1, Range of values is 48 to 48
 14698                           ; switch strategies available:
 14699                           ; Name         Instructions Cycles
 14700                           ; simple_byte            4     3 (average)
 14701                           ; direct_byte           11     9 (fixed)
 14702                           ; jumptable            263     9 (fixed)
 14703                           ;	Chosen strategy is simple_byte
 14704  0257  3A30               	xorlw	48	; case 48
 14705  0258  1903               	skipnz
 14706  0259  2A4D               	goto	i1l1493
 14707  025A  2A5B               	goto	i1l3955
 14708  025B                     i1l3955:
 14709                           
 14710                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 14711  025B  0820               	movf	sprintf@f,w
 14712  025C  0084               	movwf	4
 14713  025D  0821               	movf	sprintf@f+1,w
 14714  025E  0085               	movwf	5
 14715  025F  0800               	movf	0,w	;code access
 14716  0260  318A  224F  3182   	fcall	_isdigit
 14717  0263  1C03               	btfss	3,0
 14718  0264  2A66               	goto	u326_21
 14719  0265  2A67               	goto	u326_20
 14720  0266                     u326_21:
 14721  0266  2A9A               	goto	i1l3969
 14722  0267                     u326_20:
 14723  0267                     i1l3957:
 14724                           
 14725                           ;doprnt.c: 615: width = 0;
 14726  0267  0020               	movlb	0	; select bank0
 14727  0268  01B1               	clrf	sprintf@width
 14728  0269  01B2               	clrf	sprintf@width+1
 14729  026A                     i1l3959:
 14730                           
 14731                           ;doprnt.c: 617: width *= 10;
 14732  026A  300A               	movlw	10
 14733  026B  00F0               	movwf	___wmul@multiplier
 14734  026C  3000               	movlw	0
 14735  026D  00F1               	movwf	___wmul@multiplier+1
 14736  026E  0020               	movlb	0	; select bank0
 14737  026F  0832               	movf	sprintf@width+1,w
 14738  0270  00F3               	movwf	___wmul@multiplicand+1
 14739  0271  0831               	movf	sprintf@width,w
 14740  0272  00F2               	movwf	___wmul@multiplicand
 14741  0273  318B  2366  3182   	fcall	___wmul
 14742  0276  0871               	movf	?___wmul+1,w
 14743  0277  0020               	movlb	0	; select bank0
 14744  0278  00B2               	movwf	sprintf@width+1
 14745  0279  0870               	movf	?___wmul,w
 14746  027A  00B1               	movwf	sprintf@width
 14747  027B                     i1l3961:
 14748                           
 14749                           ;doprnt.c: 618: width += *f++ - '0';
 14750  027B  0820               	movf	sprintf@f,w
 14751  027C  0084               	movwf	4
 14752  027D  0821               	movf	sprintf@f+1,w
 14753  027E  0085               	movwf	5
 14754  027F  0800               	movf	0,w	;code access
 14755  0280  3ED0               	addlw	208
 14756  0281  00A8               	movwf	??_sprintf
 14757  0282  30FF               	movlw	255
 14758  0283  1803               	skipnc
 14759  0284  3000               	movlw	0
 14760  0285  00A9               	movwf	??_sprintf+1
 14761  0286  0828               	movf	??_sprintf,w
 14762  0287  07B1               	addwf	sprintf@width,f
 14763  0288  0829               	movf	??_sprintf+1,w
 14764  0289  3DB2               	addwfc	sprintf@width+1,f
 14765  028A                     i1l3963:
 14766  028A  3001               	movlw	1
 14767  028B  07A0               	addwf	sprintf@f,f
 14768  028C  3000               	movlw	0
 14769  028D  3DA1               	addwfc	sprintf@f+1,f
 14770  028E                     i1l3965:
 14771                           
 14772                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 14773  028E  0820               	movf	sprintf@f,w
 14774  028F  0084               	movwf	4
 14775  0290  0821               	movf	sprintf@f+1,w
 14776  0291  0085               	movwf	5
 14777  0292  0800               	movf	0,w	;code access
 14778  0293  318A  224F  3182   	fcall	_isdigit
 14779  0296  1803               	btfsc	3,0
 14780  0297  2A99               	goto	u327_21
 14781  0298  2A9A               	goto	u327_20
 14782  0299                     u327_21:
 14783  0299  2A6A               	goto	i1l3959
 14784  029A                     u327_20:
 14785  029A                     i1l3969:
 14786  029A  0020               	movlb	0	; select bank0
 14787  029B  0821               	movf	sprintf@f+1,w
 14788  029C  00A9               	movwf	??_sprintf+1
 14789  029D  0820               	movf	sprintf@f,w
 14790  029E  00A8               	movwf	??_sprintf
 14791  029F  0AA0               	incf	sprintf@f,f
 14792  02A0  1903               	skipnz
 14793  02A1  0AA1               	incf	sprintf@f+1,f
 14794  02A2  0828               	movf	??_sprintf,w
 14795  02A3  0084               	movwf	4
 14796  02A4  0829               	movf	??_sprintf+1,w
 14797  02A5  0085               	movwf	5
 14798  02A6  0800               	movf	0,w	;code access
 14799  02A7  00B3               	movwf	sprintf@c
 14800                           
 14801                           ; Switch size 1, requested type "simple"
 14802                           ; Number of cases is 3, Range of values is 0 to 105
 14803                           ; switch strategies available:
 14804                           ; Name         Instructions Cycles
 14805                           ; simple_byte           10     6 (average)
 14806                           ; direct_byte          218     6 (fixed)
 14807                           ; jumptable            260     6 (fixed)
 14808                           ;	Chosen strategy is simple_byte
 14809  02A8  3A00               	xorlw	0	; case 0
 14810  02A9  1903               	skipnz
 14811  02AA  2BC8               	goto	i1l4045
 14812  02AB  3A64               	xorlw	100	; case 100
 14813  02AC  1903               	skipnz
 14814  02AD  2AB2               	goto	i1l3971
 14815  02AE  3A0D               	xorlw	13	; case 105
 14816  02AF  1903               	skipnz
 14817  02B0  2AB2               	goto	i1l3971
 14818  02B1  2BB4               	goto	i1l4043
 14819  02B2                     i1l3971:
 14820                           
 14821                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 14822  02B2  082C               	movf	sprintf@ap,w
 14823  02B3  0086               	movwf	6
 14824  02B4  0187               	clrf	7
 14825  02B5  3F40               	moviw [0]fsr1
 14826  02B6  00AE               	movwf	sprintf@val
 14827  02B7  3F41               	moviw [1]fsr1
 14828  02B8  00AF               	movwf	sprintf@val+1
 14829  02B9                     i1l3973:
 14830  02B9  3002               	movlw	2
 14831  02BA  00A8               	movwf	??_sprintf
 14832  02BB  0828               	movf	??_sprintf,w
 14833  02BC  07AC               	addwf	sprintf@ap,f
 14834  02BD                     i1l3975:
 14835                           
 14836                           ;doprnt.c: 1287: if((int)val < 0) {
 14837  02BD  1FAF               	btfss	sprintf@val+1,7
 14838  02BE  2AC0               	goto	u328_21
 14839  02BF  2AC1               	goto	u328_20
 14840  02C0                     u328_21:
 14841  02C0  2ACA               	goto	i1l3981
 14842  02C1                     u328_20:
 14843  02C1                     i1l3977:
 14844                           
 14845                           ;doprnt.c: 1288: flag |= 0x03;
 14846  02C1  3003               	movlw	3
 14847  02C2  00A8               	movwf	??_sprintf
 14848  02C3  0828               	movf	??_sprintf,w
 14849  02C4  04B0               	iorwf	sprintf@flag,f
 14850  02C5                     i1l3979:
 14851                           
 14852                           ;doprnt.c: 1289: val = -val;
 14853  02C5  09AE               	comf	sprintf@val,f
 14854  02C6  09AF               	comf	sprintf@val+1,f
 14855  02C7  0AAE               	incf	sprintf@val,f
 14856  02C8  1903               	skipnz
 14857  02C9  0AAF               	incf	sprintf@val+1,f
 14858  02CA                     i1l3981:
 14859                           
 14860                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 14861  02CA  01B3               	clrf	sprintf@c
 14862  02CB  0AB3               	incf	sprintf@c,f
 14863  02CC                     i1l3987:
 14864                           
 14865                           ;doprnt.c: 1332: if(val < dpowers[c])
 14866  02CC  0833               	movf	sprintf@c,w
 14867  02CD  00A8               	movwf	??_sprintf
 14868  02CE  01A9               	clrf	??_sprintf+1
 14869  02CF  35A8               	lslf	??_sprintf,f
 14870  02D0  0DA9               	rlf	??_sprintf+1,f
 14871  02D1  300F               	movlw	low (_dpowers| (0+32768))
 14872  02D2  0728               	addwf	??_sprintf,w
 14873  02D3  0084               	movwf	4
 14874  02D4  3090               	movlw	high (_dpowers| (0+32768))
 14875  02D5  3D29               	addwfc	??_sprintf+1,w
 14876  02D6  0085               	movwf	5
 14877  02D7  3F00               	moviw [0]fsr0
 14878  02D8  00AA               	movwf	??_sprintf+2
 14879  02D9  3F01               	moviw [1]fsr0
 14880  02DA  00AB               	movwf	??_sprintf+3
 14881  02DB  082B               	movf	??_sprintf+3,w
 14882  02DC  022F               	subwf	sprintf@val+1,w
 14883  02DD  1D03               	skipz
 14884  02DE  2AE1               	goto	u329_25
 14885  02DF  082A               	movf	??_sprintf+2,w
 14886  02E0  022E               	subwf	sprintf@val,w
 14887  02E1                     u329_25:
 14888  02E1  1803               	skipnc
 14889  02E2  2AE4               	goto	u329_21
 14890  02E3  2AE5               	goto	u329_20
 14891  02E4                     u329_21:
 14892  02E4  2AE6               	goto	i1l3991
 14893  02E5                     u329_20:
 14894  02E5  2AF0               	goto	i1l3993
 14895  02E6                     i1l3991:
 14896  02E6  3001               	movlw	1
 14897  02E7  00A8               	movwf	??_sprintf
 14898  02E8  0828               	movf	??_sprintf,w
 14899  02E9  07B3               	addwf	sprintf@c,f
 14900  02EA  3005               	movlw	5
 14901  02EB  0633               	xorwf	sprintf@c,w
 14902  02EC  1D03               	btfss	3,2
 14903  02ED  2AEF               	goto	u330_21
 14904  02EE  2AF0               	goto	u330_20
 14905  02EF                     u330_21:
 14906  02EF  2ACC               	goto	i1l3987
 14907  02F0                     u330_20:
 14908  02F0                     i1l3993:
 14909                           
 14910                           ;doprnt.c: 1371: if(width && flag & 0x03)
 14911  02F0  0831               	movf	sprintf@width,w
 14912  02F1  0432               	iorwf	sprintf@width+1,w
 14913  02F2  1903               	btfsc	3,2
 14914  02F3  2AF5               	goto	u331_21
 14915  02F4  2AF6               	goto	u331_20
 14916  02F5                     u331_21:
 14917  02F5  2B00               	goto	i1l1511
 14918  02F6                     u331_20:
 14919  02F6                     i1l3995:
 14920  02F6  0830               	movf	sprintf@flag,w
 14921  02F7  3903               	andlw	3
 14922  02F8  1903               	btfsc	3,2
 14923  02F9  2AFB               	goto	u332_21
 14924  02FA  2AFC               	goto	u332_20
 14925  02FB                     u332_21:
 14926  02FB  2B00               	goto	i1l1511
 14927  02FC                     u332_20:
 14928  02FC                     i1l3997:
 14929                           
 14930                           ;doprnt.c: 1372: width--;
 14931  02FC  30FF               	movlw	255
 14932  02FD  07B1               	addwf	sprintf@width,f
 14933  02FE  30FF               	movlw	255
 14934  02FF  3DB2               	addwfc	sprintf@width+1,f
 14935  0300                     i1l1511:
 14936                           
 14937                           ;doprnt.c: 1407: if(width > c)
 14938  0300  0832               	movf	sprintf@width+1,w
 14939  0301  3A80               	xorlw	128
 14940  0302  3C80               	sublw	128
 14941  0303  1D03               	skipz
 14942  0304  2B07               	goto	u333_25
 14943  0305  0831               	movf	sprintf@width,w
 14944  0306  0233               	subwf	sprintf@c,w
 14945  0307                     u333_25:
 14946  0307  1803               	skipnc
 14947  0308  2B0A               	goto	u333_21
 14948  0309  2B0B               	goto	u333_20
 14949  030A                     u333_21:
 14950  030A  2B14               	goto	i1l4001
 14951  030B                     u333_20:
 14952  030B                     i1l3999:
 14953                           
 14954                           ;doprnt.c: 1408: width -= c;
 14955  030B  0020               	movlb	0	; select bank0
 14956  030C  0833               	movf	sprintf@c,w
 14957  030D  00A8               	movwf	??_sprintf
 14958  030E  01A9               	clrf	??_sprintf+1
 14959  030F  0828               	movf	??_sprintf,w
 14960  0310  02B1               	subwf	sprintf@width,f
 14961  0311  0829               	movf	??_sprintf+1,w
 14962  0312  3BB2               	subwfb	sprintf@width+1,f
 14963  0313  2B17               	goto	i1l4003
 14964  0314                     i1l4001:
 14965                           
 14966                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 14967  0314  0020               	movlb	0	; select bank0
 14968  0315  01B1               	clrf	sprintf@width
 14969  0316  01B2               	clrf	sprintf@width+1
 14970  0317                     i1l4003:
 14971                           
 14972                           ;doprnt.c: 1413: if(flag & 0x04) {
 14973  0317  1D30               	btfss	sprintf@flag,2
 14974  0318  2B1A               	goto	u334_21
 14975  0319  2B1B               	goto	u334_20
 14976  031A                     u334_21:
 14977  031A  2B48               	goto	i1l4019
 14978  031B                     u334_20:
 14979  031B                     i1l4005:
 14980                           
 14981                           ;doprnt.c: 1418: if(flag & 0x03)
 14982  031B  0830               	movf	sprintf@flag,w
 14983  031C  3903               	andlw	3
 14984  031D  1903               	btfsc	3,2
 14985  031E  2B20               	goto	u335_21
 14986  031F  2B21               	goto	u335_20
 14987  0320                     u335_21:
 14988  0320  2B2C               	goto	i1l4011
 14989  0321                     u335_20:
 14990  0321                     i1l4007:
 14991                           
 14992                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 14993  0321  302D               	movlw	45
 14994  0322  00A8               	movwf	??_sprintf
 14995  0323  0834               	movf	sprintf@sp,w
 14996  0324  0086               	movwf	6
 14997  0325  0187               	clrf	7
 14998  0326  0828               	movf	??_sprintf,w
 14999  0327  0081               	movwf	1
 15000  0328                     i1l4009:
 15001  0328  3001               	movlw	1
 15002  0329  00A8               	movwf	??_sprintf
 15003  032A  0828               	movf	??_sprintf,w
 15004  032B  07B4               	addwf	sprintf@sp,f
 15005  032C                     i1l4011:
 15006                           
 15007                           ;doprnt.c: 1441: if(width)
 15008  032C  0831               	movf	sprintf@width,w
 15009  032D  0432               	iorwf	sprintf@width+1,w
 15010  032E  1903               	btfsc	3,2
 15011  032F  2B31               	goto	u336_21
 15012  0330  2B32               	goto	u336_20
 15013  0331                     u336_21:
 15014  0331  2B74               	goto	i1l4033
 15015  0332                     u336_20:
 15016  0332                     i1l4013:
 15017                           
 15018                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 15019  0332  3030               	movlw	48
 15020  0333  00A8               	movwf	??_sprintf
 15021  0334  0834               	movf	sprintf@sp,w
 15022  0335  0086               	movwf	6
 15023  0336  0187               	clrf	7
 15024  0337  0828               	movf	??_sprintf,w
 15025  0338  0081               	movwf	1
 15026  0339                     i1l4015:
 15027  0339  3001               	movlw	1
 15028  033A  00A8               	movwf	??_sprintf
 15029  033B  0828               	movf	??_sprintf,w
 15030  033C  07B4               	addwf	sprintf@sp,f
 15031  033D                     i1l4017:
 15032                           
 15033                           ;doprnt.c: 1444: while(--width);
 15034  033D  30FF               	movlw	255
 15035  033E  07B1               	addwf	sprintf@width,f
 15036  033F  30FF               	movlw	255
 15037  0340  3DB2               	addwfc	sprintf@width+1,f
 15038  0341  0831               	movf	sprintf@width,w
 15039  0342  0432               	iorwf	sprintf@width+1,w
 15040  0343  1D03               	btfss	3,2
 15041  0344  2B46               	goto	u337_21
 15042  0345  2B47               	goto	u337_20
 15043  0346                     u337_21:
 15044  0346  2B32               	goto	i1l4013
 15045  0347                     u337_20:
 15046  0347  2B74               	goto	i1l4033
 15047  0348                     i1l4019:
 15048                           
 15049                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 15050  0348  0831               	movf	sprintf@width,w
 15051  0349  0432               	iorwf	sprintf@width+1,w
 15052  034A  1903               	btfsc	3,2
 15053  034B  2B4D               	goto	u338_21
 15054  034C  2B4E               	goto	u338_20
 15055  034D                     u338_21:
 15056  034D  2B63               	goto	i1l4027
 15057  034E                     u338_20:
 15058  034E                     i1l4021:
 15059                           
 15060                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 15061  034E  3020               	movlw	32
 15062  034F  00A8               	movwf	??_sprintf
 15063  0350  0834               	movf	sprintf@sp,w
 15064  0351  0086               	movwf	6
 15065  0352  0187               	clrf	7
 15066  0353  0828               	movf	??_sprintf,w
 15067  0354  0081               	movwf	1
 15068  0355                     i1l4023:
 15069  0355  3001               	movlw	1
 15070  0356  00A8               	movwf	??_sprintf
 15071  0357  0828               	movf	??_sprintf,w
 15072  0358  07B4               	addwf	sprintf@sp,f
 15073  0359                     i1l4025:
 15074                           
 15075                           ;doprnt.c: 1457: while(--width);
 15076  0359  30FF               	movlw	255
 15077  035A  07B1               	addwf	sprintf@width,f
 15078  035B  30FF               	movlw	255
 15079  035C  3DB2               	addwfc	sprintf@width+1,f
 15080  035D  0831               	movf	sprintf@width,w
 15081  035E  0432               	iorwf	sprintf@width+1,w
 15082  035F  1D03               	btfss	3,2
 15083  0360  2B62               	goto	u339_21
 15084  0361  2B63               	goto	u339_20
 15085  0362                     u339_21:
 15086  0362  2B4E               	goto	i1l4021
 15087  0363                     u339_20:
 15088  0363                     i1l4027:
 15089                           
 15090                           ;doprnt.c: 1464: if(flag & 0x03)
 15091  0363  0830               	movf	sprintf@flag,w
 15092  0364  3903               	andlw	3
 15093  0365  1903               	btfsc	3,2
 15094  0366  2B68               	goto	u340_21
 15095  0367  2B69               	goto	u340_20
 15096  0368                     u340_21:
 15097  0368  2B74               	goto	i1l4033
 15098  0369                     u340_20:
 15099  0369                     i1l4029:
 15100                           
 15101                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 15102  0369  302D               	movlw	45
 15103  036A  00A8               	movwf	??_sprintf
 15104  036B  0834               	movf	sprintf@sp,w
 15105  036C  0086               	movwf	6
 15106  036D  0187               	clrf	7
 15107  036E  0828               	movf	??_sprintf,w
 15108  036F  0081               	movwf	1
 15109  0370                     i1l4031:
 15110  0370  3001               	movlw	1
 15111  0371  00A8               	movwf	??_sprintf
 15112  0372  0828               	movf	??_sprintf,w
 15113  0373  07B4               	addwf	sprintf@sp,f
 15114  0374                     i1l4033:
 15115                           
 15116                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 15117  0374  0833               	movf	sprintf@c,w
 15118  0375  00A8               	movwf	??_sprintf
 15119  0376  0828               	movf	??_sprintf,w
 15120  0377  00AD               	movwf	sprintf@prec
 15121                           
 15122                           ;doprnt.c: 1500: while(prec--) {
 15123  0378  2BAB               	goto	i1l4041
 15124  0379                     i1l4035:
 15125                           
 15126                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 15127  0379  300A               	movlw	10
 15128  037A  00F8               	movwf	___lwmod@divisor
 15129  037B  3000               	movlw	0
 15130  037C  00F9               	movwf	___lwmod@divisor+1
 15131  037D  082D               	movf	sprintf@prec,w
 15132  037E  00A8               	movwf	??_sprintf
 15133  037F  01A9               	clrf	??_sprintf+1
 15134  0380  35A8               	lslf	??_sprintf,f
 15135  0381  0DA9               	rlf	??_sprintf+1,f
 15136  0382  300F               	movlw	low (_dpowers| (0+32768))
 15137  0383  0728               	addwf	??_sprintf,w
 15138  0384  0084               	movwf	4
 15139  0385  3090               	movlw	high (_dpowers| (0+32768))
 15140  0386  3D29               	addwfc	??_sprintf+1,w
 15141  0387  0085               	movwf	5
 15142  0388  3F00               	moviw [0]fsr0
 15143  0389  00F0               	movwf	___lwdiv@divisor
 15144  038A  3F01               	moviw [1]fsr0
 15145  038B  00F1               	movwf	___lwdiv@divisor+1
 15146  038C  082F               	movf	sprintf@val+1,w
 15147  038D  00F3               	movwf	___lwdiv@dividend+1
 15148  038E  082E               	movf	sprintf@val,w
 15149  038F  00F2               	movwf	___lwdiv@dividend
 15150  0390  318C  24ED  3182   	fcall	___lwdiv
 15151  0393  0871               	movf	?___lwdiv+1,w
 15152  0394  00FB               	movwf	___lwmod@dividend+1
 15153  0395  0870               	movf	?___lwdiv,w
 15154  0396  00FA               	movwf	___lwmod@dividend
 15155  0397  318C  2447  3182   	fcall	___lwmod
 15156  039A  0878               	movf	?___lwmod,w
 15157  039B  3E30               	addlw	48
 15158  039C  0020               	movlb	0	; select bank0
 15159  039D  00AA               	movwf	??_sprintf+2
 15160  039E  082A               	movf	??_sprintf+2,w
 15161  039F  00B3               	movwf	sprintf@c
 15162  03A0                     i1l4037:
 15163                           
 15164                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 15165  03A0  0833               	movf	sprintf@c,w
 15166  03A1  00A8               	movwf	??_sprintf
 15167  03A2  0834               	movf	sprintf@sp,w
 15168  03A3  0086               	movwf	6
 15169  03A4  0187               	clrf	7
 15170  03A5  0828               	movf	??_sprintf,w
 15171  03A6  0081               	movwf	1
 15172  03A7                     i1l4039:
 15173  03A7  3001               	movlw	1
 15174  03A8  00A8               	movwf	??_sprintf
 15175  03A9  0828               	movf	??_sprintf,w
 15176  03AA  07B4               	addwf	sprintf@sp,f
 15177  03AB                     i1l4041:
 15178  03AB  30FF               	movlw	255
 15179  03AC  00A8               	movwf	??_sprintf
 15180  03AD  0828               	movf	??_sprintf,w
 15181  03AE  07AD               	addwf	sprintf@prec,f
 15182  03AF  0A2D               	incf	sprintf@prec,w
 15183  03B0  1D03               	btfss	3,2
 15184  03B1  2BB3               	goto	u341_21
 15185  03B2  2BB4               	goto	u341_20
 15186  03B3                     u341_21:
 15187  03B3  2B79               	goto	i1l4035
 15188  03B4                     u341_20:
 15189  03B4                     i1l4043:
 15190  03B4  0821               	movf	sprintf@f+1,w
 15191  03B5  00A9               	movwf	??_sprintf+1
 15192  03B6  0820               	movf	sprintf@f,w
 15193  03B7  00A8               	movwf	??_sprintf
 15194  03B8  0AA0               	incf	sprintf@f,f
 15195  03B9  1903               	skipnz
 15196  03BA  0AA1               	incf	sprintf@f+1,f
 15197  03BB  0828               	movf	??_sprintf,w
 15198  03BC  0084               	movwf	4
 15199  03BD  0829               	movf	??_sprintf+1,w
 15200  03BE  0085               	movwf	5
 15201  03BF  0800               	movf	0,w	;code access
 15202  03C0  00AA               	movwf	??_sprintf+2
 15203  03C1  082A               	movf	??_sprintf+2,w
 15204  03C2  00B3               	movwf	sprintf@c
 15205  03C3  0833               	movf	sprintf@c,w
 15206  03C4  1D03               	btfss	3,2
 15207  03C5  2BC7               	goto	u342_21
 15208  03C6  2BC8               	goto	u342_20
 15209  03C7                     u342_21:
 15210  03C7  2A37               	goto	i1l3941
 15211  03C8                     u342_20:
 15212  03C8                     i1l4045:
 15213                           
 15214                           ;doprnt.c: 1564: *sp = 0;
 15215  03C8  0834               	movf	sprintf@sp,w
 15216  03C9  0086               	movwf	6
 15217  03CA  0187               	clrf	7
 15218  03CB  0181               	clrf	1
 15219  03CC                     i1l1528:
 15220  03CC  0008               	return
 15221  03CD                     __end_of_sprintf:
 15222                           
 15223                           	psect	text45
 15224  0A4F                     __ptext45:	
 15225 ;; *************** function _isdigit *****************
 15226 ;; Defined at:
 15227 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 15228 ;; Parameters:    Size  Location     Type
 15229 ;;  c               1    wreg     unsigned char 
 15230 ;; Auto vars:     Size  Location     Type
 15231 ;;  c               1    1[COMMON] unsigned char 
 15232 ;; Return value:  Size  Location     Type
 15233 ;;		None               void
 15234 ;; Registers used:
 15235 ;;		wreg, status,2, status,0
 15236 ;; Tracked objects:
 15237 ;;		On entry : 0/0
 15238 ;;		On exit  : 0/0
 15239 ;;		Unchanged: 0/0
 15240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15242 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15244 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15245 ;;Total ram usage:        2 bytes
 15246 ;; Hardware stack levels used:    1
 15247 ;; This function calls:
 15248 ;;		Nothing
 15249 ;; This function is called by:
 15250 ;;		_sprintf
 15251 ;; This function uses a non-reentrant model
 15252 ;;
 15253                           
 15254                           
 15255                           ;psect for function _isdigit
 15256  0A4F                     _isdigit:
 15257                           
 15258                           ;incstack = 0
 15259                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 15260                           ;isdigit@c stored from wreg
 15261  0A4F  00F1               	movwf	isdigit@c
 15262  0A50                     i1l3735:
 15263  0A50  01F0               	clrf	_isdigit$2900
 15264  0A51                     i1l3737:
 15265  0A51  303A               	movlw	58
 15266  0A52  0271               	subwf	isdigit@c,w
 15267  0A53  1803               	skipnc
 15268  0A54  2A56               	goto	u268_21
 15269  0A55  2A57               	goto	u268_20
 15270  0A56                     u268_21:
 15271  0A56  2A5F               	goto	i1l3743
 15272  0A57                     u268_20:
 15273  0A57                     i1l3739:
 15274  0A57  3030               	movlw	48
 15275  0A58  0271               	subwf	isdigit@c,w
 15276  0A59  1C03               	skipc
 15277  0A5A  2A5C               	goto	u269_21
 15278  0A5B  2A5D               	goto	u269_20
 15279  0A5C                     u269_21:
 15280  0A5C  2A5F               	goto	i1l3743
 15281  0A5D                     u269_20:
 15282  0A5D                     i1l3741:
 15283  0A5D  01F0               	clrf	_isdigit$2900
 15284  0A5E  0AF0               	incf	_isdigit$2900,f
 15285  0A5F                     i1l3743:
 15286  0A5F  0C70               	rrf	_isdigit$2900,w
 15287  0A60                     i1l1985:
 15288  0A60  0008               	return
 15289  0A61                     __end_of_isdigit:
 15290                           
 15291                           	psect	text46
 15292  0B66                     __ptext46:	
 15293 ;; *************** function ___wmul *****************
 15294 ;; Defined at:
 15295 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 15296 ;; Parameters:    Size  Location     Type
 15297 ;;  multiplier      2    0[COMMON] unsigned int 
 15298 ;;  multiplicand    2    2[COMMON] unsigned int 
 15299 ;; Auto vars:     Size  Location     Type
 15300 ;;  product         2    4[COMMON] unsigned int 
 15301 ;; Return value:  Size  Location     Type
 15302 ;;                  2    0[COMMON] unsigned int 
 15303 ;; Registers used:
 15304 ;;		wreg, status,2, status,0
 15305 ;; Tracked objects:
 15306 ;;		On entry : 0/0
 15307 ;;		On exit  : 0/0
 15308 ;;		Unchanged: 0/0
 15309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15310 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15311 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15313 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15314 ;;Total ram usage:        6 bytes
 15315 ;; Hardware stack levels used:    1
 15316 ;; This function calls:
 15317 ;;		Nothing
 15318 ;; This function is called by:
 15319 ;;		_monitoring_ISR
 15320 ;;		_sprintf
 15321 ;;		_map
 15322 ;; This function uses a non-reentrant model
 15323 ;;
 15324                           
 15325                           
 15326                           ;psect for function ___wmul
 15327  0B66                     ___wmul:
 15328  0B66                     i1l3747:	
 15329                           ;incstack = 0
 15330                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 15331                           
 15332  0B66  01F4               	clrf	___wmul@product
 15333  0B67  01F5               	clrf	___wmul@product+1
 15334  0B68                     i1l3749:
 15335  0B68  1C70               	btfss	___wmul@multiplier,0
 15336  0B69  2B6B               	goto	u270_21
 15337  0B6A  2B6C               	goto	u270_20
 15338  0B6B                     u270_21:
 15339  0B6B  2B70               	goto	i1l1532
 15340  0B6C                     u270_20:
 15341  0B6C                     i1l3751:
 15342  0B6C  0872               	movf	___wmul@multiplicand,w
 15343  0B6D  07F4               	addwf	___wmul@product,f
 15344  0B6E  0873               	movf	___wmul@multiplicand+1,w
 15345  0B6F  3DF5               	addwfc	___wmul@product+1,f
 15346  0B70                     i1l1532:
 15347  0B70  3001               	movlw	1
 15348  0B71                     u271_25:
 15349  0B71  35F2               	lslf	___wmul@multiplicand,f
 15350  0B72  0DF3               	rlf	___wmul@multiplicand+1,f
 15351  0B73  0B89               	decfsz	9,f
 15352  0B74  2B71               	goto	u271_25
 15353  0B75                     i1l3753:
 15354  0B75  3001               	movlw	1
 15355  0B76                     u272_25:
 15356  0B76  36F1               	lsrf	___wmul@multiplier+1,f
 15357  0B77  0CF0               	rrf	___wmul@multiplier,f
 15358  0B78  0B89               	decfsz	9,f
 15359  0B79  2B76               	goto	u272_25
 15360  0B7A                     i1l3755:
 15361  0B7A  0870               	movf	___wmul@multiplier,w
 15362  0B7B  0471               	iorwf	___wmul@multiplier+1,w
 15363  0B7C  1D03               	btfss	3,2
 15364  0B7D  2B7F               	goto	u273_21
 15365  0B7E  2B80               	goto	u273_20
 15366  0B7F                     u273_21:
 15367  0B7F  2B68               	goto	i1l3749
 15368  0B80                     u273_20:
 15369  0B80                     i1l3757:
 15370  0B80  0875               	movf	___wmul@product+1,w
 15371  0B81  00F1               	movwf	?___wmul+1
 15372  0B82  0874               	movf	___wmul@product,w
 15373  0B83  00F0               	movwf	?___wmul
 15374  0B84                     i1l1534:
 15375  0B84  0008               	return
 15376  0B85                     __end_of___wmul:
 15377                           
 15378                           	psect	text47
 15379  0C47                     __ptext47:	
 15380 ;; *************** function ___lwmod *****************
 15381 ;; Defined at:
 15382 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 15383 ;; Parameters:    Size  Location     Type
 15384 ;;  divisor         2    8[COMMON] unsigned int 
 15385 ;;  dividend        2   10[COMMON] unsigned int 
 15386 ;; Auto vars:     Size  Location     Type
 15387 ;;  counter         1   13[COMMON] unsigned char 
 15388 ;; Return value:  Size  Location     Type
 15389 ;;                  2    8[COMMON] unsigned int 
 15390 ;; Registers used:
 15391 ;;		wreg, status,2, status,0
 15392 ;; Tracked objects:
 15393 ;;		On entry : 0/0
 15394 ;;		On exit  : 0/0
 15395 ;;		Unchanged: 0/0
 15396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15397 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15398 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15399 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15400 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15401 ;;Total ram usage:        6 bytes
 15402 ;; Hardware stack levels used:    1
 15403 ;; This function calls:
 15404 ;;		Nothing
 15405 ;; This function is called by:
 15406 ;;		_sprintf
 15407 ;; This function uses a non-reentrant model
 15408 ;;
 15409                           
 15410                           
 15411                           ;psect for function ___lwmod
 15412  0C47                     ___lwmod:
 15413  0C47                     i1l3787:	
 15414                           ;incstack = 0
 15415                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 15416                           
 15417  0C47  0878               	movf	___lwmod@divisor,w
 15418  0C48  0479               	iorwf	___lwmod@divisor+1,w
 15419  0C49  1903               	btfsc	3,2
 15420  0C4A  2C4C               	goto	u281_21
 15421  0C4B  2C4D               	goto	u281_20
 15422  0C4C                     u281_21:
 15423  0C4C  2C76               	goto	i1l3805
 15424  0C4D                     u281_20:
 15425  0C4D                     i1l3789:
 15426  0C4D  01FD               	clrf	___lwmod@counter
 15427  0C4E  0AFD               	incf	___lwmod@counter,f
 15428  0C4F  2C59               	goto	i1l3795
 15429  0C50                     i1l3791:
 15430  0C50  3001               	movlw	1
 15431  0C51                     u282_25:
 15432  0C51  35F8               	lslf	___lwmod@divisor,f
 15433  0C52  0DF9               	rlf	___lwmod@divisor+1,f
 15434  0C53  0B89               	decfsz	9,f
 15435  0C54  2C51               	goto	u282_25
 15436  0C55                     i1l3793:
 15437  0C55  3001               	movlw	1
 15438  0C56  00FC               	movwf	??___lwmod
 15439  0C57  087C               	movf	??___lwmod,w
 15440  0C58  07FD               	addwf	___lwmod@counter,f
 15441  0C59                     i1l3795:
 15442  0C59  1FF9               	btfss	___lwmod@divisor+1,7
 15443  0C5A  2C5C               	goto	u283_21
 15444  0C5B  2C5D               	goto	u283_20
 15445  0C5C                     u283_21:
 15446  0C5C  2C50               	goto	i1l3791
 15447  0C5D                     u283_20:
 15448  0C5D                     i1l3797:
 15449  0C5D  0879               	movf	___lwmod@divisor+1,w
 15450  0C5E  027B               	subwf	___lwmod@dividend+1,w
 15451  0C5F  1D03               	skipz
 15452  0C60  2C63               	goto	u284_25
 15453  0C61  0878               	movf	___lwmod@divisor,w
 15454  0C62  027A               	subwf	___lwmod@dividend,w
 15455  0C63                     u284_25:
 15456  0C63  1C03               	skipc
 15457  0C64  2C66               	goto	u284_21
 15458  0C65  2C67               	goto	u284_20
 15459  0C66                     u284_21:
 15460  0C66  2C6B               	goto	i1l3801
 15461  0C67                     u284_20:
 15462  0C67                     i1l3799:
 15463  0C67  0878               	movf	___lwmod@divisor,w
 15464  0C68  02FA               	subwf	___lwmod@dividend,f
 15465  0C69  0879               	movf	___lwmod@divisor+1,w
 15466  0C6A  3BFB               	subwfb	___lwmod@dividend+1,f
 15467  0C6B                     i1l3801:
 15468  0C6B  3001               	movlw	1
 15469  0C6C                     u285_25:
 15470  0C6C  36F9               	lsrf	___lwmod@divisor+1,f
 15471  0C6D  0CF8               	rrf	___lwmod@divisor,f
 15472  0C6E  0B89               	decfsz	9,f
 15473  0C6F  2C6C               	goto	u285_25
 15474  0C70                     i1l3803:
 15475  0C70  3001               	movlw	1
 15476  0C71  02FD               	subwf	___lwmod@counter,f
 15477  0C72  1D03               	btfss	3,2
 15478  0C73  2C75               	goto	u286_21
 15479  0C74  2C76               	goto	u286_20
 15480  0C75                     u286_21:
 15481  0C75  2C5D               	goto	i1l3797
 15482  0C76                     u286_20:
 15483  0C76                     i1l3805:
 15484  0C76  087B               	movf	___lwmod@dividend+1,w
 15485  0C77  00F9               	movwf	?___lwmod+1
 15486  0C78  087A               	movf	___lwmod@dividend,w
 15487  0C79  00F8               	movwf	?___lwmod
 15488  0C7A                     i1l1814:
 15489  0C7A  0008               	return
 15490  0C7B                     __end_of___lwmod:
 15491                           
 15492                           	psect	text48
 15493  0CED                     __ptext48:	
 15494 ;; *************** function ___lwdiv *****************
 15495 ;; Defined at:
 15496 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 15497 ;; Parameters:    Size  Location     Type
 15498 ;;  divisor         2    0[COMMON] unsigned int 
 15499 ;;  dividend        2    2[COMMON] unsigned int 
 15500 ;; Auto vars:     Size  Location     Type
 15501 ;;  quotient        2    5[COMMON] unsigned int 
 15502 ;;  counter         1    7[COMMON] unsigned char 
 15503 ;; Return value:  Size  Location     Type
 15504 ;;                  2    0[COMMON] unsigned int 
 15505 ;; Registers used:
 15506 ;;		wreg, status,2, status,0
 15507 ;; Tracked objects:
 15508 ;;		On entry : 0/0
 15509 ;;		On exit  : 0/0
 15510 ;;		Unchanged: 0/0
 15511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15512 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15513 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15514 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15515 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15516 ;;Total ram usage:        8 bytes
 15517 ;; Hardware stack levels used:    1
 15518 ;; This function calls:
 15519 ;;		Nothing
 15520 ;; This function is called by:
 15521 ;;		_sprintf
 15522 ;; This function uses a non-reentrant model
 15523 ;;
 15524                           
 15525                           
 15526                           ;psect for function ___lwdiv
 15527  0CED                     ___lwdiv:
 15528  0CED                     i1l3761:	
 15529                           ;incstack = 0
 15530                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 15531                           
 15532  0CED  01F5               	clrf	___lwdiv@quotient
 15533  0CEE  01F6               	clrf	___lwdiv@quotient+1
 15534  0CEF                     i1l3763:
 15535  0CEF  0870               	movf	___lwdiv@divisor,w
 15536  0CF0  0471               	iorwf	___lwdiv@divisor+1,w
 15537  0CF1  1903               	btfsc	3,2
 15538  0CF2  2CF4               	goto	u274_21
 15539  0CF3  2CF5               	goto	u274_20
 15540  0CF4                     u274_21:
 15541  0CF4  2D24               	goto	i1l3783
 15542  0CF5                     u274_20:
 15543  0CF5                     i1l3765:
 15544  0CF5  01F7               	clrf	___lwdiv@counter
 15545  0CF6  0AF7               	incf	___lwdiv@counter,f
 15546  0CF7  2D01               	goto	i1l3771
 15547  0CF8                     i1l3767:
 15548  0CF8  3001               	movlw	1
 15549  0CF9                     u275_25:
 15550  0CF9  35F0               	lslf	___lwdiv@divisor,f
 15551  0CFA  0DF1               	rlf	___lwdiv@divisor+1,f
 15552  0CFB  0B89               	decfsz	9,f
 15553  0CFC  2CF9               	goto	u275_25
 15554  0CFD                     i1l3769:
 15555  0CFD  3001               	movlw	1
 15556  0CFE  00F4               	movwf	??___lwdiv
 15557  0CFF  0874               	movf	??___lwdiv,w
 15558  0D00  07F7               	addwf	___lwdiv@counter,f
 15559  0D01                     i1l3771:
 15560  0D01  1FF1               	btfss	___lwdiv@divisor+1,7
 15561  0D02  2D04               	goto	u276_21
 15562  0D03  2D05               	goto	u276_20
 15563  0D04                     u276_21:
 15564  0D04  2CF8               	goto	i1l3767
 15565  0D05                     u276_20:
 15566  0D05                     i1l3773:
 15567  0D05  3001               	movlw	1
 15568  0D06                     u277_25:
 15569  0D06  35F5               	lslf	___lwdiv@quotient,f
 15570  0D07  0DF6               	rlf	___lwdiv@quotient+1,f
 15571  0D08  0B89               	decfsz	9,f
 15572  0D09  2D06               	goto	u277_25
 15573  0D0A  0871               	movf	___lwdiv@divisor+1,w
 15574  0D0B  0273               	subwf	___lwdiv@dividend+1,w
 15575  0D0C  1D03               	skipz
 15576  0D0D  2D10               	goto	u278_25
 15577  0D0E  0870               	movf	___lwdiv@divisor,w
 15578  0D0F  0272               	subwf	___lwdiv@dividend,w
 15579  0D10                     u278_25:
 15580  0D10  1C03               	skipc
 15581  0D11  2D13               	goto	u278_21
 15582  0D12  2D14               	goto	u278_20
 15583  0D13                     u278_21:
 15584  0D13  2D19               	goto	i1l3779
 15585  0D14                     u278_20:
 15586  0D14                     i1l3775:
 15587  0D14  0870               	movf	___lwdiv@divisor,w
 15588  0D15  02F2               	subwf	___lwdiv@dividend,f
 15589  0D16  0871               	movf	___lwdiv@divisor+1,w
 15590  0D17  3BF3               	subwfb	___lwdiv@dividend+1,f
 15591  0D18                     i1l3777:
 15592  0D18  1475               	bsf	___lwdiv@quotient,0
 15593  0D19                     i1l3779:
 15594  0D19  3001               	movlw	1
 15595  0D1A                     u279_25:
 15596  0D1A  36F1               	lsrf	___lwdiv@divisor+1,f
 15597  0D1B  0CF0               	rrf	___lwdiv@divisor,f
 15598  0D1C  0B89               	decfsz	9,f
 15599  0D1D  2D1A               	goto	u279_25
 15600  0D1E                     i1l3781:
 15601  0D1E  3001               	movlw	1
 15602  0D1F  02F7               	subwf	___lwdiv@counter,f
 15603  0D20  1D03               	btfss	3,2
 15604  0D21  2D23               	goto	u280_21
 15605  0D22  2D24               	goto	u280_20
 15606  0D23                     u280_21:
 15607  0D23  2D05               	goto	i1l3773
 15608  0D24                     u280_20:
 15609  0D24                     i1l3783:
 15610  0D24  0876               	movf	___lwdiv@quotient+1,w
 15611  0D25  00F1               	movwf	?___lwdiv+1
 15612  0D26  0875               	movf	___lwdiv@quotient,w
 15613  0D27  00F0               	movwf	?___lwdiv
 15614  0D28                     i1l1804:
 15615  0D28  0008               	return
 15616  0D29                     __end_of___lwdiv:
 15617                           
 15618                           	psect	text49
 15619  0C13                     __ptext49:	
 15620 ;; *************** function _differenceBetweenTimePeriod *****************
 15621 ;; Defined at:
 15622 ;;		line 213 in file "main.c"
 15623 ;; Parameters:    Size  Location     Type
 15624 ;;  start           3    0[COMMON] struct Time
 15625 ;;  stop            3    3[COMMON] struct Time
 15626 ;;  diff            1    6[COMMON] PTR struct Time
 15627 ;;		 -> menuLCD_ISR@diff(3), 
 15628 ;; Auto vars:     Size  Location     Type
 15629 ;;		None
 15630 ;; Return value:  Size  Location     Type
 15631 ;;                  1    wreg      void 
 15632 ;; Registers used:
 15633 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15634 ;; Tracked objects:
 15635 ;;		On entry : 0/0
 15636 ;;		On exit  : 0/0
 15637 ;;		Unchanged: 0/0
 15638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15639 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15641 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15642 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15643 ;;Total ram usage:        8 bytes
 15644 ;; Hardware stack levels used:    1
 15645 ;; This function calls:
 15646 ;;		Nothing
 15647 ;; This function is called by:
 15648 ;;		_menuLCD_ISR
 15649 ;; This function uses a non-reentrant model
 15650 ;;
 15651                           
 15652                           
 15653                           ;psect for function _differenceBetweenTimePeriod
 15654  0C13                     _differenceBetweenTimePeriod:
 15655  0C13                     i1l3923:	
 15656                           ;incstack = 0
 15657                           ; Regs used in _differenceBetweenTimePeriod: [wreg+fsr1l+fsr1h+status,2+status,0]
 15658                           
 15659                           
 15660                           ;main.c: 216: while (stop.s > start.s) {
 15661  0C13  2C1A               	goto	i1l3927
 15662  0C14                     i1l3925:
 15663                           
 15664                           ;main.c: 217: --start.m;
 15665  0C14  3001               	movlw	1
 15666  0C15  02F1               	subwf	differenceBetweenTimePeriod@start+1,f
 15667                           
 15668                           ;main.c: 218: start.s += 60;
 15669  0C16  303C               	movlw	60
 15670  0C17  00F7               	movwf	??_differenceBetweenTimePeriod
 15671  0C18  0877               	movf	??_differenceBetweenTimePeriod,w
 15672  0C19  07F2               	addwf	differenceBetweenTimePeriod@start+2,f
 15673  0C1A                     i1l3927:
 15674  0C1A  0875               	movf	differenceBetweenTimePeriod@stop+2,w
 15675  0C1B  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 15676  0C1C  1C03               	skipc
 15677  0C1D  2C1F               	goto	u323_21
 15678  0C1E  2C20               	goto	u323_20
 15679  0C1F                     u323_21:
 15680  0C1F  2C14               	goto	i1l3925
 15681  0C20                     u323_20:
 15682  0C20                     i1l3929:
 15683                           
 15684                           ;main.c: 219: };main.c: 220: diff->s = start.s - stop.s;
 15685  0C20  0875               	movf	differenceBetweenTimePeriod@stop+2,w
 15686  0C21  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 15687  0C22  00F7               	movwf	??_differenceBetweenTimePeriod
 15688  0C23  0876               	movf	differenceBetweenTimePeriod@diff,w
 15689  0C24  3E02               	addlw	2
 15690  0C25  0086               	movwf	6
 15691  0C26  0187               	clrf	7
 15692  0C27  0877               	movf	??_differenceBetweenTimePeriod,w
 15693  0C28  0081               	movwf	1
 15694                           
 15695                           ;main.c: 221: while (stop.m > start.m) {
 15696  0C29  2C30               	goto	i1l3933
 15697  0C2A                     i1l3931:
 15698                           
 15699                           ;main.c: 222: --start.h;
 15700  0C2A  3001               	movlw	1
 15701  0C2B  02F0               	subwf	differenceBetweenTimePeriod@start,f
 15702                           
 15703                           ;main.c: 223: start.m += 60;
 15704  0C2C  303C               	movlw	60
 15705  0C2D  00F7               	movwf	??_differenceBetweenTimePeriod
 15706  0C2E  0877               	movf	??_differenceBetweenTimePeriod,w
 15707  0C2F  07F1               	addwf	differenceBetweenTimePeriod@start+1,f
 15708  0C30                     i1l3933:
 15709  0C30  0874               	movf	differenceBetweenTimePeriod@stop+1,w
 15710  0C31  0271               	subwf	differenceBetweenTimePeriod@start+1,w
 15711  0C32  1C03               	skipc
 15712  0C33  2C35               	goto	u324_21
 15713  0C34  2C36               	goto	u324_20
 15714  0C35                     u324_21:
 15715  0C35  2C2A               	goto	i1l3931
 15716  0C36                     u324_20:
 15717  0C36                     i1l3935:
 15718                           
 15719                           ;main.c: 224: };main.c: 225: diff->m = start.m - stop.m;
 15720  0C36  0874               	movf	differenceBetweenTimePeriod@stop+1,w
 15721  0C37  0271               	subwf	differenceBetweenTimePeriod@start+1,w
 15722  0C38  00F7               	movwf	??_differenceBetweenTimePeriod
 15723  0C39  0A76               	incf	differenceBetweenTimePeriod@diff,w
 15724  0C3A  0086               	movwf	6
 15725  0C3B  0187               	clrf	7
 15726  0C3C  0877               	movf	??_differenceBetweenTimePeriod,w
 15727  0C3D  0081               	movwf	1
 15728                           
 15729                           ;main.c: 226: diff->h = start.h - stop.h;
 15730  0C3E  0873               	movf	differenceBetweenTimePeriod@stop,w
 15731  0C3F  0270               	subwf	differenceBetweenTimePeriod@start,w
 15732  0C40  00F7               	movwf	??_differenceBetweenTimePeriod
 15733  0C41  0876               	movf	differenceBetweenTimePeriod@diff,w
 15734  0C42  0086               	movwf	6
 15735  0C43  0187               	clrf	7
 15736  0C44  0877               	movf	??_differenceBetweenTimePeriod,w
 15737  0C45  0081               	movwf	1
 15738  0C46                     i1l1088:
 15739  0C46  0008               	return
 15740  0C47                     __end_of_differenceBetweenTimePeriod:
 15741                           
 15742                           	psect	text50
 15743  0990                     __ptext50:	
 15744 ;; *************** function _TMR2_StartTimer *****************
 15745 ;; Defined at:
 15746 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 15747 ;; Parameters:    Size  Location     Type
 15748 ;;		None
 15749 ;; Auto vars:     Size  Location     Type
 15750 ;;		None
 15751 ;; Return value:  Size  Location     Type
 15752 ;;                  1    wreg      void 
 15753 ;; Registers used:
 15754 ;;		status,2, status,0, pclath, cstack
 15755 ;; Tracked objects:
 15756 ;;		On entry : 0/0
 15757 ;;		On exit  : 0/0
 15758 ;;		Unchanged: 0/0
 15759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15764 ;;Total ram usage:        0 bytes
 15765 ;; Hardware stack levels used:    1
 15766 ;; Hardware stack levels required when called:    1
 15767 ;; This function calls:
 15768 ;;		_TMR2_Start
 15769 ;; This function is called by:
 15770 ;;		_menuLCD_ISR
 15771 ;; This function uses a non-reentrant model
 15772 ;;
 15773                           
 15774                           
 15775                           ;psect for function _TMR2_StartTimer
 15776  0990                     _TMR2_StartTimer:
 15777  0990                     i1l3861:	
 15778                           ;incstack = 0
 15779                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
 15780                           
 15781                           
 15782                           ;tmr2.c: 108: TMR2_Start();
 15783  0990  3189  217E  3189   	fcall	_TMR2_Start
 15784  0993                     i1l761:
 15785  0993  0008               	return
 15786  0994                     __end_of_TMR2_StartTimer:
 15787                           
 15788                           	psect	text51
 15789  097E                     __ptext51:	
 15790 ;; *************** function _TMR2_Start *****************
 15791 ;; Defined at:
 15792 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 15793 ;; Parameters:    Size  Location     Type
 15794 ;;		None
 15795 ;; Auto vars:     Size  Location     Type
 15796 ;;		None
 15797 ;; Return value:  Size  Location     Type
 15798 ;;                  1    wreg      void 
 15799 ;; Registers used:
 15800 ;;		None
 15801 ;; Tracked objects:
 15802 ;;		On entry : 0/0
 15803 ;;		On exit  : 0/0
 15804 ;;		Unchanged: 0/0
 15805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15810 ;;Total ram usage:        0 bytes
 15811 ;; Hardware stack levels used:    1
 15812 ;; This function calls:
 15813 ;;		Nothing
 15814 ;; This function is called by:
 15815 ;;		_TMR2_StartTimer
 15816 ;; This function uses a non-reentrant model
 15817 ;;
 15818                           
 15819                           
 15820                           ;psect for function _TMR2_Start
 15821  097E                     _TMR2_Start:
 15822  097E                     i1l3731:	
 15823                           ;incstack = 0
 15824                           ; Regs used in _TMR2_Start: []
 15825                           
 15826                           
 15827                           ;tmr2.c: 103: T2CONbits.TMR2ON = 1;
 15828  097E  0025               	movlb	5	; select bank5
 15829  097F  178E               	bsf	14,7	;volatile
 15830  0980                     i1l758:
 15831  0980  0008               	return
 15832  0981                     __end_of_TMR2_Start:
 15833                           
 15834                           	psect	text52
 15835  097B                     __ptext52:	
 15836 ;; *************** function _PWM_Output_D4_Enable *****************
 15837 ;; Defined at:
 15838 ;;		line 229 in file "main.c"
 15839 ;; Parameters:    Size  Location     Type
 15840 ;;		None
 15841 ;; Auto vars:     Size  Location     Type
 15842 ;;		None
 15843 ;; Return value:  Size  Location     Type
 15844 ;;                  1    wreg      void 
 15845 ;; Registers used:
 15846 ;;		None
 15847 ;; Tracked objects:
 15848 ;;		On entry : 0/0
 15849 ;;		On exit  : 0/0
 15850 ;;		Unchanged: 0/0
 15851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15856 ;;Total ram usage:        0 bytes
 15857 ;; Hardware stack levels used:    1
 15858 ;; This function calls:
 15859 ;;		Nothing
 15860 ;; This function is called by:
 15861 ;;		_menuLCD_ISR
 15862 ;; This function uses a non-reentrant model
 15863 ;;
 15864                           
 15865                           
 15866                           ;psect for function _PWM_Output_D4_Enable
 15867  097B                     _PWM_Output_D4_Enable:
 15868  097B                     i1l3937:	
 15869                           ;incstack = 0
 15870                           ; Regs used in _PWM_Output_D4_Enable: []
 15871                           
 15872                           
 15873                           ;main.c: 230: PWM6EN = 1;
 15874  097B  0027               	movlb	7	; select bank7
 15875  097C  178E               	bsf	14,7	;volatile
 15876  097D                     i1l1091:
 15877  097D  0008               	return
 15878  097E                     __end_of_PWM_Output_D4_Enable:
 15879                           
 15880                           	psect	text53
 15881  0A73                     __ptext53:	
 15882 ;; *************** function _LCDstr *****************
 15883 ;; Defined at:
 15884 ;;		line 193 in file "main.c"
 15885 ;; Parameters:    Size  Location     Type
 15886 ;;  p               1    wreg     PTR unsigned char 
 15887 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 15888 ;; Auto vars:     Size  Location     Type
 15889 ;;  p               1   11[COMMON] PTR unsigned char 
 15890 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 15891 ;;  c               1   10[COMMON] unsigned char 
 15892 ;; Return value:  Size  Location     Type
 15893 ;;                  1    wreg      void 
 15894 ;; Registers used:
 15895 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15896 ;; Tracked objects:
 15897 ;;		On entry : 0/0
 15898 ;;		On exit  : 0/0
 15899 ;;		Unchanged: 0/0
 15900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15902 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15903 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15904 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15905 ;;Total ram usage:        3 bytes
 15906 ;; Hardware stack levels used:    1
 15907 ;; Hardware stack levels required when called:    3
 15908 ;; This function calls:
 15909 ;;		_LCDchar
 15910 ;; This function is called by:
 15911 ;;		_menuLCD_ISR
 15912 ;; This function uses a non-reentrant model
 15913 ;;
 15914                           
 15915                           
 15916                           ;psect for function _LCDstr
 15917  0A73                     _LCDstr:
 15918                           
 15919                           ;incstack = 0
 15920                           ; Regs used in _LCDstr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15921                           ;LCDstr@p stored from wreg
 15922  0A73  00FB               	movwf	LCDstr@p
 15923  0A74                     i1l3917:
 15924                           
 15925                           ;main.c: 195: unsigned char c;;main.c: 197: while((c = *p++)) LCDchar(c);
 15926  0A74  2A79               	goto	i1l3921
 15927  0A75                     i1l3919:
 15928  0A75  087A               	movf	LCDstr@c,w
 15929  0A76  3189  21C1  318A   	fcall	_LCDchar
 15930  0A79                     i1l3921:
 15931  0A79  087B               	movf	LCDstr@p,w
 15932  0A7A  0086               	movwf	6
 15933  0A7B  0187               	clrf	7
 15934  0A7C  0AFB               	incf	LCDstr@p,f
 15935  0A7D  0801               	movf	1,w
 15936  0A7E  00F9               	movwf	??_LCDstr
 15937  0A7F  0879               	movf	??_LCDstr,w
 15938  0A80  00FA               	movwf	LCDstr@c
 15939  0A81  087A               	movf	LCDstr@c,w
 15940  0A82  1D03               	btfss	3,2
 15941  0A83  2A85               	goto	u322_21
 15942  0A84  2A86               	goto	u322_20
 15943  0A85                     u322_21:
 15944  0A85  2A75               	goto	i1l3919
 15945  0A86                     u322_20:
 15946  0A86                     i1l1075:
 15947  0A86  0008               	return
 15948  0A87                     __end_of_LCDstr:
 15949                           
 15950                           	psect	text54
 15951  09C1                     __ptext54:	
 15952 ;; *************** function _LCDchar *****************
 15953 ;; Defined at:
 15954 ;;		line 188 in file "main.c"
 15955 ;; Parameters:    Size  Location     Type
 15956 ;;  c               1    wreg     unsigned char 
 15957 ;; Auto vars:     Size  Location     Type
 15958 ;;  c               1    8[COMMON] unsigned char 
 15959 ;; Return value:  Size  Location     Type
 15960 ;;                  1    wreg      void 
 15961 ;; Registers used:
 15962 ;;		wreg, status,2, status,0, pclath, cstack
 15963 ;; Tracked objects:
 15964 ;;		On entry : 0/0
 15965 ;;		On exit  : 0/0
 15966 ;;		Unchanged: 0/0
 15967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15969 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15971 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15972 ;;Total ram usage:        1 bytes
 15973 ;; Hardware stack levels used:    1
 15974 ;; Hardware stack levels required when called:    2
 15975 ;; This function calls:
 15976 ;;		i1_LCDsend2x4
 15977 ;; This function is called by:
 15978 ;;		_LCDstr
 15979 ;;		_menuLCD_ISR
 15980 ;; This function uses a non-reentrant model
 15981 ;;
 15982                           
 15983                           
 15984                           ;psect for function _LCDchar
 15985  09C1                     _LCDchar:
 15986                           
 15987                           ;incstack = 0
 15988                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 15989                           ;LCDchar@c stored from wreg
 15990  09C1  00F8               	movwf	LCDchar@c
 15991  09C2                     i1l3733:
 15992                           
 15993                           ;main.c: 190: LCDsend2x4(c, 0x01);
 15994  09C2  01F2               	clrf	i1LCDsend2x4@mode
 15995  09C3  0AF2               	incf	i1LCDsend2x4@mode,f
 15996  09C4  0878               	movf	LCDchar@c,w
 15997  09C5  3187  2710  3189   	fcall	i1_LCDsend2x4
 15998  09C8                     i1l1069:
 15999  09C8  0008               	return
 16000  09C9                     __end_of_LCDchar:
 16001                           
 16002                           	psect	text55
 16003  09BA                     __ptext55:	
 16004 ;; *************** function _LCDcmd *****************
 16005 ;; Defined at:
 16006 ;;		line 183 in file "main.c"
 16007 ;; Parameters:    Size  Location     Type
 16008 ;;  c               1    wreg     unsigned char 
 16009 ;; Auto vars:     Size  Location     Type
 16010 ;;  c               1    8[COMMON] unsigned char 
 16011 ;; Return value:  Size  Location     Type
 16012 ;;                  1    wreg      void 
 16013 ;; Registers used:
 16014 ;;		wreg, status,2, status,0, pclath, cstack
 16015 ;; Tracked objects:
 16016 ;;		On entry : 0/0
 16017 ;;		On exit  : 0/0
 16018 ;;		Unchanged: 0/0
 16019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16023 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16024 ;;Total ram usage:        1 bytes
 16025 ;; Hardware stack levels used:    1
 16026 ;; Hardware stack levels required when called:    2
 16027 ;; This function calls:
 16028 ;;		i1_LCDsend2x4
 16029 ;; This function is called by:
 16030 ;;		_menuLCD_ISR
 16031 ;; This function uses a non-reentrant model
 16032 ;;
 16033                           
 16034                           
 16035                           ;psect for function _LCDcmd
 16036  09BA                     _LCDcmd:
 16037                           
 16038                           ;incstack = 0
 16039                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 16040                           ;LCDcmd@c stored from wreg
 16041  09BA  00F8               	movwf	LCDcmd@c
 16042  09BB                     i1l3915:
 16043                           
 16044                           ;main.c: 185: LCDsend2x4(c, 0);
 16045  09BB  01F2               	clrf	i1LCDsend2x4@mode
 16046  09BC  0878               	movf	LCDcmd@c,w
 16047  09BD  3187  2710  3189   	fcall	i1_LCDsend2x4
 16048  09C0                     i1l1066:
 16049  09C0  0008               	return
 16050  09C1                     __end_of_LCDcmd:
 16051                           
 16052                           	psect	text56
 16053  0710                     __ptext56:	
 16054 ;; *************** function i1_LCDsend2x4 *****************
 16055 ;; Defined at:
 16056 ;;		line 137 in file "main.c"
 16057 ;; Parameters:    Size  Location     Type
 16058 ;;  c               1    wreg     unsigned char 
 16059 ;;  mode            1    2[COMMON] unsigned char 
 16060 ;; Auto vars:     Size  Location     Type
 16061 ;;  c               1    5[COMMON] unsigned char 
 16062 ;;  lc              1    7[COMMON] unsigned char 
 16063 ;;  hc              1    6[COMMON] unsigned char 
 16064 ;; Return value:  Size  Location     Type
 16065 ;;                  1    wreg      void 
 16066 ;; Registers used:
 16067 ;;		wreg, status,2, status,0, pclath, cstack
 16068 ;; Tracked objects:
 16069 ;;		On entry : 0/0
 16070 ;;		On exit  : 0/0
 16071 ;;		Unchanged: 0/0
 16072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16073 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16074 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16075 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16076 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16077 ;;Total ram usage:        6 bytes
 16078 ;; Hardware stack levels used:    1
 16079 ;; Hardware stack levels required when called:    1
 16080 ;; This function calls:
 16081 ;;		i1_WriteI2C
 16082 ;; This function is called by:
 16083 ;;		_LCDcmd
 16084 ;;		_LCDchar
 16085 ;; This function uses a non-reentrant model
 16086 ;;
 16087                           
 16088                           
 16089                           ;psect for function i1_LCDsend2x4
 16090  0710                     i1_LCDsend2x4:
 16091                           
 16092                           ;incstack = 0
 16093                           ; Regs used in i1_LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 16094                           ;i1LCDsend2x4@c stored from wreg
 16095  0710  00F5               	movwf	i1LCDsend2x4@c
 16096  0711                     i1l3685:
 16097                           
 16098                           ;main.c: 139: unsigned char hc;;main.c: 140: unsigned char lc;;main.c: 142: hc = c & 0xf
      +                          0;
 16099  0711  0875               	movf	i1LCDsend2x4@c,w
 16100  0712  39F0               	andlw	240
 16101  0713  00F3               	movwf	??i1_LCDsend2x4
 16102  0714  0873               	movf	??i1_LCDsend2x4,w
 16103  0715  00F6               	movwf	i1LCDsend2x4@hc
 16104  0716                     i1l3687:
 16105                           
 16106                           ;main.c: 143: lc = (c << 4) & 0xf0;
 16107  0716  0875               	movf	i1LCDsend2x4@c,w
 16108  0717  00F3               	movwf	??i1_LCDsend2x4
 16109  0718  3003               	movlw	3
 16110  0719                     u253_25:
 16111  0719  35F3               	lslf	??i1_LCDsend2x4,f
 16112  071A  3EFF               	addlw	-1
 16113  071B  1D03               	skipz
 16114  071C  2F19               	goto	u253_25
 16115  071D  3573               	lslf	??i1_LCDsend2x4,w
 16116  071E  39F0               	andlw	240
 16117  071F  00F4               	movwf	??i1_LCDsend2x4+1
 16118  0720  0874               	movf	??i1_LCDsend2x4+1,w
 16119  0721  00F7               	movwf	i1LCDsend2x4@lc
 16120  0722                     i1l3689:	
 16121                           ;main.c: 145: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16122                           
 16123  0722  0023               	movlb	3	; select bank3
 16124  0723  0C0F               	rrf	15,w	;volatile
 16125  0724  0C89               	rrf	9,f
 16126  0725  3901               	andlw	1
 16127  0726  00F3               	movwf	??i1_LCDsend2x4
 16128  0727  0811               	movf	17,w	;volatile
 16129  0728  391F               	andlw	31
 16130  0729  0473               	iorwf	??i1_LCDsend2x4,w
 16131  072A  1D03               	btfss	3,2
 16132  072B  2F2D               	goto	u254_21
 16133  072C  2F2E               	goto	u254_20
 16134  072D                     u254_21:
 16135  072D  2F22               	goto	i1l3689
 16136  072E                     u254_20:
 16137  072E                     i1l1029:
 16138                           
 16139                           ;main.c: 146: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 16140  072E  1411               	bsf	17,0	;volatile
 16141  072F                     i1l1030:
 16142  072F  1811               	btfsc	17,0	;volatile
 16143  0730  2F32               	goto	u255_21
 16144  0731  2F33               	goto	u255_20
 16145  0732                     u255_21:
 16146  0732  2F2F               	goto	i1l1030
 16147  0733                     u255_20:
 16148  0733                     i1l3691:
 16149  0733  0C0F               	rrf	15,w	;volatile
 16150  0734  0C89               	rrf	9,f
 16151  0735  3901               	andlw	1
 16152  0736  00F3               	movwf	??i1_LCDsend2x4
 16153  0737  0811               	movf	17,w	;volatile
 16154  0738  391F               	andlw	31
 16155  0739  0473               	iorwf	??i1_LCDsend2x4,w
 16156  073A  1D03               	btfss	3,2
 16157  073B  2F3D               	goto	u256_21
 16158  073C  2F3E               	goto	u256_20
 16159  073D                     u256_21:
 16160  073D  2F33               	goto	i1l3691
 16161  073E                     u256_20:
 16162  073E                     i1l3693:
 16163                           
 16164                           ;main.c: 147: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16165  073E  304E               	movlw	78
 16166  073F  318D  2529  3187   	fcall	i1_WriteI2C
 16167  0742                     i1l3695:
 16168  0742  0023               	movlb	3	; select bank3
 16169  0743  0C0F               	rrf	15,w	;volatile
 16170  0744  0C89               	rrf	9,f
 16171  0745  3901               	andlw	1
 16172  0746  00F3               	movwf	??i1_LCDsend2x4
 16173  0747  0811               	movf	17,w	;volatile
 16174  0748  391F               	andlw	31
 16175  0749  0473               	iorwf	??i1_LCDsend2x4,w
 16176  074A  1D03               	btfss	3,2
 16177  074B  2F4D               	goto	u257_21
 16178  074C  2F4E               	goto	u257_20
 16179  074D                     u257_21:
 16180  074D  2F42               	goto	i1l3695
 16181  074E                     u257_20:
 16182  074E                     i1l3697:
 16183                           
 16184                           ;main.c: 148: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 16185  074E  0876               	movf	i1LCDsend2x4@hc,w
 16186  074F  0472               	iorwf	i1LCDsend2x4@mode,w
 16187  0750  3808               	iorlw	8
 16188  0751  318D  2529  3187   	fcall	i1_WriteI2C
 16189  0754                     i1l3699:
 16190  0754  0023               	movlb	3	; select bank3
 16191  0755  0C0F               	rrf	15,w	;volatile
 16192  0756  0C89               	rrf	9,f
 16193  0757  3901               	andlw	1
 16194  0758  00F3               	movwf	??i1_LCDsend2x4
 16195  0759  0811               	movf	17,w	;volatile
 16196  075A  391F               	andlw	31
 16197  075B  0473               	iorwf	??i1_LCDsend2x4,w
 16198  075C  1D03               	btfss	3,2
 16199  075D  2F5F               	goto	u258_21
 16200  075E  2F60               	goto	u258_20
 16201  075F                     u258_21:
 16202  075F  2F54               	goto	i1l3699
 16203  0760                     u258_20:
 16204  0760                     i1l3701:
 16205                           
 16206                           ;main.c: 149: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 16207  0760  0876               	movf	i1LCDsend2x4@hc,w
 16208  0761  0472               	iorwf	i1LCDsend2x4@mode,w
 16209  0762  380C               	iorlw	12
 16210  0763  318D  2529  3187   	fcall	i1_WriteI2C
 16211  0766                     i1l3703:
 16212  0766  0023               	movlb	3	; select bank3
 16213  0767  0C0F               	rrf	15,w	;volatile
 16214  0768  0C89               	rrf	9,f
 16215  0769  3901               	andlw	1
 16216  076A  00F3               	movwf	??i1_LCDsend2x4
 16217  076B  0811               	movf	17,w	;volatile
 16218  076C  391F               	andlw	31
 16219  076D  0473               	iorwf	??i1_LCDsend2x4,w
 16220  076E  1D03               	btfss	3,2
 16221  076F  2F71               	goto	u259_21
 16222  0770  2F72               	goto	u259_20
 16223  0771                     u259_21:
 16224  0771  2F66               	goto	i1l3703
 16225  0772                     u259_20:
 16226  0772                     i1l1044:
 16227  0772                     i1l3705:	
 16228                           ;main.c: 150: _delay((unsigned long)((1)*(1000000/4000000.0)));
 16229                           
 16230                           
 16231                           ;main.c: 151: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 16232  0772  0876               	movf	i1LCDsend2x4@hc,w
 16233  0773  0472               	iorwf	i1LCDsend2x4@mode,w
 16234  0774  3808               	iorlw	8
 16235  0775  318D  2529  3187   	fcall	i1_WriteI2C
 16236  0778                     i1l3707:
 16237  0778  0023               	movlb	3	; select bank3
 16238  0779  0C0F               	rrf	15,w	;volatile
 16239  077A  0C89               	rrf	9,f
 16240  077B  3901               	andlw	1
 16241  077C  00F3               	movwf	??i1_LCDsend2x4
 16242  077D  0811               	movf	17,w	;volatile
 16243  077E  391F               	andlw	31
 16244  077F  0473               	iorwf	??i1_LCDsend2x4,w
 16245  0780  1D03               	btfss	3,2
 16246  0781  2F83               	goto	u260_21
 16247  0782  2F84               	goto	u260_20
 16248  0783                     u260_21:
 16249  0783  2F78               	goto	i1l3707
 16250  0784                     u260_20:
 16251  0784                     i1l3709:
 16252                           
 16253                           ;main.c: 152: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 16254  0784  0877               	movf	i1LCDsend2x4@lc,w
 16255  0785  0472               	iorwf	i1LCDsend2x4@mode,w
 16256  0786  3808               	iorlw	8
 16257  0787  318D  2529  3187   	fcall	i1_WriteI2C
 16258  078A                     i1l3711:
 16259  078A  0023               	movlb	3	; select bank3
 16260  078B  0C0F               	rrf	15,w	;volatile
 16261  078C  0C89               	rrf	9,f
 16262  078D  3901               	andlw	1
 16263  078E  00F3               	movwf	??i1_LCDsend2x4
 16264  078F  0811               	movf	17,w	;volatile
 16265  0790  391F               	andlw	31
 16266  0791  0473               	iorwf	??i1_LCDsend2x4,w
 16267  0792  1D03               	btfss	3,2
 16268  0793  2F95               	goto	u261_21
 16269  0794  2F96               	goto	u261_20
 16270  0795                     u261_21:
 16271  0795  2F8A               	goto	i1l3711
 16272  0796                     u261_20:
 16273  0796                     i1l3713:
 16274                           
 16275                           ;main.c: 153: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 16276  0796  0877               	movf	i1LCDsend2x4@lc,w
 16277  0797  0472               	iorwf	i1LCDsend2x4@mode,w
 16278  0798  380C               	iorlw	12
 16279  0799  318D  2529  3187   	fcall	i1_WriteI2C
 16280  079C                     i1l3715:
 16281  079C  0023               	movlb	3	; select bank3
 16282  079D  0C0F               	rrf	15,w	;volatile
 16283  079E  0C89               	rrf	9,f
 16284  079F  3901               	andlw	1
 16285  07A0  00F3               	movwf	??i1_LCDsend2x4
 16286  07A1  0811               	movf	17,w	;volatile
 16287  07A2  391F               	andlw	31
 16288  07A3  0473               	iorwf	??i1_LCDsend2x4,w
 16289  07A4  1D03               	btfss	3,2
 16290  07A5  2FA7               	goto	u262_21
 16291  07A6  2FA8               	goto	u262_20
 16292  07A7                     u262_21:
 16293  07A7  2F9C               	goto	i1l3715
 16294  07A8                     u262_20:
 16295  07A8                     i1l1053:
 16296  07A8                     i1l3717:	
 16297                           ;main.c: 154: _delay((unsigned long)((1)*(1000000/4000000.0)));
 16298                           
 16299                           
 16300                           ;main.c: 155: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 16301  07A8  0877               	movf	i1LCDsend2x4@lc,w
 16302  07A9  0472               	iorwf	i1LCDsend2x4@mode,w
 16303  07AA  3808               	iorlw	8
 16304  07AB  318D  2529  3187   	fcall	i1_WriteI2C
 16305  07AE                     i1l3719:
 16306  07AE  0023               	movlb	3	; select bank3
 16307  07AF  0C0F               	rrf	15,w	;volatile
 16308  07B0  0C89               	rrf	9,f
 16309  07B1  3901               	andlw	1
 16310  07B2  00F3               	movwf	??i1_LCDsend2x4
 16311  07B3  0811               	movf	17,w	;volatile
 16312  07B4  391F               	andlw	31
 16313  07B5  0473               	iorwf	??i1_LCDsend2x4,w
 16314  07B6  1D03               	btfss	3,2
 16315  07B7  2FB9               	goto	u263_21
 16316  07B8  2FBA               	goto	u263_20
 16317  07B9                     u263_21:
 16318  07B9  2FAE               	goto	i1l3719
 16319  07BA                     u263_20:
 16320  07BA                     i1l1056:
 16321                           
 16322                           ;main.c: 156: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 16323  07BA  1511               	bsf	17,2	;volatile
 16324  07BB                     i1l1057:
 16325  07BB  1911               	btfsc	17,2	;volatile
 16326  07BC  2FBE               	goto	u264_21
 16327  07BD  2FBF               	goto	u264_20
 16328  07BE                     u264_21:
 16329  07BE  2FBB               	goto	i1l1057
 16330  07BF                     u264_20:
 16331  07BF                     i1l3721:
 16332                           
 16333                           ;main.c: 157: _delay((unsigned long)((50)*(1000000/4000000.0)));
 16334  07BF  3004               	movlw	4
 16335  07C0                     u499_27:
 16336  07C0  0B89               	decfsz	9,f
 16337  07C1  2FC0               	goto	u499_27
 16338  07C2                     i1l1060:
 16339  07C2  0008               	return
 16340  07C3                     __end_ofi1_LCDsend2x4:
 16341                           
 16342                           	psect	text57
 16343  0D29                     __ptext57:	
 16344 ;; *************** function i1_WriteI2C *****************
 16345 ;; Defined at:
 16346 ;;		line 47 in file "I2C/i2c.c"
 16347 ;; Parameters:    Size  Location     Type
 16348 ;;  data_out        1    wreg     unsigned char 
 16349 ;; Auto vars:     Size  Location     Type
 16350 ;;  data_out        1    1[COMMON] unsigned char 
 16351 ;; Return value:  Size  Location     Type
 16352 ;;                  1    wreg      char 
 16353 ;; Registers used:
 16354 ;;		wreg, status,2, status,0
 16355 ;; Tracked objects:
 16356 ;;		On entry : 0/0
 16357 ;;		On exit  : 0/0
 16358 ;;		Unchanged: 0/0
 16359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16362 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16363 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16364 ;;Total ram usage:        2 bytes
 16365 ;; Hardware stack levels used:    1
 16366 ;; This function calls:
 16367 ;;		Nothing
 16368 ;; This function is called by:
 16369 ;;		_tsttc
 16370 ;;		i1_LCDsend2x4
 16371 ;; This function uses a non-reentrant model
 16372 ;;
 16373                           
 16374                           
 16375                           ;psect for function i1_WriteI2C
 16376  0D29                     i1_WriteI2C:
 16377                           
 16378                           ;incstack = 0
 16379                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 16380                           ;i1WriteI2C@data_out stored from wreg
 16381  0D29  00F1               	movwf	i1WriteI2C@data_out
 16382  0D2A                     i1l3655:
 16383                           
 16384                           ;i2c.c: 49: SSP1BUF = data_out;
 16385  0D2A  0871               	movf	i1WriteI2C@data_out,w
 16386  0D2B  0023               	movlb	3	; select bank3
 16387  0D2C  008C               	movwf	12	;volatile
 16388  0D2D                     i1l3657:
 16389                           
 16390                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 16391  0D2D  1F90               	btfss	16,7	;volatile
 16392  0D2E  2D30               	goto	u244_21
 16393  0D2F  2D31               	goto	u244_20
 16394  0D30                     u244_21:
 16395  0D30  2D32               	goto	i1l3663
 16396  0D31                     u244_20:
 16397  0D31  2D73               	goto	i1l30
 16398  0D32                     i1l3663:
 16399                           
 16400                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 16401  0D32  300F               	movlw	15
 16402  0D33  0510               	andwf	16,w	;volatile
 16403  0D34  00F0               	movwf	??i1_WriteI2C
 16404  0D35  3008               	movlw	8
 16405  0D36  0670               	xorwf	??i1_WriteI2C,w
 16406  0D37  1903               	btfsc	3,2
 16407  0D38  2D3A               	goto	u245_21
 16408  0D39  2D3B               	goto	u245_20
 16409  0D3A                     u245_21:
 16410  0D3A  2D51               	goto	i1l3675
 16411  0D3B                     u245_20:
 16412  0D3B                     i1l3665:
 16413  0D3B  300F               	movlw	15
 16414  0D3C  0510               	andwf	16,w	;volatile
 16415  0D3D  00F0               	movwf	??i1_WriteI2C
 16416  0D3E  300B               	movlw	11
 16417  0D3F  0670               	xorwf	??i1_WriteI2C,w
 16418  0D40  1903               	btfsc	3,2
 16419  0D41  2D43               	goto	u246_21
 16420  0D42  2D44               	goto	u246_20
 16421  0D43                     u246_21:
 16422  0D43  2D51               	goto	i1l3675
 16423  0D44                     u246_20:
 16424  0D44                     i1l3667:
 16425                           
 16426                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 16427  0D44  1610               	bsf	16,4	;volatile
 16428  0D45                     i1l33:	
 16429                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 16430                           
 16431  0D45  002E               	movlb	14	; select bank14
 16432  0D46  1C0F               	btfss	15,0	;volatile
 16433  0D47  2D49               	goto	u247_21
 16434  0D48  2D4A               	goto	u247_20
 16435  0D49                     u247_21:
 16436  0D49  2D45               	goto	i1l33
 16437  0D4A                     u247_20:
 16438  0D4A                     i1l35:
 16439                           
 16440                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 16441  0D4A  0023               	movlb	3	; select bank3
 16442  0D4B  190F               	btfsc	15,2	;volatile
 16443  0D4C  2D4E               	goto	u248_21
 16444  0D4D  2D4F               	goto	u248_20
 16445  0D4E                     u248_21:
 16446  0D4E  2D73               	goto	i1l30
 16447  0D4F                     u248_20:
 16448  0D4F                     i1l3669:
 16449  0D4F  080F               	movf	15,w	;volatile
 16450  0D50  2D73               	goto	i1l30
 16451  0D51                     i1l3675:
 16452                           
 16453                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 16454  0D51  300F               	movlw	15
 16455  0D52  0510               	andwf	16,w	;volatile
 16456  0D53  00F0               	movwf	??i1_WriteI2C
 16457  0D54  3008               	movlw	8
 16458  0D55  0670               	xorwf	??i1_WriteI2C,w
 16459  0D56  1903               	btfsc	3,2
 16460  0D57  2D59               	goto	u249_21
 16461  0D58  2D5A               	goto	u249_20
 16462  0D59                     u249_21:
 16463  0D59  2D63               	goto	i1l42
 16464  0D5A                     u249_20:
 16465  0D5A                     i1l3677:
 16466  0D5A  300F               	movlw	15
 16467  0D5B  0510               	andwf	16,w	;volatile
 16468  0D5C  00F0               	movwf	??i1_WriteI2C
 16469  0D5D  300B               	movlw	11
 16470  0D5E  0670               	xorwf	??i1_WriteI2C,w
 16471  0D5F  1D03               	btfss	3,2
 16472  0D60  2D62               	goto	u250_21
 16473  0D61  2D63               	goto	u250_20
 16474  0D62                     u250_21:
 16475  0D62  2D73               	goto	i1l30
 16476  0D63                     u250_20:
 16477  0D63                     i1l42:
 16478  0D63  180F               	btfsc	15,0	;volatile
 16479  0D64  2D66               	goto	u251_21
 16480  0D65  2D67               	goto	u251_20
 16481  0D66                     u251_21:
 16482  0D66  2D63               	goto	i1l42
 16483  0D67                     u251_20:
 16484  0D67                     i1l3679:
 16485  0D67  0C0F               	rrf	15,w	;volatile
 16486  0D68  0C89               	rrf	9,f
 16487  0D69  3901               	andlw	1
 16488  0D6A  00F0               	movwf	??i1_WriteI2C
 16489  0D6B  0811               	movf	17,w	;volatile
 16490  0D6C  391F               	andlw	31
 16491  0D6D  0470               	iorwf	??i1_WriteI2C,w
 16492  0D6E  1D03               	btfss	3,2
 16493  0D6F  2D71               	goto	u252_21
 16494  0D70  2D72               	goto	u252_20
 16495  0D71                     u252_21:
 16496  0D71  2D67               	goto	i1l3679
 16497  0D72                     u252_20:
 16498  0D72                     i1l47:
 16499                           
 16500                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 16501  0D72  0811               	movf	17,w	;volatile
 16502  0D73                     i1l30:
 16503  0D73  0008               	return
 16504  0D74                     __end_ofi1_WriteI2C:
 16505                           
 16506                           	psect	text58
 16507  0A2D                     __ptext58:	
 16508 ;; *************** function _TMR3_WriteTimer *****************
 16509 ;; Defined at:
 16510 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 16511 ;; Parameters:    Size  Location     Type
 16512 ;;  timerVal        2    0[COMMON] unsigned int 
 16513 ;; Auto vars:     Size  Location     Type
 16514 ;;		None
 16515 ;; Return value:  Size  Location     Type
 16516 ;;                  1    wreg      void 
 16517 ;; Registers used:
 16518 ;;		wreg, status,2
 16519 ;; Tracked objects:
 16520 ;;		On entry : 0/0
 16521 ;;		On exit  : 0/0
 16522 ;;		Unchanged: 0/0
 16523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16527 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16528 ;;Total ram usage:        2 bytes
 16529 ;; Hardware stack levels used:    1
 16530 ;; This function calls:
 16531 ;;		Nothing
 16532 ;; This function is called by:
 16533 ;;		_TMR3_ISR
 16534 ;;		_TMR3_Reload
 16535 ;; This function uses a non-reentrant model
 16536 ;;
 16537                           
 16538                           
 16539                           ;psect for function _TMR3_WriteTimer
 16540  0A2D                     _TMR3_WriteTimer:
 16541  0A2D                     i1l4233:	
 16542                           ;incstack = 0
 16543                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 16544                           
 16545                           
 16546                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 16547  0A2D  0024               	movlb	4	; select bank4
 16548  0A2E  1D14               	btfss	20,2	;volatile
 16549  0A2F  2A31               	goto	u346_21
 16550  0A30  2A32               	goto	u346_20
 16551  0A31                     u346_21:
 16552  0A31  2A39               	goto	i1l4243
 16553  0A32                     u346_20:
 16554  0A32                     i1l4235:
 16555                           
 16556                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 16557  0A32  1014               	bcf	20,0	;volatile
 16558  0A33                     i1l4237:
 16559                           
 16560                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 16561  0A33  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 16562  0A34  0093               	movwf	19	;volatile
 16563  0A35                     i1l4239:
 16564                           
 16565                           ;tmr3.c: 136: TMR3L = timerVal;
 16566  0A35  0870               	movf	TMR3_WriteTimer@timerVal,w
 16567  0A36  0092               	movwf	18	;volatile
 16568  0A37                     i1l4241:
 16569                           
 16570                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 16571  0A37  1414               	bsf	20,0	;volatile
 16572                           
 16573                           ;tmr3.c: 140: }
 16574  0A38  2A3D               	goto	i1l465
 16575  0A39                     i1l4243:
 16576                           
 16577                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 16578  0A39  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 16579  0A3A  0093               	movwf	19	;volatile
 16580  0A3B                     i1l4245:
 16581                           
 16582                           ;tmr3.c: 145: TMR3L = timerVal;
 16583  0A3B  0870               	movf	TMR3_WriteTimer@timerVal,w
 16584  0A3C  0092               	movwf	18	;volatile
 16585  0A3D                     i1l465:
 16586  0A3D  0008               	return
 16587  0A3E                     __end_of_TMR3_WriteTimer:
 16588                           
 16589                           	psect	text59
 16590  0A9D                     __ptext59:	
 16591 ;; *************** function _TMR1_ISR *****************
 16592 ;; Defined at:
 16593 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 16594 ;; Parameters:    Size  Location     Type
 16595 ;;		None
 16596 ;; Auto vars:     Size  Location     Type
 16597 ;;		None
 16598 ;; Return value:  Size  Location     Type
 16599 ;;                  1    wreg      void 
 16600 ;; Registers used:
 16601 ;;		wreg, status,2, status,0, pclath, cstack
 16602 ;; Tracked objects:
 16603 ;;		On entry : 0/0
 16604 ;;		On exit  : 0/0
 16605 ;;		Unchanged: 0/0
 16606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16611 ;;Total ram usage:        0 bytes
 16612 ;; Hardware stack levels used:    1
 16613 ;; Hardware stack levels required when called:    1
 16614 ;; This function calls:
 16615 ;;		Absolute function
 16616 ;;		_Clock_ISR
 16617 ;;		_TMR1_DefaultInterruptHandler
 16618 ;;		_TMR1_WriteTimer
 16619 ;; This function is called by:
 16620 ;;		_INTERRUPT_InterruptManager
 16621 ;; This function uses a non-reentrant model
 16622 ;;
 16623                           
 16624                           
 16625                           ;psect for function _TMR1_ISR
 16626  0A9D                     _TMR1_ISR:
 16627  0A9D                     i1l4559:	
 16628                           ;incstack = 0
 16629                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 16630                           
 16631                           
 16632                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 16633  0A9D  002E               	movlb	14	; select bank14
 16634  0A9E  1010               	bcf	16,0	;volatile
 16635  0A9F                     i1l4561:
 16636                           
 16637                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 16638  0A9F  0021               	movlb	1	; select bank1
 16639  0AA0  0831               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 16640  0AA1  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 16641  0AA2  0830               	movf	_timer1ReloadVal^(0+128),w	;volatile
 16642  0AA3  00F0               	movwf	TMR1_WriteTimer@timerVal
 16643  0AA4  318A  221C  318A   	fcall	_TMR1_WriteTimer
 16644  0AA7                     i1l4563:
 16645                           
 16646                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 16647  0AA7  0021               	movlb	1	; select bank1
 16648  0AA8  082E               	movf	_TMR1_InterruptHandler^(0+128),w
 16649  0AA9  042F               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 16650  0AAA  1903               	btfsc	3,2
 16651  0AAB  2AAD               	goto	u411_21
 16652  0AAC  2AAE               	goto	u411_20
 16653  0AAD                     u411_21:
 16654  0AAD  2AB3               	goto	i1l414
 16655  0AAE                     u411_20:
 16656  0AAE                     i1l4565:
 16657                           
 16658                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 16659  0AAE  082F               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 16660  0AAF  008A               	movwf	10
 16661  0AB0  082E               	movf	_TMR1_InterruptHandler^(0+128),w
 16662  0AB1  000A               	callw
 16663  0AB2  318A               	pagesel	$
 16664  0AB3                     i1l414:
 16665  0AB3  0008               	return
 16666  0AB4                     __end_of_TMR1_ISR:
 16667                           
 16668                           	psect	text60
 16669  0A1C                     __ptext60:	
 16670 ;; *************** function _TMR1_WriteTimer *****************
 16671 ;; Defined at:
 16672 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 16673 ;; Parameters:    Size  Location     Type
 16674 ;;  timerVal        2    0[COMMON] unsigned int 
 16675 ;; Auto vars:     Size  Location     Type
 16676 ;;		None
 16677 ;; Return value:  Size  Location     Type
 16678 ;;                  1    wreg      void 
 16679 ;; Registers used:
 16680 ;;		wreg, status,2
 16681 ;; Tracked objects:
 16682 ;;		On entry : 0/0
 16683 ;;		On exit  : 0/0
 16684 ;;		Unchanged: 0/0
 16685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16689 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16690 ;;Total ram usage:        2 bytes
 16691 ;; Hardware stack levels used:    1
 16692 ;; This function calls:
 16693 ;;		Nothing
 16694 ;; This function is called by:
 16695 ;;		_TMR1_ISR
 16696 ;;		_TMR1_Reload
 16697 ;; This function uses a non-reentrant model
 16698 ;;
 16699                           
 16700                           
 16701                           ;psect for function _TMR1_WriteTimer
 16702  0A1C                     _TMR1_WriteTimer:
 16703  0A1C                     i1l4219:	
 16704                           ;incstack = 0
 16705                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 16706                           
 16707                           
 16708                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 16709  0A1C  0024               	movlb	4	; select bank4
 16710  0A1D  1D0E               	btfss	14,2	;volatile
 16711  0A1E  2A20               	goto	u345_21
 16712  0A1F  2A21               	goto	u345_20
 16713  0A20                     u345_21:
 16714  0A20  2A28               	goto	i1l4229
 16715  0A21                     u345_20:
 16716  0A21                     i1l4221:
 16717                           
 16718                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 16719  0A21  100E               	bcf	14,0	;volatile
 16720  0A22                     i1l4223:
 16721                           
 16722                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 16723  0A22  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 16724  0A23  008D               	movwf	13	;volatile
 16725  0A24                     i1l4225:
 16726                           
 16727                           ;tmr1.c: 136: TMR1L = timerVal;
 16728  0A24  0870               	movf	TMR1_WriteTimer@timerVal,w
 16729  0A25  008C               	movwf	12	;volatile
 16730  0A26                     i1l4227:
 16731                           
 16732                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 16733  0A26  140E               	bsf	14,0	;volatile
 16734                           
 16735                           ;tmr1.c: 140: }
 16736  0A27  2A2C               	goto	i1l401
 16737  0A28                     i1l4229:
 16738                           
 16739                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 16740  0A28  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 16741  0A29  008D               	movwf	13	;volatile
 16742  0A2A                     i1l4231:
 16743                           
 16744                           ;tmr1.c: 145: TMR1L = timerVal;
 16745  0A2A  0870               	movf	TMR1_WriteTimer@timerVal,w
 16746  0A2B  008C               	movwf	12	;volatile
 16747  0A2C                     i1l401:
 16748  0A2C  0008               	return
 16749  0A2D                     __end_of_TMR1_WriteTimer:
 16750                           
 16751                           	psect	text61
 16752  0DC7                     __ptext61:	
 16753 ;; *************** function _Clock_ISR *****************
 16754 ;; Defined at:
 16755 ;;		line 295 in file "main.c"
 16756 ;; Parameters:    Size  Location     Type
 16757 ;;		None
 16758 ;; Auto vars:     Size  Location     Type
 16759 ;;		None
 16760 ;; Return value:  Size  Location     Type
 16761 ;;                  1    wreg      void 
 16762 ;; Registers used:
 16763 ;;		wreg, status,2, status,0
 16764 ;; Tracked objects:
 16765 ;;		On entry : 0/0
 16766 ;;		On exit  : 0/0
 16767 ;;		Unchanged: 0/0
 16768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16771 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16772 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16773 ;;Total ram usage:        1 bytes
 16774 ;; Hardware stack levels used:    1
 16775 ;; This function calls:
 16776 ;;		Nothing
 16777 ;; This function is called by:
 16778 ;;		_main
 16779 ;;		_TMR1_ISR
 16780 ;; This function uses a non-reentrant model
 16781 ;;
 16782                           
 16783                           
 16784                           ;psect for function _Clock_ISR
 16785  0DC7                     _Clock_ISR:
 16786  0DC7                     i1l4315:	
 16787                           ;incstack = 0
 16788                           ; Regs used in _Clock_ISR: [wreg+status,2+status,0]
 16789                           
 16790                           
 16791                           ;main.c: 297: t.s++;
 16792  0DC7  3001               	movlw	1
 16793  0DC8  00F0               	movwf	??_Clock_ISR
 16794  0DC9  0870               	movf	??_Clock_ISR,w
 16795  0DCA  0020               	movlb	0	; select bank0
 16796  0DCB  07CF               	addwf	_t+2,f
 16797                           
 16798                           ;main.c: 299: if(t.s==60){
 16799  0DCC  303C               	movlw	60
 16800  0DCD  064F               	xorwf	_t+2,w
 16801  0DCE  1D03               	btfss	3,2
 16802  0DCF  2DD1               	goto	u366_21
 16803  0DD0  2DD2               	goto	u366_20
 16804  0DD1                     u366_21:
 16805  0DD1  2DD7               	goto	i1l4321
 16806  0DD2                     u366_20:
 16807  0DD2                     i1l4317:
 16808                           
 16809                           ;main.c: 300: t.m++;
 16810  0DD2  3001               	movlw	1
 16811  0DD3  00F0               	movwf	??_Clock_ISR
 16812  0DD4  0870               	movf	??_Clock_ISR,w
 16813  0DD5  07CE               	addwf	_t+1,f
 16814  0DD6                     i1l4319:
 16815                           
 16816                           ;main.c: 301: t.s=0;
 16817  0DD6  01CF               	clrf	_t+2
 16818  0DD7                     i1l4321:
 16819                           
 16820                           ;main.c: 302: };main.c: 303: if(t.m==60){
 16821  0DD7  303C               	movlw	60
 16822  0DD8  064E               	xorwf	_t+1,w
 16823  0DD9  1D03               	btfss	3,2
 16824  0DDA  2DDC               	goto	u367_21
 16825  0DDB  2DDD               	goto	u367_20
 16826  0DDC                     u367_21:
 16827  0DDC  2DE2               	goto	i1l4327
 16828  0DDD                     u367_20:
 16829  0DDD                     i1l4323:
 16830                           
 16831                           ;main.c: 305: t.h++;
 16832  0DDD  3001               	movlw	1
 16833  0DDE  00F0               	movwf	??_Clock_ISR
 16834  0DDF  0870               	movf	??_Clock_ISR,w
 16835  0DE0  07CD               	addwf	_t,f
 16836  0DE1                     i1l4325:
 16837                           
 16838                           ;main.c: 306: t.m=0;
 16839  0DE1  01CE               	clrf	_t+1
 16840  0DE2                     i1l4327:
 16841                           
 16842                           ;main.c: 307: };main.c: 308: if(t.h==24){
 16843  0DE2  3018               	movlw	24
 16844  0DE3  064D               	xorwf	_t,w
 16845  0DE4  1D03               	btfss	3,2
 16846  0DE5  2DE7               	goto	u368_21
 16847  0DE6  2DE8               	goto	u368_20
 16848  0DE7                     u368_21:
 16849  0DE7  2DE9               	goto	i1l4331
 16850  0DE8                     u368_20:
 16851  0DE8                     i1l4329:
 16852                           
 16853                           ;main.c: 309: t.h=0;
 16854  0DE8  01CD               	clrf	_t
 16855  0DE9                     i1l4331:
 16856                           
 16857                           ;main.c: 310: };main.c: 313: if(alarmsEnable && t.s >= clkAlarm.alarmVal.s && t.m >= clk
      +                          Alarm.alarmVal.m && t.h >= clkAlarm.alarmVal.h && editingClockAlarm == 0){
 16858  0DE9  086A               	movf	_alarmsEnable,w
 16859  0DEA  1903               	btfsc	3,2
 16860  0DEB  2DED               	goto	u369_21
 16861  0DEC  2DEE               	goto	u369_20
 16862  0DED                     u369_21:
 16863  0DED  2E12               	goto	i1l4345
 16864  0DEE                     u369_20:
 16865  0DEE                     i1l4333:
 16866  0DEE  085E               	movf	_clkAlarm+2,w
 16867  0DEF  024F               	subwf	_t+2,w
 16868  0DF0  1C03               	skipc
 16869  0DF1  2DF3               	goto	u370_21
 16870  0DF2  2DF4               	goto	u370_20
 16871  0DF3                     u370_21:
 16872  0DF3  2E12               	goto	i1l4345
 16873  0DF4                     u370_20:
 16874  0DF4                     i1l4335:
 16875  0DF4  085D               	movf	_clkAlarm+1,w
 16876  0DF5  024E               	subwf	_t+1,w
 16877  0DF6  1C03               	skipc
 16878  0DF7  2DF9               	goto	u371_21
 16879  0DF8  2DFA               	goto	u371_20
 16880  0DF9                     u371_21:
 16881  0DF9  2E12               	goto	i1l4345
 16882  0DFA                     u371_20:
 16883  0DFA                     i1l4337:
 16884  0DFA  085C               	movf	_clkAlarm,w
 16885  0DFB  024D               	subwf	_t,w
 16886  0DFC  1C03               	skipc
 16887  0DFD  2DFF               	goto	u372_21
 16888  0DFE  2E00               	goto	u372_20
 16889  0DFF                     u372_21:
 16890  0DFF  2E12               	goto	i1l4345
 16891  0E00                     u372_20:
 16892  0E00                     i1l4339:
 16893  0E00  0854               	movf	_editingClockAlarm,w
 16894  0E01  0455               	iorwf	_editingClockAlarm+1,w
 16895  0E02  1D03               	btfss	3,2
 16896  0E03  2E05               	goto	u373_21
 16897  0E04  2E06               	goto	u373_20
 16898  0E05                     u373_21:
 16899  0E05  2E12               	goto	i1l4345
 16900  0E06                     u373_20:
 16901  0E06                     i1l4341:
 16902                           
 16903                           ;main.c: 314: alarmPWMStart.h = -1;
 16904  0E06  30FF               	movlw	255
 16905  0E07  00F0               	movwf	??_Clock_ISR
 16906  0E08  0870               	movf	??_Clock_ISR,w
 16907  0E09  0021               	movlb	1	; select bank1
 16908  0E0A  00B9               	movwf	_alarmPWMStart^(0+128)
 16909  0E0B                     i1l4343:
 16910                           
 16911                           ;main.c: 315: clkAlarm.trigger = 1;
 16912  0E0B  0020               	movlb	0	; select bank0
 16913  0E0C  01DF               	clrf	_clkAlarm+3
 16914  0E0D  0ADF               	incf	_clkAlarm+3,f
 16915                           
 16916                           ;main.c: 316: clkAlarm.alarmVal.h = 25;
 16917  0E0E  3019               	movlw	25
 16918  0E0F  00F0               	movwf	??_Clock_ISR
 16919  0E10  0870               	movf	??_Clock_ISR,w
 16920  0E11  00DC               	movwf	_clkAlarm
 16921  0E12                     i1l4345:
 16922  0E12  1003               	clrc
 16923  0E13  1F96               	btfss	22,7	;volatile
 16924  0E14  1403               	setc
 16925  0E15  1803               	btfsc	3,0
 16926  0E16  2E18               	goto	u374_21
 16927  0E17  2E1B               	goto	u374_20
 16928  0E18                     u374_21:
 16929  0E18  0020               	movlb	0	; select bank0
 16930  0E19  1796               	bsf	22,7	;volatile
 16931  0E1A  2E1D               	goto	u375_24
 16932  0E1B                     u374_20:
 16933  0E1B  0020               	movlb	0	; select bank0
 16934  0E1C  1396               	bcf	22,7	;volatile
 16935  0E1D                     u375_24:
 16936  0E1D                     i1l1134:
 16937  0E1D  0008               	return
 16938  0E1E                     __end_of_Clock_ISR:
 16939                           
 16940                           	psect	text62
 16941  097A                     __ptext62:	
 16942 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 16943 ;; Defined at:
 16944 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 16945 ;; Parameters:    Size  Location     Type
 16946 ;;		None
 16947 ;; Auto vars:     Size  Location     Type
 16948 ;;		None
 16949 ;; Return value:  Size  Location     Type
 16950 ;;                  1    wreg      void 
 16951 ;; Registers used:
 16952 ;;		None
 16953 ;; Tracked objects:
 16954 ;;		On entry : 0/0
 16955 ;;		On exit  : 0/0
 16956 ;;		Unchanged: 0/0
 16957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16962 ;;Total ram usage:        0 bytes
 16963 ;; Hardware stack levels used:    1
 16964 ;; This function calls:
 16965 ;;		Nothing
 16966 ;; This function is called by:
 16967 ;;		_TMR1_Initialize
 16968 ;;		_TMR1_ISR
 16969 ;; This function uses a non-reentrant model
 16970 ;;
 16971                           
 16972                           
 16973                           ;psect for function _TMR1_DefaultInterruptHandler
 16974  097A                     _TMR1_DefaultInterruptHandler:
 16975  097A                     i1l420:	
 16976                           ;incstack = 0
 16977                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 16978                           
 16979  097A  0008               	return
 16980  097B                     __end_of_TMR1_DefaultInterruptHandler:
 16981  007E                     btemp	set	126	;btemp
 16982  007E                     int$flags	set	126
 16983  007E                     wtemp0	set	126
 16984                           
 16985                           	psect	config
 16986                           
 16987                           ;Config register CONFIG1 @ 0x8007
 16988                           ;	External Oscillator mode selection bits
 16989                           ;	FEXTOSC = OFF, Oscillator not enabled
 16990                           ;	Power-up default value for COSC bits
 16991                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 16992                           ;	Clock Out Enable bit
 16993                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 16994                           ;	Clock Switch Enable bit
 16995                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 16996                           ;	Fail-Safe Clock Monitor Enable bit
 16997                           ;	FCMEN = ON, FSCM timer enabled
 16998  8007                     	org	32775
 16999  8007  3FEC               	dw	16364
 17000                           
 17001                           ;Config register CONFIG2 @ 0x8008
 17002                           ;	Master Clear Enable bit
 17003                           ;	MCLRE = ON, MCLR pin is Master Clear function
 17004                           ;	Power-up Timer Enable bit
 17005                           ;	PWRTE = OFF, PWRT disabled
 17006                           ;	Low-Power BOR enable bit
 17007                           ;	LPBOREN = OFF, ULPBOR disabled
 17008                           ;	Brown-out reset enable bits
 17009                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 17010                           ;	Brown-out Reset Voltage Selection
 17011                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 17012                           ;	Zero-cross detect disable
 17013                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 17014                           ;	Peripheral Pin Select one-way control
 17015                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 17016                           ;	Stack Overflow/Underflow Reset Enable bit
 17017                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 17018                           ;	Background Debugger
 17019                           ;	DEBUG = OFF, Background Debugger disabled
 17020  8008                     	org	32776
 17021  8008  3FFF               	dw	16383
 17022                           
 17023                           ;Config register CONFIG3 @ 0x8009
 17024                           ;	WDT Period Select bits
 17025                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 17026                           ;	WDT operating mode
 17027                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 17028                           ;	WDT Window Select bits
 17029                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 17030                           ;	WDT input clock selector
 17031                           ;	WDTCCS = SC, Software Control
 17032  8009                     	org	32777
 17033  8009  3F9F               	dw	16287
 17034                           
 17035                           ;Config register CONFIG4 @ 0x800A
 17036                           ;	UserNVM self-write protection bits
 17037                           ;	WRT = OFF, Write protection off
 17038                           ;	Scanner Enable bit
 17039                           ;	SCANE = available, Scanner module is available for use
 17040                           ;	Low Voltage Programming Enable bit
 17041                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 17042  800A                     	org	32778
 17043  800A  3FFF               	dw	16383
 17044                           
 17045                           ;Config register CONFIG5 @ 0x800B
 17046                           ;	UserNVM Program memory code protection bit
 17047                           ;	CP = OFF, Program Memory code protection disabled
 17048                           ;	DataNVM code protection bit
 17049                           ;	CPD = OFF, Data EEPROM code protection disabled
 17050  800B                     	org	32779
 17051  800B  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    10
    Data        18
    BSS         22
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      79
    BANK1            80     10      28
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    differenceBetweenTimePeriod@diff	PTR struct Time size(1) Largest target is 3
		 -> menuLCD_ISR@diff(BANK0[3]), 

    LCDstr@p	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR5_ISR->_monitoring_ISR
    _monitoring_ISR->_DATAEE_WriteByte
    _tsttc->i1_WriteI2C
    _DATAEE_WriteByte->___wmul
    _DATAEE_ReadByte->___wmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->i1_LCDsend2x4
    _LCDcmd->i1_LCDsend2x4
    i1_LCDsend2x4->i1_WriteI2C
    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR5_ISR->_monitoring_ISR
    _TMR3_ISR->_menuLCD_ISR
    _menuLCD_ISR->_sprintf

Critical Paths under _main in BANK1

    _main->_LCDinit
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2044
                                              9 BANK1      1     1      0
                            _LCDinit
                 _PWM6_LoadDutyValue
              _PWM_Output_D4_Disable
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                     _TMR2_StopTimer
           _TMR3_SetInterruptHandler
           _TMR5_SetInterruptHandler
                          _editClock
                            _editLum
                           _editTemp
                   _i2c1_driver_open
                       _toggleAlarms
 ---------------------------------------------------------------------------------
 (1) _toggleAlarms                                         1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _editTemp                                             1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editLum                                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editClock                                            1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StopTimer                                       0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (2) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     522
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0     174
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     174
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Output_D4_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     220
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     780
                                              8 BANK1      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend2x4                                           6     5      1     736
                                              2 BANK1      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK1      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    9828
                           _TMR1_ISR
                           _TMR3_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR5_ISR                                             0     0      0    3133
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                     _monitoring_ISR *
 ---------------------------------------------------------------------------------
 (6) _monitoring_ISR                                       8     8      0    2893
                                             10 COMMON     3     3      0
                                              0 BANK0      5     5      0
           _ADCC_GetSingleConversion
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                             ___wmul
                              _tsttc
 ---------------------------------------------------------------------------------
 (7) _tsttc                                                2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _DATAEE_WriteByte                                     4     1      3     849
                                              6 COMMON     4     1      3
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _DATAEE_ReadByte                                      2     0      2     272
                                              6 COMMON     2     0      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (6) _TMR5_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR5_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0    6455
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
                        _menuLCD_ISR *
 ---------------------------------------------------------------------------------
 (6) _menuLCD_ISR                                         24    24      0    6215
                                             21 BANK0     24    24      0
                            _LCDchar
                             _LCDcmd
                             _LCDstr
               _PWM_Output_D4_Enable
                    _TMR2_StartTimer
        _differenceBetweenTimePeriod
                            _sprintf
               i1_PWM6_LoadDutyValue
            i1_PWM_Output_D4_Disable
                   i1_TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (7) i1_TMR2_StopTimer                                     0     0      0       0
                        i1_TMR2_Stop
 ---------------------------------------------------------------------------------
 (8) i1_TMR2_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM_Output_D4_Disable                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM6_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             29    21      8    3867
                                              0 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    1612
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _differenceBetweenTimePeriod                          8     1      7     595
                                              0 COMMON     8     1      7
 ---------------------------------------------------------------------------------
 (7) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (8) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PWM_Output_D4_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LCDstr                                               3     3      0     550
                                              9 COMMON     3     3      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (8) _LCDchar                                              1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (7) _LCDcmd                                               1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (9) i1_LCDsend2x4                                         6     5      1     384
                                              2 COMMON     6     5      1
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) i1_WriteI2C                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _TMR3_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
                          _Clock_ISR *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Clock_ISR                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _PWM6_LoadDutyValue
   _PWM_Output_D4_Disable
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_StopTimer
     _TMR2_Stop
   _TMR3_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _editClock
   _editLum
   _editTemp
   _i2c1_driver_open
   _toggleAlarms

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _Clock_ISR *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *
     _menuLCD_ISR *
       _LCDchar
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDcmd
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDstr
         _LCDchar
           i1_LCDsend2x4
             i1_WriteI2C
       _PWM_Output_D4_Enable
       _TMR2_StartTimer
         _TMR2_Start
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       i1_PWM6_LoadDutyValue
       i1_PWM_Output_D4_Disable
       i1_TMR2_StopTimer
         i1_TMR2_Stop
   _TMR5_ISR
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _monitoring_ISR *
       _ADCC_GetSingleConversion
       _DATAEE_ReadByte
         ___wmul (ARG)
       _DATAEE_WriteByte
         ___wmul (ARG)
       ___wmul
       _tsttc
         _ReadI2C
         i1_WriteI2C

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      A      1C       7       35.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      79      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      79      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Oct 31 12:50:08 2020

                                       _t 004D          __end_of_TMR5_SetInterruptHandler 09AE  
                              i1_WriteI2C 0D29                                        l30 0E77  
                                      l33 0E3F                                        l42 0E61  
                                      l35 0E44                                        l47 0E75  
                     ___wmul@multiplicand 0072                         ??_TMR5_WriteTimer 0072  
             __size_of_PWM6_LoadDutyValue 0019                                       l122 07FF  
                                     l172 0B47                                       l175 09D9  
                                     l239 09F1                                       l417 09A1  
                                     l178 09D0                                       l451 0BC2  
                                     l481 09A7                                       l705 09AD  
                                     l722 0B11                                       l563 0AF8  
                                     l387 0BA3                                       l719 09FE  
                                     l675 0BE1                                       l940 0DC2  
                                     l764 098C                                       l749 0A0C  
                                     l943 0DC6                                       l927 0D85  
                                     l767 099B                                       l928 0D87  
                                     l939 0DC0                                       _PR2 028D  
                         _timer1ReloadVal 00B0                   __size_of_PMD_Initialize 0008  
                         _TMR2_Initialize 09FF                                       wreg 0009  
                             ?_LCDsend2x4 00A2                           __end_of_LCDchar 09C9  
                                    l1030 0660                                      l1060 070F  
                                    l1044 06B0                                      l1053 06F0  
                                    l1029 065E                                      l1205 0F24  
                                    l1206 0F09                                      l1063 0EED  
                                    l1056 0706                                      l1224 0F73  
                                    l1240 0C98                                      l1057 0708  
                                    l1241 0C93                                      l1251 0BE2  
                                    l1236 0CEC                                      l1228 0CD1  
                                    l1252 0BF8                                      l1229 0CCC  
                                    l1253 0BF3                                      l1094 0989  
                                    l1270 0FD6                                      l1248 0CB3  
                                    l1259 0C12                           _timer3ReloadVal 006D  
                                    l4101 07D1                                      l1277 0FDE  
                                    l1278 0FE1                                      l4111 07DC  
                                    l4103 07D3                                      l1279 0FE4  
                                    l4121 07F0                                      l4113 07E8  
                                    l4105 07D6                                      l4201 0B85  
                                    l4131 07FC                                      l4123 07F2  
                                    l4115 07EA                                      l4107 07D8  
                                    l4211 0B95                                      l4203 0B88  
                                    l4301 06C6                                      l4141 09D8  
                                    l4125 07F5                                      l4117 07EC  
                                    l4109 07DA                                      l4133 09C9  
                                    l4213 0B97                                      l4205 0B8A  
                                    l4311 06F7                                      l4303 06CC  
                                    l4151 0AF6                                      l4135 09D1  
                                    l4127 07F8                                      l4119 07EE  
                                    l4143 09F2                                      l4215 0B98  
                                    l4207 0B8C                                      l4313 070C  
                                    l4305 06DB                                      l4137 09D4  
                                    l4129 07FA                                      l4145 09F9  
                                    l4217 0BA0                                      l4209 0B8E  
                                    l4161 0BAD                                      l4153 0BA4  
                                    l4307 06E1                                      l4147 0AE2  
                                    l4139 09D5                                      l4091 07C3  
                                    l4163 0BB4                                      l4155 0BA7  
                                    l4171 0BC3                                      l4309 06F0  
                                    l4149 0AF4                                      l4093 07C9  
                                    l4165 0BB6                                      l4157 0BA9  
                                    l4181 0BD3                                      l4173 0BC6  
                                    l4261 098A                                      l4271 0D9E  
                                    l4263 0D76                                      l4095 07CB  
                                    l4191 0A02                                      l4167 0BB7  
                                    l4159 0BAB                                      l4183 0BD5  
                                    l4175 0BC8                                      l4273 0DAD  
                                    l4265 0D76                                      l4281 064F  
                                    l4097 07CD                                      l4193 0A03  
                                    l4169 0BBF                                      l4185 0BD6  
                                    l4177 0BCA                                      l4521 0B38  
                                    l4513 0B2C                                      l3811 0E20  
                                    l4275 0DB1                                      l4267 0D8B  
                                    l4291 068C                                      l4283 0664  
                                    l4099 07CF                                      l4195 0A06  
                                    l4187 0BDE                                      l4179 0BCC  
                                    l4523 0B3B                                      l4515 0B2F  
                                    l4531 09E6                                      l3821 0E32  
                                    l3813 0E23                                      l4269 0D9A  
                                    l4293 069B                                      l4285 0673  
                                    l4277 063E                                      l4197 0A07  
                                    l4189 09FF                                      l4525 0B3E  
                                    l4517 0B32                                      l4701 0F45  
                                    l4533 09EB                                      l3823 0E3D  
                                    l3831 0E4B                                      l4295 06A1  
                                    l4287 0677                                      l4279 0643  
                                    l4199 0A09                                      l4527 0B41  
                                    l4519 0B35                                      l4711 0F61  
                                    l4703 0F4B                                      l4535 09EC  
                                    l3833 0E56                                      l3825 0E49  
                                    l4297 06B0                                      l4289 0686  
                                    l4641 0E85                           __end_of_LCDinit 0EEE  
                                    l3841 099C                                      l4529 0B44  
                                    l4713 0F63                                      l4705 0F4D  
                                    l4721 0CB8                                      l4537 09EE  
                                    l3835 0E66                                      l3819 0E28  
                                    l4299 06B7                                      l4651 0EA9  
                                    l4643 0E8D                                      l3843 09A2  
                                    l4707 0F54                                      l4715 0F69  
                                    l4731 0CDB                                      l4723 0CBD  
                                    l4811 0F81                                      l4661 0EC9  
                                    l4653 0EAD                                      l4645 0E91  
                                    l4637 0E78                                      l4709 0F5B  
                                    l4741 0C7F                                      l4733 0CE1  
                                    l4725 0CC6                                      l4717 0CB4  
                                    l4821 0FA8                                      l4813 0F9F  
                                    l4663 0ED1                                      l4655 0EB5  
                                    l4647 0E9D                                      l4639 0E81  
                                    l4567 0AF9                                      l4671 0987  
                                    l4751 0CA2                                      l4743 0C84  
                                    l4735 0CE2                                      l4727 0CC8  
                                    l4719 0CB7                                      l4831 0FBF  
                                    l4823 0FA9                                      l4815 0FA1  
                                    l4807 0F74                                      l4665 0ED7  
                                    l4657 0EB9                                      l4649 0EA1  
                                    l4569 0998                                      l4681 0EF6  
                                    l4673 0EEE                                      l4753 0CA8  
                                    l4745 0C8D                                      l4737 0C7B  
                                    l4729 0CD5                                      l4761 0BFC  
                                    l4841 0FDB                                      l4833 0FC4  
                                    l4825 0FAA                                      l4817 0FA2  
                                    l4809 0F7E                                      l4667 0EDD  
                                    l4659 0EC5                                      l3859 09A8  
                                    l4691 0F29                                      l4683 0EFB  
                                    l4675 0EF3                                      l4755 0CA9  
                                    l4747 0C8F                                      l4739 0C7E  
                                    l4763 0C08                                      l4835 0FC9  
                                    l4827 0FAF                                      l4843 0FE8  
                                    l4819 0FA4                                      l4669 0EE3  
                                    l4693 0F2F                                      l4685 0F0D  
                                    l4677 0EF4                                      l4749 0C9C  
                                    l4757 0BE7                                      l4837 0FCE  
                                    l4829 0FB8                                      l4695 0F35  
                                    l4687 0F1C                                      l4679 0EF5  
                                    l4759 0BF0                                      l4839 0FD2  
                                    l4697 0F37                                      l4689 0F1F  
                                    l4699 0F3E                                      l4869 0FED  
                         __end_of_LCDsend 0DC7                                      STR_1 1000  
                                    STR_2 1000                                      STR_3 1019  
                                    STR_4 1019                                      STR_5 1020  
                                    STR_6 1020                                      _LATA 0016  
                                    _LATB 0017                                      _LATC 0018  
                                    _LATD 0019                                      _LATE 001A  
                                    _T2PR 028D                                      u3500 0D9A  
                                    u3501 0D99                                      u4125 0B0A  
                                    u3510 0DAD                                      u3511 0DAC  
                                    u3520 0DC0                                      u3600 06B0  
                                    u4400 0EFB                                      u4080 09EB  
                                    u3521 0DBF                                      u3601 06AF  
                                    u4401 0EFA                                      u4081 09EA  
                                    u3530 0DC6                                      u3610 06C6  
                                    u4410 0F0D                                      u3531 0DC5  
                                    u3611 06C5                                      u4411 0F0C  
                                    u2900 0E44                                      u3620 06DB  
                                    u4420 0F1C                                      u4500 0CBD  
                                    u2901 0E43                                      u3621 06DA  
                                    u4421 0F1B                                      u4501 0CBC  
                                    u2910 0E49                                      u3630 06F0  
                                    u3550 065E                                      u4430 0F29  
                                    u4510 0CD0                                      u2911 0E48  
                                    u3631 06EF                                      u3551 065D  
                                    u4431 0F28                                      u4511 0CCF  
                                    u2920 0E56                                      u3480 0D85  
                                    u3640 0706                                      u3560 0664  
                                    u4440 0F2F                                      u4520 0CD5  
                                    u4600 0BFC                                      u2921 0E55  
                                    u3481 0D84                                      u3641 0705  
                                    u3561 0663                                      u3545 0646  
                                    u4441 0F2E                                      u4425 0F18  
                                    u4521 0CD4                                      u4601 0BFB  
                                    u2930 0E61                                      u3490 0D8B  
                                    u3650 070C                                      u3570 0673  
                                    u4450 0F35                                      u4530 0CE1  
                                    u4610 0C02                                      u2931 0E60  
                                    u3491 0D8A                                      u3651 070B  
                                    u3571 0672                                      u4451 0F34  
                                    u4531 0CE0                                      u4611 0C00  
                                    u2940 0E66                                      u3580 0686  
                                    u4460 0F45                                      u4540 0C84  
                                    u4620 0C03                                      _PMD0 0796  
                                    u2941 0E65                                      u3581 0685  
                                    u4461 0F44                                      u4541 0C83  
                                    _PMD1 0797                                      i1l30 0D73  
                                    i1l22 0B25                                      u2950 0E75  
                                    u2870 0E27                                      u3590 069B  
                                    u4470 0F4B                                      u4550 0C97  
                                    _PMD2 0798                                      i1l23 0B26  
                                    u2951 0E74                                      u2871 0E26  
                                    u3591 069A                                      u4471 0F4A  
                                    u4551 0C96                                      _PMD3 0799  
                                    u2880 0E32                                      u4480 0F5B  
                                    u4560 0C9C                                      _PMD4 079A  
                                    i1l33 0D45                                      u2881 0E31  
                                    u4481 0F5A                                      u4561 0C9B  
                                    _PMD5 079B                                      i1l42 0D63  
                                    i1l26 0B2B                                      u2890 0E3D  
                                    u4490 0F61                                      u4570 0CA8  
                                    u4730 0FAF                                      i1l35 0D4A  
                                    u2891 0E3C                                      u4491 0F60  
                                    u4571 0CA7                                      u4731 0FAE  
                                    u4580 0BE7                                      u4740 0FBF  
                                    u4581 0BE6                                      u4741 0FBE  
                                    u4590 0BF7                                      u4750 0FC4  
                                    i1l47 0D72                                      u4591 0BF6  
                                    u4807 0BEB                                      u4751 0FC3  
                                    u4760 0FC9                                      u4817 0C0C  
                                    u4761 0FC8                                      u4770 0FCE  
                                    u4907 0E92                                      u4827 0CC1  
                                    u4771 0FCD                                      u4780 0FDA  
                                    u4917 0E9E                                      u4837 0CE6  
                                    u4781 0FD9                                      u4927 0EA6  
                                    u4847 0C88                                      u4937 0EB2  
                                    u4857 0CAD                                      u4947 0EBA  
                                    u4867 0EFF                                      u4957 0EC6  
                                    u4877 0F6D                                      u4797 0FB3  
                                    u4967 0ECE                                      u4887 0E7C  
                                    u4977 0EEA                                      u4897 0E8A  
                                    u4987 070D                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                              ?_menuLCD_ISR 0070  
                                    _main 0F74                                      _mode 0052  
                                    _temp 005B                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                                    start 0040                           _timer5ReloadVal 006B  
                         _TMR3_Initialize 0BA4                ??_TMR1_SetInterruptHandler 00A2  
                         __end_of_ReadI2C 0B2C                 __size_of_DATAEE_WriteByte 001E  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 09DA  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                  __end_of_i2c1_driver_open 09F2  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                                     _ADPRE 009C  
                                   _ADRPT 010D                                     _T1CLK 0211  
                                   _T1CON 020E                                     _T3CLK 0217  
                                   _T2CON 028E                                     _T3CON 0214  
                                   _T5CLK 021D                                     _T2HLT 028F  
                                   _T5CON 021A                           __end_of___lwdiv 0D29  
                                   _T2TMR 028C                                     i1l401 0A2C  
                                   _T2RST 0291                                     i1l420 097A  
                                   i1l414 0AB3                                     i1l350 003E  
                                   i1l351 0038                           __end_of___lwmod 0C7B  
                                   i1l345 0017                                     i1l347 0023  
                                   i1l356 003E                                     i1l349 002F  
                                   i1l702 0AE1                                     i1l465 0A3D  
                                   i1l722 0A9C                                     i1l484 0002  
                                   i1l900 05F2                                     i1l708 0003  
                                   i1l901 05F3                                     i1l478 0ACA  
                                   i1l575 0A69                                     i1l912 0624  
                                   i1l761 0993                                     i1l913 0626  
                                   i1l578 0A72                                     i1l922 063B  
                                   i1l851 053B                                     i1l764 0986  
                                   i1l852 053C                                     i1l758 0980  
                                   i1l918 0635                                     i1l767 0997  
                                   i1l919 0636                                     i1l863 056B  
                                   i1l864 056C                                     i1l848 052F  
                                   i1l689 0A4E                                     i1l881 05AE  
                                   i1l882 05AF                                     i1l875 059D  
                                   i1l884 05B3                                     i1l876 059F  
                                   i1l888 05C2                                     i1l889 05C3  
                                   _OSCEN 0891                                     _TMR1H 020D  
                                   _TMR1L 020C                                     _TMR3H 0213  
                                   _TMR3L 0212                                     _TMR5H 0219  
                                   _TMR5L 0218                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
                         __end_of_editLum 0CB4                           _PWM6_Initialize 09F2  
       __size_of_TMR3_SetInterruptHandler 0006                 ?_TMR3_SetInterruptHandler 00A0  
                __end_ofi1_TMR2_StopTimer 0998                          __end_of_TMR1_ISR 0AB4  
                        __end_of_TMR3_ISR 0ACB                          __end_of_TMR5_ISR 0AE2  
                         _DATAEE_ReadByte 09DA            ??_TMR3_DefaultInterruptHandler 0070  
                         __end_of_dpowers 1019                        __size_of_TMR2_Stop 0003  
                             ?_TMR2_Start 0070                           __end_of_isdigit 0A61  
                                   _tsttc 052F                   __end_of_TMR1_Initialize 0BA4  
                                   pclath 000A                            menuLCD_ISR@str 003B  
                                   status 0003                                     wtemp0 007E  
                         __end_of_sprintf 03CD                    ??_PWM_Output_D4_Enable 0070  
                         _TMR2_StartTimer 0990                           _TMR1_WriteTimer 0A1C  
                         _TMR5_Initialize 0BC3                           __initialization 0042  
                            ?i1_TMR2_Stop 0070                              __end_of_main 1000  
                             ?i1_WriteI2C 0070                       __size_of_LCDsend2x4 00D4  
                 __end_of_TMR2_Initialize 0A0D               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 00A9                  _TMR5_SetInterruptHandler 09A8  
                      __size_of_Clock_ISR 0057                     _TMR3_InterruptHandler 00AC  
        differenceBetweenTimePeriod@start 0070                                 ??_LCDchar 0078  
                               ??_LCDinit 00A8                                 ??_LCDsend 00A2  
                                  _ADACCH 0091                                    _ADACCL 0090  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  _ADLTHH 010F                                    _ADLTHL 010E  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                                  _ADUTHL 0110                          __end_of_WriteI2C 0E78  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                                    _T1GATE 0210  
                                  _T1GCON 020F                                    ?_tsttc 0070  
                                  _T3GATE 0216                                    _T3GCON 0215  
                                  _T5GATE 021C                                    _T5GCON 021B  
                                  _RA6PPS 0F16                                    _RC3PPS 0F23  
                                  i1l1030 072F                                    i1l1201 052E  
                 TMR1_WriteTimer@timerVal 0070                                    _RC4PPS 0F24  
                                  i1l1060 07C2                                    i1l1044 0772  
                                  i1l1053 07A8                                    i1l1029 072E  
                                  i1l1134 0E1D                                    i1l1056 07BA  
                                  i1l1152 016D                                    i1l1057 07BB  
                                  i1l1066 09C0                                    i1l1075 0A86  
                                  i1l1091 097D                                    i1l1323 0B5B  
                                  i1l1069 09C8                                    i1l1165 020B  
                                  i1l1149 011B                                    i1l1325 0B5F  
                                  i1l1094 0983                                    i1l1158 0187  
                                  i1l1326 0B65                                    i1l1511 0300  
                                  i1l1175 022F                                    i1l1088 0C46  
                                  i1l4001 0314                                    i1l1329 09E5  
                                  _ODCONA 0F3A                                    _ODCONB 0F45  
                                  i1l4011 032C                                    i1l4003 0317  
                                  _ODCONC 0F50                                    i1l1532 0B70  
                                  _ODCOND 0F5B                                    i1l4021 034E  
                                  i1l4013 0332                                    i1l4005 031B  
                                  _ODCONE 0F66                                    i1l1534 0B84  
                                  i1l4031 0370                                    i1l4023 0355  
                                  i1l4015 0339                                    i1l4007 0321  
                                  i1l1528 03CC                                    i1l4041 03AB  
                                  i1l4025 0359                                    i1l4017 033D  
                                  i1l4033 0374                                    i1l4009 0328  
                                  i1l4035 0379                                    i1l4027 0363  
                                  i1l4019 0348                                    i1l4043 03B4  
                                  i1l4051 0B4F                                    i1l1804 0D28  
                                  i1l4221 0A21                                    i1l4037 03A0  
                                  i1l4029 0369                                    i1l4045 03C8  
                                  i1l1493 024D                                    i1l4061 0B56  
                                  i1l4053 0B51                                    i1l1814 0C7A  
                                  i1l4231 0A2A                                    i1l4223 0A22  
                                  i1l4039 03A7                                    i1l4071 09DD  
                                  i1l4063 0B58                                    i1l4055 0B53  
                                  i1l4321 0DD7                                    i1l4225 0A24  
                                  i1l4241 0A37                                    i1l4233 0A2D  
                                  i1l4401 0165                                    i1l4081 09E3  
                                  i1l4073 09DF                                    i1l4065 0B5A  
                                  i1l4057 0B54                                    i1l4049 0B48  
                                  i1l4331 0DE9                                    i1l4323 0DDD  
                                  i1l4315 0DC7                                    i1l4227 0A26  
                                  i1l4219 0A1C                                    i1l4235 0A32  
                                  i1l4243 0A39                                    i1l4411 018B  
                                  i1l4403 0172                                    i1l4251 0A44  
                                  i1l4075 09E0                                    i1l4067 0B60  
                                  i1l4059 0B55                   __end_of_TMR3_Initialize 0BC3  
                                  i1l4341 0E06                                    i1l4333 0DEE  
                                  i1l4325 0DE1                                    i1l4317 0DD2  
                                  i1l4229 0A28                                    i1l4245 0A3B  
                                  i1l4237 0A33                                    i1l3701 0760  
                                  i1l4085 0A87                                    i1l4421 01B8  
                                  i1l4413 0191                                    i1l4405 0178  
                                  i1l4253 0A46                                    i1l4077 09E1  
                                  i1l4069 09DA                                    i1l4501 0520  
                                  i1l4343 0E0B                                    i1l4335 0DF4  
                                  i1l4327 0DE2                                    i1l4319 0DD6  
                                  i1l4239 0A35                                    i1l3711 078A  
                                  i1l3703 0766                                    i1l4087 0994  
                                  i1l4431 01E8                                    i1l4423 01BE  
                                  i1l4415 01A1                                    i1l4407 017B  
                                  i1l4351 0093                                    i1l4255 0A48  
                                  i1l4247 0A3E                                    i1l4079 09E2  
                                  i1l4511 052D                                    i1l4503 0525  
                                  i1l4337 0DFA                                    i1l4345 0E12  
                                  i1l4329 0DE8                                    i1l3721 07BF  
                                  i1l3713 0796                                    i1l3705 0772  
                                  i1l3801 0C6B                                    i1l4089 0981  
                                  i1l4441 0206                                    i1l4433 01EE  
                                  i1l4425 01CE                                    i1l4417 01B0  
                                  i1l4361 00C6                                    i1l4409 017F  
                                  i1l4353 00B0                                    i1l4249 0A43  
                                  i1l4257 0A4A                                    i1l4505 0528  
                                  i1l4339 0E00                                    i1l3715 079C  
                                  i1l3707 0778                                    i1l3731 097E  
                                  i1l3803 0C70                                    i1l4451 0224  
                                  i1l4435 01F3                                    i1l4443 020C  
                                  i1l4427 01DD                                    i1l4419 01B4  
                                  i1l4371 00EC                                    i1l4363 00CC  
                                  i1l4355 00B4                                    i1l4347 006E  
                                  i1l4259 0A4C                                    i1l3723 0B12  
                                  i1l4507 052A                                    i1l3717 07A8  
                                  i1l3709 0784                                    i1l3733 09C2  
                                  i1l3805 0C76                                    i1l3741 0A5D  
                                  i1l4453 022B                                    i1l4445 0213  
                                  i1l4437 01FA                                    i1l4429 01E1  
                                  i1l4381 0111                                    i1l4373 00F4  
                                  i1l4365 00D5                                    i1l4357 00B8  
                                  i1l4349 0075                                    i1l3725 0B1C  
                                  i1l3901 0602                                    i1l4509 052C  
                                  i1l4461 0400                                    i1l3663 0D32  
                                  i1l3655 0D2A                                    i1l3719 07AE  
                                  i1l3751 0B6C                                    i1l3743 0A5F  
                                  i1l3735 0A50                                    i1l4447 0218  
                                  i1l4439 01FF                                    i1l4391 0143  
                                  i1l4383 0116                                    i1l4375 00FA  
                                  i1l4367 00DD                                    i1l4359 00BE  
                                  i1l4551 0AB4                                    i1l3727 0B2A  
                                  i1l3911 063A                                    i1l3903 0606  
                                  i1l4471 04DE                                    i1l4463 04CA  
                                  i1l4455 03CD                                    i1l4543 0ACB  
                                  u300_20 055B                                    i1l4561 0A9F  
                                  i1l3665 0D3B                                    i1l3657 0D2D  
                                  i1l3921 0A79                                    i1l3761 0CED  
                                  i1l3753 0B75                                    i1l1985 0A60  
                                  i1l3737 0A51                                    i1l3809 0984  
                                  i1l4449 021F                                    i1l4393 0148  
                                  i1l4377 0103                                    i1l4369 00E3  
                                  i1l4553 0AB6                                    i1l3905 0612  
                                  u300_21 055A                                    i1l4481 04FD  
                                  i1l4473 04E6                                    i1l4465 04CA  
                                  i1l4457 03E6                                    i1l4545 0ACD  
                                  i1l4563 0AA7                                    i1l3667 0D44  
                                  i1l3675 0D51                                    i1l3691 0733  
                                  i1l3915 09BB                                    i1l3931 0C2A  
                                  i1l3923 0C13                                    i1l3771 0D01  
                                  i1l3763 0CEF                                    i1l3755 0B7A  
                                  i1l3747 0B66                                    i1l3739 0A57  
                                  i1l4395 014E                                    i1l4387 0127  
                                  i1l4379 010B                                    i1l4555 0ABE  
                                  i1l3851 0A67                                    i1l3907 0618  
                                  i1l4483 0502                                    i1l4491 050E  
                                  i1l4467 04CE                                    i1l4475 04ED  
                                  i1l4459 03F3                                    i1l4547 0AD5  
                                  i1l4565 0AAE                                    i1l3677 0D5A  
                                  i1l3669 0D4F                                    i1l3693 073E  
                                  i1l3685 0711                                    i1l3917 0A74  
                                  i1l3861 0990                                    i1l3933 0C30  
                                  i1l3925 0C14                                    i1l3781 0D1E  
                                  i1l3773 0D05                                    i1l3765 0CF5  
                                  i1l3757 0B80                                    i1l3749 0B68  
                                  i1l3941 0237                                    i1l4397 015C  
                                  i1l4389 013C                                    i1l4557 0AC5  
                                  i1l3853 0A68                                    i1l3845 0A62  
                                  i1l3909 062A                                    i1l4493 050F  
                                  i1l4485 0507                                    i1l4477 04F2  
                                  i1l4469 04DB                                    i1l4549 0ADC  
                                  i1l4559 0A9D                                    i1l3679 0D67  
                                  i1l3695 0742                                    i1l3687 0716  
                                  i1l3919 0A75                                    i1l3935 0C36  
                                  i1l3927 0C1A                                    i1l3775 0D14  
                                  i1l3767 0CF8                                    i1l3783 0D24  
                                  i1l3791 0C50                                    i1l3943 023D  
                                  i1l4399 0162                                    i1l3855 0A6E  
                                  i1l3847 0A65                                    i1l3871 055B  
                                  i1l3863 052F                                    i1l4495 0510  
                                  i1l4487 050A                                    i1l4479 04F8  
                                  u301_20 056B                                    i1l3697 074E  
                                  i1l3689 0722                                    i1l3937 097B  
                                  i1l3929 0C20                                    i1l3777 0D18  
                                  i1l3769 0CFD                                    i1l3793 0C55  
                                  i1l3961 027B                                    i1l3953 0252  
                                  i1l3945 0244                                    i1l3849 0A66  
                                  i1l3881 058B                                    u301_21 056A  
                                  i1l3873 055F                                    i1l3865 0540  
                                  i1l4497 0516                                    i1l4489 050C  
                                  i1l3699 0754                                    i1l3779 0D19  
                                  i1l3795 0C59                                    i1l3787 0C47  
                                  i1l3971 02B2                                    i1l3963 028A  
                                  i1l3955 025B                                    i1l3947 0249  
                                  i1l3939 0232                                    i1l3891 05D2  
                                  i1l3883 0591                                    i1l3875 0570  
                                  i1l3867 054B                                    i1l4499 051B  
                                  i1l4771 000A                                    i1l3797 0C5D  
                                  i1l3789 0C4D                                    i1l3981 02CA  
                                  i1l3973 02B9                                    i1l3965 028E  
                                  i1l3957 0267                                    i1l3949 024E  
                                  i1l3893 05D6                                    i1l3885 05A3  
                                  i1l3877 057B                                    i1l3869 054F  
                                  i1l4781 0027                                    i1l4773 000F  
                                  i1l3799 0C67                                    i1l3991 02E6  
                                  i1l3975 02BD                                    i1l3959 026A  
                                  i1l3895 05E2                                    i1l3887 05B7  
                                  i1l3879 057F                                    i1l4783 002B  
                                  i1l4775 0013                                    u310_20 05C2  
                                  u302_20 0570                                    i1l3993 02F0  
                                  i1l3977 02C1                                    i1l3969 029A  
                                  i1l3897 05E6                                    i1l3889 05C7  
                                  u310_21 05C1                                    u302_21 056F  
                                  i1l4785 0033                                    i1l4777 001B  
                                  i1l4769 0006                                    i1l3995 02F6  
                                  i1l3987 02CC                                    i1l3979 02C5  
                                  i1l3899 05F7                                    i1l4779 001F  
                                  i1l3997 02FC                                    i1l4789 003C  
                                  i1l3999 030B                                    u311_20 05C7  
                                  u303_20 057B                                    u311_21 05C6  
                                  u303_21 057A                                    u320_20 0635  
                                  u312_20 05D2                                    u304_20 058B  
                                  u400_20 04DB                                    u320_21 0634  
                                  u312_21 05D1                                    u304_21 058A  
                                  u400_21 04DA                                    u400_25 04D7  
                                  u321_20 063A                                    u313_20 05E2  
                                  u305_20 059D                                    u401_20 04F2  
                                  u321_21 0639                                    u313_21 05E1  
                                  u305_21 059C                                    u401_21 04F1  
                                  _LCDcmd 09BA                                    u250_20 0D63  
                                  u322_20 0A86                                    u330_20 02F0  
                                  u410_20 0AC5                                    u314_20 05F2  
                                  u306_20 05A3                                    u402_20 04F8  
                                  u250_21 0D62                                    u322_21 0A85  
                                  u330_21 02EF                                    u410_21 0AC4  
                                  u314_21 05F1                                    u306_21 05A2  
                                  u402_21 04F7                                    u411_20 0AAE  
                                  u251_20 0D67                                    u323_20 0C20  
                                  u331_20 02F6                                    u315_20 05F7  
                                  u307_20 05AE                                    u403_20 04FD  
                                  u411_21 0AAD                                    u251_21 0D66  
                                  u323_21 0C1F                                    u331_21 02F5  
                                  u315_21 05F6                                    u307_21 05AD  
                                  u403_21 04FC                                    u252_20 0D72  
                                  u244_20 0D31                                    u260_20 0784  
                                  u324_20 0C36                                    u340_20 0369  
                                  u332_20 02FC                                    u316_20 0602  
                                  u308_20 05B3                                    u404_20 0502  
                                  u252_21 0D71                                    u244_21 0D30  
                                  u260_21 0783                                    u324_21 0C35  
                                  u340_21 0368                                    u332_21 02FB  
                                  u316_21 0601                                    u308_21 05B2  
                                  u404_21 0501                                    u245_20 0D3B  
                                  u261_20 0796                                    u341_20 03B4  
                                  u333_20 030B                                    u325_20 023D  
                                  u317_20 0612                                    u309_20 05B7  
                                  u405_20 0516                                    u245_21 0D3A  
                                  u261_21 0795                                    u341_21 03B3  
                                  u333_21 030A                                    u325_21 023C  
                                  u317_21 0611                                    u309_21 05B6  
                                  u405_21 0515                                    u253_25 0719  
                                  u333_25 0307                                    u246_20 0D44  
                                  u262_20 07A8                                    u254_20 072E  
                                  u270_20 0B6C                                    u342_20 03C8  
                                  u334_20 031B                                    u326_20 0267  
                                  u318_20 0624                                    u406_20 051B  
                                  u246_21 0D43                                    u262_21 07A7  
                                  u254_21 072D                                    u270_21 0B6B  
                                  u342_21 03C7                                    u334_21 031A  
                                  u326_21 0266                                    u318_21 0623  
                                  u406_21 051A                                    u247_20 0D4A  
                                  u263_20 07BA                                    u255_20 0733  
                                  u335_20 0321                                    u327_20 029A  
                                  u343_20 0B5F                                    u319_20 062A  
                                  u407_20 0520                                    u247_21 0D49  
                                  u263_21 07B9                                    u255_21 0732  
                                  u335_21 0320                                    u327_21 0299  
                                  u343_21 0B5E                                    u319_21 0629  
                                  u407_21 051F                                    u271_25 0B71  
                                  u248_20 0D4F                                    u264_20 07BF  
                                  u256_20 073E                                    u280_20 0D24  
                                  u336_20 0332                                    u328_20 02C1  
                                  u248_21 0D4E                                    u264_21 07BE  
                                  u256_21 073D                                    u280_21 0D23  
                                  u336_21 0331                                    u328_21 02C0  
                                  u272_25 0B76                                    u344_25 0A96  
                                  u345_20 0A21                                    u249_20 0D5A  
                                  u257_20 074E                                    u281_20 0C4D  
                                  u273_20 0B80                                    u337_20 0347  
                                  u329_20 02E5                                    u265_20 0B1C  
                                  u409_20 0ADC                                    u345_21 0A20  
                                  u249_21 0D59                                    u257_21 074D  
                                  u281_21 0C4C                                    u273_21 0B7F  
                                  u337_21 0346                                    u329_21 02E4  
                                  u265_21 0B1B                                    u409_21 0ADB  
                                  u329_25 02E1                                    u370_20 0DF4  
                                  u346_20 0A32                                    u258_20 0760  
                                  u274_20 0CF5                                    u338_20 034E  
                                  u266_20 0B25                                    u370_21 0DF3  
                                  u346_21 0A31                                    u258_21 075F  
                                  u274_21 0CF4                                    u338_21 034D  
                                  u266_21 0B24                                    u282_25 0C51  
                                  u371_20 0DFA                                    u259_20 0772  
                                  u283_20 0C5D                                    u339_20 0363  
                                  u347_20 0A43                                    u267_20 0B2A  
                                  u371_21 0DF9                                    u259_21 0771  
                                  u283_21 0C5C                                    u339_21 0362  
                                  u347_21 0A42                                    u267_21 0B29  
                                  u275_25 0CF9                                    u372_20 0E00  
                                  u276_20 0D05                                    u284_20 0C67  
                                  u268_20 0A57                                    u380_20 00FA  
                                  u372_21 0DFF                                    u276_21 0D04  
                                  u284_21 0C66                                    u268_21 0A56  
                                  u380_21 00F9                                    u284_25 0C63  
                                  _LCDstr 0A73                                    u373_20 0E06  
                                  u269_20 0A5D                                    u381_20 0111  
                                  u373_21 0E05                                    u269_21 0A5C  
                                  u381_21 0110                                    u277_25 0D06  
                                  u285_25 0C6C                                    u374_20 0E1B  
                                  u366_20 0DD2                                    u278_20 0D14  
                                  u286_20 0C76                                    u390_20 01E8  
                                  u382_20 0116                                    u470_20 0033  
                                  u374_21 0E18                                    u366_21 0DD1  
                                  u278_21 0D13                                    u286_21 0C75  
                                  u390_21 01E7                                    u382_21 0115  
                                  u470_21 0032                                    u278_25 0D10  
                                  u367_20 0DDD                                    u391_20 01EE  
                                  u383_20 011B                                    u471_20 0037  
                                  u463_20 000A                                    u367_21 0DDC  
                                  u391_21 01ED                                    u383_21 011A  
                                  u471_21 0036                                    u463_21 0009  
                                  u375_24 0E1D                                    u279_25 0D1A  
                                  u368_20 0DE8                                    u392_20 01FA  
                                  u384_20 0143                                    u376_20 0075  
                                  u296_20 0A6E                                    u472_20 003C  
                                  u464_20 000F                                    u368_21 0DE7  
                                  u392_21 01F9                                    u384_21 0142  
                                  u376_21 0074                                    u296_21 0A6D  
                                  u472_21 003B                                    u464_21 000E  
                     monitoring_ISR@test1 0022                       monitoring_ISR@test2 0023  
                     monitoring_ISR@test3 0024                                    u369_20 0DEE  
                                  u393_20 0206                                    u385_20 0148  
                                  u377_20 00BE                                    u297_20 053B  
                                  u465_20 0013                                    u369_21 0DED  
                                  u393_21 0205                                    u385_21 0147  
                                  u377_21 00BD                                    u297_21 053A  
                                  u465_21 0012                                    u394_20 0213  
                                  u386_20 015C                                    u378_20 00CC  
                                  u298_20 0540                                    u466_20 001B  
                                  u394_21 0212                                    u386_21 015B  
                                  u378_21 00CB                                    u298_21 053F  
                                  u466_21 001A                                    u386_25 0158  
                                  u395_20 021F                                    u387_20 0172  
                                  u379_20 00E3                                    u299_20 054B  
                                  u467_20 001F                                    u395_21 021E  
                                  u387_21 0171                                    u379_21 00E2  
                                  u299_21 054A                                    u467_21 001E  
                                  u396_20 022B                                    u388_20 0191  
                                  u468_20 0027                                    u396_21 022A  
                                  u388_21 0190                                    u468_21 0026  
                                  _OSCFRQ 0893                                    u389_20 01BE  
                                  u469_20 002B                                    u389_21 01BD  
                                  u469_21 002A                                    u397_25 03DD  
                                  u398_20 03F3                                    u398_21 03F2  
                                  u398_25 03EF                                    u399_20 0400  
                                  u399_21 03FF                                    u399_25 03FC  
                                  u499_27 07C0                                    _PWM6EN 1C77  
                               ??_ReadI2C 0070                               LCDsend2x4@c 00A5  
                         _TMR3_WriteTimer 0A2D                          __end_of_editTemp 0CED  
            __end_ofi1_PWM6_LoadDutyValue 0A9D      __end_of_TMR1_DefaultInterruptHandler 097B  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 097A  
                            _CCPTMRS1bits 021F                             ?i1_LCDsend2x4 0072  
                                  ___wmul 0B66                         __end_of_TMR2_Stop 098D  
                               ??___lwdiv 0074                                 ??___lwmod 007C  
                     __size_of_TMR2_Start 0003                                    _regIdx 0050  
                 __end_of_PWM6_Initialize 09FF                                 ??_editLum 00A0  
                 __end_of_DATAEE_ReadByte 09E6                   __size_of_monitoring_ISR 0162  
                         _ADCC_Initialize 0AE2                            _PMD_Initialize 09C9  
                               ??_isdigit 0070                  ?i1_PWM_Output_D4_Disable 0070  
                         menuLCD_ISR@diff 004A         __size_of_ADCC_GetSingleConversion 0012  
               ?_ADCC_GetSingleConversion 0070                   __end_of_TMR2_StartTimer 0994  
TMR5_SetInterruptHandler@InterruptHandler 00A0  TMR3_SetInterruptHandler@InterruptHandler 00A0  
TMR1_SetInterruptHandler@InterruptHandler 00A0                                 ??_sprintf 0028  
                 __end_of_TMR1_WriteTimer 0A2D                   ??_PWM_Output_D4_Disable 00A0  
                     __size_ofi1_WriteI2C 004B                          ?_TMR1_Initialize 0070  
                 __end_of_TMR5_Initialize 0BE2                         _SYSTEM_Initialize 0B2C  
                 __end_of__initialization 006A                        ?_SYSTEM_Initialize 0070  
                       __end_of_Clock_ISR 0E1E                           _TMR5_WriteTimer 0A3E  
                    __size_of_menuLCD_ISR 01C2                            __pcstackCOMMON 0070  
                          ??i1_LCDsend2x4 0073                              __pidataBANK0 0A0D  
                            __pidataBANK1 098D                       ??_SYSTEM_Initialize 00A2  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                               ?_TMR3_ISR 0070                                 ?_TMR5_ISR 0070  
                        _DATAEE_WriteByte 0B48                              menuLCD_ISR@l 0047  
                      __size_of_editClock 0086           differenceBetweenTimePeriod@diff 0076  
                           __end_of_tsttc 063C                          ?_TMR2_Initialize 0070  
         differenceBetweenTimePeriod@stop 0073                    __end_of_PMD_Initialize 09D1  
                            _alarmsEnable 006A                              ??_LCDsend2x4 00A3  
               __end_of_SYSTEM_Initialize 0B48                              sprintf@width 0031  
                 __end_of_TMR3_WriteTimer 0A3E                                   ??_tsttc 0072  
                              __pbssBANK0 004D                                __pbssBANK1 00B2  
                                 ?_LCDcmd 0070                          ?_TMR3_Initialize 0070  
                                 ?_LCDstr 0070                                   LCDcmd@c 0078  
                                 LCDstr@c 007A                                   LCDstr@p 007B  
                              __pmaintext 0F74          __end_of_TMR3_SetInterruptHandler 09A8  
                                 ?___wmul 0070                                ??_TMR1_ISR 0072  
                              ??_TMR3_ISR 007E                   __end_of_ADCC_Initialize 0AF9  
              __end_of_PWM6_LoadDutyValue 0B12                                ??_TMR5_ISR 007D  
                              __pintentry 0004                                   _ADFLTRH 0115  
                                 _ADFLTRL 0114                      __size_ofi1_TMR2_Stop 0003  
                      __end_of_LCDsend2x4 0710                                   _ADPREVH 008F  
                                 _ADPREVL 008E                                 ?_WriteI2C 0070  
                        ?_PWM6_Initialize 0070                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112           __end_ofi1_PWM_Output_D4_Disable 0984  
                         ?_PMD_Initialize 0070                          ?_DATAEE_ReadByte 0076  
                       ?_i2c1_driver_open 0070             i1PWM6_LoadDutyValue@dutyValue 0070  
                                 _LCDchar 09C1                                   _LCDinit 0E78  
                                 _LCDsend 0D74                        ??_i2c1_driver_open 00A0  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                               ?_editTemp 0070                      i1_PWM6_LoadDutyValue 0A87  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
                                 _PWM6DCH 038D                                   _PWM6DCL 038C  
                       ?i1_TMR2_StopTimer 0070                                   _PWM6CON 038E  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                                   _SSP1MSK 018E  
                            ??_TMR2_Start 0070                   __size_of_TMR2_StopTimer 0004  
                        ?_TMR2_StartTimer 0070                          ?_TMR1_WriteTimer 0070  
                      ??i1_TMR2_StopTimer 0070                   __end_of_TMR5_WriteTimer 0A4F  
                            LCDsend2x4@hc 00A6                              LCDsend2x4@lc 00A7  
                       __end_of_editClock 0F74                          ?_TMR5_Initialize 0070  
                         __size_of_LCDcmd 0007                      DATAEE_WriteByte@bAdd 0076  
                      _i2c1_driver_i2cISR 00B5                           __size_of_LCDstr 0014  
                                 _ReadI2C 0B12                ??_TMR5_SetInterruptHandler 00A2  
                            ??i1_WriteI2C 0070                           __size_of___wmul 001F  
                                 ___lwdiv 0CED                                   ___lwmod 0C47  
                      __end_of_TMR2_Start 0981                                ??_WriteI2C 00A0  
                                 _editLum 0C7B                                   __ptext1 0BE2  
                                 __ptext2 09E6                                   __ptext3 0CB4  
                                 __ptext4 0C7B                                   __ptext5 0EEE  
                                 __ptext6 0998                                   __ptext7 098A  
                                 __ptext8 0B2C                                   __ptext9 0BC3  
                          _monitoring_ISR 03CD            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 020E                                   _dpowers 100F  
                   _OSCILLATOR_Initialize 09D1                                 _T2CONbits 028E  
                                 _isdigit 0A4F                                 _T3CONbits 0214  
       __size_of_TMR1_SetInterruptHandler 0006                     ?i1_PWM6_LoadDutyValue 0070  
                ??_PIN_MANAGER_Initialize 00A0                 ?_TMR1_SetInterruptHandler 00A0  
                               _T2HLTbits 028F                                 _T5CONbits 021A  
                              ??_editTemp 00A0                      __end_ofi1_LCDsend2x4 07C3  
              __size_of_SYSTEM_Initialize 001C                                   _sprintf 0230  
                                 clrloop0 09AF                      end_of_initialization 006A  
                        ?_TMR3_WriteTimer 0070                                 _T2RSTbits 0291  
                      __end_ofi1_WriteI2C 0D74                                   init_ram 09B4  
                                 initloop 09B5                            i1LCDsend2x4@hc 0076  
                          i1LCDsend2x4@lc 0077             __size_of_PWM_Output_D4_Enable 0003  
            ?_differenceBetweenTimePeriod 0070                          ?_ADCC_Initialize 0070  
        __end_of_ADCC_GetSingleConversion 0A73                    __end_of_monitoring_ISR 052F  
                               _PORTBbits 000D                                 _PORTCbits 000E  
                               _TMR2_Stop 098A                  _TMR3_SetInterruptHandler 09A2  
                   _TMR5_InterruptHandler 00AA                                 _TRISCbits 0013  
                           ?_toggleAlarms 0070                  __end_of_DATAEE_WriteByte 0B66  
                           _alarmPWMStart 00B9                          ?_TMR5_WriteTimer 0070  
                 TMR5_WriteTimer@timerVal 0070            __size_of_PWM_Output_D4_Disable 0003  
           __end_of_PWM_Output_D4_Disable 098A                            __end_of_LCDcmd 09C1  
                          __end_of_LCDstr 0A87          __size_ofi1_PWM_Output_D4_Disable 0003  
                          LCDsend2x4@mode 00A2                                 _Clock_ISR 0DC7  
                          __end_of___wmul 0B85                           ?_monitoring_ISR 0070  
                       __size_of_TMR1_ISR 0017                         __size_of_TMR3_ISR 0017  
                       __size_of_TMR5_ISR 0017                                ?_TMR2_Stop 0070  
                  ?_OSCILLATOR_Initialize 0070                    ??i1_PWM6_LoadDutyValue 0072  
                           menuLCD_ISR@tt 0043                       start_initialization 0042  
    __end_of_TMR5_DefaultInterruptHandler 0004     __size_of_TMR5_DefaultInterruptHandler 0001  
            _TMR5_DefaultInterruptHandler 0003                            ??_toggleAlarms 00A0  
         __size_of_PIN_MANAGER_Initialize 003D                            _TMR2_StopTimer 0998  
                        WriteI2C@data_out 00A1                                  ??_LCDcmd 0078  
                                ??_LCDstr 0079                             ??_menuLCD_ISR 0035  
                     DATAEE_ReadByte@bAdd 0076                  __size_of_TMR1_Initialize 001F  
                        ??_PMD_Initialize 00A0                                ?_Clock_ISR 0070  
                                ??___wmul 0074                               __pdataBANK0 005C  
                             __pdataBANK1 00B9                         _editingClockAlarm 0054  
                       __size_of_WriteI2C 005A                     __size_ofi1_LCDsend2x4 00B3  
                _ADCC_GetSingleConversion 0A61                    __end_of_TMR2_StopTimer 099C  
                                ?_LCDchar 0070                                  ?_LCDinit 0070  
                                ?_LCDsend 0070                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                      _PWM6_LoadDutyValue 0AF9                  __size_of_TMR2_Initialize 000E  
                            _isdigit$2900 0070             ?_TMR5_DefaultInterruptHandler 0070  
    __size_of_differenceBetweenTimePeriod 0034                                  LCDchar@c 0078  
                       __size_of_editTemp 0039                                  LCDsend@c 00A3  
                     ?_PWM6_LoadDutyValue 00A0                               sprintf@flag 0030  
               __size_of_i2c1_driver_open 000C                               sprintf@prec 002D  
                                ?_ReadI2C 0070                                 __pnvBANK0 006B  
                               __pnvBANK1 00AA                                 _editClock 0EEE  
                        ___lwdiv@dividend 0072                    _PIN_MANAGER_Initialize 07C3  
               __size_ofi1_TMR2_StopTimer 0004                             ??i1_TMR2_Stop 0070  
                __size_of_TMR3_Initialize 001F                       __end_of_menuLCD_ISR 0230  
        __end_of_TMR1_SetInterruptHandler 09A2           ADCC_GetSingleConversion@channel 0073  
                            i1_LCDsend2x4 0710                                 _dimingLed 0056  
                                ?___lwdiv 0070                                  ?___lwmod 0078  
             _i2c1_driver_busCollisionISR 00B7                      ??_PWM6_LoadDutyValue 00A2  
                                ?_editLum 0070              ??_INTERRUPT_InterruptManager 007E  
                             ??_TMR2_Stop 00A0                                  ?_isdigit 0070  
                         ?_TMR2_StopTimer 0070                  __size_of_PWM6_Initialize 000D  
                        ___lwdiv@quotient 0075                                  ?_sprintf 0020  
                                _T2CLKCON 0290                  __size_of_DATAEE_ReadByte 000C  
                          __size_of_tsttc 010D                   i1_PWM_Output_D4_Disable 0981  
                          ___wmul@product 0074                                  _LATAbits 0016  
                               clear_ram0 09AE                                  _PIE3bits 0719  
                                _PIE4bits 071A                  __size_of_TMR2_StartTimer 0004  
                           i1LCDsend2x4@c 0075                                ?_editClock 0070  
                               _tempAlarm 0063                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 003C                                  _PIR3bits 070F  
                                _PIR4bits 0710                ??_TMR3_SetInterruptHandler 00A2  
                __size_of_TMR5_Initialize 001F                               ??_Clock_ISR 0070  
                    __end_of_toggleAlarms 0C13                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR1_ISR 0A9D  
                                _TMR3_ISR 0AB4                                  _TMR5_ISR 0ACB  
                                _SSP1STAT 018F                         ??_TMR1_Initialize 00A2  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                       __end_ofi1_TMR2_Stop 0987  
                              _ADCON3bits 0096                         ___wmul@multiplier 0070  
                      i1WriteI2C@data_out 0071              __end_of_PWM_Output_D4_Enable 097E  
       __size_of_TMR5_SetInterruptHandler 0006                          __size_of_LCDchar 0008  
               ?_TMR5_SetInterruptHandler 00A0                     DATAEE_WriteByte@bData 0078  
                        __size_of_LCDinit 0076                          __size_of_LCDsend 0053  
                       ?_DATAEE_WriteByte 0076                         ??_TMR2_Initialize 00A0  
                             _menuLCD_ISR 006E            ??_TMR5_DefaultInterruptHandler 0070  
                      ??_DATAEE_WriteByte 0079                          __size_of_ReadI2C 001A  
                              _ADSTATbits 0097                  __size_of_TMR3_WriteTimer 0011  
                        ??_monitoring_ISR 007A                   ??_OSCILLATOR_Initialize 00A0  
                        __size_of___lwdiv 003C                          __size_of___lwmod 0034  
                                _WriteI2C 0E1E                         ??_TMR3_Initialize 00A2  
                _TMR1_SetInterruptHandler 099C                          i1LCDsend2x4@mode 0072  
                        __size_of_editLum 0039                     _TMR1_InterruptHandler 00AE  
                              sprintf@val 002E                                  _clkAlarm 005C  
                __size_of_ADCC_Initialize 0017                          __size_of_isdigit 0012  
                                _editTemp 0CB4                           ___lwdiv@divisor 0070  
                         ___lwdiv@counter 0077                                  __ptext10 09A8  
                                __ptext11 0BA4                                  __ptext20 0AE2  
                                __ptext12 09A2                                  __ptext21 0987  
                                __ptext13 09FF                                _T1GCONbits 020F  
                                __ptext30 03CD                                  __ptext22 0AF9  
                                __ptext14 0B85                                  __ptext31 052F  
                                __ptext23 0E78                                  __ptext15 099C  
                                __ptext40 0994                                  __ptext32 0B12  
                                __ptext24 063C                                  __ptext16 09F2  
                                __ptext41 0984                                  __ptext33 0B48  
                                __ptext25 0D74                                  __ptext17 09C9  
                                __ptext50 0990                                  __ptext42 0981  
                                __ptext34 09DA                                  __ptext26 0E1E  
                                __ptext18 07C3                                  __ptext51 097E  
                                __ptext43 0A87                                  __ptext35 0A61  
                                __ptext19 09D1                                  __ptext60 0A1C  
                                __ptext52 097B                                  __ptext44 0230  
                                __ptext36 0A3E                                  __ptext28 0ACB  
                                __ptext61 0DC7                                  __ptext53 0A73  
                                __ptext45 0A4F                                  __ptext37 0AB4  
                                __ptext29 0003                                  __ptext62 097A  
                                __ptext54 09C1                                  __ptext46 0B66  
                                __ptext38 0002                                  __ptext55 09BA  
                                __ptext47 0C47                                  __ptext39 006E  
                                __ptext56 0710                                  __ptext48 0CED  
                                __ptext57 0D29                                  __ptext49 0C13  
                                __ptext58 0A2D                                  __ptext59 0A9D  
                            _SSP1CON1bits 0190                              _SSP1CON2bits 0191  
               ??i1_PWM_Output_D4_Disable 0070                          __size_of_sprintf 019D  
                              _T3GCONbits 0215               DATAEE_WriteByte@GIEBitValue 0079  
                 TMR3_WriteTimer@timerVal 0070                          _i2c1_driver_open 09E6  
                       ??_PWM6_Initialize 00A0                             __size_of_main 008C  
                              _T5GCONbits 021B                                  _lumAlarm 0060  
                       ??_DATAEE_ReadByte 0078                                  _lumLevel 005A  
                   _PWM_Output_D4_Disable 0987                               ??_editClock 00A0  
                        _editingTempAlarm 0059                          i1_TMR2_StopTimer 0994  
                __size_of_TMR5_WriteTimer 0011                                  _prevTemp 0068  
                              tsttc@value 0073                               i1_TMR2_Stop 0984  
              ??_ADCC_GetSingleConversion 0073                                  int$flags 007E  
                       ??_TMR2_StartTimer 0070        __end_of_INTERRUPT_InterruptManager 0040  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                         menuLCD_ISR@F12809 00B2  
    __end_of_TMR3_DefaultInterruptHandler 0003     __size_of_TMR3_DefaultInterruptHandler 0001  
            _TMR3_DefaultInterruptHandler 0002                         ??_TMR5_Initialize 00A2  
                              _INTCONbits 000B                               _NVMCON1bits 081E  
                            _prevLumLevel 0066             __size_ofi1_PWM6_LoadDutyValue 0016  
                                isdigit@c 0071                                _LCDsend2x4 063C  
                                intlevel1 0000                                 sprintf@ap 002C  
                               sprintf@sp 0034                          ___lwmod@dividend 007A  
                 ?_PIN_MANAGER_Initialize 0070                     __size_of_toggleAlarms 0031  
                         _editingLumAlarm 0058                      _PWM_Output_D4_Enable 097B  
     __end_of_differenceBetweenTimePeriod 0C47               _differenceBetweenTimePeriod 0C13  
                        ??_TMR2_StopTimer 00A0                         ??_TMR3_WriteTimer 0072  
                           __pstringtext1 100F                             __pstringtext2 1000  
                           __pstringtext3 1019                             __pstringtext4 1020  
                           __pstringtext5 0000             ??_differenceBetweenTimePeriod 0077  
                                sprintf@c 0033                                  sprintf@f 0020  
           ?_TMR3_DefaultInterruptHandler 0070                                _SSP1DATPPS 0EC6  
                              _SSP1CLKPPS 0EC5                           ___lwmod@divisor 0078  
                         ___lwmod@counter 007D               PWM6_LoadDutyValue@dutyValue 00A0  
                            _toggleAlarms 0BE2                                _TMR2_Start 097E  
          __end_of_PIN_MANAGER_Initialize 0800                         ??_ADCC_Initialize 00A0  
                  ?_PWM_Output_D4_Disable 0070                     ?_PWM_Output_D4_Enable 0070  
                         _TMR1_Initialize 0B85  
