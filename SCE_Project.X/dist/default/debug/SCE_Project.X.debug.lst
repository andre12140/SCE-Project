

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Nov 02 22:33:44 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	psect	text42,local,class=CODE,merge=1,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text46,local,class=CODE,merge=1,delta=2,group=3
    69                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text50,local,class=CODE,merge=1,delta=2
    73                           	psect	text51,local,class=CODE,merge=1,delta=2
    74                           	psect	text52,local,class=CODE,merge=1,delta=2
    75                           	psect	text53,local,class=CODE,merge=1,delta=2
    76                           	psect	text54,local,class=CODE,merge=1,delta=2
    77                           	psect	text55,local,class=CODE,merge=1,delta=2
    78                           	psect	text56,local,class=CODE,merge=1,delta=2
    79                           	psect	text57,local,class=CODE,merge=1,delta=2
    80                           	psect	text58,local,class=CODE,merge=1,delta=2
    81                           	psect	text59,local,class=CODE,merge=1,delta=2
    82                           	psect	text60,local,class=CODE,merge=1,delta=2
    83                           	psect	text61,local,class=CODE,merge=1,delta=2
    84                           	psect	text62,local,class=CODE,merge=1,delta=2
    85                           	psect	text63,local,class=CODE,merge=1,delta=2
    86                           	psect	text64,local,class=CODE,merge=1,delta=2
    87                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    88                           	dabs	1,0x7E,2
    89  0000                     
    90                           ; Version 2.30
    91                           ; Generated 15/09/2020 GMT
    92                           ; 
    93                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    94                           ; All rights reserved.
    95                           ; 
    96                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    97                           ; 
    98                           ; Redistribution and use in source and binary forms, with or without modification, are
    99                           ; permitted provided that the following conditions are met:
   100                           ; 
   101                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   102                           ;        conditions and the following disclaimer.
   103                           ; 
   104                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   105                           ;        of conditions and the following disclaimer in the documentation and/or other
   106                           ;        materials provided with the distribution. Publication is not required when
   107                           ;        this file is used in an embedded application.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC16F18875 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001C                     	;# 
   153  001C                     	;# 
   154  001D                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  008C                     	;# 
   159  008C                     	;# 
   160  008D                     	;# 
   161  008E                     	;# 
   162  008E                     	;# 
   163  008F                     	;# 
   164  0090                     	;# 
   165  0090                     	;# 
   166  0091                     	;# 
   167  0093                     	;# 
   168  0094                     	;# 
   169  0095                     	;# 
   170  0096                     	;# 
   171  0097                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009A                     	;# 
   175  009B                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010E                     	;# 
   183  010F                     	;# 
   184  0110                     	;# 
   185  0110                     	;# 
   186  0111                     	;# 
   187  0112                     	;# 
   188  0112                     	;# 
   189  0113                     	;# 
   190  0114                     	;# 
   191  0114                     	;# 
   192  0115                     	;# 
   193  0116                     	;# 
   194  0116                     	;# 
   195  0117                     	;# 
   196  0119                     	;# 
   197  0119                     	;# 
   198  0119                     	;# 
   199  011A                     	;# 
   200  011A                     	;# 
   201  011A                     	;# 
   202  011B                     	;# 
   203  011B                     	;# 
   204  011B                     	;# 
   205  011B                     	;# 
   206  011B                     	;# 
   207  011C                     	;# 
   208  011C                     	;# 
   209  011C                     	;# 
   210  011D                     	;# 
   211  011D                     	;# 
   212  011D                     	;# 
   213  011E                     	;# 
   214  011E                     	;# 
   215  011E                     	;# 
   216  011F                     	;# 
   217  011F                     	;# 
   218  011F                     	;# 
   219  011F                     	;# 
   220  011F                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  018E                     	;# 
   224  018F                     	;# 
   225  0190                     	;# 
   226  0191                     	;# 
   227  0192                     	;# 
   228  0196                     	;# 
   229  0197                     	;# 
   230  0198                     	;# 
   231  0199                     	;# 
   232  019A                     	;# 
   233  019B                     	;# 
   234  019C                     	;# 
   235  020C                     	;# 
   236  020C                     	;# 
   237  020D                     	;# 
   238  020E                     	;# 
   239  020F                     	;# 
   240  020F                     	;# 
   241  0210                     	;# 
   242  0210                     	;# 
   243  0211                     	;# 
   244  0211                     	;# 
   245  0212                     	;# 
   246  0212                     	;# 
   247  0213                     	;# 
   248  0214                     	;# 
   249  0215                     	;# 
   250  0215                     	;# 
   251  0216                     	;# 
   252  0216                     	;# 
   253  0217                     	;# 
   254  0217                     	;# 
   255  0218                     	;# 
   256  0218                     	;# 
   257  0219                     	;# 
   258  021A                     	;# 
   259  021B                     	;# 
   260  021B                     	;# 
   261  021C                     	;# 
   262  021C                     	;# 
   263  021D                     	;# 
   264  021D                     	;# 
   265  021E                     	;# 
   266  021F                     	;# 
   267  028C                     	;# 
   268  028C                     	;# 
   269  028D                     	;# 
   270  028D                     	;# 
   271  028E                     	;# 
   272  028F                     	;# 
   273  0290                     	;# 
   274  0290                     	;# 
   275  0291                     	;# 
   276  0292                     	;# 
   277  0292                     	;# 
   278  0293                     	;# 
   279  0293                     	;# 
   280  0294                     	;# 
   281  0295                     	;# 
   282  0296                     	;# 
   283  0296                     	;# 
   284  0297                     	;# 
   285  0298                     	;# 
   286  0298                     	;# 
   287  0299                     	;# 
   288  0299                     	;# 
   289  029A                     	;# 
   290  029B                     	;# 
   291  029C                     	;# 
   292  029C                     	;# 
   293  029D                     	;# 
   294  030C                     	;# 
   295  030C                     	;# 
   296  030D                     	;# 
   297  030E                     	;# 
   298  030F                     	;# 
   299  0310                     	;# 
   300  0310                     	;# 
   301  0311                     	;# 
   302  0312                     	;# 
   303  0313                     	;# 
   304  0314                     	;# 
   305  0314                     	;# 
   306  0315                     	;# 
   307  0316                     	;# 
   308  0317                     	;# 
   309  0318                     	;# 
   310  0318                     	;# 
   311  0319                     	;# 
   312  031A                     	;# 
   313  031B                     	;# 
   314  031C                     	;# 
   315  031C                     	;# 
   316  031D                     	;# 
   317  031E                     	;# 
   318  031F                     	;# 
   319  038C                     	;# 
   320  038C                     	;# 
   321  038D                     	;# 
   322  038E                     	;# 
   323  0390                     	;# 
   324  0390                     	;# 
   325  0391                     	;# 
   326  0392                     	;# 
   327  040C                     	;# 
   328  040D                     	;# 
   329  040E                     	;# 
   330  040F                     	;# 
   331  0410                     	;# 
   332  0411                     	;# 
   333  0416                     	;# 
   334  0416                     	;# 
   335  0417                     	;# 
   336  0418                     	;# 
   337  0418                     	;# 
   338  0419                     	;# 
   339  041A                     	;# 
   340  041A                     	;# 
   341  041B                     	;# 
   342  041C                     	;# 
   343  041C                     	;# 
   344  041D                     	;# 
   345  041E                     	;# 
   346  041F                     	;# 
   347  048C                     	;# 
   348  048C                     	;# 
   349  048D                     	;# 
   350  048E                     	;# 
   351  048F                     	;# 
   352  048F                     	;# 
   353  0490                     	;# 
   354  0491                     	;# 
   355  0492                     	;# 
   356  0492                     	;# 
   357  0493                     	;# 
   358  0494                     	;# 
   359  0495                     	;# 
   360  0495                     	;# 
   361  0496                     	;# 
   362  0497                     	;# 
   363  0498                     	;# 
   364  0499                     	;# 
   365  049A                     	;# 
   366  049B                     	;# 
   367  049C                     	;# 
   368  049D                     	;# 
   369  050C                     	;# 
   370  050C                     	;# 
   371  050D                     	;# 
   372  050E                     	;# 
   373  050F                     	;# 
   374  050F                     	;# 
   375  0510                     	;# 
   376  0511                     	;# 
   377  0512                     	;# 
   378  0512                     	;# 
   379  0513                     	;# 
   380  0514                     	;# 
   381  0515                     	;# 
   382  0515                     	;# 
   383  0516                     	;# 
   384  0517                     	;# 
   385  0518                     	;# 
   386  0519                     	;# 
   387  051A                     	;# 
   388  051B                     	;# 
   389  051C                     	;# 
   390  051D                     	;# 
   391  058C                     	;# 
   392  058C                     	;# 
   393  058D                     	;# 
   394  058E                     	;# 
   395  058F                     	;# 
   396  058F                     	;# 
   397  0590                     	;# 
   398  0591                     	;# 
   399  0592                     	;# 
   400  0593                     	;# 
   401  060C                     	;# 
   402  060D                     	;# 
   403  060E                     	;# 
   404  060F                     	;# 
   405  0610                     	;# 
   406  0611                     	;# 
   407  0612                     	;# 
   408  0613                     	;# 
   409  0614                     	;# 
   410  0616                     	;# 
   411  0617                     	;# 
   412  0618                     	;# 
   413  0619                     	;# 
   414  061A                     	;# 
   415  061B                     	;# 
   416  061C                     	;# 
   417  061D                     	;# 
   418  061E                     	;# 
   419  068C                     	;# 
   420  068D                     	;# 
   421  068E                     	;# 
   422  068F                     	;# 
   423  0690                     	;# 
   424  0691                     	;# 
   425  0692                     	;# 
   426  0693                     	;# 
   427  0694                     	;# 
   428  070C                     	;# 
   429  070D                     	;# 
   430  070E                     	;# 
   431  070F                     	;# 
   432  0710                     	;# 
   433  0711                     	;# 
   434  0712                     	;# 
   435  0713                     	;# 
   436  0714                     	;# 
   437  0716                     	;# 
   438  0717                     	;# 
   439  0718                     	;# 
   440  0719                     	;# 
   441  071A                     	;# 
   442  071B                     	;# 
   443  071C                     	;# 
   444  071D                     	;# 
   445  071E                     	;# 
   446  0796                     	;# 
   447  0797                     	;# 
   448  0798                     	;# 
   449  0799                     	;# 
   450  079A                     	;# 
   451  079B                     	;# 
   452  080C                     	;# 
   453  080D                     	;# 
   454  080E                     	;# 
   455  080F                     	;# 
   456  0810                     	;# 
   457  0811                     	;# 
   458  0812                     	;# 
   459  0813                     	;# 
   460  0814                     	;# 
   461  081A                     	;# 
   462  081B                     	;# 
   463  081C                     	;# 
   464  081D                     	;# 
   465  081E                     	;# 
   466  081F                     	;# 
   467  088C                     	;# 
   468  088D                     	;# 
   469  088E                     	;# 
   470  088F                     	;# 
   471  0890                     	;# 
   472  0891                     	;# 
   473  0892                     	;# 
   474  0893                     	;# 
   475  0895                     	;# 
   476  0896                     	;# 
   477  0897                     	;# 
   478  0898                     	;# 
   479  0899                     	;# 
   480  089A                     	;# 
   481  089B                     	;# 
   482  090C                     	;# 
   483  090E                     	;# 
   484  090F                     	;# 
   485  091F                     	;# 
   486  091F                     	;# 
   487  098F                     	;# 
   488  098F                     	;# 
   489  0990                     	;# 
   490  0991                     	;# 
   491  0992                     	;# 
   492  0993                     	;# 
   493  0994                     	;# 
   494  0995                     	;# 
   495  0996                     	;# 
   496  0997                     	;# 
   497  0E0F                     	;# 
   498  0E10                     	;# 
   499  0E11                     	;# 
   500  0E12                     	;# 
   501  0E13                     	;# 
   502  0E14                     	;# 
   503  0E15                     	;# 
   504  0E16                     	;# 
   505  0E17                     	;# 
   506  0E18                     	;# 
   507  0E19                     	;# 
   508  0E1A                     	;# 
   509  0E1B                     	;# 
   510  0E1C                     	;# 
   511  0E1D                     	;# 
   512  0E1E                     	;# 
   513  0E1F                     	;# 
   514  0E20                     	;# 
   515  0E21                     	;# 
   516  0E22                     	;# 
   517  0E23                     	;# 
   518  0E24                     	;# 
   519  0E25                     	;# 
   520  0E26                     	;# 
   521  0E27                     	;# 
   522  0E28                     	;# 
   523  0E29                     	;# 
   524  0E2A                     	;# 
   525  0E2B                     	;# 
   526  0E2C                     	;# 
   527  0E2D                     	;# 
   528  0E2E                     	;# 
   529  0E2F                     	;# 
   530  0E30                     	;# 
   531  0E31                     	;# 
   532  0E32                     	;# 
   533  0E33                     	;# 
   534  0E34                     	;# 
   535  0E35                     	;# 
   536  0E36                     	;# 
   537  0E37                     	;# 
   538  0E8F                     	;# 
   539  0E90                     	;# 
   540  0E91                     	;# 
   541  0E92                     	;# 
   542  0E93                     	;# 
   543  0E94                     	;# 
   544  0E95                     	;# 
   545  0E96                     	;# 
   546  0E97                     	;# 
   547  0E9C                     	;# 
   548  0E9D                     	;# 
   549  0E9E                     	;# 
   550  0EA1                     	;# 
   551  0EA2                     	;# 
   552  0EA3                     	;# 
   553  0EA4                     	;# 
   554  0EA5                     	;# 
   555  0EA9                     	;# 
   556  0EAA                     	;# 
   557  0EAB                     	;# 
   558  0EAC                     	;# 
   559  0EB1                     	;# 
   560  0EB2                     	;# 
   561  0EB3                     	;# 
   562  0EB8                     	;# 
   563  0EB9                     	;# 
   564  0EBA                     	;# 
   565  0EBB                     	;# 
   566  0EBC                     	;# 
   567  0EBD                     	;# 
   568  0EBE                     	;# 
   569  0EC3                     	;# 
   570  0EC5                     	;# 
   571  0EC6                     	;# 
   572  0EC7                     	;# 
   573  0EC8                     	;# 
   574  0EC9                     	;# 
   575  0ECA                     	;# 
   576  0ECB                     	;# 
   577  0ECC                     	;# 
   578  0F10                     	;# 
   579  0F11                     	;# 
   580  0F12                     	;# 
   581  0F13                     	;# 
   582  0F14                     	;# 
   583  0F15                     	;# 
   584  0F16                     	;# 
   585  0F17                     	;# 
   586  0F18                     	;# 
   587  0F19                     	;# 
   588  0F1A                     	;# 
   589  0F1B                     	;# 
   590  0F1C                     	;# 
   591  0F1D                     	;# 
   592  0F1E                     	;# 
   593  0F1F                     	;# 
   594  0F20                     	;# 
   595  0F21                     	;# 
   596  0F22                     	;# 
   597  0F23                     	;# 
   598  0F24                     	;# 
   599  0F25                     	;# 
   600  0F26                     	;# 
   601  0F27                     	;# 
   602  0F28                     	;# 
   603  0F29                     	;# 
   604  0F2A                     	;# 
   605  0F2B                     	;# 
   606  0F2C                     	;# 
   607  0F2D                     	;# 
   608  0F2E                     	;# 
   609  0F2F                     	;# 
   610  0F30                     	;# 
   611  0F31                     	;# 
   612  0F32                     	;# 
   613  0F38                     	;# 
   614  0F39                     	;# 
   615  0F3A                     	;# 
   616  0F3B                     	;# 
   617  0F3C                     	;# 
   618  0F3D                     	;# 
   619  0F3E                     	;# 
   620  0F3F                     	;# 
   621  0F40                     	;# 
   622  0F41                     	;# 
   623  0F43                     	;# 
   624  0F44                     	;# 
   625  0F45                     	;# 
   626  0F46                     	;# 
   627  0F47                     	;# 
   628  0F48                     	;# 
   629  0F49                     	;# 
   630  0F4A                     	;# 
   631  0F4B                     	;# 
   632  0F4C                     	;# 
   633  0F4E                     	;# 
   634  0F4F                     	;# 
   635  0F50                     	;# 
   636  0F51                     	;# 
   637  0F52                     	;# 
   638  0F53                     	;# 
   639  0F54                     	;# 
   640  0F55                     	;# 
   641  0F56                     	;# 
   642  0F57                     	;# 
   643  0F59                     	;# 
   644  0F5A                     	;# 
   645  0F5B                     	;# 
   646  0F5C                     	;# 
   647  0F5D                     	;# 
   648  0F61                     	;# 
   649  0F62                     	;# 
   650  0F64                     	;# 
   651  0F65                     	;# 
   652  0F66                     	;# 
   653  0F67                     	;# 
   654  0F68                     	;# 
   655  0F69                     	;# 
   656  0F6A                     	;# 
   657  0F6B                     	;# 
   658  0F6C                     	;# 
   659  0F6D                     	;# 
   660  0FE4                     	;# 
   661  0FE5                     	;# 
   662  0FE6                     	;# 
   663  0FE7                     	;# 
   664  0FE8                     	;# 
   665  0FE9                     	;# 
   666  0FEA                     	;# 
   667  0FEB                     	;# 
   668  0FED                     	;# 
   669  0FEE                     	;# 
   670  0FEF                     	;# 
   671  0000                     	;# 
   672  0001                     	;# 
   673  0002                     	;# 
   674  0003                     	;# 
   675  0004                     	;# 
   676  0005                     	;# 
   677  0006                     	;# 
   678  0007                     	;# 
   679  0008                     	;# 
   680  0009                     	;# 
   681  000A                     	;# 
   682  000B                     	;# 
   683  000C                     	;# 
   684  000D                     	;# 
   685  000E                     	;# 
   686  000F                     	;# 
   687  0010                     	;# 
   688  0011                     	;# 
   689  0012                     	;# 
   690  0013                     	;# 
   691  0014                     	;# 
   692  0015                     	;# 
   693  0016                     	;# 
   694  0017                     	;# 
   695  0018                     	;# 
   696  0019                     	;# 
   697  001A                     	;# 
   698  001C                     	;# 
   699  001C                     	;# 
   700  001D                     	;# 
   701  001D                     	;# 
   702  001E                     	;# 
   703  001F                     	;# 
   704  008C                     	;# 
   705  008C                     	;# 
   706  008D                     	;# 
   707  008E                     	;# 
   708  008E                     	;# 
   709  008F                     	;# 
   710  0090                     	;# 
   711  0090                     	;# 
   712  0091                     	;# 
   713  0093                     	;# 
   714  0094                     	;# 
   715  0095                     	;# 
   716  0096                     	;# 
   717  0097                     	;# 
   718  0098                     	;# 
   719  0099                     	;# 
   720  009A                     	;# 
   721  009B                     	;# 
   722  009C                     	;# 
   723  009D                     	;# 
   724  009E                     	;# 
   725  010C                     	;# 
   726  010D                     	;# 
   727  010E                     	;# 
   728  010E                     	;# 
   729  010F                     	;# 
   730  0110                     	;# 
   731  0110                     	;# 
   732  0111                     	;# 
   733  0112                     	;# 
   734  0112                     	;# 
   735  0113                     	;# 
   736  0114                     	;# 
   737  0114                     	;# 
   738  0115                     	;# 
   739  0116                     	;# 
   740  0116                     	;# 
   741  0117                     	;# 
   742  0119                     	;# 
   743  0119                     	;# 
   744  0119                     	;# 
   745  011A                     	;# 
   746  011A                     	;# 
   747  011A                     	;# 
   748  011B                     	;# 
   749  011B                     	;# 
   750  011B                     	;# 
   751  011B                     	;# 
   752  011B                     	;# 
   753  011C                     	;# 
   754  011C                     	;# 
   755  011C                     	;# 
   756  011D                     	;# 
   757  011D                     	;# 
   758  011D                     	;# 
   759  011E                     	;# 
   760  011E                     	;# 
   761  011E                     	;# 
   762  011F                     	;# 
   763  011F                     	;# 
   764  011F                     	;# 
   765  011F                     	;# 
   766  011F                     	;# 
   767  018C                     	;# 
   768  018D                     	;# 
   769  018E                     	;# 
   770  018F                     	;# 
   771  0190                     	;# 
   772  0191                     	;# 
   773  0192                     	;# 
   774  0196                     	;# 
   775  0197                     	;# 
   776  0198                     	;# 
   777  0199                     	;# 
   778  019A                     	;# 
   779  019B                     	;# 
   780  019C                     	;# 
   781  020C                     	;# 
   782  020C                     	;# 
   783  020D                     	;# 
   784  020E                     	;# 
   785  020F                     	;# 
   786  020F                     	;# 
   787  0210                     	;# 
   788  0210                     	;# 
   789  0211                     	;# 
   790  0211                     	;# 
   791  0212                     	;# 
   792  0212                     	;# 
   793  0213                     	;# 
   794  0214                     	;# 
   795  0215                     	;# 
   796  0215                     	;# 
   797  0216                     	;# 
   798  0216                     	;# 
   799  0217                     	;# 
   800  0217                     	;# 
   801  0218                     	;# 
   802  0218                     	;# 
   803  0219                     	;# 
   804  021A                     	;# 
   805  021B                     	;# 
   806  021B                     	;# 
   807  021C                     	;# 
   808  021C                     	;# 
   809  021D                     	;# 
   810  021D                     	;# 
   811  021E                     	;# 
   812  021F                     	;# 
   813  028C                     	;# 
   814  028C                     	;# 
   815  028D                     	;# 
   816  028D                     	;# 
   817  028E                     	;# 
   818  028F                     	;# 
   819  0290                     	;# 
   820  0290                     	;# 
   821  0291                     	;# 
   822  0292                     	;# 
   823  0292                     	;# 
   824  0293                     	;# 
   825  0293                     	;# 
   826  0294                     	;# 
   827  0295                     	;# 
   828  0296                     	;# 
   829  0296                     	;# 
   830  0297                     	;# 
   831  0298                     	;# 
   832  0298                     	;# 
   833  0299                     	;# 
   834  0299                     	;# 
   835  029A                     	;# 
   836  029B                     	;# 
   837  029C                     	;# 
   838  029C                     	;# 
   839  029D                     	;# 
   840  030C                     	;# 
   841  030C                     	;# 
   842  030D                     	;# 
   843  030E                     	;# 
   844  030F                     	;# 
   845  0310                     	;# 
   846  0310                     	;# 
   847  0311                     	;# 
   848  0312                     	;# 
   849  0313                     	;# 
   850  0314                     	;# 
   851  0314                     	;# 
   852  0315                     	;# 
   853  0316                     	;# 
   854  0317                     	;# 
   855  0318                     	;# 
   856  0318                     	;# 
   857  0319                     	;# 
   858  031A                     	;# 
   859  031B                     	;# 
   860  031C                     	;# 
   861  031C                     	;# 
   862  031D                     	;# 
   863  031E                     	;# 
   864  031F                     	;# 
   865  038C                     	;# 
   866  038C                     	;# 
   867  038D                     	;# 
   868  038E                     	;# 
   869  0390                     	;# 
   870  0390                     	;# 
   871  0391                     	;# 
   872  0392                     	;# 
   873  040C                     	;# 
   874  040D                     	;# 
   875  040E                     	;# 
   876  040F                     	;# 
   877  0410                     	;# 
   878  0411                     	;# 
   879  0416                     	;# 
   880  0416                     	;# 
   881  0417                     	;# 
   882  0418                     	;# 
   883  0418                     	;# 
   884  0419                     	;# 
   885  041A                     	;# 
   886  041A                     	;# 
   887  041B                     	;# 
   888  041C                     	;# 
   889  041C                     	;# 
   890  041D                     	;# 
   891  041E                     	;# 
   892  041F                     	;# 
   893  048C                     	;# 
   894  048C                     	;# 
   895  048D                     	;# 
   896  048E                     	;# 
   897  048F                     	;# 
   898  048F                     	;# 
   899  0490                     	;# 
   900  0491                     	;# 
   901  0492                     	;# 
   902  0492                     	;# 
   903  0493                     	;# 
   904  0494                     	;# 
   905  0495                     	;# 
   906  0495                     	;# 
   907  0496                     	;# 
   908  0497                     	;# 
   909  0498                     	;# 
   910  0499                     	;# 
   911  049A                     	;# 
   912  049B                     	;# 
   913  049C                     	;# 
   914  049D                     	;# 
   915  050C                     	;# 
   916  050C                     	;# 
   917  050D                     	;# 
   918  050E                     	;# 
   919  050F                     	;# 
   920  050F                     	;# 
   921  0510                     	;# 
   922  0511                     	;# 
   923  0512                     	;# 
   924  0512                     	;# 
   925  0513                     	;# 
   926  0514                     	;# 
   927  0515                     	;# 
   928  0515                     	;# 
   929  0516                     	;# 
   930  0517                     	;# 
   931  0518                     	;# 
   932  0519                     	;# 
   933  051A                     	;# 
   934  051B                     	;# 
   935  051C                     	;# 
   936  051D                     	;# 
   937  058C                     	;# 
   938  058C                     	;# 
   939  058D                     	;# 
   940  058E                     	;# 
   941  058F                     	;# 
   942  058F                     	;# 
   943  0590                     	;# 
   944  0591                     	;# 
   945  0592                     	;# 
   946  0593                     	;# 
   947  060C                     	;# 
   948  060D                     	;# 
   949  060E                     	;# 
   950  060F                     	;# 
   951  0610                     	;# 
   952  0611                     	;# 
   953  0612                     	;# 
   954  0613                     	;# 
   955  0614                     	;# 
   956  0616                     	;# 
   957  0617                     	;# 
   958  0618                     	;# 
   959  0619                     	;# 
   960  061A                     	;# 
   961  061B                     	;# 
   962  061C                     	;# 
   963  061D                     	;# 
   964  061E                     	;# 
   965  068C                     	;# 
   966  068D                     	;# 
   967  068E                     	;# 
   968  068F                     	;# 
   969  0690                     	;# 
   970  0691                     	;# 
   971  0692                     	;# 
   972  0693                     	;# 
   973  0694                     	;# 
   974  070C                     	;# 
   975  070D                     	;# 
   976  070E                     	;# 
   977  070F                     	;# 
   978  0710                     	;# 
   979  0711                     	;# 
   980  0712                     	;# 
   981  0713                     	;# 
   982  0714                     	;# 
   983  0716                     	;# 
   984  0717                     	;# 
   985  0718                     	;# 
   986  0719                     	;# 
   987  071A                     	;# 
   988  071B                     	;# 
   989  071C                     	;# 
   990  071D                     	;# 
   991  071E                     	;# 
   992  0796                     	;# 
   993  0797                     	;# 
   994  0798                     	;# 
   995  0799                     	;# 
   996  079A                     	;# 
   997  079B                     	;# 
   998  080C                     	;# 
   999  080D                     	;# 
  1000  080E                     	;# 
  1001  080F                     	;# 
  1002  0810                     	;# 
  1003  0811                     	;# 
  1004  0812                     	;# 
  1005  0813                     	;# 
  1006  0814                     	;# 
  1007  081A                     	;# 
  1008  081B                     	;# 
  1009  081C                     	;# 
  1010  081D                     	;# 
  1011  081E                     	;# 
  1012  081F                     	;# 
  1013  088C                     	;# 
  1014  088D                     	;# 
  1015  088E                     	;# 
  1016  088F                     	;# 
  1017  0890                     	;# 
  1018  0891                     	;# 
  1019  0892                     	;# 
  1020  0893                     	;# 
  1021  0895                     	;# 
  1022  0896                     	;# 
  1023  0897                     	;# 
  1024  0898                     	;# 
  1025  0899                     	;# 
  1026  089A                     	;# 
  1027  089B                     	;# 
  1028  090C                     	;# 
  1029  090E                     	;# 
  1030  090F                     	;# 
  1031  091F                     	;# 
  1032  091F                     	;# 
  1033  098F                     	;# 
  1034  098F                     	;# 
  1035  0990                     	;# 
  1036  0991                     	;# 
  1037  0992                     	;# 
  1038  0993                     	;# 
  1039  0994                     	;# 
  1040  0995                     	;# 
  1041  0996                     	;# 
  1042  0997                     	;# 
  1043  0E0F                     	;# 
  1044  0E10                     	;# 
  1045  0E11                     	;# 
  1046  0E12                     	;# 
  1047  0E13                     	;# 
  1048  0E14                     	;# 
  1049  0E15                     	;# 
  1050  0E16                     	;# 
  1051  0E17                     	;# 
  1052  0E18                     	;# 
  1053  0E19                     	;# 
  1054  0E1A                     	;# 
  1055  0E1B                     	;# 
  1056  0E1C                     	;# 
  1057  0E1D                     	;# 
  1058  0E1E                     	;# 
  1059  0E1F                     	;# 
  1060  0E20                     	;# 
  1061  0E21                     	;# 
  1062  0E22                     	;# 
  1063  0E23                     	;# 
  1064  0E24                     	;# 
  1065  0E25                     	;# 
  1066  0E26                     	;# 
  1067  0E27                     	;# 
  1068  0E28                     	;# 
  1069  0E29                     	;# 
  1070  0E2A                     	;# 
  1071  0E2B                     	;# 
  1072  0E2C                     	;# 
  1073  0E2D                     	;# 
  1074  0E2E                     	;# 
  1075  0E2F                     	;# 
  1076  0E30                     	;# 
  1077  0E31                     	;# 
  1078  0E32                     	;# 
  1079  0E33                     	;# 
  1080  0E34                     	;# 
  1081  0E35                     	;# 
  1082  0E36                     	;# 
  1083  0E37                     	;# 
  1084  0E8F                     	;# 
  1085  0E90                     	;# 
  1086  0E91                     	;# 
  1087  0E92                     	;# 
  1088  0E93                     	;# 
  1089  0E94                     	;# 
  1090  0E95                     	;# 
  1091  0E96                     	;# 
  1092  0E97                     	;# 
  1093  0E9C                     	;# 
  1094  0E9D                     	;# 
  1095  0E9E                     	;# 
  1096  0EA1                     	;# 
  1097  0EA2                     	;# 
  1098  0EA3                     	;# 
  1099  0EA4                     	;# 
  1100  0EA5                     	;# 
  1101  0EA9                     	;# 
  1102  0EAA                     	;# 
  1103  0EAB                     	;# 
  1104  0EAC                     	;# 
  1105  0EB1                     	;# 
  1106  0EB2                     	;# 
  1107  0EB3                     	;# 
  1108  0EB8                     	;# 
  1109  0EB9                     	;# 
  1110  0EBA                     	;# 
  1111  0EBB                     	;# 
  1112  0EBC                     	;# 
  1113  0EBD                     	;# 
  1114  0EBE                     	;# 
  1115  0EC3                     	;# 
  1116  0EC5                     	;# 
  1117  0EC6                     	;# 
  1118  0EC7                     	;# 
  1119  0EC8                     	;# 
  1120  0EC9                     	;# 
  1121  0ECA                     	;# 
  1122  0ECB                     	;# 
  1123  0ECC                     	;# 
  1124  0F10                     	;# 
  1125  0F11                     	;# 
  1126  0F12                     	;# 
  1127  0F13                     	;# 
  1128  0F14                     	;# 
  1129  0F15                     	;# 
  1130  0F16                     	;# 
  1131  0F17                     	;# 
  1132  0F18                     	;# 
  1133  0F19                     	;# 
  1134  0F1A                     	;# 
  1135  0F1B                     	;# 
  1136  0F1C                     	;# 
  1137  0F1D                     	;# 
  1138  0F1E                     	;# 
  1139  0F1F                     	;# 
  1140  0F20                     	;# 
  1141  0F21                     	;# 
  1142  0F22                     	;# 
  1143  0F23                     	;# 
  1144  0F24                     	;# 
  1145  0F25                     	;# 
  1146  0F26                     	;# 
  1147  0F27                     	;# 
  1148  0F28                     	;# 
  1149  0F29                     	;# 
  1150  0F2A                     	;# 
  1151  0F2B                     	;# 
  1152  0F2C                     	;# 
  1153  0F2D                     	;# 
  1154  0F2E                     	;# 
  1155  0F2F                     	;# 
  1156  0F30                     	;# 
  1157  0F31                     	;# 
  1158  0F32                     	;# 
  1159  0F38                     	;# 
  1160  0F39                     	;# 
  1161  0F3A                     	;# 
  1162  0F3B                     	;# 
  1163  0F3C                     	;# 
  1164  0F3D                     	;# 
  1165  0F3E                     	;# 
  1166  0F3F                     	;# 
  1167  0F40                     	;# 
  1168  0F41                     	;# 
  1169  0F43                     	;# 
  1170  0F44                     	;# 
  1171  0F45                     	;# 
  1172  0F46                     	;# 
  1173  0F47                     	;# 
  1174  0F48                     	;# 
  1175  0F49                     	;# 
  1176  0F4A                     	;# 
  1177  0F4B                     	;# 
  1178  0F4C                     	;# 
  1179  0F4E                     	;# 
  1180  0F4F                     	;# 
  1181  0F50                     	;# 
  1182  0F51                     	;# 
  1183  0F52                     	;# 
  1184  0F53                     	;# 
  1185  0F54                     	;# 
  1186  0F55                     	;# 
  1187  0F56                     	;# 
  1188  0F57                     	;# 
  1189  0F59                     	;# 
  1190  0F5A                     	;# 
  1191  0F5B                     	;# 
  1192  0F5C                     	;# 
  1193  0F5D                     	;# 
  1194  0F61                     	;# 
  1195  0F62                     	;# 
  1196  0F64                     	;# 
  1197  0F65                     	;# 
  1198  0F66                     	;# 
  1199  0F67                     	;# 
  1200  0F68                     	;# 
  1201  0F69                     	;# 
  1202  0F6A                     	;# 
  1203  0F6B                     	;# 
  1204  0F6C                     	;# 
  1205  0F6D                     	;# 
  1206  0FE4                     	;# 
  1207  0FE5                     	;# 
  1208  0FE6                     	;# 
  1209  0FE7                     	;# 
  1210  0FE8                     	;# 
  1211  0FE9                     	;# 
  1212  0FEA                     	;# 
  1213  0FEB                     	;# 
  1214  0FED                     	;# 
  1215  0FEE                     	;# 
  1216  0FEF                     	;# 
  1217  0000                     	;# 
  1218  0001                     	;# 
  1219  0002                     	;# 
  1220  0003                     	;# 
  1221  0004                     	;# 
  1222  0005                     	;# 
  1223  0006                     	;# 
  1224  0007                     	;# 
  1225  0008                     	;# 
  1226  0009                     	;# 
  1227  000A                     	;# 
  1228  000B                     	;# 
  1229  000C                     	;# 
  1230  000D                     	;# 
  1231  000E                     	;# 
  1232  000F                     	;# 
  1233  0010                     	;# 
  1234  0011                     	;# 
  1235  0012                     	;# 
  1236  0013                     	;# 
  1237  0014                     	;# 
  1238  0015                     	;# 
  1239  0016                     	;# 
  1240  0017                     	;# 
  1241  0018                     	;# 
  1242  0019                     	;# 
  1243  001A                     	;# 
  1244  001C                     	;# 
  1245  001C                     	;# 
  1246  001D                     	;# 
  1247  001D                     	;# 
  1248  001E                     	;# 
  1249  001F                     	;# 
  1250  008C                     	;# 
  1251  008C                     	;# 
  1252  008D                     	;# 
  1253  008E                     	;# 
  1254  008E                     	;# 
  1255  008F                     	;# 
  1256  0090                     	;# 
  1257  0090                     	;# 
  1258  0091                     	;# 
  1259  0093                     	;# 
  1260  0094                     	;# 
  1261  0095                     	;# 
  1262  0096                     	;# 
  1263  0097                     	;# 
  1264  0098                     	;# 
  1265  0099                     	;# 
  1266  009A                     	;# 
  1267  009B                     	;# 
  1268  009C                     	;# 
  1269  009D                     	;# 
  1270  009E                     	;# 
  1271  010C                     	;# 
  1272  010D                     	;# 
  1273  010E                     	;# 
  1274  010E                     	;# 
  1275  010F                     	;# 
  1276  0110                     	;# 
  1277  0110                     	;# 
  1278  0111                     	;# 
  1279  0112                     	;# 
  1280  0112                     	;# 
  1281  0113                     	;# 
  1282  0114                     	;# 
  1283  0114                     	;# 
  1284  0115                     	;# 
  1285  0116                     	;# 
  1286  0116                     	;# 
  1287  0117                     	;# 
  1288  0119                     	;# 
  1289  0119                     	;# 
  1290  0119                     	;# 
  1291  011A                     	;# 
  1292  011A                     	;# 
  1293  011A                     	;# 
  1294  011B                     	;# 
  1295  011B                     	;# 
  1296  011B                     	;# 
  1297  011B                     	;# 
  1298  011B                     	;# 
  1299  011C                     	;# 
  1300  011C                     	;# 
  1301  011C                     	;# 
  1302  011D                     	;# 
  1303  011D                     	;# 
  1304  011D                     	;# 
  1305  011E                     	;# 
  1306  011E                     	;# 
  1307  011E                     	;# 
  1308  011F                     	;# 
  1309  011F                     	;# 
  1310  011F                     	;# 
  1311  011F                     	;# 
  1312  011F                     	;# 
  1313  018C                     	;# 
  1314  018D                     	;# 
  1315  018E                     	;# 
  1316  018F                     	;# 
  1317  0190                     	;# 
  1318  0191                     	;# 
  1319  0192                     	;# 
  1320  0196                     	;# 
  1321  0197                     	;# 
  1322  0198                     	;# 
  1323  0199                     	;# 
  1324  019A                     	;# 
  1325  019B                     	;# 
  1326  019C                     	;# 
  1327  020C                     	;# 
  1328  020C                     	;# 
  1329  020D                     	;# 
  1330  020E                     	;# 
  1331  020F                     	;# 
  1332  020F                     	;# 
  1333  0210                     	;# 
  1334  0210                     	;# 
  1335  0211                     	;# 
  1336  0211                     	;# 
  1337  0212                     	;# 
  1338  0212                     	;# 
  1339  0213                     	;# 
  1340  0214                     	;# 
  1341  0215                     	;# 
  1342  0215                     	;# 
  1343  0216                     	;# 
  1344  0216                     	;# 
  1345  0217                     	;# 
  1346  0217                     	;# 
  1347  0218                     	;# 
  1348  0218                     	;# 
  1349  0219                     	;# 
  1350  021A                     	;# 
  1351  021B                     	;# 
  1352  021B                     	;# 
  1353  021C                     	;# 
  1354  021C                     	;# 
  1355  021D                     	;# 
  1356  021D                     	;# 
  1357  021E                     	;# 
  1358  021F                     	;# 
  1359  028C                     	;# 
  1360  028C                     	;# 
  1361  028D                     	;# 
  1362  028D                     	;# 
  1363  028E                     	;# 
  1364  028F                     	;# 
  1365  0290                     	;# 
  1366  0290                     	;# 
  1367  0291                     	;# 
  1368  0292                     	;# 
  1369  0292                     	;# 
  1370  0293                     	;# 
  1371  0293                     	;# 
  1372  0294                     	;# 
  1373  0295                     	;# 
  1374  0296                     	;# 
  1375  0296                     	;# 
  1376  0297                     	;# 
  1377  0298                     	;# 
  1378  0298                     	;# 
  1379  0299                     	;# 
  1380  0299                     	;# 
  1381  029A                     	;# 
  1382  029B                     	;# 
  1383  029C                     	;# 
  1384  029C                     	;# 
  1385  029D                     	;# 
  1386  030C                     	;# 
  1387  030C                     	;# 
  1388  030D                     	;# 
  1389  030E                     	;# 
  1390  030F                     	;# 
  1391  0310                     	;# 
  1392  0310                     	;# 
  1393  0311                     	;# 
  1394  0312                     	;# 
  1395  0313                     	;# 
  1396  0314                     	;# 
  1397  0314                     	;# 
  1398  0315                     	;# 
  1399  0316                     	;# 
  1400  0317                     	;# 
  1401  0318                     	;# 
  1402  0318                     	;# 
  1403  0319                     	;# 
  1404  031A                     	;# 
  1405  031B                     	;# 
  1406  031C                     	;# 
  1407  031C                     	;# 
  1408  031D                     	;# 
  1409  031E                     	;# 
  1410  031F                     	;# 
  1411  038C                     	;# 
  1412  038C                     	;# 
  1413  038D                     	;# 
  1414  038E                     	;# 
  1415  0390                     	;# 
  1416  0390                     	;# 
  1417  0391                     	;# 
  1418  0392                     	;# 
  1419  040C                     	;# 
  1420  040D                     	;# 
  1421  040E                     	;# 
  1422  040F                     	;# 
  1423  0410                     	;# 
  1424  0411                     	;# 
  1425  0416                     	;# 
  1426  0416                     	;# 
  1427  0417                     	;# 
  1428  0418                     	;# 
  1429  0418                     	;# 
  1430  0419                     	;# 
  1431  041A                     	;# 
  1432  041A                     	;# 
  1433  041B                     	;# 
  1434  041C                     	;# 
  1435  041C                     	;# 
  1436  041D                     	;# 
  1437  041E                     	;# 
  1438  041F                     	;# 
  1439  048C                     	;# 
  1440  048C                     	;# 
  1441  048D                     	;# 
  1442  048E                     	;# 
  1443  048F                     	;# 
  1444  048F                     	;# 
  1445  0490                     	;# 
  1446  0491                     	;# 
  1447  0492                     	;# 
  1448  0492                     	;# 
  1449  0493                     	;# 
  1450  0494                     	;# 
  1451  0495                     	;# 
  1452  0495                     	;# 
  1453  0496                     	;# 
  1454  0497                     	;# 
  1455  0498                     	;# 
  1456  0499                     	;# 
  1457  049A                     	;# 
  1458  049B                     	;# 
  1459  049C                     	;# 
  1460  049D                     	;# 
  1461  050C                     	;# 
  1462  050C                     	;# 
  1463  050D                     	;# 
  1464  050E                     	;# 
  1465  050F                     	;# 
  1466  050F                     	;# 
  1467  0510                     	;# 
  1468  0511                     	;# 
  1469  0512                     	;# 
  1470  0512                     	;# 
  1471  0513                     	;# 
  1472  0514                     	;# 
  1473  0515                     	;# 
  1474  0515                     	;# 
  1475  0516                     	;# 
  1476  0517                     	;# 
  1477  0518                     	;# 
  1478  0519                     	;# 
  1479  051A                     	;# 
  1480  051B                     	;# 
  1481  051C                     	;# 
  1482  051D                     	;# 
  1483  058C                     	;# 
  1484  058C                     	;# 
  1485  058D                     	;# 
  1486  058E                     	;# 
  1487  058F                     	;# 
  1488  058F                     	;# 
  1489  0590                     	;# 
  1490  0591                     	;# 
  1491  0592                     	;# 
  1492  0593                     	;# 
  1493  060C                     	;# 
  1494  060D                     	;# 
  1495  060E                     	;# 
  1496  060F                     	;# 
  1497  0610                     	;# 
  1498  0611                     	;# 
  1499  0612                     	;# 
  1500  0613                     	;# 
  1501  0614                     	;# 
  1502  0616                     	;# 
  1503  0617                     	;# 
  1504  0618                     	;# 
  1505  0619                     	;# 
  1506  061A                     	;# 
  1507  061B                     	;# 
  1508  061C                     	;# 
  1509  061D                     	;# 
  1510  061E                     	;# 
  1511  068C                     	;# 
  1512  068D                     	;# 
  1513  068E                     	;# 
  1514  068F                     	;# 
  1515  0690                     	;# 
  1516  0691                     	;# 
  1517  0692                     	;# 
  1518  0693                     	;# 
  1519  0694                     	;# 
  1520  070C                     	;# 
  1521  070D                     	;# 
  1522  070E                     	;# 
  1523  070F                     	;# 
  1524  0710                     	;# 
  1525  0711                     	;# 
  1526  0712                     	;# 
  1527  0713                     	;# 
  1528  0714                     	;# 
  1529  0716                     	;# 
  1530  0717                     	;# 
  1531  0718                     	;# 
  1532  0719                     	;# 
  1533  071A                     	;# 
  1534  071B                     	;# 
  1535  071C                     	;# 
  1536  071D                     	;# 
  1537  071E                     	;# 
  1538  0796                     	;# 
  1539  0797                     	;# 
  1540  0798                     	;# 
  1541  0799                     	;# 
  1542  079A                     	;# 
  1543  079B                     	;# 
  1544  080C                     	;# 
  1545  080D                     	;# 
  1546  080E                     	;# 
  1547  080F                     	;# 
  1548  0810                     	;# 
  1549  0811                     	;# 
  1550  0812                     	;# 
  1551  0813                     	;# 
  1552  0814                     	;# 
  1553  081A                     	;# 
  1554  081B                     	;# 
  1555  081C                     	;# 
  1556  081D                     	;# 
  1557  081E                     	;# 
  1558  081F                     	;# 
  1559  088C                     	;# 
  1560  088D                     	;# 
  1561  088E                     	;# 
  1562  088F                     	;# 
  1563  0890                     	;# 
  1564  0891                     	;# 
  1565  0892                     	;# 
  1566  0893                     	;# 
  1567  0895                     	;# 
  1568  0896                     	;# 
  1569  0897                     	;# 
  1570  0898                     	;# 
  1571  0899                     	;# 
  1572  089A                     	;# 
  1573  089B                     	;# 
  1574  090C                     	;# 
  1575  090E                     	;# 
  1576  090F                     	;# 
  1577  091F                     	;# 
  1578  091F                     	;# 
  1579  098F                     	;# 
  1580  098F                     	;# 
  1581  0990                     	;# 
  1582  0991                     	;# 
  1583  0992                     	;# 
  1584  0993                     	;# 
  1585  0994                     	;# 
  1586  0995                     	;# 
  1587  0996                     	;# 
  1588  0997                     	;# 
  1589  0E0F                     	;# 
  1590  0E10                     	;# 
  1591  0E11                     	;# 
  1592  0E12                     	;# 
  1593  0E13                     	;# 
  1594  0E14                     	;# 
  1595  0E15                     	;# 
  1596  0E16                     	;# 
  1597  0E17                     	;# 
  1598  0E18                     	;# 
  1599  0E19                     	;# 
  1600  0E1A                     	;# 
  1601  0E1B                     	;# 
  1602  0E1C                     	;# 
  1603  0E1D                     	;# 
  1604  0E1E                     	;# 
  1605  0E1F                     	;# 
  1606  0E20                     	;# 
  1607  0E21                     	;# 
  1608  0E22                     	;# 
  1609  0E23                     	;# 
  1610  0E24                     	;# 
  1611  0E25                     	;# 
  1612  0E26                     	;# 
  1613  0E27                     	;# 
  1614  0E28                     	;# 
  1615  0E29                     	;# 
  1616  0E2A                     	;# 
  1617  0E2B                     	;# 
  1618  0E2C                     	;# 
  1619  0E2D                     	;# 
  1620  0E2E                     	;# 
  1621  0E2F                     	;# 
  1622  0E30                     	;# 
  1623  0E31                     	;# 
  1624  0E32                     	;# 
  1625  0E33                     	;# 
  1626  0E34                     	;# 
  1627  0E35                     	;# 
  1628  0E36                     	;# 
  1629  0E37                     	;# 
  1630  0E8F                     	;# 
  1631  0E90                     	;# 
  1632  0E91                     	;# 
  1633  0E92                     	;# 
  1634  0E93                     	;# 
  1635  0E94                     	;# 
  1636  0E95                     	;# 
  1637  0E96                     	;# 
  1638  0E97                     	;# 
  1639  0E9C                     	;# 
  1640  0E9D                     	;# 
  1641  0E9E                     	;# 
  1642  0EA1                     	;# 
  1643  0EA2                     	;# 
  1644  0EA3                     	;# 
  1645  0EA4                     	;# 
  1646  0EA5                     	;# 
  1647  0EA9                     	;# 
  1648  0EAA                     	;# 
  1649  0EAB                     	;# 
  1650  0EAC                     	;# 
  1651  0EB1                     	;# 
  1652  0EB2                     	;# 
  1653  0EB3                     	;# 
  1654  0EB8                     	;# 
  1655  0EB9                     	;# 
  1656  0EBA                     	;# 
  1657  0EBB                     	;# 
  1658  0EBC                     	;# 
  1659  0EBD                     	;# 
  1660  0EBE                     	;# 
  1661  0EC3                     	;# 
  1662  0EC5                     	;# 
  1663  0EC6                     	;# 
  1664  0EC7                     	;# 
  1665  0EC8                     	;# 
  1666  0EC9                     	;# 
  1667  0ECA                     	;# 
  1668  0ECB                     	;# 
  1669  0ECC                     	;# 
  1670  0F10                     	;# 
  1671  0F11                     	;# 
  1672  0F12                     	;# 
  1673  0F13                     	;# 
  1674  0F14                     	;# 
  1675  0F15                     	;# 
  1676  0F16                     	;# 
  1677  0F17                     	;# 
  1678  0F18                     	;# 
  1679  0F19                     	;# 
  1680  0F1A                     	;# 
  1681  0F1B                     	;# 
  1682  0F1C                     	;# 
  1683  0F1D                     	;# 
  1684  0F1E                     	;# 
  1685  0F1F                     	;# 
  1686  0F20                     	;# 
  1687  0F21                     	;# 
  1688  0F22                     	;# 
  1689  0F23                     	;# 
  1690  0F24                     	;# 
  1691  0F25                     	;# 
  1692  0F26                     	;# 
  1693  0F27                     	;# 
  1694  0F28                     	;# 
  1695  0F29                     	;# 
  1696  0F2A                     	;# 
  1697  0F2B                     	;# 
  1698  0F2C                     	;# 
  1699  0F2D                     	;# 
  1700  0F2E                     	;# 
  1701  0F2F                     	;# 
  1702  0F30                     	;# 
  1703  0F31                     	;# 
  1704  0F32                     	;# 
  1705  0F38                     	;# 
  1706  0F39                     	;# 
  1707  0F3A                     	;# 
  1708  0F3B                     	;# 
  1709  0F3C                     	;# 
  1710  0F3D                     	;# 
  1711  0F3E                     	;# 
  1712  0F3F                     	;# 
  1713  0F40                     	;# 
  1714  0F41                     	;# 
  1715  0F43                     	;# 
  1716  0F44                     	;# 
  1717  0F45                     	;# 
  1718  0F46                     	;# 
  1719  0F47                     	;# 
  1720  0F48                     	;# 
  1721  0F49                     	;# 
  1722  0F4A                     	;# 
  1723  0F4B                     	;# 
  1724  0F4C                     	;# 
  1725  0F4E                     	;# 
  1726  0F4F                     	;# 
  1727  0F50                     	;# 
  1728  0F51                     	;# 
  1729  0F52                     	;# 
  1730  0F53                     	;# 
  1731  0F54                     	;# 
  1732  0F55                     	;# 
  1733  0F56                     	;# 
  1734  0F57                     	;# 
  1735  0F59                     	;# 
  1736  0F5A                     	;# 
  1737  0F5B                     	;# 
  1738  0F5C                     	;# 
  1739  0F5D                     	;# 
  1740  0F61                     	;# 
  1741  0F62                     	;# 
  1742  0F64                     	;# 
  1743  0F65                     	;# 
  1744  0F66                     	;# 
  1745  0F67                     	;# 
  1746  0F68                     	;# 
  1747  0F69                     	;# 
  1748  0F6A                     	;# 
  1749  0F6B                     	;# 
  1750  0F6C                     	;# 
  1751  0F6D                     	;# 
  1752  0FE4                     	;# 
  1753  0FE5                     	;# 
  1754  0FE6                     	;# 
  1755  0FE7                     	;# 
  1756  0FE8                     	;# 
  1757  0FE9                     	;# 
  1758  0FEA                     	;# 
  1759  0FEB                     	;# 
  1760  0FED                     	;# 
  1761  0FEE                     	;# 
  1762  0FEF                     	;# 
  1763  0000                     	;# 
  1764  0001                     	;# 
  1765  0002                     	;# 
  1766  0003                     	;# 
  1767  0004                     	;# 
  1768  0005                     	;# 
  1769  0006                     	;# 
  1770  0007                     	;# 
  1771  0008                     	;# 
  1772  0009                     	;# 
  1773  000A                     	;# 
  1774  000B                     	;# 
  1775  000C                     	;# 
  1776  000D                     	;# 
  1777  000E                     	;# 
  1778  000F                     	;# 
  1779  0010                     	;# 
  1780  0011                     	;# 
  1781  0012                     	;# 
  1782  0013                     	;# 
  1783  0014                     	;# 
  1784  0015                     	;# 
  1785  0016                     	;# 
  1786  0017                     	;# 
  1787  0018                     	;# 
  1788  0019                     	;# 
  1789  001A                     	;# 
  1790  001C                     	;# 
  1791  001C                     	;# 
  1792  001D                     	;# 
  1793  001D                     	;# 
  1794  001E                     	;# 
  1795  001F                     	;# 
  1796  008C                     	;# 
  1797  008C                     	;# 
  1798  008D                     	;# 
  1799  008E                     	;# 
  1800  008E                     	;# 
  1801  008F                     	;# 
  1802  0090                     	;# 
  1803  0090                     	;# 
  1804  0091                     	;# 
  1805  0093                     	;# 
  1806  0094                     	;# 
  1807  0095                     	;# 
  1808  0096                     	;# 
  1809  0097                     	;# 
  1810  0098                     	;# 
  1811  0099                     	;# 
  1812  009A                     	;# 
  1813  009B                     	;# 
  1814  009C                     	;# 
  1815  009D                     	;# 
  1816  009E                     	;# 
  1817  010C                     	;# 
  1818  010D                     	;# 
  1819  010E                     	;# 
  1820  010E                     	;# 
  1821  010F                     	;# 
  1822  0110                     	;# 
  1823  0110                     	;# 
  1824  0111                     	;# 
  1825  0112                     	;# 
  1826  0112                     	;# 
  1827  0113                     	;# 
  1828  0114                     	;# 
  1829  0114                     	;# 
  1830  0115                     	;# 
  1831  0116                     	;# 
  1832  0116                     	;# 
  1833  0117                     	;# 
  1834  0119                     	;# 
  1835  0119                     	;# 
  1836  0119                     	;# 
  1837  011A                     	;# 
  1838  011A                     	;# 
  1839  011A                     	;# 
  1840  011B                     	;# 
  1841  011B                     	;# 
  1842  011B                     	;# 
  1843  011B                     	;# 
  1844  011B                     	;# 
  1845  011C                     	;# 
  1846  011C                     	;# 
  1847  011C                     	;# 
  1848  011D                     	;# 
  1849  011D                     	;# 
  1850  011D                     	;# 
  1851  011E                     	;# 
  1852  011E                     	;# 
  1853  011E                     	;# 
  1854  011F                     	;# 
  1855  011F                     	;# 
  1856  011F                     	;# 
  1857  011F                     	;# 
  1858  011F                     	;# 
  1859  018C                     	;# 
  1860  018D                     	;# 
  1861  018E                     	;# 
  1862  018F                     	;# 
  1863  0190                     	;# 
  1864  0191                     	;# 
  1865  0192                     	;# 
  1866  0196                     	;# 
  1867  0197                     	;# 
  1868  0198                     	;# 
  1869  0199                     	;# 
  1870  019A                     	;# 
  1871  019B                     	;# 
  1872  019C                     	;# 
  1873  020C                     	;# 
  1874  020C                     	;# 
  1875  020D                     	;# 
  1876  020E                     	;# 
  1877  020F                     	;# 
  1878  020F                     	;# 
  1879  0210                     	;# 
  1880  0210                     	;# 
  1881  0211                     	;# 
  1882  0211                     	;# 
  1883  0212                     	;# 
  1884  0212                     	;# 
  1885  0213                     	;# 
  1886  0214                     	;# 
  1887  0215                     	;# 
  1888  0215                     	;# 
  1889  0216                     	;# 
  1890  0216                     	;# 
  1891  0217                     	;# 
  1892  0217                     	;# 
  1893  0218                     	;# 
  1894  0218                     	;# 
  1895  0219                     	;# 
  1896  021A                     	;# 
  1897  021B                     	;# 
  1898  021B                     	;# 
  1899  021C                     	;# 
  1900  021C                     	;# 
  1901  021D                     	;# 
  1902  021D                     	;# 
  1903  021E                     	;# 
  1904  021F                     	;# 
  1905  028C                     	;# 
  1906  028C                     	;# 
  1907  028D                     	;# 
  1908  028D                     	;# 
  1909  028E                     	;# 
  1910  028F                     	;# 
  1911  0290                     	;# 
  1912  0290                     	;# 
  1913  0291                     	;# 
  1914  0292                     	;# 
  1915  0292                     	;# 
  1916  0293                     	;# 
  1917  0293                     	;# 
  1918  0294                     	;# 
  1919  0295                     	;# 
  1920  0296                     	;# 
  1921  0296                     	;# 
  1922  0297                     	;# 
  1923  0298                     	;# 
  1924  0298                     	;# 
  1925  0299                     	;# 
  1926  0299                     	;# 
  1927  029A                     	;# 
  1928  029B                     	;# 
  1929  029C                     	;# 
  1930  029C                     	;# 
  1931  029D                     	;# 
  1932  030C                     	;# 
  1933  030C                     	;# 
  1934  030D                     	;# 
  1935  030E                     	;# 
  1936  030F                     	;# 
  1937  0310                     	;# 
  1938  0310                     	;# 
  1939  0311                     	;# 
  1940  0312                     	;# 
  1941  0313                     	;# 
  1942  0314                     	;# 
  1943  0314                     	;# 
  1944  0315                     	;# 
  1945  0316                     	;# 
  1946  0317                     	;# 
  1947  0318                     	;# 
  1948  0318                     	;# 
  1949  0319                     	;# 
  1950  031A                     	;# 
  1951  031B                     	;# 
  1952  031C                     	;# 
  1953  031C                     	;# 
  1954  031D                     	;# 
  1955  031E                     	;# 
  1956  031F                     	;# 
  1957  038C                     	;# 
  1958  038C                     	;# 
  1959  038D                     	;# 
  1960  038E                     	;# 
  1961  0390                     	;# 
  1962  0390                     	;# 
  1963  0391                     	;# 
  1964  0392                     	;# 
  1965  040C                     	;# 
  1966  040D                     	;# 
  1967  040E                     	;# 
  1968  040F                     	;# 
  1969  0410                     	;# 
  1970  0411                     	;# 
  1971  0416                     	;# 
  1972  0416                     	;# 
  1973  0417                     	;# 
  1974  0418                     	;# 
  1975  0418                     	;# 
  1976  0419                     	;# 
  1977  041A                     	;# 
  1978  041A                     	;# 
  1979  041B                     	;# 
  1980  041C                     	;# 
  1981  041C                     	;# 
  1982  041D                     	;# 
  1983  041E                     	;# 
  1984  041F                     	;# 
  1985  048C                     	;# 
  1986  048C                     	;# 
  1987  048D                     	;# 
  1988  048E                     	;# 
  1989  048F                     	;# 
  1990  048F                     	;# 
  1991  0490                     	;# 
  1992  0491                     	;# 
  1993  0492                     	;# 
  1994  0492                     	;# 
  1995  0493                     	;# 
  1996  0494                     	;# 
  1997  0495                     	;# 
  1998  0495                     	;# 
  1999  0496                     	;# 
  2000  0497                     	;# 
  2001  0498                     	;# 
  2002  0499                     	;# 
  2003  049A                     	;# 
  2004  049B                     	;# 
  2005  049C                     	;# 
  2006  049D                     	;# 
  2007  050C                     	;# 
  2008  050C                     	;# 
  2009  050D                     	;# 
  2010  050E                     	;# 
  2011  050F                     	;# 
  2012  050F                     	;# 
  2013  0510                     	;# 
  2014  0511                     	;# 
  2015  0512                     	;# 
  2016  0512                     	;# 
  2017  0513                     	;# 
  2018  0514                     	;# 
  2019  0515                     	;# 
  2020  0515                     	;# 
  2021  0516                     	;# 
  2022  0517                     	;# 
  2023  0518                     	;# 
  2024  0519                     	;# 
  2025  051A                     	;# 
  2026  051B                     	;# 
  2027  051C                     	;# 
  2028  051D                     	;# 
  2029  058C                     	;# 
  2030  058C                     	;# 
  2031  058D                     	;# 
  2032  058E                     	;# 
  2033  058F                     	;# 
  2034  058F                     	;# 
  2035  0590                     	;# 
  2036  0591                     	;# 
  2037  0592                     	;# 
  2038  0593                     	;# 
  2039  060C                     	;# 
  2040  060D                     	;# 
  2041  060E                     	;# 
  2042  060F                     	;# 
  2043  0610                     	;# 
  2044  0611                     	;# 
  2045  0612                     	;# 
  2046  0613                     	;# 
  2047  0614                     	;# 
  2048  0616                     	;# 
  2049  0617                     	;# 
  2050  0618                     	;# 
  2051  0619                     	;# 
  2052  061A                     	;# 
  2053  061B                     	;# 
  2054  061C                     	;# 
  2055  061D                     	;# 
  2056  061E                     	;# 
  2057  068C                     	;# 
  2058  068D                     	;# 
  2059  068E                     	;# 
  2060  068F                     	;# 
  2061  0690                     	;# 
  2062  0691                     	;# 
  2063  0692                     	;# 
  2064  0693                     	;# 
  2065  0694                     	;# 
  2066  070C                     	;# 
  2067  070D                     	;# 
  2068  070E                     	;# 
  2069  070F                     	;# 
  2070  0710                     	;# 
  2071  0711                     	;# 
  2072  0712                     	;# 
  2073  0713                     	;# 
  2074  0714                     	;# 
  2075  0716                     	;# 
  2076  0717                     	;# 
  2077  0718                     	;# 
  2078  0719                     	;# 
  2079  071A                     	;# 
  2080  071B                     	;# 
  2081  071C                     	;# 
  2082  071D                     	;# 
  2083  071E                     	;# 
  2084  0796                     	;# 
  2085  0797                     	;# 
  2086  0798                     	;# 
  2087  0799                     	;# 
  2088  079A                     	;# 
  2089  079B                     	;# 
  2090  080C                     	;# 
  2091  080D                     	;# 
  2092  080E                     	;# 
  2093  080F                     	;# 
  2094  0810                     	;# 
  2095  0811                     	;# 
  2096  0812                     	;# 
  2097  0813                     	;# 
  2098  0814                     	;# 
  2099  081A                     	;# 
  2100  081B                     	;# 
  2101  081C                     	;# 
  2102  081D                     	;# 
  2103  081E                     	;# 
  2104  081F                     	;# 
  2105  088C                     	;# 
  2106  088D                     	;# 
  2107  088E                     	;# 
  2108  088F                     	;# 
  2109  0890                     	;# 
  2110  0891                     	;# 
  2111  0892                     	;# 
  2112  0893                     	;# 
  2113  0895                     	;# 
  2114  0896                     	;# 
  2115  0897                     	;# 
  2116  0898                     	;# 
  2117  0899                     	;# 
  2118  089A                     	;# 
  2119  089B                     	;# 
  2120  090C                     	;# 
  2121  090E                     	;# 
  2122  090F                     	;# 
  2123  091F                     	;# 
  2124  091F                     	;# 
  2125  098F                     	;# 
  2126  098F                     	;# 
  2127  0990                     	;# 
  2128  0991                     	;# 
  2129  0992                     	;# 
  2130  0993                     	;# 
  2131  0994                     	;# 
  2132  0995                     	;# 
  2133  0996                     	;# 
  2134  0997                     	;# 
  2135  0E0F                     	;# 
  2136  0E10                     	;# 
  2137  0E11                     	;# 
  2138  0E12                     	;# 
  2139  0E13                     	;# 
  2140  0E14                     	;# 
  2141  0E15                     	;# 
  2142  0E16                     	;# 
  2143  0E17                     	;# 
  2144  0E18                     	;# 
  2145  0E19                     	;# 
  2146  0E1A                     	;# 
  2147  0E1B                     	;# 
  2148  0E1C                     	;# 
  2149  0E1D                     	;# 
  2150  0E1E                     	;# 
  2151  0E1F                     	;# 
  2152  0E20                     	;# 
  2153  0E21                     	;# 
  2154  0E22                     	;# 
  2155  0E23                     	;# 
  2156  0E24                     	;# 
  2157  0E25                     	;# 
  2158  0E26                     	;# 
  2159  0E27                     	;# 
  2160  0E28                     	;# 
  2161  0E29                     	;# 
  2162  0E2A                     	;# 
  2163  0E2B                     	;# 
  2164  0E2C                     	;# 
  2165  0E2D                     	;# 
  2166  0E2E                     	;# 
  2167  0E2F                     	;# 
  2168  0E30                     	;# 
  2169  0E31                     	;# 
  2170  0E32                     	;# 
  2171  0E33                     	;# 
  2172  0E34                     	;# 
  2173  0E35                     	;# 
  2174  0E36                     	;# 
  2175  0E37                     	;# 
  2176  0E8F                     	;# 
  2177  0E90                     	;# 
  2178  0E91                     	;# 
  2179  0E92                     	;# 
  2180  0E93                     	;# 
  2181  0E94                     	;# 
  2182  0E95                     	;# 
  2183  0E96                     	;# 
  2184  0E97                     	;# 
  2185  0E9C                     	;# 
  2186  0E9D                     	;# 
  2187  0E9E                     	;# 
  2188  0EA1                     	;# 
  2189  0EA2                     	;# 
  2190  0EA3                     	;# 
  2191  0EA4                     	;# 
  2192  0EA5                     	;# 
  2193  0EA9                     	;# 
  2194  0EAA                     	;# 
  2195  0EAB                     	;# 
  2196  0EAC                     	;# 
  2197  0EB1                     	;# 
  2198  0EB2                     	;# 
  2199  0EB3                     	;# 
  2200  0EB8                     	;# 
  2201  0EB9                     	;# 
  2202  0EBA                     	;# 
  2203  0EBB                     	;# 
  2204  0EBC                     	;# 
  2205  0EBD                     	;# 
  2206  0EBE                     	;# 
  2207  0EC3                     	;# 
  2208  0EC5                     	;# 
  2209  0EC6                     	;# 
  2210  0EC7                     	;# 
  2211  0EC8                     	;# 
  2212  0EC9                     	;# 
  2213  0ECA                     	;# 
  2214  0ECB                     	;# 
  2215  0ECC                     	;# 
  2216  0F10                     	;# 
  2217  0F11                     	;# 
  2218  0F12                     	;# 
  2219  0F13                     	;# 
  2220  0F14                     	;# 
  2221  0F15                     	;# 
  2222  0F16                     	;# 
  2223  0F17                     	;# 
  2224  0F18                     	;# 
  2225  0F19                     	;# 
  2226  0F1A                     	;# 
  2227  0F1B                     	;# 
  2228  0F1C                     	;# 
  2229  0F1D                     	;# 
  2230  0F1E                     	;# 
  2231  0F1F                     	;# 
  2232  0F20                     	;# 
  2233  0F21                     	;# 
  2234  0F22                     	;# 
  2235  0F23                     	;# 
  2236  0F24                     	;# 
  2237  0F25                     	;# 
  2238  0F26                     	;# 
  2239  0F27                     	;# 
  2240  0F28                     	;# 
  2241  0F29                     	;# 
  2242  0F2A                     	;# 
  2243  0F2B                     	;# 
  2244  0F2C                     	;# 
  2245  0F2D                     	;# 
  2246  0F2E                     	;# 
  2247  0F2F                     	;# 
  2248  0F30                     	;# 
  2249  0F31                     	;# 
  2250  0F32                     	;# 
  2251  0F38                     	;# 
  2252  0F39                     	;# 
  2253  0F3A                     	;# 
  2254  0F3B                     	;# 
  2255  0F3C                     	;# 
  2256  0F3D                     	;# 
  2257  0F3E                     	;# 
  2258  0F3F                     	;# 
  2259  0F40                     	;# 
  2260  0F41                     	;# 
  2261  0F43                     	;# 
  2262  0F44                     	;# 
  2263  0F45                     	;# 
  2264  0F46                     	;# 
  2265  0F47                     	;# 
  2266  0F48                     	;# 
  2267  0F49                     	;# 
  2268  0F4A                     	;# 
  2269  0F4B                     	;# 
  2270  0F4C                     	;# 
  2271  0F4E                     	;# 
  2272  0F4F                     	;# 
  2273  0F50                     	;# 
  2274  0F51                     	;# 
  2275  0F52                     	;# 
  2276  0F53                     	;# 
  2277  0F54                     	;# 
  2278  0F55                     	;# 
  2279  0F56                     	;# 
  2280  0F57                     	;# 
  2281  0F59                     	;# 
  2282  0F5A                     	;# 
  2283  0F5B                     	;# 
  2284  0F5C                     	;# 
  2285  0F5D                     	;# 
  2286  0F61                     	;# 
  2287  0F62                     	;# 
  2288  0F64                     	;# 
  2289  0F65                     	;# 
  2290  0F66                     	;# 
  2291  0F67                     	;# 
  2292  0F68                     	;# 
  2293  0F69                     	;# 
  2294  0F6A                     	;# 
  2295  0F6B                     	;# 
  2296  0F6C                     	;# 
  2297  0F6D                     	;# 
  2298  0FE4                     	;# 
  2299  0FE5                     	;# 
  2300  0FE6                     	;# 
  2301  0FE7                     	;# 
  2302  0FE8                     	;# 
  2303  0FE9                     	;# 
  2304  0FEA                     	;# 
  2305  0FEB                     	;# 
  2306  0FED                     	;# 
  2307  0FEE                     	;# 
  2308  0FEF                     	;# 
  2309  0000                     	;# 
  2310  0001                     	;# 
  2311  0002                     	;# 
  2312  0003                     	;# 
  2313  0004                     	;# 
  2314  0005                     	;# 
  2315  0006                     	;# 
  2316  0007                     	;# 
  2317  0008                     	;# 
  2318  0009                     	;# 
  2319  000A                     	;# 
  2320  000B                     	;# 
  2321  000C                     	;# 
  2322  000D                     	;# 
  2323  000E                     	;# 
  2324  000F                     	;# 
  2325  0010                     	;# 
  2326  0011                     	;# 
  2327  0012                     	;# 
  2328  0013                     	;# 
  2329  0014                     	;# 
  2330  0015                     	;# 
  2331  0016                     	;# 
  2332  0017                     	;# 
  2333  0018                     	;# 
  2334  0019                     	;# 
  2335  001A                     	;# 
  2336  001C                     	;# 
  2337  001C                     	;# 
  2338  001D                     	;# 
  2339  001D                     	;# 
  2340  001E                     	;# 
  2341  001F                     	;# 
  2342  008C                     	;# 
  2343  008C                     	;# 
  2344  008D                     	;# 
  2345  008E                     	;# 
  2346  008E                     	;# 
  2347  008F                     	;# 
  2348  0090                     	;# 
  2349  0090                     	;# 
  2350  0091                     	;# 
  2351  0093                     	;# 
  2352  0094                     	;# 
  2353  0095                     	;# 
  2354  0096                     	;# 
  2355  0097                     	;# 
  2356  0098                     	;# 
  2357  0099                     	;# 
  2358  009A                     	;# 
  2359  009B                     	;# 
  2360  009C                     	;# 
  2361  009D                     	;# 
  2362  009E                     	;# 
  2363  010C                     	;# 
  2364  010D                     	;# 
  2365  010E                     	;# 
  2366  010E                     	;# 
  2367  010F                     	;# 
  2368  0110                     	;# 
  2369  0110                     	;# 
  2370  0111                     	;# 
  2371  0112                     	;# 
  2372  0112                     	;# 
  2373  0113                     	;# 
  2374  0114                     	;# 
  2375  0114                     	;# 
  2376  0115                     	;# 
  2377  0116                     	;# 
  2378  0116                     	;# 
  2379  0117                     	;# 
  2380  0119                     	;# 
  2381  0119                     	;# 
  2382  0119                     	;# 
  2383  011A                     	;# 
  2384  011A                     	;# 
  2385  011A                     	;# 
  2386  011B                     	;# 
  2387  011B                     	;# 
  2388  011B                     	;# 
  2389  011B                     	;# 
  2390  011B                     	;# 
  2391  011C                     	;# 
  2392  011C                     	;# 
  2393  011C                     	;# 
  2394  011D                     	;# 
  2395  011D                     	;# 
  2396  011D                     	;# 
  2397  011E                     	;# 
  2398  011E                     	;# 
  2399  011E                     	;# 
  2400  011F                     	;# 
  2401  011F                     	;# 
  2402  011F                     	;# 
  2403  011F                     	;# 
  2404  011F                     	;# 
  2405  018C                     	;# 
  2406  018D                     	;# 
  2407  018E                     	;# 
  2408  018F                     	;# 
  2409  0190                     	;# 
  2410  0191                     	;# 
  2411  0192                     	;# 
  2412  0196                     	;# 
  2413  0197                     	;# 
  2414  0198                     	;# 
  2415  0199                     	;# 
  2416  019A                     	;# 
  2417  019B                     	;# 
  2418  019C                     	;# 
  2419  020C                     	;# 
  2420  020C                     	;# 
  2421  020D                     	;# 
  2422  020E                     	;# 
  2423  020F                     	;# 
  2424  020F                     	;# 
  2425  0210                     	;# 
  2426  0210                     	;# 
  2427  0211                     	;# 
  2428  0211                     	;# 
  2429  0212                     	;# 
  2430  0212                     	;# 
  2431  0213                     	;# 
  2432  0214                     	;# 
  2433  0215                     	;# 
  2434  0215                     	;# 
  2435  0216                     	;# 
  2436  0216                     	;# 
  2437  0217                     	;# 
  2438  0217                     	;# 
  2439  0218                     	;# 
  2440  0218                     	;# 
  2441  0219                     	;# 
  2442  021A                     	;# 
  2443  021B                     	;# 
  2444  021B                     	;# 
  2445  021C                     	;# 
  2446  021C                     	;# 
  2447  021D                     	;# 
  2448  021D                     	;# 
  2449  021E                     	;# 
  2450  021F                     	;# 
  2451  028C                     	;# 
  2452  028C                     	;# 
  2453  028D                     	;# 
  2454  028D                     	;# 
  2455  028E                     	;# 
  2456  028F                     	;# 
  2457  0290                     	;# 
  2458  0290                     	;# 
  2459  0291                     	;# 
  2460  0292                     	;# 
  2461  0292                     	;# 
  2462  0293                     	;# 
  2463  0293                     	;# 
  2464  0294                     	;# 
  2465  0295                     	;# 
  2466  0296                     	;# 
  2467  0296                     	;# 
  2468  0297                     	;# 
  2469  0298                     	;# 
  2470  0298                     	;# 
  2471  0299                     	;# 
  2472  0299                     	;# 
  2473  029A                     	;# 
  2474  029B                     	;# 
  2475  029C                     	;# 
  2476  029C                     	;# 
  2477  029D                     	;# 
  2478  030C                     	;# 
  2479  030C                     	;# 
  2480  030D                     	;# 
  2481  030E                     	;# 
  2482  030F                     	;# 
  2483  0310                     	;# 
  2484  0310                     	;# 
  2485  0311                     	;# 
  2486  0312                     	;# 
  2487  0313                     	;# 
  2488  0314                     	;# 
  2489  0314                     	;# 
  2490  0315                     	;# 
  2491  0316                     	;# 
  2492  0317                     	;# 
  2493  0318                     	;# 
  2494  0318                     	;# 
  2495  0319                     	;# 
  2496  031A                     	;# 
  2497  031B                     	;# 
  2498  031C                     	;# 
  2499  031C                     	;# 
  2500  031D                     	;# 
  2501  031E                     	;# 
  2502  031F                     	;# 
  2503  038C                     	;# 
  2504  038C                     	;# 
  2505  038D                     	;# 
  2506  038E                     	;# 
  2507  0390                     	;# 
  2508  0390                     	;# 
  2509  0391                     	;# 
  2510  0392                     	;# 
  2511  040C                     	;# 
  2512  040D                     	;# 
  2513  040E                     	;# 
  2514  040F                     	;# 
  2515  0410                     	;# 
  2516  0411                     	;# 
  2517  0416                     	;# 
  2518  0416                     	;# 
  2519  0417                     	;# 
  2520  0418                     	;# 
  2521  0418                     	;# 
  2522  0419                     	;# 
  2523  041A                     	;# 
  2524  041A                     	;# 
  2525  041B                     	;# 
  2526  041C                     	;# 
  2527  041C                     	;# 
  2528  041D                     	;# 
  2529  041E                     	;# 
  2530  041F                     	;# 
  2531  048C                     	;# 
  2532  048C                     	;# 
  2533  048D                     	;# 
  2534  048E                     	;# 
  2535  048F                     	;# 
  2536  048F                     	;# 
  2537  0490                     	;# 
  2538  0491                     	;# 
  2539  0492                     	;# 
  2540  0492                     	;# 
  2541  0493                     	;# 
  2542  0494                     	;# 
  2543  0495                     	;# 
  2544  0495                     	;# 
  2545  0496                     	;# 
  2546  0497                     	;# 
  2547  0498                     	;# 
  2548  0499                     	;# 
  2549  049A                     	;# 
  2550  049B                     	;# 
  2551  049C                     	;# 
  2552  049D                     	;# 
  2553  050C                     	;# 
  2554  050C                     	;# 
  2555  050D                     	;# 
  2556  050E                     	;# 
  2557  050F                     	;# 
  2558  050F                     	;# 
  2559  0510                     	;# 
  2560  0511                     	;# 
  2561  0512                     	;# 
  2562  0512                     	;# 
  2563  0513                     	;# 
  2564  0514                     	;# 
  2565  0515                     	;# 
  2566  0515                     	;# 
  2567  0516                     	;# 
  2568  0517                     	;# 
  2569  0518                     	;# 
  2570  0519                     	;# 
  2571  051A                     	;# 
  2572  051B                     	;# 
  2573  051C                     	;# 
  2574  051D                     	;# 
  2575  058C                     	;# 
  2576  058C                     	;# 
  2577  058D                     	;# 
  2578  058E                     	;# 
  2579  058F                     	;# 
  2580  058F                     	;# 
  2581  0590                     	;# 
  2582  0591                     	;# 
  2583  0592                     	;# 
  2584  0593                     	;# 
  2585  060C                     	;# 
  2586  060D                     	;# 
  2587  060E                     	;# 
  2588  060F                     	;# 
  2589  0610                     	;# 
  2590  0611                     	;# 
  2591  0612                     	;# 
  2592  0613                     	;# 
  2593  0614                     	;# 
  2594  0616                     	;# 
  2595  0617                     	;# 
  2596  0618                     	;# 
  2597  0619                     	;# 
  2598  061A                     	;# 
  2599  061B                     	;# 
  2600  061C                     	;# 
  2601  061D                     	;# 
  2602  061E                     	;# 
  2603  068C                     	;# 
  2604  068D                     	;# 
  2605  068E                     	;# 
  2606  068F                     	;# 
  2607  0690                     	;# 
  2608  0691                     	;# 
  2609  0692                     	;# 
  2610  0693                     	;# 
  2611  0694                     	;# 
  2612  070C                     	;# 
  2613  070D                     	;# 
  2614  070E                     	;# 
  2615  070F                     	;# 
  2616  0710                     	;# 
  2617  0711                     	;# 
  2618  0712                     	;# 
  2619  0713                     	;# 
  2620  0714                     	;# 
  2621  0716                     	;# 
  2622  0717                     	;# 
  2623  0718                     	;# 
  2624  0719                     	;# 
  2625  071A                     	;# 
  2626  071B                     	;# 
  2627  071C                     	;# 
  2628  071D                     	;# 
  2629  071E                     	;# 
  2630  0796                     	;# 
  2631  0797                     	;# 
  2632  0798                     	;# 
  2633  0799                     	;# 
  2634  079A                     	;# 
  2635  079B                     	;# 
  2636  080C                     	;# 
  2637  080D                     	;# 
  2638  080E                     	;# 
  2639  080F                     	;# 
  2640  0810                     	;# 
  2641  0811                     	;# 
  2642  0812                     	;# 
  2643  0813                     	;# 
  2644  0814                     	;# 
  2645  081A                     	;# 
  2646  081B                     	;# 
  2647  081C                     	;# 
  2648  081D                     	;# 
  2649  081E                     	;# 
  2650  081F                     	;# 
  2651  088C                     	;# 
  2652  088D                     	;# 
  2653  088E                     	;# 
  2654  088F                     	;# 
  2655  0890                     	;# 
  2656  0891                     	;# 
  2657  0892                     	;# 
  2658  0893                     	;# 
  2659  0895                     	;# 
  2660  0896                     	;# 
  2661  0897                     	;# 
  2662  0898                     	;# 
  2663  0899                     	;# 
  2664  089A                     	;# 
  2665  089B                     	;# 
  2666  090C                     	;# 
  2667  090E                     	;# 
  2668  090F                     	;# 
  2669  091F                     	;# 
  2670  091F                     	;# 
  2671  098F                     	;# 
  2672  098F                     	;# 
  2673  0990                     	;# 
  2674  0991                     	;# 
  2675  0992                     	;# 
  2676  0993                     	;# 
  2677  0994                     	;# 
  2678  0995                     	;# 
  2679  0996                     	;# 
  2680  0997                     	;# 
  2681  0E0F                     	;# 
  2682  0E10                     	;# 
  2683  0E11                     	;# 
  2684  0E12                     	;# 
  2685  0E13                     	;# 
  2686  0E14                     	;# 
  2687  0E15                     	;# 
  2688  0E16                     	;# 
  2689  0E17                     	;# 
  2690  0E18                     	;# 
  2691  0E19                     	;# 
  2692  0E1A                     	;# 
  2693  0E1B                     	;# 
  2694  0E1C                     	;# 
  2695  0E1D                     	;# 
  2696  0E1E                     	;# 
  2697  0E1F                     	;# 
  2698  0E20                     	;# 
  2699  0E21                     	;# 
  2700  0E22                     	;# 
  2701  0E23                     	;# 
  2702  0E24                     	;# 
  2703  0E25                     	;# 
  2704  0E26                     	;# 
  2705  0E27                     	;# 
  2706  0E28                     	;# 
  2707  0E29                     	;# 
  2708  0E2A                     	;# 
  2709  0E2B                     	;# 
  2710  0E2C                     	;# 
  2711  0E2D                     	;# 
  2712  0E2E                     	;# 
  2713  0E2F                     	;# 
  2714  0E30                     	;# 
  2715  0E31                     	;# 
  2716  0E32                     	;# 
  2717  0E33                     	;# 
  2718  0E34                     	;# 
  2719  0E35                     	;# 
  2720  0E36                     	;# 
  2721  0E37                     	;# 
  2722  0E8F                     	;# 
  2723  0E90                     	;# 
  2724  0E91                     	;# 
  2725  0E92                     	;# 
  2726  0E93                     	;# 
  2727  0E94                     	;# 
  2728  0E95                     	;# 
  2729  0E96                     	;# 
  2730  0E97                     	;# 
  2731  0E9C                     	;# 
  2732  0E9D                     	;# 
  2733  0E9E                     	;# 
  2734  0EA1                     	;# 
  2735  0EA2                     	;# 
  2736  0EA3                     	;# 
  2737  0EA4                     	;# 
  2738  0EA5                     	;# 
  2739  0EA9                     	;# 
  2740  0EAA                     	;# 
  2741  0EAB                     	;# 
  2742  0EAC                     	;# 
  2743  0EB1                     	;# 
  2744  0EB2                     	;# 
  2745  0EB3                     	;# 
  2746  0EB8                     	;# 
  2747  0EB9                     	;# 
  2748  0EBA                     	;# 
  2749  0EBB                     	;# 
  2750  0EBC                     	;# 
  2751  0EBD                     	;# 
  2752  0EBE                     	;# 
  2753  0EC3                     	;# 
  2754  0EC5                     	;# 
  2755  0EC6                     	;# 
  2756  0EC7                     	;# 
  2757  0EC8                     	;# 
  2758  0EC9                     	;# 
  2759  0ECA                     	;# 
  2760  0ECB                     	;# 
  2761  0ECC                     	;# 
  2762  0F10                     	;# 
  2763  0F11                     	;# 
  2764  0F12                     	;# 
  2765  0F13                     	;# 
  2766  0F14                     	;# 
  2767  0F15                     	;# 
  2768  0F16                     	;# 
  2769  0F17                     	;# 
  2770  0F18                     	;# 
  2771  0F19                     	;# 
  2772  0F1A                     	;# 
  2773  0F1B                     	;# 
  2774  0F1C                     	;# 
  2775  0F1D                     	;# 
  2776  0F1E                     	;# 
  2777  0F1F                     	;# 
  2778  0F20                     	;# 
  2779  0F21                     	;# 
  2780  0F22                     	;# 
  2781  0F23                     	;# 
  2782  0F24                     	;# 
  2783  0F25                     	;# 
  2784  0F26                     	;# 
  2785  0F27                     	;# 
  2786  0F28                     	;# 
  2787  0F29                     	;# 
  2788  0F2A                     	;# 
  2789  0F2B                     	;# 
  2790  0F2C                     	;# 
  2791  0F2D                     	;# 
  2792  0F2E                     	;# 
  2793  0F2F                     	;# 
  2794  0F30                     	;# 
  2795  0F31                     	;# 
  2796  0F32                     	;# 
  2797  0F38                     	;# 
  2798  0F39                     	;# 
  2799  0F3A                     	;# 
  2800  0F3B                     	;# 
  2801  0F3C                     	;# 
  2802  0F3D                     	;# 
  2803  0F3E                     	;# 
  2804  0F3F                     	;# 
  2805  0F40                     	;# 
  2806  0F41                     	;# 
  2807  0F43                     	;# 
  2808  0F44                     	;# 
  2809  0F45                     	;# 
  2810  0F46                     	;# 
  2811  0F47                     	;# 
  2812  0F48                     	;# 
  2813  0F49                     	;# 
  2814  0F4A                     	;# 
  2815  0F4B                     	;# 
  2816  0F4C                     	;# 
  2817  0F4E                     	;# 
  2818  0F4F                     	;# 
  2819  0F50                     	;# 
  2820  0F51                     	;# 
  2821  0F52                     	;# 
  2822  0F53                     	;# 
  2823  0F54                     	;# 
  2824  0F55                     	;# 
  2825  0F56                     	;# 
  2826  0F57                     	;# 
  2827  0F59                     	;# 
  2828  0F5A                     	;# 
  2829  0F5B                     	;# 
  2830  0F5C                     	;# 
  2831  0F5D                     	;# 
  2832  0F61                     	;# 
  2833  0F62                     	;# 
  2834  0F64                     	;# 
  2835  0F65                     	;# 
  2836  0F66                     	;# 
  2837  0F67                     	;# 
  2838  0F68                     	;# 
  2839  0F69                     	;# 
  2840  0F6A                     	;# 
  2841  0F6B                     	;# 
  2842  0F6C                     	;# 
  2843  0F6D                     	;# 
  2844  0FE4                     	;# 
  2845  0FE5                     	;# 
  2846  0FE6                     	;# 
  2847  0FE7                     	;# 
  2848  0FE8                     	;# 
  2849  0FE9                     	;# 
  2850  0FEA                     	;# 
  2851  0FEB                     	;# 
  2852  0FED                     	;# 
  2853  0FEE                     	;# 
  2854  0FEF                     	;# 
  2855  0000                     	;# 
  2856  0001                     	;# 
  2857  0002                     	;# 
  2858  0003                     	;# 
  2859  0004                     	;# 
  2860  0005                     	;# 
  2861  0006                     	;# 
  2862  0007                     	;# 
  2863  0008                     	;# 
  2864  0009                     	;# 
  2865  000A                     	;# 
  2866  000B                     	;# 
  2867  000C                     	;# 
  2868  000D                     	;# 
  2869  000E                     	;# 
  2870  000F                     	;# 
  2871  0010                     	;# 
  2872  0011                     	;# 
  2873  0012                     	;# 
  2874  0013                     	;# 
  2875  0014                     	;# 
  2876  0015                     	;# 
  2877  0016                     	;# 
  2878  0017                     	;# 
  2879  0018                     	;# 
  2880  0019                     	;# 
  2881  001A                     	;# 
  2882  001C                     	;# 
  2883  001C                     	;# 
  2884  001D                     	;# 
  2885  001D                     	;# 
  2886  001E                     	;# 
  2887  001F                     	;# 
  2888  008C                     	;# 
  2889  008C                     	;# 
  2890  008D                     	;# 
  2891  008E                     	;# 
  2892  008E                     	;# 
  2893  008F                     	;# 
  2894  0090                     	;# 
  2895  0090                     	;# 
  2896  0091                     	;# 
  2897  0093                     	;# 
  2898  0094                     	;# 
  2899  0095                     	;# 
  2900  0096                     	;# 
  2901  0097                     	;# 
  2902  0098                     	;# 
  2903  0099                     	;# 
  2904  009A                     	;# 
  2905  009B                     	;# 
  2906  009C                     	;# 
  2907  009D                     	;# 
  2908  009E                     	;# 
  2909  010C                     	;# 
  2910  010D                     	;# 
  2911  010E                     	;# 
  2912  010E                     	;# 
  2913  010F                     	;# 
  2914  0110                     	;# 
  2915  0110                     	;# 
  2916  0111                     	;# 
  2917  0112                     	;# 
  2918  0112                     	;# 
  2919  0113                     	;# 
  2920  0114                     	;# 
  2921  0114                     	;# 
  2922  0115                     	;# 
  2923  0116                     	;# 
  2924  0116                     	;# 
  2925  0117                     	;# 
  2926  0119                     	;# 
  2927  0119                     	;# 
  2928  0119                     	;# 
  2929  011A                     	;# 
  2930  011A                     	;# 
  2931  011A                     	;# 
  2932  011B                     	;# 
  2933  011B                     	;# 
  2934  011B                     	;# 
  2935  011B                     	;# 
  2936  011B                     	;# 
  2937  011C                     	;# 
  2938  011C                     	;# 
  2939  011C                     	;# 
  2940  011D                     	;# 
  2941  011D                     	;# 
  2942  011D                     	;# 
  2943  011E                     	;# 
  2944  011E                     	;# 
  2945  011E                     	;# 
  2946  011F                     	;# 
  2947  011F                     	;# 
  2948  011F                     	;# 
  2949  011F                     	;# 
  2950  011F                     	;# 
  2951  018C                     	;# 
  2952  018D                     	;# 
  2953  018E                     	;# 
  2954  018F                     	;# 
  2955  0190                     	;# 
  2956  0191                     	;# 
  2957  0192                     	;# 
  2958  0196                     	;# 
  2959  0197                     	;# 
  2960  0198                     	;# 
  2961  0199                     	;# 
  2962  019A                     	;# 
  2963  019B                     	;# 
  2964  019C                     	;# 
  2965  020C                     	;# 
  2966  020C                     	;# 
  2967  020D                     	;# 
  2968  020E                     	;# 
  2969  020F                     	;# 
  2970  020F                     	;# 
  2971  0210                     	;# 
  2972  0210                     	;# 
  2973  0211                     	;# 
  2974  0211                     	;# 
  2975  0212                     	;# 
  2976  0212                     	;# 
  2977  0213                     	;# 
  2978  0214                     	;# 
  2979  0215                     	;# 
  2980  0215                     	;# 
  2981  0216                     	;# 
  2982  0216                     	;# 
  2983  0217                     	;# 
  2984  0217                     	;# 
  2985  0218                     	;# 
  2986  0218                     	;# 
  2987  0219                     	;# 
  2988  021A                     	;# 
  2989  021B                     	;# 
  2990  021B                     	;# 
  2991  021C                     	;# 
  2992  021C                     	;# 
  2993  021D                     	;# 
  2994  021D                     	;# 
  2995  021E                     	;# 
  2996  021F                     	;# 
  2997  028C                     	;# 
  2998  028C                     	;# 
  2999  028D                     	;# 
  3000  028D                     	;# 
  3001  028E                     	;# 
  3002  028F                     	;# 
  3003  0290                     	;# 
  3004  0290                     	;# 
  3005  0291                     	;# 
  3006  0292                     	;# 
  3007  0292                     	;# 
  3008  0293                     	;# 
  3009  0293                     	;# 
  3010  0294                     	;# 
  3011  0295                     	;# 
  3012  0296                     	;# 
  3013  0296                     	;# 
  3014  0297                     	;# 
  3015  0298                     	;# 
  3016  0298                     	;# 
  3017  0299                     	;# 
  3018  0299                     	;# 
  3019  029A                     	;# 
  3020  029B                     	;# 
  3021  029C                     	;# 
  3022  029C                     	;# 
  3023  029D                     	;# 
  3024  030C                     	;# 
  3025  030C                     	;# 
  3026  030D                     	;# 
  3027  030E                     	;# 
  3028  030F                     	;# 
  3029  0310                     	;# 
  3030  0310                     	;# 
  3031  0311                     	;# 
  3032  0312                     	;# 
  3033  0313                     	;# 
  3034  0314                     	;# 
  3035  0314                     	;# 
  3036  0315                     	;# 
  3037  0316                     	;# 
  3038  0317                     	;# 
  3039  0318                     	;# 
  3040  0318                     	;# 
  3041  0319                     	;# 
  3042  031A                     	;# 
  3043  031B                     	;# 
  3044  031C                     	;# 
  3045  031C                     	;# 
  3046  031D                     	;# 
  3047  031E                     	;# 
  3048  031F                     	;# 
  3049  038C                     	;# 
  3050  038C                     	;# 
  3051  038D                     	;# 
  3052  038E                     	;# 
  3053  0390                     	;# 
  3054  0390                     	;# 
  3055  0391                     	;# 
  3056  0392                     	;# 
  3057  040C                     	;# 
  3058  040D                     	;# 
  3059  040E                     	;# 
  3060  040F                     	;# 
  3061  0410                     	;# 
  3062  0411                     	;# 
  3063  0416                     	;# 
  3064  0416                     	;# 
  3065  0417                     	;# 
  3066  0418                     	;# 
  3067  0418                     	;# 
  3068  0419                     	;# 
  3069  041A                     	;# 
  3070  041A                     	;# 
  3071  041B                     	;# 
  3072  041C                     	;# 
  3073  041C                     	;# 
  3074  041D                     	;# 
  3075  041E                     	;# 
  3076  041F                     	;# 
  3077  048C                     	;# 
  3078  048C                     	;# 
  3079  048D                     	;# 
  3080  048E                     	;# 
  3081  048F                     	;# 
  3082  048F                     	;# 
  3083  0490                     	;# 
  3084  0491                     	;# 
  3085  0492                     	;# 
  3086  0492                     	;# 
  3087  0493                     	;# 
  3088  0494                     	;# 
  3089  0495                     	;# 
  3090  0495                     	;# 
  3091  0496                     	;# 
  3092  0497                     	;# 
  3093  0498                     	;# 
  3094  0499                     	;# 
  3095  049A                     	;# 
  3096  049B                     	;# 
  3097  049C                     	;# 
  3098  049D                     	;# 
  3099  050C                     	;# 
  3100  050C                     	;# 
  3101  050D                     	;# 
  3102  050E                     	;# 
  3103  050F                     	;# 
  3104  050F                     	;# 
  3105  0510                     	;# 
  3106  0511                     	;# 
  3107  0512                     	;# 
  3108  0512                     	;# 
  3109  0513                     	;# 
  3110  0514                     	;# 
  3111  0515                     	;# 
  3112  0515                     	;# 
  3113  0516                     	;# 
  3114  0517                     	;# 
  3115  0518                     	;# 
  3116  0519                     	;# 
  3117  051A                     	;# 
  3118  051B                     	;# 
  3119  051C                     	;# 
  3120  051D                     	;# 
  3121  058C                     	;# 
  3122  058C                     	;# 
  3123  058D                     	;# 
  3124  058E                     	;# 
  3125  058F                     	;# 
  3126  058F                     	;# 
  3127  0590                     	;# 
  3128  0591                     	;# 
  3129  0592                     	;# 
  3130  0593                     	;# 
  3131  060C                     	;# 
  3132  060D                     	;# 
  3133  060E                     	;# 
  3134  060F                     	;# 
  3135  0610                     	;# 
  3136  0611                     	;# 
  3137  0612                     	;# 
  3138  0613                     	;# 
  3139  0614                     	;# 
  3140  0616                     	;# 
  3141  0617                     	;# 
  3142  0618                     	;# 
  3143  0619                     	;# 
  3144  061A                     	;# 
  3145  061B                     	;# 
  3146  061C                     	;# 
  3147  061D                     	;# 
  3148  061E                     	;# 
  3149  068C                     	;# 
  3150  068D                     	;# 
  3151  068E                     	;# 
  3152  068F                     	;# 
  3153  0690                     	;# 
  3154  0691                     	;# 
  3155  0692                     	;# 
  3156  0693                     	;# 
  3157  0694                     	;# 
  3158  070C                     	;# 
  3159  070D                     	;# 
  3160  070E                     	;# 
  3161  070F                     	;# 
  3162  0710                     	;# 
  3163  0711                     	;# 
  3164  0712                     	;# 
  3165  0713                     	;# 
  3166  0714                     	;# 
  3167  0716                     	;# 
  3168  0717                     	;# 
  3169  0718                     	;# 
  3170  0719                     	;# 
  3171  071A                     	;# 
  3172  071B                     	;# 
  3173  071C                     	;# 
  3174  071D                     	;# 
  3175  071E                     	;# 
  3176  0796                     	;# 
  3177  0797                     	;# 
  3178  0798                     	;# 
  3179  0799                     	;# 
  3180  079A                     	;# 
  3181  079B                     	;# 
  3182  080C                     	;# 
  3183  080D                     	;# 
  3184  080E                     	;# 
  3185  080F                     	;# 
  3186  0810                     	;# 
  3187  0811                     	;# 
  3188  0812                     	;# 
  3189  0813                     	;# 
  3190  0814                     	;# 
  3191  081A                     	;# 
  3192  081B                     	;# 
  3193  081C                     	;# 
  3194  081D                     	;# 
  3195  081E                     	;# 
  3196  081F                     	;# 
  3197  088C                     	;# 
  3198  088D                     	;# 
  3199  088E                     	;# 
  3200  088F                     	;# 
  3201  0890                     	;# 
  3202  0891                     	;# 
  3203  0892                     	;# 
  3204  0893                     	;# 
  3205  0895                     	;# 
  3206  0896                     	;# 
  3207  0897                     	;# 
  3208  0898                     	;# 
  3209  0899                     	;# 
  3210  089A                     	;# 
  3211  089B                     	;# 
  3212  090C                     	;# 
  3213  090E                     	;# 
  3214  090F                     	;# 
  3215  091F                     	;# 
  3216  091F                     	;# 
  3217  098F                     	;# 
  3218  098F                     	;# 
  3219  0990                     	;# 
  3220  0991                     	;# 
  3221  0992                     	;# 
  3222  0993                     	;# 
  3223  0994                     	;# 
  3224  0995                     	;# 
  3225  0996                     	;# 
  3226  0997                     	;# 
  3227  0E0F                     	;# 
  3228  0E10                     	;# 
  3229  0E11                     	;# 
  3230  0E12                     	;# 
  3231  0E13                     	;# 
  3232  0E14                     	;# 
  3233  0E15                     	;# 
  3234  0E16                     	;# 
  3235  0E17                     	;# 
  3236  0E18                     	;# 
  3237  0E19                     	;# 
  3238  0E1A                     	;# 
  3239  0E1B                     	;# 
  3240  0E1C                     	;# 
  3241  0E1D                     	;# 
  3242  0E1E                     	;# 
  3243  0E1F                     	;# 
  3244  0E20                     	;# 
  3245  0E21                     	;# 
  3246  0E22                     	;# 
  3247  0E23                     	;# 
  3248  0E24                     	;# 
  3249  0E25                     	;# 
  3250  0E26                     	;# 
  3251  0E27                     	;# 
  3252  0E28                     	;# 
  3253  0E29                     	;# 
  3254  0E2A                     	;# 
  3255  0E2B                     	;# 
  3256  0E2C                     	;# 
  3257  0E2D                     	;# 
  3258  0E2E                     	;# 
  3259  0E2F                     	;# 
  3260  0E30                     	;# 
  3261  0E31                     	;# 
  3262  0E32                     	;# 
  3263  0E33                     	;# 
  3264  0E34                     	;# 
  3265  0E35                     	;# 
  3266  0E36                     	;# 
  3267  0E37                     	;# 
  3268  0E8F                     	;# 
  3269  0E90                     	;# 
  3270  0E91                     	;# 
  3271  0E92                     	;# 
  3272  0E93                     	;# 
  3273  0E94                     	;# 
  3274  0E95                     	;# 
  3275  0E96                     	;# 
  3276  0E97                     	;# 
  3277  0E9C                     	;# 
  3278  0E9D                     	;# 
  3279  0E9E                     	;# 
  3280  0EA1                     	;# 
  3281  0EA2                     	;# 
  3282  0EA3                     	;# 
  3283  0EA4                     	;# 
  3284  0EA5                     	;# 
  3285  0EA9                     	;# 
  3286  0EAA                     	;# 
  3287  0EAB                     	;# 
  3288  0EAC                     	;# 
  3289  0EB1                     	;# 
  3290  0EB2                     	;# 
  3291  0EB3                     	;# 
  3292  0EB8                     	;# 
  3293  0EB9                     	;# 
  3294  0EBA                     	;# 
  3295  0EBB                     	;# 
  3296  0EBC                     	;# 
  3297  0EBD                     	;# 
  3298  0EBE                     	;# 
  3299  0EC3                     	;# 
  3300  0EC5                     	;# 
  3301  0EC6                     	;# 
  3302  0EC7                     	;# 
  3303  0EC8                     	;# 
  3304  0EC9                     	;# 
  3305  0ECA                     	;# 
  3306  0ECB                     	;# 
  3307  0ECC                     	;# 
  3308  0F10                     	;# 
  3309  0F11                     	;# 
  3310  0F12                     	;# 
  3311  0F13                     	;# 
  3312  0F14                     	;# 
  3313  0F15                     	;# 
  3314  0F16                     	;# 
  3315  0F17                     	;# 
  3316  0F18                     	;# 
  3317  0F19                     	;# 
  3318  0F1A                     	;# 
  3319  0F1B                     	;# 
  3320  0F1C                     	;# 
  3321  0F1D                     	;# 
  3322  0F1E                     	;# 
  3323  0F1F                     	;# 
  3324  0F20                     	;# 
  3325  0F21                     	;# 
  3326  0F22                     	;# 
  3327  0F23                     	;# 
  3328  0F24                     	;# 
  3329  0F25                     	;# 
  3330  0F26                     	;# 
  3331  0F27                     	;# 
  3332  0F28                     	;# 
  3333  0F29                     	;# 
  3334  0F2A                     	;# 
  3335  0F2B                     	;# 
  3336  0F2C                     	;# 
  3337  0F2D                     	;# 
  3338  0F2E                     	;# 
  3339  0F2F                     	;# 
  3340  0F30                     	;# 
  3341  0F31                     	;# 
  3342  0F32                     	;# 
  3343  0F38                     	;# 
  3344  0F39                     	;# 
  3345  0F3A                     	;# 
  3346  0F3B                     	;# 
  3347  0F3C                     	;# 
  3348  0F3D                     	;# 
  3349  0F3E                     	;# 
  3350  0F3F                     	;# 
  3351  0F40                     	;# 
  3352  0F41                     	;# 
  3353  0F43                     	;# 
  3354  0F44                     	;# 
  3355  0F45                     	;# 
  3356  0F46                     	;# 
  3357  0F47                     	;# 
  3358  0F48                     	;# 
  3359  0F49                     	;# 
  3360  0F4A                     	;# 
  3361  0F4B                     	;# 
  3362  0F4C                     	;# 
  3363  0F4E                     	;# 
  3364  0F4F                     	;# 
  3365  0F50                     	;# 
  3366  0F51                     	;# 
  3367  0F52                     	;# 
  3368  0F53                     	;# 
  3369  0F54                     	;# 
  3370  0F55                     	;# 
  3371  0F56                     	;# 
  3372  0F57                     	;# 
  3373  0F59                     	;# 
  3374  0F5A                     	;# 
  3375  0F5B                     	;# 
  3376  0F5C                     	;# 
  3377  0F5D                     	;# 
  3378  0F61                     	;# 
  3379  0F62                     	;# 
  3380  0F64                     	;# 
  3381  0F65                     	;# 
  3382  0F66                     	;# 
  3383  0F67                     	;# 
  3384  0F68                     	;# 
  3385  0F69                     	;# 
  3386  0F6A                     	;# 
  3387  0F6B                     	;# 
  3388  0F6C                     	;# 
  3389  0F6D                     	;# 
  3390  0FE4                     	;# 
  3391  0FE5                     	;# 
  3392  0FE6                     	;# 
  3393  0FE7                     	;# 
  3394  0FE8                     	;# 
  3395  0FE9                     	;# 
  3396  0FEA                     	;# 
  3397  0FEB                     	;# 
  3398  0FED                     	;# 
  3399  0FEE                     	;# 
  3400  0FEF                     	;# 
  3401  0000                     	;# 
  3402  0001                     	;# 
  3403  0002                     	;# 
  3404  0003                     	;# 
  3405  0004                     	;# 
  3406  0005                     	;# 
  3407  0006                     	;# 
  3408  0007                     	;# 
  3409  0008                     	;# 
  3410  0009                     	;# 
  3411  000A                     	;# 
  3412  000B                     	;# 
  3413  000C                     	;# 
  3414  000D                     	;# 
  3415  000E                     	;# 
  3416  000F                     	;# 
  3417  0010                     	;# 
  3418  0011                     	;# 
  3419  0012                     	;# 
  3420  0013                     	;# 
  3421  0014                     	;# 
  3422  0015                     	;# 
  3423  0016                     	;# 
  3424  0017                     	;# 
  3425  0018                     	;# 
  3426  0019                     	;# 
  3427  001A                     	;# 
  3428  001C                     	;# 
  3429  001C                     	;# 
  3430  001D                     	;# 
  3431  001D                     	;# 
  3432  001E                     	;# 
  3433  001F                     	;# 
  3434  008C                     	;# 
  3435  008C                     	;# 
  3436  008D                     	;# 
  3437  008E                     	;# 
  3438  008E                     	;# 
  3439  008F                     	;# 
  3440  0090                     	;# 
  3441  0090                     	;# 
  3442  0091                     	;# 
  3443  0093                     	;# 
  3444  0094                     	;# 
  3445  0095                     	;# 
  3446  0096                     	;# 
  3447  0097                     	;# 
  3448  0098                     	;# 
  3449  0099                     	;# 
  3450  009A                     	;# 
  3451  009B                     	;# 
  3452  009C                     	;# 
  3453  009D                     	;# 
  3454  009E                     	;# 
  3455  010C                     	;# 
  3456  010D                     	;# 
  3457  010E                     	;# 
  3458  010E                     	;# 
  3459  010F                     	;# 
  3460  0110                     	;# 
  3461  0110                     	;# 
  3462  0111                     	;# 
  3463  0112                     	;# 
  3464  0112                     	;# 
  3465  0113                     	;# 
  3466  0114                     	;# 
  3467  0114                     	;# 
  3468  0115                     	;# 
  3469  0116                     	;# 
  3470  0116                     	;# 
  3471  0117                     	;# 
  3472  0119                     	;# 
  3473  0119                     	;# 
  3474  0119                     	;# 
  3475  011A                     	;# 
  3476  011A                     	;# 
  3477  011A                     	;# 
  3478  011B                     	;# 
  3479  011B                     	;# 
  3480  011B                     	;# 
  3481  011B                     	;# 
  3482  011B                     	;# 
  3483  011C                     	;# 
  3484  011C                     	;# 
  3485  011C                     	;# 
  3486  011D                     	;# 
  3487  011D                     	;# 
  3488  011D                     	;# 
  3489  011E                     	;# 
  3490  011E                     	;# 
  3491  011E                     	;# 
  3492  011F                     	;# 
  3493  011F                     	;# 
  3494  011F                     	;# 
  3495  011F                     	;# 
  3496  011F                     	;# 
  3497  018C                     	;# 
  3498  018D                     	;# 
  3499  018E                     	;# 
  3500  018F                     	;# 
  3501  0190                     	;# 
  3502  0191                     	;# 
  3503  0192                     	;# 
  3504  0196                     	;# 
  3505  0197                     	;# 
  3506  0198                     	;# 
  3507  0199                     	;# 
  3508  019A                     	;# 
  3509  019B                     	;# 
  3510  019C                     	;# 
  3511  020C                     	;# 
  3512  020C                     	;# 
  3513  020D                     	;# 
  3514  020E                     	;# 
  3515  020F                     	;# 
  3516  020F                     	;# 
  3517  0210                     	;# 
  3518  0210                     	;# 
  3519  0211                     	;# 
  3520  0211                     	;# 
  3521  0212                     	;# 
  3522  0212                     	;# 
  3523  0213                     	;# 
  3524  0214                     	;# 
  3525  0215                     	;# 
  3526  0215                     	;# 
  3527  0216                     	;# 
  3528  0216                     	;# 
  3529  0217                     	;# 
  3530  0217                     	;# 
  3531  0218                     	;# 
  3532  0218                     	;# 
  3533  0219                     	;# 
  3534  021A                     	;# 
  3535  021B                     	;# 
  3536  021B                     	;# 
  3537  021C                     	;# 
  3538  021C                     	;# 
  3539  021D                     	;# 
  3540  021D                     	;# 
  3541  021E                     	;# 
  3542  021F                     	;# 
  3543  028C                     	;# 
  3544  028C                     	;# 
  3545  028D                     	;# 
  3546  028D                     	;# 
  3547  028E                     	;# 
  3548  028F                     	;# 
  3549  0290                     	;# 
  3550  0290                     	;# 
  3551  0291                     	;# 
  3552  0292                     	;# 
  3553  0292                     	;# 
  3554  0293                     	;# 
  3555  0293                     	;# 
  3556  0294                     	;# 
  3557  0295                     	;# 
  3558  0296                     	;# 
  3559  0296                     	;# 
  3560  0297                     	;# 
  3561  0298                     	;# 
  3562  0298                     	;# 
  3563  0299                     	;# 
  3564  0299                     	;# 
  3565  029A                     	;# 
  3566  029B                     	;# 
  3567  029C                     	;# 
  3568  029C                     	;# 
  3569  029D                     	;# 
  3570  030C                     	;# 
  3571  030C                     	;# 
  3572  030D                     	;# 
  3573  030E                     	;# 
  3574  030F                     	;# 
  3575  0310                     	;# 
  3576  0310                     	;# 
  3577  0311                     	;# 
  3578  0312                     	;# 
  3579  0313                     	;# 
  3580  0314                     	;# 
  3581  0314                     	;# 
  3582  0315                     	;# 
  3583  0316                     	;# 
  3584  0317                     	;# 
  3585  0318                     	;# 
  3586  0318                     	;# 
  3587  0319                     	;# 
  3588  031A                     	;# 
  3589  031B                     	;# 
  3590  031C                     	;# 
  3591  031C                     	;# 
  3592  031D                     	;# 
  3593  031E                     	;# 
  3594  031F                     	;# 
  3595  038C                     	;# 
  3596  038C                     	;# 
  3597  038D                     	;# 
  3598  038E                     	;# 
  3599  0390                     	;# 
  3600  0390                     	;# 
  3601  0391                     	;# 
  3602  0392                     	;# 
  3603  040C                     	;# 
  3604  040D                     	;# 
  3605  040E                     	;# 
  3606  040F                     	;# 
  3607  0410                     	;# 
  3608  0411                     	;# 
  3609  0416                     	;# 
  3610  0416                     	;# 
  3611  0417                     	;# 
  3612  0418                     	;# 
  3613  0418                     	;# 
  3614  0419                     	;# 
  3615  041A                     	;# 
  3616  041A                     	;# 
  3617  041B                     	;# 
  3618  041C                     	;# 
  3619  041C                     	;# 
  3620  041D                     	;# 
  3621  041E                     	;# 
  3622  041F                     	;# 
  3623  048C                     	;# 
  3624  048C                     	;# 
  3625  048D                     	;# 
  3626  048E                     	;# 
  3627  048F                     	;# 
  3628  048F                     	;# 
  3629  0490                     	;# 
  3630  0491                     	;# 
  3631  0492                     	;# 
  3632  0492                     	;# 
  3633  0493                     	;# 
  3634  0494                     	;# 
  3635  0495                     	;# 
  3636  0495                     	;# 
  3637  0496                     	;# 
  3638  0497                     	;# 
  3639  0498                     	;# 
  3640  0499                     	;# 
  3641  049A                     	;# 
  3642  049B                     	;# 
  3643  049C                     	;# 
  3644  049D                     	;# 
  3645  050C                     	;# 
  3646  050C                     	;# 
  3647  050D                     	;# 
  3648  050E                     	;# 
  3649  050F                     	;# 
  3650  050F                     	;# 
  3651  0510                     	;# 
  3652  0511                     	;# 
  3653  0512                     	;# 
  3654  0512                     	;# 
  3655  0513                     	;# 
  3656  0514                     	;# 
  3657  0515                     	;# 
  3658  0515                     	;# 
  3659  0516                     	;# 
  3660  0517                     	;# 
  3661  0518                     	;# 
  3662  0519                     	;# 
  3663  051A                     	;# 
  3664  051B                     	;# 
  3665  051C                     	;# 
  3666  051D                     	;# 
  3667  058C                     	;# 
  3668  058C                     	;# 
  3669  058D                     	;# 
  3670  058E                     	;# 
  3671  058F                     	;# 
  3672  058F                     	;# 
  3673  0590                     	;# 
  3674  0591                     	;# 
  3675  0592                     	;# 
  3676  0593                     	;# 
  3677  060C                     	;# 
  3678  060D                     	;# 
  3679  060E                     	;# 
  3680  060F                     	;# 
  3681  0610                     	;# 
  3682  0611                     	;# 
  3683  0612                     	;# 
  3684  0613                     	;# 
  3685  0614                     	;# 
  3686  0616                     	;# 
  3687  0617                     	;# 
  3688  0618                     	;# 
  3689  0619                     	;# 
  3690  061A                     	;# 
  3691  061B                     	;# 
  3692  061C                     	;# 
  3693  061D                     	;# 
  3694  061E                     	;# 
  3695  068C                     	;# 
  3696  068D                     	;# 
  3697  068E                     	;# 
  3698  068F                     	;# 
  3699  0690                     	;# 
  3700  0691                     	;# 
  3701  0692                     	;# 
  3702  0693                     	;# 
  3703  0694                     	;# 
  3704  070C                     	;# 
  3705  070D                     	;# 
  3706  070E                     	;# 
  3707  070F                     	;# 
  3708  0710                     	;# 
  3709  0711                     	;# 
  3710  0712                     	;# 
  3711  0713                     	;# 
  3712  0714                     	;# 
  3713  0716                     	;# 
  3714  0717                     	;# 
  3715  0718                     	;# 
  3716  0719                     	;# 
  3717  071A                     	;# 
  3718  071B                     	;# 
  3719  071C                     	;# 
  3720  071D                     	;# 
  3721  071E                     	;# 
  3722  0796                     	;# 
  3723  0797                     	;# 
  3724  0798                     	;# 
  3725  0799                     	;# 
  3726  079A                     	;# 
  3727  079B                     	;# 
  3728  080C                     	;# 
  3729  080D                     	;# 
  3730  080E                     	;# 
  3731  080F                     	;# 
  3732  0810                     	;# 
  3733  0811                     	;# 
  3734  0812                     	;# 
  3735  0813                     	;# 
  3736  0814                     	;# 
  3737  081A                     	;# 
  3738  081B                     	;# 
  3739  081C                     	;# 
  3740  081D                     	;# 
  3741  081E                     	;# 
  3742  081F                     	;# 
  3743  088C                     	;# 
  3744  088D                     	;# 
  3745  088E                     	;# 
  3746  088F                     	;# 
  3747  0890                     	;# 
  3748  0891                     	;# 
  3749  0892                     	;# 
  3750  0893                     	;# 
  3751  0895                     	;# 
  3752  0896                     	;# 
  3753  0897                     	;# 
  3754  0898                     	;# 
  3755  0899                     	;# 
  3756  089A                     	;# 
  3757  089B                     	;# 
  3758  090C                     	;# 
  3759  090E                     	;# 
  3760  090F                     	;# 
  3761  091F                     	;# 
  3762  091F                     	;# 
  3763  098F                     	;# 
  3764  098F                     	;# 
  3765  0990                     	;# 
  3766  0991                     	;# 
  3767  0992                     	;# 
  3768  0993                     	;# 
  3769  0994                     	;# 
  3770  0995                     	;# 
  3771  0996                     	;# 
  3772  0997                     	;# 
  3773  0E0F                     	;# 
  3774  0E10                     	;# 
  3775  0E11                     	;# 
  3776  0E12                     	;# 
  3777  0E13                     	;# 
  3778  0E14                     	;# 
  3779  0E15                     	;# 
  3780  0E16                     	;# 
  3781  0E17                     	;# 
  3782  0E18                     	;# 
  3783  0E19                     	;# 
  3784  0E1A                     	;# 
  3785  0E1B                     	;# 
  3786  0E1C                     	;# 
  3787  0E1D                     	;# 
  3788  0E1E                     	;# 
  3789  0E1F                     	;# 
  3790  0E20                     	;# 
  3791  0E21                     	;# 
  3792  0E22                     	;# 
  3793  0E23                     	;# 
  3794  0E24                     	;# 
  3795  0E25                     	;# 
  3796  0E26                     	;# 
  3797  0E27                     	;# 
  3798  0E28                     	;# 
  3799  0E29                     	;# 
  3800  0E2A                     	;# 
  3801  0E2B                     	;# 
  3802  0E2C                     	;# 
  3803  0E2D                     	;# 
  3804  0E2E                     	;# 
  3805  0E2F                     	;# 
  3806  0E30                     	;# 
  3807  0E31                     	;# 
  3808  0E32                     	;# 
  3809  0E33                     	;# 
  3810  0E34                     	;# 
  3811  0E35                     	;# 
  3812  0E36                     	;# 
  3813  0E37                     	;# 
  3814  0E8F                     	;# 
  3815  0E90                     	;# 
  3816  0E91                     	;# 
  3817  0E92                     	;# 
  3818  0E93                     	;# 
  3819  0E94                     	;# 
  3820  0E95                     	;# 
  3821  0E96                     	;# 
  3822  0E97                     	;# 
  3823  0E9C                     	;# 
  3824  0E9D                     	;# 
  3825  0E9E                     	;# 
  3826  0EA1                     	;# 
  3827  0EA2                     	;# 
  3828  0EA3                     	;# 
  3829  0EA4                     	;# 
  3830  0EA5                     	;# 
  3831  0EA9                     	;# 
  3832  0EAA                     	;# 
  3833  0EAB                     	;# 
  3834  0EAC                     	;# 
  3835  0EB1                     	;# 
  3836  0EB2                     	;# 
  3837  0EB3                     	;# 
  3838  0EB8                     	;# 
  3839  0EB9                     	;# 
  3840  0EBA                     	;# 
  3841  0EBB                     	;# 
  3842  0EBC                     	;# 
  3843  0EBD                     	;# 
  3844  0EBE                     	;# 
  3845  0EC3                     	;# 
  3846  0EC5                     	;# 
  3847  0EC6                     	;# 
  3848  0EC7                     	;# 
  3849  0EC8                     	;# 
  3850  0EC9                     	;# 
  3851  0ECA                     	;# 
  3852  0ECB                     	;# 
  3853  0ECC                     	;# 
  3854  0F10                     	;# 
  3855  0F11                     	;# 
  3856  0F12                     	;# 
  3857  0F13                     	;# 
  3858  0F14                     	;# 
  3859  0F15                     	;# 
  3860  0F16                     	;# 
  3861  0F17                     	;# 
  3862  0F18                     	;# 
  3863  0F19                     	;# 
  3864  0F1A                     	;# 
  3865  0F1B                     	;# 
  3866  0F1C                     	;# 
  3867  0F1D                     	;# 
  3868  0F1E                     	;# 
  3869  0F1F                     	;# 
  3870  0F20                     	;# 
  3871  0F21                     	;# 
  3872  0F22                     	;# 
  3873  0F23                     	;# 
  3874  0F24                     	;# 
  3875  0F25                     	;# 
  3876  0F26                     	;# 
  3877  0F27                     	;# 
  3878  0F28                     	;# 
  3879  0F29                     	;# 
  3880  0F2A                     	;# 
  3881  0F2B                     	;# 
  3882  0F2C                     	;# 
  3883  0F2D                     	;# 
  3884  0F2E                     	;# 
  3885  0F2F                     	;# 
  3886  0F30                     	;# 
  3887  0F31                     	;# 
  3888  0F32                     	;# 
  3889  0F38                     	;# 
  3890  0F39                     	;# 
  3891  0F3A                     	;# 
  3892  0F3B                     	;# 
  3893  0F3C                     	;# 
  3894  0F3D                     	;# 
  3895  0F3E                     	;# 
  3896  0F3F                     	;# 
  3897  0F40                     	;# 
  3898  0F41                     	;# 
  3899  0F43                     	;# 
  3900  0F44                     	;# 
  3901  0F45                     	;# 
  3902  0F46                     	;# 
  3903  0F47                     	;# 
  3904  0F48                     	;# 
  3905  0F49                     	;# 
  3906  0F4A                     	;# 
  3907  0F4B                     	;# 
  3908  0F4C                     	;# 
  3909  0F4E                     	;# 
  3910  0F4F                     	;# 
  3911  0F50                     	;# 
  3912  0F51                     	;# 
  3913  0F52                     	;# 
  3914  0F53                     	;# 
  3915  0F54                     	;# 
  3916  0F55                     	;# 
  3917  0F56                     	;# 
  3918  0F57                     	;# 
  3919  0F59                     	;# 
  3920  0F5A                     	;# 
  3921  0F5B                     	;# 
  3922  0F5C                     	;# 
  3923  0F5D                     	;# 
  3924  0F61                     	;# 
  3925  0F62                     	;# 
  3926  0F64                     	;# 
  3927  0F65                     	;# 
  3928  0F66                     	;# 
  3929  0F67                     	;# 
  3930  0F68                     	;# 
  3931  0F69                     	;# 
  3932  0F6A                     	;# 
  3933  0F6B                     	;# 
  3934  0F6C                     	;# 
  3935  0F6D                     	;# 
  3936  0FE4                     	;# 
  3937  0FE5                     	;# 
  3938  0FE6                     	;# 
  3939  0FE7                     	;# 
  3940  0FE8                     	;# 
  3941  0FE9                     	;# 
  3942  0FEA                     	;# 
  3943  0FEB                     	;# 
  3944  0FED                     	;# 
  3945  0FEE                     	;# 
  3946  0FEF                     	;# 
  3947  0000                     	;# 
  3948  0001                     	;# 
  3949  0002                     	;# 
  3950  0003                     	;# 
  3951  0004                     	;# 
  3952  0005                     	;# 
  3953  0006                     	;# 
  3954  0007                     	;# 
  3955  0008                     	;# 
  3956  0009                     	;# 
  3957  000A                     	;# 
  3958  000B                     	;# 
  3959  000C                     	;# 
  3960  000D                     	;# 
  3961  000E                     	;# 
  3962  000F                     	;# 
  3963  0010                     	;# 
  3964  0011                     	;# 
  3965  0012                     	;# 
  3966  0013                     	;# 
  3967  0014                     	;# 
  3968  0015                     	;# 
  3969  0016                     	;# 
  3970  0017                     	;# 
  3971  0018                     	;# 
  3972  0019                     	;# 
  3973  001A                     	;# 
  3974  001C                     	;# 
  3975  001C                     	;# 
  3976  001D                     	;# 
  3977  001D                     	;# 
  3978  001E                     	;# 
  3979  001F                     	;# 
  3980  008C                     	;# 
  3981  008C                     	;# 
  3982  008D                     	;# 
  3983  008E                     	;# 
  3984  008E                     	;# 
  3985  008F                     	;# 
  3986  0090                     	;# 
  3987  0090                     	;# 
  3988  0091                     	;# 
  3989  0093                     	;# 
  3990  0094                     	;# 
  3991  0095                     	;# 
  3992  0096                     	;# 
  3993  0097                     	;# 
  3994  0098                     	;# 
  3995  0099                     	;# 
  3996  009A                     	;# 
  3997  009B                     	;# 
  3998  009C                     	;# 
  3999  009D                     	;# 
  4000  009E                     	;# 
  4001  010C                     	;# 
  4002  010D                     	;# 
  4003  010E                     	;# 
  4004  010E                     	;# 
  4005  010F                     	;# 
  4006  0110                     	;# 
  4007  0110                     	;# 
  4008  0111                     	;# 
  4009  0112                     	;# 
  4010  0112                     	;# 
  4011  0113                     	;# 
  4012  0114                     	;# 
  4013  0114                     	;# 
  4014  0115                     	;# 
  4015  0116                     	;# 
  4016  0116                     	;# 
  4017  0117                     	;# 
  4018  0119                     	;# 
  4019  0119                     	;# 
  4020  0119                     	;# 
  4021  011A                     	;# 
  4022  011A                     	;# 
  4023  011A                     	;# 
  4024  011B                     	;# 
  4025  011B                     	;# 
  4026  011B                     	;# 
  4027  011B                     	;# 
  4028  011B                     	;# 
  4029  011C                     	;# 
  4030  011C                     	;# 
  4031  011C                     	;# 
  4032  011D                     	;# 
  4033  011D                     	;# 
  4034  011D                     	;# 
  4035  011E                     	;# 
  4036  011E                     	;# 
  4037  011E                     	;# 
  4038  011F                     	;# 
  4039  011F                     	;# 
  4040  011F                     	;# 
  4041  011F                     	;# 
  4042  011F                     	;# 
  4043  018C                     	;# 
  4044  018D                     	;# 
  4045  018E                     	;# 
  4046  018F                     	;# 
  4047  0190                     	;# 
  4048  0191                     	;# 
  4049  0192                     	;# 
  4050  0196                     	;# 
  4051  0197                     	;# 
  4052  0198                     	;# 
  4053  0199                     	;# 
  4054  019A                     	;# 
  4055  019B                     	;# 
  4056  019C                     	;# 
  4057  020C                     	;# 
  4058  020C                     	;# 
  4059  020D                     	;# 
  4060  020E                     	;# 
  4061  020F                     	;# 
  4062  020F                     	;# 
  4063  0210                     	;# 
  4064  0210                     	;# 
  4065  0211                     	;# 
  4066  0211                     	;# 
  4067  0212                     	;# 
  4068  0212                     	;# 
  4069  0213                     	;# 
  4070  0214                     	;# 
  4071  0215                     	;# 
  4072  0215                     	;# 
  4073  0216                     	;# 
  4074  0216                     	;# 
  4075  0217                     	;# 
  4076  0217                     	;# 
  4077  0218                     	;# 
  4078  0218                     	;# 
  4079  0219                     	;# 
  4080  021A                     	;# 
  4081  021B                     	;# 
  4082  021B                     	;# 
  4083  021C                     	;# 
  4084  021C                     	;# 
  4085  021D                     	;# 
  4086  021D                     	;# 
  4087  021E                     	;# 
  4088  021F                     	;# 
  4089  028C                     	;# 
  4090  028C                     	;# 
  4091  028D                     	;# 
  4092  028D                     	;# 
  4093  028E                     	;# 
  4094  028F                     	;# 
  4095  0290                     	;# 
  4096  0290                     	;# 
  4097  0291                     	;# 
  4098  0292                     	;# 
  4099  0292                     	;# 
  4100  0293                     	;# 
  4101  0293                     	;# 
  4102  0294                     	;# 
  4103  0295                     	;# 
  4104  0296                     	;# 
  4105  0296                     	;# 
  4106  0297                     	;# 
  4107  0298                     	;# 
  4108  0298                     	;# 
  4109  0299                     	;# 
  4110  0299                     	;# 
  4111  029A                     	;# 
  4112  029B                     	;# 
  4113  029C                     	;# 
  4114  029C                     	;# 
  4115  029D                     	;# 
  4116  030C                     	;# 
  4117  030C                     	;# 
  4118  030D                     	;# 
  4119  030E                     	;# 
  4120  030F                     	;# 
  4121  0310                     	;# 
  4122  0310                     	;# 
  4123  0311                     	;# 
  4124  0312                     	;# 
  4125  0313                     	;# 
  4126  0314                     	;# 
  4127  0314                     	;# 
  4128  0315                     	;# 
  4129  0316                     	;# 
  4130  0317                     	;# 
  4131  0318                     	;# 
  4132  0318                     	;# 
  4133  0319                     	;# 
  4134  031A                     	;# 
  4135  031B                     	;# 
  4136  031C                     	;# 
  4137  031C                     	;# 
  4138  031D                     	;# 
  4139  031E                     	;# 
  4140  031F                     	;# 
  4141  038C                     	;# 
  4142  038C                     	;# 
  4143  038D                     	;# 
  4144  038E                     	;# 
  4145  0390                     	;# 
  4146  0390                     	;# 
  4147  0391                     	;# 
  4148  0392                     	;# 
  4149  040C                     	;# 
  4150  040D                     	;# 
  4151  040E                     	;# 
  4152  040F                     	;# 
  4153  0410                     	;# 
  4154  0411                     	;# 
  4155  0416                     	;# 
  4156  0416                     	;# 
  4157  0417                     	;# 
  4158  0418                     	;# 
  4159  0418                     	;# 
  4160  0419                     	;# 
  4161  041A                     	;# 
  4162  041A                     	;# 
  4163  041B                     	;# 
  4164  041C                     	;# 
  4165  041C                     	;# 
  4166  041D                     	;# 
  4167  041E                     	;# 
  4168  041F                     	;# 
  4169  048C                     	;# 
  4170  048C                     	;# 
  4171  048D                     	;# 
  4172  048E                     	;# 
  4173  048F                     	;# 
  4174  048F                     	;# 
  4175  0490                     	;# 
  4176  0491                     	;# 
  4177  0492                     	;# 
  4178  0492                     	;# 
  4179  0493                     	;# 
  4180  0494                     	;# 
  4181  0495                     	;# 
  4182  0495                     	;# 
  4183  0496                     	;# 
  4184  0497                     	;# 
  4185  0498                     	;# 
  4186  0499                     	;# 
  4187  049A                     	;# 
  4188  049B                     	;# 
  4189  049C                     	;# 
  4190  049D                     	;# 
  4191  050C                     	;# 
  4192  050C                     	;# 
  4193  050D                     	;# 
  4194  050E                     	;# 
  4195  050F                     	;# 
  4196  050F                     	;# 
  4197  0510                     	;# 
  4198  0511                     	;# 
  4199  0512                     	;# 
  4200  0512                     	;# 
  4201  0513                     	;# 
  4202  0514                     	;# 
  4203  0515                     	;# 
  4204  0515                     	;# 
  4205  0516                     	;# 
  4206  0517                     	;# 
  4207  0518                     	;# 
  4208  0519                     	;# 
  4209  051A                     	;# 
  4210  051B                     	;# 
  4211  051C                     	;# 
  4212  051D                     	;# 
  4213  058C                     	;# 
  4214  058C                     	;# 
  4215  058D                     	;# 
  4216  058E                     	;# 
  4217  058F                     	;# 
  4218  058F                     	;# 
  4219  0590                     	;# 
  4220  0591                     	;# 
  4221  0592                     	;# 
  4222  0593                     	;# 
  4223  060C                     	;# 
  4224  060D                     	;# 
  4225  060E                     	;# 
  4226  060F                     	;# 
  4227  0610                     	;# 
  4228  0611                     	;# 
  4229  0612                     	;# 
  4230  0613                     	;# 
  4231  0614                     	;# 
  4232  0616                     	;# 
  4233  0617                     	;# 
  4234  0618                     	;# 
  4235  0619                     	;# 
  4236  061A                     	;# 
  4237  061B                     	;# 
  4238  061C                     	;# 
  4239  061D                     	;# 
  4240  061E                     	;# 
  4241  068C                     	;# 
  4242  068D                     	;# 
  4243  068E                     	;# 
  4244  068F                     	;# 
  4245  0690                     	;# 
  4246  0691                     	;# 
  4247  0692                     	;# 
  4248  0693                     	;# 
  4249  0694                     	;# 
  4250  070C                     	;# 
  4251  070D                     	;# 
  4252  070E                     	;# 
  4253  070F                     	;# 
  4254  0710                     	;# 
  4255  0711                     	;# 
  4256  0712                     	;# 
  4257  0713                     	;# 
  4258  0714                     	;# 
  4259  0716                     	;# 
  4260  0717                     	;# 
  4261  0718                     	;# 
  4262  0719                     	;# 
  4263  071A                     	;# 
  4264  071B                     	;# 
  4265  071C                     	;# 
  4266  071D                     	;# 
  4267  071E                     	;# 
  4268  0796                     	;# 
  4269  0797                     	;# 
  4270  0798                     	;# 
  4271  0799                     	;# 
  4272  079A                     	;# 
  4273  079B                     	;# 
  4274  080C                     	;# 
  4275  080D                     	;# 
  4276  080E                     	;# 
  4277  080F                     	;# 
  4278  0810                     	;# 
  4279  0811                     	;# 
  4280  0812                     	;# 
  4281  0813                     	;# 
  4282  0814                     	;# 
  4283  081A                     	;# 
  4284  081B                     	;# 
  4285  081C                     	;# 
  4286  081D                     	;# 
  4287  081E                     	;# 
  4288  081F                     	;# 
  4289  088C                     	;# 
  4290  088D                     	;# 
  4291  088E                     	;# 
  4292  088F                     	;# 
  4293  0890                     	;# 
  4294  0891                     	;# 
  4295  0892                     	;# 
  4296  0893                     	;# 
  4297  0895                     	;# 
  4298  0896                     	;# 
  4299  0897                     	;# 
  4300  0898                     	;# 
  4301  0899                     	;# 
  4302  089A                     	;# 
  4303  089B                     	;# 
  4304  090C                     	;# 
  4305  090E                     	;# 
  4306  090F                     	;# 
  4307  091F                     	;# 
  4308  091F                     	;# 
  4309  098F                     	;# 
  4310  098F                     	;# 
  4311  0990                     	;# 
  4312  0991                     	;# 
  4313  0992                     	;# 
  4314  0993                     	;# 
  4315  0994                     	;# 
  4316  0995                     	;# 
  4317  0996                     	;# 
  4318  0997                     	;# 
  4319  0E0F                     	;# 
  4320  0E10                     	;# 
  4321  0E11                     	;# 
  4322  0E12                     	;# 
  4323  0E13                     	;# 
  4324  0E14                     	;# 
  4325  0E15                     	;# 
  4326  0E16                     	;# 
  4327  0E17                     	;# 
  4328  0E18                     	;# 
  4329  0E19                     	;# 
  4330  0E1A                     	;# 
  4331  0E1B                     	;# 
  4332  0E1C                     	;# 
  4333  0E1D                     	;# 
  4334  0E1E                     	;# 
  4335  0E1F                     	;# 
  4336  0E20                     	;# 
  4337  0E21                     	;# 
  4338  0E22                     	;# 
  4339  0E23                     	;# 
  4340  0E24                     	;# 
  4341  0E25                     	;# 
  4342  0E26                     	;# 
  4343  0E27                     	;# 
  4344  0E28                     	;# 
  4345  0E29                     	;# 
  4346  0E2A                     	;# 
  4347  0E2B                     	;# 
  4348  0E2C                     	;# 
  4349  0E2D                     	;# 
  4350  0E2E                     	;# 
  4351  0E2F                     	;# 
  4352  0E30                     	;# 
  4353  0E31                     	;# 
  4354  0E32                     	;# 
  4355  0E33                     	;# 
  4356  0E34                     	;# 
  4357  0E35                     	;# 
  4358  0E36                     	;# 
  4359  0E37                     	;# 
  4360  0E8F                     	;# 
  4361  0E90                     	;# 
  4362  0E91                     	;# 
  4363  0E92                     	;# 
  4364  0E93                     	;# 
  4365  0E94                     	;# 
  4366  0E95                     	;# 
  4367  0E96                     	;# 
  4368  0E97                     	;# 
  4369  0E9C                     	;# 
  4370  0E9D                     	;# 
  4371  0E9E                     	;# 
  4372  0EA1                     	;# 
  4373  0EA2                     	;# 
  4374  0EA3                     	;# 
  4375  0EA4                     	;# 
  4376  0EA5                     	;# 
  4377  0EA9                     	;# 
  4378  0EAA                     	;# 
  4379  0EAB                     	;# 
  4380  0EAC                     	;# 
  4381  0EB1                     	;# 
  4382  0EB2                     	;# 
  4383  0EB3                     	;# 
  4384  0EB8                     	;# 
  4385  0EB9                     	;# 
  4386  0EBA                     	;# 
  4387  0EBB                     	;# 
  4388  0EBC                     	;# 
  4389  0EBD                     	;# 
  4390  0EBE                     	;# 
  4391  0EC3                     	;# 
  4392  0EC5                     	;# 
  4393  0EC6                     	;# 
  4394  0EC7                     	;# 
  4395  0EC8                     	;# 
  4396  0EC9                     	;# 
  4397  0ECA                     	;# 
  4398  0ECB                     	;# 
  4399  0ECC                     	;# 
  4400  0F10                     	;# 
  4401  0F11                     	;# 
  4402  0F12                     	;# 
  4403  0F13                     	;# 
  4404  0F14                     	;# 
  4405  0F15                     	;# 
  4406  0F16                     	;# 
  4407  0F17                     	;# 
  4408  0F18                     	;# 
  4409  0F19                     	;# 
  4410  0F1A                     	;# 
  4411  0F1B                     	;# 
  4412  0F1C                     	;# 
  4413  0F1D                     	;# 
  4414  0F1E                     	;# 
  4415  0F1F                     	;# 
  4416  0F20                     	;# 
  4417  0F21                     	;# 
  4418  0F22                     	;# 
  4419  0F23                     	;# 
  4420  0F24                     	;# 
  4421  0F25                     	;# 
  4422  0F26                     	;# 
  4423  0F27                     	;# 
  4424  0F28                     	;# 
  4425  0F29                     	;# 
  4426  0F2A                     	;# 
  4427  0F2B                     	;# 
  4428  0F2C                     	;# 
  4429  0F2D                     	;# 
  4430  0F2E                     	;# 
  4431  0F2F                     	;# 
  4432  0F30                     	;# 
  4433  0F31                     	;# 
  4434  0F32                     	;# 
  4435  0F38                     	;# 
  4436  0F39                     	;# 
  4437  0F3A                     	;# 
  4438  0F3B                     	;# 
  4439  0F3C                     	;# 
  4440  0F3D                     	;# 
  4441  0F3E                     	;# 
  4442  0F3F                     	;# 
  4443  0F40                     	;# 
  4444  0F41                     	;# 
  4445  0F43                     	;# 
  4446  0F44                     	;# 
  4447  0F45                     	;# 
  4448  0F46                     	;# 
  4449  0F47                     	;# 
  4450  0F48                     	;# 
  4451  0F49                     	;# 
  4452  0F4A                     	;# 
  4453  0F4B                     	;# 
  4454  0F4C                     	;# 
  4455  0F4E                     	;# 
  4456  0F4F                     	;# 
  4457  0F50                     	;# 
  4458  0F51                     	;# 
  4459  0F52                     	;# 
  4460  0F53                     	;# 
  4461  0F54                     	;# 
  4462  0F55                     	;# 
  4463  0F56                     	;# 
  4464  0F57                     	;# 
  4465  0F59                     	;# 
  4466  0F5A                     	;# 
  4467  0F5B                     	;# 
  4468  0F5C                     	;# 
  4469  0F5D                     	;# 
  4470  0F61                     	;# 
  4471  0F62                     	;# 
  4472  0F64                     	;# 
  4473  0F65                     	;# 
  4474  0F66                     	;# 
  4475  0F67                     	;# 
  4476  0F68                     	;# 
  4477  0F69                     	;# 
  4478  0F6A                     	;# 
  4479  0F6B                     	;# 
  4480  0F6C                     	;# 
  4481  0F6D                     	;# 
  4482  0FE4                     	;# 
  4483  0FE5                     	;# 
  4484  0FE6                     	;# 
  4485  0FE7                     	;# 
  4486  0FE8                     	;# 
  4487  0FE9                     	;# 
  4488  0FEA                     	;# 
  4489  0FEB                     	;# 
  4490  0FED                     	;# 
  4491  0FEE                     	;# 
  4492  0FEF                     	;# 
  4493  0000                     	;# 
  4494  0001                     	;# 
  4495  0002                     	;# 
  4496  0003                     	;# 
  4497  0004                     	;# 
  4498  0005                     	;# 
  4499  0006                     	;# 
  4500  0007                     	;# 
  4501  0008                     	;# 
  4502  0009                     	;# 
  4503  000A                     	;# 
  4504  000B                     	;# 
  4505  000C                     	;# 
  4506  000D                     	;# 
  4507  000E                     	;# 
  4508  000F                     	;# 
  4509  0010                     	;# 
  4510  0011                     	;# 
  4511  0012                     	;# 
  4512  0013                     	;# 
  4513  0014                     	;# 
  4514  0015                     	;# 
  4515  0016                     	;# 
  4516  0017                     	;# 
  4517  0018                     	;# 
  4518  0019                     	;# 
  4519  001A                     	;# 
  4520  001C                     	;# 
  4521  001C                     	;# 
  4522  001D                     	;# 
  4523  001D                     	;# 
  4524  001E                     	;# 
  4525  001F                     	;# 
  4526  008C                     	;# 
  4527  008C                     	;# 
  4528  008D                     	;# 
  4529  008E                     	;# 
  4530  008E                     	;# 
  4531  008F                     	;# 
  4532  0090                     	;# 
  4533  0090                     	;# 
  4534  0091                     	;# 
  4535  0093                     	;# 
  4536  0094                     	;# 
  4537  0095                     	;# 
  4538  0096                     	;# 
  4539  0097                     	;# 
  4540  0098                     	;# 
  4541  0099                     	;# 
  4542  009A                     	;# 
  4543  009B                     	;# 
  4544  009C                     	;# 
  4545  009D                     	;# 
  4546  009E                     	;# 
  4547  010C                     	;# 
  4548  010D                     	;# 
  4549  010E                     	;# 
  4550  010E                     	;# 
  4551  010F                     	;# 
  4552  0110                     	;# 
  4553  0110                     	;# 
  4554  0111                     	;# 
  4555  0112                     	;# 
  4556  0112                     	;# 
  4557  0113                     	;# 
  4558  0114                     	;# 
  4559  0114                     	;# 
  4560  0115                     	;# 
  4561  0116                     	;# 
  4562  0116                     	;# 
  4563  0117                     	;# 
  4564  0119                     	;# 
  4565  0119                     	;# 
  4566  0119                     	;# 
  4567  011A                     	;# 
  4568  011A                     	;# 
  4569  011A                     	;# 
  4570  011B                     	;# 
  4571  011B                     	;# 
  4572  011B                     	;# 
  4573  011B                     	;# 
  4574  011B                     	;# 
  4575  011C                     	;# 
  4576  011C                     	;# 
  4577  011C                     	;# 
  4578  011D                     	;# 
  4579  011D                     	;# 
  4580  011D                     	;# 
  4581  011E                     	;# 
  4582  011E                     	;# 
  4583  011E                     	;# 
  4584  011F                     	;# 
  4585  011F                     	;# 
  4586  011F                     	;# 
  4587  011F                     	;# 
  4588  011F                     	;# 
  4589  018C                     	;# 
  4590  018D                     	;# 
  4591  018E                     	;# 
  4592  018F                     	;# 
  4593  0190                     	;# 
  4594  0191                     	;# 
  4595  0192                     	;# 
  4596  0196                     	;# 
  4597  0197                     	;# 
  4598  0198                     	;# 
  4599  0199                     	;# 
  4600  019A                     	;# 
  4601  019B                     	;# 
  4602  019C                     	;# 
  4603  020C                     	;# 
  4604  020C                     	;# 
  4605  020D                     	;# 
  4606  020E                     	;# 
  4607  020F                     	;# 
  4608  020F                     	;# 
  4609  0210                     	;# 
  4610  0210                     	;# 
  4611  0211                     	;# 
  4612  0211                     	;# 
  4613  0212                     	;# 
  4614  0212                     	;# 
  4615  0213                     	;# 
  4616  0214                     	;# 
  4617  0215                     	;# 
  4618  0215                     	;# 
  4619  0216                     	;# 
  4620  0216                     	;# 
  4621  0217                     	;# 
  4622  0217                     	;# 
  4623  0218                     	;# 
  4624  0218                     	;# 
  4625  0219                     	;# 
  4626  021A                     	;# 
  4627  021B                     	;# 
  4628  021B                     	;# 
  4629  021C                     	;# 
  4630  021C                     	;# 
  4631  021D                     	;# 
  4632  021D                     	;# 
  4633  021E                     	;# 
  4634  021F                     	;# 
  4635  028C                     	;# 
  4636  028C                     	;# 
  4637  028D                     	;# 
  4638  028D                     	;# 
  4639  028E                     	;# 
  4640  028F                     	;# 
  4641  0290                     	;# 
  4642  0290                     	;# 
  4643  0291                     	;# 
  4644  0292                     	;# 
  4645  0292                     	;# 
  4646  0293                     	;# 
  4647  0293                     	;# 
  4648  0294                     	;# 
  4649  0295                     	;# 
  4650  0296                     	;# 
  4651  0296                     	;# 
  4652  0297                     	;# 
  4653  0298                     	;# 
  4654  0298                     	;# 
  4655  0299                     	;# 
  4656  0299                     	;# 
  4657  029A                     	;# 
  4658  029B                     	;# 
  4659  029C                     	;# 
  4660  029C                     	;# 
  4661  029D                     	;# 
  4662  030C                     	;# 
  4663  030C                     	;# 
  4664  030D                     	;# 
  4665  030E                     	;# 
  4666  030F                     	;# 
  4667  0310                     	;# 
  4668  0310                     	;# 
  4669  0311                     	;# 
  4670  0312                     	;# 
  4671  0313                     	;# 
  4672  0314                     	;# 
  4673  0314                     	;# 
  4674  0315                     	;# 
  4675  0316                     	;# 
  4676  0317                     	;# 
  4677  0318                     	;# 
  4678  0318                     	;# 
  4679  0319                     	;# 
  4680  031A                     	;# 
  4681  031B                     	;# 
  4682  031C                     	;# 
  4683  031C                     	;# 
  4684  031D                     	;# 
  4685  031E                     	;# 
  4686  031F                     	;# 
  4687  038C                     	;# 
  4688  038C                     	;# 
  4689  038D                     	;# 
  4690  038E                     	;# 
  4691  0390                     	;# 
  4692  0390                     	;# 
  4693  0391                     	;# 
  4694  0392                     	;# 
  4695  040C                     	;# 
  4696  040D                     	;# 
  4697  040E                     	;# 
  4698  040F                     	;# 
  4699  0410                     	;# 
  4700  0411                     	;# 
  4701  0416                     	;# 
  4702  0416                     	;# 
  4703  0417                     	;# 
  4704  0418                     	;# 
  4705  0418                     	;# 
  4706  0419                     	;# 
  4707  041A                     	;# 
  4708  041A                     	;# 
  4709  041B                     	;# 
  4710  041C                     	;# 
  4711  041C                     	;# 
  4712  041D                     	;# 
  4713  041E                     	;# 
  4714  041F                     	;# 
  4715  048C                     	;# 
  4716  048C                     	;# 
  4717  048D                     	;# 
  4718  048E                     	;# 
  4719  048F                     	;# 
  4720  048F                     	;# 
  4721  0490                     	;# 
  4722  0491                     	;# 
  4723  0492                     	;# 
  4724  0492                     	;# 
  4725  0493                     	;# 
  4726  0494                     	;# 
  4727  0495                     	;# 
  4728  0495                     	;# 
  4729  0496                     	;# 
  4730  0497                     	;# 
  4731  0498                     	;# 
  4732  0499                     	;# 
  4733  049A                     	;# 
  4734  049B                     	;# 
  4735  049C                     	;# 
  4736  049D                     	;# 
  4737  050C                     	;# 
  4738  050C                     	;# 
  4739  050D                     	;# 
  4740  050E                     	;# 
  4741  050F                     	;# 
  4742  050F                     	;# 
  4743  0510                     	;# 
  4744  0511                     	;# 
  4745  0512                     	;# 
  4746  0512                     	;# 
  4747  0513                     	;# 
  4748  0514                     	;# 
  4749  0515                     	;# 
  4750  0515                     	;# 
  4751  0516                     	;# 
  4752  0517                     	;# 
  4753  0518                     	;# 
  4754  0519                     	;# 
  4755  051A                     	;# 
  4756  051B                     	;# 
  4757  051C                     	;# 
  4758  051D                     	;# 
  4759  058C                     	;# 
  4760  058C                     	;# 
  4761  058D                     	;# 
  4762  058E                     	;# 
  4763  058F                     	;# 
  4764  058F                     	;# 
  4765  0590                     	;# 
  4766  0591                     	;# 
  4767  0592                     	;# 
  4768  0593                     	;# 
  4769  060C                     	;# 
  4770  060D                     	;# 
  4771  060E                     	;# 
  4772  060F                     	;# 
  4773  0610                     	;# 
  4774  0611                     	;# 
  4775  0612                     	;# 
  4776  0613                     	;# 
  4777  0614                     	;# 
  4778  0616                     	;# 
  4779  0617                     	;# 
  4780  0618                     	;# 
  4781  0619                     	;# 
  4782  061A                     	;# 
  4783  061B                     	;# 
  4784  061C                     	;# 
  4785  061D                     	;# 
  4786  061E                     	;# 
  4787  068C                     	;# 
  4788  068D                     	;# 
  4789  068E                     	;# 
  4790  068F                     	;# 
  4791  0690                     	;# 
  4792  0691                     	;# 
  4793  0692                     	;# 
  4794  0693                     	;# 
  4795  0694                     	;# 
  4796  070C                     	;# 
  4797  070D                     	;# 
  4798  070E                     	;# 
  4799  070F                     	;# 
  4800  0710                     	;# 
  4801  0711                     	;# 
  4802  0712                     	;# 
  4803  0713                     	;# 
  4804  0714                     	;# 
  4805  0716                     	;# 
  4806  0717                     	;# 
  4807  0718                     	;# 
  4808  0719                     	;# 
  4809  071A                     	;# 
  4810  071B                     	;# 
  4811  071C                     	;# 
  4812  071D                     	;# 
  4813  071E                     	;# 
  4814  0796                     	;# 
  4815  0797                     	;# 
  4816  0798                     	;# 
  4817  0799                     	;# 
  4818  079A                     	;# 
  4819  079B                     	;# 
  4820  080C                     	;# 
  4821  080D                     	;# 
  4822  080E                     	;# 
  4823  080F                     	;# 
  4824  0810                     	;# 
  4825  0811                     	;# 
  4826  0812                     	;# 
  4827  0813                     	;# 
  4828  0814                     	;# 
  4829  081A                     	;# 
  4830  081B                     	;# 
  4831  081C                     	;# 
  4832  081D                     	;# 
  4833  081E                     	;# 
  4834  081F                     	;# 
  4835  088C                     	;# 
  4836  088D                     	;# 
  4837  088E                     	;# 
  4838  088F                     	;# 
  4839  0890                     	;# 
  4840  0891                     	;# 
  4841  0892                     	;# 
  4842  0893                     	;# 
  4843  0895                     	;# 
  4844  0896                     	;# 
  4845  0897                     	;# 
  4846  0898                     	;# 
  4847  0899                     	;# 
  4848  089A                     	;# 
  4849  089B                     	;# 
  4850  090C                     	;# 
  4851  090E                     	;# 
  4852  090F                     	;# 
  4853  091F                     	;# 
  4854  091F                     	;# 
  4855  098F                     	;# 
  4856  098F                     	;# 
  4857  0990                     	;# 
  4858  0991                     	;# 
  4859  0992                     	;# 
  4860  0993                     	;# 
  4861  0994                     	;# 
  4862  0995                     	;# 
  4863  0996                     	;# 
  4864  0997                     	;# 
  4865  0E0F                     	;# 
  4866  0E10                     	;# 
  4867  0E11                     	;# 
  4868  0E12                     	;# 
  4869  0E13                     	;# 
  4870  0E14                     	;# 
  4871  0E15                     	;# 
  4872  0E16                     	;# 
  4873  0E17                     	;# 
  4874  0E18                     	;# 
  4875  0E19                     	;# 
  4876  0E1A                     	;# 
  4877  0E1B                     	;# 
  4878  0E1C                     	;# 
  4879  0E1D                     	;# 
  4880  0E1E                     	;# 
  4881  0E1F                     	;# 
  4882  0E20                     	;# 
  4883  0E21                     	;# 
  4884  0E22                     	;# 
  4885  0E23                     	;# 
  4886  0E24                     	;# 
  4887  0E25                     	;# 
  4888  0E26                     	;# 
  4889  0E27                     	;# 
  4890  0E28                     	;# 
  4891  0E29                     	;# 
  4892  0E2A                     	;# 
  4893  0E2B                     	;# 
  4894  0E2C                     	;# 
  4895  0E2D                     	;# 
  4896  0E2E                     	;# 
  4897  0E2F                     	;# 
  4898  0E30                     	;# 
  4899  0E31                     	;# 
  4900  0E32                     	;# 
  4901  0E33                     	;# 
  4902  0E34                     	;# 
  4903  0E35                     	;# 
  4904  0E36                     	;# 
  4905  0E37                     	;# 
  4906  0E8F                     	;# 
  4907  0E90                     	;# 
  4908  0E91                     	;# 
  4909  0E92                     	;# 
  4910  0E93                     	;# 
  4911  0E94                     	;# 
  4912  0E95                     	;# 
  4913  0E96                     	;# 
  4914  0E97                     	;# 
  4915  0E9C                     	;# 
  4916  0E9D                     	;# 
  4917  0E9E                     	;# 
  4918  0EA1                     	;# 
  4919  0EA2                     	;# 
  4920  0EA3                     	;# 
  4921  0EA4                     	;# 
  4922  0EA5                     	;# 
  4923  0EA9                     	;# 
  4924  0EAA                     	;# 
  4925  0EAB                     	;# 
  4926  0EAC                     	;# 
  4927  0EB1                     	;# 
  4928  0EB2                     	;# 
  4929  0EB3                     	;# 
  4930  0EB8                     	;# 
  4931  0EB9                     	;# 
  4932  0EBA                     	;# 
  4933  0EBB                     	;# 
  4934  0EBC                     	;# 
  4935  0EBD                     	;# 
  4936  0EBE                     	;# 
  4937  0EC3                     	;# 
  4938  0EC5                     	;# 
  4939  0EC6                     	;# 
  4940  0EC7                     	;# 
  4941  0EC8                     	;# 
  4942  0EC9                     	;# 
  4943  0ECA                     	;# 
  4944  0ECB                     	;# 
  4945  0ECC                     	;# 
  4946  0F10                     	;# 
  4947  0F11                     	;# 
  4948  0F12                     	;# 
  4949  0F13                     	;# 
  4950  0F14                     	;# 
  4951  0F15                     	;# 
  4952  0F16                     	;# 
  4953  0F17                     	;# 
  4954  0F18                     	;# 
  4955  0F19                     	;# 
  4956  0F1A                     	;# 
  4957  0F1B                     	;# 
  4958  0F1C                     	;# 
  4959  0F1D                     	;# 
  4960  0F1E                     	;# 
  4961  0F1F                     	;# 
  4962  0F20                     	;# 
  4963  0F21                     	;# 
  4964  0F22                     	;# 
  4965  0F23                     	;# 
  4966  0F24                     	;# 
  4967  0F25                     	;# 
  4968  0F26                     	;# 
  4969  0F27                     	;# 
  4970  0F28                     	;# 
  4971  0F29                     	;# 
  4972  0F2A                     	;# 
  4973  0F2B                     	;# 
  4974  0F2C                     	;# 
  4975  0F2D                     	;# 
  4976  0F2E                     	;# 
  4977  0F2F                     	;# 
  4978  0F30                     	;# 
  4979  0F31                     	;# 
  4980  0F32                     	;# 
  4981  0F38                     	;# 
  4982  0F39                     	;# 
  4983  0F3A                     	;# 
  4984  0F3B                     	;# 
  4985  0F3C                     	;# 
  4986  0F3D                     	;# 
  4987  0F3E                     	;# 
  4988  0F3F                     	;# 
  4989  0F40                     	;# 
  4990  0F41                     	;# 
  4991  0F43                     	;# 
  4992  0F44                     	;# 
  4993  0F45                     	;# 
  4994  0F46                     	;# 
  4995  0F47                     	;# 
  4996  0F48                     	;# 
  4997  0F49                     	;# 
  4998  0F4A                     	;# 
  4999  0F4B                     	;# 
  5000  0F4C                     	;# 
  5001  0F4E                     	;# 
  5002  0F4F                     	;# 
  5003  0F50                     	;# 
  5004  0F51                     	;# 
  5005  0F52                     	;# 
  5006  0F53                     	;# 
  5007  0F54                     	;# 
  5008  0F55                     	;# 
  5009  0F56                     	;# 
  5010  0F57                     	;# 
  5011  0F59                     	;# 
  5012  0F5A                     	;# 
  5013  0F5B                     	;# 
  5014  0F5C                     	;# 
  5015  0F5D                     	;# 
  5016  0F61                     	;# 
  5017  0F62                     	;# 
  5018  0F64                     	;# 
  5019  0F65                     	;# 
  5020  0F66                     	;# 
  5021  0F67                     	;# 
  5022  0F68                     	;# 
  5023  0F69                     	;# 
  5024  0F6A                     	;# 
  5025  0F6B                     	;# 
  5026  0F6C                     	;# 
  5027  0F6D                     	;# 
  5028  0FE4                     	;# 
  5029  0FE5                     	;# 
  5030  0FE6                     	;# 
  5031  0FE7                     	;# 
  5032  0FE8                     	;# 
  5033  0FE9                     	;# 
  5034  0FEA                     	;# 
  5035  0FEB                     	;# 
  5036  0FED                     	;# 
  5037  0FEE                     	;# 
  5038  0FEF                     	;# 
  5039  0000                     	;# 
  5040  0001                     	;# 
  5041  0002                     	;# 
  5042  0003                     	;# 
  5043  0004                     	;# 
  5044  0005                     	;# 
  5045  0006                     	;# 
  5046  0007                     	;# 
  5047  0008                     	;# 
  5048  0009                     	;# 
  5049  000A                     	;# 
  5050  000B                     	;# 
  5051  000C                     	;# 
  5052  000D                     	;# 
  5053  000E                     	;# 
  5054  000F                     	;# 
  5055  0010                     	;# 
  5056  0011                     	;# 
  5057  0012                     	;# 
  5058  0013                     	;# 
  5059  0014                     	;# 
  5060  0015                     	;# 
  5061  0016                     	;# 
  5062  0017                     	;# 
  5063  0018                     	;# 
  5064  0019                     	;# 
  5065  001A                     	;# 
  5066  001C                     	;# 
  5067  001C                     	;# 
  5068  001D                     	;# 
  5069  001D                     	;# 
  5070  001E                     	;# 
  5071  001F                     	;# 
  5072  008C                     	;# 
  5073  008C                     	;# 
  5074  008D                     	;# 
  5075  008E                     	;# 
  5076  008E                     	;# 
  5077  008F                     	;# 
  5078  0090                     	;# 
  5079  0090                     	;# 
  5080  0091                     	;# 
  5081  0093                     	;# 
  5082  0094                     	;# 
  5083  0095                     	;# 
  5084  0096                     	;# 
  5085  0097                     	;# 
  5086  0098                     	;# 
  5087  0099                     	;# 
  5088  009A                     	;# 
  5089  009B                     	;# 
  5090  009C                     	;# 
  5091  009D                     	;# 
  5092  009E                     	;# 
  5093  010C                     	;# 
  5094  010D                     	;# 
  5095  010E                     	;# 
  5096  010E                     	;# 
  5097  010F                     	;# 
  5098  0110                     	;# 
  5099  0110                     	;# 
  5100  0111                     	;# 
  5101  0112                     	;# 
  5102  0112                     	;# 
  5103  0113                     	;# 
  5104  0114                     	;# 
  5105  0114                     	;# 
  5106  0115                     	;# 
  5107  0116                     	;# 
  5108  0116                     	;# 
  5109  0117                     	;# 
  5110  0119                     	;# 
  5111  0119                     	;# 
  5112  0119                     	;# 
  5113  011A                     	;# 
  5114  011A                     	;# 
  5115  011A                     	;# 
  5116  011B                     	;# 
  5117  011B                     	;# 
  5118  011B                     	;# 
  5119  011B                     	;# 
  5120  011B                     	;# 
  5121  011C                     	;# 
  5122  011C                     	;# 
  5123  011C                     	;# 
  5124  011D                     	;# 
  5125  011D                     	;# 
  5126  011D                     	;# 
  5127  011E                     	;# 
  5128  011E                     	;# 
  5129  011E                     	;# 
  5130  011F                     	;# 
  5131  011F                     	;# 
  5132  011F                     	;# 
  5133  011F                     	;# 
  5134  011F                     	;# 
  5135  018C                     	;# 
  5136  018D                     	;# 
  5137  018E                     	;# 
  5138  018F                     	;# 
  5139  0190                     	;# 
  5140  0191                     	;# 
  5141  0192                     	;# 
  5142  0196                     	;# 
  5143  0197                     	;# 
  5144  0198                     	;# 
  5145  0199                     	;# 
  5146  019A                     	;# 
  5147  019B                     	;# 
  5148  019C                     	;# 
  5149  020C                     	;# 
  5150  020C                     	;# 
  5151  020D                     	;# 
  5152  020E                     	;# 
  5153  020F                     	;# 
  5154  020F                     	;# 
  5155  0210                     	;# 
  5156  0210                     	;# 
  5157  0211                     	;# 
  5158  0211                     	;# 
  5159  0212                     	;# 
  5160  0212                     	;# 
  5161  0213                     	;# 
  5162  0214                     	;# 
  5163  0215                     	;# 
  5164  0215                     	;# 
  5165  0216                     	;# 
  5166  0216                     	;# 
  5167  0217                     	;# 
  5168  0217                     	;# 
  5169  0218                     	;# 
  5170  0218                     	;# 
  5171  0219                     	;# 
  5172  021A                     	;# 
  5173  021B                     	;# 
  5174  021B                     	;# 
  5175  021C                     	;# 
  5176  021C                     	;# 
  5177  021D                     	;# 
  5178  021D                     	;# 
  5179  021E                     	;# 
  5180  021F                     	;# 
  5181  028C                     	;# 
  5182  028C                     	;# 
  5183  028D                     	;# 
  5184  028D                     	;# 
  5185  028E                     	;# 
  5186  028F                     	;# 
  5187  0290                     	;# 
  5188  0290                     	;# 
  5189  0291                     	;# 
  5190  0292                     	;# 
  5191  0292                     	;# 
  5192  0293                     	;# 
  5193  0293                     	;# 
  5194  0294                     	;# 
  5195  0295                     	;# 
  5196  0296                     	;# 
  5197  0296                     	;# 
  5198  0297                     	;# 
  5199  0298                     	;# 
  5200  0298                     	;# 
  5201  0299                     	;# 
  5202  0299                     	;# 
  5203  029A                     	;# 
  5204  029B                     	;# 
  5205  029C                     	;# 
  5206  029C                     	;# 
  5207  029D                     	;# 
  5208  030C                     	;# 
  5209  030C                     	;# 
  5210  030D                     	;# 
  5211  030E                     	;# 
  5212  030F                     	;# 
  5213  0310                     	;# 
  5214  0310                     	;# 
  5215  0311                     	;# 
  5216  0312                     	;# 
  5217  0313                     	;# 
  5218  0314                     	;# 
  5219  0314                     	;# 
  5220  0315                     	;# 
  5221  0316                     	;# 
  5222  0317                     	;# 
  5223  0318                     	;# 
  5224  0318                     	;# 
  5225  0319                     	;# 
  5226  031A                     	;# 
  5227  031B                     	;# 
  5228  031C                     	;# 
  5229  031C                     	;# 
  5230  031D                     	;# 
  5231  031E                     	;# 
  5232  031F                     	;# 
  5233  038C                     	;# 
  5234  038C                     	;# 
  5235  038D                     	;# 
  5236  038E                     	;# 
  5237  0390                     	;# 
  5238  0390                     	;# 
  5239  0391                     	;# 
  5240  0392                     	;# 
  5241  040C                     	;# 
  5242  040D                     	;# 
  5243  040E                     	;# 
  5244  040F                     	;# 
  5245  0410                     	;# 
  5246  0411                     	;# 
  5247  0416                     	;# 
  5248  0416                     	;# 
  5249  0417                     	;# 
  5250  0418                     	;# 
  5251  0418                     	;# 
  5252  0419                     	;# 
  5253  041A                     	;# 
  5254  041A                     	;# 
  5255  041B                     	;# 
  5256  041C                     	;# 
  5257  041C                     	;# 
  5258  041D                     	;# 
  5259  041E                     	;# 
  5260  041F                     	;# 
  5261  048C                     	;# 
  5262  048C                     	;# 
  5263  048D                     	;# 
  5264  048E                     	;# 
  5265  048F                     	;# 
  5266  048F                     	;# 
  5267  0490                     	;# 
  5268  0491                     	;# 
  5269  0492                     	;# 
  5270  0492                     	;# 
  5271  0493                     	;# 
  5272  0494                     	;# 
  5273  0495                     	;# 
  5274  0495                     	;# 
  5275  0496                     	;# 
  5276  0497                     	;# 
  5277  0498                     	;# 
  5278  0499                     	;# 
  5279  049A                     	;# 
  5280  049B                     	;# 
  5281  049C                     	;# 
  5282  049D                     	;# 
  5283  050C                     	;# 
  5284  050C                     	;# 
  5285  050D                     	;# 
  5286  050E                     	;# 
  5287  050F                     	;# 
  5288  050F                     	;# 
  5289  0510                     	;# 
  5290  0511                     	;# 
  5291  0512                     	;# 
  5292  0512                     	;# 
  5293  0513                     	;# 
  5294  0514                     	;# 
  5295  0515                     	;# 
  5296  0515                     	;# 
  5297  0516                     	;# 
  5298  0517                     	;# 
  5299  0518                     	;# 
  5300  0519                     	;# 
  5301  051A                     	;# 
  5302  051B                     	;# 
  5303  051C                     	;# 
  5304  051D                     	;# 
  5305  058C                     	;# 
  5306  058C                     	;# 
  5307  058D                     	;# 
  5308  058E                     	;# 
  5309  058F                     	;# 
  5310  058F                     	;# 
  5311  0590                     	;# 
  5312  0591                     	;# 
  5313  0592                     	;# 
  5314  0593                     	;# 
  5315  060C                     	;# 
  5316  060D                     	;# 
  5317  060E                     	;# 
  5318  060F                     	;# 
  5319  0610                     	;# 
  5320  0611                     	;# 
  5321  0612                     	;# 
  5322  0613                     	;# 
  5323  0614                     	;# 
  5324  0616                     	;# 
  5325  0617                     	;# 
  5326  0618                     	;# 
  5327  0619                     	;# 
  5328  061A                     	;# 
  5329  061B                     	;# 
  5330  061C                     	;# 
  5331  061D                     	;# 
  5332  061E                     	;# 
  5333  068C                     	;# 
  5334  068D                     	;# 
  5335  068E                     	;# 
  5336  068F                     	;# 
  5337  0690                     	;# 
  5338  0691                     	;# 
  5339  0692                     	;# 
  5340  0693                     	;# 
  5341  0694                     	;# 
  5342  070C                     	;# 
  5343  070D                     	;# 
  5344  070E                     	;# 
  5345  070F                     	;# 
  5346  0710                     	;# 
  5347  0711                     	;# 
  5348  0712                     	;# 
  5349  0713                     	;# 
  5350  0714                     	;# 
  5351  0716                     	;# 
  5352  0717                     	;# 
  5353  0718                     	;# 
  5354  0719                     	;# 
  5355  071A                     	;# 
  5356  071B                     	;# 
  5357  071C                     	;# 
  5358  071D                     	;# 
  5359  071E                     	;# 
  5360  0796                     	;# 
  5361  0797                     	;# 
  5362  0798                     	;# 
  5363  0799                     	;# 
  5364  079A                     	;# 
  5365  079B                     	;# 
  5366  080C                     	;# 
  5367  080D                     	;# 
  5368  080E                     	;# 
  5369  080F                     	;# 
  5370  0810                     	;# 
  5371  0811                     	;# 
  5372  0812                     	;# 
  5373  0813                     	;# 
  5374  0814                     	;# 
  5375  081A                     	;# 
  5376  081B                     	;# 
  5377  081C                     	;# 
  5378  081D                     	;# 
  5379  081E                     	;# 
  5380  081F                     	;# 
  5381  088C                     	;# 
  5382  088D                     	;# 
  5383  088E                     	;# 
  5384  088F                     	;# 
  5385  0890                     	;# 
  5386  0891                     	;# 
  5387  0892                     	;# 
  5388  0893                     	;# 
  5389  0895                     	;# 
  5390  0896                     	;# 
  5391  0897                     	;# 
  5392  0898                     	;# 
  5393  0899                     	;# 
  5394  089A                     	;# 
  5395  089B                     	;# 
  5396  090C                     	;# 
  5397  090E                     	;# 
  5398  090F                     	;# 
  5399  091F                     	;# 
  5400  091F                     	;# 
  5401  098F                     	;# 
  5402  098F                     	;# 
  5403  0990                     	;# 
  5404  0991                     	;# 
  5405  0992                     	;# 
  5406  0993                     	;# 
  5407  0994                     	;# 
  5408  0995                     	;# 
  5409  0996                     	;# 
  5410  0997                     	;# 
  5411  0E0F                     	;# 
  5412  0E10                     	;# 
  5413  0E11                     	;# 
  5414  0E12                     	;# 
  5415  0E13                     	;# 
  5416  0E14                     	;# 
  5417  0E15                     	;# 
  5418  0E16                     	;# 
  5419  0E17                     	;# 
  5420  0E18                     	;# 
  5421  0E19                     	;# 
  5422  0E1A                     	;# 
  5423  0E1B                     	;# 
  5424  0E1C                     	;# 
  5425  0E1D                     	;# 
  5426  0E1E                     	;# 
  5427  0E1F                     	;# 
  5428  0E20                     	;# 
  5429  0E21                     	;# 
  5430  0E22                     	;# 
  5431  0E23                     	;# 
  5432  0E24                     	;# 
  5433  0E25                     	;# 
  5434  0E26                     	;# 
  5435  0E27                     	;# 
  5436  0E28                     	;# 
  5437  0E29                     	;# 
  5438  0E2A                     	;# 
  5439  0E2B                     	;# 
  5440  0E2C                     	;# 
  5441  0E2D                     	;# 
  5442  0E2E                     	;# 
  5443  0E2F                     	;# 
  5444  0E30                     	;# 
  5445  0E31                     	;# 
  5446  0E32                     	;# 
  5447  0E33                     	;# 
  5448  0E34                     	;# 
  5449  0E35                     	;# 
  5450  0E36                     	;# 
  5451  0E37                     	;# 
  5452  0E8F                     	;# 
  5453  0E90                     	;# 
  5454  0E91                     	;# 
  5455  0E92                     	;# 
  5456  0E93                     	;# 
  5457  0E94                     	;# 
  5458  0E95                     	;# 
  5459  0E96                     	;# 
  5460  0E97                     	;# 
  5461  0E9C                     	;# 
  5462  0E9D                     	;# 
  5463  0E9E                     	;# 
  5464  0EA1                     	;# 
  5465  0EA2                     	;# 
  5466  0EA3                     	;# 
  5467  0EA4                     	;# 
  5468  0EA5                     	;# 
  5469  0EA9                     	;# 
  5470  0EAA                     	;# 
  5471  0EAB                     	;# 
  5472  0EAC                     	;# 
  5473  0EB1                     	;# 
  5474  0EB2                     	;# 
  5475  0EB3                     	;# 
  5476  0EB8                     	;# 
  5477  0EB9                     	;# 
  5478  0EBA                     	;# 
  5479  0EBB                     	;# 
  5480  0EBC                     	;# 
  5481  0EBD                     	;# 
  5482  0EBE                     	;# 
  5483  0EC3                     	;# 
  5484  0EC5                     	;# 
  5485  0EC6                     	;# 
  5486  0EC7                     	;# 
  5487  0EC8                     	;# 
  5488  0EC9                     	;# 
  5489  0ECA                     	;# 
  5490  0ECB                     	;# 
  5491  0ECC                     	;# 
  5492  0F10                     	;# 
  5493  0F11                     	;# 
  5494  0F12                     	;# 
  5495  0F13                     	;# 
  5496  0F14                     	;# 
  5497  0F15                     	;# 
  5498  0F16                     	;# 
  5499  0F17                     	;# 
  5500  0F18                     	;# 
  5501  0F19                     	;# 
  5502  0F1A                     	;# 
  5503  0F1B                     	;# 
  5504  0F1C                     	;# 
  5505  0F1D                     	;# 
  5506  0F1E                     	;# 
  5507  0F1F                     	;# 
  5508  0F20                     	;# 
  5509  0F21                     	;# 
  5510  0F22                     	;# 
  5511  0F23                     	;# 
  5512  0F24                     	;# 
  5513  0F25                     	;# 
  5514  0F26                     	;# 
  5515  0F27                     	;# 
  5516  0F28                     	;# 
  5517  0F29                     	;# 
  5518  0F2A                     	;# 
  5519  0F2B                     	;# 
  5520  0F2C                     	;# 
  5521  0F2D                     	;# 
  5522  0F2E                     	;# 
  5523  0F2F                     	;# 
  5524  0F30                     	;# 
  5525  0F31                     	;# 
  5526  0F32                     	;# 
  5527  0F38                     	;# 
  5528  0F39                     	;# 
  5529  0F3A                     	;# 
  5530  0F3B                     	;# 
  5531  0F3C                     	;# 
  5532  0F3D                     	;# 
  5533  0F3E                     	;# 
  5534  0F3F                     	;# 
  5535  0F40                     	;# 
  5536  0F41                     	;# 
  5537  0F43                     	;# 
  5538  0F44                     	;# 
  5539  0F45                     	;# 
  5540  0F46                     	;# 
  5541  0F47                     	;# 
  5542  0F48                     	;# 
  5543  0F49                     	;# 
  5544  0F4A                     	;# 
  5545  0F4B                     	;# 
  5546  0F4C                     	;# 
  5547  0F4E                     	;# 
  5548  0F4F                     	;# 
  5549  0F50                     	;# 
  5550  0F51                     	;# 
  5551  0F52                     	;# 
  5552  0F53                     	;# 
  5553  0F54                     	;# 
  5554  0F55                     	;# 
  5555  0F56                     	;# 
  5556  0F57                     	;# 
  5557  0F59                     	;# 
  5558  0F5A                     	;# 
  5559  0F5B                     	;# 
  5560  0F5C                     	;# 
  5561  0F5D                     	;# 
  5562  0F61                     	;# 
  5563  0F62                     	;# 
  5564  0F64                     	;# 
  5565  0F65                     	;# 
  5566  0F66                     	;# 
  5567  0F67                     	;# 
  5568  0F68                     	;# 
  5569  0F69                     	;# 
  5570  0F6A                     	;# 
  5571  0F6B                     	;# 
  5572  0F6C                     	;# 
  5573  0F6D                     	;# 
  5574  0FE4                     	;# 
  5575  0FE5                     	;# 
  5576  0FE6                     	;# 
  5577  0FE7                     	;# 
  5578  0FE8                     	;# 
  5579  0FE9                     	;# 
  5580  0FEA                     	;# 
  5581  0FEB                     	;# 
  5582  0FED                     	;# 
  5583  0FEE                     	;# 
  5584  0FEF                     	;# 
  5585  0000                     	;# 
  5586  0001                     	;# 
  5587  0002                     	;# 
  5588  0003                     	;# 
  5589  0004                     	;# 
  5590  0005                     	;# 
  5591  0006                     	;# 
  5592  0007                     	;# 
  5593  0008                     	;# 
  5594  0009                     	;# 
  5595  000A                     	;# 
  5596  000B                     	;# 
  5597  000C                     	;# 
  5598  000D                     	;# 
  5599  000E                     	;# 
  5600  000F                     	;# 
  5601  0010                     	;# 
  5602  0011                     	;# 
  5603  0012                     	;# 
  5604  0013                     	;# 
  5605  0014                     	;# 
  5606  0015                     	;# 
  5607  0016                     	;# 
  5608  0017                     	;# 
  5609  0018                     	;# 
  5610  0019                     	;# 
  5611  001A                     	;# 
  5612  001C                     	;# 
  5613  001C                     	;# 
  5614  001D                     	;# 
  5615  001D                     	;# 
  5616  001E                     	;# 
  5617  001F                     	;# 
  5618  008C                     	;# 
  5619  008C                     	;# 
  5620  008D                     	;# 
  5621  008E                     	;# 
  5622  008E                     	;# 
  5623  008F                     	;# 
  5624  0090                     	;# 
  5625  0090                     	;# 
  5626  0091                     	;# 
  5627  0093                     	;# 
  5628  0094                     	;# 
  5629  0095                     	;# 
  5630  0096                     	;# 
  5631  0097                     	;# 
  5632  0098                     	;# 
  5633  0099                     	;# 
  5634  009A                     	;# 
  5635  009B                     	;# 
  5636  009C                     	;# 
  5637  009D                     	;# 
  5638  009E                     	;# 
  5639  010C                     	;# 
  5640  010D                     	;# 
  5641  010E                     	;# 
  5642  010E                     	;# 
  5643  010F                     	;# 
  5644  0110                     	;# 
  5645  0110                     	;# 
  5646  0111                     	;# 
  5647  0112                     	;# 
  5648  0112                     	;# 
  5649  0113                     	;# 
  5650  0114                     	;# 
  5651  0114                     	;# 
  5652  0115                     	;# 
  5653  0116                     	;# 
  5654  0116                     	;# 
  5655  0117                     	;# 
  5656  0119                     	;# 
  5657  0119                     	;# 
  5658  0119                     	;# 
  5659  011A                     	;# 
  5660  011A                     	;# 
  5661  011A                     	;# 
  5662  011B                     	;# 
  5663  011B                     	;# 
  5664  011B                     	;# 
  5665  011B                     	;# 
  5666  011B                     	;# 
  5667  011C                     	;# 
  5668  011C                     	;# 
  5669  011C                     	;# 
  5670  011D                     	;# 
  5671  011D                     	;# 
  5672  011D                     	;# 
  5673  011E                     	;# 
  5674  011E                     	;# 
  5675  011E                     	;# 
  5676  011F                     	;# 
  5677  011F                     	;# 
  5678  011F                     	;# 
  5679  011F                     	;# 
  5680  011F                     	;# 
  5681  018C                     	;# 
  5682  018D                     	;# 
  5683  018E                     	;# 
  5684  018F                     	;# 
  5685  0190                     	;# 
  5686  0191                     	;# 
  5687  0192                     	;# 
  5688  0196                     	;# 
  5689  0197                     	;# 
  5690  0198                     	;# 
  5691  0199                     	;# 
  5692  019A                     	;# 
  5693  019B                     	;# 
  5694  019C                     	;# 
  5695  020C                     	;# 
  5696  020C                     	;# 
  5697  020D                     	;# 
  5698  020E                     	;# 
  5699  020F                     	;# 
  5700  020F                     	;# 
  5701  0210                     	;# 
  5702  0210                     	;# 
  5703  0211                     	;# 
  5704  0211                     	;# 
  5705  0212                     	;# 
  5706  0212                     	;# 
  5707  0213                     	;# 
  5708  0214                     	;# 
  5709  0215                     	;# 
  5710  0215                     	;# 
  5711  0216                     	;# 
  5712  0216                     	;# 
  5713  0217                     	;# 
  5714  0217                     	;# 
  5715  0218                     	;# 
  5716  0218                     	;# 
  5717  0219                     	;# 
  5718  021A                     	;# 
  5719  021B                     	;# 
  5720  021B                     	;# 
  5721  021C                     	;# 
  5722  021C                     	;# 
  5723  021D                     	;# 
  5724  021D                     	;# 
  5725  021E                     	;# 
  5726  021F                     	;# 
  5727  028C                     	;# 
  5728  028C                     	;# 
  5729  028D                     	;# 
  5730  028D                     	;# 
  5731  028E                     	;# 
  5732  028F                     	;# 
  5733  0290                     	;# 
  5734  0290                     	;# 
  5735  0291                     	;# 
  5736  0292                     	;# 
  5737  0292                     	;# 
  5738  0293                     	;# 
  5739  0293                     	;# 
  5740  0294                     	;# 
  5741  0295                     	;# 
  5742  0296                     	;# 
  5743  0296                     	;# 
  5744  0297                     	;# 
  5745  0298                     	;# 
  5746  0298                     	;# 
  5747  0299                     	;# 
  5748  0299                     	;# 
  5749  029A                     	;# 
  5750  029B                     	;# 
  5751  029C                     	;# 
  5752  029C                     	;# 
  5753  029D                     	;# 
  5754  030C                     	;# 
  5755  030C                     	;# 
  5756  030D                     	;# 
  5757  030E                     	;# 
  5758  030F                     	;# 
  5759  0310                     	;# 
  5760  0310                     	;# 
  5761  0311                     	;# 
  5762  0312                     	;# 
  5763  0313                     	;# 
  5764  0314                     	;# 
  5765  0314                     	;# 
  5766  0315                     	;# 
  5767  0316                     	;# 
  5768  0317                     	;# 
  5769  0318                     	;# 
  5770  0318                     	;# 
  5771  0319                     	;# 
  5772  031A                     	;# 
  5773  031B                     	;# 
  5774  031C                     	;# 
  5775  031C                     	;# 
  5776  031D                     	;# 
  5777  031E                     	;# 
  5778  031F                     	;# 
  5779  038C                     	;# 
  5780  038C                     	;# 
  5781  038D                     	;# 
  5782  038E                     	;# 
  5783  0390                     	;# 
  5784  0390                     	;# 
  5785  0391                     	;# 
  5786  0392                     	;# 
  5787  040C                     	;# 
  5788  040D                     	;# 
  5789  040E                     	;# 
  5790  040F                     	;# 
  5791  0410                     	;# 
  5792  0411                     	;# 
  5793  0416                     	;# 
  5794  0416                     	;# 
  5795  0417                     	;# 
  5796  0418                     	;# 
  5797  0418                     	;# 
  5798  0419                     	;# 
  5799  041A                     	;# 
  5800  041A                     	;# 
  5801  041B                     	;# 
  5802  041C                     	;# 
  5803  041C                     	;# 
  5804  041D                     	;# 
  5805  041E                     	;# 
  5806  041F                     	;# 
  5807  048C                     	;# 
  5808  048C                     	;# 
  5809  048D                     	;# 
  5810  048E                     	;# 
  5811  048F                     	;# 
  5812  048F                     	;# 
  5813  0490                     	;# 
  5814  0491                     	;# 
  5815  0492                     	;# 
  5816  0492                     	;# 
  5817  0493                     	;# 
  5818  0494                     	;# 
  5819  0495                     	;# 
  5820  0495                     	;# 
  5821  0496                     	;# 
  5822  0497                     	;# 
  5823  0498                     	;# 
  5824  0499                     	;# 
  5825  049A                     	;# 
  5826  049B                     	;# 
  5827  049C                     	;# 
  5828  049D                     	;# 
  5829  050C                     	;# 
  5830  050C                     	;# 
  5831  050D                     	;# 
  5832  050E                     	;# 
  5833  050F                     	;# 
  5834  050F                     	;# 
  5835  0510                     	;# 
  5836  0511                     	;# 
  5837  0512                     	;# 
  5838  0512                     	;# 
  5839  0513                     	;# 
  5840  0514                     	;# 
  5841  0515                     	;# 
  5842  0515                     	;# 
  5843  0516                     	;# 
  5844  0517                     	;# 
  5845  0518                     	;# 
  5846  0519                     	;# 
  5847  051A                     	;# 
  5848  051B                     	;# 
  5849  051C                     	;# 
  5850  051D                     	;# 
  5851  058C                     	;# 
  5852  058C                     	;# 
  5853  058D                     	;# 
  5854  058E                     	;# 
  5855  058F                     	;# 
  5856  058F                     	;# 
  5857  0590                     	;# 
  5858  0591                     	;# 
  5859  0592                     	;# 
  5860  0593                     	;# 
  5861  060C                     	;# 
  5862  060D                     	;# 
  5863  060E                     	;# 
  5864  060F                     	;# 
  5865  0610                     	;# 
  5866  0611                     	;# 
  5867  0612                     	;# 
  5868  0613                     	;# 
  5869  0614                     	;# 
  5870  0616                     	;# 
  5871  0617                     	;# 
  5872  0618                     	;# 
  5873  0619                     	;# 
  5874  061A                     	;# 
  5875  061B                     	;# 
  5876  061C                     	;# 
  5877  061D                     	;# 
  5878  061E                     	;# 
  5879  068C                     	;# 
  5880  068D                     	;# 
  5881  068E                     	;# 
  5882  068F                     	;# 
  5883  0690                     	;# 
  5884  0691                     	;# 
  5885  0692                     	;# 
  5886  0693                     	;# 
  5887  0694                     	;# 
  5888  070C                     	;# 
  5889  070D                     	;# 
  5890  070E                     	;# 
  5891  070F                     	;# 
  5892  0710                     	;# 
  5893  0711                     	;# 
  5894  0712                     	;# 
  5895  0713                     	;# 
  5896  0714                     	;# 
  5897  0716                     	;# 
  5898  0717                     	;# 
  5899  0718                     	;# 
  5900  0719                     	;# 
  5901  071A                     	;# 
  5902  071B                     	;# 
  5903  071C                     	;# 
  5904  071D                     	;# 
  5905  071E                     	;# 
  5906  0796                     	;# 
  5907  0797                     	;# 
  5908  0798                     	;# 
  5909  0799                     	;# 
  5910  079A                     	;# 
  5911  079B                     	;# 
  5912  080C                     	;# 
  5913  080D                     	;# 
  5914  080E                     	;# 
  5915  080F                     	;# 
  5916  0810                     	;# 
  5917  0811                     	;# 
  5918  0812                     	;# 
  5919  0813                     	;# 
  5920  0814                     	;# 
  5921  081A                     	;# 
  5922  081B                     	;# 
  5923  081C                     	;# 
  5924  081D                     	;# 
  5925  081E                     	;# 
  5926  081F                     	;# 
  5927  088C                     	;# 
  5928  088D                     	;# 
  5929  088E                     	;# 
  5930  088F                     	;# 
  5931  0890                     	;# 
  5932  0891                     	;# 
  5933  0892                     	;# 
  5934  0893                     	;# 
  5935  0895                     	;# 
  5936  0896                     	;# 
  5937  0897                     	;# 
  5938  0898                     	;# 
  5939  0899                     	;# 
  5940  089A                     	;# 
  5941  089B                     	;# 
  5942  090C                     	;# 
  5943  090E                     	;# 
  5944  090F                     	;# 
  5945  091F                     	;# 
  5946  091F                     	;# 
  5947  098F                     	;# 
  5948  098F                     	;# 
  5949  0990                     	;# 
  5950  0991                     	;# 
  5951  0992                     	;# 
  5952  0993                     	;# 
  5953  0994                     	;# 
  5954  0995                     	;# 
  5955  0996                     	;# 
  5956  0997                     	;# 
  5957  0E0F                     	;# 
  5958  0E10                     	;# 
  5959  0E11                     	;# 
  5960  0E12                     	;# 
  5961  0E13                     	;# 
  5962  0E14                     	;# 
  5963  0E15                     	;# 
  5964  0E16                     	;# 
  5965  0E17                     	;# 
  5966  0E18                     	;# 
  5967  0E19                     	;# 
  5968  0E1A                     	;# 
  5969  0E1B                     	;# 
  5970  0E1C                     	;# 
  5971  0E1D                     	;# 
  5972  0E1E                     	;# 
  5973  0E1F                     	;# 
  5974  0E20                     	;# 
  5975  0E21                     	;# 
  5976  0E22                     	;# 
  5977  0E23                     	;# 
  5978  0E24                     	;# 
  5979  0E25                     	;# 
  5980  0E26                     	;# 
  5981  0E27                     	;# 
  5982  0E28                     	;# 
  5983  0E29                     	;# 
  5984  0E2A                     	;# 
  5985  0E2B                     	;# 
  5986  0E2C                     	;# 
  5987  0E2D                     	;# 
  5988  0E2E                     	;# 
  5989  0E2F                     	;# 
  5990  0E30                     	;# 
  5991  0E31                     	;# 
  5992  0E32                     	;# 
  5993  0E33                     	;# 
  5994  0E34                     	;# 
  5995  0E35                     	;# 
  5996  0E36                     	;# 
  5997  0E37                     	;# 
  5998  0E8F                     	;# 
  5999  0E90                     	;# 
  6000  0E91                     	;# 
  6001  0E92                     	;# 
  6002  0E93                     	;# 
  6003  0E94                     	;# 
  6004  0E95                     	;# 
  6005  0E96                     	;# 
  6006  0E97                     	;# 
  6007  0E9C                     	;# 
  6008  0E9D                     	;# 
  6009  0E9E                     	;# 
  6010  0EA1                     	;# 
  6011  0EA2                     	;# 
  6012  0EA3                     	;# 
  6013  0EA4                     	;# 
  6014  0EA5                     	;# 
  6015  0EA9                     	;# 
  6016  0EAA                     	;# 
  6017  0EAB                     	;# 
  6018  0EAC                     	;# 
  6019  0EB1                     	;# 
  6020  0EB2                     	;# 
  6021  0EB3                     	;# 
  6022  0EB8                     	;# 
  6023  0EB9                     	;# 
  6024  0EBA                     	;# 
  6025  0EBB                     	;# 
  6026  0EBC                     	;# 
  6027  0EBD                     	;# 
  6028  0EBE                     	;# 
  6029  0EC3                     	;# 
  6030  0EC5                     	;# 
  6031  0EC6                     	;# 
  6032  0EC7                     	;# 
  6033  0EC8                     	;# 
  6034  0EC9                     	;# 
  6035  0ECA                     	;# 
  6036  0ECB                     	;# 
  6037  0ECC                     	;# 
  6038  0F10                     	;# 
  6039  0F11                     	;# 
  6040  0F12                     	;# 
  6041  0F13                     	;# 
  6042  0F14                     	;# 
  6043  0F15                     	;# 
  6044  0F16                     	;# 
  6045  0F17                     	;# 
  6046  0F18                     	;# 
  6047  0F19                     	;# 
  6048  0F1A                     	;# 
  6049  0F1B                     	;# 
  6050  0F1C                     	;# 
  6051  0F1D                     	;# 
  6052  0F1E                     	;# 
  6053  0F1F                     	;# 
  6054  0F20                     	;# 
  6055  0F21                     	;# 
  6056  0F22                     	;# 
  6057  0F23                     	;# 
  6058  0F24                     	;# 
  6059  0F25                     	;# 
  6060  0F26                     	;# 
  6061  0F27                     	;# 
  6062  0F28                     	;# 
  6063  0F29                     	;# 
  6064  0F2A                     	;# 
  6065  0F2B                     	;# 
  6066  0F2C                     	;# 
  6067  0F2D                     	;# 
  6068  0F2E                     	;# 
  6069  0F2F                     	;# 
  6070  0F30                     	;# 
  6071  0F31                     	;# 
  6072  0F32                     	;# 
  6073  0F38                     	;# 
  6074  0F39                     	;# 
  6075  0F3A                     	;# 
  6076  0F3B                     	;# 
  6077  0F3C                     	;# 
  6078  0F3D                     	;# 
  6079  0F3E                     	;# 
  6080  0F3F                     	;# 
  6081  0F40                     	;# 
  6082  0F41                     	;# 
  6083  0F43                     	;# 
  6084  0F44                     	;# 
  6085  0F45                     	;# 
  6086  0F46                     	;# 
  6087  0F47                     	;# 
  6088  0F48                     	;# 
  6089  0F49                     	;# 
  6090  0F4A                     	;# 
  6091  0F4B                     	;# 
  6092  0F4C                     	;# 
  6093  0F4E                     	;# 
  6094  0F4F                     	;# 
  6095  0F50                     	;# 
  6096  0F51                     	;# 
  6097  0F52                     	;# 
  6098  0F53                     	;# 
  6099  0F54                     	;# 
  6100  0F55                     	;# 
  6101  0F56                     	;# 
  6102  0F57                     	;# 
  6103  0F59                     	;# 
  6104  0F5A                     	;# 
  6105  0F5B                     	;# 
  6106  0F5C                     	;# 
  6107  0F5D                     	;# 
  6108  0F61                     	;# 
  6109  0F62                     	;# 
  6110  0F64                     	;# 
  6111  0F65                     	;# 
  6112  0F66                     	;# 
  6113  0F67                     	;# 
  6114  0F68                     	;# 
  6115  0F69                     	;# 
  6116  0F6A                     	;# 
  6117  0F6B                     	;# 
  6118  0F6C                     	;# 
  6119  0F6D                     	;# 
  6120  0FE4                     	;# 
  6121  0FE5                     	;# 
  6122  0FE6                     	;# 
  6123  0FE7                     	;# 
  6124  0FE8                     	;# 
  6125  0FE9                     	;# 
  6126  0FEA                     	;# 
  6127  0FEB                     	;# 
  6128  0FED                     	;# 
  6129  0FEE                     	;# 
  6130  0FEF                     	;# 
  6131  0000                     	;# 
  6132  0001                     	;# 
  6133  0002                     	;# 
  6134  0003                     	;# 
  6135  0004                     	;# 
  6136  0005                     	;# 
  6137  0006                     	;# 
  6138  0007                     	;# 
  6139  0008                     	;# 
  6140  0009                     	;# 
  6141  000A                     	;# 
  6142  000B                     	;# 
  6143  000C                     	;# 
  6144  000D                     	;# 
  6145  000E                     	;# 
  6146  000F                     	;# 
  6147  0010                     	;# 
  6148  0011                     	;# 
  6149  0012                     	;# 
  6150  0013                     	;# 
  6151  0014                     	;# 
  6152  0015                     	;# 
  6153  0016                     	;# 
  6154  0017                     	;# 
  6155  0018                     	;# 
  6156  0019                     	;# 
  6157  001A                     	;# 
  6158  001C                     	;# 
  6159  001C                     	;# 
  6160  001D                     	;# 
  6161  001D                     	;# 
  6162  001E                     	;# 
  6163  001F                     	;# 
  6164  008C                     	;# 
  6165  008C                     	;# 
  6166  008D                     	;# 
  6167  008E                     	;# 
  6168  008E                     	;# 
  6169  008F                     	;# 
  6170  0090                     	;# 
  6171  0090                     	;# 
  6172  0091                     	;# 
  6173  0093                     	;# 
  6174  0094                     	;# 
  6175  0095                     	;# 
  6176  0096                     	;# 
  6177  0097                     	;# 
  6178  0098                     	;# 
  6179  0099                     	;# 
  6180  009A                     	;# 
  6181  009B                     	;# 
  6182  009C                     	;# 
  6183  009D                     	;# 
  6184  009E                     	;# 
  6185  010C                     	;# 
  6186  010D                     	;# 
  6187  010E                     	;# 
  6188  010E                     	;# 
  6189  010F                     	;# 
  6190  0110                     	;# 
  6191  0110                     	;# 
  6192  0111                     	;# 
  6193  0112                     	;# 
  6194  0112                     	;# 
  6195  0113                     	;# 
  6196  0114                     	;# 
  6197  0114                     	;# 
  6198  0115                     	;# 
  6199  0116                     	;# 
  6200  0116                     	;# 
  6201  0117                     	;# 
  6202  0119                     	;# 
  6203  0119                     	;# 
  6204  0119                     	;# 
  6205  011A                     	;# 
  6206  011A                     	;# 
  6207  011A                     	;# 
  6208  011B                     	;# 
  6209  011B                     	;# 
  6210  011B                     	;# 
  6211  011B                     	;# 
  6212  011B                     	;# 
  6213  011C                     	;# 
  6214  011C                     	;# 
  6215  011C                     	;# 
  6216  011D                     	;# 
  6217  011D                     	;# 
  6218  011D                     	;# 
  6219  011E                     	;# 
  6220  011E                     	;# 
  6221  011E                     	;# 
  6222  011F                     	;# 
  6223  011F                     	;# 
  6224  011F                     	;# 
  6225  011F                     	;# 
  6226  011F                     	;# 
  6227  018C                     	;# 
  6228  018D                     	;# 
  6229  018E                     	;# 
  6230  018F                     	;# 
  6231  0190                     	;# 
  6232  0191                     	;# 
  6233  0192                     	;# 
  6234  0196                     	;# 
  6235  0197                     	;# 
  6236  0198                     	;# 
  6237  0199                     	;# 
  6238  019A                     	;# 
  6239  019B                     	;# 
  6240  019C                     	;# 
  6241  020C                     	;# 
  6242  020C                     	;# 
  6243  020D                     	;# 
  6244  020E                     	;# 
  6245  020F                     	;# 
  6246  020F                     	;# 
  6247  0210                     	;# 
  6248  0210                     	;# 
  6249  0211                     	;# 
  6250  0211                     	;# 
  6251  0212                     	;# 
  6252  0212                     	;# 
  6253  0213                     	;# 
  6254  0214                     	;# 
  6255  0215                     	;# 
  6256  0215                     	;# 
  6257  0216                     	;# 
  6258  0216                     	;# 
  6259  0217                     	;# 
  6260  0217                     	;# 
  6261  0218                     	;# 
  6262  0218                     	;# 
  6263  0219                     	;# 
  6264  021A                     	;# 
  6265  021B                     	;# 
  6266  021B                     	;# 
  6267  021C                     	;# 
  6268  021C                     	;# 
  6269  021D                     	;# 
  6270  021D                     	;# 
  6271  021E                     	;# 
  6272  021F                     	;# 
  6273  028C                     	;# 
  6274  028C                     	;# 
  6275  028D                     	;# 
  6276  028D                     	;# 
  6277  028E                     	;# 
  6278  028F                     	;# 
  6279  0290                     	;# 
  6280  0290                     	;# 
  6281  0291                     	;# 
  6282  0292                     	;# 
  6283  0292                     	;# 
  6284  0293                     	;# 
  6285  0293                     	;# 
  6286  0294                     	;# 
  6287  0295                     	;# 
  6288  0296                     	;# 
  6289  0296                     	;# 
  6290  0297                     	;# 
  6291  0298                     	;# 
  6292  0298                     	;# 
  6293  0299                     	;# 
  6294  0299                     	;# 
  6295  029A                     	;# 
  6296  029B                     	;# 
  6297  029C                     	;# 
  6298  029C                     	;# 
  6299  029D                     	;# 
  6300  030C                     	;# 
  6301  030C                     	;# 
  6302  030D                     	;# 
  6303  030E                     	;# 
  6304  030F                     	;# 
  6305  0310                     	;# 
  6306  0310                     	;# 
  6307  0311                     	;# 
  6308  0312                     	;# 
  6309  0313                     	;# 
  6310  0314                     	;# 
  6311  0314                     	;# 
  6312  0315                     	;# 
  6313  0316                     	;# 
  6314  0317                     	;# 
  6315  0318                     	;# 
  6316  0318                     	;# 
  6317  0319                     	;# 
  6318  031A                     	;# 
  6319  031B                     	;# 
  6320  031C                     	;# 
  6321  031C                     	;# 
  6322  031D                     	;# 
  6323  031E                     	;# 
  6324  031F                     	;# 
  6325  038C                     	;# 
  6326  038C                     	;# 
  6327  038D                     	;# 
  6328  038E                     	;# 
  6329  0390                     	;# 
  6330  0390                     	;# 
  6331  0391                     	;# 
  6332  0392                     	;# 
  6333  040C                     	;# 
  6334  040D                     	;# 
  6335  040E                     	;# 
  6336  040F                     	;# 
  6337  0410                     	;# 
  6338  0411                     	;# 
  6339  0416                     	;# 
  6340  0416                     	;# 
  6341  0417                     	;# 
  6342  0418                     	;# 
  6343  0418                     	;# 
  6344  0419                     	;# 
  6345  041A                     	;# 
  6346  041A                     	;# 
  6347  041B                     	;# 
  6348  041C                     	;# 
  6349  041C                     	;# 
  6350  041D                     	;# 
  6351  041E                     	;# 
  6352  041F                     	;# 
  6353  048C                     	;# 
  6354  048C                     	;# 
  6355  048D                     	;# 
  6356  048E                     	;# 
  6357  048F                     	;# 
  6358  048F                     	;# 
  6359  0490                     	;# 
  6360  0491                     	;# 
  6361  0492                     	;# 
  6362  0492                     	;# 
  6363  0493                     	;# 
  6364  0494                     	;# 
  6365  0495                     	;# 
  6366  0495                     	;# 
  6367  0496                     	;# 
  6368  0497                     	;# 
  6369  0498                     	;# 
  6370  0499                     	;# 
  6371  049A                     	;# 
  6372  049B                     	;# 
  6373  049C                     	;# 
  6374  049D                     	;# 
  6375  050C                     	;# 
  6376  050C                     	;# 
  6377  050D                     	;# 
  6378  050E                     	;# 
  6379  050F                     	;# 
  6380  050F                     	;# 
  6381  0510                     	;# 
  6382  0511                     	;# 
  6383  0512                     	;# 
  6384  0512                     	;# 
  6385  0513                     	;# 
  6386  0514                     	;# 
  6387  0515                     	;# 
  6388  0515                     	;# 
  6389  0516                     	;# 
  6390  0517                     	;# 
  6391  0518                     	;# 
  6392  0519                     	;# 
  6393  051A                     	;# 
  6394  051B                     	;# 
  6395  051C                     	;# 
  6396  051D                     	;# 
  6397  058C                     	;# 
  6398  058C                     	;# 
  6399  058D                     	;# 
  6400  058E                     	;# 
  6401  058F                     	;# 
  6402  058F                     	;# 
  6403  0590                     	;# 
  6404  0591                     	;# 
  6405  0592                     	;# 
  6406  0593                     	;# 
  6407  060C                     	;# 
  6408  060D                     	;# 
  6409  060E                     	;# 
  6410  060F                     	;# 
  6411  0610                     	;# 
  6412  0611                     	;# 
  6413  0612                     	;# 
  6414  0613                     	;# 
  6415  0614                     	;# 
  6416  0616                     	;# 
  6417  0617                     	;# 
  6418  0618                     	;# 
  6419  0619                     	;# 
  6420  061A                     	;# 
  6421  061B                     	;# 
  6422  061C                     	;# 
  6423  061D                     	;# 
  6424  061E                     	;# 
  6425  068C                     	;# 
  6426  068D                     	;# 
  6427  068E                     	;# 
  6428  068F                     	;# 
  6429  0690                     	;# 
  6430  0691                     	;# 
  6431  0692                     	;# 
  6432  0693                     	;# 
  6433  0694                     	;# 
  6434  070C                     	;# 
  6435  070D                     	;# 
  6436  070E                     	;# 
  6437  070F                     	;# 
  6438  0710                     	;# 
  6439  0711                     	;# 
  6440  0712                     	;# 
  6441  0713                     	;# 
  6442  0714                     	;# 
  6443  0716                     	;# 
  6444  0717                     	;# 
  6445  0718                     	;# 
  6446  0719                     	;# 
  6447  071A                     	;# 
  6448  071B                     	;# 
  6449  071C                     	;# 
  6450  071D                     	;# 
  6451  071E                     	;# 
  6452  0796                     	;# 
  6453  0797                     	;# 
  6454  0798                     	;# 
  6455  0799                     	;# 
  6456  079A                     	;# 
  6457  079B                     	;# 
  6458  080C                     	;# 
  6459  080D                     	;# 
  6460  080E                     	;# 
  6461  080F                     	;# 
  6462  0810                     	;# 
  6463  0811                     	;# 
  6464  0812                     	;# 
  6465  0813                     	;# 
  6466  0814                     	;# 
  6467  081A                     	;# 
  6468  081B                     	;# 
  6469  081C                     	;# 
  6470  081D                     	;# 
  6471  081E                     	;# 
  6472  081F                     	;# 
  6473  088C                     	;# 
  6474  088D                     	;# 
  6475  088E                     	;# 
  6476  088F                     	;# 
  6477  0890                     	;# 
  6478  0891                     	;# 
  6479  0892                     	;# 
  6480  0893                     	;# 
  6481  0895                     	;# 
  6482  0896                     	;# 
  6483  0897                     	;# 
  6484  0898                     	;# 
  6485  0899                     	;# 
  6486  089A                     	;# 
  6487  089B                     	;# 
  6488  090C                     	;# 
  6489  090E                     	;# 
  6490  090F                     	;# 
  6491  091F                     	;# 
  6492  091F                     	;# 
  6493  098F                     	;# 
  6494  098F                     	;# 
  6495  0990                     	;# 
  6496  0991                     	;# 
  6497  0992                     	;# 
  6498  0993                     	;# 
  6499  0994                     	;# 
  6500  0995                     	;# 
  6501  0996                     	;# 
  6502  0997                     	;# 
  6503  0E0F                     	;# 
  6504  0E10                     	;# 
  6505  0E11                     	;# 
  6506  0E12                     	;# 
  6507  0E13                     	;# 
  6508  0E14                     	;# 
  6509  0E15                     	;# 
  6510  0E16                     	;# 
  6511  0E17                     	;# 
  6512  0E18                     	;# 
  6513  0E19                     	;# 
  6514  0E1A                     	;# 
  6515  0E1B                     	;# 
  6516  0E1C                     	;# 
  6517  0E1D                     	;# 
  6518  0E1E                     	;# 
  6519  0E1F                     	;# 
  6520  0E20                     	;# 
  6521  0E21                     	;# 
  6522  0E22                     	;# 
  6523  0E23                     	;# 
  6524  0E24                     	;# 
  6525  0E25                     	;# 
  6526  0E26                     	;# 
  6527  0E27                     	;# 
  6528  0E28                     	;# 
  6529  0E29                     	;# 
  6530  0E2A                     	;# 
  6531  0E2B                     	;# 
  6532  0E2C                     	;# 
  6533  0E2D                     	;# 
  6534  0E2E                     	;# 
  6535  0E2F                     	;# 
  6536  0E30                     	;# 
  6537  0E31                     	;# 
  6538  0E32                     	;# 
  6539  0E33                     	;# 
  6540  0E34                     	;# 
  6541  0E35                     	;# 
  6542  0E36                     	;# 
  6543  0E37                     	;# 
  6544  0E8F                     	;# 
  6545  0E90                     	;# 
  6546  0E91                     	;# 
  6547  0E92                     	;# 
  6548  0E93                     	;# 
  6549  0E94                     	;# 
  6550  0E95                     	;# 
  6551  0E96                     	;# 
  6552  0E97                     	;# 
  6553  0E9C                     	;# 
  6554  0E9D                     	;# 
  6555  0E9E                     	;# 
  6556  0EA1                     	;# 
  6557  0EA2                     	;# 
  6558  0EA3                     	;# 
  6559  0EA4                     	;# 
  6560  0EA5                     	;# 
  6561  0EA9                     	;# 
  6562  0EAA                     	;# 
  6563  0EAB                     	;# 
  6564  0EAC                     	;# 
  6565  0EB1                     	;# 
  6566  0EB2                     	;# 
  6567  0EB3                     	;# 
  6568  0EB8                     	;# 
  6569  0EB9                     	;# 
  6570  0EBA                     	;# 
  6571  0EBB                     	;# 
  6572  0EBC                     	;# 
  6573  0EBD                     	;# 
  6574  0EBE                     	;# 
  6575  0EC3                     	;# 
  6576  0EC5                     	;# 
  6577  0EC6                     	;# 
  6578  0EC7                     	;# 
  6579  0EC8                     	;# 
  6580  0EC9                     	;# 
  6581  0ECA                     	;# 
  6582  0ECB                     	;# 
  6583  0ECC                     	;# 
  6584  0F10                     	;# 
  6585  0F11                     	;# 
  6586  0F12                     	;# 
  6587  0F13                     	;# 
  6588  0F14                     	;# 
  6589  0F15                     	;# 
  6590  0F16                     	;# 
  6591  0F17                     	;# 
  6592  0F18                     	;# 
  6593  0F19                     	;# 
  6594  0F1A                     	;# 
  6595  0F1B                     	;# 
  6596  0F1C                     	;# 
  6597  0F1D                     	;# 
  6598  0F1E                     	;# 
  6599  0F1F                     	;# 
  6600  0F20                     	;# 
  6601  0F21                     	;# 
  6602  0F22                     	;# 
  6603  0F23                     	;# 
  6604  0F24                     	;# 
  6605  0F25                     	;# 
  6606  0F26                     	;# 
  6607  0F27                     	;# 
  6608  0F28                     	;# 
  6609  0F29                     	;# 
  6610  0F2A                     	;# 
  6611  0F2B                     	;# 
  6612  0F2C                     	;# 
  6613  0F2D                     	;# 
  6614  0F2E                     	;# 
  6615  0F2F                     	;# 
  6616  0F30                     	;# 
  6617  0F31                     	;# 
  6618  0F32                     	;# 
  6619  0F38                     	;# 
  6620  0F39                     	;# 
  6621  0F3A                     	;# 
  6622  0F3B                     	;# 
  6623  0F3C                     	;# 
  6624  0F3D                     	;# 
  6625  0F3E                     	;# 
  6626  0F3F                     	;# 
  6627  0F40                     	;# 
  6628  0F41                     	;# 
  6629  0F43                     	;# 
  6630  0F44                     	;# 
  6631  0F45                     	;# 
  6632  0F46                     	;# 
  6633  0F47                     	;# 
  6634  0F48                     	;# 
  6635  0F49                     	;# 
  6636  0F4A                     	;# 
  6637  0F4B                     	;# 
  6638  0F4C                     	;# 
  6639  0F4E                     	;# 
  6640  0F4F                     	;# 
  6641  0F50                     	;# 
  6642  0F51                     	;# 
  6643  0F52                     	;# 
  6644  0F53                     	;# 
  6645  0F54                     	;# 
  6646  0F55                     	;# 
  6647  0F56                     	;# 
  6648  0F57                     	;# 
  6649  0F59                     	;# 
  6650  0F5A                     	;# 
  6651  0F5B                     	;# 
  6652  0F5C                     	;# 
  6653  0F5D                     	;# 
  6654  0F61                     	;# 
  6655  0F62                     	;# 
  6656  0F64                     	;# 
  6657  0F65                     	;# 
  6658  0F66                     	;# 
  6659  0F67                     	;# 
  6660  0F68                     	;# 
  6661  0F69                     	;# 
  6662  0F6A                     	;# 
  6663  0F6B                     	;# 
  6664  0F6C                     	;# 
  6665  0F6D                     	;# 
  6666  0FE4                     	;# 
  6667  0FE5                     	;# 
  6668  0FE6                     	;# 
  6669  0FE7                     	;# 
  6670  0FE8                     	;# 
  6671  0FE9                     	;# 
  6672  0FEA                     	;# 
  6673  0FEB                     	;# 
  6674  0FED                     	;# 
  6675  0FEE                     	;# 
  6676  0FEF                     	;# 
  6677  0000                     	;# 
  6678  0001                     	;# 
  6679  0002                     	;# 
  6680  0003                     	;# 
  6681  0004                     	;# 
  6682  0005                     	;# 
  6683  0006                     	;# 
  6684  0007                     	;# 
  6685  0008                     	;# 
  6686  0009                     	;# 
  6687  000A                     	;# 
  6688  000B                     	;# 
  6689  000C                     	;# 
  6690  000D                     	;# 
  6691  000E                     	;# 
  6692  000F                     	;# 
  6693  0010                     	;# 
  6694  0011                     	;# 
  6695  0012                     	;# 
  6696  0013                     	;# 
  6697  0014                     	;# 
  6698  0015                     	;# 
  6699  0016                     	;# 
  6700  0017                     	;# 
  6701  0018                     	;# 
  6702  0019                     	;# 
  6703  001A                     	;# 
  6704  001C                     	;# 
  6705  001C                     	;# 
  6706  001D                     	;# 
  6707  001D                     	;# 
  6708  001E                     	;# 
  6709  001F                     	;# 
  6710  008C                     	;# 
  6711  008C                     	;# 
  6712  008D                     	;# 
  6713  008E                     	;# 
  6714  008E                     	;# 
  6715  008F                     	;# 
  6716  0090                     	;# 
  6717  0090                     	;# 
  6718  0091                     	;# 
  6719  0093                     	;# 
  6720  0094                     	;# 
  6721  0095                     	;# 
  6722  0096                     	;# 
  6723  0097                     	;# 
  6724  0098                     	;# 
  6725  0099                     	;# 
  6726  009A                     	;# 
  6727  009B                     	;# 
  6728  009C                     	;# 
  6729  009D                     	;# 
  6730  009E                     	;# 
  6731  010C                     	;# 
  6732  010D                     	;# 
  6733  010E                     	;# 
  6734  010E                     	;# 
  6735  010F                     	;# 
  6736  0110                     	;# 
  6737  0110                     	;# 
  6738  0111                     	;# 
  6739  0112                     	;# 
  6740  0112                     	;# 
  6741  0113                     	;# 
  6742  0114                     	;# 
  6743  0114                     	;# 
  6744  0115                     	;# 
  6745  0116                     	;# 
  6746  0116                     	;# 
  6747  0117                     	;# 
  6748  0119                     	;# 
  6749  0119                     	;# 
  6750  0119                     	;# 
  6751  011A                     	;# 
  6752  011A                     	;# 
  6753  011A                     	;# 
  6754  011B                     	;# 
  6755  011B                     	;# 
  6756  011B                     	;# 
  6757  011B                     	;# 
  6758  011B                     	;# 
  6759  011C                     	;# 
  6760  011C                     	;# 
  6761  011C                     	;# 
  6762  011D                     	;# 
  6763  011D                     	;# 
  6764  011D                     	;# 
  6765  011E                     	;# 
  6766  011E                     	;# 
  6767  011E                     	;# 
  6768  011F                     	;# 
  6769  011F                     	;# 
  6770  011F                     	;# 
  6771  011F                     	;# 
  6772  011F                     	;# 
  6773  018C                     	;# 
  6774  018D                     	;# 
  6775  018E                     	;# 
  6776  018F                     	;# 
  6777  0190                     	;# 
  6778  0191                     	;# 
  6779  0192                     	;# 
  6780  0196                     	;# 
  6781  0197                     	;# 
  6782  0198                     	;# 
  6783  0199                     	;# 
  6784  019A                     	;# 
  6785  019B                     	;# 
  6786  019C                     	;# 
  6787  020C                     	;# 
  6788  020C                     	;# 
  6789  020D                     	;# 
  6790  020E                     	;# 
  6791  020F                     	;# 
  6792  020F                     	;# 
  6793  0210                     	;# 
  6794  0210                     	;# 
  6795  0211                     	;# 
  6796  0211                     	;# 
  6797  0212                     	;# 
  6798  0212                     	;# 
  6799  0213                     	;# 
  6800  0214                     	;# 
  6801  0215                     	;# 
  6802  0215                     	;# 
  6803  0216                     	;# 
  6804  0216                     	;# 
  6805  0217                     	;# 
  6806  0217                     	;# 
  6807  0218                     	;# 
  6808  0218                     	;# 
  6809  0219                     	;# 
  6810  021A                     	;# 
  6811  021B                     	;# 
  6812  021B                     	;# 
  6813  021C                     	;# 
  6814  021C                     	;# 
  6815  021D                     	;# 
  6816  021D                     	;# 
  6817  021E                     	;# 
  6818  021F                     	;# 
  6819  028C                     	;# 
  6820  028C                     	;# 
  6821  028D                     	;# 
  6822  028D                     	;# 
  6823  028E                     	;# 
  6824  028F                     	;# 
  6825  0290                     	;# 
  6826  0290                     	;# 
  6827  0291                     	;# 
  6828  0292                     	;# 
  6829  0292                     	;# 
  6830  0293                     	;# 
  6831  0293                     	;# 
  6832  0294                     	;# 
  6833  0295                     	;# 
  6834  0296                     	;# 
  6835  0296                     	;# 
  6836  0297                     	;# 
  6837  0298                     	;# 
  6838  0298                     	;# 
  6839  0299                     	;# 
  6840  0299                     	;# 
  6841  029A                     	;# 
  6842  029B                     	;# 
  6843  029C                     	;# 
  6844  029C                     	;# 
  6845  029D                     	;# 
  6846  030C                     	;# 
  6847  030C                     	;# 
  6848  030D                     	;# 
  6849  030E                     	;# 
  6850  030F                     	;# 
  6851  0310                     	;# 
  6852  0310                     	;# 
  6853  0311                     	;# 
  6854  0312                     	;# 
  6855  0313                     	;# 
  6856  0314                     	;# 
  6857  0314                     	;# 
  6858  0315                     	;# 
  6859  0316                     	;# 
  6860  0317                     	;# 
  6861  0318                     	;# 
  6862  0318                     	;# 
  6863  0319                     	;# 
  6864  031A                     	;# 
  6865  031B                     	;# 
  6866  031C                     	;# 
  6867  031C                     	;# 
  6868  031D                     	;# 
  6869  031E                     	;# 
  6870  031F                     	;# 
  6871  038C                     	;# 
  6872  038C                     	;# 
  6873  038D                     	;# 
  6874  038E                     	;# 
  6875  0390                     	;# 
  6876  0390                     	;# 
  6877  0391                     	;# 
  6878  0392                     	;# 
  6879  040C                     	;# 
  6880  040D                     	;# 
  6881  040E                     	;# 
  6882  040F                     	;# 
  6883  0410                     	;# 
  6884  0411                     	;# 
  6885  0416                     	;# 
  6886  0416                     	;# 
  6887  0417                     	;# 
  6888  0418                     	;# 
  6889  0418                     	;# 
  6890  0419                     	;# 
  6891  041A                     	;# 
  6892  041A                     	;# 
  6893  041B                     	;# 
  6894  041C                     	;# 
  6895  041C                     	;# 
  6896  041D                     	;# 
  6897  041E                     	;# 
  6898  041F                     	;# 
  6899  048C                     	;# 
  6900  048C                     	;# 
  6901  048D                     	;# 
  6902  048E                     	;# 
  6903  048F                     	;# 
  6904  048F                     	;# 
  6905  0490                     	;# 
  6906  0491                     	;# 
  6907  0492                     	;# 
  6908  0492                     	;# 
  6909  0493                     	;# 
  6910  0494                     	;# 
  6911  0495                     	;# 
  6912  0495                     	;# 
  6913  0496                     	;# 
  6914  0497                     	;# 
  6915  0498                     	;# 
  6916  0499                     	;# 
  6917  049A                     	;# 
  6918  049B                     	;# 
  6919  049C                     	;# 
  6920  049D                     	;# 
  6921  050C                     	;# 
  6922  050C                     	;# 
  6923  050D                     	;# 
  6924  050E                     	;# 
  6925  050F                     	;# 
  6926  050F                     	;# 
  6927  0510                     	;# 
  6928  0511                     	;# 
  6929  0512                     	;# 
  6930  0512                     	;# 
  6931  0513                     	;# 
  6932  0514                     	;# 
  6933  0515                     	;# 
  6934  0515                     	;# 
  6935  0516                     	;# 
  6936  0517                     	;# 
  6937  0518                     	;# 
  6938  0519                     	;# 
  6939  051A                     	;# 
  6940  051B                     	;# 
  6941  051C                     	;# 
  6942  051D                     	;# 
  6943  058C                     	;# 
  6944  058C                     	;# 
  6945  058D                     	;# 
  6946  058E                     	;# 
  6947  058F                     	;# 
  6948  058F                     	;# 
  6949  0590                     	;# 
  6950  0591                     	;# 
  6951  0592                     	;# 
  6952  0593                     	;# 
  6953  060C                     	;# 
  6954  060D                     	;# 
  6955  060E                     	;# 
  6956  060F                     	;# 
  6957  0610                     	;# 
  6958  0611                     	;# 
  6959  0612                     	;# 
  6960  0613                     	;# 
  6961  0614                     	;# 
  6962  0616                     	;# 
  6963  0617                     	;# 
  6964  0618                     	;# 
  6965  0619                     	;# 
  6966  061A                     	;# 
  6967  061B                     	;# 
  6968  061C                     	;# 
  6969  061D                     	;# 
  6970  061E                     	;# 
  6971  068C                     	;# 
  6972  068D                     	;# 
  6973  068E                     	;# 
  6974  068F                     	;# 
  6975  0690                     	;# 
  6976  0691                     	;# 
  6977  0692                     	;# 
  6978  0693                     	;# 
  6979  0694                     	;# 
  6980  070C                     	;# 
  6981  070D                     	;# 
  6982  070E                     	;# 
  6983  070F                     	;# 
  6984  0710                     	;# 
  6985  0711                     	;# 
  6986  0712                     	;# 
  6987  0713                     	;# 
  6988  0714                     	;# 
  6989  0716                     	;# 
  6990  0717                     	;# 
  6991  0718                     	;# 
  6992  0719                     	;# 
  6993  071A                     	;# 
  6994  071B                     	;# 
  6995  071C                     	;# 
  6996  071D                     	;# 
  6997  071E                     	;# 
  6998  0796                     	;# 
  6999  0797                     	;# 
  7000  0798                     	;# 
  7001  0799                     	;# 
  7002  079A                     	;# 
  7003  079B                     	;# 
  7004  080C                     	;# 
  7005  080D                     	;# 
  7006  080E                     	;# 
  7007  080F                     	;# 
  7008  0810                     	;# 
  7009  0811                     	;# 
  7010  0812                     	;# 
  7011  0813                     	;# 
  7012  0814                     	;# 
  7013  081A                     	;# 
  7014  081B                     	;# 
  7015  081C                     	;# 
  7016  081D                     	;# 
  7017  081E                     	;# 
  7018  081F                     	;# 
  7019  088C                     	;# 
  7020  088D                     	;# 
  7021  088E                     	;# 
  7022  088F                     	;# 
  7023  0890                     	;# 
  7024  0891                     	;# 
  7025  0892                     	;# 
  7026  0893                     	;# 
  7027  0895                     	;# 
  7028  0896                     	;# 
  7029  0897                     	;# 
  7030  0898                     	;# 
  7031  0899                     	;# 
  7032  089A                     	;# 
  7033  089B                     	;# 
  7034  090C                     	;# 
  7035  090E                     	;# 
  7036  090F                     	;# 
  7037  091F                     	;# 
  7038  091F                     	;# 
  7039  098F                     	;# 
  7040  098F                     	;# 
  7041  0990                     	;# 
  7042  0991                     	;# 
  7043  0992                     	;# 
  7044  0993                     	;# 
  7045  0994                     	;# 
  7046  0995                     	;# 
  7047  0996                     	;# 
  7048  0997                     	;# 
  7049  0E0F                     	;# 
  7050  0E10                     	;# 
  7051  0E11                     	;# 
  7052  0E12                     	;# 
  7053  0E13                     	;# 
  7054  0E14                     	;# 
  7055  0E15                     	;# 
  7056  0E16                     	;# 
  7057  0E17                     	;# 
  7058  0E18                     	;# 
  7059  0E19                     	;# 
  7060  0E1A                     	;# 
  7061  0E1B                     	;# 
  7062  0E1C                     	;# 
  7063  0E1D                     	;# 
  7064  0E1E                     	;# 
  7065  0E1F                     	;# 
  7066  0E20                     	;# 
  7067  0E21                     	;# 
  7068  0E22                     	;# 
  7069  0E23                     	;# 
  7070  0E24                     	;# 
  7071  0E25                     	;# 
  7072  0E26                     	;# 
  7073  0E27                     	;# 
  7074  0E28                     	;# 
  7075  0E29                     	;# 
  7076  0E2A                     	;# 
  7077  0E2B                     	;# 
  7078  0E2C                     	;# 
  7079  0E2D                     	;# 
  7080  0E2E                     	;# 
  7081  0E2F                     	;# 
  7082  0E30                     	;# 
  7083  0E31                     	;# 
  7084  0E32                     	;# 
  7085  0E33                     	;# 
  7086  0E34                     	;# 
  7087  0E35                     	;# 
  7088  0E36                     	;# 
  7089  0E37                     	;# 
  7090  0E8F                     	;# 
  7091  0E90                     	;# 
  7092  0E91                     	;# 
  7093  0E92                     	;# 
  7094  0E93                     	;# 
  7095  0E94                     	;# 
  7096  0E95                     	;# 
  7097  0E96                     	;# 
  7098  0E97                     	;# 
  7099  0E9C                     	;# 
  7100  0E9D                     	;# 
  7101  0E9E                     	;# 
  7102  0EA1                     	;# 
  7103  0EA2                     	;# 
  7104  0EA3                     	;# 
  7105  0EA4                     	;# 
  7106  0EA5                     	;# 
  7107  0EA9                     	;# 
  7108  0EAA                     	;# 
  7109  0EAB                     	;# 
  7110  0EAC                     	;# 
  7111  0EB1                     	;# 
  7112  0EB2                     	;# 
  7113  0EB3                     	;# 
  7114  0EB8                     	;# 
  7115  0EB9                     	;# 
  7116  0EBA                     	;# 
  7117  0EBB                     	;# 
  7118  0EBC                     	;# 
  7119  0EBD                     	;# 
  7120  0EBE                     	;# 
  7121  0EC3                     	;# 
  7122  0EC5                     	;# 
  7123  0EC6                     	;# 
  7124  0EC7                     	;# 
  7125  0EC8                     	;# 
  7126  0EC9                     	;# 
  7127  0ECA                     	;# 
  7128  0ECB                     	;# 
  7129  0ECC                     	;# 
  7130  0F10                     	;# 
  7131  0F11                     	;# 
  7132  0F12                     	;# 
  7133  0F13                     	;# 
  7134  0F14                     	;# 
  7135  0F15                     	;# 
  7136  0F16                     	;# 
  7137  0F17                     	;# 
  7138  0F18                     	;# 
  7139  0F19                     	;# 
  7140  0F1A                     	;# 
  7141  0F1B                     	;# 
  7142  0F1C                     	;# 
  7143  0F1D                     	;# 
  7144  0F1E                     	;# 
  7145  0F1F                     	;# 
  7146  0F20                     	;# 
  7147  0F21                     	;# 
  7148  0F22                     	;# 
  7149  0F23                     	;# 
  7150  0F24                     	;# 
  7151  0F25                     	;# 
  7152  0F26                     	;# 
  7153  0F27                     	;# 
  7154  0F28                     	;# 
  7155  0F29                     	;# 
  7156  0F2A                     	;# 
  7157  0F2B                     	;# 
  7158  0F2C                     	;# 
  7159  0F2D                     	;# 
  7160  0F2E                     	;# 
  7161  0F2F                     	;# 
  7162  0F30                     	;# 
  7163  0F31                     	;# 
  7164  0F32                     	;# 
  7165  0F38                     	;# 
  7166  0F39                     	;# 
  7167  0F3A                     	;# 
  7168  0F3B                     	;# 
  7169  0F3C                     	;# 
  7170  0F3D                     	;# 
  7171  0F3E                     	;# 
  7172  0F3F                     	;# 
  7173  0F40                     	;# 
  7174  0F41                     	;# 
  7175  0F43                     	;# 
  7176  0F44                     	;# 
  7177  0F45                     	;# 
  7178  0F46                     	;# 
  7179  0F47                     	;# 
  7180  0F48                     	;# 
  7181  0F49                     	;# 
  7182  0F4A                     	;# 
  7183  0F4B                     	;# 
  7184  0F4C                     	;# 
  7185  0F4E                     	;# 
  7186  0F4F                     	;# 
  7187  0F50                     	;# 
  7188  0F51                     	;# 
  7189  0F52                     	;# 
  7190  0F53                     	;# 
  7191  0F54                     	;# 
  7192  0F55                     	;# 
  7193  0F56                     	;# 
  7194  0F57                     	;# 
  7195  0F59                     	;# 
  7196  0F5A                     	;# 
  7197  0F5B                     	;# 
  7198  0F5C                     	;# 
  7199  0F5D                     	;# 
  7200  0F61                     	;# 
  7201  0F62                     	;# 
  7202  0F64                     	;# 
  7203  0F65                     	;# 
  7204  0F66                     	;# 
  7205  0F67                     	;# 
  7206  0F68                     	;# 
  7207  0F69                     	;# 
  7208  0F6A                     	;# 
  7209  0F6B                     	;# 
  7210  0F6C                     	;# 
  7211  0F6D                     	;# 
  7212  0FE4                     	;# 
  7213  0FE5                     	;# 
  7214  0FE6                     	;# 
  7215  0FE7                     	;# 
  7216  0FE8                     	;# 
  7217  0FE9                     	;# 
  7218  0FEA                     	;# 
  7219  0FEB                     	;# 
  7220  0FED                     	;# 
  7221  0FEE                     	;# 
  7222  0FEF                     	;# 
  7223  0000                     	;# 
  7224  0001                     	;# 
  7225  0002                     	;# 
  7226  0003                     	;# 
  7227  0004                     	;# 
  7228  0005                     	;# 
  7229  0006                     	;# 
  7230  0007                     	;# 
  7231  0008                     	;# 
  7232  0009                     	;# 
  7233  000A                     	;# 
  7234  000B                     	;# 
  7235  000C                     	;# 
  7236  000D                     	;# 
  7237  000E                     	;# 
  7238  000F                     	;# 
  7239  0010                     	;# 
  7240  0011                     	;# 
  7241  0012                     	;# 
  7242  0013                     	;# 
  7243  0014                     	;# 
  7244  0015                     	;# 
  7245  0016                     	;# 
  7246  0017                     	;# 
  7247  0018                     	;# 
  7248  0019                     	;# 
  7249  001A                     	;# 
  7250  001C                     	;# 
  7251  001C                     	;# 
  7252  001D                     	;# 
  7253  001D                     	;# 
  7254  001E                     	;# 
  7255  001F                     	;# 
  7256  008C                     	;# 
  7257  008C                     	;# 
  7258  008D                     	;# 
  7259  008E                     	;# 
  7260  008E                     	;# 
  7261  008F                     	;# 
  7262  0090                     	;# 
  7263  0090                     	;# 
  7264  0091                     	;# 
  7265  0093                     	;# 
  7266  0094                     	;# 
  7267  0095                     	;# 
  7268  0096                     	;# 
  7269  0097                     	;# 
  7270  0098                     	;# 
  7271  0099                     	;# 
  7272  009A                     	;# 
  7273  009B                     	;# 
  7274  009C                     	;# 
  7275  009D                     	;# 
  7276  009E                     	;# 
  7277  010C                     	;# 
  7278  010D                     	;# 
  7279  010E                     	;# 
  7280  010E                     	;# 
  7281  010F                     	;# 
  7282  0110                     	;# 
  7283  0110                     	;# 
  7284  0111                     	;# 
  7285  0112                     	;# 
  7286  0112                     	;# 
  7287  0113                     	;# 
  7288  0114                     	;# 
  7289  0114                     	;# 
  7290  0115                     	;# 
  7291  0116                     	;# 
  7292  0116                     	;# 
  7293  0117                     	;# 
  7294  0119                     	;# 
  7295  0119                     	;# 
  7296  0119                     	;# 
  7297  011A                     	;# 
  7298  011A                     	;# 
  7299  011A                     	;# 
  7300  011B                     	;# 
  7301  011B                     	;# 
  7302  011B                     	;# 
  7303  011B                     	;# 
  7304  011B                     	;# 
  7305  011C                     	;# 
  7306  011C                     	;# 
  7307  011C                     	;# 
  7308  011D                     	;# 
  7309  011D                     	;# 
  7310  011D                     	;# 
  7311  011E                     	;# 
  7312  011E                     	;# 
  7313  011E                     	;# 
  7314  011F                     	;# 
  7315  011F                     	;# 
  7316  011F                     	;# 
  7317  011F                     	;# 
  7318  011F                     	;# 
  7319  018C                     	;# 
  7320  018D                     	;# 
  7321  018E                     	;# 
  7322  018F                     	;# 
  7323  0190                     	;# 
  7324  0191                     	;# 
  7325  0192                     	;# 
  7326  0196                     	;# 
  7327  0197                     	;# 
  7328  0198                     	;# 
  7329  0199                     	;# 
  7330  019A                     	;# 
  7331  019B                     	;# 
  7332  019C                     	;# 
  7333  020C                     	;# 
  7334  020C                     	;# 
  7335  020D                     	;# 
  7336  020E                     	;# 
  7337  020F                     	;# 
  7338  020F                     	;# 
  7339  0210                     	;# 
  7340  0210                     	;# 
  7341  0211                     	;# 
  7342  0211                     	;# 
  7343  0212                     	;# 
  7344  0212                     	;# 
  7345  0213                     	;# 
  7346  0214                     	;# 
  7347  0215                     	;# 
  7348  0215                     	;# 
  7349  0216                     	;# 
  7350  0216                     	;# 
  7351  0217                     	;# 
  7352  0217                     	;# 
  7353  0218                     	;# 
  7354  0218                     	;# 
  7355  0219                     	;# 
  7356  021A                     	;# 
  7357  021B                     	;# 
  7358  021B                     	;# 
  7359  021C                     	;# 
  7360  021C                     	;# 
  7361  021D                     	;# 
  7362  021D                     	;# 
  7363  021E                     	;# 
  7364  021F                     	;# 
  7365  028C                     	;# 
  7366  028C                     	;# 
  7367  028D                     	;# 
  7368  028D                     	;# 
  7369  028E                     	;# 
  7370  028F                     	;# 
  7371  0290                     	;# 
  7372  0290                     	;# 
  7373  0291                     	;# 
  7374  0292                     	;# 
  7375  0292                     	;# 
  7376  0293                     	;# 
  7377  0293                     	;# 
  7378  0294                     	;# 
  7379  0295                     	;# 
  7380  0296                     	;# 
  7381  0296                     	;# 
  7382  0297                     	;# 
  7383  0298                     	;# 
  7384  0298                     	;# 
  7385  0299                     	;# 
  7386  0299                     	;# 
  7387  029A                     	;# 
  7388  029B                     	;# 
  7389  029C                     	;# 
  7390  029C                     	;# 
  7391  029D                     	;# 
  7392  030C                     	;# 
  7393  030C                     	;# 
  7394  030D                     	;# 
  7395  030E                     	;# 
  7396  030F                     	;# 
  7397  0310                     	;# 
  7398  0310                     	;# 
  7399  0311                     	;# 
  7400  0312                     	;# 
  7401  0313                     	;# 
  7402  0314                     	;# 
  7403  0314                     	;# 
  7404  0315                     	;# 
  7405  0316                     	;# 
  7406  0317                     	;# 
  7407  0318                     	;# 
  7408  0318                     	;# 
  7409  0319                     	;# 
  7410  031A                     	;# 
  7411  031B                     	;# 
  7412  031C                     	;# 
  7413  031C                     	;# 
  7414  031D                     	;# 
  7415  031E                     	;# 
  7416  031F                     	;# 
  7417  038C                     	;# 
  7418  038C                     	;# 
  7419  038D                     	;# 
  7420  038E                     	;# 
  7421  0390                     	;# 
  7422  0390                     	;# 
  7423  0391                     	;# 
  7424  0392                     	;# 
  7425  040C                     	;# 
  7426  040D                     	;# 
  7427  040E                     	;# 
  7428  040F                     	;# 
  7429  0410                     	;# 
  7430  0411                     	;# 
  7431  0416                     	;# 
  7432  0416                     	;# 
  7433  0417                     	;# 
  7434  0418                     	;# 
  7435  0418                     	;# 
  7436  0419                     	;# 
  7437  041A                     	;# 
  7438  041A                     	;# 
  7439  041B                     	;# 
  7440  041C                     	;# 
  7441  041C                     	;# 
  7442  041D                     	;# 
  7443  041E                     	;# 
  7444  041F                     	;# 
  7445  048C                     	;# 
  7446  048C                     	;# 
  7447  048D                     	;# 
  7448  048E                     	;# 
  7449  048F                     	;# 
  7450  048F                     	;# 
  7451  0490                     	;# 
  7452  0491                     	;# 
  7453  0492                     	;# 
  7454  0492                     	;# 
  7455  0493                     	;# 
  7456  0494                     	;# 
  7457  0495                     	;# 
  7458  0495                     	;# 
  7459  0496                     	;# 
  7460  0497                     	;# 
  7461  0498                     	;# 
  7462  0499                     	;# 
  7463  049A                     	;# 
  7464  049B                     	;# 
  7465  049C                     	;# 
  7466  049D                     	;# 
  7467  050C                     	;# 
  7468  050C                     	;# 
  7469  050D                     	;# 
  7470  050E                     	;# 
  7471  050F                     	;# 
  7472  050F                     	;# 
  7473  0510                     	;# 
  7474  0511                     	;# 
  7475  0512                     	;# 
  7476  0512                     	;# 
  7477  0513                     	;# 
  7478  0514                     	;# 
  7479  0515                     	;# 
  7480  0515                     	;# 
  7481  0516                     	;# 
  7482  0517                     	;# 
  7483  0518                     	;# 
  7484  0519                     	;# 
  7485  051A                     	;# 
  7486  051B                     	;# 
  7487  051C                     	;# 
  7488  051D                     	;# 
  7489  058C                     	;# 
  7490  058C                     	;# 
  7491  058D                     	;# 
  7492  058E                     	;# 
  7493  058F                     	;# 
  7494  058F                     	;# 
  7495  0590                     	;# 
  7496  0591                     	;# 
  7497  0592                     	;# 
  7498  0593                     	;# 
  7499  060C                     	;# 
  7500  060D                     	;# 
  7501  060E                     	;# 
  7502  060F                     	;# 
  7503  0610                     	;# 
  7504  0611                     	;# 
  7505  0612                     	;# 
  7506  0613                     	;# 
  7507  0614                     	;# 
  7508  0616                     	;# 
  7509  0617                     	;# 
  7510  0618                     	;# 
  7511  0619                     	;# 
  7512  061A                     	;# 
  7513  061B                     	;# 
  7514  061C                     	;# 
  7515  061D                     	;# 
  7516  061E                     	;# 
  7517  068C                     	;# 
  7518  068D                     	;# 
  7519  068E                     	;# 
  7520  068F                     	;# 
  7521  0690                     	;# 
  7522  0691                     	;# 
  7523  0692                     	;# 
  7524  0693                     	;# 
  7525  0694                     	;# 
  7526  070C                     	;# 
  7527  070D                     	;# 
  7528  070E                     	;# 
  7529  070F                     	;# 
  7530  0710                     	;# 
  7531  0711                     	;# 
  7532  0712                     	;# 
  7533  0713                     	;# 
  7534  0714                     	;# 
  7535  0716                     	;# 
  7536  0717                     	;# 
  7537  0718                     	;# 
  7538  0719                     	;# 
  7539  071A                     	;# 
  7540  071B                     	;# 
  7541  071C                     	;# 
  7542  071D                     	;# 
  7543  071E                     	;# 
  7544  0796                     	;# 
  7545  0797                     	;# 
  7546  0798                     	;# 
  7547  0799                     	;# 
  7548  079A                     	;# 
  7549  079B                     	;# 
  7550  080C                     	;# 
  7551  080D                     	;# 
  7552  080E                     	;# 
  7553  080F                     	;# 
  7554  0810                     	;# 
  7555  0811                     	;# 
  7556  0812                     	;# 
  7557  0813                     	;# 
  7558  0814                     	;# 
  7559  081A                     	;# 
  7560  081B                     	;# 
  7561  081C                     	;# 
  7562  081D                     	;# 
  7563  081E                     	;# 
  7564  081F                     	;# 
  7565  088C                     	;# 
  7566  088D                     	;# 
  7567  088E                     	;# 
  7568  088F                     	;# 
  7569  0890                     	;# 
  7570  0891                     	;# 
  7571  0892                     	;# 
  7572  0893                     	;# 
  7573  0895                     	;# 
  7574  0896                     	;# 
  7575  0897                     	;# 
  7576  0898                     	;# 
  7577  0899                     	;# 
  7578  089A                     	;# 
  7579  089B                     	;# 
  7580  090C                     	;# 
  7581  090E                     	;# 
  7582  090F                     	;# 
  7583  091F                     	;# 
  7584  091F                     	;# 
  7585  098F                     	;# 
  7586  098F                     	;# 
  7587  0990                     	;# 
  7588  0991                     	;# 
  7589  0992                     	;# 
  7590  0993                     	;# 
  7591  0994                     	;# 
  7592  0995                     	;# 
  7593  0996                     	;# 
  7594  0997                     	;# 
  7595  0E0F                     	;# 
  7596  0E10                     	;# 
  7597  0E11                     	;# 
  7598  0E12                     	;# 
  7599  0E13                     	;# 
  7600  0E14                     	;# 
  7601  0E15                     	;# 
  7602  0E16                     	;# 
  7603  0E17                     	;# 
  7604  0E18                     	;# 
  7605  0E19                     	;# 
  7606  0E1A                     	;# 
  7607  0E1B                     	;# 
  7608  0E1C                     	;# 
  7609  0E1D                     	;# 
  7610  0E1E                     	;# 
  7611  0E1F                     	;# 
  7612  0E20                     	;# 
  7613  0E21                     	;# 
  7614  0E22                     	;# 
  7615  0E23                     	;# 
  7616  0E24                     	;# 
  7617  0E25                     	;# 
  7618  0E26                     	;# 
  7619  0E27                     	;# 
  7620  0E28                     	;# 
  7621  0E29                     	;# 
  7622  0E2A                     	;# 
  7623  0E2B                     	;# 
  7624  0E2C                     	;# 
  7625  0E2D                     	;# 
  7626  0E2E                     	;# 
  7627  0E2F                     	;# 
  7628  0E30                     	;# 
  7629  0E31                     	;# 
  7630  0E32                     	;# 
  7631  0E33                     	;# 
  7632  0E34                     	;# 
  7633  0E35                     	;# 
  7634  0E36                     	;# 
  7635  0E37                     	;# 
  7636  0E8F                     	;# 
  7637  0E90                     	;# 
  7638  0E91                     	;# 
  7639  0E92                     	;# 
  7640  0E93                     	;# 
  7641  0E94                     	;# 
  7642  0E95                     	;# 
  7643  0E96                     	;# 
  7644  0E97                     	;# 
  7645  0E9C                     	;# 
  7646  0E9D                     	;# 
  7647  0E9E                     	;# 
  7648  0EA1                     	;# 
  7649  0EA2                     	;# 
  7650  0EA3                     	;# 
  7651  0EA4                     	;# 
  7652  0EA5                     	;# 
  7653  0EA9                     	;# 
  7654  0EAA                     	;# 
  7655  0EAB                     	;# 
  7656  0EAC                     	;# 
  7657  0EB1                     	;# 
  7658  0EB2                     	;# 
  7659  0EB3                     	;# 
  7660  0EB8                     	;# 
  7661  0EB9                     	;# 
  7662  0EBA                     	;# 
  7663  0EBB                     	;# 
  7664  0EBC                     	;# 
  7665  0EBD                     	;# 
  7666  0EBE                     	;# 
  7667  0EC3                     	;# 
  7668  0EC5                     	;# 
  7669  0EC6                     	;# 
  7670  0EC7                     	;# 
  7671  0EC8                     	;# 
  7672  0EC9                     	;# 
  7673  0ECA                     	;# 
  7674  0ECB                     	;# 
  7675  0ECC                     	;# 
  7676  0F10                     	;# 
  7677  0F11                     	;# 
  7678  0F12                     	;# 
  7679  0F13                     	;# 
  7680  0F14                     	;# 
  7681  0F15                     	;# 
  7682  0F16                     	;# 
  7683  0F17                     	;# 
  7684  0F18                     	;# 
  7685  0F19                     	;# 
  7686  0F1A                     	;# 
  7687  0F1B                     	;# 
  7688  0F1C                     	;# 
  7689  0F1D                     	;# 
  7690  0F1E                     	;# 
  7691  0F1F                     	;# 
  7692  0F20                     	;# 
  7693  0F21                     	;# 
  7694  0F22                     	;# 
  7695  0F23                     	;# 
  7696  0F24                     	;# 
  7697  0F25                     	;# 
  7698  0F26                     	;# 
  7699  0F27                     	;# 
  7700  0F28                     	;# 
  7701  0F29                     	;# 
  7702  0F2A                     	;# 
  7703  0F2B                     	;# 
  7704  0F2C                     	;# 
  7705  0F2D                     	;# 
  7706  0F2E                     	;# 
  7707  0F2F                     	;# 
  7708  0F30                     	;# 
  7709  0F31                     	;# 
  7710  0F32                     	;# 
  7711  0F38                     	;# 
  7712  0F39                     	;# 
  7713  0F3A                     	;# 
  7714  0F3B                     	;# 
  7715  0F3C                     	;# 
  7716  0F3D                     	;# 
  7717  0F3E                     	;# 
  7718  0F3F                     	;# 
  7719  0F40                     	;# 
  7720  0F41                     	;# 
  7721  0F43                     	;# 
  7722  0F44                     	;# 
  7723  0F45                     	;# 
  7724  0F46                     	;# 
  7725  0F47                     	;# 
  7726  0F48                     	;# 
  7727  0F49                     	;# 
  7728  0F4A                     	;# 
  7729  0F4B                     	;# 
  7730  0F4C                     	;# 
  7731  0F4E                     	;# 
  7732  0F4F                     	;# 
  7733  0F50                     	;# 
  7734  0F51                     	;# 
  7735  0F52                     	;# 
  7736  0F53                     	;# 
  7737  0F54                     	;# 
  7738  0F55                     	;# 
  7739  0F56                     	;# 
  7740  0F57                     	;# 
  7741  0F59                     	;# 
  7742  0F5A                     	;# 
  7743  0F5B                     	;# 
  7744  0F5C                     	;# 
  7745  0F5D                     	;# 
  7746  0F61                     	;# 
  7747  0F62                     	;# 
  7748  0F64                     	;# 
  7749  0F65                     	;# 
  7750  0F66                     	;# 
  7751  0F67                     	;# 
  7752  0F68                     	;# 
  7753  0F69                     	;# 
  7754  0F6A                     	;# 
  7755  0F6B                     	;# 
  7756  0F6C                     	;# 
  7757  0F6D                     	;# 
  7758  0FE4                     	;# 
  7759  0FE5                     	;# 
  7760  0FE6                     	;# 
  7761  0FE7                     	;# 
  7762  0FE8                     	;# 
  7763  0FE9                     	;# 
  7764  0FEA                     	;# 
  7765  0FEB                     	;# 
  7766  0FED                     	;# 
  7767  0FEE                     	;# 
  7768  0FEF                     	;# 
  7769                           
  7770                           	psect	idataBANK0
  7771  170A                     __pidataBANK0:
  7772                           
  7773                           ;initializer for _prevLumLevel
  7774  170A  34FF               	retlw	255
  7775  170B  34FF               	retlw	255
  7776                           
  7777                           ;initializer for _prevTemp
  7778  170C  34FF               	retlw	255
  7779  170D  34FF               	retlw	255
  7780                           
  7781                           	psect	idataBANK1
  7782  16FB                     __pidataBANK1:
  7783                           
  7784                           ;initializer for _alarmPWMStart
  7785  16FB  34FF               	retlw	255
  7786  16FC  34FF               	retlw	255
  7787  16FD  34FF               	retlw	255
  7788                           
  7789                           	psect	stringtext1
  7790  180F                     __pstringtext1:
  7791  180F                     _dpowers:
  7792  180F  3401               	retlw	1
  7793  1810  3400               	retlw	0
  7794  1811  340A               	retlw	10
  7795  1812  3400               	retlw	0
  7796  1813  3464               	retlw	100
  7797  1814  3400               	retlw	0
  7798  1815  34E8               	retlw	232
  7799  1816  3403               	retlw	3
  7800  1817  3410               	retlw	16
  7801  1818  3427               	retlw	39
  7802  1819                     __end_of_dpowers:
  7803                           
  7804                           	psect	nvBANK0
  7805  0068                     __pnvBANK0:
  7806  0068                     _timer5ReloadVal:
  7807  0068                     	ds	2
  7808  006A                     _timer3ReloadVal:
  7809  006A                     	ds	2
  7810                           
  7811                           	psect	nvBANK1
  7812  00B1                     __pnvBANK1:
  7813  00B1                     _TMR5_InterruptHandler:
  7814  00B1                     	ds	2
  7815  00B3                     _TMR3_InterruptHandler:
  7816  00B3                     	ds	2
  7817  00B5                     _TMR1_InterruptHandler:
  7818  00B5                     	ds	2
  7819  00B7                     _timer1ReloadVal:
  7820  00B7                     	ds	2
  7821  0013                     _TRISCbits	set	19
  7822  000E                     _PORTCbits	set	14
  7823  000D                     _PORTBbits	set	13
  7824  0016                     _LATAbits	set	22
  7825  000B                     _INTCONbits	set	11
  7826  0014                     _TRISD	set	20
  7827  0013                     _TRISC	set	19
  7828  0012                     _TRISB	set	18
  7829  0011                     _TRISA	set	17
  7830  0015                     _TRISE	set	21
  7831  0018                     _LATC	set	24
  7832  0017                     _LATB	set	23
  7833  0016                     _LATA	set	22
  7834  0019                     _LATD	set	25
  7835  001A                     _LATE	set	26
  7836  0094                     _ADCON1bits	set	148
  7837  008E                     _ADPREVL	set	142
  7838  008F                     _ADPREVH	set	143
  7839  0097                     _ADSTATbits	set	151
  7840  0090                     _ADACCL	set	144
  7841  0091                     _ADACCH	set	145
  7842  0095                     _ADCON2bits	set	149
  7843  009C                     _ADPRE	set	156
  7844  0096                     _ADCON3bits	set	150
  7845  008C                     _ADRESL	set	140
  7846  008D                     _ADRESH	set	141
  7847  0093                     _ADCON0bits	set	147
  7848  009D                     _ADACQ	set	157
  7849  0093                     _ADCON0	set	147
  7850  0098                     _ADCLK	set	152
  7851  0099                     _ADACT	set	153
  7852  009A                     _ADREF	set	154
  7853  0097                     _ADSTAT	set	151
  7854  0096                     _ADCON3	set	150
  7855  0095                     _ADCON2	set	149
  7856  0094                     _ADCON1	set	148
  7857  009B                     _ADCAP	set	155
  7858  009E                     _ADPCH	set	158
  7859  0116                     _ADERRL	set	278
  7860  0117                     _ADERRH	set	279
  7861  0114                     _ADFLTRL	set	276
  7862  0115                     _ADFLTRH	set	277
  7863  010C                     _ADCNT	set	268
  7864  010D                     _ADRPT	set	269
  7865  0113                     _ADSTPTH	set	275
  7866  0112                     _ADSTPTL	set	274
  7867  0111                     _ADUTHH	set	273
  7868  0110                     _ADUTHL	set	272
  7869  010F                     _ADLTHH	set	271
  7870  010E                     _ADLTHL	set	270
  7871  018E                     _SSP1MSK	set	398
  7872  018D                     _SSP1ADD	set	397
  7873  018F                     _SSP1STAT	set	399
  7874  0191                     _SSP1CON2	set	401
  7875  0190                     _SSP1CON1bits	set	400
  7876  018C                     _SSP1BUF	set	396
  7877  018F                     _SSP1STATbits	set	399
  7878  0191                     _SSP1CON2bits	set	401
  7879  0190                     _SSP1CON1	set	400
  7880  021F                     _CCPTMRS1bits	set	543
  7881  021B                     _T5GCONbits	set	539
  7882  021A                     _T5CONbits	set	538
  7883  021A                     _T5CON	set	538
  7884  0218                     _TMR5L	set	536
  7885  0219                     _TMR5H	set	537
  7886  021D                     _T5CLK	set	541
  7887  021C                     _T5GATE	set	540
  7888  021B                     _T5GCON	set	539
  7889  0215                     _T3GCONbits	set	533
  7890  0214                     _T3CONbits	set	532
  7891  0214                     _T3CON	set	532
  7892  0212                     _TMR3L	set	530
  7893  0213                     _TMR3H	set	531
  7894  0217                     _T3CLK	set	535
  7895  0216                     _T3GATE	set	534
  7896  0215                     _T3GCON	set	533
  7897  020F                     _T1GCONbits	set	527
  7898  020E                     _T1CONbits	set	526
  7899  020E                     _T1CON	set	526
  7900  020C                     _TMR1L	set	524
  7901  020D                     _TMR1H	set	525
  7902  0211                     _T1CLK	set	529
  7903  0210                     _T1GATE	set	528
  7904  020F                     _T1GCON	set	527
  7905  028D                     _PR2	set	653
  7906  028C                     _TMR2	set	652
  7907  028E                     _T2CONbits	set	654
  7908  0291                     _T2RSTbits	set	657
  7909  028F                     _T2HLTbits	set	655
  7910  028E                     _T2CON	set	654
  7911  028C                     _T2TMR	set	652
  7912  028D                     _T2PR	set	653
  7913  0291                     _T2RST	set	657
  7914  028F                     _T2HLT	set	655
  7915  0290                     _T2CLKCON	set	656
  7916  038C                     _PWM6DCL	set	908
  7917  038D                     _PWM6DCH	set	909
  7918  038E                     _PWM6CON	set	910
  7919  1C77                     _PWM6EN	set	7287
  7920  0710                     _PIR4bits	set	1808
  7921  071A                     _PIE4bits	set	1818
  7922  0719                     _PIE3bits	set	1817
  7923  070F                     _PIR3bits	set	1807
  7924  079B                     _PMD5	set	1947
  7925  079A                     _PMD4	set	1946
  7926  0799                     _PMD3	set	1945
  7927  0798                     _PMD2	set	1944
  7928  0797                     _PMD1	set	1943
  7929  0796                     _PMD0	set	1942
  7930  081F                     _NVMCON2	set	2079
  7931  081C                     _NVMDATL	set	2076
  7932  081D                     _NVMDATH	set	2077
  7933  081E                     _NVMCON1bits	set	2078
  7934  081B                     _NVMADRH	set	2075
  7935  081A                     _NVMADRL	set	2074
  7936  0892                     _OSCTUNE	set	2194
  7937  0893                     _OSCFRQ	set	2195
  7938  0891                     _OSCEN	set	2193
  7939  088F                     _OSCCON3	set	2191
  7940  088D                     _OSCCON1	set	2189
  7941  0EC6                     _SSP1DATPPS	set	3782
  7942  0EC5                     _SSP1CLKPPS	set	3781
  7943  0F16                     _RA6PPS	set	3862
  7944  0F24                     _RC4PPS	set	3876
  7945  0F23                     _RC3PPS	set	3875
  7946  0F67                     _SLRCONE	set	3943
  7947  0F5C                     _SLRCOND	set	3932
  7948  0F51                     _SLRCONC	set	3921
  7949  0F46                     _SLRCONB	set	3910
  7950  0F3B                     _SLRCONA	set	3899
  7951  0F5B                     _ODCOND	set	3931
  7952  0F50                     _ODCONC	set	3920
  7953  0F45                     _ODCONB	set	3909
  7954  0F3A                     _ODCONA	set	3898
  7955  0F66                     _ODCONE	set	3942
  7956  0F4F                     _WPUC	set	3919
  7957  0F39                     _WPUA	set	3897
  7958  0F44                     _WPUB	set	3908
  7959  0F65                     _WPUE	set	3941
  7960  0F5A                     _WPUD	set	3930
  7961  0F38                     _ANSELA	set	3896
  7962  0F64                     _ANSELE	set	3940
  7963  0F43                     _ANSELB	set	3907
  7964  0F4E                     _ANSELC	set	3918
  7965  0F59                     _ANSELD	set	3929
  7966  7A7C                     _WPUC4	set	31356
  7967  7A7B                     _WPUC3	set	31355
  7968                           
  7969                           	psect	stringtext2
  7970  1800                     __pstringtext2:
  7971  1800                     STR_1:
  7972  1800  3425               	retlw	37	;'%'
  7973  1801  3430               	retlw	48	;'0'
  7974  1802  3432               	retlw	50	;'2'
  7975  1803  3464               	retlw	100	;'d'
  7976  1804  343A               	retlw	58	;':'
  7977  1805  3425               	retlw	37	;'%'
  7978  1806  3430               	retlw	48	;'0'
  7979  1807  3432               	retlw	50	;'2'
  7980  1808  3464               	retlw	100	;'d'
  7981  1809  343A               	retlw	58	;':'
  7982  180A  3425               	retlw	37	;'%'
  7983  180B  3430               	retlw	48	;'0'
  7984  180C  3432               	retlw	50	;'2'
  7985  180D  3464               	retlw	100	;'d'
  7986  180E  3400               	retlw	0
  7987                           
  7988                           	psect	stringtext3
  7989  1819                     __pstringtext3:
  7990  1819                     STR_3:
  7991  1819  3425               	retlw	37	;'%'
  7992  181A  3430               	retlw	48	;'0'
  7993  181B  3432               	retlw	50	;'2'
  7994  181C  3464               	retlw	100	;'d'
  7995  181D  3420               	retlw	32	;' '
  7996  181E  3443               	retlw	67	;'C'
  7997  181F  3400               	retlw	0
  7998                           
  7999                           	psect	stringtext4
  8000  1820                     __pstringtext4:
  8001  1820                     STR_5:
  8002  1820  344C               	retlw	76	;'L'
  8003  1821  3420               	retlw	32	;' '
  8004  1822  3425               	retlw	37	;'%'
  8005  1823  3464               	retlw	100	;'d'
  8006  1824  3400               	retlw	0
  8007                           
  8008                           	psect	stringtext5
  8009  0000                     __pstringtext5:
  8010  1819                     
  8011                           	psect	cinit
  8012  0042                     start_initialization:	
  8013                           ; #config settings
  8014                           
  8015  0042                     __initialization:
  8016                           
  8017                           ; Initialize objects allocated to BANK0
  8018  0042  3197  270A  3180   	fcall	__pidataBANK0	;fetch initializer
  8019  0045  00EC               	movwf	__pdataBANK0& (0+127)
  8020  0046  3197  270B  3180   	fcall	__pidataBANK0+1	;fetch initializer
  8021  0049  00ED               	movwf	(__pdataBANK0+1)& (0+127)
  8022  004A  3197  270C  3180   	fcall	__pidataBANK0+2	;fetch initializer
  8023  004D  00EE               	movwf	(__pdataBANK0+2)& (0+127)
  8024  004E  3197  270D  3180   	fcall	__pidataBANK0+3	;fetch initializer
  8025  0051  00EF               	movwf	(__pdataBANK0+3)& (0+127)
  8026                           
  8027                           ; Initialize objects allocated to BANK1
  8028  0052  0021               	movlb	1	; select bank1
  8029  0053  3196  26FB  3180   	fcall	__pidataBANK1	;fetch initializer
  8030  0056  00C1               	movwf	__pdataBANK1& (0+127)
  8031  0057  3196  26FC  3180   	fcall	__pidataBANK1+1	;fetch initializer
  8032  005A  00C2               	movwf	(__pdataBANK1+1)& (0+127)
  8033  005B  3196  26FD  3180   	fcall	__pidataBANK1+2	;fetch initializer
  8034  005E  00C3               	movwf	(__pdataBANK1+2)& (0+127)
  8035                           
  8036                           ; Clear objects allocated to BANK0
  8037  005F  304D               	movlw	low __pbssBANK0
  8038  0060  0084               	movwf	4
  8039  0061  3000               	movlw	high __pbssBANK0
  8040  0062  0085               	movwf	5
  8041  0063  301B               	movlw	27
  8042  0064  3197  2720  3180   	fcall	clear_ram0
  8043                           
  8044                           ; Clear objects allocated to BANK1
  8045  0067  30B9               	movlw	low __pbssBANK1
  8046  0068  0084               	movwf	4
  8047  0069  3000               	movlw	high __pbssBANK1
  8048  006A  0085               	movwf	5
  8049  006B  3008               	movlw	8
  8050  006C  3197  2720  3180   	fcall	clear_ram0
  8051  006F                     end_of_initialization:	
  8052                           ;End of C runtime variable initialization code
  8053                           
  8054  006F                     __end_of__initialization:
  8055  006F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8056  0070  0020               	movlb	0
  8057  0071  3180  2873         	ljmp	_main	;jump to C main() function
  8058                           
  8059                           	psect	bssBANK0
  8060  004D                     __pbssBANK0:
  8061  004D                     _clkAlarm:
  8062  004D                     	ds	4
  8063  0051                     _lumAlarm:
  8064  0051                     	ds	3
  8065  0054                     _tempAlarm:
  8066  0054                     	ds	3
  8067  0057                     _t:
  8068  0057                     	ds	3
  8069  005A                     _mode:
  8070  005A                     	ds	2
  8071  005C                     _editingClockAlarm:
  8072  005C                     	ds	2
  8073  005E                     _dimingLed:
  8074  005E                     	ds	2
  8075  0060                     _editingLumAlarm:
  8076  0060                     	ds	1
  8077  0061                     _editingTempAlarm:
  8078  0061                     	ds	1
  8079  0062                     _lumLevel:
  8080  0062                     	ds	1
  8081  0063                     _temp:
  8082  0063                     	ds	1
  8083  0064                     _idx_RingBuffer:
  8084  0064                     	ds	1
  8085  0065                     _ALAF:
  8086  0065                     	ds	1
  8087  0066                     _TALA:
  8088  0066                     	ds	1
  8089  0067                     _NREG:
  8090  0067                     	ds	1
  8091                           
  8092                           	psect	dataBANK0
  8093  006C                     __pdataBANK0:
  8094  006C                     _prevLumLevel:
  8095  006C                     	ds	2
  8096  006E                     _prevTemp:
  8097  006E                     	ds	2
  8098                           
  8099                           	psect	bssBANK1
  8100  00B9                     __pbssBANK1:
  8101  00B9                     menuLCD_ISR@F12812:
  8102  00B9                     	ds	3
  8103  00BC                     _i2c1_driver_i2cISR:
  8104  00BC                     	ds	2
  8105  00BE                     _i2c1_driver_busCollisionISR:
  8106  00BE                     	ds	2
  8107  00C0                     _PMON:
  8108  00C0                     	ds	1
  8109                           
  8110                           	psect	dataBANK1
  8111  00C1                     __pdataBANK1:
  8112  00C1                     _alarmPWMStart:
  8113  00C1                     	ds	3
  8114                           
  8115                           	psect	clrtext
  8116  1720                     clear_ram0:	
  8117                           ;	Called with FSR0 containing the base address, and
  8118                           ;	WREG with the size to clear
  8119                           
  8120  1720  0064               	clrwdt	;clear the watchdog before getting into this loop
  8121  1721                     clrloop0:
  8122  1721  0180               	clrf	0	;clear RAM location pointed to by FSR
  8123  1722  3101               	addfsr 0,1
  8124  1723  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  8125  1724  2F21               	goto	clrloop0	;have we reached the end yet?
  8126  1725  3400               	retlw	0	;all done for this memory range, return
  8127                           
  8128                           	psect	cstackBANK1
  8129  00A0                     __pcstackBANK1:
  8130  00A0                     ??_PMD_Initialize:
  8131  00A0                     ??_OSCILLATOR_Initialize:	
  8132                           ; 1 bytes @ 0x0
  8133                           
  8134  00A0                     ??_PWM6_Initialize:	
  8135                           ; 1 bytes @ 0x0
  8136                           
  8137  00A0                     ??_ADCC_Initialize:	
  8138                           ; 1 bytes @ 0x0
  8139                           
  8140  00A0                     ??_TMR2_Initialize:	
  8141                           ; 1 bytes @ 0x0
  8142                           
  8143  00A0                     ?_TMR1_SetInterruptHandler:	
  8144                           ; 1 bytes @ 0x0
  8145                           
  8146  00A0                     ?_TMR3_SetInterruptHandler:	
  8147                           ; 1 bytes @ 0x0
  8148                           
  8149  00A0                     ?_TMR5_SetInterruptHandler:	
  8150                           ; 1 bytes @ 0x0
  8151                           
  8152  00A0                     ?_DATAEE_WriteByte:	
  8153                           ; 1 bytes @ 0x0
  8154                           
  8155  00A0                     ?_DATAEE_ReadByte:	
  8156                           ; 1 bytes @ 0x0
  8157                           
  8158  00A0                     ??_WriteI2C:	
  8159                           ; 1 bytes @ 0x0
  8160                           
  8161  00A0                     ??_PIN_MANAGER_Initialize:	
  8162                           ; 1 bytes @ 0x0
  8163                           
  8164  00A0                     ??_i2c1_driver_open:	
  8165                           ; 1 bytes @ 0x0
  8166                           
  8167  00A0                     ?_PWM6_LoadDutyValue:	
  8168                           ; 1 bytes @ 0x0
  8169                           
  8170  00A0                     ??_TMR2_Stop:	
  8171                           ; 1 bytes @ 0x0
  8172                           
  8173  00A0                     ??_TMR2_StopTimer:	
  8174                           ; 1 bytes @ 0x0
  8175                           
  8176  00A0                     ??_PWM_Output_D4_Disable:	
  8177                           ; 1 bytes @ 0x0
  8178                           
  8179  00A0                     ??_editClock:	
  8180                           ; 1 bytes @ 0x0
  8181                           
  8182  00A0                     ??_editTemp:	
  8183                           ; 1 bytes @ 0x0
  8184                           
  8185  00A0                     ??_editLum:	
  8186                           ; 1 bytes @ 0x0
  8187                           
  8188  00A0                     ??_toggleAlarms:	
  8189                           ; 1 bytes @ 0x0
  8190                           
  8191  00A0                     TMR1_SetInterruptHandler@InterruptHandler:	
  8192                           ; 1 bytes @ 0x0
  8193                           
  8194  00A0                     TMR3_SetInterruptHandler@InterruptHandler:	
  8195                           ; 2 bytes @ 0x0
  8196                           
  8197  00A0                     TMR5_SetInterruptHandler@InterruptHandler:	
  8198                           ; 2 bytes @ 0x0
  8199                           
  8200  00A0                     PWM6_LoadDutyValue@dutyValue:	
  8201                           ; 2 bytes @ 0x0
  8202                           
  8203  00A0                     DATAEE_WriteByte@bAdd:	
  8204                           ; 2 bytes @ 0x0
  8205                           
  8206  00A0                     DATAEE_ReadByte@bAdd:	
  8207                           ; 2 bytes @ 0x0
  8208                           
  8209                           
  8210                           ; 2 bytes @ 0x0
  8211  00A0                     	ds	1
  8212  00A1                     WriteI2C@data_out:
  8213                           
  8214                           ; 1 bytes @ 0x1
  8215  00A1                     	ds	1
  8216  00A2                     ??_TMR3_Initialize:
  8217  00A2                     ??_TMR5_Initialize:	
  8218                           ; 1 bytes @ 0x2
  8219                           
  8220  00A2                     ??_TMR1_Initialize:	
  8221                           ; 1 bytes @ 0x2
  8222                           
  8223  00A2                     ??_TMR1_SetInterruptHandler:	
  8224                           ; 1 bytes @ 0x2
  8225                           
  8226  00A2                     ??_TMR3_SetInterruptHandler:	
  8227                           ; 1 bytes @ 0x2
  8228                           
  8229  00A2                     ??_TMR5_SetInterruptHandler:	
  8230                           ; 1 bytes @ 0x2
  8231                           
  8232  00A2                     ??_DATAEE_ReadByte:	
  8233                           ; 1 bytes @ 0x2
  8234                           
  8235  00A2                     ??_SYSTEM_Initialize:	
  8236                           ; 1 bytes @ 0x2
  8237                           
  8238  00A2                     ??_PWM6_LoadDutyValue:	
  8239                           ; 1 bytes @ 0x2
  8240                           
  8241  00A2                     ??_LCDsend:	
  8242                           ; 1 bytes @ 0x2
  8243                           
  8244  00A2                     ?_LCDsend2x4:	
  8245                           ; 1 bytes @ 0x2
  8246                           
  8247  00A2                     LCDsend2x4@mode:	
  8248                           ; 1 bytes @ 0x2
  8249                           
  8250  00A2                     DATAEE_WriteByte@bData:	
  8251                           ; 1 bytes @ 0x2
  8252                           
  8253                           
  8254                           ; 1 bytes @ 0x2
  8255  00A2                     	ds	1
  8256  00A3                     ??_DATAEE_WriteByte:
  8257  00A3                     ??_LCDsend2x4:	
  8258                           ; 1 bytes @ 0x3
  8259                           
  8260  00A3                     LCDsend@c:	
  8261                           ; 1 bytes @ 0x3
  8262                           
  8263  00A3                     DATAEE_WriteByte@GIEBitValue:	
  8264                           ; 1 bytes @ 0x3
  8265                           
  8266                           
  8267                           ; 1 bytes @ 0x3
  8268  00A3                     	ds	2
  8269  00A5                     LCDsend2x4@c:
  8270                           
  8271                           ; 1 bytes @ 0x5
  8272  00A5                     	ds	1
  8273  00A6                     LCDsend2x4@hc:
  8274                           
  8275                           ; 1 bytes @ 0x6
  8276  00A6                     	ds	1
  8277  00A7                     LCDsend2x4@lc:
  8278                           
  8279                           ; 1 bytes @ 0x7
  8280  00A7                     	ds	1
  8281  00A8                     ??_LCDinit:
  8282                           
  8283                           ; 1 bytes @ 0x8
  8284  00A8                     	ds	1
  8285  00A9                     ??_main:
  8286                           
  8287                           ; 1 bytes @ 0x9
  8288  00A9                     	ds	3
  8289  00AC                     main@checkSumAux:
  8290                           
  8291                           ; 1 bytes @ 0xC
  8292  00AC                     	ds	1
  8293  00AD                     main@notInit:
  8294                           
  8295                           ; 1 bytes @ 0xD
  8296  00AD                     	ds	1
  8297  00AE                     main@corrupted:
  8298                           
  8299                           ; 1 bytes @ 0xE
  8300  00AE                     	ds	1
  8301  00AF                     main@i:
  8302                           
  8303                           ; 2 bytes @ 0xF
  8304  00AF                     	ds	2
  8305                           
  8306                           	psect	cstackCOMMON
  8307  0070                     __pcstackCOMMON:
  8308  0070                     ?_isdigit:
  8309  0070                     ?_i2c1_driver_open:	
  8310                           ; 1 bit 
  8311                           
  8312  0070                     ?_PMD_Initialize:	
  8313                           ; 1 bit 
  8314                           
  8315  0070                     ?_OSCILLATOR_Initialize:	
  8316                           ; 1 bytes @ 0x0
  8317                           
  8318  0070                     ?_PWM6_Initialize:	
  8319                           ; 1 bytes @ 0x0
  8320                           
  8321  0070                     ?_ADCC_Initialize:	
  8322                           ; 1 bytes @ 0x0
  8323                           
  8324  0070                     ?_TMR3_Initialize:	
  8325                           ; 1 bytes @ 0x0
  8326                           
  8327  0070                     ?_TMR5_Initialize:	
  8328                           ; 1 bytes @ 0x0
  8329                           
  8330  0070                     ?_TMR2_Initialize:	
  8331                           ; 1 bytes @ 0x0
  8332                           
  8333  0070                     ?_TMR1_Initialize:	
  8334                           ; 1 bytes @ 0x0
  8335                           
  8336  0070                     ?_TMR5_ISR:	
  8337                           ; 1 bytes @ 0x0
  8338                           
  8339  0070                     ?_TMR3_ISR:	
  8340                           ; 1 bytes @ 0x0
  8341                           
  8342  0070                     ?_TMR1_ISR:	
  8343                           ; 1 bytes @ 0x0
  8344                           
  8345  0070                     ?_TMR1_DefaultInterruptHandler:	
  8346                           ; 1 bytes @ 0x0
  8347                           
  8348  0070                     ??_TMR1_DefaultInterruptHandler:	
  8349                           ; 1 bytes @ 0x0
  8350                           
  8351  0070                     ?_TMR3_DefaultInterruptHandler:	
  8352                           ; 1 bytes @ 0x0
  8353                           
  8354  0070                     ??_TMR3_DefaultInterruptHandler:	
  8355                           ; 1 bytes @ 0x0
  8356                           
  8357  0070                     ?_TMR5_DefaultInterruptHandler:	
  8358                           ; 1 bytes @ 0x0
  8359                           
  8360  0070                     ??_TMR5_DefaultInterruptHandler:	
  8361                           ; 1 bytes @ 0x0
  8362                           
  8363  0070                     ??_isdigit:	
  8364                           ; 1 bytes @ 0x0
  8365                           
  8366  0070                     ?_ReadI2C:	
  8367                           ; 1 bytes @ 0x0
  8368                           
  8369  0070                     ??_ReadI2C:	
  8370                           ; 1 bytes @ 0x0
  8371                           
  8372  0070                     ?_WriteI2C:	
  8373                           ; 1 bytes @ 0x0
  8374                           
  8375  0070                     ?_PIN_MANAGER_Initialize:	
  8376                           ; 1 bytes @ 0x0
  8377                           
  8378  0070                     ?_SYSTEM_Initialize:	
  8379                           ; 1 bytes @ 0x0
  8380                           
  8381  0070                     ?_INTERRUPT_InterruptManager:	
  8382                           ; 1 bytes @ 0x0
  8383                           
  8384  0070                     ?_TMR1_WriteTimer:	
  8385                           ; 1 bytes @ 0x0
  8386                           
  8387  0070                     ?_TMR3_WriteTimer:	
  8388                           ; 1 bytes @ 0x0
  8389                           
  8390  0070                     ?_TMR5_WriteTimer:	
  8391                           ; 1 bytes @ 0x0
  8392                           
  8393  0070                     ?_TMR2_Start:	
  8394                           ; 1 bytes @ 0x0
  8395                           
  8396  0070                     ??_TMR2_Start:	
  8397                           ; 1 bytes @ 0x0
  8398                           
  8399  0070                     ?_TMR2_StartTimer:	
  8400                           ; 1 bytes @ 0x0
  8401                           
  8402  0070                     ??_TMR2_StartTimer:	
  8403                           ; 1 bytes @ 0x0
  8404                           
  8405  0070                     ?_TMR2_Stop:	
  8406                           ; 1 bytes @ 0x0
  8407                           
  8408  0070                     ?_TMR2_StopTimer:	
  8409                           ; 1 bytes @ 0x0
  8410                           
  8411  0070                     ?_tsttc:	
  8412                           ; 1 bytes @ 0x0
  8413                           
  8414  0070                     ?_LCDsend:	
  8415                           ; 1 bytes @ 0x0
  8416                           
  8417  0070                     ?_LCDinit:	
  8418                           ; 1 bytes @ 0x0
  8419                           
  8420  0070                     ?_LCDcmd:	
  8421                           ; 1 bytes @ 0x0
  8422                           
  8423  0070                     ?_LCDchar:	
  8424                           ; 1 bytes @ 0x0
  8425                           
  8426  0070                     ?_LCDstr:	
  8427                           ; 1 bytes @ 0x0
  8428                           
  8429  0070                     ?_differenceBetweenTimePeriod:	
  8430                           ; 1 bytes @ 0x0
  8431                           
  8432  0070                     ?_PWM_Output_D4_Enable:	
  8433                           ; 1 bytes @ 0x0
  8434                           
  8435  0070                     ??_PWM_Output_D4_Enable:	
  8436                           ; 1 bytes @ 0x0
  8437                           
  8438  0070                     ?_PWM_Output_D4_Disable:	
  8439                           ; 1 bytes @ 0x0
  8440                           
  8441  0070                     ?_Clock_ISR:	
  8442                           ; 1 bytes @ 0x0
  8443                           
  8444  0070                     ?_menuLCD_ISR:	
  8445                           ; 1 bytes @ 0x0
  8446                           
  8447  0070                     ?_monitoring_ISR:	
  8448                           ; 1 bytes @ 0x0
  8449                           
  8450  0070                     ?_editClock:	
  8451                           ; 1 bytes @ 0x0
  8452                           
  8453  0070                     ?_editTemp:	
  8454                           ; 1 bytes @ 0x0
  8455                           
  8456  0070                     ?_editLum:	
  8457                           ; 1 bytes @ 0x0
  8458                           
  8459  0070                     ?_toggleAlarms:	
  8460                           ; 1 bytes @ 0x0
  8461                           
  8462  0070                     ?_main:	
  8463                           ; 1 bytes @ 0x0
  8464                           
  8465  0070                     ?i1_WriteI2C:	
  8466                           ; 1 bytes @ 0x0
  8467                           
  8468  0070                     ??i1_WriteI2C:	
  8469                           ; 1 bytes @ 0x0
  8470                           
  8471  0070                     ?i1_PWM6_LoadDutyValue:	
  8472                           ; 1 bytes @ 0x0
  8473                           
  8474  0070                     ?i1_TMR2_Stop:	
  8475                           ; 1 bytes @ 0x0
  8476                           
  8477  0070                     ??i1_TMR2_Stop:	
  8478                           ; 1 bytes @ 0x0
  8479                           
  8480  0070                     ?i1_TMR2_StopTimer:	
  8481                           ; 1 bytes @ 0x0
  8482                           
  8483  0070                     ??i1_TMR2_StopTimer:	
  8484                           ; 1 bytes @ 0x0
  8485                           
  8486  0070                     ?i1_PWM_Output_D4_Disable:	
  8487                           ; 1 bytes @ 0x0
  8488                           
  8489  0070                     ??i1_PWM_Output_D4_Disable:	
  8490                           ; 1 bytes @ 0x0
  8491                           
  8492  0070                     ?_ADCC_GetSingleConversion:	
  8493                           ; 1 bytes @ 0x0
  8494                           
  8495  0070                     ?___wmul:	
  8496                           ; 2 bytes @ 0x0
  8497                           
  8498  0070                     ?___lwdiv:	
  8499                           ; 2 bytes @ 0x0
  8500                           
  8501  0070                     _isdigit$2907:	
  8502                           ; 2 bytes @ 0x0
  8503                           
  8504  0070                     TMR1_WriteTimer@timerVal:	
  8505                           ; 1 bytes @ 0x0
  8506                           
  8507  0070                     TMR3_WriteTimer@timerVal:	
  8508                           ; 2 bytes @ 0x0
  8509                           
  8510  0070                     TMR5_WriteTimer@timerVal:	
  8511                           ; 2 bytes @ 0x0
  8512                           
  8513  0070                     ___wmul@multiplier:	
  8514                           ; 2 bytes @ 0x0
  8515                           
  8516  0070                     ___lwdiv@divisor:	
  8517                           ; 2 bytes @ 0x0
  8518                           
  8519  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  8520                           ; 2 bytes @ 0x0
  8521                           
  8522  0070                     differenceBetweenTimePeriod@start:	
  8523                           ; 2 bytes @ 0x0
  8524                           
  8525                           
  8526                           ; 3 bytes @ 0x0
  8527  0070                     	ds	1
  8528  0071                     isdigit@c:
  8529  0071                     i1WriteI2C@data_out:	
  8530                           ; 1 bytes @ 0x1
  8531                           
  8532                           
  8533                           ; 1 bytes @ 0x1
  8534  0071                     	ds	1
  8535  0072                     ??_TMR1_WriteTimer:
  8536  0072                     ??_TMR3_WriteTimer:	
  8537                           ; 1 bytes @ 0x2
  8538                           
  8539  0072                     ??_TMR5_WriteTimer:	
  8540                           ; 1 bytes @ 0x2
  8541                           
  8542  0072                     ??_tsttc:	
  8543                           ; 1 bytes @ 0x2
  8544                           
  8545  0072                     ??i1_PWM6_LoadDutyValue:	
  8546                           ; 1 bytes @ 0x2
  8547                           
  8548  0072                     ?i1_LCDsend2x4:	
  8549                           ; 1 bytes @ 0x2
  8550                           
  8551  0072                     i1LCDsend2x4@mode:	
  8552                           ; 1 bytes @ 0x2
  8553                           
  8554  0072                     ___wmul@multiplicand:	
  8555                           ; 1 bytes @ 0x2
  8556                           
  8557  0072                     ___lwdiv@dividend:	
  8558                           ; 2 bytes @ 0x2
  8559                           
  8560                           
  8561                           ; 2 bytes @ 0x2
  8562  0072                     	ds	1
  8563  0073                     ??_ADCC_GetSingleConversion:
  8564  0073                     ??i1_LCDsend2x4:	
  8565                           ; 1 bytes @ 0x3
  8566                           
  8567  0073                     ADCC_GetSingleConversion@channel:	
  8568                           ; 1 bytes @ 0x3
  8569                           
  8570  0073                     tsttc@value:	
  8571                           ; 1 bytes @ 0x3
  8572                           
  8573  0073                     differenceBetweenTimePeriod@stop:	
  8574                           ; 1 bytes @ 0x3
  8575                           
  8576                           
  8577                           ; 3 bytes @ 0x3
  8578  0073                     	ds	1
  8579  0074                     ??___wmul:
  8580  0074                     ??___lwdiv:	
  8581                           ; 1 bytes @ 0x4
  8582                           
  8583  0074                     ___wmul@product:	
  8584                           ; 1 bytes @ 0x4
  8585                           
  8586                           
  8587                           ; 2 bytes @ 0x4
  8588  0074                     	ds	1
  8589  0075                     i1LCDsend2x4@c:
  8590  0075                     ___lwdiv@quotient:	
  8591                           ; 1 bytes @ 0x5
  8592                           
  8593                           
  8594                           ; 2 bytes @ 0x5
  8595  0075                     	ds	1
  8596  0076                     ?i1_DATAEE_WriteByte:
  8597  0076                     ?i1_DATAEE_ReadByte:	
  8598                           ; 1 bytes @ 0x6
  8599                           
  8600  0076                     differenceBetweenTimePeriod@diff:	
  8601                           ; 1 bytes @ 0x6
  8602                           
  8603  0076                     i1LCDsend2x4@hc:	
  8604                           ; 1 bytes @ 0x6
  8605                           
  8606  0076                     i1DATAEE_WriteByte@bAdd:	
  8607                           ; 1 bytes @ 0x6
  8608                           
  8609  0076                     i1DATAEE_ReadByte@bAdd:	
  8610                           ; 2 bytes @ 0x6
  8611                           
  8612                           
  8613                           ; 2 bytes @ 0x6
  8614  0076                     	ds	1
  8615  0077                     ??_differenceBetweenTimePeriod:
  8616  0077                     ___lwdiv@counter:	
  8617                           ; 1 bytes @ 0x7
  8618                           
  8619  0077                     i1LCDsend2x4@lc:	
  8620                           ; 1 bytes @ 0x7
  8621                           
  8622                           
  8623                           ; 1 bytes @ 0x7
  8624  0077                     	ds	1
  8625  0078                     ??_LCDcmd:
  8626  0078                     ??_LCDchar:	
  8627                           ; 1 bytes @ 0x8
  8628                           
  8629  0078                     ??i1_DATAEE_ReadByte:	
  8630                           ; 1 bytes @ 0x8
  8631                           
  8632  0078                     ?___lwmod:	
  8633                           ; 1 bytes @ 0x8
  8634                           
  8635  0078                     LCDcmd@c:	
  8636                           ; 2 bytes @ 0x8
  8637                           
  8638  0078                     LCDchar@c:	
  8639                           ; 1 bytes @ 0x8
  8640                           
  8641  0078                     i1DATAEE_WriteByte@bData:	
  8642                           ; 1 bytes @ 0x8
  8643                           
  8644  0078                     ___lwmod@divisor:	
  8645                           ; 1 bytes @ 0x8
  8646                           
  8647                           
  8648                           ; 2 bytes @ 0x8
  8649  0078                     	ds	1
  8650  0079                     ??_LCDstr:
  8651  0079                     ??i1_DATAEE_WriteByte:	
  8652                           ; 1 bytes @ 0x9
  8653                           
  8654  0079                     i1DATAEE_WriteByte@GIEBitValue:	
  8655                           ; 1 bytes @ 0x9
  8656                           
  8657                           
  8658                           ; 1 bytes @ 0x9
  8659  0079                     	ds	1
  8660  007A                     ??_Clock_ISR:
  8661  007A                     ??_monitoring_ISR:	
  8662                           ; 1 bytes @ 0xA
  8663                           
  8664  007A                     LCDstr@c:	
  8665                           ; 1 bytes @ 0xA
  8666                           
  8667  007A                     ___lwmod@dividend:	
  8668                           ; 1 bytes @ 0xA
  8669                           
  8670                           
  8671                           ; 2 bytes @ 0xA
  8672  007A                     	ds	1
  8673  007B                     ??_TMR1_ISR:
  8674  007B                     LCDstr@p:	
  8675                           ; 1 bytes @ 0xB
  8676                           
  8677                           
  8678                           ; 1 bytes @ 0xB
  8679  007B                     	ds	1
  8680  007C                     ??___lwmod:
  8681                           
  8682                           ; 1 bytes @ 0xC
  8683  007C                     	ds	1
  8684  007D                     ??_TMR5_ISR:
  8685  007D                     ___lwmod@counter:	
  8686                           ; 1 bytes @ 0xD
  8687                           
  8688                           
  8689                           ; 1 bytes @ 0xD
  8690  007D                     	ds	1
  8691  007E                     ??_TMR3_ISR:
  8692  007E                     ??_INTERRUPT_InterruptManager:	
  8693                           ; 1 bytes @ 0xE
  8694                           
  8695                           
  8696                           	psect	cstackBANK0
  8697  0020                     __pcstackBANK0:	
  8698                           ; 1 bytes @ 0xE
  8699                           
  8700  0020                     ?_sprintf:
  8701  0020                     sprintf@f:	
  8702                           ; 2 bytes @ 0x0
  8703                           
  8704                           
  8705                           ; 2 bytes @ 0x0
  8706  0020                     	ds	1
  8707  0021                     monitoring_ISR@aux1:
  8708                           
  8709                           ; 1 bytes @ 0x1
  8710  0021                     	ds	1
  8711  0022                     monitoring_ISR@aux2:
  8712                           
  8713                           ; 1 bytes @ 0x2
  8714  0022                     	ds	1
  8715  0023                     monitoring_ISR@aux3:
  8716                           
  8717                           ; 1 bytes @ 0x3
  8718  0023                     	ds	5
  8719  0028                     ??_sprintf:
  8720                           
  8721                           ; 1 bytes @ 0x8
  8722  0028                     	ds	4
  8723  002C                     sprintf@ap:
  8724                           
  8725                           ; 1 bytes @ 0xC
  8726  002C                     	ds	1
  8727  002D                     sprintf@prec:
  8728                           
  8729                           ; 1 bytes @ 0xD
  8730  002D                     	ds	1
  8731  002E                     sprintf@val:
  8732                           
  8733                           ; 2 bytes @ 0xE
  8734  002E                     	ds	2
  8735  0030                     sprintf@flag:
  8736                           
  8737                           ; 1 bytes @ 0x10
  8738  0030                     	ds	1
  8739  0031                     sprintf@width:
  8740                           
  8741                           ; 2 bytes @ 0x11
  8742  0031                     	ds	2
  8743  0033                     sprintf@c:
  8744                           
  8745                           ; 1 bytes @ 0x13
  8746  0033                     	ds	1
  8747  0034                     sprintf@sp:
  8748                           
  8749                           ; 1 bytes @ 0x14
  8750  0034                     	ds	1
  8751  0035                     ??_menuLCD_ISR:
  8752                           
  8753                           ; 1 bytes @ 0x15
  8754  0035                     	ds	6
  8755  003B                     menuLCD_ISR@str:
  8756                           
  8757                           ; 8 bytes @ 0x1B
  8758  003B                     	ds	8
  8759  0043                     menuLCD_ISR@tt:
  8760                           
  8761                           ; 4 bytes @ 0x23
  8762  0043                     	ds	4
  8763  0047                     menuLCD_ISR@l:
  8764                           
  8765                           ; 3 bytes @ 0x27
  8766  0047                     	ds	3
  8767  004A                     menuLCD_ISR@diff:
  8768                           
  8769                           ; 3 bytes @ 0x2A
  8770  004A                     	ds	3
  8771                           
  8772                           	psect	maintext
  8773  0073                     __pmaintext:	
  8774 ;;
  8775 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  8776 ;;
  8777 ;; *************** function _main *****************
  8778 ;; Defined at:
  8779 ;;		line 614 in file "main.c"
  8780 ;; Parameters:    Size  Location     Type
  8781 ;;		None
  8782 ;; Auto vars:     Size  Location     Type
  8783 ;;  i               2   15[BANK1 ] int 
  8784 ;;  corrupted       1   14[BANK1 ] unsigned char 
  8785 ;;  notInit         1   13[BANK1 ] unsigned char 
  8786 ;;  checkSumAux     1   12[BANK1 ] unsigned char 
  8787 ;; Return value:  Size  Location     Type
  8788 ;;                  1    wreg      void 
  8789 ;; Registers used:
  8790 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8791 ;; Tracked objects:
  8792 ;;		On entry : B1F/0
  8793 ;;		On exit  : 0/0
  8794 ;;		Unchanged: 0/0
  8795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8797 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8798 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8799 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8800 ;;Total ram usage:        8 bytes
  8801 ;; Hardware stack levels required when called:   10
  8802 ;; This function calls:
  8803 ;;		_DATAEE_ReadByte
  8804 ;;		_DATAEE_WriteByte
  8805 ;;		_LCDinit
  8806 ;;		_PWM6_LoadDutyValue
  8807 ;;		_PWM_Output_D4_Disable
  8808 ;;		_SYSTEM_Initialize
  8809 ;;		_TMR1_SetInterruptHandler
  8810 ;;		_TMR2_StopTimer
  8811 ;;		_TMR3_SetInterruptHandler
  8812 ;;		_TMR5_SetInterruptHandler
  8813 ;;		_editClock
  8814 ;;		_editLum
  8815 ;;		_editTemp
  8816 ;;		_i2c1_driver_open
  8817 ;;		_toggleAlarms
  8818 ;; This function is called by:
  8819 ;;		Startup code after reset
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823                           
  8824                           ;psect for function _main
  8825  0073                     _main:
  8826  0073                     l4996:	
  8827                           ;incstack = 0
  8828                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8829                           
  8830                           
  8831                           ;main.c: 617: SYSTEM_Initialize();
  8832  0073  3188  209A  3180   	fcall	_SYSTEM_Initialize
  8833                           
  8834                           ;main.c: 619: PWM6_LoadDutyValue(0);
  8835  0076  3000               	movlw	0
  8836  0077  0021               	movlb	1	; select bank1
  8837  0078  00A0               	movwf	PWM6_LoadDutyValue@dutyValue^(0+128)
  8838  0079  00A1               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128)
  8839  007A  3188  2067  3180   	fcall	_PWM6_LoadDutyValue
  8840  007D                     l4998:
  8841                           
  8842                           ;main.c: 620: TMR2_StopTimer();
  8843  007D  3197  2706  3180   	fcall	_TMR2_StopTimer
  8844  0080                     l5000:
  8845                           
  8846                           ;main.c: 621: PWM_Output_D4_Disable();
  8847  0080  3196  26F5  3180   	fcall	_PWM_Output_D4_Disable
  8848                           
  8849                           ;main.c: 623: TMR1_SetInterruptHandler(Clock_ISR);
  8850  0083  30F2               	movlw	low _Clock_ISR
  8851  0084  0021               	movlb	1	; select bank1
  8852  0085  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  8853  0086  300D               	movlw	high _Clock_ISR
  8854  0087  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8855  0088  3197  270E  3180   	fcall	_TMR1_SetInterruptHandler
  8856                           
  8857                           ;main.c: 625: TMR3_SetInterruptHandler(menuLCD_ISR);
  8858  008B  3091               	movlw	low _menuLCD_ISR
  8859  008C  0021               	movlb	1	; select bank1
  8860  008D  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  8861  008E  3002               	movlw	high _menuLCD_ISR
  8862  008F  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8863  0090  3197  2714  3180   	fcall	_TMR3_SetInterruptHandler
  8864                           
  8865                           ;main.c: 627: TMR5_SetInterruptHandler(monitoring_ISR);
  8866  0093  300A               	movlw	low _monitoring_ISR
  8867  0094  0021               	movlb	1	; select bank1
  8868  0095  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
  8869  0096  3006               	movlw	high _monitoring_ISR
  8870  0097  00A1               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8871  0098  3197  271A  3180   	fcall	_TMR5_SetInterruptHandler
  8872  009B                     l5002:
  8873                           
  8874                           ;main.c: 629: uint8_t checkSumAux = 0;
  8875  009B  0021               	movlb	1	; select bank1
  8876  009C  01AC               	clrf	main@checkSumAux^(0+128)
  8877  009D                     l5004:
  8878                           
  8879                           ;main.c: 630: bool notInit = 1;
  8880  009D  01AD               	clrf	main@notInit^(0+128)
  8881  009E  0AAD               	incf	main@notInit^(0+128),f
  8882  009F                     l5006:
  8883                           
  8884                           ;main.c: 631: bool corrupted = 0;
  8885  009F  01AE               	clrf	main@corrupted^(0+128)
  8886  00A0                     l5008:
  8887                           
  8888                           ;main.c: 632: if(DATAEE_ReadByte(0x7000) == 'S'){
  8889  00A0  3000               	movlw	0
  8890  00A1  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  8891  00A2  3070               	movlw	112
  8892  00A3  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  8893  00A4  3197  2770  3180   	fcall	_DATAEE_ReadByte
  8894  00A7  3A53               	xorlw	83
  8895  00A8  1D03               	skipz
  8896  00A9  28AB               	goto	u4801
  8897  00AA  28AC               	goto	u4800
  8898  00AB                     u4801:
  8899  00AB  28EB               	goto	l5028
  8900  00AC                     u4800:
  8901  00AC                     l5010:
  8902                           
  8903                           ;main.c: 633: notInit = 0;
  8904  00AC  0021               	movlb	1	; select bank1
  8905  00AD  01AD               	clrf	main@notInit^(0+128)
  8906  00AE                     l5012:
  8907                           
  8908                           ;main.c: 634: for(int i = 1; i < 13; i++){
  8909  00AE  3001               	movlw	1
  8910  00AF  00AF               	movwf	main@i^(0+128)
  8911  00B0  3000               	movlw	0
  8912  00B1  00B0               	movwf	(main@i^(0+128)+1)
  8913  00B2                     l5018:
  8914                           
  8915                           ;main.c: 635: checkSumAux += DATAEE_ReadByte(0x7000 + (i*8));
  8916  00B2  0021               	movlb	1	; select bank1
  8917  00B3  0830               	movf	(main@i+1)^(0+128),w
  8918  00B4  00AA               	movwf	(??_main^(0+128)+1)
  8919  00B5  082F               	movf	main@i^(0+128),w
  8920  00B6  00A9               	movwf	??_main^(0+128)
  8921  00B7  35A9               	lslf	??_main^(0+128),f
  8922  00B8  0DAA               	rlf	(??_main^(0+128)+1),f
  8923  00B9  35A9               	lslf	??_main^(0+128),f
  8924  00BA  0DAA               	rlf	(??_main^(0+128)+1),f
  8925  00BB  35A9               	lslf	??_main^(0+128),f
  8926  00BC  0DAA               	rlf	(??_main^(0+128)+1),f
  8927  00BD  0829               	movf	??_main^(0+128),w
  8928  00BE  3E00               	addlw	0
  8929  00BF  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  8930  00C0  3070               	movlw	112
  8931  00C1  3D2A               	addwfc	(??_main+1)^(0+128),w
  8932  00C2  00A1               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+128)
  8933  00C3  3197  2770  3180   	fcall	_DATAEE_ReadByte
  8934  00C6  0021               	movlb	1	; select bank1
  8935  00C7  00AB               	movwf	(??_main+2)^(0+128)
  8936  00C8  082B               	movf	(??_main+2)^(0+128),w
  8937  00C9  07AC               	addwf	main@checkSumAux^(0+128),f
  8938  00CA                     l5020:
  8939  00CA  3001               	movlw	1
  8940  00CB  07AF               	addwf	main@i^(0+128),f
  8941  00CC  3000               	movlw	0
  8942  00CD  3DB0               	addwfc	(main@i+1)^(0+128),f
  8943  00CE                     l5022:
  8944  00CE  0830               	movf	(main@i+1)^(0+128),w
  8945  00CF  3A80               	xorlw	128
  8946  00D0  00A9               	movwf	??_main^(0+128)
  8947  00D1  3080               	movlw	128
  8948  00D2  0229               	subwf	??_main^(0+128),w
  8949  00D3  1D03               	skipz
  8950  00D4  28D7               	goto	u4815
  8951  00D5  300D               	movlw	13
  8952  00D6  022F               	subwf	main@i^(0+128),w
  8953  00D7                     u4815:
  8954  00D7  1C03               	skipc
  8955  00D8  28DA               	goto	u4811
  8956  00D9  28DB               	goto	u4810
  8957  00DA                     u4811:
  8958  00DA  28B2               	goto	l5018
  8959  00DB                     u4810:
  8960  00DB                     l5024:
  8961                           
  8962                           ;main.c: 636: };main.c: 637: if(checkSumAux != DATAEE_ReadByte(0x7000 + (13*8))){
  8963  00DB  3068               	movlw	104
  8964  00DC  0021               	movlb	1	; select bank1
  8965  00DD  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  8966  00DE  3070               	movlw	112
  8967  00DF  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  8968  00E0  3197  2770  3180   	fcall	_DATAEE_ReadByte
  8969  00E3  0021               	movlb	1	; select bank1
  8970  00E4  062C               	xorwf	main@checkSumAux^(0+128),w
  8971  00E5  1903               	skipnz
  8972  00E6  28E8               	goto	u4821
  8973  00E7  28E9               	goto	u4820
  8974  00E8                     u4821:
  8975  00E8  28EB               	goto	l5028
  8976  00E9                     u4820:
  8977  00E9                     l5026:
  8978                           
  8979                           ;main.c: 638: corrupted = 1;
  8980  00E9  01AE               	clrf	main@corrupted^(0+128)
  8981  00EA  0AAE               	incf	main@corrupted^(0+128),f
  8982  00EB                     l5028:
  8983                           
  8984                           ;main.c: 639: };main.c: 640: };main.c: 642: if(notInit || corrupted){
  8985  00EB  0021               	movlb	1	; select bank1
  8986  00EC  082D               	movf	main@notInit^(0+128),w
  8987  00ED  1D03               	btfss	3,2
  8988  00EE  28F0               	goto	u4831
  8989  00EF  28F1               	goto	u4830
  8990  00F0                     u4831:
  8991  00F0  28F6               	goto	l5032
  8992  00F1                     u4830:
  8993  00F1                     l5030:
  8994  00F1  082E               	movf	main@corrupted^(0+128),w
  8995  00F2  1903               	btfsc	3,2
  8996  00F3  28F5               	goto	u4841
  8997  00F4  28F6               	goto	u4840
  8998  00F5                     u4841:
  8999  00F5  298E               	goto	l5034
  9000  00F6                     u4840:
  9001  00F6                     l5032:
  9002                           
  9003                           ;main.c: 643: DATAEE_WriteByte( 0x7000 + (0 * 8), 'S');
  9004  00F6  3000               	movlw	0
  9005  00F7  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9006  00F8  3070               	movlw	112
  9007  00F9  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9008  00FA  3053               	movlw	83
  9009  00FB  00A9               	movwf	??_main^(0+128)
  9010  00FC  0829               	movf	??_main^(0+128),w
  9011  00FD  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9012  00FE  3189  2150  3180   	fcall	_DATAEE_WriteByte
  9013                           
  9014                           ;main.c: 644: DATAEE_WriteByte( 0x7000 + (1 * 8), 25);
  9015  0101  3008               	movlw	8
  9016  0102  0021               	movlb	1	; select bank1
  9017  0103  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9018  0104  3070               	movlw	112
  9019  0105  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9020  0106  3019               	movlw	25
  9021  0107  00A9               	movwf	??_main^(0+128)
  9022  0108  0829               	movf	??_main^(0+128),w
  9023  0109  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9024  010A  3189  2150  3180   	fcall	_DATAEE_WriteByte
  9025                           
  9026                           ;main.c: 645: DATAEE_WriteByte( 0x7000 + (2 * 8), 3);
  9027  010D  3010               	movlw	16
  9028  010E  0021               	movlb	1	; select bank1
  9029  010F  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9030  0110  3070               	movlw	112
  9031  0111  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9032  0112  3003               	movlw	3
  9033  0113  00A9               	movwf	??_main^(0+128)
  9034  0114  0829               	movf	??_main^(0+128),w
  9035  0115  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9036  0116  3189  2150  3180   	fcall	_DATAEE_WriteByte
  9037                           
  9038                           ;main.c: 646: DATAEE_WriteByte( 0x7000 + (3 * 8), 5);
  9039  0119  3018               	movlw	24
  9040  011A  0021               	movlb	1	; select bank1
  9041  011B  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9042  011C  3070               	movlw	112
  9043  011D  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9044  011E  3005               	movlw	5
  9045  011F  00A9               	movwf	??_main^(0+128)
  9046  0120  0829               	movf	??_main^(0+128),w
  9047  0121  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9048  0122  3189  2150  3180   	fcall	_DATAEE_WriteByte
  9049                           
  9050                           ;main.c: 647: DATAEE_WriteByte( 0x7000 + (4 * 8), 12);
  9051  0125  3020               	movlw	32
  9052  0126  0021               	movlb	1	; select bank1
  9053  0127  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9054  0128  3070               	movlw	112
  9055  0129  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9056  012A  300C               	movlw	12
  9057  012B  00A9               	movwf	??_main^(0+128)
  9058  012C  0829               	movf	??_main^(0+128),w
  9059  012D  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9060  012E  3189  2150  3180   	fcall	_DATAEE_WriteByte
  9061                           
  9062                           ;main.c: 648: DATAEE_WriteByte( 0x7000 + (5 * 8), 0);
  9063  0131  3028               	movlw	40
  9064  0132  0021               	movlb	1	; select bank1
  9065  0133  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9066  0134  3070               	movlw	112
  9067  0135  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9068  0136  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9069  0137  3189  2150  3180   	fcall	_DATAEE_WriteByte
  9070                           
  9071                           ;main.c: 649: DATAEE_WriteByte( 0x7000 + (6 * 8), 0);
  9072  013A  3030               	movlw	48
  9073  013B  0021               	movlb	1	; select bank1
  9074  013C  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9075  013D  3070               	movlw	112
  9076  013E  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9077  013F  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9078  0140  3189  2150  3180   	fcall	_DATAEE_WriteByte
  9079                           
  9080                           ;main.c: 650: DATAEE_WriteByte( 0x7000 + (7 * 8), 28);
  9081  0143  3038               	movlw	56
  9082  0144  0021               	movlb	1	; select bank1
  9083  0145  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9084  0146  3070               	movlw	112
  9085  0147  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9086  0148  301C               	movlw	28
  9087  0149  00A9               	movwf	??_main^(0+128)
  9088  014A  0829               	movf	??_main^(0+128),w
  9089  014B  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9090  014C  3189  2150  3180   	fcall	_DATAEE_WriteByte
  9091                           
  9092                           ;main.c: 651: DATAEE_WriteByte( 0x7000 + (8 * 8), 4);
  9093  014F  3040               	movlw	64
  9094  0150  0021               	movlb	1	; select bank1
  9095  0151  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9096  0152  3070               	movlw	112
  9097  0153  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9098  0154  3004               	movlw	4
  9099  0155  00A9               	movwf	??_main^(0+128)
  9100  0156  0829               	movf	??_main^(0+128),w
  9101  0157  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9102  0158  3189  2150  3180   	fcall	_DATAEE_WriteByte
  9103                           
  9104                           ;main.c: 652: DATAEE_WriteByte( 0x7000 + (9 * 8), 'a');
  9105  015B  3048               	movlw	72
  9106  015C  0021               	movlb	1	; select bank1
  9107  015D  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9108  015E  3070               	movlw	112
  9109  015F  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9110  0160  3061               	movlw	97
  9111  0161  00A9               	movwf	??_main^(0+128)
  9112  0162  0829               	movf	??_main^(0+128),w
  9113  0163  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9114  0164  3189  2150  3180   	fcall	_DATAEE_WriteByte
  9115                           
  9116                           ;main.c: 653: DATAEE_WriteByte( 0x7000 + (10 * 8), 0);
  9117  0167  3050               	movlw	80
  9118  0168  0021               	movlb	1	; select bank1
  9119  0169  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9120  016A  3070               	movlw	112
  9121  016B  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9122  016C  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9123  016D  3189  2150  3180   	fcall	_DATAEE_WriteByte
  9124                           
  9125                           ;main.c: 654: DATAEE_WriteByte( 0x7000 + (11 * 8), 0);
  9126  0170  3058               	movlw	88
  9127  0171  0021               	movlb	1	; select bank1
  9128  0172  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9129  0173  3070               	movlw	112
  9130  0174  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9131  0175  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9132  0176  3189  2150  3180   	fcall	_DATAEE_WriteByte
  9133                           
  9134                           ;main.c: 655: DATAEE_WriteByte( 0x7000 + (12 * 8), 0);
  9135  0179  3060               	movlw	96
  9136  017A  0021               	movlb	1	; select bank1
  9137  017B  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9138  017C  3070               	movlw	112
  9139  017D  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9140  017E  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9141  017F  3189  2150  3180   	fcall	_DATAEE_WriteByte
  9142                           
  9143                           ;main.c: 656: DATAEE_WriteByte( 0x7000 + (13 * 8), 174);
  9144  0182  3068               	movlw	104
  9145  0183  0021               	movlb	1	; select bank1
  9146  0184  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9147  0185  3070               	movlw	112
  9148  0186  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9149  0187  30AE               	movlw	174
  9150  0188  00A9               	movwf	??_main^(0+128)
  9151  0189  0829               	movf	??_main^(0+128),w
  9152  018A  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9153  018B  3189  2150  3180   	fcall	_DATAEE_WriteByte
  9154  018E                     l5034:
  9155                           
  9156                           ;main.c: 657: };main.c: 659: NREG = DATAEE_ReadByte(0x7000 + (1*8));
  9157  018E  3008               	movlw	8
  9158  018F  0021               	movlb	1	; select bank1
  9159  0190  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9160  0191  3070               	movlw	112
  9161  0192  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9162  0193  3197  2770  3180   	fcall	_DATAEE_ReadByte
  9163  0196  0021               	movlb	1	; select bank1
  9164  0197  00A9               	movwf	??_main^(0+128)
  9165  0198  0829               	movf	??_main^(0+128),w
  9166  0199  0020               	movlb	0	; select bank0
  9167  019A  00E7               	movwf	_NREG
  9168  019B                     l5036:
  9169                           
  9170                           ;main.c: 660: PMON = DATAEE_ReadByte(0x7000 + (2*8));
  9171  019B  3010               	movlw	16
  9172  019C  0021               	movlb	1	; select bank1
  9173  019D  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9174  019E  3070               	movlw	112
  9175  019F  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9176  01A0  3197  2770  3180   	fcall	_DATAEE_ReadByte
  9177  01A3  0021               	movlb	1	; select bank1
  9178  01A4  00A9               	movwf	??_main^(0+128)
  9179  01A5  0829               	movf	??_main^(0+128),w
  9180  01A6  00C0               	movwf	_PMON^(0+128)
  9181  01A7                     l5038:
  9182                           
  9183                           ;main.c: 661: TALA = DATAEE_ReadByte(0x7000 + (3*8));
  9184  01A7  3018               	movlw	24
  9185  01A8  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9186  01A9  3070               	movlw	112
  9187  01AA  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9188  01AB  3197  2770  3180   	fcall	_DATAEE_ReadByte
  9189  01AE  0021               	movlb	1	; select bank1
  9190  01AF  00A9               	movwf	??_main^(0+128)
  9191  01B0  0829               	movf	??_main^(0+128),w
  9192  01B1  0020               	movlb	0	; select bank0
  9193  01B2  00E6               	movwf	_TALA
  9194  01B3                     l5040:
  9195                           
  9196                           ;main.c: 662: clkAlarm.alarmVal.h = DATAEE_ReadByte(0x7000 + (4*8));
  9197  01B3  3020               	movlw	32
  9198  01B4  0021               	movlb	1	; select bank1
  9199  01B5  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9200  01B6  3070               	movlw	112
  9201  01B7  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9202  01B8  3197  2770  3180   	fcall	_DATAEE_ReadByte
  9203  01BB  0021               	movlb	1	; select bank1
  9204  01BC  00A9               	movwf	??_main^(0+128)
  9205  01BD  0829               	movf	??_main^(0+128),w
  9206  01BE  0020               	movlb	0	; select bank0
  9207  01BF  00CD               	movwf	_clkAlarm
  9208  01C0                     l5042:
  9209                           
  9210                           ;main.c: 663: clkAlarm.alarmVal.m = DATAEE_ReadByte(0x7000 + (5*8));
  9211  01C0  3028               	movlw	40
  9212  01C1  0021               	movlb	1	; select bank1
  9213  01C2  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9214  01C3  3070               	movlw	112
  9215  01C4  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9216  01C5  3197  2770  3180   	fcall	_DATAEE_ReadByte
  9217  01C8  0021               	movlb	1	; select bank1
  9218  01C9  00A9               	movwf	??_main^(0+128)
  9219  01CA  0829               	movf	??_main^(0+128),w
  9220  01CB  0020               	movlb	0	; select bank0
  9221  01CC  00CE               	movwf	_clkAlarm+1
  9222  01CD                     l5044:
  9223                           
  9224                           ;main.c: 664: clkAlarm.alarmVal.s = DATAEE_ReadByte(0x7000 + (6*8));
  9225  01CD  3030               	movlw	48
  9226  01CE  0021               	movlb	1	; select bank1
  9227  01CF  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9228  01D0  3070               	movlw	112
  9229  01D1  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9230  01D2  3197  2770  3180   	fcall	_DATAEE_ReadByte
  9231  01D5  0021               	movlb	1	; select bank1
  9232  01D6  00A9               	movwf	??_main^(0+128)
  9233  01D7  0829               	movf	??_main^(0+128),w
  9234  01D8  0020               	movlb	0	; select bank0
  9235  01D9  00CF               	movwf	_clkAlarm+2
  9236  01DA                     l5046:
  9237                           
  9238                           ;main.c: 665: tempAlarm.alarmTemp = DATAEE_ReadByte(0x7000 + (7*8));
  9239  01DA  3038               	movlw	56
  9240  01DB  0021               	movlb	1	; select bank1
  9241  01DC  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9242  01DD  3070               	movlw	112
  9243  01DE  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9244  01DF  3197  2770  3180   	fcall	_DATAEE_ReadByte
  9245  01E2  0021               	movlb	1	; select bank1
  9246  01E3  00A9               	movwf	??_main^(0+128)
  9247  01E4  0829               	movf	??_main^(0+128),w
  9248  01E5  0020               	movlb	0	; select bank0
  9249  01E6  00D4               	movwf	_tempAlarm
  9250  01E7                     l5048:
  9251                           
  9252                           ;main.c: 666: lumAlarm.alarmLum = DATAEE_ReadByte(0x7000 + (8*8));
  9253  01E7  3040               	movlw	64
  9254  01E8  0021               	movlb	1	; select bank1
  9255  01E9  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9256  01EA  3070               	movlw	112
  9257  01EB  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9258  01EC  3197  2770  3180   	fcall	_DATAEE_ReadByte
  9259  01EF  0021               	movlb	1	; select bank1
  9260  01F0  00A9               	movwf	??_main^(0+128)
  9261  01F1  0829               	movf	??_main^(0+128),w
  9262  01F2  0020               	movlb	0	; select bank0
  9263  01F3  00D1               	movwf	_lumAlarm
  9264  01F4                     l5050:
  9265                           
  9266                           ;main.c: 667: ALAF = DATAEE_ReadByte(0x7000 + (9*8));
  9267  01F4  3048               	movlw	72
  9268  01F5  0021               	movlb	1	; select bank1
  9269  01F6  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9270  01F7  3070               	movlw	112
  9271  01F8  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9272  01F9  3197  2770  3180   	fcall	_DATAEE_ReadByte
  9273  01FC  0021               	movlb	1	; select bank1
  9274  01FD  00A9               	movwf	??_main^(0+128)
  9275  01FE  0829               	movf	??_main^(0+128),w
  9276  01FF  0020               	movlb	0	; select bank0
  9277  0200  00E5               	movwf	_ALAF
  9278  0201                     l5052:
  9279                           
  9280                           ;main.c: 668: t.h = DATAEE_ReadByte(0x7000 + (10*8));
  9281  0201  3050               	movlw	80
  9282  0202  0021               	movlb	1	; select bank1
  9283  0203  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9284  0204  3070               	movlw	112
  9285  0205  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9286  0206  3197  2770  3180   	fcall	_DATAEE_ReadByte
  9287  0209  0021               	movlb	1	; select bank1
  9288  020A  00A9               	movwf	??_main^(0+128)
  9289  020B  0829               	movf	??_main^(0+128),w
  9290  020C  0020               	movlb	0	; select bank0
  9291  020D  00D7               	movwf	_t
  9292  020E                     l5054:
  9293                           
  9294                           ;main.c: 669: t.m = DATAEE_ReadByte(0x7000 + (11*8));
  9295  020E  3058               	movlw	88
  9296  020F  0021               	movlb	1	; select bank1
  9297  0210  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9298  0211  3070               	movlw	112
  9299  0212  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9300  0213  3197  2770  3180   	fcall	_DATAEE_ReadByte
  9301  0216  0021               	movlb	1	; select bank1
  9302  0217  00A9               	movwf	??_main^(0+128)
  9303  0218  0829               	movf	??_main^(0+128),w
  9304  0219  0020               	movlb	0	; select bank0
  9305  021A  00D8               	movwf	_t+1
  9306  021B                     l5056:
  9307                           
  9308                           ;main.c: 670: idx_RingBuffer = DATAEE_ReadByte(0x7000 + (12*8));
  9309  021B  3060               	movlw	96
  9310  021C  0021               	movlb	1	; select bank1
  9311  021D  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9312  021E  3070               	movlw	112
  9313  021F  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9314  0220  3197  2770  3180   	fcall	_DATAEE_ReadByte
  9315  0223  0021               	movlb	1	; select bank1
  9316  0224  00A9               	movwf	??_main^(0+128)
  9317  0225  0829               	movf	??_main^(0+128),w
  9318  0226  0020               	movlb	0	; select bank0
  9319  0227  00E4               	movwf	_idx_RingBuffer
  9320  0228                     l5058:
  9321                           
  9322                           ;main.c: 674: tempAlarm.trigger = 0;
  9323  0228  01D5               	clrf	_tempAlarm+1
  9324  0229                     l5060:
  9325                           
  9326                           ;main.c: 675: tempAlarm.triggered = 0;
  9327  0229  01D6               	clrf	_tempAlarm+2
  9328  022A                     l5062:
  9329                           
  9330                           ;main.c: 677: lumAlarm.trigger = 0;
  9331  022A  01D2               	clrf	_lumAlarm+1
  9332  022B                     l5064:
  9333                           
  9334                           ;main.c: 678: lumAlarm.triggered = 0;
  9335  022B  01D3               	clrf	_lumAlarm+2
  9336  022C                     l5066:
  9337                           
  9338                           ;main.c: 680: clkAlarm.trigger = 0;
  9339  022C  01D0               	clrf	_clkAlarm+3
  9340  022D                     l5068:
  9341                           
  9342                           ;main.c: 683: i2c1_driver_open();
  9343  022D  3197  2749  3180   	fcall	_i2c1_driver_open
  9344  0230                     l5070:
  9345                           
  9346                           ;main.c: 684: TRISCbits.TRISC3 = 1;
  9347  0230  0020               	movlb	0	; select bank0
  9348  0231  1593               	bsf	19,3	;volatile
  9349  0232                     l5072:
  9350                           
  9351                           ;main.c: 685: TRISCbits.TRISC4 = 1;
  9352  0232  1613               	bsf	19,4	;volatile
  9353  0233                     l5074:
  9354                           
  9355                           ;main.c: 686: WPUC3 = 1;
  9356  0233  003E               	movlb	30	; select bank30
  9357  0234  15CF               	bsf	79,3	;volatile
  9358  0235                     l5076:
  9359                           
  9360                           ;main.c: 687: WPUC4 = 1;
  9361  0235  164F               	bsf	79,4	;volatile
  9362  0236                     l5078:
  9363                           
  9364                           ;main.c: 688: LCDinit();
  9365  0236  318B  23F5  3180   	fcall	_LCDinit
  9366  0239                     l5080:
  9367                           
  9368                           ;main.c: 691: (INTCONbits.GIE = 1);
  9369  0239  178B               	bsf	11,7	;volatile
  9370  023A                     l5082:
  9371                           
  9372                           ;main.c: 694: (INTCONbits.PEIE = 1);
  9373  023A  170B               	bsf	11,6	;volatile
  9374  023B                     l5084:
  9375                           
  9376                           ;main.c: 697: {;main.c: 698: if(PORTBbits.RB4 == 0){
  9377  023B  0020               	movlb	0	; select bank0
  9378  023C  1A0D               	btfsc	13,4	;volatile
  9379  023D  2A3F               	goto	u4851
  9380  023E  2A40               	goto	u4850
  9381  023F                     u4851:
  9382  023F  2A79               	goto	l5102
  9383  0240                     u4850:
  9384  0240                     l5086:
  9385                           
  9386                           ;main.c: 699: _delay((unsigned long)((50)*(1000000/4000.0)));
  9387  0240  3011               	movlw	17
  9388  0241  0021               	movlb	1	; select bank1
  9389  0242  00A9               	movwf	??_main^(0+128)
  9390  0243  303A               	movlw	58
  9391  0244                     u4917:
  9392  0244  0B89               	decfsz	9,f
  9393  0245  2A44               	goto	u4917
  9394  0246  0BA9               	decfsz	??_main^(0+128),f
  9395  0247  2A44               	goto	u4917
  9396  0248  0000               	nop
  9397  0249                     l5088:
  9398                           
  9399                           ;main.c: 701: if(mode == 0 && (clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigger
      +                          )){
  9400  0249  0020               	movlb	0	; select bank0
  9401  024A  085A               	movf	_mode,w
  9402  024B  045B               	iorwf	_mode+1,w
  9403  024C  1D03               	btfss	3,2
  9404  024D  2A4F               	goto	u4861
  9405  024E  2A50               	goto	u4860
  9406  024F                     u4861:
  9407  024F  2A63               	goto	l5098
  9408  0250                     u4860:
  9409  0250                     l5090:
  9410  0250  0850               	movf	_clkAlarm+3,w
  9411  0251  1D03               	btfss	3,2
  9412  0252  2A54               	goto	u4871
  9413  0253  2A55               	goto	u4870
  9414  0254                     u4871:
  9415  0254  2A5F               	goto	l5096
  9416  0255                     u4870:
  9417  0255                     l5092:
  9418  0255  0855               	movf	_tempAlarm+1,w
  9419  0256  1D03               	btfss	3,2
  9420  0257  2A59               	goto	u4881
  9421  0258  2A5A               	goto	u4880
  9422  0259                     u4881:
  9423  0259  2A5F               	goto	l5096
  9424  025A                     u4880:
  9425  025A                     l5094:
  9426  025A  0852               	movf	_lumAlarm+1,w
  9427  025B  1903               	btfsc	3,2
  9428  025C  2A5E               	goto	u4891
  9429  025D  2A5F               	goto	u4890
  9430  025E                     u4891:
  9431  025E  2A63               	goto	l5098
  9432  025F                     u4890:
  9433  025F                     l5096:
  9434                           
  9435                           ;main.c: 702: clkAlarm.trigger = 0;
  9436  025F  01D0               	clrf	_clkAlarm+3
  9437                           
  9438                           ;main.c: 703: tempAlarm.trigger = 0;
  9439  0260  01D5               	clrf	_tempAlarm+1
  9440                           
  9441                           ;main.c: 704: lumAlarm.trigger = 0;
  9442  0261  01D2               	clrf	_lumAlarm+1
  9443                           
  9444                           ;main.c: 705: }
  9445  0262  2A67               	goto	l1285
  9446  0263                     l5098:
  9447                           
  9448                           ;main.c: 706: else{;main.c: 707: mode = 1;
  9449  0263  3001               	movlw	1
  9450  0264  00DA               	movwf	_mode
  9451  0265  3000               	movlw	0
  9452  0266  00DB               	movwf	_mode+1
  9453  0267                     l1285:
  9454  0267  1E0D               	btfss	13,4	;volatile
  9455  0268  2A6A               	goto	u4901
  9456  0269  2A6B               	goto	u4900
  9457  026A                     u4901:
  9458  026A  2A67               	goto	l1285
  9459  026B                     u4900:
  9460  026B  2A79               	goto	l5102
  9461  026C                     l5100:
  9462                           
  9463                           ;main.c: 715: editClock();
  9464  026C  3187  277B  3180   	fcall	_editClock
  9465  026F                     l1292:	
  9466                           ;main.c: 716: case 2:
  9467                           
  9468                           
  9469                           ;main.c: 717: editTemp();
  9470  026F  318A  2214  3180   	fcall	_editTemp
  9471  0272                     l1293:	
  9472                           ;main.c: 718: case 3:
  9473                           
  9474                           
  9475                           ;main.c: 719: editLum();
  9476  0272  3189  21DC  3180   	fcall	_editLum
  9477  0275                     l1294:	
  9478                           ;main.c: 720: case 4:
  9479                           
  9480                           
  9481                           ;main.c: 721: toggleAlarms();
  9482  0275  318A  224C  3180   	fcall	_toggleAlarms
  9483                           
  9484                           ;main.c: 722: }
  9485  0278  2A3B               	goto	l5084
  9486  0279                     l5102:
  9487                           
  9488                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9489                           ; Switch size 1, requested type "simple"
  9490                           ; Number of cases is 1, Range of values is 0 to 0
  9491                           ; switch strategies available:
  9492                           ; Name         Instructions Cycles
  9493                           ; simple_byte            4     3 (average)
  9494                           ; direct_byte            8     6 (fixed)
  9495                           ; jumptable            260     6 (fixed)
  9496                           ;	Chosen strategy is simple_byte
  9497  0279  085B               	movf	_mode+1,w
  9498  027A  3A00               	xorlw	0	; case 0
  9499  027B  1903               	skipnz
  9500  027C  2A7E               	goto	l5128
  9501  027D  2A3B               	goto	l5084
  9502  027E                     l5128:
  9503                           
  9504                           ; Switch size 1, requested type "simple"
  9505                           ; Number of cases is 5, Range of values is 0 to 4
  9506                           ; switch strategies available:
  9507                           ; Name         Instructions Cycles
  9508                           ; direct_byte           16     6 (fixed)
  9509                           ; simple_byte           16     9 (average)
  9510                           ; jumptable            260     6 (fixed)
  9511                           ;	Chosen strategy is simple_byte
  9512  027E  085A               	movf	_mode,w
  9513  027F  3A00               	xorlw	0	; case 0
  9514  0280  1903               	skipnz
  9515  0281  2A3B               	goto	l5084
  9516  0282  3A01               	xorlw	1	; case 1
  9517  0283  1903               	skipnz
  9518  0284  2A6C               	goto	l5100
  9519  0285  3A03               	xorlw	3	; case 2
  9520  0286  1903               	skipnz
  9521  0287  2A6F               	goto	l1292
  9522  0288  3A01               	xorlw	1	; case 3
  9523  0289  1903               	skipnz
  9524  028A  2A72               	goto	l1293
  9525  028B  3A07               	xorlw	7	; case 4
  9526  028C  1903               	skipnz
  9527  028D  2A75               	goto	l1294
  9528  028E  2A3B               	goto	l5084
  9529  028F  3180  2840         	ljmp	start
  9530  0291                     __end_of_main:
  9531                           
  9532                           	psect	text1
  9533  0A4C                     __ptext1:	
  9534 ;; *************** function _toggleAlarms *****************
  9535 ;; Defined at:
  9536 ;;		line 593 in file "main.c"
  9537 ;; Parameters:    Size  Location     Type
  9538 ;;		None
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;		None
  9541 ;; Return value:  Size  Location     Type
  9542 ;;                  1    wreg      void 
  9543 ;; Registers used:
  9544 ;;		wreg, status,2, status,0
  9545 ;; Tracked objects:
  9546 ;;		On entry : 0/0
  9547 ;;		On exit  : 0/0
  9548 ;;		Unchanged: 0/0
  9549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9552 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9553 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9554 ;;Total ram usage:        1 bytes
  9555 ;; Hardware stack levels used:    1
  9556 ;; Hardware stack levels required when called:    7
  9557 ;; This function calls:
  9558 ;;		Nothing
  9559 ;; This function is called by:
  9560 ;;		_main
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564                           
  9565                           ;psect for function _toggleAlarms
  9566  0A4C                     _toggleAlarms:
  9567  0A4C                     l1257:	
  9568                           ;incstack = 0
  9569                           ; Regs used in _toggleAlarms: [wreg+status,2+status,0]
  9570                           ;main.c: 595: while(1){
  9571                           
  9572                           
  9573                           ;main.c: 596: if(PORTBbits.RB4 == 0){
  9574  0A4C  0020               	movlb	0	; select bank0
  9575  0A4D  1A0D               	btfsc	13,4	;volatile
  9576  0A4E  2A50               	goto	u4661
  9577  0A4F  2A51               	goto	u4660
  9578  0A50                     u4661:
  9579  0A50  2A62               	goto	l1258
  9580  0A51                     u4660:
  9581  0A51                     l4944:
  9582                           
  9583                           ;main.c: 597: _delay((unsigned long)((50)*(1000000/4000.0)));
  9584  0A51  3011               	movlw	17
  9585  0A52  0021               	movlb	1	; select bank1
  9586  0A53  00A0               	movwf	??_toggleAlarms^(0+128)
  9587  0A54  303A               	movlw	58
  9588  0A55                     u4927:
  9589  0A55  0B89               	decfsz	9,f
  9590  0A56  2A55               	goto	u4927
  9591  0A57  0BA0               	decfsz	??_toggleAlarms^(0+128),f
  9592  0A58  2A55               	goto	u4927
  9593  0A59  0000               	nop
  9594  0A5A                     l4946:
  9595                           
  9596                           ;main.c: 598: mode = 0;
  9597  0A5A  0020               	movlb	0	; select bank0
  9598  0A5B  01DA               	clrf	_mode
  9599  0A5C  01DB               	clrf	_mode+1
  9600  0A5D                     l1259:	
  9601                           ;main.c: 599: while(PORTBbits.RB4==0){};
  9602                           
  9603  0A5D  1E0D               	btfss	13,4	;volatile
  9604  0A5E  2A60               	goto	u4671
  9605  0A5F  2A61               	goto	u4670
  9606  0A60                     u4671:
  9607  0A60  2A5D               	goto	l1259
  9608  0A61                     u4670:
  9609  0A61  2A83               	goto	l1267
  9610  0A62                     l1258:
  9611                           
  9612                           ;main.c: 601: };main.c: 603: if(PORTCbits.RC5 == 0){
  9613  0A62  1A8E               	btfsc	14,5	;volatile
  9614  0A63  2A65               	goto	u4681
  9615  0A64  2A66               	goto	u4680
  9616  0A65                     u4681:
  9617  0A65  2A4C               	goto	l1257
  9618  0A66                     u4680:
  9619  0A66                     l4948:
  9620                           
  9621                           ;main.c: 604: if(ALAF == 'A'){
  9622  0A66  3041               	movlw	65
  9623  0A67  0665               	xorwf	_ALAF,w
  9624  0A68  1D03               	btfss	3,2
  9625  0A69  2A6B               	goto	u4691
  9626  0A6A  2A6C               	goto	u4690
  9627  0A6B                     u4691:
  9628  0A6B  2A73               	goto	l4952
  9629  0A6C                     u4690:
  9630  0A6C                     l4950:
  9631                           
  9632                           ;main.c: 605: ALAF = 'a';
  9633  0A6C  3061               	movlw	97
  9634  0A6D  0021               	movlb	1	; select bank1
  9635  0A6E  00A0               	movwf	??_toggleAlarms^(0+128)
  9636  0A6F  0820               	movf	??_toggleAlarms^(0+128),w
  9637  0A70  0020               	movlb	0	; select bank0
  9638  0A71  00E5               	movwf	_ALAF
  9639                           
  9640                           ;main.c: 606: } else {
  9641  0A72  2A79               	goto	l1265
  9642  0A73                     l4952:
  9643                           
  9644                           ;main.c: 607: ALAF = 'A';
  9645  0A73  3041               	movlw	65
  9646  0A74  0021               	movlb	1	; select bank1
  9647  0A75  00A0               	movwf	??_toggleAlarms^(0+128)
  9648  0A76  0820               	movf	??_toggleAlarms^(0+128),w
  9649  0A77  0020               	movlb	0	; select bank0
  9650  0A78  00E5               	movwf	_ALAF
  9651  0A79                     l1265:
  9652                           
  9653                           ;main.c: 608: };main.c: 609: _delay((unsigned long)((100)*(1000000/4000.0)));
  9654  0A79  3021               	movlw	33
  9655  0A7A  0021               	movlb	1	; select bank1
  9656  0A7B  00A0               	movwf	??_toggleAlarms^(0+128)
  9657  0A7C  3076               	movlw	118
  9658  0A7D                     u4937:
  9659  0A7D  0B89               	decfsz	9,f
  9660  0A7E  2A7D               	goto	u4937
  9661  0A7F  0BA0               	decfsz	??_toggleAlarms^(0+128),f
  9662  0A80  2A7D               	goto	u4937
  9663  0A81  0000               	nop
  9664  0A82  2A4C               	goto	l1257
  9665  0A83                     l1267:
  9666  0A83  0008               	return
  9667  0A84                     __end_of_toggleAlarms:
  9668                           
  9669                           	psect	text2
  9670  1749                     __ptext2:	
  9671 ;; *************** function _i2c1_driver_open *****************
  9672 ;; Defined at:
  9673 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  9674 ;; Parameters:    Size  Location     Type
  9675 ;;		None
  9676 ;; Auto vars:     Size  Location     Type
  9677 ;;		None
  9678 ;; Return value:  Size  Location     Type
  9679 ;;		None               void
  9680 ;; Registers used:
  9681 ;;		wreg, status,2
  9682 ;; Tracked objects:
  9683 ;;		On entry : 0/0
  9684 ;;		On exit  : 0/0
  9685 ;;		Unchanged: 0/0
  9686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9691 ;;Total ram usage:        0 bytes
  9692 ;; Hardware stack levels used:    1
  9693 ;; Hardware stack levels required when called:    7
  9694 ;; This function calls:
  9695 ;;		Nothing
  9696 ;; This function is called by:
  9697 ;;		_main
  9698 ;; This function uses a non-reentrant model
  9699 ;;
  9700                           
  9701                           
  9702                           ;psect for function _i2c1_driver_open
  9703  1749                     _i2c1_driver_open:
  9704  1749                     l4696:	
  9705                           ;incstack = 0
  9706                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  9707                           
  9708                           
  9709                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
  9710  1749  0023               	movlb	3	; select bank3
  9711  174A  1A90               	btfsc	16,5	;volatile
  9712  174B  2F4D               	goto	u4151
  9713  174C  2F4E               	goto	u4150
  9714  174D                     u4151:
  9715  174D  2F54               	goto	l239
  9716  174E                     u4150:
  9717  174E                     l4698:
  9718                           
  9719                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
  9720  174E  018F               	clrf	15	;volatile
  9721  174F                     l4700:
  9722                           
  9723                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
  9724  174F  3028               	movlw	40
  9725  1750  0090               	movwf	16	;volatile
  9726  1751                     l4702:
  9727                           
  9728                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
  9729  1751  0191               	clrf	17	;volatile
  9730                           
  9731                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
  9732  1752  3003               	movlw	3
  9733  1753  008D               	movwf	13	;volatile
  9734  1754                     l239:
  9735  1754  0008               	return
  9736  1755                     __end_of_i2c1_driver_open:
  9737                           
  9738                           	psect	text3
  9739  0A14                     __ptext3:	
  9740 ;; *************** function _editTemp *****************
  9741 ;; Defined at:
  9742 ;;		line 549 in file "main.c"
  9743 ;; Parameters:    Size  Location     Type
  9744 ;;		None
  9745 ;; Auto vars:     Size  Location     Type
  9746 ;;		None
  9747 ;; Return value:  Size  Location     Type
  9748 ;;                  1    wreg      void 
  9749 ;; Registers used:
  9750 ;;		wreg, status,2, status,0
  9751 ;; Tracked objects:
  9752 ;;		On entry : 0/0
  9753 ;;		On exit  : 0/0
  9754 ;;		Unchanged: 0/0
  9755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9758 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9759 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9760 ;;Total ram usage:        1 bytes
  9761 ;; Hardware stack levels used:    1
  9762 ;; Hardware stack levels required when called:    7
  9763 ;; This function calls:
  9764 ;;		Nothing
  9765 ;; This function is called by:
  9766 ;;		_main
  9767 ;; This function uses a non-reentrant model
  9768 ;;
  9769                           
  9770                           
  9771                           ;psect for function _editTemp
  9772  0A14                     _editTemp:
  9773  0A14                     l4912:	
  9774                           ;incstack = 0
  9775                           ; Regs used in _editTemp: [wreg+status,2+status,0]
  9776                           
  9777                           
  9778                           ;main.c: 550: editingTempAlarm = 1;
  9779  0A14  0020               	movlb	0	; select bank0
  9780  0A15  01E1               	clrf	_editingTempAlarm
  9781  0A16  0AE1               	incf	_editingTempAlarm,f
  9782  0A17                     l1233:	
  9783                           ;main.c: 552: while(1){
  9784                           
  9785                           
  9786                           ;main.c: 553: if(PORTBbits.RB4 == 0){
  9787  0A17  0020               	movlb	0	; select bank0
  9788  0A18  1A0D               	btfsc	13,4	;volatile
  9789  0A19  2A1B               	goto	u4581
  9790  0A1A  2A1C               	goto	u4580
  9791  0A1B                     u4581:
  9792  0A1B  2A30               	goto	l1234
  9793  0A1C                     u4580:
  9794  0A1C                     l4914:
  9795                           
  9796                           ;main.c: 554: _delay((unsigned long)((50)*(1000000/4000.0)));
  9797  0A1C  3011               	movlw	17
  9798  0A1D  0021               	movlb	1	; select bank1
  9799  0A1E  00A0               	movwf	??_editTemp^(0+128)
  9800  0A1F  303A               	movlw	58
  9801  0A20                     u4947:
  9802  0A20  0B89               	decfsz	9,f
  9803  0A21  2A20               	goto	u4947
  9804  0A22  0BA0               	decfsz	??_editTemp^(0+128),f
  9805  0A23  2A20               	goto	u4947
  9806  0A24  0000               	nop
  9807  0A25                     l4916:
  9808                           
  9809                           ;main.c: 555: editingTempAlarm = 0;
  9810  0A25  0020               	movlb	0	; select bank0
  9811  0A26  01E1               	clrf	_editingTempAlarm
  9812  0A27                     l4918:
  9813                           
  9814                           ;main.c: 556: mode = 3;
  9815  0A27  3003               	movlw	3
  9816  0A28  00DA               	movwf	_mode
  9817  0A29  3000               	movlw	0
  9818  0A2A  00DB               	movwf	_mode+1
  9819  0A2B                     l1235:	
  9820                           ;main.c: 557: while(PORTBbits.RB4==0){};
  9821                           
  9822  0A2B  1E0D               	btfss	13,4	;volatile
  9823  0A2C  2A2E               	goto	u4591
  9824  0A2D  2A2F               	goto	u4590
  9825  0A2E                     u4591:
  9826  0A2E  2A2B               	goto	l1235
  9827  0A2F                     u4590:
  9828  0A2F  2A4B               	goto	l1242
  9829  0A30                     l1234:
  9830                           
  9831                           ;main.c: 559: };main.c: 561: if(PORTCbits.RC5 == 0){
  9832  0A30  1A8E               	btfsc	14,5	;volatile
  9833  0A31  2A33               	goto	u4601
  9834  0A32  2A34               	goto	u4600
  9835  0A33                     u4601:
  9836  0A33  2A17               	goto	l1233
  9837  0A34                     u4600:
  9838  0A34                     l4920:
  9839                           
  9840                           ;main.c: 562: tempAlarm.alarmTemp++;
  9841  0A34  3001               	movlw	1
  9842  0A35  0021               	movlb	1	; select bank1
  9843  0A36  00A0               	movwf	??_editTemp^(0+128)
  9844  0A37  0820               	movf	??_editTemp^(0+128),w
  9845  0A38  0020               	movlb	0	; select bank0
  9846  0A39  07D4               	addwf	_tempAlarm,f
  9847  0A3A                     l4922:
  9848                           
  9849                           ;main.c: 563: if(tempAlarm.alarmTemp > 50){
  9850  0A3A  3033               	movlw	51
  9851  0A3B  0254               	subwf	_tempAlarm,w
  9852  0A3C  1C03               	skipc
  9853  0A3D  2A3F               	goto	u4611
  9854  0A3E  2A40               	goto	u4610
  9855  0A3F                     u4611:
  9856  0A3F  2A41               	goto	l4926
  9857  0A40                     u4610:
  9858  0A40                     l4924:
  9859                           
  9860                           ;main.c: 564: tempAlarm.alarmTemp = 0;
  9861  0A40  01D4               	clrf	_tempAlarm
  9862  0A41                     l4926:
  9863                           
  9864                           ;main.c: 565: };main.c: 566: _delay((unsigned long)((100)*(1000000/4000.0)));
  9865  0A41  3021               	movlw	33
  9866  0A42  0021               	movlb	1	; select bank1
  9867  0A43  00A0               	movwf	??_editTemp^(0+128)
  9868  0A44  3076               	movlw	118
  9869  0A45                     u4957:
  9870  0A45  0B89               	decfsz	9,f
  9871  0A46  2A45               	goto	u4957
  9872  0A47  0BA0               	decfsz	??_editTemp^(0+128),f
  9873  0A48  2A45               	goto	u4957
  9874  0A49  0000               	nop
  9875  0A4A  2A17               	goto	l1233
  9876  0A4B                     l1242:
  9877  0A4B  0008               	return
  9878  0A4C                     __end_of_editTemp:
  9879                           
  9880                           	psect	text4
  9881  09DC                     __ptext4:	
  9882 ;; *************** function _editLum *****************
  9883 ;; Defined at:
  9884 ;;		line 571 in file "main.c"
  9885 ;; Parameters:    Size  Location     Type
  9886 ;;		None
  9887 ;; Auto vars:     Size  Location     Type
  9888 ;;		None
  9889 ;; Return value:  Size  Location     Type
  9890 ;;                  1    wreg      void 
  9891 ;; Registers used:
  9892 ;;		wreg, status,2, status,0
  9893 ;; Tracked objects:
  9894 ;;		On entry : 0/0
  9895 ;;		On exit  : 0/0
  9896 ;;		Unchanged: 0/0
  9897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9900 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9901 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9902 ;;Total ram usage:        1 bytes
  9903 ;; Hardware stack levels used:    1
  9904 ;; Hardware stack levels required when called:    7
  9905 ;; This function calls:
  9906 ;;		Nothing
  9907 ;; This function is called by:
  9908 ;;		_main
  9909 ;; This function uses a non-reentrant model
  9910 ;;
  9911                           
  9912                           
  9913                           ;psect for function _editLum
  9914  09DC                     _editLum:
  9915  09DC                     l4928:	
  9916                           ;incstack = 0
  9917                           ; Regs used in _editLum: [wreg+status,2+status,0]
  9918                           
  9919                           
  9920                           ;main.c: 572: editingLumAlarm = 1;
  9921  09DC  0020               	movlb	0	; select bank0
  9922  09DD  01E0               	clrf	_editingLumAlarm
  9923  09DE  0AE0               	incf	_editingLumAlarm,f
  9924  09DF                     l1245:	
  9925                           ;main.c: 574: while(1){
  9926                           
  9927                           
  9928                           ;main.c: 575: if(PORTBbits.RB4 == 0){
  9929  09DF  0020               	movlb	0	; select bank0
  9930  09E0  1A0D               	btfsc	13,4	;volatile
  9931  09E1  29E3               	goto	u4621
  9932  09E2  29E4               	goto	u4620
  9933  09E3                     u4621:
  9934  09E3  29F8               	goto	l1246
  9935  09E4                     u4620:
  9936  09E4                     l4930:
  9937                           
  9938                           ;main.c: 576: _delay((unsigned long)((50)*(1000000/4000.0)));
  9939  09E4  3011               	movlw	17
  9940  09E5  0021               	movlb	1	; select bank1
  9941  09E6  00A0               	movwf	??_editLum^(0+128)
  9942  09E7  303A               	movlw	58
  9943  09E8                     u4967:
  9944  09E8  0B89               	decfsz	9,f
  9945  09E9  29E8               	goto	u4967
  9946  09EA  0BA0               	decfsz	??_editLum^(0+128),f
  9947  09EB  29E8               	goto	u4967
  9948  09EC  0000               	nop
  9949  09ED                     l4932:
  9950                           
  9951                           ;main.c: 577: editingLumAlarm = 0;
  9952  09ED  0020               	movlb	0	; select bank0
  9953  09EE  01E0               	clrf	_editingLumAlarm
  9954  09EF                     l4934:
  9955                           
  9956                           ;main.c: 578: mode = 4;
  9957  09EF  3004               	movlw	4
  9958  09F0  00DA               	movwf	_mode
  9959  09F1  3000               	movlw	0
  9960  09F2  00DB               	movwf	_mode+1
  9961  09F3                     l1247:	
  9962                           ;main.c: 579: while(PORTBbits.RB4==0){};
  9963                           
  9964  09F3  1E0D               	btfss	13,4	;volatile
  9965  09F4  29F6               	goto	u4631
  9966  09F5  29F7               	goto	u4630
  9967  09F6                     u4631:
  9968  09F6  29F3               	goto	l1247
  9969  09F7                     u4630:
  9970  09F7  2A13               	goto	l1254
  9971  09F8                     l1246:
  9972                           
  9973                           ;main.c: 581: };main.c: 583: if(PORTCbits.RC5 == 0){
  9974  09F8  1A8E               	btfsc	14,5	;volatile
  9975  09F9  29FB               	goto	u4641
  9976  09FA  29FC               	goto	u4640
  9977  09FB                     u4641:
  9978  09FB  29DF               	goto	l1245
  9979  09FC                     u4640:
  9980  09FC                     l4936:
  9981                           
  9982                           ;main.c: 584: lumAlarm.alarmLum++;
  9983  09FC  3001               	movlw	1
  9984  09FD  0021               	movlb	1	; select bank1
  9985  09FE  00A0               	movwf	??_editLum^(0+128)
  9986  09FF  0820               	movf	??_editLum^(0+128),w
  9987  0A00  0020               	movlb	0	; select bank0
  9988  0A01  07D1               	addwf	_lumAlarm,f
  9989  0A02                     l4938:
  9990                           
  9991                           ;main.c: 585: if(lumAlarm.alarmLum > 7){
  9992  0A02  3008               	movlw	8
  9993  0A03  0251               	subwf	_lumAlarm,w
  9994  0A04  1C03               	skipc
  9995  0A05  2A07               	goto	u4651
  9996  0A06  2A08               	goto	u4650
  9997  0A07                     u4651:
  9998  0A07  2A09               	goto	l4942
  9999  0A08                     u4650:
 10000  0A08                     l4940:
 10001                           
 10002                           ;main.c: 586: lumAlarm.alarmLum = 0;
 10003  0A08  01D1               	clrf	_lumAlarm
 10004  0A09                     l4942:
 10005                           
 10006                           ;main.c: 587: };main.c: 588: _delay((unsigned long)((100)*(1000000/4000.0)));
 10007  0A09  3021               	movlw	33
 10008  0A0A  0021               	movlb	1	; select bank1
 10009  0A0B  00A0               	movwf	??_editLum^(0+128)
 10010  0A0C  3076               	movlw	118
 10011  0A0D                     u4977:
 10012  0A0D  0B89               	decfsz	9,f
 10013  0A0E  2A0D               	goto	u4977
 10014  0A0F  0BA0               	decfsz	??_editLum^(0+128),f
 10015  0A10  2A0D               	goto	u4977
 10016  0A11  0000               	nop
 10017  0A12  29DF               	goto	l1245
 10018  0A13                     l1254:
 10019  0A13  0008               	return
 10020  0A14                     __end_of_editLum:
 10021                           
 10022                           	psect	text5
 10023  077B                     __ptext5:	
 10024 ;; *************** function _editClock *****************
 10025 ;; Defined at:
 10026 ;;		line 508 in file "main.c"
 10027 ;; Parameters:    Size  Location     Type
 10028 ;;		None
 10029 ;; Auto vars:     Size  Location     Type
 10030 ;;		None
 10031 ;; Return value:  Size  Location     Type
 10032 ;;                  1    wreg      void 
 10033 ;; Registers used:
 10034 ;;		wreg, status,2, status,0
 10035 ;; Tracked objects:
 10036 ;;		On entry : 0/0
 10037 ;;		On exit  : 0/0
 10038 ;;		Unchanged: 0/0
 10039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10042 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10043 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10044 ;;Total ram usage:        1 bytes
 10045 ;; Hardware stack levels used:    1
 10046 ;; Hardware stack levels required when called:    7
 10047 ;; This function calls:
 10048 ;;		Nothing
 10049 ;; This function is called by:
 10050 ;;		_main
 10051 ;; This function uses a non-reentrant model
 10052 ;;
 10053                           
 10054                           
 10055                           ;psect for function _editClock
 10056  077B                     _editClock:
 10057  077B                     l4874:	
 10058                           ;incstack = 0
 10059                           ; Regs used in _editClock: [wreg+status,2+status,0]
 10060                           
 10061                           
 10062                           ;main.c: 510: editingClockAlarm = 1;
 10063  077B  3001               	movlw	1
 10064  077C  0020               	movlb	0	; select bank0
 10065  077D  00DC               	movwf	_editingClockAlarm
 10066  077E  3000               	movlw	0
 10067  077F  00DD               	movwf	_editingClockAlarm+1
 10068  0780                     l4876:
 10069                           
 10070                           ;main.c: 513: if(PORTBbits.RB4 == 0){
 10071  0780  0020               	movlb	0	; select bank0
 10072  0781  1A0D               	btfsc	13,4	;volatile
 10073  0782  2F84               	goto	u4481
 10074  0783  2F85               	goto	u4480
 10075  0784                     u4481:
 10076  0784  2FAE               	goto	l1211
 10077  0785                     u4480:
 10078  0785                     l4878:
 10079                           
 10080                           ;main.c: 514: _delay((unsigned long)((50)*(1000000/4000.0)));
 10081  0785  3011               	movlw	17
 10082  0786  0021               	movlb	1	; select bank1
 10083  0787  00A0               	movwf	??_editClock^(0+128)
 10084  0788  303A               	movlw	58
 10085  0789                     u4987:
 10086  0789  0B89               	decfsz	9,f
 10087  078A  2F89               	goto	u4987
 10088  078B  0BA0               	decfsz	??_editClock^(0+128),f
 10089  078C  2F89               	goto	u4987
 10090  078D  0000               	nop
 10091                           
 10092                           ;main.c: 515: editingClockAlarm++;
 10093  078E  3001               	movlw	1
 10094  078F  0020               	movlb	0	; select bank0
 10095  0790  07DC               	addwf	_editingClockAlarm,f
 10096  0791  3000               	movlw	0
 10097  0792  3DDD               	addwfc	_editingClockAlarm+1,f
 10098  0793                     l1212:	
 10099                           ;main.c: 516: while(PORTBbits.RB4==0){};
 10100                           
 10101  0793  1E0D               	btfss	13,4	;volatile
 10102  0794  2F96               	goto	u4491
 10103  0795  2F97               	goto	u4490
 10104  0796                     u4491:
 10105  0796  2F93               	goto	l1212
 10106  0797                     u4490:
 10107  0797                     l4880:
 10108                           
 10109                           ;main.c: 517: if(editingClockAlarm > 3){
 10110  0797  085D               	movf	_editingClockAlarm+1,w
 10111  0798  3A80               	xorlw	128
 10112  0799  0021               	movlb	1	; select bank1
 10113  079A  00A0               	movwf	??_editClock^(0+128)
 10114  079B  3080               	movlw	128
 10115  079C  0220               	subwf	??_editClock^(0+128),w
 10116  079D  1D03               	skipz
 10117  079E  2FA2               	goto	u4505
 10118  079F  3004               	movlw	4
 10119  07A0  0020               	movlb	0	; select bank0
 10120  07A1  025C               	subwf	_editingClockAlarm,w
 10121  07A2                     u4505:
 10122  07A2  1C03               	skipc
 10123  07A3  2FA5               	goto	u4501
 10124  07A4  2FA6               	goto	u4500
 10125  07A5                     u4501:
 10126  07A5  2FAE               	goto	l1211
 10127  07A6                     u4500:
 10128  07A6                     l4882:
 10129                           
 10130                           ;main.c: 518: editingClockAlarm = 0;
 10131  07A6  0020               	movlb	0	; select bank0
 10132  07A7  01DC               	clrf	_editingClockAlarm
 10133  07A8  01DD               	clrf	_editingClockAlarm+1
 10134  07A9                     l4884:
 10135                           
 10136                           ;main.c: 519: mode = 2;
 10137  07A9  3002               	movlw	2
 10138  07AA  00DA               	movwf	_mode
 10139  07AB  3000               	movlw	0
 10140  07AC  00DB               	movwf	_mode+1
 10141                           
 10142                           ;main.c: 520: break;
 10143  07AD  2FFD               	goto	l1230
 10144  07AE                     l1211:
 10145                           
 10146                           ;main.c: 521: };main.c: 522: };main.c: 524: if(PORTCbits.RC5 == 0){
 10147  07AE  0020               	movlb	0	; select bank0
 10148  07AF  1A8E               	btfsc	14,5	;volatile
 10149  07B0  2FB2               	goto	u4511
 10150  07B1  2FB3               	goto	u4510
 10151  07B2                     u4511:
 10152  07B2  2F80               	goto	l4876
 10153  07B3                     u4510:
 10154  07B3                     l4886:
 10155                           
 10156                           ;main.c: 525: if(editingClockAlarm == 1){
 10157  07B3  035C               	decf	_editingClockAlarm,w
 10158  07B4  045D               	iorwf	_editingClockAlarm+1,w
 10159  07B5  1D03               	btfss	3,2
 10160  07B6  2FB8               	goto	u4521
 10161  07B7  2FB9               	goto	u4520
 10162  07B8                     u4521:
 10163  07B8  2FC8               	goto	l4894
 10164  07B9                     u4520:
 10165  07B9                     l4888:
 10166                           
 10167                           ;main.c: 526: if(clkAlarm.alarmVal.h >= 23){
 10168  07B9  3017               	movlw	23
 10169  07BA  024D               	subwf	_clkAlarm,w
 10170  07BB  1C03               	skipc
 10171  07BC  2FBE               	goto	u4531
 10172  07BD  2FBF               	goto	u4530
 10173  07BE                     u4531:
 10174  07BE  2FC1               	goto	l4892
 10175  07BF                     u4530:
 10176  07BF                     l4890:
 10177                           
 10178                           ;main.c: 527: clkAlarm.alarmVal.h = 0;
 10179  07BF  01CD               	clrf	_clkAlarm
 10180                           
 10181                           ;main.c: 528: } else{
 10182  07C0  2FF3               	goto	l4910
 10183  07C1                     l4892:
 10184                           
 10185                           ;main.c: 529: clkAlarm.alarmVal.h++;
 10186  07C1  3001               	movlw	1
 10187  07C2  0021               	movlb	1	; select bank1
 10188  07C3  00A0               	movwf	??_editClock^(0+128)
 10189  07C4  0820               	movf	??_editClock^(0+128),w
 10190  07C5  0020               	movlb	0	; select bank0
 10191  07C6  07CD               	addwf	_clkAlarm,f
 10192  07C7  2FF3               	goto	l4910
 10193  07C8                     l4894:
 10194  07C8  3002               	movlw	2
 10195  07C9  065C               	xorwf	_editingClockAlarm,w
 10196  07CA  045D               	iorwf	_editingClockAlarm+1,w
 10197  07CB  1D03               	btfss	3,2
 10198  07CC  2FCE               	goto	u4541
 10199  07CD  2FCF               	goto	u4540
 10200  07CE                     u4541:
 10201  07CE  2FDE               	goto	l4902
 10202  07CF                     u4540:
 10203  07CF                     l4896:
 10204                           
 10205                           ;main.c: 532: if(clkAlarm.alarmVal.m == 59){
 10206  07CF  303B               	movlw	59
 10207  07D0  064E               	xorwf	_clkAlarm+1,w
 10208  07D1  1D03               	btfss	3,2
 10209  07D2  2FD4               	goto	u4551
 10210  07D3  2FD5               	goto	u4550
 10211  07D4                     u4551:
 10212  07D4  2FD7               	goto	l4900
 10213  07D5                     u4550:
 10214  07D5                     l4898:
 10215                           
 10216                           ;main.c: 533: clkAlarm.alarmVal.m = 0;
 10217  07D5  01CE               	clrf	_clkAlarm+1
 10218                           
 10219                           ;main.c: 534: } else{
 10220  07D6  2FF3               	goto	l4910
 10221  07D7                     l4900:
 10222                           
 10223                           ;main.c: 535: clkAlarm.alarmVal.m++;
 10224  07D7  3001               	movlw	1
 10225  07D8  0021               	movlb	1	; select bank1
 10226  07D9  00A0               	movwf	??_editClock^(0+128)
 10227  07DA  0820               	movf	??_editClock^(0+128),w
 10228  07DB  0020               	movlb	0	; select bank0
 10229  07DC  07CE               	addwf	_clkAlarm+1,f
 10230  07DD  2FF3               	goto	l4910
 10231  07DE                     l4902:
 10232  07DE  3003               	movlw	3
 10233  07DF  065C               	xorwf	_editingClockAlarm,w
 10234  07E0  045D               	iorwf	_editingClockAlarm+1,w
 10235  07E1  1D03               	btfss	3,2
 10236  07E2  2FE4               	goto	u4561
 10237  07E3  2FE5               	goto	u4560
 10238  07E4                     u4561:
 10239  07E4  2FF3               	goto	l4910
 10240  07E5                     u4560:
 10241  07E5                     l4904:
 10242                           
 10243                           ;main.c: 538: if(clkAlarm.alarmVal.s == 59){
 10244  07E5  303B               	movlw	59
 10245  07E6  064F               	xorwf	_clkAlarm+2,w
 10246  07E7  1D03               	btfss	3,2
 10247  07E8  2FEA               	goto	u4571
 10248  07E9  2FEB               	goto	u4570
 10249  07EA                     u4571:
 10250  07EA  2FED               	goto	l4908
 10251  07EB                     u4570:
 10252  07EB                     l4906:
 10253                           
 10254                           ;main.c: 539: clkAlarm.alarmVal.s = 0;
 10255  07EB  01CF               	clrf	_clkAlarm+2
 10256                           
 10257                           ;main.c: 540: } else{
 10258  07EC  2FF3               	goto	l4910
 10259  07ED                     l4908:
 10260                           
 10261                           ;main.c: 541: clkAlarm.alarmVal.s++;
 10262  07ED  3001               	movlw	1
 10263  07EE  0021               	movlb	1	; select bank1
 10264  07EF  00A0               	movwf	??_editClock^(0+128)
 10265  07F0  0820               	movf	??_editClock^(0+128),w
 10266  07F1  0020               	movlb	0	; select bank0
 10267  07F2  07CF               	addwf	_clkAlarm+2,f
 10268  07F3                     l4910:
 10269                           
 10270                           ;main.c: 542: };main.c: 543: };main.c: 544: _delay((unsigned long)((100)*(1000000/4000.0
      +                          )));
 10271  07F3  3021               	movlw	33
 10272  07F4  0021               	movlb	1	; select bank1
 10273  07F5  00A0               	movwf	??_editClock^(0+128)
 10274  07F6  3076               	movlw	118
 10275  07F7                     u4997:
 10276  07F7  0B89               	decfsz	9,f
 10277  07F8  2FF7               	goto	u4997
 10278  07F9  0BA0               	decfsz	??_editClock^(0+128),f
 10279  07FA  2FF7               	goto	u4997
 10280  07FB  0000               	nop
 10281  07FC  2F80               	goto	l4876
 10282  07FD                     l1230:
 10283  07FD  0008               	return
 10284  07FE                     __end_of_editClock:
 10285                           
 10286                           	psect	text6
 10287  1706                     __ptext6:	
 10288 ;; *************** function _TMR2_StopTimer *****************
 10289 ;; Defined at:
 10290 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 10291 ;; Parameters:    Size  Location     Type
 10292 ;;		None
 10293 ;; Auto vars:     Size  Location     Type
 10294 ;;		None
 10295 ;; Return value:  Size  Location     Type
 10296 ;;                  1    wreg      void 
 10297 ;; Registers used:
 10298 ;;		status,2, status,0, pclath, cstack
 10299 ;; Tracked objects:
 10300 ;;		On entry : 0/0
 10301 ;;		On exit  : 0/0
 10302 ;;		Unchanged: 0/0
 10303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10308 ;;Total ram usage:        0 bytes
 10309 ;; Hardware stack levels used:    1
 10310 ;; Hardware stack levels required when called:    8
 10311 ;; This function calls:
 10312 ;;		_TMR2_Stop
 10313 ;; This function is called by:
 10314 ;;		_main
 10315 ;; This function uses a non-reentrant model
 10316 ;;
 10317                           
 10318                           
 10319                           ;psect for function _TMR2_StopTimer
 10320  1706                     _TMR2_StopTimer:
 10321  1706                     l4734:	
 10322                           ;incstack = 0
 10323                           ; Regs used in _TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 10324                           
 10325                           
 10326                           ;tmr2.c: 119: TMR2_Stop();
 10327  1706  3196  26F8  3197   	fcall	_TMR2_Stop
 10328  1709                     l767:
 10329  1709  0008               	return
 10330  170A                     __end_of_TMR2_StopTimer:
 10331                           
 10332                           	psect	text7
 10333  16F8                     __ptext7:	
 10334 ;; *************** function _TMR2_Stop *****************
 10335 ;; Defined at:
 10336 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 10337 ;; Parameters:    Size  Location     Type
 10338 ;;		None
 10339 ;; Auto vars:     Size  Location     Type
 10340 ;;		None
 10341 ;; Return value:  Size  Location     Type
 10342 ;;                  1    wreg      void 
 10343 ;; Registers used:
 10344 ;;		None
 10345 ;; Tracked objects:
 10346 ;;		On entry : 0/0
 10347 ;;		On exit  : 0/0
 10348 ;;		Unchanged: 0/0
 10349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10354 ;;Total ram usage:        0 bytes
 10355 ;; Hardware stack levels used:    1
 10356 ;; Hardware stack levels required when called:    7
 10357 ;; This function calls:
 10358 ;;		Nothing
 10359 ;; This function is called by:
 10360 ;;		_TMR2_StopTimer
 10361 ;; This function uses a non-reentrant model
 10362 ;;
 10363                           
 10364                           
 10365                           ;psect for function _TMR2_Stop
 10366  16F8                     _TMR2_Stop:
 10367  16F8                     l4398:	
 10368                           ;incstack = 0
 10369                           ; Regs used in _TMR2_Stop: []
 10370                           
 10371                           
 10372                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 10373  16F8  0025               	movlb	5	; select bank5
 10374  16F9  138E               	bcf	14,7	;volatile
 10375  16FA                     l764:
 10376  16FA  0008               	return
 10377  16FB                     __end_of_TMR2_Stop:
 10378                           
 10379                           	psect	text8
 10380  089A                     __ptext8:	
 10381 ;; *************** function _SYSTEM_Initialize *****************
 10382 ;; Defined at:
 10383 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10384 ;; Parameters:    Size  Location     Type
 10385 ;;		None
 10386 ;; Auto vars:     Size  Location     Type
 10387 ;;		None
 10388 ;; Return value:  Size  Location     Type
 10389 ;;                  1    wreg      void 
 10390 ;; Registers used:
 10391 ;;		wreg, status,2, status,0, pclath, cstack
 10392 ;; Tracked objects:
 10393 ;;		On entry : 0/0
 10394 ;;		On exit  : 0/0
 10395 ;;		Unchanged: 0/0
 10396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10401 ;;Total ram usage:        0 bytes
 10402 ;; Hardware stack levels used:    1
 10403 ;; Hardware stack levels required when called:    9
 10404 ;; This function calls:
 10405 ;;		_ADCC_Initialize
 10406 ;;		_OSCILLATOR_Initialize
 10407 ;;		_PIN_MANAGER_Initialize
 10408 ;;		_PMD_Initialize
 10409 ;;		_PWM6_Initialize
 10410 ;;		_TMR1_Initialize
 10411 ;;		_TMR2_Initialize
 10412 ;;		_TMR3_Initialize
 10413 ;;		_TMR5_Initialize
 10414 ;; This function is called by:
 10415 ;;		_main
 10416 ;; This function uses a non-reentrant model
 10417 ;;
 10418                           
 10419                           
 10420                           ;psect for function _SYSTEM_Initialize
 10421  089A                     _SYSTEM_Initialize:
 10422  089A                     l4678:	
 10423                           ;incstack = 0
 10424                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10425                           
 10426                           
 10427                           ;mcc.c: 52: PMD_Initialize();
 10428  089A  3197  2735  3188   	fcall	_PMD_Initialize
 10429  089D                     l4680:
 10430                           
 10431                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 10432  089D  318A  22C0  3188   	fcall	_PIN_MANAGER_Initialize
 10433  08A0                     l4682:
 10434                           
 10435                           ;mcc.c: 54: OSCILLATOR_Initialize();
 10436  08A0  3188  2002  3188   	fcall	_OSCILLATOR_Initialize
 10437  08A3                     l4684:
 10438                           
 10439                           ;mcc.c: 55: PWM6_Initialize();
 10440  08A3  3197  2755  3188   	fcall	_PWM6_Initialize
 10441  08A6                     l4686:
 10442                           
 10443                           ;mcc.c: 56: ADCC_Initialize();
 10444  08A6  3188  2050  3188   	fcall	_ADCC_Initialize
 10445  08A9                     l4688:
 10446                           
 10447                           ;mcc.c: 57: TMR3_Initialize();
 10448  08A9  3189  2112  3188   	fcall	_TMR3_Initialize
 10449  08AC                     l4690:
 10450                           
 10451                           ;mcc.c: 58: TMR5_Initialize();
 10452  08AC  3189  2131  3188   	fcall	_TMR5_Initialize
 10453  08AF                     l4692:
 10454                           
 10455                           ;mcc.c: 59: TMR2_Initialize();
 10456  08AF  3197  2762  3188   	fcall	_TMR2_Initialize
 10457  08B2                     l4694:
 10458                           
 10459                           ;mcc.c: 60: TMR1_Initialize();
 10460  08B2  3188  20F3  3188   	fcall	_TMR1_Initialize
 10461  08B5                     l172:
 10462  08B5  0008               	return
 10463  08B6                     __end_of_SYSTEM_Initialize:
 10464                           
 10465                           	psect	text9
 10466  0931                     __ptext9:	
 10467 ;; *************** function _TMR5_Initialize *****************
 10468 ;; Defined at:
 10469 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 10470 ;; Parameters:    Size  Location     Type
 10471 ;;		None
 10472 ;; Auto vars:     Size  Location     Type
 10473 ;;		None
 10474 ;; Return value:  Size  Location     Type
 10475 ;;                  1    wreg      void 
 10476 ;; Registers used:
 10477 ;;		wreg, status,2, status,0, pclath, cstack
 10478 ;; Tracked objects:
 10479 ;;		On entry : 0/0
 10480 ;;		On exit  : 0/0
 10481 ;;		Unchanged: 0/0
 10482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10487 ;;Total ram usage:        0 bytes
 10488 ;; Hardware stack levels used:    1
 10489 ;; Hardware stack levels required when called:    8
 10490 ;; This function calls:
 10491 ;;		_TMR5_SetInterruptHandler
 10492 ;; This function is called by:
 10493 ;;		_SYSTEM_Initialize
 10494 ;; This function uses a non-reentrant model
 10495 ;;
 10496                           
 10497                           
 10498                           ;psect for function _TMR5_Initialize
 10499  0931                     _TMR5_Initialize:
 10500  0931                     l4308:	
 10501                           ;incstack = 0
 10502                           ; Regs used in _TMR5_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10503                           
 10504                           
 10505                           ;tmr5.c: 69: T5GCON = 0x00;
 10506  0931  0024               	movlb	4	; select bank4
 10507  0932  019B               	clrf	27	;volatile
 10508                           
 10509                           ;tmr5.c: 72: T5GATE = 0x00;
 10510  0933  019C               	clrf	28	;volatile
 10511  0934                     l4310:
 10512                           
 10513                           ;tmr5.c: 75: T5CLK = 0x04;
 10514  0934  3004               	movlw	4
 10515  0935  009D               	movwf	29	;volatile
 10516  0936                     l4312:
 10517                           
 10518                           ;tmr5.c: 79: TMR5H = 0x4A;
 10519  0936  304A               	movlw	74
 10520  0937  0099               	movwf	25	;volatile
 10521  0938                     l4314:
 10522                           
 10523                           ;tmr5.c: 82: TMR5L = 0x5C;
 10524  0938  305C               	movlw	92
 10525  0939  0098               	movwf	24	;volatile
 10526  093A                     l4316:
 10527                           
 10528                           ;tmr5.c: 85: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 10529  093A  0819               	movf	25,w	;volatile
 10530  093B  0020               	movlb	0	; select bank0
 10531  093C  00E9               	movwf	_timer5ReloadVal+1	;volatile
 10532  093D  0024               	movlb	4	; select bank4
 10533  093E  0818               	movf	24,w	;volatile
 10534  093F  0020               	movlb	0	; select bank0
 10535  0940  00E8               	movwf	_timer5ReloadVal	;volatile
 10536  0941                     l4318:
 10537                           
 10538                           ;tmr5.c: 88: PIR4bits.TMR5IF = 0;
 10539  0941  002E               	movlb	14	; select bank14
 10540  0942  1210               	bcf	16,4	;volatile
 10541  0943                     l4320:
 10542                           
 10543                           ;tmr5.c: 91: PIE4bits.TMR5IE = 1;
 10544  0943  161A               	bsf	26,4	;volatile
 10545  0944                     l4322:
 10546                           
 10547                           ;tmr5.c: 94: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 10548  0944  30FE               	movlw	low _TMR5_DefaultInterruptHandler
 10549  0945  0021               	movlb	1	; select bank1
 10550  0946  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
 10551  0947  3007               	movlw	high _TMR5_DefaultInterruptHandler
 10552  0948  00A1               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10553  0949  3197  271A  3189   	fcall	_TMR5_SetInterruptHandler
 10554  094C                     l4324:
 10555                           
 10556                           ;tmr5.c: 97: T5CON = 0x11;
 10557  094C  3011               	movlw	17
 10558  094D  0024               	movlb	4	; select bank4
 10559  094E  009A               	movwf	26	;volatile
 10560  094F                     l675:
 10561  094F  0008               	return
 10562  0950                     __end_of_TMR5_Initialize:
 10563                           
 10564                           	psect	text10
 10565  171A                     __ptext10:	
 10566 ;; *************** function _TMR5_SetInterruptHandler *****************
 10567 ;; Defined at:
 10568 ;;		line 179 in file "mcc_generated_files/tmr5.c"
 10569 ;; Parameters:    Size  Location     Type
 10570 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 10571 ;;		 -> monitoring_ISR(1), TMR5_DefaultInterruptHandler(1), 
 10572 ;; Auto vars:     Size  Location     Type
 10573 ;;		None
 10574 ;; Return value:  Size  Location     Type
 10575 ;;                  1    wreg      void 
 10576 ;; Registers used:
 10577 ;;		wreg
 10578 ;; Tracked objects:
 10579 ;;		On entry : 0/0
 10580 ;;		On exit  : 0/0
 10581 ;;		Unchanged: 0/0
 10582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10583 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10586 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10587 ;;Total ram usage:        2 bytes
 10588 ;; Hardware stack levels used:    1
 10589 ;; Hardware stack levels required when called:    7
 10590 ;; This function calls:
 10591 ;;		Nothing
 10592 ;; This function is called by:
 10593 ;;		_TMR5_Initialize
 10594 ;;		_main
 10595 ;; This function uses a non-reentrant model
 10596 ;;
 10597                           
 10598                           
 10599                           ;psect for function _TMR5_SetInterruptHandler
 10600  171A                     _TMR5_SetInterruptHandler:
 10601  171A                     l3996:	
 10602                           ;incstack = 0
 10603                           ; Regs used in _TMR5_SetInterruptHandler: [wreg]
 10604                           
 10605                           
 10606                           ;tmr5.c: 180: TMR5_InterruptHandler = InterruptHandler;
 10607  171A  0021               	movlb	1	; select bank1
 10608  171B  0821               	movf	(TMR5_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 10609  171C  00B2               	movwf	(_TMR5_InterruptHandler+1)^(0+128)
 10610  171D  0820               	movf	TMR5_SetInterruptHandler@InterruptHandler^(0+128),w
 10611  171E  00B1               	movwf	_TMR5_InterruptHandler^(0+128)
 10612  171F                     l705:
 10613  171F  0008               	return
 10614  1720                     __end_of_TMR5_SetInterruptHandler:
 10615                           
 10616                           	psect	text11
 10617  0912                     __ptext11:	
 10618 ;; *************** function _TMR3_Initialize *****************
 10619 ;; Defined at:
 10620 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 10621 ;; Parameters:    Size  Location     Type
 10622 ;;		None
 10623 ;; Auto vars:     Size  Location     Type
 10624 ;;		None
 10625 ;; Return value:  Size  Location     Type
 10626 ;;                  1    wreg      void 
 10627 ;; Registers used:
 10628 ;;		wreg, status,2, status,0, pclath, cstack
 10629 ;; Tracked objects:
 10630 ;;		On entry : 0/0
 10631 ;;		On exit  : 0/0
 10632 ;;		Unchanged: 0/0
 10633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10638 ;;Total ram usage:        0 bytes
 10639 ;; Hardware stack levels used:    1
 10640 ;; Hardware stack levels required when called:    8
 10641 ;; This function calls:
 10642 ;;		_TMR3_SetInterruptHandler
 10643 ;; This function is called by:
 10644 ;;		_SYSTEM_Initialize
 10645 ;; This function uses a non-reentrant model
 10646 ;;
 10647                           
 10648                           
 10649                           ;psect for function _TMR3_Initialize
 10650  0912                     _TMR3_Initialize:
 10651  0912                     l4290:	
 10652                           ;incstack = 0
 10653                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10654                           
 10655                           
 10656                           ;tmr3.c: 69: T3GCON = 0x00;
 10657  0912  0024               	movlb	4	; select bank4
 10658  0913  0195               	clrf	21	;volatile
 10659                           
 10660                           ;tmr3.c: 72: T3GATE = 0x00;
 10661  0914  0196               	clrf	22	;volatile
 10662  0915                     l4292:
 10663                           
 10664                           ;tmr3.c: 75: T3CLK = 0x04;
 10665  0915  3004               	movlw	4
 10666  0916  0097               	movwf	23	;volatile
 10667  0917                     l4294:
 10668                           
 10669                           ;tmr3.c: 78: TMR3H = 0xE7;
 10670  0917  30E7               	movlw	231
 10671  0918  0093               	movwf	19	;volatile
 10672  0919                     l4296:
 10673                           
 10674                           ;tmr3.c: 81: TMR3L = 0xC8;
 10675  0919  30C8               	movlw	200
 10676  091A  0092               	movwf	18	;volatile
 10677  091B                     l4298:
 10678                           
 10679                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 10680  091B  0813               	movf	19,w	;volatile
 10681  091C  0020               	movlb	0	; select bank0
 10682  091D  00EB               	movwf	_timer3ReloadVal+1	;volatile
 10683  091E  0024               	movlb	4	; select bank4
 10684  091F  0812               	movf	18,w	;volatile
 10685  0920  0020               	movlb	0	; select bank0
 10686  0921  00EA               	movwf	_timer3ReloadVal	;volatile
 10687  0922                     l4300:
 10688                           
 10689                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
 10690  0922  002E               	movlb	14	; select bank14
 10691  0923  1110               	bcf	16,2	;volatile
 10692  0924                     l4302:
 10693                           
 10694                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
 10695  0924  151A               	bsf	26,2	;volatile
 10696  0925                     l4304:
 10697                           
 10698                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
 10699  0925  30FF               	movlw	low _TMR3_DefaultInterruptHandler
 10700  0926  0021               	movlb	1	; select bank1
 10701  0927  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
 10702  0928  3007               	movlw	high _TMR3_DefaultInterruptHandler
 10703  0929  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10704  092A  3197  2714  3189   	fcall	_TMR3_SetInterruptHandler
 10705  092D                     l4306:
 10706                           
 10707                           ;tmr3.c: 96: T3CON = 0x01;
 10708  092D  3001               	movlw	1
 10709  092E  0024               	movlb	4	; select bank4
 10710  092F  0094               	movwf	20	;volatile
 10711  0930                     l451:
 10712  0930  0008               	return
 10713  0931                     __end_of_TMR3_Initialize:
 10714                           
 10715                           	psect	text12
 10716  1714                     __ptext12:	
 10717 ;; *************** function _TMR3_SetInterruptHandler *****************
 10718 ;; Defined at:
 10719 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 10720 ;; Parameters:    Size  Location     Type
 10721 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 10722 ;;		 -> menuLCD_ISR(1), TMR3_DefaultInterruptHandler(1), 
 10723 ;; Auto vars:     Size  Location     Type
 10724 ;;		None
 10725 ;; Return value:  Size  Location     Type
 10726 ;;                  1    wreg      void 
 10727 ;; Registers used:
 10728 ;;		wreg
 10729 ;; Tracked objects:
 10730 ;;		On entry : 0/0
 10731 ;;		On exit  : 0/0
 10732 ;;		Unchanged: 0/0
 10733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10734 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10737 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10738 ;;Total ram usage:        2 bytes
 10739 ;; Hardware stack levels used:    1
 10740 ;; Hardware stack levels required when called:    7
 10741 ;; This function calls:
 10742 ;;		Nothing
 10743 ;; This function is called by:
 10744 ;;		_TMR3_Initialize
 10745 ;;		_main
 10746 ;; This function uses a non-reentrant model
 10747 ;;
 10748                           
 10749                           
 10750                           ;psect for function _TMR3_SetInterruptHandler
 10751  1714                     _TMR3_SetInterruptHandler:
 10752  1714                     l3980:	
 10753                           ;incstack = 0
 10754                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
 10755                           
 10756                           
 10757                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
 10758  1714  0021               	movlb	1	; select bank1
 10759  1715  0821               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 10760  1716  00B4               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
 10761  1717  0820               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
 10762  1718  00B3               	movwf	_TMR3_InterruptHandler^(0+128)
 10763  1719                     l481:
 10764  1719  0008               	return
 10765  171A                     __end_of_TMR3_SetInterruptHandler:
 10766                           
 10767                           	psect	text13
 10768  1762                     __ptext13:	
 10769 ;; *************** function _TMR2_Initialize *****************
 10770 ;; Defined at:
 10771 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 10772 ;; Parameters:    Size  Location     Type
 10773 ;;		None
 10774 ;; Auto vars:     Size  Location     Type
 10775 ;;		None
 10776 ;; Return value:  Size  Location     Type
 10777 ;;                  1    wreg      void 
 10778 ;; Registers used:
 10779 ;;		wreg, status,2
 10780 ;; Tracked objects:
 10781 ;;		On entry : 0/0
 10782 ;;		On exit  : 0/0
 10783 ;;		Unchanged: 0/0
 10784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10789 ;;Total ram usage:        0 bytes
 10790 ;; Hardware stack levels used:    1
 10791 ;; Hardware stack levels required when called:    7
 10792 ;; This function calls:
 10793 ;;		Nothing
 10794 ;; This function is called by:
 10795 ;;		_SYSTEM_Initialize
 10796 ;; This function uses a non-reentrant model
 10797 ;;
 10798                           
 10799                           
 10800                           ;psect for function _TMR2_Initialize
 10801  1762                     _TMR2_Initialize:
 10802  1762                     l4326:	
 10803                           ;incstack = 0
 10804                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 10805                           
 10806                           
 10807                           ;tmr2.c: 67: T2CLKCON = 0x01;
 10808  1762  3001               	movlw	1
 10809  1763  0025               	movlb	5	; select bank5
 10810  1764  0090               	movwf	16	;volatile
 10811  1765                     l4328:
 10812                           
 10813                           ;tmr2.c: 70: T2HLT = 0x00;
 10814  1765  018F               	clrf	15	;volatile
 10815  1766                     l4330:
 10816                           
 10817                           ;tmr2.c: 73: T2RST = 0x00;
 10818  1766  0191               	clrf	17	;volatile
 10819                           
 10820                           ;tmr2.c: 76: T2PR = 0xFF;
 10821  1767  30FF               	movlw	255
 10822  1768  008D               	movwf	13	;volatile
 10823  1769                     l4332:
 10824                           
 10825                           ;tmr2.c: 79: T2TMR = 0x00;
 10826  1769  018C               	clrf	12	;volatile
 10827  176A                     l4334:
 10828                           
 10829                           ;tmr2.c: 82: PIR4bits.TMR2IF = 0;
 10830  176A  002E               	movlb	14	; select bank14
 10831  176B  1090               	bcf	16,1	;volatile
 10832  176C                     l4336:
 10833                           
 10834                           ;tmr2.c: 85: T2CON = 0x80;
 10835  176C  3080               	movlw	128
 10836  176D  0025               	movlb	5	; select bank5
 10837  176E  008E               	movwf	14	;volatile
 10838  176F                     l749:
 10839  176F  0008               	return
 10840  1770                     __end_of_TMR2_Initialize:
 10841                           
 10842                           	psect	text14
 10843  08F3                     __ptext14:	
 10844 ;; *************** function _TMR1_Initialize *****************
 10845 ;; Defined at:
 10846 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 10847 ;; Parameters:    Size  Location     Type
 10848 ;;		None
 10849 ;; Auto vars:     Size  Location     Type
 10850 ;;		None
 10851 ;; Return value:  Size  Location     Type
 10852 ;;                  1    wreg      void 
 10853 ;; Registers used:
 10854 ;;		wreg, status,2, status,0, pclath, cstack
 10855 ;; Tracked objects:
 10856 ;;		On entry : 0/0
 10857 ;;		On exit  : 0/0
 10858 ;;		Unchanged: 0/0
 10859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10864 ;;Total ram usage:        0 bytes
 10865 ;; Hardware stack levels used:    1
 10866 ;; Hardware stack levels required when called:    8
 10867 ;; This function calls:
 10868 ;;		_TMR1_SetInterruptHandler
 10869 ;; This function is called by:
 10870 ;;		_SYSTEM_Initialize
 10871 ;; This function uses a non-reentrant model
 10872 ;;
 10873                           
 10874                           
 10875                           ;psect for function _TMR1_Initialize
 10876  08F3                     _TMR1_Initialize:
 10877  08F3                     l4338:	
 10878                           ;incstack = 0
 10879                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10880                           
 10881                           
 10882                           ;tmr1.c: 69: T1GCON = 0x00;
 10883  08F3  0024               	movlb	4	; select bank4
 10884  08F4  018F               	clrf	15	;volatile
 10885                           
 10886                           ;tmr1.c: 72: T1GATE = 0x00;
 10887  08F5  0190               	clrf	16	;volatile
 10888  08F6                     l4340:
 10889                           
 10890                           ;tmr1.c: 75: T1CLK = 0x04;
 10891  08F6  3004               	movlw	4
 10892  08F7  0091               	movwf	17	;volatile
 10893  08F8                     l4342:
 10894                           
 10895                           ;tmr1.c: 78: TMR1H = 0x86;
 10896  08F8  3086               	movlw	134
 10897  08F9  008D               	movwf	13	;volatile
 10898  08FA                     l4344:
 10899                           
 10900                           ;tmr1.c: 81: TMR1L = 0xE8;
 10901  08FA  30E8               	movlw	232
 10902  08FB  008C               	movwf	12	;volatile
 10903  08FC                     l4346:
 10904                           
 10905                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 10906  08FC  080D               	movf	13,w	;volatile
 10907  08FD  0021               	movlb	1	; select bank1
 10908  08FE  00B8               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 10909  08FF  0024               	movlb	4	; select bank4
 10910  0900  080C               	movf	12,w	;volatile
 10911  0901  0021               	movlb	1	; select bank1
 10912  0902  00B7               	movwf	_timer1ReloadVal^(0+128)	;volatile
 10913  0903                     l4348:
 10914                           
 10915                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
 10916  0903  002E               	movlb	14	; select bank14
 10917  0904  1010               	bcf	16,0	;volatile
 10918  0905                     l4350:
 10919                           
 10920                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
 10921  0905  141A               	bsf	26,0	;volatile
 10922  0906                     l4352:
 10923                           
 10924                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 10925  0906  3003               	movlw	low _TMR1_DefaultInterruptHandler
 10926  0907  0021               	movlb	1	; select bank1
 10927  0908  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
 10928  0909  3000               	movlw	high _TMR1_DefaultInterruptHandler
 10929  090A  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10930  090B  3197  270E  3188   	fcall	_TMR1_SetInterruptHandler
 10931  090E                     l4354:
 10932                           
 10933                           ;tmr1.c: 96: T1CON = 0x01;
 10934  090E  3001               	movlw	1
 10935  090F  0024               	movlb	4	; select bank4
 10936  0910  008E               	movwf	14	;volatile
 10937  0911                     l387:
 10938  0911  0008               	return
 10939  0912                     __end_of_TMR1_Initialize:
 10940                           
 10941                           	psect	text15
 10942  170E                     __ptext15:	
 10943 ;; *************** function _TMR1_SetInterruptHandler *****************
 10944 ;; Defined at:
 10945 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 10946 ;; Parameters:    Size  Location     Type
 10947 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 10948 ;;		 -> Clock_ISR(1), TMR1_DefaultInterruptHandler(1), 
 10949 ;; Auto vars:     Size  Location     Type
 10950 ;;		None
 10951 ;; Return value:  Size  Location     Type
 10952 ;;                  1    wreg      void 
 10953 ;; Registers used:
 10954 ;;		wreg
 10955 ;; Tracked objects:
 10956 ;;		On entry : 0/0
 10957 ;;		On exit  : 0/0
 10958 ;;		Unchanged: 0/0
 10959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10960 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10963 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10964 ;;Total ram usage:        2 bytes
 10965 ;; Hardware stack levels used:    1
 10966 ;; Hardware stack levels required when called:    7
 10967 ;; This function calls:
 10968 ;;		Nothing
 10969 ;; This function is called by:
 10970 ;;		_TMR1_Initialize
 10971 ;;		_main
 10972 ;; This function uses a non-reentrant model
 10973 ;;
 10974                           
 10975                           
 10976                           ;psect for function _TMR1_SetInterruptHandler
 10977  170E                     _TMR1_SetInterruptHandler:
 10978  170E                     l3978:	
 10979                           ;incstack = 0
 10980                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 10981                           
 10982                           
 10983                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
 10984  170E  0021               	movlb	1	; select bank1
 10985  170F  0821               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 10986  1710  00B6               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 10987  1711  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
 10988  1712  00B5               	movwf	_TMR1_InterruptHandler^(0+128)
 10989  1713                     l417:
 10990  1713  0008               	return
 10991  1714                     __end_of_TMR1_SetInterruptHandler:
 10992                           
 10993                           	psect	text16
 10994  1755                     __ptext16:	
 10995 ;; *************** function _PWM6_Initialize *****************
 10996 ;; Defined at:
 10997 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 10998 ;; Parameters:    Size  Location     Type
 10999 ;;		None
 11000 ;; Auto vars:     Size  Location     Type
 11001 ;;		None
 11002 ;; Return value:  Size  Location     Type
 11003 ;;                  1    wreg      void 
 11004 ;; Registers used:
 11005 ;;		wreg, status,2, status,0
 11006 ;; Tracked objects:
 11007 ;;		On entry : 0/0
 11008 ;;		On exit  : 0/0
 11009 ;;		Unchanged: 0/0
 11010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11015 ;;Total ram usage:        0 bytes
 11016 ;; Hardware stack levels used:    1
 11017 ;; Hardware stack levels required when called:    7
 11018 ;; This function calls:
 11019 ;;		Nothing
 11020 ;; This function is called by:
 11021 ;;		_SYSTEM_Initialize
 11022 ;; This function uses a non-reentrant model
 11023 ;;
 11024                           
 11025                           
 11026                           ;psect for function _PWM6_Initialize
 11027  1755                     _PWM6_Initialize:
 11028  1755                     l4280:	
 11029                           ;incstack = 0
 11030                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 11031                           
 11032                           
 11033                           ;pwm6.c: 62: PWM6CON = 0x80;
 11034  1755  3080               	movlw	128
 11035  1756  0027               	movlb	7	; select bank7
 11036  1757  008E               	movwf	14	;volatile
 11037                           
 11038                           ;pwm6.c: 65: PWM6DCH = 0xFF;
 11039  1758  30FF               	movlw	255
 11040  1759  008D               	movwf	13	;volatile
 11041                           
 11042                           ;pwm6.c: 68: PWM6DCL = 0xC0;
 11043  175A  30C0               	movlw	192
 11044  175B  008C               	movwf	12	;volatile
 11045  175C                     l4282:
 11046                           
 11047                           ;pwm6.c: 71: CCPTMRS1bits.P6TSEL = 1;
 11048  175C  0024               	movlb	4	; select bank4
 11049  175D  081F               	movf	31,w	;volatile
 11050  175E  39F3               	andlw	-13
 11051  175F  3804               	iorlw	4
 11052  1760  009F               	movwf	31	;volatile
 11053  1761                     l719:
 11054  1761  0008               	return
 11055  1762                     __end_of_PWM6_Initialize:
 11056                           
 11057                           	psect	text17
 11058  1735                     __ptext17:	
 11059 ;; *************** function _PMD_Initialize *****************
 11060 ;; Defined at:
 11061 ;;		line 77 in file "mcc_generated_files/mcc.c"
 11062 ;; Parameters:    Size  Location     Type
 11063 ;;		None
 11064 ;; Auto vars:     Size  Location     Type
 11065 ;;		None
 11066 ;; Return value:  Size  Location     Type
 11067 ;;                  1    wreg      void 
 11068 ;; Registers used:
 11069 ;;		status,2
 11070 ;; Tracked objects:
 11071 ;;		On entry : 0/0
 11072 ;;		On exit  : 0/0
 11073 ;;		Unchanged: 0/0
 11074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11079 ;;Total ram usage:        0 bytes
 11080 ;; Hardware stack levels used:    1
 11081 ;; Hardware stack levels required when called:    7
 11082 ;; This function calls:
 11083 ;;		Nothing
 11084 ;; This function is called by:
 11085 ;;		_SYSTEM_Initialize
 11086 ;; This function uses a non-reentrant model
 11087 ;;
 11088                           
 11089                           
 11090                           ;psect for function _PMD_Initialize
 11091  1735                     _PMD_Initialize:
 11092  1735                     l4270:	
 11093                           ;incstack = 0
 11094                           ; Regs used in _PMD_Initialize: [status,2]
 11095                           
 11096                           
 11097                           ;mcc.c: 80: PMD0 = 0x00;
 11098  1735  002F               	movlb	15	; select bank15
 11099  1736  0196               	clrf	22	;volatile
 11100                           
 11101                           ;mcc.c: 82: PMD1 = 0x00;
 11102  1737  0197               	clrf	23	;volatile
 11103                           
 11104                           ;mcc.c: 84: PMD2 = 0x00;
 11105  1738  0198               	clrf	24	;volatile
 11106                           
 11107                           ;mcc.c: 86: PMD3 = 0x00;
 11108  1739  0199               	clrf	25	;volatile
 11109                           
 11110                           ;mcc.c: 88: PMD4 = 0x00;
 11111  173A  019A               	clrf	26	;volatile
 11112                           
 11113                           ;mcc.c: 90: PMD5 = 0x00;
 11114  173B  019B               	clrf	27	;volatile
 11115  173C                     l178:
 11116  173C  0008               	return
 11117  173D                     __end_of_PMD_Initialize:
 11118                           
 11119                           	psect	text18
 11120  0AC0                     __ptext18:	
 11121 ;; *************** function _PIN_MANAGER_Initialize *****************
 11122 ;; Defined at:
 11123 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11124 ;; Parameters:    Size  Location     Type
 11125 ;;		None
 11126 ;; Auto vars:     Size  Location     Type
 11127 ;;		None
 11128 ;; Return value:  Size  Location     Type
 11129 ;;                  1    wreg      void 
 11130 ;; Registers used:
 11131 ;;		wreg, status,2
 11132 ;; Tracked objects:
 11133 ;;		On entry : 0/0
 11134 ;;		On exit  : 0/0
 11135 ;;		Unchanged: 0/0
 11136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11141 ;;Total ram usage:        0 bytes
 11142 ;; Hardware stack levels used:    1
 11143 ;; Hardware stack levels required when called:    7
 11144 ;; This function calls:
 11145 ;;		Nothing
 11146 ;; This function is called by:
 11147 ;;		_SYSTEM_Initialize
 11148 ;; This function uses a non-reentrant model
 11149 ;;
 11150                           
 11151                           
 11152                           ;psect for function _PIN_MANAGER_Initialize
 11153  0AC0                     _PIN_MANAGER_Initialize:
 11154  0AC0                     l4228:	
 11155                           ;incstack = 0
 11156                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11157                           
 11158                           
 11159                           ;pin_manager.c: 62: LATE = 0x00;
 11160  0AC0  0020               	movlb	0	; select bank0
 11161  0AC1  019A               	clrf	26	;volatile
 11162                           
 11163                           ;pin_manager.c: 63: LATD = 0x00;
 11164  0AC2  0199               	clrf	25	;volatile
 11165                           
 11166                           ;pin_manager.c: 64: LATA = 0x00;
 11167  0AC3  0196               	clrf	22	;volatile
 11168                           
 11169                           ;pin_manager.c: 65: LATB = 0x00;
 11170  0AC4  0197               	clrf	23	;volatile
 11171                           
 11172                           ;pin_manager.c: 66: LATC = 0x00;
 11173  0AC5  0198               	clrf	24	;volatile
 11174  0AC6                     l4230:
 11175                           
 11176                           ;pin_manager.c: 71: TRISE = 0x07;
 11177  0AC6  3007               	movlw	7
 11178  0AC7  0095               	movwf	21	;volatile
 11179  0AC8                     l4232:
 11180                           
 11181                           ;pin_manager.c: 72: TRISA = 0x0F;
 11182  0AC8  300F               	movlw	15
 11183  0AC9  0091               	movwf	17	;volatile
 11184  0ACA                     l4234:
 11185                           
 11186                           ;pin_manager.c: 73: TRISB = 0xFF;
 11187  0ACA  30FF               	movlw	255
 11188  0ACB  0092               	movwf	18	;volatile
 11189  0ACC                     l4236:
 11190                           
 11191                           ;pin_manager.c: 74: TRISC = 0xFF;
 11192  0ACC  30FF               	movlw	255
 11193  0ACD  0093               	movwf	19	;volatile
 11194  0ACE                     l4238:
 11195                           
 11196                           ;pin_manager.c: 75: TRISD = 0xFF;
 11197  0ACE  30FF               	movlw	255
 11198  0ACF  0094               	movwf	20	;volatile
 11199  0AD0                     l4240:
 11200                           
 11201                           ;pin_manager.c: 80: ANSELD = 0xFF;
 11202  0AD0  30FF               	movlw	255
 11203  0AD1  003E               	movlb	30	; select bank30
 11204  0AD2  00D9               	movwf	89	;volatile
 11205  0AD3                     l4242:
 11206                           
 11207                           ;pin_manager.c: 81: ANSELC = 0xC7;
 11208  0AD3  30C7               	movlw	199
 11209  0AD4  00CE               	movwf	78	;volatile
 11210  0AD5                     l4244:
 11211                           
 11212                           ;pin_manager.c: 82: ANSELB = 0xEF;
 11213  0AD5  30EF               	movlw	239
 11214  0AD6  00C3               	movwf	67	;volatile
 11215  0AD7                     l4246:
 11216                           
 11217                           ;pin_manager.c: 83: ANSELE = 0x07;
 11218  0AD7  3007               	movlw	7
 11219  0AD8  00E4               	movwf	100	;volatile
 11220  0AD9                     l4248:
 11221                           
 11222                           ;pin_manager.c: 84: ANSELA = 0x4F;
 11223  0AD9  304F               	movlw	79
 11224  0ADA  00B8               	movwf	56	;volatile
 11225                           
 11226                           ;pin_manager.c: 89: WPUD = 0x00;
 11227  0ADB  01DA               	clrf	90	;volatile
 11228                           
 11229                           ;pin_manager.c: 90: WPUE = 0x00;
 11230  0ADC  01E5               	clrf	101	;volatile
 11231                           
 11232                           ;pin_manager.c: 91: WPUB = 0x00;
 11233  0ADD  01C4               	clrf	68	;volatile
 11234                           
 11235                           ;pin_manager.c: 92: WPUA = 0x00;
 11236  0ADE  01B9               	clrf	57	;volatile
 11237                           
 11238                           ;pin_manager.c: 93: WPUC = 0x00;
 11239  0ADF  01CF               	clrf	79	;volatile
 11240                           
 11241                           ;pin_manager.c: 98: ODCONE = 0x00;
 11242  0AE0  01E6               	clrf	102	;volatile
 11243                           
 11244                           ;pin_manager.c: 99: ODCONA = 0x00;
 11245  0AE1  01BA               	clrf	58	;volatile
 11246                           
 11247                           ;pin_manager.c: 100: ODCONB = 0x00;
 11248  0AE2  01C5               	clrf	69	;volatile
 11249                           
 11250                           ;pin_manager.c: 101: ODCONC = 0x00;
 11251  0AE3  01D0               	clrf	80	;volatile
 11252                           
 11253                           ;pin_manager.c: 102: ODCOND = 0x00;
 11254  0AE4  01DB               	clrf	91	;volatile
 11255  0AE5                     l4250:
 11256                           
 11257                           ;pin_manager.c: 107: SLRCONA = 0xFF;
 11258  0AE5  30FF               	movlw	255
 11259  0AE6  00BB               	movwf	59	;volatile
 11260  0AE7                     l4252:
 11261                           
 11262                           ;pin_manager.c: 108: SLRCONB = 0xFF;
 11263  0AE7  30FF               	movlw	255
 11264  0AE8  00C6               	movwf	70	;volatile
 11265  0AE9                     l4254:
 11266                           
 11267                           ;pin_manager.c: 109: SLRCONC = 0xFF;
 11268  0AE9  30FF               	movlw	255
 11269  0AEA  00D1               	movwf	81	;volatile
 11270  0AEB                     l4256:
 11271                           
 11272                           ;pin_manager.c: 110: SLRCOND = 0xFF;
 11273  0AEB  30FF               	movlw	255
 11274  0AEC  00DC               	movwf	92	;volatile
 11275  0AED                     l4258:
 11276                           
 11277                           ;pin_manager.c: 111: SLRCONE = 0x07;
 11278  0AED  3007               	movlw	7
 11279  0AEE  00E7               	movwf	103	;volatile
 11280  0AEF                     l4260:
 11281                           
 11282                           ;pin_manager.c: 120: SSP1CLKPPS = 0x13;
 11283  0AEF  3013               	movlw	19
 11284  0AF0  003D               	movlb	29	; select bank29
 11285  0AF1  00C5               	movwf	69	;volatile
 11286  0AF2                     l4262:
 11287                           
 11288                           ;pin_manager.c: 121: RC3PPS = 0x14;
 11289  0AF2  3014               	movlw	20
 11290  0AF3  003E               	movlb	30	; select bank30
 11291  0AF4  00A3               	movwf	35	;volatile
 11292  0AF5                     l4264:
 11293                           
 11294                           ;pin_manager.c: 122: RC4PPS = 0x15;
 11295  0AF5  3015               	movlw	21
 11296  0AF6  00A4               	movwf	36	;volatile
 11297  0AF7                     l4266:
 11298                           
 11299                           ;pin_manager.c: 123: RA6PPS = 0x0E;
 11300  0AF7  300E               	movlw	14
 11301  0AF8  0096               	movwf	22	;volatile
 11302  0AF9                     l4268:
 11303                           
 11304                           ;pin_manager.c: 124: SSP1DATPPS = 0x14;
 11305  0AF9  3014               	movlw	20
 11306  0AFA  003D               	movlb	29	; select bank29
 11307  0AFB  00C6               	movwf	70	;volatile
 11308  0AFC                     l122:
 11309  0AFC  0008               	return
 11310  0AFD                     __end_of_PIN_MANAGER_Initialize:
 11311                           
 11312                           	psect	text19
 11313  0802                     __ptext19:	
 11314 ;; *************** function _OSCILLATOR_Initialize *****************
 11315 ;; Defined at:
 11316 ;;		line 63 in file "mcc_generated_files/mcc.c"
 11317 ;; Parameters:    Size  Location     Type
 11318 ;;		None
 11319 ;; Auto vars:     Size  Location     Type
 11320 ;;		None
 11321 ;; Return value:  Size  Location     Type
 11322 ;;                  1    wreg      void 
 11323 ;; Registers used:
 11324 ;;		wreg, status,2
 11325 ;; Tracked objects:
 11326 ;;		On entry : 0/0
 11327 ;;		On exit  : 0/0
 11328 ;;		Unchanged: 0/0
 11329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11334 ;;Total ram usage:        0 bytes
 11335 ;; Hardware stack levels used:    1
 11336 ;; Hardware stack levels required when called:    7
 11337 ;; This function calls:
 11338 ;;		Nothing
 11339 ;; This function is called by:
 11340 ;;		_SYSTEM_Initialize
 11341 ;; This function uses a non-reentrant model
 11342 ;;
 11343                           
 11344                           
 11345                           ;psect for function _OSCILLATOR_Initialize
 11346  0802                     _OSCILLATOR_Initialize:
 11347  0802                     l4272:	
 11348                           ;incstack = 0
 11349                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11350                           
 11351                           
 11352                           ;mcc.c: 66: OSCCON1 = 0x62;
 11353  0802  3062               	movlw	98
 11354  0803  0031               	movlb	17	; select bank17
 11355  0804  008D               	movwf	13	;volatile
 11356  0805                     l4274:
 11357                           
 11358                           ;mcc.c: 68: OSCCON3 = 0x00;
 11359  0805  018F               	clrf	15	;volatile
 11360  0806                     l4276:
 11361                           
 11362                           ;mcc.c: 70: OSCEN = 0x00;
 11363  0806  0191               	clrf	17	;volatile
 11364                           
 11365                           ;mcc.c: 72: OSCFRQ = 0x02;
 11366  0807  3002               	movlw	2
 11367  0808  0093               	movwf	19	;volatile
 11368  0809                     l4278:
 11369                           
 11370                           ;mcc.c: 74: OSCTUNE = 0x00;
 11371  0809  0192               	clrf	18	;volatile
 11372  080A                     l175:
 11373  080A  0008               	return
 11374  080B                     __end_of_OSCILLATOR_Initialize:
 11375                           
 11376                           	psect	text20
 11377  0850                     __ptext20:	
 11378 ;; *************** function _ADCC_Initialize *****************
 11379 ;; Defined at:
 11380 ;;		line 63 in file "mcc_generated_files/adcc.c"
 11381 ;; Parameters:    Size  Location     Type
 11382 ;;		None
 11383 ;; Auto vars:     Size  Location     Type
 11384 ;;		None
 11385 ;; Return value:  Size  Location     Type
 11386 ;;                  1    wreg      void 
 11387 ;; Registers used:
 11388 ;;		wreg, status,2
 11389 ;; Tracked objects:
 11390 ;;		On entry : 0/0
 11391 ;;		On exit  : 0/0
 11392 ;;		Unchanged: 0/0
 11393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11398 ;;Total ram usage:        0 bytes
 11399 ;; Hardware stack levels used:    1
 11400 ;; Hardware stack levels required when called:    7
 11401 ;; This function calls:
 11402 ;;		Nothing
 11403 ;; This function is called by:
 11404 ;;		_SYSTEM_Initialize
 11405 ;; This function uses a non-reentrant model
 11406 ;;
 11407                           
 11408                           
 11409                           ;psect for function _ADCC_Initialize
 11410  0850                     _ADCC_Initialize:
 11411  0850                     l4284:	
 11412                           ;incstack = 0
 11413                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 11414                           
 11415                           
 11416                           ;adcc.c: 67: ADLTHL = 0x00;
 11417  0850  0022               	movlb	2	; select bank2
 11418  0851  018E               	clrf	14	;volatile
 11419                           
 11420                           ;adcc.c: 69: ADLTHH = 0x00;
 11421  0852  018F               	clrf	15	;volatile
 11422                           
 11423                           ;adcc.c: 71: ADUTHL = 0x00;
 11424  0853  0190               	clrf	16	;volatile
 11425                           
 11426                           ;adcc.c: 73: ADUTHH = 0x00;
 11427  0854  0191               	clrf	17	;volatile
 11428                           
 11429                           ;adcc.c: 75: ADSTPTL = 0x00;
 11430  0855  0192               	clrf	18	;volatile
 11431                           
 11432                           ;adcc.c: 77: ADSTPTH = 0x00;
 11433  0856  0193               	clrf	19	;volatile
 11434                           
 11435                           ;adcc.c: 79: ADRPT = 0x00;
 11436  0857  018D               	clrf	13	;volatile
 11437                           
 11438                           ;adcc.c: 81: ADPCH = 0x00;
 11439  0858  0021               	movlb	1	; select bank1
 11440  0859  019E               	clrf	30	;volatile
 11441                           
 11442                           ;adcc.c: 83: ADCAP = 0x00;
 11443  085A  019B               	clrf	27	;volatile
 11444                           
 11445                           ;adcc.c: 85: ADCON1 = 0x00;
 11446  085B  0194               	clrf	20	;volatile
 11447                           
 11448                           ;adcc.c: 87: ADCON2 = 0x00;
 11449  085C  0195               	clrf	21	;volatile
 11450                           
 11451                           ;adcc.c: 89: ADCON3 = 0x00;
 11452  085D  0196               	clrf	22	;volatile
 11453                           
 11454                           ;adcc.c: 91: ADSTAT = 0x00;
 11455  085E  0197               	clrf	23	;volatile
 11456                           
 11457                           ;adcc.c: 93: ADREF = 0x00;
 11458  085F  019A               	clrf	26	;volatile
 11459                           
 11460                           ;adcc.c: 95: ADACT = 0x00;
 11461  0860  0199               	clrf	25	;volatile
 11462                           
 11463                           ;adcc.c: 97: ADCLK = 0x00;
 11464  0861  0198               	clrf	24	;volatile
 11465  0862                     l4286:
 11466                           
 11467                           ;adcc.c: 99: ADCON0 = 0x80;
 11468  0862  3080               	movlw	128
 11469  0863  0093               	movwf	19	;volatile
 11470  0864                     l4288:
 11471                           
 11472                           ;adcc.c: 101: ADACQ = 0xFF;
 11473  0864  30FF               	movlw	255
 11474  0865  009D               	movwf	29	;volatile
 11475  0866                     l563:
 11476  0866  0008               	return
 11477  0867                     __end_of_ADCC_Initialize:
 11478                           
 11479                           	psect	text21
 11480  16F5                     __ptext21:	
 11481 ;; *************** function _PWM_Output_D4_Disable *****************
 11482 ;; Defined at:
 11483 ;;		line 246 in file "main.c"
 11484 ;; Parameters:    Size  Location     Type
 11485 ;;		None
 11486 ;; Auto vars:     Size  Location     Type
 11487 ;;		None
 11488 ;; Return value:  Size  Location     Type
 11489 ;;                  1    wreg      void 
 11490 ;; Registers used:
 11491 ;;		None
 11492 ;; Tracked objects:
 11493 ;;		On entry : 0/0
 11494 ;;		On exit  : 0/0
 11495 ;;		Unchanged: 0/0
 11496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11501 ;;Total ram usage:        0 bytes
 11502 ;; Hardware stack levels used:    1
 11503 ;; Hardware stack levels required when called:    7
 11504 ;; This function calls:
 11505 ;;		Nothing
 11506 ;; This function is called by:
 11507 ;;		_main
 11508 ;; This function uses a non-reentrant model
 11509 ;;
 11510                           
 11511                           
 11512                           ;psect for function _PWM_Output_D4_Disable
 11513  16F5                     _PWM_Output_D4_Disable:
 11514  16F5                     l4836:	
 11515                           ;incstack = 0
 11516                           ; Regs used in _PWM_Output_D4_Disable: []
 11517                           
 11518                           
 11519                           ;main.c: 247: PWM6EN = 0;
 11520  16F5  0027               	movlb	7	; select bank7
 11521  16F6  138E               	bcf	14,7	;volatile
 11522  16F7                     l1104:
 11523  16F7  0008               	return
 11524  16F8                     __end_of_PWM_Output_D4_Disable:
 11525                           
 11526                           	psect	text22
 11527  0867                     __ptext22:	
 11528 ;; *************** function _PWM6_LoadDutyValue *****************
 11529 ;; Defined at:
 11530 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 11531 ;; Parameters:    Size  Location     Type
 11532 ;;  dutyValue       2    0[BANK1 ] unsigned int 
 11533 ;; Auto vars:     Size  Location     Type
 11534 ;;		None
 11535 ;; Return value:  Size  Location     Type
 11536 ;;                  1    wreg      void 
 11537 ;; Registers used:
 11538 ;;		wreg, status,2, status,0
 11539 ;; Tracked objects:
 11540 ;;		On entry : 0/0
 11541 ;;		On exit  : 0/0
 11542 ;;		Unchanged: 0/0
 11543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11544 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11546 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11547 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11548 ;;Total ram usage:        4 bytes
 11549 ;; Hardware stack levels used:    1
 11550 ;; Hardware stack levels required when called:    7
 11551 ;; This function calls:
 11552 ;;		Nothing
 11553 ;; This function is called by:
 11554 ;;		_main
 11555 ;; This function uses a non-reentrant model
 11556 ;;
 11557                           
 11558                           
 11559                           ;psect for function _PWM6_LoadDutyValue
 11560  0867                     _PWM6_LoadDutyValue:
 11561  0867                     l4732:	
 11562                           ;incstack = 0
 11563                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 11564                           
 11565                           
 11566                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 11567  0867  0021               	movlb	1	; select bank1
 11568  0868  0821               	movf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128),w
 11569  0869  00A3               	movwf	(??_PWM6_LoadDutyValue^(0+128)+1)
 11570  086A  0820               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 11571  086B  00A2               	movwf	??_PWM6_LoadDutyValue^(0+128)
 11572  086C  36A3               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 11573  086D  0CA2               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 11574  086E  36A3               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 11575  086F  0CA2               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 11576  0870  0822               	movf	??_PWM6_LoadDutyValue^(0+128),w
 11577  0871  0027               	movlb	7	; select bank7
 11578  0872  008D               	movwf	13	;volatile
 11579                           
 11580                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 11581  0873  0021               	movlb	1	; select bank1
 11582  0874  0820               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 11583  0875  3903               	andlw	3
 11584  0876  00A2               	movwf	??_PWM6_LoadDutyValue^(0+128)
 11585  0877  3005               	movlw	5
 11586  0878                     u4195:
 11587  0878  35A2               	lslf	??_PWM6_LoadDutyValue^(0+128),f
 11588  0879  3EFF               	addlw	-1
 11589  087A  1D03               	skipz
 11590  087B  2878               	goto	u4195
 11591  087C  3522               	lslf	??_PWM6_LoadDutyValue^(0+128),w
 11592  087D  0027               	movlb	7	; select bank7
 11593  087E  008C               	movwf	12	;volatile
 11594  087F                     l722:
 11595  087F  0008               	return
 11596  0880                     __end_of_PWM6_LoadDutyValue:
 11597                           
 11598                           	psect	text23
 11599  0BF5                     __ptext23:	
 11600 ;; *************** function _LCDinit *****************
 11601 ;; Defined at:
 11602 ;;		line 173 in file "main.c"
 11603 ;; Parameters:    Size  Location     Type
 11604 ;;		None
 11605 ;; Auto vars:     Size  Location     Type
 11606 ;;		None
 11607 ;; Return value:  Size  Location     Type
 11608 ;;                  1    wreg      void 
 11609 ;; Registers used:
 11610 ;;		wreg, status,2, status,0, pclath, cstack
 11611 ;; Tracked objects:
 11612 ;;		On entry : 0/0
 11613 ;;		On exit  : 0/0
 11614 ;;		Unchanged: 0/0
 11615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11618 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11619 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11620 ;;Total ram usage:        1 bytes
 11621 ;; Hardware stack levels used:    1
 11622 ;; Hardware stack levels required when called:    9
 11623 ;; This function calls:
 11624 ;;		_LCDsend
 11625 ;;		_LCDsend2x4
 11626 ;; This function is called by:
 11627 ;;		_main
 11628 ;; This function uses a non-reentrant model
 11629 ;;
 11630                           
 11631                           
 11632                           ;psect for function _LCDinit
 11633  0BF5                     _LCDinit:
 11634  0BF5                     l4802:	
 11635                           ;incstack = 0
 11636                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 11637                           
 11638                           
 11639                           ;main.c: 175: _delay((unsigned long)((50)*(1000000/4000.0)));
 11640  0BF5  3011               	movlw	17
 11641  0BF6  0021               	movlb	1	; select bank1
 11642  0BF7  00A8               	movwf	??_LCDinit^(0+128)
 11643  0BF8  303A               	movlw	58
 11644  0BF9                     u5007:
 11645  0BF9  0B89               	decfsz	9,f
 11646  0BFA  2BF9               	goto	u5007
 11647  0BFB  0BA8               	decfsz	??_LCDinit^(0+128),f
 11648  0BFC  2BF9               	goto	u5007
 11649  0BFD  0000               	nop
 11650  0BFE                     l4804:
 11651                           
 11652                           ;main.c: 176: LCDsend(0x30);
 11653  0BFE  3030               	movlw	48
 11654  0BFF  318B  2348  318B   	fcall	_LCDsend
 11655  0C02                     l4806:
 11656                           
 11657                           ;main.c: 177: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 11658  0C02  3034               	movlw	52
 11659  0C03  318B  2348  318B   	fcall	_LCDsend
 11660  0C06  3029               	movlw	41
 11661  0C07                     u5017:
 11662  0C07  0B89               	decfsz	9,f
 11663  0C08  2C07               	goto	u5017
 11664  0C09  3200               	nop2
 11665  0C0A                     l4808:
 11666  0C0A  3030               	movlw	48
 11667  0C0B  318B  2348  318B   	fcall	_LCDsend
 11668  0C0E                     l4810:
 11669                           
 11670                           ;main.c: 178: _delay((unsigned long)((5)*(1000000/4000.0)));
 11671  0C0E  30FA               	movlw	250
 11672  0C0F                     u5027:
 11673  0C0F  3200               	nop2
 11674  0C10  0B89               	decfsz	9,f
 11675  0C11  2C0F               	goto	u5027
 11676                           
 11677                           ;main.c: 179: LCDsend(0x30);
 11678  0C12  3030               	movlw	48
 11679  0C13  318B  2348  318B   	fcall	_LCDsend
 11680                           
 11681                           ;main.c: 180: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 11682  0C16  3034               	movlw	52
 11683  0C17  318B  2348  318B   	fcall	_LCDsend
 11684  0C1A                     l4812:
 11685  0C1A  3029               	movlw	41
 11686  0C1B                     u5037:
 11687  0C1B  0B89               	decfsz	9,f
 11688  0C1C  2C1B               	goto	u5037
 11689  0C1D  3200               	nop2
 11690  0C1E                     l4814:
 11691  0C1E  3030               	movlw	48
 11692  0C1F  318B  2348  318B   	fcall	_LCDsend
 11693                           
 11694                           ;main.c: 181: _delay((unsigned long)((100)*(1000000/4000000.0)));
 11695  0C22  3008               	movlw	8
 11696  0C23                     u5047:
 11697  0C23  0B89               	decfsz	9,f
 11698  0C24  2C23               	goto	u5047
 11699  0C25  0000               	nop
 11700  0C26                     l4816:
 11701                           
 11702                           ;main.c: 182: LCDsend(0x30);
 11703  0C26  3030               	movlw	48
 11704  0C27  318B  2348  318B   	fcall	_LCDsend
 11705  0C2A                     l4818:
 11706                           
 11707                           ;main.c: 183: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 11708  0C2A  3034               	movlw	52
 11709  0C2B  318B  2348  318B   	fcall	_LCDsend
 11710  0C2E  3029               	movlw	41
 11711  0C2F                     u5057:
 11712  0C2F  0B89               	decfsz	9,f
 11713  0C30  2C2F               	goto	u5057
 11714  0C31  3200               	nop2
 11715  0C32                     l4820:
 11716  0C32  3030               	movlw	48
 11717  0C33  318B  2348  318B   	fcall	_LCDsend
 11718  0C36                     l4822:
 11719                           
 11720                           ;main.c: 184: _delay((unsigned long)((100)*(1000000/4000000.0)));
 11721  0C36  3008               	movlw	8
 11722  0C37                     u5067:
 11723  0C37  0B89               	decfsz	9,f
 11724  0C38  2C37               	goto	u5067
 11725  0C39  0000               	nop
 11726                           
 11727                           ;main.c: 185: LCDsend(0x20);
 11728  0C3A  3020               	movlw	32
 11729  0C3B  318B  2348  318B   	fcall	_LCDsend
 11730                           
 11731                           ;main.c: 186: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
 11732  0C3E  3024               	movlw	36
 11733  0C3F  318B  2348  318B   	fcall	_LCDsend
 11734  0C42                     l4824:
 11735  0C42  3029               	movlw	41
 11736  0C43                     u5077:
 11737  0C43  0B89               	decfsz	9,f
 11738  0C44  2C43               	goto	u5077
 11739  0C45  3200               	nop2
 11740  0C46                     l4826:
 11741  0C46  3020               	movlw	32
 11742  0C47  318B  2348  318B   	fcall	_LCDsend
 11743                           
 11744                           ;main.c: 187: _delay((unsigned long)((5)*(1000000/4000.0)));
 11745  0C4A  30FA               	movlw	250
 11746  0C4B                     u5087:
 11747  0C4B  3200               	nop2
 11748  0C4C  0B89               	decfsz	9,f
 11749  0C4D  2C4B               	goto	u5087
 11750  0C4E                     l4828:
 11751                           
 11752                           ;main.c: 189: LCDsend2x4(0x28, 0);
 11753  0C4E  0021               	movlb	1	; select bank1
 11754  0C4F  01A2               	clrf	LCDsend2x4@mode^(0+128)
 11755  0C50  3028               	movlw	40
 11756  0C51  318D  251E  318B   	fcall	_LCDsend2x4
 11757  0C54                     l4830:
 11758                           
 11759                           ;main.c: 190: LCDsend2x4(0x06, 0);
 11760  0C54  0021               	movlb	1	; select bank1
 11761  0C55  01A2               	clrf	LCDsend2x4@mode^(0+128)
 11762  0C56  3006               	movlw	6
 11763  0C57  318D  251E  318B   	fcall	_LCDsend2x4
 11764  0C5A                     l4832:
 11765                           
 11766                           ;main.c: 191: LCDsend2x4(0x0f, 0);
 11767  0C5A  0021               	movlb	1	; select bank1
 11768  0C5B  01A2               	clrf	LCDsend2x4@mode^(0+128)
 11769  0C5C  300F               	movlw	15
 11770  0C5D  318D  251E  318B   	fcall	_LCDsend2x4
 11771  0C60                     l4834:
 11772                           
 11773                           ;main.c: 192: LCDsend2x4(0x01, 0);
 11774  0C60  0021               	movlb	1	; select bank1
 11775  0C61  01A2               	clrf	LCDsend2x4@mode^(0+128)
 11776  0C62  3001               	movlw	1
 11777  0C63  318D  251E  318B   	fcall	_LCDsend2x4
 11778                           
 11779                           ;main.c: 193: _delay((unsigned long)((2)*(1000000/4000.0)));
 11780  0C66  30A6               	movlw	166
 11781  0C67                     u5097:
 11782  0C67  0B89               	decfsz	9,f
 11783  0C68  2C67               	goto	u5097
 11784  0C69  3200               	nop2
 11785  0C6A                     l1073:
 11786  0C6A  0008               	return
 11787  0C6B                     __end_of_LCDinit:
 11788                           
 11789                           	psect	text24
 11790  0D1E                     __ptext24:	
 11791 ;; *************** function _LCDsend2x4 *****************
 11792 ;; Defined at:
 11793 ;;		line 150 in file "main.c"
 11794 ;; Parameters:    Size  Location     Type
 11795 ;;  c               1    wreg     unsigned char 
 11796 ;;  mode            1    2[BANK1 ] unsigned char 
 11797 ;; Auto vars:     Size  Location     Type
 11798 ;;  c               1    5[BANK1 ] unsigned char 
 11799 ;;  lc              1    7[BANK1 ] unsigned char 
 11800 ;;  hc              1    6[BANK1 ] unsigned char 
 11801 ;; Return value:  Size  Location     Type
 11802 ;;                  1    wreg      void 
 11803 ;; Registers used:
 11804 ;;		wreg, status,2, status,0, pclath, cstack
 11805 ;; Tracked objects:
 11806 ;;		On entry : 0/0
 11807 ;;		On exit  : 0/0
 11808 ;;		Unchanged: 0/0
 11809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11810 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11811 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11812 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11813 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 11814 ;;Total ram usage:        6 bytes
 11815 ;; Hardware stack levels used:    1
 11816 ;; Hardware stack levels required when called:    8
 11817 ;; This function calls:
 11818 ;;		_WriteI2C
 11819 ;; This function is called by:
 11820 ;;		_LCDinit
 11821 ;; This function uses a non-reentrant model
 11822 ;;
 11823                           
 11824                           
 11825                           ;psect for function _LCDsend2x4
 11826  0D1E                     _LCDsend2x4:
 11827                           
 11828                           ;incstack = 0
 11829                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 11830                           ;LCDsend2x4@c stored from wreg
 11831  0D1E  0021               	movlb	1	; select bank1
 11832  0D1F  00A5               	movwf	LCDsend2x4@c^(0+128)
 11833  0D20                     l4414:
 11834                           
 11835                           ;main.c: 152: unsigned char hc;;main.c: 153: unsigned char lc;;main.c: 155: hc = c & 0xf
      +                          0;
 11836  0D20  0825               	movf	LCDsend2x4@c^(0+128),w
 11837  0D21  39F0               	andlw	240
 11838  0D22  00A3               	movwf	??_LCDsend2x4^(0+128)
 11839  0D23  0823               	movf	??_LCDsend2x4^(0+128),w
 11840  0D24  00A6               	movwf	LCDsend2x4@hc^(0+128)
 11841  0D25                     l4416:
 11842                           
 11843                           ;main.c: 156: lc = (c << 4) & 0xf0;
 11844  0D25  0825               	movf	LCDsend2x4@c^(0+128),w
 11845  0D26  00A3               	movwf	??_LCDsend2x4^(0+128)
 11846  0D27  3003               	movlw	3
 11847  0D28                     u3605:
 11848  0D28  35A3               	lslf	??_LCDsend2x4^(0+128),f
 11849  0D29  3EFF               	addlw	-1
 11850  0D2A  1D03               	skipz
 11851  0D2B  2D28               	goto	u3605
 11852  0D2C  3523               	lslf	??_LCDsend2x4^(0+128),w
 11853  0D2D  39F0               	andlw	240
 11854  0D2E  00A4               	movwf	(??_LCDsend2x4+1)^(0+128)
 11855  0D2F  0824               	movf	(??_LCDsend2x4+1)^(0+128),w
 11856  0D30  00A7               	movwf	LCDsend2x4@lc^(0+128)
 11857  0D31                     l4418:	
 11858                           ;main.c: 158: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11859                           
 11860  0D31  0023               	movlb	3	; select bank3
 11861  0D32  0C0F               	rrf	15,w	;volatile
 11862  0D33  0C89               	rrf	9,f
 11863  0D34  3901               	andlw	1
 11864  0D35  0021               	movlb	1	; select bank1
 11865  0D36  00A3               	movwf	??_LCDsend2x4^(0+128)
 11866  0D37  0023               	movlb	3	; select bank3
 11867  0D38  0811               	movf	17,w	;volatile
 11868  0D39  391F               	andlw	31
 11869  0D3A  0021               	movlb	1	; select bank1
 11870  0D3B  0423               	iorwf	??_LCDsend2x4^(0+128),w
 11871  0D3C  1D03               	btfss	3,2
 11872  0D3D  2D3F               	goto	u3611
 11873  0D3E  2D40               	goto	u3610
 11874  0D3F                     u3611:
 11875  0D3F  2D31               	goto	l4418
 11876  0D40                     u3610:
 11877  0D40                     l1039:
 11878                           
 11879                           ;main.c: 159: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 11880  0D40  0023               	movlb	3	; select bank3
 11881  0D41  1411               	bsf	17,0	;volatile
 11882  0D42                     l1040:
 11883  0D42  1811               	btfsc	17,0	;volatile
 11884  0D43  2D45               	goto	u3621
 11885  0D44  2D46               	goto	u3620
 11886  0D45                     u3621:
 11887  0D45  2D42               	goto	l1040
 11888  0D46                     u3620:
 11889  0D46                     l4420:
 11890  0D46  0023               	movlb	3	; select bank3
 11891  0D47  0C0F               	rrf	15,w	;volatile
 11892  0D48  0C89               	rrf	9,f
 11893  0D49  3901               	andlw	1
 11894  0D4A  0021               	movlb	1	; select bank1
 11895  0D4B  00A3               	movwf	??_LCDsend2x4^(0+128)
 11896  0D4C  0023               	movlb	3	; select bank3
 11897  0D4D  0811               	movf	17,w	;volatile
 11898  0D4E  391F               	andlw	31
 11899  0D4F  0021               	movlb	1	; select bank1
 11900  0D50  0423               	iorwf	??_LCDsend2x4^(0+128),w
 11901  0D51  1D03               	btfss	3,2
 11902  0D52  2D54               	goto	u3631
 11903  0D53  2D55               	goto	u3630
 11904  0D54                     u3631:
 11905  0D54  2D46               	goto	l4420
 11906  0D55                     u3630:
 11907  0D55                     l4422:
 11908                           
 11909                           ;main.c: 160: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11910  0D55  304E               	movlw	78
 11911  0D56  318B  239B  318D   	fcall	_WriteI2C
 11912  0D59                     l4424:
 11913  0D59  0023               	movlb	3	; select bank3
 11914  0D5A  0C0F               	rrf	15,w	;volatile
 11915  0D5B  0C89               	rrf	9,f
 11916  0D5C  3901               	andlw	1
 11917  0D5D  0021               	movlb	1	; select bank1
 11918  0D5E  00A3               	movwf	??_LCDsend2x4^(0+128)
 11919  0D5F  0023               	movlb	3	; select bank3
 11920  0D60  0811               	movf	17,w	;volatile
 11921  0D61  391F               	andlw	31
 11922  0D62  0021               	movlb	1	; select bank1
 11923  0D63  0423               	iorwf	??_LCDsend2x4^(0+128),w
 11924  0D64  1D03               	btfss	3,2
 11925  0D65  2D67               	goto	u3641
 11926  0D66  2D68               	goto	u3640
 11927  0D67                     u3641:
 11928  0D67  2D59               	goto	l4424
 11929  0D68                     u3640:
 11930  0D68                     l4426:
 11931                           
 11932                           ;main.c: 161: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 11933  0D68  0826               	movf	LCDsend2x4@hc^(0+128),w
 11934  0D69  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 11935  0D6A  3808               	iorlw	8
 11936  0D6B  318B  239B  318D   	fcall	_WriteI2C
 11937  0D6E                     l4428:
 11938  0D6E  0023               	movlb	3	; select bank3
 11939  0D6F  0C0F               	rrf	15,w	;volatile
 11940  0D70  0C89               	rrf	9,f
 11941  0D71  3901               	andlw	1
 11942  0D72  0021               	movlb	1	; select bank1
 11943  0D73  00A3               	movwf	??_LCDsend2x4^(0+128)
 11944  0D74  0023               	movlb	3	; select bank3
 11945  0D75  0811               	movf	17,w	;volatile
 11946  0D76  391F               	andlw	31
 11947  0D77  0021               	movlb	1	; select bank1
 11948  0D78  0423               	iorwf	??_LCDsend2x4^(0+128),w
 11949  0D79  1D03               	btfss	3,2
 11950  0D7A  2D7C               	goto	u3651
 11951  0D7B  2D7D               	goto	u3650
 11952  0D7C                     u3651:
 11953  0D7C  2D6E               	goto	l4428
 11954  0D7D                     u3650:
 11955  0D7D                     l4430:
 11956                           
 11957                           ;main.c: 162: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 11958  0D7D  0826               	movf	LCDsend2x4@hc^(0+128),w
 11959  0D7E  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 11960  0D7F  380C               	iorlw	12
 11961  0D80  318B  239B  318D   	fcall	_WriteI2C
 11962  0D83                     l4432:
 11963  0D83  0023               	movlb	3	; select bank3
 11964  0D84  0C0F               	rrf	15,w	;volatile
 11965  0D85  0C89               	rrf	9,f
 11966  0D86  3901               	andlw	1
 11967  0D87  0021               	movlb	1	; select bank1
 11968  0D88  00A3               	movwf	??_LCDsend2x4^(0+128)
 11969  0D89  0023               	movlb	3	; select bank3
 11970  0D8A  0811               	movf	17,w	;volatile
 11971  0D8B  391F               	andlw	31
 11972  0D8C  0021               	movlb	1	; select bank1
 11973  0D8D  0423               	iorwf	??_LCDsend2x4^(0+128),w
 11974  0D8E  1D03               	btfss	3,2
 11975  0D8F  2D91               	goto	u3661
 11976  0D90  2D92               	goto	u3660
 11977  0D91                     u3661:
 11978  0D91  2D83               	goto	l4432
 11979  0D92                     u3660:
 11980  0D92                     l1054:
 11981  0D92                     l4434:	
 11982                           ;main.c: 163: _delay((unsigned long)((1)*(1000000/4000000.0)));
 11983                           
 11984                           
 11985                           ;main.c: 164: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 11986  0D92  0021               	movlb	1	; select bank1
 11987  0D93  0826               	movf	LCDsend2x4@hc^(0+128),w
 11988  0D94  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 11989  0D95  3808               	iorlw	8
 11990  0D96  318B  239B  318D   	fcall	_WriteI2C
 11991  0D99                     l4436:
 11992  0D99  0023               	movlb	3	; select bank3
 11993  0D9A  0C0F               	rrf	15,w	;volatile
 11994  0D9B  0C89               	rrf	9,f
 11995  0D9C  3901               	andlw	1
 11996  0D9D  0021               	movlb	1	; select bank1
 11997  0D9E  00A3               	movwf	??_LCDsend2x4^(0+128)
 11998  0D9F  0023               	movlb	3	; select bank3
 11999  0DA0  0811               	movf	17,w	;volatile
 12000  0DA1  391F               	andlw	31
 12001  0DA2  0021               	movlb	1	; select bank1
 12002  0DA3  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12003  0DA4  1D03               	btfss	3,2
 12004  0DA5  2DA7               	goto	u3671
 12005  0DA6  2DA8               	goto	u3670
 12006  0DA7                     u3671:
 12007  0DA7  2D99               	goto	l4436
 12008  0DA8                     u3670:
 12009  0DA8                     l4438:
 12010                           
 12011                           ;main.c: 165: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 12012  0DA8  0827               	movf	LCDsend2x4@lc^(0+128),w
 12013  0DA9  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12014  0DAA  3808               	iorlw	8
 12015  0DAB  318B  239B  318D   	fcall	_WriteI2C
 12016  0DAE                     l4440:
 12017  0DAE  0023               	movlb	3	; select bank3
 12018  0DAF  0C0F               	rrf	15,w	;volatile
 12019  0DB0  0C89               	rrf	9,f
 12020  0DB1  3901               	andlw	1
 12021  0DB2  0021               	movlb	1	; select bank1
 12022  0DB3  00A3               	movwf	??_LCDsend2x4^(0+128)
 12023  0DB4  0023               	movlb	3	; select bank3
 12024  0DB5  0811               	movf	17,w	;volatile
 12025  0DB6  391F               	andlw	31
 12026  0DB7  0021               	movlb	1	; select bank1
 12027  0DB8  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12028  0DB9  1D03               	btfss	3,2
 12029  0DBA  2DBC               	goto	u3681
 12030  0DBB  2DBD               	goto	u3680
 12031  0DBC                     u3681:
 12032  0DBC  2DAE               	goto	l4440
 12033  0DBD                     u3680:
 12034  0DBD                     l4442:
 12035                           
 12036                           ;main.c: 166: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 12037  0DBD  0827               	movf	LCDsend2x4@lc^(0+128),w
 12038  0DBE  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12039  0DBF  380C               	iorlw	12
 12040  0DC0  318B  239B  318D   	fcall	_WriteI2C
 12041  0DC3                     l4444:
 12042  0DC3  0023               	movlb	3	; select bank3
 12043  0DC4  0C0F               	rrf	15,w	;volatile
 12044  0DC5  0C89               	rrf	9,f
 12045  0DC6  3901               	andlw	1
 12046  0DC7  0021               	movlb	1	; select bank1
 12047  0DC8  00A3               	movwf	??_LCDsend2x4^(0+128)
 12048  0DC9  0023               	movlb	3	; select bank3
 12049  0DCA  0811               	movf	17,w	;volatile
 12050  0DCB  391F               	andlw	31
 12051  0DCC  0021               	movlb	1	; select bank1
 12052  0DCD  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12053  0DCE  1D03               	btfss	3,2
 12054  0DCF  2DD1               	goto	u3691
 12055  0DD0  2DD2               	goto	u3690
 12056  0DD1                     u3691:
 12057  0DD1  2DC3               	goto	l4444
 12058  0DD2                     u3690:
 12059  0DD2                     l1063:
 12060  0DD2                     l4446:	
 12061                           ;main.c: 167: _delay((unsigned long)((1)*(1000000/4000000.0)));
 12062                           
 12063                           
 12064                           ;main.c: 168: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 12065  0DD2  0021               	movlb	1	; select bank1
 12066  0DD3  0827               	movf	LCDsend2x4@lc^(0+128),w
 12067  0DD4  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12068  0DD5  3808               	iorlw	8
 12069  0DD6  318B  239B  318D   	fcall	_WriteI2C
 12070  0DD9                     l4448:
 12071  0DD9  0023               	movlb	3	; select bank3
 12072  0DDA  0C0F               	rrf	15,w	;volatile
 12073  0DDB  0C89               	rrf	9,f
 12074  0DDC  3901               	andlw	1
 12075  0DDD  0021               	movlb	1	; select bank1
 12076  0DDE  00A3               	movwf	??_LCDsend2x4^(0+128)
 12077  0DDF  0023               	movlb	3	; select bank3
 12078  0DE0  0811               	movf	17,w	;volatile
 12079  0DE1  391F               	andlw	31
 12080  0DE2  0021               	movlb	1	; select bank1
 12081  0DE3  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12082  0DE4  1D03               	btfss	3,2
 12083  0DE5  2DE7               	goto	u3701
 12084  0DE6  2DE8               	goto	u3700
 12085  0DE7                     u3701:
 12086  0DE7  2DD9               	goto	l4448
 12087  0DE8                     u3700:
 12088  0DE8                     l1066:
 12089                           
 12090                           ;main.c: 169: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 12091  0DE8  0023               	movlb	3	; select bank3
 12092  0DE9  1511               	bsf	17,2	;volatile
 12093  0DEA                     l1067:
 12094  0DEA  1911               	btfsc	17,2	;volatile
 12095  0DEB  2DED               	goto	u3711
 12096  0DEC  2DEE               	goto	u3710
 12097  0DED                     u3711:
 12098  0DED  2DEA               	goto	l1067
 12099  0DEE                     u3710:
 12100  0DEE                     l4450:
 12101                           
 12102                           ;main.c: 170: _delay((unsigned long)((50)*(1000000/4000000.0)));
 12103  0DEE  3004               	movlw	4
 12104  0DEF                     u5107:
 12105  0DEF  0B89               	decfsz	9,f
 12106  0DF0  2DEF               	goto	u5107
 12107  0DF1                     l1070:
 12108  0DF1  0008               	return
 12109  0DF2                     __end_of_LCDsend2x4:
 12110                           
 12111                           	psect	text25
 12112  0B48                     __ptext25:	
 12113 ;; *************** function _LCDsend *****************
 12114 ;; Defined at:
 12115 ;;		line 111 in file "main.c"
 12116 ;; Parameters:    Size  Location     Type
 12117 ;;  c               1    wreg     unsigned char 
 12118 ;; Auto vars:     Size  Location     Type
 12119 ;;  c               1    3[BANK1 ] unsigned char 
 12120 ;; Return value:  Size  Location     Type
 12121 ;;                  1    wreg      void 
 12122 ;; Registers used:
 12123 ;;		wreg, status,2, status,0, pclath, cstack
 12124 ;; Tracked objects:
 12125 ;;		On entry : 0/0
 12126 ;;		On exit  : 0/0
 12127 ;;		Unchanged: 0/0
 12128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12130 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12131 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12132 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12133 ;;Total ram usage:        2 bytes
 12134 ;; Hardware stack levels used:    1
 12135 ;; Hardware stack levels required when called:    8
 12136 ;; This function calls:
 12137 ;;		_WriteI2C
 12138 ;; This function is called by:
 12139 ;;		_LCDinit
 12140 ;; This function uses a non-reentrant model
 12141 ;;
 12142                           
 12143                           
 12144                           ;psect for function _LCDsend
 12145  0B48                     _LCDsend:
 12146                           
 12147                           ;incstack = 0
 12148                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 12149                           ;LCDsend@c stored from wreg
 12150  0B48  0021               	movlb	1	; select bank1
 12151  0B49  00A3               	movwf	LCDsend@c^(0+128)
 12152  0B4A                     l4400:
 12153  0B4A                     l4402:	
 12154                           ;main.c: 113: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12155                           
 12156  0B4A  0023               	movlb	3	; select bank3
 12157  0B4B  0C0F               	rrf	15,w	;volatile
 12158  0B4C  0C89               	rrf	9,f
 12159  0B4D  3901               	andlw	1
 12160  0B4E  0021               	movlb	1	; select bank1
 12161  0B4F  00A2               	movwf	??_LCDsend^(0+128)
 12162  0B50  0023               	movlb	3	; select bank3
 12163  0B51  0811               	movf	17,w	;volatile
 12164  0B52  391F               	andlw	31
 12165  0B53  0021               	movlb	1	; select bank1
 12166  0B54  0422               	iorwf	??_LCDsend^(0+128),w
 12167  0B55  1D03               	btfss	3,2
 12168  0B56  2B58               	goto	u3541
 12169  0B57  2B59               	goto	u3540
 12170  0B58                     u3541:
 12171  0B58  2B4A               	goto	l4402
 12172  0B59                     u3540:
 12173  0B59                     l937:
 12174                           
 12175                           ;main.c: 114: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 12176  0B59  0023               	movlb	3	; select bank3
 12177  0B5A  1411               	bsf	17,0	;volatile
 12178  0B5B                     l938:
 12179  0B5B  1811               	btfsc	17,0	;volatile
 12180  0B5C  2B5E               	goto	u3551
 12181  0B5D  2B5F               	goto	u3550
 12182  0B5E                     u3551:
 12183  0B5E  2B5B               	goto	l938
 12184  0B5F                     u3550:
 12185  0B5F                     l4404:
 12186  0B5F  0023               	movlb	3	; select bank3
 12187  0B60  0C0F               	rrf	15,w	;volatile
 12188  0B61  0C89               	rrf	9,f
 12189  0B62  3901               	andlw	1
 12190  0B63  0021               	movlb	1	; select bank1
 12191  0B64  00A2               	movwf	??_LCDsend^(0+128)
 12192  0B65  0023               	movlb	3	; select bank3
 12193  0B66  0811               	movf	17,w	;volatile
 12194  0B67  391F               	andlw	31
 12195  0B68  0021               	movlb	1	; select bank1
 12196  0B69  0422               	iorwf	??_LCDsend^(0+128),w
 12197  0B6A  1D03               	btfss	3,2
 12198  0B6B  2B6D               	goto	u3561
 12199  0B6C  2B6E               	goto	u3560
 12200  0B6D                     u3561:
 12201  0B6D  2B5F               	goto	l4404
 12202  0B6E                     u3560:
 12203  0B6E                     l4406:
 12204                           
 12205                           ;main.c: 115: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12206  0B6E  304E               	movlw	78
 12207  0B6F  318B  239B  318B   	fcall	_WriteI2C
 12208  0B72                     l4408:
 12209  0B72  0023               	movlb	3	; select bank3
 12210  0B73  0C0F               	rrf	15,w	;volatile
 12211  0B74  0C89               	rrf	9,f
 12212  0B75  3901               	andlw	1
 12213  0B76  0021               	movlb	1	; select bank1
 12214  0B77  00A2               	movwf	??_LCDsend^(0+128)
 12215  0B78  0023               	movlb	3	; select bank3
 12216  0B79  0811               	movf	17,w	;volatile
 12217  0B7A  391F               	andlw	31
 12218  0B7B  0021               	movlb	1	; select bank1
 12219  0B7C  0422               	iorwf	??_LCDsend^(0+128),w
 12220  0B7D  1D03               	btfss	3,2
 12221  0B7E  2B80               	goto	u3571
 12222  0B7F  2B81               	goto	u3570
 12223  0B80                     u3571:
 12224  0B80  2B72               	goto	l4408
 12225  0B81                     u3570:
 12226  0B81                     l4410:
 12227                           
 12228                           ;main.c: 116: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12229  0B81  0823               	movf	LCDsend@c^(0+128),w
 12230  0B82  318B  239B  318B   	fcall	_WriteI2C
 12231  0B85                     l4412:
 12232  0B85  0023               	movlb	3	; select bank3
 12233  0B86  0C0F               	rrf	15,w	;volatile
 12234  0B87  0C89               	rrf	9,f
 12235  0B88  3901               	andlw	1
 12236  0B89  0021               	movlb	1	; select bank1
 12237  0B8A  00A2               	movwf	??_LCDsend^(0+128)
 12238  0B8B  0023               	movlb	3	; select bank3
 12239  0B8C  0811               	movf	17,w	;volatile
 12240  0B8D  391F               	andlw	31
 12241  0B8E  0021               	movlb	1	; select bank1
 12242  0B8F  0422               	iorwf	??_LCDsend^(0+128),w
 12243  0B90  1D03               	btfss	3,2
 12244  0B91  2B93               	goto	u3581
 12245  0B92  2B94               	goto	u3580
 12246  0B93                     u3581:
 12247  0B93  2B85               	goto	l4412
 12248  0B94                     u3580:
 12249  0B94                     l949:
 12250                           
 12251                           ;main.c: 117: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 12252  0B94  0023               	movlb	3	; select bank3
 12253  0B95  1511               	bsf	17,2	;volatile
 12254  0B96                     l950:
 12255  0B96  1911               	btfsc	17,2	;volatile
 12256  0B97  2B99               	goto	u3591
 12257  0B98  2B9A               	goto	u3590
 12258  0B99                     u3591:
 12259  0B99  2B96               	goto	l950
 12260  0B9A                     u3590:
 12261  0B9A                     l953:
 12262  0B9A  0008               	return
 12263  0B9B                     __end_of_LCDsend:
 12264                           
 12265                           	psect	text26
 12266  0B9B                     __ptext26:	
 12267 ;; *************** function _WriteI2C *****************
 12268 ;; Defined at:
 12269 ;;		line 47 in file "I2C/i2c.c"
 12270 ;; Parameters:    Size  Location     Type
 12271 ;;  data_out        1    wreg     unsigned char 
 12272 ;; Auto vars:     Size  Location     Type
 12273 ;;  data_out        1    1[BANK1 ] unsigned char 
 12274 ;; Return value:  Size  Location     Type
 12275 ;;                  1    wreg      char 
 12276 ;; Registers used:
 12277 ;;		wreg, status,2, status,0
 12278 ;; Tracked objects:
 12279 ;;		On entry : 0/0
 12280 ;;		On exit  : 0/0
 12281 ;;		Unchanged: 0/0
 12282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12284 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12285 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12286 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12287 ;;Total ram usage:        2 bytes
 12288 ;; Hardware stack levels used:    1
 12289 ;; Hardware stack levels required when called:    7
 12290 ;; This function calls:
 12291 ;;		Nothing
 12292 ;; This function is called by:
 12293 ;;		_LCDsend
 12294 ;;		_LCDsend2x4
 12295 ;;		_LCDrecv
 12296 ;; This function uses a non-reentrant model
 12297 ;;
 12298                           
 12299                           
 12300                           ;psect for function _WriteI2C
 12301  0B9B                     _WriteI2C:
 12302                           
 12303                           ;incstack = 0
 12304                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 12305                           ;WriteI2C@data_out stored from wreg
 12306  0B9B  0021               	movlb	1	; select bank1
 12307  0B9C  00A1               	movwf	WriteI2C@data_out^(0+128)
 12308  0B9D                     l3948:
 12309                           
 12310                           ;i2c.c: 49: SSP1BUF = data_out;
 12311  0B9D  0821               	movf	WriteI2C@data_out^(0+128),w
 12312  0B9E  0023               	movlb	3	; select bank3
 12313  0B9F  008C               	movwf	12	;volatile
 12314  0BA0                     l3950:
 12315                           
 12316                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 12317  0BA0  1F90               	btfss	16,7	;volatile
 12318  0BA1  2BA3               	goto	u2931
 12319  0BA2  2BA4               	goto	u2930
 12320  0BA3                     u2931:
 12321  0BA3  2BA5               	goto	l3956
 12322  0BA4                     u2930:
 12323  0BA4  2BF4               	goto	l30
 12324  0BA5                     l3956:
 12325                           
 12326                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 12327  0BA5  300F               	movlw	15
 12328  0BA6  0510               	andwf	16,w	;volatile
 12329  0BA7  0021               	movlb	1	; select bank1
 12330  0BA8  00A0               	movwf	??_WriteI2C^(0+128)
 12331  0BA9  3008               	movlw	8
 12332  0BAA  0620               	xorwf	??_WriteI2C^(0+128),w
 12333  0BAB  1903               	btfsc	3,2
 12334  0BAC  2BAE               	goto	u2941
 12335  0BAD  2BAF               	goto	u2940
 12336  0BAE                     u2941:
 12337  0BAE  2BC8               	goto	l3968
 12338  0BAF                     u2940:
 12339  0BAF                     l3958:
 12340  0BAF  300F               	movlw	15
 12341  0BB0  0023               	movlb	3	; select bank3
 12342  0BB1  0510               	andwf	16,w	;volatile
 12343  0BB2  0021               	movlb	1	; select bank1
 12344  0BB3  00A0               	movwf	??_WriteI2C^(0+128)
 12345  0BB4  300B               	movlw	11
 12346  0BB5  0620               	xorwf	??_WriteI2C^(0+128),w
 12347  0BB6  1903               	btfsc	3,2
 12348  0BB7  2BB9               	goto	u2951
 12349  0BB8  2BBA               	goto	u2950
 12350  0BB9                     u2951:
 12351  0BB9  2BC8               	goto	l3968
 12352  0BBA                     u2950:
 12353  0BBA                     l3960:
 12354                           
 12355                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 12356  0BBA  0023               	movlb	3	; select bank3
 12357  0BBB  1610               	bsf	16,4	;volatile
 12358  0BBC                     l33:	
 12359                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 12360                           
 12361  0BBC  002E               	movlb	14	; select bank14
 12362  0BBD  1C0F               	btfss	15,0	;volatile
 12363  0BBE  2BC0               	goto	u2961
 12364  0BBF  2BC1               	goto	u2960
 12365  0BC0                     u2961:
 12366  0BC0  2BBC               	goto	l33
 12367  0BC1                     u2960:
 12368  0BC1                     l35:
 12369                           
 12370                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 12371  0BC1  0023               	movlb	3	; select bank3
 12372  0BC2  190F               	btfsc	15,2	;volatile
 12373  0BC3  2BC5               	goto	u2971
 12374  0BC4  2BC6               	goto	u2970
 12375  0BC5                     u2971:
 12376  0BC5  2BF4               	goto	l30
 12377  0BC6                     u2970:
 12378  0BC6                     l3962:
 12379  0BC6  080F               	movf	15,w	;volatile
 12380  0BC7  2BF4               	goto	l30
 12381  0BC8                     l3968:
 12382                           
 12383                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 12384  0BC8  300F               	movlw	15
 12385  0BC9  0023               	movlb	3	; select bank3
 12386  0BCA  0510               	andwf	16,w	;volatile
 12387  0BCB  0021               	movlb	1	; select bank1
 12388  0BCC  00A0               	movwf	??_WriteI2C^(0+128)
 12389  0BCD  3008               	movlw	8
 12390  0BCE  0620               	xorwf	??_WriteI2C^(0+128),w
 12391  0BCF  1903               	btfsc	3,2
 12392  0BD0  2BD2               	goto	u2981
 12393  0BD1  2BD3               	goto	u2980
 12394  0BD2                     u2981:
 12395  0BD2  2BDE               	goto	l42
 12396  0BD3                     u2980:
 12397  0BD3                     l3970:
 12398  0BD3  300F               	movlw	15
 12399  0BD4  0023               	movlb	3	; select bank3
 12400  0BD5  0510               	andwf	16,w	;volatile
 12401  0BD6  0021               	movlb	1	; select bank1
 12402  0BD7  00A0               	movwf	??_WriteI2C^(0+128)
 12403  0BD8  300B               	movlw	11
 12404  0BD9  0620               	xorwf	??_WriteI2C^(0+128),w
 12405  0BDA  1D03               	btfss	3,2
 12406  0BDB  2BDD               	goto	u2991
 12407  0BDC  2BDE               	goto	u2990
 12408  0BDD                     u2991:
 12409  0BDD  2BF4               	goto	l30
 12410  0BDE                     u2990:
 12411  0BDE                     l42:
 12412  0BDE  0023               	movlb	3	; select bank3
 12413  0BDF  180F               	btfsc	15,0	;volatile
 12414  0BE0  2BE2               	goto	u3001
 12415  0BE1  2BE3               	goto	u3000
 12416  0BE2                     u3001:
 12417  0BE2  2BDE               	goto	l42
 12418  0BE3                     u3000:
 12419  0BE3                     l3972:
 12420  0BE3  0023               	movlb	3	; select bank3
 12421  0BE4  0C0F               	rrf	15,w	;volatile
 12422  0BE5  0C89               	rrf	9,f
 12423  0BE6  3901               	andlw	1
 12424  0BE7  0021               	movlb	1	; select bank1
 12425  0BE8  00A0               	movwf	??_WriteI2C^(0+128)
 12426  0BE9  0023               	movlb	3	; select bank3
 12427  0BEA  0811               	movf	17,w	;volatile
 12428  0BEB  391F               	andlw	31
 12429  0BEC  0021               	movlb	1	; select bank1
 12430  0BED  0420               	iorwf	??_WriteI2C^(0+128),w
 12431  0BEE  1D03               	btfss	3,2
 12432  0BEF  2BF1               	goto	u3011
 12433  0BF0  2BF2               	goto	u3010
 12434  0BF1                     u3011:
 12435  0BF1  2BE3               	goto	l3972
 12436  0BF2                     u3010:
 12437  0BF2                     l47:
 12438                           
 12439                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 12440  0BF2  0023               	movlb	3	; select bank3
 12441  0BF3  0811               	movf	17,w	;volatile
 12442  0BF4                     l30:
 12443  0BF4  0008               	return
 12444  0BF5                     __end_of_WriteI2C:
 12445                           
 12446                           	psect	text27
 12447  0950                     __ptext27:	
 12448 ;; *************** function _DATAEE_WriteByte *****************
 12449 ;; Defined at:
 12450 ;;		line 180 in file "mcc_generated_files/memory.c"
 12451 ;; Parameters:    Size  Location     Type
 12452 ;;  bAdd            2    0[BANK1 ] unsigned int 
 12453 ;;  bData           1    2[BANK1 ] unsigned char 
 12454 ;; Auto vars:     Size  Location     Type
 12455 ;;  GIEBitValue     1    3[BANK1 ] unsigned char 
 12456 ;; Return value:  Size  Location     Type
 12457 ;;                  1    wreg      void 
 12458 ;; Registers used:
 12459 ;;		wreg, status,2, status,0
 12460 ;; Tracked objects:
 12461 ;;		On entry : 0/0
 12462 ;;		On exit  : 0/0
 12463 ;;		Unchanged: 0/0
 12464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12465 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12466 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12468 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12469 ;;Total ram usage:        4 bytes
 12470 ;; Hardware stack levels used:    1
 12471 ;; Hardware stack levels required when called:    7
 12472 ;; This function calls:
 12473 ;;		Nothing
 12474 ;; This function is called by:
 12475 ;;		_main
 12476 ;; This function uses a non-reentrant model
 12477 ;;
 12478                           
 12479                           
 12480                           ;psect for function _DATAEE_WriteByte
 12481  0950                     _DATAEE_WriteByte:
 12482  0950                     l4838:	
 12483                           ;incstack = 0
 12484                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 12485                           
 12486                           
 12487                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 12488  0950  3000               	movlw	0
 12489  0951  1B8B               	btfsc	11,7	;volatile
 12490  0952  3001               	movlw	1
 12491  0953  0021               	movlb	1	; select bank1
 12492  0954  00A3               	movwf	DATAEE_WriteByte@GIEBitValue^(0+128)
 12493                           
 12494                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 12495  0955  0821               	movf	(DATAEE_WriteByte@bAdd+1)^(0+128),w
 12496  0956  0030               	movlb	16	; select bank16
 12497  0957  009B               	movwf	27	;volatile
 12498  0958                     l4840:
 12499                           
 12500                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 12501  0958  0021               	movlb	1	; select bank1
 12502  0959  0820               	movf	DATAEE_WriteByte@bAdd^(0+128),w
 12503  095A  0030               	movlb	16	; select bank16
 12504  095B  009A               	movwf	26	;volatile
 12505  095C                     l4842:
 12506                           
 12507                           ;memory.c: 186: NVMDATL = bData;
 12508  095C  0021               	movlb	1	; select bank1
 12509  095D  0822               	movf	DATAEE_WriteByte@bData^(0+128),w
 12510  095E  0030               	movlb	16	; select bank16
 12511  095F  009C               	movwf	28	;volatile
 12512  0960                     l4844:
 12513                           
 12514                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 12515  0960  171E               	bsf	30,6	;volsfr
 12516  0961                     l4846:
 12517                           
 12518                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 12519  0961  151E               	bsf	30,2	;volsfr
 12520  0962                     l4848:
 12521                           
 12522                           ;memory.c: 189: INTCONbits.GIE = 0;
 12523  0962  138B               	bcf	11,7	;volatile
 12524  0963                     l4850:
 12525                           
 12526                           ;memory.c: 190: NVMCON2 = 0x55;
 12527  0963  3055               	movlw	85
 12528  0964  009F               	movwf	31	;volsfr
 12529  0965                     l4852:
 12530                           
 12531                           ;memory.c: 191: NVMCON2 = 0xAA;
 12532  0965  30AA               	movlw	170
 12533  0966  009F               	movwf	31	;volsfr
 12534  0967                     l4854:
 12535                           
 12536                           ;memory.c: 192: NVMCON1bits.WR = 1;
 12537  0967  149E               	bsf	30,1	;volsfr
 12538  0968                     l1338:	
 12539                           ;memory.c: 195: {
 12540                           
 12541  0968  189E               	btfsc	30,1	;volsfr
 12542  0969  296B               	goto	u4471
 12543  096A  296C               	goto	u4470
 12544  096B                     u4471:
 12545  096B  2968               	goto	l1338
 12546  096C                     u4470:
 12547  096C                     l1340:
 12548                           
 12549                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 12550  096C  111E               	bcf	30,2	;volsfr
 12551  096D                     l4856:
 12552                           
 12553                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 12554  096D  0021               	movlb	1	; select bank1
 12555  096E  0C23               	rrf	DATAEE_WriteByte@GIEBitValue^(0+128),w
 12556  096F  1C03               	skipc
 12557  0970  138B               	bcf	11,7	;volatile
 12558  0971  1803               	skipnc
 12559  0972  178B               	bsf	11,7	;volatile
 12560  0973                     l1341:
 12561  0973  0008               	return
 12562  0974                     __end_of_DATAEE_WriteByte:
 12563                           
 12564                           	psect	text28
 12565  1770                     __ptext28:	
 12566 ;; *************** function _DATAEE_ReadByte *****************
 12567 ;; Defined at:
 12568 ;;		line 202 in file "mcc_generated_files/memory.c"
 12569 ;; Parameters:    Size  Location     Type
 12570 ;;  bAdd            2    0[BANK1 ] unsigned int 
 12571 ;; Auto vars:     Size  Location     Type
 12572 ;;		None
 12573 ;; Return value:  Size  Location     Type
 12574 ;;                  1    wreg      unsigned char 
 12575 ;; Registers used:
 12576 ;;		wreg, status,2
 12577 ;; Tracked objects:
 12578 ;;		On entry : 0/0
 12579 ;;		On exit  : 0/0
 12580 ;;		Unchanged: 0/0
 12581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12582 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12585 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12586 ;;Total ram usage:        2 bytes
 12587 ;; Hardware stack levels used:    1
 12588 ;; Hardware stack levels required when called:    7
 12589 ;; This function calls:
 12590 ;;		Nothing
 12591 ;; This function is called by:
 12592 ;;		_main
 12593 ;; This function uses a non-reentrant model
 12594 ;;
 12595                           
 12596                           
 12597                           ;psect for function _DATAEE_ReadByte
 12598  1770                     _DATAEE_ReadByte:
 12599  1770                     l4858:	
 12600                           ;incstack = 0
 12601                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 12602                           
 12603                           
 12604                           ;memory.c: 204: NVMADRH = ((bAdd >> 8) & 0xFF);
 12605  1770  0021               	movlb	1	; select bank1
 12606  1771  0821               	movf	(DATAEE_ReadByte@bAdd+1)^(0+128),w
 12607  1772  0030               	movlb	16	; select bank16
 12608  1773  009B               	movwf	27	;volatile
 12609  1774                     l4860:
 12610                           
 12611                           ;memory.c: 205: NVMADRL = (bAdd & 0xFF);
 12612  1774  0021               	movlb	1	; select bank1
 12613  1775  0820               	movf	DATAEE_ReadByte@bAdd^(0+128),w
 12614  1776  0030               	movlb	16	; select bank16
 12615  1777  009A               	movwf	26	;volatile
 12616  1778                     l4862:
 12617                           
 12618                           ;memory.c: 206: NVMCON1bits.NVMREGS = 1;
 12619  1778  171E               	bsf	30,6	;volsfr
 12620  1779                     l4864:
 12621                           
 12622                           ;memory.c: 207: NVMCON1bits.RD = 1;
 12623  1779  141E               	bsf	30,0	;volsfr
 12624  177A                     l4866:
 12625                           
 12626                           ;memory.c: 208: __nop();
 12627  177A  0000               	nop
 12628  177B                     l4868:
 12629                           
 12630                           ;memory.c: 209: __nop();
 12631  177B  0000               	nop
 12632  177C                     l4870:
 12633                           
 12634                           ;memory.c: 211: return (NVMDATL);
 12635  177C  0030               	movlb	16	; select bank16
 12636  177D  081C               	movf	28,w	;volatile
 12637  177E                     l1344:
 12638  177E  0008               	return
 12639  177F                     __end_of_DATAEE_ReadByte:
 12640                           
 12641                           	psect	intentry
 12642  0004                     __pintentry:	
 12643 ;; *************** function _INTERRUPT_InterruptManager *****************
 12644 ;; Defined at:
 12645 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12646 ;; Parameters:    Size  Location     Type
 12647 ;;		None
 12648 ;; Auto vars:     Size  Location     Type
 12649 ;;		None
 12650 ;; Return value:  Size  Location     Type
 12651 ;;                  1    wreg      void 
 12652 ;; Registers used:
 12653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12654 ;; Tracked objects:
 12655 ;;		On entry : 0/0
 12656 ;;		On exit  : 0/0
 12657 ;;		Unchanged: 0/0
 12658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12663 ;;Total ram usage:        0 bytes
 12664 ;; Hardware stack levels used:    1
 12665 ;; Hardware stack levels required when called:    6
 12666 ;; This function calls:
 12667 ;;		_TMR1_ISR
 12668 ;;		_TMR3_ISR
 12669 ;;		_TMR5_ISR
 12670 ;; This function is called by:
 12671 ;;		Interrupt level 1
 12672 ;; This function uses a non-reentrant model
 12673 ;;
 12674                           
 12675  0004                     _INTERRUPT_InterruptManager:
 12676                           
 12677                           ;incstack = 0
 12678  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 12679                           
 12680                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12681  0005  3180               	pagesel	$
 12682  0006                     i1l4958:
 12683                           
 12684                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
 12685  0006  1F0B               	btfss	11,6	;volatile
 12686  0007  2809               	goto	u470_21
 12687  0008  280A               	goto	u470_20
 12688  0009                     u470_21:
 12689  0009  283E               	goto	i1l356
 12690  000A                     u470_20:
 12691  000A                     i1l4960:
 12692                           
 12693                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE4bits.TMR5IE == 1 && PIR4bits
      +                          .TMR5IF == 1)
 12694  000A  002E               	movlb	14	; select bank14
 12695  000B  1E1A               	btfss	26,4	;volatile
 12696  000C  280E               	goto	u471_21
 12697  000D  280F               	goto	u471_20
 12698  000E                     u471_21:
 12699  000E  2817               	goto	i1l345
 12700  000F                     u471_20:
 12701  000F                     i1l4962:
 12702  000F  1E10               	btfss	16,4	;volatile
 12703  0010  2812               	goto	u472_21
 12704  0011  2813               	goto	u472_20
 12705  0012                     u472_21:
 12706  0012  2817               	goto	i1l345
 12707  0013                     u472_20:
 12708  0013                     i1l4964:
 12709                           
 12710                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: TMR5_ISR();
 12711  0013  3188  2039  3180   	fcall	_TMR5_ISR
 12712                           
 12713                           ;interrupt_manager.c: 60: }
 12714  0016  283E               	goto	i1l356
 12715  0017                     i1l345:
 12716                           
 12717                           ;interrupt_manager.c: 61: else if(PIE4bits.TMR3IE == 1 && PIR4bits.TMR3IF == 1)
 12718  0017  1D1A               	btfss	26,2	;volatile
 12719  0018  281A               	goto	u473_21
 12720  0019  281B               	goto	u473_20
 12721  001A                     u473_21:
 12722  001A  2823               	goto	i1l347
 12723  001B                     u473_20:
 12724  001B                     i1l4966:
 12725  001B  1D10               	btfss	16,2	;volatile
 12726  001C  281E               	goto	u474_21
 12727  001D  281F               	goto	u474_20
 12728  001E                     u474_21:
 12729  001E  2823               	goto	i1l347
 12730  001F                     u474_20:
 12731  001F                     i1l4968:
 12732                           
 12733                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR3_ISR();
 12734  001F  3188  2022  3180   	fcall	_TMR3_ISR
 12735                           
 12736                           ;interrupt_manager.c: 64: }
 12737  0022  283E               	goto	i1l356
 12738  0023                     i1l347:
 12739                           
 12740                           ;interrupt_manager.c: 65: else if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 12741  0023  1C1A               	btfss	26,0	;volatile
 12742  0024  2826               	goto	u475_21
 12743  0025  2827               	goto	u475_20
 12744  0026                     u475_21:
 12745  0026  282F               	goto	i1l349
 12746  0027                     u475_20:
 12747  0027                     i1l4970:
 12748  0027  1C10               	btfss	16,0	;volatile
 12749  0028  282A               	goto	u476_21
 12750  0029  282B               	goto	u476_20
 12751  002A                     u476_21:
 12752  002A  282F               	goto	i1l349
 12753  002B                     u476_20:
 12754  002B                     i1l4972:
 12755                           
 12756                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: TMR1_ISR();
 12757  002B  3188  200B  3180   	fcall	_TMR1_ISR
 12758                           
 12759                           ;interrupt_manager.c: 68: }
 12760  002E  283E               	goto	i1l356
 12761  002F                     i1l349:
 12762                           
 12763                           ;interrupt_manager.c: 69: else if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 12764  002F  1C99               	btfss	25,1	;volatile
 12765  0030  2832               	goto	u477_21
 12766  0031  2833               	goto	u477_20
 12767  0032                     u477_21:
 12768  0032  2838               	goto	i1l351
 12769  0033                     u477_20:
 12770  0033                     i1l4974:
 12771                           
 12772                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: i2c1_driver_busCollisionISR();
 12773  0033  1C8F               	btfss	15,1	;volatile
 12774  0034  2836               	goto	u478_21
 12775  0035  2837               	goto	u478_20
 12776  0036                     u478_21:
 12777  0036  2838               	goto	i1l351
 12778  0037                     u478_20:
 12779  0037  283E               	goto	i1l356
 12780  0038                     i1l351:
 12781                           
 12782                           ;interrupt_manager.c: 73: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 12783  0038  1C19               	btfss	25,0	;volatile
 12784  0039  283B               	goto	u479_21
 12785  003A  283C               	goto	u479_20
 12786  003B                     u479_21:
 12787  003B  283E               	goto	i1l350
 12788  003C                     u479_20:
 12789  003C                     i1l4978:
 12790                           
 12791                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: i2c1_driver_i2cISR();
 12792  003C  080F               	movf	15,w	;volatile
 12793  003D  283E               	goto	i1l356
 12794  003E                     i1l350:
 12795  003E                     i1l356:
 12796  003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 12797  003F  0009               	retfie
 12798  0040                     __end_of_INTERRUPT_InterruptManager:
 12799                           
 12800                           	psect	text30
 12801  0839                     __ptext30:	
 12802 ;; *************** function _TMR5_ISR *****************
 12803 ;; Defined at:
 12804 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 12805 ;; Parameters:    Size  Location     Type
 12806 ;;		None
 12807 ;; Auto vars:     Size  Location     Type
 12808 ;;		None
 12809 ;; Return value:  Size  Location     Type
 12810 ;;                  1    wreg      void 
 12811 ;; Registers used:
 12812 ;;		wreg, status,2, status,0, pclath, cstack
 12813 ;; Tracked objects:
 12814 ;;		On entry : 0/0
 12815 ;;		On exit  : 0/0
 12816 ;;		Unchanged: 0/0
 12817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12822 ;;Total ram usage:        0 bytes
 12823 ;; Hardware stack levels used:    1
 12824 ;; Hardware stack levels required when called:    3
 12825 ;; This function calls:
 12826 ;;		Absolute function
 12827 ;;		_TMR5_DefaultInterruptHandler
 12828 ;;		_TMR5_WriteTimer
 12829 ;;		_monitoring_ISR
 12830 ;; This function is called by:
 12831 ;;		_INTERRUPT_InterruptManager
 12832 ;; This function uses a non-reentrant model
 12833 ;;
 12834                           
 12835                           
 12836                           ;psect for function _TMR5_ISR
 12837  0839                     _TMR5_ISR:
 12838  0839                     i1l4708:	
 12839                           ;incstack = 0
 12840                           ; Regs used in _TMR5_ISR: [wreg+status,2+status,0+pclath+cstack]
 12841                           
 12842                           
 12843                           ;tmr5.c: 169: PIR4bits.TMR5IF = 0;
 12844  0839  002E               	movlb	14	; select bank14
 12845  083A  1210               	bcf	16,4	;volatile
 12846  083B                     i1l4710:
 12847                           
 12848                           ;tmr5.c: 170: TMR5_WriteTimer(timer5ReloadVal);
 12849  083B  0020               	movlb	0	; select bank0
 12850  083C  0869               	movf	_timer5ReloadVal+1,w	;volatile
 12851  083D  00F1               	movwf	TMR5_WriteTimer@timerVal+1
 12852  083E  0868               	movf	_timer5ReloadVal,w	;volatile
 12853  083F  00F0               	movwf	TMR5_WriteTimer@timerVal
 12854  0840  3197  27A1  3188   	fcall	_TMR5_WriteTimer
 12855  0843                     i1l4712:
 12856                           
 12857                           ;tmr5.c: 172: if(TMR5_InterruptHandler)
 12858  0843  0021               	movlb	1	; select bank1
 12859  0844  0831               	movf	_TMR5_InterruptHandler^(0+128),w
 12860  0845  0432               	iorwf	(_TMR5_InterruptHandler+1)^(0+128),w
 12861  0846  1903               	btfsc	3,2
 12862  0847  2849               	goto	u416_21
 12863  0848  284A               	goto	u416_20
 12864  0849                     u416_21:
 12865  0849  284F               	goto	i1l702
 12866  084A                     u416_20:
 12867  084A                     i1l4714:
 12868                           
 12869                           ;tmr5.c: 173: {;tmr5.c: 174: TMR5_InterruptHandler();
 12870  084A  0832               	movf	(_TMR5_InterruptHandler+1)^(0+128),w
 12871  084B  008A               	movwf	10
 12872  084C  0831               	movf	_TMR5_InterruptHandler^(0+128),w
 12873  084D  000A               	callw
 12874  084E  3188               	pagesel	$
 12875  084F                     i1l702:
 12876  084F  0008               	return
 12877  0850                     __end_of_TMR5_ISR:
 12878                           
 12879                           	psect	text31
 12880  07FE                     __ptext31:	
 12881 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 12882 ;; Defined at:
 12883 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 12884 ;; Parameters:    Size  Location     Type
 12885 ;;		None
 12886 ;; Auto vars:     Size  Location     Type
 12887 ;;		None
 12888 ;; Return value:  Size  Location     Type
 12889 ;;                  1    wreg      void 
 12890 ;; Registers used:
 12891 ;;		None
 12892 ;; Tracked objects:
 12893 ;;		On entry : 0/0
 12894 ;;		On exit  : 0/0
 12895 ;;		Unchanged: 0/0
 12896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12901 ;;Total ram usage:        0 bytes
 12902 ;; Hardware stack levels used:    1
 12903 ;; This function calls:
 12904 ;;		Nothing
 12905 ;; This function is called by:
 12906 ;;		_TMR5_Initialize
 12907 ;;		_TMR5_ISR
 12908 ;; This function uses a non-reentrant model
 12909 ;;
 12910                           
 12911                           
 12912                           ;psect for function _TMR5_DefaultInterruptHandler
 12913  07FE                     _TMR5_DefaultInterruptHandler:
 12914  07FE                     i1l708:	
 12915                           ;incstack = 0
 12916                           ; Regs used in _TMR5_DefaultInterruptHandler: []
 12917                           
 12918  07FE  0008               	return
 12919  07FF                     __end_of_TMR5_DefaultInterruptHandler:
 12920                           
 12921                           	psect	text32
 12922  060A                     __ptext32:	
 12923 ;; *************** function _monitoring_ISR *****************
 12924 ;; Defined at:
 12925 ;;		line 445 in file "main.c"
 12926 ;; Parameters:    Size  Location     Type
 12927 ;;		None
 12928 ;; Auto vars:     Size  Location     Type
 12929 ;;  aux3            1    3[BANK0 ] unsigned char 
 12930 ;;  aux2            1    2[BANK0 ] unsigned char 
 12931 ;;  aux1            1    1[BANK0 ] unsigned char 
 12932 ;;  a               1    0        unsigned char 
 12933 ;; Return value:  Size  Location     Type
 12934 ;;                  1    wreg      void 
 12935 ;; Registers used:
 12936 ;;		wreg, status,2, status,0, pclath, cstack
 12937 ;; Tracked objects:
 12938 ;;		On entry : 0/0
 12939 ;;		On exit  : 0/0
 12940 ;;		Unchanged: 0/0
 12941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12943 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12944 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12945 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12946 ;;Total ram usage:        7 bytes
 12947 ;; Hardware stack levels used:    1
 12948 ;; Hardware stack levels required when called:    2
 12949 ;; This function calls:
 12950 ;;		_ADCC_GetSingleConversion
 12951 ;;		___wmul
 12952 ;;		_tsttc
 12953 ;;		i1_DATAEE_ReadByte
 12954 ;;		i1_DATAEE_WriteByte
 12955 ;; This function is called by:
 12956 ;;		_main
 12957 ;;		_TMR5_ISR
 12958 ;; This function uses a non-reentrant model
 12959 ;;
 12960                           
 12961                           
 12962                           ;psect for function _monitoring_ISR
 12963  060A                     _monitoring_ISR:
 12964  060A                     i1l4620:	
 12965                           ;incstack = 0
 12966                           ; Regs used in _monitoring_ISR: [wreg+status,2+status,0+pclath+cstack]
 12967                           
 12968                           
 12969                           ;main.c: 446: temp = (uint8_t)tsttc();
 12970  060A  318E  26F3  3186   	fcall	_tsttc
 12971  060D  00FA               	movwf	??_monitoring_ISR
 12972  060E  087A               	movf	??_monitoring_ISR,w
 12973  060F  0020               	movlb	0	; select bank0
 12974  0610  00E3               	movwf	_temp
 12975                           
 12976                           ;main.c: 448: lumLevel = ADCC_GetSingleConversion(channel_ANA0) >> 13;
 12977  0611  3000               	movlw	0
 12978  0612  3197  27C4  3186   	fcall	_ADCC_GetSingleConversion
 12979  0615  0870               	movf	?_ADCC_GetSingleConversion,w
 12980  0616  00FA               	movwf	??_monitoring_ISR
 12981  0617  0871               	movf	?_ADCC_GetSingleConversion+1,w
 12982  0618  00FB               	movwf	??_monitoring_ISR+1
 12983  0619  300D               	movlw	13
 12984  061A                     u404_25:
 12985  061A  36FB               	lsrf	??_monitoring_ISR+1,f
 12986  061B  0CFA               	rrf	??_monitoring_ISR,f
 12987  061C  0B89               	decfsz	9,f
 12988  061D  2E1A               	goto	u404_25
 12989  061E  087A               	movf	??_monitoring_ISR,w
 12990  061F  00FC               	movwf	??_monitoring_ISR+2
 12991  0620  087C               	movf	??_monitoring_ISR+2,w
 12992  0621  0020               	movlb	0	; select bank0
 12993  0622  00E2               	movwf	_lumLevel
 12994  0623                     i1l4622:
 12995                           
 12996                           ;main.c: 450: if(prevTemp != temp || prevLumLevel != lumLevel){
 12997  0623  0863               	movf	_temp,w
 12998  0624  00FA               	movwf	??_monitoring_ISR
 12999  0625  01FB               	clrf	??_monitoring_ISR+1
 13000  0626  086F               	movf	_prevTemp+1,w
 13001  0627  067B               	xorwf	??_monitoring_ISR+1,w
 13002  0628  1D03               	skipz
 13003  0629  2E2C               	goto	u405_25
 13004  062A  086E               	movf	_prevTemp,w
 13005  062B  067A               	xorwf	??_monitoring_ISR,w
 13006  062C                     u405_25:
 13007  062C  1D03               	skipz
 13008  062D  2E2F               	goto	u405_21
 13009  062E  2E30               	goto	u405_20
 13010  062F                     u405_21:
 13011  062F  2E3D               	goto	i1l4626
 13012  0630                     u405_20:
 13013  0630                     i1l4624:
 13014  0630  0862               	movf	_lumLevel,w
 13015  0631  00FA               	movwf	??_monitoring_ISR
 13016  0632  01FB               	clrf	??_monitoring_ISR+1
 13017  0633  086D               	movf	_prevLumLevel+1,w
 13018  0634  067B               	xorwf	??_monitoring_ISR+1,w
 13019  0635  1D03               	skipz
 13020  0636  2E39               	goto	u406_25
 13021  0637  086C               	movf	_prevLumLevel,w
 13022  0638  067A               	xorwf	??_monitoring_ISR,w
 13023  0639                     u406_25:
 13024  0639  1903               	skipnz
 13025  063A  2E3C               	goto	u406_21
 13026  063B  2E3D               	goto	u406_20
 13027  063C                     u406_21:
 13028  063C  2F38               	goto	i1l4640
 13029  063D                     u406_20:
 13030  063D                     i1l4626:
 13031                           
 13032                           ;main.c: 452: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*0) , t.h);
 13033  063D  0864               	movf	_idx_RingBuffer,w
 13034  063E  00FA               	movwf	??_monitoring_ISR
 13035  063F  01FB               	clrf	??_monitoring_ISR+1
 13036  0640  087A               	movf	??_monitoring_ISR,w
 13037  0641  00F0               	movwf	___wmul@multiplier
 13038  0642  087B               	movf	??_monitoring_ISR+1,w
 13039  0643  00F1               	movwf	___wmul@multiplier+1
 13040  0644  3005               	movlw	5
 13041  0645  00F2               	movwf	___wmul@multiplicand
 13042  0646  3000               	movlw	0
 13043  0647  00F3               	movwf	___wmul@multiplicand+1
 13044  0648  3188  20D4  3186   	fcall	___wmul
 13045  064B  0870               	movf	?___wmul,w
 13046  064C  3E14               	addlw	20
 13047  064D  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13048  064E  3070               	movlw	112
 13049  064F  3D71               	addwfc	?___wmul+1,w
 13050  0650  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13051  0651  0020               	movlb	0	; select bank0
 13052  0652  0857               	movf	_t,w
 13053  0653  00FC               	movwf	??_monitoring_ISR+2
 13054  0654  087C               	movf	??_monitoring_ISR+2,w
 13055  0655  00F8               	movwf	i1DATAEE_WriteByte@bData
 13056  0656  3188  20B6  3186   	fcall	i1_DATAEE_WriteByte
 13057                           
 13058                           ;main.c: 453: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*1) , t.m);
 13059  0659  0020               	movlb	0	; select bank0
 13060  065A  0864               	movf	_idx_RingBuffer,w
 13061  065B  00FA               	movwf	??_monitoring_ISR
 13062  065C  01FB               	clrf	??_monitoring_ISR+1
 13063  065D  087A               	movf	??_monitoring_ISR,w
 13064  065E  00F0               	movwf	___wmul@multiplier
 13065  065F  087B               	movf	??_monitoring_ISR+1,w
 13066  0660  00F1               	movwf	___wmul@multiplier+1
 13067  0661  3005               	movlw	5
 13068  0662  00F2               	movwf	___wmul@multiplicand
 13069  0663  3000               	movlw	0
 13070  0664  00F3               	movwf	___wmul@multiplicand+1
 13071  0665  3188  20D4  3186   	fcall	___wmul
 13072  0668  0870               	movf	?___wmul,w
 13073  0669  3E1C               	addlw	28
 13074  066A  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13075  066B  3070               	movlw	112
 13076  066C  3D71               	addwfc	?___wmul+1,w
 13077  066D  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13078  066E  0020               	movlb	0	; select bank0
 13079  066F  0858               	movf	_t+1,w
 13080  0670  00FC               	movwf	??_monitoring_ISR+2
 13081  0671  087C               	movf	??_monitoring_ISR+2,w
 13082  0672  00F8               	movwf	i1DATAEE_WriteByte@bData
 13083  0673  3188  20B6  3186   	fcall	i1_DATAEE_WriteByte
 13084                           
 13085                           ;main.c: 454: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*2) , t.s);
 13086  0676  0020               	movlb	0	; select bank0
 13087  0677  0864               	movf	_idx_RingBuffer,w
 13088  0678  00FA               	movwf	??_monitoring_ISR
 13089  0679  01FB               	clrf	??_monitoring_ISR+1
 13090  067A  087A               	movf	??_monitoring_ISR,w
 13091  067B  00F0               	movwf	___wmul@multiplier
 13092  067C  087B               	movf	??_monitoring_ISR+1,w
 13093  067D  00F1               	movwf	___wmul@multiplier+1
 13094  067E  3005               	movlw	5
 13095  067F  00F2               	movwf	___wmul@multiplicand
 13096  0680  3000               	movlw	0
 13097  0681  00F3               	movwf	___wmul@multiplicand+1
 13098  0682  3188  20D4  3186   	fcall	___wmul
 13099  0685  0870               	movf	?___wmul,w
 13100  0686  3E24               	addlw	36
 13101  0687  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13102  0688  3070               	movlw	112
 13103  0689  3D71               	addwfc	?___wmul+1,w
 13104  068A  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13105  068B  0020               	movlb	0	; select bank0
 13106  068C  0859               	movf	_t+2,w
 13107  068D  00FC               	movwf	??_monitoring_ISR+2
 13108  068E  087C               	movf	??_monitoring_ISR+2,w
 13109  068F  00F8               	movwf	i1DATAEE_WriteByte@bData
 13110  0690  3188  20B6  3186   	fcall	i1_DATAEE_WriteByte
 13111                           
 13112                           ;main.c: 455: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*3) , temp);
 13113  0693  0020               	movlb	0	; select bank0
 13114  0694  0864               	movf	_idx_RingBuffer,w
 13115  0695  00FA               	movwf	??_monitoring_ISR
 13116  0696  01FB               	clrf	??_monitoring_ISR+1
 13117  0697  087A               	movf	??_monitoring_ISR,w
 13118  0698  00F0               	movwf	___wmul@multiplier
 13119  0699  087B               	movf	??_monitoring_ISR+1,w
 13120  069A  00F1               	movwf	___wmul@multiplier+1
 13121  069B  3005               	movlw	5
 13122  069C  00F2               	movwf	___wmul@multiplicand
 13123  069D  3000               	movlw	0
 13124  069E  00F3               	movwf	___wmul@multiplicand+1
 13125  069F  3188  20D4  3186   	fcall	___wmul
 13126  06A2  0870               	movf	?___wmul,w
 13127  06A3  3E2C               	addlw	44
 13128  06A4  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13129  06A5  3070               	movlw	112
 13130  06A6  3D71               	addwfc	?___wmul+1,w
 13131  06A7  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13132  06A8  0020               	movlb	0	; select bank0
 13133  06A9  0863               	movf	_temp,w
 13134  06AA  00FC               	movwf	??_monitoring_ISR+2
 13135  06AB  087C               	movf	??_monitoring_ISR+2,w
 13136  06AC  00F8               	movwf	i1DATAEE_WriteByte@bData
 13137  06AD  3188  20B6  3186   	fcall	i1_DATAEE_WriteByte
 13138                           
 13139                           ;main.c: 456: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*4) , lumLevel);
 13140  06B0  0020               	movlb	0	; select bank0
 13141  06B1  0864               	movf	_idx_RingBuffer,w
 13142  06B2  00FA               	movwf	??_monitoring_ISR
 13143  06B3  01FB               	clrf	??_monitoring_ISR+1
 13144  06B4  087A               	movf	??_monitoring_ISR,w
 13145  06B5  00F0               	movwf	___wmul@multiplier
 13146  06B6  087B               	movf	??_monitoring_ISR+1,w
 13147  06B7  00F1               	movwf	___wmul@multiplier+1
 13148  06B8  3005               	movlw	5
 13149  06B9  00F2               	movwf	___wmul@multiplicand
 13150  06BA  3000               	movlw	0
 13151  06BB  00F3               	movwf	___wmul@multiplicand+1
 13152  06BC  3188  20D4  3186   	fcall	___wmul
 13153  06BF  0870               	movf	?___wmul,w
 13154  06C0  3E34               	addlw	52
 13155  06C1  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13156  06C2  3070               	movlw	112
 13157  06C3  3D71               	addwfc	?___wmul+1,w
 13158  06C4  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13159  06C5  0020               	movlb	0	; select bank0
 13160  06C6  0862               	movf	_lumLevel,w
 13161  06C7  00FC               	movwf	??_monitoring_ISR+2
 13162  06C8  087C               	movf	??_monitoring_ISR+2,w
 13163  06C9  00F8               	movwf	i1DATAEE_WriteByte@bData
 13164  06CA  3188  20B6  3186   	fcall	i1_DATAEE_WriteByte
 13165                           
 13166                           ;main.c: 461: uint8_t aux1 = DATAEE_ReadByte((idx_RingBuffer * 0x5) + 0x7014 + (8*2));
 13167  06CD  0020               	movlb	0	; select bank0
 13168  06CE  0864               	movf	_idx_RingBuffer,w
 13169  06CF  00FA               	movwf	??_monitoring_ISR
 13170  06D0  01FB               	clrf	??_monitoring_ISR+1
 13171  06D1  087A               	movf	??_monitoring_ISR,w
 13172  06D2  00F0               	movwf	___wmul@multiplier
 13173  06D3  087B               	movf	??_monitoring_ISR+1,w
 13174  06D4  00F1               	movwf	___wmul@multiplier+1
 13175  06D5  3005               	movlw	5
 13176  06D6  00F2               	movwf	___wmul@multiplicand
 13177  06D7  3000               	movlw	0
 13178  06D8  00F3               	movwf	___wmul@multiplicand+1
 13179  06D9  3188  20D4  3186   	fcall	___wmul
 13180  06DC  0870               	movf	?___wmul,w
 13181  06DD  3E24               	addlw	36
 13182  06DE  00F6               	movwf	i1DATAEE_ReadByte@bAdd
 13183  06DF  3070               	movlw	112
 13184  06E0  3D71               	addwfc	?___wmul+1,w
 13185  06E1  00F7               	movwf	i1DATAEE_ReadByte@bAdd+1
 13186  06E2  3197  273D  3186   	fcall	i1_DATAEE_ReadByte
 13187  06E5  00FC               	movwf	??_monitoring_ISR+2
 13188  06E6  087C               	movf	??_monitoring_ISR+2,w
 13189  06E7  0020               	movlb	0	; select bank0
 13190  06E8  00A1               	movwf	monitoring_ISR@aux1
 13191                           
 13192                           ;main.c: 462: uint8_t aux2 = DATAEE_ReadByte((idx_RingBuffer * 0x5) + 0x7014 + (8*3));
 13193  06E9  0864               	movf	_idx_RingBuffer,w
 13194  06EA  00FA               	movwf	??_monitoring_ISR
 13195  06EB  01FB               	clrf	??_monitoring_ISR+1
 13196  06EC  087A               	movf	??_monitoring_ISR,w
 13197  06ED  00F0               	movwf	___wmul@multiplier
 13198  06EE  087B               	movf	??_monitoring_ISR+1,w
 13199  06EF  00F1               	movwf	___wmul@multiplier+1
 13200  06F0  3005               	movlw	5
 13201  06F1  00F2               	movwf	___wmul@multiplicand
 13202  06F2  3000               	movlw	0
 13203  06F3  00F3               	movwf	___wmul@multiplicand+1
 13204  06F4  3188  20D4  3186   	fcall	___wmul
 13205  06F7  0870               	movf	?___wmul,w
 13206  06F8  3E2C               	addlw	44
 13207  06F9  00F6               	movwf	i1DATAEE_ReadByte@bAdd
 13208  06FA  3070               	movlw	112
 13209  06FB  3D71               	addwfc	?___wmul+1,w
 13210  06FC  00F7               	movwf	i1DATAEE_ReadByte@bAdd+1
 13211  06FD  3197  273D  3186   	fcall	i1_DATAEE_ReadByte
 13212  0700  00FC               	movwf	??_monitoring_ISR+2
 13213  0701  087C               	movf	??_monitoring_ISR+2,w
 13214  0702  0020               	movlb	0	; select bank0
 13215  0703  00A2               	movwf	monitoring_ISR@aux2
 13216                           
 13217                           ;main.c: 463: uint8_t aux3 = DATAEE_ReadByte((idx_RingBuffer * 0x5) + 0x7014 + (8*4));
 13218  0704  0864               	movf	_idx_RingBuffer,w
 13219  0705  00FA               	movwf	??_monitoring_ISR
 13220  0706  01FB               	clrf	??_monitoring_ISR+1
 13221  0707  087A               	movf	??_monitoring_ISR,w
 13222  0708  00F0               	movwf	___wmul@multiplier
 13223  0709  087B               	movf	??_monitoring_ISR+1,w
 13224  070A  00F1               	movwf	___wmul@multiplier+1
 13225  070B  3005               	movlw	5
 13226  070C  00F2               	movwf	___wmul@multiplicand
 13227  070D  3000               	movlw	0
 13228  070E  00F3               	movwf	___wmul@multiplicand+1
 13229  070F  3188  20D4  3186   	fcall	___wmul
 13230  0712  0870               	movf	?___wmul,w
 13231  0713  3E34               	addlw	52
 13232  0714  00F6               	movwf	i1DATAEE_ReadByte@bAdd
 13233  0715  3070               	movlw	112
 13234  0716  3D71               	addwfc	?___wmul+1,w
 13235  0717  00F7               	movwf	i1DATAEE_ReadByte@bAdd+1
 13236  0718  3197  273D  3186   	fcall	i1_DATAEE_ReadByte
 13237  071B  00FC               	movwf	??_monitoring_ISR+2
 13238  071C  087C               	movf	??_monitoring_ISR+2,w
 13239  071D  0020               	movlb	0	; select bank0
 13240  071E  00A3               	movwf	monitoring_ISR@aux3
 13241  071F                     i1l4628:
 13242  071F                     i1l4630:
 13243                           
 13244                           ;main.c: 466: idx_RingBuffer++;
 13245  071F  3001               	movlw	1
 13246  0720  00FA               	movwf	??_monitoring_ISR
 13247  0721  087A               	movf	??_monitoring_ISR,w
 13248  0722  07E4               	addwf	_idx_RingBuffer,f
 13249  0723                     i1l4632:
 13250                           
 13251                           ;main.c: 467: if(idx_RingBuffer > NREG){
 13252  0723  0864               	movf	_idx_RingBuffer,w
 13253  0724  0267               	subwf	_NREG,w
 13254  0725  1803               	skipnc
 13255  0726  2F28               	goto	u407_21
 13256  0727  2F29               	goto	u407_20
 13257  0728                     u407_21:
 13258  0728  2F2A               	goto	i1l4636
 13259  0729                     u407_20:
 13260  0729                     i1l4634:
 13261                           
 13262                           ;main.c: 468: idx_RingBuffer = 0;
 13263  0729  01E4               	clrf	_idx_RingBuffer
 13264  072A                     i1l4636:
 13265                           
 13266                           ;main.c: 469: };main.c: 470: prevTemp = temp;
 13267  072A  0863               	movf	_temp,w
 13268  072B  00FA               	movwf	??_monitoring_ISR
 13269  072C  01FB               	clrf	??_monitoring_ISR+1
 13270  072D  087A               	movf	??_monitoring_ISR,w
 13271  072E  00EE               	movwf	_prevTemp
 13272  072F  087B               	movf	??_monitoring_ISR+1,w
 13273  0730  00EF               	movwf	_prevTemp+1
 13274  0731                     i1l4638:
 13275                           
 13276                           ;main.c: 471: prevLumLevel = lumLevel;
 13277  0731  0862               	movf	_lumLevel,w
 13278  0732  00FA               	movwf	??_monitoring_ISR
 13279  0733  01FB               	clrf	??_monitoring_ISR+1
 13280  0734  087A               	movf	??_monitoring_ISR,w
 13281  0735  00EC               	movwf	_prevLumLevel
 13282  0736  087B               	movf	??_monitoring_ISR+1,w
 13283  0737  00ED               	movwf	_prevLumLevel+1
 13284  0738                     i1l4640:
 13285                           
 13286                           ;main.c: 472: };main.c: 475: if(ALAF == 'A'){
 13287  0738  3041               	movlw	65
 13288  0739  0665               	xorwf	_ALAF,w
 13289  073A  1D03               	btfss	3,2
 13290  073B  2F3D               	goto	u408_21
 13291  073C  2F3E               	goto	u408_20
 13292  073D                     u408_21:
 13293  073D  2F7A               	goto	i1l1207
 13294  073E                     u408_20:
 13295  073E                     i1l4642:
 13296                           
 13297                           ;main.c: 477: if((lumAlarm.alarmLum > lumLevel) && (editingLumAlarm == 0)){
 13298  073E  0851               	movf	_lumAlarm,w
 13299  073F  0262               	subwf	_lumLevel,w
 13300  0740  1803               	skipnc
 13301  0741  2F43               	goto	u409_21
 13302  0742  2F44               	goto	u409_20
 13303  0743                     u409_21:
 13304  0743  2F5A               	goto	i1l4656
 13305  0744                     u409_20:
 13306  0744                     i1l4644:
 13307  0744  0860               	movf	_editingLumAlarm,w
 13308  0745  1D03               	btfss	3,2
 13309  0746  2F48               	goto	u410_21
 13310  0747  2F49               	goto	u410_20
 13311  0748                     u410_21:
 13312  0748  2F5A               	goto	i1l4656
 13313  0749                     u410_20:
 13314  0749                     i1l4646:
 13315                           
 13316                           ;main.c: 478: if(!lumAlarm.triggered){
 13317  0749  0853               	movf	_lumAlarm+2,w
 13318  074A  1D03               	btfss	3,2
 13319  074B  2F4D               	goto	u411_21
 13320  074C  2F4E               	goto	u411_20
 13321  074D                     u411_21:
 13322  074D  2F53               	goto	i1l4650
 13323  074E                     u411_20:
 13324  074E                     i1l4648:
 13325                           
 13326                           ;main.c: 479: alarmPWMStart.h = 0xff;
 13327  074E  30FF               	movlw	255
 13328  074F  00FA               	movwf	??_monitoring_ISR
 13329  0750  087A               	movf	??_monitoring_ISR,w
 13330  0751  0021               	movlb	1	; select bank1
 13331  0752  00C1               	movwf	_alarmPWMStart^(0+128)
 13332  0753                     i1l4650:
 13333                           
 13334                           ;main.c: 480: };main.c: 481: lumAlarm.triggered = 1;
 13335  0753  0020               	movlb	0	; select bank0
 13336  0754  01D3               	clrf	_lumAlarm+2
 13337  0755  0AD3               	incf	_lumAlarm+2,f
 13338  0756                     i1l4652:
 13339                           
 13340                           ;main.c: 483: lumAlarm.trigger = 1;
 13341  0756  01D2               	clrf	_lumAlarm+1
 13342  0757  0AD2               	incf	_lumAlarm+1,f
 13343  0758                     i1l4654:
 13344  0758  1616               	bsf	22,4	;volatile
 13345  0759  2F5C               	goto	i1l4660
 13346  075A                     i1l4656:
 13347                           
 13348                           ;main.c: 486: lumAlarm.triggered = 0;
 13349  075A  01D3               	clrf	_lumAlarm+2
 13350  075B                     i1l4658:
 13351  075B  1216               	bcf	22,4	;volatile
 13352  075C                     i1l4660:
 13353                           
 13354                           ;main.c: 488: };main.c: 491: if((tempAlarm.alarmTemp < temp) && (editingTempAlarm == 0))
      +                          {
 13355  075C  0863               	movf	_temp,w
 13356  075D  0254               	subwf	_tempAlarm,w
 13357  075E  1803               	skipnc
 13358  075F  2F61               	goto	u412_21
 13359  0760  2F62               	goto	u412_20
 13360  0761                     u412_21:
 13361  0761  2F78               	goto	i1l4674
 13362  0762                     u412_20:
 13363  0762                     i1l4662:
 13364  0762  0861               	movf	_editingTempAlarm,w
 13365  0763  1D03               	btfss	3,2
 13366  0764  2F66               	goto	u413_21
 13367  0765  2F67               	goto	u413_20
 13368  0766                     u413_21:
 13369  0766  2F78               	goto	i1l4674
 13370  0767                     u413_20:
 13371  0767                     i1l4664:
 13372                           
 13373                           ;main.c: 492: if(!tempAlarm.triggered){
 13374  0767  0856               	movf	_tempAlarm+2,w
 13375  0768  1D03               	btfss	3,2
 13376  0769  2F6B               	goto	u414_21
 13377  076A  2F6C               	goto	u414_20
 13378  076B                     u414_21:
 13379  076B  2F71               	goto	i1l4668
 13380  076C                     u414_20:
 13381  076C                     i1l4666:
 13382                           
 13383                           ;main.c: 493: alarmPWMStart.h = 0xff;
 13384  076C  30FF               	movlw	255
 13385  076D  00FA               	movwf	??_monitoring_ISR
 13386  076E  087A               	movf	??_monitoring_ISR,w
 13387  076F  0021               	movlb	1	; select bank1
 13388  0770  00C1               	movwf	_alarmPWMStart^(0+128)
 13389  0771                     i1l4668:
 13390                           
 13391                           ;main.c: 494: };main.c: 496: tempAlarm.triggered = 1;
 13392  0771  0020               	movlb	0	; select bank0
 13393  0772  01D6               	clrf	_tempAlarm+2
 13394  0773  0AD6               	incf	_tempAlarm+2,f
 13395  0774                     i1l4670:
 13396                           
 13397                           ;main.c: 498: tempAlarm.trigger = 1;
 13398  0774  01D5               	clrf	_tempAlarm+1
 13399  0775  0AD5               	incf	_tempAlarm+1,f
 13400  0776                     i1l4672:
 13401  0776  1696               	bsf	22,5	;volatile
 13402  0777  2F7A               	goto	i1l1207
 13403  0778                     i1l4674:
 13404                           
 13405                           ;main.c: 502: tempAlarm.triggered = 0;
 13406  0778  01D6               	clrf	_tempAlarm+2
 13407  0779                     i1l4676:
 13408  0779  1296               	bcf	22,5	;volatile
 13409  077A                     i1l1207:
 13410  077A  0008               	return
 13411  077B                     __end_of_monitoring_ISR:
 13412                           
 13413                           	psect	text33
 13414  173D                     __ptext33:	
 13415 ;; *************** function i1_DATAEE_ReadByte *****************
 13416 ;; Defined at:
 13417 ;;		line 202 in file "mcc_generated_files/memory.c"
 13418 ;; Parameters:    Size  Location     Type
 13419 ;;  bAdd            2    6[COMMON] unsigned int 
 13420 ;; Auto vars:     Size  Location     Type
 13421 ;;		None
 13422 ;; Return value:  Size  Location     Type
 13423 ;;                  1    wreg      unsigned char 
 13424 ;; Registers used:
 13425 ;;		wreg, status,2
 13426 ;; Tracked objects:
 13427 ;;		On entry : 0/0
 13428 ;;		On exit  : 0/0
 13429 ;;		Unchanged: 0/0
 13430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13434 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13435 ;;Total ram usage:        2 bytes
 13436 ;; Hardware stack levels used:    1
 13437 ;; This function calls:
 13438 ;;		Nothing
 13439 ;; This function is called by:
 13440 ;;		_monitoring_ISR
 13441 ;; This function uses a non-reentrant model
 13442 ;;
 13443                           
 13444                           
 13445                           ;psect for function i1_DATAEE_ReadByte
 13446  173D                     i1_DATAEE_ReadByte:
 13447  173D                     i1l4212:	
 13448                           ;incstack = 0
 13449                           ; Regs used in i1_DATAEE_ReadByte: [wreg+status,2]
 13450                           
 13451                           
 13452                           ;memory.c: 204: NVMADRH = ((bAdd >> 8) & 0xFF);
 13453  173D  0877               	movf	i1DATAEE_ReadByte@bAdd+1,w
 13454  173E  0030               	movlb	16	; select bank16
 13455  173F  009B               	movwf	27	;volatile
 13456  1740                     i1l4214:
 13457                           
 13458                           ;memory.c: 205: NVMADRL = (bAdd & 0xFF);
 13459  1740  0876               	movf	i1DATAEE_ReadByte@bAdd,w
 13460  1741  009A               	movwf	26	;volatile
 13461  1742                     i1l4216:
 13462                           
 13463                           ;memory.c: 206: NVMCON1bits.NVMREGS = 1;
 13464  1742  171E               	bsf	30,6	;volsfr
 13465  1743                     i1l4218:
 13466                           
 13467                           ;memory.c: 207: NVMCON1bits.RD = 1;
 13468  1743  141E               	bsf	30,0	;volsfr
 13469  1744                     i1l4220:
 13470                           
 13471                           ;memory.c: 208: __nop();
 13472  1744  0000               	nop
 13473  1745                     i1l4222:
 13474                           
 13475                           ;memory.c: 209: __nop();
 13476  1745  0000               	nop
 13477  1746                     i1l4224:
 13478                           
 13479                           ;memory.c: 211: return (NVMDATL);
 13480  1746  0030               	movlb	16	; select bank16
 13481  1747  081C               	movf	28,w	;volatile
 13482  1748                     i1l1344:
 13483  1748  0008               	return
 13484  1749                     __end_ofi1_DATAEE_ReadByte:
 13485                           
 13486                           	psect	text34
 13487  0EF3                     __ptext34:	
 13488 ;; *************** function _tsttc *****************
 13489 ;; Defined at:
 13490 ;;		line 76 in file "main.c"
 13491 ;; Parameters:    Size  Location     Type
 13492 ;;		None
 13493 ;; Auto vars:     Size  Location     Type
 13494 ;;  value           1    3[COMMON] unsigned char 
 13495 ;; Return value:  Size  Location     Type
 13496 ;;                  1    wreg      unsigned char 
 13497 ;; Registers used:
 13498 ;;		wreg, status,2, status,0, pclath, cstack
 13499 ;; Tracked objects:
 13500 ;;		On entry : 0/0
 13501 ;;		On exit  : 0/0
 13502 ;;		Unchanged: 0/0
 13503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13505 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13506 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13507 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13508 ;;Total ram usage:        2 bytes
 13509 ;; Hardware stack levels used:    1
 13510 ;; Hardware stack levels required when called:    1
 13511 ;; This function calls:
 13512 ;;		_ReadI2C
 13513 ;;		i1_WriteI2C
 13514 ;; This function is called by:
 13515 ;;		_monitoring_ISR
 13516 ;; This function uses a non-reentrant model
 13517 ;;
 13518                           
 13519                           
 13520                           ;psect for function _tsttc
 13521  0EF3                     _tsttc:
 13522  0EF3                     i1l858:	
 13523                           ;incstack = 0
 13524                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 13525                           ;main.c: 78: unsigned char value;;main.c: 79: do{
 13526                           
 13527  0EF3                     i1l4000:	
 13528                           ;main.c: 80: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13529                           
 13530  0EF3  0023               	movlb	3	; select bank3
 13531  0EF4  0C0F               	rrf	15,w	;volatile
 13532  0EF5  0C89               	rrf	9,f
 13533  0EF6  3901               	andlw	1
 13534  0EF7  00F2               	movwf	??_tsttc
 13535  0EF8  0811               	movf	17,w	;volatile
 13536  0EF9  391F               	andlw	31
 13537  0EFA  0472               	iorwf	??_tsttc,w
 13538  0EFB  1D03               	btfss	3,2
 13539  0EFC  2EFE               	goto	u303_21
 13540  0EFD  2EFF               	goto	u303_20
 13541  0EFE                     u303_21:
 13542  0EFE  2EF3               	goto	i1l4000
 13543  0EFF                     u303_20:
 13544  0EFF                     i1l861:
 13545                           
 13546                           ;main.c: 81: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 13547  0EFF  1411               	bsf	17,0	;volatile
 13548  0F00                     i1l862:
 13549  0F00  1811               	btfsc	17,0	;volatile
 13550  0F01  2F03               	goto	u304_21
 13551  0F02  2F04               	goto	u304_20
 13552  0F03                     u304_21:
 13553  0F03  2F00               	goto	i1l862
 13554  0F04                     u304_20:
 13555  0F04                     i1l4002:
 13556  0F04  0C0F               	rrf	15,w	;volatile
 13557  0F05  0C89               	rrf	9,f
 13558  0F06  3901               	andlw	1
 13559  0F07  00F2               	movwf	??_tsttc
 13560  0F08  0811               	movf	17,w	;volatile
 13561  0F09  391F               	andlw	31
 13562  0F0A  0472               	iorwf	??_tsttc,w
 13563  0F0B  1D03               	btfss	3,2
 13564  0F0C  2F0E               	goto	u305_21
 13565  0F0D  2F0F               	goto	u305_20
 13566  0F0E                     u305_21:
 13567  0F0E  2F04               	goto	i1l4002
 13568  0F0F                     u305_20:
 13569  0F0F                     i1l4004:
 13570                           
 13571                           ;main.c: 83: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13572  0F0F  309A               	movlw	154
 13573  0F10  318A  22FD  318E   	fcall	i1_WriteI2C
 13574  0F13                     i1l4006:
 13575  0F13  0023               	movlb	3	; select bank3
 13576  0F14  0C0F               	rrf	15,w	;volatile
 13577  0F15  0C89               	rrf	9,f
 13578  0F16  3901               	andlw	1
 13579  0F17  00F2               	movwf	??_tsttc
 13580  0F18  0811               	movf	17,w	;volatile
 13581  0F19  391F               	andlw	31
 13582  0F1A  0472               	iorwf	??_tsttc,w
 13583  0F1B  1D03               	btfss	3,2
 13584  0F1C  2F1E               	goto	u306_21
 13585  0F1D  2F1F               	goto	u306_20
 13586  0F1E                     u306_21:
 13587  0F1E  2F13               	goto	i1l4006
 13588  0F1F                     u306_20:
 13589  0F1F                     i1l4008:
 13590                           
 13591                           ;main.c: 84: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13592  0F1F  3001               	movlw	1
 13593  0F20  318A  22FD  318E   	fcall	i1_WriteI2C
 13594  0F23                     i1l4010:
 13595  0F23  0023               	movlb	3	; select bank3
 13596  0F24  0C0F               	rrf	15,w	;volatile
 13597  0F25  0C89               	rrf	9,f
 13598  0F26  3901               	andlw	1
 13599  0F27  00F2               	movwf	??_tsttc
 13600  0F28  0811               	movf	17,w	;volatile
 13601  0F29  391F               	andlw	31
 13602  0F2A  0472               	iorwf	??_tsttc,w
 13603  0F2B  1D03               	btfss	3,2
 13604  0F2C  2F2E               	goto	u307_21
 13605  0F2D  2F2F               	goto	u307_20
 13606  0F2E                     u307_21:
 13607  0F2E  2F23               	goto	i1l4010
 13608  0F2F                     u307_20:
 13609  0F2F                     i1l873:
 13610                           
 13611                           ;main.c: 85: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 13612  0F2F  1491               	bsf	17,1	;volatile
 13613  0F30                     i1l874:
 13614  0F30  1891               	btfsc	17,1	;volatile
 13615  0F31  2F33               	goto	u308_21
 13616  0F32  2F34               	goto	u308_20
 13617  0F33                     u308_21:
 13618  0F33  2F30               	goto	i1l874
 13619  0F34                     u308_20:
 13620  0F34                     i1l4012:
 13621  0F34  0C0F               	rrf	15,w	;volatile
 13622  0F35  0C89               	rrf	9,f
 13623  0F36  3901               	andlw	1
 13624  0F37  00F2               	movwf	??_tsttc
 13625  0F38  0811               	movf	17,w	;volatile
 13626  0F39  391F               	andlw	31
 13627  0F3A  0472               	iorwf	??_tsttc,w
 13628  0F3B  1D03               	btfss	3,2
 13629  0F3C  2F3E               	goto	u309_21
 13630  0F3D  2F3F               	goto	u309_20
 13631  0F3E                     u309_21:
 13632  0F3E  2F34               	goto	i1l4012
 13633  0F3F                     u309_20:
 13634  0F3F                     i1l4014:
 13635                           
 13636                           ;main.c: 86: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13637  0F3F  309B               	movlw	155
 13638  0F40  318A  22FD  318E   	fcall	i1_WriteI2C
 13639  0F43                     i1l4016:
 13640  0F43  0023               	movlb	3	; select bank3
 13641  0F44  0C0F               	rrf	15,w	;volatile
 13642  0F45  0C89               	rrf	9,f
 13643  0F46  3901               	andlw	1
 13644  0F47  00F2               	movwf	??_tsttc
 13645  0F48  0811               	movf	17,w	;volatile
 13646  0F49  391F               	andlw	31
 13647  0F4A  0472               	iorwf	??_tsttc,w
 13648  0F4B  1D03               	btfss	3,2
 13649  0F4C  2F4E               	goto	u310_21
 13650  0F4D  2F4F               	goto	u310_20
 13651  0F4E                     u310_21:
 13652  0F4E  2F43               	goto	i1l4016
 13653  0F4F                     u310_20:
 13654  0F4F                     i1l4018:
 13655                           
 13656                           ;main.c: 87: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13657  0F4F  3188  2080  318E   	fcall	_ReadI2C
 13658  0F52  00F2               	movwf	??_tsttc
 13659  0F53  0872               	movf	??_tsttc,w
 13660  0F54  00F3               	movwf	tsttc@value
 13661  0F55                     i1l4020:
 13662  0F55  0023               	movlb	3	; select bank3
 13663  0F56  0C0F               	rrf	15,w	;volatile
 13664  0F57  0C89               	rrf	9,f
 13665  0F58  3901               	andlw	1
 13666  0F59  00F2               	movwf	??_tsttc
 13667  0F5A  0811               	movf	17,w	;volatile
 13668  0F5B  391F               	andlw	31
 13669  0F5C  0472               	iorwf	??_tsttc,w
 13670  0F5D  1D03               	btfss	3,2
 13671  0F5E  2F60               	goto	u311_21
 13672  0F5F  2F61               	goto	u311_20
 13673  0F60                     u311_21:
 13674  0F60  2F55               	goto	i1l4020
 13675  0F61                     u311_20:
 13676  0F61                     i1l885:
 13677                           
 13678                           ;main.c: 88: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13679  0F61  1691               	bsf	17,5	;volatile
 13680  0F62  1611               	bsf	17,4	;volatile
 13681  0F63                     i1l886:
 13682  0F63  1A11               	btfsc	17,4	;volatile
 13683  0F64  2F66               	goto	u312_21
 13684  0F65  2F67               	goto	u312_20
 13685  0F66                     u312_21:
 13686  0F66  2F63               	goto	i1l886
 13687  0F67                     u312_20:
 13688  0F67                     i1l4022:
 13689  0F67  0C0F               	rrf	15,w	;volatile
 13690  0F68  0C89               	rrf	9,f
 13691  0F69  3901               	andlw	1
 13692  0F6A  00F2               	movwf	??_tsttc
 13693  0F6B  0811               	movf	17,w	;volatile
 13694  0F6C  391F               	andlw	31
 13695  0F6D  0472               	iorwf	??_tsttc,w
 13696  0F6E  1D03               	btfss	3,2
 13697  0F6F  2F71               	goto	u313_21
 13698  0F70  2F72               	goto	u313_20
 13699  0F71                     u313_21:
 13700  0F71  2F67               	goto	i1l4022
 13701  0F72                     u313_20:
 13702  0F72                     i1l891:
 13703                           
 13704                           ;main.c: 89: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 13705  0F72  1511               	bsf	17,2	;volatile
 13706  0F73                     i1l892:
 13707  0F73  1911               	btfsc	17,2	;volatile
 13708  0F74  2F76               	goto	u314_21
 13709  0F75  2F77               	goto	u314_20
 13710  0F76                     u314_21:
 13711  0F76  2F73               	goto	i1l892
 13712  0F77                     u314_20:
 13713  0F77                     i1l894:
 13714                           
 13715                           ;main.c: 90: } while (!(value & 0x40));
 13716  0F77  1F73               	btfss	tsttc@value,6
 13717  0F78  2F7A               	goto	u315_21
 13718  0F79  2F7B               	goto	u315_20
 13719  0F7A                     u315_21:
 13720  0F7A  2EF3               	goto	i1l858
 13721  0F7B                     u315_20:
 13722  0F7B                     i1l4024:
 13723  0F7B  0C0F               	rrf	15,w	;volatile
 13724  0F7C  0C89               	rrf	9,f
 13725  0F7D  3901               	andlw	1
 13726  0F7E  00F2               	movwf	??_tsttc
 13727  0F7F  0811               	movf	17,w	;volatile
 13728  0F80  391F               	andlw	31
 13729  0F81  0472               	iorwf	??_tsttc,w
 13730  0F82  1D03               	btfss	3,2
 13731  0F83  2F85               	goto	u316_21
 13732  0F84  2F86               	goto	u316_20
 13733  0F85                     u316_21:
 13734  0F85  2F7B               	goto	i1l4024
 13735  0F86                     u316_20:
 13736  0F86                     i1l898:
 13737                           
 13738                           ;main.c: 93: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 13739  0F86  1411               	bsf	17,0	;volatile
 13740  0F87                     i1l899:
 13741  0F87  1811               	btfsc	17,0	;volatile
 13742  0F88  2F8A               	goto	u317_21
 13743  0F89  2F8B               	goto	u317_20
 13744  0F8A                     u317_21:
 13745  0F8A  2F87               	goto	i1l899
 13746  0F8B                     u317_20:
 13747  0F8B                     i1l4026:
 13748  0F8B  0C0F               	rrf	15,w	;volatile
 13749  0F8C  0C89               	rrf	9,f
 13750  0F8D  3901               	andlw	1
 13751  0F8E  00F2               	movwf	??_tsttc
 13752  0F8F  0811               	movf	17,w	;volatile
 13753  0F90  391F               	andlw	31
 13754  0F91  0472               	iorwf	??_tsttc,w
 13755  0F92  1D03               	btfss	3,2
 13756  0F93  2F95               	goto	u318_21
 13757  0F94  2F96               	goto	u318_20
 13758  0F95                     u318_21:
 13759  0F95  2F8B               	goto	i1l4026
 13760  0F96                     u318_20:
 13761  0F96                     i1l4028:
 13762                           
 13763                           ;main.c: 94: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13764  0F96  309A               	movlw	154
 13765  0F97  318A  22FD  318E   	fcall	i1_WriteI2C
 13766  0F9A                     i1l4030:
 13767  0F9A  0023               	movlb	3	; select bank3
 13768  0F9B  0C0F               	rrf	15,w	;volatile
 13769  0F9C  0C89               	rrf	9,f
 13770  0F9D  3901               	andlw	1
 13771  0F9E  00F2               	movwf	??_tsttc
 13772  0F9F  0811               	movf	17,w	;volatile
 13773  0FA0  391F               	andlw	31
 13774  0FA1  0472               	iorwf	??_tsttc,w
 13775  0FA2  1D03               	btfss	3,2
 13776  0FA3  2FA5               	goto	u319_21
 13777  0FA4  2FA6               	goto	u319_20
 13778  0FA5                     u319_21:
 13779  0FA5  2F9A               	goto	i1l4030
 13780  0FA6                     u319_20:
 13781  0FA6                     i1l4032:
 13782                           
 13783                           ;main.c: 95: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13784  0FA6  3000               	movlw	0
 13785  0FA7  318A  22FD  318E   	fcall	i1_WriteI2C
 13786  0FAA                     i1l4034:
 13787  0FAA  0023               	movlb	3	; select bank3
 13788  0FAB  0C0F               	rrf	15,w	;volatile
 13789  0FAC  0C89               	rrf	9,f
 13790  0FAD  3901               	andlw	1
 13791  0FAE  00F2               	movwf	??_tsttc
 13792  0FAF  0811               	movf	17,w	;volatile
 13793  0FB0  391F               	andlw	31
 13794  0FB1  0472               	iorwf	??_tsttc,w
 13795  0FB2  1D03               	btfss	3,2
 13796  0FB3  2FB5               	goto	u320_21
 13797  0FB4  2FB6               	goto	u320_20
 13798  0FB5                     u320_21:
 13799  0FB5  2FAA               	goto	i1l4034
 13800  0FB6                     u320_20:
 13801  0FB6                     i1l910:
 13802                           
 13803                           ;main.c: 96: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 13804  0FB6  1491               	bsf	17,1	;volatile
 13805  0FB7                     i1l911:
 13806  0FB7  1891               	btfsc	17,1	;volatile
 13807  0FB8  2FBA               	goto	u321_21
 13808  0FB9  2FBB               	goto	u321_20
 13809  0FBA                     u321_21:
 13810  0FBA  2FB7               	goto	i1l911
 13811  0FBB                     u321_20:
 13812  0FBB                     i1l4036:
 13813  0FBB  0C0F               	rrf	15,w	;volatile
 13814  0FBC  0C89               	rrf	9,f
 13815  0FBD  3901               	andlw	1
 13816  0FBE  00F2               	movwf	??_tsttc
 13817  0FBF  0811               	movf	17,w	;volatile
 13818  0FC0  391F               	andlw	31
 13819  0FC1  0472               	iorwf	??_tsttc,w
 13820  0FC2  1D03               	btfss	3,2
 13821  0FC3  2FC5               	goto	u322_21
 13822  0FC4  2FC6               	goto	u322_20
 13823  0FC5                     u322_21:
 13824  0FC5  2FBB               	goto	i1l4036
 13825  0FC6                     u322_20:
 13826  0FC6                     i1l4038:
 13827                           
 13828                           ;main.c: 97: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13829  0FC6  309B               	movlw	155
 13830  0FC7  318A  22FD  318E   	fcall	i1_WriteI2C
 13831  0FCA                     i1l4040:
 13832  0FCA  0023               	movlb	3	; select bank3
 13833  0FCB  0C0F               	rrf	15,w	;volatile
 13834  0FCC  0C89               	rrf	9,f
 13835  0FCD  3901               	andlw	1
 13836  0FCE  00F2               	movwf	??_tsttc
 13837  0FCF  0811               	movf	17,w	;volatile
 13838  0FD0  391F               	andlw	31
 13839  0FD1  0472               	iorwf	??_tsttc,w
 13840  0FD2  1D03               	btfss	3,2
 13841  0FD3  2FD5               	goto	u323_21
 13842  0FD4  2FD6               	goto	u323_20
 13843  0FD5                     u323_21:
 13844  0FD5  2FCA               	goto	i1l4040
 13845  0FD6                     u323_20:
 13846  0FD6                     i1l4042:
 13847                           
 13848                           ;main.c: 98: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13849  0FD6  3188  2080  318E   	fcall	_ReadI2C
 13850  0FD9  00F2               	movwf	??_tsttc
 13851  0FDA  0872               	movf	??_tsttc,w
 13852  0FDB  00F3               	movwf	tsttc@value
 13853  0FDC                     i1l4044:
 13854  0FDC  0023               	movlb	3	; select bank3
 13855  0FDD  0C0F               	rrf	15,w	;volatile
 13856  0FDE  0C89               	rrf	9,f
 13857  0FDF  3901               	andlw	1
 13858  0FE0  00F2               	movwf	??_tsttc
 13859  0FE1  0811               	movf	17,w	;volatile
 13860  0FE2  391F               	andlw	31
 13861  0FE3  0472               	iorwf	??_tsttc,w
 13862  0FE4  1D03               	btfss	3,2
 13863  0FE5  2FE7               	goto	u324_21
 13864  0FE6  2FE8               	goto	u324_20
 13865  0FE7                     u324_21:
 13866  0FE7  2FDC               	goto	i1l4044
 13867  0FE8                     u324_20:
 13868  0FE8                     i1l922:
 13869                           
 13870                           ;main.c: 99: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13871  0FE8  1691               	bsf	17,5	;volatile
 13872  0FE9  1611               	bsf	17,4	;volatile
 13873  0FEA                     i1l923:
 13874  0FEA  1A11               	btfsc	17,4	;volatile
 13875  0FEB  2FED               	goto	u325_21
 13876  0FEC  2FEE               	goto	u325_20
 13877  0FED                     u325_21:
 13878  0FED  2FEA               	goto	i1l923
 13879  0FEE                     u325_20:
 13880  0FEE                     i1l4046:
 13881  0FEE  0C0F               	rrf	15,w	;volatile
 13882  0FEF  0C89               	rrf	9,f
 13883  0FF0  3901               	andlw	1
 13884  0FF1  00F2               	movwf	??_tsttc
 13885  0FF2  0811               	movf	17,w	;volatile
 13886  0FF3  391F               	andlw	31
 13887  0FF4  0472               	iorwf	??_tsttc,w
 13888  0FF5  1D03               	btfss	3,2
 13889  0FF6  2FF8               	goto	u326_21
 13890  0FF7  2FF9               	goto	u326_20
 13891  0FF8                     u326_21:
 13892  0FF8  2FEE               	goto	i1l4046
 13893  0FF9                     u326_20:
 13894  0FF9                     i1l928:
 13895                           
 13896                           ;main.c: 100: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 13897  0FF9  1511               	bsf	17,2	;volatile
 13898  0FFA                     i1l929:
 13899  0FFA  1911               	btfsc	17,2	;volatile
 13900  0FFB  2FFD               	goto	u327_21
 13901  0FFC  2FFE               	goto	u327_20
 13902  0FFD                     u327_21:
 13903  0FFD  2FFA               	goto	i1l929
 13904  0FFE                     u327_20:
 13905  0FFE                     i1l4048:
 13906                           
 13907                           ;main.c: 102: return value;
 13908  0FFE  0873               	movf	tsttc@value,w
 13909  0FFF                     i1l932:
 13910  0FFF  0008               	return
 13911  1000                     __end_of_tsttc:
 13912                           
 13913                           	psect	text35
 13914  0880                     __ptext35:	
 13915 ;; *************** function _ReadI2C *****************
 13916 ;; Defined at:
 13917 ;;		line 32 in file "I2C/i2c.c"
 13918 ;; Parameters:    Size  Location     Type
 13919 ;;		None
 13920 ;; Auto vars:     Size  Location     Type
 13921 ;;		None
 13922 ;; Return value:  Size  Location     Type
 13923 ;;                  1    wreg      unsigned char 
 13924 ;; Registers used:
 13925 ;;		wreg, status,2, status,0
 13926 ;; Tracked objects:
 13927 ;;		On entry : 0/0
 13928 ;;		On exit  : 0/0
 13929 ;;		Unchanged: 0/0
 13930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13934 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13935 ;;Total ram usage:        1 bytes
 13936 ;; Hardware stack levels used:    1
 13937 ;; This function calls:
 13938 ;;		Nothing
 13939 ;; This function is called by:
 13940 ;;		_tsttc
 13941 ;;		_LCDrecv
 13942 ;; This function uses a non-reentrant model
 13943 ;;
 13944                           
 13945                           
 13946                           ;psect for function _ReadI2C
 13947  0880                     _ReadI2C:
 13948  0880                     i1l3860:	
 13949                           ;incstack = 0
 13950                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 13951                           
 13952                           
 13953                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 13954  0880  300F               	movlw	15
 13955  0881  0023               	movlb	3	; select bank3
 13956  0882  0510               	andwf	16,w	;volatile
 13957  0883  00F0               	movwf	??_ReadI2C
 13958  0884  3008               	movlw	8
 13959  0885  0670               	xorwf	??_ReadI2C,w
 13960  0886  1903               	btfsc	3,2
 13961  0887  2889               	goto	u271_21
 13962  0888  288A               	goto	u271_20
 13963  0889                     u271_21:
 13964  0889  2893               	goto	i1l22
 13965  088A                     u271_20:
 13966  088A                     i1l3862:
 13967  088A  300F               	movlw	15
 13968  088B  0510               	andwf	16,w	;volatile
 13969  088C  00F0               	movwf	??_ReadI2C
 13970  088D  300B               	movlw	11
 13971  088E  0670               	xorwf	??_ReadI2C,w
 13972  088F  1D03               	btfss	3,2
 13973  0890  2892               	goto	u272_21
 13974  0891  2893               	goto	u272_20
 13975  0892                     u272_21:
 13976  0892  2894               	goto	i1l23
 13977  0893                     u272_20:
 13978  0893                     i1l22:
 13979                           
 13980                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
 13981  0893  1591               	bsf	17,3	;volatile
 13982  0894                     i1l23:
 13983  0894  1C0F               	btfss	15,0	;volatile
 13984  0895  2897               	goto	u273_21
 13985  0896  2898               	goto	u273_20
 13986  0897                     u273_21:
 13987  0897  2894               	goto	i1l23
 13988  0898                     u273_20:
 13989  0898                     i1l3864:
 13990                           
 13991                           ;i2c.c: 37: return ( SSP1BUF );
 13992  0898  080C               	movf	12,w	;volatile
 13993  0899                     i1l26:
 13994  0899  0008               	return
 13995  089A                     __end_of_ReadI2C:
 13996                           
 13997                           	psect	text36
 13998  17C4                     __ptext36:	
 13999 ;; *************** function _ADCC_GetSingleConversion *****************
 14000 ;; Defined at:
 14001 ;;		line 130 in file "mcc_generated_files/adcc.c"
 14002 ;; Parameters:    Size  Location     Type
 14003 ;;  channel         1    wreg     enum E12086
 14004 ;; Auto vars:     Size  Location     Type
 14005 ;;  channel         1    3[COMMON] enum E12086
 14006 ;; Return value:  Size  Location     Type
 14007 ;;                  2    0[COMMON] unsigned int 
 14008 ;; Registers used:
 14009 ;;		wreg
 14010 ;; Tracked objects:
 14011 ;;		On entry : 0/0
 14012 ;;		On exit  : 0/0
 14013 ;;		Unchanged: 0/0
 14014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14015 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14016 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14018 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14019 ;;Total ram usage:        4 bytes
 14020 ;; Hardware stack levels used:    1
 14021 ;; This function calls:
 14022 ;;		Nothing
 14023 ;; This function is called by:
 14024 ;;		_monitoring_ISR
 14025 ;; This function uses a non-reentrant model
 14026 ;;
 14027                           
 14028                           
 14029                           ;psect for function _ADCC_GetSingleConversion
 14030  17C4                     _ADCC_GetSingleConversion:
 14031                           
 14032                           ;incstack = 0
 14033                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 14034                           ;ADCC_GetSingleConversion@channel stored from wreg
 14035  17C4  00F3               	movwf	ADCC_GetSingleConversion@channel
 14036  17C5                     i1l3982:
 14037                           
 14038                           ;adcc.c: 133: ADPCH = channel;
 14039  17C5  0873               	movf	ADCC_GetSingleConversion@channel,w
 14040  17C6  0021               	movlb	1	; select bank1
 14041  17C7  009E               	movwf	30	;volatile
 14042  17C8                     i1l3984:
 14043                           
 14044                           ;adcc.c: 136: ADCON0bits.ADON = 1;
 14045  17C8  1793               	bsf	19,7	;volatile
 14046  17C9                     i1l3986:
 14047                           
 14048                           ;adcc.c: 139: ADCON0bits.ADCONT = 0;
 14049  17C9  1313               	bcf	19,6	;volatile
 14050  17CA                     i1l3988:
 14051                           
 14052                           ;adcc.c: 142: ADCON0bits.ADGO = 1;
 14053  17CA  1413               	bsf	19,0	;volatile
 14054  17CB                     i1l3990:
 14055                           
 14056                           ;adcc.c: 145: __nop();
 14057  17CB  0000               	nop
 14058  17CC                     i1l575:	
 14059                           ;adcc.c: 149: {
 14060                           
 14061  17CC  0021               	movlb	1	; select bank1
 14062  17CD  1813               	btfsc	19,0	;volatile
 14063  17CE  2FD0               	goto	u302_21
 14064  17CF  2FD1               	goto	u302_20
 14065  17D0                     u302_21:
 14066  17D0  2FCC               	goto	i1l575
 14067  17D1                     u302_20:
 14068  17D1                     i1l3992:
 14069                           
 14070                           ;adcc.c: 150: };adcc.c: 154: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14071  17D1  080D               	movf	13,w	;volatile
 14072  17D2  00F1               	movwf	?_ADCC_GetSingleConversion+1
 14073  17D3  080C               	movf	12,w	;volatile
 14074  17D4  00F0               	movwf	?_ADCC_GetSingleConversion
 14075  17D5                     i1l578:
 14076  17D5  0008               	return
 14077  17D6                     __end_of_ADCC_GetSingleConversion:
 14078                           
 14079                           	psect	text37
 14080  17A1                     __ptext37:	
 14081 ;; *************** function _TMR5_WriteTimer *****************
 14082 ;; Defined at:
 14083 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 14084 ;; Parameters:    Size  Location     Type
 14085 ;;  timerVal        2    0[COMMON] unsigned int 
 14086 ;; Auto vars:     Size  Location     Type
 14087 ;;		None
 14088 ;; Return value:  Size  Location     Type
 14089 ;;                  1    wreg      void 
 14090 ;; Registers used:
 14091 ;;		wreg, status,2
 14092 ;; Tracked objects:
 14093 ;;		On entry : 0/0
 14094 ;;		On exit  : 0/0
 14095 ;;		Unchanged: 0/0
 14096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14100 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14101 ;;Total ram usage:        2 bytes
 14102 ;; Hardware stack levels used:    1
 14103 ;; This function calls:
 14104 ;;		Nothing
 14105 ;; This function is called by:
 14106 ;;		_TMR5_ISR
 14107 ;;		_TMR5_Reload
 14108 ;; This function uses a non-reentrant model
 14109 ;;
 14110                           
 14111                           
 14112                           ;psect for function _TMR5_WriteTimer
 14113  17A1                     _TMR5_WriteTimer:
 14114  17A1                     i1l4384:	
 14115                           ;incstack = 0
 14116                           ; Regs used in _TMR5_WriteTimer: [wreg+status,2]
 14117                           
 14118                           
 14119                           ;tmr5.c: 130: if (T5CONbits.nT5SYNC == 1)
 14120  17A1  0024               	movlb	4	; select bank4
 14121  17A2  1D1A               	btfss	26,2	;volatile
 14122  17A3  2FA5               	goto	u353_21
 14123  17A4  2FA6               	goto	u353_20
 14124  17A5                     u353_21:
 14125  17A5  2FAD               	goto	i1l4394
 14126  17A6                     u353_20:
 14127  17A6                     i1l4386:
 14128                           
 14129                           ;tmr5.c: 131: {;tmr5.c: 133: T5CONbits.TMR5ON = 0;
 14130  17A6  101A               	bcf	26,0	;volatile
 14131  17A7                     i1l4388:
 14132                           
 14133                           ;tmr5.c: 136: TMR5H = (timerVal >> 8);
 14134  17A7  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 14135  17A8  0099               	movwf	25	;volatile
 14136  17A9                     i1l4390:
 14137                           
 14138                           ;tmr5.c: 137: TMR5L = timerVal;
 14139  17A9  0870               	movf	TMR5_WriteTimer@timerVal,w
 14140  17AA  0098               	movwf	24	;volatile
 14141  17AB                     i1l4392:
 14142                           
 14143                           ;tmr5.c: 140: T5CONbits.TMR5ON =1;
 14144  17AB  141A               	bsf	26,0	;volatile
 14145                           
 14146                           ;tmr5.c: 141: }
 14147  17AC  2FB1               	goto	i1l689
 14148  17AD                     i1l4394:
 14149                           
 14150                           ;tmr5.c: 142: else;tmr5.c: 143: {;tmr5.c: 145: TMR5H = (timerVal >> 8);
 14151  17AD  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 14152  17AE  0099               	movwf	25	;volatile
 14153  17AF                     i1l4396:
 14154                           
 14155                           ;tmr5.c: 146: TMR5L = timerVal;
 14156  17AF  0870               	movf	TMR5_WriteTimer@timerVal,w
 14157  17B0  0098               	movwf	24	;volatile
 14158  17B1                     i1l689:
 14159  17B1  0008               	return
 14160  17B2                     __end_of_TMR5_WriteTimer:
 14161                           
 14162                           	psect	text38
 14163  0822                     __ptext38:	
 14164 ;; *************** function _TMR3_ISR *****************
 14165 ;; Defined at:
 14166 ;;		line 164 in file "mcc_generated_files/tmr3.c"
 14167 ;; Parameters:    Size  Location     Type
 14168 ;;		None
 14169 ;; Auto vars:     Size  Location     Type
 14170 ;;		None
 14171 ;; Return value:  Size  Location     Type
 14172 ;;                  1    wreg      void 
 14173 ;; Registers used:
 14174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14175 ;; Tracked objects:
 14176 ;;		On entry : 0/0
 14177 ;;		On exit  : 0/0
 14178 ;;		Unchanged: 0/0
 14179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14184 ;;Total ram usage:        0 bytes
 14185 ;; Hardware stack levels used:    1
 14186 ;; Hardware stack levels required when called:    5
 14187 ;; This function calls:
 14188 ;;		Absolute function
 14189 ;;		_TMR3_DefaultInterruptHandler
 14190 ;;		_TMR3_WriteTimer
 14191 ;;		_menuLCD_ISR
 14192 ;; This function is called by:
 14193 ;;		_INTERRUPT_InterruptManager
 14194 ;; This function uses a non-reentrant model
 14195 ;;
 14196                           
 14197                           
 14198                           ;psect for function _TMR3_ISR
 14199  0822                     _TMR3_ISR:
 14200  0822                     i1l4716:	
 14201                           ;incstack = 0
 14202                           ; Regs used in _TMR3_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14203                           
 14204                           
 14205                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
 14206  0822  002E               	movlb	14	; select bank14
 14207  0823  1110               	bcf	16,2	;volatile
 14208  0824                     i1l4718:
 14209                           
 14210                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
 14211  0824  0020               	movlb	0	; select bank0
 14212  0825  086B               	movf	_timer3ReloadVal+1,w	;volatile
 14213  0826  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 14214  0827  086A               	movf	_timer3ReloadVal,w	;volatile
 14215  0828  00F0               	movwf	TMR3_WriteTimer@timerVal
 14216  0829  3197  2790  3188   	fcall	_TMR3_WriteTimer
 14217  082C                     i1l4720:
 14218                           
 14219                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
 14220  082C  0021               	movlb	1	; select bank1
 14221  082D  0833               	movf	_TMR3_InterruptHandler^(0+128),w
 14222  082E  0434               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 14223  082F  1903               	btfsc	3,2
 14224  0830  2832               	goto	u417_21
 14225  0831  2833               	goto	u417_20
 14226  0832                     u417_21:
 14227  0832  2838               	goto	i1l478
 14228  0833                     u417_20:
 14229  0833                     i1l4722:
 14230                           
 14231                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
 14232  0833  0834               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 14233  0834  008A               	movwf	10
 14234  0835  0833               	movf	_TMR3_InterruptHandler^(0+128),w
 14235  0836  000A               	callw
 14236  0837  3188               	pagesel	$
 14237  0838                     i1l478:
 14238  0838  0008               	return
 14239  0839                     __end_of_TMR3_ISR:
 14240                           
 14241                           	psect	text39
 14242  07FF                     __ptext39:	
 14243 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 14244 ;; Defined at:
 14245 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 14246 ;; Parameters:    Size  Location     Type
 14247 ;;		None
 14248 ;; Auto vars:     Size  Location     Type
 14249 ;;		None
 14250 ;; Return value:  Size  Location     Type
 14251 ;;                  1    wreg      void 
 14252 ;; Registers used:
 14253 ;;		None
 14254 ;; Tracked objects:
 14255 ;;		On entry : 0/0
 14256 ;;		On exit  : 0/0
 14257 ;;		Unchanged: 0/0
 14258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14263 ;;Total ram usage:        0 bytes
 14264 ;; Hardware stack levels used:    1
 14265 ;; This function calls:
 14266 ;;		Nothing
 14267 ;; This function is called by:
 14268 ;;		_TMR3_Initialize
 14269 ;;		_TMR3_ISR
 14270 ;; This function uses a non-reentrant model
 14271 ;;
 14272                           
 14273                           
 14274                           ;psect for function _TMR3_DefaultInterruptHandler
 14275  07FF                     _TMR3_DefaultInterruptHandler:
 14276  07FF                     i1l484:	
 14277                           ;incstack = 0
 14278                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 14279                           
 14280  07FF  0008               	return
 14281  0800                     __end_of_TMR3_DefaultInterruptHandler:
 14282                           
 14283                           	psect	text40
 14284  0291                     __ptext40:	
 14285 ;; *************** function _menuLCD_ISR *****************
 14286 ;; Defined at:
 14287 ;;		line 332 in file "main.c"
 14288 ;; Parameters:    Size  Location     Type
 14289 ;;		None
 14290 ;; Auto vars:     Size  Location     Type
 14291 ;;  diff            3   42[BANK0 ] struct Time
 14292 ;;  str             8   27[BANK0 ] unsigned char [8]
 14293 ;;  tt              4   35[BANK0 ] unsigned char [4]
 14294 ;;  l               3   39[BANK0 ] unsigned char [3]
 14295 ;; Return value:  Size  Location     Type
 14296 ;;                  1    wreg      void 
 14297 ;; Registers used:
 14298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14299 ;; Tracked objects:
 14300 ;;		On entry : 0/0
 14301 ;;		On exit  : 0/0
 14302 ;;		Unchanged: 0/0
 14303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14305 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14306 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14307 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14308 ;;Total ram usage:       24 bytes
 14309 ;; Hardware stack levels used:    1
 14310 ;; Hardware stack levels required when called:    4
 14311 ;; This function calls:
 14312 ;;		_LCDchar
 14313 ;;		_LCDcmd
 14314 ;;		_LCDstr
 14315 ;;		_PWM_Output_D4_Enable
 14316 ;;		_TMR2_StartTimer
 14317 ;;		_differenceBetweenTimePeriod
 14318 ;;		_sprintf
 14319 ;;		i1_PWM6_LoadDutyValue
 14320 ;;		i1_PWM_Output_D4_Disable
 14321 ;;		i1_TMR2_StopTimer
 14322 ;; This function is called by:
 14323 ;;		_main
 14324 ;;		_TMR3_ISR
 14325 ;; This function uses a non-reentrant model
 14326 ;;
 14327                           
 14328                           
 14329                           ;psect for function _menuLCD_ISR
 14330  0291                     _menuLCD_ISR:
 14331  0291                     i1l4510:	
 14332                           ;incstack = 0
 14333                           ; Regs used in _menuLCD_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14334                           
 14335                           
 14336                           ;main.c: 333: char str[8];;main.c: 334: if(editingClockAlarm){
 14337  0291  0020               	movlb	0	; select bank0
 14338  0292  085C               	movf	_editingClockAlarm,w
 14339  0293  045D               	iorwf	_editingClockAlarm+1,w
 14340  0294  1903               	btfsc	3,2
 14341  0295  2A97               	goto	u382_21
 14342  0296  2A98               	goto	u382_20
 14343  0297                     u382_21:
 14344  0297  2AB6               	goto	i1l4514
 14345  0298                     u382_20:
 14346  0298                     i1l4512:
 14347                           
 14348                           ;main.c: 335: sprintf(str, "%02d:%02d:%02d", clkAlarm.alarmVal.h,clkAlarm.alarmVal.m,clk
      +                          Alarm.alarmVal.s);
 14349  0298  3000               	movlw	low (STR_1| (0+32768))
 14350  0299  00A0               	movwf	sprintf@f
 14351  029A  3098               	movlw	high (STR_1| (0+32768))
 14352  029B  00A1               	movwf	sprintf@f+1
 14353  029C  084D               	movf	_clkAlarm,w
 14354  029D  00B5               	movwf	??_menuLCD_ISR
 14355  029E  01B6               	clrf	??_menuLCD_ISR+1
 14356  029F  0835               	movf	??_menuLCD_ISR,w
 14357  02A0  00A2               	movwf	?_sprintf+2
 14358  02A1  0836               	movf	??_menuLCD_ISR+1,w
 14359  02A2  00A3               	movwf	?_sprintf+3
 14360  02A3  084E               	movf	_clkAlarm+1,w
 14361  02A4  00B7               	movwf	??_menuLCD_ISR+2
 14362  02A5  01B8               	clrf	??_menuLCD_ISR+3
 14363  02A6  0837               	movf	??_menuLCD_ISR+2,w
 14364  02A7  00A4               	movwf	?_sprintf+4
 14365  02A8  0838               	movf	??_menuLCD_ISR+3,w
 14366  02A9  00A5               	movwf	?_sprintf+5
 14367  02AA  084F               	movf	_clkAlarm+2,w
 14368  02AB  00B9               	movwf	??_menuLCD_ISR+4
 14369  02AC  01BA               	clrf	??_menuLCD_ISR+5
 14370  02AD  0839               	movf	??_menuLCD_ISR+4,w
 14371  02AE  00A6               	movwf	?_sprintf+6
 14372  02AF  083A               	movf	??_menuLCD_ISR+5,w
 14373  02B0  00A7               	movwf	?_sprintf+7
 14374  02B1  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 14375  02B2  3184  246D  3182   	fcall	_sprintf
 14376                           
 14377                           ;main.c: 336: } else {
 14378  02B5  2AD3               	goto	i1l4516
 14379  02B6                     i1l4514:
 14380                           
 14381                           ;main.c: 337: sprintf(str, "%02d:%02d:%02d", t.h,t.m,t.s);
 14382  02B6  3000               	movlw	low (STR_1| (0+32768))
 14383  02B7  00A0               	movwf	sprintf@f
 14384  02B8  3098               	movlw	high (STR_1| (0+32768))
 14385  02B9  00A1               	movwf	sprintf@f+1
 14386  02BA  0857               	movf	_t,w
 14387  02BB  00B5               	movwf	??_menuLCD_ISR
 14388  02BC  01B6               	clrf	??_menuLCD_ISR+1
 14389  02BD  0835               	movf	??_menuLCD_ISR,w
 14390  02BE  00A2               	movwf	?_sprintf+2
 14391  02BF  0836               	movf	??_menuLCD_ISR+1,w
 14392  02C0  00A3               	movwf	?_sprintf+3
 14393  02C1  0858               	movf	_t+1,w
 14394  02C2  00B7               	movwf	??_menuLCD_ISR+2
 14395  02C3  01B8               	clrf	??_menuLCD_ISR+3
 14396  02C4  0837               	movf	??_menuLCD_ISR+2,w
 14397  02C5  00A4               	movwf	?_sprintf+4
 14398  02C6  0838               	movf	??_menuLCD_ISR+3,w
 14399  02C7  00A5               	movwf	?_sprintf+5
 14400  02C8  0859               	movf	_t+2,w
 14401  02C9  00B9               	movwf	??_menuLCD_ISR+4
 14402  02CA  01BA               	clrf	??_menuLCD_ISR+5
 14403  02CB  0839               	movf	??_menuLCD_ISR+4,w
 14404  02CC  00A6               	movwf	?_sprintf+6
 14405  02CD  083A               	movf	??_menuLCD_ISR+5,w
 14406  02CE  00A7               	movwf	?_sprintf+7
 14407  02CF  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 14408  02D0  3184  246D  3182   	fcall	_sprintf
 14409  02D3                     i1l4516:
 14410                           
 14411                           ;main.c: 338: };main.c: 339: LCDcmd(0x80);
 14412  02D3  3080               	movlw	128
 14413  02D4  3197  2726  3182   	fcall	_LCDcmd
 14414  02D7                     i1l4518:
 14415                           
 14416                           ;main.c: 340: LCDstr(str);
 14417  02D7  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 14418  02D8  3197  27D6  3182   	fcall	_LCDstr
 14419  02DB                     i1l4520:
 14420                           
 14421                           ;main.c: 343: if(ALAF == 'A'){
 14422  02DB  3041               	movlw	65
 14423  02DC  0020               	movlb	0	; select bank0
 14424  02DD  0665               	xorwf	_ALAF,w
 14425  02DE  1D03               	btfss	3,2
 14426  02DF  2AE1               	goto	u383_21
 14427  02E0  2AE2               	goto	u383_20
 14428  02E1                     u383_21:
 14429  02E1  2BBB               	goto	i1l4574
 14430  02E2                     u383_20:
 14431  02E2                     i1l4522:
 14432                           
 14433                           ;main.c: 344: LCDcmd(0x8F);
 14434  02E2  308F               	movlw	143
 14435  02E3  3197  2726  3182   	fcall	_LCDcmd
 14436                           
 14437                           ;main.c: 345: LCDchar(ALAF);
 14438  02E6  0020               	movlb	0	; select bank0
 14439  02E7  0865               	movf	_ALAF,w
 14440  02E8  3197  272D  3182   	fcall	_LCDchar
 14441  02EB                     i1l4524:
 14442                           
 14443                           ;main.c: 348: if(clkAlarm.trigger == 1){
 14444  02EB  0020               	movlb	0	; select bank0
 14445  02EC  0350               	decf	_clkAlarm+3,w
 14446  02ED  1D03               	btfss	3,2
 14447  02EE  2AF0               	goto	u384_21
 14448  02EF  2AF1               	goto	u384_20
 14449  02F0                     u384_21:
 14450  02F0  2AFA               	goto	i1l4528
 14451  02F1                     u384_20:
 14452  02F1                     i1l4526:
 14453                           
 14454                           ;main.c: 349: LCDcmd(0x8B);
 14455  02F1  308B               	movlw	139
 14456  02F2  3197  2726  3182   	fcall	_LCDcmd
 14457                           
 14458                           ;main.c: 350: LCDchar('C');
 14459  02F5  3043               	movlw	67
 14460  02F6  3197  272D  3182   	fcall	_LCDchar
 14461                           
 14462                           ;main.c: 351: } else{
 14463  02F9  2B02               	goto	i1l4530
 14464  02FA                     i1l4528:
 14465                           
 14466                           ;main.c: 352: LCDcmd(0x8B);
 14467  02FA  308B               	movlw	139
 14468  02FB  3197  2726  3182   	fcall	_LCDcmd
 14469                           
 14470                           ;main.c: 353: LCDchar(' ');
 14471  02FE  3020               	movlw	32
 14472  02FF  3197  272D  3182   	fcall	_LCDchar
 14473  0302                     i1l4530:
 14474                           
 14475                           ;main.c: 354: };main.c: 357: if(tempAlarm.trigger == 1){
 14476  0302  0020               	movlb	0	; select bank0
 14477  0303  0355               	decf	_tempAlarm+1,w
 14478  0304  1D03               	btfss	3,2
 14479  0305  2B07               	goto	u385_21
 14480  0306  2B08               	goto	u385_20
 14481  0307                     u385_21:
 14482  0307  2B11               	goto	i1l4534
 14483  0308                     u385_20:
 14484  0308                     i1l4532:
 14485                           
 14486                           ;main.c: 358: LCDcmd(0x8C);
 14487  0308  308C               	movlw	140
 14488  0309  3197  2726  3182   	fcall	_LCDcmd
 14489                           
 14490                           ;main.c: 359: LCDchar('T');
 14491  030C  3054               	movlw	84
 14492  030D  3197  272D  3182   	fcall	_LCDchar
 14493                           
 14494                           ;main.c: 360: } else{
 14495  0310  2B19               	goto	i1l4536
 14496  0311                     i1l4534:
 14497                           
 14498                           ;main.c: 361: LCDcmd(0x8C);
 14499  0311  308C               	movlw	140
 14500  0312  3197  2726  3182   	fcall	_LCDcmd
 14501                           
 14502                           ;main.c: 362: LCDchar(' ');
 14503  0315  3020               	movlw	32
 14504  0316  3197  272D  3182   	fcall	_LCDchar
 14505  0319                     i1l4536:
 14506                           
 14507                           ;main.c: 363: };main.c: 366: if(lumAlarm.trigger == 1){
 14508  0319  0020               	movlb	0	; select bank0
 14509  031A  0352               	decf	_lumAlarm+1,w
 14510  031B  1D03               	btfss	3,2
 14511  031C  2B1E               	goto	u386_21
 14512  031D  2B1F               	goto	u386_20
 14513  031E                     u386_21:
 14514  031E  2B28               	goto	i1l4540
 14515  031F                     u386_20:
 14516  031F                     i1l4538:
 14517                           
 14518                           ;main.c: 367: LCDcmd(0x8D);
 14519  031F  308D               	movlw	141
 14520  0320  3197  2726  3182   	fcall	_LCDcmd
 14521                           
 14522                           ;main.c: 368: LCDchar('L');
 14523  0323  304C               	movlw	76
 14524  0324  3197  272D  3182   	fcall	_LCDchar
 14525                           
 14526                           ;main.c: 369: } else{
 14527  0327  2B30               	goto	i1l4542
 14528  0328                     i1l4540:
 14529                           
 14530                           ;main.c: 370: LCDcmd(0x8D);
 14531  0328  308D               	movlw	141
 14532  0329  3197  2726  3182   	fcall	_LCDcmd
 14533                           
 14534                           ;main.c: 371: LCDchar(' ');
 14535  032C  3020               	movlw	32
 14536  032D  3197  272D  3182   	fcall	_LCDchar
 14537  0330                     i1l4542:
 14538                           
 14539                           ;main.c: 372: };main.c: 373: if(clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigge
      +                          r){
 14540  0330  0020               	movlb	0	; select bank0
 14541  0331  0850               	movf	_clkAlarm+3,w
 14542  0332  1D03               	btfss	3,2
 14543  0333  2B35               	goto	u387_21
 14544  0334  2B36               	goto	u387_20
 14545  0335                     u387_21:
 14546  0335  2B40               	goto	i1l4548
 14547  0336                     u387_20:
 14548  0336                     i1l4544:
 14549  0336  0855               	movf	_tempAlarm+1,w
 14550  0337  1D03               	btfss	3,2
 14551  0338  2B3A               	goto	u388_21
 14552  0339  2B3B               	goto	u388_20
 14553  033A                     u388_21:
 14554  033A  2B40               	goto	i1l4548
 14555  033B                     u388_20:
 14556  033B                     i1l4546:
 14557  033B  0852               	movf	_lumAlarm+1,w
 14558  033C  1903               	btfsc	3,2
 14559  033D  2B3F               	goto	u389_21
 14560  033E  2B40               	goto	u389_20
 14561  033F                     u389_21:
 14562  033F  2BC4               	goto	i1l1164
 14563  0340                     u389_20:
 14564  0340                     i1l4548:
 14565                           
 14566                           ;main.c: 374: if(alarmPWMStart.h == 0xff){
 14567  0340  0021               	movlb	1	; select bank1
 14568  0341  0A41               	incf	_alarmPWMStart^(0+128),w
 14569  0342  1D03               	btfss	3,2
 14570  0343  2B45               	goto	u390_21
 14571  0344  2B46               	goto	u390_20
 14572  0345                     u390_21:
 14573  0345  2B58               	goto	i1l1155
 14574  0346                     u390_20:
 14575  0346                     i1l4550:
 14576                           
 14577                           ;main.c: 375: alarmPWMStart.h = t.h;
 14578  0346  0020               	movlb	0	; select bank0
 14579  0347  0857               	movf	_t,w
 14580  0348  00B5               	movwf	??_menuLCD_ISR
 14581  0349  0835               	movf	??_menuLCD_ISR,w
 14582  034A  0021               	movlb	1	; select bank1
 14583  034B  00C1               	movwf	_alarmPWMStart^(0+128)
 14584                           
 14585                           ;main.c: 376: alarmPWMStart.m = t.m;
 14586  034C  0020               	movlb	0	; select bank0
 14587  034D  0858               	movf	_t+1,w
 14588  034E  00B5               	movwf	??_menuLCD_ISR
 14589  034F  0835               	movf	??_menuLCD_ISR,w
 14590  0350  0021               	movlb	1	; select bank1
 14591  0351  00C2               	movwf	(_alarmPWMStart^(0+128)+1)
 14592                           
 14593                           ;main.c: 377: alarmPWMStart.s = t.s;
 14594  0352  0020               	movlb	0	; select bank0
 14595  0353  0859               	movf	_t+2,w
 14596  0354  00B5               	movwf	??_menuLCD_ISR
 14597  0355  0835               	movf	??_menuLCD_ISR,w
 14598  0356  0021               	movlb	1	; select bank1
 14599  0357  00C3               	movwf	(_alarmPWMStart^(0+128)+2)
 14600  0358                     i1l1155:
 14601                           
 14602                           ;main.c: 378: };main.c: 379: struct Time diff = {0,0,0};
 14603  0358  0839               	movf	menuLCD_ISR@F12812^(0+128),w
 14604  0359  0020               	movlb	0	; select bank0
 14605  035A  00CA               	movwf	menuLCD_ISR@diff
 14606  035B  0021               	movlb	1	; select bank1
 14607  035C  083A               	movf	(menuLCD_ISR@F12812+1)^(0+128),w
 14608  035D  0020               	movlb	0	; select bank0
 14609  035E  00CB               	movwf	menuLCD_ISR@diff+1
 14610  035F  0021               	movlb	1	; select bank1
 14611  0360  083B               	movf	(menuLCD_ISR@F12812+2)^(0+128),w
 14612  0361  0020               	movlb	0	; select bank0
 14613  0362  00CC               	movwf	menuLCD_ISR@diff+2
 14614  0363                     i1l4552:
 14615                           
 14616                           ;main.c: 380: differenceBetweenTimePeriod( t, alarmPWMStart, &diff);
 14617  0363  0857               	movf	_t,w
 14618  0364  00F0               	movwf	differenceBetweenTimePeriod@start
 14619  0365  0858               	movf	_t+1,w
 14620  0366  00F1               	movwf	differenceBetweenTimePeriod@start+1
 14621  0367  0859               	movf	_t+2,w
 14622  0368  00F2               	movwf	differenceBetweenTimePeriod@start+2
 14623  0369  0021               	movlb	1	; select bank1
 14624  036A  0841               	movf	_alarmPWMStart^(0+128),w
 14625  036B  00F3               	movwf	differenceBetweenTimePeriod@stop
 14626  036C  0842               	movf	(_alarmPWMStart+1)^(0+128),w
 14627  036D  00F4               	movwf	differenceBetweenTimePeriod@stop+1
 14628  036E  0843               	movf	(_alarmPWMStart+2)^(0+128),w
 14629  036F  00F5               	movwf	differenceBetweenTimePeriod@stop+2
 14630  0370  304A               	movlw	(low (menuLCD_ISR@diff| 0))& (0+255)
 14631  0371  0020               	movlb	0	; select bank0
 14632  0372  00B5               	movwf	??_menuLCD_ISR
 14633  0373  0835               	movf	??_menuLCD_ISR,w
 14634  0374  00F6               	movwf	differenceBetweenTimePeriod@diff
 14635  0375  3189  2174  3182   	fcall	_differenceBetweenTimePeriod
 14636  0378                     i1l4554:
 14637                           
 14638                           ;main.c: 383: if(diff.s <= TALA){
 14639  0378  0020               	movlb	0	; select bank0
 14640  0379  084C               	movf	menuLCD_ISR@diff+2,w
 14641  037A  0266               	subwf	_TALA,w
 14642  037B  1C03               	skipc
 14643  037C  2B7E               	goto	u391_21
 14644  037D  2B7F               	goto	u391_20
 14645  037E                     u391_21:
 14646  037E  2BA9               	goto	i1l1158
 14647  037F                     u391_20:
 14648  037F                     i1l4556:
 14649                           
 14650                           ;main.c: 384: if(PWM6EN==0){
 14651  037F  0027               	movlb	7	; select bank7
 14652  0380  1B8E               	btfsc	14,7	;volatile
 14653  0381  2B83               	goto	u392_21
 14654  0382  2B84               	goto	u392_20
 14655  0383                     u392_21:
 14656  0383  2B8A               	goto	i1l4560
 14657  0384                     u392_20:
 14658  0384                     i1l4558:
 14659                           
 14660                           ;main.c: 385: TMR2_StartTimer();
 14661  0384  3196  26FE  3182   	fcall	_TMR2_StartTimer
 14662                           
 14663                           ;main.c: 386: PWM_Output_D4_Enable();
 14664  0387  3196  26E9  3182   	fcall	_PWM_Output_D4_Enable
 14665  038A                     i1l4560:
 14666                           
 14667                           ;main.c: 387: };main.c: 388: if(dimingLed <= 1023){
 14668  038A  0020               	movlb	0	; select bank0
 14669  038B  085F               	movf	_dimingLed+1,w
 14670  038C  3A80               	xorlw	128
 14671  038D  00B5               	movwf	??_menuLCD_ISR
 14672  038E  3084               	movlw	132
 14673  038F  0235               	subwf	??_menuLCD_ISR,w
 14674  0390  1D03               	skipz
 14675  0391  2B94               	goto	u393_25
 14676  0392  3000               	movlw	0
 14677  0393  025E               	subwf	_dimingLed,w
 14678  0394                     u393_25:
 14679  0394  1803               	skipnc
 14680  0395  2B97               	goto	u393_21
 14681  0396  2B98               	goto	u393_20
 14682  0397                     u393_21:
 14683  0397  2B9E               	goto	i1l4564
 14684  0398                     u393_20:
 14685  0398                     i1l4562:
 14686                           
 14687                           ;main.c: 389: dimingLed += 200;
 14688  0398  30C8               	movlw	200
 14689  0399  0020               	movlb	0	; select bank0
 14690  039A  07DE               	addwf	_dimingLed,f
 14691  039B  3000               	movlw	0
 14692  039C  3DDF               	addwfc	_dimingLed+1,f
 14693                           
 14694                           ;main.c: 390: } else{
 14695  039D  2BA1               	goto	i1l4566
 14696  039E                     i1l4564:
 14697                           
 14698                           ;main.c: 391: dimingLed = 0;
 14699  039E  0020               	movlb	0	; select bank0
 14700  039F  01DE               	clrf	_dimingLed
 14701  03A0  01DF               	clrf	_dimingLed+1
 14702  03A1                     i1l4566:
 14703                           
 14704                           ;main.c: 392: };main.c: 393: PWM6_LoadDutyValue(dimingLed);
 14705  03A1  085F               	movf	_dimingLed+1,w
 14706  03A2  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 14707  03A3  085E               	movf	_dimingLed,w
 14708  03A4  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 14709  03A5  3197  27EA  3182   	fcall	i1_PWM6_LoadDutyValue
 14710                           
 14711                           ;main.c: 394: } else if(PWM6EN==1){
 14712  03A8  2BC4               	goto	i1l1164
 14713  03A9                     i1l1158:
 14714  03A9  0027               	movlb	7	; select bank7
 14715  03AA  1F8E               	btfss	14,7	;volatile
 14716  03AB  2BAD               	goto	u394_21
 14717  03AC  2BAE               	goto	u394_20
 14718  03AD                     u394_21:
 14719  03AD  2BC4               	goto	i1l1164
 14720  03AE                     u394_20:
 14721  03AE                     i1l4568:
 14722                           
 14723                           ;main.c: 395: PWM6_LoadDutyValue(0);
 14724  03AE  3000               	movlw	0
 14725  03AF  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 14726  03B0  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 14727  03B1  3197  27EA  3182   	fcall	i1_PWM6_LoadDutyValue
 14728  03B4                     i1l4570:
 14729                           
 14730                           ;main.c: 396: TMR2_StopTimer();
 14731  03B4  3197  2702  3182   	fcall	i1_TMR2_StopTimer
 14732  03B7                     i1l4572:
 14733                           
 14734                           ;main.c: 397: PWM_Output_D4_Disable();
 14735  03B7  3196  26EF  3182   	fcall	i1_PWM_Output_D4_Disable
 14736  03BA  2BC4               	goto	i1l1164
 14737  03BB                     i1l4574:
 14738                           
 14739                           ;main.c: 401: LCDcmd(0x8F);
 14740  03BB  308F               	movlw	143
 14741  03BC  3197  2726  3182   	fcall	_LCDcmd
 14742                           
 14743                           ;main.c: 402: LCDchar(ALAF);
 14744  03BF  0020               	movlb	0	; select bank0
 14745  03C0  0865               	movf	_ALAF,w
 14746  03C1  3197  272D  3182   	fcall	_LCDchar
 14747  03C4                     i1l1164:
 14748                           
 14749                           ;main.c: 403: };main.c: 405: LCDcmd(0xc0);
 14750  03C4  30C0               	movlw	192
 14751  03C5  3197  2726  3182   	fcall	_LCDcmd
 14752  03C8                     i1l4576:
 14753                           
 14754                           ;main.c: 406: char tt[4];;main.c: 407: if(editingTempAlarm){
 14755  03C8  0020               	movlb	0	; select bank0
 14756  03C9  0861               	movf	_editingTempAlarm,w
 14757  03CA  1903               	btfsc	3,2
 14758  03CB  2BCD               	goto	u395_21
 14759  03CC  2BCE               	goto	u395_20
 14760  03CD                     u395_21:
 14761  03CD  2BDE               	goto	i1l4580
 14762  03CE                     u395_20:
 14763  03CE                     i1l4578:
 14764                           
 14765                           ;main.c: 408: sprintf(tt, "%02d C", tempAlarm.alarmTemp);
 14766  03CE  3019               	movlw	low (STR_3| (0+32768))
 14767  03CF  00A0               	movwf	sprintf@f
 14768  03D0  3098               	movlw	high (STR_3| (0+32768))
 14769  03D1  00A1               	movwf	sprintf@f+1
 14770  03D2  0854               	movf	_tempAlarm,w
 14771  03D3  00B5               	movwf	??_menuLCD_ISR
 14772  03D4  01B6               	clrf	??_menuLCD_ISR+1
 14773  03D5  0835               	movf	??_menuLCD_ISR,w
 14774  03D6  00A2               	movwf	?_sprintf+2
 14775  03D7  0836               	movf	??_menuLCD_ISR+1,w
 14776  03D8  00A3               	movwf	?_sprintf+3
 14777  03D9  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 14778  03DA  3184  246D  3182   	fcall	_sprintf
 14779                           
 14780                           ;main.c: 409: } else{
 14781  03DD  2BED               	goto	i1l4582
 14782  03DE                     i1l4580:
 14783                           
 14784                           ;main.c: 410: sprintf(tt, "%02d C", temp);
 14785  03DE  3019               	movlw	low (STR_3| (0+32768))
 14786  03DF  00A0               	movwf	sprintf@f
 14787  03E0  3098               	movlw	high (STR_3| (0+32768))
 14788  03E1  00A1               	movwf	sprintf@f+1
 14789  03E2  0863               	movf	_temp,w
 14790  03E3  00B5               	movwf	??_menuLCD_ISR
 14791  03E4  01B6               	clrf	??_menuLCD_ISR+1
 14792  03E5  0835               	movf	??_menuLCD_ISR,w
 14793  03E6  00A2               	movwf	?_sprintf+2
 14794  03E7  0836               	movf	??_menuLCD_ISR+1,w
 14795  03E8  00A3               	movwf	?_sprintf+3
 14796  03E9  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 14797  03EA  3184  246D  3182   	fcall	_sprintf
 14798  03ED                     i1l4582:
 14799                           
 14800                           ;main.c: 411: };main.c: 412: LCDstr(tt);
 14801  03ED  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 14802  03EE  3197  27D6  3182   	fcall	_LCDstr
 14803  03F1                     i1l4584:
 14804                           
 14805                           ;main.c: 414: LCDcmd(0xcd);
 14806  03F1  30CD               	movlw	205
 14807  03F2  3197  2726  3182   	fcall	_LCDcmd
 14808  03F5                     i1l4586:
 14809                           
 14810                           ;main.c: 415: char l[3];;main.c: 417: if(editingLumAlarm){
 14811  03F5  0020               	movlb	0	; select bank0
 14812  03F6  0860               	movf	_editingLumAlarm,w
 14813  03F7  1903               	btfsc	3,2
 14814  03F8  2BFA               	goto	u396_21
 14815  03F9  2BFB               	goto	u396_20
 14816  03FA                     u396_21:
 14817  03FA  2C0B               	goto	i1l4590
 14818  03FB                     u396_20:
 14819  03FB                     i1l4588:
 14820                           
 14821                           ;main.c: 418: sprintf(l, "L %d", lumAlarm.alarmLum);
 14822  03FB  3020               	movlw	low (STR_5| (0+32768))
 14823  03FC  00A0               	movwf	sprintf@f
 14824  03FD  3098               	movlw	high (STR_5| (0+32768))
 14825  03FE  00A1               	movwf	sprintf@f+1
 14826  03FF  0851               	movf	_lumAlarm,w
 14827  0400  00B5               	movwf	??_menuLCD_ISR
 14828  0401  01B6               	clrf	??_menuLCD_ISR+1
 14829  0402  0835               	movf	??_menuLCD_ISR,w
 14830  0403  00A2               	movwf	?_sprintf+2
 14831  0404  0836               	movf	??_menuLCD_ISR+1,w
 14832  0405  00A3               	movwf	?_sprintf+3
 14833  0406  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 14834  0407  3184  246D  3182   	fcall	_sprintf
 14835                           
 14836                           ;main.c: 419: } else{
 14837  040A  2C1A               	goto	i1l4592
 14838  040B                     i1l4590:
 14839                           
 14840                           ;main.c: 420: sprintf(l, "L %d", lumLevel);
 14841  040B  3020               	movlw	low (STR_5| (0+32768))
 14842  040C  00A0               	movwf	sprintf@f
 14843  040D  3098               	movlw	high (STR_5| (0+32768))
 14844  040E  00A1               	movwf	sprintf@f+1
 14845  040F  0862               	movf	_lumLevel,w
 14846  0410  00B5               	movwf	??_menuLCD_ISR
 14847  0411  01B6               	clrf	??_menuLCD_ISR+1
 14848  0412  0835               	movf	??_menuLCD_ISR,w
 14849  0413  00A2               	movwf	?_sprintf+2
 14850  0414  0836               	movf	??_menuLCD_ISR+1,w
 14851  0415  00A3               	movwf	?_sprintf+3
 14852  0416  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 14853  0417  3184  246D  3182   	fcall	_sprintf
 14854  041A                     i1l4592:
 14855                           
 14856                           ;main.c: 421: };main.c: 422: LCDstr(l);
 14857  041A  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 14858  041B  3197  27D6  3182   	fcall	_LCDstr
 14859  041E                     i1l4594:
 14860                           
 14861                           ;main.c: 424: if(mode == 1){
 14862  041E  0020               	movlb	0	; select bank0
 14863  041F  035A               	decf	_mode,w
 14864  0420  045B               	iorwf	_mode+1,w
 14865  0421  1D03               	btfss	3,2
 14866  0422  2C24               	goto	u397_21
 14867  0423  2C25               	goto	u397_20
 14868  0424                     u397_21:
 14869  0424  2C49               	goto	i1l4608
 14870  0425                     u397_20:
 14871  0425                     i1l4596:
 14872                           
 14873                           ;main.c: 425: if(editingClockAlarm == 1){
 14874  0425  035C               	decf	_editingClockAlarm,w
 14875  0426  045D               	iorwf	_editingClockAlarm+1,w
 14876  0427  1D03               	btfss	3,2
 14877  0428  2C2A               	goto	u398_21
 14878  0429  2C2B               	goto	u398_20
 14879  042A                     u398_21:
 14880  042A  2C30               	goto	i1l4600
 14881  042B                     u398_20:
 14882  042B                     i1l4598:
 14883                           
 14884                           ;main.c: 426: LCDcmd(0x81);
 14885  042B  3081               	movlw	129
 14886  042C  3197  2726  3182   	fcall	_LCDcmd
 14887                           
 14888                           ;main.c: 427: } else if(editingClockAlarm == 2){
 14889  042F  2C6C               	goto	i1l1181
 14890  0430                     i1l4600:
 14891  0430  3002               	movlw	2
 14892  0431  065C               	xorwf	_editingClockAlarm,w
 14893  0432  045D               	iorwf	_editingClockAlarm+1,w
 14894  0433  1D03               	btfss	3,2
 14895  0434  2C36               	goto	u399_21
 14896  0435  2C37               	goto	u399_20
 14897  0436                     u399_21:
 14898  0436  2C3C               	goto	i1l4604
 14899  0437                     u399_20:
 14900  0437                     i1l4602:
 14901                           
 14902                           ;main.c: 428: LCDcmd(0x84);
 14903  0437  3084               	movlw	132
 14904  0438  3197  2726  3182   	fcall	_LCDcmd
 14905                           
 14906                           ;main.c: 429: } else if(editingClockAlarm == 3){
 14907  043B  2C6C               	goto	i1l1181
 14908  043C                     i1l4604:
 14909  043C  3003               	movlw	3
 14910  043D  065C               	xorwf	_editingClockAlarm,w
 14911  043E  045D               	iorwf	_editingClockAlarm+1,w
 14912  043F  1D03               	btfss	3,2
 14913  0440  2C42               	goto	u400_21
 14914  0441  2C43               	goto	u400_20
 14915  0442                     u400_21:
 14916  0442  2C48               	goto	i1l1171
 14917  0443                     u400_20:
 14918  0443                     i1l4606:
 14919                           
 14920                           ;main.c: 430: LCDcmd(0x87);
 14921  0443  3087               	movlw	135
 14922  0444  3197  2726  3182   	fcall	_LCDcmd
 14923  0447  2C6C               	goto	i1l1181
 14924  0448                     i1l1171:
 14925                           
 14926                           ;main.c: 431: };main.c: 432: } else if(mode == 2){
 14927  0448  2C6C               	goto	i1l1181
 14928  0449                     i1l4608:
 14929  0449  3002               	movlw	2
 14930  044A  065A               	xorwf	_mode,w
 14931  044B  045B               	iorwf	_mode+1,w
 14932  044C  1D03               	btfss	3,2
 14933  044D  2C4F               	goto	u401_21
 14934  044E  2C50               	goto	u401_20
 14935  044F                     u401_21:
 14936  044F  2C55               	goto	i1l4612
 14937  0450                     u401_20:
 14938  0450                     i1l4610:
 14939                           
 14940                           ;main.c: 433: LCDcmd(0xc1);
 14941  0450  30C1               	movlw	193
 14942  0451  3197  2726  3182   	fcall	_LCDcmd
 14943                           
 14944                           ;main.c: 434: } else if(mode == 3){
 14945  0454  2C6C               	goto	i1l1181
 14946  0455                     i1l4612:
 14947  0455  3003               	movlw	3
 14948  0456  065A               	xorwf	_mode,w
 14949  0457  045B               	iorwf	_mode+1,w
 14950  0458  1D03               	btfss	3,2
 14951  0459  2C5B               	goto	u402_21
 14952  045A  2C5C               	goto	u402_20
 14953  045B                     u402_21:
 14954  045B  2C61               	goto	i1l4616
 14955  045C                     u402_20:
 14956  045C                     i1l4614:
 14957                           
 14958                           ;main.c: 435: LCDcmd(0xcf);
 14959  045C  30CF               	movlw	207
 14960  045D  3197  2726  3182   	fcall	_LCDcmd
 14961                           
 14962                           ;main.c: 436: } else if(mode == 4){
 14963  0460  2C6C               	goto	i1l1181
 14964  0461                     i1l4616:
 14965  0461  3004               	movlw	4
 14966  0462  065A               	xorwf	_mode,w
 14967  0463  045B               	iorwf	_mode+1,w
 14968  0464  1D03               	btfss	3,2
 14969  0465  2C67               	goto	u403_21
 14970  0466  2C68               	goto	u403_20
 14971  0467                     u403_21:
 14972  0467  2C6C               	goto	i1l1181
 14973  0468                     u403_20:
 14974  0468                     i1l4618:
 14975                           
 14976                           ;main.c: 437: LCDcmd(0x8f);
 14977  0468  308F               	movlw	143
 14978  0469  3197  2726  3182   	fcall	_LCDcmd
 14979  046C                     i1l1181:
 14980  046C  0008               	return
 14981  046D                     __end_of_menuLCD_ISR:
 14982                           
 14983                           	psect	text41
 14984  1702                     __ptext41:	
 14985 ;; *************** function i1_TMR2_StopTimer *****************
 14986 ;; Defined at:
 14987 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 14988 ;; Parameters:    Size  Location     Type
 14989 ;;		None
 14990 ;; Auto vars:     Size  Location     Type
 14991 ;;		None
 14992 ;; Return value:  Size  Location     Type
 14993 ;;                  1    wreg      void 
 14994 ;; Registers used:
 14995 ;;		status,2, status,0, pclath, cstack
 14996 ;; Tracked objects:
 14997 ;;		On entry : 0/0
 14998 ;;		On exit  : 0/0
 14999 ;;		Unchanged: 0/0
 15000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15005 ;;Total ram usage:        0 bytes
 15006 ;; Hardware stack levels used:    1
 15007 ;; Hardware stack levels required when called:    1
 15008 ;; This function calls:
 15009 ;;		i1_TMR2_Stop
 15010 ;; This function is called by:
 15011 ;;		_menuLCD_ISR
 15012 ;; This function uses a non-reentrant model
 15013 ;;
 15014                           
 15015                           
 15016                           ;psect for function i1_TMR2_StopTimer
 15017  1702                     i1_TMR2_StopTimer:
 15018  1702                     i1l4188:	
 15019                           ;incstack = 0
 15020                           ; Regs used in i1_TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 15021                           
 15022                           
 15023                           ;tmr2.c: 119: TMR2_Stop();
 15024  1702  3196  26F2  3197   	fcall	i1_TMR2_Stop
 15025  1705                     i1l767:
 15026  1705  0008               	return
 15027  1706                     __end_ofi1_TMR2_StopTimer:
 15028                           
 15029                           	psect	text42
 15030  16F2                     __ptext42:	
 15031 ;; *************** function i1_TMR2_Stop *****************
 15032 ;; Defined at:
 15033 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 15034 ;; Parameters:    Size  Location     Type
 15035 ;;		None
 15036 ;; Auto vars:     Size  Location     Type
 15037 ;;		None
 15038 ;; Return value:  Size  Location     Type
 15039 ;;                  1    wreg      void 
 15040 ;; Registers used:
 15041 ;;		None
 15042 ;; Tracked objects:
 15043 ;;		On entry : 0/0
 15044 ;;		On exit  : 0/0
 15045 ;;		Unchanged: 0/0
 15046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15051 ;;Total ram usage:        0 bytes
 15052 ;; Hardware stack levels used:    1
 15053 ;; This function calls:
 15054 ;;		Nothing
 15055 ;; This function is called by:
 15056 ;;		i1_TMR2_StopTimer
 15057 ;; This function uses a non-reentrant model
 15058 ;;
 15059                           
 15060                           
 15061                           ;psect for function i1_TMR2_Stop
 15062  16F2                     i1_TMR2_Stop:
 15063  16F2                     i1l3946:	
 15064                           ;incstack = 0
 15065                           ; Regs used in i1_TMR2_Stop: []
 15066                           
 15067                           
 15068                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 15069  16F2  0025               	movlb	5	; select bank5
 15070  16F3  138E               	bcf	14,7	;volatile
 15071  16F4                     i1l764:
 15072  16F4  0008               	return
 15073  16F5                     __end_ofi1_TMR2_Stop:
 15074                           
 15075                           	psect	text43
 15076  16EF                     __ptext43:	
 15077 ;; *************** function i1_PWM_Output_D4_Disable *****************
 15078 ;; Defined at:
 15079 ;;		line 246 in file "main.c"
 15080 ;; Parameters:    Size  Location     Type
 15081 ;;		None
 15082 ;; Auto vars:     Size  Location     Type
 15083 ;;		None
 15084 ;; Return value:  Size  Location     Type
 15085 ;;                  1    wreg      void 
 15086 ;; Registers used:
 15087 ;;		None
 15088 ;; Tracked objects:
 15089 ;;		On entry : 0/0
 15090 ;;		On exit  : 0/0
 15091 ;;		Unchanged: 0/0
 15092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15097 ;;Total ram usage:        0 bytes
 15098 ;; Hardware stack levels used:    1
 15099 ;; This function calls:
 15100 ;;		Nothing
 15101 ;; This function is called by:
 15102 ;;		_menuLCD_ISR
 15103 ;; This function uses a non-reentrant model
 15104 ;;
 15105                           
 15106                           
 15107                           ;psect for function i1_PWM_Output_D4_Disable
 15108  16EF                     i1_PWM_Output_D4_Disable:
 15109  16EF                     i1l4190:	
 15110                           ;incstack = 0
 15111                           ; Regs used in i1_PWM_Output_D4_Disable: []
 15112                           
 15113                           
 15114                           ;main.c: 247: PWM6EN = 0;
 15115  16EF  0027               	movlb	7	; select bank7
 15116  16F0  138E               	bcf	14,7	;volatile
 15117  16F1                     i1l1104:
 15118  16F1  0008               	return
 15119  16F2                     __end_ofi1_PWM_Output_D4_Disable:
 15120                           
 15121                           	psect	text44
 15122  17EA                     __ptext44:	
 15123 ;; *************** function i1_PWM6_LoadDutyValue *****************
 15124 ;; Defined at:
 15125 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 15126 ;; Parameters:    Size  Location     Type
 15127 ;;  dutyValue       2    0[COMMON] unsigned int 
 15128 ;; Auto vars:     Size  Location     Type
 15129 ;;		None
 15130 ;; Return value:  Size  Location     Type
 15131 ;;                  1    wreg      void 
 15132 ;; Registers used:
 15133 ;;		wreg, status,2, status,0
 15134 ;; Tracked objects:
 15135 ;;		On entry : 0/0
 15136 ;;		On exit  : 0/0
 15137 ;;		Unchanged: 0/0
 15138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15141 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15142 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15143 ;;Total ram usage:        4 bytes
 15144 ;; Hardware stack levels used:    1
 15145 ;; This function calls:
 15146 ;;		Nothing
 15147 ;; This function is called by:
 15148 ;;		_menuLCD_ISR
 15149 ;; This function uses a non-reentrant model
 15150 ;;
 15151                           
 15152                           
 15153                           ;psect for function i1_PWM6_LoadDutyValue
 15154  17EA                     i1_PWM6_LoadDutyValue:
 15155  17EA                     i1l4186:	
 15156                           ;incstack = 0
 15157                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 15158                           
 15159                           
 15160                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 15161  17EA  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 15162  17EB  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 15163  17EC  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 15164  17ED  00F2               	movwf	??i1_PWM6_LoadDutyValue
 15165  17EE  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 15166  17EF  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 15167  17F0  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 15168  17F1  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 15169  17F2  0872               	movf	??i1_PWM6_LoadDutyValue,w
 15170  17F3  0027               	movlb	7	; select bank7
 15171  17F4  008D               	movwf	13	;volatile
 15172                           
 15173                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 15174  17F5  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 15175  17F6  3903               	andlw	3
 15176  17F7  00F2               	movwf	??i1_PWM6_LoadDutyValue
 15177  17F8  3005               	movlw	5
 15178  17F9                     u349_25:
 15179  17F9  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 15180  17FA  3EFF               	addlw	-1
 15181  17FB  1D03               	skipz
 15182  17FC  2FF9               	goto	u349_25
 15183  17FD  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 15184  17FE  008C               	movwf	12	;volatile
 15185  17FF                     i1l722:
 15186  17FF  0008               	return
 15187  1800                     __end_ofi1_PWM6_LoadDutyValue:
 15188                           
 15189                           	psect	text45
 15190  046D                     __ptext45:	
 15191 ;; *************** function _sprintf *****************
 15192 ;; Defined at:
 15193 ;;		line 505 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
 15194 ;; Parameters:    Size  Location     Type
 15195 ;;  sp              1    wreg     PTR unsigned char 
 15196 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 15197 ;;  f               2    0[BANK0 ] PTR const unsigned char 
 15198 ;;		 -> STR_6(5), STR_5(5), STR_4(7), STR_3(7), 
 15199 ;;		 -> STR_2(15), STR_1(15), 
 15200 ;; Auto vars:     Size  Location     Type
 15201 ;;  sp              1   20[BANK0 ] PTR unsigned char 
 15202 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 15203 ;;  tmpval          4    0        struct .
 15204 ;;  width           2   17[BANK0 ] int 
 15205 ;;  val             2   14[BANK0 ] unsigned int 
 15206 ;;  cp              2    0        PTR const unsigned char 
 15207 ;;  len             2    0        unsigned int 
 15208 ;;  c               1   19[BANK0 ] unsigned char 
 15209 ;;  flag            1   16[BANK0 ] unsigned char 
 15210 ;;  prec            1   13[BANK0 ] char 
 15211 ;;  ap              1   12[BANK0 ] PTR void [1]
 15212 ;;		 -> ?_sprintf(2), 
 15213 ;; Return value:  Size  Location     Type
 15214 ;;                  2    0[BANK0 ] int 
 15215 ;; Registers used:
 15216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15217 ;; Tracked objects:
 15218 ;;		On entry : 0/0
 15219 ;;		On exit  : 0/0
 15220 ;;		Unchanged: 0/0
 15221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15222 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15223 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15224 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15225 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15226 ;;Total ram usage:       21 bytes
 15227 ;; Hardware stack levels used:    1
 15228 ;; Hardware stack levels required when called:    1
 15229 ;; This function calls:
 15230 ;;		___lwdiv
 15231 ;;		___lwmod
 15232 ;;		___wmul
 15233 ;;		_isdigit
 15234 ;; This function is called by:
 15235 ;;		_menuLCD_ISR
 15236 ;; This function uses a non-reentrant model
 15237 ;;
 15238                           
 15239                           
 15240                           ;psect for function _sprintf
 15241  046D                     _sprintf:
 15242                           
 15243                           ;incstack = 0
 15244                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15245                           ;sprintf@sp stored from wreg
 15246  046D  0020               	movlb	0	; select bank0
 15247  046E  00B4               	movwf	sprintf@sp
 15248  046F                     i1l4076:
 15249                           
 15250                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 15251  046F  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 15252  0470  00A8               	movwf	??_sprintf
 15253  0471  0828               	movf	??_sprintf,w
 15254  0472  00AC               	movwf	sprintf@ap
 15255                           
 15256                           ;doprnt.c: 553: while((c = *f++)) {
 15257  0473  2DF1               	goto	i1l4180
 15258  0474                     i1l4078:
 15259                           
 15260                           ;doprnt.c: 555: if(c != '%')
 15261  0474  3025               	movlw	37
 15262  0475  0633               	xorwf	sprintf@c,w
 15263  0476  1903               	btfsc	3,2
 15264  0477  2C79               	goto	u331_21
 15265  0478  2C7A               	goto	u331_20
 15266  0479                     u331_21:
 15267  0479  2C86               	goto	i1l4084
 15268  047A                     u331_20:
 15269  047A                     i1l4080:
 15270                           
 15271                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 15272  047A  0833               	movf	sprintf@c,w
 15273  047B  00A8               	movwf	??_sprintf
 15274  047C  0834               	movf	sprintf@sp,w
 15275  047D  0086               	movwf	6
 15276  047E  0187               	clrf	7
 15277  047F  0828               	movf	??_sprintf,w
 15278  0480  0081               	movwf	1
 15279  0481                     i1l4082:
 15280  0481  3001               	movlw	1
 15281  0482  00A8               	movwf	??_sprintf
 15282  0483  0828               	movf	??_sprintf,w
 15283  0484  07B4               	addwf	sprintf@sp,f
 15284                           
 15285                           ;doprnt.c: 559: continue;
 15286  0485  2DF1               	goto	i1l4180
 15287  0486                     i1l4084:
 15288                           
 15289                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 15290  0486  01B1               	clrf	sprintf@width
 15291  0487  01B2               	clrf	sprintf@width+1
 15292                           
 15293                           ;doprnt.c: 565: flag = 0;
 15294  0488  01B0               	clrf	sprintf@flag
 15295  0489  2C8F               	goto	i1l4090
 15296  048A                     i1l1508:	
 15297                           ;doprnt.c: 596: case '0':
 15298                           
 15299                           
 15300                           ;doprnt.c: 597: flag |= 0x04;
 15301  048A  1530               	bsf	sprintf@flag,2
 15302  048B                     i1l4086:
 15303                           
 15304                           ;doprnt.c: 598: f++;
 15305  048B  3001               	movlw	1
 15306  048C  07A0               	addwf	sprintf@f,f
 15307  048D  3000               	movlw	0
 15308  048E  3DA1               	addwfc	sprintf@f+1,f
 15309  048F                     i1l4090:	
 15310                           ;doprnt.c: 599: continue;
 15311                           
 15312  048F  0820               	movf	sprintf@f,w
 15313  0490  0084               	movwf	4
 15314  0491  0821               	movf	sprintf@f+1,w
 15315  0492  0085               	movwf	5
 15316  0493  0800               	movf	0,w	;code access
 15317                           
 15318                           ; Switch size 1, requested type "simple"
 15319                           ; Number of cases is 1, Range of values is 48 to 48
 15320                           ; switch strategies available:
 15321                           ; Name         Instructions Cycles
 15322                           ; simple_byte            4     3 (average)
 15323                           ; direct_byte           11     9 (fixed)
 15324                           ; jumptable            263     9 (fixed)
 15325                           ;	Chosen strategy is simple_byte
 15326  0494  3A30               	xorlw	48	; case 48
 15327  0495  1903               	skipnz
 15328  0496  2C8A               	goto	i1l1508
 15329  0497  2C98               	goto	i1l4092
 15330  0498                     i1l4092:
 15331                           
 15332                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 15333  0498  0820               	movf	sprintf@f,w
 15334  0499  0084               	movwf	4
 15335  049A  0821               	movf	sprintf@f+1,w
 15336  049B  0085               	movwf	5
 15337  049C  0800               	movf	0,w	;code access
 15338  049D  3197  27B2  3184   	fcall	_isdigit
 15339  04A0  1C03               	btfss	3,0
 15340  04A1  2CA3               	goto	u332_21
 15341  04A2  2CA4               	goto	u332_20
 15342  04A3                     u332_21:
 15343  04A3  2CD7               	goto	i1l4106
 15344  04A4                     u332_20:
 15345  04A4                     i1l4094:
 15346                           
 15347                           ;doprnt.c: 615: width = 0;
 15348  04A4  0020               	movlb	0	; select bank0
 15349  04A5  01B1               	clrf	sprintf@width
 15350  04A6  01B2               	clrf	sprintf@width+1
 15351  04A7                     i1l4096:
 15352                           
 15353                           ;doprnt.c: 617: width *= 10;
 15354  04A7  300A               	movlw	10
 15355  04A8  00F0               	movwf	___wmul@multiplier
 15356  04A9  3000               	movlw	0
 15357  04AA  00F1               	movwf	___wmul@multiplier+1
 15358  04AB  0020               	movlb	0	; select bank0
 15359  04AC  0832               	movf	sprintf@width+1,w
 15360  04AD  00F3               	movwf	___wmul@multiplicand+1
 15361  04AE  0831               	movf	sprintf@width,w
 15362  04AF  00F2               	movwf	___wmul@multiplicand
 15363  04B0  3188  20D4  3184   	fcall	___wmul
 15364  04B3  0871               	movf	?___wmul+1,w
 15365  04B4  0020               	movlb	0	; select bank0
 15366  04B5  00B2               	movwf	sprintf@width+1
 15367  04B6  0870               	movf	?___wmul,w
 15368  04B7  00B1               	movwf	sprintf@width
 15369  04B8                     i1l4098:
 15370                           
 15371                           ;doprnt.c: 618: width += *f++ - '0';
 15372  04B8  0820               	movf	sprintf@f,w
 15373  04B9  0084               	movwf	4
 15374  04BA  0821               	movf	sprintf@f+1,w
 15375  04BB  0085               	movwf	5
 15376  04BC  0800               	movf	0,w	;code access
 15377  04BD  3ED0               	addlw	208
 15378  04BE  00A8               	movwf	??_sprintf
 15379  04BF  30FF               	movlw	255
 15380  04C0  1803               	skipnc
 15381  04C1  3000               	movlw	0
 15382  04C2  00A9               	movwf	??_sprintf+1
 15383  04C3  0828               	movf	??_sprintf,w
 15384  04C4  07B1               	addwf	sprintf@width,f
 15385  04C5  0829               	movf	??_sprintf+1,w
 15386  04C6  3DB2               	addwfc	sprintf@width+1,f
 15387  04C7                     i1l4100:
 15388  04C7  3001               	movlw	1
 15389  04C8  07A0               	addwf	sprintf@f,f
 15390  04C9  3000               	movlw	0
 15391  04CA  3DA1               	addwfc	sprintf@f+1,f
 15392  04CB                     i1l4102:
 15393                           
 15394                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 15395  04CB  0820               	movf	sprintf@f,w
 15396  04CC  0084               	movwf	4
 15397  04CD  0821               	movf	sprintf@f+1,w
 15398  04CE  0085               	movwf	5
 15399  04CF  0800               	movf	0,w	;code access
 15400  04D0  3197  27B2  3184   	fcall	_isdigit
 15401  04D3  1803               	btfsc	3,0
 15402  04D4  2CD6               	goto	u333_21
 15403  04D5  2CD7               	goto	u333_20
 15404  04D6                     u333_21:
 15405  04D6  2CA7               	goto	i1l4096
 15406  04D7                     u333_20:
 15407  04D7                     i1l4106:
 15408  04D7  0020               	movlb	0	; select bank0
 15409  04D8  0821               	movf	sprintf@f+1,w
 15410  04D9  00A9               	movwf	??_sprintf+1
 15411  04DA  0820               	movf	sprintf@f,w
 15412  04DB  00A8               	movwf	??_sprintf
 15413  04DC  0AA0               	incf	sprintf@f,f
 15414  04DD  1903               	skipnz
 15415  04DE  0AA1               	incf	sprintf@f+1,f
 15416  04DF  0828               	movf	??_sprintf,w
 15417  04E0  0084               	movwf	4
 15418  04E1  0829               	movf	??_sprintf+1,w
 15419  04E2  0085               	movwf	5
 15420  04E3  0800               	movf	0,w	;code access
 15421  04E4  00B3               	movwf	sprintf@c
 15422                           
 15423                           ; Switch size 1, requested type "simple"
 15424                           ; Number of cases is 3, Range of values is 0 to 105
 15425                           ; switch strategies available:
 15426                           ; Name         Instructions Cycles
 15427                           ; simple_byte           10     6 (average)
 15428                           ; direct_byte          218     6 (fixed)
 15429                           ; jumptable            260     6 (fixed)
 15430                           ;	Chosen strategy is simple_byte
 15431  04E5  3A00               	xorlw	0	; case 0
 15432  04E6  1903               	skipnz
 15433  04E7  2E05               	goto	i1l4182
 15434  04E8  3A64               	xorlw	100	; case 100
 15435  04E9  1903               	skipnz
 15436  04EA  2CEF               	goto	i1l4108
 15437  04EB  3A0D               	xorlw	13	; case 105
 15438  04EC  1903               	skipnz
 15439  04ED  2CEF               	goto	i1l4108
 15440  04EE  2DF1               	goto	i1l4180
 15441  04EF                     i1l4108:
 15442                           
 15443                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 15444  04EF  082C               	movf	sprintf@ap,w
 15445  04F0  0086               	movwf	6
 15446  04F1  0187               	clrf	7
 15447  04F2  3F40               	moviw [0]fsr1
 15448  04F3  00AE               	movwf	sprintf@val
 15449  04F4  3F41               	moviw [1]fsr1
 15450  04F5  00AF               	movwf	sprintf@val+1
 15451  04F6                     i1l4110:
 15452  04F6  3002               	movlw	2
 15453  04F7  00A8               	movwf	??_sprintf
 15454  04F8  0828               	movf	??_sprintf,w
 15455  04F9  07AC               	addwf	sprintf@ap,f
 15456  04FA                     i1l4112:
 15457                           
 15458                           ;doprnt.c: 1287: if((int)val < 0) {
 15459  04FA  1FAF               	btfss	sprintf@val+1,7
 15460  04FB  2CFD               	goto	u334_21
 15461  04FC  2CFE               	goto	u334_20
 15462  04FD                     u334_21:
 15463  04FD  2D07               	goto	i1l4118
 15464  04FE                     u334_20:
 15465  04FE                     i1l4114:
 15466                           
 15467                           ;doprnt.c: 1288: flag |= 0x03;
 15468  04FE  3003               	movlw	3
 15469  04FF  00A8               	movwf	??_sprintf
 15470  0500  0828               	movf	??_sprintf,w
 15471  0501  04B0               	iorwf	sprintf@flag,f
 15472  0502                     i1l4116:
 15473                           
 15474                           ;doprnt.c: 1289: val = -val;
 15475  0502  09AE               	comf	sprintf@val,f
 15476  0503  09AF               	comf	sprintf@val+1,f
 15477  0504  0AAE               	incf	sprintf@val,f
 15478  0505  1903               	skipnz
 15479  0506  0AAF               	incf	sprintf@val+1,f
 15480  0507                     i1l4118:
 15481                           
 15482                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 15483  0507  01B3               	clrf	sprintf@c
 15484  0508  0AB3               	incf	sprintf@c,f
 15485  0509                     i1l4124:
 15486                           
 15487                           ;doprnt.c: 1332: if(val < dpowers[c])
 15488  0509  0833               	movf	sprintf@c,w
 15489  050A  00A8               	movwf	??_sprintf
 15490  050B  01A9               	clrf	??_sprintf+1
 15491  050C  35A8               	lslf	??_sprintf,f
 15492  050D  0DA9               	rlf	??_sprintf+1,f
 15493  050E  300F               	movlw	low (_dpowers| (0+32768))
 15494  050F  0728               	addwf	??_sprintf,w
 15495  0510  0084               	movwf	4
 15496  0511  3098               	movlw	high (_dpowers| (0+32768))
 15497  0512  3D29               	addwfc	??_sprintf+1,w
 15498  0513  0085               	movwf	5
 15499  0514  3F00               	moviw [0]fsr0
 15500  0515  00AA               	movwf	??_sprintf+2
 15501  0516  3F01               	moviw [1]fsr0
 15502  0517  00AB               	movwf	??_sprintf+3
 15503  0518  082B               	movf	??_sprintf+3,w
 15504  0519  022F               	subwf	sprintf@val+1,w
 15505  051A  1D03               	skipz
 15506  051B  2D1E               	goto	u335_25
 15507  051C  082A               	movf	??_sprintf+2,w
 15508  051D  022E               	subwf	sprintf@val,w
 15509  051E                     u335_25:
 15510  051E  1803               	skipnc
 15511  051F  2D21               	goto	u335_21
 15512  0520  2D22               	goto	u335_20
 15513  0521                     u335_21:
 15514  0521  2D23               	goto	i1l4128
 15515  0522                     u335_20:
 15516  0522  2D2D               	goto	i1l4130
 15517  0523                     i1l4128:
 15518  0523  3001               	movlw	1
 15519  0524  00A8               	movwf	??_sprintf
 15520  0525  0828               	movf	??_sprintf,w
 15521  0526  07B3               	addwf	sprintf@c,f
 15522  0527  3005               	movlw	5
 15523  0528  0633               	xorwf	sprintf@c,w
 15524  0529  1D03               	btfss	3,2
 15525  052A  2D2C               	goto	u336_21
 15526  052B  2D2D               	goto	u336_20
 15527  052C                     u336_21:
 15528  052C  2D09               	goto	i1l4124
 15529  052D                     u336_20:
 15530  052D                     i1l4130:
 15531                           
 15532                           ;doprnt.c: 1371: if(width && flag & 0x03)
 15533  052D  0831               	movf	sprintf@width,w
 15534  052E  0432               	iorwf	sprintf@width+1,w
 15535  052F  1903               	btfsc	3,2
 15536  0530  2D32               	goto	u337_21
 15537  0531  2D33               	goto	u337_20
 15538  0532                     u337_21:
 15539  0532  2D3D               	goto	i1l1526
 15540  0533                     u337_20:
 15541  0533                     i1l4132:
 15542  0533  0830               	movf	sprintf@flag,w
 15543  0534  3903               	andlw	3
 15544  0535  1903               	btfsc	3,2
 15545  0536  2D38               	goto	u338_21
 15546  0537  2D39               	goto	u338_20
 15547  0538                     u338_21:
 15548  0538  2D3D               	goto	i1l1526
 15549  0539                     u338_20:
 15550  0539                     i1l4134:
 15551                           
 15552                           ;doprnt.c: 1372: width--;
 15553  0539  30FF               	movlw	255
 15554  053A  07B1               	addwf	sprintf@width,f
 15555  053B  30FF               	movlw	255
 15556  053C  3DB2               	addwfc	sprintf@width+1,f
 15557  053D                     i1l1526:
 15558                           
 15559                           ;doprnt.c: 1407: if(width > c)
 15560  053D  0832               	movf	sprintf@width+1,w
 15561  053E  3A80               	xorlw	128
 15562  053F  3C80               	sublw	128
 15563  0540  1D03               	skipz
 15564  0541  2D44               	goto	u339_25
 15565  0542  0831               	movf	sprintf@width,w
 15566  0543  0233               	subwf	sprintf@c,w
 15567  0544                     u339_25:
 15568  0544  1803               	skipnc
 15569  0545  2D47               	goto	u339_21
 15570  0546  2D48               	goto	u339_20
 15571  0547                     u339_21:
 15572  0547  2D51               	goto	i1l4138
 15573  0548                     u339_20:
 15574  0548                     i1l4136:
 15575                           
 15576                           ;doprnt.c: 1408: width -= c;
 15577  0548  0020               	movlb	0	; select bank0
 15578  0549  0833               	movf	sprintf@c,w
 15579  054A  00A8               	movwf	??_sprintf
 15580  054B  01A9               	clrf	??_sprintf+1
 15581  054C  0828               	movf	??_sprintf,w
 15582  054D  02B1               	subwf	sprintf@width,f
 15583  054E  0829               	movf	??_sprintf+1,w
 15584  054F  3BB2               	subwfb	sprintf@width+1,f
 15585  0550  2D54               	goto	i1l4140
 15586  0551                     i1l4138:
 15587                           
 15588                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 15589  0551  0020               	movlb	0	; select bank0
 15590  0552  01B1               	clrf	sprintf@width
 15591  0553  01B2               	clrf	sprintf@width+1
 15592  0554                     i1l4140:
 15593                           
 15594                           ;doprnt.c: 1413: if(flag & 0x04) {
 15595  0554  1D30               	btfss	sprintf@flag,2
 15596  0555  2D57               	goto	u340_21
 15597  0556  2D58               	goto	u340_20
 15598  0557                     u340_21:
 15599  0557  2D85               	goto	i1l4156
 15600  0558                     u340_20:
 15601  0558                     i1l4142:
 15602                           
 15603                           ;doprnt.c: 1418: if(flag & 0x03)
 15604  0558  0830               	movf	sprintf@flag,w
 15605  0559  3903               	andlw	3
 15606  055A  1903               	btfsc	3,2
 15607  055B  2D5D               	goto	u341_21
 15608  055C  2D5E               	goto	u341_20
 15609  055D                     u341_21:
 15610  055D  2D69               	goto	i1l4148
 15611  055E                     u341_20:
 15612  055E                     i1l4144:
 15613                           
 15614                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 15615  055E  302D               	movlw	45
 15616  055F  00A8               	movwf	??_sprintf
 15617  0560  0834               	movf	sprintf@sp,w
 15618  0561  0086               	movwf	6
 15619  0562  0187               	clrf	7
 15620  0563  0828               	movf	??_sprintf,w
 15621  0564  0081               	movwf	1
 15622  0565                     i1l4146:
 15623  0565  3001               	movlw	1
 15624  0566  00A8               	movwf	??_sprintf
 15625  0567  0828               	movf	??_sprintf,w
 15626  0568  07B4               	addwf	sprintf@sp,f
 15627  0569                     i1l4148:
 15628                           
 15629                           ;doprnt.c: 1441: if(width)
 15630  0569  0831               	movf	sprintf@width,w
 15631  056A  0432               	iorwf	sprintf@width+1,w
 15632  056B  1903               	btfsc	3,2
 15633  056C  2D6E               	goto	u342_21
 15634  056D  2D6F               	goto	u342_20
 15635  056E                     u342_21:
 15636  056E  2DB1               	goto	i1l4170
 15637  056F                     u342_20:
 15638  056F                     i1l4150:
 15639                           
 15640                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 15641  056F  3030               	movlw	48
 15642  0570  00A8               	movwf	??_sprintf
 15643  0571  0834               	movf	sprintf@sp,w
 15644  0572  0086               	movwf	6
 15645  0573  0187               	clrf	7
 15646  0574  0828               	movf	??_sprintf,w
 15647  0575  0081               	movwf	1
 15648  0576                     i1l4152:
 15649  0576  3001               	movlw	1
 15650  0577  00A8               	movwf	??_sprintf
 15651  0578  0828               	movf	??_sprintf,w
 15652  0579  07B4               	addwf	sprintf@sp,f
 15653  057A                     i1l4154:
 15654                           
 15655                           ;doprnt.c: 1444: while(--width);
 15656  057A  30FF               	movlw	255
 15657  057B  07B1               	addwf	sprintf@width,f
 15658  057C  30FF               	movlw	255
 15659  057D  3DB2               	addwfc	sprintf@width+1,f
 15660  057E  0831               	movf	sprintf@width,w
 15661  057F  0432               	iorwf	sprintf@width+1,w
 15662  0580  1D03               	btfss	3,2
 15663  0581  2D83               	goto	u343_21
 15664  0582  2D84               	goto	u343_20
 15665  0583                     u343_21:
 15666  0583  2D6F               	goto	i1l4150
 15667  0584                     u343_20:
 15668  0584  2DB1               	goto	i1l4170
 15669  0585                     i1l4156:
 15670                           
 15671                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 15672  0585  0831               	movf	sprintf@width,w
 15673  0586  0432               	iorwf	sprintf@width+1,w
 15674  0587  1903               	btfsc	3,2
 15675  0588  2D8A               	goto	u344_21
 15676  0589  2D8B               	goto	u344_20
 15677  058A                     u344_21:
 15678  058A  2DA0               	goto	i1l4164
 15679  058B                     u344_20:
 15680  058B                     i1l4158:
 15681                           
 15682                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 15683  058B  3020               	movlw	32
 15684  058C  00A8               	movwf	??_sprintf
 15685  058D  0834               	movf	sprintf@sp,w
 15686  058E  0086               	movwf	6
 15687  058F  0187               	clrf	7
 15688  0590  0828               	movf	??_sprintf,w
 15689  0591  0081               	movwf	1
 15690  0592                     i1l4160:
 15691  0592  3001               	movlw	1
 15692  0593  00A8               	movwf	??_sprintf
 15693  0594  0828               	movf	??_sprintf,w
 15694  0595  07B4               	addwf	sprintf@sp,f
 15695  0596                     i1l4162:
 15696                           
 15697                           ;doprnt.c: 1457: while(--width);
 15698  0596  30FF               	movlw	255
 15699  0597  07B1               	addwf	sprintf@width,f
 15700  0598  30FF               	movlw	255
 15701  0599  3DB2               	addwfc	sprintf@width+1,f
 15702  059A  0831               	movf	sprintf@width,w
 15703  059B  0432               	iorwf	sprintf@width+1,w
 15704  059C  1D03               	btfss	3,2
 15705  059D  2D9F               	goto	u345_21
 15706  059E  2DA0               	goto	u345_20
 15707  059F                     u345_21:
 15708  059F  2D8B               	goto	i1l4158
 15709  05A0                     u345_20:
 15710  05A0                     i1l4164:
 15711                           
 15712                           ;doprnt.c: 1464: if(flag & 0x03)
 15713  05A0  0830               	movf	sprintf@flag,w
 15714  05A1  3903               	andlw	3
 15715  05A2  1903               	btfsc	3,2
 15716  05A3  2DA5               	goto	u346_21
 15717  05A4  2DA6               	goto	u346_20
 15718  05A5                     u346_21:
 15719  05A5  2DB1               	goto	i1l4170
 15720  05A6                     u346_20:
 15721  05A6                     i1l4166:
 15722                           
 15723                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 15724  05A6  302D               	movlw	45
 15725  05A7  00A8               	movwf	??_sprintf
 15726  05A8  0834               	movf	sprintf@sp,w
 15727  05A9  0086               	movwf	6
 15728  05AA  0187               	clrf	7
 15729  05AB  0828               	movf	??_sprintf,w
 15730  05AC  0081               	movwf	1
 15731  05AD                     i1l4168:
 15732  05AD  3001               	movlw	1
 15733  05AE  00A8               	movwf	??_sprintf
 15734  05AF  0828               	movf	??_sprintf,w
 15735  05B0  07B4               	addwf	sprintf@sp,f
 15736  05B1                     i1l4170:
 15737                           
 15738                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 15739  05B1  0833               	movf	sprintf@c,w
 15740  05B2  00A8               	movwf	??_sprintf
 15741  05B3  0828               	movf	??_sprintf,w
 15742  05B4  00AD               	movwf	sprintf@prec
 15743                           
 15744                           ;doprnt.c: 1500: while(prec--) {
 15745  05B5  2DE8               	goto	i1l4178
 15746  05B6                     i1l4172:
 15747                           
 15748                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 15749  05B6  300A               	movlw	10
 15750  05B7  00F8               	movwf	___lwmod@divisor
 15751  05B8  3000               	movlw	0
 15752  05B9  00F9               	movwf	___lwmod@divisor+1
 15753  05BA  082D               	movf	sprintf@prec,w
 15754  05BB  00A8               	movwf	??_sprintf
 15755  05BC  01A9               	clrf	??_sprintf+1
 15756  05BD  35A8               	lslf	??_sprintf,f
 15757  05BE  0DA9               	rlf	??_sprintf+1,f
 15758  05BF  300F               	movlw	low (_dpowers| (0+32768))
 15759  05C0  0728               	addwf	??_sprintf,w
 15760  05C1  0084               	movwf	4
 15761  05C2  3098               	movlw	high (_dpowers| (0+32768))
 15762  05C3  3D29               	addwfc	??_sprintf+1,w
 15763  05C4  0085               	movwf	5
 15764  05C5  3F00               	moviw [0]fsr0
 15765  05C6  00F0               	movwf	___lwdiv@divisor
 15766  05C7  3F01               	moviw [1]fsr0
 15767  05C8  00F1               	movwf	___lwdiv@divisor+1
 15768  05C9  082F               	movf	sprintf@val+1,w
 15769  05CA  00F3               	movwf	___lwdiv@dividend+1
 15770  05CB  082E               	movf	sprintf@val,w
 15771  05CC  00F2               	movwf	___lwdiv@dividend
 15772  05CD  318A  2284  3184   	fcall	___lwdiv
 15773  05D0  0871               	movf	?___lwdiv+1,w
 15774  05D1  00FB               	movwf	___lwmod@dividend+1
 15775  05D2  0870               	movf	?___lwdiv,w
 15776  05D3  00FA               	movwf	___lwmod@dividend
 15777  05D4  3189  21A8  3184   	fcall	___lwmod
 15778  05D7  0878               	movf	?___lwmod,w
 15779  05D8  3E30               	addlw	48
 15780  05D9  0020               	movlb	0	; select bank0
 15781  05DA  00AA               	movwf	??_sprintf+2
 15782  05DB  082A               	movf	??_sprintf+2,w
 15783  05DC  00B3               	movwf	sprintf@c
 15784  05DD                     i1l4174:
 15785                           
 15786                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 15787  05DD  0833               	movf	sprintf@c,w
 15788  05DE  00A8               	movwf	??_sprintf
 15789  05DF  0834               	movf	sprintf@sp,w
 15790  05E0  0086               	movwf	6
 15791  05E1  0187               	clrf	7
 15792  05E2  0828               	movf	??_sprintf,w
 15793  05E3  0081               	movwf	1
 15794  05E4                     i1l4176:
 15795  05E4  3001               	movlw	1
 15796  05E5  00A8               	movwf	??_sprintf
 15797  05E6  0828               	movf	??_sprintf,w
 15798  05E7  07B4               	addwf	sprintf@sp,f
 15799  05E8                     i1l4178:
 15800  05E8  30FF               	movlw	255
 15801  05E9  00A8               	movwf	??_sprintf
 15802  05EA  0828               	movf	??_sprintf,w
 15803  05EB  07AD               	addwf	sprintf@prec,f
 15804  05EC  0A2D               	incf	sprintf@prec,w
 15805  05ED  1D03               	btfss	3,2
 15806  05EE  2DF0               	goto	u347_21
 15807  05EF  2DF1               	goto	u347_20
 15808  05F0                     u347_21:
 15809  05F0  2DB6               	goto	i1l4172
 15810  05F1                     u347_20:
 15811  05F1                     i1l4180:
 15812  05F1  0821               	movf	sprintf@f+1,w
 15813  05F2  00A9               	movwf	??_sprintf+1
 15814  05F3  0820               	movf	sprintf@f,w
 15815  05F4  00A8               	movwf	??_sprintf
 15816  05F5  0AA0               	incf	sprintf@f,f
 15817  05F6  1903               	skipnz
 15818  05F7  0AA1               	incf	sprintf@f+1,f
 15819  05F8  0828               	movf	??_sprintf,w
 15820  05F9  0084               	movwf	4
 15821  05FA  0829               	movf	??_sprintf+1,w
 15822  05FB  0085               	movwf	5
 15823  05FC  0800               	movf	0,w	;code access
 15824  05FD  00AA               	movwf	??_sprintf+2
 15825  05FE  082A               	movf	??_sprintf+2,w
 15826  05FF  00B3               	movwf	sprintf@c
 15827  0600  0833               	movf	sprintf@c,w
 15828  0601  1D03               	btfss	3,2
 15829  0602  2E04               	goto	u348_21
 15830  0603  2E05               	goto	u348_20
 15831  0604                     u348_21:
 15832  0604  2C74               	goto	i1l4078
 15833  0605                     u348_20:
 15834  0605                     i1l4182:
 15835                           
 15836                           ;doprnt.c: 1564: *sp = 0;
 15837  0605  0834               	movf	sprintf@sp,w
 15838  0606  0086               	movwf	6
 15839  0607  0187               	clrf	7
 15840  0608  0181               	clrf	1
 15841  0609                     i1l1543:
 15842  0609  0008               	return
 15843  060A                     __end_of_sprintf:
 15844                           
 15845                           	psect	text46
 15846  17B2                     __ptext46:	
 15847 ;; *************** function _isdigit *****************
 15848 ;; Defined at:
 15849 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 15850 ;; Parameters:    Size  Location     Type
 15851 ;;  c               1    wreg     unsigned char 
 15852 ;; Auto vars:     Size  Location     Type
 15853 ;;  c               1    1[COMMON] unsigned char 
 15854 ;; Return value:  Size  Location     Type
 15855 ;;		None               void
 15856 ;; Registers used:
 15857 ;;		wreg, status,2, status,0
 15858 ;; Tracked objects:
 15859 ;;		On entry : 0/0
 15860 ;;		On exit  : 0/0
 15861 ;;		Unchanged: 0/0
 15862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15864 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15866 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15867 ;;Total ram usage:        2 bytes
 15868 ;; Hardware stack levels used:    1
 15869 ;; This function calls:
 15870 ;;		Nothing
 15871 ;; This function is called by:
 15872 ;;		_sprintf
 15873 ;; This function uses a non-reentrant model
 15874 ;;
 15875                           
 15876                           
 15877                           ;psect for function _isdigit
 15878  17B2                     _isdigit:
 15879                           
 15880                           ;incstack = 0
 15881                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 15882                           ;isdigit@c stored from wreg
 15883  17B2  00F1               	movwf	isdigit@c
 15884  17B3                     i1l3872:
 15885  17B3  01F0               	clrf	_isdigit$2907
 15886  17B4                     i1l3874:
 15887  17B4  303A               	movlw	58
 15888  17B5  0271               	subwf	isdigit@c,w
 15889  17B6  1803               	skipnc
 15890  17B7  2FB9               	goto	u274_21
 15891  17B8  2FBA               	goto	u274_20
 15892  17B9                     u274_21:
 15893  17B9  2FC2               	goto	i1l3880
 15894  17BA                     u274_20:
 15895  17BA                     i1l3876:
 15896  17BA  3030               	movlw	48
 15897  17BB  0271               	subwf	isdigit@c,w
 15898  17BC  1C03               	skipc
 15899  17BD  2FBF               	goto	u275_21
 15900  17BE  2FC0               	goto	u275_20
 15901  17BF                     u275_21:
 15902  17BF  2FC2               	goto	i1l3880
 15903  17C0                     u275_20:
 15904  17C0                     i1l3878:
 15905  17C0  01F0               	clrf	_isdigit$2907
 15906  17C1  0AF0               	incf	_isdigit$2907,f
 15907  17C2                     i1l3880:
 15908  17C2  0C70               	rrf	_isdigit$2907,w
 15909  17C3                     i1l2000:
 15910  17C3  0008               	return
 15911  17C4                     __end_of_isdigit:
 15912                           
 15913                           	psect	text47
 15914  08D4                     __ptext47:	
 15915 ;; *************** function ___wmul *****************
 15916 ;; Defined at:
 15917 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 15918 ;; Parameters:    Size  Location     Type
 15919 ;;  multiplier      2    0[COMMON] unsigned int 
 15920 ;;  multiplicand    2    2[COMMON] unsigned int 
 15921 ;; Auto vars:     Size  Location     Type
 15922 ;;  product         2    4[COMMON] unsigned int 
 15923 ;; Return value:  Size  Location     Type
 15924 ;;                  2    0[COMMON] unsigned int 
 15925 ;; Registers used:
 15926 ;;		wreg, status,2, status,0
 15927 ;; Tracked objects:
 15928 ;;		On entry : 0/0
 15929 ;;		On exit  : 0/0
 15930 ;;		Unchanged: 0/0
 15931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15932 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15933 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15935 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15936 ;;Total ram usage:        6 bytes
 15937 ;; Hardware stack levels used:    1
 15938 ;; This function calls:
 15939 ;;		Nothing
 15940 ;; This function is called by:
 15941 ;;		_monitoring_ISR
 15942 ;;		_sprintf
 15943 ;;		_map
 15944 ;; This function uses a non-reentrant model
 15945 ;;
 15946                           
 15947                           
 15948                           ;psect for function ___wmul
 15949  08D4                     ___wmul:
 15950  08D4                     i1l3884:	
 15951                           ;incstack = 0
 15952                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 15953                           
 15954  08D4  01F4               	clrf	___wmul@product
 15955  08D5  01F5               	clrf	___wmul@product+1
 15956  08D6                     i1l3886:
 15957  08D6  1C70               	btfss	___wmul@multiplier,0
 15958  08D7  28D9               	goto	u276_21
 15959  08D8  28DA               	goto	u276_20
 15960  08D9                     u276_21:
 15961  08D9  28DE               	goto	i1l1547
 15962  08DA                     u276_20:
 15963  08DA                     i1l3888:
 15964  08DA  0872               	movf	___wmul@multiplicand,w
 15965  08DB  07F4               	addwf	___wmul@product,f
 15966  08DC  0873               	movf	___wmul@multiplicand+1,w
 15967  08DD  3DF5               	addwfc	___wmul@product+1,f
 15968  08DE                     i1l1547:
 15969  08DE  3001               	movlw	1
 15970  08DF                     u277_25:
 15971  08DF  35F2               	lslf	___wmul@multiplicand,f
 15972  08E0  0DF3               	rlf	___wmul@multiplicand+1,f
 15973  08E1  0B89               	decfsz	9,f
 15974  08E2  28DF               	goto	u277_25
 15975  08E3                     i1l3890:
 15976  08E3  3001               	movlw	1
 15977  08E4                     u278_25:
 15978  08E4  36F1               	lsrf	___wmul@multiplier+1,f
 15979  08E5  0CF0               	rrf	___wmul@multiplier,f
 15980  08E6  0B89               	decfsz	9,f
 15981  08E7  28E4               	goto	u278_25
 15982  08E8                     i1l3892:
 15983  08E8  0870               	movf	___wmul@multiplier,w
 15984  08E9  0471               	iorwf	___wmul@multiplier+1,w
 15985  08EA  1D03               	btfss	3,2
 15986  08EB  28ED               	goto	u279_21
 15987  08EC  28EE               	goto	u279_20
 15988  08ED                     u279_21:
 15989  08ED  28D6               	goto	i1l3886
 15990  08EE                     u279_20:
 15991  08EE                     i1l3894:
 15992  08EE  0875               	movf	___wmul@product+1,w
 15993  08EF  00F1               	movwf	?___wmul+1
 15994  08F0  0874               	movf	___wmul@product,w
 15995  08F1  00F0               	movwf	?___wmul
 15996  08F2                     i1l1549:
 15997  08F2  0008               	return
 15998  08F3                     __end_of___wmul:
 15999                           
 16000                           	psect	text48
 16001  09A8                     __ptext48:	
 16002 ;; *************** function ___lwmod *****************
 16003 ;; Defined at:
 16004 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 16005 ;; Parameters:    Size  Location     Type
 16006 ;;  divisor         2    8[COMMON] unsigned int 
 16007 ;;  dividend        2   10[COMMON] unsigned int 
 16008 ;; Auto vars:     Size  Location     Type
 16009 ;;  counter         1   13[COMMON] unsigned char 
 16010 ;; Return value:  Size  Location     Type
 16011 ;;                  2    8[COMMON] unsigned int 
 16012 ;; Registers used:
 16013 ;;		wreg, status,2, status,0
 16014 ;; Tracked objects:
 16015 ;;		On entry : 0/0
 16016 ;;		On exit  : 0/0
 16017 ;;		Unchanged: 0/0
 16018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16019 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16020 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16022 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16023 ;;Total ram usage:        6 bytes
 16024 ;; Hardware stack levels used:    1
 16025 ;; This function calls:
 16026 ;;		Nothing
 16027 ;; This function is called by:
 16028 ;;		_sprintf
 16029 ;; This function uses a non-reentrant model
 16030 ;;
 16031                           
 16032                           
 16033                           ;psect for function ___lwmod
 16034  09A8                     ___lwmod:
 16035  09A8                     i1l3924:	
 16036                           ;incstack = 0
 16037                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 16038                           
 16039  09A8  0878               	movf	___lwmod@divisor,w
 16040  09A9  0479               	iorwf	___lwmod@divisor+1,w
 16041  09AA  1903               	btfsc	3,2
 16042  09AB  29AD               	goto	u287_21
 16043  09AC  29AE               	goto	u287_20
 16044  09AD                     u287_21:
 16045  09AD  29D7               	goto	i1l3942
 16046  09AE                     u287_20:
 16047  09AE                     i1l3926:
 16048  09AE  01FD               	clrf	___lwmod@counter
 16049  09AF  0AFD               	incf	___lwmod@counter,f
 16050  09B0  29BA               	goto	i1l3932
 16051  09B1                     i1l3928:
 16052  09B1  3001               	movlw	1
 16053  09B2                     u288_25:
 16054  09B2  35F8               	lslf	___lwmod@divisor,f
 16055  09B3  0DF9               	rlf	___lwmod@divisor+1,f
 16056  09B4  0B89               	decfsz	9,f
 16057  09B5  29B2               	goto	u288_25
 16058  09B6                     i1l3930:
 16059  09B6  3001               	movlw	1
 16060  09B7  00FC               	movwf	??___lwmod
 16061  09B8  087C               	movf	??___lwmod,w
 16062  09B9  07FD               	addwf	___lwmod@counter,f
 16063  09BA                     i1l3932:
 16064  09BA  1FF9               	btfss	___lwmod@divisor+1,7
 16065  09BB  29BD               	goto	u289_21
 16066  09BC  29BE               	goto	u289_20
 16067  09BD                     u289_21:
 16068  09BD  29B1               	goto	i1l3928
 16069  09BE                     u289_20:
 16070  09BE                     i1l3934:
 16071  09BE  0879               	movf	___lwmod@divisor+1,w
 16072  09BF  027B               	subwf	___lwmod@dividend+1,w
 16073  09C0  1D03               	skipz
 16074  09C1  29C4               	goto	u290_25
 16075  09C2  0878               	movf	___lwmod@divisor,w
 16076  09C3  027A               	subwf	___lwmod@dividend,w
 16077  09C4                     u290_25:
 16078  09C4  1C03               	skipc
 16079  09C5  29C7               	goto	u290_21
 16080  09C6  29C8               	goto	u290_20
 16081  09C7                     u290_21:
 16082  09C7  29CC               	goto	i1l3938
 16083  09C8                     u290_20:
 16084  09C8                     i1l3936:
 16085  09C8  0878               	movf	___lwmod@divisor,w
 16086  09C9  02FA               	subwf	___lwmod@dividend,f
 16087  09CA  0879               	movf	___lwmod@divisor+1,w
 16088  09CB  3BFB               	subwfb	___lwmod@dividend+1,f
 16089  09CC                     i1l3938:
 16090  09CC  3001               	movlw	1
 16091  09CD                     u291_25:
 16092  09CD  36F9               	lsrf	___lwmod@divisor+1,f
 16093  09CE  0CF8               	rrf	___lwmod@divisor,f
 16094  09CF  0B89               	decfsz	9,f
 16095  09D0  29CD               	goto	u291_25
 16096  09D1                     i1l3940:
 16097  09D1  3001               	movlw	1
 16098  09D2  02FD               	subwf	___lwmod@counter,f
 16099  09D3  1D03               	btfss	3,2
 16100  09D4  29D6               	goto	u292_21
 16101  09D5  29D7               	goto	u292_20
 16102  09D6                     u292_21:
 16103  09D6  29BE               	goto	i1l3934
 16104  09D7                     u292_20:
 16105  09D7                     i1l3942:
 16106  09D7  087B               	movf	___lwmod@dividend+1,w
 16107  09D8  00F9               	movwf	?___lwmod+1
 16108  09D9  087A               	movf	___lwmod@dividend,w
 16109  09DA  00F8               	movwf	?___lwmod
 16110  09DB                     i1l1829:
 16111  09DB  0008               	return
 16112  09DC                     __end_of___lwmod:
 16113                           
 16114                           	psect	text49
 16115  0A84                     __ptext49:	
 16116 ;; *************** function ___lwdiv *****************
 16117 ;; Defined at:
 16118 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 16119 ;; Parameters:    Size  Location     Type
 16120 ;;  divisor         2    0[COMMON] unsigned int 
 16121 ;;  dividend        2    2[COMMON] unsigned int 
 16122 ;; Auto vars:     Size  Location     Type
 16123 ;;  quotient        2    5[COMMON] unsigned int 
 16124 ;;  counter         1    7[COMMON] unsigned char 
 16125 ;; Return value:  Size  Location     Type
 16126 ;;                  2    0[COMMON] unsigned int 
 16127 ;; Registers used:
 16128 ;;		wreg, status,2, status,0
 16129 ;; Tracked objects:
 16130 ;;		On entry : 0/0
 16131 ;;		On exit  : 0/0
 16132 ;;		Unchanged: 0/0
 16133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16134 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16135 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16136 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16137 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16138 ;;Total ram usage:        8 bytes
 16139 ;; Hardware stack levels used:    1
 16140 ;; This function calls:
 16141 ;;		Nothing
 16142 ;; This function is called by:
 16143 ;;		_sprintf
 16144 ;; This function uses a non-reentrant model
 16145 ;;
 16146                           
 16147                           
 16148                           ;psect for function ___lwdiv
 16149  0A84                     ___lwdiv:
 16150  0A84                     i1l3898:	
 16151                           ;incstack = 0
 16152                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 16153                           
 16154  0A84  01F5               	clrf	___lwdiv@quotient
 16155  0A85  01F6               	clrf	___lwdiv@quotient+1
 16156  0A86                     i1l3900:
 16157  0A86  0870               	movf	___lwdiv@divisor,w
 16158  0A87  0471               	iorwf	___lwdiv@divisor+1,w
 16159  0A88  1903               	btfsc	3,2
 16160  0A89  2A8B               	goto	u280_21
 16161  0A8A  2A8C               	goto	u280_20
 16162  0A8B                     u280_21:
 16163  0A8B  2ABB               	goto	i1l3920
 16164  0A8C                     u280_20:
 16165  0A8C                     i1l3902:
 16166  0A8C  01F7               	clrf	___lwdiv@counter
 16167  0A8D  0AF7               	incf	___lwdiv@counter,f
 16168  0A8E  2A98               	goto	i1l3908
 16169  0A8F                     i1l3904:
 16170  0A8F  3001               	movlw	1
 16171  0A90                     u281_25:
 16172  0A90  35F0               	lslf	___lwdiv@divisor,f
 16173  0A91  0DF1               	rlf	___lwdiv@divisor+1,f
 16174  0A92  0B89               	decfsz	9,f
 16175  0A93  2A90               	goto	u281_25
 16176  0A94                     i1l3906:
 16177  0A94  3001               	movlw	1
 16178  0A95  00F4               	movwf	??___lwdiv
 16179  0A96  0874               	movf	??___lwdiv,w
 16180  0A97  07F7               	addwf	___lwdiv@counter,f
 16181  0A98                     i1l3908:
 16182  0A98  1FF1               	btfss	___lwdiv@divisor+1,7
 16183  0A99  2A9B               	goto	u282_21
 16184  0A9A  2A9C               	goto	u282_20
 16185  0A9B                     u282_21:
 16186  0A9B  2A8F               	goto	i1l3904
 16187  0A9C                     u282_20:
 16188  0A9C                     i1l3910:
 16189  0A9C  3001               	movlw	1
 16190  0A9D                     u283_25:
 16191  0A9D  35F5               	lslf	___lwdiv@quotient,f
 16192  0A9E  0DF6               	rlf	___lwdiv@quotient+1,f
 16193  0A9F  0B89               	decfsz	9,f
 16194  0AA0  2A9D               	goto	u283_25
 16195  0AA1  0871               	movf	___lwdiv@divisor+1,w
 16196  0AA2  0273               	subwf	___lwdiv@dividend+1,w
 16197  0AA3  1D03               	skipz
 16198  0AA4  2AA7               	goto	u284_25
 16199  0AA5  0870               	movf	___lwdiv@divisor,w
 16200  0AA6  0272               	subwf	___lwdiv@dividend,w
 16201  0AA7                     u284_25:
 16202  0AA7  1C03               	skipc
 16203  0AA8  2AAA               	goto	u284_21
 16204  0AA9  2AAB               	goto	u284_20
 16205  0AAA                     u284_21:
 16206  0AAA  2AB0               	goto	i1l3916
 16207  0AAB                     u284_20:
 16208  0AAB                     i1l3912:
 16209  0AAB  0870               	movf	___lwdiv@divisor,w
 16210  0AAC  02F2               	subwf	___lwdiv@dividend,f
 16211  0AAD  0871               	movf	___lwdiv@divisor+1,w
 16212  0AAE  3BF3               	subwfb	___lwdiv@dividend+1,f
 16213  0AAF                     i1l3914:
 16214  0AAF  1475               	bsf	___lwdiv@quotient,0
 16215  0AB0                     i1l3916:
 16216  0AB0  3001               	movlw	1
 16217  0AB1                     u285_25:
 16218  0AB1  36F1               	lsrf	___lwdiv@divisor+1,f
 16219  0AB2  0CF0               	rrf	___lwdiv@divisor,f
 16220  0AB3  0B89               	decfsz	9,f
 16221  0AB4  2AB1               	goto	u285_25
 16222  0AB5                     i1l3918:
 16223  0AB5  3001               	movlw	1
 16224  0AB6  02F7               	subwf	___lwdiv@counter,f
 16225  0AB7  1D03               	btfss	3,2
 16226  0AB8  2ABA               	goto	u286_21
 16227  0AB9  2ABB               	goto	u286_20
 16228  0ABA                     u286_21:
 16229  0ABA  2A9C               	goto	i1l3910
 16230  0ABB                     u286_20:
 16231  0ABB                     i1l3920:
 16232  0ABB  0876               	movf	___lwdiv@quotient+1,w
 16233  0ABC  00F1               	movwf	?___lwdiv+1
 16234  0ABD  0875               	movf	___lwdiv@quotient,w
 16235  0ABE  00F0               	movwf	?___lwdiv
 16236  0ABF                     i1l1819:
 16237  0ABF  0008               	return
 16238  0AC0                     __end_of___lwdiv:
 16239                           
 16240                           	psect	text50
 16241  0974                     __ptext50:	
 16242 ;; *************** function _differenceBetweenTimePeriod *****************
 16243 ;; Defined at:
 16244 ;;		line 226 in file "main.c"
 16245 ;; Parameters:    Size  Location     Type
 16246 ;;  start           3    0[COMMON] struct Time
 16247 ;;  stop            3    3[COMMON] struct Time
 16248 ;;  diff            1    6[COMMON] PTR struct Time
 16249 ;;		 -> menuLCD_ISR@diff(3), 
 16250 ;; Auto vars:     Size  Location     Type
 16251 ;;		None
 16252 ;; Return value:  Size  Location     Type
 16253 ;;                  1    wreg      void 
 16254 ;; Registers used:
 16255 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16256 ;; Tracked objects:
 16257 ;;		On entry : 0/0
 16258 ;;		On exit  : 0/0
 16259 ;;		Unchanged: 0/0
 16260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16261 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16263 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16264 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16265 ;;Total ram usage:        8 bytes
 16266 ;; Hardware stack levels used:    1
 16267 ;; This function calls:
 16268 ;;		Nothing
 16269 ;; This function is called by:
 16270 ;;		_menuLCD_ISR
 16271 ;; This function uses a non-reentrant model
 16272 ;;
 16273                           
 16274                           
 16275                           ;psect for function _differenceBetweenTimePeriod
 16276  0974                     _differenceBetweenTimePeriod:
 16277  0974                     i1l4060:	
 16278                           ;incstack = 0
 16279                           ; Regs used in _differenceBetweenTimePeriod: [wreg+fsr1l+fsr1h+status,2+status,0]
 16280                           
 16281                           
 16282                           ;main.c: 229: while (stop.s > start.s) {
 16283  0974  297B               	goto	i1l4064
 16284  0975                     i1l4062:
 16285                           
 16286                           ;main.c: 230: --start.m;
 16287  0975  3001               	movlw	1
 16288  0976  02F1               	subwf	differenceBetweenTimePeriod@start+1,f
 16289                           
 16290                           ;main.c: 231: start.s += 60;
 16291  0977  303C               	movlw	60
 16292  0978  00F7               	movwf	??_differenceBetweenTimePeriod
 16293  0979  0877               	movf	??_differenceBetweenTimePeriod,w
 16294  097A  07F2               	addwf	differenceBetweenTimePeriod@start+2,f
 16295  097B                     i1l4064:
 16296  097B  0875               	movf	differenceBetweenTimePeriod@stop+2,w
 16297  097C  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 16298  097D  1C03               	skipc
 16299  097E  2980               	goto	u329_21
 16300  097F  2981               	goto	u329_20
 16301  0980                     u329_21:
 16302  0980  2975               	goto	i1l4062
 16303  0981                     u329_20:
 16304  0981                     i1l4066:
 16305                           
 16306                           ;main.c: 232: };main.c: 233: diff->s = start.s - stop.s;
 16307  0981  0875               	movf	differenceBetweenTimePeriod@stop+2,w
 16308  0982  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 16309  0983  00F7               	movwf	??_differenceBetweenTimePeriod
 16310  0984  0876               	movf	differenceBetweenTimePeriod@diff,w
 16311  0985  3E02               	addlw	2
 16312  0986  0086               	movwf	6
 16313  0987  0187               	clrf	7
 16314  0988  0877               	movf	??_differenceBetweenTimePeriod,w
 16315  0989  0081               	movwf	1
 16316                           
 16317                           ;main.c: 234: while (stop.m > start.m) {
 16318  098A  2991               	goto	i1l4070
 16319  098B                     i1l4068:
 16320                           
 16321                           ;main.c: 235: --start.h;
 16322  098B  3001               	movlw	1
 16323  098C  02F0               	subwf	differenceBetweenTimePeriod@start,f
 16324                           
 16325                           ;main.c: 236: start.m += 60;
 16326  098D  303C               	movlw	60
 16327  098E  00F7               	movwf	??_differenceBetweenTimePeriod
 16328  098F  0877               	movf	??_differenceBetweenTimePeriod,w
 16329  0990  07F1               	addwf	differenceBetweenTimePeriod@start+1,f
 16330  0991                     i1l4070:
 16331  0991  0874               	movf	differenceBetweenTimePeriod@stop+1,w
 16332  0992  0271               	subwf	differenceBetweenTimePeriod@start+1,w
 16333  0993  1C03               	skipc
 16334  0994  2996               	goto	u330_21
 16335  0995  2997               	goto	u330_20
 16336  0996                     u330_21:
 16337  0996  298B               	goto	i1l4068
 16338  0997                     u330_20:
 16339  0997                     i1l4072:
 16340                           
 16341                           ;main.c: 237: };main.c: 238: diff->m = start.m - stop.m;
 16342  0997  0874               	movf	differenceBetweenTimePeriod@stop+1,w
 16343  0998  0271               	subwf	differenceBetweenTimePeriod@start+1,w
 16344  0999  00F7               	movwf	??_differenceBetweenTimePeriod
 16345  099A  0A76               	incf	differenceBetweenTimePeriod@diff,w
 16346  099B  0086               	movwf	6
 16347  099C  0187               	clrf	7
 16348  099D  0877               	movf	??_differenceBetweenTimePeriod,w
 16349  099E  0081               	movwf	1
 16350                           
 16351                           ;main.c: 239: diff->h = start.h - stop.h;
 16352  099F  0873               	movf	differenceBetweenTimePeriod@stop,w
 16353  09A0  0270               	subwf	differenceBetweenTimePeriod@start,w
 16354  09A1  00F7               	movwf	??_differenceBetweenTimePeriod
 16355  09A2  0876               	movf	differenceBetweenTimePeriod@diff,w
 16356  09A3  0086               	movwf	6
 16357  09A4  0187               	clrf	7
 16358  09A5  0877               	movf	??_differenceBetweenTimePeriod,w
 16359  09A6  0081               	movwf	1
 16360  09A7                     i1l1098:
 16361  09A7  0008               	return
 16362  09A8                     __end_of_differenceBetweenTimePeriod:
 16363                           
 16364                           	psect	text51
 16365  16FE                     __ptext51:	
 16366 ;; *************** function _TMR2_StartTimer *****************
 16367 ;; Defined at:
 16368 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 16369 ;; Parameters:    Size  Location     Type
 16370 ;;		None
 16371 ;; Auto vars:     Size  Location     Type
 16372 ;;		None
 16373 ;; Return value:  Size  Location     Type
 16374 ;;                  1    wreg      void 
 16375 ;; Registers used:
 16376 ;;		status,2, status,0, pclath, cstack
 16377 ;; Tracked objects:
 16378 ;;		On entry : 0/0
 16379 ;;		On exit  : 0/0
 16380 ;;		Unchanged: 0/0
 16381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16386 ;;Total ram usage:        0 bytes
 16387 ;; Hardware stack levels used:    1
 16388 ;; Hardware stack levels required when called:    1
 16389 ;; This function calls:
 16390 ;;		_TMR2_Start
 16391 ;; This function is called by:
 16392 ;;		_menuLCD_ISR
 16393 ;; This function uses a non-reentrant model
 16394 ;;
 16395                           
 16396                           
 16397                           ;psect for function _TMR2_StartTimer
 16398  16FE                     _TMR2_StartTimer:
 16399  16FE                     i1l3998:	
 16400                           ;incstack = 0
 16401                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
 16402                           
 16403                           
 16404                           ;tmr2.c: 108: TMR2_Start();
 16405  16FE  3196  26EC  3196   	fcall	_TMR2_Start
 16406  1701                     i1l761:
 16407  1701  0008               	return
 16408  1702                     __end_of_TMR2_StartTimer:
 16409                           
 16410                           	psect	text52
 16411  16EC                     __ptext52:	
 16412 ;; *************** function _TMR2_Start *****************
 16413 ;; Defined at:
 16414 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 16415 ;; Parameters:    Size  Location     Type
 16416 ;;		None
 16417 ;; Auto vars:     Size  Location     Type
 16418 ;;		None
 16419 ;; Return value:  Size  Location     Type
 16420 ;;                  1    wreg      void 
 16421 ;; Registers used:
 16422 ;;		None
 16423 ;; Tracked objects:
 16424 ;;		On entry : 0/0
 16425 ;;		On exit  : 0/0
 16426 ;;		Unchanged: 0/0
 16427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16432 ;;Total ram usage:        0 bytes
 16433 ;; Hardware stack levels used:    1
 16434 ;; This function calls:
 16435 ;;		Nothing
 16436 ;; This function is called by:
 16437 ;;		_TMR2_StartTimer
 16438 ;; This function uses a non-reentrant model
 16439 ;;
 16440                           
 16441                           
 16442                           ;psect for function _TMR2_Start
 16443  16EC                     _TMR2_Start:
 16444  16EC                     i1l3868:	
 16445                           ;incstack = 0
 16446                           ; Regs used in _TMR2_Start: []
 16447                           
 16448                           
 16449                           ;tmr2.c: 103: T2CONbits.TMR2ON = 1;
 16450  16EC  0025               	movlb	5	; select bank5
 16451  16ED  178E               	bsf	14,7	;volatile
 16452  16EE                     i1l758:
 16453  16EE  0008               	return
 16454  16EF                     __end_of_TMR2_Start:
 16455                           
 16456                           	psect	text53
 16457  16E9                     __ptext53:	
 16458 ;; *************** function _PWM_Output_D4_Enable *****************
 16459 ;; Defined at:
 16460 ;;		line 242 in file "main.c"
 16461 ;; Parameters:    Size  Location     Type
 16462 ;;		None
 16463 ;; Auto vars:     Size  Location     Type
 16464 ;;		None
 16465 ;; Return value:  Size  Location     Type
 16466 ;;                  1    wreg      void 
 16467 ;; Registers used:
 16468 ;;		None
 16469 ;; Tracked objects:
 16470 ;;		On entry : 0/0
 16471 ;;		On exit  : 0/0
 16472 ;;		Unchanged: 0/0
 16473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16478 ;;Total ram usage:        0 bytes
 16479 ;; Hardware stack levels used:    1
 16480 ;; This function calls:
 16481 ;;		Nothing
 16482 ;; This function is called by:
 16483 ;;		_menuLCD_ISR
 16484 ;; This function uses a non-reentrant model
 16485 ;;
 16486                           
 16487                           
 16488                           ;psect for function _PWM_Output_D4_Enable
 16489  16E9                     _PWM_Output_D4_Enable:
 16490  16E9                     i1l4074:	
 16491                           ;incstack = 0
 16492                           ; Regs used in _PWM_Output_D4_Enable: []
 16493                           
 16494                           
 16495                           ;main.c: 243: PWM6EN = 1;
 16496  16E9  0027               	movlb	7	; select bank7
 16497  16EA  178E               	bsf	14,7	;volatile
 16498  16EB                     i1l1101:
 16499  16EB  0008               	return
 16500  16EC                     __end_of_PWM_Output_D4_Enable:
 16501                           
 16502                           	psect	text54
 16503  17D6                     __ptext54:	
 16504 ;; *************** function _LCDstr *****************
 16505 ;; Defined at:
 16506 ;;		line 206 in file "main.c"
 16507 ;; Parameters:    Size  Location     Type
 16508 ;;  p               1    wreg     PTR unsigned char 
 16509 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 16510 ;; Auto vars:     Size  Location     Type
 16511 ;;  p               1   11[COMMON] PTR unsigned char 
 16512 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 16513 ;;  c               1   10[COMMON] unsigned char 
 16514 ;; Return value:  Size  Location     Type
 16515 ;;                  1    wreg      void 
 16516 ;; Registers used:
 16517 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16518 ;; Tracked objects:
 16519 ;;		On entry : 0/0
 16520 ;;		On exit  : 0/0
 16521 ;;		Unchanged: 0/0
 16522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16524 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16525 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16526 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16527 ;;Total ram usage:        3 bytes
 16528 ;; Hardware stack levels used:    1
 16529 ;; Hardware stack levels required when called:    3
 16530 ;; This function calls:
 16531 ;;		_LCDchar
 16532 ;; This function is called by:
 16533 ;;		_menuLCD_ISR
 16534 ;; This function uses a non-reentrant model
 16535 ;;
 16536                           
 16537                           
 16538                           ;psect for function _LCDstr
 16539  17D6                     _LCDstr:
 16540                           
 16541                           ;incstack = 0
 16542                           ; Regs used in _LCDstr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16543                           ;LCDstr@p stored from wreg
 16544  17D6  00FB               	movwf	LCDstr@p
 16545  17D7                     i1l4054:
 16546                           
 16547                           ;main.c: 208: unsigned char c;;main.c: 210: while((c = *p++)) LCDchar(c);
 16548  17D7  2FDC               	goto	i1l4058
 16549  17D8                     i1l4056:
 16550  17D8  087A               	movf	LCDstr@c,w
 16551  17D9  3197  272D  3197   	fcall	_LCDchar
 16552  17DC                     i1l4058:
 16553  17DC  087B               	movf	LCDstr@p,w
 16554  17DD  0086               	movwf	6
 16555  17DE  0187               	clrf	7
 16556  17DF  0AFB               	incf	LCDstr@p,f
 16557  17E0  0801               	movf	1,w
 16558  17E1  00F9               	movwf	??_LCDstr
 16559  17E2  0879               	movf	??_LCDstr,w
 16560  17E3  00FA               	movwf	LCDstr@c
 16561  17E4  087A               	movf	LCDstr@c,w
 16562  17E5  1D03               	btfss	3,2
 16563  17E6  2FE8               	goto	u328_21
 16564  17E7  2FE9               	goto	u328_20
 16565  17E8                     u328_21:
 16566  17E8  2FD8               	goto	i1l4056
 16567  17E9                     u328_20:
 16568  17E9                     i1l1085:
 16569  17E9  0008               	return
 16570  17EA                     __end_of_LCDstr:
 16571                           
 16572                           	psect	text55
 16573  172D                     __ptext55:	
 16574 ;; *************** function _LCDchar *****************
 16575 ;; Defined at:
 16576 ;;		line 201 in file "main.c"
 16577 ;; Parameters:    Size  Location     Type
 16578 ;;  c               1    wreg     unsigned char 
 16579 ;; Auto vars:     Size  Location     Type
 16580 ;;  c               1    8[COMMON] unsigned char 
 16581 ;; Return value:  Size  Location     Type
 16582 ;;                  1    wreg      void 
 16583 ;; Registers used:
 16584 ;;		wreg, status,2, status,0, pclath, cstack
 16585 ;; Tracked objects:
 16586 ;;		On entry : 0/0
 16587 ;;		On exit  : 0/0
 16588 ;;		Unchanged: 0/0
 16589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16593 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16594 ;;Total ram usage:        1 bytes
 16595 ;; Hardware stack levels used:    1
 16596 ;; Hardware stack levels required when called:    2
 16597 ;; This function calls:
 16598 ;;		i1_LCDsend2x4
 16599 ;; This function is called by:
 16600 ;;		_LCDstr
 16601 ;;		_menuLCD_ISR
 16602 ;; This function uses a non-reentrant model
 16603 ;;
 16604                           
 16605                           
 16606                           ;psect for function _LCDchar
 16607  172D                     _LCDchar:
 16608                           
 16609                           ;incstack = 0
 16610                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 16611                           ;LCDchar@c stored from wreg
 16612  172D  00F8               	movwf	LCDchar@c
 16613  172E                     i1l3870:
 16614                           
 16615                           ;main.c: 203: LCDsend2x4(c, 0x01);
 16616  172E  01F2               	clrf	i1LCDsend2x4@mode
 16617  172F  0AF2               	incf	i1LCDsend2x4@mode,f
 16618  1730  0878               	movf	LCDchar@c,w
 16619  1731  318C  246B  3197   	fcall	i1_LCDsend2x4
 16620  1734                     i1l1079:
 16621  1734  0008               	return
 16622  1735                     __end_of_LCDchar:
 16623                           
 16624                           	psect	text56
 16625  1726                     __ptext56:	
 16626 ;; *************** function _LCDcmd *****************
 16627 ;; Defined at:
 16628 ;;		line 196 in file "main.c"
 16629 ;; Parameters:    Size  Location     Type
 16630 ;;  c               1    wreg     unsigned char 
 16631 ;; Auto vars:     Size  Location     Type
 16632 ;;  c               1    8[COMMON] unsigned char 
 16633 ;; Return value:  Size  Location     Type
 16634 ;;                  1    wreg      void 
 16635 ;; Registers used:
 16636 ;;		wreg, status,2, status,0, pclath, cstack
 16637 ;; Tracked objects:
 16638 ;;		On entry : 0/0
 16639 ;;		On exit  : 0/0
 16640 ;;		Unchanged: 0/0
 16641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16645 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16646 ;;Total ram usage:        1 bytes
 16647 ;; Hardware stack levels used:    1
 16648 ;; Hardware stack levels required when called:    2
 16649 ;; This function calls:
 16650 ;;		i1_LCDsend2x4
 16651 ;; This function is called by:
 16652 ;;		_menuLCD_ISR
 16653 ;; This function uses a non-reentrant model
 16654 ;;
 16655                           
 16656                           
 16657                           ;psect for function _LCDcmd
 16658  1726                     _LCDcmd:
 16659                           
 16660                           ;incstack = 0
 16661                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 16662                           ;LCDcmd@c stored from wreg
 16663  1726  00F8               	movwf	LCDcmd@c
 16664  1727                     i1l4052:
 16665                           
 16666                           ;main.c: 198: LCDsend2x4(c, 0);
 16667  1727  01F2               	clrf	i1LCDsend2x4@mode
 16668  1728  0878               	movf	LCDcmd@c,w
 16669  1729  318C  246B  3197   	fcall	i1_LCDsend2x4
 16670  172C                     i1l1076:
 16671  172C  0008               	return
 16672  172D                     __end_of_LCDcmd:
 16673                           
 16674                           	psect	text57
 16675  0C6B                     __ptext57:	
 16676 ;; *************** function i1_LCDsend2x4 *****************
 16677 ;; Defined at:
 16678 ;;		line 150 in file "main.c"
 16679 ;; Parameters:    Size  Location     Type
 16680 ;;  c               1    wreg     unsigned char 
 16681 ;;  mode            1    2[COMMON] unsigned char 
 16682 ;; Auto vars:     Size  Location     Type
 16683 ;;  c               1    5[COMMON] unsigned char 
 16684 ;;  lc              1    7[COMMON] unsigned char 
 16685 ;;  hc              1    6[COMMON] unsigned char 
 16686 ;; Return value:  Size  Location     Type
 16687 ;;                  1    wreg      void 
 16688 ;; Registers used:
 16689 ;;		wreg, status,2, status,0, pclath, cstack
 16690 ;; Tracked objects:
 16691 ;;		On entry : 0/0
 16692 ;;		On exit  : 0/0
 16693 ;;		Unchanged: 0/0
 16694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16695 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16696 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16697 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16698 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16699 ;;Total ram usage:        6 bytes
 16700 ;; Hardware stack levels used:    1
 16701 ;; Hardware stack levels required when called:    1
 16702 ;; This function calls:
 16703 ;;		i1_WriteI2C
 16704 ;; This function is called by:
 16705 ;;		_LCDcmd
 16706 ;;		_LCDchar
 16707 ;; This function uses a non-reentrant model
 16708 ;;
 16709                           
 16710                           
 16711                           ;psect for function i1_LCDsend2x4
 16712  0C6B                     i1_LCDsend2x4:
 16713                           
 16714                           ;incstack = 0
 16715                           ; Regs used in i1_LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 16716                           ;i1LCDsend2x4@c stored from wreg
 16717  0C6B  00F5               	movwf	i1LCDsend2x4@c
 16718  0C6C                     i1l3822:
 16719                           
 16720                           ;main.c: 152: unsigned char hc;;main.c: 153: unsigned char lc;;main.c: 155: hc = c & 0xf
      +                          0;
 16721  0C6C  0875               	movf	i1LCDsend2x4@c,w
 16722  0C6D  39F0               	andlw	240
 16723  0C6E  00F3               	movwf	??i1_LCDsend2x4
 16724  0C6F  0873               	movf	??i1_LCDsend2x4,w
 16725  0C70  00F6               	movwf	i1LCDsend2x4@hc
 16726  0C71                     i1l3824:
 16727                           
 16728                           ;main.c: 156: lc = (c << 4) & 0xf0;
 16729  0C71  0875               	movf	i1LCDsend2x4@c,w
 16730  0C72  00F3               	movwf	??i1_LCDsend2x4
 16731  0C73  3003               	movlw	3
 16732  0C74                     u259_25:
 16733  0C74  35F3               	lslf	??i1_LCDsend2x4,f
 16734  0C75  3EFF               	addlw	-1
 16735  0C76  1D03               	skipz
 16736  0C77  2C74               	goto	u259_25
 16737  0C78  3573               	lslf	??i1_LCDsend2x4,w
 16738  0C79  39F0               	andlw	240
 16739  0C7A  00F4               	movwf	??i1_LCDsend2x4+1
 16740  0C7B  0874               	movf	??i1_LCDsend2x4+1,w
 16741  0C7C  00F7               	movwf	i1LCDsend2x4@lc
 16742  0C7D                     i1l3826:	
 16743                           ;main.c: 158: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16744                           
 16745  0C7D  0023               	movlb	3	; select bank3
 16746  0C7E  0C0F               	rrf	15,w	;volatile
 16747  0C7F  0C89               	rrf	9,f
 16748  0C80  3901               	andlw	1
 16749  0C81  00F3               	movwf	??i1_LCDsend2x4
 16750  0C82  0811               	movf	17,w	;volatile
 16751  0C83  391F               	andlw	31
 16752  0C84  0473               	iorwf	??i1_LCDsend2x4,w
 16753  0C85  1D03               	btfss	3,2
 16754  0C86  2C88               	goto	u260_21
 16755  0C87  2C89               	goto	u260_20
 16756  0C88                     u260_21:
 16757  0C88  2C7D               	goto	i1l3826
 16758  0C89                     u260_20:
 16759  0C89                     i1l1039:
 16760                           
 16761                           ;main.c: 159: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 16762  0C89  1411               	bsf	17,0	;volatile
 16763  0C8A                     i1l1040:
 16764  0C8A  1811               	btfsc	17,0	;volatile
 16765  0C8B  2C8D               	goto	u261_21
 16766  0C8C  2C8E               	goto	u261_20
 16767  0C8D                     u261_21:
 16768  0C8D  2C8A               	goto	i1l1040
 16769  0C8E                     u261_20:
 16770  0C8E                     i1l3828:
 16771  0C8E  0C0F               	rrf	15,w	;volatile
 16772  0C8F  0C89               	rrf	9,f
 16773  0C90  3901               	andlw	1
 16774  0C91  00F3               	movwf	??i1_LCDsend2x4
 16775  0C92  0811               	movf	17,w	;volatile
 16776  0C93  391F               	andlw	31
 16777  0C94  0473               	iorwf	??i1_LCDsend2x4,w
 16778  0C95  1D03               	btfss	3,2
 16779  0C96  2C98               	goto	u262_21
 16780  0C97  2C99               	goto	u262_20
 16781  0C98                     u262_21:
 16782  0C98  2C8E               	goto	i1l3828
 16783  0C99                     u262_20:
 16784  0C99                     i1l3830:
 16785                           
 16786                           ;main.c: 160: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16787  0C99  304E               	movlw	78
 16788  0C9A  318A  22FD  318C   	fcall	i1_WriteI2C
 16789  0C9D                     i1l3832:
 16790  0C9D  0023               	movlb	3	; select bank3
 16791  0C9E  0C0F               	rrf	15,w	;volatile
 16792  0C9F  0C89               	rrf	9,f
 16793  0CA0  3901               	andlw	1
 16794  0CA1  00F3               	movwf	??i1_LCDsend2x4
 16795  0CA2  0811               	movf	17,w	;volatile
 16796  0CA3  391F               	andlw	31
 16797  0CA4  0473               	iorwf	??i1_LCDsend2x4,w
 16798  0CA5  1D03               	btfss	3,2
 16799  0CA6  2CA8               	goto	u263_21
 16800  0CA7  2CA9               	goto	u263_20
 16801  0CA8                     u263_21:
 16802  0CA8  2C9D               	goto	i1l3832
 16803  0CA9                     u263_20:
 16804  0CA9                     i1l3834:
 16805                           
 16806                           ;main.c: 161: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 16807  0CA9  0876               	movf	i1LCDsend2x4@hc,w
 16808  0CAA  0472               	iorwf	i1LCDsend2x4@mode,w
 16809  0CAB  3808               	iorlw	8
 16810  0CAC  318A  22FD  318C   	fcall	i1_WriteI2C
 16811  0CAF                     i1l3836:
 16812  0CAF  0023               	movlb	3	; select bank3
 16813  0CB0  0C0F               	rrf	15,w	;volatile
 16814  0CB1  0C89               	rrf	9,f
 16815  0CB2  3901               	andlw	1
 16816  0CB3  00F3               	movwf	??i1_LCDsend2x4
 16817  0CB4  0811               	movf	17,w	;volatile
 16818  0CB5  391F               	andlw	31
 16819  0CB6  0473               	iorwf	??i1_LCDsend2x4,w
 16820  0CB7  1D03               	btfss	3,2
 16821  0CB8  2CBA               	goto	u264_21
 16822  0CB9  2CBB               	goto	u264_20
 16823  0CBA                     u264_21:
 16824  0CBA  2CAF               	goto	i1l3836
 16825  0CBB                     u264_20:
 16826  0CBB                     i1l3838:
 16827                           
 16828                           ;main.c: 162: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 16829  0CBB  0876               	movf	i1LCDsend2x4@hc,w
 16830  0CBC  0472               	iorwf	i1LCDsend2x4@mode,w
 16831  0CBD  380C               	iorlw	12
 16832  0CBE  318A  22FD  318C   	fcall	i1_WriteI2C
 16833  0CC1                     i1l3840:
 16834  0CC1  0023               	movlb	3	; select bank3
 16835  0CC2  0C0F               	rrf	15,w	;volatile
 16836  0CC3  0C89               	rrf	9,f
 16837  0CC4  3901               	andlw	1
 16838  0CC5  00F3               	movwf	??i1_LCDsend2x4
 16839  0CC6  0811               	movf	17,w	;volatile
 16840  0CC7  391F               	andlw	31
 16841  0CC8  0473               	iorwf	??i1_LCDsend2x4,w
 16842  0CC9  1D03               	btfss	3,2
 16843  0CCA  2CCC               	goto	u265_21
 16844  0CCB  2CCD               	goto	u265_20
 16845  0CCC                     u265_21:
 16846  0CCC  2CC1               	goto	i1l3840
 16847  0CCD                     u265_20:
 16848  0CCD                     i1l1054:
 16849  0CCD                     i1l3842:	
 16850                           ;main.c: 163: _delay((unsigned long)((1)*(1000000/4000000.0)));
 16851                           
 16852                           
 16853                           ;main.c: 164: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 16854  0CCD  0876               	movf	i1LCDsend2x4@hc,w
 16855  0CCE  0472               	iorwf	i1LCDsend2x4@mode,w
 16856  0CCF  3808               	iorlw	8
 16857  0CD0  318A  22FD  318C   	fcall	i1_WriteI2C
 16858  0CD3                     i1l3844:
 16859  0CD3  0023               	movlb	3	; select bank3
 16860  0CD4  0C0F               	rrf	15,w	;volatile
 16861  0CD5  0C89               	rrf	9,f
 16862  0CD6  3901               	andlw	1
 16863  0CD7  00F3               	movwf	??i1_LCDsend2x4
 16864  0CD8  0811               	movf	17,w	;volatile
 16865  0CD9  391F               	andlw	31
 16866  0CDA  0473               	iorwf	??i1_LCDsend2x4,w
 16867  0CDB  1D03               	btfss	3,2
 16868  0CDC  2CDE               	goto	u266_21
 16869  0CDD  2CDF               	goto	u266_20
 16870  0CDE                     u266_21:
 16871  0CDE  2CD3               	goto	i1l3844
 16872  0CDF                     u266_20:
 16873  0CDF                     i1l3846:
 16874                           
 16875                           ;main.c: 165: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 16876  0CDF  0877               	movf	i1LCDsend2x4@lc,w
 16877  0CE0  0472               	iorwf	i1LCDsend2x4@mode,w
 16878  0CE1  3808               	iorlw	8
 16879  0CE2  318A  22FD  318C   	fcall	i1_WriteI2C
 16880  0CE5                     i1l3848:
 16881  0CE5  0023               	movlb	3	; select bank3
 16882  0CE6  0C0F               	rrf	15,w	;volatile
 16883  0CE7  0C89               	rrf	9,f
 16884  0CE8  3901               	andlw	1
 16885  0CE9  00F3               	movwf	??i1_LCDsend2x4
 16886  0CEA  0811               	movf	17,w	;volatile
 16887  0CEB  391F               	andlw	31
 16888  0CEC  0473               	iorwf	??i1_LCDsend2x4,w
 16889  0CED  1D03               	btfss	3,2
 16890  0CEE  2CF0               	goto	u267_21
 16891  0CEF  2CF1               	goto	u267_20
 16892  0CF0                     u267_21:
 16893  0CF0  2CE5               	goto	i1l3848
 16894  0CF1                     u267_20:
 16895  0CF1                     i1l3850:
 16896                           
 16897                           ;main.c: 166: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 16898  0CF1  0877               	movf	i1LCDsend2x4@lc,w
 16899  0CF2  0472               	iorwf	i1LCDsend2x4@mode,w
 16900  0CF3  380C               	iorlw	12
 16901  0CF4  318A  22FD  318C   	fcall	i1_WriteI2C
 16902  0CF7                     i1l3852:
 16903  0CF7  0023               	movlb	3	; select bank3
 16904  0CF8  0C0F               	rrf	15,w	;volatile
 16905  0CF9  0C89               	rrf	9,f
 16906  0CFA  3901               	andlw	1
 16907  0CFB  00F3               	movwf	??i1_LCDsend2x4
 16908  0CFC  0811               	movf	17,w	;volatile
 16909  0CFD  391F               	andlw	31
 16910  0CFE  0473               	iorwf	??i1_LCDsend2x4,w
 16911  0CFF  1D03               	btfss	3,2
 16912  0D00  2D02               	goto	u268_21
 16913  0D01  2D03               	goto	u268_20
 16914  0D02                     u268_21:
 16915  0D02  2CF7               	goto	i1l3852
 16916  0D03                     u268_20:
 16917  0D03                     i1l1063:
 16918  0D03                     i1l3854:	
 16919                           ;main.c: 167: _delay((unsigned long)((1)*(1000000/4000000.0)));
 16920                           
 16921                           
 16922                           ;main.c: 168: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 16923  0D03  0877               	movf	i1LCDsend2x4@lc,w
 16924  0D04  0472               	iorwf	i1LCDsend2x4@mode,w
 16925  0D05  3808               	iorlw	8
 16926  0D06  318A  22FD  318C   	fcall	i1_WriteI2C
 16927  0D09                     i1l3856:
 16928  0D09  0023               	movlb	3	; select bank3
 16929  0D0A  0C0F               	rrf	15,w	;volatile
 16930  0D0B  0C89               	rrf	9,f
 16931  0D0C  3901               	andlw	1
 16932  0D0D  00F3               	movwf	??i1_LCDsend2x4
 16933  0D0E  0811               	movf	17,w	;volatile
 16934  0D0F  391F               	andlw	31
 16935  0D10  0473               	iorwf	??i1_LCDsend2x4,w
 16936  0D11  1D03               	btfss	3,2
 16937  0D12  2D14               	goto	u269_21
 16938  0D13  2D15               	goto	u269_20
 16939  0D14                     u269_21:
 16940  0D14  2D09               	goto	i1l3856
 16941  0D15                     u269_20:
 16942  0D15                     i1l1066:
 16943                           
 16944                           ;main.c: 169: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 16945  0D15  1511               	bsf	17,2	;volatile
 16946  0D16                     i1l1067:
 16947  0D16  1911               	btfsc	17,2	;volatile
 16948  0D17  2D19               	goto	u270_21
 16949  0D18  2D1A               	goto	u270_20
 16950  0D19                     u270_21:
 16951  0D19  2D16               	goto	i1l1067
 16952  0D1A                     u270_20:
 16953  0D1A                     i1l3858:
 16954                           
 16955                           ;main.c: 170: _delay((unsigned long)((50)*(1000000/4000000.0)));
 16956  0D1A  3004               	movlw	4
 16957  0D1B                     u511_27:
 16958  0D1B  0B89               	decfsz	9,f
 16959  0D1C  2D1B               	goto	u511_27
 16960  0D1D                     i1l1070:
 16961  0D1D  0008               	return
 16962  0D1E                     __end_ofi1_LCDsend2x4:
 16963                           
 16964                           	psect	text58
 16965  0AFD                     __ptext58:	
 16966 ;; *************** function i1_WriteI2C *****************
 16967 ;; Defined at:
 16968 ;;		line 47 in file "I2C/i2c.c"
 16969 ;; Parameters:    Size  Location     Type
 16970 ;;  data_out        1    wreg     unsigned char 
 16971 ;; Auto vars:     Size  Location     Type
 16972 ;;  data_out        1    1[COMMON] unsigned char 
 16973 ;; Return value:  Size  Location     Type
 16974 ;;                  1    wreg      char 
 16975 ;; Registers used:
 16976 ;;		wreg, status,2, status,0
 16977 ;; Tracked objects:
 16978 ;;		On entry : 0/0
 16979 ;;		On exit  : 0/0
 16980 ;;		Unchanged: 0/0
 16981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16984 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16985 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16986 ;;Total ram usage:        2 bytes
 16987 ;; Hardware stack levels used:    1
 16988 ;; This function calls:
 16989 ;;		Nothing
 16990 ;; This function is called by:
 16991 ;;		_tsttc
 16992 ;;		i1_LCDsend2x4
 16993 ;; This function uses a non-reentrant model
 16994 ;;
 16995                           
 16996                           
 16997                           ;psect for function i1_WriteI2C
 16998  0AFD                     i1_WriteI2C:
 16999                           
 17000                           ;incstack = 0
 17001                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 17002                           ;i1WriteI2C@data_out stored from wreg
 17003  0AFD  00F1               	movwf	i1WriteI2C@data_out
 17004  0AFE                     i1l3792:
 17005                           
 17006                           ;i2c.c: 49: SSP1BUF = data_out;
 17007  0AFE  0871               	movf	i1WriteI2C@data_out,w
 17008  0AFF  0023               	movlb	3	; select bank3
 17009  0B00  008C               	movwf	12	;volatile
 17010  0B01                     i1l3794:
 17011                           
 17012                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 17013  0B01  1F90               	btfss	16,7	;volatile
 17014  0B02  2B04               	goto	u250_21
 17015  0B03  2B05               	goto	u250_20
 17016  0B04                     u250_21:
 17017  0B04  2B06               	goto	i1l3800
 17018  0B05                     u250_20:
 17019  0B05  2B47               	goto	i1l30
 17020  0B06                     i1l3800:
 17021                           
 17022                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 17023  0B06  300F               	movlw	15
 17024  0B07  0510               	andwf	16,w	;volatile
 17025  0B08  00F0               	movwf	??i1_WriteI2C
 17026  0B09  3008               	movlw	8
 17027  0B0A  0670               	xorwf	??i1_WriteI2C,w
 17028  0B0B  1903               	btfsc	3,2
 17029  0B0C  2B0E               	goto	u251_21
 17030  0B0D  2B0F               	goto	u251_20
 17031  0B0E                     u251_21:
 17032  0B0E  2B25               	goto	i1l3812
 17033  0B0F                     u251_20:
 17034  0B0F                     i1l3802:
 17035  0B0F  300F               	movlw	15
 17036  0B10  0510               	andwf	16,w	;volatile
 17037  0B11  00F0               	movwf	??i1_WriteI2C
 17038  0B12  300B               	movlw	11
 17039  0B13  0670               	xorwf	??i1_WriteI2C,w
 17040  0B14  1903               	btfsc	3,2
 17041  0B15  2B17               	goto	u252_21
 17042  0B16  2B18               	goto	u252_20
 17043  0B17                     u252_21:
 17044  0B17  2B25               	goto	i1l3812
 17045  0B18                     u252_20:
 17046  0B18                     i1l3804:
 17047                           
 17048                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 17049  0B18  1610               	bsf	16,4	;volatile
 17050  0B19                     i1l33:	
 17051                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 17052                           
 17053  0B19  002E               	movlb	14	; select bank14
 17054  0B1A  1C0F               	btfss	15,0	;volatile
 17055  0B1B  2B1D               	goto	u253_21
 17056  0B1C  2B1E               	goto	u253_20
 17057  0B1D                     u253_21:
 17058  0B1D  2B19               	goto	i1l33
 17059  0B1E                     u253_20:
 17060  0B1E                     i1l35:
 17061                           
 17062                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 17063  0B1E  0023               	movlb	3	; select bank3
 17064  0B1F  190F               	btfsc	15,2	;volatile
 17065  0B20  2B22               	goto	u254_21
 17066  0B21  2B23               	goto	u254_20
 17067  0B22                     u254_21:
 17068  0B22  2B47               	goto	i1l30
 17069  0B23                     u254_20:
 17070  0B23                     i1l3806:
 17071  0B23  080F               	movf	15,w	;volatile
 17072  0B24  2B47               	goto	i1l30
 17073  0B25                     i1l3812:
 17074                           
 17075                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 17076  0B25  300F               	movlw	15
 17077  0B26  0510               	andwf	16,w	;volatile
 17078  0B27  00F0               	movwf	??i1_WriteI2C
 17079  0B28  3008               	movlw	8
 17080  0B29  0670               	xorwf	??i1_WriteI2C,w
 17081  0B2A  1903               	btfsc	3,2
 17082  0B2B  2B2D               	goto	u255_21
 17083  0B2C  2B2E               	goto	u255_20
 17084  0B2D                     u255_21:
 17085  0B2D  2B37               	goto	i1l42
 17086  0B2E                     u255_20:
 17087  0B2E                     i1l3814:
 17088  0B2E  300F               	movlw	15
 17089  0B2F  0510               	andwf	16,w	;volatile
 17090  0B30  00F0               	movwf	??i1_WriteI2C
 17091  0B31  300B               	movlw	11
 17092  0B32  0670               	xorwf	??i1_WriteI2C,w
 17093  0B33  1D03               	btfss	3,2
 17094  0B34  2B36               	goto	u256_21
 17095  0B35  2B37               	goto	u256_20
 17096  0B36                     u256_21:
 17097  0B36  2B47               	goto	i1l30
 17098  0B37                     u256_20:
 17099  0B37                     i1l42:
 17100  0B37  180F               	btfsc	15,0	;volatile
 17101  0B38  2B3A               	goto	u257_21
 17102  0B39  2B3B               	goto	u257_20
 17103  0B3A                     u257_21:
 17104  0B3A  2B37               	goto	i1l42
 17105  0B3B                     u257_20:
 17106  0B3B                     i1l3816:
 17107  0B3B  0C0F               	rrf	15,w	;volatile
 17108  0B3C  0C89               	rrf	9,f
 17109  0B3D  3901               	andlw	1
 17110  0B3E  00F0               	movwf	??i1_WriteI2C
 17111  0B3F  0811               	movf	17,w	;volatile
 17112  0B40  391F               	andlw	31
 17113  0B41  0470               	iorwf	??i1_WriteI2C,w
 17114  0B42  1D03               	btfss	3,2
 17115  0B43  2B45               	goto	u258_21
 17116  0B44  2B46               	goto	u258_20
 17117  0B45                     u258_21:
 17118  0B45  2B3B               	goto	i1l3816
 17119  0B46                     u258_20:
 17120  0B46                     i1l47:
 17121                           
 17122                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 17123  0B46  0811               	movf	17,w	;volatile
 17124  0B47                     i1l30:
 17125  0B47  0008               	return
 17126  0B48                     __end_ofi1_WriteI2C:
 17127                           
 17128                           	psect	text59
 17129  1790                     __ptext59:	
 17130 ;; *************** function _TMR3_WriteTimer *****************
 17131 ;; Defined at:
 17132 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 17133 ;; Parameters:    Size  Location     Type
 17134 ;;  timerVal        2    0[COMMON] unsigned int 
 17135 ;; Auto vars:     Size  Location     Type
 17136 ;;		None
 17137 ;; Return value:  Size  Location     Type
 17138 ;;                  1    wreg      void 
 17139 ;; Registers used:
 17140 ;;		wreg, status,2
 17141 ;; Tracked objects:
 17142 ;;		On entry : 0/0
 17143 ;;		On exit  : 0/0
 17144 ;;		Unchanged: 0/0
 17145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17146 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17149 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17150 ;;Total ram usage:        2 bytes
 17151 ;; Hardware stack levels used:    1
 17152 ;; This function calls:
 17153 ;;		Nothing
 17154 ;; This function is called by:
 17155 ;;		_TMR3_ISR
 17156 ;;		_TMR3_Reload
 17157 ;; This function uses a non-reentrant model
 17158 ;;
 17159                           
 17160                           
 17161                           ;psect for function _TMR3_WriteTimer
 17162  1790                     _TMR3_WriteTimer:
 17163  1790                     i1l4370:	
 17164                           ;incstack = 0
 17165                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 17166                           
 17167                           
 17168                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 17169  1790  0024               	movlb	4	; select bank4
 17170  1791  1D14               	btfss	20,2	;volatile
 17171  1792  2F94               	goto	u352_21
 17172  1793  2F95               	goto	u352_20
 17173  1794                     u352_21:
 17174  1794  2F9C               	goto	i1l4380
 17175  1795                     u352_20:
 17176  1795                     i1l4372:
 17177                           
 17178                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 17179  1795  1014               	bcf	20,0	;volatile
 17180  1796                     i1l4374:
 17181                           
 17182                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 17183  1796  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 17184  1797  0093               	movwf	19	;volatile
 17185  1798                     i1l4376:
 17186                           
 17187                           ;tmr3.c: 136: TMR3L = timerVal;
 17188  1798  0870               	movf	TMR3_WriteTimer@timerVal,w
 17189  1799  0092               	movwf	18	;volatile
 17190  179A                     i1l4378:
 17191                           
 17192                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 17193  179A  1414               	bsf	20,0	;volatile
 17194                           
 17195                           ;tmr3.c: 140: }
 17196  179B  2FA0               	goto	i1l465
 17197  179C                     i1l4380:
 17198                           
 17199                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 17200  179C  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 17201  179D  0093               	movwf	19	;volatile
 17202  179E                     i1l4382:
 17203                           
 17204                           ;tmr3.c: 145: TMR3L = timerVal;
 17205  179E  0870               	movf	TMR3_WriteTimer@timerVal,w
 17206  179F  0092               	movwf	18	;volatile
 17207  17A0                     i1l465:
 17208  17A0  0008               	return
 17209  17A1                     __end_of_TMR3_WriteTimer:
 17210                           
 17211                           	psect	text60
 17212  080B                     __ptext60:	
 17213 ;; *************** function _TMR1_ISR *****************
 17214 ;; Defined at:
 17215 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 17216 ;; Parameters:    Size  Location     Type
 17217 ;;		None
 17218 ;; Auto vars:     Size  Location     Type
 17219 ;;		None
 17220 ;; Return value:  Size  Location     Type
 17221 ;;                  1    wreg      void 
 17222 ;; Registers used:
 17223 ;;		wreg, status,2, status,0, pclath, cstack
 17224 ;; Tracked objects:
 17225 ;;		On entry : 0/0
 17226 ;;		On exit  : 0/0
 17227 ;;		Unchanged: 0/0
 17228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17233 ;;Total ram usage:        0 bytes
 17234 ;; Hardware stack levels used:    1
 17235 ;; Hardware stack levels required when called:    2
 17236 ;; This function calls:
 17237 ;;		Absolute function
 17238 ;;		_Clock_ISR
 17239 ;;		_TMR1_DefaultInterruptHandler
 17240 ;;		_TMR1_WriteTimer
 17241 ;; This function is called by:
 17242 ;;		_INTERRUPT_InterruptManager
 17243 ;; This function uses a non-reentrant model
 17244 ;;
 17245                           
 17246                           
 17247                           ;psect for function _TMR1_ISR
 17248  080B                     _TMR1_ISR:
 17249  080B                     i1l4724:	
 17250                           ;incstack = 0
 17251                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 17252                           
 17253                           
 17254                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 17255  080B  002E               	movlb	14	; select bank14
 17256  080C  1010               	bcf	16,0	;volatile
 17257  080D                     i1l4726:
 17258                           
 17259                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 17260  080D  0021               	movlb	1	; select bank1
 17261  080E  0838               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 17262  080F  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 17263  0810  0837               	movf	_timer1ReloadVal^(0+128),w	;volatile
 17264  0811  00F0               	movwf	TMR1_WriteTimer@timerVal
 17265  0812  3197  277F  3188   	fcall	_TMR1_WriteTimer
 17266  0815                     i1l4728:
 17267                           
 17268                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 17269  0815  0021               	movlb	1	; select bank1
 17270  0816  0835               	movf	_TMR1_InterruptHandler^(0+128),w
 17271  0817  0436               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 17272  0818  1903               	btfsc	3,2
 17273  0819  281B               	goto	u418_21
 17274  081A  281C               	goto	u418_20
 17275  081B                     u418_21:
 17276  081B  2821               	goto	i1l414
 17277  081C                     u418_20:
 17278  081C                     i1l4730:
 17279                           
 17280                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 17281  081C  0836               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 17282  081D  008A               	movwf	10
 17283  081E  0835               	movf	_TMR1_InterruptHandler^(0+128),w
 17284  081F  000A               	callw
 17285  0820  3188               	pagesel	$
 17286  0821                     i1l414:
 17287  0821  0008               	return
 17288  0822                     __end_of_TMR1_ISR:
 17289                           
 17290                           	psect	text61
 17291  177F                     __ptext61:	
 17292 ;; *************** function _TMR1_WriteTimer *****************
 17293 ;; Defined at:
 17294 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 17295 ;; Parameters:    Size  Location     Type
 17296 ;;  timerVal        2    0[COMMON] unsigned int 
 17297 ;; Auto vars:     Size  Location     Type
 17298 ;;		None
 17299 ;; Return value:  Size  Location     Type
 17300 ;;                  1    wreg      void 
 17301 ;; Registers used:
 17302 ;;		wreg, status,2
 17303 ;; Tracked objects:
 17304 ;;		On entry : 0/0
 17305 ;;		On exit  : 0/0
 17306 ;;		Unchanged: 0/0
 17307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17311 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17312 ;;Total ram usage:        2 bytes
 17313 ;; Hardware stack levels used:    1
 17314 ;; This function calls:
 17315 ;;		Nothing
 17316 ;; This function is called by:
 17317 ;;		_TMR1_ISR
 17318 ;;		_TMR1_Reload
 17319 ;; This function uses a non-reentrant model
 17320 ;;
 17321                           
 17322                           
 17323                           ;psect for function _TMR1_WriteTimer
 17324  177F                     _TMR1_WriteTimer:
 17325  177F                     i1l4356:	
 17326                           ;incstack = 0
 17327                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 17328                           
 17329                           
 17330                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 17331  177F  0024               	movlb	4	; select bank4
 17332  1780  1D0E               	btfss	14,2	;volatile
 17333  1781  2F83               	goto	u351_21
 17334  1782  2F84               	goto	u351_20
 17335  1783                     u351_21:
 17336  1783  2F8B               	goto	i1l4366
 17337  1784                     u351_20:
 17338  1784                     i1l4358:
 17339                           
 17340                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 17341  1784  100E               	bcf	14,0	;volatile
 17342  1785                     i1l4360:
 17343                           
 17344                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 17345  1785  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17346  1786  008D               	movwf	13	;volatile
 17347  1787                     i1l4362:
 17348                           
 17349                           ;tmr1.c: 136: TMR1L = timerVal;
 17350  1787  0870               	movf	TMR1_WriteTimer@timerVal,w
 17351  1788  008C               	movwf	12	;volatile
 17352  1789                     i1l4364:
 17353                           
 17354                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 17355  1789  140E               	bsf	14,0	;volatile
 17356                           
 17357                           ;tmr1.c: 140: }
 17358  178A  2F8F               	goto	i1l401
 17359  178B                     i1l4366:
 17360                           
 17361                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 17362  178B  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17363  178C  008D               	movwf	13	;volatile
 17364  178D                     i1l4368:
 17365                           
 17366                           ;tmr1.c: 145: TMR1L = timerVal;
 17367  178D  0870               	movf	TMR1_WriteTimer@timerVal,w
 17368  178E  008C               	movwf	12	;volatile
 17369  178F                     i1l401:
 17370  178F  0008               	return
 17371  1790                     __end_of_TMR1_WriteTimer:
 17372                           
 17373                           	psect	text62
 17374  0DF2                     __ptext62:	
 17375 ;; *************** function _Clock_ISR *****************
 17376 ;; Defined at:
 17377 ;;		line 289 in file "main.c"
 17378 ;; Parameters:    Size  Location     Type
 17379 ;;		None
 17380 ;; Auto vars:     Size  Location     Type
 17381 ;;		None
 17382 ;; Return value:  Size  Location     Type
 17383 ;;                  1    wreg      void 
 17384 ;; Registers used:
 17385 ;;		wreg, status,2, status,0, pclath, cstack
 17386 ;; Tracked objects:
 17387 ;;		On entry : 0/0
 17388 ;;		On exit  : 0/0
 17389 ;;		Unchanged: 0/0
 17390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17393 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17394 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17395 ;;Total ram usage:        1 bytes
 17396 ;; Hardware stack levels used:    1
 17397 ;; Hardware stack levels required when called:    1
 17398 ;; This function calls:
 17399 ;;		i1_DATAEE_WriteByte
 17400 ;; This function is called by:
 17401 ;;		_main
 17402 ;;		_TMR1_ISR
 17403 ;; This function uses a non-reentrant model
 17404 ;;
 17405                           
 17406                           
 17407                           ;psect for function _Clock_ISR
 17408  0DF2                     _Clock_ISR:
 17409  0DF2                     i1l4452:	
 17410                           ;incstack = 0
 17411                           ; Regs used in _Clock_ISR: [wreg+status,2+status,0+pclath+cstack]
 17412                           
 17413                           
 17414                           ;main.c: 291: t.s++;
 17415  0DF2  3001               	movlw	1
 17416  0DF3  00FA               	movwf	??_Clock_ISR
 17417  0DF4  087A               	movf	??_Clock_ISR,w
 17418  0DF5  0020               	movlb	0	; select bank0
 17419  0DF6  07D9               	addwf	_t+2,f
 17420                           
 17421                           ;main.c: 293: if(t.s==60){
 17422  0DF7  303C               	movlw	60
 17423  0DF8  0659               	xorwf	_t+2,w
 17424  0DF9  1D03               	btfss	3,2
 17425  0DFA  2DFC               	goto	u372_21
 17426  0DFB  2DFD               	goto	u372_20
 17427  0DFC                     u372_21:
 17428  0DFC  2EAA               	goto	i1l4484
 17429  0DFD                     u372_20:
 17430  0DFD                     i1l4454:
 17431                           
 17432                           ;main.c: 294: t.m++;
 17433  0DFD  3001               	movlw	1
 17434  0DFE  00FA               	movwf	??_Clock_ISR
 17435  0DFF  087A               	movf	??_Clock_ISR,w
 17436  0E00  07D8               	addwf	_t+1,f
 17437  0E01                     i1l4456:
 17438                           
 17439                           ;main.c: 295: t.s=0;
 17440  0E01  01D9               	clrf	_t+2
 17441  0E02                     i1l4458:
 17442                           
 17443                           ;main.c: 298: DATAEE_WriteByte( 0x7000 + (1 * 8), NREG);
 17444  0E02  3008               	movlw	8
 17445  0E03  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17446  0E04  3070               	movlw	112
 17447  0E05  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17448  0E06  0867               	movf	_NREG,w
 17449  0E07  00FA               	movwf	??_Clock_ISR
 17450  0E08  087A               	movf	??_Clock_ISR,w
 17451  0E09  00F8               	movwf	i1DATAEE_WriteByte@bData
 17452  0E0A  3188  20B6  318D   	fcall	i1_DATAEE_WriteByte
 17453  0E0D                     i1l4460:
 17454                           
 17455                           ;main.c: 299: DATAEE_WriteByte( 0x7000 + (2 * 8), PMON);
 17456  0E0D  3010               	movlw	16
 17457  0E0E  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17458  0E0F  3070               	movlw	112
 17459  0E10  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17460  0E11  0021               	movlb	1	; select bank1
 17461  0E12  0840               	movf	_PMON^(0+128),w
 17462  0E13  00FA               	movwf	??_Clock_ISR
 17463  0E14  087A               	movf	??_Clock_ISR,w
 17464  0E15  00F8               	movwf	i1DATAEE_WriteByte@bData
 17465  0E16  3188  20B6  318D   	fcall	i1_DATAEE_WriteByte
 17466  0E19                     i1l4462:
 17467                           
 17468                           ;main.c: 300: DATAEE_WriteByte( 0x7000 + (3 * 8), TALA);
 17469  0E19  3018               	movlw	24
 17470  0E1A  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17471  0E1B  3070               	movlw	112
 17472  0E1C  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17473  0E1D  0020               	movlb	0	; select bank0
 17474  0E1E  0866               	movf	_TALA,w
 17475  0E1F  00FA               	movwf	??_Clock_ISR
 17476  0E20  087A               	movf	??_Clock_ISR,w
 17477  0E21  00F8               	movwf	i1DATAEE_WriteByte@bData
 17478  0E22  3188  20B6  318D   	fcall	i1_DATAEE_WriteByte
 17479  0E25                     i1l4464:
 17480                           
 17481                           ;main.c: 301: DATAEE_WriteByte( 0x7000 + (4 * 8), clkAlarm.alarmVal.h);
 17482  0E25  3020               	movlw	32
 17483  0E26  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17484  0E27  3070               	movlw	112
 17485  0E28  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17486  0E29  0020               	movlb	0	; select bank0
 17487  0E2A  084D               	movf	_clkAlarm,w
 17488  0E2B  00FA               	movwf	??_Clock_ISR
 17489  0E2C  087A               	movf	??_Clock_ISR,w
 17490  0E2D  00F8               	movwf	i1DATAEE_WriteByte@bData
 17491  0E2E  3188  20B6  318D   	fcall	i1_DATAEE_WriteByte
 17492  0E31                     i1l4466:
 17493                           
 17494                           ;main.c: 302: DATAEE_WriteByte( 0x7000 + (5 * 8), clkAlarm.alarmVal.m);
 17495  0E31  3028               	movlw	40
 17496  0E32  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17497  0E33  3070               	movlw	112
 17498  0E34  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17499  0E35  0020               	movlb	0	; select bank0
 17500  0E36  084E               	movf	_clkAlarm+1,w
 17501  0E37  00FA               	movwf	??_Clock_ISR
 17502  0E38  087A               	movf	??_Clock_ISR,w
 17503  0E39  00F8               	movwf	i1DATAEE_WriteByte@bData
 17504  0E3A  3188  20B6  318D   	fcall	i1_DATAEE_WriteByte
 17505  0E3D                     i1l4468:
 17506                           
 17507                           ;main.c: 303: DATAEE_WriteByte( 0x7000 + (6 * 8), clkAlarm.alarmVal.s);
 17508  0E3D  3030               	movlw	48
 17509  0E3E  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17510  0E3F  3070               	movlw	112
 17511  0E40  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17512  0E41  0020               	movlb	0	; select bank0
 17513  0E42  084F               	movf	_clkAlarm+2,w
 17514  0E43  00FA               	movwf	??_Clock_ISR
 17515  0E44  087A               	movf	??_Clock_ISR,w
 17516  0E45  00F8               	movwf	i1DATAEE_WriteByte@bData
 17517  0E46  3188  20B6  318D   	fcall	i1_DATAEE_WriteByte
 17518  0E49                     i1l4470:
 17519                           
 17520                           ;main.c: 304: DATAEE_WriteByte( 0x7000 + (7 * 8), tempAlarm.alarmTemp);
 17521  0E49  3038               	movlw	56
 17522  0E4A  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17523  0E4B  3070               	movlw	112
 17524  0E4C  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17525  0E4D  0020               	movlb	0	; select bank0
 17526  0E4E  0854               	movf	_tempAlarm,w
 17527  0E4F  00FA               	movwf	??_Clock_ISR
 17528  0E50  087A               	movf	??_Clock_ISR,w
 17529  0E51  00F8               	movwf	i1DATAEE_WriteByte@bData
 17530  0E52  3188  20B6  318D   	fcall	i1_DATAEE_WriteByte
 17531  0E55                     i1l4472:
 17532                           
 17533                           ;main.c: 305: DATAEE_WriteByte( 0x7000 + (8 * 8), lumAlarm.alarmLum);
 17534  0E55  3040               	movlw	64
 17535  0E56  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17536  0E57  3070               	movlw	112
 17537  0E58  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17538  0E59  0020               	movlb	0	; select bank0
 17539  0E5A  0851               	movf	_lumAlarm,w
 17540  0E5B  00FA               	movwf	??_Clock_ISR
 17541  0E5C  087A               	movf	??_Clock_ISR,w
 17542  0E5D  00F8               	movwf	i1DATAEE_WriteByte@bData
 17543  0E5E  3188  20B6  318D   	fcall	i1_DATAEE_WriteByte
 17544  0E61                     i1l4474:
 17545                           
 17546                           ;main.c: 306: DATAEE_WriteByte( 0x7000 + (9 * 8), ALAF);
 17547  0E61  3048               	movlw	72
 17548  0E62  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17549  0E63  3070               	movlw	112
 17550  0E64  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17551  0E65  0020               	movlb	0	; select bank0
 17552  0E66  0865               	movf	_ALAF,w
 17553  0E67  00FA               	movwf	??_Clock_ISR
 17554  0E68  087A               	movf	??_Clock_ISR,w
 17555  0E69  00F8               	movwf	i1DATAEE_WriteByte@bData
 17556  0E6A  3188  20B6  318D   	fcall	i1_DATAEE_WriteByte
 17557  0E6D                     i1l4476:
 17558                           
 17559                           ;main.c: 307: DATAEE_WriteByte( 0x7000 + (10 * 8), t.h);
 17560  0E6D  3050               	movlw	80
 17561  0E6E  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17562  0E6F  3070               	movlw	112
 17563  0E70  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17564  0E71  0020               	movlb	0	; select bank0
 17565  0E72  0857               	movf	_t,w
 17566  0E73  00FA               	movwf	??_Clock_ISR
 17567  0E74  087A               	movf	??_Clock_ISR,w
 17568  0E75  00F8               	movwf	i1DATAEE_WriteByte@bData
 17569  0E76  3188  20B6  318D   	fcall	i1_DATAEE_WriteByte
 17570  0E79                     i1l4478:
 17571                           
 17572                           ;main.c: 308: DATAEE_WriteByte( 0x7000 + (11 * 8), t.m);
 17573  0E79  3058               	movlw	88
 17574  0E7A  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17575  0E7B  3070               	movlw	112
 17576  0E7C  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17577  0E7D  0020               	movlb	0	; select bank0
 17578  0E7E  0858               	movf	_t+1,w
 17579  0E7F  00FA               	movwf	??_Clock_ISR
 17580  0E80  087A               	movf	??_Clock_ISR,w
 17581  0E81  00F8               	movwf	i1DATAEE_WriteByte@bData
 17582  0E82  3188  20B6  318D   	fcall	i1_DATAEE_WriteByte
 17583  0E85                     i1l4480:
 17584                           
 17585                           ;main.c: 309: DATAEE_WriteByte( 0x7000 + (12 * 8), idx_RingBuffer);
 17586  0E85  3060               	movlw	96
 17587  0E86  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17588  0E87  3070               	movlw	112
 17589  0E88  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17590  0E89  0020               	movlb	0	; select bank0
 17591  0E8A  0864               	movf	_idx_RingBuffer,w
 17592  0E8B  00FA               	movwf	??_Clock_ISR
 17593  0E8C  087A               	movf	??_Clock_ISR,w
 17594  0E8D  00F8               	movwf	i1DATAEE_WriteByte@bData
 17595  0E8E  3188  20B6  318D   	fcall	i1_DATAEE_WriteByte
 17596  0E91                     i1l4482:
 17597                           
 17598                           ;main.c: 310: DATAEE_WriteByte( 0x7000 + (13 * 8), NREG + PMON + TALA + clkAlarm.alarmVa
      +                          l.h + clkAlarm.alarmVal.m + clkAlarm.alarmVal.s + tempAlarm.alarmTemp + lumAlarm.alarmLu
      +                          m + ALAF + t.h + t.m + idx_RingBuffer);
 17599  0E91  3068               	movlw	104
 17600  0E92  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17601  0E93  3070               	movlw	112
 17602  0E94  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17603  0E95  0020               	movlb	0	; select bank0
 17604  0E96  084E               	movf	_clkAlarm+1,w
 17605  0E97  074F               	addwf	_clkAlarm+2,w
 17606  0E98  0758               	addwf	_t+1,w
 17607  0E99  074D               	addwf	_clkAlarm,w
 17608  0E9A  0754               	addwf	_tempAlarm,w
 17609  0E9B  0751               	addwf	_lumAlarm,w
 17610  0E9C  0757               	addwf	_t,w
 17611  0E9D  0767               	addwf	_NREG,w
 17612  0E9E  0021               	movlb	1	; select bank1
 17613  0E9F  0740               	addwf	_PMON^(0+128),w
 17614  0EA0  0020               	movlb	0	; select bank0
 17615  0EA1  0766               	addwf	_TALA,w
 17616  0EA2  0765               	addwf	_ALAF,w
 17617  0EA3  0764               	addwf	_idx_RingBuffer,w
 17618  0EA4  00FA               	movwf	??_Clock_ISR
 17619  0EA5  087A               	movf	??_Clock_ISR,w
 17620  0EA6  00F8               	movwf	i1DATAEE_WriteByte@bData
 17621  0EA7  3188  20B6  318D   	fcall	i1_DATAEE_WriteByte
 17622  0EAA                     i1l4484:
 17623                           
 17624                           ;main.c: 311: };main.c: 312: if(t.m==60){
 17625  0EAA  303C               	movlw	60
 17626  0EAB  0020               	movlb	0	; select bank0
 17627  0EAC  0658               	xorwf	_t+1,w
 17628  0EAD  1D03               	btfss	3,2
 17629  0EAE  2EB0               	goto	u373_21
 17630  0EAF  2EB1               	goto	u373_20
 17631  0EB0                     u373_21:
 17632  0EB0  2EB6               	goto	i1l4490
 17633  0EB1                     u373_20:
 17634  0EB1                     i1l4486:
 17635                           
 17636                           ;main.c: 313: t.h++;
 17637  0EB1  3001               	movlw	1
 17638  0EB2  00FA               	movwf	??_Clock_ISR
 17639  0EB3  087A               	movf	??_Clock_ISR,w
 17640  0EB4  07D7               	addwf	_t,f
 17641  0EB5                     i1l4488:
 17642                           
 17643                           ;main.c: 314: t.m=0;
 17644  0EB5  01D8               	clrf	_t+1
 17645  0EB6                     i1l4490:
 17646                           
 17647                           ;main.c: 315: };main.c: 316: if(t.h==24){
 17648  0EB6  3018               	movlw	24
 17649  0EB7  0657               	xorwf	_t,w
 17650  0EB8  1D03               	btfss	3,2
 17651  0EB9  2EBB               	goto	u374_21
 17652  0EBA  2EBC               	goto	u374_20
 17653  0EBB                     u374_21:
 17654  0EBB  2EBD               	goto	i1l4494
 17655  0EBC                     u374_20:
 17656  0EBC                     i1l4492:
 17657                           
 17658                           ;main.c: 317: t.h=0;
 17659  0EBC  01D7               	clrf	_t
 17660  0EBD                     i1l4494:
 17661                           
 17662                           ;main.c: 318: };main.c: 321: if((ALAF == 'A') && t.s >= clkAlarm.alarmVal.s && t.m >= cl
      +                          kAlarm.alarmVal.m && t.h >= clkAlarm.alarmVal.h && editingClockAlarm == 0){
 17663  0EBD  3041               	movlw	65
 17664  0EBE  0665               	xorwf	_ALAF,w
 17665  0EBF  1D03               	btfss	3,2
 17666  0EC0  2EC2               	goto	u375_21
 17667  0EC1  2EC3               	goto	u375_20
 17668  0EC2                     u375_21:
 17669  0EC2  2EE7               	goto	i1l4508
 17670  0EC3                     u375_20:
 17671  0EC3                     i1l4496:
 17672  0EC3  084F               	movf	_clkAlarm+2,w
 17673  0EC4  0259               	subwf	_t+2,w
 17674  0EC5  1C03               	skipc
 17675  0EC6  2EC8               	goto	u376_21
 17676  0EC7  2EC9               	goto	u376_20
 17677  0EC8                     u376_21:
 17678  0EC8  2EE7               	goto	i1l4508
 17679  0EC9                     u376_20:
 17680  0EC9                     i1l4498:
 17681  0EC9  084E               	movf	_clkAlarm+1,w
 17682  0ECA  0258               	subwf	_t+1,w
 17683  0ECB  1C03               	skipc
 17684  0ECC  2ECE               	goto	u377_21
 17685  0ECD  2ECF               	goto	u377_20
 17686  0ECE                     u377_21:
 17687  0ECE  2EE7               	goto	i1l4508
 17688  0ECF                     u377_20:
 17689  0ECF                     i1l4500:
 17690  0ECF  084D               	movf	_clkAlarm,w
 17691  0ED0  0257               	subwf	_t,w
 17692  0ED1  1C03               	skipc
 17693  0ED2  2ED4               	goto	u378_21
 17694  0ED3  2ED5               	goto	u378_20
 17695  0ED4                     u378_21:
 17696  0ED4  2EE7               	goto	i1l4508
 17697  0ED5                     u378_20:
 17698  0ED5                     i1l4502:
 17699  0ED5  085C               	movf	_editingClockAlarm,w
 17700  0ED6  045D               	iorwf	_editingClockAlarm+1,w
 17701  0ED7  1D03               	btfss	3,2
 17702  0ED8  2EDA               	goto	u379_21
 17703  0ED9  2EDB               	goto	u379_20
 17704  0EDA                     u379_21:
 17705  0EDA  2EE7               	goto	i1l4508
 17706  0EDB                     u379_20:
 17707  0EDB                     i1l4504:
 17708                           
 17709                           ;main.c: 322: alarmPWMStart.h = 0xff;
 17710  0EDB  30FF               	movlw	255
 17711  0EDC  00FA               	movwf	??_Clock_ISR
 17712  0EDD  087A               	movf	??_Clock_ISR,w
 17713  0EDE  0021               	movlb	1	; select bank1
 17714  0EDF  00C1               	movwf	_alarmPWMStart^(0+128)
 17715  0EE0                     i1l4506:
 17716                           
 17717                           ;main.c: 323: clkAlarm.trigger = 1;
 17718  0EE0  0020               	movlb	0	; select bank0
 17719  0EE1  01D0               	clrf	_clkAlarm+3
 17720  0EE2  0AD0               	incf	_clkAlarm+3,f
 17721                           
 17722                           ;main.c: 324: clkAlarm.alarmVal.h = 25;
 17723  0EE3  3019               	movlw	25
 17724  0EE4  00FA               	movwf	??_Clock_ISR
 17725  0EE5  087A               	movf	??_Clock_ISR,w
 17726  0EE6  00CD               	movwf	_clkAlarm
 17727  0EE7                     i1l4508:
 17728  0EE7  1003               	clrc
 17729  0EE8  1F96               	btfss	22,7	;volatile
 17730  0EE9  1403               	setc
 17731  0EEA  1803               	btfsc	3,0
 17732  0EEB  2EED               	goto	u380_21
 17733  0EEC  2EF0               	goto	u380_20
 17734  0EED                     u380_21:
 17735  0EED  0020               	movlb	0	; select bank0
 17736  0EEE  1796               	bsf	22,7	;volatile
 17737  0EEF  2EF2               	goto	u381_24
 17738  0EF0                     u380_20:
 17739  0EF0  0020               	movlb	0	; select bank0
 17740  0EF1  1396               	bcf	22,7	;volatile
 17741  0EF2                     u381_24:
 17742  0EF2                     i1l1140:
 17743  0EF2  0008               	return
 17744  0EF3                     __end_of_Clock_ISR:
 17745                           
 17746                           	psect	text63
 17747  0003                     __ptext63:	
 17748 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 17749 ;; Defined at:
 17750 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 17751 ;; Parameters:    Size  Location     Type
 17752 ;;		None
 17753 ;; Auto vars:     Size  Location     Type
 17754 ;;		None
 17755 ;; Return value:  Size  Location     Type
 17756 ;;                  1    wreg      void 
 17757 ;; Registers used:
 17758 ;;		None
 17759 ;; Tracked objects:
 17760 ;;		On entry : 0/0
 17761 ;;		On exit  : 0/0
 17762 ;;		Unchanged: 0/0
 17763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17768 ;;Total ram usage:        0 bytes
 17769 ;; Hardware stack levels used:    1
 17770 ;; This function calls:
 17771 ;;		Nothing
 17772 ;; This function is called by:
 17773 ;;		_TMR1_Initialize
 17774 ;;		_TMR1_ISR
 17775 ;; This function uses a non-reentrant model
 17776 ;;
 17777                           
 17778                           
 17779                           ;psect for function _TMR1_DefaultInterruptHandler
 17780  0003                     _TMR1_DefaultInterruptHandler:
 17781  0003                     i1l420:	
 17782                           ;incstack = 0
 17783                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 17784                           
 17785  0003  0008               	return
 17786  0004                     __end_of_TMR1_DefaultInterruptHandler:
 17787                           
 17788                           	psect	text64
 17789  08B6                     __ptext64:	
 17790 ;; *************** function i1_DATAEE_WriteByte *****************
 17791 ;; Defined at:
 17792 ;;		line 180 in file "mcc_generated_files/memory.c"
 17793 ;; Parameters:    Size  Location     Type
 17794 ;;  bAdd            2    6[COMMON] unsigned int 
 17795 ;;  bData           1    8[COMMON] unsigned char 
 17796 ;; Auto vars:     Size  Location     Type
 17797 ;;  GIEBitValue     1    9[COMMON] unsigned char 
 17798 ;; Return value:  Size  Location     Type
 17799 ;;                  1    wreg      void 
 17800 ;; Registers used:
 17801 ;;		wreg, status,2, status,0
 17802 ;; Tracked objects:
 17803 ;;		On entry : 0/0
 17804 ;;		On exit  : 0/0
 17805 ;;		Unchanged: 0/0
 17806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17807 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17810 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17811 ;;Total ram usage:        4 bytes
 17812 ;; Hardware stack levels used:    1
 17813 ;; This function calls:
 17814 ;;		Nothing
 17815 ;; This function is called by:
 17816 ;;		_Clock_ISR
 17817 ;;		_monitoring_ISR
 17818 ;; This function uses a non-reentrant model
 17819 ;;
 17820                           
 17821                           
 17822                           ;psect for function i1_DATAEE_WriteByte
 17823  08B6                     i1_DATAEE_WriteByte:
 17824  08B6                     i1l4192:	
 17825                           ;incstack = 0
 17826                           ; Regs used in i1_DATAEE_WriteByte: [wreg+status,2+status,0]
 17827                           
 17828                           
 17829                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 17830  08B6  3000               	movlw	0
 17831  08B7  1B8B               	btfsc	11,7	;volatile
 17832  08B8  3001               	movlw	1
 17833  08B9  00F9               	movwf	i1DATAEE_WriteByte@GIEBitValue
 17834                           
 17835                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 17836  08BA  0877               	movf	i1DATAEE_WriteByte@bAdd+1,w
 17837  08BB  0030               	movlb	16	; select bank16
 17838  08BC  009B               	movwf	27	;volatile
 17839  08BD                     i1l4194:
 17840                           
 17841                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 17842  08BD  0876               	movf	i1DATAEE_WriteByte@bAdd,w
 17843  08BE  009A               	movwf	26	;volatile
 17844  08BF                     i1l4196:
 17845                           
 17846                           ;memory.c: 186: NVMDATL = bData;
 17847  08BF  0878               	movf	i1DATAEE_WriteByte@bData,w
 17848  08C0  009C               	movwf	28	;volatile
 17849  08C1                     i1l4198:
 17850                           
 17851                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 17852  08C1  171E               	bsf	30,6	;volsfr
 17853  08C2                     i1l4200:
 17854                           
 17855                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 17856  08C2  151E               	bsf	30,2	;volsfr
 17857  08C3                     i1l4202:
 17858                           
 17859                           ;memory.c: 189: INTCONbits.GIE = 0;
 17860  08C3  138B               	bcf	11,7	;volatile
 17861  08C4                     i1l4204:
 17862                           
 17863                           ;memory.c: 190: NVMCON2 = 0x55;
 17864  08C4  3055               	movlw	85
 17865  08C5  009F               	movwf	31	;volsfr
 17866  08C6                     i1l4206:
 17867                           
 17868                           ;memory.c: 191: NVMCON2 = 0xAA;
 17869  08C6  30AA               	movlw	170
 17870  08C7  009F               	movwf	31	;volsfr
 17871  08C8                     i1l4208:
 17872                           
 17873                           ;memory.c: 192: NVMCON1bits.WR = 1;
 17874  08C8  149E               	bsf	30,1	;volsfr
 17875  08C9                     i1l1338:	
 17876                           ;memory.c: 195: {
 17877                           
 17878  08C9  189E               	btfsc	30,1	;volsfr
 17879  08CA  28CC               	goto	u350_21
 17880  08CB  28CD               	goto	u350_20
 17881  08CC                     u350_21:
 17882  08CC  28C9               	goto	i1l1338
 17883  08CD                     u350_20:
 17884  08CD                     i1l1340:
 17885                           
 17886                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 17887  08CD  111E               	bcf	30,2	;volsfr
 17888  08CE                     i1l4210:
 17889                           
 17890                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 17891  08CE  0C79               	rrf	i1DATAEE_WriteByte@GIEBitValue,w
 17892  08CF  1C03               	skipc
 17893  08D0  138B               	bcf	11,7	;volatile
 17894  08D1  1803               	skipnc
 17895  08D2  178B               	bsf	11,7	;volatile
 17896  08D3                     i1l1341:
 17897  08D3  0008               	return
 17898  08D4                     __end_ofi1_DATAEE_WriteByte:
 17899  007E                     btemp	set	126	;btemp
 17900  007E                     int$flags	set	126
 17901  007E                     wtemp0	set	126
 17902                           
 17903                           	psect	config
 17904                           
 17905                           ;Config register CONFIG1 @ 0x8007
 17906                           ;	External Oscillator mode selection bits
 17907                           ;	FEXTOSC = OFF, Oscillator not enabled
 17908                           ;	Power-up default value for COSC bits
 17909                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 17910                           ;	Clock Out Enable bit
 17911                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 17912                           ;	Clock Switch Enable bit
 17913                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 17914                           ;	Fail-Safe Clock Monitor Enable bit
 17915                           ;	FCMEN = ON, FSCM timer enabled
 17916  8007                     	org	32775
 17917  8007  3FEC               	dw	16364
 17918                           
 17919                           ;Config register CONFIG2 @ 0x8008
 17920                           ;	Master Clear Enable bit
 17921                           ;	MCLRE = ON, MCLR pin is Master Clear function
 17922                           ;	Power-up Timer Enable bit
 17923                           ;	PWRTE = OFF, PWRT disabled
 17924                           ;	Low-Power BOR enable bit
 17925                           ;	LPBOREN = OFF, ULPBOR disabled
 17926                           ;	Brown-out reset enable bits
 17927                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 17928                           ;	Brown-out Reset Voltage Selection
 17929                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 17930                           ;	Zero-cross detect disable
 17931                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 17932                           ;	Peripheral Pin Select one-way control
 17933                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 17934                           ;	Stack Overflow/Underflow Reset Enable bit
 17935                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 17936                           ;	Background Debugger
 17937                           ;	DEBUG = OFF, Background Debugger disabled
 17938  8008                     	org	32776
 17939  8008  3FFF               	dw	16383
 17940                           
 17941                           ;Config register CONFIG3 @ 0x8009
 17942                           ;	WDT Period Select bits
 17943                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 17944                           ;	WDT operating mode
 17945                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 17946                           ;	WDT Window Select bits
 17947                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 17948                           ;	WDT input clock selector
 17949                           ;	WDTCCS = SC, Software Control
 17950  8009                     	org	32777
 17951  8009  3F9F               	dw	16287
 17952                           
 17953                           ;Config register CONFIG4 @ 0x800A
 17954                           ;	UserNVM self-write protection bits
 17955                           ;	WRT = OFF, Write protection off
 17956                           ;	Scanner Enable bit
 17957                           ;	SCANE = available, Scanner module is available for use
 17958                           ;	Low Voltage Programming Enable bit
 17959                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 17960  800A                     	org	32778
 17961  800A  3FFF               	dw	16383
 17962                           
 17963                           ;Config register CONFIG5 @ 0x800B
 17964                           ;	UserNVM Program memory code protection bit
 17965                           ;	CP = OFF, Program Memory code protection disabled
 17966                           ;	DataNVM code protection bit
 17967                           ;	CPD = OFF, Data EEPROM code protection disabled
 17968  800B                     	org	32779
 17969  800B  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    10
    Data        7
    BSS         35
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      80
    BANK1            80     17      36
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    differenceBetweenTimePeriod@diff	PTR struct Time size(1) Largest target is 3
		 -> menuLCD_ISR@diff(BANK0[3]), 

    LCDstr@p	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR5_ISR->_monitoring_ISR
    _monitoring_ISR->i1_DATAEE_WriteByte
    i1_DATAEE_ReadByte->___wmul
    _tsttc->i1_WriteI2C
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->i1_LCDsend2x4
    _LCDcmd->i1_LCDsend2x4
    i1_LCDsend2x4->i1_WriteI2C
    _TMR1_ISR->_Clock_ISR
    _Clock_ISR->i1_DATAEE_WriteByte
    i1_DATAEE_WriteByte->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR5_ISR->_monitoring_ISR
    _TMR3_ISR->_menuLCD_ISR
    _menuLCD_ISR->_sprintf

Critical Paths under _main in BANK1

    _main->_LCDinit
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    7535
                                              9 BANK1      8     8      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _LCDinit
                 _PWM6_LoadDutyValue
              _PWM_Output_D4_Disable
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                     _TMR2_StopTimer
           _TMR3_SetInterruptHandler
           _TMR5_SetInterruptHandler
                          _editClock
                            _editLum
                           _editTemp
                   _i2c1_driver_open
                       _toggleAlarms
 ---------------------------------------------------------------------------------
 (1) _toggleAlarms                                         1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _editTemp                                             1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editLum                                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editClock                                            1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StopTimer                                       0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (2) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     522
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0     174
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     174
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Output_D4_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     220
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     780
                                              8 BANK1      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend2x4                                           6     5      1     736
                                              2 BANK1      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK1      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     4     1      3    4017
                                              0 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      2     0      2    1334
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0   10879
                           _TMR1_ISR
                           _TMR3_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR5_ISR                                             0     0      0    3159
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                     _monitoring_ISR *
 ---------------------------------------------------------------------------------
 (6) _monitoring_ISR                                       7     7      0    2919
                                             10 COMMON     3     3      0
                                              0 BANK0      4     4      0
           _ADCC_GetSingleConversion
                             ___wmul
                              _tsttc
                  i1_DATAEE_ReadByte
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (7) i1_DATAEE_ReadByte                                    2     0      2     122
                                              6 COMMON     2     0      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _tsttc                                                2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (6) _TMR5_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR5_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0    6455
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
                        _menuLCD_ISR *
 ---------------------------------------------------------------------------------
 (6) _menuLCD_ISR                                         24    24      0    6215
                                             21 BANK0     24    24      0
                            _LCDchar
                             _LCDcmd
                             _LCDstr
               _PWM_Output_D4_Enable
                    _TMR2_StartTimer
        _differenceBetweenTimePeriod
                            _sprintf
               i1_PWM6_LoadDutyValue
            i1_PWM_Output_D4_Disable
                   i1_TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (7) i1_TMR2_StopTimer                                     0     0      0       0
                        i1_TMR2_Stop
 ---------------------------------------------------------------------------------
 (8) i1_TMR2_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM_Output_D4_Disable                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM6_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             29    21      8    3867
                                              0 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    1612
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _differenceBetweenTimePeriod                          8     1      7     595
                                              0 COMMON     8     1      7
 ---------------------------------------------------------------------------------
 (7) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (8) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PWM_Output_D4_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LCDstr                                               3     3      0     550
                                              9 COMMON     3     3      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (8) _LCDchar                                              1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (7) _LCDcmd                                               1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (9) i1_LCDsend2x4                                         6     5      1     384
                                              2 COMMON     6     5      1
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) i1_WriteI2C                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _TMR3_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0    1265
                   Absolute function *
                          _Clock_ISR *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Clock_ISR                                            1     1      0    1025
                                             10 COMMON     1     1      0
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (7) i1_DATAEE_WriteByte                                   4     1      3    1025
                                              6 COMMON     4     1      3
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _PWM6_LoadDutyValue
   _PWM_Output_D4_Disable
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_StopTimer
     _TMR2_Stop
   _TMR3_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _editClock
   _editLum
   _editTemp
   _i2c1_driver_open
   _toggleAlarms

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _Clock_ISR *
       i1_DATAEE_WriteByte
         ___wmul (ARG)
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *
     _menuLCD_ISR *
       _LCDchar
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDcmd
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDstr
         _LCDchar
           i1_LCDsend2x4
             i1_WriteI2C
       _PWM_Output_D4_Enable
       _TMR2_StartTimer
         _TMR2_Start
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       i1_PWM6_LoadDutyValue
       i1_PWM_Output_D4_Disable
       i1_TMR2_StopTimer
         i1_TMR2_Stop
   _TMR5_ISR
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _monitoring_ISR *
       _ADCC_GetSingleConversion
       ___wmul
       _tsttc
         _ReadI2C
         i1_WriteI2C
       i1_DATAEE_ReadByte
         ___wmul (ARG)
       i1_DATAEE_WriteByte
         ___wmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     11      24       7       45.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      82      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      82      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Nov 02 22:33:44 2020

                                       _t 0057          __end_of_TMR5_SetInterruptHandler 1720  
                              i1_WriteI2C 0AFD                                        l30 0BF4  
                                      l33 0BBC                                        l42 0BDE  
                                      l35 0BC1                                        l47 0BF2  
                     ___wmul@multiplicand 0072                         ??_TMR5_WriteTimer 0072  
             __size_of_PWM6_LoadDutyValue 0019                                       l122 0AFC  
                                     l172 08B5                                       l175 080A  
                                     l239 1754                                       l417 1713  
                                     l178 173C                                       l451 0930  
                                     l481 1719                                       l705 171F  
                                     l722 087F                                       l563 0866  
                                     l387 0911                                       l719 1761  
                                     l675 094F                                       l764 16FA  
                                     l749 176F                                       l950 0B96  
                                     l767 1709                                       l953 0B9A  
                                     l937 0B59                                       l938 0B5B  
                                     l949 0B94                                       _PR2 028D  
                         _timer1ReloadVal 00B7                   __size_of_PMD_Initialize 0008  
                         _TMR2_Initialize 1762                                       wreg 0009  
                             ?_LCDsend2x4 00A2                           __end_of_LCDchar 1735  
                                    l1040 0D42                                      l1104 16F7  
                                    l1211 07AE                                      l1212 0793  
                                    l1070 0DF1                                      l1054 0D92  
                                    l1230 07FD                                      l1063 0DD2  
                                    l1039 0D40                                      l1073 0C6A  
                                    l1233 0A17                                      l1066 0DE8  
                                    l1242 0A4B                                      l1234 0A30  
                                    l1067 0DEA                                      l1235 0A2B  
                                    l1340 096C                                      l1341 0973  
                                    l1245 09DF                                      l1254 0A13  
                                    l1246 09F8                                      l1247 09F3  
                                    l1344 177E                                      l1265 0A79  
                                    l1257 0A4C                                      l1338 0968  
                                    l1258 0A62                                      l1267 0A83  
                                    l1259 0A5D                           _timer3ReloadVal 006A  
                                    l1292 026F                                      l1293 0272  
                                    l1285 0267                                      l1294 0275  
                                    l5000 0080                                      l5010 00AC  
                                    l5002 009B                                      l4300 0922  
                                    l5100 026C                                      l5020 00CA  
                                    l5012 00AE                                      l5004 009D  
                                    l4230 0AC6                                      l4302 0924  
                                    l4310 0934                                      l5102 0279  
                                    l5030 00F1                                      l5022 00CE  
                                    l5006 009F                                      l4400 0B4A  
                                    l4240 0AD0                                      l4232 0AC8  
                                    l4304 0925                                      l4320 0943  
                                    l4312 0936                                      l5040 01B3  
                                    l5032 00F6                                      l5024 00DB  
                                    l5008 00A0                                      l4410 0B81  
                                    l4402 0B4A                                      l4250 0AE5  
                                    l4242 0AD3                                      l4234 0ACA  
                                    l4330 1766                                      l4306 092D  
                                    l4322 0944                                      l4314 0938  
                                    l5050 01F4                                      l5042 01C0  
                                    l5034 018E                                      l5026 00E9  
                                    l5018 00B2                                      l4412 0B85  
                                    l4404 0B5F                                      l4420 0D46  
                                    l4260 0AEF                                      l4252 0AE7  
                                    l4244 0AD5                                      l4236 0ACC  
                                    l4228 0AC0                                      l4340 08F6  
                                    l4332 1769                                      l4324 094C  
                                    l4316 093A                                      l4308 0931  
                                    l5060 0229                                      l5052 0201  
                                    l5044 01CD                                      l5036 019B  
                                    l5028 00EB                                      l4406 0B6E  
                                    l4430 0D7D                                      l4422 0D55  
                                    l4414 0D20                                      l4262 0AF2  
                                    l4254 0AE9                                      l4246 0AD7  
                                    l4238 0ACE                                      l4270 1735  
                                    l4350 0905                                      l4342 08F8  
                                    l4334 176A                                      l4326 1762  
                                    l4318 0941                                      l5070 0230  
                                    l5062 022A                                      l5054 020E  
                                    l5046 01DA                                      l5038 01A7  
                                    l4408 0B72                                      l4440 0DAE  
                                    l4432 0D83                                      l4424 0D59  
                                    l4416 0D25                                      l4272 0802  
                                    l4264 0AF5                                      l4256 0AEB  
                                    l4248 0AD9                                      l4280 1755  
                                    l4352 0906                                      l4344 08FA  
                                    l4336 176C                                      l4328 1765  
                                    l5128 027E                                      l5080 0239  
                                    l5072 0232                                      l5064 022B  
                                    l5056 021B                                      l5048 01E7  
                                    l4450 0DEE                                      l4442 0DBD  
                                    l4434 0D92                                      l4426 0D68  
                                    l4418 0D31                                      l4274 0805  
                                    l4266 0AF7                                      l4258 0AED  
                                    l4282 175C                                      l4354 090E  
                                    l4346 08FC                                      l4338 08F3  
                                    l4290 0912                                      l5090 0250  
                                    l5082 023A                                      l5074 0233  
                                    l5066 022C                                      l5058 0228  
                                    l4444 0DC3                                      l4436 0D99  
                                    l4428 0D6E                                      l4284 0850  
                                    l4276 0806                                      l4268 0AF9  
                                    l4348 0903                                      l4292 0915  
                                    l4700 174F                                      l5092 0255  
                                    l5084 023B                                      l5076 0235  
                                    l5068 022D                                      l4446 0DD2  
                                    l4438 0DA8                                      l4286 0862  
                                    l4278 0809                                      l4294 0917  
                                    l4702 1751                                      l5094 025A  
                                    l5086 0240                                      l5078 0236  
                                    l4448 0DD9                                      l4288 0864  
                                    l4296 0919                                      l5096 025F  
                                    l5088 0249                           __end_of_LCDinit 0C6B  
                                    l4810 0C0E                                      l4802 0BF5  
                                    l4298 091B                                      l5098 0263  
                                    l4820 0C32                                      l4812 0C1A  
                                    l4804 0BFE                                      l4732 0867  
                                    l4900 07D7                                      l3950 0BA0  
                                    l4830 0C54                                      l4822 0C36  
                                    l4814 0C1E                                      l4806 0C02  
                                    l4398 16F8                                      l4734 1706  
                                    l4902 07DE                                      l4910 07F3  
                                    l4840 0958                                      l3960 0BBA  
                                    l4832 0C5A                                      l4824 0C42  
                                    l4816 0C26                                      l4808 0C0A  
                                    l4680 089D                                      l4904 07E5  
                                    l4920 0A34                                      l4912 0A14  
                                    l4850 0963                                      l4842 095C  
                                    l3970 0BD3                                      l3962 0BC6  
                                    l4834 0C60                                      l4826 0C46  
                                    l4818 0C2A                                      l4690 08AC  
                                    l4682 08A0                                      l4906 07EB  
                                    l4930 09E4                                      l4922 0A3A  
                                    l4914 0A1C                                      l4860 1774  
                                    l4852 0965                                      l4844 0960  
                                    l3972 0BE3                                      l3956 0BA5  
                                    l3948 0B9D                                      l4828 0C4E  
                                    l4836 16F5                                      l3980 1714  
                                    l4692 08AF                                      l4684 08A3  
                                    l4908 07ED                                      l4940 0A08  
                                    l4932 09ED                                      l4924 0A40  
                                    l4916 0A25                                      l4870 177C  
                                    l4862 1778                                      l4854 0967  
                                    l4846 0961                                      l4838 0950  
                                    l3958 0BAF                                      l4694 08B2  
                                    l4686 08A6                                      l4678 089A  
                                    l4942 0A09                                      l4934 09EF  
                                    l4926 0A41                                      l4918 0A27  
                                    l4950 0A6C                                      l4864 1779  
                                    l4856 096D                                      l4848 0962  
                                    l3968 0BC8                                      l4688 08A9  
                                    l4880 0797                                      l4936 09FC  
                                    l4928 09DC                                      l4696 1749  
                                    l4952 0A73                                      l4944 0A51  
                                    l4866 177A                                      l4858 1770  
                                    l3978 170E                                      l4890 07BF  
                                    l4882 07A6                                      l4874 077B  
                                    l4938 0A02                                      l4698 174E  
                                    l4946 0A5A                                      l4868 177B  
                                    l3996 171A                                      l4892 07C1  
                                    l4884 07A9                                      l4876 0780  
                                    l4948 0A66                                      l4894 07C8  
                                    l4886 07B3                                      l4878 0785  
                                    l4896 07CF                                      l4888 07B9  
                                    l4898 07D5                                      l4996 0073  
                                    l4998 007D                                      _ALAF 0065  
                         __end_of_LCDsend 0B9B                                      STR_1 1800  
                                    STR_2 1800                                      STR_3 1819  
                                    STR_4 1819                                      STR_5 1820  
                                    STR_6 1820                                      u3000 0BE3  
                                    u3001 0BE2                                      u3010 0BF2  
                                    u3011 0BF1                                      _LATA 0016  
                                    _LATB 0017                                      _LATC 0018  
                                    _LATD 0019                                      _LATE 001A  
                                    _T2PR 028D                                      u4150 174E  
                                    u5007 0BF9                                      u4151 174D  
                                    u5017 0C07                                      u3610 0D40  
                                    u5107 0DEF                                      u3611 0D3F  
                                    u5027 0C0F                                      u3540 0B59  
                                    u3700 0DE8                                      u3620 0D46  
                                    u4500 07A6                                      u3541 0B58  
                                    u3701 0DE7                                      u3621 0D45  
                                    u3605 0D28                                      u5037 0C1B  
                                    u4501 07A5                                      u3550 0B5F  
                                    u3710 0DEE                                      u3630 0D55  
                                    u4510 07B3                                      u3551 0B5E  
                                    u3711 0DED                                      u3631 0D54  
                                    u5047 0C23                                      u4511 07B2  
                                    u3560 0B6E                                      u3640 0D68  
                                    u4520 07B9                                      u4600 0A34  
                                    u3561 0B6D                                      u3641 0D67  
                                    u5057 0C2F                                      u4521 07B8  
                                    u4505 07A2                                      u4601 0A33  
                                    u2930 0BA4                                      u3570 0B81  
                                    u3650 0D7D                                      u4530 07BF  
                                    u4610 0A40                                      u2931 0BA3  
                                    u3571 0B80                                      u3651 0D7C  
                                    u5067 0C37                                      u4195 0878  
                                    u4531 07BE                                      u4611 0A3F  
                                    u2940 0BAF                                      u3580 0B94  
                                    u3660 0D92                                      u4540 07CF  
                                    u4620 09E4                                      _PMD0 0796  
                                    u2941 0BAE                                      u3581 0B93  
                                    u3661 0D91                                      u5077 0C43  
                                    u4541 07CE                                      u4621 09E3  
                                    _PMD1 0797                                      i1l30 0B47  
                                    i1l22 0893                                      u4470 096C  
                                    u2950 0BBA                                      u3590 0B9A  
                                    u3670 0DA8                                      u4550 07D5  
                                    u4630 09F7                                      _PMD2 0798  
                                    i1l23 0894                                      u4471 096B  
                                    u2951 0BB9                                      u3591 0B99  
                                    u3671 0DA7                                      u5087 0C4B  
                                    u4551 07D4                                      u4631 09F6  
                                    _PMD3 0799                                      u2960 0BC1  
                                    u3680 0DBD                                      u4560 07E5  
                                    u4480 0785                                      u4640 09FC  
                                    u4800 00AC                                      _PMD4 079A  
                                    i1l33 0B19                                      u2961 0BC0  
                                    u3681 0DBC                                      u5097 0C67  
                                    u4561 07E4                                      u4481 0784  
                                    u4641 09FB                                      u4801 00AB  
                                    _PMD5 079B                                      i1l42 0B37  
                                    i1l26 0899                                      u2970 0BC6  
                                    u3690 0DD2                                      u4570 07EB  
                                    u4490 0797                                      u4650 0A08  
                                    u4810 00DB                                      i1l35 0B1E  
                                    u2971 0BC5                                      u3691 0DD1  
                                    u4571 07EA                                      u4491 0796  
                                    u4651 0A07                                      u4811 00DA  
                                    u2980 0BD3                                      u4580 0A1C  
                                    u4660 0A51                                      u4900 026B  
                                    u4820 00E9                                      u2981 0BD2  
                                    u4581 0A1B                                      u4661 0A50  
                                    u4901 026A                                      u4821 00E8  
                                    u2990 0BDE                                      u4590 0A2F  
                                    u4670 0A61                                      u4830 00F1  
                                    i1l47 0B46                                      u2991 0BDD  
                                    u4591 0A2E                                      u4671 0A60  
                                    u4831 00F0                                      u4815 00D7  
                                    u4680 0A66                                      u4840 00F6  
                                    u4681 0A65                                      u4841 00F5  
                                    u4690 0A6C                                      u4850 0240  
                                    u4691 0A6B                                      u4851 023F  
                                    u4860 0250                                      u4861 024F  
                                    u4917 0244                                      _TALA 0066  
                                    u4870 0255                                      u4927 0A55  
                                    u4871 0254                                      u4880 025A  
                                    u4937 0A7D                                      u4881 0259  
                                    u4890 025F                                      u4947 0A20  
                                    u4891 025E                                      u4957 0A45  
                                    u4967 09E8                                      u4977 0A0D  
                                    _NREG 0067                                      u4987 0789  
                                    u4997 07F7                                      _PMON 00C0  
                                    _TMR2 028C                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                             main@notInit 00AD                              ?_menuLCD_ISR 0070  
                                    _main 0073                                      _mode 005A  
                                    _temp 0063                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                   i1DATAEE_ReadByte@bAdd 0076                                      start 0040  
                         _timer5ReloadVal 0068                           _TMR3_Initialize 0912  
              ??_TMR1_SetInterruptHandler 00A2                           __end_of_ReadI2C 089A  
               __size_of_DATAEE_WriteByte 0024            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 080B                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                __end_of_i2c1_driver_open 1755                                     ?_main 0070  
                                   _ADCLK 0098                                     _ADCNT 010C  
                                   _ADPCH 009E                                     _ADREF 009A  
                                   _ADPRE 009C                                     _ADRPT 010D  
                                   _T1CLK 0211                                     _T1CON 020E  
                                   _T3CLK 0217                                     _T2CON 028E  
                                   _T3CON 0214                                     _T5CLK 021D  
                                   _T2HLT 028F                        monitoring_ISR@aux1 0021  
                      monitoring_ISR@aux2 0022                                     _T5CON 021A  
                      monitoring_ISR@aux3 0023                           __end_of___lwdiv 0AC0  
                                   _T2TMR 028C                                     i1l401 178F  
                                   _T2RST 0291                                     i1l420 0003  
                                   i1l414 0821                                     i1l350 003E  
                                   i1l351 0038                           __end_of___lwmod 09DC  
                                   i1l345 0017                                     i1l347 0023  
                                   i1l356 003E                                     i1l349 002F  
                                   i1l702 084F                                     i1l465 17A0  
                                   i1l722 17FF                                     i1l484 07FF  
                                   i1l708 07FE                                     i1l478 0838  
                                   i1l910 0FB6                                     i1l575 17CC  
                                   i1l911 0FB7                                     i1l761 1701  
                                   i1l578 17D5                                     i1l922 0FE8  
                                   i1l923 0FEA                                     i1l764 16F4  
                                   i1l932 0FFF                                     i1l861 0EFF  
                                   i1l758 16EE                                     i1l862 0F00  
                                   i1l767 1705                                     i1l928 0FF9  
                                   i1l689 17B1                                     i1l929 0FFA  
                                   i1l873 0F2F                                     i1l874 0F30  
                                   i1l858 0EF3                                     i1l891 0F72  
                                   i1l892 0F73                                     i1l885 0F61  
                                   i1l894 0F77                                     i1l886 0F63  
                                   i1l898 0F86                                     i1l899 0F87  
                                   _OSCEN 0891                                     _TMR1H 020D  
                                   _TMR1L 020C                                     _TMR3H 0213  
                                   _TMR3L 0212                                     _TMR5H 0219  
                                   _TMR5L 0218                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
                         __end_of_editLum 0A14                           _PWM6_Initialize 1755  
       __size_of_TMR3_SetInterruptHandler 0006                 ?_TMR3_SetInterruptHandler 00A0  
                __end_ofi1_TMR2_StopTimer 1706                          __end_of_TMR1_ISR 0822  
                        __end_of_TMR3_ISR 0839                          __end_of_TMR5_ISR 0850  
                         _DATAEE_ReadByte 1770            ??_TMR3_DefaultInterruptHandler 0070  
                         __end_of_dpowers 1819                        __size_of_TMR2_Stop 0003  
                             ?_TMR2_Start 0070                           __end_of_isdigit 17C4  
                                   main@i 00AF                                     _tsttc 0EF3  
                 __end_of_TMR1_Initialize 0912                                     pclath 000A  
                          menuLCD_ISR@str 003B                                     status 0003  
                                   wtemp0 007E                           __end_of_sprintf 060A  
                  ??_PWM_Output_D4_Enable 0070                           _TMR2_StartTimer 16FE  
                         _TMR1_WriteTimer 177F                           _TMR5_Initialize 0931  
                         __initialization 0042                              ?i1_TMR2_Stop 0070  
                            __end_of_main 0291                               ?i1_WriteI2C 0070  
                     __size_of_LCDsend2x4 00D4                   __end_of_TMR2_Initialize 1770  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 00A9  
                _TMR5_SetInterruptHandler 171A                        __size_of_Clock_ISR 0101  
                   _TMR3_InterruptHandler 00B3          differenceBetweenTimePeriod@start 0070  
                               ??_LCDchar 0078                                 ??_LCDinit 00A8  
                               ??_LCDsend 00A2                __end_ofi1_DATAEE_WriteByte 08D4  
                                  _ADACCH 0091                                    _ADACCL 0090  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  _ADLTHH 010F                                    _ADLTHL 010E  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                                  _ADUTHL 0110                          __end_of_WriteI2C 0BF5  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                                    _T1GATE 0210  
                                  _T1GCON 020F                                    ?_tsttc 0070  
                                  _T3GATE 0216                                    _T3GCON 0215  
                                  _T5GATE 021C                                    _T5GCON 021B  
                                  _RA6PPS 0F16                                    _RC3PPS 0F23  
                                  i1l1101 16EB                                    i1l1040 0C8A  
                                  i1l2000 17C3                                    i1l1104 16F1  
                 TMR1_WriteTimer@timerVal 0070                                    _RC4PPS 0F24  
                                  i1l1140 0EF2                                    i1l1070 0D1D  
                                  i1l1054 0CCD                                    i1l1063 0D03  
                                  i1l1039 0C89                                    i1l1207 077A  
                                  i1l1066 0D15                                    i1l1067 0D16  
                                  i1l1171 0448                                    i1l1155 0358  
                                  i1l1340 08CD                                    i1l1076 172C  
                                  i1l1164 03C4                                    i1l1341 08D3  
                                  i1l1085 17E9                                    i1l1181 046C  
                                  i1l1158 03A9                                    i1l1079 1734  
                                  i1l4000 0EF3                                    i1l1344 1748  
                                  _ODCONA 0F3A                                    i1l1338 08C9  
                                  i1l1098 09A7                                    i1l4010 0F23  
                                  i1l4002 0F04                                    _ODCONB 0F45  
                                  _ODCONC 0F50                                    i1l4100 04C7  
                                  i1l1508 048A                                    i1l4020 0F55  
                                  i1l4012 0F34                                    i1l4004 0F0F  
                                  _ODCOND 0F5B                                    _ODCONE 0F66  
                                  i1l1526 053D                                    i1l4110 04F6  
                                  i1l4102 04CB                                    i1l4030 0F9A  
                                  i1l4022 0F67                                    i1l4014 0F3F  
                                  i1l4006 0F13                                    i1l1543 0609  
                                  i1l4200 08C2                                    i1l4112 04FA  
                                  i1l4040 0FCA                                    i1l4032 0FA6  
                                  i1l4024 0F7B                                    i1l4016 0F43  
                                  i1l4008 0F1F                                    i1l4210 08CE  
                                  i1l4202 08C3                                    i1l4130 052D  
                                  i1l4114 04FE                                    i1l4106 04D7  
                                  i1l4042 0FD6                                    i1l4034 0FAA  
                                  i1l4026 0F8B                                    i1l4018 0F4F  
                                  i1l1547 08DE                                    i1l4204 08C4  
                                  i1l4052 1727                                    i1l4060 0974  
                                  i1l4140 0554                                    i1l4132 0533  
                                  i1l4124 0509                                    i1l4116 0502  
                                  i1l4108 04EF                                    i1l4044 0FDC  
                                  i1l4036 0FBB                                    i1l4028 0F96  
                                  i1l4220 1744                                    i1l4212 173D  
                                  i1l1549 08F2                                    i1l4206 08C6  
                                  i1l4054 17D7                                    i1l4070 0991  
                                  i1l4062 0975                                    i1l4150 056F  
                                  i1l4142 0558                                    i1l4134 0539  
                                  i1l4118 0507                                    i1l4046 0FEE  
                                  i1l4038 0FC6                                    i1l4222 1745  
                                  i1l4214 1740                                    i1l4208 08C8  
                                  i1l4056 17D8                                    i1l4072 0997  
                                  i1l4064 097B                                    i1l4160 0592  
                                  i1l4152 0576                                    i1l4144 055E  
                                  i1l4136 0548                                    i1l4128 0523  
                                  i1l4080 047A                                    i1l4048 0FFE  
                                  i1l4224 1746                                    i1l4216 1742  
                                  i1l4058 17DC                                    i1l4074 16E9  
                                  i1l4066 0981                                    i1l4162 0596  
                                  i1l4154 057A                                    i1l4170 05B1  
                                  i1l4146 0565                                    i1l4138 0551  
                                  i1l4090 048F                                    i1l4082 0481  
                                  i1l4218 1743                                    i1l1819 0ABF  
                                  i1l4500 0ECF                                    i1l4068 098B  
                                  i1l4172 05B6                                    i1l4164 05A0  
                                  i1l4148 0569                                    i1l4156 0585  
                                  i1l4092 0498                                    i1l4084 0486  
                                  i1l4180 05F1                                    i1l4076 046F  
                 __end_of_TMR3_Initialize 0931                                    i1l1829 09DB  
                                  i1l4502 0ED5                                    i1l4174 05DD  
                                  i1l4166 05A6                                    i1l4158 058B  
                                  i1l4182 0605                                    i1l4094 04A4  
                                  i1l4086 048B                                    i1l4078 0474  
                                  i1l4190 16EF                                    i1l4510 0291  
                                  i1l4192 08B6                                    i1l4504 0EDB  
                                  i1l4360 1785                                    i1l3800 0B06  
                                  i1l4176 05E4                                    i1l4168 05AD  
                                  i1l4096 04A7                                    i1l4600 0430  
                                  i1l4520 02DB                                    i1l4512 0298  
                                  i1l4194 08BD                                    i1l4506 0EE0  
                                  i1l4362 1787                                    i1l4370 1790  
                                  i1l3802 0B0F                                    i1l4178 05E8  
                                  i1l4098 04B8                                    i1l4186 17EA  
                                  i1l4610 0450                                    i1l4602 0437  
                                  i1l4530 0302                                    i1l4522 02E2  
                                  i1l4514 02B6                                    i1l4196 08BF  
                                  i1l4508 0EE7                                    i1l4460 0E0D  
                                  i1l4452 0DF2                                    i1l4364 1789  
                                  i1l4356 177F                                    i1l4372 1795  
                                  i1l4380 179C                                    i1l3804 0B18  
                                  i1l3812 0B25                                    i1l3900 0A86  
                                  i1l4188 1702                                    i1l4612 0455  
                                  i1l4604 043C                                    i1l4540 0328  
                                  i1l4532 0308                                    i1l4524 02EB  
                                  i1l4516 02D3                                    i1l4620 060A  
                                  i1l4198 08C1                                    i1l4470 0E49  
                                  i1l4462 0E19                                    i1l4454 0DFD  
                                  i1l4358 1784                                    i1l4366 178B  
                                  i1l4382 179E                                    i1l4374 1796  
                                  i1l3814 0B2E                                    i1l3806 0B23  
                                  i1l3830 0C99                                    i1l3822 0C6C  
                                  i1l3910 0A9C                                    i1l3902 0A8C  
                                  i1l4614 045C                                    i1l4606 0443  
                                  i1l4550 0346                                    i1l4542 0330  
                                  i1l4534 0311                                    i1l4526 02F1  
                                  i1l4518 02D7                                    i1l4390 17A9  
                                  i1l4630 071F                                    i1l4622 0623  
                                  i1l4710 083B                                    i1l4480 0E85  
                                  i1l4472 0E55                                    i1l4464 0E25  
                                  i1l4456 0E01                                    i1l4368 178D  
                                  i1l4376 1798                                    i1l3816 0B3B  
                                  i1l3840 0CC1                                    i1l3832 0C9D  
                                  i1l3824 0C71                                    i1l3912 0AAB  
                                  i1l3904 0A8F                                    i1l3920 0ABB  
                                  i1l4616 0461                                    i1l4608 0449  
                                  i1l4560 038A                                    i1l4552 0363  
                                  i1l4544 0336                                    i1l4536 0319  
                                  i1l4528 02FA                                    i1l4720 082C  
                                  i1l4392 17AB                                    i1l4384 17A1  
                                  i1l4632 0723                                    i1l4640 0738  
                                  i1l4624 0630                                    i1l4712 0843  
                                  i1l4490 0EB6                                    i1l4482 0E91  
                                  i1l4474 0E61                                    i1l4466 0E31  
                                  i1l4458 0E02                                    i1l4730 081C  
                                  i1l4378 179A                                    i1l3850 0CF1  
                                  i1l3842 0CCD                                    i1l3834 0CA9  
                                  i1l3826 0C7D                                    i1l3914 0AAF  
                                  i1l3906 0A94                                    i1l3930 09B6  
                                  i1l4618 0468                                    i1l4570 03B4  
                                  i1l4562 0398                                    i1l4554 0378  
                                  i1l4546 033B                                    i1l4538 031F  
                                  i1l4722 0833                                    i1l4386 17A6  
                                  i1l4394 17AD                                    i1l4650 0753  
                                  i1l4642 073E                                    i1l4634 0729  
                                  i1l4626 063D                                    i1l4714 084A  
                                  i1l4492 0EBC                                    i1l4476 0E6D  
                                  i1l4468 0E3D                                    i1l4484 0EAA  
                                  i1l4724 080B                                    i1l3852 0CF7  
                                  i1l3844 0CD3                                    i1l3836 0CAF  
                                  i1l3828 0C8E                                    i1l3916 0AB0  
                                  i1l3908 0A98                                    i1l3940 09D1  
                                  i1l3932 09BA                                    i1l3924 09A8  
                                  i1l4580 03DE                                    i1l4572 03B7  
                                  i1l4564 039E                                    i1l4556 037F  
                                  i1l4548 0340                                    i1l4716 0822  
                                  i1l4396 17AF                                    i1l4388 17A7  
                                  i1l3860 0880                                    i1l4660 075C  
                                  i1l4652 0756                                    i1l4644 0744  
                                  i1l4636 072A                                    i1l4628 071F  
                                  i1l4708 0839                                    i1l4494 0EBD  
                                  i1l4486 0EB1                                    i1l4478 0E79  
                                  i1l4726 080D                                    i1l3854 0D03  
                                  i1l3846 0CDF                                    i1l3838 0CBB  
                                  i1l3870 172E                                    i1l3918 0AB5  
                                  i1l3934 09BE                                    i1l3926 09AE  
                                  i1l3942 09D7                                    i1l4590 040B  
                                  i1l4582 03ED                                    i1l4566 03A1  
                                  i1l4558 0384                                    i1l4574 03BB  
                                  i1l4718 0824                                    i1l3862 088A  
                                  i1l4670 0774                                    i1l4662 0762  
                                  i1l4654 0758                                    i1l4646 0749  
                                  i1l4638 0731                                    i1l4496 0EC3  
                                  i1l4488 0EB5                                    i1l4728 0815  
                                  i1l3792 0AFE                                    i1l3856 0D09  
                                  i1l3848 0CE5                                    i1l3936 09C8  
                                  i1l3928 09B1                                    i1l3880 17C2  
                                  i1l3872 17B3                                    i1l4592 041A  
                                  i1l4584 03F1                                    i1l4576 03C8  
                                  i1l4568 03AE                                    i1l3864 0898  
                                  i1l4672 0776                                    i1l4664 0767  
                                  i1l4648 074E                                    i1l4656 075A  
                                  i1l4498 0EC9                                    i1l3794 0B01  
                                  i1l3858 0D1A                                    i1l3938 09CC  
                                  i1l3890 08E3                                    i1l3874 17B4  
                                  i1l3946 16F2                                    i1l4594 041E  
                                  i1l4586 03F5                                    i1l4578 03CE  
                                  i1l4666 076C                                    i1l4674 0778  
                                  i1l4658 075B                                    i1l3868 16EC  
                                  i1l3892 08E8                                    i1l3884 08D4  
                                  i1l3876 17BA                                    i1l4596 0425  
                                  i1l4588 03FB                                    i1l4676 0779  
                                  i1l4668 0771                                    i1l3894 08EE  
                                  i1l3886 08D6                                    i1l3878 17C0  
                                  i1l4598 042B                                    i1l3990 17CB  
                                  i1l3982 17C5                                    i1l3888 08DA  
                                  i1l3992 17D1                                    u302_20 17D1  
                                  i1l3984 17C8                                    u310_20 0F4F  
                                  i1l4960 000A                                    u302_21 17D0  
                                  u310_21 0F4E                                    i1l3898 0A84  
                                  i1l3986 17C9                                    i1l4970 0027  
                                  i1l4962 000F                                    i1l3988 17CA  
                                  i1l4972 002B                                    i1l4964 0013  
                                  i1l3998 16FE                                    i1l4974 0033  
                                  i1l4966 001B                                    i1l4958 0006  
                                  u311_20 0F61                                    u303_20 0EFF  
                                  i1l4968 001F                                    u311_21 0F60  
                                  u303_21 0EFE                                    i1l4978 003C  
                                  u400_20 0443                                    u320_20 0FB6  
                                  u312_20 0F67                                    u304_20 0F04  
                                  u400_21 0442                                    u320_21 0FB5  
                                  u312_21 0F66                                    u304_21 0F03  
                                  u401_20 0450                                    u321_20 0FBB  
                                  u313_20 0F72                                    u305_20 0F0F  
                                  u401_21 044F                                    u321_21 0FBA  
                                  u313_21 0F71                                    u305_21 0F0E  
                                  _LCDcmd 1726                                    u250_20 0B05  
                                  u330_20 0997                                    u402_20 045C  
                                  u322_20 0FC6                                    u314_20 0F77  
                                  u306_20 0F1F                                    u410_20 0749  
                                  u250_21 0B04                                    u330_21 0996  
                                  u402_21 045B                                    u322_21 0FC5  
                                  u314_21 0F76                                    u306_21 0F1E  
                                  u410_21 0748                                    u251_20 0B0F  
                                  u331_20 047A                                    u403_20 0468  
                                  u323_20 0FD6                                    u315_20 0F7B  
                                  u307_20 0F2F                                    u411_20 074E  
                                  u251_21 0B0E                                    u331_21 0479  
                                  u403_21 0467                                    u323_21 0FD5  
                                  u315_21 0F7A                                    u307_21 0F2E  
                                  u411_21 074D                                    u252_20 0B18  
                                  u260_20 0C89                                    u340_20 0558  
                                  u332_20 04A4                                    u324_20 0FE8  
                                  u316_20 0F86                                    u308_20 0F34  
                                  u412_20 0762                                    u252_21 0B17  
                                  u260_21 0C88                                    u340_21 0557  
                                  u332_21 04A3                                    u324_21 0FE7  
                                  u316_21 0F85                                    u308_21 0F33  
                                  u412_21 0761                                    u404_25 061A  
                                  u253_20 0B1E                                    u261_20 0C8E  
                                  u341_20 055E                                    u333_20 04D7  
                                  u325_20 0FEE                                    u317_20 0F8B  
                                  u309_20 0F3F                                    u413_20 0767  
                                  u405_20 0630                                    u253_21 0B1D  
                                  u261_21 0C8D                                    u341_21 055D  
                                  u333_21 04D6                                    u325_21 0FED  
                                  u317_21 0F8A                                    u309_21 0F3E  
                                  u413_21 0766                                    u405_21 062F  
                                  u405_25 062C                                    u350_20 08CD  
                                  u254_20 0B23                                    u270_20 0D1A  
                                  u262_20 0C99                                    u342_20 056F  
                                  u334_20 04FE                                    u326_20 0FF9  
                                  u318_20 0F96                                    u414_20 076C  
                                  u406_20 063D                                    u350_21 08CC  
                                  u254_21 0B22                                    u270_21 0D19  
                                  u262_21 0C98                                    u342_21 056E  
                                  u334_21 04FD                                    u326_21 0FF8  
                                  u318_21 0F95                                    u414_21 076B  
                                  u406_21 063C                                    u406_25 0639  
                                  u351_20 1784                                    u255_20 0B2E  
                                  u263_20 0CA9                                    u343_20 0584  
                                  u335_20 0522                                    u271_20 088A  
                                  u327_20 0FFE                                    u319_20 0FA6  
                                  u407_20 0729                                    u351_21 1783  
                                  u255_21 0B2D                                    u263_21 0CA8  
                                  u343_21 0583                                    u335_21 0521  
                                  u271_21 0889                                    u327_21 0FFD  
                                  u319_21 0FA5                                    u407_21 0728  
                                  u335_25 051E                                    u511_27 0D1B  
                                  u352_20 1795                                    u256_20 0B37  
                                  u264_20 0CBB                                    u328_20 17E9  
                                  u280_20 0A8C                                    u344_20 058B  
                                  u336_20 052D                                    u272_20 0893  
                                  u408_20 073E                                    u416_20 084A  
                                  u352_21 1794                                    u256_21 0B36  
                                  u264_21 0CBA                                    u328_21 17E8  
                                  u280_21 0A8B                                    u344_21 058A  
                                  u336_21 052C                                    u272_21 0892  
                                  u408_21 073D                                    u416_21 0849  
                                  u257_20 0B3B                                    u265_20 0CCD  
                                  u329_20 0981                                    u345_20 05A0  
                                  u337_20 0533                                    u417_20 0833  
                                  u353_20 17A6                                    u273_20 0898  
                                  u409_20 0744                                    u257_21 0B3A  
                                  u265_21 0CCC                                    u329_21 0980  
                                  u345_21 059F                                    u337_21 0532  
                                  u417_21 0832                                    u353_21 17A5  
                                  u273_21 0897                                    u409_21 0743  
                                  u281_25 0A90                                    u418_20 081C  
                                  u258_20 0B46                                    u266_20 0CDF  
                                  u282_20 0A9C                                    u290_20 09C8  
                                  u274_20 17BA                                    u346_20 05A6  
                                  u338_20 0539                                    u418_21 081B  
                                  u258_21 0B45                                    u266_21 0CDE  
                                  u282_21 0A9B                                    u290_21 09C7  
                                  u274_21 17B9                                    u346_21 05A5  
                                  u338_21 0538                             main@corrupted 00AE  
                                  u290_25 09C4                                    u267_20 0CF1  
                                  u275_20 17C0                                    u347_20 05F1  
                                  u339_20 0548                                    u267_21 0CF0  
                                  u275_21 17BF                                    u347_21 05F0  
                                  u339_21 0547                                    u259_25 0C74  
                                  u283_25 0A9D                                    u291_25 09CD  
                                  u339_25 0544                                    u380_20 0EF0  
                                  u372_20 0DFD                                    u268_20 0D03  
                                  u284_20 0AAB                                    u292_20 09D7  
                                  u276_20 08DA                                    u348_20 0605  
                                  u380_21 0EED                                    u372_21 0DFC  
                                  u268_21 0D02                                    u284_21 0AAA  
                                  u292_21 09D6                                    u276_21 08D9  
                                  u348_21 0604                                    u284_25 0AA7  
                                  _LCDstr 17D6                                    u373_20 0EB1  
                                  u269_20 0D15                                    u373_21 0EB0  
                                  u269_21 0D14                                    u381_24 0EF2  
                                  u285_25 0AB1                                    u277_25 08DF  
                                  u349_25 17F9                                    u374_20 0EBC  
                                  u286_20 0ABB                                    u390_20 0346  
                                  u382_20 0298                                    u470_20 000A  
                                  u374_21 0EBB                                    u286_21 0ABA  
                                  u390_21 0345                                    u382_21 0297  
                                  u470_21 0009                                    u278_25 08E4  
                                  u375_20 0EC3                                    u287_20 09AE  
                                  u279_20 08EE                                    u391_20 037F  
                                  u383_20 02E2                                    u471_20 000F  
                                  u375_21 0EC2                                    u287_21 09AD  
                                  u279_21 08ED                                    u391_21 037E  
                                  u383_21 02E1                                    u471_21 000E  
                                  u376_20 0EC9                                    u392_20 0384  
                                  u384_20 02F1                                    u472_20 0013  
                                  u376_21 0EC8                                    u392_21 0383  
                                  u384_21 02F0                                    u472_21 0012  
                                  u288_25 09B2                                    u377_20 0ECF  
                                  u289_20 09BE                                    u393_20 0398  
                                  u385_20 0308                                    u473_20 001B  
                                  u377_21 0ECE                                    u289_21 09BD  
                                  u393_21 0397                                    u385_21 0307  
                                  u473_21 001A                                    u393_25 0394  
                                  u378_20 0ED5                                    u394_20 03AE  
                                  u386_20 031F                                    u474_20 001F  
                                  u378_21 0ED4                                    u394_21 03AD  
                                  u386_21 031E                                    u474_21 001E  
                                  u379_20 0EDB                                    u395_20 03CE  
                                  u387_20 0336                                    u475_20 0027  
                                  u379_21 0EDA                                    u395_21 03CD  
                                  u387_21 0335                                    u475_21 0026  
                                  u396_20 03FB                                    u388_20 033B  
                                  u476_20 002B                                    u396_21 03FA  
                                  u388_21 033A                                    u476_21 002A  
                                  _OSCFRQ 0893                                    u397_20 0425  
                                  u389_20 0340                                    u477_20 0033  
                                  u397_21 0424                                    u389_21 033F  
                                  u477_21 0032                                    u398_20 042B  
                                  u478_20 0037                                    u398_21 042A  
                                  u478_21 0036                                    u399_20 0437  
                                  u479_20 003C                                    u399_21 0436  
                                  u479_21 003B                                    _PWM6EN 1C77  
                               ??_ReadI2C 0070                               LCDsend2x4@c 00A5  
                         _TMR3_WriteTimer 1790                          __end_of_editTemp 0A4C  
            __end_ofi1_PWM6_LoadDutyValue 1800      __end_of_TMR1_DefaultInterruptHandler 0004  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 0003  
                            _CCPTMRS1bits 021F                             ?i1_LCDsend2x4 0072  
                                  ___wmul 08D4                         __end_of_TMR2_Stop 16FB  
                               ??___lwdiv 0074                                 ??___lwmod 007C  
                     __size_of_TMR2_Start 0003                   __end_of_PWM6_Initialize 1762  
                               ??_editLum 00A0                   __end_of_DATAEE_ReadByte 177F  
                 __size_of_monitoring_ISR 0171                           _ADCC_Initialize 0850  
                          _PMD_Initialize 1735                                 ??_isdigit 0070  
                ?i1_PWM_Output_D4_Disable 0070                           menuLCD_ISR@diff 004A  
           i1DATAEE_WriteByte@GIEBitValue 0079         __size_of_ADCC_GetSingleConversion 0012  
               ?_ADCC_GetSingleConversion 0070                   __end_of_TMR2_StartTimer 1702  
TMR5_SetInterruptHandler@InterruptHandler 00A0  TMR3_SetInterruptHandler@InterruptHandler 00A0  
TMR1_SetInterruptHandler@InterruptHandler 00A0                                 ??_sprintf 0028  
                 __end_of_TMR1_WriteTimer 1790                   ??_PWM_Output_D4_Disable 00A0  
                     __size_ofi1_WriteI2C 004B                          ?_TMR1_Initialize 0070  
                 __end_of_TMR5_Initialize 0950                         _SYSTEM_Initialize 089A  
                 __end_of__initialization 006F                        ?_SYSTEM_Initialize 0070  
                       __end_of_Clock_ISR 0EF3                           _TMR5_WriteTimer 17A1  
                    __size_of_menuLCD_ISR 01DC                            __pcstackCOMMON 0070  
                          ??i1_LCDsend2x4 0073                              __pidataBANK0 170A  
                            __pidataBANK1 16FB                       ??_SYSTEM_Initialize 00A2  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                               ?_TMR3_ISR 0070                                 ?_TMR5_ISR 0070  
                        _DATAEE_WriteByte 0950                              menuLCD_ISR@l 0047  
                      __size_of_editClock 0083           differenceBetweenTimePeriod@diff 0076  
                           __end_of_tsttc 1000                          ?_TMR2_Initialize 0070  
         differenceBetweenTimePeriod@stop 0073                    __end_of_PMD_Initialize 173D  
                            ??_LCDsend2x4 00A3                 __end_of_SYSTEM_Initialize 08B6  
                            sprintf@width 0031                   __end_of_TMR3_WriteTimer 17A1  
                                 ??_tsttc 0072                                __pbssBANK0 004D  
                              __pbssBANK1 00B9                    i1DATAEE_WriteByte@bAdd 0076  
                                 ?_LCDcmd 0070                          ?_TMR3_Initialize 0070  
                                 ?_LCDstr 0070                                   LCDcmd@c 0078  
                                 LCDstr@c 007A                                   LCDstr@p 007B  
                              __pmaintext 0073          __end_of_TMR3_SetInterruptHandler 171A  
                                 ?___wmul 0070                                ??_TMR1_ISR 007B  
                              ??_TMR3_ISR 007E                   __end_of_ADCC_Initialize 0867  
              __end_of_PWM6_LoadDutyValue 0880                                ??_TMR5_ISR 007D  
                              __pintentry 0004                                   _ADFLTRH 0115  
                                 _ADFLTRL 0114                      __size_ofi1_TMR2_Stop 0003  
                      __end_of_LCDsend2x4 0DF2                                   _ADPREVH 008F  
                                 _ADPREVL 008E                                 ?_WriteI2C 0070  
                        ?_PWM6_Initialize 0070                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112           __end_ofi1_PWM_Output_D4_Disable 16F2  
                         ?_PMD_Initialize 0070                          ?_DATAEE_ReadByte 00A0  
                       ?_i2c1_driver_open 0070             i1PWM6_LoadDutyValue@dutyValue 0070  
                                 _LCDchar 172D                                   _LCDinit 0BF5  
                                 _LCDsend 0B48                        ??_i2c1_driver_open 00A0  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                               ?_editTemp 0070                      i1_PWM6_LoadDutyValue 17EA  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
                                 _PWM6DCH 038D                                   _PWM6DCL 038C  
                       ?i1_TMR2_StopTimer 0070                                   _PWM6CON 038E  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                                   _SSP1MSK 018E  
                            ??_TMR2_Start 0070                   __size_of_TMR2_StopTimer 0004  
                        ?_TMR2_StartTimer 0070                          ?_TMR1_WriteTimer 0070  
                      ??i1_TMR2_StopTimer 0070                   __end_of_TMR5_WriteTimer 17B2  
                            LCDsend2x4@hc 00A6                              LCDsend2x4@lc 00A7  
                       __end_of_editClock 07FE                          ?_TMR5_Initialize 0070  
                         __size_of_LCDcmd 0007                      DATAEE_WriteByte@bAdd 00A0  
                      _i2c1_driver_i2cISR 00BC                           __size_of_LCDstr 0014  
                                 _ReadI2C 0880                ??_TMR5_SetInterruptHandler 00A2  
                            ??i1_WriteI2C 0070                           __size_of___wmul 001F  
                                 ___lwdiv 0A84                                   ___lwmod 09A8  
                      __end_of_TMR2_Start 16EF                                ??_WriteI2C 00A0  
                                 _editLum 09DC                                   __ptext1 0A4C  
                                 __ptext2 1749                                   __ptext3 0A14  
                                 __ptext4 09DC                                   __ptext5 077B  
                                 __ptext6 1706                                   __ptext7 16F8  
                                 __ptext8 089A                                   __ptext9 0931  
                          _monitoring_ISR 060A            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 020E                                   _dpowers 180F  
                   _OSCILLATOR_Initialize 0802                                 _T2CONbits 028E  
                                 _isdigit 17B2                                 _T3CONbits 0214  
       __size_of_TMR1_SetInterruptHandler 0006                     ?i1_PWM6_LoadDutyValue 0070  
                ??_PIN_MANAGER_Initialize 00A0                 ?_TMR1_SetInterruptHandler 00A0  
                               _T2HLTbits 028F                                 _T5CONbits 021A  
                              ??_editTemp 00A0                      __end_ofi1_LCDsend2x4 0D1E  
              __size_of_SYSTEM_Initialize 001C                                   _sprintf 046D  
                                 clrloop0 1721                      end_of_initialization 006F  
                        ?_TMR3_WriteTimer 0070                                 _T2RSTbits 0291  
                      __end_ofi1_WriteI2C 0B48                            i1LCDsend2x4@hc 0076  
                          i1LCDsend2x4@lc 0077                        i1_DATAEE_WriteByte 08B6  
           __size_of_PWM_Output_D4_Enable 0003              ?_differenceBetweenTimePeriod 0070  
                     ?i1_DATAEE_WriteByte 0076                          ?_ADCC_Initialize 0070  
        __end_of_ADCC_GetSingleConversion 17D6                    __end_of_monitoring_ISR 077B  
                               _PORTBbits 000D                                 _PORTCbits 000E  
                               _TMR2_Stop 16F8                  _TMR3_SetInterruptHandler 1714  
                   _TMR5_InterruptHandler 00B1                                 _TRISCbits 0013  
                           ?_toggleAlarms 0070                      ??i1_DATAEE_WriteByte 0079  
                __end_of_DATAEE_WriteByte 0974                             _alarmPWMStart 00C1  
                        ?_TMR5_WriteTimer 0070                   TMR5_WriteTimer@timerVal 0070  
          __size_of_PWM_Output_D4_Disable 0003             __end_of_PWM_Output_D4_Disable 16F8  
                          __end_of_LCDcmd 172D                            __end_of_LCDstr 17EA  
        __size_ofi1_PWM_Output_D4_Disable 0003                            LCDsend2x4@mode 00A2  
                               _Clock_ISR 0DF2                            __end_of___wmul 08F3  
                         ?_monitoring_ISR 0070                         __size_of_TMR1_ISR 0017  
                       __size_of_TMR3_ISR 0017                         __size_of_TMR5_ISR 0017  
                              ?_TMR2_Stop 0070                    ?_OSCILLATOR_Initialize 0070  
                         main@checkSumAux 00AC                    ??i1_PWM6_LoadDutyValue 0072  
                           menuLCD_ISR@tt 0043                       start_initialization 0042  
    __end_of_TMR5_DefaultInterruptHandler 07FF     __size_of_TMR5_DefaultInterruptHandler 0001  
            _TMR5_DefaultInterruptHandler 07FE                            ??_toggleAlarms 00A0  
         __size_of_PIN_MANAGER_Initialize 003D                            _TMR2_StopTimer 1706  
                        WriteI2C@data_out 00A1                                  ??_LCDcmd 0078  
                                ??_LCDstr 0079                             ??_menuLCD_ISR 0035  
                     DATAEE_ReadByte@bAdd 00A0                  __size_of_TMR1_Initialize 001F  
                        ??_PMD_Initialize 00A0                                ?_Clock_ISR 0070  
                                ??___wmul 0074                               __pdataBANK0 006C  
                             __pdataBANK1 00C1                         _editingClockAlarm 005C  
                       __size_of_WriteI2C 005A                     __size_ofi1_LCDsend2x4 00B3  
                _ADCC_GetSingleConversion 17C4                   i1DATAEE_WriteByte@bData 0078  
                  __end_of_TMR2_StopTimer 170A                                  ?_LCDchar 0070  
                                ?_LCDinit 0070                                  ?_LCDsend 0070  
                               ___latbits 0002                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                        _PWM6_LoadDutyValue 0867  
                __size_of_TMR2_Initialize 000E                              _isdigit$2907 0070  
           ?_TMR5_DefaultInterruptHandler 0070      __size_of_differenceBetweenTimePeriod 0034  
                                LCDchar@c 0078                         __size_of_editTemp 0038  
                                LCDsend@c 00A3                       ?_PWM6_LoadDutyValue 00A0  
                             sprintf@flag 0030                 __size_of_i2c1_driver_open 000C  
                             sprintf@prec 002D                                  ?_ReadI2C 0070  
                               __pnvBANK0 0068                                 __pnvBANK1 00B1  
                               _editClock 077B                          ___lwdiv@dividend 0072  
                  _PIN_MANAGER_Initialize 0AC0                 __size_ofi1_TMR2_StopTimer 0004  
                           ??i1_TMR2_Stop 0070                  __size_of_TMR3_Initialize 001F  
                     __end_of_menuLCD_ISR 046D          __end_of_TMR1_SetInterruptHandler 1714  
         ADCC_GetSingleConversion@channel 0073                              i1_LCDsend2x4 0C6B  
                               _dimingLed 005E                                  ?___lwdiv 0070  
                                ?___lwmod 0078               _i2c1_driver_busCollisionISR 00BE  
                    ??_PWM6_LoadDutyValue 00A2                                  ?_editLum 0070  
            ??_INTERRUPT_InterruptManager 007E                               ??_TMR2_Stop 00A0  
                                ?_isdigit 0070                           ?_TMR2_StopTimer 0070  
                       i1_DATAEE_ReadByte 173D                  __size_of_PWM6_Initialize 000D  
                      ?i1_DATAEE_ReadByte 0076                          ___lwdiv@quotient 0075  
                                ?_sprintf 0020                                  _T2CLKCON 0290  
                __size_of_DATAEE_ReadByte 000F                            __size_of_tsttc 010D  
                 i1_PWM_Output_D4_Disable 16EF                       ??i1_DATAEE_ReadByte 0078  
                          ___wmul@product 0074                                  _LATAbits 0016  
                               clear_ram0 1720                                  _PIE3bits 0719  
                                _PIE4bits 071A                  __size_of_TMR2_StartTimer 0004  
                           i1LCDsend2x4@c 0075                                ?_editClock 0070  
                               _tempAlarm 0054                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 003C                                  _PIR3bits 070F  
                                _PIR4bits 0710                ??_TMR3_SetInterruptHandler 00A2  
                __size_of_TMR5_Initialize 001F                               ??_Clock_ISR 007A  
                    __end_of_toggleAlarms 0A84                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR1_ISR 080B  
                                _TMR3_ISR 0822                                  _TMR5_ISR 0839  
                                _SSP1STAT 018F                         ??_TMR1_Initialize 00A2  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                       __end_ofi1_TMR2_Stop 16F5  
                              _ADCON3bits 0096                 __end_ofi1_DATAEE_ReadByte 1749  
                       ___wmul@multiplier 0070                        i1WriteI2C@data_out 0071  
            __end_of_PWM_Output_D4_Enable 16EC         __size_of_TMR5_SetInterruptHandler 0006  
                        __size_of_LCDchar 0008                 ?_TMR5_SetInterruptHandler 00A0  
                   DATAEE_WriteByte@bData 00A2                          __size_of_LCDinit 0076  
                        __size_of_LCDsend 0053                         ?_DATAEE_WriteByte 00A0  
                       ??_TMR2_Initialize 00A0                               _menuLCD_ISR 0291  
          ??_TMR5_DefaultInterruptHandler 0070                        ??_DATAEE_WriteByte 00A3  
                        __size_of_ReadI2C 001A                                _ADSTATbits 0097  
                __size_of_TMR3_WriteTimer 0011                          ??_monitoring_ISR 007A  
                 ??_OSCILLATOR_Initialize 00A0                          __size_of___lwdiv 003C  
                        __size_of___lwmod 0034                                  _WriteI2C 0B9B  
                       ??_TMR3_Initialize 00A2                  _TMR1_SetInterruptHandler 170E  
                        i1LCDsend2x4@mode 0072                          __size_of_editLum 0038  
                   _TMR1_InterruptHandler 00B5                                sprintf@val 002E  
                                _clkAlarm 004D                  __size_of_ADCC_Initialize 0017  
                        __size_of_isdigit 0012                                  _editTemp 0A14  
                         ___lwdiv@divisor 0070                           ___lwdiv@counter 0077  
                                __ptext10 171A                                  __ptext11 0912  
                                __ptext20 0850                                  __ptext12 1714  
                                __ptext21 16F5                                  __ptext13 1762  
                              _T1GCONbits 020F                                  __ptext30 0839  
                                __ptext22 0867                                  __ptext14 08F3  
                                __ptext31 07FE                                  __ptext23 0BF5  
                                __ptext15 170E                                  __ptext40 0291  
                                __ptext32 060A                                  __ptext24 0D1E  
                                __ptext16 1755                                  __ptext41 1702  
                                __ptext33 173D                                  __ptext25 0B48  
                                __ptext17 1735                                  __ptext50 0974  
                                __ptext42 16F2                                  __ptext34 0EF3  
                                __ptext26 0B9B                                  __ptext18 0AC0  
                                __ptext51 16FE                                  __ptext43 16EF  
                                __ptext35 0880                                  __ptext27 0950  
                                __ptext19 0802                                  __ptext60 080B  
                                __ptext52 16EC                                  __ptext44 17EA  
                                __ptext36 17C4                                  __ptext28 1770  
                                __ptext61 177F                                  __ptext53 16E9  
                                __ptext45 046D                                  __ptext37 17A1  
                                __ptext62 0DF2                                  __ptext54 17D6  
                                __ptext46 17B2                                  __ptext38 0822  
                                __ptext63 0003                                  __ptext55 172D  
                                __ptext47 08D4                                  __ptext39 07FF  
                                __ptext64 08B6                                  __ptext56 1726  
                                __ptext48 09A8                                  __ptext57 0C6B  
                                __ptext49 0A84                                  __ptext58 0AFD  
                                __ptext59 1790                              _SSP1CON1bits 0190  
                            _SSP1CON2bits 0191                 ??i1_PWM_Output_D4_Disable 0070  
             __size_ofi1_DATAEE_WriteByte 001E                          __size_of_sprintf 019D  
                              _T3GCONbits 0215               DATAEE_WriteByte@GIEBitValue 00A3  
                 TMR3_WriteTimer@timerVal 0070                          _i2c1_driver_open 1749  
                       ??_PWM6_Initialize 00A0                             __size_of_main 021E  
                              _T5GCONbits 021B                                  _lumAlarm 0051  
                       ??_DATAEE_ReadByte 00A2                                  _lumLevel 0062  
                   _PWM_Output_D4_Disable 16F5                               ??_editClock 00A0  
                        _editingTempAlarm 0061                          i1_TMR2_StopTimer 1702  
                __size_of_TMR5_WriteTimer 0011                                  _prevTemp 006E  
                              tsttc@value 0073                               i1_TMR2_Stop 16F2  
              ??_ADCC_GetSingleConversion 0073                                  int$flags 007E  
                       ??_TMR2_StartTimer 0070        __end_of_INTERRUPT_InterruptManager 0040  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                         menuLCD_ISR@F12812 00B9  
    __end_of_TMR3_DefaultInterruptHandler 0800     __size_of_TMR3_DefaultInterruptHandler 0001  
            _TMR3_DefaultInterruptHandler 07FF                         ??_TMR5_Initialize 00A2  
              __size_ofi1_DATAEE_ReadByte 000C                                _INTCONbits 000B  
                             _NVMCON1bits 081E                              _prevLumLevel 006C  
           __size_ofi1_PWM6_LoadDutyValue 0016                                  isdigit@c 0071  
                              _LCDsend2x4 0D1E                                  intlevel1 0000  
                               sprintf@ap 002C                                 sprintf@sp 0034  
                        ___lwmod@dividend 007A                   ?_PIN_MANAGER_Initialize 0070  
                   __size_of_toggleAlarms 0038                           _editingLumAlarm 0060  
                    _PWM_Output_D4_Enable 16E9       __end_of_differenceBetweenTimePeriod 09A8  
             _differenceBetweenTimePeriod 0974                          ??_TMR2_StopTimer 00A0  
                       ??_TMR3_WriteTimer 0072                             __pstringtext1 180F  
                           __pstringtext2 1800                             __pstringtext3 1819  
                           __pstringtext4 1820                             __pstringtext5 0000  
           ??_differenceBetweenTimePeriod 0077                                  sprintf@c 0033  
                                sprintf@f 0020             ?_TMR3_DefaultInterruptHandler 0070  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                         ___lwmod@divisor 0078                           ___lwmod@counter 007D  
                          _idx_RingBuffer 0064               PWM6_LoadDutyValue@dutyValue 00A0  
                            _toggleAlarms 0A4C                                _TMR2_Start 16EC  
          __end_of_PIN_MANAGER_Initialize 0AFD                         ??_ADCC_Initialize 00A0  
                  ?_PWM_Output_D4_Disable 0070                     ?_PWM_Output_D4_Enable 0070  
                         _TMR1_Initialize 08F3  
