

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri Oct 30 18:35:00 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text38,local,class=CODE,merge=1,delta=2,group=3
    62                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	text53,local,class=CODE,merge=1,delta=2
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	text55,local,class=CODE,merge=1,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    81                           	dabs	1,0x7E,2
    82  0000                     
    83                           ; Version 2.30
    84                           ; Generated 15/09/2020 GMT
    85                           ; 
    86                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution. Publication is not required when
   100                           ;        this file is used in an embedded application.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC16F18875 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118  0000                     	;# 
   119  0001                     	;# 
   120  0002                     	;# 
   121  0003                     	;# 
   122  0004                     	;# 
   123  0005                     	;# 
   124  0006                     	;# 
   125  0007                     	;# 
   126  0008                     	;# 
   127  0009                     	;# 
   128  000A                     	;# 
   129  000B                     	;# 
   130  000C                     	;# 
   131  000D                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001C                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001D                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  008C                     	;# 
   152  008C                     	;# 
   153  008D                     	;# 
   154  008E                     	;# 
   155  008E                     	;# 
   156  008F                     	;# 
   157  0090                     	;# 
   158  0090                     	;# 
   159  0091                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0095                     	;# 
   163  0096                     	;# 
   164  0097                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009A                     	;# 
   168  009B                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  010C                     	;# 
   173  010D                     	;# 
   174  010E                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  0110                     	;# 
   178  0110                     	;# 
   179  0111                     	;# 
   180  0112                     	;# 
   181  0112                     	;# 
   182  0113                     	;# 
   183  0114                     	;# 
   184  0114                     	;# 
   185  0115                     	;# 
   186  0116                     	;# 
   187  0116                     	;# 
   188  0117                     	;# 
   189  0119                     	;# 
   190  0119                     	;# 
   191  0119                     	;# 
   192  011A                     	;# 
   193  011A                     	;# 
   194  011A                     	;# 
   195  011B                     	;# 
   196  011B                     	;# 
   197  011B                     	;# 
   198  011B                     	;# 
   199  011B                     	;# 
   200  011C                     	;# 
   201  011C                     	;# 
   202  011C                     	;# 
   203  011D                     	;# 
   204  011D                     	;# 
   205  011D                     	;# 
   206  011E                     	;# 
   207  011E                     	;# 
   208  011E                     	;# 
   209  011F                     	;# 
   210  011F                     	;# 
   211  011F                     	;# 
   212  011F                     	;# 
   213  011F                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  018E                     	;# 
   217  018F                     	;# 
   218  0190                     	;# 
   219  0191                     	;# 
   220  0192                     	;# 
   221  0196                     	;# 
   222  0197                     	;# 
   223  0198                     	;# 
   224  0199                     	;# 
   225  019A                     	;# 
   226  019B                     	;# 
   227  019C                     	;# 
   228  020C                     	;# 
   229  020C                     	;# 
   230  020D                     	;# 
   231  020E                     	;# 
   232  020F                     	;# 
   233  020F                     	;# 
   234  0210                     	;# 
   235  0210                     	;# 
   236  0211                     	;# 
   237  0211                     	;# 
   238  0212                     	;# 
   239  0212                     	;# 
   240  0213                     	;# 
   241  0214                     	;# 
   242  0215                     	;# 
   243  0215                     	;# 
   244  0216                     	;# 
   245  0216                     	;# 
   246  0217                     	;# 
   247  0217                     	;# 
   248  0218                     	;# 
   249  0218                     	;# 
   250  0219                     	;# 
   251  021A                     	;# 
   252  021B                     	;# 
   253  021B                     	;# 
   254  021C                     	;# 
   255  021C                     	;# 
   256  021D                     	;# 
   257  021D                     	;# 
   258  021E                     	;# 
   259  021F                     	;# 
   260  028C                     	;# 
   261  028C                     	;# 
   262  028D                     	;# 
   263  028D                     	;# 
   264  028E                     	;# 
   265  028F                     	;# 
   266  0290                     	;# 
   267  0290                     	;# 
   268  0291                     	;# 
   269  0292                     	;# 
   270  0292                     	;# 
   271  0293                     	;# 
   272  0293                     	;# 
   273  0294                     	;# 
   274  0295                     	;# 
   275  0296                     	;# 
   276  0296                     	;# 
   277  0297                     	;# 
   278  0298                     	;# 
   279  0298                     	;# 
   280  0299                     	;# 
   281  0299                     	;# 
   282  029A                     	;# 
   283  029B                     	;# 
   284  029C                     	;# 
   285  029C                     	;# 
   286  029D                     	;# 
   287  030C                     	;# 
   288  030C                     	;# 
   289  030D                     	;# 
   290  030E                     	;# 
   291  030F                     	;# 
   292  0310                     	;# 
   293  0310                     	;# 
   294  0311                     	;# 
   295  0312                     	;# 
   296  0313                     	;# 
   297  0314                     	;# 
   298  0314                     	;# 
   299  0315                     	;# 
   300  0316                     	;# 
   301  0317                     	;# 
   302  0318                     	;# 
   303  0318                     	;# 
   304  0319                     	;# 
   305  031A                     	;# 
   306  031B                     	;# 
   307  031C                     	;# 
   308  031C                     	;# 
   309  031D                     	;# 
   310  031E                     	;# 
   311  031F                     	;# 
   312  038C                     	;# 
   313  038C                     	;# 
   314  038D                     	;# 
   315  038E                     	;# 
   316  0390                     	;# 
   317  0390                     	;# 
   318  0391                     	;# 
   319  0392                     	;# 
   320  040C                     	;# 
   321  040D                     	;# 
   322  040E                     	;# 
   323  040F                     	;# 
   324  0410                     	;# 
   325  0411                     	;# 
   326  0416                     	;# 
   327  0416                     	;# 
   328  0417                     	;# 
   329  0418                     	;# 
   330  0418                     	;# 
   331  0419                     	;# 
   332  041A                     	;# 
   333  041A                     	;# 
   334  041B                     	;# 
   335  041C                     	;# 
   336  041C                     	;# 
   337  041D                     	;# 
   338  041E                     	;# 
   339  041F                     	;# 
   340  048C                     	;# 
   341  048C                     	;# 
   342  048D                     	;# 
   343  048E                     	;# 
   344  048F                     	;# 
   345  048F                     	;# 
   346  0490                     	;# 
   347  0491                     	;# 
   348  0492                     	;# 
   349  0492                     	;# 
   350  0493                     	;# 
   351  0494                     	;# 
   352  0495                     	;# 
   353  0495                     	;# 
   354  0496                     	;# 
   355  0497                     	;# 
   356  0498                     	;# 
   357  0499                     	;# 
   358  049A                     	;# 
   359  049B                     	;# 
   360  049C                     	;# 
   361  049D                     	;# 
   362  050C                     	;# 
   363  050C                     	;# 
   364  050D                     	;# 
   365  050E                     	;# 
   366  050F                     	;# 
   367  050F                     	;# 
   368  0510                     	;# 
   369  0511                     	;# 
   370  0512                     	;# 
   371  0512                     	;# 
   372  0513                     	;# 
   373  0514                     	;# 
   374  0515                     	;# 
   375  0515                     	;# 
   376  0516                     	;# 
   377  0517                     	;# 
   378  0518                     	;# 
   379  0519                     	;# 
   380  051A                     	;# 
   381  051B                     	;# 
   382  051C                     	;# 
   383  051D                     	;# 
   384  058C                     	;# 
   385  058C                     	;# 
   386  058D                     	;# 
   387  058E                     	;# 
   388  058F                     	;# 
   389  058F                     	;# 
   390  0590                     	;# 
   391  0591                     	;# 
   392  0592                     	;# 
   393  0593                     	;# 
   394  060C                     	;# 
   395  060D                     	;# 
   396  060E                     	;# 
   397  060F                     	;# 
   398  0610                     	;# 
   399  0611                     	;# 
   400  0612                     	;# 
   401  0613                     	;# 
   402  0614                     	;# 
   403  0616                     	;# 
   404  0617                     	;# 
   405  0618                     	;# 
   406  0619                     	;# 
   407  061A                     	;# 
   408  061B                     	;# 
   409  061C                     	;# 
   410  061D                     	;# 
   411  061E                     	;# 
   412  068C                     	;# 
   413  068D                     	;# 
   414  068E                     	;# 
   415  068F                     	;# 
   416  0690                     	;# 
   417  0691                     	;# 
   418  0692                     	;# 
   419  0693                     	;# 
   420  0694                     	;# 
   421  070C                     	;# 
   422  070D                     	;# 
   423  070E                     	;# 
   424  070F                     	;# 
   425  0710                     	;# 
   426  0711                     	;# 
   427  0712                     	;# 
   428  0713                     	;# 
   429  0714                     	;# 
   430  0716                     	;# 
   431  0717                     	;# 
   432  0718                     	;# 
   433  0719                     	;# 
   434  071A                     	;# 
   435  071B                     	;# 
   436  071C                     	;# 
   437  071D                     	;# 
   438  071E                     	;# 
   439  0796                     	;# 
   440  0797                     	;# 
   441  0798                     	;# 
   442  0799                     	;# 
   443  079A                     	;# 
   444  079B                     	;# 
   445  080C                     	;# 
   446  080D                     	;# 
   447  080E                     	;# 
   448  080F                     	;# 
   449  0810                     	;# 
   450  0811                     	;# 
   451  0812                     	;# 
   452  0813                     	;# 
   453  0814                     	;# 
   454  081A                     	;# 
   455  081B                     	;# 
   456  081C                     	;# 
   457  081D                     	;# 
   458  081E                     	;# 
   459  081F                     	;# 
   460  088C                     	;# 
   461  088D                     	;# 
   462  088E                     	;# 
   463  088F                     	;# 
   464  0890                     	;# 
   465  0891                     	;# 
   466  0892                     	;# 
   467  0893                     	;# 
   468  0895                     	;# 
   469  0896                     	;# 
   470  0897                     	;# 
   471  0898                     	;# 
   472  0899                     	;# 
   473  089A                     	;# 
   474  089B                     	;# 
   475  090C                     	;# 
   476  090E                     	;# 
   477  090F                     	;# 
   478  091F                     	;# 
   479  091F                     	;# 
   480  098F                     	;# 
   481  098F                     	;# 
   482  0990                     	;# 
   483  0991                     	;# 
   484  0992                     	;# 
   485  0993                     	;# 
   486  0994                     	;# 
   487  0995                     	;# 
   488  0996                     	;# 
   489  0997                     	;# 
   490  0E0F                     	;# 
   491  0E10                     	;# 
   492  0E11                     	;# 
   493  0E12                     	;# 
   494  0E13                     	;# 
   495  0E14                     	;# 
   496  0E15                     	;# 
   497  0E16                     	;# 
   498  0E17                     	;# 
   499  0E18                     	;# 
   500  0E19                     	;# 
   501  0E1A                     	;# 
   502  0E1B                     	;# 
   503  0E1C                     	;# 
   504  0E1D                     	;# 
   505  0E1E                     	;# 
   506  0E1F                     	;# 
   507  0E20                     	;# 
   508  0E21                     	;# 
   509  0E22                     	;# 
   510  0E23                     	;# 
   511  0E24                     	;# 
   512  0E25                     	;# 
   513  0E26                     	;# 
   514  0E27                     	;# 
   515  0E28                     	;# 
   516  0E29                     	;# 
   517  0E2A                     	;# 
   518  0E2B                     	;# 
   519  0E2C                     	;# 
   520  0E2D                     	;# 
   521  0E2E                     	;# 
   522  0E2F                     	;# 
   523  0E30                     	;# 
   524  0E31                     	;# 
   525  0E32                     	;# 
   526  0E33                     	;# 
   527  0E34                     	;# 
   528  0E35                     	;# 
   529  0E36                     	;# 
   530  0E37                     	;# 
   531  0E8F                     	;# 
   532  0E90                     	;# 
   533  0E91                     	;# 
   534  0E92                     	;# 
   535  0E93                     	;# 
   536  0E94                     	;# 
   537  0E95                     	;# 
   538  0E96                     	;# 
   539  0E97                     	;# 
   540  0E9C                     	;# 
   541  0E9D                     	;# 
   542  0E9E                     	;# 
   543  0EA1                     	;# 
   544  0EA2                     	;# 
   545  0EA3                     	;# 
   546  0EA4                     	;# 
   547  0EA5                     	;# 
   548  0EA9                     	;# 
   549  0EAA                     	;# 
   550  0EAB                     	;# 
   551  0EAC                     	;# 
   552  0EB1                     	;# 
   553  0EB2                     	;# 
   554  0EB3                     	;# 
   555  0EB8                     	;# 
   556  0EB9                     	;# 
   557  0EBA                     	;# 
   558  0EBB                     	;# 
   559  0EBC                     	;# 
   560  0EBD                     	;# 
   561  0EBE                     	;# 
   562  0EC3                     	;# 
   563  0EC5                     	;# 
   564  0EC6                     	;# 
   565  0EC7                     	;# 
   566  0EC8                     	;# 
   567  0EC9                     	;# 
   568  0ECA                     	;# 
   569  0ECB                     	;# 
   570  0ECC                     	;# 
   571  0F10                     	;# 
   572  0F11                     	;# 
   573  0F12                     	;# 
   574  0F13                     	;# 
   575  0F14                     	;# 
   576  0F15                     	;# 
   577  0F16                     	;# 
   578  0F17                     	;# 
   579  0F18                     	;# 
   580  0F19                     	;# 
   581  0F1A                     	;# 
   582  0F1B                     	;# 
   583  0F1C                     	;# 
   584  0F1D                     	;# 
   585  0F1E                     	;# 
   586  0F1F                     	;# 
   587  0F20                     	;# 
   588  0F21                     	;# 
   589  0F22                     	;# 
   590  0F23                     	;# 
   591  0F24                     	;# 
   592  0F25                     	;# 
   593  0F26                     	;# 
   594  0F27                     	;# 
   595  0F28                     	;# 
   596  0F29                     	;# 
   597  0F2A                     	;# 
   598  0F2B                     	;# 
   599  0F2C                     	;# 
   600  0F2D                     	;# 
   601  0F2E                     	;# 
   602  0F2F                     	;# 
   603  0F30                     	;# 
   604  0F31                     	;# 
   605  0F32                     	;# 
   606  0F38                     	;# 
   607  0F39                     	;# 
   608  0F3A                     	;# 
   609  0F3B                     	;# 
   610  0F3C                     	;# 
   611  0F3D                     	;# 
   612  0F3E                     	;# 
   613  0F3F                     	;# 
   614  0F40                     	;# 
   615  0F41                     	;# 
   616  0F43                     	;# 
   617  0F44                     	;# 
   618  0F45                     	;# 
   619  0F46                     	;# 
   620  0F47                     	;# 
   621  0F48                     	;# 
   622  0F49                     	;# 
   623  0F4A                     	;# 
   624  0F4B                     	;# 
   625  0F4C                     	;# 
   626  0F4E                     	;# 
   627  0F4F                     	;# 
   628  0F50                     	;# 
   629  0F51                     	;# 
   630  0F52                     	;# 
   631  0F53                     	;# 
   632  0F54                     	;# 
   633  0F55                     	;# 
   634  0F56                     	;# 
   635  0F57                     	;# 
   636  0F59                     	;# 
   637  0F5A                     	;# 
   638  0F5B                     	;# 
   639  0F5C                     	;# 
   640  0F5D                     	;# 
   641  0F61                     	;# 
   642  0F62                     	;# 
   643  0F64                     	;# 
   644  0F65                     	;# 
   645  0F66                     	;# 
   646  0F67                     	;# 
   647  0F68                     	;# 
   648  0F69                     	;# 
   649  0F6A                     	;# 
   650  0F6B                     	;# 
   651  0F6C                     	;# 
   652  0F6D                     	;# 
   653  0FE4                     	;# 
   654  0FE5                     	;# 
   655  0FE6                     	;# 
   656  0FE7                     	;# 
   657  0FE8                     	;# 
   658  0FE9                     	;# 
   659  0FEA                     	;# 
   660  0FEB                     	;# 
   661  0FED                     	;# 
   662  0FEE                     	;# 
   663  0FEF                     	;# 
   664  0000                     	;# 
   665  0001                     	;# 
   666  0002                     	;# 
   667  0003                     	;# 
   668  0004                     	;# 
   669  0005                     	;# 
   670  0006                     	;# 
   671  0007                     	;# 
   672  0008                     	;# 
   673  0009                     	;# 
   674  000A                     	;# 
   675  000B                     	;# 
   676  000C                     	;# 
   677  000D                     	;# 
   678  000E                     	;# 
   679  000F                     	;# 
   680  0010                     	;# 
   681  0011                     	;# 
   682  0012                     	;# 
   683  0013                     	;# 
   684  0014                     	;# 
   685  0015                     	;# 
   686  0016                     	;# 
   687  0017                     	;# 
   688  0018                     	;# 
   689  0019                     	;# 
   690  001A                     	;# 
   691  001C                     	;# 
   692  001C                     	;# 
   693  001D                     	;# 
   694  001D                     	;# 
   695  001E                     	;# 
   696  001F                     	;# 
   697  008C                     	;# 
   698  008C                     	;# 
   699  008D                     	;# 
   700  008E                     	;# 
   701  008E                     	;# 
   702  008F                     	;# 
   703  0090                     	;# 
   704  0090                     	;# 
   705  0091                     	;# 
   706  0093                     	;# 
   707  0094                     	;# 
   708  0095                     	;# 
   709  0096                     	;# 
   710  0097                     	;# 
   711  0098                     	;# 
   712  0099                     	;# 
   713  009A                     	;# 
   714  009B                     	;# 
   715  009C                     	;# 
   716  009D                     	;# 
   717  009E                     	;# 
   718  010C                     	;# 
   719  010D                     	;# 
   720  010E                     	;# 
   721  010E                     	;# 
   722  010F                     	;# 
   723  0110                     	;# 
   724  0110                     	;# 
   725  0111                     	;# 
   726  0112                     	;# 
   727  0112                     	;# 
   728  0113                     	;# 
   729  0114                     	;# 
   730  0114                     	;# 
   731  0115                     	;# 
   732  0116                     	;# 
   733  0116                     	;# 
   734  0117                     	;# 
   735  0119                     	;# 
   736  0119                     	;# 
   737  0119                     	;# 
   738  011A                     	;# 
   739  011A                     	;# 
   740  011A                     	;# 
   741  011B                     	;# 
   742  011B                     	;# 
   743  011B                     	;# 
   744  011B                     	;# 
   745  011B                     	;# 
   746  011C                     	;# 
   747  011C                     	;# 
   748  011C                     	;# 
   749  011D                     	;# 
   750  011D                     	;# 
   751  011D                     	;# 
   752  011E                     	;# 
   753  011E                     	;# 
   754  011E                     	;# 
   755  011F                     	;# 
   756  011F                     	;# 
   757  011F                     	;# 
   758  011F                     	;# 
   759  011F                     	;# 
   760  018C                     	;# 
   761  018D                     	;# 
   762  018E                     	;# 
   763  018F                     	;# 
   764  0190                     	;# 
   765  0191                     	;# 
   766  0192                     	;# 
   767  0196                     	;# 
   768  0197                     	;# 
   769  0198                     	;# 
   770  0199                     	;# 
   771  019A                     	;# 
   772  019B                     	;# 
   773  019C                     	;# 
   774  020C                     	;# 
   775  020C                     	;# 
   776  020D                     	;# 
   777  020E                     	;# 
   778  020F                     	;# 
   779  020F                     	;# 
   780  0210                     	;# 
   781  0210                     	;# 
   782  0211                     	;# 
   783  0211                     	;# 
   784  0212                     	;# 
   785  0212                     	;# 
   786  0213                     	;# 
   787  0214                     	;# 
   788  0215                     	;# 
   789  0215                     	;# 
   790  0216                     	;# 
   791  0216                     	;# 
   792  0217                     	;# 
   793  0217                     	;# 
   794  0218                     	;# 
   795  0218                     	;# 
   796  0219                     	;# 
   797  021A                     	;# 
   798  021B                     	;# 
   799  021B                     	;# 
   800  021C                     	;# 
   801  021C                     	;# 
   802  021D                     	;# 
   803  021D                     	;# 
   804  021E                     	;# 
   805  021F                     	;# 
   806  028C                     	;# 
   807  028C                     	;# 
   808  028D                     	;# 
   809  028D                     	;# 
   810  028E                     	;# 
   811  028F                     	;# 
   812  0290                     	;# 
   813  0290                     	;# 
   814  0291                     	;# 
   815  0292                     	;# 
   816  0292                     	;# 
   817  0293                     	;# 
   818  0293                     	;# 
   819  0294                     	;# 
   820  0295                     	;# 
   821  0296                     	;# 
   822  0296                     	;# 
   823  0297                     	;# 
   824  0298                     	;# 
   825  0298                     	;# 
   826  0299                     	;# 
   827  0299                     	;# 
   828  029A                     	;# 
   829  029B                     	;# 
   830  029C                     	;# 
   831  029C                     	;# 
   832  029D                     	;# 
   833  030C                     	;# 
   834  030C                     	;# 
   835  030D                     	;# 
   836  030E                     	;# 
   837  030F                     	;# 
   838  0310                     	;# 
   839  0310                     	;# 
   840  0311                     	;# 
   841  0312                     	;# 
   842  0313                     	;# 
   843  0314                     	;# 
   844  0314                     	;# 
   845  0315                     	;# 
   846  0316                     	;# 
   847  0317                     	;# 
   848  0318                     	;# 
   849  0318                     	;# 
   850  0319                     	;# 
   851  031A                     	;# 
   852  031B                     	;# 
   853  031C                     	;# 
   854  031C                     	;# 
   855  031D                     	;# 
   856  031E                     	;# 
   857  031F                     	;# 
   858  038C                     	;# 
   859  038C                     	;# 
   860  038D                     	;# 
   861  038E                     	;# 
   862  0390                     	;# 
   863  0390                     	;# 
   864  0391                     	;# 
   865  0392                     	;# 
   866  040C                     	;# 
   867  040D                     	;# 
   868  040E                     	;# 
   869  040F                     	;# 
   870  0410                     	;# 
   871  0411                     	;# 
   872  0416                     	;# 
   873  0416                     	;# 
   874  0417                     	;# 
   875  0418                     	;# 
   876  0418                     	;# 
   877  0419                     	;# 
   878  041A                     	;# 
   879  041A                     	;# 
   880  041B                     	;# 
   881  041C                     	;# 
   882  041C                     	;# 
   883  041D                     	;# 
   884  041E                     	;# 
   885  041F                     	;# 
   886  048C                     	;# 
   887  048C                     	;# 
   888  048D                     	;# 
   889  048E                     	;# 
   890  048F                     	;# 
   891  048F                     	;# 
   892  0490                     	;# 
   893  0491                     	;# 
   894  0492                     	;# 
   895  0492                     	;# 
   896  0493                     	;# 
   897  0494                     	;# 
   898  0495                     	;# 
   899  0495                     	;# 
   900  0496                     	;# 
   901  0497                     	;# 
   902  0498                     	;# 
   903  0499                     	;# 
   904  049A                     	;# 
   905  049B                     	;# 
   906  049C                     	;# 
   907  049D                     	;# 
   908  050C                     	;# 
   909  050C                     	;# 
   910  050D                     	;# 
   911  050E                     	;# 
   912  050F                     	;# 
   913  050F                     	;# 
   914  0510                     	;# 
   915  0511                     	;# 
   916  0512                     	;# 
   917  0512                     	;# 
   918  0513                     	;# 
   919  0514                     	;# 
   920  0515                     	;# 
   921  0515                     	;# 
   922  0516                     	;# 
   923  0517                     	;# 
   924  0518                     	;# 
   925  0519                     	;# 
   926  051A                     	;# 
   927  051B                     	;# 
   928  051C                     	;# 
   929  051D                     	;# 
   930  058C                     	;# 
   931  058C                     	;# 
   932  058D                     	;# 
   933  058E                     	;# 
   934  058F                     	;# 
   935  058F                     	;# 
   936  0590                     	;# 
   937  0591                     	;# 
   938  0592                     	;# 
   939  0593                     	;# 
   940  060C                     	;# 
   941  060D                     	;# 
   942  060E                     	;# 
   943  060F                     	;# 
   944  0610                     	;# 
   945  0611                     	;# 
   946  0612                     	;# 
   947  0613                     	;# 
   948  0614                     	;# 
   949  0616                     	;# 
   950  0617                     	;# 
   951  0618                     	;# 
   952  0619                     	;# 
   953  061A                     	;# 
   954  061B                     	;# 
   955  061C                     	;# 
   956  061D                     	;# 
   957  061E                     	;# 
   958  068C                     	;# 
   959  068D                     	;# 
   960  068E                     	;# 
   961  068F                     	;# 
   962  0690                     	;# 
   963  0691                     	;# 
   964  0692                     	;# 
   965  0693                     	;# 
   966  0694                     	;# 
   967  070C                     	;# 
   968  070D                     	;# 
   969  070E                     	;# 
   970  070F                     	;# 
   971  0710                     	;# 
   972  0711                     	;# 
   973  0712                     	;# 
   974  0713                     	;# 
   975  0714                     	;# 
   976  0716                     	;# 
   977  0717                     	;# 
   978  0718                     	;# 
   979  0719                     	;# 
   980  071A                     	;# 
   981  071B                     	;# 
   982  071C                     	;# 
   983  071D                     	;# 
   984  071E                     	;# 
   985  0796                     	;# 
   986  0797                     	;# 
   987  0798                     	;# 
   988  0799                     	;# 
   989  079A                     	;# 
   990  079B                     	;# 
   991  080C                     	;# 
   992  080D                     	;# 
   993  080E                     	;# 
   994  080F                     	;# 
   995  0810                     	;# 
   996  0811                     	;# 
   997  0812                     	;# 
   998  0813                     	;# 
   999  0814                     	;# 
  1000  081A                     	;# 
  1001  081B                     	;# 
  1002  081C                     	;# 
  1003  081D                     	;# 
  1004  081E                     	;# 
  1005  081F                     	;# 
  1006  088C                     	;# 
  1007  088D                     	;# 
  1008  088E                     	;# 
  1009  088F                     	;# 
  1010  0890                     	;# 
  1011  0891                     	;# 
  1012  0892                     	;# 
  1013  0893                     	;# 
  1014  0895                     	;# 
  1015  0896                     	;# 
  1016  0897                     	;# 
  1017  0898                     	;# 
  1018  0899                     	;# 
  1019  089A                     	;# 
  1020  089B                     	;# 
  1021  090C                     	;# 
  1022  090E                     	;# 
  1023  090F                     	;# 
  1024  091F                     	;# 
  1025  091F                     	;# 
  1026  098F                     	;# 
  1027  098F                     	;# 
  1028  0990                     	;# 
  1029  0991                     	;# 
  1030  0992                     	;# 
  1031  0993                     	;# 
  1032  0994                     	;# 
  1033  0995                     	;# 
  1034  0996                     	;# 
  1035  0997                     	;# 
  1036  0E0F                     	;# 
  1037  0E10                     	;# 
  1038  0E11                     	;# 
  1039  0E12                     	;# 
  1040  0E13                     	;# 
  1041  0E14                     	;# 
  1042  0E15                     	;# 
  1043  0E16                     	;# 
  1044  0E17                     	;# 
  1045  0E18                     	;# 
  1046  0E19                     	;# 
  1047  0E1A                     	;# 
  1048  0E1B                     	;# 
  1049  0E1C                     	;# 
  1050  0E1D                     	;# 
  1051  0E1E                     	;# 
  1052  0E1F                     	;# 
  1053  0E20                     	;# 
  1054  0E21                     	;# 
  1055  0E22                     	;# 
  1056  0E23                     	;# 
  1057  0E24                     	;# 
  1058  0E25                     	;# 
  1059  0E26                     	;# 
  1060  0E27                     	;# 
  1061  0E28                     	;# 
  1062  0E29                     	;# 
  1063  0E2A                     	;# 
  1064  0E2B                     	;# 
  1065  0E2C                     	;# 
  1066  0E2D                     	;# 
  1067  0E2E                     	;# 
  1068  0E2F                     	;# 
  1069  0E30                     	;# 
  1070  0E31                     	;# 
  1071  0E32                     	;# 
  1072  0E33                     	;# 
  1073  0E34                     	;# 
  1074  0E35                     	;# 
  1075  0E36                     	;# 
  1076  0E37                     	;# 
  1077  0E8F                     	;# 
  1078  0E90                     	;# 
  1079  0E91                     	;# 
  1080  0E92                     	;# 
  1081  0E93                     	;# 
  1082  0E94                     	;# 
  1083  0E95                     	;# 
  1084  0E96                     	;# 
  1085  0E97                     	;# 
  1086  0E9C                     	;# 
  1087  0E9D                     	;# 
  1088  0E9E                     	;# 
  1089  0EA1                     	;# 
  1090  0EA2                     	;# 
  1091  0EA3                     	;# 
  1092  0EA4                     	;# 
  1093  0EA5                     	;# 
  1094  0EA9                     	;# 
  1095  0EAA                     	;# 
  1096  0EAB                     	;# 
  1097  0EAC                     	;# 
  1098  0EB1                     	;# 
  1099  0EB2                     	;# 
  1100  0EB3                     	;# 
  1101  0EB8                     	;# 
  1102  0EB9                     	;# 
  1103  0EBA                     	;# 
  1104  0EBB                     	;# 
  1105  0EBC                     	;# 
  1106  0EBD                     	;# 
  1107  0EBE                     	;# 
  1108  0EC3                     	;# 
  1109  0EC5                     	;# 
  1110  0EC6                     	;# 
  1111  0EC7                     	;# 
  1112  0EC8                     	;# 
  1113  0EC9                     	;# 
  1114  0ECA                     	;# 
  1115  0ECB                     	;# 
  1116  0ECC                     	;# 
  1117  0F10                     	;# 
  1118  0F11                     	;# 
  1119  0F12                     	;# 
  1120  0F13                     	;# 
  1121  0F14                     	;# 
  1122  0F15                     	;# 
  1123  0F16                     	;# 
  1124  0F17                     	;# 
  1125  0F18                     	;# 
  1126  0F19                     	;# 
  1127  0F1A                     	;# 
  1128  0F1B                     	;# 
  1129  0F1C                     	;# 
  1130  0F1D                     	;# 
  1131  0F1E                     	;# 
  1132  0F1F                     	;# 
  1133  0F20                     	;# 
  1134  0F21                     	;# 
  1135  0F22                     	;# 
  1136  0F23                     	;# 
  1137  0F24                     	;# 
  1138  0F25                     	;# 
  1139  0F26                     	;# 
  1140  0F27                     	;# 
  1141  0F28                     	;# 
  1142  0F29                     	;# 
  1143  0F2A                     	;# 
  1144  0F2B                     	;# 
  1145  0F2C                     	;# 
  1146  0F2D                     	;# 
  1147  0F2E                     	;# 
  1148  0F2F                     	;# 
  1149  0F30                     	;# 
  1150  0F31                     	;# 
  1151  0F32                     	;# 
  1152  0F38                     	;# 
  1153  0F39                     	;# 
  1154  0F3A                     	;# 
  1155  0F3B                     	;# 
  1156  0F3C                     	;# 
  1157  0F3D                     	;# 
  1158  0F3E                     	;# 
  1159  0F3F                     	;# 
  1160  0F40                     	;# 
  1161  0F41                     	;# 
  1162  0F43                     	;# 
  1163  0F44                     	;# 
  1164  0F45                     	;# 
  1165  0F46                     	;# 
  1166  0F47                     	;# 
  1167  0F48                     	;# 
  1168  0F49                     	;# 
  1169  0F4A                     	;# 
  1170  0F4B                     	;# 
  1171  0F4C                     	;# 
  1172  0F4E                     	;# 
  1173  0F4F                     	;# 
  1174  0F50                     	;# 
  1175  0F51                     	;# 
  1176  0F52                     	;# 
  1177  0F53                     	;# 
  1178  0F54                     	;# 
  1179  0F55                     	;# 
  1180  0F56                     	;# 
  1181  0F57                     	;# 
  1182  0F59                     	;# 
  1183  0F5A                     	;# 
  1184  0F5B                     	;# 
  1185  0F5C                     	;# 
  1186  0F5D                     	;# 
  1187  0F61                     	;# 
  1188  0F62                     	;# 
  1189  0F64                     	;# 
  1190  0F65                     	;# 
  1191  0F66                     	;# 
  1192  0F67                     	;# 
  1193  0F68                     	;# 
  1194  0F69                     	;# 
  1195  0F6A                     	;# 
  1196  0F6B                     	;# 
  1197  0F6C                     	;# 
  1198  0F6D                     	;# 
  1199  0FE4                     	;# 
  1200  0FE5                     	;# 
  1201  0FE6                     	;# 
  1202  0FE7                     	;# 
  1203  0FE8                     	;# 
  1204  0FE9                     	;# 
  1205  0FEA                     	;# 
  1206  0FEB                     	;# 
  1207  0FED                     	;# 
  1208  0FEE                     	;# 
  1209  0FEF                     	;# 
  1210  0000                     	;# 
  1211  0001                     	;# 
  1212  0002                     	;# 
  1213  0003                     	;# 
  1214  0004                     	;# 
  1215  0005                     	;# 
  1216  0006                     	;# 
  1217  0007                     	;# 
  1218  0008                     	;# 
  1219  0009                     	;# 
  1220  000A                     	;# 
  1221  000B                     	;# 
  1222  000C                     	;# 
  1223  000D                     	;# 
  1224  000E                     	;# 
  1225  000F                     	;# 
  1226  0010                     	;# 
  1227  0011                     	;# 
  1228  0012                     	;# 
  1229  0013                     	;# 
  1230  0014                     	;# 
  1231  0015                     	;# 
  1232  0016                     	;# 
  1233  0017                     	;# 
  1234  0018                     	;# 
  1235  0019                     	;# 
  1236  001A                     	;# 
  1237  001C                     	;# 
  1238  001C                     	;# 
  1239  001D                     	;# 
  1240  001D                     	;# 
  1241  001E                     	;# 
  1242  001F                     	;# 
  1243  008C                     	;# 
  1244  008C                     	;# 
  1245  008D                     	;# 
  1246  008E                     	;# 
  1247  008E                     	;# 
  1248  008F                     	;# 
  1249  0090                     	;# 
  1250  0090                     	;# 
  1251  0091                     	;# 
  1252  0093                     	;# 
  1253  0094                     	;# 
  1254  0095                     	;# 
  1255  0096                     	;# 
  1256  0097                     	;# 
  1257  0098                     	;# 
  1258  0099                     	;# 
  1259  009A                     	;# 
  1260  009B                     	;# 
  1261  009C                     	;# 
  1262  009D                     	;# 
  1263  009E                     	;# 
  1264  010C                     	;# 
  1265  010D                     	;# 
  1266  010E                     	;# 
  1267  010E                     	;# 
  1268  010F                     	;# 
  1269  0110                     	;# 
  1270  0110                     	;# 
  1271  0111                     	;# 
  1272  0112                     	;# 
  1273  0112                     	;# 
  1274  0113                     	;# 
  1275  0114                     	;# 
  1276  0114                     	;# 
  1277  0115                     	;# 
  1278  0116                     	;# 
  1279  0116                     	;# 
  1280  0117                     	;# 
  1281  0119                     	;# 
  1282  0119                     	;# 
  1283  0119                     	;# 
  1284  011A                     	;# 
  1285  011A                     	;# 
  1286  011A                     	;# 
  1287  011B                     	;# 
  1288  011B                     	;# 
  1289  011B                     	;# 
  1290  011B                     	;# 
  1291  011B                     	;# 
  1292  011C                     	;# 
  1293  011C                     	;# 
  1294  011C                     	;# 
  1295  011D                     	;# 
  1296  011D                     	;# 
  1297  011D                     	;# 
  1298  011E                     	;# 
  1299  011E                     	;# 
  1300  011E                     	;# 
  1301  011F                     	;# 
  1302  011F                     	;# 
  1303  011F                     	;# 
  1304  011F                     	;# 
  1305  011F                     	;# 
  1306  018C                     	;# 
  1307  018D                     	;# 
  1308  018E                     	;# 
  1309  018F                     	;# 
  1310  0190                     	;# 
  1311  0191                     	;# 
  1312  0192                     	;# 
  1313  0196                     	;# 
  1314  0197                     	;# 
  1315  0198                     	;# 
  1316  0199                     	;# 
  1317  019A                     	;# 
  1318  019B                     	;# 
  1319  019C                     	;# 
  1320  020C                     	;# 
  1321  020C                     	;# 
  1322  020D                     	;# 
  1323  020E                     	;# 
  1324  020F                     	;# 
  1325  020F                     	;# 
  1326  0210                     	;# 
  1327  0210                     	;# 
  1328  0211                     	;# 
  1329  0211                     	;# 
  1330  0212                     	;# 
  1331  0212                     	;# 
  1332  0213                     	;# 
  1333  0214                     	;# 
  1334  0215                     	;# 
  1335  0215                     	;# 
  1336  0216                     	;# 
  1337  0216                     	;# 
  1338  0217                     	;# 
  1339  0217                     	;# 
  1340  0218                     	;# 
  1341  0218                     	;# 
  1342  0219                     	;# 
  1343  021A                     	;# 
  1344  021B                     	;# 
  1345  021B                     	;# 
  1346  021C                     	;# 
  1347  021C                     	;# 
  1348  021D                     	;# 
  1349  021D                     	;# 
  1350  021E                     	;# 
  1351  021F                     	;# 
  1352  028C                     	;# 
  1353  028C                     	;# 
  1354  028D                     	;# 
  1355  028D                     	;# 
  1356  028E                     	;# 
  1357  028F                     	;# 
  1358  0290                     	;# 
  1359  0290                     	;# 
  1360  0291                     	;# 
  1361  0292                     	;# 
  1362  0292                     	;# 
  1363  0293                     	;# 
  1364  0293                     	;# 
  1365  0294                     	;# 
  1366  0295                     	;# 
  1367  0296                     	;# 
  1368  0296                     	;# 
  1369  0297                     	;# 
  1370  0298                     	;# 
  1371  0298                     	;# 
  1372  0299                     	;# 
  1373  0299                     	;# 
  1374  029A                     	;# 
  1375  029B                     	;# 
  1376  029C                     	;# 
  1377  029C                     	;# 
  1378  029D                     	;# 
  1379  030C                     	;# 
  1380  030C                     	;# 
  1381  030D                     	;# 
  1382  030E                     	;# 
  1383  030F                     	;# 
  1384  0310                     	;# 
  1385  0310                     	;# 
  1386  0311                     	;# 
  1387  0312                     	;# 
  1388  0313                     	;# 
  1389  0314                     	;# 
  1390  0314                     	;# 
  1391  0315                     	;# 
  1392  0316                     	;# 
  1393  0317                     	;# 
  1394  0318                     	;# 
  1395  0318                     	;# 
  1396  0319                     	;# 
  1397  031A                     	;# 
  1398  031B                     	;# 
  1399  031C                     	;# 
  1400  031C                     	;# 
  1401  031D                     	;# 
  1402  031E                     	;# 
  1403  031F                     	;# 
  1404  038C                     	;# 
  1405  038C                     	;# 
  1406  038D                     	;# 
  1407  038E                     	;# 
  1408  0390                     	;# 
  1409  0390                     	;# 
  1410  0391                     	;# 
  1411  0392                     	;# 
  1412  040C                     	;# 
  1413  040D                     	;# 
  1414  040E                     	;# 
  1415  040F                     	;# 
  1416  0410                     	;# 
  1417  0411                     	;# 
  1418  0416                     	;# 
  1419  0416                     	;# 
  1420  0417                     	;# 
  1421  0418                     	;# 
  1422  0418                     	;# 
  1423  0419                     	;# 
  1424  041A                     	;# 
  1425  041A                     	;# 
  1426  041B                     	;# 
  1427  041C                     	;# 
  1428  041C                     	;# 
  1429  041D                     	;# 
  1430  041E                     	;# 
  1431  041F                     	;# 
  1432  048C                     	;# 
  1433  048C                     	;# 
  1434  048D                     	;# 
  1435  048E                     	;# 
  1436  048F                     	;# 
  1437  048F                     	;# 
  1438  0490                     	;# 
  1439  0491                     	;# 
  1440  0492                     	;# 
  1441  0492                     	;# 
  1442  0493                     	;# 
  1443  0494                     	;# 
  1444  0495                     	;# 
  1445  0495                     	;# 
  1446  0496                     	;# 
  1447  0497                     	;# 
  1448  0498                     	;# 
  1449  0499                     	;# 
  1450  049A                     	;# 
  1451  049B                     	;# 
  1452  049C                     	;# 
  1453  049D                     	;# 
  1454  050C                     	;# 
  1455  050C                     	;# 
  1456  050D                     	;# 
  1457  050E                     	;# 
  1458  050F                     	;# 
  1459  050F                     	;# 
  1460  0510                     	;# 
  1461  0511                     	;# 
  1462  0512                     	;# 
  1463  0512                     	;# 
  1464  0513                     	;# 
  1465  0514                     	;# 
  1466  0515                     	;# 
  1467  0515                     	;# 
  1468  0516                     	;# 
  1469  0517                     	;# 
  1470  0518                     	;# 
  1471  0519                     	;# 
  1472  051A                     	;# 
  1473  051B                     	;# 
  1474  051C                     	;# 
  1475  051D                     	;# 
  1476  058C                     	;# 
  1477  058C                     	;# 
  1478  058D                     	;# 
  1479  058E                     	;# 
  1480  058F                     	;# 
  1481  058F                     	;# 
  1482  0590                     	;# 
  1483  0591                     	;# 
  1484  0592                     	;# 
  1485  0593                     	;# 
  1486  060C                     	;# 
  1487  060D                     	;# 
  1488  060E                     	;# 
  1489  060F                     	;# 
  1490  0610                     	;# 
  1491  0611                     	;# 
  1492  0612                     	;# 
  1493  0613                     	;# 
  1494  0614                     	;# 
  1495  0616                     	;# 
  1496  0617                     	;# 
  1497  0618                     	;# 
  1498  0619                     	;# 
  1499  061A                     	;# 
  1500  061B                     	;# 
  1501  061C                     	;# 
  1502  061D                     	;# 
  1503  061E                     	;# 
  1504  068C                     	;# 
  1505  068D                     	;# 
  1506  068E                     	;# 
  1507  068F                     	;# 
  1508  0690                     	;# 
  1509  0691                     	;# 
  1510  0692                     	;# 
  1511  0693                     	;# 
  1512  0694                     	;# 
  1513  070C                     	;# 
  1514  070D                     	;# 
  1515  070E                     	;# 
  1516  070F                     	;# 
  1517  0710                     	;# 
  1518  0711                     	;# 
  1519  0712                     	;# 
  1520  0713                     	;# 
  1521  0714                     	;# 
  1522  0716                     	;# 
  1523  0717                     	;# 
  1524  0718                     	;# 
  1525  0719                     	;# 
  1526  071A                     	;# 
  1527  071B                     	;# 
  1528  071C                     	;# 
  1529  071D                     	;# 
  1530  071E                     	;# 
  1531  0796                     	;# 
  1532  0797                     	;# 
  1533  0798                     	;# 
  1534  0799                     	;# 
  1535  079A                     	;# 
  1536  079B                     	;# 
  1537  080C                     	;# 
  1538  080D                     	;# 
  1539  080E                     	;# 
  1540  080F                     	;# 
  1541  0810                     	;# 
  1542  0811                     	;# 
  1543  0812                     	;# 
  1544  0813                     	;# 
  1545  0814                     	;# 
  1546  081A                     	;# 
  1547  081B                     	;# 
  1548  081C                     	;# 
  1549  081D                     	;# 
  1550  081E                     	;# 
  1551  081F                     	;# 
  1552  088C                     	;# 
  1553  088D                     	;# 
  1554  088E                     	;# 
  1555  088F                     	;# 
  1556  0890                     	;# 
  1557  0891                     	;# 
  1558  0892                     	;# 
  1559  0893                     	;# 
  1560  0895                     	;# 
  1561  0896                     	;# 
  1562  0897                     	;# 
  1563  0898                     	;# 
  1564  0899                     	;# 
  1565  089A                     	;# 
  1566  089B                     	;# 
  1567  090C                     	;# 
  1568  090E                     	;# 
  1569  090F                     	;# 
  1570  091F                     	;# 
  1571  091F                     	;# 
  1572  098F                     	;# 
  1573  098F                     	;# 
  1574  0990                     	;# 
  1575  0991                     	;# 
  1576  0992                     	;# 
  1577  0993                     	;# 
  1578  0994                     	;# 
  1579  0995                     	;# 
  1580  0996                     	;# 
  1581  0997                     	;# 
  1582  0E0F                     	;# 
  1583  0E10                     	;# 
  1584  0E11                     	;# 
  1585  0E12                     	;# 
  1586  0E13                     	;# 
  1587  0E14                     	;# 
  1588  0E15                     	;# 
  1589  0E16                     	;# 
  1590  0E17                     	;# 
  1591  0E18                     	;# 
  1592  0E19                     	;# 
  1593  0E1A                     	;# 
  1594  0E1B                     	;# 
  1595  0E1C                     	;# 
  1596  0E1D                     	;# 
  1597  0E1E                     	;# 
  1598  0E1F                     	;# 
  1599  0E20                     	;# 
  1600  0E21                     	;# 
  1601  0E22                     	;# 
  1602  0E23                     	;# 
  1603  0E24                     	;# 
  1604  0E25                     	;# 
  1605  0E26                     	;# 
  1606  0E27                     	;# 
  1607  0E28                     	;# 
  1608  0E29                     	;# 
  1609  0E2A                     	;# 
  1610  0E2B                     	;# 
  1611  0E2C                     	;# 
  1612  0E2D                     	;# 
  1613  0E2E                     	;# 
  1614  0E2F                     	;# 
  1615  0E30                     	;# 
  1616  0E31                     	;# 
  1617  0E32                     	;# 
  1618  0E33                     	;# 
  1619  0E34                     	;# 
  1620  0E35                     	;# 
  1621  0E36                     	;# 
  1622  0E37                     	;# 
  1623  0E8F                     	;# 
  1624  0E90                     	;# 
  1625  0E91                     	;# 
  1626  0E92                     	;# 
  1627  0E93                     	;# 
  1628  0E94                     	;# 
  1629  0E95                     	;# 
  1630  0E96                     	;# 
  1631  0E97                     	;# 
  1632  0E9C                     	;# 
  1633  0E9D                     	;# 
  1634  0E9E                     	;# 
  1635  0EA1                     	;# 
  1636  0EA2                     	;# 
  1637  0EA3                     	;# 
  1638  0EA4                     	;# 
  1639  0EA5                     	;# 
  1640  0EA9                     	;# 
  1641  0EAA                     	;# 
  1642  0EAB                     	;# 
  1643  0EAC                     	;# 
  1644  0EB1                     	;# 
  1645  0EB2                     	;# 
  1646  0EB3                     	;# 
  1647  0EB8                     	;# 
  1648  0EB9                     	;# 
  1649  0EBA                     	;# 
  1650  0EBB                     	;# 
  1651  0EBC                     	;# 
  1652  0EBD                     	;# 
  1653  0EBE                     	;# 
  1654  0EC3                     	;# 
  1655  0EC5                     	;# 
  1656  0EC6                     	;# 
  1657  0EC7                     	;# 
  1658  0EC8                     	;# 
  1659  0EC9                     	;# 
  1660  0ECA                     	;# 
  1661  0ECB                     	;# 
  1662  0ECC                     	;# 
  1663  0F10                     	;# 
  1664  0F11                     	;# 
  1665  0F12                     	;# 
  1666  0F13                     	;# 
  1667  0F14                     	;# 
  1668  0F15                     	;# 
  1669  0F16                     	;# 
  1670  0F17                     	;# 
  1671  0F18                     	;# 
  1672  0F19                     	;# 
  1673  0F1A                     	;# 
  1674  0F1B                     	;# 
  1675  0F1C                     	;# 
  1676  0F1D                     	;# 
  1677  0F1E                     	;# 
  1678  0F1F                     	;# 
  1679  0F20                     	;# 
  1680  0F21                     	;# 
  1681  0F22                     	;# 
  1682  0F23                     	;# 
  1683  0F24                     	;# 
  1684  0F25                     	;# 
  1685  0F26                     	;# 
  1686  0F27                     	;# 
  1687  0F28                     	;# 
  1688  0F29                     	;# 
  1689  0F2A                     	;# 
  1690  0F2B                     	;# 
  1691  0F2C                     	;# 
  1692  0F2D                     	;# 
  1693  0F2E                     	;# 
  1694  0F2F                     	;# 
  1695  0F30                     	;# 
  1696  0F31                     	;# 
  1697  0F32                     	;# 
  1698  0F38                     	;# 
  1699  0F39                     	;# 
  1700  0F3A                     	;# 
  1701  0F3B                     	;# 
  1702  0F3C                     	;# 
  1703  0F3D                     	;# 
  1704  0F3E                     	;# 
  1705  0F3F                     	;# 
  1706  0F40                     	;# 
  1707  0F41                     	;# 
  1708  0F43                     	;# 
  1709  0F44                     	;# 
  1710  0F45                     	;# 
  1711  0F46                     	;# 
  1712  0F47                     	;# 
  1713  0F48                     	;# 
  1714  0F49                     	;# 
  1715  0F4A                     	;# 
  1716  0F4B                     	;# 
  1717  0F4C                     	;# 
  1718  0F4E                     	;# 
  1719  0F4F                     	;# 
  1720  0F50                     	;# 
  1721  0F51                     	;# 
  1722  0F52                     	;# 
  1723  0F53                     	;# 
  1724  0F54                     	;# 
  1725  0F55                     	;# 
  1726  0F56                     	;# 
  1727  0F57                     	;# 
  1728  0F59                     	;# 
  1729  0F5A                     	;# 
  1730  0F5B                     	;# 
  1731  0F5C                     	;# 
  1732  0F5D                     	;# 
  1733  0F61                     	;# 
  1734  0F62                     	;# 
  1735  0F64                     	;# 
  1736  0F65                     	;# 
  1737  0F66                     	;# 
  1738  0F67                     	;# 
  1739  0F68                     	;# 
  1740  0F69                     	;# 
  1741  0F6A                     	;# 
  1742  0F6B                     	;# 
  1743  0F6C                     	;# 
  1744  0F6D                     	;# 
  1745  0FE4                     	;# 
  1746  0FE5                     	;# 
  1747  0FE6                     	;# 
  1748  0FE7                     	;# 
  1749  0FE8                     	;# 
  1750  0FE9                     	;# 
  1751  0FEA                     	;# 
  1752  0FEB                     	;# 
  1753  0FED                     	;# 
  1754  0FEE                     	;# 
  1755  0FEF                     	;# 
  1756  0000                     	;# 
  1757  0001                     	;# 
  1758  0002                     	;# 
  1759  0003                     	;# 
  1760  0004                     	;# 
  1761  0005                     	;# 
  1762  0006                     	;# 
  1763  0007                     	;# 
  1764  0008                     	;# 
  1765  0009                     	;# 
  1766  000A                     	;# 
  1767  000B                     	;# 
  1768  000C                     	;# 
  1769  000D                     	;# 
  1770  000E                     	;# 
  1771  000F                     	;# 
  1772  0010                     	;# 
  1773  0011                     	;# 
  1774  0012                     	;# 
  1775  0013                     	;# 
  1776  0014                     	;# 
  1777  0015                     	;# 
  1778  0016                     	;# 
  1779  0017                     	;# 
  1780  0018                     	;# 
  1781  0019                     	;# 
  1782  001A                     	;# 
  1783  001C                     	;# 
  1784  001C                     	;# 
  1785  001D                     	;# 
  1786  001D                     	;# 
  1787  001E                     	;# 
  1788  001F                     	;# 
  1789  008C                     	;# 
  1790  008C                     	;# 
  1791  008D                     	;# 
  1792  008E                     	;# 
  1793  008E                     	;# 
  1794  008F                     	;# 
  1795  0090                     	;# 
  1796  0090                     	;# 
  1797  0091                     	;# 
  1798  0093                     	;# 
  1799  0094                     	;# 
  1800  0095                     	;# 
  1801  0096                     	;# 
  1802  0097                     	;# 
  1803  0098                     	;# 
  1804  0099                     	;# 
  1805  009A                     	;# 
  1806  009B                     	;# 
  1807  009C                     	;# 
  1808  009D                     	;# 
  1809  009E                     	;# 
  1810  010C                     	;# 
  1811  010D                     	;# 
  1812  010E                     	;# 
  1813  010E                     	;# 
  1814  010F                     	;# 
  1815  0110                     	;# 
  1816  0110                     	;# 
  1817  0111                     	;# 
  1818  0112                     	;# 
  1819  0112                     	;# 
  1820  0113                     	;# 
  1821  0114                     	;# 
  1822  0114                     	;# 
  1823  0115                     	;# 
  1824  0116                     	;# 
  1825  0116                     	;# 
  1826  0117                     	;# 
  1827  0119                     	;# 
  1828  0119                     	;# 
  1829  0119                     	;# 
  1830  011A                     	;# 
  1831  011A                     	;# 
  1832  011A                     	;# 
  1833  011B                     	;# 
  1834  011B                     	;# 
  1835  011B                     	;# 
  1836  011B                     	;# 
  1837  011B                     	;# 
  1838  011C                     	;# 
  1839  011C                     	;# 
  1840  011C                     	;# 
  1841  011D                     	;# 
  1842  011D                     	;# 
  1843  011D                     	;# 
  1844  011E                     	;# 
  1845  011E                     	;# 
  1846  011E                     	;# 
  1847  011F                     	;# 
  1848  011F                     	;# 
  1849  011F                     	;# 
  1850  011F                     	;# 
  1851  011F                     	;# 
  1852  018C                     	;# 
  1853  018D                     	;# 
  1854  018E                     	;# 
  1855  018F                     	;# 
  1856  0190                     	;# 
  1857  0191                     	;# 
  1858  0192                     	;# 
  1859  0196                     	;# 
  1860  0197                     	;# 
  1861  0198                     	;# 
  1862  0199                     	;# 
  1863  019A                     	;# 
  1864  019B                     	;# 
  1865  019C                     	;# 
  1866  020C                     	;# 
  1867  020C                     	;# 
  1868  020D                     	;# 
  1869  020E                     	;# 
  1870  020F                     	;# 
  1871  020F                     	;# 
  1872  0210                     	;# 
  1873  0210                     	;# 
  1874  0211                     	;# 
  1875  0211                     	;# 
  1876  0212                     	;# 
  1877  0212                     	;# 
  1878  0213                     	;# 
  1879  0214                     	;# 
  1880  0215                     	;# 
  1881  0215                     	;# 
  1882  0216                     	;# 
  1883  0216                     	;# 
  1884  0217                     	;# 
  1885  0217                     	;# 
  1886  0218                     	;# 
  1887  0218                     	;# 
  1888  0219                     	;# 
  1889  021A                     	;# 
  1890  021B                     	;# 
  1891  021B                     	;# 
  1892  021C                     	;# 
  1893  021C                     	;# 
  1894  021D                     	;# 
  1895  021D                     	;# 
  1896  021E                     	;# 
  1897  021F                     	;# 
  1898  028C                     	;# 
  1899  028C                     	;# 
  1900  028D                     	;# 
  1901  028D                     	;# 
  1902  028E                     	;# 
  1903  028F                     	;# 
  1904  0290                     	;# 
  1905  0290                     	;# 
  1906  0291                     	;# 
  1907  0292                     	;# 
  1908  0292                     	;# 
  1909  0293                     	;# 
  1910  0293                     	;# 
  1911  0294                     	;# 
  1912  0295                     	;# 
  1913  0296                     	;# 
  1914  0296                     	;# 
  1915  0297                     	;# 
  1916  0298                     	;# 
  1917  0298                     	;# 
  1918  0299                     	;# 
  1919  0299                     	;# 
  1920  029A                     	;# 
  1921  029B                     	;# 
  1922  029C                     	;# 
  1923  029C                     	;# 
  1924  029D                     	;# 
  1925  030C                     	;# 
  1926  030C                     	;# 
  1927  030D                     	;# 
  1928  030E                     	;# 
  1929  030F                     	;# 
  1930  0310                     	;# 
  1931  0310                     	;# 
  1932  0311                     	;# 
  1933  0312                     	;# 
  1934  0313                     	;# 
  1935  0314                     	;# 
  1936  0314                     	;# 
  1937  0315                     	;# 
  1938  0316                     	;# 
  1939  0317                     	;# 
  1940  0318                     	;# 
  1941  0318                     	;# 
  1942  0319                     	;# 
  1943  031A                     	;# 
  1944  031B                     	;# 
  1945  031C                     	;# 
  1946  031C                     	;# 
  1947  031D                     	;# 
  1948  031E                     	;# 
  1949  031F                     	;# 
  1950  038C                     	;# 
  1951  038C                     	;# 
  1952  038D                     	;# 
  1953  038E                     	;# 
  1954  0390                     	;# 
  1955  0390                     	;# 
  1956  0391                     	;# 
  1957  0392                     	;# 
  1958  040C                     	;# 
  1959  040D                     	;# 
  1960  040E                     	;# 
  1961  040F                     	;# 
  1962  0410                     	;# 
  1963  0411                     	;# 
  1964  0416                     	;# 
  1965  0416                     	;# 
  1966  0417                     	;# 
  1967  0418                     	;# 
  1968  0418                     	;# 
  1969  0419                     	;# 
  1970  041A                     	;# 
  1971  041A                     	;# 
  1972  041B                     	;# 
  1973  041C                     	;# 
  1974  041C                     	;# 
  1975  041D                     	;# 
  1976  041E                     	;# 
  1977  041F                     	;# 
  1978  048C                     	;# 
  1979  048C                     	;# 
  1980  048D                     	;# 
  1981  048E                     	;# 
  1982  048F                     	;# 
  1983  048F                     	;# 
  1984  0490                     	;# 
  1985  0491                     	;# 
  1986  0492                     	;# 
  1987  0492                     	;# 
  1988  0493                     	;# 
  1989  0494                     	;# 
  1990  0495                     	;# 
  1991  0495                     	;# 
  1992  0496                     	;# 
  1993  0497                     	;# 
  1994  0498                     	;# 
  1995  0499                     	;# 
  1996  049A                     	;# 
  1997  049B                     	;# 
  1998  049C                     	;# 
  1999  049D                     	;# 
  2000  050C                     	;# 
  2001  050C                     	;# 
  2002  050D                     	;# 
  2003  050E                     	;# 
  2004  050F                     	;# 
  2005  050F                     	;# 
  2006  0510                     	;# 
  2007  0511                     	;# 
  2008  0512                     	;# 
  2009  0512                     	;# 
  2010  0513                     	;# 
  2011  0514                     	;# 
  2012  0515                     	;# 
  2013  0515                     	;# 
  2014  0516                     	;# 
  2015  0517                     	;# 
  2016  0518                     	;# 
  2017  0519                     	;# 
  2018  051A                     	;# 
  2019  051B                     	;# 
  2020  051C                     	;# 
  2021  051D                     	;# 
  2022  058C                     	;# 
  2023  058C                     	;# 
  2024  058D                     	;# 
  2025  058E                     	;# 
  2026  058F                     	;# 
  2027  058F                     	;# 
  2028  0590                     	;# 
  2029  0591                     	;# 
  2030  0592                     	;# 
  2031  0593                     	;# 
  2032  060C                     	;# 
  2033  060D                     	;# 
  2034  060E                     	;# 
  2035  060F                     	;# 
  2036  0610                     	;# 
  2037  0611                     	;# 
  2038  0612                     	;# 
  2039  0613                     	;# 
  2040  0614                     	;# 
  2041  0616                     	;# 
  2042  0617                     	;# 
  2043  0618                     	;# 
  2044  0619                     	;# 
  2045  061A                     	;# 
  2046  061B                     	;# 
  2047  061C                     	;# 
  2048  061D                     	;# 
  2049  061E                     	;# 
  2050  068C                     	;# 
  2051  068D                     	;# 
  2052  068E                     	;# 
  2053  068F                     	;# 
  2054  0690                     	;# 
  2055  0691                     	;# 
  2056  0692                     	;# 
  2057  0693                     	;# 
  2058  0694                     	;# 
  2059  070C                     	;# 
  2060  070D                     	;# 
  2061  070E                     	;# 
  2062  070F                     	;# 
  2063  0710                     	;# 
  2064  0711                     	;# 
  2065  0712                     	;# 
  2066  0713                     	;# 
  2067  0714                     	;# 
  2068  0716                     	;# 
  2069  0717                     	;# 
  2070  0718                     	;# 
  2071  0719                     	;# 
  2072  071A                     	;# 
  2073  071B                     	;# 
  2074  071C                     	;# 
  2075  071D                     	;# 
  2076  071E                     	;# 
  2077  0796                     	;# 
  2078  0797                     	;# 
  2079  0798                     	;# 
  2080  0799                     	;# 
  2081  079A                     	;# 
  2082  079B                     	;# 
  2083  080C                     	;# 
  2084  080D                     	;# 
  2085  080E                     	;# 
  2086  080F                     	;# 
  2087  0810                     	;# 
  2088  0811                     	;# 
  2089  0812                     	;# 
  2090  0813                     	;# 
  2091  0814                     	;# 
  2092  081A                     	;# 
  2093  081B                     	;# 
  2094  081C                     	;# 
  2095  081D                     	;# 
  2096  081E                     	;# 
  2097  081F                     	;# 
  2098  088C                     	;# 
  2099  088D                     	;# 
  2100  088E                     	;# 
  2101  088F                     	;# 
  2102  0890                     	;# 
  2103  0891                     	;# 
  2104  0892                     	;# 
  2105  0893                     	;# 
  2106  0895                     	;# 
  2107  0896                     	;# 
  2108  0897                     	;# 
  2109  0898                     	;# 
  2110  0899                     	;# 
  2111  089A                     	;# 
  2112  089B                     	;# 
  2113  090C                     	;# 
  2114  090E                     	;# 
  2115  090F                     	;# 
  2116  091F                     	;# 
  2117  091F                     	;# 
  2118  098F                     	;# 
  2119  098F                     	;# 
  2120  0990                     	;# 
  2121  0991                     	;# 
  2122  0992                     	;# 
  2123  0993                     	;# 
  2124  0994                     	;# 
  2125  0995                     	;# 
  2126  0996                     	;# 
  2127  0997                     	;# 
  2128  0E0F                     	;# 
  2129  0E10                     	;# 
  2130  0E11                     	;# 
  2131  0E12                     	;# 
  2132  0E13                     	;# 
  2133  0E14                     	;# 
  2134  0E15                     	;# 
  2135  0E16                     	;# 
  2136  0E17                     	;# 
  2137  0E18                     	;# 
  2138  0E19                     	;# 
  2139  0E1A                     	;# 
  2140  0E1B                     	;# 
  2141  0E1C                     	;# 
  2142  0E1D                     	;# 
  2143  0E1E                     	;# 
  2144  0E1F                     	;# 
  2145  0E20                     	;# 
  2146  0E21                     	;# 
  2147  0E22                     	;# 
  2148  0E23                     	;# 
  2149  0E24                     	;# 
  2150  0E25                     	;# 
  2151  0E26                     	;# 
  2152  0E27                     	;# 
  2153  0E28                     	;# 
  2154  0E29                     	;# 
  2155  0E2A                     	;# 
  2156  0E2B                     	;# 
  2157  0E2C                     	;# 
  2158  0E2D                     	;# 
  2159  0E2E                     	;# 
  2160  0E2F                     	;# 
  2161  0E30                     	;# 
  2162  0E31                     	;# 
  2163  0E32                     	;# 
  2164  0E33                     	;# 
  2165  0E34                     	;# 
  2166  0E35                     	;# 
  2167  0E36                     	;# 
  2168  0E37                     	;# 
  2169  0E8F                     	;# 
  2170  0E90                     	;# 
  2171  0E91                     	;# 
  2172  0E92                     	;# 
  2173  0E93                     	;# 
  2174  0E94                     	;# 
  2175  0E95                     	;# 
  2176  0E96                     	;# 
  2177  0E97                     	;# 
  2178  0E9C                     	;# 
  2179  0E9D                     	;# 
  2180  0E9E                     	;# 
  2181  0EA1                     	;# 
  2182  0EA2                     	;# 
  2183  0EA3                     	;# 
  2184  0EA4                     	;# 
  2185  0EA5                     	;# 
  2186  0EA9                     	;# 
  2187  0EAA                     	;# 
  2188  0EAB                     	;# 
  2189  0EAC                     	;# 
  2190  0EB1                     	;# 
  2191  0EB2                     	;# 
  2192  0EB3                     	;# 
  2193  0EB8                     	;# 
  2194  0EB9                     	;# 
  2195  0EBA                     	;# 
  2196  0EBB                     	;# 
  2197  0EBC                     	;# 
  2198  0EBD                     	;# 
  2199  0EBE                     	;# 
  2200  0EC3                     	;# 
  2201  0EC5                     	;# 
  2202  0EC6                     	;# 
  2203  0EC7                     	;# 
  2204  0EC8                     	;# 
  2205  0EC9                     	;# 
  2206  0ECA                     	;# 
  2207  0ECB                     	;# 
  2208  0ECC                     	;# 
  2209  0F10                     	;# 
  2210  0F11                     	;# 
  2211  0F12                     	;# 
  2212  0F13                     	;# 
  2213  0F14                     	;# 
  2214  0F15                     	;# 
  2215  0F16                     	;# 
  2216  0F17                     	;# 
  2217  0F18                     	;# 
  2218  0F19                     	;# 
  2219  0F1A                     	;# 
  2220  0F1B                     	;# 
  2221  0F1C                     	;# 
  2222  0F1D                     	;# 
  2223  0F1E                     	;# 
  2224  0F1F                     	;# 
  2225  0F20                     	;# 
  2226  0F21                     	;# 
  2227  0F22                     	;# 
  2228  0F23                     	;# 
  2229  0F24                     	;# 
  2230  0F25                     	;# 
  2231  0F26                     	;# 
  2232  0F27                     	;# 
  2233  0F28                     	;# 
  2234  0F29                     	;# 
  2235  0F2A                     	;# 
  2236  0F2B                     	;# 
  2237  0F2C                     	;# 
  2238  0F2D                     	;# 
  2239  0F2E                     	;# 
  2240  0F2F                     	;# 
  2241  0F30                     	;# 
  2242  0F31                     	;# 
  2243  0F32                     	;# 
  2244  0F38                     	;# 
  2245  0F39                     	;# 
  2246  0F3A                     	;# 
  2247  0F3B                     	;# 
  2248  0F3C                     	;# 
  2249  0F3D                     	;# 
  2250  0F3E                     	;# 
  2251  0F3F                     	;# 
  2252  0F40                     	;# 
  2253  0F41                     	;# 
  2254  0F43                     	;# 
  2255  0F44                     	;# 
  2256  0F45                     	;# 
  2257  0F46                     	;# 
  2258  0F47                     	;# 
  2259  0F48                     	;# 
  2260  0F49                     	;# 
  2261  0F4A                     	;# 
  2262  0F4B                     	;# 
  2263  0F4C                     	;# 
  2264  0F4E                     	;# 
  2265  0F4F                     	;# 
  2266  0F50                     	;# 
  2267  0F51                     	;# 
  2268  0F52                     	;# 
  2269  0F53                     	;# 
  2270  0F54                     	;# 
  2271  0F55                     	;# 
  2272  0F56                     	;# 
  2273  0F57                     	;# 
  2274  0F59                     	;# 
  2275  0F5A                     	;# 
  2276  0F5B                     	;# 
  2277  0F5C                     	;# 
  2278  0F5D                     	;# 
  2279  0F61                     	;# 
  2280  0F62                     	;# 
  2281  0F64                     	;# 
  2282  0F65                     	;# 
  2283  0F66                     	;# 
  2284  0F67                     	;# 
  2285  0F68                     	;# 
  2286  0F69                     	;# 
  2287  0F6A                     	;# 
  2288  0F6B                     	;# 
  2289  0F6C                     	;# 
  2290  0F6D                     	;# 
  2291  0FE4                     	;# 
  2292  0FE5                     	;# 
  2293  0FE6                     	;# 
  2294  0FE7                     	;# 
  2295  0FE8                     	;# 
  2296  0FE9                     	;# 
  2297  0FEA                     	;# 
  2298  0FEB                     	;# 
  2299  0FED                     	;# 
  2300  0FEE                     	;# 
  2301  0FEF                     	;# 
  2302  0000                     	;# 
  2303  0001                     	;# 
  2304  0002                     	;# 
  2305  0003                     	;# 
  2306  0004                     	;# 
  2307  0005                     	;# 
  2308  0006                     	;# 
  2309  0007                     	;# 
  2310  0008                     	;# 
  2311  0009                     	;# 
  2312  000A                     	;# 
  2313  000B                     	;# 
  2314  000C                     	;# 
  2315  000D                     	;# 
  2316  000E                     	;# 
  2317  000F                     	;# 
  2318  0010                     	;# 
  2319  0011                     	;# 
  2320  0012                     	;# 
  2321  0013                     	;# 
  2322  0014                     	;# 
  2323  0015                     	;# 
  2324  0016                     	;# 
  2325  0017                     	;# 
  2326  0018                     	;# 
  2327  0019                     	;# 
  2328  001A                     	;# 
  2329  001C                     	;# 
  2330  001C                     	;# 
  2331  001D                     	;# 
  2332  001D                     	;# 
  2333  001E                     	;# 
  2334  001F                     	;# 
  2335  008C                     	;# 
  2336  008C                     	;# 
  2337  008D                     	;# 
  2338  008E                     	;# 
  2339  008E                     	;# 
  2340  008F                     	;# 
  2341  0090                     	;# 
  2342  0090                     	;# 
  2343  0091                     	;# 
  2344  0093                     	;# 
  2345  0094                     	;# 
  2346  0095                     	;# 
  2347  0096                     	;# 
  2348  0097                     	;# 
  2349  0098                     	;# 
  2350  0099                     	;# 
  2351  009A                     	;# 
  2352  009B                     	;# 
  2353  009C                     	;# 
  2354  009D                     	;# 
  2355  009E                     	;# 
  2356  010C                     	;# 
  2357  010D                     	;# 
  2358  010E                     	;# 
  2359  010E                     	;# 
  2360  010F                     	;# 
  2361  0110                     	;# 
  2362  0110                     	;# 
  2363  0111                     	;# 
  2364  0112                     	;# 
  2365  0112                     	;# 
  2366  0113                     	;# 
  2367  0114                     	;# 
  2368  0114                     	;# 
  2369  0115                     	;# 
  2370  0116                     	;# 
  2371  0116                     	;# 
  2372  0117                     	;# 
  2373  0119                     	;# 
  2374  0119                     	;# 
  2375  0119                     	;# 
  2376  011A                     	;# 
  2377  011A                     	;# 
  2378  011A                     	;# 
  2379  011B                     	;# 
  2380  011B                     	;# 
  2381  011B                     	;# 
  2382  011B                     	;# 
  2383  011B                     	;# 
  2384  011C                     	;# 
  2385  011C                     	;# 
  2386  011C                     	;# 
  2387  011D                     	;# 
  2388  011D                     	;# 
  2389  011D                     	;# 
  2390  011E                     	;# 
  2391  011E                     	;# 
  2392  011E                     	;# 
  2393  011F                     	;# 
  2394  011F                     	;# 
  2395  011F                     	;# 
  2396  011F                     	;# 
  2397  011F                     	;# 
  2398  018C                     	;# 
  2399  018D                     	;# 
  2400  018E                     	;# 
  2401  018F                     	;# 
  2402  0190                     	;# 
  2403  0191                     	;# 
  2404  0192                     	;# 
  2405  0196                     	;# 
  2406  0197                     	;# 
  2407  0198                     	;# 
  2408  0199                     	;# 
  2409  019A                     	;# 
  2410  019B                     	;# 
  2411  019C                     	;# 
  2412  020C                     	;# 
  2413  020C                     	;# 
  2414  020D                     	;# 
  2415  020E                     	;# 
  2416  020F                     	;# 
  2417  020F                     	;# 
  2418  0210                     	;# 
  2419  0210                     	;# 
  2420  0211                     	;# 
  2421  0211                     	;# 
  2422  0212                     	;# 
  2423  0212                     	;# 
  2424  0213                     	;# 
  2425  0214                     	;# 
  2426  0215                     	;# 
  2427  0215                     	;# 
  2428  0216                     	;# 
  2429  0216                     	;# 
  2430  0217                     	;# 
  2431  0217                     	;# 
  2432  0218                     	;# 
  2433  0218                     	;# 
  2434  0219                     	;# 
  2435  021A                     	;# 
  2436  021B                     	;# 
  2437  021B                     	;# 
  2438  021C                     	;# 
  2439  021C                     	;# 
  2440  021D                     	;# 
  2441  021D                     	;# 
  2442  021E                     	;# 
  2443  021F                     	;# 
  2444  028C                     	;# 
  2445  028C                     	;# 
  2446  028D                     	;# 
  2447  028D                     	;# 
  2448  028E                     	;# 
  2449  028F                     	;# 
  2450  0290                     	;# 
  2451  0290                     	;# 
  2452  0291                     	;# 
  2453  0292                     	;# 
  2454  0292                     	;# 
  2455  0293                     	;# 
  2456  0293                     	;# 
  2457  0294                     	;# 
  2458  0295                     	;# 
  2459  0296                     	;# 
  2460  0296                     	;# 
  2461  0297                     	;# 
  2462  0298                     	;# 
  2463  0298                     	;# 
  2464  0299                     	;# 
  2465  0299                     	;# 
  2466  029A                     	;# 
  2467  029B                     	;# 
  2468  029C                     	;# 
  2469  029C                     	;# 
  2470  029D                     	;# 
  2471  030C                     	;# 
  2472  030C                     	;# 
  2473  030D                     	;# 
  2474  030E                     	;# 
  2475  030F                     	;# 
  2476  0310                     	;# 
  2477  0310                     	;# 
  2478  0311                     	;# 
  2479  0312                     	;# 
  2480  0313                     	;# 
  2481  0314                     	;# 
  2482  0314                     	;# 
  2483  0315                     	;# 
  2484  0316                     	;# 
  2485  0317                     	;# 
  2486  0318                     	;# 
  2487  0318                     	;# 
  2488  0319                     	;# 
  2489  031A                     	;# 
  2490  031B                     	;# 
  2491  031C                     	;# 
  2492  031C                     	;# 
  2493  031D                     	;# 
  2494  031E                     	;# 
  2495  031F                     	;# 
  2496  038C                     	;# 
  2497  038C                     	;# 
  2498  038D                     	;# 
  2499  038E                     	;# 
  2500  0390                     	;# 
  2501  0390                     	;# 
  2502  0391                     	;# 
  2503  0392                     	;# 
  2504  040C                     	;# 
  2505  040D                     	;# 
  2506  040E                     	;# 
  2507  040F                     	;# 
  2508  0410                     	;# 
  2509  0411                     	;# 
  2510  0416                     	;# 
  2511  0416                     	;# 
  2512  0417                     	;# 
  2513  0418                     	;# 
  2514  0418                     	;# 
  2515  0419                     	;# 
  2516  041A                     	;# 
  2517  041A                     	;# 
  2518  041B                     	;# 
  2519  041C                     	;# 
  2520  041C                     	;# 
  2521  041D                     	;# 
  2522  041E                     	;# 
  2523  041F                     	;# 
  2524  048C                     	;# 
  2525  048C                     	;# 
  2526  048D                     	;# 
  2527  048E                     	;# 
  2528  048F                     	;# 
  2529  048F                     	;# 
  2530  0490                     	;# 
  2531  0491                     	;# 
  2532  0492                     	;# 
  2533  0492                     	;# 
  2534  0493                     	;# 
  2535  0494                     	;# 
  2536  0495                     	;# 
  2537  0495                     	;# 
  2538  0496                     	;# 
  2539  0497                     	;# 
  2540  0498                     	;# 
  2541  0499                     	;# 
  2542  049A                     	;# 
  2543  049B                     	;# 
  2544  049C                     	;# 
  2545  049D                     	;# 
  2546  050C                     	;# 
  2547  050C                     	;# 
  2548  050D                     	;# 
  2549  050E                     	;# 
  2550  050F                     	;# 
  2551  050F                     	;# 
  2552  0510                     	;# 
  2553  0511                     	;# 
  2554  0512                     	;# 
  2555  0512                     	;# 
  2556  0513                     	;# 
  2557  0514                     	;# 
  2558  0515                     	;# 
  2559  0515                     	;# 
  2560  0516                     	;# 
  2561  0517                     	;# 
  2562  0518                     	;# 
  2563  0519                     	;# 
  2564  051A                     	;# 
  2565  051B                     	;# 
  2566  051C                     	;# 
  2567  051D                     	;# 
  2568  058C                     	;# 
  2569  058C                     	;# 
  2570  058D                     	;# 
  2571  058E                     	;# 
  2572  058F                     	;# 
  2573  058F                     	;# 
  2574  0590                     	;# 
  2575  0591                     	;# 
  2576  0592                     	;# 
  2577  0593                     	;# 
  2578  060C                     	;# 
  2579  060D                     	;# 
  2580  060E                     	;# 
  2581  060F                     	;# 
  2582  0610                     	;# 
  2583  0611                     	;# 
  2584  0612                     	;# 
  2585  0613                     	;# 
  2586  0614                     	;# 
  2587  0616                     	;# 
  2588  0617                     	;# 
  2589  0618                     	;# 
  2590  0619                     	;# 
  2591  061A                     	;# 
  2592  061B                     	;# 
  2593  061C                     	;# 
  2594  061D                     	;# 
  2595  061E                     	;# 
  2596  068C                     	;# 
  2597  068D                     	;# 
  2598  068E                     	;# 
  2599  068F                     	;# 
  2600  0690                     	;# 
  2601  0691                     	;# 
  2602  0692                     	;# 
  2603  0693                     	;# 
  2604  0694                     	;# 
  2605  070C                     	;# 
  2606  070D                     	;# 
  2607  070E                     	;# 
  2608  070F                     	;# 
  2609  0710                     	;# 
  2610  0711                     	;# 
  2611  0712                     	;# 
  2612  0713                     	;# 
  2613  0714                     	;# 
  2614  0716                     	;# 
  2615  0717                     	;# 
  2616  0718                     	;# 
  2617  0719                     	;# 
  2618  071A                     	;# 
  2619  071B                     	;# 
  2620  071C                     	;# 
  2621  071D                     	;# 
  2622  071E                     	;# 
  2623  0796                     	;# 
  2624  0797                     	;# 
  2625  0798                     	;# 
  2626  0799                     	;# 
  2627  079A                     	;# 
  2628  079B                     	;# 
  2629  080C                     	;# 
  2630  080D                     	;# 
  2631  080E                     	;# 
  2632  080F                     	;# 
  2633  0810                     	;# 
  2634  0811                     	;# 
  2635  0812                     	;# 
  2636  0813                     	;# 
  2637  0814                     	;# 
  2638  081A                     	;# 
  2639  081B                     	;# 
  2640  081C                     	;# 
  2641  081D                     	;# 
  2642  081E                     	;# 
  2643  081F                     	;# 
  2644  088C                     	;# 
  2645  088D                     	;# 
  2646  088E                     	;# 
  2647  088F                     	;# 
  2648  0890                     	;# 
  2649  0891                     	;# 
  2650  0892                     	;# 
  2651  0893                     	;# 
  2652  0895                     	;# 
  2653  0896                     	;# 
  2654  0897                     	;# 
  2655  0898                     	;# 
  2656  0899                     	;# 
  2657  089A                     	;# 
  2658  089B                     	;# 
  2659  090C                     	;# 
  2660  090E                     	;# 
  2661  090F                     	;# 
  2662  091F                     	;# 
  2663  091F                     	;# 
  2664  098F                     	;# 
  2665  098F                     	;# 
  2666  0990                     	;# 
  2667  0991                     	;# 
  2668  0992                     	;# 
  2669  0993                     	;# 
  2670  0994                     	;# 
  2671  0995                     	;# 
  2672  0996                     	;# 
  2673  0997                     	;# 
  2674  0E0F                     	;# 
  2675  0E10                     	;# 
  2676  0E11                     	;# 
  2677  0E12                     	;# 
  2678  0E13                     	;# 
  2679  0E14                     	;# 
  2680  0E15                     	;# 
  2681  0E16                     	;# 
  2682  0E17                     	;# 
  2683  0E18                     	;# 
  2684  0E19                     	;# 
  2685  0E1A                     	;# 
  2686  0E1B                     	;# 
  2687  0E1C                     	;# 
  2688  0E1D                     	;# 
  2689  0E1E                     	;# 
  2690  0E1F                     	;# 
  2691  0E20                     	;# 
  2692  0E21                     	;# 
  2693  0E22                     	;# 
  2694  0E23                     	;# 
  2695  0E24                     	;# 
  2696  0E25                     	;# 
  2697  0E26                     	;# 
  2698  0E27                     	;# 
  2699  0E28                     	;# 
  2700  0E29                     	;# 
  2701  0E2A                     	;# 
  2702  0E2B                     	;# 
  2703  0E2C                     	;# 
  2704  0E2D                     	;# 
  2705  0E2E                     	;# 
  2706  0E2F                     	;# 
  2707  0E30                     	;# 
  2708  0E31                     	;# 
  2709  0E32                     	;# 
  2710  0E33                     	;# 
  2711  0E34                     	;# 
  2712  0E35                     	;# 
  2713  0E36                     	;# 
  2714  0E37                     	;# 
  2715  0E8F                     	;# 
  2716  0E90                     	;# 
  2717  0E91                     	;# 
  2718  0E92                     	;# 
  2719  0E93                     	;# 
  2720  0E94                     	;# 
  2721  0E95                     	;# 
  2722  0E96                     	;# 
  2723  0E97                     	;# 
  2724  0E9C                     	;# 
  2725  0E9D                     	;# 
  2726  0E9E                     	;# 
  2727  0EA1                     	;# 
  2728  0EA2                     	;# 
  2729  0EA3                     	;# 
  2730  0EA4                     	;# 
  2731  0EA5                     	;# 
  2732  0EA9                     	;# 
  2733  0EAA                     	;# 
  2734  0EAB                     	;# 
  2735  0EAC                     	;# 
  2736  0EB1                     	;# 
  2737  0EB2                     	;# 
  2738  0EB3                     	;# 
  2739  0EB8                     	;# 
  2740  0EB9                     	;# 
  2741  0EBA                     	;# 
  2742  0EBB                     	;# 
  2743  0EBC                     	;# 
  2744  0EBD                     	;# 
  2745  0EBE                     	;# 
  2746  0EC3                     	;# 
  2747  0EC5                     	;# 
  2748  0EC6                     	;# 
  2749  0EC7                     	;# 
  2750  0EC8                     	;# 
  2751  0EC9                     	;# 
  2752  0ECA                     	;# 
  2753  0ECB                     	;# 
  2754  0ECC                     	;# 
  2755  0F10                     	;# 
  2756  0F11                     	;# 
  2757  0F12                     	;# 
  2758  0F13                     	;# 
  2759  0F14                     	;# 
  2760  0F15                     	;# 
  2761  0F16                     	;# 
  2762  0F17                     	;# 
  2763  0F18                     	;# 
  2764  0F19                     	;# 
  2765  0F1A                     	;# 
  2766  0F1B                     	;# 
  2767  0F1C                     	;# 
  2768  0F1D                     	;# 
  2769  0F1E                     	;# 
  2770  0F1F                     	;# 
  2771  0F20                     	;# 
  2772  0F21                     	;# 
  2773  0F22                     	;# 
  2774  0F23                     	;# 
  2775  0F24                     	;# 
  2776  0F25                     	;# 
  2777  0F26                     	;# 
  2778  0F27                     	;# 
  2779  0F28                     	;# 
  2780  0F29                     	;# 
  2781  0F2A                     	;# 
  2782  0F2B                     	;# 
  2783  0F2C                     	;# 
  2784  0F2D                     	;# 
  2785  0F2E                     	;# 
  2786  0F2F                     	;# 
  2787  0F30                     	;# 
  2788  0F31                     	;# 
  2789  0F32                     	;# 
  2790  0F38                     	;# 
  2791  0F39                     	;# 
  2792  0F3A                     	;# 
  2793  0F3B                     	;# 
  2794  0F3C                     	;# 
  2795  0F3D                     	;# 
  2796  0F3E                     	;# 
  2797  0F3F                     	;# 
  2798  0F40                     	;# 
  2799  0F41                     	;# 
  2800  0F43                     	;# 
  2801  0F44                     	;# 
  2802  0F45                     	;# 
  2803  0F46                     	;# 
  2804  0F47                     	;# 
  2805  0F48                     	;# 
  2806  0F49                     	;# 
  2807  0F4A                     	;# 
  2808  0F4B                     	;# 
  2809  0F4C                     	;# 
  2810  0F4E                     	;# 
  2811  0F4F                     	;# 
  2812  0F50                     	;# 
  2813  0F51                     	;# 
  2814  0F52                     	;# 
  2815  0F53                     	;# 
  2816  0F54                     	;# 
  2817  0F55                     	;# 
  2818  0F56                     	;# 
  2819  0F57                     	;# 
  2820  0F59                     	;# 
  2821  0F5A                     	;# 
  2822  0F5B                     	;# 
  2823  0F5C                     	;# 
  2824  0F5D                     	;# 
  2825  0F61                     	;# 
  2826  0F62                     	;# 
  2827  0F64                     	;# 
  2828  0F65                     	;# 
  2829  0F66                     	;# 
  2830  0F67                     	;# 
  2831  0F68                     	;# 
  2832  0F69                     	;# 
  2833  0F6A                     	;# 
  2834  0F6B                     	;# 
  2835  0F6C                     	;# 
  2836  0F6D                     	;# 
  2837  0FE4                     	;# 
  2838  0FE5                     	;# 
  2839  0FE6                     	;# 
  2840  0FE7                     	;# 
  2841  0FE8                     	;# 
  2842  0FE9                     	;# 
  2843  0FEA                     	;# 
  2844  0FEB                     	;# 
  2845  0FED                     	;# 
  2846  0FEE                     	;# 
  2847  0FEF                     	;# 
  2848  0000                     	;# 
  2849  0001                     	;# 
  2850  0002                     	;# 
  2851  0003                     	;# 
  2852  0004                     	;# 
  2853  0005                     	;# 
  2854  0006                     	;# 
  2855  0007                     	;# 
  2856  0008                     	;# 
  2857  0009                     	;# 
  2858  000A                     	;# 
  2859  000B                     	;# 
  2860  000C                     	;# 
  2861  000D                     	;# 
  2862  000E                     	;# 
  2863  000F                     	;# 
  2864  0010                     	;# 
  2865  0011                     	;# 
  2866  0012                     	;# 
  2867  0013                     	;# 
  2868  0014                     	;# 
  2869  0015                     	;# 
  2870  0016                     	;# 
  2871  0017                     	;# 
  2872  0018                     	;# 
  2873  0019                     	;# 
  2874  001A                     	;# 
  2875  001C                     	;# 
  2876  001C                     	;# 
  2877  001D                     	;# 
  2878  001D                     	;# 
  2879  001E                     	;# 
  2880  001F                     	;# 
  2881  008C                     	;# 
  2882  008C                     	;# 
  2883  008D                     	;# 
  2884  008E                     	;# 
  2885  008E                     	;# 
  2886  008F                     	;# 
  2887  0090                     	;# 
  2888  0090                     	;# 
  2889  0091                     	;# 
  2890  0093                     	;# 
  2891  0094                     	;# 
  2892  0095                     	;# 
  2893  0096                     	;# 
  2894  0097                     	;# 
  2895  0098                     	;# 
  2896  0099                     	;# 
  2897  009A                     	;# 
  2898  009B                     	;# 
  2899  009C                     	;# 
  2900  009D                     	;# 
  2901  009E                     	;# 
  2902  010C                     	;# 
  2903  010D                     	;# 
  2904  010E                     	;# 
  2905  010E                     	;# 
  2906  010F                     	;# 
  2907  0110                     	;# 
  2908  0110                     	;# 
  2909  0111                     	;# 
  2910  0112                     	;# 
  2911  0112                     	;# 
  2912  0113                     	;# 
  2913  0114                     	;# 
  2914  0114                     	;# 
  2915  0115                     	;# 
  2916  0116                     	;# 
  2917  0116                     	;# 
  2918  0117                     	;# 
  2919  0119                     	;# 
  2920  0119                     	;# 
  2921  0119                     	;# 
  2922  011A                     	;# 
  2923  011A                     	;# 
  2924  011A                     	;# 
  2925  011B                     	;# 
  2926  011B                     	;# 
  2927  011B                     	;# 
  2928  011B                     	;# 
  2929  011B                     	;# 
  2930  011C                     	;# 
  2931  011C                     	;# 
  2932  011C                     	;# 
  2933  011D                     	;# 
  2934  011D                     	;# 
  2935  011D                     	;# 
  2936  011E                     	;# 
  2937  011E                     	;# 
  2938  011E                     	;# 
  2939  011F                     	;# 
  2940  011F                     	;# 
  2941  011F                     	;# 
  2942  011F                     	;# 
  2943  011F                     	;# 
  2944  018C                     	;# 
  2945  018D                     	;# 
  2946  018E                     	;# 
  2947  018F                     	;# 
  2948  0190                     	;# 
  2949  0191                     	;# 
  2950  0192                     	;# 
  2951  0196                     	;# 
  2952  0197                     	;# 
  2953  0198                     	;# 
  2954  0199                     	;# 
  2955  019A                     	;# 
  2956  019B                     	;# 
  2957  019C                     	;# 
  2958  020C                     	;# 
  2959  020C                     	;# 
  2960  020D                     	;# 
  2961  020E                     	;# 
  2962  020F                     	;# 
  2963  020F                     	;# 
  2964  0210                     	;# 
  2965  0210                     	;# 
  2966  0211                     	;# 
  2967  0211                     	;# 
  2968  0212                     	;# 
  2969  0212                     	;# 
  2970  0213                     	;# 
  2971  0214                     	;# 
  2972  0215                     	;# 
  2973  0215                     	;# 
  2974  0216                     	;# 
  2975  0216                     	;# 
  2976  0217                     	;# 
  2977  0217                     	;# 
  2978  0218                     	;# 
  2979  0218                     	;# 
  2980  0219                     	;# 
  2981  021A                     	;# 
  2982  021B                     	;# 
  2983  021B                     	;# 
  2984  021C                     	;# 
  2985  021C                     	;# 
  2986  021D                     	;# 
  2987  021D                     	;# 
  2988  021E                     	;# 
  2989  021F                     	;# 
  2990  028C                     	;# 
  2991  028C                     	;# 
  2992  028D                     	;# 
  2993  028D                     	;# 
  2994  028E                     	;# 
  2995  028F                     	;# 
  2996  0290                     	;# 
  2997  0290                     	;# 
  2998  0291                     	;# 
  2999  0292                     	;# 
  3000  0292                     	;# 
  3001  0293                     	;# 
  3002  0293                     	;# 
  3003  0294                     	;# 
  3004  0295                     	;# 
  3005  0296                     	;# 
  3006  0296                     	;# 
  3007  0297                     	;# 
  3008  0298                     	;# 
  3009  0298                     	;# 
  3010  0299                     	;# 
  3011  0299                     	;# 
  3012  029A                     	;# 
  3013  029B                     	;# 
  3014  029C                     	;# 
  3015  029C                     	;# 
  3016  029D                     	;# 
  3017  030C                     	;# 
  3018  030C                     	;# 
  3019  030D                     	;# 
  3020  030E                     	;# 
  3021  030F                     	;# 
  3022  0310                     	;# 
  3023  0310                     	;# 
  3024  0311                     	;# 
  3025  0312                     	;# 
  3026  0313                     	;# 
  3027  0314                     	;# 
  3028  0314                     	;# 
  3029  0315                     	;# 
  3030  0316                     	;# 
  3031  0317                     	;# 
  3032  0318                     	;# 
  3033  0318                     	;# 
  3034  0319                     	;# 
  3035  031A                     	;# 
  3036  031B                     	;# 
  3037  031C                     	;# 
  3038  031C                     	;# 
  3039  031D                     	;# 
  3040  031E                     	;# 
  3041  031F                     	;# 
  3042  038C                     	;# 
  3043  038C                     	;# 
  3044  038D                     	;# 
  3045  038E                     	;# 
  3046  0390                     	;# 
  3047  0390                     	;# 
  3048  0391                     	;# 
  3049  0392                     	;# 
  3050  040C                     	;# 
  3051  040D                     	;# 
  3052  040E                     	;# 
  3053  040F                     	;# 
  3054  0410                     	;# 
  3055  0411                     	;# 
  3056  0416                     	;# 
  3057  0416                     	;# 
  3058  0417                     	;# 
  3059  0418                     	;# 
  3060  0418                     	;# 
  3061  0419                     	;# 
  3062  041A                     	;# 
  3063  041A                     	;# 
  3064  041B                     	;# 
  3065  041C                     	;# 
  3066  041C                     	;# 
  3067  041D                     	;# 
  3068  041E                     	;# 
  3069  041F                     	;# 
  3070  048C                     	;# 
  3071  048C                     	;# 
  3072  048D                     	;# 
  3073  048E                     	;# 
  3074  048F                     	;# 
  3075  048F                     	;# 
  3076  0490                     	;# 
  3077  0491                     	;# 
  3078  0492                     	;# 
  3079  0492                     	;# 
  3080  0493                     	;# 
  3081  0494                     	;# 
  3082  0495                     	;# 
  3083  0495                     	;# 
  3084  0496                     	;# 
  3085  0497                     	;# 
  3086  0498                     	;# 
  3087  0499                     	;# 
  3088  049A                     	;# 
  3089  049B                     	;# 
  3090  049C                     	;# 
  3091  049D                     	;# 
  3092  050C                     	;# 
  3093  050C                     	;# 
  3094  050D                     	;# 
  3095  050E                     	;# 
  3096  050F                     	;# 
  3097  050F                     	;# 
  3098  0510                     	;# 
  3099  0511                     	;# 
  3100  0512                     	;# 
  3101  0512                     	;# 
  3102  0513                     	;# 
  3103  0514                     	;# 
  3104  0515                     	;# 
  3105  0515                     	;# 
  3106  0516                     	;# 
  3107  0517                     	;# 
  3108  0518                     	;# 
  3109  0519                     	;# 
  3110  051A                     	;# 
  3111  051B                     	;# 
  3112  051C                     	;# 
  3113  051D                     	;# 
  3114  058C                     	;# 
  3115  058C                     	;# 
  3116  058D                     	;# 
  3117  058E                     	;# 
  3118  058F                     	;# 
  3119  058F                     	;# 
  3120  0590                     	;# 
  3121  0591                     	;# 
  3122  0592                     	;# 
  3123  0593                     	;# 
  3124  060C                     	;# 
  3125  060D                     	;# 
  3126  060E                     	;# 
  3127  060F                     	;# 
  3128  0610                     	;# 
  3129  0611                     	;# 
  3130  0612                     	;# 
  3131  0613                     	;# 
  3132  0614                     	;# 
  3133  0616                     	;# 
  3134  0617                     	;# 
  3135  0618                     	;# 
  3136  0619                     	;# 
  3137  061A                     	;# 
  3138  061B                     	;# 
  3139  061C                     	;# 
  3140  061D                     	;# 
  3141  061E                     	;# 
  3142  068C                     	;# 
  3143  068D                     	;# 
  3144  068E                     	;# 
  3145  068F                     	;# 
  3146  0690                     	;# 
  3147  0691                     	;# 
  3148  0692                     	;# 
  3149  0693                     	;# 
  3150  0694                     	;# 
  3151  070C                     	;# 
  3152  070D                     	;# 
  3153  070E                     	;# 
  3154  070F                     	;# 
  3155  0710                     	;# 
  3156  0711                     	;# 
  3157  0712                     	;# 
  3158  0713                     	;# 
  3159  0714                     	;# 
  3160  0716                     	;# 
  3161  0717                     	;# 
  3162  0718                     	;# 
  3163  0719                     	;# 
  3164  071A                     	;# 
  3165  071B                     	;# 
  3166  071C                     	;# 
  3167  071D                     	;# 
  3168  071E                     	;# 
  3169  0796                     	;# 
  3170  0797                     	;# 
  3171  0798                     	;# 
  3172  0799                     	;# 
  3173  079A                     	;# 
  3174  079B                     	;# 
  3175  080C                     	;# 
  3176  080D                     	;# 
  3177  080E                     	;# 
  3178  080F                     	;# 
  3179  0810                     	;# 
  3180  0811                     	;# 
  3181  0812                     	;# 
  3182  0813                     	;# 
  3183  0814                     	;# 
  3184  081A                     	;# 
  3185  081B                     	;# 
  3186  081C                     	;# 
  3187  081D                     	;# 
  3188  081E                     	;# 
  3189  081F                     	;# 
  3190  088C                     	;# 
  3191  088D                     	;# 
  3192  088E                     	;# 
  3193  088F                     	;# 
  3194  0890                     	;# 
  3195  0891                     	;# 
  3196  0892                     	;# 
  3197  0893                     	;# 
  3198  0895                     	;# 
  3199  0896                     	;# 
  3200  0897                     	;# 
  3201  0898                     	;# 
  3202  0899                     	;# 
  3203  089A                     	;# 
  3204  089B                     	;# 
  3205  090C                     	;# 
  3206  090E                     	;# 
  3207  090F                     	;# 
  3208  091F                     	;# 
  3209  091F                     	;# 
  3210  098F                     	;# 
  3211  098F                     	;# 
  3212  0990                     	;# 
  3213  0991                     	;# 
  3214  0992                     	;# 
  3215  0993                     	;# 
  3216  0994                     	;# 
  3217  0995                     	;# 
  3218  0996                     	;# 
  3219  0997                     	;# 
  3220  0E0F                     	;# 
  3221  0E10                     	;# 
  3222  0E11                     	;# 
  3223  0E12                     	;# 
  3224  0E13                     	;# 
  3225  0E14                     	;# 
  3226  0E15                     	;# 
  3227  0E16                     	;# 
  3228  0E17                     	;# 
  3229  0E18                     	;# 
  3230  0E19                     	;# 
  3231  0E1A                     	;# 
  3232  0E1B                     	;# 
  3233  0E1C                     	;# 
  3234  0E1D                     	;# 
  3235  0E1E                     	;# 
  3236  0E1F                     	;# 
  3237  0E20                     	;# 
  3238  0E21                     	;# 
  3239  0E22                     	;# 
  3240  0E23                     	;# 
  3241  0E24                     	;# 
  3242  0E25                     	;# 
  3243  0E26                     	;# 
  3244  0E27                     	;# 
  3245  0E28                     	;# 
  3246  0E29                     	;# 
  3247  0E2A                     	;# 
  3248  0E2B                     	;# 
  3249  0E2C                     	;# 
  3250  0E2D                     	;# 
  3251  0E2E                     	;# 
  3252  0E2F                     	;# 
  3253  0E30                     	;# 
  3254  0E31                     	;# 
  3255  0E32                     	;# 
  3256  0E33                     	;# 
  3257  0E34                     	;# 
  3258  0E35                     	;# 
  3259  0E36                     	;# 
  3260  0E37                     	;# 
  3261  0E8F                     	;# 
  3262  0E90                     	;# 
  3263  0E91                     	;# 
  3264  0E92                     	;# 
  3265  0E93                     	;# 
  3266  0E94                     	;# 
  3267  0E95                     	;# 
  3268  0E96                     	;# 
  3269  0E97                     	;# 
  3270  0E9C                     	;# 
  3271  0E9D                     	;# 
  3272  0E9E                     	;# 
  3273  0EA1                     	;# 
  3274  0EA2                     	;# 
  3275  0EA3                     	;# 
  3276  0EA4                     	;# 
  3277  0EA5                     	;# 
  3278  0EA9                     	;# 
  3279  0EAA                     	;# 
  3280  0EAB                     	;# 
  3281  0EAC                     	;# 
  3282  0EB1                     	;# 
  3283  0EB2                     	;# 
  3284  0EB3                     	;# 
  3285  0EB8                     	;# 
  3286  0EB9                     	;# 
  3287  0EBA                     	;# 
  3288  0EBB                     	;# 
  3289  0EBC                     	;# 
  3290  0EBD                     	;# 
  3291  0EBE                     	;# 
  3292  0EC3                     	;# 
  3293  0EC5                     	;# 
  3294  0EC6                     	;# 
  3295  0EC7                     	;# 
  3296  0EC8                     	;# 
  3297  0EC9                     	;# 
  3298  0ECA                     	;# 
  3299  0ECB                     	;# 
  3300  0ECC                     	;# 
  3301  0F10                     	;# 
  3302  0F11                     	;# 
  3303  0F12                     	;# 
  3304  0F13                     	;# 
  3305  0F14                     	;# 
  3306  0F15                     	;# 
  3307  0F16                     	;# 
  3308  0F17                     	;# 
  3309  0F18                     	;# 
  3310  0F19                     	;# 
  3311  0F1A                     	;# 
  3312  0F1B                     	;# 
  3313  0F1C                     	;# 
  3314  0F1D                     	;# 
  3315  0F1E                     	;# 
  3316  0F1F                     	;# 
  3317  0F20                     	;# 
  3318  0F21                     	;# 
  3319  0F22                     	;# 
  3320  0F23                     	;# 
  3321  0F24                     	;# 
  3322  0F25                     	;# 
  3323  0F26                     	;# 
  3324  0F27                     	;# 
  3325  0F28                     	;# 
  3326  0F29                     	;# 
  3327  0F2A                     	;# 
  3328  0F2B                     	;# 
  3329  0F2C                     	;# 
  3330  0F2D                     	;# 
  3331  0F2E                     	;# 
  3332  0F2F                     	;# 
  3333  0F30                     	;# 
  3334  0F31                     	;# 
  3335  0F32                     	;# 
  3336  0F38                     	;# 
  3337  0F39                     	;# 
  3338  0F3A                     	;# 
  3339  0F3B                     	;# 
  3340  0F3C                     	;# 
  3341  0F3D                     	;# 
  3342  0F3E                     	;# 
  3343  0F3F                     	;# 
  3344  0F40                     	;# 
  3345  0F41                     	;# 
  3346  0F43                     	;# 
  3347  0F44                     	;# 
  3348  0F45                     	;# 
  3349  0F46                     	;# 
  3350  0F47                     	;# 
  3351  0F48                     	;# 
  3352  0F49                     	;# 
  3353  0F4A                     	;# 
  3354  0F4B                     	;# 
  3355  0F4C                     	;# 
  3356  0F4E                     	;# 
  3357  0F4F                     	;# 
  3358  0F50                     	;# 
  3359  0F51                     	;# 
  3360  0F52                     	;# 
  3361  0F53                     	;# 
  3362  0F54                     	;# 
  3363  0F55                     	;# 
  3364  0F56                     	;# 
  3365  0F57                     	;# 
  3366  0F59                     	;# 
  3367  0F5A                     	;# 
  3368  0F5B                     	;# 
  3369  0F5C                     	;# 
  3370  0F5D                     	;# 
  3371  0F61                     	;# 
  3372  0F62                     	;# 
  3373  0F64                     	;# 
  3374  0F65                     	;# 
  3375  0F66                     	;# 
  3376  0F67                     	;# 
  3377  0F68                     	;# 
  3378  0F69                     	;# 
  3379  0F6A                     	;# 
  3380  0F6B                     	;# 
  3381  0F6C                     	;# 
  3382  0F6D                     	;# 
  3383  0FE4                     	;# 
  3384  0FE5                     	;# 
  3385  0FE6                     	;# 
  3386  0FE7                     	;# 
  3387  0FE8                     	;# 
  3388  0FE9                     	;# 
  3389  0FEA                     	;# 
  3390  0FEB                     	;# 
  3391  0FED                     	;# 
  3392  0FEE                     	;# 
  3393  0FEF                     	;# 
  3394  0000                     	;# 
  3395  0001                     	;# 
  3396  0002                     	;# 
  3397  0003                     	;# 
  3398  0004                     	;# 
  3399  0005                     	;# 
  3400  0006                     	;# 
  3401  0007                     	;# 
  3402  0008                     	;# 
  3403  0009                     	;# 
  3404  000A                     	;# 
  3405  000B                     	;# 
  3406  000C                     	;# 
  3407  000D                     	;# 
  3408  000E                     	;# 
  3409  000F                     	;# 
  3410  0010                     	;# 
  3411  0011                     	;# 
  3412  0012                     	;# 
  3413  0013                     	;# 
  3414  0014                     	;# 
  3415  0015                     	;# 
  3416  0016                     	;# 
  3417  0017                     	;# 
  3418  0018                     	;# 
  3419  0019                     	;# 
  3420  001A                     	;# 
  3421  001C                     	;# 
  3422  001C                     	;# 
  3423  001D                     	;# 
  3424  001D                     	;# 
  3425  001E                     	;# 
  3426  001F                     	;# 
  3427  008C                     	;# 
  3428  008C                     	;# 
  3429  008D                     	;# 
  3430  008E                     	;# 
  3431  008E                     	;# 
  3432  008F                     	;# 
  3433  0090                     	;# 
  3434  0090                     	;# 
  3435  0091                     	;# 
  3436  0093                     	;# 
  3437  0094                     	;# 
  3438  0095                     	;# 
  3439  0096                     	;# 
  3440  0097                     	;# 
  3441  0098                     	;# 
  3442  0099                     	;# 
  3443  009A                     	;# 
  3444  009B                     	;# 
  3445  009C                     	;# 
  3446  009D                     	;# 
  3447  009E                     	;# 
  3448  010C                     	;# 
  3449  010D                     	;# 
  3450  010E                     	;# 
  3451  010E                     	;# 
  3452  010F                     	;# 
  3453  0110                     	;# 
  3454  0110                     	;# 
  3455  0111                     	;# 
  3456  0112                     	;# 
  3457  0112                     	;# 
  3458  0113                     	;# 
  3459  0114                     	;# 
  3460  0114                     	;# 
  3461  0115                     	;# 
  3462  0116                     	;# 
  3463  0116                     	;# 
  3464  0117                     	;# 
  3465  0119                     	;# 
  3466  0119                     	;# 
  3467  0119                     	;# 
  3468  011A                     	;# 
  3469  011A                     	;# 
  3470  011A                     	;# 
  3471  011B                     	;# 
  3472  011B                     	;# 
  3473  011B                     	;# 
  3474  011B                     	;# 
  3475  011B                     	;# 
  3476  011C                     	;# 
  3477  011C                     	;# 
  3478  011C                     	;# 
  3479  011D                     	;# 
  3480  011D                     	;# 
  3481  011D                     	;# 
  3482  011E                     	;# 
  3483  011E                     	;# 
  3484  011E                     	;# 
  3485  011F                     	;# 
  3486  011F                     	;# 
  3487  011F                     	;# 
  3488  011F                     	;# 
  3489  011F                     	;# 
  3490  018C                     	;# 
  3491  018D                     	;# 
  3492  018E                     	;# 
  3493  018F                     	;# 
  3494  0190                     	;# 
  3495  0191                     	;# 
  3496  0192                     	;# 
  3497  0196                     	;# 
  3498  0197                     	;# 
  3499  0198                     	;# 
  3500  0199                     	;# 
  3501  019A                     	;# 
  3502  019B                     	;# 
  3503  019C                     	;# 
  3504  020C                     	;# 
  3505  020C                     	;# 
  3506  020D                     	;# 
  3507  020E                     	;# 
  3508  020F                     	;# 
  3509  020F                     	;# 
  3510  0210                     	;# 
  3511  0210                     	;# 
  3512  0211                     	;# 
  3513  0211                     	;# 
  3514  0212                     	;# 
  3515  0212                     	;# 
  3516  0213                     	;# 
  3517  0214                     	;# 
  3518  0215                     	;# 
  3519  0215                     	;# 
  3520  0216                     	;# 
  3521  0216                     	;# 
  3522  0217                     	;# 
  3523  0217                     	;# 
  3524  0218                     	;# 
  3525  0218                     	;# 
  3526  0219                     	;# 
  3527  021A                     	;# 
  3528  021B                     	;# 
  3529  021B                     	;# 
  3530  021C                     	;# 
  3531  021C                     	;# 
  3532  021D                     	;# 
  3533  021D                     	;# 
  3534  021E                     	;# 
  3535  021F                     	;# 
  3536  028C                     	;# 
  3537  028C                     	;# 
  3538  028D                     	;# 
  3539  028D                     	;# 
  3540  028E                     	;# 
  3541  028F                     	;# 
  3542  0290                     	;# 
  3543  0290                     	;# 
  3544  0291                     	;# 
  3545  0292                     	;# 
  3546  0292                     	;# 
  3547  0293                     	;# 
  3548  0293                     	;# 
  3549  0294                     	;# 
  3550  0295                     	;# 
  3551  0296                     	;# 
  3552  0296                     	;# 
  3553  0297                     	;# 
  3554  0298                     	;# 
  3555  0298                     	;# 
  3556  0299                     	;# 
  3557  0299                     	;# 
  3558  029A                     	;# 
  3559  029B                     	;# 
  3560  029C                     	;# 
  3561  029C                     	;# 
  3562  029D                     	;# 
  3563  030C                     	;# 
  3564  030C                     	;# 
  3565  030D                     	;# 
  3566  030E                     	;# 
  3567  030F                     	;# 
  3568  0310                     	;# 
  3569  0310                     	;# 
  3570  0311                     	;# 
  3571  0312                     	;# 
  3572  0313                     	;# 
  3573  0314                     	;# 
  3574  0314                     	;# 
  3575  0315                     	;# 
  3576  0316                     	;# 
  3577  0317                     	;# 
  3578  0318                     	;# 
  3579  0318                     	;# 
  3580  0319                     	;# 
  3581  031A                     	;# 
  3582  031B                     	;# 
  3583  031C                     	;# 
  3584  031C                     	;# 
  3585  031D                     	;# 
  3586  031E                     	;# 
  3587  031F                     	;# 
  3588  038C                     	;# 
  3589  038C                     	;# 
  3590  038D                     	;# 
  3591  038E                     	;# 
  3592  0390                     	;# 
  3593  0390                     	;# 
  3594  0391                     	;# 
  3595  0392                     	;# 
  3596  040C                     	;# 
  3597  040D                     	;# 
  3598  040E                     	;# 
  3599  040F                     	;# 
  3600  0410                     	;# 
  3601  0411                     	;# 
  3602  0416                     	;# 
  3603  0416                     	;# 
  3604  0417                     	;# 
  3605  0418                     	;# 
  3606  0418                     	;# 
  3607  0419                     	;# 
  3608  041A                     	;# 
  3609  041A                     	;# 
  3610  041B                     	;# 
  3611  041C                     	;# 
  3612  041C                     	;# 
  3613  041D                     	;# 
  3614  041E                     	;# 
  3615  041F                     	;# 
  3616  048C                     	;# 
  3617  048C                     	;# 
  3618  048D                     	;# 
  3619  048E                     	;# 
  3620  048F                     	;# 
  3621  048F                     	;# 
  3622  0490                     	;# 
  3623  0491                     	;# 
  3624  0492                     	;# 
  3625  0492                     	;# 
  3626  0493                     	;# 
  3627  0494                     	;# 
  3628  0495                     	;# 
  3629  0495                     	;# 
  3630  0496                     	;# 
  3631  0497                     	;# 
  3632  0498                     	;# 
  3633  0499                     	;# 
  3634  049A                     	;# 
  3635  049B                     	;# 
  3636  049C                     	;# 
  3637  049D                     	;# 
  3638  050C                     	;# 
  3639  050C                     	;# 
  3640  050D                     	;# 
  3641  050E                     	;# 
  3642  050F                     	;# 
  3643  050F                     	;# 
  3644  0510                     	;# 
  3645  0511                     	;# 
  3646  0512                     	;# 
  3647  0512                     	;# 
  3648  0513                     	;# 
  3649  0514                     	;# 
  3650  0515                     	;# 
  3651  0515                     	;# 
  3652  0516                     	;# 
  3653  0517                     	;# 
  3654  0518                     	;# 
  3655  0519                     	;# 
  3656  051A                     	;# 
  3657  051B                     	;# 
  3658  051C                     	;# 
  3659  051D                     	;# 
  3660  058C                     	;# 
  3661  058C                     	;# 
  3662  058D                     	;# 
  3663  058E                     	;# 
  3664  058F                     	;# 
  3665  058F                     	;# 
  3666  0590                     	;# 
  3667  0591                     	;# 
  3668  0592                     	;# 
  3669  0593                     	;# 
  3670  060C                     	;# 
  3671  060D                     	;# 
  3672  060E                     	;# 
  3673  060F                     	;# 
  3674  0610                     	;# 
  3675  0611                     	;# 
  3676  0612                     	;# 
  3677  0613                     	;# 
  3678  0614                     	;# 
  3679  0616                     	;# 
  3680  0617                     	;# 
  3681  0618                     	;# 
  3682  0619                     	;# 
  3683  061A                     	;# 
  3684  061B                     	;# 
  3685  061C                     	;# 
  3686  061D                     	;# 
  3687  061E                     	;# 
  3688  068C                     	;# 
  3689  068D                     	;# 
  3690  068E                     	;# 
  3691  068F                     	;# 
  3692  0690                     	;# 
  3693  0691                     	;# 
  3694  0692                     	;# 
  3695  0693                     	;# 
  3696  0694                     	;# 
  3697  070C                     	;# 
  3698  070D                     	;# 
  3699  070E                     	;# 
  3700  070F                     	;# 
  3701  0710                     	;# 
  3702  0711                     	;# 
  3703  0712                     	;# 
  3704  0713                     	;# 
  3705  0714                     	;# 
  3706  0716                     	;# 
  3707  0717                     	;# 
  3708  0718                     	;# 
  3709  0719                     	;# 
  3710  071A                     	;# 
  3711  071B                     	;# 
  3712  071C                     	;# 
  3713  071D                     	;# 
  3714  071E                     	;# 
  3715  0796                     	;# 
  3716  0797                     	;# 
  3717  0798                     	;# 
  3718  0799                     	;# 
  3719  079A                     	;# 
  3720  079B                     	;# 
  3721  080C                     	;# 
  3722  080D                     	;# 
  3723  080E                     	;# 
  3724  080F                     	;# 
  3725  0810                     	;# 
  3726  0811                     	;# 
  3727  0812                     	;# 
  3728  0813                     	;# 
  3729  0814                     	;# 
  3730  081A                     	;# 
  3731  081B                     	;# 
  3732  081C                     	;# 
  3733  081D                     	;# 
  3734  081E                     	;# 
  3735  081F                     	;# 
  3736  088C                     	;# 
  3737  088D                     	;# 
  3738  088E                     	;# 
  3739  088F                     	;# 
  3740  0890                     	;# 
  3741  0891                     	;# 
  3742  0892                     	;# 
  3743  0893                     	;# 
  3744  0895                     	;# 
  3745  0896                     	;# 
  3746  0897                     	;# 
  3747  0898                     	;# 
  3748  0899                     	;# 
  3749  089A                     	;# 
  3750  089B                     	;# 
  3751  090C                     	;# 
  3752  090E                     	;# 
  3753  090F                     	;# 
  3754  091F                     	;# 
  3755  091F                     	;# 
  3756  098F                     	;# 
  3757  098F                     	;# 
  3758  0990                     	;# 
  3759  0991                     	;# 
  3760  0992                     	;# 
  3761  0993                     	;# 
  3762  0994                     	;# 
  3763  0995                     	;# 
  3764  0996                     	;# 
  3765  0997                     	;# 
  3766  0E0F                     	;# 
  3767  0E10                     	;# 
  3768  0E11                     	;# 
  3769  0E12                     	;# 
  3770  0E13                     	;# 
  3771  0E14                     	;# 
  3772  0E15                     	;# 
  3773  0E16                     	;# 
  3774  0E17                     	;# 
  3775  0E18                     	;# 
  3776  0E19                     	;# 
  3777  0E1A                     	;# 
  3778  0E1B                     	;# 
  3779  0E1C                     	;# 
  3780  0E1D                     	;# 
  3781  0E1E                     	;# 
  3782  0E1F                     	;# 
  3783  0E20                     	;# 
  3784  0E21                     	;# 
  3785  0E22                     	;# 
  3786  0E23                     	;# 
  3787  0E24                     	;# 
  3788  0E25                     	;# 
  3789  0E26                     	;# 
  3790  0E27                     	;# 
  3791  0E28                     	;# 
  3792  0E29                     	;# 
  3793  0E2A                     	;# 
  3794  0E2B                     	;# 
  3795  0E2C                     	;# 
  3796  0E2D                     	;# 
  3797  0E2E                     	;# 
  3798  0E2F                     	;# 
  3799  0E30                     	;# 
  3800  0E31                     	;# 
  3801  0E32                     	;# 
  3802  0E33                     	;# 
  3803  0E34                     	;# 
  3804  0E35                     	;# 
  3805  0E36                     	;# 
  3806  0E37                     	;# 
  3807  0E8F                     	;# 
  3808  0E90                     	;# 
  3809  0E91                     	;# 
  3810  0E92                     	;# 
  3811  0E93                     	;# 
  3812  0E94                     	;# 
  3813  0E95                     	;# 
  3814  0E96                     	;# 
  3815  0E97                     	;# 
  3816  0E9C                     	;# 
  3817  0E9D                     	;# 
  3818  0E9E                     	;# 
  3819  0EA1                     	;# 
  3820  0EA2                     	;# 
  3821  0EA3                     	;# 
  3822  0EA4                     	;# 
  3823  0EA5                     	;# 
  3824  0EA9                     	;# 
  3825  0EAA                     	;# 
  3826  0EAB                     	;# 
  3827  0EAC                     	;# 
  3828  0EB1                     	;# 
  3829  0EB2                     	;# 
  3830  0EB3                     	;# 
  3831  0EB8                     	;# 
  3832  0EB9                     	;# 
  3833  0EBA                     	;# 
  3834  0EBB                     	;# 
  3835  0EBC                     	;# 
  3836  0EBD                     	;# 
  3837  0EBE                     	;# 
  3838  0EC3                     	;# 
  3839  0EC5                     	;# 
  3840  0EC6                     	;# 
  3841  0EC7                     	;# 
  3842  0EC8                     	;# 
  3843  0EC9                     	;# 
  3844  0ECA                     	;# 
  3845  0ECB                     	;# 
  3846  0ECC                     	;# 
  3847  0F10                     	;# 
  3848  0F11                     	;# 
  3849  0F12                     	;# 
  3850  0F13                     	;# 
  3851  0F14                     	;# 
  3852  0F15                     	;# 
  3853  0F16                     	;# 
  3854  0F17                     	;# 
  3855  0F18                     	;# 
  3856  0F19                     	;# 
  3857  0F1A                     	;# 
  3858  0F1B                     	;# 
  3859  0F1C                     	;# 
  3860  0F1D                     	;# 
  3861  0F1E                     	;# 
  3862  0F1F                     	;# 
  3863  0F20                     	;# 
  3864  0F21                     	;# 
  3865  0F22                     	;# 
  3866  0F23                     	;# 
  3867  0F24                     	;# 
  3868  0F25                     	;# 
  3869  0F26                     	;# 
  3870  0F27                     	;# 
  3871  0F28                     	;# 
  3872  0F29                     	;# 
  3873  0F2A                     	;# 
  3874  0F2B                     	;# 
  3875  0F2C                     	;# 
  3876  0F2D                     	;# 
  3877  0F2E                     	;# 
  3878  0F2F                     	;# 
  3879  0F30                     	;# 
  3880  0F31                     	;# 
  3881  0F32                     	;# 
  3882  0F38                     	;# 
  3883  0F39                     	;# 
  3884  0F3A                     	;# 
  3885  0F3B                     	;# 
  3886  0F3C                     	;# 
  3887  0F3D                     	;# 
  3888  0F3E                     	;# 
  3889  0F3F                     	;# 
  3890  0F40                     	;# 
  3891  0F41                     	;# 
  3892  0F43                     	;# 
  3893  0F44                     	;# 
  3894  0F45                     	;# 
  3895  0F46                     	;# 
  3896  0F47                     	;# 
  3897  0F48                     	;# 
  3898  0F49                     	;# 
  3899  0F4A                     	;# 
  3900  0F4B                     	;# 
  3901  0F4C                     	;# 
  3902  0F4E                     	;# 
  3903  0F4F                     	;# 
  3904  0F50                     	;# 
  3905  0F51                     	;# 
  3906  0F52                     	;# 
  3907  0F53                     	;# 
  3908  0F54                     	;# 
  3909  0F55                     	;# 
  3910  0F56                     	;# 
  3911  0F57                     	;# 
  3912  0F59                     	;# 
  3913  0F5A                     	;# 
  3914  0F5B                     	;# 
  3915  0F5C                     	;# 
  3916  0F5D                     	;# 
  3917  0F61                     	;# 
  3918  0F62                     	;# 
  3919  0F64                     	;# 
  3920  0F65                     	;# 
  3921  0F66                     	;# 
  3922  0F67                     	;# 
  3923  0F68                     	;# 
  3924  0F69                     	;# 
  3925  0F6A                     	;# 
  3926  0F6B                     	;# 
  3927  0F6C                     	;# 
  3928  0F6D                     	;# 
  3929  0FE4                     	;# 
  3930  0FE5                     	;# 
  3931  0FE6                     	;# 
  3932  0FE7                     	;# 
  3933  0FE8                     	;# 
  3934  0FE9                     	;# 
  3935  0FEA                     	;# 
  3936  0FEB                     	;# 
  3937  0FED                     	;# 
  3938  0FEE                     	;# 
  3939  0FEF                     	;# 
  3940  0000                     	;# 
  3941  0001                     	;# 
  3942  0002                     	;# 
  3943  0003                     	;# 
  3944  0004                     	;# 
  3945  0005                     	;# 
  3946  0006                     	;# 
  3947  0007                     	;# 
  3948  0008                     	;# 
  3949  0009                     	;# 
  3950  000A                     	;# 
  3951  000B                     	;# 
  3952  000C                     	;# 
  3953  000D                     	;# 
  3954  000E                     	;# 
  3955  000F                     	;# 
  3956  0010                     	;# 
  3957  0011                     	;# 
  3958  0012                     	;# 
  3959  0013                     	;# 
  3960  0014                     	;# 
  3961  0015                     	;# 
  3962  0016                     	;# 
  3963  0017                     	;# 
  3964  0018                     	;# 
  3965  0019                     	;# 
  3966  001A                     	;# 
  3967  001C                     	;# 
  3968  001C                     	;# 
  3969  001D                     	;# 
  3970  001D                     	;# 
  3971  001E                     	;# 
  3972  001F                     	;# 
  3973  008C                     	;# 
  3974  008C                     	;# 
  3975  008D                     	;# 
  3976  008E                     	;# 
  3977  008E                     	;# 
  3978  008F                     	;# 
  3979  0090                     	;# 
  3980  0090                     	;# 
  3981  0091                     	;# 
  3982  0093                     	;# 
  3983  0094                     	;# 
  3984  0095                     	;# 
  3985  0096                     	;# 
  3986  0097                     	;# 
  3987  0098                     	;# 
  3988  0099                     	;# 
  3989  009A                     	;# 
  3990  009B                     	;# 
  3991  009C                     	;# 
  3992  009D                     	;# 
  3993  009E                     	;# 
  3994  010C                     	;# 
  3995  010D                     	;# 
  3996  010E                     	;# 
  3997  010E                     	;# 
  3998  010F                     	;# 
  3999  0110                     	;# 
  4000  0110                     	;# 
  4001  0111                     	;# 
  4002  0112                     	;# 
  4003  0112                     	;# 
  4004  0113                     	;# 
  4005  0114                     	;# 
  4006  0114                     	;# 
  4007  0115                     	;# 
  4008  0116                     	;# 
  4009  0116                     	;# 
  4010  0117                     	;# 
  4011  0119                     	;# 
  4012  0119                     	;# 
  4013  0119                     	;# 
  4014  011A                     	;# 
  4015  011A                     	;# 
  4016  011A                     	;# 
  4017  011B                     	;# 
  4018  011B                     	;# 
  4019  011B                     	;# 
  4020  011B                     	;# 
  4021  011B                     	;# 
  4022  011C                     	;# 
  4023  011C                     	;# 
  4024  011C                     	;# 
  4025  011D                     	;# 
  4026  011D                     	;# 
  4027  011D                     	;# 
  4028  011E                     	;# 
  4029  011E                     	;# 
  4030  011E                     	;# 
  4031  011F                     	;# 
  4032  011F                     	;# 
  4033  011F                     	;# 
  4034  011F                     	;# 
  4035  011F                     	;# 
  4036  018C                     	;# 
  4037  018D                     	;# 
  4038  018E                     	;# 
  4039  018F                     	;# 
  4040  0190                     	;# 
  4041  0191                     	;# 
  4042  0192                     	;# 
  4043  0196                     	;# 
  4044  0197                     	;# 
  4045  0198                     	;# 
  4046  0199                     	;# 
  4047  019A                     	;# 
  4048  019B                     	;# 
  4049  019C                     	;# 
  4050  020C                     	;# 
  4051  020C                     	;# 
  4052  020D                     	;# 
  4053  020E                     	;# 
  4054  020F                     	;# 
  4055  020F                     	;# 
  4056  0210                     	;# 
  4057  0210                     	;# 
  4058  0211                     	;# 
  4059  0211                     	;# 
  4060  0212                     	;# 
  4061  0212                     	;# 
  4062  0213                     	;# 
  4063  0214                     	;# 
  4064  0215                     	;# 
  4065  0215                     	;# 
  4066  0216                     	;# 
  4067  0216                     	;# 
  4068  0217                     	;# 
  4069  0217                     	;# 
  4070  0218                     	;# 
  4071  0218                     	;# 
  4072  0219                     	;# 
  4073  021A                     	;# 
  4074  021B                     	;# 
  4075  021B                     	;# 
  4076  021C                     	;# 
  4077  021C                     	;# 
  4078  021D                     	;# 
  4079  021D                     	;# 
  4080  021E                     	;# 
  4081  021F                     	;# 
  4082  028C                     	;# 
  4083  028C                     	;# 
  4084  028D                     	;# 
  4085  028D                     	;# 
  4086  028E                     	;# 
  4087  028F                     	;# 
  4088  0290                     	;# 
  4089  0290                     	;# 
  4090  0291                     	;# 
  4091  0292                     	;# 
  4092  0292                     	;# 
  4093  0293                     	;# 
  4094  0293                     	;# 
  4095  0294                     	;# 
  4096  0295                     	;# 
  4097  0296                     	;# 
  4098  0296                     	;# 
  4099  0297                     	;# 
  4100  0298                     	;# 
  4101  0298                     	;# 
  4102  0299                     	;# 
  4103  0299                     	;# 
  4104  029A                     	;# 
  4105  029B                     	;# 
  4106  029C                     	;# 
  4107  029C                     	;# 
  4108  029D                     	;# 
  4109  030C                     	;# 
  4110  030C                     	;# 
  4111  030D                     	;# 
  4112  030E                     	;# 
  4113  030F                     	;# 
  4114  0310                     	;# 
  4115  0310                     	;# 
  4116  0311                     	;# 
  4117  0312                     	;# 
  4118  0313                     	;# 
  4119  0314                     	;# 
  4120  0314                     	;# 
  4121  0315                     	;# 
  4122  0316                     	;# 
  4123  0317                     	;# 
  4124  0318                     	;# 
  4125  0318                     	;# 
  4126  0319                     	;# 
  4127  031A                     	;# 
  4128  031B                     	;# 
  4129  031C                     	;# 
  4130  031C                     	;# 
  4131  031D                     	;# 
  4132  031E                     	;# 
  4133  031F                     	;# 
  4134  038C                     	;# 
  4135  038C                     	;# 
  4136  038D                     	;# 
  4137  038E                     	;# 
  4138  0390                     	;# 
  4139  0390                     	;# 
  4140  0391                     	;# 
  4141  0392                     	;# 
  4142  040C                     	;# 
  4143  040D                     	;# 
  4144  040E                     	;# 
  4145  040F                     	;# 
  4146  0410                     	;# 
  4147  0411                     	;# 
  4148  0416                     	;# 
  4149  0416                     	;# 
  4150  0417                     	;# 
  4151  0418                     	;# 
  4152  0418                     	;# 
  4153  0419                     	;# 
  4154  041A                     	;# 
  4155  041A                     	;# 
  4156  041B                     	;# 
  4157  041C                     	;# 
  4158  041C                     	;# 
  4159  041D                     	;# 
  4160  041E                     	;# 
  4161  041F                     	;# 
  4162  048C                     	;# 
  4163  048C                     	;# 
  4164  048D                     	;# 
  4165  048E                     	;# 
  4166  048F                     	;# 
  4167  048F                     	;# 
  4168  0490                     	;# 
  4169  0491                     	;# 
  4170  0492                     	;# 
  4171  0492                     	;# 
  4172  0493                     	;# 
  4173  0494                     	;# 
  4174  0495                     	;# 
  4175  0495                     	;# 
  4176  0496                     	;# 
  4177  0497                     	;# 
  4178  0498                     	;# 
  4179  0499                     	;# 
  4180  049A                     	;# 
  4181  049B                     	;# 
  4182  049C                     	;# 
  4183  049D                     	;# 
  4184  050C                     	;# 
  4185  050C                     	;# 
  4186  050D                     	;# 
  4187  050E                     	;# 
  4188  050F                     	;# 
  4189  050F                     	;# 
  4190  0510                     	;# 
  4191  0511                     	;# 
  4192  0512                     	;# 
  4193  0512                     	;# 
  4194  0513                     	;# 
  4195  0514                     	;# 
  4196  0515                     	;# 
  4197  0515                     	;# 
  4198  0516                     	;# 
  4199  0517                     	;# 
  4200  0518                     	;# 
  4201  0519                     	;# 
  4202  051A                     	;# 
  4203  051B                     	;# 
  4204  051C                     	;# 
  4205  051D                     	;# 
  4206  058C                     	;# 
  4207  058C                     	;# 
  4208  058D                     	;# 
  4209  058E                     	;# 
  4210  058F                     	;# 
  4211  058F                     	;# 
  4212  0590                     	;# 
  4213  0591                     	;# 
  4214  0592                     	;# 
  4215  0593                     	;# 
  4216  060C                     	;# 
  4217  060D                     	;# 
  4218  060E                     	;# 
  4219  060F                     	;# 
  4220  0610                     	;# 
  4221  0611                     	;# 
  4222  0612                     	;# 
  4223  0613                     	;# 
  4224  0614                     	;# 
  4225  0616                     	;# 
  4226  0617                     	;# 
  4227  0618                     	;# 
  4228  0619                     	;# 
  4229  061A                     	;# 
  4230  061B                     	;# 
  4231  061C                     	;# 
  4232  061D                     	;# 
  4233  061E                     	;# 
  4234  068C                     	;# 
  4235  068D                     	;# 
  4236  068E                     	;# 
  4237  068F                     	;# 
  4238  0690                     	;# 
  4239  0691                     	;# 
  4240  0692                     	;# 
  4241  0693                     	;# 
  4242  0694                     	;# 
  4243  070C                     	;# 
  4244  070D                     	;# 
  4245  070E                     	;# 
  4246  070F                     	;# 
  4247  0710                     	;# 
  4248  0711                     	;# 
  4249  0712                     	;# 
  4250  0713                     	;# 
  4251  0714                     	;# 
  4252  0716                     	;# 
  4253  0717                     	;# 
  4254  0718                     	;# 
  4255  0719                     	;# 
  4256  071A                     	;# 
  4257  071B                     	;# 
  4258  071C                     	;# 
  4259  071D                     	;# 
  4260  071E                     	;# 
  4261  0796                     	;# 
  4262  0797                     	;# 
  4263  0798                     	;# 
  4264  0799                     	;# 
  4265  079A                     	;# 
  4266  079B                     	;# 
  4267  080C                     	;# 
  4268  080D                     	;# 
  4269  080E                     	;# 
  4270  080F                     	;# 
  4271  0810                     	;# 
  4272  0811                     	;# 
  4273  0812                     	;# 
  4274  0813                     	;# 
  4275  0814                     	;# 
  4276  081A                     	;# 
  4277  081B                     	;# 
  4278  081C                     	;# 
  4279  081D                     	;# 
  4280  081E                     	;# 
  4281  081F                     	;# 
  4282  088C                     	;# 
  4283  088D                     	;# 
  4284  088E                     	;# 
  4285  088F                     	;# 
  4286  0890                     	;# 
  4287  0891                     	;# 
  4288  0892                     	;# 
  4289  0893                     	;# 
  4290  0895                     	;# 
  4291  0896                     	;# 
  4292  0897                     	;# 
  4293  0898                     	;# 
  4294  0899                     	;# 
  4295  089A                     	;# 
  4296  089B                     	;# 
  4297  090C                     	;# 
  4298  090E                     	;# 
  4299  090F                     	;# 
  4300  091F                     	;# 
  4301  091F                     	;# 
  4302  098F                     	;# 
  4303  098F                     	;# 
  4304  0990                     	;# 
  4305  0991                     	;# 
  4306  0992                     	;# 
  4307  0993                     	;# 
  4308  0994                     	;# 
  4309  0995                     	;# 
  4310  0996                     	;# 
  4311  0997                     	;# 
  4312  0E0F                     	;# 
  4313  0E10                     	;# 
  4314  0E11                     	;# 
  4315  0E12                     	;# 
  4316  0E13                     	;# 
  4317  0E14                     	;# 
  4318  0E15                     	;# 
  4319  0E16                     	;# 
  4320  0E17                     	;# 
  4321  0E18                     	;# 
  4322  0E19                     	;# 
  4323  0E1A                     	;# 
  4324  0E1B                     	;# 
  4325  0E1C                     	;# 
  4326  0E1D                     	;# 
  4327  0E1E                     	;# 
  4328  0E1F                     	;# 
  4329  0E20                     	;# 
  4330  0E21                     	;# 
  4331  0E22                     	;# 
  4332  0E23                     	;# 
  4333  0E24                     	;# 
  4334  0E25                     	;# 
  4335  0E26                     	;# 
  4336  0E27                     	;# 
  4337  0E28                     	;# 
  4338  0E29                     	;# 
  4339  0E2A                     	;# 
  4340  0E2B                     	;# 
  4341  0E2C                     	;# 
  4342  0E2D                     	;# 
  4343  0E2E                     	;# 
  4344  0E2F                     	;# 
  4345  0E30                     	;# 
  4346  0E31                     	;# 
  4347  0E32                     	;# 
  4348  0E33                     	;# 
  4349  0E34                     	;# 
  4350  0E35                     	;# 
  4351  0E36                     	;# 
  4352  0E37                     	;# 
  4353  0E8F                     	;# 
  4354  0E90                     	;# 
  4355  0E91                     	;# 
  4356  0E92                     	;# 
  4357  0E93                     	;# 
  4358  0E94                     	;# 
  4359  0E95                     	;# 
  4360  0E96                     	;# 
  4361  0E97                     	;# 
  4362  0E9C                     	;# 
  4363  0E9D                     	;# 
  4364  0E9E                     	;# 
  4365  0EA1                     	;# 
  4366  0EA2                     	;# 
  4367  0EA3                     	;# 
  4368  0EA4                     	;# 
  4369  0EA5                     	;# 
  4370  0EA9                     	;# 
  4371  0EAA                     	;# 
  4372  0EAB                     	;# 
  4373  0EAC                     	;# 
  4374  0EB1                     	;# 
  4375  0EB2                     	;# 
  4376  0EB3                     	;# 
  4377  0EB8                     	;# 
  4378  0EB9                     	;# 
  4379  0EBA                     	;# 
  4380  0EBB                     	;# 
  4381  0EBC                     	;# 
  4382  0EBD                     	;# 
  4383  0EBE                     	;# 
  4384  0EC3                     	;# 
  4385  0EC5                     	;# 
  4386  0EC6                     	;# 
  4387  0EC7                     	;# 
  4388  0EC8                     	;# 
  4389  0EC9                     	;# 
  4390  0ECA                     	;# 
  4391  0ECB                     	;# 
  4392  0ECC                     	;# 
  4393  0F10                     	;# 
  4394  0F11                     	;# 
  4395  0F12                     	;# 
  4396  0F13                     	;# 
  4397  0F14                     	;# 
  4398  0F15                     	;# 
  4399  0F16                     	;# 
  4400  0F17                     	;# 
  4401  0F18                     	;# 
  4402  0F19                     	;# 
  4403  0F1A                     	;# 
  4404  0F1B                     	;# 
  4405  0F1C                     	;# 
  4406  0F1D                     	;# 
  4407  0F1E                     	;# 
  4408  0F1F                     	;# 
  4409  0F20                     	;# 
  4410  0F21                     	;# 
  4411  0F22                     	;# 
  4412  0F23                     	;# 
  4413  0F24                     	;# 
  4414  0F25                     	;# 
  4415  0F26                     	;# 
  4416  0F27                     	;# 
  4417  0F28                     	;# 
  4418  0F29                     	;# 
  4419  0F2A                     	;# 
  4420  0F2B                     	;# 
  4421  0F2C                     	;# 
  4422  0F2D                     	;# 
  4423  0F2E                     	;# 
  4424  0F2F                     	;# 
  4425  0F30                     	;# 
  4426  0F31                     	;# 
  4427  0F32                     	;# 
  4428  0F38                     	;# 
  4429  0F39                     	;# 
  4430  0F3A                     	;# 
  4431  0F3B                     	;# 
  4432  0F3C                     	;# 
  4433  0F3D                     	;# 
  4434  0F3E                     	;# 
  4435  0F3F                     	;# 
  4436  0F40                     	;# 
  4437  0F41                     	;# 
  4438  0F43                     	;# 
  4439  0F44                     	;# 
  4440  0F45                     	;# 
  4441  0F46                     	;# 
  4442  0F47                     	;# 
  4443  0F48                     	;# 
  4444  0F49                     	;# 
  4445  0F4A                     	;# 
  4446  0F4B                     	;# 
  4447  0F4C                     	;# 
  4448  0F4E                     	;# 
  4449  0F4F                     	;# 
  4450  0F50                     	;# 
  4451  0F51                     	;# 
  4452  0F52                     	;# 
  4453  0F53                     	;# 
  4454  0F54                     	;# 
  4455  0F55                     	;# 
  4456  0F56                     	;# 
  4457  0F57                     	;# 
  4458  0F59                     	;# 
  4459  0F5A                     	;# 
  4460  0F5B                     	;# 
  4461  0F5C                     	;# 
  4462  0F5D                     	;# 
  4463  0F61                     	;# 
  4464  0F62                     	;# 
  4465  0F64                     	;# 
  4466  0F65                     	;# 
  4467  0F66                     	;# 
  4468  0F67                     	;# 
  4469  0F68                     	;# 
  4470  0F69                     	;# 
  4471  0F6A                     	;# 
  4472  0F6B                     	;# 
  4473  0F6C                     	;# 
  4474  0F6D                     	;# 
  4475  0FE4                     	;# 
  4476  0FE5                     	;# 
  4477  0FE6                     	;# 
  4478  0FE7                     	;# 
  4479  0FE8                     	;# 
  4480  0FE9                     	;# 
  4481  0FEA                     	;# 
  4482  0FEB                     	;# 
  4483  0FED                     	;# 
  4484  0FEE                     	;# 
  4485  0FEF                     	;# 
  4486  0000                     	;# 
  4487  0001                     	;# 
  4488  0002                     	;# 
  4489  0003                     	;# 
  4490  0004                     	;# 
  4491  0005                     	;# 
  4492  0006                     	;# 
  4493  0007                     	;# 
  4494  0008                     	;# 
  4495  0009                     	;# 
  4496  000A                     	;# 
  4497  000B                     	;# 
  4498  000C                     	;# 
  4499  000D                     	;# 
  4500  000E                     	;# 
  4501  000F                     	;# 
  4502  0010                     	;# 
  4503  0011                     	;# 
  4504  0012                     	;# 
  4505  0013                     	;# 
  4506  0014                     	;# 
  4507  0015                     	;# 
  4508  0016                     	;# 
  4509  0017                     	;# 
  4510  0018                     	;# 
  4511  0019                     	;# 
  4512  001A                     	;# 
  4513  001C                     	;# 
  4514  001C                     	;# 
  4515  001D                     	;# 
  4516  001D                     	;# 
  4517  001E                     	;# 
  4518  001F                     	;# 
  4519  008C                     	;# 
  4520  008C                     	;# 
  4521  008D                     	;# 
  4522  008E                     	;# 
  4523  008E                     	;# 
  4524  008F                     	;# 
  4525  0090                     	;# 
  4526  0090                     	;# 
  4527  0091                     	;# 
  4528  0093                     	;# 
  4529  0094                     	;# 
  4530  0095                     	;# 
  4531  0096                     	;# 
  4532  0097                     	;# 
  4533  0098                     	;# 
  4534  0099                     	;# 
  4535  009A                     	;# 
  4536  009B                     	;# 
  4537  009C                     	;# 
  4538  009D                     	;# 
  4539  009E                     	;# 
  4540  010C                     	;# 
  4541  010D                     	;# 
  4542  010E                     	;# 
  4543  010E                     	;# 
  4544  010F                     	;# 
  4545  0110                     	;# 
  4546  0110                     	;# 
  4547  0111                     	;# 
  4548  0112                     	;# 
  4549  0112                     	;# 
  4550  0113                     	;# 
  4551  0114                     	;# 
  4552  0114                     	;# 
  4553  0115                     	;# 
  4554  0116                     	;# 
  4555  0116                     	;# 
  4556  0117                     	;# 
  4557  0119                     	;# 
  4558  0119                     	;# 
  4559  0119                     	;# 
  4560  011A                     	;# 
  4561  011A                     	;# 
  4562  011A                     	;# 
  4563  011B                     	;# 
  4564  011B                     	;# 
  4565  011B                     	;# 
  4566  011B                     	;# 
  4567  011B                     	;# 
  4568  011C                     	;# 
  4569  011C                     	;# 
  4570  011C                     	;# 
  4571  011D                     	;# 
  4572  011D                     	;# 
  4573  011D                     	;# 
  4574  011E                     	;# 
  4575  011E                     	;# 
  4576  011E                     	;# 
  4577  011F                     	;# 
  4578  011F                     	;# 
  4579  011F                     	;# 
  4580  011F                     	;# 
  4581  011F                     	;# 
  4582  018C                     	;# 
  4583  018D                     	;# 
  4584  018E                     	;# 
  4585  018F                     	;# 
  4586  0190                     	;# 
  4587  0191                     	;# 
  4588  0192                     	;# 
  4589  0196                     	;# 
  4590  0197                     	;# 
  4591  0198                     	;# 
  4592  0199                     	;# 
  4593  019A                     	;# 
  4594  019B                     	;# 
  4595  019C                     	;# 
  4596  020C                     	;# 
  4597  020C                     	;# 
  4598  020D                     	;# 
  4599  020E                     	;# 
  4600  020F                     	;# 
  4601  020F                     	;# 
  4602  0210                     	;# 
  4603  0210                     	;# 
  4604  0211                     	;# 
  4605  0211                     	;# 
  4606  0212                     	;# 
  4607  0212                     	;# 
  4608  0213                     	;# 
  4609  0214                     	;# 
  4610  0215                     	;# 
  4611  0215                     	;# 
  4612  0216                     	;# 
  4613  0216                     	;# 
  4614  0217                     	;# 
  4615  0217                     	;# 
  4616  0218                     	;# 
  4617  0218                     	;# 
  4618  0219                     	;# 
  4619  021A                     	;# 
  4620  021B                     	;# 
  4621  021B                     	;# 
  4622  021C                     	;# 
  4623  021C                     	;# 
  4624  021D                     	;# 
  4625  021D                     	;# 
  4626  021E                     	;# 
  4627  021F                     	;# 
  4628  028C                     	;# 
  4629  028C                     	;# 
  4630  028D                     	;# 
  4631  028D                     	;# 
  4632  028E                     	;# 
  4633  028F                     	;# 
  4634  0290                     	;# 
  4635  0290                     	;# 
  4636  0291                     	;# 
  4637  0292                     	;# 
  4638  0292                     	;# 
  4639  0293                     	;# 
  4640  0293                     	;# 
  4641  0294                     	;# 
  4642  0295                     	;# 
  4643  0296                     	;# 
  4644  0296                     	;# 
  4645  0297                     	;# 
  4646  0298                     	;# 
  4647  0298                     	;# 
  4648  0299                     	;# 
  4649  0299                     	;# 
  4650  029A                     	;# 
  4651  029B                     	;# 
  4652  029C                     	;# 
  4653  029C                     	;# 
  4654  029D                     	;# 
  4655  030C                     	;# 
  4656  030C                     	;# 
  4657  030D                     	;# 
  4658  030E                     	;# 
  4659  030F                     	;# 
  4660  0310                     	;# 
  4661  0310                     	;# 
  4662  0311                     	;# 
  4663  0312                     	;# 
  4664  0313                     	;# 
  4665  0314                     	;# 
  4666  0314                     	;# 
  4667  0315                     	;# 
  4668  0316                     	;# 
  4669  0317                     	;# 
  4670  0318                     	;# 
  4671  0318                     	;# 
  4672  0319                     	;# 
  4673  031A                     	;# 
  4674  031B                     	;# 
  4675  031C                     	;# 
  4676  031C                     	;# 
  4677  031D                     	;# 
  4678  031E                     	;# 
  4679  031F                     	;# 
  4680  038C                     	;# 
  4681  038C                     	;# 
  4682  038D                     	;# 
  4683  038E                     	;# 
  4684  0390                     	;# 
  4685  0390                     	;# 
  4686  0391                     	;# 
  4687  0392                     	;# 
  4688  040C                     	;# 
  4689  040D                     	;# 
  4690  040E                     	;# 
  4691  040F                     	;# 
  4692  0410                     	;# 
  4693  0411                     	;# 
  4694  0416                     	;# 
  4695  0416                     	;# 
  4696  0417                     	;# 
  4697  0418                     	;# 
  4698  0418                     	;# 
  4699  0419                     	;# 
  4700  041A                     	;# 
  4701  041A                     	;# 
  4702  041B                     	;# 
  4703  041C                     	;# 
  4704  041C                     	;# 
  4705  041D                     	;# 
  4706  041E                     	;# 
  4707  041F                     	;# 
  4708  048C                     	;# 
  4709  048C                     	;# 
  4710  048D                     	;# 
  4711  048E                     	;# 
  4712  048F                     	;# 
  4713  048F                     	;# 
  4714  0490                     	;# 
  4715  0491                     	;# 
  4716  0492                     	;# 
  4717  0492                     	;# 
  4718  0493                     	;# 
  4719  0494                     	;# 
  4720  0495                     	;# 
  4721  0495                     	;# 
  4722  0496                     	;# 
  4723  0497                     	;# 
  4724  0498                     	;# 
  4725  0499                     	;# 
  4726  049A                     	;# 
  4727  049B                     	;# 
  4728  049C                     	;# 
  4729  049D                     	;# 
  4730  050C                     	;# 
  4731  050C                     	;# 
  4732  050D                     	;# 
  4733  050E                     	;# 
  4734  050F                     	;# 
  4735  050F                     	;# 
  4736  0510                     	;# 
  4737  0511                     	;# 
  4738  0512                     	;# 
  4739  0512                     	;# 
  4740  0513                     	;# 
  4741  0514                     	;# 
  4742  0515                     	;# 
  4743  0515                     	;# 
  4744  0516                     	;# 
  4745  0517                     	;# 
  4746  0518                     	;# 
  4747  0519                     	;# 
  4748  051A                     	;# 
  4749  051B                     	;# 
  4750  051C                     	;# 
  4751  051D                     	;# 
  4752  058C                     	;# 
  4753  058C                     	;# 
  4754  058D                     	;# 
  4755  058E                     	;# 
  4756  058F                     	;# 
  4757  058F                     	;# 
  4758  0590                     	;# 
  4759  0591                     	;# 
  4760  0592                     	;# 
  4761  0593                     	;# 
  4762  060C                     	;# 
  4763  060D                     	;# 
  4764  060E                     	;# 
  4765  060F                     	;# 
  4766  0610                     	;# 
  4767  0611                     	;# 
  4768  0612                     	;# 
  4769  0613                     	;# 
  4770  0614                     	;# 
  4771  0616                     	;# 
  4772  0617                     	;# 
  4773  0618                     	;# 
  4774  0619                     	;# 
  4775  061A                     	;# 
  4776  061B                     	;# 
  4777  061C                     	;# 
  4778  061D                     	;# 
  4779  061E                     	;# 
  4780  068C                     	;# 
  4781  068D                     	;# 
  4782  068E                     	;# 
  4783  068F                     	;# 
  4784  0690                     	;# 
  4785  0691                     	;# 
  4786  0692                     	;# 
  4787  0693                     	;# 
  4788  0694                     	;# 
  4789  070C                     	;# 
  4790  070D                     	;# 
  4791  070E                     	;# 
  4792  070F                     	;# 
  4793  0710                     	;# 
  4794  0711                     	;# 
  4795  0712                     	;# 
  4796  0713                     	;# 
  4797  0714                     	;# 
  4798  0716                     	;# 
  4799  0717                     	;# 
  4800  0718                     	;# 
  4801  0719                     	;# 
  4802  071A                     	;# 
  4803  071B                     	;# 
  4804  071C                     	;# 
  4805  071D                     	;# 
  4806  071E                     	;# 
  4807  0796                     	;# 
  4808  0797                     	;# 
  4809  0798                     	;# 
  4810  0799                     	;# 
  4811  079A                     	;# 
  4812  079B                     	;# 
  4813  080C                     	;# 
  4814  080D                     	;# 
  4815  080E                     	;# 
  4816  080F                     	;# 
  4817  0810                     	;# 
  4818  0811                     	;# 
  4819  0812                     	;# 
  4820  0813                     	;# 
  4821  0814                     	;# 
  4822  081A                     	;# 
  4823  081B                     	;# 
  4824  081C                     	;# 
  4825  081D                     	;# 
  4826  081E                     	;# 
  4827  081F                     	;# 
  4828  088C                     	;# 
  4829  088D                     	;# 
  4830  088E                     	;# 
  4831  088F                     	;# 
  4832  0890                     	;# 
  4833  0891                     	;# 
  4834  0892                     	;# 
  4835  0893                     	;# 
  4836  0895                     	;# 
  4837  0896                     	;# 
  4838  0897                     	;# 
  4839  0898                     	;# 
  4840  0899                     	;# 
  4841  089A                     	;# 
  4842  089B                     	;# 
  4843  090C                     	;# 
  4844  090E                     	;# 
  4845  090F                     	;# 
  4846  091F                     	;# 
  4847  091F                     	;# 
  4848  098F                     	;# 
  4849  098F                     	;# 
  4850  0990                     	;# 
  4851  0991                     	;# 
  4852  0992                     	;# 
  4853  0993                     	;# 
  4854  0994                     	;# 
  4855  0995                     	;# 
  4856  0996                     	;# 
  4857  0997                     	;# 
  4858  0E0F                     	;# 
  4859  0E10                     	;# 
  4860  0E11                     	;# 
  4861  0E12                     	;# 
  4862  0E13                     	;# 
  4863  0E14                     	;# 
  4864  0E15                     	;# 
  4865  0E16                     	;# 
  4866  0E17                     	;# 
  4867  0E18                     	;# 
  4868  0E19                     	;# 
  4869  0E1A                     	;# 
  4870  0E1B                     	;# 
  4871  0E1C                     	;# 
  4872  0E1D                     	;# 
  4873  0E1E                     	;# 
  4874  0E1F                     	;# 
  4875  0E20                     	;# 
  4876  0E21                     	;# 
  4877  0E22                     	;# 
  4878  0E23                     	;# 
  4879  0E24                     	;# 
  4880  0E25                     	;# 
  4881  0E26                     	;# 
  4882  0E27                     	;# 
  4883  0E28                     	;# 
  4884  0E29                     	;# 
  4885  0E2A                     	;# 
  4886  0E2B                     	;# 
  4887  0E2C                     	;# 
  4888  0E2D                     	;# 
  4889  0E2E                     	;# 
  4890  0E2F                     	;# 
  4891  0E30                     	;# 
  4892  0E31                     	;# 
  4893  0E32                     	;# 
  4894  0E33                     	;# 
  4895  0E34                     	;# 
  4896  0E35                     	;# 
  4897  0E36                     	;# 
  4898  0E37                     	;# 
  4899  0E8F                     	;# 
  4900  0E90                     	;# 
  4901  0E91                     	;# 
  4902  0E92                     	;# 
  4903  0E93                     	;# 
  4904  0E94                     	;# 
  4905  0E95                     	;# 
  4906  0E96                     	;# 
  4907  0E97                     	;# 
  4908  0E9C                     	;# 
  4909  0E9D                     	;# 
  4910  0E9E                     	;# 
  4911  0EA1                     	;# 
  4912  0EA2                     	;# 
  4913  0EA3                     	;# 
  4914  0EA4                     	;# 
  4915  0EA5                     	;# 
  4916  0EA9                     	;# 
  4917  0EAA                     	;# 
  4918  0EAB                     	;# 
  4919  0EAC                     	;# 
  4920  0EB1                     	;# 
  4921  0EB2                     	;# 
  4922  0EB3                     	;# 
  4923  0EB8                     	;# 
  4924  0EB9                     	;# 
  4925  0EBA                     	;# 
  4926  0EBB                     	;# 
  4927  0EBC                     	;# 
  4928  0EBD                     	;# 
  4929  0EBE                     	;# 
  4930  0EC3                     	;# 
  4931  0EC5                     	;# 
  4932  0EC6                     	;# 
  4933  0EC7                     	;# 
  4934  0EC8                     	;# 
  4935  0EC9                     	;# 
  4936  0ECA                     	;# 
  4937  0ECB                     	;# 
  4938  0ECC                     	;# 
  4939  0F10                     	;# 
  4940  0F11                     	;# 
  4941  0F12                     	;# 
  4942  0F13                     	;# 
  4943  0F14                     	;# 
  4944  0F15                     	;# 
  4945  0F16                     	;# 
  4946  0F17                     	;# 
  4947  0F18                     	;# 
  4948  0F19                     	;# 
  4949  0F1A                     	;# 
  4950  0F1B                     	;# 
  4951  0F1C                     	;# 
  4952  0F1D                     	;# 
  4953  0F1E                     	;# 
  4954  0F1F                     	;# 
  4955  0F20                     	;# 
  4956  0F21                     	;# 
  4957  0F22                     	;# 
  4958  0F23                     	;# 
  4959  0F24                     	;# 
  4960  0F25                     	;# 
  4961  0F26                     	;# 
  4962  0F27                     	;# 
  4963  0F28                     	;# 
  4964  0F29                     	;# 
  4965  0F2A                     	;# 
  4966  0F2B                     	;# 
  4967  0F2C                     	;# 
  4968  0F2D                     	;# 
  4969  0F2E                     	;# 
  4970  0F2F                     	;# 
  4971  0F30                     	;# 
  4972  0F31                     	;# 
  4973  0F32                     	;# 
  4974  0F38                     	;# 
  4975  0F39                     	;# 
  4976  0F3A                     	;# 
  4977  0F3B                     	;# 
  4978  0F3C                     	;# 
  4979  0F3D                     	;# 
  4980  0F3E                     	;# 
  4981  0F3F                     	;# 
  4982  0F40                     	;# 
  4983  0F41                     	;# 
  4984  0F43                     	;# 
  4985  0F44                     	;# 
  4986  0F45                     	;# 
  4987  0F46                     	;# 
  4988  0F47                     	;# 
  4989  0F48                     	;# 
  4990  0F49                     	;# 
  4991  0F4A                     	;# 
  4992  0F4B                     	;# 
  4993  0F4C                     	;# 
  4994  0F4E                     	;# 
  4995  0F4F                     	;# 
  4996  0F50                     	;# 
  4997  0F51                     	;# 
  4998  0F52                     	;# 
  4999  0F53                     	;# 
  5000  0F54                     	;# 
  5001  0F55                     	;# 
  5002  0F56                     	;# 
  5003  0F57                     	;# 
  5004  0F59                     	;# 
  5005  0F5A                     	;# 
  5006  0F5B                     	;# 
  5007  0F5C                     	;# 
  5008  0F5D                     	;# 
  5009  0F61                     	;# 
  5010  0F62                     	;# 
  5011  0F64                     	;# 
  5012  0F65                     	;# 
  5013  0F66                     	;# 
  5014  0F67                     	;# 
  5015  0F68                     	;# 
  5016  0F69                     	;# 
  5017  0F6A                     	;# 
  5018  0F6B                     	;# 
  5019  0F6C                     	;# 
  5020  0F6D                     	;# 
  5021  0FE4                     	;# 
  5022  0FE5                     	;# 
  5023  0FE6                     	;# 
  5024  0FE7                     	;# 
  5025  0FE8                     	;# 
  5026  0FE9                     	;# 
  5027  0FEA                     	;# 
  5028  0FEB                     	;# 
  5029  0FED                     	;# 
  5030  0FEE                     	;# 
  5031  0FEF                     	;# 
  5032  0000                     	;# 
  5033  0001                     	;# 
  5034  0002                     	;# 
  5035  0003                     	;# 
  5036  0004                     	;# 
  5037  0005                     	;# 
  5038  0006                     	;# 
  5039  0007                     	;# 
  5040  0008                     	;# 
  5041  0009                     	;# 
  5042  000A                     	;# 
  5043  000B                     	;# 
  5044  000C                     	;# 
  5045  000D                     	;# 
  5046  000E                     	;# 
  5047  000F                     	;# 
  5048  0010                     	;# 
  5049  0011                     	;# 
  5050  0012                     	;# 
  5051  0013                     	;# 
  5052  0014                     	;# 
  5053  0015                     	;# 
  5054  0016                     	;# 
  5055  0017                     	;# 
  5056  0018                     	;# 
  5057  0019                     	;# 
  5058  001A                     	;# 
  5059  001C                     	;# 
  5060  001C                     	;# 
  5061  001D                     	;# 
  5062  001D                     	;# 
  5063  001E                     	;# 
  5064  001F                     	;# 
  5065  008C                     	;# 
  5066  008C                     	;# 
  5067  008D                     	;# 
  5068  008E                     	;# 
  5069  008E                     	;# 
  5070  008F                     	;# 
  5071  0090                     	;# 
  5072  0090                     	;# 
  5073  0091                     	;# 
  5074  0093                     	;# 
  5075  0094                     	;# 
  5076  0095                     	;# 
  5077  0096                     	;# 
  5078  0097                     	;# 
  5079  0098                     	;# 
  5080  0099                     	;# 
  5081  009A                     	;# 
  5082  009B                     	;# 
  5083  009C                     	;# 
  5084  009D                     	;# 
  5085  009E                     	;# 
  5086  010C                     	;# 
  5087  010D                     	;# 
  5088  010E                     	;# 
  5089  010E                     	;# 
  5090  010F                     	;# 
  5091  0110                     	;# 
  5092  0110                     	;# 
  5093  0111                     	;# 
  5094  0112                     	;# 
  5095  0112                     	;# 
  5096  0113                     	;# 
  5097  0114                     	;# 
  5098  0114                     	;# 
  5099  0115                     	;# 
  5100  0116                     	;# 
  5101  0116                     	;# 
  5102  0117                     	;# 
  5103  0119                     	;# 
  5104  0119                     	;# 
  5105  0119                     	;# 
  5106  011A                     	;# 
  5107  011A                     	;# 
  5108  011A                     	;# 
  5109  011B                     	;# 
  5110  011B                     	;# 
  5111  011B                     	;# 
  5112  011B                     	;# 
  5113  011B                     	;# 
  5114  011C                     	;# 
  5115  011C                     	;# 
  5116  011C                     	;# 
  5117  011D                     	;# 
  5118  011D                     	;# 
  5119  011D                     	;# 
  5120  011E                     	;# 
  5121  011E                     	;# 
  5122  011E                     	;# 
  5123  011F                     	;# 
  5124  011F                     	;# 
  5125  011F                     	;# 
  5126  011F                     	;# 
  5127  011F                     	;# 
  5128  018C                     	;# 
  5129  018D                     	;# 
  5130  018E                     	;# 
  5131  018F                     	;# 
  5132  0190                     	;# 
  5133  0191                     	;# 
  5134  0192                     	;# 
  5135  0196                     	;# 
  5136  0197                     	;# 
  5137  0198                     	;# 
  5138  0199                     	;# 
  5139  019A                     	;# 
  5140  019B                     	;# 
  5141  019C                     	;# 
  5142  020C                     	;# 
  5143  020C                     	;# 
  5144  020D                     	;# 
  5145  020E                     	;# 
  5146  020F                     	;# 
  5147  020F                     	;# 
  5148  0210                     	;# 
  5149  0210                     	;# 
  5150  0211                     	;# 
  5151  0211                     	;# 
  5152  0212                     	;# 
  5153  0212                     	;# 
  5154  0213                     	;# 
  5155  0214                     	;# 
  5156  0215                     	;# 
  5157  0215                     	;# 
  5158  0216                     	;# 
  5159  0216                     	;# 
  5160  0217                     	;# 
  5161  0217                     	;# 
  5162  0218                     	;# 
  5163  0218                     	;# 
  5164  0219                     	;# 
  5165  021A                     	;# 
  5166  021B                     	;# 
  5167  021B                     	;# 
  5168  021C                     	;# 
  5169  021C                     	;# 
  5170  021D                     	;# 
  5171  021D                     	;# 
  5172  021E                     	;# 
  5173  021F                     	;# 
  5174  028C                     	;# 
  5175  028C                     	;# 
  5176  028D                     	;# 
  5177  028D                     	;# 
  5178  028E                     	;# 
  5179  028F                     	;# 
  5180  0290                     	;# 
  5181  0290                     	;# 
  5182  0291                     	;# 
  5183  0292                     	;# 
  5184  0292                     	;# 
  5185  0293                     	;# 
  5186  0293                     	;# 
  5187  0294                     	;# 
  5188  0295                     	;# 
  5189  0296                     	;# 
  5190  0296                     	;# 
  5191  0297                     	;# 
  5192  0298                     	;# 
  5193  0298                     	;# 
  5194  0299                     	;# 
  5195  0299                     	;# 
  5196  029A                     	;# 
  5197  029B                     	;# 
  5198  029C                     	;# 
  5199  029C                     	;# 
  5200  029D                     	;# 
  5201  030C                     	;# 
  5202  030C                     	;# 
  5203  030D                     	;# 
  5204  030E                     	;# 
  5205  030F                     	;# 
  5206  0310                     	;# 
  5207  0310                     	;# 
  5208  0311                     	;# 
  5209  0312                     	;# 
  5210  0313                     	;# 
  5211  0314                     	;# 
  5212  0314                     	;# 
  5213  0315                     	;# 
  5214  0316                     	;# 
  5215  0317                     	;# 
  5216  0318                     	;# 
  5217  0318                     	;# 
  5218  0319                     	;# 
  5219  031A                     	;# 
  5220  031B                     	;# 
  5221  031C                     	;# 
  5222  031C                     	;# 
  5223  031D                     	;# 
  5224  031E                     	;# 
  5225  031F                     	;# 
  5226  038C                     	;# 
  5227  038C                     	;# 
  5228  038D                     	;# 
  5229  038E                     	;# 
  5230  0390                     	;# 
  5231  0390                     	;# 
  5232  0391                     	;# 
  5233  0392                     	;# 
  5234  040C                     	;# 
  5235  040D                     	;# 
  5236  040E                     	;# 
  5237  040F                     	;# 
  5238  0410                     	;# 
  5239  0411                     	;# 
  5240  0416                     	;# 
  5241  0416                     	;# 
  5242  0417                     	;# 
  5243  0418                     	;# 
  5244  0418                     	;# 
  5245  0419                     	;# 
  5246  041A                     	;# 
  5247  041A                     	;# 
  5248  041B                     	;# 
  5249  041C                     	;# 
  5250  041C                     	;# 
  5251  041D                     	;# 
  5252  041E                     	;# 
  5253  041F                     	;# 
  5254  048C                     	;# 
  5255  048C                     	;# 
  5256  048D                     	;# 
  5257  048E                     	;# 
  5258  048F                     	;# 
  5259  048F                     	;# 
  5260  0490                     	;# 
  5261  0491                     	;# 
  5262  0492                     	;# 
  5263  0492                     	;# 
  5264  0493                     	;# 
  5265  0494                     	;# 
  5266  0495                     	;# 
  5267  0495                     	;# 
  5268  0496                     	;# 
  5269  0497                     	;# 
  5270  0498                     	;# 
  5271  0499                     	;# 
  5272  049A                     	;# 
  5273  049B                     	;# 
  5274  049C                     	;# 
  5275  049D                     	;# 
  5276  050C                     	;# 
  5277  050C                     	;# 
  5278  050D                     	;# 
  5279  050E                     	;# 
  5280  050F                     	;# 
  5281  050F                     	;# 
  5282  0510                     	;# 
  5283  0511                     	;# 
  5284  0512                     	;# 
  5285  0512                     	;# 
  5286  0513                     	;# 
  5287  0514                     	;# 
  5288  0515                     	;# 
  5289  0515                     	;# 
  5290  0516                     	;# 
  5291  0517                     	;# 
  5292  0518                     	;# 
  5293  0519                     	;# 
  5294  051A                     	;# 
  5295  051B                     	;# 
  5296  051C                     	;# 
  5297  051D                     	;# 
  5298  058C                     	;# 
  5299  058C                     	;# 
  5300  058D                     	;# 
  5301  058E                     	;# 
  5302  058F                     	;# 
  5303  058F                     	;# 
  5304  0590                     	;# 
  5305  0591                     	;# 
  5306  0592                     	;# 
  5307  0593                     	;# 
  5308  060C                     	;# 
  5309  060D                     	;# 
  5310  060E                     	;# 
  5311  060F                     	;# 
  5312  0610                     	;# 
  5313  0611                     	;# 
  5314  0612                     	;# 
  5315  0613                     	;# 
  5316  0614                     	;# 
  5317  0616                     	;# 
  5318  0617                     	;# 
  5319  0618                     	;# 
  5320  0619                     	;# 
  5321  061A                     	;# 
  5322  061B                     	;# 
  5323  061C                     	;# 
  5324  061D                     	;# 
  5325  061E                     	;# 
  5326  068C                     	;# 
  5327  068D                     	;# 
  5328  068E                     	;# 
  5329  068F                     	;# 
  5330  0690                     	;# 
  5331  0691                     	;# 
  5332  0692                     	;# 
  5333  0693                     	;# 
  5334  0694                     	;# 
  5335  070C                     	;# 
  5336  070D                     	;# 
  5337  070E                     	;# 
  5338  070F                     	;# 
  5339  0710                     	;# 
  5340  0711                     	;# 
  5341  0712                     	;# 
  5342  0713                     	;# 
  5343  0714                     	;# 
  5344  0716                     	;# 
  5345  0717                     	;# 
  5346  0718                     	;# 
  5347  0719                     	;# 
  5348  071A                     	;# 
  5349  071B                     	;# 
  5350  071C                     	;# 
  5351  071D                     	;# 
  5352  071E                     	;# 
  5353  0796                     	;# 
  5354  0797                     	;# 
  5355  0798                     	;# 
  5356  0799                     	;# 
  5357  079A                     	;# 
  5358  079B                     	;# 
  5359  080C                     	;# 
  5360  080D                     	;# 
  5361  080E                     	;# 
  5362  080F                     	;# 
  5363  0810                     	;# 
  5364  0811                     	;# 
  5365  0812                     	;# 
  5366  0813                     	;# 
  5367  0814                     	;# 
  5368  081A                     	;# 
  5369  081B                     	;# 
  5370  081C                     	;# 
  5371  081D                     	;# 
  5372  081E                     	;# 
  5373  081F                     	;# 
  5374  088C                     	;# 
  5375  088D                     	;# 
  5376  088E                     	;# 
  5377  088F                     	;# 
  5378  0890                     	;# 
  5379  0891                     	;# 
  5380  0892                     	;# 
  5381  0893                     	;# 
  5382  0895                     	;# 
  5383  0896                     	;# 
  5384  0897                     	;# 
  5385  0898                     	;# 
  5386  0899                     	;# 
  5387  089A                     	;# 
  5388  089B                     	;# 
  5389  090C                     	;# 
  5390  090E                     	;# 
  5391  090F                     	;# 
  5392  091F                     	;# 
  5393  091F                     	;# 
  5394  098F                     	;# 
  5395  098F                     	;# 
  5396  0990                     	;# 
  5397  0991                     	;# 
  5398  0992                     	;# 
  5399  0993                     	;# 
  5400  0994                     	;# 
  5401  0995                     	;# 
  5402  0996                     	;# 
  5403  0997                     	;# 
  5404  0E0F                     	;# 
  5405  0E10                     	;# 
  5406  0E11                     	;# 
  5407  0E12                     	;# 
  5408  0E13                     	;# 
  5409  0E14                     	;# 
  5410  0E15                     	;# 
  5411  0E16                     	;# 
  5412  0E17                     	;# 
  5413  0E18                     	;# 
  5414  0E19                     	;# 
  5415  0E1A                     	;# 
  5416  0E1B                     	;# 
  5417  0E1C                     	;# 
  5418  0E1D                     	;# 
  5419  0E1E                     	;# 
  5420  0E1F                     	;# 
  5421  0E20                     	;# 
  5422  0E21                     	;# 
  5423  0E22                     	;# 
  5424  0E23                     	;# 
  5425  0E24                     	;# 
  5426  0E25                     	;# 
  5427  0E26                     	;# 
  5428  0E27                     	;# 
  5429  0E28                     	;# 
  5430  0E29                     	;# 
  5431  0E2A                     	;# 
  5432  0E2B                     	;# 
  5433  0E2C                     	;# 
  5434  0E2D                     	;# 
  5435  0E2E                     	;# 
  5436  0E2F                     	;# 
  5437  0E30                     	;# 
  5438  0E31                     	;# 
  5439  0E32                     	;# 
  5440  0E33                     	;# 
  5441  0E34                     	;# 
  5442  0E35                     	;# 
  5443  0E36                     	;# 
  5444  0E37                     	;# 
  5445  0E8F                     	;# 
  5446  0E90                     	;# 
  5447  0E91                     	;# 
  5448  0E92                     	;# 
  5449  0E93                     	;# 
  5450  0E94                     	;# 
  5451  0E95                     	;# 
  5452  0E96                     	;# 
  5453  0E97                     	;# 
  5454  0E9C                     	;# 
  5455  0E9D                     	;# 
  5456  0E9E                     	;# 
  5457  0EA1                     	;# 
  5458  0EA2                     	;# 
  5459  0EA3                     	;# 
  5460  0EA4                     	;# 
  5461  0EA5                     	;# 
  5462  0EA9                     	;# 
  5463  0EAA                     	;# 
  5464  0EAB                     	;# 
  5465  0EAC                     	;# 
  5466  0EB1                     	;# 
  5467  0EB2                     	;# 
  5468  0EB3                     	;# 
  5469  0EB8                     	;# 
  5470  0EB9                     	;# 
  5471  0EBA                     	;# 
  5472  0EBB                     	;# 
  5473  0EBC                     	;# 
  5474  0EBD                     	;# 
  5475  0EBE                     	;# 
  5476  0EC3                     	;# 
  5477  0EC5                     	;# 
  5478  0EC6                     	;# 
  5479  0EC7                     	;# 
  5480  0EC8                     	;# 
  5481  0EC9                     	;# 
  5482  0ECA                     	;# 
  5483  0ECB                     	;# 
  5484  0ECC                     	;# 
  5485  0F10                     	;# 
  5486  0F11                     	;# 
  5487  0F12                     	;# 
  5488  0F13                     	;# 
  5489  0F14                     	;# 
  5490  0F15                     	;# 
  5491  0F16                     	;# 
  5492  0F17                     	;# 
  5493  0F18                     	;# 
  5494  0F19                     	;# 
  5495  0F1A                     	;# 
  5496  0F1B                     	;# 
  5497  0F1C                     	;# 
  5498  0F1D                     	;# 
  5499  0F1E                     	;# 
  5500  0F1F                     	;# 
  5501  0F20                     	;# 
  5502  0F21                     	;# 
  5503  0F22                     	;# 
  5504  0F23                     	;# 
  5505  0F24                     	;# 
  5506  0F25                     	;# 
  5507  0F26                     	;# 
  5508  0F27                     	;# 
  5509  0F28                     	;# 
  5510  0F29                     	;# 
  5511  0F2A                     	;# 
  5512  0F2B                     	;# 
  5513  0F2C                     	;# 
  5514  0F2D                     	;# 
  5515  0F2E                     	;# 
  5516  0F2F                     	;# 
  5517  0F30                     	;# 
  5518  0F31                     	;# 
  5519  0F32                     	;# 
  5520  0F38                     	;# 
  5521  0F39                     	;# 
  5522  0F3A                     	;# 
  5523  0F3B                     	;# 
  5524  0F3C                     	;# 
  5525  0F3D                     	;# 
  5526  0F3E                     	;# 
  5527  0F3F                     	;# 
  5528  0F40                     	;# 
  5529  0F41                     	;# 
  5530  0F43                     	;# 
  5531  0F44                     	;# 
  5532  0F45                     	;# 
  5533  0F46                     	;# 
  5534  0F47                     	;# 
  5535  0F48                     	;# 
  5536  0F49                     	;# 
  5537  0F4A                     	;# 
  5538  0F4B                     	;# 
  5539  0F4C                     	;# 
  5540  0F4E                     	;# 
  5541  0F4F                     	;# 
  5542  0F50                     	;# 
  5543  0F51                     	;# 
  5544  0F52                     	;# 
  5545  0F53                     	;# 
  5546  0F54                     	;# 
  5547  0F55                     	;# 
  5548  0F56                     	;# 
  5549  0F57                     	;# 
  5550  0F59                     	;# 
  5551  0F5A                     	;# 
  5552  0F5B                     	;# 
  5553  0F5C                     	;# 
  5554  0F5D                     	;# 
  5555  0F61                     	;# 
  5556  0F62                     	;# 
  5557  0F64                     	;# 
  5558  0F65                     	;# 
  5559  0F66                     	;# 
  5560  0F67                     	;# 
  5561  0F68                     	;# 
  5562  0F69                     	;# 
  5563  0F6A                     	;# 
  5564  0F6B                     	;# 
  5565  0F6C                     	;# 
  5566  0F6D                     	;# 
  5567  0FE4                     	;# 
  5568  0FE5                     	;# 
  5569  0FE6                     	;# 
  5570  0FE7                     	;# 
  5571  0FE8                     	;# 
  5572  0FE9                     	;# 
  5573  0FEA                     	;# 
  5574  0FEB                     	;# 
  5575  0FED                     	;# 
  5576  0FEE                     	;# 
  5577  0FEF                     	;# 
  5578  0000                     	;# 
  5579  0001                     	;# 
  5580  0002                     	;# 
  5581  0003                     	;# 
  5582  0004                     	;# 
  5583  0005                     	;# 
  5584  0006                     	;# 
  5585  0007                     	;# 
  5586  0008                     	;# 
  5587  0009                     	;# 
  5588  000A                     	;# 
  5589  000B                     	;# 
  5590  000C                     	;# 
  5591  000D                     	;# 
  5592  000E                     	;# 
  5593  000F                     	;# 
  5594  0010                     	;# 
  5595  0011                     	;# 
  5596  0012                     	;# 
  5597  0013                     	;# 
  5598  0014                     	;# 
  5599  0015                     	;# 
  5600  0016                     	;# 
  5601  0017                     	;# 
  5602  0018                     	;# 
  5603  0019                     	;# 
  5604  001A                     	;# 
  5605  001C                     	;# 
  5606  001C                     	;# 
  5607  001D                     	;# 
  5608  001D                     	;# 
  5609  001E                     	;# 
  5610  001F                     	;# 
  5611  008C                     	;# 
  5612  008C                     	;# 
  5613  008D                     	;# 
  5614  008E                     	;# 
  5615  008E                     	;# 
  5616  008F                     	;# 
  5617  0090                     	;# 
  5618  0090                     	;# 
  5619  0091                     	;# 
  5620  0093                     	;# 
  5621  0094                     	;# 
  5622  0095                     	;# 
  5623  0096                     	;# 
  5624  0097                     	;# 
  5625  0098                     	;# 
  5626  0099                     	;# 
  5627  009A                     	;# 
  5628  009B                     	;# 
  5629  009C                     	;# 
  5630  009D                     	;# 
  5631  009E                     	;# 
  5632  010C                     	;# 
  5633  010D                     	;# 
  5634  010E                     	;# 
  5635  010E                     	;# 
  5636  010F                     	;# 
  5637  0110                     	;# 
  5638  0110                     	;# 
  5639  0111                     	;# 
  5640  0112                     	;# 
  5641  0112                     	;# 
  5642  0113                     	;# 
  5643  0114                     	;# 
  5644  0114                     	;# 
  5645  0115                     	;# 
  5646  0116                     	;# 
  5647  0116                     	;# 
  5648  0117                     	;# 
  5649  0119                     	;# 
  5650  0119                     	;# 
  5651  0119                     	;# 
  5652  011A                     	;# 
  5653  011A                     	;# 
  5654  011A                     	;# 
  5655  011B                     	;# 
  5656  011B                     	;# 
  5657  011B                     	;# 
  5658  011B                     	;# 
  5659  011B                     	;# 
  5660  011C                     	;# 
  5661  011C                     	;# 
  5662  011C                     	;# 
  5663  011D                     	;# 
  5664  011D                     	;# 
  5665  011D                     	;# 
  5666  011E                     	;# 
  5667  011E                     	;# 
  5668  011E                     	;# 
  5669  011F                     	;# 
  5670  011F                     	;# 
  5671  011F                     	;# 
  5672  011F                     	;# 
  5673  011F                     	;# 
  5674  018C                     	;# 
  5675  018D                     	;# 
  5676  018E                     	;# 
  5677  018F                     	;# 
  5678  0190                     	;# 
  5679  0191                     	;# 
  5680  0192                     	;# 
  5681  0196                     	;# 
  5682  0197                     	;# 
  5683  0198                     	;# 
  5684  0199                     	;# 
  5685  019A                     	;# 
  5686  019B                     	;# 
  5687  019C                     	;# 
  5688  020C                     	;# 
  5689  020C                     	;# 
  5690  020D                     	;# 
  5691  020E                     	;# 
  5692  020F                     	;# 
  5693  020F                     	;# 
  5694  0210                     	;# 
  5695  0210                     	;# 
  5696  0211                     	;# 
  5697  0211                     	;# 
  5698  0212                     	;# 
  5699  0212                     	;# 
  5700  0213                     	;# 
  5701  0214                     	;# 
  5702  0215                     	;# 
  5703  0215                     	;# 
  5704  0216                     	;# 
  5705  0216                     	;# 
  5706  0217                     	;# 
  5707  0217                     	;# 
  5708  0218                     	;# 
  5709  0218                     	;# 
  5710  0219                     	;# 
  5711  021A                     	;# 
  5712  021B                     	;# 
  5713  021B                     	;# 
  5714  021C                     	;# 
  5715  021C                     	;# 
  5716  021D                     	;# 
  5717  021D                     	;# 
  5718  021E                     	;# 
  5719  021F                     	;# 
  5720  028C                     	;# 
  5721  028C                     	;# 
  5722  028D                     	;# 
  5723  028D                     	;# 
  5724  028E                     	;# 
  5725  028F                     	;# 
  5726  0290                     	;# 
  5727  0290                     	;# 
  5728  0291                     	;# 
  5729  0292                     	;# 
  5730  0292                     	;# 
  5731  0293                     	;# 
  5732  0293                     	;# 
  5733  0294                     	;# 
  5734  0295                     	;# 
  5735  0296                     	;# 
  5736  0296                     	;# 
  5737  0297                     	;# 
  5738  0298                     	;# 
  5739  0298                     	;# 
  5740  0299                     	;# 
  5741  0299                     	;# 
  5742  029A                     	;# 
  5743  029B                     	;# 
  5744  029C                     	;# 
  5745  029C                     	;# 
  5746  029D                     	;# 
  5747  030C                     	;# 
  5748  030C                     	;# 
  5749  030D                     	;# 
  5750  030E                     	;# 
  5751  030F                     	;# 
  5752  0310                     	;# 
  5753  0310                     	;# 
  5754  0311                     	;# 
  5755  0312                     	;# 
  5756  0313                     	;# 
  5757  0314                     	;# 
  5758  0314                     	;# 
  5759  0315                     	;# 
  5760  0316                     	;# 
  5761  0317                     	;# 
  5762  0318                     	;# 
  5763  0318                     	;# 
  5764  0319                     	;# 
  5765  031A                     	;# 
  5766  031B                     	;# 
  5767  031C                     	;# 
  5768  031C                     	;# 
  5769  031D                     	;# 
  5770  031E                     	;# 
  5771  031F                     	;# 
  5772  038C                     	;# 
  5773  038C                     	;# 
  5774  038D                     	;# 
  5775  038E                     	;# 
  5776  0390                     	;# 
  5777  0390                     	;# 
  5778  0391                     	;# 
  5779  0392                     	;# 
  5780  040C                     	;# 
  5781  040D                     	;# 
  5782  040E                     	;# 
  5783  040F                     	;# 
  5784  0410                     	;# 
  5785  0411                     	;# 
  5786  0416                     	;# 
  5787  0416                     	;# 
  5788  0417                     	;# 
  5789  0418                     	;# 
  5790  0418                     	;# 
  5791  0419                     	;# 
  5792  041A                     	;# 
  5793  041A                     	;# 
  5794  041B                     	;# 
  5795  041C                     	;# 
  5796  041C                     	;# 
  5797  041D                     	;# 
  5798  041E                     	;# 
  5799  041F                     	;# 
  5800  048C                     	;# 
  5801  048C                     	;# 
  5802  048D                     	;# 
  5803  048E                     	;# 
  5804  048F                     	;# 
  5805  048F                     	;# 
  5806  0490                     	;# 
  5807  0491                     	;# 
  5808  0492                     	;# 
  5809  0492                     	;# 
  5810  0493                     	;# 
  5811  0494                     	;# 
  5812  0495                     	;# 
  5813  0495                     	;# 
  5814  0496                     	;# 
  5815  0497                     	;# 
  5816  0498                     	;# 
  5817  0499                     	;# 
  5818  049A                     	;# 
  5819  049B                     	;# 
  5820  049C                     	;# 
  5821  049D                     	;# 
  5822  050C                     	;# 
  5823  050C                     	;# 
  5824  050D                     	;# 
  5825  050E                     	;# 
  5826  050F                     	;# 
  5827  050F                     	;# 
  5828  0510                     	;# 
  5829  0511                     	;# 
  5830  0512                     	;# 
  5831  0512                     	;# 
  5832  0513                     	;# 
  5833  0514                     	;# 
  5834  0515                     	;# 
  5835  0515                     	;# 
  5836  0516                     	;# 
  5837  0517                     	;# 
  5838  0518                     	;# 
  5839  0519                     	;# 
  5840  051A                     	;# 
  5841  051B                     	;# 
  5842  051C                     	;# 
  5843  051D                     	;# 
  5844  058C                     	;# 
  5845  058C                     	;# 
  5846  058D                     	;# 
  5847  058E                     	;# 
  5848  058F                     	;# 
  5849  058F                     	;# 
  5850  0590                     	;# 
  5851  0591                     	;# 
  5852  0592                     	;# 
  5853  0593                     	;# 
  5854  060C                     	;# 
  5855  060D                     	;# 
  5856  060E                     	;# 
  5857  060F                     	;# 
  5858  0610                     	;# 
  5859  0611                     	;# 
  5860  0612                     	;# 
  5861  0613                     	;# 
  5862  0614                     	;# 
  5863  0616                     	;# 
  5864  0617                     	;# 
  5865  0618                     	;# 
  5866  0619                     	;# 
  5867  061A                     	;# 
  5868  061B                     	;# 
  5869  061C                     	;# 
  5870  061D                     	;# 
  5871  061E                     	;# 
  5872  068C                     	;# 
  5873  068D                     	;# 
  5874  068E                     	;# 
  5875  068F                     	;# 
  5876  0690                     	;# 
  5877  0691                     	;# 
  5878  0692                     	;# 
  5879  0693                     	;# 
  5880  0694                     	;# 
  5881  070C                     	;# 
  5882  070D                     	;# 
  5883  070E                     	;# 
  5884  070F                     	;# 
  5885  0710                     	;# 
  5886  0711                     	;# 
  5887  0712                     	;# 
  5888  0713                     	;# 
  5889  0714                     	;# 
  5890  0716                     	;# 
  5891  0717                     	;# 
  5892  0718                     	;# 
  5893  0719                     	;# 
  5894  071A                     	;# 
  5895  071B                     	;# 
  5896  071C                     	;# 
  5897  071D                     	;# 
  5898  071E                     	;# 
  5899  0796                     	;# 
  5900  0797                     	;# 
  5901  0798                     	;# 
  5902  0799                     	;# 
  5903  079A                     	;# 
  5904  079B                     	;# 
  5905  080C                     	;# 
  5906  080D                     	;# 
  5907  080E                     	;# 
  5908  080F                     	;# 
  5909  0810                     	;# 
  5910  0811                     	;# 
  5911  0812                     	;# 
  5912  0813                     	;# 
  5913  0814                     	;# 
  5914  081A                     	;# 
  5915  081B                     	;# 
  5916  081C                     	;# 
  5917  081D                     	;# 
  5918  081E                     	;# 
  5919  081F                     	;# 
  5920  088C                     	;# 
  5921  088D                     	;# 
  5922  088E                     	;# 
  5923  088F                     	;# 
  5924  0890                     	;# 
  5925  0891                     	;# 
  5926  0892                     	;# 
  5927  0893                     	;# 
  5928  0895                     	;# 
  5929  0896                     	;# 
  5930  0897                     	;# 
  5931  0898                     	;# 
  5932  0899                     	;# 
  5933  089A                     	;# 
  5934  089B                     	;# 
  5935  090C                     	;# 
  5936  090E                     	;# 
  5937  090F                     	;# 
  5938  091F                     	;# 
  5939  091F                     	;# 
  5940  098F                     	;# 
  5941  098F                     	;# 
  5942  0990                     	;# 
  5943  0991                     	;# 
  5944  0992                     	;# 
  5945  0993                     	;# 
  5946  0994                     	;# 
  5947  0995                     	;# 
  5948  0996                     	;# 
  5949  0997                     	;# 
  5950  0E0F                     	;# 
  5951  0E10                     	;# 
  5952  0E11                     	;# 
  5953  0E12                     	;# 
  5954  0E13                     	;# 
  5955  0E14                     	;# 
  5956  0E15                     	;# 
  5957  0E16                     	;# 
  5958  0E17                     	;# 
  5959  0E18                     	;# 
  5960  0E19                     	;# 
  5961  0E1A                     	;# 
  5962  0E1B                     	;# 
  5963  0E1C                     	;# 
  5964  0E1D                     	;# 
  5965  0E1E                     	;# 
  5966  0E1F                     	;# 
  5967  0E20                     	;# 
  5968  0E21                     	;# 
  5969  0E22                     	;# 
  5970  0E23                     	;# 
  5971  0E24                     	;# 
  5972  0E25                     	;# 
  5973  0E26                     	;# 
  5974  0E27                     	;# 
  5975  0E28                     	;# 
  5976  0E29                     	;# 
  5977  0E2A                     	;# 
  5978  0E2B                     	;# 
  5979  0E2C                     	;# 
  5980  0E2D                     	;# 
  5981  0E2E                     	;# 
  5982  0E2F                     	;# 
  5983  0E30                     	;# 
  5984  0E31                     	;# 
  5985  0E32                     	;# 
  5986  0E33                     	;# 
  5987  0E34                     	;# 
  5988  0E35                     	;# 
  5989  0E36                     	;# 
  5990  0E37                     	;# 
  5991  0E8F                     	;# 
  5992  0E90                     	;# 
  5993  0E91                     	;# 
  5994  0E92                     	;# 
  5995  0E93                     	;# 
  5996  0E94                     	;# 
  5997  0E95                     	;# 
  5998  0E96                     	;# 
  5999  0E97                     	;# 
  6000  0E9C                     	;# 
  6001  0E9D                     	;# 
  6002  0E9E                     	;# 
  6003  0EA1                     	;# 
  6004  0EA2                     	;# 
  6005  0EA3                     	;# 
  6006  0EA4                     	;# 
  6007  0EA5                     	;# 
  6008  0EA9                     	;# 
  6009  0EAA                     	;# 
  6010  0EAB                     	;# 
  6011  0EAC                     	;# 
  6012  0EB1                     	;# 
  6013  0EB2                     	;# 
  6014  0EB3                     	;# 
  6015  0EB8                     	;# 
  6016  0EB9                     	;# 
  6017  0EBA                     	;# 
  6018  0EBB                     	;# 
  6019  0EBC                     	;# 
  6020  0EBD                     	;# 
  6021  0EBE                     	;# 
  6022  0EC3                     	;# 
  6023  0EC5                     	;# 
  6024  0EC6                     	;# 
  6025  0EC7                     	;# 
  6026  0EC8                     	;# 
  6027  0EC9                     	;# 
  6028  0ECA                     	;# 
  6029  0ECB                     	;# 
  6030  0ECC                     	;# 
  6031  0F10                     	;# 
  6032  0F11                     	;# 
  6033  0F12                     	;# 
  6034  0F13                     	;# 
  6035  0F14                     	;# 
  6036  0F15                     	;# 
  6037  0F16                     	;# 
  6038  0F17                     	;# 
  6039  0F18                     	;# 
  6040  0F19                     	;# 
  6041  0F1A                     	;# 
  6042  0F1B                     	;# 
  6043  0F1C                     	;# 
  6044  0F1D                     	;# 
  6045  0F1E                     	;# 
  6046  0F1F                     	;# 
  6047  0F20                     	;# 
  6048  0F21                     	;# 
  6049  0F22                     	;# 
  6050  0F23                     	;# 
  6051  0F24                     	;# 
  6052  0F25                     	;# 
  6053  0F26                     	;# 
  6054  0F27                     	;# 
  6055  0F28                     	;# 
  6056  0F29                     	;# 
  6057  0F2A                     	;# 
  6058  0F2B                     	;# 
  6059  0F2C                     	;# 
  6060  0F2D                     	;# 
  6061  0F2E                     	;# 
  6062  0F2F                     	;# 
  6063  0F30                     	;# 
  6064  0F31                     	;# 
  6065  0F32                     	;# 
  6066  0F38                     	;# 
  6067  0F39                     	;# 
  6068  0F3A                     	;# 
  6069  0F3B                     	;# 
  6070  0F3C                     	;# 
  6071  0F3D                     	;# 
  6072  0F3E                     	;# 
  6073  0F3F                     	;# 
  6074  0F40                     	;# 
  6075  0F41                     	;# 
  6076  0F43                     	;# 
  6077  0F44                     	;# 
  6078  0F45                     	;# 
  6079  0F46                     	;# 
  6080  0F47                     	;# 
  6081  0F48                     	;# 
  6082  0F49                     	;# 
  6083  0F4A                     	;# 
  6084  0F4B                     	;# 
  6085  0F4C                     	;# 
  6086  0F4E                     	;# 
  6087  0F4F                     	;# 
  6088  0F50                     	;# 
  6089  0F51                     	;# 
  6090  0F52                     	;# 
  6091  0F53                     	;# 
  6092  0F54                     	;# 
  6093  0F55                     	;# 
  6094  0F56                     	;# 
  6095  0F57                     	;# 
  6096  0F59                     	;# 
  6097  0F5A                     	;# 
  6098  0F5B                     	;# 
  6099  0F5C                     	;# 
  6100  0F5D                     	;# 
  6101  0F61                     	;# 
  6102  0F62                     	;# 
  6103  0F64                     	;# 
  6104  0F65                     	;# 
  6105  0F66                     	;# 
  6106  0F67                     	;# 
  6107  0F68                     	;# 
  6108  0F69                     	;# 
  6109  0F6A                     	;# 
  6110  0F6B                     	;# 
  6111  0F6C                     	;# 
  6112  0F6D                     	;# 
  6113  0FE4                     	;# 
  6114  0FE5                     	;# 
  6115  0FE6                     	;# 
  6116  0FE7                     	;# 
  6117  0FE8                     	;# 
  6118  0FE9                     	;# 
  6119  0FEA                     	;# 
  6120  0FEB                     	;# 
  6121  0FED                     	;# 
  6122  0FEE                     	;# 
  6123  0FEF                     	;# 
  6124  0000                     	;# 
  6125  0001                     	;# 
  6126  0002                     	;# 
  6127  0003                     	;# 
  6128  0004                     	;# 
  6129  0005                     	;# 
  6130  0006                     	;# 
  6131  0007                     	;# 
  6132  0008                     	;# 
  6133  0009                     	;# 
  6134  000A                     	;# 
  6135  000B                     	;# 
  6136  000C                     	;# 
  6137  000D                     	;# 
  6138  000E                     	;# 
  6139  000F                     	;# 
  6140  0010                     	;# 
  6141  0011                     	;# 
  6142  0012                     	;# 
  6143  0013                     	;# 
  6144  0014                     	;# 
  6145  0015                     	;# 
  6146  0016                     	;# 
  6147  0017                     	;# 
  6148  0018                     	;# 
  6149  0019                     	;# 
  6150  001A                     	;# 
  6151  001C                     	;# 
  6152  001C                     	;# 
  6153  001D                     	;# 
  6154  001D                     	;# 
  6155  001E                     	;# 
  6156  001F                     	;# 
  6157  008C                     	;# 
  6158  008C                     	;# 
  6159  008D                     	;# 
  6160  008E                     	;# 
  6161  008E                     	;# 
  6162  008F                     	;# 
  6163  0090                     	;# 
  6164  0090                     	;# 
  6165  0091                     	;# 
  6166  0093                     	;# 
  6167  0094                     	;# 
  6168  0095                     	;# 
  6169  0096                     	;# 
  6170  0097                     	;# 
  6171  0098                     	;# 
  6172  0099                     	;# 
  6173  009A                     	;# 
  6174  009B                     	;# 
  6175  009C                     	;# 
  6176  009D                     	;# 
  6177  009E                     	;# 
  6178  010C                     	;# 
  6179  010D                     	;# 
  6180  010E                     	;# 
  6181  010E                     	;# 
  6182  010F                     	;# 
  6183  0110                     	;# 
  6184  0110                     	;# 
  6185  0111                     	;# 
  6186  0112                     	;# 
  6187  0112                     	;# 
  6188  0113                     	;# 
  6189  0114                     	;# 
  6190  0114                     	;# 
  6191  0115                     	;# 
  6192  0116                     	;# 
  6193  0116                     	;# 
  6194  0117                     	;# 
  6195  0119                     	;# 
  6196  0119                     	;# 
  6197  0119                     	;# 
  6198  011A                     	;# 
  6199  011A                     	;# 
  6200  011A                     	;# 
  6201  011B                     	;# 
  6202  011B                     	;# 
  6203  011B                     	;# 
  6204  011B                     	;# 
  6205  011B                     	;# 
  6206  011C                     	;# 
  6207  011C                     	;# 
  6208  011C                     	;# 
  6209  011D                     	;# 
  6210  011D                     	;# 
  6211  011D                     	;# 
  6212  011E                     	;# 
  6213  011E                     	;# 
  6214  011E                     	;# 
  6215  011F                     	;# 
  6216  011F                     	;# 
  6217  011F                     	;# 
  6218  011F                     	;# 
  6219  011F                     	;# 
  6220  018C                     	;# 
  6221  018D                     	;# 
  6222  018E                     	;# 
  6223  018F                     	;# 
  6224  0190                     	;# 
  6225  0191                     	;# 
  6226  0192                     	;# 
  6227  0196                     	;# 
  6228  0197                     	;# 
  6229  0198                     	;# 
  6230  0199                     	;# 
  6231  019A                     	;# 
  6232  019B                     	;# 
  6233  019C                     	;# 
  6234  020C                     	;# 
  6235  020C                     	;# 
  6236  020D                     	;# 
  6237  020E                     	;# 
  6238  020F                     	;# 
  6239  020F                     	;# 
  6240  0210                     	;# 
  6241  0210                     	;# 
  6242  0211                     	;# 
  6243  0211                     	;# 
  6244  0212                     	;# 
  6245  0212                     	;# 
  6246  0213                     	;# 
  6247  0214                     	;# 
  6248  0215                     	;# 
  6249  0215                     	;# 
  6250  0216                     	;# 
  6251  0216                     	;# 
  6252  0217                     	;# 
  6253  0217                     	;# 
  6254  0218                     	;# 
  6255  0218                     	;# 
  6256  0219                     	;# 
  6257  021A                     	;# 
  6258  021B                     	;# 
  6259  021B                     	;# 
  6260  021C                     	;# 
  6261  021C                     	;# 
  6262  021D                     	;# 
  6263  021D                     	;# 
  6264  021E                     	;# 
  6265  021F                     	;# 
  6266  028C                     	;# 
  6267  028C                     	;# 
  6268  028D                     	;# 
  6269  028D                     	;# 
  6270  028E                     	;# 
  6271  028F                     	;# 
  6272  0290                     	;# 
  6273  0290                     	;# 
  6274  0291                     	;# 
  6275  0292                     	;# 
  6276  0292                     	;# 
  6277  0293                     	;# 
  6278  0293                     	;# 
  6279  0294                     	;# 
  6280  0295                     	;# 
  6281  0296                     	;# 
  6282  0296                     	;# 
  6283  0297                     	;# 
  6284  0298                     	;# 
  6285  0298                     	;# 
  6286  0299                     	;# 
  6287  0299                     	;# 
  6288  029A                     	;# 
  6289  029B                     	;# 
  6290  029C                     	;# 
  6291  029C                     	;# 
  6292  029D                     	;# 
  6293  030C                     	;# 
  6294  030C                     	;# 
  6295  030D                     	;# 
  6296  030E                     	;# 
  6297  030F                     	;# 
  6298  0310                     	;# 
  6299  0310                     	;# 
  6300  0311                     	;# 
  6301  0312                     	;# 
  6302  0313                     	;# 
  6303  0314                     	;# 
  6304  0314                     	;# 
  6305  0315                     	;# 
  6306  0316                     	;# 
  6307  0317                     	;# 
  6308  0318                     	;# 
  6309  0318                     	;# 
  6310  0319                     	;# 
  6311  031A                     	;# 
  6312  031B                     	;# 
  6313  031C                     	;# 
  6314  031C                     	;# 
  6315  031D                     	;# 
  6316  031E                     	;# 
  6317  031F                     	;# 
  6318  038C                     	;# 
  6319  038C                     	;# 
  6320  038D                     	;# 
  6321  038E                     	;# 
  6322  0390                     	;# 
  6323  0390                     	;# 
  6324  0391                     	;# 
  6325  0392                     	;# 
  6326  040C                     	;# 
  6327  040D                     	;# 
  6328  040E                     	;# 
  6329  040F                     	;# 
  6330  0410                     	;# 
  6331  0411                     	;# 
  6332  0416                     	;# 
  6333  0416                     	;# 
  6334  0417                     	;# 
  6335  0418                     	;# 
  6336  0418                     	;# 
  6337  0419                     	;# 
  6338  041A                     	;# 
  6339  041A                     	;# 
  6340  041B                     	;# 
  6341  041C                     	;# 
  6342  041C                     	;# 
  6343  041D                     	;# 
  6344  041E                     	;# 
  6345  041F                     	;# 
  6346  048C                     	;# 
  6347  048C                     	;# 
  6348  048D                     	;# 
  6349  048E                     	;# 
  6350  048F                     	;# 
  6351  048F                     	;# 
  6352  0490                     	;# 
  6353  0491                     	;# 
  6354  0492                     	;# 
  6355  0492                     	;# 
  6356  0493                     	;# 
  6357  0494                     	;# 
  6358  0495                     	;# 
  6359  0495                     	;# 
  6360  0496                     	;# 
  6361  0497                     	;# 
  6362  0498                     	;# 
  6363  0499                     	;# 
  6364  049A                     	;# 
  6365  049B                     	;# 
  6366  049C                     	;# 
  6367  049D                     	;# 
  6368  050C                     	;# 
  6369  050C                     	;# 
  6370  050D                     	;# 
  6371  050E                     	;# 
  6372  050F                     	;# 
  6373  050F                     	;# 
  6374  0510                     	;# 
  6375  0511                     	;# 
  6376  0512                     	;# 
  6377  0512                     	;# 
  6378  0513                     	;# 
  6379  0514                     	;# 
  6380  0515                     	;# 
  6381  0515                     	;# 
  6382  0516                     	;# 
  6383  0517                     	;# 
  6384  0518                     	;# 
  6385  0519                     	;# 
  6386  051A                     	;# 
  6387  051B                     	;# 
  6388  051C                     	;# 
  6389  051D                     	;# 
  6390  058C                     	;# 
  6391  058C                     	;# 
  6392  058D                     	;# 
  6393  058E                     	;# 
  6394  058F                     	;# 
  6395  058F                     	;# 
  6396  0590                     	;# 
  6397  0591                     	;# 
  6398  0592                     	;# 
  6399  0593                     	;# 
  6400  060C                     	;# 
  6401  060D                     	;# 
  6402  060E                     	;# 
  6403  060F                     	;# 
  6404  0610                     	;# 
  6405  0611                     	;# 
  6406  0612                     	;# 
  6407  0613                     	;# 
  6408  0614                     	;# 
  6409  0616                     	;# 
  6410  0617                     	;# 
  6411  0618                     	;# 
  6412  0619                     	;# 
  6413  061A                     	;# 
  6414  061B                     	;# 
  6415  061C                     	;# 
  6416  061D                     	;# 
  6417  061E                     	;# 
  6418  068C                     	;# 
  6419  068D                     	;# 
  6420  068E                     	;# 
  6421  068F                     	;# 
  6422  0690                     	;# 
  6423  0691                     	;# 
  6424  0692                     	;# 
  6425  0693                     	;# 
  6426  0694                     	;# 
  6427  070C                     	;# 
  6428  070D                     	;# 
  6429  070E                     	;# 
  6430  070F                     	;# 
  6431  0710                     	;# 
  6432  0711                     	;# 
  6433  0712                     	;# 
  6434  0713                     	;# 
  6435  0714                     	;# 
  6436  0716                     	;# 
  6437  0717                     	;# 
  6438  0718                     	;# 
  6439  0719                     	;# 
  6440  071A                     	;# 
  6441  071B                     	;# 
  6442  071C                     	;# 
  6443  071D                     	;# 
  6444  071E                     	;# 
  6445  0796                     	;# 
  6446  0797                     	;# 
  6447  0798                     	;# 
  6448  0799                     	;# 
  6449  079A                     	;# 
  6450  079B                     	;# 
  6451  080C                     	;# 
  6452  080D                     	;# 
  6453  080E                     	;# 
  6454  080F                     	;# 
  6455  0810                     	;# 
  6456  0811                     	;# 
  6457  0812                     	;# 
  6458  0813                     	;# 
  6459  0814                     	;# 
  6460  081A                     	;# 
  6461  081B                     	;# 
  6462  081C                     	;# 
  6463  081D                     	;# 
  6464  081E                     	;# 
  6465  081F                     	;# 
  6466  088C                     	;# 
  6467  088D                     	;# 
  6468  088E                     	;# 
  6469  088F                     	;# 
  6470  0890                     	;# 
  6471  0891                     	;# 
  6472  0892                     	;# 
  6473  0893                     	;# 
  6474  0895                     	;# 
  6475  0896                     	;# 
  6476  0897                     	;# 
  6477  0898                     	;# 
  6478  0899                     	;# 
  6479  089A                     	;# 
  6480  089B                     	;# 
  6481  090C                     	;# 
  6482  090E                     	;# 
  6483  090F                     	;# 
  6484  091F                     	;# 
  6485  091F                     	;# 
  6486  098F                     	;# 
  6487  098F                     	;# 
  6488  0990                     	;# 
  6489  0991                     	;# 
  6490  0992                     	;# 
  6491  0993                     	;# 
  6492  0994                     	;# 
  6493  0995                     	;# 
  6494  0996                     	;# 
  6495  0997                     	;# 
  6496  0E0F                     	;# 
  6497  0E10                     	;# 
  6498  0E11                     	;# 
  6499  0E12                     	;# 
  6500  0E13                     	;# 
  6501  0E14                     	;# 
  6502  0E15                     	;# 
  6503  0E16                     	;# 
  6504  0E17                     	;# 
  6505  0E18                     	;# 
  6506  0E19                     	;# 
  6507  0E1A                     	;# 
  6508  0E1B                     	;# 
  6509  0E1C                     	;# 
  6510  0E1D                     	;# 
  6511  0E1E                     	;# 
  6512  0E1F                     	;# 
  6513  0E20                     	;# 
  6514  0E21                     	;# 
  6515  0E22                     	;# 
  6516  0E23                     	;# 
  6517  0E24                     	;# 
  6518  0E25                     	;# 
  6519  0E26                     	;# 
  6520  0E27                     	;# 
  6521  0E28                     	;# 
  6522  0E29                     	;# 
  6523  0E2A                     	;# 
  6524  0E2B                     	;# 
  6525  0E2C                     	;# 
  6526  0E2D                     	;# 
  6527  0E2E                     	;# 
  6528  0E2F                     	;# 
  6529  0E30                     	;# 
  6530  0E31                     	;# 
  6531  0E32                     	;# 
  6532  0E33                     	;# 
  6533  0E34                     	;# 
  6534  0E35                     	;# 
  6535  0E36                     	;# 
  6536  0E37                     	;# 
  6537  0E8F                     	;# 
  6538  0E90                     	;# 
  6539  0E91                     	;# 
  6540  0E92                     	;# 
  6541  0E93                     	;# 
  6542  0E94                     	;# 
  6543  0E95                     	;# 
  6544  0E96                     	;# 
  6545  0E97                     	;# 
  6546  0E9C                     	;# 
  6547  0E9D                     	;# 
  6548  0E9E                     	;# 
  6549  0EA1                     	;# 
  6550  0EA2                     	;# 
  6551  0EA3                     	;# 
  6552  0EA4                     	;# 
  6553  0EA5                     	;# 
  6554  0EA9                     	;# 
  6555  0EAA                     	;# 
  6556  0EAB                     	;# 
  6557  0EAC                     	;# 
  6558  0EB1                     	;# 
  6559  0EB2                     	;# 
  6560  0EB3                     	;# 
  6561  0EB8                     	;# 
  6562  0EB9                     	;# 
  6563  0EBA                     	;# 
  6564  0EBB                     	;# 
  6565  0EBC                     	;# 
  6566  0EBD                     	;# 
  6567  0EBE                     	;# 
  6568  0EC3                     	;# 
  6569  0EC5                     	;# 
  6570  0EC6                     	;# 
  6571  0EC7                     	;# 
  6572  0EC8                     	;# 
  6573  0EC9                     	;# 
  6574  0ECA                     	;# 
  6575  0ECB                     	;# 
  6576  0ECC                     	;# 
  6577  0F10                     	;# 
  6578  0F11                     	;# 
  6579  0F12                     	;# 
  6580  0F13                     	;# 
  6581  0F14                     	;# 
  6582  0F15                     	;# 
  6583  0F16                     	;# 
  6584  0F17                     	;# 
  6585  0F18                     	;# 
  6586  0F19                     	;# 
  6587  0F1A                     	;# 
  6588  0F1B                     	;# 
  6589  0F1C                     	;# 
  6590  0F1D                     	;# 
  6591  0F1E                     	;# 
  6592  0F1F                     	;# 
  6593  0F20                     	;# 
  6594  0F21                     	;# 
  6595  0F22                     	;# 
  6596  0F23                     	;# 
  6597  0F24                     	;# 
  6598  0F25                     	;# 
  6599  0F26                     	;# 
  6600  0F27                     	;# 
  6601  0F28                     	;# 
  6602  0F29                     	;# 
  6603  0F2A                     	;# 
  6604  0F2B                     	;# 
  6605  0F2C                     	;# 
  6606  0F2D                     	;# 
  6607  0F2E                     	;# 
  6608  0F2F                     	;# 
  6609  0F30                     	;# 
  6610  0F31                     	;# 
  6611  0F32                     	;# 
  6612  0F38                     	;# 
  6613  0F39                     	;# 
  6614  0F3A                     	;# 
  6615  0F3B                     	;# 
  6616  0F3C                     	;# 
  6617  0F3D                     	;# 
  6618  0F3E                     	;# 
  6619  0F3F                     	;# 
  6620  0F40                     	;# 
  6621  0F41                     	;# 
  6622  0F43                     	;# 
  6623  0F44                     	;# 
  6624  0F45                     	;# 
  6625  0F46                     	;# 
  6626  0F47                     	;# 
  6627  0F48                     	;# 
  6628  0F49                     	;# 
  6629  0F4A                     	;# 
  6630  0F4B                     	;# 
  6631  0F4C                     	;# 
  6632  0F4E                     	;# 
  6633  0F4F                     	;# 
  6634  0F50                     	;# 
  6635  0F51                     	;# 
  6636  0F52                     	;# 
  6637  0F53                     	;# 
  6638  0F54                     	;# 
  6639  0F55                     	;# 
  6640  0F56                     	;# 
  6641  0F57                     	;# 
  6642  0F59                     	;# 
  6643  0F5A                     	;# 
  6644  0F5B                     	;# 
  6645  0F5C                     	;# 
  6646  0F5D                     	;# 
  6647  0F61                     	;# 
  6648  0F62                     	;# 
  6649  0F64                     	;# 
  6650  0F65                     	;# 
  6651  0F66                     	;# 
  6652  0F67                     	;# 
  6653  0F68                     	;# 
  6654  0F69                     	;# 
  6655  0F6A                     	;# 
  6656  0F6B                     	;# 
  6657  0F6C                     	;# 
  6658  0F6D                     	;# 
  6659  0FE4                     	;# 
  6660  0FE5                     	;# 
  6661  0FE6                     	;# 
  6662  0FE7                     	;# 
  6663  0FE8                     	;# 
  6664  0FE9                     	;# 
  6665  0FEA                     	;# 
  6666  0FEB                     	;# 
  6667  0FED                     	;# 
  6668  0FEE                     	;# 
  6669  0FEF                     	;# 
  6670  0000                     	;# 
  6671  0001                     	;# 
  6672  0002                     	;# 
  6673  0003                     	;# 
  6674  0004                     	;# 
  6675  0005                     	;# 
  6676  0006                     	;# 
  6677  0007                     	;# 
  6678  0008                     	;# 
  6679  0009                     	;# 
  6680  000A                     	;# 
  6681  000B                     	;# 
  6682  000C                     	;# 
  6683  000D                     	;# 
  6684  000E                     	;# 
  6685  000F                     	;# 
  6686  0010                     	;# 
  6687  0011                     	;# 
  6688  0012                     	;# 
  6689  0013                     	;# 
  6690  0014                     	;# 
  6691  0015                     	;# 
  6692  0016                     	;# 
  6693  0017                     	;# 
  6694  0018                     	;# 
  6695  0019                     	;# 
  6696  001A                     	;# 
  6697  001C                     	;# 
  6698  001C                     	;# 
  6699  001D                     	;# 
  6700  001D                     	;# 
  6701  001E                     	;# 
  6702  001F                     	;# 
  6703  008C                     	;# 
  6704  008C                     	;# 
  6705  008D                     	;# 
  6706  008E                     	;# 
  6707  008E                     	;# 
  6708  008F                     	;# 
  6709  0090                     	;# 
  6710  0090                     	;# 
  6711  0091                     	;# 
  6712  0093                     	;# 
  6713  0094                     	;# 
  6714  0095                     	;# 
  6715  0096                     	;# 
  6716  0097                     	;# 
  6717  0098                     	;# 
  6718  0099                     	;# 
  6719  009A                     	;# 
  6720  009B                     	;# 
  6721  009C                     	;# 
  6722  009D                     	;# 
  6723  009E                     	;# 
  6724  010C                     	;# 
  6725  010D                     	;# 
  6726  010E                     	;# 
  6727  010E                     	;# 
  6728  010F                     	;# 
  6729  0110                     	;# 
  6730  0110                     	;# 
  6731  0111                     	;# 
  6732  0112                     	;# 
  6733  0112                     	;# 
  6734  0113                     	;# 
  6735  0114                     	;# 
  6736  0114                     	;# 
  6737  0115                     	;# 
  6738  0116                     	;# 
  6739  0116                     	;# 
  6740  0117                     	;# 
  6741  0119                     	;# 
  6742  0119                     	;# 
  6743  0119                     	;# 
  6744  011A                     	;# 
  6745  011A                     	;# 
  6746  011A                     	;# 
  6747  011B                     	;# 
  6748  011B                     	;# 
  6749  011B                     	;# 
  6750  011B                     	;# 
  6751  011B                     	;# 
  6752  011C                     	;# 
  6753  011C                     	;# 
  6754  011C                     	;# 
  6755  011D                     	;# 
  6756  011D                     	;# 
  6757  011D                     	;# 
  6758  011E                     	;# 
  6759  011E                     	;# 
  6760  011E                     	;# 
  6761  011F                     	;# 
  6762  011F                     	;# 
  6763  011F                     	;# 
  6764  011F                     	;# 
  6765  011F                     	;# 
  6766  018C                     	;# 
  6767  018D                     	;# 
  6768  018E                     	;# 
  6769  018F                     	;# 
  6770  0190                     	;# 
  6771  0191                     	;# 
  6772  0192                     	;# 
  6773  0196                     	;# 
  6774  0197                     	;# 
  6775  0198                     	;# 
  6776  0199                     	;# 
  6777  019A                     	;# 
  6778  019B                     	;# 
  6779  019C                     	;# 
  6780  020C                     	;# 
  6781  020C                     	;# 
  6782  020D                     	;# 
  6783  020E                     	;# 
  6784  020F                     	;# 
  6785  020F                     	;# 
  6786  0210                     	;# 
  6787  0210                     	;# 
  6788  0211                     	;# 
  6789  0211                     	;# 
  6790  0212                     	;# 
  6791  0212                     	;# 
  6792  0213                     	;# 
  6793  0214                     	;# 
  6794  0215                     	;# 
  6795  0215                     	;# 
  6796  0216                     	;# 
  6797  0216                     	;# 
  6798  0217                     	;# 
  6799  0217                     	;# 
  6800  0218                     	;# 
  6801  0218                     	;# 
  6802  0219                     	;# 
  6803  021A                     	;# 
  6804  021B                     	;# 
  6805  021B                     	;# 
  6806  021C                     	;# 
  6807  021C                     	;# 
  6808  021D                     	;# 
  6809  021D                     	;# 
  6810  021E                     	;# 
  6811  021F                     	;# 
  6812  028C                     	;# 
  6813  028C                     	;# 
  6814  028D                     	;# 
  6815  028D                     	;# 
  6816  028E                     	;# 
  6817  028F                     	;# 
  6818  0290                     	;# 
  6819  0290                     	;# 
  6820  0291                     	;# 
  6821  0292                     	;# 
  6822  0292                     	;# 
  6823  0293                     	;# 
  6824  0293                     	;# 
  6825  0294                     	;# 
  6826  0295                     	;# 
  6827  0296                     	;# 
  6828  0296                     	;# 
  6829  0297                     	;# 
  6830  0298                     	;# 
  6831  0298                     	;# 
  6832  0299                     	;# 
  6833  0299                     	;# 
  6834  029A                     	;# 
  6835  029B                     	;# 
  6836  029C                     	;# 
  6837  029C                     	;# 
  6838  029D                     	;# 
  6839  030C                     	;# 
  6840  030C                     	;# 
  6841  030D                     	;# 
  6842  030E                     	;# 
  6843  030F                     	;# 
  6844  0310                     	;# 
  6845  0310                     	;# 
  6846  0311                     	;# 
  6847  0312                     	;# 
  6848  0313                     	;# 
  6849  0314                     	;# 
  6850  0314                     	;# 
  6851  0315                     	;# 
  6852  0316                     	;# 
  6853  0317                     	;# 
  6854  0318                     	;# 
  6855  0318                     	;# 
  6856  0319                     	;# 
  6857  031A                     	;# 
  6858  031B                     	;# 
  6859  031C                     	;# 
  6860  031C                     	;# 
  6861  031D                     	;# 
  6862  031E                     	;# 
  6863  031F                     	;# 
  6864  038C                     	;# 
  6865  038C                     	;# 
  6866  038D                     	;# 
  6867  038E                     	;# 
  6868  0390                     	;# 
  6869  0390                     	;# 
  6870  0391                     	;# 
  6871  0392                     	;# 
  6872  040C                     	;# 
  6873  040D                     	;# 
  6874  040E                     	;# 
  6875  040F                     	;# 
  6876  0410                     	;# 
  6877  0411                     	;# 
  6878  0416                     	;# 
  6879  0416                     	;# 
  6880  0417                     	;# 
  6881  0418                     	;# 
  6882  0418                     	;# 
  6883  0419                     	;# 
  6884  041A                     	;# 
  6885  041A                     	;# 
  6886  041B                     	;# 
  6887  041C                     	;# 
  6888  041C                     	;# 
  6889  041D                     	;# 
  6890  041E                     	;# 
  6891  041F                     	;# 
  6892  048C                     	;# 
  6893  048C                     	;# 
  6894  048D                     	;# 
  6895  048E                     	;# 
  6896  048F                     	;# 
  6897  048F                     	;# 
  6898  0490                     	;# 
  6899  0491                     	;# 
  6900  0492                     	;# 
  6901  0492                     	;# 
  6902  0493                     	;# 
  6903  0494                     	;# 
  6904  0495                     	;# 
  6905  0495                     	;# 
  6906  0496                     	;# 
  6907  0497                     	;# 
  6908  0498                     	;# 
  6909  0499                     	;# 
  6910  049A                     	;# 
  6911  049B                     	;# 
  6912  049C                     	;# 
  6913  049D                     	;# 
  6914  050C                     	;# 
  6915  050C                     	;# 
  6916  050D                     	;# 
  6917  050E                     	;# 
  6918  050F                     	;# 
  6919  050F                     	;# 
  6920  0510                     	;# 
  6921  0511                     	;# 
  6922  0512                     	;# 
  6923  0512                     	;# 
  6924  0513                     	;# 
  6925  0514                     	;# 
  6926  0515                     	;# 
  6927  0515                     	;# 
  6928  0516                     	;# 
  6929  0517                     	;# 
  6930  0518                     	;# 
  6931  0519                     	;# 
  6932  051A                     	;# 
  6933  051B                     	;# 
  6934  051C                     	;# 
  6935  051D                     	;# 
  6936  058C                     	;# 
  6937  058C                     	;# 
  6938  058D                     	;# 
  6939  058E                     	;# 
  6940  058F                     	;# 
  6941  058F                     	;# 
  6942  0590                     	;# 
  6943  0591                     	;# 
  6944  0592                     	;# 
  6945  0593                     	;# 
  6946  060C                     	;# 
  6947  060D                     	;# 
  6948  060E                     	;# 
  6949  060F                     	;# 
  6950  0610                     	;# 
  6951  0611                     	;# 
  6952  0612                     	;# 
  6953  0613                     	;# 
  6954  0614                     	;# 
  6955  0616                     	;# 
  6956  0617                     	;# 
  6957  0618                     	;# 
  6958  0619                     	;# 
  6959  061A                     	;# 
  6960  061B                     	;# 
  6961  061C                     	;# 
  6962  061D                     	;# 
  6963  061E                     	;# 
  6964  068C                     	;# 
  6965  068D                     	;# 
  6966  068E                     	;# 
  6967  068F                     	;# 
  6968  0690                     	;# 
  6969  0691                     	;# 
  6970  0692                     	;# 
  6971  0693                     	;# 
  6972  0694                     	;# 
  6973  070C                     	;# 
  6974  070D                     	;# 
  6975  070E                     	;# 
  6976  070F                     	;# 
  6977  0710                     	;# 
  6978  0711                     	;# 
  6979  0712                     	;# 
  6980  0713                     	;# 
  6981  0714                     	;# 
  6982  0716                     	;# 
  6983  0717                     	;# 
  6984  0718                     	;# 
  6985  0719                     	;# 
  6986  071A                     	;# 
  6987  071B                     	;# 
  6988  071C                     	;# 
  6989  071D                     	;# 
  6990  071E                     	;# 
  6991  0796                     	;# 
  6992  0797                     	;# 
  6993  0798                     	;# 
  6994  0799                     	;# 
  6995  079A                     	;# 
  6996  079B                     	;# 
  6997  080C                     	;# 
  6998  080D                     	;# 
  6999  080E                     	;# 
  7000  080F                     	;# 
  7001  0810                     	;# 
  7002  0811                     	;# 
  7003  0812                     	;# 
  7004  0813                     	;# 
  7005  0814                     	;# 
  7006  081A                     	;# 
  7007  081B                     	;# 
  7008  081C                     	;# 
  7009  081D                     	;# 
  7010  081E                     	;# 
  7011  081F                     	;# 
  7012  088C                     	;# 
  7013  088D                     	;# 
  7014  088E                     	;# 
  7015  088F                     	;# 
  7016  0890                     	;# 
  7017  0891                     	;# 
  7018  0892                     	;# 
  7019  0893                     	;# 
  7020  0895                     	;# 
  7021  0896                     	;# 
  7022  0897                     	;# 
  7023  0898                     	;# 
  7024  0899                     	;# 
  7025  089A                     	;# 
  7026  089B                     	;# 
  7027  090C                     	;# 
  7028  090E                     	;# 
  7029  090F                     	;# 
  7030  091F                     	;# 
  7031  091F                     	;# 
  7032  098F                     	;# 
  7033  098F                     	;# 
  7034  0990                     	;# 
  7035  0991                     	;# 
  7036  0992                     	;# 
  7037  0993                     	;# 
  7038  0994                     	;# 
  7039  0995                     	;# 
  7040  0996                     	;# 
  7041  0997                     	;# 
  7042  0E0F                     	;# 
  7043  0E10                     	;# 
  7044  0E11                     	;# 
  7045  0E12                     	;# 
  7046  0E13                     	;# 
  7047  0E14                     	;# 
  7048  0E15                     	;# 
  7049  0E16                     	;# 
  7050  0E17                     	;# 
  7051  0E18                     	;# 
  7052  0E19                     	;# 
  7053  0E1A                     	;# 
  7054  0E1B                     	;# 
  7055  0E1C                     	;# 
  7056  0E1D                     	;# 
  7057  0E1E                     	;# 
  7058  0E1F                     	;# 
  7059  0E20                     	;# 
  7060  0E21                     	;# 
  7061  0E22                     	;# 
  7062  0E23                     	;# 
  7063  0E24                     	;# 
  7064  0E25                     	;# 
  7065  0E26                     	;# 
  7066  0E27                     	;# 
  7067  0E28                     	;# 
  7068  0E29                     	;# 
  7069  0E2A                     	;# 
  7070  0E2B                     	;# 
  7071  0E2C                     	;# 
  7072  0E2D                     	;# 
  7073  0E2E                     	;# 
  7074  0E2F                     	;# 
  7075  0E30                     	;# 
  7076  0E31                     	;# 
  7077  0E32                     	;# 
  7078  0E33                     	;# 
  7079  0E34                     	;# 
  7080  0E35                     	;# 
  7081  0E36                     	;# 
  7082  0E37                     	;# 
  7083  0E8F                     	;# 
  7084  0E90                     	;# 
  7085  0E91                     	;# 
  7086  0E92                     	;# 
  7087  0E93                     	;# 
  7088  0E94                     	;# 
  7089  0E95                     	;# 
  7090  0E96                     	;# 
  7091  0E97                     	;# 
  7092  0E9C                     	;# 
  7093  0E9D                     	;# 
  7094  0E9E                     	;# 
  7095  0EA1                     	;# 
  7096  0EA2                     	;# 
  7097  0EA3                     	;# 
  7098  0EA4                     	;# 
  7099  0EA5                     	;# 
  7100  0EA9                     	;# 
  7101  0EAA                     	;# 
  7102  0EAB                     	;# 
  7103  0EAC                     	;# 
  7104  0EB1                     	;# 
  7105  0EB2                     	;# 
  7106  0EB3                     	;# 
  7107  0EB8                     	;# 
  7108  0EB9                     	;# 
  7109  0EBA                     	;# 
  7110  0EBB                     	;# 
  7111  0EBC                     	;# 
  7112  0EBD                     	;# 
  7113  0EBE                     	;# 
  7114  0EC3                     	;# 
  7115  0EC5                     	;# 
  7116  0EC6                     	;# 
  7117  0EC7                     	;# 
  7118  0EC8                     	;# 
  7119  0EC9                     	;# 
  7120  0ECA                     	;# 
  7121  0ECB                     	;# 
  7122  0ECC                     	;# 
  7123  0F10                     	;# 
  7124  0F11                     	;# 
  7125  0F12                     	;# 
  7126  0F13                     	;# 
  7127  0F14                     	;# 
  7128  0F15                     	;# 
  7129  0F16                     	;# 
  7130  0F17                     	;# 
  7131  0F18                     	;# 
  7132  0F19                     	;# 
  7133  0F1A                     	;# 
  7134  0F1B                     	;# 
  7135  0F1C                     	;# 
  7136  0F1D                     	;# 
  7137  0F1E                     	;# 
  7138  0F1F                     	;# 
  7139  0F20                     	;# 
  7140  0F21                     	;# 
  7141  0F22                     	;# 
  7142  0F23                     	;# 
  7143  0F24                     	;# 
  7144  0F25                     	;# 
  7145  0F26                     	;# 
  7146  0F27                     	;# 
  7147  0F28                     	;# 
  7148  0F29                     	;# 
  7149  0F2A                     	;# 
  7150  0F2B                     	;# 
  7151  0F2C                     	;# 
  7152  0F2D                     	;# 
  7153  0F2E                     	;# 
  7154  0F2F                     	;# 
  7155  0F30                     	;# 
  7156  0F31                     	;# 
  7157  0F32                     	;# 
  7158  0F38                     	;# 
  7159  0F39                     	;# 
  7160  0F3A                     	;# 
  7161  0F3B                     	;# 
  7162  0F3C                     	;# 
  7163  0F3D                     	;# 
  7164  0F3E                     	;# 
  7165  0F3F                     	;# 
  7166  0F40                     	;# 
  7167  0F41                     	;# 
  7168  0F43                     	;# 
  7169  0F44                     	;# 
  7170  0F45                     	;# 
  7171  0F46                     	;# 
  7172  0F47                     	;# 
  7173  0F48                     	;# 
  7174  0F49                     	;# 
  7175  0F4A                     	;# 
  7176  0F4B                     	;# 
  7177  0F4C                     	;# 
  7178  0F4E                     	;# 
  7179  0F4F                     	;# 
  7180  0F50                     	;# 
  7181  0F51                     	;# 
  7182  0F52                     	;# 
  7183  0F53                     	;# 
  7184  0F54                     	;# 
  7185  0F55                     	;# 
  7186  0F56                     	;# 
  7187  0F57                     	;# 
  7188  0F59                     	;# 
  7189  0F5A                     	;# 
  7190  0F5B                     	;# 
  7191  0F5C                     	;# 
  7192  0F5D                     	;# 
  7193  0F61                     	;# 
  7194  0F62                     	;# 
  7195  0F64                     	;# 
  7196  0F65                     	;# 
  7197  0F66                     	;# 
  7198  0F67                     	;# 
  7199  0F68                     	;# 
  7200  0F69                     	;# 
  7201  0F6A                     	;# 
  7202  0F6B                     	;# 
  7203  0F6C                     	;# 
  7204  0F6D                     	;# 
  7205  0FE4                     	;# 
  7206  0FE5                     	;# 
  7207  0FE6                     	;# 
  7208  0FE7                     	;# 
  7209  0FE8                     	;# 
  7210  0FE9                     	;# 
  7211  0FEA                     	;# 
  7212  0FEB                     	;# 
  7213  0FED                     	;# 
  7214  0FEE                     	;# 
  7215  0FEF                     	;# 
  7216                           
  7217                           	psect	idataBANK0
  7218  0BC6                     __pidataBANK0:
  7219                           
  7220                           ;initializer for _clkAlarm
  7221  0BC6  3400               	retlw	0
  7222  0BC7  3400               	retlw	0
  7223  0BC8  3401               	retlw	1
  7224  0BC9  3400               	retlw	0
  7225  0BCA  3400               	retlw	0
  7226  0BCB  3400               	retlw	0
  7227  0BCC  3400               	retlw	0
  7228                           
  7229                           ;initializer for _lumAlarm
  7230  0BCD  3404               	retlw	4
  7231  0BCE  3400               	retlw	0
  7232                           
  7233                           ;initializer for _tempAlarm
  7234  0BCF  341C               	retlw	28
  7235  0BD0  3400               	retlw	0
  7236                           
  7237                           ;initializer for _alarmsEnable
  7238  0BD1  3401               	retlw	1
  7239                           
  7240                           	psect	idataBANK1
  7241  0B8B                     __pidataBANK1:
  7242                           
  7243                           ;initializer for _alarmPWMStart
  7244  0B8B  34FF               	retlw	255
  7245  0B8C  34FF               	retlw	255
  7246  0B8D  34FF               	retlw	255
  7247  0B8E  34FF               	retlw	255
  7248  0B8F  34FF               	retlw	255
  7249  0B90  34FF               	retlw	255
  7250                           
  7251                           	psect	stringtext1
  7252  100F                     __pstringtext1:
  7253  100F                     _dpowers:
  7254  100F  3401               	retlw	1
  7255  1010  3400               	retlw	0
  7256  1011  340A               	retlw	10
  7257  1012  3400               	retlw	0
  7258  1013  3464               	retlw	100
  7259  1014  3400               	retlw	0
  7260  1015  34E8               	retlw	232
  7261  1016  3403               	retlw	3
  7262  1017  3410               	retlw	16
  7263  1018  3427               	retlw	39
  7264  1019                     __end_of_dpowers:
  7265                           
  7266                           	psect	nvBANK0
  7267  006B                     __pnvBANK0:
  7268  006B                     _TMR3_InterruptHandler:
  7269  006B                     	ds	2
  7270  006D                     _timer3ReloadVal:
  7271  006D                     	ds	2
  7272                           
  7273                           	psect	nvBANK1
  7274  00AA                     __pnvBANK1:
  7275  00AA                     _TMR5_InterruptHandler:
  7276  00AA                     	ds	2
  7277  00AC                     _timer5ReloadVal:
  7278  00AC                     	ds	2
  7279  00AE                     _TMR1_InterruptHandler:
  7280  00AE                     	ds	2
  7281  00B0                     _timer1ReloadVal:
  7282  00B0                     	ds	2
  7283  0013                     _TRISCbits	set	19
  7284  000E                     _PORTCbits	set	14
  7285  000D                     _PORTBbits	set	13
  7286  0016                     _LATAbits	set	22
  7287  000B                     _INTCONbits	set	11
  7288  0014                     _TRISD	set	20
  7289  0013                     _TRISC	set	19
  7290  0012                     _TRISB	set	18
  7291  0011                     _TRISA	set	17
  7292  0015                     _TRISE	set	21
  7293  0018                     _LATC	set	24
  7294  0017                     _LATB	set	23
  7295  0016                     _LATA	set	22
  7296  0019                     _LATD	set	25
  7297  001A                     _LATE	set	26
  7298  0094                     _ADCON1bits	set	148
  7299  008E                     _ADPREVL	set	142
  7300  008F                     _ADPREVH	set	143
  7301  0097                     _ADSTATbits	set	151
  7302  0090                     _ADACCL	set	144
  7303  0091                     _ADACCH	set	145
  7304  0095                     _ADCON2bits	set	149
  7305  009C                     _ADPRE	set	156
  7306  0096                     _ADCON3bits	set	150
  7307  008C                     _ADRESL	set	140
  7308  008D                     _ADRESH	set	141
  7309  0093                     _ADCON0bits	set	147
  7310  009D                     _ADACQ	set	157
  7311  0093                     _ADCON0	set	147
  7312  0098                     _ADCLK	set	152
  7313  0099                     _ADACT	set	153
  7314  009A                     _ADREF	set	154
  7315  0097                     _ADSTAT	set	151
  7316  0096                     _ADCON3	set	150
  7317  0095                     _ADCON2	set	149
  7318  0094                     _ADCON1	set	148
  7319  009B                     _ADCAP	set	155
  7320  009E                     _ADPCH	set	158
  7321  0116                     _ADERRL	set	278
  7322  0117                     _ADERRH	set	279
  7323  0114                     _ADFLTRL	set	276
  7324  0115                     _ADFLTRH	set	277
  7325  010C                     _ADCNT	set	268
  7326  010D                     _ADRPT	set	269
  7327  0113                     _ADSTPTH	set	275
  7328  0112                     _ADSTPTL	set	274
  7329  0111                     _ADUTHH	set	273
  7330  0110                     _ADUTHL	set	272
  7331  010F                     _ADLTHH	set	271
  7332  010E                     _ADLTHL	set	270
  7333  018E                     _SSP1MSK	set	398
  7334  018D                     _SSP1ADD	set	397
  7335  018F                     _SSP1STAT	set	399
  7336  0191                     _SSP1CON2	set	401
  7337  0190                     _SSP1CON1bits	set	400
  7338  018C                     _SSP1BUF	set	396
  7339  018F                     _SSP1STATbits	set	399
  7340  0191                     _SSP1CON2bits	set	401
  7341  0190                     _SSP1CON1	set	400
  7342  021F                     _CCPTMRS1bits	set	543
  7343  021B                     _T5GCONbits	set	539
  7344  021A                     _T5CONbits	set	538
  7345  021A                     _T5CON	set	538
  7346  0218                     _TMR5L	set	536
  7347  0219                     _TMR5H	set	537
  7348  021D                     _T5CLK	set	541
  7349  021C                     _T5GATE	set	540
  7350  021B                     _T5GCON	set	539
  7351  0215                     _T3GCONbits	set	533
  7352  0214                     _T3CONbits	set	532
  7353  0214                     _T3CON	set	532
  7354  0212                     _TMR3L	set	530
  7355  0213                     _TMR3H	set	531
  7356  0217                     _T3CLK	set	535
  7357  0216                     _T3GATE	set	534
  7358  0215                     _T3GCON	set	533
  7359  020F                     _T1GCONbits	set	527
  7360  020E                     _T1CONbits	set	526
  7361  020E                     _T1CON	set	526
  7362  020C                     _TMR1L	set	524
  7363  020D                     _TMR1H	set	525
  7364  0211                     _T1CLK	set	529
  7365  0210                     _T1GATE	set	528
  7366  020F                     _T1GCON	set	527
  7367  028D                     _PR2	set	653
  7368  028C                     _TMR2	set	652
  7369  028E                     _T2CONbits	set	654
  7370  0291                     _T2RSTbits	set	657
  7371  028F                     _T2HLTbits	set	655
  7372  028E                     _T2CON	set	654
  7373  028C                     _T2TMR	set	652
  7374  028D                     _T2PR	set	653
  7375  0291                     _T2RST	set	657
  7376  028F                     _T2HLT	set	655
  7377  0290                     _T2CLKCON	set	656
  7378  038C                     _PWM6DCL	set	908
  7379  038D                     _PWM6DCH	set	909
  7380  038E                     _PWM6CON	set	910
  7381  1C77                     _PWM6EN	set	7287
  7382  0710                     _PIR4bits	set	1808
  7383  071A                     _PIE4bits	set	1818
  7384  0719                     _PIE3bits	set	1817
  7385  070F                     _PIR3bits	set	1807
  7386  079B                     _PMD5	set	1947
  7387  079A                     _PMD4	set	1946
  7388  0799                     _PMD3	set	1945
  7389  0798                     _PMD2	set	1944
  7390  0797                     _PMD1	set	1943
  7391  0796                     _PMD0	set	1942
  7392  0892                     _OSCTUNE	set	2194
  7393  0893                     _OSCFRQ	set	2195
  7394  0891                     _OSCEN	set	2193
  7395  088F                     _OSCCON3	set	2191
  7396  088D                     _OSCCON1	set	2189
  7397  0EC6                     _SSP1DATPPS	set	3782
  7398  0EC5                     _SSP1CLKPPS	set	3781
  7399  0F16                     _RA6PPS	set	3862
  7400  0F24                     _RC4PPS	set	3876
  7401  0F23                     _RC3PPS	set	3875
  7402  0F67                     _SLRCONE	set	3943
  7403  0F5C                     _SLRCOND	set	3932
  7404  0F51                     _SLRCONC	set	3921
  7405  0F46                     _SLRCONB	set	3910
  7406  0F3B                     _SLRCONA	set	3899
  7407  0F5B                     _ODCOND	set	3931
  7408  0F50                     _ODCONC	set	3920
  7409  0F45                     _ODCONB	set	3909
  7410  0F3A                     _ODCONA	set	3898
  7411  0F66                     _ODCONE	set	3942
  7412  0F4F                     _WPUC	set	3919
  7413  0F39                     _WPUA	set	3897
  7414  0F44                     _WPUB	set	3908
  7415  0F65                     _WPUE	set	3941
  7416  0F5A                     _WPUD	set	3930
  7417  0F38                     _ANSELA	set	3896
  7418  0F64                     _ANSELE	set	3940
  7419  0F43                     _ANSELB	set	3907
  7420  0F4E                     _ANSELC	set	3918
  7421  0F59                     _ANSELD	set	3929
  7422  7A7C                     _WPUC4	set	31356
  7423  7A7B                     _WPUC3	set	31355
  7424                           
  7425                           	psect	stringtext2
  7426  1000                     __pstringtext2:
  7427  1000                     STR_1:
  7428  1000  3425               	retlw	37	;'%'
  7429  1001  3430               	retlw	48	;'0'
  7430  1002  3432               	retlw	50	;'2'
  7431  1003  3464               	retlw	100	;'d'
  7432  1004  343A               	retlw	58	;':'
  7433  1005  3425               	retlw	37	;'%'
  7434  1006  3430               	retlw	48	;'0'
  7435  1007  3432               	retlw	50	;'2'
  7436  1008  3464               	retlw	100	;'d'
  7437  1009  343A               	retlw	58	;':'
  7438  100A  3425               	retlw	37	;'%'
  7439  100B  3430               	retlw	48	;'0'
  7440  100C  3432               	retlw	50	;'2'
  7441  100D  3464               	retlw	100	;'d'
  7442  100E  3400               	retlw	0
  7443                           
  7444                           	psect	stringtext3
  7445  1019                     __pstringtext3:
  7446  1019                     STR_3:
  7447  1019  3425               	retlw	37	;'%'
  7448  101A  3430               	retlw	48	;'0'
  7449  101B  3432               	retlw	50	;'2'
  7450  101C  3464               	retlw	100	;'d'
  7451  101D  3420               	retlw	32	;' '
  7452  101E  3443               	retlw	67	;'C'
  7453  101F  3400               	retlw	0
  7454                           
  7455                           	psect	stringtext4
  7456  1020                     __pstringtext4:
  7457  1020                     STR_4:
  7458  1020  344C               	retlw	76	;'L'
  7459  1021  3420               	retlw	32	;' '
  7460  1022  3425               	retlw	37	;'%'
  7461  1023  3464               	retlw	100	;'d'
  7462  1024  3400               	retlw	0
  7463                           
  7464                           	psect	stringtext5
  7465  0000                     __pstringtext5:
  7466  1000                     
  7467                           	psect	cinit
  7468  0042                     start_initialization:	
  7469                           ; #config settings
  7470                           
  7471  0042                     __initialization:
  7472                           
  7473                           ; Initialize objects allocated to BANK0
  7474  0042  30C6               	movlw	low __pidataBANK0
  7475  0043  0084               	movwf	4
  7476  0044  308B               	movlw	(high __pidataBANK0)| (0+128)
  7477  0045  0085               	movwf	5
  7478  0046  305F               	movlw	low __pdataBANK0
  7479  0047  0086               	movwf	6
  7480  0048  3000               	movlw	high __pdataBANK0
  7481  0049  0087               	movwf	7
  7482  004A  300C               	movlw	12
  7483  004B  318B  2385  3180   	fcall	init_ram
  7484                           
  7485                           ; Initialize objects allocated to BANK1
  7486  004E  308B               	movlw	low __pidataBANK1
  7487  004F  0084               	movwf	4
  7488  0050  308B               	movlw	(high __pidataBANK1)| (0+128)
  7489  0051  0085               	movwf	5
  7490  0052  30BA               	movlw	low __pdataBANK1
  7491  0053  0086               	movwf	6
  7492  0054  3000               	movlw	high __pdataBANK1
  7493  0055  0087               	movwf	7
  7494  0056  3006               	movlw	6
  7495  0057  318B  2385  3180   	fcall	init_ram
  7496                           
  7497                           ; Clear objects allocated to BANK0
  7498  005A  304C               	movlw	low __pbssBANK0
  7499  005B  0084               	movwf	4
  7500  005C  3000               	movlw	high __pbssBANK0
  7501  005D  0085               	movwf	5
  7502  005E  3013               	movlw	19
  7503  005F  318B  237F  3180   	fcall	clear_ram0
  7504                           
  7505                           ; Clear objects allocated to BANK1
  7506  0062  30B2               	movlw	low __pbssBANK1
  7507  0063  0084               	movwf	4
  7508  0064  3000               	movlw	high __pbssBANK1
  7509  0065  0085               	movwf	5
  7510  0066  3008               	movlw	8
  7511  0067  318B  237F  3180   	fcall	clear_ram0
  7512  006A                     end_of_initialization:	
  7513                           ;End of C runtime variable initialization code
  7514                           
  7515  006A                     __end_of__initialization:
  7516  006A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7517  006B  0020               	movlb	0
  7518  006C  3186  2ECD         	ljmp	_main	;jump to C main() function
  7519                           
  7520                           	psect	bssBANK0
  7521  004C                     __pbssBANK0:
  7522  004C                     _t:
  7523  004C                     	ds	6
  7524  0052                     _editingClockAlarm:
  7525  0052                     	ds	2
  7526  0054                     _dimingLed:
  7527  0054                     	ds	2
  7528  0056                     _i2c1_driver_i2cISR:
  7529  0056                     	ds	2
  7530  0058                     _i2c1_driver_busCollisionISR:
  7531  0058                     	ds	2
  7532  005A                     _togglingAlarm:
  7533  005A                     	ds	1
  7534  005B                     _editingLumAlarm:
  7535  005B                     	ds	1
  7536  005C                     _editingTempAlarm:
  7537  005C                     	ds	1
  7538  005D                     _lumLevel:
  7539  005D                     	ds	1
  7540  005E                     _temp:
  7541  005E                     	ds	1
  7542                           
  7543                           	psect	dataBANK0
  7544  005F                     __pdataBANK0:
  7545  005F                     _clkAlarm:
  7546  005F                     	ds	7
  7547  0066                     _lumAlarm:
  7548  0066                     	ds	2
  7549  0068                     _tempAlarm:
  7550  0068                     	ds	2
  7551  006A                     _alarmsEnable:
  7552  006A                     	ds	1
  7553                           
  7554                           	psect	bssBANK1
  7555  00B2                     __pbssBANK1:
  7556  00B2                     menuLCD_ISR@F12791:
  7557  00B2                     	ds	6
  7558  00B8                     _mode:
  7559  00B8                     	ds	2
  7560                           
  7561                           	psect	dataBANK1
  7562  00BA                     __pdataBANK1:
  7563  00BA                     _alarmPWMStart:
  7564  00BA                     	ds	6
  7565                           
  7566                           	psect	inittext
  7567  0B85                     init_ram:
  7568  0B85  00FE               	movwf	btemp
  7569  0B86                     initloop:
  7570  0B86  0012               	moviw fsr0++
  7571  0B87  001E               	movwi fsr1++
  7572  0B88  0BFE               	decfsz	btemp,f
  7573  0B89  2B86               	goto	initloop
  7574  0B8A  3400               	retlw	0
  7575                           
  7576                           	psect	clrtext
  7577  0B7F                     clear_ram0:	
  7578                           ;	Called with FSR0 containing the base address, and
  7579                           ;	WREG with the size to clear
  7580                           
  7581  0B7F  0064               	clrwdt	;clear the watchdog before getting into this loop
  7582  0B80                     clrloop0:
  7583  0B80  0180               	clrf	0	;clear RAM location pointed to by FSR
  7584  0B81  3101               	addfsr 0,1
  7585  0B82  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7586  0B83  2B80               	goto	clrloop0	;have we reached the end yet?
  7587  0B84  3400               	retlw	0	;all done for this memory range, return
  7588                           
  7589                           	psect	cstackBANK1
  7590  00A0                     __pcstackBANK1:
  7591  00A0                     ??_PMD_Initialize:
  7592  00A0                     ??_OSCILLATOR_Initialize:	
  7593                           ; 1 bytes @ 0x0
  7594                           
  7595  00A0                     ??_PWM6_Initialize:	
  7596                           ; 1 bytes @ 0x0
  7597                           
  7598  00A0                     ??_ADCC_Initialize:	
  7599                           ; 1 bytes @ 0x0
  7600                           
  7601  00A0                     ??_TMR2_Initialize:	
  7602                           ; 1 bytes @ 0x0
  7603                           
  7604  00A0                     ?_TMR1_SetInterruptHandler:	
  7605                           ; 1 bytes @ 0x0
  7606                           
  7607  00A0                     ?_TMR3_SetInterruptHandler:	
  7608                           ; 1 bytes @ 0x0
  7609                           
  7610  00A0                     ?_TMR5_SetInterruptHandler:	
  7611                           ; 1 bytes @ 0x0
  7612                           
  7613  00A0                     ??_WriteI2C:	
  7614                           ; 1 bytes @ 0x0
  7615                           
  7616  00A0                     ??_PIN_MANAGER_Initialize:	
  7617                           ; 1 bytes @ 0x0
  7618                           
  7619  00A0                     ??_i2c1_driver_open:	
  7620                           ; 1 bytes @ 0x0
  7621                           
  7622  00A0                     ??_TMR2_Stop:	
  7623                           ; 1 bytes @ 0x0
  7624                           
  7625  00A0                     ??_TMR2_StopTimer:	
  7626                           ; 1 bytes @ 0x0
  7627                           
  7628  00A0                     ??_PWM_Output_D4_Disable:	
  7629                           ; 1 bytes @ 0x0
  7630                           
  7631  00A0                     ??_editClock:	
  7632                           ; 1 bytes @ 0x0
  7633                           
  7634  00A0                     TMR1_SetInterruptHandler@InterruptHandler:	
  7635                           ; 1 bytes @ 0x0
  7636                           
  7637  00A0                     TMR3_SetInterruptHandler@InterruptHandler:	
  7638                           ; 2 bytes @ 0x0
  7639                           
  7640  00A0                     TMR5_SetInterruptHandler@InterruptHandler:	
  7641                           ; 2 bytes @ 0x0
  7642                           
  7643                           
  7644                           ; 2 bytes @ 0x0
  7645  00A0                     	ds	1
  7646  00A1                     WriteI2C@data_out:
  7647                           
  7648                           ; 1 bytes @ 0x1
  7649  00A1                     	ds	1
  7650  00A2                     ??_TMR3_Initialize:
  7651  00A2                     ??_TMR5_Initialize:	
  7652                           ; 1 bytes @ 0x2
  7653                           
  7654  00A2                     ??_TMR1_Initialize:	
  7655                           ; 1 bytes @ 0x2
  7656                           
  7657  00A2                     ??_TMR1_SetInterruptHandler:	
  7658                           ; 1 bytes @ 0x2
  7659                           
  7660  00A2                     ??_TMR3_SetInterruptHandler:	
  7661                           ; 1 bytes @ 0x2
  7662                           
  7663  00A2                     ??_TMR5_SetInterruptHandler:	
  7664                           ; 1 bytes @ 0x2
  7665                           
  7666  00A2                     ??_SYSTEM_Initialize:	
  7667                           ; 1 bytes @ 0x2
  7668                           
  7669  00A2                     ??_LCDsend:	
  7670                           ; 1 bytes @ 0x2
  7671                           
  7672  00A2                     ?_LCDsend2x4:	
  7673                           ; 1 bytes @ 0x2
  7674                           
  7675  00A2                     LCDsend2x4@mode:	
  7676                           ; 1 bytes @ 0x2
  7677                           
  7678                           
  7679                           ; 1 bytes @ 0x2
  7680  00A2                     	ds	1
  7681  00A3                     ??_LCDsend2x4:
  7682  00A3                     LCDsend@c:	
  7683                           ; 1 bytes @ 0x3
  7684                           
  7685                           
  7686                           ; 1 bytes @ 0x3
  7687  00A3                     	ds	2
  7688  00A5                     LCDsend2x4@c:
  7689                           
  7690                           ; 1 bytes @ 0x5
  7691  00A5                     	ds	1
  7692  00A6                     LCDsend2x4@hc:
  7693                           
  7694                           ; 1 bytes @ 0x6
  7695  00A6                     	ds	1
  7696  00A7                     LCDsend2x4@lc:
  7697                           
  7698                           ; 1 bytes @ 0x7
  7699  00A7                     	ds	1
  7700  00A8                     ??_LCDinit:
  7701                           
  7702                           ; 1 bytes @ 0x8
  7703  00A8                     	ds	1
  7704  00A9                     ??_main:
  7705                           
  7706                           ; 1 bytes @ 0x9
  7707  00A9                     	ds	1
  7708                           
  7709                           	psect	cstackCOMMON
  7710  0070                     __pcstackCOMMON:
  7711  0070                     ?_isdigit:
  7712  0070                     ?_i2c1_driver_open:	
  7713                           ; 1 bit 
  7714                           
  7715  0070                     ?_PMD_Initialize:	
  7716                           ; 1 bit 
  7717                           
  7718  0070                     ?_OSCILLATOR_Initialize:	
  7719                           ; 1 bytes @ 0x0
  7720                           
  7721  0070                     ?_PWM6_Initialize:	
  7722                           ; 1 bytes @ 0x0
  7723                           
  7724  0070                     ?_ADCC_Initialize:	
  7725                           ; 1 bytes @ 0x0
  7726                           
  7727  0070                     ?_TMR3_Initialize:	
  7728                           ; 1 bytes @ 0x0
  7729                           
  7730  0070                     ?_TMR2_Initialize:	
  7731                           ; 1 bytes @ 0x0
  7732                           
  7733  0070                     ?_TMR5_Initialize:	
  7734                           ; 1 bytes @ 0x0
  7735                           
  7736  0070                     ?_TMR1_Initialize:	
  7737                           ; 1 bytes @ 0x0
  7738                           
  7739  0070                     ?_TMR5_ISR:	
  7740                           ; 1 bytes @ 0x0
  7741                           
  7742  0070                     ?_TMR3_ISR:	
  7743                           ; 1 bytes @ 0x0
  7744                           
  7745  0070                     ?_TMR1_ISR:	
  7746                           ; 1 bytes @ 0x0
  7747                           
  7748  0070                     ?_TMR1_DefaultInterruptHandler:	
  7749                           ; 1 bytes @ 0x0
  7750                           
  7751  0070                     ??_TMR1_DefaultInterruptHandler:	
  7752                           ; 1 bytes @ 0x0
  7753                           
  7754  0070                     ?_TMR3_DefaultInterruptHandler:	
  7755                           ; 1 bytes @ 0x0
  7756                           
  7757  0070                     ??_TMR3_DefaultInterruptHandler:	
  7758                           ; 1 bytes @ 0x0
  7759                           
  7760  0070                     ?_TMR5_DefaultInterruptHandler:	
  7761                           ; 1 bytes @ 0x0
  7762                           
  7763  0070                     ??_TMR5_DefaultInterruptHandler:	
  7764                           ; 1 bytes @ 0x0
  7765                           
  7766  0070                     ??_isdigit:	
  7767                           ; 1 bytes @ 0x0
  7768                           
  7769  0070                     ?_ReadI2C:	
  7770                           ; 1 bytes @ 0x0
  7771                           
  7772  0070                     ??_ReadI2C:	
  7773                           ; 1 bytes @ 0x0
  7774                           
  7775  0070                     ?_WriteI2C:	
  7776                           ; 1 bytes @ 0x0
  7777                           
  7778  0070                     ?_PIN_MANAGER_Initialize:	
  7779                           ; 1 bytes @ 0x0
  7780                           
  7781  0070                     ?_SYSTEM_Initialize:	
  7782                           ; 1 bytes @ 0x0
  7783                           
  7784  0070                     ?_INTERRUPT_InterruptManager:	
  7785                           ; 1 bytes @ 0x0
  7786                           
  7787  0070                     ?_TMR1_WriteTimer:	
  7788                           ; 1 bytes @ 0x0
  7789                           
  7790  0070                     ?_TMR3_WriteTimer:	
  7791                           ; 1 bytes @ 0x0
  7792                           
  7793  0070                     ?_TMR5_WriteTimer:	
  7794                           ; 1 bytes @ 0x0
  7795                           
  7796  0070                     ?_PWM6_LoadDutyValue:	
  7797                           ; 1 bytes @ 0x0
  7798                           
  7799  0070                     ?_TMR2_Start:	
  7800                           ; 1 bytes @ 0x0
  7801                           
  7802  0070                     ??_TMR2_Start:	
  7803                           ; 1 bytes @ 0x0
  7804                           
  7805  0070                     ?_TMR2_StartTimer:	
  7806                           ; 1 bytes @ 0x0
  7807                           
  7808  0070                     ??_TMR2_StartTimer:	
  7809                           ; 1 bytes @ 0x0
  7810                           
  7811  0070                     ?_TMR2_Stop:	
  7812                           ; 1 bytes @ 0x0
  7813                           
  7814  0070                     ?_TMR2_StopTimer:	
  7815                           ; 1 bytes @ 0x0
  7816                           
  7817  0070                     ?_tsttc:	
  7818                           ; 1 bytes @ 0x0
  7819                           
  7820  0070                     ?_LCDsend:	
  7821                           ; 1 bytes @ 0x0
  7822                           
  7823  0070                     ?_LCDinit:	
  7824                           ; 1 bytes @ 0x0
  7825                           
  7826  0070                     ?_LCDcmd:	
  7827                           ; 1 bytes @ 0x0
  7828                           
  7829  0070                     ?_LCDchar:	
  7830                           ; 1 bytes @ 0x0
  7831                           
  7832  0070                     ?_LCDstr:	
  7833                           ; 1 bytes @ 0x0
  7834                           
  7835  0070                     ?_differenceBetweenTimePeriod:	
  7836                           ; 1 bytes @ 0x0
  7837                           
  7838  0070                     ?_PWM_Output_D4_Enable:	
  7839                           ; 1 bytes @ 0x0
  7840                           
  7841  0070                     ??_PWM_Output_D4_Enable:	
  7842                           ; 1 bytes @ 0x0
  7843                           
  7844  0070                     ?_PWM_Output_D4_Disable:	
  7845                           ; 1 bytes @ 0x0
  7846                           
  7847  0070                     ?_Clock_ISR:	
  7848                           ; 1 bytes @ 0x0
  7849                           
  7850  0070                     ??_Clock_ISR:	
  7851                           ; 1 bytes @ 0x0
  7852                           
  7853  0070                     ?_menuLCD_ISR:	
  7854                           ; 1 bytes @ 0x0
  7855                           
  7856  0070                     ?_monitoring_ISR:	
  7857                           ; 1 bytes @ 0x0
  7858                           
  7859  0070                     ?_editClock:	
  7860                           ; 1 bytes @ 0x0
  7861                           
  7862  0070                     ?_main:	
  7863                           ; 1 bytes @ 0x0
  7864                           
  7865  0070                     ?i1_WriteI2C:	
  7866                           ; 1 bytes @ 0x0
  7867                           
  7868  0070                     ??i1_WriteI2C:	
  7869                           ; 1 bytes @ 0x0
  7870                           
  7871  0070                     ?i1_TMR2_Stop:	
  7872                           ; 1 bytes @ 0x0
  7873                           
  7874  0070                     ??i1_TMR2_Stop:	
  7875                           ; 1 bytes @ 0x0
  7876                           
  7877  0070                     ?i1_TMR2_StopTimer:	
  7878                           ; 1 bytes @ 0x0
  7879                           
  7880  0070                     ??i1_TMR2_StopTimer:	
  7881                           ; 1 bytes @ 0x0
  7882                           
  7883  0070                     ?i1_PWM_Output_D4_Disable:	
  7884                           ; 1 bytes @ 0x0
  7885                           
  7886  0070                     ??i1_PWM_Output_D4_Disable:	
  7887                           ; 1 bytes @ 0x0
  7888                           
  7889  0070                     ?_ADCC_GetSingleConversion:	
  7890                           ; 1 bytes @ 0x0
  7891                           
  7892  0070                     ?___wmul:	
  7893                           ; 2 bytes @ 0x0
  7894                           
  7895  0070                     ?___lwdiv:	
  7896                           ; 2 bytes @ 0x0
  7897                           
  7898  0070                     _isdigit$2809:	
  7899                           ; 2 bytes @ 0x0
  7900                           
  7901  0070                     TMR1_WriteTimer@timerVal:	
  7902                           ; 1 bytes @ 0x0
  7903                           
  7904  0070                     TMR3_WriteTimer@timerVal:	
  7905                           ; 2 bytes @ 0x0
  7906                           
  7907  0070                     TMR5_WriteTimer@timerVal:	
  7908                           ; 2 bytes @ 0x0
  7909                           
  7910  0070                     PWM6_LoadDutyValue@dutyValue:	
  7911                           ; 2 bytes @ 0x0
  7912                           
  7913  0070                     ___wmul@multiplier:	
  7914                           ; 2 bytes @ 0x0
  7915                           
  7916  0070                     ___lwdiv@divisor:	
  7917                           ; 2 bytes @ 0x0
  7918                           
  7919  0070                     differenceBetweenTimePeriod@start:	
  7920                           ; 2 bytes @ 0x0
  7921                           
  7922                           
  7923                           ; 6 bytes @ 0x0
  7924  0070                     	ds	1
  7925  0071                     isdigit@c:
  7926  0071                     i1WriteI2C@data_out:	
  7927                           ; 1 bytes @ 0x1
  7928                           
  7929                           
  7930                           ; 1 bytes @ 0x1
  7931  0071                     	ds	1
  7932  0072                     ??_TMR1_ISR:
  7933  0072                     ??_TMR1_WriteTimer:	
  7934                           ; 1 bytes @ 0x2
  7935                           
  7936  0072                     ??_TMR3_WriteTimer:	
  7937                           ; 1 bytes @ 0x2
  7938                           
  7939  0072                     ??_TMR5_WriteTimer:	
  7940                           ; 1 bytes @ 0x2
  7941                           
  7942  0072                     ??_PWM6_LoadDutyValue:	
  7943                           ; 1 bytes @ 0x2
  7944                           
  7945  0072                     ??_tsttc:	
  7946                           ; 1 bytes @ 0x2
  7947                           
  7948  0072                     ?i1_LCDsend2x4:	
  7949                           ; 1 bytes @ 0x2
  7950                           
  7951  0072                     i1LCDsend2x4@mode:	
  7952                           ; 1 bytes @ 0x2
  7953                           
  7954  0072                     ___wmul@multiplicand:	
  7955                           ; 1 bytes @ 0x2
  7956                           
  7957  0072                     ___lwdiv@dividend:	
  7958                           ; 2 bytes @ 0x2
  7959                           
  7960                           
  7961                           ; 2 bytes @ 0x2
  7962  0072                     	ds	1
  7963  0073                     ??_ADCC_GetSingleConversion:
  7964  0073                     ??i1_LCDsend2x4:	
  7965                           ; 1 bytes @ 0x3
  7966                           
  7967  0073                     ADCC_GetSingleConversion@channel:	
  7968                           ; 1 bytes @ 0x3
  7969                           
  7970  0073                     tsttc@value:	
  7971                           ; 1 bytes @ 0x3
  7972                           
  7973                           
  7974                           ; 1 bytes @ 0x3
  7975  0073                     	ds	1
  7976  0074                     ??_monitoring_ISR:
  7977  0074                     ??___wmul:	
  7978                           ; 1 bytes @ 0x4
  7979                           
  7980  0074                     ??___lwdiv:	
  7981                           ; 1 bytes @ 0x4
  7982                           
  7983  0074                     ___wmul@product:	
  7984                           ; 1 bytes @ 0x4
  7985                           
  7986                           
  7987                           ; 2 bytes @ 0x4
  7988  0074                     	ds	1
  7989  0075                     i1LCDsend2x4@c:
  7990  0075                     ___lwdiv@quotient:	
  7991                           ; 1 bytes @ 0x5
  7992                           
  7993                           
  7994                           ; 2 bytes @ 0x5
  7995  0075                     	ds	1
  7996  0076                     i1LCDsend2x4@hc:
  7997  0076                     differenceBetweenTimePeriod@stop:	
  7998                           ; 1 bytes @ 0x6
  7999                           
  8000                           
  8001                           ; 6 bytes @ 0x6
  8002  0076                     	ds	1
  8003  0077                     ??_TMR5_ISR:
  8004  0077                     ___lwdiv@counter:	
  8005                           ; 1 bytes @ 0x7
  8006                           
  8007  0077                     i1LCDsend2x4@lc:	
  8008                           ; 1 bytes @ 0x7
  8009                           
  8010                           
  8011                           ; 1 bytes @ 0x7
  8012  0077                     	ds	1
  8013  0078                     ??_LCDcmd:
  8014  0078                     ??_LCDchar:	
  8015                           ; 1 bytes @ 0x8
  8016                           
  8017  0078                     ?___lwmod:	
  8018                           ; 1 bytes @ 0x8
  8019                           
  8020  0078                     LCDcmd@c:	
  8021                           ; 2 bytes @ 0x8
  8022                           
  8023  0078                     LCDchar@c:	
  8024                           ; 1 bytes @ 0x8
  8025                           
  8026  0078                     ___lwmod@divisor:	
  8027                           ; 1 bytes @ 0x8
  8028                           
  8029                           
  8030                           ; 2 bytes @ 0x8
  8031  0078                     	ds	1
  8032  0079                     ??_LCDstr:
  8033                           
  8034                           ; 1 bytes @ 0x9
  8035  0079                     	ds	1
  8036  007A                     LCDstr@c:
  8037  007A                     ___lwmod@dividend:	
  8038                           ; 1 bytes @ 0xA
  8039                           
  8040                           
  8041                           ; 2 bytes @ 0xA
  8042  007A                     	ds	1
  8043  007B                     LCDstr@p:
  8044                           
  8045                           ; 1 bytes @ 0xB
  8046  007B                     	ds	1
  8047  007C                     ??___lwmod:
  8048  007C                     differenceBetweenTimePeriod@diff:	
  8049                           ; 1 bytes @ 0xC
  8050                           
  8051                           
  8052                           ; 1 bytes @ 0xC
  8053  007C                     	ds	1
  8054  007D                     ___lwmod@counter:
  8055                           
  8056                           ; 1 bytes @ 0xD
  8057  007D                     	ds	1
  8058  007E                     ??_TMR3_ISR:
  8059  007E                     ??_INTERRUPT_InterruptManager:	
  8060                           ; 1 bytes @ 0xE
  8061                           
  8062                           
  8063                           	psect	cstackBANK0
  8064  0020                     __pcstackBANK0:	
  8065                           ; 1 bytes @ 0xE
  8066                           
  8067  0020                     ??_differenceBetweenTimePeriod:
  8068  0020                     ?_sprintf:	
  8069                           ; 1 bytes @ 0x0
  8070                           
  8071  0020                     sprintf@f:	
  8072                           ; 2 bytes @ 0x0
  8073                           
  8074                           
  8075                           ; 2 bytes @ 0x0
  8076  0020                     	ds	8
  8077  0028                     ??_sprintf:
  8078                           
  8079                           ; 1 bytes @ 0x8
  8080  0028                     	ds	4
  8081  002C                     sprintf@ap:
  8082                           
  8083                           ; 1 bytes @ 0xC
  8084  002C                     	ds	1
  8085  002D                     sprintf@prec:
  8086                           
  8087                           ; 1 bytes @ 0xD
  8088  002D                     	ds	1
  8089  002E                     sprintf@val:
  8090                           
  8091                           ; 2 bytes @ 0xE
  8092  002E                     	ds	2
  8093  0030                     sprintf@flag:
  8094                           
  8095                           ; 1 bytes @ 0x10
  8096  0030                     	ds	1
  8097  0031                     sprintf@width:
  8098                           
  8099                           ; 2 bytes @ 0x11
  8100  0031                     	ds	2
  8101  0033                     sprintf@sp:
  8102                           
  8103                           ; 1 bytes @ 0x13
  8104  0033                     	ds	1
  8105  0034                     sprintf@c:
  8106                           
  8107                           ; 1 bytes @ 0x14
  8108  0034                     	ds	1
  8109  0035                     ??_menuLCD_ISR:
  8110                           
  8111                           ; 1 bytes @ 0x15
  8112  0035                     	ds	2
  8113  0037                     menuLCD_ISR@str:
  8114                           
  8115                           ; 8 bytes @ 0x17
  8116  0037                     	ds	8
  8117  003F                     menuLCD_ISR@tt:
  8118                           
  8119                           ; 4 bytes @ 0x1F
  8120  003F                     	ds	4
  8121  0043                     menuLCD_ISR@l:
  8122                           
  8123                           ; 3 bytes @ 0x23
  8124  0043                     	ds	3
  8125  0046                     menuLCD_ISR@diff:
  8126                           
  8127                           ; 6 bytes @ 0x26
  8128  0046                     	ds	6
  8129                           
  8130                           	psect	maintext
  8131  06CD                     __pmaintext:	
  8132 ;;
  8133 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  8134 ;;
  8135 ;; *************** function _main *****************
  8136 ;; Defined at:
  8137 ;;		line 478 in file "main.c"
  8138 ;; Parameters:    Size  Location     Type
  8139 ;;		None
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;		None
  8142 ;; Return value:  Size  Location     Type
  8143 ;;                  1    wreg      void 
  8144 ;; Registers used:
  8145 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8146 ;; Tracked objects:
  8147 ;;		On entry : B1F/0
  8148 ;;		On exit  : 0/0
  8149 ;;		Unchanged: 0/0
  8150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8153 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8154 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8155 ;;Total ram usage:        1 bytes
  8156 ;; Hardware stack levels required when called:   10
  8157 ;; This function calls:
  8158 ;;		_LCDinit
  8159 ;;		_PWM_Output_D4_Disable
  8160 ;;		_SYSTEM_Initialize
  8161 ;;		_TMR1_SetInterruptHandler
  8162 ;;		_TMR2_StopTimer
  8163 ;;		_TMR3_SetInterruptHandler
  8164 ;;		_TMR5_SetInterruptHandler
  8165 ;;		_editClock
  8166 ;;		_i2c1_driver_open
  8167 ;; This function is called by:
  8168 ;;		Startup code after reset
  8169 ;; This function uses a non-reentrant model
  8170 ;;
  8171                           
  8172                           
  8173                           ;psect for function _main
  8174  06CD                     _main:
  8175  06CD                     l4273:	
  8176                           ;incstack = 0
  8177                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8178                           
  8179                           
  8180                           ;main.c: 481: SYSTEM_Initialize();
  8181  06CD  318C  24E4  3186   	fcall	_SYSTEM_Initialize
  8182  06D0                     l4275:
  8183                           
  8184                           ;main.c: 483: TMR2_StopTimer();
  8185  06D0  318B  236F  3186   	fcall	_TMR2_StopTimer
  8186  06D3                     l4277:
  8187                           
  8188                           ;main.c: 484: PWM_Output_D4_Disable();
  8189  06D3  318B  2361  3186   	fcall	_PWM_Output_D4_Disable
  8190                           
  8191                           ;main.c: 486: TMR1_SetInterruptHandler(Clock_ISR);
  8192  06D6  308E               	movlw	low _Clock_ISR
  8193  06D7  0021               	movlb	1	; select bank1
  8194  06D8  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  8195  06D9  300F               	movlw	high _Clock_ISR
  8196  06DA  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8197  06DB  318B  2373  3186   	fcall	_TMR1_SetInterruptHandler
  8198                           
  8199                           ;main.c: 488: TMR3_SetInterruptHandler(menuLCD_ISR);
  8200  06DE  306E               	movlw	low _menuLCD_ISR
  8201  06DF  0021               	movlb	1	; select bank1
  8202  06E0  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  8203  06E1  3000               	movlw	high _menuLCD_ISR
  8204  06E2  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8205  06E3  318B  23B1  3186   	fcall	_TMR3_SetInterruptHandler
  8206                           
  8207                           ;main.c: 490: TMR5_SetInterruptHandler(monitoring_ISR);
  8208  06E6  30EC               	movlw	low _monitoring_ISR
  8209  06E7  0021               	movlb	1	; select bank1
  8210  06E8  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
  8211  06E9  300D               	movlw	high _monitoring_ISR
  8212  06EA  00A1               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8213  06EB  318B  2379  3186   	fcall	_TMR5_SetInterruptHandler
  8214                           
  8215                           ;main.c: 492: i2c1_driver_open();
  8216  06EE  318B  23BA  3186   	fcall	_i2c1_driver_open
  8217  06F1                     l4279:
  8218                           
  8219                           ;main.c: 493: TRISCbits.TRISC3 = 1;
  8220  06F1  0020               	movlb	0	; select bank0
  8221  06F2  1593               	bsf	19,3	;volatile
  8222  06F3                     l4281:
  8223                           
  8224                           ;main.c: 494: TRISCbits.TRISC4 = 1;
  8225  06F3  1613               	bsf	19,4	;volatile
  8226  06F4                     l4283:
  8227                           
  8228                           ;main.c: 495: WPUC3 = 1;
  8229  06F4  003E               	movlb	30	; select bank30
  8230  06F5  15CF               	bsf	79,3	;volatile
  8231  06F6                     l4285:
  8232                           
  8233                           ;main.c: 496: WPUC4 = 1;
  8234  06F6  164F               	bsf	79,4	;volatile
  8235                           
  8236                           ;main.c: 497: LCDinit();
  8237  06F7  3187  274D  3186   	fcall	_LCDinit
  8238  06FA                     l4287:
  8239                           
  8240                           ;main.c: 500: (INTCONbits.GIE = 1);
  8241  06FA  178B               	bsf	11,7	;volatile
  8242  06FB                     l4289:
  8243                           
  8244                           ;main.c: 503: (INTCONbits.PEIE = 1);
  8245  06FB  170B               	bsf	11,6	;volatile
  8246  06FC                     l4291:
  8247                           
  8248                           ;main.c: 506: {;main.c: 507: if(PORTBbits.RB4 == 0){
  8249  06FC  0020               	movlb	0	; select bank0
  8250  06FD  1A0D               	btfsc	13,4	;volatile
  8251  06FE  2F00               	goto	u4131
  8252  06FF  2F01               	goto	u4130
  8253  0700                     u4131:
  8254  0700  2F34               	goto	l4311
  8255  0701                     u4130:
  8256  0701                     l4293:
  8257                           
  8258                           ;main.c: 508: _delay((unsigned long)((50)*(1000000/4000.0)));
  8259  0701  3011               	movlw	17
  8260  0702  0021               	movlb	1	; select bank1
  8261  0703  00A9               	movwf	??_main^(0+128)
  8262  0704  303A               	movlw	58
  8263  0705                     u4197:
  8264  0705  0B89               	decfsz	9,f
  8265  0706  2F05               	goto	u4197
  8266  0707  0BA9               	decfsz	??_main^(0+128),f
  8267  0708  2F05               	goto	u4197
  8268  0709  0000               	nop
  8269  070A                     l4295:
  8270                           
  8271                           ;main.c: 510: if(mode == 0 && (clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigger
      +                          )){
  8272  070A  0021               	movlb	1	; select bank1
  8273  070B  0838               	movf	_mode^(0+128),w
  8274  070C  0439               	iorwf	(_mode+1)^(0+128),w
  8275  070D  1D03               	btfss	3,2
  8276  070E  2F10               	goto	u4141
  8277  070F  2F11               	goto	u4140
  8278  0710                     u4141:
  8279  0710  2F25               	goto	l4305
  8280  0711                     u4140:
  8281  0711                     l4297:
  8282  0711  0020               	movlb	0	; select bank0
  8283  0712  0865               	movf	_clkAlarm+6,w
  8284  0713  1D03               	btfss	3,2
  8285  0714  2F16               	goto	u4151
  8286  0715  2F17               	goto	u4150
  8287  0716                     u4151:
  8288  0716  2F21               	goto	l4303
  8289  0717                     u4150:
  8290  0717                     l4299:
  8291  0717  0869               	movf	_tempAlarm+1,w
  8292  0718  1D03               	btfss	3,2
  8293  0719  2F1B               	goto	u4161
  8294  071A  2F1C               	goto	u4160
  8295  071B                     u4161:
  8296  071B  2F21               	goto	l4303
  8297  071C                     u4160:
  8298  071C                     l4301:
  8299  071C  0867               	movf	_lumAlarm+1,w
  8300  071D  1903               	btfsc	3,2
  8301  071E  2F20               	goto	u4171
  8302  071F  2F21               	goto	u4170
  8303  0720                     u4171:
  8304  0720  2F25               	goto	l4305
  8305  0721                     u4170:
  8306  0721                     l4303:
  8307                           
  8308                           ;main.c: 511: clkAlarm.trigger = 0;
  8309  0721  01E5               	clrf	_clkAlarm+6
  8310                           
  8311                           ;main.c: 512: tempAlarm.trigger = 0;
  8312  0722  01E9               	clrf	_tempAlarm+1
  8313                           
  8314                           ;main.c: 513: lumAlarm.trigger = 0;
  8315  0723  01E7               	clrf	_lumAlarm+1
  8316                           
  8317                           ;main.c: 514: }
  8318  0724  2F2A               	goto	l1209
  8319  0725                     l4305:
  8320                           
  8321                           ;main.c: 515: else{;main.c: 516: mode = 1;
  8322  0725  3001               	movlw	1
  8323  0726  0021               	movlb	1	; select bank1
  8324  0727  00B8               	movwf	_mode^(0+128)
  8325  0728  3000               	movlw	0
  8326  0729  00B9               	movwf	(_mode^(0+128)+1)
  8327  072A                     l1209:
  8328  072A  0020               	movlb	0	; select bank0
  8329  072B  1E0D               	btfss	13,4	;volatile
  8330  072C  2F2E               	goto	u4181
  8331  072D  2F2F               	goto	u4180
  8332  072E                     u4181:
  8333  072E  2F2A               	goto	l1209
  8334  072F                     u4180:
  8335  072F  2F34               	goto	l4311
  8336  0730                     l4307:
  8337                           
  8338                           ;main.c: 524: editClock();
  8339  0730  3186  263F  3186   	fcall	_editClock
  8340  0733  2EFC               	goto	l4291
  8341  0734                     l4311:
  8342                           
  8343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8344                           ; Switch size 1, requested type "simple"
  8345                           ; Number of cases is 1, Range of values is 0 to 0
  8346                           ; switch strategies available:
  8347                           ; Name         Instructions Cycles
  8348                           ; simple_byte            4     3 (average)
  8349                           ; direct_byte            8     6 (fixed)
  8350                           ; jumptable            260     6 (fixed)
  8351                           ;	Chosen strategy is simple_byte
  8352  0734  0021               	movlb	1	; select bank1
  8353  0735  0839               	movf	(_mode+1)^(0+128),w
  8354  0736  3A00               	xorlw	0	; case 0
  8355  0737  1903               	skipnz
  8356  0738  2F3A               	goto	l4349
  8357  0739  2EFC               	goto	l4291
  8358  073A                     l4349:
  8359                           
  8360                           ; Switch size 1, requested type "simple"
  8361                           ; Number of cases is 5, Range of values is 0 to 4
  8362                           ; switch strategies available:
  8363                           ; Name         Instructions Cycles
  8364                           ; direct_byte           16     6 (fixed)
  8365                           ; simple_byte           16     9 (average)
  8366                           ; jumptable            260     6 (fixed)
  8367                           ;	Chosen strategy is simple_byte
  8368  073A  0838               	movf	_mode^(0+128),w
  8369  073B  3A00               	xorlw	0	; case 0
  8370  073C  1903               	skipnz
  8371  073D  2EFC               	goto	l4291
  8372  073E  3A01               	xorlw	1	; case 1
  8373  073F  1903               	skipnz
  8374  0740  2F30               	goto	l4307
  8375  0741  3A03               	xorlw	3	; case 2
  8376  0742  1903               	skipnz
  8377  0743  2EFC               	goto	l4291
  8378  0744  3A01               	xorlw	1	; case 3
  8379  0745  1903               	skipnz
  8380  0746  2EFC               	goto	l4291
  8381  0747  3A07               	xorlw	7	; case 4
  8382  0748  1903               	skipnz
  8383  0749  2EFC               	goto	l4291
  8384  074A  2EFC               	goto	l4291
  8385  074B  3180  2840         	ljmp	start
  8386  074D                     __end_of_main:
  8387                           
  8388                           	psect	text1
  8389  0BBA                     __ptext1:	
  8390 ;; *************** function _i2c1_driver_open *****************
  8391 ;; Defined at:
  8392 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  8393 ;; Parameters:    Size  Location     Type
  8394 ;;		None
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;		None
  8397 ;; Return value:  Size  Location     Type
  8398 ;;		None               void
  8399 ;; Registers used:
  8400 ;;		wreg, status,2
  8401 ;; Tracked objects:
  8402 ;;		On entry : 0/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8410 ;;Total ram usage:        0 bytes
  8411 ;; Hardware stack levels used:    1
  8412 ;; Hardware stack levels required when called:    7
  8413 ;; This function calls:
  8414 ;;		Nothing
  8415 ;; This function is called by:
  8416 ;;		_main
  8417 ;; This function uses a non-reentrant model
  8418 ;;
  8419                           
  8420                           
  8421                           ;psect for function _i2c1_driver_open
  8422  0BBA                     _i2c1_driver_open:
  8423  0BBA                     l4057:	
  8424                           ;incstack = 0
  8425                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  8426                           
  8427                           
  8428                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
  8429  0BBA  0023               	movlb	3	; select bank3
  8430  0BBB  1A90               	btfsc	16,5	;volatile
  8431  0BBC  2BBE               	goto	u3621
  8432  0BBD  2BBF               	goto	u3620
  8433  0BBE                     u3621:
  8434  0BBE  2BC5               	goto	l239
  8435  0BBF                     u3620:
  8436  0BBF                     l4059:
  8437                           
  8438                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
  8439  0BBF  018F               	clrf	15	;volatile
  8440  0BC0                     l4061:
  8441                           
  8442                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
  8443  0BC0  3028               	movlw	40
  8444  0BC1  0090               	movwf	16	;volatile
  8445  0BC2                     l4063:
  8446                           
  8447                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
  8448  0BC2  0191               	clrf	17	;volatile
  8449                           
  8450                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
  8451  0BC3  3003               	movlw	3
  8452  0BC4  008D               	movwf	13	;volatile
  8453  0BC5                     l239:
  8454  0BC5  0008               	return
  8455  0BC6                     __end_of_i2c1_driver_open:
  8456                           
  8457                           	psect	text2
  8458  063F                     __ptext2:	
  8459 ;; *************** function _editClock *****************
  8460 ;; Defined at:
  8461 ;;		line 437 in file "main.c"
  8462 ;; Parameters:    Size  Location     Type
  8463 ;;		None
  8464 ;; Auto vars:     Size  Location     Type
  8465 ;;		None
  8466 ;; Return value:  Size  Location     Type
  8467 ;;                  1    wreg      void 
  8468 ;; Registers used:
  8469 ;;		wreg, status,2, status,0
  8470 ;; Tracked objects:
  8471 ;;		On entry : 0/0
  8472 ;;		On exit  : 0/0
  8473 ;;		Unchanged: 0/0
  8474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8477 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8478 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8479 ;;Total ram usage:        1 bytes
  8480 ;; Hardware stack levels used:    1
  8481 ;; Hardware stack levels required when called:    7
  8482 ;; This function calls:
  8483 ;;		Nothing
  8484 ;; This function is called by:
  8485 ;;		_main
  8486 ;; This function uses a non-reentrant model
  8487 ;;
  8488                           
  8489                           
  8490                           ;psect for function _editClock
  8491  063F                     _editClock:
  8492  063F                     l4197:	
  8493                           ;incstack = 0
  8494                           ; Regs used in _editClock: [wreg+status,2+status,0]
  8495                           
  8496                           
  8497                           ;main.c: 439: editingClockAlarm = 1;
  8498  063F  3001               	movlw	1
  8499  0640  0020               	movlb	0	; select bank0
  8500  0641  00D2               	movwf	_editingClockAlarm
  8501  0642  3000               	movlw	0
  8502  0643  00D3               	movwf	_editingClockAlarm+1
  8503  0644                     l4199:
  8504                           
  8505                           ;main.c: 442: if(PORTBbits.RB4 == 0){
  8506  0644  0020               	movlb	0	; select bank0
  8507  0645  1A0D               	btfsc	13,4	;volatile
  8508  0646  2E48               	goto	u3931
  8509  0647  2E49               	goto	u3930
  8510  0648                     u3931:
  8511  0648  2E74               	goto	l1179
  8512  0649                     u3930:
  8513  0649                     l4201:
  8514                           
  8515                           ;main.c: 443: _delay((unsigned long)((50)*(1000000/4000.0)));
  8516  0649  3011               	movlw	17
  8517  064A  0021               	movlb	1	; select bank1
  8518  064B  00A0               	movwf	??_editClock^(0+128)
  8519  064C  303A               	movlw	58
  8520  064D                     u4207:
  8521  064D  0B89               	decfsz	9,f
  8522  064E  2E4D               	goto	u4207
  8523  064F  0BA0               	decfsz	??_editClock^(0+128),f
  8524  0650  2E4D               	goto	u4207
  8525  0651  0000               	nop
  8526                           
  8527                           ;main.c: 444: editingClockAlarm++;
  8528  0652  3001               	movlw	1
  8529  0653  0020               	movlb	0	; select bank0
  8530  0654  07D2               	addwf	_editingClockAlarm,f
  8531  0655  3000               	movlw	0
  8532  0656  3DD3               	addwfc	_editingClockAlarm+1,f
  8533                           
  8534                           ;main.c: 445: if(editingClockAlarm > 3){
  8535  0657  0853               	movf	_editingClockAlarm+1,w
  8536  0658  3A80               	xorlw	128
  8537  0659  0021               	movlb	1	; select bank1
  8538  065A  00A0               	movwf	??_editClock^(0+128)
  8539  065B  3080               	movlw	128
  8540  065C  0220               	subwf	??_editClock^(0+128),w
  8541  065D  1D03               	skipz
  8542  065E  2E62               	goto	u3945
  8543  065F  3004               	movlw	4
  8544  0660  0020               	movlb	0	; select bank0
  8545  0661  0252               	subwf	_editingClockAlarm,w
  8546  0662                     u3945:
  8547  0662  1C03               	skipc
  8548  0663  2E65               	goto	u3941
  8549  0664  2E66               	goto	u3940
  8550  0665                     u3941:
  8551  0665  2E6F               	goto	l1182
  8552  0666                     u3940:
  8553  0666                     l4203:
  8554                           
  8555                           ;main.c: 446: editingClockAlarm = 0;
  8556  0666  0020               	movlb	0	; select bank0
  8557  0667  01D2               	clrf	_editingClockAlarm
  8558  0668  01D3               	clrf	_editingClockAlarm+1
  8559  0669                     l4205:
  8560                           
  8561                           ;main.c: 447: mode++;
  8562  0669  3001               	movlw	1
  8563  066A  0021               	movlb	1	; select bank1
  8564  066B  07B8               	addwf	_mode^(0+128),f
  8565  066C  3000               	movlw	0
  8566  066D  3DB9               	addwfc	(_mode+1)^(0+128),f
  8567                           
  8568                           ;main.c: 448: break;
  8569  066E  2ECC               	goto	l1198
  8570  066F                     l1182:
  8571  066F  0020               	movlb	0	; select bank0
  8572  0670  1E0D               	btfss	13,4	;volatile
  8573  0671  2E73               	goto	u3951
  8574  0672  2E74               	goto	u3950
  8575  0673                     u3951:
  8576  0673  2E6F               	goto	l1182
  8577  0674                     u3950:
  8578  0674                     l1179:
  8579                           
  8580                           ;main.c: 451: };main.c: 453: if(PORTCbits.RC5 == 0){
  8581  0674  1A8E               	btfsc	14,5	;volatile
  8582  0675  2E77               	goto	u3961
  8583  0676  2E78               	goto	u3960
  8584  0677                     u3961:
  8585  0677  2E44               	goto	l4199
  8586  0678                     u3960:
  8587  0678                     l4207:
  8588                           
  8589                           ;main.c: 454: if(editingClockAlarm == 1){
  8590  0678  0352               	decf	_editingClockAlarm,w
  8591  0679  0453               	iorwf	_editingClockAlarm+1,w
  8592  067A  1D03               	btfss	3,2
  8593  067B  2E7D               	goto	u3971
  8594  067C  2E7E               	goto	u3970
  8595  067D                     u3971:
  8596  067D  2E97               	goto	l4215
  8597  067E                     u3970:
  8598  067E                     l4209:
  8599                           
  8600                           ;main.c: 455: if(clkAlarm.alarmVal.h >= 23){
  8601  067E  0860               	movf	_clkAlarm+1,w
  8602  067F  3A80               	xorlw	128
  8603  0680  0021               	movlb	1	; select bank1
  8604  0681  00A0               	movwf	??_editClock^(0+128)
  8605  0682  3080               	movlw	128
  8606  0683  0220               	subwf	??_editClock^(0+128),w
  8607  0684  1D03               	skipz
  8608  0685  2E89               	goto	u3985
  8609  0686  3017               	movlw	23
  8610  0687  0020               	movlb	0	; select bank0
  8611  0688  025F               	subwf	_clkAlarm,w
  8612  0689                     u3985:
  8613  0689  1C03               	skipc
  8614  068A  2E8C               	goto	u3981
  8615  068B  2E8D               	goto	u3980
  8616  068C                     u3981:
  8617  068C  2E91               	goto	l4213
  8618  068D                     u3980:
  8619  068D                     l4211:
  8620                           
  8621                           ;main.c: 456: clkAlarm.alarmVal.h = 0;
  8622  068D  0020               	movlb	0	; select bank0
  8623  068E  01DF               	clrf	_clkAlarm
  8624  068F  01E0               	clrf	_clkAlarm+1
  8625                           
  8626                           ;main.c: 457: } else{
  8627  0690  2EC2               	goto	l1189
  8628  0691                     l4213:
  8629                           
  8630                           ;main.c: 458: clkAlarm.alarmVal.h++;
  8631  0691  3001               	movlw	1
  8632  0692  0020               	movlb	0	; select bank0
  8633  0693  07DF               	addwf	_clkAlarm,f
  8634  0694  3000               	movlw	0
  8635  0695  3DE0               	addwfc	_clkAlarm+1,f
  8636  0696  2EC2               	goto	l1189
  8637  0697                     l4215:
  8638  0697  3002               	movlw	2
  8639  0698  0652               	xorwf	_editingClockAlarm,w
  8640  0699  0453               	iorwf	_editingClockAlarm+1,w
  8641  069A  1D03               	btfss	3,2
  8642  069B  2E9D               	goto	u3991
  8643  069C  2E9E               	goto	u3990
  8644  069D                     u3991:
  8645  069D  2EAD               	goto	l4223
  8646  069E                     u3990:
  8647  069E                     l4217:
  8648                           
  8649                           ;main.c: 461: if(clkAlarm.alarmVal.m == 59){
  8650  069E  303B               	movlw	59
  8651  069F  0661               	xorwf	_clkAlarm+2,w
  8652  06A0  0462               	iorwf	_clkAlarm+3,w
  8653  06A1  1D03               	btfss	3,2
  8654  06A2  2EA4               	goto	u4001
  8655  06A3  2EA5               	goto	u4000
  8656  06A4                     u4001:
  8657  06A4  2EA8               	goto	l4221
  8658  06A5                     u4000:
  8659  06A5                     l4219:
  8660                           
  8661                           ;main.c: 462: clkAlarm.alarmVal.m = 0;
  8662  06A5  01E1               	clrf	_clkAlarm+2
  8663  06A6  01E2               	clrf	_clkAlarm+3
  8664                           
  8665                           ;main.c: 463: } else{
  8666  06A7  2EC2               	goto	l1189
  8667  06A8                     l4221:
  8668                           
  8669                           ;main.c: 464: clkAlarm.alarmVal.m++;
  8670  06A8  3001               	movlw	1
  8671  06A9  07E1               	addwf	_clkAlarm+2,f
  8672  06AA  3000               	movlw	0
  8673  06AB  3DE2               	addwfc	_clkAlarm+3,f
  8674  06AC  2EC2               	goto	l1189
  8675  06AD                     l4223:
  8676  06AD  3003               	movlw	3
  8677  06AE  0652               	xorwf	_editingClockAlarm,w
  8678  06AF  0453               	iorwf	_editingClockAlarm+1,w
  8679  06B0  1D03               	btfss	3,2
  8680  06B1  2EB3               	goto	u4011
  8681  06B2  2EB4               	goto	u4010
  8682  06B3                     u4011:
  8683  06B3  2EC2               	goto	l1189
  8684  06B4                     u4010:
  8685  06B4                     l4225:
  8686                           
  8687                           ;main.c: 467: if(clkAlarm.alarmVal.s == 59){
  8688  06B4  303B               	movlw	59
  8689  06B5  0663               	xorwf	_clkAlarm+4,w
  8690  06B6  0464               	iorwf	_clkAlarm+5,w
  8691  06B7  1D03               	btfss	3,2
  8692  06B8  2EBA               	goto	u4021
  8693  06B9  2EBB               	goto	u4020
  8694  06BA                     u4021:
  8695  06BA  2EBE               	goto	l4229
  8696  06BB                     u4020:
  8697  06BB                     l4227:
  8698                           
  8699                           ;main.c: 468: clkAlarm.alarmVal.s = 0;
  8700  06BB  01E3               	clrf	_clkAlarm+4
  8701  06BC  01E4               	clrf	_clkAlarm+5
  8702                           
  8703                           ;main.c: 469: } else{
  8704  06BD  2EC2               	goto	l1189
  8705  06BE                     l4229:
  8706                           
  8707                           ;main.c: 470: clkAlarm.alarmVal.s++;
  8708  06BE  3001               	movlw	1
  8709  06BF  07E3               	addwf	_clkAlarm+4,f
  8710  06C0  3000               	movlw	0
  8711  06C1  3DE4               	addwfc	_clkAlarm+5,f
  8712  06C2                     l1189:
  8713                           
  8714                           ;main.c: 471: };main.c: 472: };main.c: 473: _delay((unsigned long)((50)*(1000000/4000.0)
      +                          ));
  8715  06C2  3011               	movlw	17
  8716  06C3  0021               	movlb	1	; select bank1
  8717  06C4  00A0               	movwf	??_editClock^(0+128)
  8718  06C5  303A               	movlw	58
  8719  06C6                     u4217:
  8720  06C6  0B89               	decfsz	9,f
  8721  06C7  2EC6               	goto	u4217
  8722  06C8  0BA0               	decfsz	??_editClock^(0+128),f
  8723  06C9  2EC6               	goto	u4217
  8724  06CA  0000               	nop
  8725  06CB  2E44               	goto	l4199
  8726  06CC                     l1198:
  8727  06CC  0008               	return
  8728  06CD                     __end_of_editClock:
  8729                           
  8730                           	psect	text3
  8731  0B6F                     __ptext3:	
  8732 ;; *************** function _TMR2_StopTimer *****************
  8733 ;; Defined at:
  8734 ;;		line 117 in file "mcc_generated_files/tmr2.c"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;		None
  8737 ;; Auto vars:     Size  Location     Type
  8738 ;;		None
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  1    wreg      void 
  8741 ;; Registers used:
  8742 ;;		status,2, status,0, pclath, cstack
  8743 ;; Tracked objects:
  8744 ;;		On entry : 0/0
  8745 ;;		On exit  : 0/0
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8752 ;;Total ram usage:        0 bytes
  8753 ;; Hardware stack levels used:    1
  8754 ;; Hardware stack levels required when called:    8
  8755 ;; This function calls:
  8756 ;;		_TMR2_Stop
  8757 ;; This function is called by:
  8758 ;;		_main
  8759 ;; This function uses a non-reentrant model
  8760 ;;
  8761                           
  8762                           
  8763                           ;psect for function _TMR2_StopTimer
  8764  0B6F                     _TMR2_StopTimer:
  8765  0B6F                     l4093:	
  8766                           ;incstack = 0
  8767                           ; Regs used in _TMR2_StopTimer: [status,2+status,0+pclath+cstack]
  8768                           
  8769                           
  8770                           ;tmr2.c: 119: TMR2_Stop();
  8771  0B6F  318B  2364  318B   	fcall	_TMR2_Stop
  8772  0B72                     l767:
  8773  0B72  0008               	return
  8774  0B73                     __end_of_TMR2_StopTimer:
  8775                           
  8776                           	psect	text4
  8777  0B64                     __ptext4:	
  8778 ;; *************** function _TMR2_Stop *****************
  8779 ;; Defined at:
  8780 ;;		line 111 in file "mcc_generated_files/tmr2.c"
  8781 ;; Parameters:    Size  Location     Type
  8782 ;;		None
  8783 ;; Auto vars:     Size  Location     Type
  8784 ;;		None
  8785 ;; Return value:  Size  Location     Type
  8786 ;;                  1    wreg      void 
  8787 ;; Registers used:
  8788 ;;		None
  8789 ;; Tracked objects:
  8790 ;;		On entry : 0/0
  8791 ;;		On exit  : 0/0
  8792 ;;		Unchanged: 0/0
  8793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8798 ;;Total ram usage:        0 bytes
  8799 ;; Hardware stack levels used:    1
  8800 ;; Hardware stack levels required when called:    7
  8801 ;; This function calls:
  8802 ;;		Nothing
  8803 ;; This function is called by:
  8804 ;;		_TMR2_StopTimer
  8805 ;; This function uses a non-reentrant model
  8806 ;;
  8807                           
  8808                           
  8809                           ;psect for function _TMR2_Stop
  8810  0B64                     _TMR2_Stop:
  8811  0B64                     l3847:	
  8812                           ;incstack = 0
  8813                           ; Regs used in _TMR2_Stop: []
  8814                           
  8815                           
  8816                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
  8817  0B64  0025               	movlb	5	; select bank5
  8818  0B65  138E               	bcf	14,7	;volatile
  8819  0B66                     l764:
  8820  0B66  0008               	return
  8821  0B67                     __end_of_TMR2_Stop:
  8822                           
  8823                           	psect	text5
  8824  0CE4                     __ptext5:	
  8825 ;; *************** function _SYSTEM_Initialize *****************
  8826 ;; Defined at:
  8827 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;		None
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;		None
  8832 ;; Return value:  Size  Location     Type
  8833 ;;                  1    wreg      void 
  8834 ;; Registers used:
  8835 ;;		wreg, status,2, status,0, pclath, cstack
  8836 ;; Tracked objects:
  8837 ;;		On entry : 0/0
  8838 ;;		On exit  : 0/0
  8839 ;;		Unchanged: 0/0
  8840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8845 ;;Total ram usage:        0 bytes
  8846 ;; Hardware stack levels used:    1
  8847 ;; Hardware stack levels required when called:    9
  8848 ;; This function calls:
  8849 ;;		_ADCC_Initialize
  8850 ;;		_OSCILLATOR_Initialize
  8851 ;;		_PIN_MANAGER_Initialize
  8852 ;;		_PMD_Initialize
  8853 ;;		_PWM6_Initialize
  8854 ;;		_TMR1_Initialize
  8855 ;;		_TMR2_Initialize
  8856 ;;		_TMR3_Initialize
  8857 ;;		_TMR5_Initialize
  8858 ;; This function is called by:
  8859 ;;		_main
  8860 ;; This function uses a non-reentrant model
  8861 ;;
  8862                           
  8863                           
  8864                           ;psect for function _SYSTEM_Initialize
  8865  0CE4                     _SYSTEM_Initialize:
  8866  0CE4                     l4039:	
  8867                           ;incstack = 0
  8868                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8869                           
  8870                           
  8871                           ;mcc.c: 52: PMD_Initialize();
  8872  0CE4  318B  23A0  318C   	fcall	_PMD_Initialize
  8873  0CE7                     l4041:
  8874                           
  8875                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  8876  0CE7  3187  27C3  318C   	fcall	_PIN_MANAGER_Initialize
  8877  0CEA                     l4043:
  8878                           
  8879                           ;mcc.c: 54: OSCILLATOR_Initialize();
  8880  0CEA  318B  23A8  318C   	fcall	_OSCILLATOR_Initialize
  8881  0CED                     l4045:
  8882                           
  8883                           ;mcc.c: 55: PWM6_Initialize();
  8884  0CED  318B  23D2  318C   	fcall	_PWM6_Initialize
  8885  0CF0                     l4047:
  8886                           
  8887                           ;mcc.c: 56: ADCC_Initialize();
  8888  0CF0  318C  24B3  318C   	fcall	_ADCC_Initialize
  8889  0CF3                     l4049:
  8890                           
  8891                           ;mcc.c: 57: TMR3_Initialize();
  8892  0CF3  318D  253E  318C   	fcall	_TMR3_Initialize
  8893  0CF6                     l4051:
  8894                           
  8895                           ;mcc.c: 58: TMR2_Initialize();
  8896  0CF6  318B  23DF  318C   	fcall	_TMR2_Initialize
  8897  0CF9                     l4053:
  8898                           
  8899                           ;mcc.c: 59: TMR5_Initialize();
  8900  0CF9  318D  255D  318C   	fcall	_TMR5_Initialize
  8901  0CFC                     l4055:
  8902                           
  8903                           ;mcc.c: 60: TMR1_Initialize();
  8904  0CFC  318D  251F  318C   	fcall	_TMR1_Initialize
  8905  0CFF                     l172:
  8906  0CFF  0008               	return
  8907  0D00                     __end_of_SYSTEM_Initialize:
  8908                           
  8909                           	psect	text6
  8910  0D5D                     __ptext6:	
  8911 ;; *************** function _TMR5_Initialize *****************
  8912 ;; Defined at:
  8913 ;;		line 64 in file "mcc_generated_files/tmr5.c"
  8914 ;; Parameters:    Size  Location     Type
  8915 ;;		None
  8916 ;; Auto vars:     Size  Location     Type
  8917 ;;		None
  8918 ;; Return value:  Size  Location     Type
  8919 ;;                  1    wreg      void 
  8920 ;; Registers used:
  8921 ;;		wreg, status,2, status,0, pclath, cstack
  8922 ;; Tracked objects:
  8923 ;;		On entry : 0/0
  8924 ;;		On exit  : 0/0
  8925 ;;		Unchanged: 0/0
  8926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8931 ;;Total ram usage:        0 bytes
  8932 ;; Hardware stack levels used:    1
  8933 ;; Hardware stack levels required when called:    8
  8934 ;; This function calls:
  8935 ;;		_TMR5_SetInterruptHandler
  8936 ;; This function is called by:
  8937 ;;		_SYSTEM_Initialize
  8938 ;; This function uses a non-reentrant model
  8939 ;;
  8940                           
  8941                           
  8942                           ;psect for function _TMR5_Initialize
  8943  0D5D                     _TMR5_Initialize:
  8944  0D5D                     l3769:	
  8945                           ;incstack = 0
  8946                           ; Regs used in _TMR5_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8947                           
  8948                           
  8949                           ;tmr5.c: 69: T5GCON = 0x00;
  8950  0D5D  0024               	movlb	4	; select bank4
  8951  0D5E  019B               	clrf	27	;volatile
  8952                           
  8953                           ;tmr5.c: 72: T5GATE = 0x00;
  8954  0D5F  019C               	clrf	28	;volatile
  8955  0D60                     l3771:
  8956                           
  8957                           ;tmr5.c: 75: T5CLK = 0x04;
  8958  0D60  3004               	movlw	4
  8959  0D61  009D               	movwf	29	;volatile
  8960  0D62                     l3773:
  8961                           
  8962                           ;tmr5.c: 79: TMR5H = 0x4A;
  8963  0D62  304A               	movlw	74
  8964  0D63  0099               	movwf	25	;volatile
  8965  0D64                     l3775:
  8966                           
  8967                           ;tmr5.c: 82: TMR5L = 0x5C;
  8968  0D64  305C               	movlw	92
  8969  0D65  0098               	movwf	24	;volatile
  8970  0D66                     l3777:
  8971                           
  8972                           ;tmr5.c: 85: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  8973  0D66  0819               	movf	25,w	;volatile
  8974  0D67  0021               	movlb	1	; select bank1
  8975  0D68  00AD               	movwf	(_timer5ReloadVal+1)^(0+128)	;volatile
  8976  0D69  0024               	movlb	4	; select bank4
  8977  0D6A  0818               	movf	24,w	;volatile
  8978  0D6B  0021               	movlb	1	; select bank1
  8979  0D6C  00AC               	movwf	_timer5ReloadVal^(0+128)	;volatile
  8980  0D6D                     l3779:
  8981                           
  8982                           ;tmr5.c: 88: PIR4bits.TMR5IF = 0;
  8983  0D6D  002E               	movlb	14	; select bank14
  8984  0D6E  1210               	bcf	16,4	;volatile
  8985  0D6F                     l3781:
  8986                           
  8987                           ;tmr5.c: 91: PIE4bits.TMR5IE = 1;
  8988  0D6F  161A               	bsf	26,4	;volatile
  8989  0D70                     l3783:
  8990                           
  8991                           ;tmr5.c: 94: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
  8992  0D70  3003               	movlw	low _TMR5_DefaultInterruptHandler
  8993  0D71  0021               	movlb	1	; select bank1
  8994  0D72  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
  8995  0D73  3000               	movlw	high _TMR5_DefaultInterruptHandler
  8996  0D74  00A1               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8997  0D75  318B  2379  318D   	fcall	_TMR5_SetInterruptHandler
  8998  0D78                     l3785:
  8999                           
  9000                           ;tmr5.c: 97: T5CON = 0x11;
  9001  0D78  3011               	movlw	17
  9002  0D79  0024               	movlb	4	; select bank4
  9003  0D7A  009A               	movwf	26	;volatile
  9004  0D7B                     l675:
  9005  0D7B  0008               	return
  9006  0D7C                     __end_of_TMR5_Initialize:
  9007                           
  9008                           	psect	text7
  9009  0B79                     __ptext7:	
  9010 ;; *************** function _TMR5_SetInterruptHandler *****************
  9011 ;; Defined at:
  9012 ;;		line 179 in file "mcc_generated_files/tmr5.c"
  9013 ;; Parameters:    Size  Location     Type
  9014 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  9015 ;;		 -> monitoring_ISR(1), TMR5_DefaultInterruptHandler(1), 
  9016 ;; Auto vars:     Size  Location     Type
  9017 ;;		None
  9018 ;; Return value:  Size  Location     Type
  9019 ;;                  1    wreg      void 
  9020 ;; Registers used:
  9021 ;;		wreg
  9022 ;; Tracked objects:
  9023 ;;		On entry : 0/0
  9024 ;;		On exit  : 0/0
  9025 ;;		Unchanged: 0/0
  9026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9027 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9030 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9031 ;;Total ram usage:        2 bytes
  9032 ;; Hardware stack levels used:    1
  9033 ;; Hardware stack levels required when called:    7
  9034 ;; This function calls:
  9035 ;;		Nothing
  9036 ;; This function is called by:
  9037 ;;		_TMR5_Initialize
  9038 ;;		_main
  9039 ;; This function uses a non-reentrant model
  9040 ;;
  9041                           
  9042                           
  9043                           ;psect for function _TMR5_SetInterruptHandler
  9044  0B79                     _TMR5_SetInterruptHandler:
  9045  0B79                     l3483:	
  9046                           ;incstack = 0
  9047                           ; Regs used in _TMR5_SetInterruptHandler: [wreg]
  9048                           
  9049                           
  9050                           ;tmr5.c: 180: TMR5_InterruptHandler = InterruptHandler;
  9051  0B79  0021               	movlb	1	; select bank1
  9052  0B7A  0821               	movf	(TMR5_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  9053  0B7B  00AB               	movwf	(_TMR5_InterruptHandler+1)^(0+128)
  9054  0B7C  0820               	movf	TMR5_SetInterruptHandler@InterruptHandler^(0+128),w
  9055  0B7D  00AA               	movwf	_TMR5_InterruptHandler^(0+128)
  9056  0B7E                     l705:
  9057  0B7E  0008               	return
  9058  0B7F                     __end_of_TMR5_SetInterruptHandler:
  9059                           
  9060                           	psect	text8
  9061  0D3E                     __ptext8:	
  9062 ;; *************** function _TMR3_Initialize *****************
  9063 ;; Defined at:
  9064 ;;		line 64 in file "mcc_generated_files/tmr3.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;		None
  9067 ;; Auto vars:     Size  Location     Type
  9068 ;;		None
  9069 ;; Return value:  Size  Location     Type
  9070 ;;                  1    wreg      void 
  9071 ;; Registers used:
  9072 ;;		wreg, status,2, status,0, pclath, cstack
  9073 ;; Tracked objects:
  9074 ;;		On entry : 0/0
  9075 ;;		On exit  : 0/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9082 ;;Total ram usage:        0 bytes
  9083 ;; Hardware stack levels used:    1
  9084 ;; Hardware stack levels required when called:    8
  9085 ;; This function calls:
  9086 ;;		_TMR3_SetInterruptHandler
  9087 ;; This function is called by:
  9088 ;;		_SYSTEM_Initialize
  9089 ;; This function uses a non-reentrant model
  9090 ;;
  9091                           
  9092                           
  9093                           ;psect for function _TMR3_Initialize
  9094  0D3E                     _TMR3_Initialize:
  9095  0D3E                     l3739:	
  9096                           ;incstack = 0
  9097                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9098                           
  9099                           
  9100                           ;tmr3.c: 69: T3GCON = 0x00;
  9101  0D3E  0024               	movlb	4	; select bank4
  9102  0D3F  0195               	clrf	21	;volatile
  9103                           
  9104                           ;tmr3.c: 72: T3GATE = 0x00;
  9105  0D40  0196               	clrf	22	;volatile
  9106  0D41                     l3741:
  9107                           
  9108                           ;tmr3.c: 75: T3CLK = 0x04;
  9109  0D41  3004               	movlw	4
  9110  0D42  0097               	movwf	23	;volatile
  9111  0D43                     l3743:
  9112                           
  9113                           ;tmr3.c: 78: TMR3H = 0xE7;
  9114  0D43  30E7               	movlw	231
  9115  0D44  0093               	movwf	19	;volatile
  9116  0D45                     l3745:
  9117                           
  9118                           ;tmr3.c: 81: TMR3L = 0xC8;
  9119  0D45  30C8               	movlw	200
  9120  0D46  0092               	movwf	18	;volatile
  9121  0D47                     l3747:
  9122                           
  9123                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  9124  0D47  0813               	movf	19,w	;volatile
  9125  0D48  0020               	movlb	0	; select bank0
  9126  0D49  00EE               	movwf	_timer3ReloadVal+1	;volatile
  9127  0D4A  0024               	movlb	4	; select bank4
  9128  0D4B  0812               	movf	18,w	;volatile
  9129  0D4C  0020               	movlb	0	; select bank0
  9130  0D4D  00ED               	movwf	_timer3ReloadVal	;volatile
  9131  0D4E                     l3749:
  9132                           
  9133                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
  9134  0D4E  002E               	movlb	14	; select bank14
  9135  0D4F  1110               	bcf	16,2	;volatile
  9136  0D50                     l3751:
  9137                           
  9138                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
  9139  0D50  151A               	bsf	26,2	;volatile
  9140  0D51                     l3753:
  9141                           
  9142                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  9143  0D51  3002               	movlw	low _TMR3_DefaultInterruptHandler
  9144  0D52  0021               	movlb	1	; select bank1
  9145  0D53  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  9146  0D54  3000               	movlw	high _TMR3_DefaultInterruptHandler
  9147  0D55  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9148  0D56  318B  23B1  318D   	fcall	_TMR3_SetInterruptHandler
  9149  0D59                     l3755:
  9150                           
  9151                           ;tmr3.c: 96: T3CON = 0x01;
  9152  0D59  3001               	movlw	1
  9153  0D5A  0024               	movlb	4	; select bank4
  9154  0D5B  0094               	movwf	20	;volatile
  9155  0D5C                     l451:
  9156  0D5C  0008               	return
  9157  0D5D                     __end_of_TMR3_Initialize:
  9158                           
  9159                           	psect	text9
  9160  0BB1                     __ptext9:	
  9161 ;; *************** function _TMR3_SetInterruptHandler *****************
  9162 ;; Defined at:
  9163 ;;		line 178 in file "mcc_generated_files/tmr3.c"
  9164 ;; Parameters:    Size  Location     Type
  9165 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  9166 ;;		 -> menuLCD_ISR(1), TMR3_DefaultInterruptHandler(1), 
  9167 ;; Auto vars:     Size  Location     Type
  9168 ;;		None
  9169 ;; Return value:  Size  Location     Type
  9170 ;;                  1    wreg      void 
  9171 ;; Registers used:
  9172 ;;		wreg
  9173 ;; Tracked objects:
  9174 ;;		On entry : 0/0
  9175 ;;		On exit  : 0/0
  9176 ;;		Unchanged: 0/0
  9177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9178 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9181 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9182 ;;Total ram usage:        2 bytes
  9183 ;; Hardware stack levels used:    1
  9184 ;; Hardware stack levels required when called:    7
  9185 ;; This function calls:
  9186 ;;		Nothing
  9187 ;; This function is called by:
  9188 ;;		_TMR3_Initialize
  9189 ;;		_main
  9190 ;; This function uses a non-reentrant model
  9191 ;;
  9192                           
  9193                           
  9194                           ;psect for function _TMR3_SetInterruptHandler
  9195  0BB1                     _TMR3_SetInterruptHandler:
  9196  0BB1                     l3467:	
  9197                           ;incstack = 0
  9198                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
  9199                           
  9200                           
  9201                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
  9202  0BB1  0021               	movlb	1	; select bank1
  9203  0BB2  0821               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  9204  0BB3  0020               	movlb	0	; select bank0
  9205  0BB4  00EC               	movwf	_TMR3_InterruptHandler+1
  9206  0BB5  0021               	movlb	1	; select bank1
  9207  0BB6  0820               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
  9208  0BB7  0020               	movlb	0	; select bank0
  9209  0BB8  00EB               	movwf	_TMR3_InterruptHandler
  9210  0BB9                     l481:
  9211  0BB9  0008               	return
  9212  0BBA                     __end_of_TMR3_SetInterruptHandler:
  9213                           
  9214                           	psect	text10
  9215  0BDF                     __ptext10:	
  9216 ;; *************** function _TMR2_Initialize *****************
  9217 ;; Defined at:
  9218 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  9219 ;; Parameters:    Size  Location     Type
  9220 ;;		None
  9221 ;; Auto vars:     Size  Location     Type
  9222 ;;		None
  9223 ;; Return value:  Size  Location     Type
  9224 ;;                  1    wreg      void 
  9225 ;; Registers used:
  9226 ;;		wreg, status,2
  9227 ;; Tracked objects:
  9228 ;;		On entry : 0/0
  9229 ;;		On exit  : 0/0
  9230 ;;		Unchanged: 0/0
  9231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9236 ;;Total ram usage:        0 bytes
  9237 ;; Hardware stack levels used:    1
  9238 ;; Hardware stack levels required when called:    7
  9239 ;; This function calls:
  9240 ;;		Nothing
  9241 ;; This function is called by:
  9242 ;;		_SYSTEM_Initialize
  9243 ;; This function uses a non-reentrant model
  9244 ;;
  9245                           
  9246                           
  9247                           ;psect for function _TMR2_Initialize
  9248  0BDF                     _TMR2_Initialize:
  9249  0BDF                     l3757:	
  9250                           ;incstack = 0
  9251                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9252                           
  9253                           
  9254                           ;tmr2.c: 67: T2CLKCON = 0x01;
  9255  0BDF  3001               	movlw	1
  9256  0BE0  0025               	movlb	5	; select bank5
  9257  0BE1  0090               	movwf	16	;volatile
  9258  0BE2                     l3759:
  9259                           
  9260                           ;tmr2.c: 70: T2HLT = 0x00;
  9261  0BE2  018F               	clrf	15	;volatile
  9262  0BE3                     l3761:
  9263                           
  9264                           ;tmr2.c: 73: T2RST = 0x00;
  9265  0BE3  0191               	clrf	17	;volatile
  9266                           
  9267                           ;tmr2.c: 76: T2PR = 0xFF;
  9268  0BE4  30FF               	movlw	255
  9269  0BE5  008D               	movwf	13	;volatile
  9270  0BE6                     l3763:
  9271                           
  9272                           ;tmr2.c: 79: T2TMR = 0x00;
  9273  0BE6  018C               	clrf	12	;volatile
  9274  0BE7                     l3765:
  9275                           
  9276                           ;tmr2.c: 82: PIR4bits.TMR2IF = 0;
  9277  0BE7  002E               	movlb	14	; select bank14
  9278  0BE8  1090               	bcf	16,1	;volatile
  9279  0BE9                     l3767:
  9280                           
  9281                           ;tmr2.c: 85: T2CON = 0x80;
  9282  0BE9  3080               	movlw	128
  9283  0BEA  0025               	movlb	5	; select bank5
  9284  0BEB  008E               	movwf	14	;volatile
  9285  0BEC                     l749:
  9286  0BEC  0008               	return
  9287  0BED                     __end_of_TMR2_Initialize:
  9288                           
  9289                           	psect	text11
  9290  0D1F                     __ptext11:	
  9291 ;; *************** function _TMR1_Initialize *****************
  9292 ;; Defined at:
  9293 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  9294 ;; Parameters:    Size  Location     Type
  9295 ;;		None
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;		None
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  1    wreg      void 
  9300 ;; Registers used:
  9301 ;;		wreg, status,2, status,0, pclath, cstack
  9302 ;; Tracked objects:
  9303 ;;		On entry : 0/0
  9304 ;;		On exit  : 0/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9311 ;;Total ram usage:        0 bytes
  9312 ;; Hardware stack levels used:    1
  9313 ;; Hardware stack levels required when called:    8
  9314 ;; This function calls:
  9315 ;;		_TMR1_SetInterruptHandler
  9316 ;; This function is called by:
  9317 ;;		_SYSTEM_Initialize
  9318 ;; This function uses a non-reentrant model
  9319 ;;
  9320                           
  9321                           
  9322                           ;psect for function _TMR1_Initialize
  9323  0D1F                     _TMR1_Initialize:
  9324  0D1F                     l3787:	
  9325                           ;incstack = 0
  9326                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9327                           
  9328                           
  9329                           ;tmr1.c: 69: T1GCON = 0x00;
  9330  0D1F  0024               	movlb	4	; select bank4
  9331  0D20  018F               	clrf	15	;volatile
  9332                           
  9333                           ;tmr1.c: 72: T1GATE = 0x00;
  9334  0D21  0190               	clrf	16	;volatile
  9335  0D22                     l3789:
  9336                           
  9337                           ;tmr1.c: 75: T1CLK = 0x04;
  9338  0D22  3004               	movlw	4
  9339  0D23  0091               	movwf	17	;volatile
  9340  0D24                     l3791:
  9341                           
  9342                           ;tmr1.c: 78: TMR1H = 0x86;
  9343  0D24  3086               	movlw	134
  9344  0D25  008D               	movwf	13	;volatile
  9345  0D26                     l3793:
  9346                           
  9347                           ;tmr1.c: 81: TMR1L = 0xE8;
  9348  0D26  30E8               	movlw	232
  9349  0D27  008C               	movwf	12	;volatile
  9350  0D28                     l3795:
  9351                           
  9352                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  9353  0D28  080D               	movf	13,w	;volatile
  9354  0D29  0021               	movlb	1	; select bank1
  9355  0D2A  00B1               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  9356  0D2B  0024               	movlb	4	; select bank4
  9357  0D2C  080C               	movf	12,w	;volatile
  9358  0D2D  0021               	movlb	1	; select bank1
  9359  0D2E  00B0               	movwf	_timer1ReloadVal^(0+128)	;volatile
  9360  0D2F                     l3797:
  9361                           
  9362                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
  9363  0D2F  002E               	movlb	14	; select bank14
  9364  0D30  1010               	bcf	16,0	;volatile
  9365  0D31                     l3799:
  9366                           
  9367                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
  9368  0D31  141A               	bsf	26,0	;volatile
  9369  0D32                     l3801:
  9370                           
  9371                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  9372  0D32  3054               	movlw	low _TMR1_DefaultInterruptHandler
  9373  0D33  0021               	movlb	1	; select bank1
  9374  0D34  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  9375  0D35  300B               	movlw	high _TMR1_DefaultInterruptHandler
  9376  0D36  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9377  0D37  318B  2373  318D   	fcall	_TMR1_SetInterruptHandler
  9378  0D3A                     l3803:
  9379                           
  9380                           ;tmr1.c: 96: T1CON = 0x01;
  9381  0D3A  3001               	movlw	1
  9382  0D3B  0024               	movlb	4	; select bank4
  9383  0D3C  008E               	movwf	14	;volatile
  9384  0D3D                     l387:
  9385  0D3D  0008               	return
  9386  0D3E                     __end_of_TMR1_Initialize:
  9387                           
  9388                           	psect	text12
  9389  0B73                     __ptext12:	
  9390 ;; *************** function _TMR1_SetInterruptHandler *****************
  9391 ;; Defined at:
  9392 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  9395 ;;		 -> Clock_ISR(1), TMR1_DefaultInterruptHandler(1), 
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;		None
  9398 ;; Return value:  Size  Location     Type
  9399 ;;                  1    wreg      void 
  9400 ;; Registers used:
  9401 ;;		wreg
  9402 ;; Tracked objects:
  9403 ;;		On entry : 0/0
  9404 ;;		On exit  : 0/0
  9405 ;;		Unchanged: 0/0
  9406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9407 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9410 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9411 ;;Total ram usage:        2 bytes
  9412 ;; Hardware stack levels used:    1
  9413 ;; Hardware stack levels required when called:    7
  9414 ;; This function calls:
  9415 ;;		Nothing
  9416 ;; This function is called by:
  9417 ;;		_TMR1_Initialize
  9418 ;;		_main
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           
  9423                           ;psect for function _TMR1_SetInterruptHandler
  9424  0B73                     _TMR1_SetInterruptHandler:
  9425  0B73                     l3465:	
  9426                           ;incstack = 0
  9427                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  9428                           
  9429                           
  9430                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
  9431  0B73  0021               	movlb	1	; select bank1
  9432  0B74  0821               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  9433  0B75  00AF               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  9434  0B76  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
  9435  0B77  00AE               	movwf	_TMR1_InterruptHandler^(0+128)
  9436  0B78                     l417:
  9437  0B78  0008               	return
  9438  0B79                     __end_of_TMR1_SetInterruptHandler:
  9439                           
  9440                           	psect	text13
  9441  0BD2                     __ptext13:	
  9442 ;; *************** function _PWM6_Initialize *****************
  9443 ;; Defined at:
  9444 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;		None
  9447 ;; Auto vars:     Size  Location     Type
  9448 ;;		None
  9449 ;; Return value:  Size  Location     Type
  9450 ;;                  1    wreg      void 
  9451 ;; Registers used:
  9452 ;;		wreg, status,2, status,0
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9462 ;;Total ram usage:        0 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; Hardware stack levels required when called:    7
  9465 ;; This function calls:
  9466 ;;		Nothing
  9467 ;; This function is called by:
  9468 ;;		_SYSTEM_Initialize
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           
  9473                           ;psect for function _PWM6_Initialize
  9474  0BD2                     _PWM6_Initialize:
  9475  0BD2                     l3729:	
  9476                           ;incstack = 0
  9477                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  9478                           
  9479                           
  9480                           ;pwm6.c: 62: PWM6CON = 0x80;
  9481  0BD2  3080               	movlw	128
  9482  0BD3  0027               	movlb	7	; select bank7
  9483  0BD4  008E               	movwf	14	;volatile
  9484                           
  9485                           ;pwm6.c: 65: PWM6DCH = 0xFF;
  9486  0BD5  30FF               	movlw	255
  9487  0BD6  008D               	movwf	13	;volatile
  9488                           
  9489                           ;pwm6.c: 68: PWM6DCL = 0xC0;
  9490  0BD7  30C0               	movlw	192
  9491  0BD8  008C               	movwf	12	;volatile
  9492  0BD9                     l3731:
  9493                           
  9494                           ;pwm6.c: 71: CCPTMRS1bits.P6TSEL = 1;
  9495  0BD9  0024               	movlb	4	; select bank4
  9496  0BDA  081F               	movf	31,w	;volatile
  9497  0BDB  39F3               	andlw	-13
  9498  0BDC  3804               	iorlw	4
  9499  0BDD  009F               	movwf	31	;volatile
  9500  0BDE                     l719:
  9501  0BDE  0008               	return
  9502  0BDF                     __end_of_PWM6_Initialize:
  9503                           
  9504                           	psect	text14
  9505  0BA0                     __ptext14:	
  9506 ;; *************** function _PMD_Initialize *****************
  9507 ;; Defined at:
  9508 ;;		line 77 in file "mcc_generated_files/mcc.c"
  9509 ;; Parameters:    Size  Location     Type
  9510 ;;		None
  9511 ;; Auto vars:     Size  Location     Type
  9512 ;;		None
  9513 ;; Return value:  Size  Location     Type
  9514 ;;                  1    wreg      void 
  9515 ;; Registers used:
  9516 ;;		status,2
  9517 ;; Tracked objects:
  9518 ;;		On entry : 0/0
  9519 ;;		On exit  : 0/0
  9520 ;;		Unchanged: 0/0
  9521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9526 ;;Total ram usage:        0 bytes
  9527 ;; Hardware stack levels used:    1
  9528 ;; Hardware stack levels required when called:    7
  9529 ;; This function calls:
  9530 ;;		Nothing
  9531 ;; This function is called by:
  9532 ;;		_SYSTEM_Initialize
  9533 ;; This function uses a non-reentrant model
  9534 ;;
  9535                           
  9536                           
  9537                           ;psect for function _PMD_Initialize
  9538  0BA0                     _PMD_Initialize:
  9539  0BA0                     l3719:	
  9540                           ;incstack = 0
  9541                           ; Regs used in _PMD_Initialize: [status,2]
  9542                           
  9543                           
  9544                           ;mcc.c: 80: PMD0 = 0x00;
  9545  0BA0  002F               	movlb	15	; select bank15
  9546  0BA1  0196               	clrf	22	;volatile
  9547                           
  9548                           ;mcc.c: 82: PMD1 = 0x00;
  9549  0BA2  0197               	clrf	23	;volatile
  9550                           
  9551                           ;mcc.c: 84: PMD2 = 0x00;
  9552  0BA3  0198               	clrf	24	;volatile
  9553                           
  9554                           ;mcc.c: 86: PMD3 = 0x00;
  9555  0BA4  0199               	clrf	25	;volatile
  9556                           
  9557                           ;mcc.c: 88: PMD4 = 0x00;
  9558  0BA5  019A               	clrf	26	;volatile
  9559                           
  9560                           ;mcc.c: 90: PMD5 = 0x00;
  9561  0BA6  019B               	clrf	27	;volatile
  9562  0BA7                     l178:
  9563  0BA7  0008               	return
  9564  0BA8                     __end_of_PMD_Initialize:
  9565                           
  9566                           	psect	text15
  9567  07C3                     __ptext15:	
  9568 ;; *************** function _PIN_MANAGER_Initialize *****************
  9569 ;; Defined at:
  9570 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  9571 ;; Parameters:    Size  Location     Type
  9572 ;;		None
  9573 ;; Auto vars:     Size  Location     Type
  9574 ;;		None
  9575 ;; Return value:  Size  Location     Type
  9576 ;;                  1    wreg      void 
  9577 ;; Registers used:
  9578 ;;		wreg, status,2
  9579 ;; Tracked objects:
  9580 ;;		On entry : 0/0
  9581 ;;		On exit  : 0/0
  9582 ;;		Unchanged: 0/0
  9583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9588 ;;Total ram usage:        0 bytes
  9589 ;; Hardware stack levels used:    1
  9590 ;; Hardware stack levels required when called:    7
  9591 ;; This function calls:
  9592 ;;		Nothing
  9593 ;; This function is called by:
  9594 ;;		_SYSTEM_Initialize
  9595 ;; This function uses a non-reentrant model
  9596 ;;
  9597                           
  9598                           
  9599                           ;psect for function _PIN_MANAGER_Initialize
  9600  07C3                     _PIN_MANAGER_Initialize:
  9601  07C3                     l3677:	
  9602                           ;incstack = 0
  9603                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9604                           
  9605                           
  9606                           ;pin_manager.c: 62: LATE = 0x00;
  9607  07C3  0020               	movlb	0	; select bank0
  9608  07C4  019A               	clrf	26	;volatile
  9609                           
  9610                           ;pin_manager.c: 63: LATD = 0x00;
  9611  07C5  0199               	clrf	25	;volatile
  9612                           
  9613                           ;pin_manager.c: 64: LATA = 0x00;
  9614  07C6  0196               	clrf	22	;volatile
  9615                           
  9616                           ;pin_manager.c: 65: LATB = 0x00;
  9617  07C7  0197               	clrf	23	;volatile
  9618                           
  9619                           ;pin_manager.c: 66: LATC = 0x00;
  9620  07C8  0198               	clrf	24	;volatile
  9621  07C9                     l3679:
  9622                           
  9623                           ;pin_manager.c: 71: TRISE = 0x07;
  9624  07C9  3007               	movlw	7
  9625  07CA  0095               	movwf	21	;volatile
  9626  07CB                     l3681:
  9627                           
  9628                           ;pin_manager.c: 72: TRISA = 0x0F;
  9629  07CB  300F               	movlw	15
  9630  07CC  0091               	movwf	17	;volatile
  9631  07CD                     l3683:
  9632                           
  9633                           ;pin_manager.c: 73: TRISB = 0xFF;
  9634  07CD  30FF               	movlw	255
  9635  07CE  0092               	movwf	18	;volatile
  9636  07CF                     l3685:
  9637                           
  9638                           ;pin_manager.c: 74: TRISC = 0xFF;
  9639  07CF  30FF               	movlw	255
  9640  07D0  0093               	movwf	19	;volatile
  9641  07D1                     l3687:
  9642                           
  9643                           ;pin_manager.c: 75: TRISD = 0xFF;
  9644  07D1  30FF               	movlw	255
  9645  07D2  0094               	movwf	20	;volatile
  9646  07D3                     l3689:
  9647                           
  9648                           ;pin_manager.c: 80: ANSELD = 0xFF;
  9649  07D3  30FF               	movlw	255
  9650  07D4  003E               	movlb	30	; select bank30
  9651  07D5  00D9               	movwf	89	;volatile
  9652  07D6                     l3691:
  9653                           
  9654                           ;pin_manager.c: 81: ANSELC = 0xC7;
  9655  07D6  30C7               	movlw	199
  9656  07D7  00CE               	movwf	78	;volatile
  9657  07D8                     l3693:
  9658                           
  9659                           ;pin_manager.c: 82: ANSELB = 0xEF;
  9660  07D8  30EF               	movlw	239
  9661  07D9  00C3               	movwf	67	;volatile
  9662  07DA                     l3695:
  9663                           
  9664                           ;pin_manager.c: 83: ANSELE = 0x07;
  9665  07DA  3007               	movlw	7
  9666  07DB  00E4               	movwf	100	;volatile
  9667  07DC                     l3697:
  9668                           
  9669                           ;pin_manager.c: 84: ANSELA = 0x4F;
  9670  07DC  304F               	movlw	79
  9671  07DD  00B8               	movwf	56	;volatile
  9672                           
  9673                           ;pin_manager.c: 89: WPUD = 0x00;
  9674  07DE  01DA               	clrf	90	;volatile
  9675                           
  9676                           ;pin_manager.c: 90: WPUE = 0x00;
  9677  07DF  01E5               	clrf	101	;volatile
  9678                           
  9679                           ;pin_manager.c: 91: WPUB = 0x00;
  9680  07E0  01C4               	clrf	68	;volatile
  9681                           
  9682                           ;pin_manager.c: 92: WPUA = 0x00;
  9683  07E1  01B9               	clrf	57	;volatile
  9684                           
  9685                           ;pin_manager.c: 93: WPUC = 0x00;
  9686  07E2  01CF               	clrf	79	;volatile
  9687                           
  9688                           ;pin_manager.c: 98: ODCONE = 0x00;
  9689  07E3  01E6               	clrf	102	;volatile
  9690                           
  9691                           ;pin_manager.c: 99: ODCONA = 0x00;
  9692  07E4  01BA               	clrf	58	;volatile
  9693                           
  9694                           ;pin_manager.c: 100: ODCONB = 0x00;
  9695  07E5  01C5               	clrf	69	;volatile
  9696                           
  9697                           ;pin_manager.c: 101: ODCONC = 0x00;
  9698  07E6  01D0               	clrf	80	;volatile
  9699                           
  9700                           ;pin_manager.c: 102: ODCOND = 0x00;
  9701  07E7  01DB               	clrf	91	;volatile
  9702  07E8                     l3699:
  9703                           
  9704                           ;pin_manager.c: 107: SLRCONA = 0xFF;
  9705  07E8  30FF               	movlw	255
  9706  07E9  00BB               	movwf	59	;volatile
  9707  07EA                     l3701:
  9708                           
  9709                           ;pin_manager.c: 108: SLRCONB = 0xFF;
  9710  07EA  30FF               	movlw	255
  9711  07EB  00C6               	movwf	70	;volatile
  9712  07EC                     l3703:
  9713                           
  9714                           ;pin_manager.c: 109: SLRCONC = 0xFF;
  9715  07EC  30FF               	movlw	255
  9716  07ED  00D1               	movwf	81	;volatile
  9717  07EE                     l3705:
  9718                           
  9719                           ;pin_manager.c: 110: SLRCOND = 0xFF;
  9720  07EE  30FF               	movlw	255
  9721  07EF  00DC               	movwf	92	;volatile
  9722  07F0                     l3707:
  9723                           
  9724                           ;pin_manager.c: 111: SLRCONE = 0x07;
  9725  07F0  3007               	movlw	7
  9726  07F1  00E7               	movwf	103	;volatile
  9727  07F2                     l3709:
  9728                           
  9729                           ;pin_manager.c: 120: SSP1CLKPPS = 0x13;
  9730  07F2  3013               	movlw	19
  9731  07F3  003D               	movlb	29	; select bank29
  9732  07F4  00C5               	movwf	69	;volatile
  9733  07F5                     l3711:
  9734                           
  9735                           ;pin_manager.c: 121: RC3PPS = 0x14;
  9736  07F5  3014               	movlw	20
  9737  07F6  003E               	movlb	30	; select bank30
  9738  07F7  00A3               	movwf	35	;volatile
  9739  07F8                     l3713:
  9740                           
  9741                           ;pin_manager.c: 122: RC4PPS = 0x15;
  9742  07F8  3015               	movlw	21
  9743  07F9  00A4               	movwf	36	;volatile
  9744  07FA                     l3715:
  9745                           
  9746                           ;pin_manager.c: 123: RA6PPS = 0x0E;
  9747  07FA  300E               	movlw	14
  9748  07FB  0096               	movwf	22	;volatile
  9749  07FC                     l3717:
  9750                           
  9751                           ;pin_manager.c: 124: SSP1DATPPS = 0x14;
  9752  07FC  3014               	movlw	20
  9753  07FD  003D               	movlb	29	; select bank29
  9754  07FE  00C6               	movwf	70	;volatile
  9755  07FF                     l122:
  9756  07FF  0008               	return
  9757  0800                     __end_of_PIN_MANAGER_Initialize:
  9758                           
  9759                           	psect	text16
  9760  0BA8                     __ptext16:	
  9761 ;; *************** function _OSCILLATOR_Initialize *****************
  9762 ;; Defined at:
  9763 ;;		line 63 in file "mcc_generated_files/mcc.c"
  9764 ;; Parameters:    Size  Location     Type
  9765 ;;		None
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;		None
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  1    wreg      void 
  9770 ;; Registers used:
  9771 ;;		wreg, status,2
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9781 ;;Total ram usage:        0 bytes
  9782 ;; Hardware stack levels used:    1
  9783 ;; Hardware stack levels required when called:    7
  9784 ;; This function calls:
  9785 ;;		Nothing
  9786 ;; This function is called by:
  9787 ;;		_SYSTEM_Initialize
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791                           
  9792                           ;psect for function _OSCILLATOR_Initialize
  9793  0BA8                     _OSCILLATOR_Initialize:
  9794  0BA8                     l3721:	
  9795                           ;incstack = 0
  9796                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9797                           
  9798                           
  9799                           ;mcc.c: 66: OSCCON1 = 0x62;
  9800  0BA8  3062               	movlw	98
  9801  0BA9  0031               	movlb	17	; select bank17
  9802  0BAA  008D               	movwf	13	;volatile
  9803  0BAB                     l3723:
  9804                           
  9805                           ;mcc.c: 68: OSCCON3 = 0x00;
  9806  0BAB  018F               	clrf	15	;volatile
  9807  0BAC                     l3725:
  9808                           
  9809                           ;mcc.c: 70: OSCEN = 0x00;
  9810  0BAC  0191               	clrf	17	;volatile
  9811                           
  9812                           ;mcc.c: 72: OSCFRQ = 0x02;
  9813  0BAD  3002               	movlw	2
  9814  0BAE  0093               	movwf	19	;volatile
  9815  0BAF                     l3727:
  9816                           
  9817                           ;mcc.c: 74: OSCTUNE = 0x00;
  9818  0BAF  0192               	clrf	18	;volatile
  9819  0BB0                     l175:
  9820  0BB0  0008               	return
  9821  0BB1                     __end_of_OSCILLATOR_Initialize:
  9822                           
  9823                           	psect	text17
  9824  0CB3                     __ptext17:	
  9825 ;; *************** function _ADCC_Initialize *****************
  9826 ;; Defined at:
  9827 ;;		line 63 in file "mcc_generated_files/adcc.c"
  9828 ;; Parameters:    Size  Location     Type
  9829 ;;		None
  9830 ;; Auto vars:     Size  Location     Type
  9831 ;;		None
  9832 ;; Return value:  Size  Location     Type
  9833 ;;                  1    wreg      void 
  9834 ;; Registers used:
  9835 ;;		wreg, status,2
  9836 ;; Tracked objects:
  9837 ;;		On entry : 0/0
  9838 ;;		On exit  : 0/0
  9839 ;;		Unchanged: 0/0
  9840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9845 ;;Total ram usage:        0 bytes
  9846 ;; Hardware stack levels used:    1
  9847 ;; Hardware stack levels required when called:    7
  9848 ;; This function calls:
  9849 ;;		Nothing
  9850 ;; This function is called by:
  9851 ;;		_SYSTEM_Initialize
  9852 ;; This function uses a non-reentrant model
  9853 ;;
  9854                           
  9855                           
  9856                           ;psect for function _ADCC_Initialize
  9857  0CB3                     _ADCC_Initialize:
  9858  0CB3                     l3733:	
  9859                           ;incstack = 0
  9860                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  9861                           
  9862                           
  9863                           ;adcc.c: 67: ADLTHL = 0x00;
  9864  0CB3  0022               	movlb	2	; select bank2
  9865  0CB4  018E               	clrf	14	;volatile
  9866                           
  9867                           ;adcc.c: 69: ADLTHH = 0x00;
  9868  0CB5  018F               	clrf	15	;volatile
  9869                           
  9870                           ;adcc.c: 71: ADUTHL = 0x00;
  9871  0CB6  0190               	clrf	16	;volatile
  9872                           
  9873                           ;adcc.c: 73: ADUTHH = 0x00;
  9874  0CB7  0191               	clrf	17	;volatile
  9875                           
  9876                           ;adcc.c: 75: ADSTPTL = 0x00;
  9877  0CB8  0192               	clrf	18	;volatile
  9878                           
  9879                           ;adcc.c: 77: ADSTPTH = 0x00;
  9880  0CB9  0193               	clrf	19	;volatile
  9881                           
  9882                           ;adcc.c: 79: ADRPT = 0x00;
  9883  0CBA  018D               	clrf	13	;volatile
  9884                           
  9885                           ;adcc.c: 81: ADPCH = 0x00;
  9886  0CBB  0021               	movlb	1	; select bank1
  9887  0CBC  019E               	clrf	30	;volatile
  9888                           
  9889                           ;adcc.c: 83: ADCAP = 0x00;
  9890  0CBD  019B               	clrf	27	;volatile
  9891                           
  9892                           ;adcc.c: 85: ADCON1 = 0x00;
  9893  0CBE  0194               	clrf	20	;volatile
  9894                           
  9895                           ;adcc.c: 87: ADCON2 = 0x00;
  9896  0CBF  0195               	clrf	21	;volatile
  9897                           
  9898                           ;adcc.c: 89: ADCON3 = 0x00;
  9899  0CC0  0196               	clrf	22	;volatile
  9900                           
  9901                           ;adcc.c: 91: ADSTAT = 0x00;
  9902  0CC1  0197               	clrf	23	;volatile
  9903                           
  9904                           ;adcc.c: 93: ADREF = 0x00;
  9905  0CC2  019A               	clrf	26	;volatile
  9906                           
  9907                           ;adcc.c: 95: ADACT = 0x00;
  9908  0CC3  0199               	clrf	25	;volatile
  9909                           
  9910                           ;adcc.c: 97: ADCLK = 0x00;
  9911  0CC4  0198               	clrf	24	;volatile
  9912  0CC5                     l3735:
  9913                           
  9914                           ;adcc.c: 99: ADCON0 = 0x80;
  9915  0CC5  3080               	movlw	128
  9916  0CC6  0093               	movwf	19	;volatile
  9917  0CC7                     l3737:
  9918                           
  9919                           ;adcc.c: 101: ADACQ = 0xFF;
  9920  0CC7  30FF               	movlw	255
  9921  0CC8  009D               	movwf	29	;volatile
  9922  0CC9                     l563:
  9923  0CC9  0008               	return
  9924  0CCA                     __end_of_ADCC_Initialize:
  9925                           
  9926                           	psect	text18
  9927  0B61                     __ptext18:	
  9928 ;; *************** function _PWM_Output_D4_Disable *****************
  9929 ;; Defined at:
  9930 ;;		line 228 in file "main.c"
  9931 ;; Parameters:    Size  Location     Type
  9932 ;;		None
  9933 ;; Auto vars:     Size  Location     Type
  9934 ;;		None
  9935 ;; Return value:  Size  Location     Type
  9936 ;;                  1    wreg      void 
  9937 ;; Registers used:
  9938 ;;		None
  9939 ;; Tracked objects:
  9940 ;;		On entry : 0/0
  9941 ;;		On exit  : 0/0
  9942 ;;		Unchanged: 0/0
  9943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9948 ;;Total ram usage:        0 bytes
  9949 ;; Hardware stack levels used:    1
  9950 ;; Hardware stack levels required when called:    7
  9951 ;; This function calls:
  9952 ;;		Nothing
  9953 ;; This function is called by:
  9954 ;;		_main
  9955 ;; This function uses a non-reentrant model
  9956 ;;
  9957                           
  9958                           
  9959                           ;psect for function _PWM_Output_D4_Disable
  9960  0B61                     _PWM_Output_D4_Disable:
  9961  0B61                     l4195:	
  9962                           ;incstack = 0
  9963                           ; Regs used in _PWM_Output_D4_Disable: []
  9964                           
  9965                           
  9966                           ;main.c: 229: PWM6EN = 0;
  9967  0B61  0027               	movlb	7	; select bank7
  9968  0B62  138E               	bcf	14,7	;volatile
  9969  0B63                     l1090:
  9970  0B63  0008               	return
  9971  0B64                     __end_of_PWM_Output_D4_Disable:
  9972                           
  9973                           	psect	text19
  9974  074D                     __ptext19:	
  9975 ;; *************** function _LCDinit *****************
  9976 ;; Defined at:
  9977 ;;		line 155 in file "main.c"
  9978 ;; Parameters:    Size  Location     Type
  9979 ;;		None
  9980 ;; Auto vars:     Size  Location     Type
  9981 ;;		None
  9982 ;; Return value:  Size  Location     Type
  9983 ;;                  1    wreg      void 
  9984 ;; Registers used:
  9985 ;;		wreg, status,2, status,0, pclath, cstack
  9986 ;; Tracked objects:
  9987 ;;		On entry : 0/0
  9988 ;;		On exit  : 0/0
  9989 ;;		Unchanged: 0/0
  9990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9993 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9994 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9995 ;;Total ram usage:        1 bytes
  9996 ;; Hardware stack levels used:    1
  9997 ;; Hardware stack levels required when called:    9
  9998 ;; This function calls:
  9999 ;;		_LCDsend
 10000 ;;		_LCDsend2x4
 10001 ;; This function is called by:
 10002 ;;		_main
 10003 ;; This function uses a non-reentrant model
 10004 ;;
 10005                           
 10006                           
 10007                           ;psect for function _LCDinit
 10008  074D                     _LCDinit:
 10009  074D                     l4161:	
 10010                           ;incstack = 0
 10011                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 10012                           
 10013                           
 10014                           ;main.c: 157: _delay((unsigned long)((50)*(1000000/4000.0)));
 10015  074D  3011               	movlw	17
 10016  074E  0021               	movlb	1	; select bank1
 10017  074F  00A8               	movwf	??_LCDinit^(0+128)
 10018  0750  303A               	movlw	58
 10019  0751                     u4227:
 10020  0751  0B89               	decfsz	9,f
 10021  0752  2F51               	goto	u4227
 10022  0753  0BA8               	decfsz	??_LCDinit^(0+128),f
 10023  0754  2F51               	goto	u4227
 10024  0755  0000               	nop
 10025  0756                     l4163:
 10026                           
 10027                           ;main.c: 158: LCDsend(0x30);
 10028  0756  3030               	movlw	48
 10029  0757  318E  2673  3187   	fcall	_LCDsend
 10030  075A                     l4165:
 10031                           
 10032                           ;main.c: 159: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 10033  075A  3034               	movlw	52
 10034  075B  318E  2673  3187   	fcall	_LCDsend
 10035  075E  3029               	movlw	41
 10036  075F                     u4237:
 10037  075F  0B89               	decfsz	9,f
 10038  0760  2F5F               	goto	u4237
 10039  0761  3200               	nop2
 10040  0762                     l4167:
 10041  0762  3030               	movlw	48
 10042  0763  318E  2673  3187   	fcall	_LCDsend
 10043  0766                     l4169:
 10044                           
 10045                           ;main.c: 160: _delay((unsigned long)((5)*(1000000/4000.0)));
 10046  0766  30FA               	movlw	250
 10047  0767                     u4247:
 10048  0767  3200               	nop2
 10049  0768  0B89               	decfsz	9,f
 10050  0769  2F67               	goto	u4247
 10051                           
 10052                           ;main.c: 161: LCDsend(0x30);
 10053  076A  3030               	movlw	48
 10054  076B  318E  2673  3187   	fcall	_LCDsend
 10055                           
 10056                           ;main.c: 162: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 10057  076E  3034               	movlw	52
 10058  076F  318E  2673  3187   	fcall	_LCDsend
 10059  0772                     l4171:
 10060  0772  3029               	movlw	41
 10061  0773                     u4257:
 10062  0773  0B89               	decfsz	9,f
 10063  0774  2F73               	goto	u4257
 10064  0775  3200               	nop2
 10065  0776                     l4173:
 10066  0776  3030               	movlw	48
 10067  0777  318E  2673  3187   	fcall	_LCDsend
 10068                           
 10069                           ;main.c: 163: _delay((unsigned long)((100)*(1000000/4000000.0)));
 10070  077A  3008               	movlw	8
 10071  077B                     u4267:
 10072  077B  0B89               	decfsz	9,f
 10073  077C  2F7B               	goto	u4267
 10074  077D  0000               	nop
 10075  077E                     l4175:
 10076                           
 10077                           ;main.c: 164: LCDsend(0x30);
 10078  077E  3030               	movlw	48
 10079  077F  318E  2673  3187   	fcall	_LCDsend
 10080  0782                     l4177:
 10081                           
 10082                           ;main.c: 165: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 10083  0782  3034               	movlw	52
 10084  0783  318E  2673  3187   	fcall	_LCDsend
 10085  0786  3029               	movlw	41
 10086  0787                     u4277:
 10087  0787  0B89               	decfsz	9,f
 10088  0788  2F87               	goto	u4277
 10089  0789  3200               	nop2
 10090  078A                     l4179:
 10091  078A  3030               	movlw	48
 10092  078B  318E  2673  3187   	fcall	_LCDsend
 10093  078E                     l4181:
 10094                           
 10095                           ;main.c: 166: _delay((unsigned long)((100)*(1000000/4000000.0)));
 10096  078E  3008               	movlw	8
 10097  078F                     u4287:
 10098  078F  0B89               	decfsz	9,f
 10099  0790  2F8F               	goto	u4287
 10100  0791  0000               	nop
 10101                           
 10102                           ;main.c: 167: LCDsend(0x20);
 10103  0792  3020               	movlw	32
 10104  0793  318E  2673  3187   	fcall	_LCDsend
 10105                           
 10106                           ;main.c: 168: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
 10107  0796  3024               	movlw	36
 10108  0797  318E  2673  3187   	fcall	_LCDsend
 10109  079A                     l4183:
 10110  079A  3029               	movlw	41
 10111  079B                     u4297:
 10112  079B  0B89               	decfsz	9,f
 10113  079C  2F9B               	goto	u4297
 10114  079D  3200               	nop2
 10115  079E                     l4185:
 10116  079E  3020               	movlw	32
 10117  079F  318E  2673  3187   	fcall	_LCDsend
 10118                           
 10119                           ;main.c: 169: _delay((unsigned long)((5)*(1000000/4000.0)));
 10120  07A2  30FA               	movlw	250
 10121  07A3                     u4307:
 10122  07A3  3200               	nop2
 10123  07A4  0B89               	decfsz	9,f
 10124  07A5  2FA3               	goto	u4307
 10125  07A6                     l4187:
 10126                           
 10127                           ;main.c: 171: LCDsend2x4(0x28, 0);
 10128  07A6  0021               	movlb	1	; select bank1
 10129  07A7  01A2               	clrf	LCDsend2x4@mode^(0+128)
 10130  07A8  3028               	movlw	40
 10131  07A9  3184  24B8  3187   	fcall	_LCDsend2x4
 10132  07AC                     l4189:
 10133                           
 10134                           ;main.c: 172: LCDsend2x4(0x06, 0);
 10135  07AC  0021               	movlb	1	; select bank1
 10136  07AD  01A2               	clrf	LCDsend2x4@mode^(0+128)
 10137  07AE  3006               	movlw	6
 10138  07AF  3184  24B8  3187   	fcall	_LCDsend2x4
 10139  07B2                     l4191:
 10140                           
 10141                           ;main.c: 173: LCDsend2x4(0x0f, 0);
 10142  07B2  0021               	movlb	1	; select bank1
 10143  07B3  01A2               	clrf	LCDsend2x4@mode^(0+128)
 10144  07B4  300F               	movlw	15
 10145  07B5  3184  24B8  3187   	fcall	_LCDsend2x4
 10146  07B8                     l4193:
 10147                           
 10148                           ;main.c: 174: LCDsend2x4(0x01, 0);
 10149  07B8  0021               	movlb	1	; select bank1
 10150  07B9  01A2               	clrf	LCDsend2x4@mode^(0+128)
 10151  07BA  3001               	movlw	1
 10152  07BB  3184  24B8  3187   	fcall	_LCDsend2x4
 10153                           
 10154                           ;main.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
 10155  07BE  30A6               	movlw	166
 10156  07BF                     u4317:
 10157  07BF  0B89               	decfsz	9,f
 10158  07C0  2FBF               	goto	u4317
 10159  07C1  3200               	nop2
 10160  07C2                     l1059:
 10161  07C2  0008               	return
 10162  07C3                     __end_of_LCDinit:
 10163                           
 10164                           	psect	text20
 10165  04B8                     __ptext20:	
 10166 ;; *************** function _LCDsend2x4 *****************
 10167 ;; Defined at:
 10168 ;;		line 132 in file "main.c"
 10169 ;; Parameters:    Size  Location     Type
 10170 ;;  c               1    wreg     unsigned char 
 10171 ;;  mode            1    2[BANK1 ] unsigned char 
 10172 ;; Auto vars:     Size  Location     Type
 10173 ;;  c               1    5[BANK1 ] unsigned char 
 10174 ;;  lc              1    7[BANK1 ] unsigned char 
 10175 ;;  hc              1    6[BANK1 ] unsigned char 
 10176 ;; Return value:  Size  Location     Type
 10177 ;;                  1    wreg      void 
 10178 ;; Registers used:
 10179 ;;		wreg, status,2, status,0, pclath, cstack
 10180 ;; Tracked objects:
 10181 ;;		On entry : 0/0
 10182 ;;		On exit  : 0/0
 10183 ;;		Unchanged: 0/0
 10184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10185 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10186 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10187 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10188 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10189 ;;Total ram usage:        6 bytes
 10190 ;; Hardware stack levels used:    1
 10191 ;; Hardware stack levels required when called:    8
 10192 ;; This function calls:
 10193 ;;		_WriteI2C
 10194 ;; This function is called by:
 10195 ;;		_LCDinit
 10196 ;; This function uses a non-reentrant model
 10197 ;;
 10198                           
 10199                           
 10200                           ;psect for function _LCDsend2x4
 10201  04B8                     _LCDsend2x4:
 10202                           
 10203                           ;incstack = 0
 10204                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 10205                           ;LCDsend2x4@c stored from wreg
 10206  04B8  0021               	movlb	1	; select bank1
 10207  04B9  00A5               	movwf	LCDsend2x4@c^(0+128)
 10208  04BA                     l3863:
 10209                           
 10210                           ;main.c: 134: unsigned char hc;;main.c: 135: unsigned char lc;;main.c: 137: hc = c & 0xf
      +                          0;
 10211  04BA  0825               	movf	LCDsend2x4@c^(0+128),w
 10212  04BB  39F0               	andlw	240
 10213  04BC  00A3               	movwf	??_LCDsend2x4^(0+128)
 10214  04BD  0823               	movf	??_LCDsend2x4^(0+128),w
 10215  04BE  00A6               	movwf	LCDsend2x4@hc^(0+128)
 10216  04BF                     l3865:
 10217                           
 10218                           ;main.c: 138: lc = (c << 4) & 0xf0;
 10219  04BF  0825               	movf	LCDsend2x4@c^(0+128),w
 10220  04C0  00A3               	movwf	??_LCDsend2x4^(0+128)
 10221  04C1  3003               	movlw	3
 10222  04C2                     u3215:
 10223  04C2  35A3               	lslf	??_LCDsend2x4^(0+128),f
 10224  04C3  3EFF               	addlw	-1
 10225  04C4  1D03               	skipz
 10226  04C5  2CC2               	goto	u3215
 10227  04C6  3523               	lslf	??_LCDsend2x4^(0+128),w
 10228  04C7  39F0               	andlw	240
 10229  04C8  00A4               	movwf	(??_LCDsend2x4+1)^(0+128)
 10230  04C9  0824               	movf	(??_LCDsend2x4+1)^(0+128),w
 10231  04CA  00A7               	movwf	LCDsend2x4@lc^(0+128)
 10232  04CB                     l3867:	
 10233                           ;main.c: 140: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10234                           
 10235  04CB  0023               	movlb	3	; select bank3
 10236  04CC  0C0F               	rrf	15,w	;volatile
 10237  04CD  0C89               	rrf	9,f
 10238  04CE  3901               	andlw	1
 10239  04CF  0021               	movlb	1	; select bank1
 10240  04D0  00A3               	movwf	??_LCDsend2x4^(0+128)
 10241  04D1  0023               	movlb	3	; select bank3
 10242  04D2  0811               	movf	17,w	;volatile
 10243  04D3  391F               	andlw	31
 10244  04D4  0021               	movlb	1	; select bank1
 10245  04D5  0423               	iorwf	??_LCDsend2x4^(0+128),w
 10246  04D6  1D03               	btfss	3,2
 10247  04D7  2CD9               	goto	u3221
 10248  04D8  2CDA               	goto	u3220
 10249  04D9                     u3221:
 10250  04D9  2CCB               	goto	l3867
 10251  04DA                     u3220:
 10252  04DA                     l1025:
 10253                           
 10254                           ;main.c: 141: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 10255  04DA  0023               	movlb	3	; select bank3
 10256  04DB  1411               	bsf	17,0	;volatile
 10257  04DC                     l1026:
 10258  04DC  1811               	btfsc	17,0	;volatile
 10259  04DD  2CDF               	goto	u3231
 10260  04DE  2CE0               	goto	u3230
 10261  04DF                     u3231:
 10262  04DF  2CDC               	goto	l1026
 10263  04E0                     u3230:
 10264  04E0                     l3869:
 10265  04E0  0023               	movlb	3	; select bank3
 10266  04E1  0C0F               	rrf	15,w	;volatile
 10267  04E2  0C89               	rrf	9,f
 10268  04E3  3901               	andlw	1
 10269  04E4  0021               	movlb	1	; select bank1
 10270  04E5  00A3               	movwf	??_LCDsend2x4^(0+128)
 10271  04E6  0023               	movlb	3	; select bank3
 10272  04E7  0811               	movf	17,w	;volatile
 10273  04E8  391F               	andlw	31
 10274  04E9  0021               	movlb	1	; select bank1
 10275  04EA  0423               	iorwf	??_LCDsend2x4^(0+128),w
 10276  04EB  1D03               	btfss	3,2
 10277  04EC  2CEE               	goto	u3241
 10278  04ED  2CEF               	goto	u3240
 10279  04EE                     u3241:
 10280  04EE  2CE0               	goto	l3869
 10281  04EF                     u3240:
 10282  04EF                     l3871:
 10283                           
 10284                           ;main.c: 142: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10285  04EF  304E               	movlw	78
 10286  04F0  318E  26C6  3184   	fcall	_WriteI2C
 10287  04F3                     l3873:
 10288  04F3  0023               	movlb	3	; select bank3
 10289  04F4  0C0F               	rrf	15,w	;volatile
 10290  04F5  0C89               	rrf	9,f
 10291  04F6  3901               	andlw	1
 10292  04F7  0021               	movlb	1	; select bank1
 10293  04F8  00A3               	movwf	??_LCDsend2x4^(0+128)
 10294  04F9  0023               	movlb	3	; select bank3
 10295  04FA  0811               	movf	17,w	;volatile
 10296  04FB  391F               	andlw	31
 10297  04FC  0021               	movlb	1	; select bank1
 10298  04FD  0423               	iorwf	??_LCDsend2x4^(0+128),w
 10299  04FE  1D03               	btfss	3,2
 10300  04FF  2D01               	goto	u3251
 10301  0500  2D02               	goto	u3250
 10302  0501                     u3251:
 10303  0501  2CF3               	goto	l3873
 10304  0502                     u3250:
 10305  0502                     l3875:
 10306                           
 10307                           ;main.c: 143: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10308  0502  0826               	movf	LCDsend2x4@hc^(0+128),w
 10309  0503  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 10310  0504  3808               	iorlw	8
 10311  0505  318E  26C6  3184   	fcall	_WriteI2C
 10312  0508                     l3877:
 10313  0508  0023               	movlb	3	; select bank3
 10314  0509  0C0F               	rrf	15,w	;volatile
 10315  050A  0C89               	rrf	9,f
 10316  050B  3901               	andlw	1
 10317  050C  0021               	movlb	1	; select bank1
 10318  050D  00A3               	movwf	??_LCDsend2x4^(0+128)
 10319  050E  0023               	movlb	3	; select bank3
 10320  050F  0811               	movf	17,w	;volatile
 10321  0510  391F               	andlw	31
 10322  0511  0021               	movlb	1	; select bank1
 10323  0512  0423               	iorwf	??_LCDsend2x4^(0+128),w
 10324  0513  1D03               	btfss	3,2
 10325  0514  2D16               	goto	u3261
 10326  0515  2D17               	goto	u3260
 10327  0516                     u3261:
 10328  0516  2D08               	goto	l3877
 10329  0517                     u3260:
 10330  0517                     l3879:
 10331                           
 10332                           ;main.c: 144: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 10333  0517  0826               	movf	LCDsend2x4@hc^(0+128),w
 10334  0518  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 10335  0519  380C               	iorlw	12
 10336  051A  318E  26C6  3184   	fcall	_WriteI2C
 10337  051D                     l3881:
 10338  051D  0023               	movlb	3	; select bank3
 10339  051E  0C0F               	rrf	15,w	;volatile
 10340  051F  0C89               	rrf	9,f
 10341  0520  3901               	andlw	1
 10342  0521  0021               	movlb	1	; select bank1
 10343  0522  00A3               	movwf	??_LCDsend2x4^(0+128)
 10344  0523  0023               	movlb	3	; select bank3
 10345  0524  0811               	movf	17,w	;volatile
 10346  0525  391F               	andlw	31
 10347  0526  0021               	movlb	1	; select bank1
 10348  0527  0423               	iorwf	??_LCDsend2x4^(0+128),w
 10349  0528  1D03               	btfss	3,2
 10350  0529  2D2B               	goto	u3271
 10351  052A  2D2C               	goto	u3270
 10352  052B                     u3271:
 10353  052B  2D1D               	goto	l3881
 10354  052C                     u3270:
 10355  052C                     l1040:
 10356  052C                     l3883:	
 10357                           ;main.c: 145: _delay((unsigned long)((1)*(1000000/4000000.0)));
 10358                           
 10359                           
 10360                           ;main.c: 146: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10361  052C  0021               	movlb	1	; select bank1
 10362  052D  0826               	movf	LCDsend2x4@hc^(0+128),w
 10363  052E  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 10364  052F  3808               	iorlw	8
 10365  0530  318E  26C6  3184   	fcall	_WriteI2C
 10366  0533                     l3885:
 10367  0533  0023               	movlb	3	; select bank3
 10368  0534  0C0F               	rrf	15,w	;volatile
 10369  0535  0C89               	rrf	9,f
 10370  0536  3901               	andlw	1
 10371  0537  0021               	movlb	1	; select bank1
 10372  0538  00A3               	movwf	??_LCDsend2x4^(0+128)
 10373  0539  0023               	movlb	3	; select bank3
 10374  053A  0811               	movf	17,w	;volatile
 10375  053B  391F               	andlw	31
 10376  053C  0021               	movlb	1	; select bank1
 10377  053D  0423               	iorwf	??_LCDsend2x4^(0+128),w
 10378  053E  1D03               	btfss	3,2
 10379  053F  2D41               	goto	u3281
 10380  0540  2D42               	goto	u3280
 10381  0541                     u3281:
 10382  0541  2D33               	goto	l3885
 10383  0542                     u3280:
 10384  0542                     l3887:
 10385                           
 10386                           ;main.c: 147: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10387  0542  0827               	movf	LCDsend2x4@lc^(0+128),w
 10388  0543  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 10389  0544  3808               	iorlw	8
 10390  0545  318E  26C6  3184   	fcall	_WriteI2C
 10391  0548                     l3889:
 10392  0548  0023               	movlb	3	; select bank3
 10393  0549  0C0F               	rrf	15,w	;volatile
 10394  054A  0C89               	rrf	9,f
 10395  054B  3901               	andlw	1
 10396  054C  0021               	movlb	1	; select bank1
 10397  054D  00A3               	movwf	??_LCDsend2x4^(0+128)
 10398  054E  0023               	movlb	3	; select bank3
 10399  054F  0811               	movf	17,w	;volatile
 10400  0550  391F               	andlw	31
 10401  0551  0021               	movlb	1	; select bank1
 10402  0552  0423               	iorwf	??_LCDsend2x4^(0+128),w
 10403  0553  1D03               	btfss	3,2
 10404  0554  2D56               	goto	u3291
 10405  0555  2D57               	goto	u3290
 10406  0556                     u3291:
 10407  0556  2D48               	goto	l3889
 10408  0557                     u3290:
 10409  0557                     l3891:
 10410                           
 10411                           ;main.c: 148: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 10412  0557  0827               	movf	LCDsend2x4@lc^(0+128),w
 10413  0558  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 10414  0559  380C               	iorlw	12
 10415  055A  318E  26C6  3184   	fcall	_WriteI2C
 10416  055D                     l3893:
 10417  055D  0023               	movlb	3	; select bank3
 10418  055E  0C0F               	rrf	15,w	;volatile
 10419  055F  0C89               	rrf	9,f
 10420  0560  3901               	andlw	1
 10421  0561  0021               	movlb	1	; select bank1
 10422  0562  00A3               	movwf	??_LCDsend2x4^(0+128)
 10423  0563  0023               	movlb	3	; select bank3
 10424  0564  0811               	movf	17,w	;volatile
 10425  0565  391F               	andlw	31
 10426  0566  0021               	movlb	1	; select bank1
 10427  0567  0423               	iorwf	??_LCDsend2x4^(0+128),w
 10428  0568  1D03               	btfss	3,2
 10429  0569  2D6B               	goto	u3301
 10430  056A  2D6C               	goto	u3300
 10431  056B                     u3301:
 10432  056B  2D5D               	goto	l3893
 10433  056C                     u3300:
 10434  056C                     l1049:
 10435  056C                     l3895:	
 10436                           ;main.c: 149: _delay((unsigned long)((1)*(1000000/4000000.0)));
 10437                           
 10438                           
 10439                           ;main.c: 150: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10440  056C  0021               	movlb	1	; select bank1
 10441  056D  0827               	movf	LCDsend2x4@lc^(0+128),w
 10442  056E  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 10443  056F  3808               	iorlw	8
 10444  0570  318E  26C6  3184   	fcall	_WriteI2C
 10445  0573                     l3897:
 10446  0573  0023               	movlb	3	; select bank3
 10447  0574  0C0F               	rrf	15,w	;volatile
 10448  0575  0C89               	rrf	9,f
 10449  0576  3901               	andlw	1
 10450  0577  0021               	movlb	1	; select bank1
 10451  0578  00A3               	movwf	??_LCDsend2x4^(0+128)
 10452  0579  0023               	movlb	3	; select bank3
 10453  057A  0811               	movf	17,w	;volatile
 10454  057B  391F               	andlw	31
 10455  057C  0021               	movlb	1	; select bank1
 10456  057D  0423               	iorwf	??_LCDsend2x4^(0+128),w
 10457  057E  1D03               	btfss	3,2
 10458  057F  2D81               	goto	u3311
 10459  0580  2D82               	goto	u3310
 10460  0581                     u3311:
 10461  0581  2D73               	goto	l3897
 10462  0582                     u3310:
 10463  0582                     l1052:
 10464                           
 10465                           ;main.c: 151: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 10466  0582  0023               	movlb	3	; select bank3
 10467  0583  1511               	bsf	17,2	;volatile
 10468  0584                     l1053:
 10469  0584  1911               	btfsc	17,2	;volatile
 10470  0585  2D87               	goto	u3321
 10471  0586  2D88               	goto	u3320
 10472  0587                     u3321:
 10473  0587  2D84               	goto	l1053
 10474  0588                     u3320:
 10475  0588                     l3899:
 10476                           
 10477                           ;main.c: 152: _delay((unsigned long)((50)*(1000000/4000000.0)));
 10478  0588  3004               	movlw	4
 10479  0589                     u4327:
 10480  0589  0B89               	decfsz	9,f
 10481  058A  2D89               	goto	u4327
 10482  058B                     l1056:
 10483  058B  0008               	return
 10484  058C                     __end_of_LCDsend2x4:
 10485                           
 10486                           	psect	text21
 10487  0E73                     __ptext21:	
 10488 ;; *************** function _LCDsend *****************
 10489 ;; Defined at:
 10490 ;;		line 93 in file "main.c"
 10491 ;; Parameters:    Size  Location     Type
 10492 ;;  c               1    wreg     unsigned char 
 10493 ;; Auto vars:     Size  Location     Type
 10494 ;;  c               1    3[BANK1 ] unsigned char 
 10495 ;; Return value:  Size  Location     Type
 10496 ;;                  1    wreg      void 
 10497 ;; Registers used:
 10498 ;;		wreg, status,2, status,0, pclath, cstack
 10499 ;; Tracked objects:
 10500 ;;		On entry : 0/0
 10501 ;;		On exit  : 0/0
 10502 ;;		Unchanged: 0/0
 10503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10505 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10506 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10507 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10508 ;;Total ram usage:        2 bytes
 10509 ;; Hardware stack levels used:    1
 10510 ;; Hardware stack levels required when called:    8
 10511 ;; This function calls:
 10512 ;;		_WriteI2C
 10513 ;; This function is called by:
 10514 ;;		_LCDinit
 10515 ;; This function uses a non-reentrant model
 10516 ;;
 10517                           
 10518                           
 10519                           ;psect for function _LCDsend
 10520  0E73                     _LCDsend:
 10521                           
 10522                           ;incstack = 0
 10523                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 10524                           ;LCDsend@c stored from wreg
 10525  0E73  0021               	movlb	1	; select bank1
 10526  0E74  00A3               	movwf	LCDsend@c^(0+128)
 10527  0E75                     l3849:
 10528  0E75                     l3851:	
 10529                           ;main.c: 95: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10530                           
 10531  0E75  0023               	movlb	3	; select bank3
 10532  0E76  0C0F               	rrf	15,w	;volatile
 10533  0E77  0C89               	rrf	9,f
 10534  0E78  3901               	andlw	1
 10535  0E79  0021               	movlb	1	; select bank1
 10536  0E7A  00A2               	movwf	??_LCDsend^(0+128)
 10537  0E7B  0023               	movlb	3	; select bank3
 10538  0E7C  0811               	movf	17,w	;volatile
 10539  0E7D  391F               	andlw	31
 10540  0E7E  0021               	movlb	1	; select bank1
 10541  0E7F  0422               	iorwf	??_LCDsend^(0+128),w
 10542  0E80  1D03               	btfss	3,2
 10543  0E81  2E83               	goto	u3151
 10544  0E82  2E84               	goto	u3150
 10545  0E83                     u3151:
 10546  0E83  2E75               	goto	l3851
 10547  0E84                     u3150:
 10548  0E84                     l923:
 10549                           
 10550                           ;main.c: 96: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 10551  0E84  0023               	movlb	3	; select bank3
 10552  0E85  1411               	bsf	17,0	;volatile
 10553  0E86                     l924:
 10554  0E86  1811               	btfsc	17,0	;volatile
 10555  0E87  2E89               	goto	u3161
 10556  0E88  2E8A               	goto	u3160
 10557  0E89                     u3161:
 10558  0E89  2E86               	goto	l924
 10559  0E8A                     u3160:
 10560  0E8A                     l3853:
 10561  0E8A  0023               	movlb	3	; select bank3
 10562  0E8B  0C0F               	rrf	15,w	;volatile
 10563  0E8C  0C89               	rrf	9,f
 10564  0E8D  3901               	andlw	1
 10565  0E8E  0021               	movlb	1	; select bank1
 10566  0E8F  00A2               	movwf	??_LCDsend^(0+128)
 10567  0E90  0023               	movlb	3	; select bank3
 10568  0E91  0811               	movf	17,w	;volatile
 10569  0E92  391F               	andlw	31
 10570  0E93  0021               	movlb	1	; select bank1
 10571  0E94  0422               	iorwf	??_LCDsend^(0+128),w
 10572  0E95  1D03               	btfss	3,2
 10573  0E96  2E98               	goto	u3171
 10574  0E97  2E99               	goto	u3170
 10575  0E98                     u3171:
 10576  0E98  2E8A               	goto	l3853
 10577  0E99                     u3170:
 10578  0E99                     l3855:
 10579                           
 10580                           ;main.c: 97: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10581  0E99  304E               	movlw	78
 10582  0E9A  318E  26C6  318E   	fcall	_WriteI2C
 10583  0E9D                     l3857:
 10584  0E9D  0023               	movlb	3	; select bank3
 10585  0E9E  0C0F               	rrf	15,w	;volatile
 10586  0E9F  0C89               	rrf	9,f
 10587  0EA0  3901               	andlw	1
 10588  0EA1  0021               	movlb	1	; select bank1
 10589  0EA2  00A2               	movwf	??_LCDsend^(0+128)
 10590  0EA3  0023               	movlb	3	; select bank3
 10591  0EA4  0811               	movf	17,w	;volatile
 10592  0EA5  391F               	andlw	31
 10593  0EA6  0021               	movlb	1	; select bank1
 10594  0EA7  0422               	iorwf	??_LCDsend^(0+128),w
 10595  0EA8  1D03               	btfss	3,2
 10596  0EA9  2EAB               	goto	u3181
 10597  0EAA  2EAC               	goto	u3180
 10598  0EAB                     u3181:
 10599  0EAB  2E9D               	goto	l3857
 10600  0EAC                     u3180:
 10601  0EAC                     l3859:
 10602                           
 10603                           ;main.c: 98: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10604  0EAC  0823               	movf	LCDsend@c^(0+128),w
 10605  0EAD  318E  26C6  318E   	fcall	_WriteI2C
 10606  0EB0                     l3861:
 10607  0EB0  0023               	movlb	3	; select bank3
 10608  0EB1  0C0F               	rrf	15,w	;volatile
 10609  0EB2  0C89               	rrf	9,f
 10610  0EB3  3901               	andlw	1
 10611  0EB4  0021               	movlb	1	; select bank1
 10612  0EB5  00A2               	movwf	??_LCDsend^(0+128)
 10613  0EB6  0023               	movlb	3	; select bank3
 10614  0EB7  0811               	movf	17,w	;volatile
 10615  0EB8  391F               	andlw	31
 10616  0EB9  0021               	movlb	1	; select bank1
 10617  0EBA  0422               	iorwf	??_LCDsend^(0+128),w
 10618  0EBB  1D03               	btfss	3,2
 10619  0EBC  2EBE               	goto	u3191
 10620  0EBD  2EBF               	goto	u3190
 10621  0EBE                     u3191:
 10622  0EBE  2EB0               	goto	l3861
 10623  0EBF                     u3190:
 10624  0EBF                     l935:
 10625                           
 10626                           ;main.c: 99: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 10627  0EBF  0023               	movlb	3	; select bank3
 10628  0EC0  1511               	bsf	17,2	;volatile
 10629  0EC1                     l936:
 10630  0EC1  1911               	btfsc	17,2	;volatile
 10631  0EC2  2EC4               	goto	u3201
 10632  0EC3  2EC5               	goto	u3200
 10633  0EC4                     u3201:
 10634  0EC4  2EC1               	goto	l936
 10635  0EC5                     u3200:
 10636  0EC5                     l939:
 10637  0EC5  0008               	return
 10638  0EC6                     __end_of_LCDsend:
 10639                           
 10640                           	psect	text22
 10641  0EC6                     __ptext22:	
 10642 ;; *************** function _WriteI2C *****************
 10643 ;; Defined at:
 10644 ;;		line 47 in file "I2C/i2c.c"
 10645 ;; Parameters:    Size  Location     Type
 10646 ;;  data_out        1    wreg     unsigned char 
 10647 ;; Auto vars:     Size  Location     Type
 10648 ;;  data_out        1    1[BANK1 ] unsigned char 
 10649 ;; Return value:  Size  Location     Type
 10650 ;;                  1    wreg      char 
 10651 ;; Registers used:
 10652 ;;		wreg, status,2, status,0
 10653 ;; Tracked objects:
 10654 ;;		On entry : 0/0
 10655 ;;		On exit  : 0/0
 10656 ;;		Unchanged: 0/0
 10657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10659 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10660 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10661 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10662 ;;Total ram usage:        2 bytes
 10663 ;; Hardware stack levels used:    1
 10664 ;; Hardware stack levels required when called:    7
 10665 ;; This function calls:
 10666 ;;		Nothing
 10667 ;; This function is called by:
 10668 ;;		_LCDsend
 10669 ;;		_LCDsend2x4
 10670 ;;		_LCDrecv
 10671 ;; This function uses a non-reentrant model
 10672 ;;
 10673                           
 10674                           
 10675                           ;psect for function _WriteI2C
 10676  0EC6                     _WriteI2C:
 10677                           
 10678                           ;incstack = 0
 10679                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 10680                           ;WriteI2C@data_out stored from wreg
 10681  0EC6  0021               	movlb	1	; select bank1
 10682  0EC7  00A1               	movwf	WriteI2C@data_out^(0+128)
 10683  0EC8                     l3435:
 10684                           
 10685                           ;i2c.c: 49: SSP1BUF = data_out;
 10686  0EC8  0821               	movf	WriteI2C@data_out^(0+128),w
 10687  0EC9  0023               	movlb	3	; select bank3
 10688  0ECA  008C               	movwf	12	;volatile
 10689  0ECB                     l3437:
 10690                           
 10691                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 10692  0ECB  1F90               	btfss	16,7	;volatile
 10693  0ECC  2ECE               	goto	u2551
 10694  0ECD  2ECF               	goto	u2550
 10695  0ECE                     u2551:
 10696  0ECE  2ED0               	goto	l3443
 10697  0ECF                     u2550:
 10698  0ECF  2F1F               	goto	l30
 10699  0ED0                     l3443:
 10700                           
 10701                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 10702  0ED0  300F               	movlw	15
 10703  0ED1  0510               	andwf	16,w	;volatile
 10704  0ED2  0021               	movlb	1	; select bank1
 10705  0ED3  00A0               	movwf	??_WriteI2C^(0+128)
 10706  0ED4  3008               	movlw	8
 10707  0ED5  0620               	xorwf	??_WriteI2C^(0+128),w
 10708  0ED6  1903               	btfsc	3,2
 10709  0ED7  2ED9               	goto	u2561
 10710  0ED8  2EDA               	goto	u2560
 10711  0ED9                     u2561:
 10712  0ED9  2EF3               	goto	l3455
 10713  0EDA                     u2560:
 10714  0EDA                     l3445:
 10715  0EDA  300F               	movlw	15
 10716  0EDB  0023               	movlb	3	; select bank3
 10717  0EDC  0510               	andwf	16,w	;volatile
 10718  0EDD  0021               	movlb	1	; select bank1
 10719  0EDE  00A0               	movwf	??_WriteI2C^(0+128)
 10720  0EDF  300B               	movlw	11
 10721  0EE0  0620               	xorwf	??_WriteI2C^(0+128),w
 10722  0EE1  1903               	btfsc	3,2
 10723  0EE2  2EE4               	goto	u2571
 10724  0EE3  2EE5               	goto	u2570
 10725  0EE4                     u2571:
 10726  0EE4  2EF3               	goto	l3455
 10727  0EE5                     u2570:
 10728  0EE5                     l3447:
 10729                           
 10730                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 10731  0EE5  0023               	movlb	3	; select bank3
 10732  0EE6  1610               	bsf	16,4	;volatile
 10733  0EE7                     l33:	
 10734                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 10735                           
 10736  0EE7  002E               	movlb	14	; select bank14
 10737  0EE8  1C0F               	btfss	15,0	;volatile
 10738  0EE9  2EEB               	goto	u2581
 10739  0EEA  2EEC               	goto	u2580
 10740  0EEB                     u2581:
 10741  0EEB  2EE7               	goto	l33
 10742  0EEC                     u2580:
 10743  0EEC                     l35:
 10744                           
 10745                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 10746  0EEC  0023               	movlb	3	; select bank3
 10747  0EED  190F               	btfsc	15,2	;volatile
 10748  0EEE  2EF0               	goto	u2591
 10749  0EEF  2EF1               	goto	u2590
 10750  0EF0                     u2591:
 10751  0EF0  2F1F               	goto	l30
 10752  0EF1                     u2590:
 10753  0EF1                     l3449:
 10754  0EF1  080F               	movf	15,w	;volatile
 10755  0EF2  2F1F               	goto	l30
 10756  0EF3                     l3455:
 10757                           
 10758                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 10759  0EF3  300F               	movlw	15
 10760  0EF4  0023               	movlb	3	; select bank3
 10761  0EF5  0510               	andwf	16,w	;volatile
 10762  0EF6  0021               	movlb	1	; select bank1
 10763  0EF7  00A0               	movwf	??_WriteI2C^(0+128)
 10764  0EF8  3008               	movlw	8
 10765  0EF9  0620               	xorwf	??_WriteI2C^(0+128),w
 10766  0EFA  1903               	btfsc	3,2
 10767  0EFB  2EFD               	goto	u2601
 10768  0EFC  2EFE               	goto	u2600
 10769  0EFD                     u2601:
 10770  0EFD  2F09               	goto	l42
 10771  0EFE                     u2600:
 10772  0EFE                     l3457:
 10773  0EFE  300F               	movlw	15
 10774  0EFF  0023               	movlb	3	; select bank3
 10775  0F00  0510               	andwf	16,w	;volatile
 10776  0F01  0021               	movlb	1	; select bank1
 10777  0F02  00A0               	movwf	??_WriteI2C^(0+128)
 10778  0F03  300B               	movlw	11
 10779  0F04  0620               	xorwf	??_WriteI2C^(0+128),w
 10780  0F05  1D03               	btfss	3,2
 10781  0F06  2F08               	goto	u2611
 10782  0F07  2F09               	goto	u2610
 10783  0F08                     u2611:
 10784  0F08  2F1F               	goto	l30
 10785  0F09                     u2610:
 10786  0F09                     l42:
 10787  0F09  0023               	movlb	3	; select bank3
 10788  0F0A  180F               	btfsc	15,0	;volatile
 10789  0F0B  2F0D               	goto	u2621
 10790  0F0C  2F0E               	goto	u2620
 10791  0F0D                     u2621:
 10792  0F0D  2F09               	goto	l42
 10793  0F0E                     u2620:
 10794  0F0E                     l3459:
 10795  0F0E  0023               	movlb	3	; select bank3
 10796  0F0F  0C0F               	rrf	15,w	;volatile
 10797  0F10  0C89               	rrf	9,f
 10798  0F11  3901               	andlw	1
 10799  0F12  0021               	movlb	1	; select bank1
 10800  0F13  00A0               	movwf	??_WriteI2C^(0+128)
 10801  0F14  0023               	movlb	3	; select bank3
 10802  0F15  0811               	movf	17,w	;volatile
 10803  0F16  391F               	andlw	31
 10804  0F17  0021               	movlb	1	; select bank1
 10805  0F18  0420               	iorwf	??_WriteI2C^(0+128),w
 10806  0F19  1D03               	btfss	3,2
 10807  0F1A  2F1C               	goto	u2631
 10808  0F1B  2F1D               	goto	u2630
 10809  0F1C                     u2631:
 10810  0F1C  2F0E               	goto	l3459
 10811  0F1D                     u2630:
 10812  0F1D                     l47:
 10813                           
 10814                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 10815  0F1D  0023               	movlb	3	; select bank3
 10816  0F1E  0811               	movf	17,w	;volatile
 10817  0F1F                     l30:
 10818  0F1F  0008               	return
 10819  0F20                     __end_of_WriteI2C:
 10820                           
 10821                           	psect	intentry
 10822  0004                     __pintentry:	
 10823 ;; *************** function _INTERRUPT_InterruptManager *****************
 10824 ;; Defined at:
 10825 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10826 ;; Parameters:    Size  Location     Type
 10827 ;;		None
 10828 ;; Auto vars:     Size  Location     Type
 10829 ;;		None
 10830 ;; Return value:  Size  Location     Type
 10831 ;;                  1    wreg      void 
 10832 ;; Registers used:
 10833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10834 ;; Tracked objects:
 10835 ;;		On entry : 0/0
 10836 ;;		On exit  : 0/0
 10837 ;;		Unchanged: 0/0
 10838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10843 ;;Total ram usage:        0 bytes
 10844 ;; Hardware stack levels used:    1
 10845 ;; Hardware stack levels required when called:    6
 10846 ;; This function calls:
 10847 ;;		_TMR1_ISR
 10848 ;;		_TMR3_ISR
 10849 ;;		_TMR5_ISR
 10850 ;; This function is called by:
 10851 ;;		Interrupt level 1
 10852 ;; This function uses a non-reentrant model
 10853 ;;
 10854                           
 10855  0004                     _INTERRUPT_InterruptManager:
 10856                           
 10857                           ;incstack = 0
 10858  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 10859                           
 10860                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10861  0005  3180               	pagesel	$
 10862  0006                     i1l4235:
 10863                           
 10864                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
 10865  0006  1F0B               	btfss	11,6	;volatile
 10866  0007  2809               	goto	u403_21
 10867  0008  280A               	goto	u403_20
 10868  0009                     u403_21:
 10869  0009  283E               	goto	i1l356
 10870  000A                     u403_20:
 10871  000A                     i1l4237:
 10872                           
 10873                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE4bits.TMR5IE == 1 && PIR4bits
      +                          .TMR5IF == 1)
 10874  000A  002E               	movlb	14	; select bank14
 10875  000B  1E1A               	btfss	26,4	;volatile
 10876  000C  280E               	goto	u404_21
 10877  000D  280F               	goto	u404_20
 10878  000E                     u404_21:
 10879  000E  2817               	goto	i1l345
 10880  000F                     u404_20:
 10881  000F                     i1l4239:
 10882  000F  1E10               	btfss	16,4	;volatile
 10883  0010  2812               	goto	u405_21
 10884  0011  2813               	goto	u405_20
 10885  0012                     u405_21:
 10886  0012  2817               	goto	i1l345
 10887  0013                     u405_20:
 10888  0013                     i1l4241:
 10889                           
 10890                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: TMR5_ISR();
 10891  0013  318C  249C  3180   	fcall	_TMR5_ISR
 10892                           
 10893                           ;interrupt_manager.c: 60: }
 10894  0016  283E               	goto	i1l356
 10895  0017                     i1l345:
 10896                           
 10897                           ;interrupt_manager.c: 61: else if(PIE4bits.TMR3IE == 1 && PIR4bits.TMR3IF == 1)
 10898  0017  1D1A               	btfss	26,2	;volatile
 10899  0018  281A               	goto	u406_21
 10900  0019  281B               	goto	u406_20
 10901  001A                     u406_21:
 10902  001A  2823               	goto	i1l347
 10903  001B                     u406_20:
 10904  001B                     i1l4243:
 10905  001B  1D10               	btfss	16,2	;volatile
 10906  001C  281E               	goto	u407_21
 10907  001D  281F               	goto	u407_20
 10908  001E                     u407_21:
 10909  001E  2823               	goto	i1l347
 10910  001F                     u407_20:
 10911  001F                     i1l4245:
 10912                           
 10913                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR3_ISR();
 10914  001F  318C  2485  3180   	fcall	_TMR3_ISR
 10915                           
 10916                           ;interrupt_manager.c: 64: }
 10917  0022  283E               	goto	i1l356
 10918  0023                     i1l347:
 10919                           
 10920                           ;interrupt_manager.c: 65: else if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 10921  0023  1C1A               	btfss	26,0	;volatile
 10922  0024  2826               	goto	u408_21
 10923  0025  2827               	goto	u408_20
 10924  0026                     u408_21:
 10925  0026  282F               	goto	i1l349
 10926  0027                     u408_20:
 10927  0027                     i1l4247:
 10928  0027  1C10               	btfss	16,0	;volatile
 10929  0028  282A               	goto	u409_21
 10930  0029  282B               	goto	u409_20
 10931  002A                     u409_21:
 10932  002A  282F               	goto	i1l349
 10933  002B                     u409_20:
 10934  002B                     i1l4249:
 10935                           
 10936                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: TMR1_ISR();
 10937  002B  318C  246E  3180   	fcall	_TMR1_ISR
 10938                           
 10939                           ;interrupt_manager.c: 68: }
 10940  002E  283E               	goto	i1l356
 10941  002F                     i1l349:
 10942                           
 10943                           ;interrupt_manager.c: 69: else if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 10944  002F  1C99               	btfss	25,1	;volatile
 10945  0030  2832               	goto	u410_21
 10946  0031  2833               	goto	u410_20
 10947  0032                     u410_21:
 10948  0032  2838               	goto	i1l351
 10949  0033                     u410_20:
 10950  0033                     i1l4251:
 10951                           
 10952                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: i2c1_driver_busCollisionISR();
 10953  0033  1C8F               	btfss	15,1	;volatile
 10954  0034  2836               	goto	u411_21
 10955  0035  2837               	goto	u411_20
 10956  0036                     u411_21:
 10957  0036  2838               	goto	i1l351
 10958  0037                     u411_20:
 10959  0037  283E               	goto	i1l356
 10960  0038                     i1l351:
 10961                           
 10962                           ;interrupt_manager.c: 73: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 10963  0038  1C19               	btfss	25,0	;volatile
 10964  0039  283B               	goto	u412_21
 10965  003A  283C               	goto	u412_20
 10966  003B                     u412_21:
 10967  003B  283E               	goto	i1l350
 10968  003C                     u412_20:
 10969  003C                     i1l4255:
 10970                           
 10971                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: i2c1_driver_i2cISR();
 10972  003C  080F               	movf	15,w	;volatile
 10973  003D  283E               	goto	i1l356
 10974  003E                     i1l350:
 10975  003E                     i1l356:
 10976  003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10977  003F  0009               	retfie
 10978  0040                     __end_of_INTERRUPT_InterruptManager:
 10979                           
 10980                           	psect	text24
 10981  0C9C                     __ptext24:	
 10982 ;; *************** function _TMR5_ISR *****************
 10983 ;; Defined at:
 10984 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 10985 ;; Parameters:    Size  Location     Type
 10986 ;;		None
 10987 ;; Auto vars:     Size  Location     Type
 10988 ;;		None
 10989 ;; Return value:  Size  Location     Type
 10990 ;;                  1    wreg      void 
 10991 ;; Registers used:
 10992 ;;		wreg, status,2, status,0, pclath, cstack
 10993 ;; Tracked objects:
 10994 ;;		On entry : 0/0
 10995 ;;		On exit  : 0/0
 10996 ;;		Unchanged: 0/0
 10997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11002 ;;Total ram usage:        0 bytes
 11003 ;; Hardware stack levels used:    1
 11004 ;; Hardware stack levels required when called:    3
 11005 ;; This function calls:
 11006 ;;		Absolute function
 11007 ;;		_TMR5_DefaultInterruptHandler
 11008 ;;		_TMR5_WriteTimer
 11009 ;;		_monitoring_ISR
 11010 ;; This function is called by:
 11011 ;;		_INTERRUPT_InterruptManager
 11012 ;; This function uses a non-reentrant model
 11013 ;;
 11014                           
 11015                           
 11016                           ;psect for function _TMR5_ISR
 11017  0C9C                     _TMR5_ISR:
 11018  0C9C                     i1l4069:	
 11019                           ;incstack = 0
 11020                           ; Regs used in _TMR5_ISR: [wreg+status,2+status,0+pclath+cstack]
 11021                           
 11022                           
 11023                           ;tmr5.c: 169: PIR4bits.TMR5IF = 0;
 11024  0C9C  002E               	movlb	14	; select bank14
 11025  0C9D  1210               	bcf	16,4	;volatile
 11026  0C9E                     i1l4071:
 11027                           
 11028                           ;tmr5.c: 170: TMR5_WriteTimer(timer5ReloadVal);
 11029  0C9E  0021               	movlb	1	; select bank1
 11030  0C9F  082D               	movf	(_timer5ReloadVal+1)^(0+128),w	;volatile
 11031  0CA0  00F1               	movwf	TMR5_WriteTimer@timerVal+1
 11032  0CA1  082C               	movf	_timer5ReloadVal^(0+128),w	;volatile
 11033  0CA2  00F0               	movwf	TMR5_WriteTimer@timerVal
 11034  0CA3  318C  240F  318C   	fcall	_TMR5_WriteTimer
 11035  0CA6                     i1l4073:
 11036                           
 11037                           ;tmr5.c: 172: if(TMR5_InterruptHandler)
 11038  0CA6  0021               	movlb	1	; select bank1
 11039  0CA7  082A               	movf	_TMR5_InterruptHandler^(0+128),w
 11040  0CA8  042B               	iorwf	(_TMR5_InterruptHandler+1)^(0+128),w
 11041  0CA9  1903               	btfsc	3,2
 11042  0CAA  2CAC               	goto	u363_21
 11043  0CAB  2CAD               	goto	u363_20
 11044  0CAC                     u363_21:
 11045  0CAC  2CB2               	goto	i1l702
 11046  0CAD                     u363_20:
 11047  0CAD                     i1l4075:
 11048                           
 11049                           ;tmr5.c: 173: {;tmr5.c: 174: TMR5_InterruptHandler();
 11050  0CAD  082B               	movf	(_TMR5_InterruptHandler+1)^(0+128),w
 11051  0CAE  008A               	movwf	10
 11052  0CAF  082A               	movf	_TMR5_InterruptHandler^(0+128),w
 11053  0CB0  000A               	callw
 11054  0CB1  318C               	pagesel	$
 11055  0CB2                     i1l702:
 11056  0CB2  0008               	return
 11057  0CB3                     __end_of_TMR5_ISR:
 11058                           
 11059                           	psect	text25
 11060  0003                     __ptext25:	
 11061 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 11062 ;; Defined at:
 11063 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 11064 ;; Parameters:    Size  Location     Type
 11065 ;;		None
 11066 ;; Auto vars:     Size  Location     Type
 11067 ;;		None
 11068 ;; Return value:  Size  Location     Type
 11069 ;;                  1    wreg      void 
 11070 ;; Registers used:
 11071 ;;		None
 11072 ;; Tracked objects:
 11073 ;;		On entry : 0/0
 11074 ;;		On exit  : 0/0
 11075 ;;		Unchanged: 0/0
 11076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11081 ;;Total ram usage:        0 bytes
 11082 ;; Hardware stack levels used:    1
 11083 ;; This function calls:
 11084 ;;		Nothing
 11085 ;; This function is called by:
 11086 ;;		_TMR5_Initialize
 11087 ;;		_TMR5_ISR
 11088 ;; This function uses a non-reentrant model
 11089 ;;
 11090                           
 11091                           
 11092                           ;psect for function _TMR5_DefaultInterruptHandler
 11093  0003                     _TMR5_DefaultInterruptHandler:
 11094  0003                     i1l708:	
 11095                           ;incstack = 0
 11096                           ; Regs used in _TMR5_DefaultInterruptHandler: []
 11097                           
 11098  0003  0008               	return
 11099  0004                     __end_of_TMR5_DefaultInterruptHandler:
 11100                           
 11101                           	psect	text26
 11102  0DEC                     __ptext26:	
 11103 ;; *************** function _monitoring_ISR *****************
 11104 ;; Defined at:
 11105 ;;		line 408 in file "main.c"
 11106 ;; Parameters:    Size  Location     Type
 11107 ;;		None
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;		None
 11110 ;; Return value:  Size  Location     Type
 11111 ;;                  1    wreg      void 
 11112 ;; Registers used:
 11113 ;;		wreg, status,2, status,0, pclath, cstack
 11114 ;; Tracked objects:
 11115 ;;		On entry : 0/0
 11116 ;;		On exit  : 0/0
 11117 ;;		Unchanged: 0/0
 11118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11121 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11122 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11123 ;;Total ram usage:        3 bytes
 11124 ;; Hardware stack levels used:    1
 11125 ;; Hardware stack levels required when called:    2
 11126 ;; This function calls:
 11127 ;;		_ADCC_GetSingleConversion
 11128 ;;		_tsttc
 11129 ;; This function is called by:
 11130 ;;		_main
 11131 ;;		_TMR5_ISR
 11132 ;; This function uses a non-reentrant model
 11133 ;;
 11134                           
 11135                           
 11136                           ;psect for function _monitoring_ISR
 11137  0DEC                     _monitoring_ISR:
 11138  0DEC                     i1l4021:	
 11139                           ;incstack = 0
 11140                           ; Regs used in _monitoring_ISR: [wreg+status,2+status,0+pclath+cstack]
 11141                           
 11142                           
 11143                           ;main.c: 409: temp = tsttc();
 11144  0DEC  3183  23AB  318D   	fcall	_tsttc
 11145  0DEF  00F4               	movwf	??_monitoring_ISR
 11146  0DF0  0874               	movf	??_monitoring_ISR,w
 11147  0DF1  0020               	movlb	0	; select bank0
 11148  0DF2  00DE               	movwf	_temp
 11149                           
 11150                           ;main.c: 411: lumLevel = ADCC_GetSingleConversion(channel_ANA0) >> 13;
 11151  0DF3  3000               	movlw	0
 11152  0DF4  318C  2432  318D   	fcall	_ADCC_GetSingleConversion
 11153  0DF7  0870               	movf	?_ADCC_GetSingleConversion,w
 11154  0DF8  00F4               	movwf	??_monitoring_ISR
 11155  0DF9  0871               	movf	?_ADCC_GetSingleConversion+1,w
 11156  0DFA  00F5               	movwf	??_monitoring_ISR+1
 11157  0DFB  300D               	movlw	13
 11158  0DFC                     u359_25:
 11159  0DFC  36F5               	lsrf	??_monitoring_ISR+1,f
 11160  0DFD  0CF4               	rrf	??_monitoring_ISR,f
 11161  0DFE  0B89               	decfsz	9,f
 11162  0DFF  2DFC               	goto	u359_25
 11163  0E00  0874               	movf	??_monitoring_ISR,w
 11164  0E01  00F6               	movwf	??_monitoring_ISR+2
 11165  0E02  0876               	movf	??_monitoring_ISR+2,w
 11166  0E03  0020               	movlb	0	; select bank0
 11167  0E04  00DD               	movwf	_lumLevel
 11168  0E05                     i1l4023:
 11169                           
 11170                           ;main.c: 414: if(lumAlarm.alarmLum > lumLevel){
 11171  0E05  0866               	movf	_lumAlarm,w
 11172  0E06  025D               	subwf	_lumLevel,w
 11173  0E07  1803               	skipnc
 11174  0E08  2E0A               	goto	u360_21
 11175  0E09  2E0B               	goto	u360_20
 11176  0E0A                     u360_21:
 11177  0E0A  2E15               	goto	i1l1167
 11178  0E0B                     u360_20:
 11179  0E0B                     i1l4025:
 11180                           
 11181                           ;main.c: 415: alarmPWMStart.h = -1;
 11182  0E0B  30FF               	movlw	255
 11183  0E0C  0021               	movlb	1	; select bank1
 11184  0E0D  00BA               	movwf	_alarmPWMStart^(0+128)
 11185  0E0E  30FF               	movlw	255
 11186  0E0F  00BB               	movwf	(_alarmPWMStart^(0+128)+1)
 11187  0E10                     i1l4027:
 11188                           
 11189                           ;main.c: 416: lumAlarm.trigger = 1;
 11190  0E10  0020               	movlb	0	; select bank0
 11191  0E11  01E7               	clrf	_lumAlarm+1
 11192  0E12  0AE7               	incf	_lumAlarm+1,f
 11193  0E13                     i1l4029:
 11194  0E13  1616               	bsf	22,4	;volatile
 11195  0E14  2E16               	goto	i1l4031
 11196  0E15                     i1l1167:	
 11197                           ;main.c: 419: do { LATAbits.LATA4 = 0; } while(0);
 11198                           
 11199  0E15  1216               	bcf	22,4	;volatile
 11200  0E16                     i1l4031:
 11201                           
 11202                           ;main.c: 420: };main.c: 423: if(tempAlarm.alarmTemp < temp){
 11203  0E16  085E               	movf	_temp,w
 11204  0E17  0268               	subwf	_tempAlarm,w
 11205  0E18  1803               	skipnc
 11206  0E19  2E1B               	goto	u361_21
 11207  0E1A  2E1C               	goto	u361_20
 11208  0E1B                     u361_21:
 11209  0E1B  2E26               	goto	i1l1173
 11210  0E1C                     u361_20:
 11211  0E1C                     i1l4033:
 11212                           
 11213                           ;main.c: 424: alarmPWMStart.h = -1;
 11214  0E1C  30FF               	movlw	255
 11215  0E1D  0021               	movlb	1	; select bank1
 11216  0E1E  00BA               	movwf	_alarmPWMStart^(0+128)
 11217  0E1F  30FF               	movlw	255
 11218  0E20  00BB               	movwf	(_alarmPWMStart^(0+128)+1)
 11219  0E21                     i1l4035:
 11220                           
 11221                           ;main.c: 425: tempAlarm.trigger = 1;
 11222  0E21  0020               	movlb	0	; select bank0
 11223  0E22  01E9               	clrf	_tempAlarm+1
 11224  0E23  0AE9               	incf	_tempAlarm+1,f
 11225  0E24                     i1l4037:
 11226  0E24  1696               	bsf	22,5	;volatile
 11227  0E25  2E27               	goto	i1l1175
 11228  0E26                     i1l1173:	
 11229                           ;main.c: 428: do { LATAbits.LATA5 = 0; } while(0);
 11230                           
 11231  0E26  1296               	bcf	22,5	;volatile
 11232  0E27                     i1l1175:
 11233  0E27  0008               	return
 11234  0E28                     __end_of_monitoring_ISR:
 11235                           
 11236                           	psect	text27
 11237  03AB                     __ptext27:	
 11238 ;; *************** function _tsttc *****************
 11239 ;; Defined at:
 11240 ;;		line 58 in file "main.c"
 11241 ;; Parameters:    Size  Location     Type
 11242 ;;		None
 11243 ;; Auto vars:     Size  Location     Type
 11244 ;;  value           1    3[COMMON] unsigned char 
 11245 ;; Return value:  Size  Location     Type
 11246 ;;                  1    wreg      unsigned char 
 11247 ;; Registers used:
 11248 ;;		wreg, status,2, status,0, pclath, cstack
 11249 ;; Tracked objects:
 11250 ;;		On entry : 0/0
 11251 ;;		On exit  : 0/0
 11252 ;;		Unchanged: 0/0
 11253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11257 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11258 ;;Total ram usage:        2 bytes
 11259 ;; Hardware stack levels used:    1
 11260 ;; Hardware stack levels required when called:    1
 11261 ;; This function calls:
 11262 ;;		_ReadI2C
 11263 ;;		i1_WriteI2C
 11264 ;; This function is called by:
 11265 ;;		_monitoring_ISR
 11266 ;; This function uses a non-reentrant model
 11267 ;;
 11268                           
 11269                           
 11270                           ;psect for function _tsttc
 11271  03AB                     _tsttc:
 11272  03AB                     i1l844:	
 11273                           ;incstack = 0
 11274                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 11275                           ;main.c: 60: unsigned char value;;main.c: 61: do{
 11276                           
 11277  03AB                     i1l3489:	
 11278                           ;main.c: 62: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11279                           
 11280  03AB  0023               	movlb	3	; select bank3
 11281  03AC  0C0F               	rrf	15,w	;volatile
 11282  03AD  0C89               	rrf	9,f
 11283  03AE  3901               	andlw	1
 11284  03AF  00F2               	movwf	??_tsttc
 11285  03B0  0811               	movf	17,w	;volatile
 11286  03B1  391F               	andlw	31
 11287  03B2  0472               	iorwf	??_tsttc,w
 11288  03B3  1D03               	btfss	3,2
 11289  03B4  2BB6               	goto	u266_21
 11290  03B5  2BB7               	goto	u266_20
 11291  03B6                     u266_21:
 11292  03B6  2BAB               	goto	i1l3489
 11293  03B7                     u266_20:
 11294  03B7                     i1l847:
 11295                           
 11296                           ;main.c: 63: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 11297  03B7  1411               	bsf	17,0	;volatile
 11298  03B8                     i1l848:
 11299  03B8  1811               	btfsc	17,0	;volatile
 11300  03B9  2BBB               	goto	u267_21
 11301  03BA  2BBC               	goto	u267_20
 11302  03BB                     u267_21:
 11303  03BB  2BB8               	goto	i1l848
 11304  03BC                     u267_20:
 11305  03BC                     i1l3491:
 11306  03BC  0C0F               	rrf	15,w	;volatile
 11307  03BD  0C89               	rrf	9,f
 11308  03BE  3901               	andlw	1
 11309  03BF  00F2               	movwf	??_tsttc
 11310  03C0  0811               	movf	17,w	;volatile
 11311  03C1  391F               	andlw	31
 11312  03C2  0472               	iorwf	??_tsttc,w
 11313  03C3  1D03               	btfss	3,2
 11314  03C4  2BC6               	goto	u268_21
 11315  03C5  2BC7               	goto	u268_20
 11316  03C6                     u268_21:
 11317  03C6  2BBC               	goto	i1l3491
 11318  03C7                     u268_20:
 11319  03C7                     i1l3493:
 11320                           
 11321                           ;main.c: 65: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11322  03C7  309A               	movlw	154
 11323  03C8  318E  2628  3183   	fcall	i1_WriteI2C
 11324  03CB                     i1l3495:
 11325  03CB  0023               	movlb	3	; select bank3
 11326  03CC  0C0F               	rrf	15,w	;volatile
 11327  03CD  0C89               	rrf	9,f
 11328  03CE  3901               	andlw	1
 11329  03CF  00F2               	movwf	??_tsttc
 11330  03D0  0811               	movf	17,w	;volatile
 11331  03D1  391F               	andlw	31
 11332  03D2  0472               	iorwf	??_tsttc,w
 11333  03D3  1D03               	btfss	3,2
 11334  03D4  2BD6               	goto	u269_21
 11335  03D5  2BD7               	goto	u269_20
 11336  03D6                     u269_21:
 11337  03D6  2BCB               	goto	i1l3495
 11338  03D7                     u269_20:
 11339  03D7                     i1l3497:
 11340                           
 11341                           ;main.c: 66: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11342  03D7  3001               	movlw	1
 11343  03D8  318E  2628  3183   	fcall	i1_WriteI2C
 11344  03DB                     i1l3499:
 11345  03DB  0023               	movlb	3	; select bank3
 11346  03DC  0C0F               	rrf	15,w	;volatile
 11347  03DD  0C89               	rrf	9,f
 11348  03DE  3901               	andlw	1
 11349  03DF  00F2               	movwf	??_tsttc
 11350  03E0  0811               	movf	17,w	;volatile
 11351  03E1  391F               	andlw	31
 11352  03E2  0472               	iorwf	??_tsttc,w
 11353  03E3  1D03               	btfss	3,2
 11354  03E4  2BE6               	goto	u270_21
 11355  03E5  2BE7               	goto	u270_20
 11356  03E6                     u270_21:
 11357  03E6  2BDB               	goto	i1l3499
 11358  03E7                     u270_20:
 11359  03E7                     i1l859:
 11360                           
 11361                           ;main.c: 67: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 11362  03E7  1491               	bsf	17,1	;volatile
 11363  03E8                     i1l860:
 11364  03E8  1891               	btfsc	17,1	;volatile
 11365  03E9  2BEB               	goto	u271_21
 11366  03EA  2BEC               	goto	u271_20
 11367  03EB                     u271_21:
 11368  03EB  2BE8               	goto	i1l860
 11369  03EC                     u271_20:
 11370  03EC                     i1l3501:
 11371  03EC  0C0F               	rrf	15,w	;volatile
 11372  03ED  0C89               	rrf	9,f
 11373  03EE  3901               	andlw	1
 11374  03EF  00F2               	movwf	??_tsttc
 11375  03F0  0811               	movf	17,w	;volatile
 11376  03F1  391F               	andlw	31
 11377  03F2  0472               	iorwf	??_tsttc,w
 11378  03F3  1D03               	btfss	3,2
 11379  03F4  2BF6               	goto	u272_21
 11380  03F5  2BF7               	goto	u272_20
 11381  03F6                     u272_21:
 11382  03F6  2BEC               	goto	i1l3501
 11383  03F7                     u272_20:
 11384  03F7                     i1l3503:
 11385                           
 11386                           ;main.c: 68: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11387  03F7  309B               	movlw	155
 11388  03F8  318E  2628  3183   	fcall	i1_WriteI2C
 11389  03FB                     i1l3505:
 11390  03FB  0023               	movlb	3	; select bank3
 11391  03FC  0C0F               	rrf	15,w	;volatile
 11392  03FD  0C89               	rrf	9,f
 11393  03FE  3901               	andlw	1
 11394  03FF  00F2               	movwf	??_tsttc
 11395  0400  0811               	movf	17,w	;volatile
 11396  0401  391F               	andlw	31
 11397  0402  0472               	iorwf	??_tsttc,w
 11398  0403  1D03               	btfss	3,2
 11399  0404  2C06               	goto	u273_21
 11400  0405  2C07               	goto	u273_20
 11401  0406                     u273_21:
 11402  0406  2BFB               	goto	i1l3505
 11403  0407                     u273_20:
 11404  0407                     i1l3507:
 11405                           
 11406                           ;main.c: 69: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11407  0407  318C  24CA  3183   	fcall	_ReadI2C
 11408  040A  00F2               	movwf	??_tsttc
 11409  040B  0872               	movf	??_tsttc,w
 11410  040C  00F3               	movwf	tsttc@value
 11411  040D                     i1l3509:
 11412  040D  0023               	movlb	3	; select bank3
 11413  040E  0C0F               	rrf	15,w	;volatile
 11414  040F  0C89               	rrf	9,f
 11415  0410  3901               	andlw	1
 11416  0411  00F2               	movwf	??_tsttc
 11417  0412  0811               	movf	17,w	;volatile
 11418  0413  391F               	andlw	31
 11419  0414  0472               	iorwf	??_tsttc,w
 11420  0415  1D03               	btfss	3,2
 11421  0416  2C18               	goto	u274_21
 11422  0417  2C19               	goto	u274_20
 11423  0418                     u274_21:
 11424  0418  2C0D               	goto	i1l3509
 11425  0419                     u274_20:
 11426  0419                     i1l871:
 11427                           
 11428                           ;main.c: 70: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11429  0419  1691               	bsf	17,5	;volatile
 11430  041A  1611               	bsf	17,4	;volatile
 11431  041B                     i1l872:
 11432  041B  1A11               	btfsc	17,4	;volatile
 11433  041C  2C1E               	goto	u275_21
 11434  041D  2C1F               	goto	u275_20
 11435  041E                     u275_21:
 11436  041E  2C1B               	goto	i1l872
 11437  041F                     u275_20:
 11438  041F                     i1l3511:
 11439  041F  0C0F               	rrf	15,w	;volatile
 11440  0420  0C89               	rrf	9,f
 11441  0421  3901               	andlw	1
 11442  0422  00F2               	movwf	??_tsttc
 11443  0423  0811               	movf	17,w	;volatile
 11444  0424  391F               	andlw	31
 11445  0425  0472               	iorwf	??_tsttc,w
 11446  0426  1D03               	btfss	3,2
 11447  0427  2C29               	goto	u276_21
 11448  0428  2C2A               	goto	u276_20
 11449  0429                     u276_21:
 11450  0429  2C1F               	goto	i1l3511
 11451  042A                     u276_20:
 11452  042A                     i1l877:
 11453                           
 11454                           ;main.c: 71: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11455  042A  1511               	bsf	17,2	;volatile
 11456  042B                     i1l878:
 11457  042B  1911               	btfsc	17,2	;volatile
 11458  042C  2C2E               	goto	u277_21
 11459  042D  2C2F               	goto	u277_20
 11460  042E                     u277_21:
 11461  042E  2C2B               	goto	i1l878
 11462  042F                     u277_20:
 11463  042F                     i1l880:
 11464                           
 11465                           ;main.c: 72: } while (!(value & 0x40));
 11466  042F  1F73               	btfss	tsttc@value,6
 11467  0430  2C32               	goto	u278_21
 11468  0431  2C33               	goto	u278_20
 11469  0432                     u278_21:
 11470  0432  2BAB               	goto	i1l844
 11471  0433                     u278_20:
 11472  0433                     i1l3513:
 11473  0433  0C0F               	rrf	15,w	;volatile
 11474  0434  0C89               	rrf	9,f
 11475  0435  3901               	andlw	1
 11476  0436  00F2               	movwf	??_tsttc
 11477  0437  0811               	movf	17,w	;volatile
 11478  0438  391F               	andlw	31
 11479  0439  0472               	iorwf	??_tsttc,w
 11480  043A  1D03               	btfss	3,2
 11481  043B  2C3D               	goto	u279_21
 11482  043C  2C3E               	goto	u279_20
 11483  043D                     u279_21:
 11484  043D  2C33               	goto	i1l3513
 11485  043E                     u279_20:
 11486  043E                     i1l884:
 11487                           
 11488                           ;main.c: 75: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 11489  043E  1411               	bsf	17,0	;volatile
 11490  043F                     i1l885:
 11491  043F  1811               	btfsc	17,0	;volatile
 11492  0440  2C42               	goto	u280_21
 11493  0441  2C43               	goto	u280_20
 11494  0442                     u280_21:
 11495  0442  2C3F               	goto	i1l885
 11496  0443                     u280_20:
 11497  0443                     i1l3515:
 11498  0443  0C0F               	rrf	15,w	;volatile
 11499  0444  0C89               	rrf	9,f
 11500  0445  3901               	andlw	1
 11501  0446  00F2               	movwf	??_tsttc
 11502  0447  0811               	movf	17,w	;volatile
 11503  0448  391F               	andlw	31
 11504  0449  0472               	iorwf	??_tsttc,w
 11505  044A  1D03               	btfss	3,2
 11506  044B  2C4D               	goto	u281_21
 11507  044C  2C4E               	goto	u281_20
 11508  044D                     u281_21:
 11509  044D  2C43               	goto	i1l3515
 11510  044E                     u281_20:
 11511  044E                     i1l3517:
 11512                           
 11513                           ;main.c: 76: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11514  044E  309A               	movlw	154
 11515  044F  318E  2628  3183   	fcall	i1_WriteI2C
 11516  0452                     i1l3519:
 11517  0452  0023               	movlb	3	; select bank3
 11518  0453  0C0F               	rrf	15,w	;volatile
 11519  0454  0C89               	rrf	9,f
 11520  0455  3901               	andlw	1
 11521  0456  00F2               	movwf	??_tsttc
 11522  0457  0811               	movf	17,w	;volatile
 11523  0458  391F               	andlw	31
 11524  0459  0472               	iorwf	??_tsttc,w
 11525  045A  1D03               	btfss	3,2
 11526  045B  2C5D               	goto	u282_21
 11527  045C  2C5E               	goto	u282_20
 11528  045D                     u282_21:
 11529  045D  2C52               	goto	i1l3519
 11530  045E                     u282_20:
 11531  045E                     i1l3521:
 11532                           
 11533                           ;main.c: 77: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11534  045E  3000               	movlw	0
 11535  045F  318E  2628  3183   	fcall	i1_WriteI2C
 11536  0462                     i1l3523:
 11537  0462  0023               	movlb	3	; select bank3
 11538  0463  0C0F               	rrf	15,w	;volatile
 11539  0464  0C89               	rrf	9,f
 11540  0465  3901               	andlw	1
 11541  0466  00F2               	movwf	??_tsttc
 11542  0467  0811               	movf	17,w	;volatile
 11543  0468  391F               	andlw	31
 11544  0469  0472               	iorwf	??_tsttc,w
 11545  046A  1D03               	btfss	3,2
 11546  046B  2C6D               	goto	u283_21
 11547  046C  2C6E               	goto	u283_20
 11548  046D                     u283_21:
 11549  046D  2C62               	goto	i1l3523
 11550  046E                     u283_20:
 11551  046E                     i1l896:
 11552                           
 11553                           ;main.c: 78: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 11554  046E  1491               	bsf	17,1	;volatile
 11555  046F                     i1l897:
 11556  046F  1891               	btfsc	17,1	;volatile
 11557  0470  2C72               	goto	u284_21
 11558  0471  2C73               	goto	u284_20
 11559  0472                     u284_21:
 11560  0472  2C6F               	goto	i1l897
 11561  0473                     u284_20:
 11562  0473                     i1l3525:
 11563  0473  0C0F               	rrf	15,w	;volatile
 11564  0474  0C89               	rrf	9,f
 11565  0475  3901               	andlw	1
 11566  0476  00F2               	movwf	??_tsttc
 11567  0477  0811               	movf	17,w	;volatile
 11568  0478  391F               	andlw	31
 11569  0479  0472               	iorwf	??_tsttc,w
 11570  047A  1D03               	btfss	3,2
 11571  047B  2C7D               	goto	u285_21
 11572  047C  2C7E               	goto	u285_20
 11573  047D                     u285_21:
 11574  047D  2C73               	goto	i1l3525
 11575  047E                     u285_20:
 11576  047E                     i1l3527:
 11577                           
 11578                           ;main.c: 79: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11579  047E  309B               	movlw	155
 11580  047F  318E  2628  3183   	fcall	i1_WriteI2C
 11581  0482                     i1l3529:
 11582  0482  0023               	movlb	3	; select bank3
 11583  0483  0C0F               	rrf	15,w	;volatile
 11584  0484  0C89               	rrf	9,f
 11585  0485  3901               	andlw	1
 11586  0486  00F2               	movwf	??_tsttc
 11587  0487  0811               	movf	17,w	;volatile
 11588  0488  391F               	andlw	31
 11589  0489  0472               	iorwf	??_tsttc,w
 11590  048A  1D03               	btfss	3,2
 11591  048B  2C8D               	goto	u286_21
 11592  048C  2C8E               	goto	u286_20
 11593  048D                     u286_21:
 11594  048D  2C82               	goto	i1l3529
 11595  048E                     u286_20:
 11596  048E                     i1l3531:
 11597                           
 11598                           ;main.c: 80: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11599  048E  318C  24CA  3183   	fcall	_ReadI2C
 11600  0491  00F2               	movwf	??_tsttc
 11601  0492  0872               	movf	??_tsttc,w
 11602  0493  00F3               	movwf	tsttc@value
 11603  0494                     i1l3533:
 11604  0494  0023               	movlb	3	; select bank3
 11605  0495  0C0F               	rrf	15,w	;volatile
 11606  0496  0C89               	rrf	9,f
 11607  0497  3901               	andlw	1
 11608  0498  00F2               	movwf	??_tsttc
 11609  0499  0811               	movf	17,w	;volatile
 11610  049A  391F               	andlw	31
 11611  049B  0472               	iorwf	??_tsttc,w
 11612  049C  1D03               	btfss	3,2
 11613  049D  2C9F               	goto	u287_21
 11614  049E  2CA0               	goto	u287_20
 11615  049F                     u287_21:
 11616  049F  2C94               	goto	i1l3533
 11617  04A0                     u287_20:
 11618  04A0                     i1l908:
 11619                           
 11620                           ;main.c: 81: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11621  04A0  1691               	bsf	17,5	;volatile
 11622  04A1  1611               	bsf	17,4	;volatile
 11623  04A2                     i1l909:
 11624  04A2  1A11               	btfsc	17,4	;volatile
 11625  04A3  2CA5               	goto	u288_21
 11626  04A4  2CA6               	goto	u288_20
 11627  04A5                     u288_21:
 11628  04A5  2CA2               	goto	i1l909
 11629  04A6                     u288_20:
 11630  04A6                     i1l3535:
 11631  04A6  0C0F               	rrf	15,w	;volatile
 11632  04A7  0C89               	rrf	9,f
 11633  04A8  3901               	andlw	1
 11634  04A9  00F2               	movwf	??_tsttc
 11635  04AA  0811               	movf	17,w	;volatile
 11636  04AB  391F               	andlw	31
 11637  04AC  0472               	iorwf	??_tsttc,w
 11638  04AD  1D03               	btfss	3,2
 11639  04AE  2CB0               	goto	u289_21
 11640  04AF  2CB1               	goto	u289_20
 11641  04B0                     u289_21:
 11642  04B0  2CA6               	goto	i1l3535
 11643  04B1                     u289_20:
 11644  04B1                     i1l914:
 11645                           
 11646                           ;main.c: 82: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11647  04B1  1511               	bsf	17,2	;volatile
 11648  04B2                     i1l915:
 11649  04B2  1911               	btfsc	17,2	;volatile
 11650  04B3  2CB5               	goto	u290_21
 11651  04B4  2CB6               	goto	u290_20
 11652  04B5                     u290_21:
 11653  04B5  2CB2               	goto	i1l915
 11654  04B6                     u290_20:
 11655  04B6                     i1l3537:
 11656                           
 11657                           ;main.c: 84: return value;
 11658  04B6  0873               	movf	tsttc@value,w
 11659  04B7                     i1l918:
 11660  04B7  0008               	return
 11661  04B8                     __end_of_tsttc:
 11662                           
 11663                           	psect	text28
 11664  0CCA                     __ptext28:	
 11665 ;; *************** function _ReadI2C *****************
 11666 ;; Defined at:
 11667 ;;		line 32 in file "I2C/i2c.c"
 11668 ;; Parameters:    Size  Location     Type
 11669 ;;		None
 11670 ;; Auto vars:     Size  Location     Type
 11671 ;;		None
 11672 ;; Return value:  Size  Location     Type
 11673 ;;                  1    wreg      unsigned char 
 11674 ;; Registers used:
 11675 ;;		wreg, status,2, status,0
 11676 ;; Tracked objects:
 11677 ;;		On entry : 0/0
 11678 ;;		On exit  : 0/0
 11679 ;;		Unchanged: 0/0
 11680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11683 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11684 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11685 ;;Total ram usage:        1 bytes
 11686 ;; Hardware stack levels used:    1
 11687 ;; This function calls:
 11688 ;;		Nothing
 11689 ;; This function is called by:
 11690 ;;		_tsttc
 11691 ;;		_LCDrecv
 11692 ;; This function uses a non-reentrant model
 11693 ;;
 11694                           
 11695                           
 11696                           ;psect for function _ReadI2C
 11697  0CCA                     _ReadI2C:
 11698  0CCA                     i1l3347:	
 11699                           ;incstack = 0
 11700                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 11701                           
 11702                           
 11703                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 11704  0CCA  300F               	movlw	15
 11705  0CCB  0023               	movlb	3	; select bank3
 11706  0CCC  0510               	andwf	16,w	;volatile
 11707  0CCD  00F0               	movwf	??_ReadI2C
 11708  0CCE  3008               	movlw	8
 11709  0CCF  0670               	xorwf	??_ReadI2C,w
 11710  0CD0  1903               	btfsc	3,2
 11711  0CD1  2CD3               	goto	u233_21
 11712  0CD2  2CD4               	goto	u233_20
 11713  0CD3                     u233_21:
 11714  0CD3  2CDD               	goto	i1l22
 11715  0CD4                     u233_20:
 11716  0CD4                     i1l3349:
 11717  0CD4  300F               	movlw	15
 11718  0CD5  0510               	andwf	16,w	;volatile
 11719  0CD6  00F0               	movwf	??_ReadI2C
 11720  0CD7  300B               	movlw	11
 11721  0CD8  0670               	xorwf	??_ReadI2C,w
 11722  0CD9  1D03               	btfss	3,2
 11723  0CDA  2CDC               	goto	u234_21
 11724  0CDB  2CDD               	goto	u234_20
 11725  0CDC                     u234_21:
 11726  0CDC  2CDE               	goto	i1l23
 11727  0CDD                     u234_20:
 11728  0CDD                     i1l22:
 11729                           
 11730                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
 11731  0CDD  1591               	bsf	17,3	;volatile
 11732  0CDE                     i1l23:
 11733  0CDE  1C0F               	btfss	15,0	;volatile
 11734  0CDF  2CE1               	goto	u235_21
 11735  0CE0  2CE2               	goto	u235_20
 11736  0CE1                     u235_21:
 11737  0CE1  2CDE               	goto	i1l23
 11738  0CE2                     u235_20:
 11739  0CE2                     i1l3351:
 11740                           
 11741                           ;i2c.c: 37: return ( SSP1BUF );
 11742  0CE2  080C               	movf	12,w	;volatile
 11743  0CE3                     i1l26:
 11744  0CE3  0008               	return
 11745  0CE4                     __end_of_ReadI2C:
 11746                           
 11747                           	psect	text29
 11748  0C32                     __ptext29:	
 11749 ;; *************** function _ADCC_GetSingleConversion *****************
 11750 ;; Defined at:
 11751 ;;		line 130 in file "mcc_generated_files/adcc.c"
 11752 ;; Parameters:    Size  Location     Type
 11753 ;;  channel         1    wreg     enum E12086
 11754 ;; Auto vars:     Size  Location     Type
 11755 ;;  channel         1    3[COMMON] enum E12086
 11756 ;; Return value:  Size  Location     Type
 11757 ;;                  2    0[COMMON] unsigned int 
 11758 ;; Registers used:
 11759 ;;		wreg
 11760 ;; Tracked objects:
 11761 ;;		On entry : 0/0
 11762 ;;		On exit  : 0/0
 11763 ;;		Unchanged: 0/0
 11764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11765 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11766 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11768 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11769 ;;Total ram usage:        4 bytes
 11770 ;; Hardware stack levels used:    1
 11771 ;; This function calls:
 11772 ;;		Nothing
 11773 ;; This function is called by:
 11774 ;;		_monitoring_ISR
 11775 ;; This function uses a non-reentrant model
 11776 ;;
 11777                           
 11778                           
 11779                           ;psect for function _ADCC_GetSingleConversion
 11780  0C32                     _ADCC_GetSingleConversion:
 11781                           
 11782                           ;incstack = 0
 11783                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 11784                           ;ADCC_GetSingleConversion@channel stored from wreg
 11785  0C32  00F3               	movwf	ADCC_GetSingleConversion@channel
 11786  0C33                     i1l3469:
 11787                           
 11788                           ;adcc.c: 133: ADPCH = channel;
 11789  0C33  0873               	movf	ADCC_GetSingleConversion@channel,w
 11790  0C34  0021               	movlb	1	; select bank1
 11791  0C35  009E               	movwf	30	;volatile
 11792  0C36                     i1l3471:
 11793                           
 11794                           ;adcc.c: 136: ADCON0bits.ADON = 1;
 11795  0C36  1793               	bsf	19,7	;volatile
 11796  0C37                     i1l3473:
 11797                           
 11798                           ;adcc.c: 139: ADCON0bits.ADCONT = 0;
 11799  0C37  1313               	bcf	19,6	;volatile
 11800  0C38                     i1l3475:
 11801                           
 11802                           ;adcc.c: 142: ADCON0bits.ADGO = 1;
 11803  0C38  1413               	bsf	19,0	;volatile
 11804  0C39                     i1l3477:
 11805                           
 11806                           ;adcc.c: 145: __nop();
 11807  0C39  0000               	nop
 11808  0C3A                     i1l575:	
 11809                           ;adcc.c: 149: {
 11810                           
 11811  0C3A  0021               	movlb	1	; select bank1
 11812  0C3B  1813               	btfsc	19,0	;volatile
 11813  0C3C  2C3E               	goto	u264_21
 11814  0C3D  2C3F               	goto	u264_20
 11815  0C3E                     u264_21:
 11816  0C3E  2C3A               	goto	i1l575
 11817  0C3F                     u264_20:
 11818  0C3F                     i1l3479:
 11819                           
 11820                           ;adcc.c: 150: };adcc.c: 154: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 11821  0C3F  080D               	movf	13,w	;volatile
 11822  0C40  00F1               	movwf	?_ADCC_GetSingleConversion+1
 11823  0C41  080C               	movf	12,w	;volatile
 11824  0C42  00F0               	movwf	?_ADCC_GetSingleConversion
 11825  0C43                     i1l578:
 11826  0C43  0008               	return
 11827  0C44                     __end_of_ADCC_GetSingleConversion:
 11828                           
 11829                           	psect	text30
 11830  0C0F                     __ptext30:	
 11831 ;; *************** function _TMR5_WriteTimer *****************
 11832 ;; Defined at:
 11833 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 11834 ;; Parameters:    Size  Location     Type
 11835 ;;  timerVal        2    0[COMMON] unsigned int 
 11836 ;; Auto vars:     Size  Location     Type
 11837 ;;		None
 11838 ;; Return value:  Size  Location     Type
 11839 ;;                  1    wreg      void 
 11840 ;; Registers used:
 11841 ;;		wreg, status,2
 11842 ;; Tracked objects:
 11843 ;;		On entry : 0/0
 11844 ;;		On exit  : 0/0
 11845 ;;		Unchanged: 0/0
 11846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11847 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11850 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11851 ;;Total ram usage:        2 bytes
 11852 ;; Hardware stack levels used:    1
 11853 ;; This function calls:
 11854 ;;		Nothing
 11855 ;; This function is called by:
 11856 ;;		_TMR5_ISR
 11857 ;;		_TMR5_Reload
 11858 ;; This function uses a non-reentrant model
 11859 ;;
 11860                           
 11861                           
 11862                           ;psect for function _TMR5_WriteTimer
 11863  0C0F                     _TMR5_WriteTimer:
 11864  0C0F                     i1l3833:	
 11865                           ;incstack = 0
 11866                           ; Regs used in _TMR5_WriteTimer: [wreg+status,2]
 11867                           
 11868                           
 11869                           ;tmr5.c: 130: if (T5CONbits.nT5SYNC == 1)
 11870  0C0F  0024               	movlb	4	; select bank4
 11871  0C10  1D1A               	btfss	26,2	;volatile
 11872  0C11  2C13               	goto	u314_21
 11873  0C12  2C14               	goto	u314_20
 11874  0C13                     u314_21:
 11875  0C13  2C1B               	goto	i1l3843
 11876  0C14                     u314_20:
 11877  0C14                     i1l3835:
 11878                           
 11879                           ;tmr5.c: 131: {;tmr5.c: 133: T5CONbits.TMR5ON = 0;
 11880  0C14  101A               	bcf	26,0	;volatile
 11881  0C15                     i1l3837:
 11882                           
 11883                           ;tmr5.c: 136: TMR5H = (timerVal >> 8);
 11884  0C15  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 11885  0C16  0099               	movwf	25	;volatile
 11886  0C17                     i1l3839:
 11887                           
 11888                           ;tmr5.c: 137: TMR5L = timerVal;
 11889  0C17  0870               	movf	TMR5_WriteTimer@timerVal,w
 11890  0C18  0098               	movwf	24	;volatile
 11891  0C19                     i1l3841:
 11892                           
 11893                           ;tmr5.c: 140: T5CONbits.TMR5ON =1;
 11894  0C19  141A               	bsf	26,0	;volatile
 11895                           
 11896                           ;tmr5.c: 141: }
 11897  0C1A  2C1F               	goto	i1l689
 11898  0C1B                     i1l3843:
 11899                           
 11900                           ;tmr5.c: 142: else;tmr5.c: 143: {;tmr5.c: 145: TMR5H = (timerVal >> 8);
 11901  0C1B  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 11902  0C1C  0099               	movwf	25	;volatile
 11903  0C1D                     i1l3845:
 11904                           
 11905                           ;tmr5.c: 146: TMR5L = timerVal;
 11906  0C1D  0870               	movf	TMR5_WriteTimer@timerVal,w
 11907  0C1E  0098               	movwf	24	;volatile
 11908  0C1F                     i1l689:
 11909  0C1F  0008               	return
 11910  0C20                     __end_of_TMR5_WriteTimer:
 11911                           
 11912                           	psect	text31
 11913  0C85                     __ptext31:	
 11914 ;; *************** function _TMR3_ISR *****************
 11915 ;; Defined at:
 11916 ;;		line 164 in file "mcc_generated_files/tmr3.c"
 11917 ;; Parameters:    Size  Location     Type
 11918 ;;		None
 11919 ;; Auto vars:     Size  Location     Type
 11920 ;;		None
 11921 ;; Return value:  Size  Location     Type
 11922 ;;                  1    wreg      void 
 11923 ;; Registers used:
 11924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11925 ;; Tracked objects:
 11926 ;;		On entry : 0/0
 11927 ;;		On exit  : 0/0
 11928 ;;		Unchanged: 0/0
 11929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11934 ;;Total ram usage:        0 bytes
 11935 ;; Hardware stack levels used:    1
 11936 ;; Hardware stack levels required when called:    5
 11937 ;; This function calls:
 11938 ;;		Absolute function
 11939 ;;		_TMR3_DefaultInterruptHandler
 11940 ;;		_TMR3_WriteTimer
 11941 ;;		_menuLCD_ISR
 11942 ;; This function is called by:
 11943 ;;		_INTERRUPT_InterruptManager
 11944 ;; This function uses a non-reentrant model
 11945 ;;
 11946                           
 11947                           
 11948                           ;psect for function _TMR3_ISR
 11949  0C85                     _TMR3_ISR:
 11950  0C85                     i1l4077:	
 11951                           ;incstack = 0
 11952                           ; Regs used in _TMR3_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11953                           
 11954                           
 11955                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
 11956  0C85  002E               	movlb	14	; select bank14
 11957  0C86  1110               	bcf	16,2	;volatile
 11958  0C87                     i1l4079:
 11959                           
 11960                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
 11961  0C87  0020               	movlb	0	; select bank0
 11962  0C88  086E               	movf	_timer3ReloadVal+1,w	;volatile
 11963  0C89  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 11964  0C8A  086D               	movf	_timer3ReloadVal,w	;volatile
 11965  0C8B  00F0               	movwf	TMR3_WriteTimer@timerVal
 11966  0C8C  318B  23FE  318C   	fcall	_TMR3_WriteTimer
 11967  0C8F                     i1l4081:
 11968                           
 11969                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
 11970  0C8F  0020               	movlb	0	; select bank0
 11971  0C90  086B               	movf	_TMR3_InterruptHandler,w
 11972  0C91  046C               	iorwf	_TMR3_InterruptHandler+1,w
 11973  0C92  1903               	btfsc	3,2
 11974  0C93  2C95               	goto	u364_21
 11975  0C94  2C96               	goto	u364_20
 11976  0C95                     u364_21:
 11977  0C95  2C9B               	goto	i1l478
 11978  0C96                     u364_20:
 11979  0C96                     i1l4083:
 11980                           
 11981                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
 11982  0C96  086C               	movf	_TMR3_InterruptHandler+1,w
 11983  0C97  008A               	movwf	10
 11984  0C98  086B               	movf	_TMR3_InterruptHandler,w
 11985  0C99  000A               	callw
 11986  0C9A  318C               	pagesel	$
 11987  0C9B                     i1l478:
 11988  0C9B  0008               	return
 11989  0C9C                     __end_of_TMR3_ISR:
 11990                           
 11991                           	psect	text32
 11992  0002                     __ptext32:	
 11993 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 11994 ;; Defined at:
 11995 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 11996 ;; Parameters:    Size  Location     Type
 11997 ;;		None
 11998 ;; Auto vars:     Size  Location     Type
 11999 ;;		None
 12000 ;; Return value:  Size  Location     Type
 12001 ;;                  1    wreg      void 
 12002 ;; Registers used:
 12003 ;;		None
 12004 ;; Tracked objects:
 12005 ;;		On entry : 0/0
 12006 ;;		On exit  : 0/0
 12007 ;;		Unchanged: 0/0
 12008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12013 ;;Total ram usage:        0 bytes
 12014 ;; Hardware stack levels used:    1
 12015 ;; This function calls:
 12016 ;;		Nothing
 12017 ;; This function is called by:
 12018 ;;		_TMR3_Initialize
 12019 ;;		_TMR3_ISR
 12020 ;; This function uses a non-reentrant model
 12021 ;;
 12022                           
 12023                           
 12024                           ;psect for function _TMR3_DefaultInterruptHandler
 12025  0002                     _TMR3_DefaultInterruptHandler:
 12026  0002                     i1l484:	
 12027                           ;incstack = 0
 12028                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 12029                           
 12030  0002  0008               	return
 12031  0003                     __end_of_TMR3_DefaultInterruptHandler:
 12032                           
 12033                           	psect	text33
 12034  006E                     __ptext33:	
 12035 ;; *************** function _menuLCD_ISR *****************
 12036 ;; Defined at:
 12037 ;;		line 316 in file "main.c"
 12038 ;; Parameters:    Size  Location     Type
 12039 ;;		None
 12040 ;; Auto vars:     Size  Location     Type
 12041 ;;  diff            6   38[BANK0 ] struct Time
 12042 ;;  str             8   23[BANK0 ] unsigned char [8]
 12043 ;;  tt              4   31[BANK0 ] unsigned char [4]
 12044 ;;  l               3   35[BANK0 ] unsigned char [3]
 12045 ;; Return value:  Size  Location     Type
 12046 ;;                  1    wreg      void 
 12047 ;; Registers used:
 12048 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12049 ;; Tracked objects:
 12050 ;;		On entry : 0/0
 12051 ;;		On exit  : 0/0
 12052 ;;		Unchanged: 0/0
 12053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12055 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12056 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12057 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12058 ;;Total ram usage:       23 bytes
 12059 ;; Hardware stack levels used:    1
 12060 ;; Hardware stack levels required when called:    4
 12061 ;; This function calls:
 12062 ;;		_LCDchar
 12063 ;;		_LCDcmd
 12064 ;;		_LCDstr
 12065 ;;		_PWM6_LoadDutyValue
 12066 ;;		_PWM_Output_D4_Enable
 12067 ;;		_TMR2_StartTimer
 12068 ;;		_differenceBetweenTimePeriod
 12069 ;;		_sprintf
 12070 ;;		i1_PWM_Output_D4_Disable
 12071 ;;		i1_TMR2_StopTimer
 12072 ;; This function is called by:
 12073 ;;		_main
 12074 ;;		_TMR3_ISR
 12075 ;; This function uses a non-reentrant model
 12076 ;;
 12077                           
 12078                           
 12079                           ;psect for function _menuLCD_ISR
 12080  006E                     _menuLCD_ISR:
 12081  006E                     i1l3933:	
 12082                           ;incstack = 0
 12083                           ; Regs used in _menuLCD_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12084                           
 12085                           
 12086                           ;main.c: 317: char str[8];;main.c: 318: if(editingClockAlarm){
 12087  006E  0020               	movlb	0	; select bank0
 12088  006F  0852               	movf	_editingClockAlarm,w
 12089  0070  0453               	iorwf	_editingClockAlarm+1,w
 12090  0071  1903               	btfsc	3,2
 12091  0072  2874               	goto	u342_21
 12092  0073  2875               	goto	u342_20
 12093  0074                     u342_21:
 12094  0074  288A               	goto	i1l3937
 12095  0075                     u342_20:
 12096  0075                     i1l3935:
 12097                           
 12098                           ;main.c: 319: sprintf(str, "%02d:%02d:%02d", clkAlarm.alarmVal.h,clkAlarm.alarmVal.m,clk
      +                          Alarm.alarmVal.s);
 12099  0075  3000               	movlw	low (STR_1| (0+32768))
 12100  0076  00A0               	movwf	sprintf@f
 12101  0077  3090               	movlw	high (STR_1| (0+32768))
 12102  0078  00A1               	movwf	sprintf@f+1
 12103  0079  0860               	movf	_clkAlarm+1,w
 12104  007A  00A3               	movwf	?_sprintf+3
 12105  007B  085F               	movf	_clkAlarm,w
 12106  007C  00A2               	movwf	?_sprintf+2
 12107  007D  0862               	movf	_clkAlarm+3,w
 12108  007E  00A5               	movwf	?_sprintf+5
 12109  007F  0861               	movf	_clkAlarm+2,w
 12110  0080  00A4               	movwf	?_sprintf+4
 12111  0081  0864               	movf	_clkAlarm+5,w
 12112  0082  00A7               	movwf	?_sprintf+7
 12113  0083  0863               	movf	_clkAlarm+4,w
 12114  0084  00A6               	movwf	?_sprintf+6
 12115  0085  3037               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 12116  0086  3182  220E  3180   	fcall	_sprintf
 12117                           
 12118                           ;main.c: 320: } else {
 12119  0089  289E               	goto	i1l3939
 12120  008A                     i1l3937:
 12121                           
 12122                           ;main.c: 321: sprintf(str, "%02d:%02d:%02d", t.h,t.m,t.s);
 12123  008A  3000               	movlw	low (STR_1| (0+32768))
 12124  008B  00A0               	movwf	sprintf@f
 12125  008C  3090               	movlw	high (STR_1| (0+32768))
 12126  008D  00A1               	movwf	sprintf@f+1
 12127  008E  084D               	movf	_t+1,w
 12128  008F  00A3               	movwf	?_sprintf+3
 12129  0090  084C               	movf	_t,w
 12130  0091  00A2               	movwf	?_sprintf+2
 12131  0092  084F               	movf	_t+3,w
 12132  0093  00A5               	movwf	?_sprintf+5
 12133  0094  084E               	movf	_t+2,w
 12134  0095  00A4               	movwf	?_sprintf+4
 12135  0096  0851               	movf	_t+5,w
 12136  0097  00A7               	movwf	?_sprintf+7
 12137  0098  0850               	movf	_t+4,w
 12138  0099  00A6               	movwf	?_sprintf+6
 12139  009A  3037               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 12140  009B  3182  220E  3180   	fcall	_sprintf
 12141  009E                     i1l3939:
 12142                           
 12143                           ;main.c: 322: };main.c: 323: LCDcmd(0x80);
 12144  009E  3080               	movlw	128
 12145  009F  318B  2391  3180   	fcall	_LCDcmd
 12146  00A2                     i1l3941:
 12147                           
 12148                           ;main.c: 324: LCDstr(str);
 12149  00A2  3037               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 12150  00A3  318C  2444  3180   	fcall	_LCDstr
 12151  00A6                     i1l3943:
 12152                           
 12153                           ;main.c: 327: if(alarmsEnable){
 12154  00A6  0020               	movlb	0	; select bank0
 12155  00A7  086A               	movf	_alarmsEnable,w
 12156  00A8  1903               	btfsc	3,2
 12157  00A9  28AB               	goto	u343_21
 12158  00AA  28AC               	goto	u343_20
 12159  00AB                     u343_21:
 12160  00AB  29B2               	goto	i1l3999
 12161  00AC                     u343_20:
 12162  00AC                     i1l3945:
 12163                           
 12164                           ;main.c: 328: LCDcmd(0x8F);
 12165  00AC  308F               	movlw	143
 12166  00AD  318B  2391  3180   	fcall	_LCDcmd
 12167                           
 12168                           ;main.c: 329: LCDchar('A');
 12169  00B0  3041               	movlw	65
 12170  00B1  318B  2398  3180   	fcall	_LCDchar
 12171  00B4                     i1l3947:
 12172                           
 12173                           ;main.c: 332: if(clkAlarm.trigger == 1){
 12174  00B4  0020               	movlb	0	; select bank0
 12175  00B5  0365               	decf	_clkAlarm+6,w
 12176  00B6  1D03               	btfss	3,2
 12177  00B7  28B9               	goto	u344_21
 12178  00B8  28BA               	goto	u344_20
 12179  00B9                     u344_21:
 12180  00B9  28C3               	goto	i1l3951
 12181  00BA                     u344_20:
 12182  00BA                     i1l3949:
 12183                           
 12184                           ;main.c: 333: LCDcmd(0x8B);
 12185  00BA  308B               	movlw	139
 12186  00BB  318B  2391  3180   	fcall	_LCDcmd
 12187                           
 12188                           ;main.c: 334: LCDchar('C');
 12189  00BE  3043               	movlw	67
 12190  00BF  318B  2398  3180   	fcall	_LCDchar
 12191                           
 12192                           ;main.c: 335: } else{
 12193  00C2  28CB               	goto	i1l3953
 12194  00C3                     i1l3951:
 12195                           
 12196                           ;main.c: 336: LCDcmd(0x8B);
 12197  00C3  308B               	movlw	139
 12198  00C4  318B  2391  3180   	fcall	_LCDcmd
 12199                           
 12200                           ;main.c: 337: LCDchar(' ');
 12201  00C7  3020               	movlw	32
 12202  00C8  318B  2398  3180   	fcall	_LCDchar
 12203  00CB                     i1l3953:
 12204                           
 12205                           ;main.c: 338: };main.c: 341: if(tempAlarm.trigger == 1){
 12206  00CB  0020               	movlb	0	; select bank0
 12207  00CC  0369               	decf	_tempAlarm+1,w
 12208  00CD  1D03               	btfss	3,2
 12209  00CE  28D0               	goto	u345_21
 12210  00CF  28D1               	goto	u345_20
 12211  00D0                     u345_21:
 12212  00D0  28DA               	goto	i1l3957
 12213  00D1                     u345_20:
 12214  00D1                     i1l3955:
 12215                           
 12216                           ;main.c: 342: LCDcmd(0x8C);
 12217  00D1  308C               	movlw	140
 12218  00D2  318B  2391  3180   	fcall	_LCDcmd
 12219                           
 12220                           ;main.c: 343: LCDchar('T');
 12221  00D5  3054               	movlw	84
 12222  00D6  318B  2398  3180   	fcall	_LCDchar
 12223                           
 12224                           ;main.c: 344: } else{
 12225  00D9  28E2               	goto	i1l3959
 12226  00DA                     i1l3957:
 12227                           
 12228                           ;main.c: 345: LCDcmd(0x8C);
 12229  00DA  308C               	movlw	140
 12230  00DB  318B  2391  3180   	fcall	_LCDcmd
 12231                           
 12232                           ;main.c: 346: LCDchar(' ');
 12233  00DE  3020               	movlw	32
 12234  00DF  318B  2398  3180   	fcall	_LCDchar
 12235  00E2                     i1l3959:
 12236                           
 12237                           ;main.c: 347: };main.c: 350: if(lumAlarm.trigger == 1){
 12238  00E2  0020               	movlb	0	; select bank0
 12239  00E3  0367               	decf	_lumAlarm+1,w
 12240  00E4  1D03               	btfss	3,2
 12241  00E5  28E7               	goto	u346_21
 12242  00E6  28E8               	goto	u346_20
 12243  00E7                     u346_21:
 12244  00E7  28F1               	goto	i1l3963
 12245  00E8                     u346_20:
 12246  00E8                     i1l3961:
 12247                           
 12248                           ;main.c: 351: LCDcmd(0x8D);
 12249  00E8  308D               	movlw	141
 12250  00E9  318B  2391  3180   	fcall	_LCDcmd
 12251                           
 12252                           ;main.c: 352: LCDchar('L');
 12253  00EC  304C               	movlw	76
 12254  00ED  318B  2398  3180   	fcall	_LCDchar
 12255                           
 12256                           ;main.c: 353: } else{
 12257  00F0  28F9               	goto	i1l3965
 12258  00F1                     i1l3963:
 12259                           
 12260                           ;main.c: 354: LCDcmd(0x8D);
 12261  00F1  308D               	movlw	141
 12262  00F2  318B  2391  3180   	fcall	_LCDcmd
 12263                           
 12264                           ;main.c: 355: LCDchar(' ');
 12265  00F5  3020               	movlw	32
 12266  00F6  318B  2398  3180   	fcall	_LCDchar
 12267  00F9                     i1l3965:
 12268                           
 12269                           ;main.c: 356: };main.c: 357: if(clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigge
      +                          r){
 12270  00F9  0020               	movlb	0	; select bank0
 12271  00FA  0865               	movf	_clkAlarm+6,w
 12272  00FB  1D03               	btfss	3,2
 12273  00FC  28FE               	goto	u347_21
 12274  00FD  28FF               	goto	u347_20
 12275  00FE                     u347_21:
 12276  00FE  2909               	goto	i1l3971
 12277  00FF                     u347_20:
 12278  00FF                     i1l3967:
 12279  00FF  0869               	movf	_tempAlarm+1,w
 12280  0100  1D03               	btfss	3,2
 12281  0101  2903               	goto	u348_21
 12282  0102  2904               	goto	u348_20
 12283  0103                     u348_21:
 12284  0103  2909               	goto	i1l3971
 12285  0104                     u348_20:
 12286  0104                     i1l3969:
 12287  0104  0867               	movf	_lumAlarm+1,w
 12288  0105  1903               	btfsc	3,2
 12289  0106  2908               	goto	u349_21
 12290  0107  2909               	goto	u349_20
 12291  0108                     u349_21:
 12292  0108  29BA               	goto	i1l1154
 12293  0109                     u349_20:
 12294  0109                     i1l3971:
 12295                           
 12296                           ;main.c: 358: if(alarmPWMStart.h == -1){
 12297  0109  0021               	movlb	1	; select bank1
 12298  010A  0A3A               	incf	_alarmPWMStart^(0+128),w
 12299  010B  1D03               	skipz
 12300  010C  2911               	goto	u350_21
 12301  010D  0A3B               	incf	(_alarmPWMStart+1)^(0+128),w
 12302  010E  1D03               	btfss	3,2
 12303  010F  2911               	goto	u350_21
 12304  0110  2912               	goto	u350_20
 12305  0111                     u350_21:
 12306  0111  292A               	goto	i1l3975
 12307  0112                     u350_20:
 12308  0112                     i1l3973:
 12309                           
 12310                           ;main.c: 359: alarmPWMStart.h = t.h;
 12311  0112  0020               	movlb	0	; select bank0
 12312  0113  084D               	movf	_t+1,w
 12313  0114  0021               	movlb	1	; select bank1
 12314  0115  00BB               	movwf	(_alarmPWMStart+1)^(0+128)
 12315  0116  0020               	movlb	0	; select bank0
 12316  0117  084C               	movf	_t,w
 12317  0118  0021               	movlb	1	; select bank1
 12318  0119  00BA               	movwf	_alarmPWMStart^(0+128)
 12319                           
 12320                           ;main.c: 360: alarmPWMStart.m = t.m;
 12321  011A  0020               	movlb	0	; select bank0
 12322  011B  084F               	movf	_t+3,w
 12323  011C  0021               	movlb	1	; select bank1
 12324  011D  00BD               	movwf	((_alarmPWMStart+1)^(0+128)+2)
 12325  011E  0020               	movlb	0	; select bank0
 12326  011F  084E               	movf	_t+2,w
 12327  0120  0021               	movlb	1	; select bank1
 12328  0121  00BC               	movwf	(_alarmPWMStart^(0+128)+2)
 12329                           
 12330                           ;main.c: 361: alarmPWMStart.s = t.s;
 12331  0122  0020               	movlb	0	; select bank0
 12332  0123  0851               	movf	_t+5,w
 12333  0124  0021               	movlb	1	; select bank1
 12334  0125  00BF               	movwf	((_alarmPWMStart+1)^(0+128)+4)
 12335  0126  0020               	movlb	0	; select bank0
 12336  0127  0850               	movf	_t+4,w
 12337  0128  0021               	movlb	1	; select bank1
 12338  0129  00BE               	movwf	(_alarmPWMStart^(0+128)+4)
 12339  012A                     i1l3975:
 12340                           
 12341                           ;main.c: 362: };main.c: 363: struct Time diff = {0,0,0};
 12342  012A  30B2               	movlw	low menuLCD_ISR@F12791
 12343  012B  0086               	movwf	6
 12344  012C  3000               	movlw	high menuLCD_ISR@F12791
 12345  012D  0087               	movwf	7
 12346  012E  3046               	movlw	low menuLCD_ISR@diff
 12347  012F  0084               	movwf	4
 12348  0130  3000               	movlw	high menuLCD_ISR@diff
 12349  0131  0085               	movwf	5
 12350  0132  3006               	movlw	6
 12351  0133  0020               	movlb	0	; select bank0
 12352  0134  00B5               	movwf	??_menuLCD_ISR
 12353  0135                     u351_20:
 12354  0135  0016               	moviw fsr1++
 12355  0136  001A               	movwi fsr0++
 12356  0137  0BB5               	decfsz	??_menuLCD_ISR,f
 12357  0138  2935               	goto	u351_20
 12358  0139                     i1l3977:
 12359                           
 12360                           ;main.c: 364: differenceBetweenTimePeriod( t, alarmPWMStart, &diff);
 12361  0139  304C               	movlw	low _t
 12362  013A  0086               	movwf	6
 12363  013B  3000               	movlw	high _t
 12364  013C  0087               	movwf	7
 12365  013D  3070               	movlw	low differenceBetweenTimePeriod@start
 12366  013E  0084               	movwf	4
 12367  013F  3000               	movlw	high differenceBetweenTimePeriod@start
 12368  0140  0085               	movwf	5
 12369  0141  3F40               	moviw [0]fsr1
 12370  0142  3F80               	movwi [0]fsr0
 12371  0143  3F41               	moviw [1]fsr1
 12372  0144  3F81               	movwi [1]fsr0
 12373  0145  3F42               	moviw [2]fsr1
 12374  0146  3F82               	movwi [2]fsr0
 12375  0147  3F43               	moviw [3]fsr1
 12376  0148  3F83               	movwi [3]fsr0
 12377  0149  3F44               	moviw [4]fsr1
 12378  014A  3F84               	movwi [4]fsr0
 12379  014B  3F45               	moviw [5]fsr1
 12380  014C  3F85               	movwi [5]fsr0
 12381  014D  30BA               	movlw	low _alarmPWMStart
 12382  014E  0086               	movwf	6
 12383  014F  3000               	movlw	high _alarmPWMStart
 12384  0150  0087               	movwf	7
 12385  0151  3076               	movlw	low differenceBetweenTimePeriod@stop
 12386  0152  0084               	movwf	4
 12387  0153  3000               	movlw	high differenceBetweenTimePeriod@stop
 12388  0154  0085               	movwf	5
 12389  0155  3F40               	moviw [0]fsr1
 12390  0156  3F80               	movwi [0]fsr0
 12391  0157  3F41               	moviw [1]fsr1
 12392  0158  3F81               	movwi [1]fsr0
 12393  0159  3F42               	moviw [2]fsr1
 12394  015A  3F82               	movwi [2]fsr0
 12395  015B  3F43               	moviw [3]fsr1
 12396  015C  3F83               	movwi [3]fsr0
 12397  015D  3F44               	moviw [4]fsr1
 12398  015E  3F84               	movwi [4]fsr0
 12399  015F  3F45               	moviw [5]fsr1
 12400  0160  3F85               	movwi [5]fsr0
 12401  0161  3046               	movlw	(low (menuLCD_ISR@diff| 0))& (0+255)
 12402  0162  00B5               	movwf	??_menuLCD_ISR
 12403  0163  0835               	movf	??_menuLCD_ISR,w
 12404  0164  00FC               	movwf	differenceBetweenTimePeriod@diff
 12405  0165  318F  2720  3180   	fcall	_differenceBetweenTimePeriod
 12406  0168                     i1l3979:
 12407                           
 12408                           ;main.c: 367: if(diff.s <= 5){
 12409  0168  0020               	movlb	0	; select bank0
 12410  0169  084B               	movf	menuLCD_ISR@diff+5,w
 12411  016A  3A80               	xorlw	128
 12412  016B  00B5               	movwf	??_menuLCD_ISR
 12413  016C  3080               	movlw	128
 12414  016D  0235               	subwf	??_menuLCD_ISR,w
 12415  016E  1D03               	skipz
 12416  016F  2972               	goto	u352_25
 12417  0170  3006               	movlw	6
 12418  0171  024A               	subwf	menuLCD_ISR@diff+4,w
 12419  0172                     u352_25:
 12420  0172  1803               	skipnc
 12421  0173  2975               	goto	u352_21
 12422  0174  2976               	goto	u352_20
 12423  0175                     u352_21:
 12424  0175  29A0               	goto	i1l1148
 12425  0176                     u352_20:
 12426  0176                     i1l3981:
 12427                           
 12428                           ;main.c: 368: if(PWM6EN==0){
 12429  0176  0027               	movlb	7	; select bank7
 12430  0177  1B8E               	btfsc	14,7	;volatile
 12431  0178  297A               	goto	u353_21
 12432  0179  297B               	goto	u353_20
 12433  017A                     u353_21:
 12434  017A  2981               	goto	i1l3985
 12435  017B                     u353_20:
 12436  017B                     i1l3983:
 12437                           
 12438                           ;main.c: 369: TMR2_StartTimer();
 12439  017B  318B  2367  3180   	fcall	_TMR2_StartTimer
 12440                           
 12441                           ;main.c: 370: PWM_Output_D4_Enable();
 12442  017E  318B  2355  3180   	fcall	_PWM_Output_D4_Enable
 12443  0181                     i1l3985:
 12444                           
 12445                           ;main.c: 371: };main.c: 372: if(dimingLed <= 1023){
 12446  0181  0020               	movlb	0	; select bank0
 12447  0182  0855               	movf	_dimingLed+1,w
 12448  0183  3A80               	xorlw	128
 12449  0184  00B5               	movwf	??_menuLCD_ISR
 12450  0185  3084               	movlw	132
 12451  0186  0235               	subwf	??_menuLCD_ISR,w
 12452  0187  1D03               	skipz
 12453  0188  298B               	goto	u354_25
 12454  0189  3000               	movlw	0
 12455  018A  0254               	subwf	_dimingLed,w
 12456  018B                     u354_25:
 12457  018B  1803               	skipnc
 12458  018C  298E               	goto	u354_21
 12459  018D  298F               	goto	u354_20
 12460  018E                     u354_21:
 12461  018E  2995               	goto	i1l3989
 12462  018F                     u354_20:
 12463  018F                     i1l3987:
 12464                           
 12465                           ;main.c: 373: dimingLed += 200;
 12466  018F  30C8               	movlw	200
 12467  0190  0020               	movlb	0	; select bank0
 12468  0191  07D4               	addwf	_dimingLed,f
 12469  0192  3000               	movlw	0
 12470  0193  3DD5               	addwfc	_dimingLed+1,f
 12471                           
 12472                           ;main.c: 374: } else{
 12473  0194  2998               	goto	i1l3991
 12474  0195                     i1l3989:
 12475                           
 12476                           ;main.c: 375: dimingLed = 0;
 12477  0195  0020               	movlb	0	; select bank0
 12478  0196  01D4               	clrf	_dimingLed
 12479  0197  01D5               	clrf	_dimingLed+1
 12480  0198                     i1l3991:
 12481                           
 12482                           ;main.c: 376: };main.c: 377: PWM6_LoadDutyValue(dimingLed);
 12483  0198  0855               	movf	_dimingLed+1,w
 12484  0199  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12485  019A  0854               	movf	_dimingLed,w
 12486  019B  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
 12487  019C  318C  2458  3180   	fcall	_PWM6_LoadDutyValue
 12488                           
 12489                           ;main.c: 378: } else if(PWM6EN==1){
 12490  019F  29BA               	goto	i1l1154
 12491  01A0                     i1l1148:
 12492  01A0  0027               	movlb	7	; select bank7
 12493  01A1  1F8E               	btfss	14,7	;volatile
 12494  01A2  29A4               	goto	u355_21
 12495  01A3  29A5               	goto	u355_20
 12496  01A4                     u355_21:
 12497  01A4  29BA               	goto	i1l1154
 12498  01A5                     u355_20:
 12499  01A5                     i1l3993:
 12500                           
 12501                           ;main.c: 379: PWM6_LoadDutyValue(0);
 12502  01A5  3000               	movlw	0
 12503  01A6  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
 12504  01A7  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12505  01A8  318C  2458  3180   	fcall	_PWM6_LoadDutyValue
 12506  01AB                     i1l3995:
 12507                           
 12508                           ;main.c: 380: TMR2_StopTimer();
 12509  01AB  318B  236B  3180   	fcall	i1_TMR2_StopTimer
 12510  01AE                     i1l3997:
 12511                           
 12512                           ;main.c: 381: PWM_Output_D4_Disable();
 12513  01AE  318B  235B  3180   	fcall	i1_PWM_Output_D4_Disable
 12514  01B1  29BA               	goto	i1l1154
 12515  01B2                     i1l3999:
 12516                           
 12517                           ;main.c: 385: LCDcmd(0x8F);
 12518  01B2  308F               	movlw	143
 12519  01B3  318B  2391  3180   	fcall	_LCDcmd
 12520                           
 12521                           ;main.c: 386: LCDchar('a');
 12522  01B6  3061               	movlw	97
 12523  01B7  318B  2398  3180   	fcall	_LCDchar
 12524  01BA                     i1l1154:
 12525                           
 12526                           ;main.c: 387: };main.c: 389: LCDcmd(0xc0);
 12527  01BA  30C0               	movlw	192
 12528  01BB  318B  2391  3180   	fcall	_LCDcmd
 12529  01BE                     i1l4001:
 12530                           
 12531                           ;main.c: 390: char tt[4];;main.c: 391: sprintf(tt, "%02d C", temp);
 12532  01BE  3019               	movlw	low (STR_3| (0+32768))
 12533  01BF  0020               	movlb	0	; select bank0
 12534  01C0  00A0               	movwf	sprintf@f
 12535  01C1  3090               	movlw	high (STR_3| (0+32768))
 12536  01C2  00A1               	movwf	sprintf@f+1
 12537  01C3  085E               	movf	_temp,w
 12538  01C4  00B5               	movwf	??_menuLCD_ISR
 12539  01C5  01B6               	clrf	??_menuLCD_ISR+1
 12540  01C6  0835               	movf	??_menuLCD_ISR,w
 12541  01C7  00A2               	movwf	?_sprintf+2
 12542  01C8  0836               	movf	??_menuLCD_ISR+1,w
 12543  01C9  00A3               	movwf	?_sprintf+3
 12544  01CA  303F               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 12545  01CB  3182  220E  3180   	fcall	_sprintf
 12546  01CE                     i1l4003:
 12547                           
 12548                           ;main.c: 392: LCDstr(tt);
 12549  01CE  303F               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 12550  01CF  318C  2444  3180   	fcall	_LCDstr
 12551  01D2                     i1l4005:
 12552                           
 12553                           ;main.c: 394: LCDcmd(0xcd);
 12554  01D2  30CD               	movlw	205
 12555  01D3  318B  2391  3180   	fcall	_LCDcmd
 12556  01D6                     i1l4007:
 12557                           
 12558                           ;main.c: 395: char l[3];;main.c: 396: sprintf(l, "L %d", lumLevel);
 12559  01D6  3020               	movlw	low (STR_4| (0+32768))
 12560  01D7  0020               	movlb	0	; select bank0
 12561  01D8  00A0               	movwf	sprintf@f
 12562  01D9  3090               	movlw	high (STR_4| (0+32768))
 12563  01DA  00A1               	movwf	sprintf@f+1
 12564  01DB  085D               	movf	_lumLevel,w
 12565  01DC  00B5               	movwf	??_menuLCD_ISR
 12566  01DD  01B6               	clrf	??_menuLCD_ISR+1
 12567  01DE  0835               	movf	??_menuLCD_ISR,w
 12568  01DF  00A2               	movwf	?_sprintf+2
 12569  01E0  0836               	movf	??_menuLCD_ISR+1,w
 12570  01E1  00A3               	movwf	?_sprintf+3
 12571  01E2  3043               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 12572  01E3  3182  220E  3180   	fcall	_sprintf
 12573                           
 12574                           ;main.c: 397: LCDstr(l);
 12575  01E6  3043               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 12576  01E7  318C  2444  3180   	fcall	_LCDstr
 12577  01EA                     i1l4009:
 12578                           
 12579                           ;main.c: 399: if(editingClockAlarm == 1){
 12580  01EA  0020               	movlb	0	; select bank0
 12581  01EB  0352               	decf	_editingClockAlarm,w
 12582  01EC  0453               	iorwf	_editingClockAlarm+1,w
 12583  01ED  1D03               	btfss	3,2
 12584  01EE  29F0               	goto	u356_21
 12585  01EF  29F1               	goto	u356_20
 12586  01F0                     u356_21:
 12587  01F0  29F6               	goto	i1l4013
 12588  01F1                     u356_20:
 12589  01F1                     i1l4011:
 12590                           
 12591                           ;main.c: 400: LCDcmd(0x81);
 12592  01F1  3081               	movlw	129
 12593  01F2  318B  2391  3180   	fcall	_LCDcmd
 12594                           
 12595                           ;main.c: 401: } else if(editingClockAlarm == 2){
 12596  01F5  2A0D               	goto	i1l1160
 12597  01F6                     i1l4013:
 12598  01F6  3002               	movlw	2
 12599  01F7  0652               	xorwf	_editingClockAlarm,w
 12600  01F8  0453               	iorwf	_editingClockAlarm+1,w
 12601  01F9  1D03               	btfss	3,2
 12602  01FA  29FC               	goto	u357_21
 12603  01FB  29FD               	goto	u357_20
 12604  01FC                     u357_21:
 12605  01FC  2A02               	goto	i1l4017
 12606  01FD                     u357_20:
 12607  01FD                     i1l4015:
 12608                           
 12609                           ;main.c: 402: LCDcmd(0x84);
 12610  01FD  3084               	movlw	132
 12611  01FE  318B  2391  3180   	fcall	_LCDcmd
 12612                           
 12613                           ;main.c: 403: } else if(editingClockAlarm == 3){
 12614  0201  2A0D               	goto	i1l1160
 12615  0202                     i1l4017:
 12616  0202  3003               	movlw	3
 12617  0203  0652               	xorwf	_editingClockAlarm,w
 12618  0204  0453               	iorwf	_editingClockAlarm+1,w
 12619  0205  1D03               	btfss	3,2
 12620  0206  2A08               	goto	u358_21
 12621  0207  2A09               	goto	u358_20
 12622  0208                     u358_21:
 12623  0208  2A0D               	goto	i1l1160
 12624  0209                     u358_20:
 12625  0209                     i1l4019:
 12626                           
 12627                           ;main.c: 404: LCDcmd(0x87);
 12628  0209  3087               	movlw	135
 12629  020A  318B  2391  3180   	fcall	_LCDcmd
 12630  020D                     i1l1160:
 12631  020D  0008               	return
 12632  020E                     __end_of_menuLCD_ISR:
 12633                           
 12634                           	psect	text34
 12635  0B6B                     __ptext34:	
 12636 ;; *************** function i1_TMR2_StopTimer *****************
 12637 ;; Defined at:
 12638 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 12639 ;; Parameters:    Size  Location     Type
 12640 ;;		None
 12641 ;; Auto vars:     Size  Location     Type
 12642 ;;		None
 12643 ;; Return value:  Size  Location     Type
 12644 ;;                  1    wreg      void 
 12645 ;; Registers used:
 12646 ;;		status,2, status,0, pclath, cstack
 12647 ;; Tracked objects:
 12648 ;;		On entry : 0/0
 12649 ;;		On exit  : 0/0
 12650 ;;		Unchanged: 0/0
 12651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12656 ;;Total ram usage:        0 bytes
 12657 ;; Hardware stack levels used:    1
 12658 ;; Hardware stack levels required when called:    1
 12659 ;; This function calls:
 12660 ;;		i1_TMR2_Stop
 12661 ;; This function is called by:
 12662 ;;		_menuLCD_ISR
 12663 ;; This function uses a non-reentrant model
 12664 ;;
 12665                           
 12666                           
 12667                           ;psect for function i1_TMR2_StopTimer
 12668  0B6B                     i1_TMR2_StopTimer:
 12669  0B6B                     i1l3673:	
 12670                           ;incstack = 0
 12671                           ; Regs used in i1_TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 12672                           
 12673                           
 12674                           ;tmr2.c: 119: TMR2_Stop();
 12675  0B6B  318B  235E  318B   	fcall	i1_TMR2_Stop
 12676  0B6E                     i1l767:
 12677  0B6E  0008               	return
 12678  0B6F                     __end_ofi1_TMR2_StopTimer:
 12679                           
 12680                           	psect	text35
 12681  0B5E                     __ptext35:	
 12682 ;; *************** function i1_TMR2_Stop *****************
 12683 ;; Defined at:
 12684 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 12685 ;; Parameters:    Size  Location     Type
 12686 ;;		None
 12687 ;; Auto vars:     Size  Location     Type
 12688 ;;		None
 12689 ;; Return value:  Size  Location     Type
 12690 ;;                  1    wreg      void 
 12691 ;; Registers used:
 12692 ;;		None
 12693 ;; Tracked objects:
 12694 ;;		On entry : 0/0
 12695 ;;		On exit  : 0/0
 12696 ;;		Unchanged: 0/0
 12697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12702 ;;Total ram usage:        0 bytes
 12703 ;; Hardware stack levels used:    1
 12704 ;; This function calls:
 12705 ;;		Nothing
 12706 ;; This function is called by:
 12707 ;;		i1_TMR2_StopTimer
 12708 ;; This function uses a non-reentrant model
 12709 ;;
 12710                           
 12711                           
 12712                           ;psect for function i1_TMR2_Stop
 12713  0B5E                     i1_TMR2_Stop:
 12714  0B5E                     i1l3433:	
 12715                           ;incstack = 0
 12716                           ; Regs used in i1_TMR2_Stop: []
 12717                           
 12718                           
 12719                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 12720  0B5E  0025               	movlb	5	; select bank5
 12721  0B5F  138E               	bcf	14,7	;volatile
 12722  0B60                     i1l764:
 12723  0B60  0008               	return
 12724  0B61                     __end_ofi1_TMR2_Stop:
 12725                           
 12726                           	psect	text36
 12727  0B5B                     __ptext36:	
 12728 ;; *************** function i1_PWM_Output_D4_Disable *****************
 12729 ;; Defined at:
 12730 ;;		line 228 in file "main.c"
 12731 ;; Parameters:    Size  Location     Type
 12732 ;;		None
 12733 ;; Auto vars:     Size  Location     Type
 12734 ;;		None
 12735 ;; Return value:  Size  Location     Type
 12736 ;;                  1    wreg      void 
 12737 ;; Registers used:
 12738 ;;		None
 12739 ;; Tracked objects:
 12740 ;;		On entry : 0/0
 12741 ;;		On exit  : 0/0
 12742 ;;		Unchanged: 0/0
 12743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12748 ;;Total ram usage:        0 bytes
 12749 ;; Hardware stack levels used:    1
 12750 ;; This function calls:
 12751 ;;		Nothing
 12752 ;; This function is called by:
 12753 ;;		_menuLCD_ISR
 12754 ;; This function uses a non-reentrant model
 12755 ;;
 12756                           
 12757                           
 12758                           ;psect for function i1_PWM_Output_D4_Disable
 12759  0B5B                     i1_PWM_Output_D4_Disable:
 12760  0B5B                     i1l3675:	
 12761                           ;incstack = 0
 12762                           ; Regs used in i1_PWM_Output_D4_Disable: []
 12763                           
 12764                           
 12765                           ;main.c: 229: PWM6EN = 0;
 12766  0B5B  0027               	movlb	7	; select bank7
 12767  0B5C  138E               	bcf	14,7	;volatile
 12768  0B5D                     i1l1090:
 12769  0B5D  0008               	return
 12770  0B5E                     __end_ofi1_PWM_Output_D4_Disable:
 12771                           
 12772                           	psect	text37
 12773  020E                     __ptext37:	
 12774 ;; *************** function _sprintf *****************
 12775 ;; Defined at:
 12776 ;;		line 505 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
 12777 ;; Parameters:    Size  Location     Type
 12778 ;;  sp              1    wreg     PTR unsigned char 
 12779 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 12780 ;;  f               2    0[BANK0 ] PTR const unsigned char 
 12781 ;;		 -> STR_4(5), STR_3(7), STR_2(15), STR_1(15), 
 12782 ;; Auto vars:     Size  Location     Type
 12783 ;;  sp              1   19[BANK0 ] PTR unsigned char 
 12784 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 12785 ;;  tmpval          4    0        struct .
 12786 ;;  width           2   17[BANK0 ] int 
 12787 ;;  val             2   14[BANK0 ] unsigned int 
 12788 ;;  cp              2    0        PTR const unsigned char 
 12789 ;;  len             2    0        unsigned int 
 12790 ;;  c               1   20[BANK0 ] unsigned char 
 12791 ;;  flag            1   16[BANK0 ] unsigned char 
 12792 ;;  prec            1   13[BANK0 ] char 
 12793 ;;  ap              1   12[BANK0 ] PTR void [1]
 12794 ;;		 -> ?_sprintf(2), 
 12795 ;; Return value:  Size  Location     Type
 12796 ;;                  2    0[BANK0 ] int 
 12797 ;; Registers used:
 12798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12799 ;; Tracked objects:
 12800 ;;		On entry : 0/0
 12801 ;;		On exit  : 0/0
 12802 ;;		Unchanged: 0/0
 12803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12804 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12805 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12806 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12807 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12808 ;;Total ram usage:       21 bytes
 12809 ;; Hardware stack levels used:    1
 12810 ;; Hardware stack levels required when called:    1
 12811 ;; This function calls:
 12812 ;;		___lwdiv
 12813 ;;		___lwmod
 12814 ;;		___wmul
 12815 ;;		_isdigit
 12816 ;; This function is called by:
 12817 ;;		_menuLCD_ISR
 12818 ;; This function uses a non-reentrant model
 12819 ;;
 12820                           
 12821                           
 12822                           ;psect for function _sprintf
 12823  020E                     _sprintf:
 12824                           
 12825                           ;incstack = 0
 12826                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12827                           ;sprintf@sp stored from wreg
 12828  020E  0020               	movlb	0	; select bank0
 12829  020F  00B3               	movwf	sprintf@sp
 12830  0210                     i1l3563:
 12831                           
 12832                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 12833  0210  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 12834  0211  00A8               	movwf	??_sprintf
 12835  0212  0828               	movf	??_sprintf,w
 12836  0213  00AC               	movwf	sprintf@ap
 12837                           
 12838                           ;doprnt.c: 553: while((c = *f++)) {
 12839  0214  2B92               	goto	i1l3667
 12840  0215                     i1l3565:
 12841                           
 12842                           ;doprnt.c: 555: if(c != '%')
 12843  0215  3025               	movlw	37
 12844  0216  0634               	xorwf	sprintf@c,w
 12845  0217  1903               	btfsc	3,2
 12846  0218  2A1A               	goto	u294_21
 12847  0219  2A1B               	goto	u294_20
 12848  021A                     u294_21:
 12849  021A  2A27               	goto	i1l3571
 12850  021B                     u294_20:
 12851  021B                     i1l3567:
 12852                           
 12853                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 12854  021B  0834               	movf	sprintf@c,w
 12855  021C  00A8               	movwf	??_sprintf
 12856  021D  0833               	movf	sprintf@sp,w
 12857  021E  0086               	movwf	6
 12858  021F  0187               	clrf	7
 12859  0220  0828               	movf	??_sprintf,w
 12860  0221  0081               	movwf	1
 12861  0222                     i1l3569:
 12862  0222  3001               	movlw	1
 12863  0223  00A8               	movwf	??_sprintf
 12864  0224  0828               	movf	??_sprintf,w
 12865  0225  07B3               	addwf	sprintf@sp,f
 12866                           
 12867                           ;doprnt.c: 559: continue;
 12868  0226  2B92               	goto	i1l3667
 12869  0227                     i1l3571:
 12870                           
 12871                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 12872  0227  01B1               	clrf	sprintf@width
 12873  0228  01B2               	clrf	sprintf@width+1
 12874                           
 12875                           ;doprnt.c: 565: flag = 0;
 12876  0229  01B0               	clrf	sprintf@flag
 12877  022A  2A30               	goto	i1l3577
 12878  022B                     i1l1385:	
 12879                           ;doprnt.c: 596: case '0':
 12880                           
 12881                           
 12882                           ;doprnt.c: 597: flag |= 0x04;
 12883  022B  1530               	bsf	sprintf@flag,2
 12884  022C                     i1l3573:
 12885                           
 12886                           ;doprnt.c: 598: f++;
 12887  022C  3001               	movlw	1
 12888  022D  07A0               	addwf	sprintf@f,f
 12889  022E  3000               	movlw	0
 12890  022F  3DA1               	addwfc	sprintf@f+1,f
 12891  0230                     i1l3577:	
 12892                           ;doprnt.c: 599: continue;
 12893                           
 12894  0230  0820               	movf	sprintf@f,w
 12895  0231  0084               	movwf	4
 12896  0232  0821               	movf	sprintf@f+1,w
 12897  0233  0085               	movwf	5
 12898  0234  0800               	movf	0,w	;code access
 12899                           
 12900                           ; Switch size 1, requested type "simple"
 12901                           ; Number of cases is 1, Range of values is 48 to 48
 12902                           ; switch strategies available:
 12903                           ; Name         Instructions Cycles
 12904                           ; simple_byte            4     3 (average)
 12905                           ; direct_byte           11     9 (fixed)
 12906                           ; jumptable            263     9 (fixed)
 12907                           ;	Chosen strategy is simple_byte
 12908  0235  3A30               	xorlw	48	; case 48
 12909  0236  1903               	skipnz
 12910  0237  2A2B               	goto	i1l1385
 12911  0238  2A39               	goto	i1l3579
 12912  0239                     i1l3579:
 12913                           
 12914                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 12915  0239  0820               	movf	sprintf@f,w
 12916  023A  0084               	movwf	4
 12917  023B  0821               	movf	sprintf@f+1,w
 12918  023C  0085               	movwf	5
 12919  023D  0800               	movf	0,w	;code access
 12920  023E  318C  2420  3182   	fcall	_isdigit
 12921  0241  1C03               	btfss	3,0
 12922  0242  2A44               	goto	u295_21
 12923  0243  2A45               	goto	u295_20
 12924  0244                     u295_21:
 12925  0244  2A78               	goto	i1l3593
 12926  0245                     u295_20:
 12927  0245                     i1l3581:
 12928                           
 12929                           ;doprnt.c: 615: width = 0;
 12930  0245  0020               	movlb	0	; select bank0
 12931  0246  01B1               	clrf	sprintf@width
 12932  0247  01B2               	clrf	sprintf@width+1
 12933  0248                     i1l3583:
 12934                           
 12935                           ;doprnt.c: 617: width *= 10;
 12936  0248  300A               	movlw	10
 12937  0249  00F0               	movwf	___wmul@multiplier
 12938  024A  3000               	movlw	0
 12939  024B  00F1               	movwf	___wmul@multiplier+1
 12940  024C  0020               	movlb	0	; select bank0
 12941  024D  0832               	movf	sprintf@width+1,w
 12942  024E  00F3               	movwf	___wmul@multiplicand+1
 12943  024F  0831               	movf	sprintf@width,w
 12944  0250  00F2               	movwf	___wmul@multiplicand
 12945  0251  318D  2500  3182   	fcall	___wmul
 12946  0254  0871               	movf	?___wmul+1,w
 12947  0255  0020               	movlb	0	; select bank0
 12948  0256  00B2               	movwf	sprintf@width+1
 12949  0257  0870               	movf	?___wmul,w
 12950  0258  00B1               	movwf	sprintf@width
 12951  0259                     i1l3585:
 12952                           
 12953                           ;doprnt.c: 618: width += *f++ - '0';
 12954  0259  0820               	movf	sprintf@f,w
 12955  025A  0084               	movwf	4
 12956  025B  0821               	movf	sprintf@f+1,w
 12957  025C  0085               	movwf	5
 12958  025D  0800               	movf	0,w	;code access
 12959  025E  3ED0               	addlw	208
 12960  025F  00A8               	movwf	??_sprintf
 12961  0260  30FF               	movlw	255
 12962  0261  1803               	skipnc
 12963  0262  3000               	movlw	0
 12964  0263  00A9               	movwf	??_sprintf+1
 12965  0264  0828               	movf	??_sprintf,w
 12966  0265  07B1               	addwf	sprintf@width,f
 12967  0266  0829               	movf	??_sprintf+1,w
 12968  0267  3DB2               	addwfc	sprintf@width+1,f
 12969  0268                     i1l3587:
 12970  0268  3001               	movlw	1
 12971  0269  07A0               	addwf	sprintf@f,f
 12972  026A  3000               	movlw	0
 12973  026B  3DA1               	addwfc	sprintf@f+1,f
 12974  026C                     i1l3589:
 12975                           
 12976                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 12977  026C  0820               	movf	sprintf@f,w
 12978  026D  0084               	movwf	4
 12979  026E  0821               	movf	sprintf@f+1,w
 12980  026F  0085               	movwf	5
 12981  0270  0800               	movf	0,w	;code access
 12982  0271  318C  2420  3182   	fcall	_isdigit
 12983  0274  1803               	btfsc	3,0
 12984  0275  2A77               	goto	u296_21
 12985  0276  2A78               	goto	u296_20
 12986  0277                     u296_21:
 12987  0277  2A48               	goto	i1l3583
 12988  0278                     u296_20:
 12989  0278                     i1l3593:
 12990  0278  0020               	movlb	0	; select bank0
 12991  0279  0821               	movf	sprintf@f+1,w
 12992  027A  00A9               	movwf	??_sprintf+1
 12993  027B  0820               	movf	sprintf@f,w
 12994  027C  00A8               	movwf	??_sprintf
 12995  027D  0AA0               	incf	sprintf@f,f
 12996  027E  1903               	skipnz
 12997  027F  0AA1               	incf	sprintf@f+1,f
 12998  0280  0828               	movf	??_sprintf,w
 12999  0281  0084               	movwf	4
 13000  0282  0829               	movf	??_sprintf+1,w
 13001  0283  0085               	movwf	5
 13002  0284  0800               	movf	0,w	;code access
 13003  0285  00B4               	movwf	sprintf@c
 13004                           
 13005                           ; Switch size 1, requested type "simple"
 13006                           ; Number of cases is 3, Range of values is 0 to 105
 13007                           ; switch strategies available:
 13008                           ; Name         Instructions Cycles
 13009                           ; simple_byte           10     6 (average)
 13010                           ; direct_byte          218     6 (fixed)
 13011                           ; jumptable            260     6 (fixed)
 13012                           ;	Chosen strategy is simple_byte
 13013  0286  3A00               	xorlw	0	; case 0
 13014  0287  1903               	skipnz
 13015  0288  2BA6               	goto	i1l3669
 13016  0289  3A64               	xorlw	100	; case 100
 13017  028A  1903               	skipnz
 13018  028B  2A90               	goto	i1l3595
 13019  028C  3A0D               	xorlw	13	; case 105
 13020  028D  1903               	skipnz
 13021  028E  2A90               	goto	i1l3595
 13022  028F  2B92               	goto	i1l3667
 13023  0290                     i1l3595:
 13024                           
 13025                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 13026  0290  082C               	movf	sprintf@ap,w
 13027  0291  0086               	movwf	6
 13028  0292  0187               	clrf	7
 13029  0293  3F40               	moviw [0]fsr1
 13030  0294  00AE               	movwf	sprintf@val
 13031  0295  3F41               	moviw [1]fsr1
 13032  0296  00AF               	movwf	sprintf@val+1
 13033  0297                     i1l3597:
 13034  0297  3002               	movlw	2
 13035  0298  00A8               	movwf	??_sprintf
 13036  0299  0828               	movf	??_sprintf,w
 13037  029A  07AC               	addwf	sprintf@ap,f
 13038  029B                     i1l3599:
 13039                           
 13040                           ;doprnt.c: 1287: if((int)val < 0) {
 13041  029B  1FAF               	btfss	sprintf@val+1,7
 13042  029C  2A9E               	goto	u297_21
 13043  029D  2A9F               	goto	u297_20
 13044  029E                     u297_21:
 13045  029E  2AA8               	goto	i1l3605
 13046  029F                     u297_20:
 13047  029F                     i1l3601:
 13048                           
 13049                           ;doprnt.c: 1288: flag |= 0x03;
 13050  029F  3003               	movlw	3
 13051  02A0  00A8               	movwf	??_sprintf
 13052  02A1  0828               	movf	??_sprintf,w
 13053  02A2  04B0               	iorwf	sprintf@flag,f
 13054  02A3                     i1l3603:
 13055                           
 13056                           ;doprnt.c: 1289: val = -val;
 13057  02A3  09AE               	comf	sprintf@val,f
 13058  02A4  09AF               	comf	sprintf@val+1,f
 13059  02A5  0AAE               	incf	sprintf@val,f
 13060  02A6  1903               	skipnz
 13061  02A7  0AAF               	incf	sprintf@val+1,f
 13062  02A8                     i1l3605:
 13063                           
 13064                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 13065  02A8  01B4               	clrf	sprintf@c
 13066  02A9  0AB4               	incf	sprintf@c,f
 13067  02AA                     i1l3611:
 13068                           
 13069                           ;doprnt.c: 1332: if(val < dpowers[c])
 13070  02AA  0834               	movf	sprintf@c,w
 13071  02AB  00A8               	movwf	??_sprintf
 13072  02AC  01A9               	clrf	??_sprintf+1
 13073  02AD  35A8               	lslf	??_sprintf,f
 13074  02AE  0DA9               	rlf	??_sprintf+1,f
 13075  02AF  300F               	movlw	low (_dpowers| (0+32768))
 13076  02B0  0728               	addwf	??_sprintf,w
 13077  02B1  0084               	movwf	4
 13078  02B2  3090               	movlw	high (_dpowers| (0+32768))
 13079  02B3  3D29               	addwfc	??_sprintf+1,w
 13080  02B4  0085               	movwf	5
 13081  02B5  3F00               	moviw [0]fsr0
 13082  02B6  00AA               	movwf	??_sprintf+2
 13083  02B7  3F01               	moviw [1]fsr0
 13084  02B8  00AB               	movwf	??_sprintf+3
 13085  02B9  082B               	movf	??_sprintf+3,w
 13086  02BA  022F               	subwf	sprintf@val+1,w
 13087  02BB  1D03               	skipz
 13088  02BC  2ABF               	goto	u298_25
 13089  02BD  082A               	movf	??_sprintf+2,w
 13090  02BE  022E               	subwf	sprintf@val,w
 13091  02BF                     u298_25:
 13092  02BF  1803               	skipnc
 13093  02C0  2AC2               	goto	u298_21
 13094  02C1  2AC3               	goto	u298_20
 13095  02C2                     u298_21:
 13096  02C2  2AC4               	goto	i1l3615
 13097  02C3                     u298_20:
 13098  02C3  2ACE               	goto	i1l3617
 13099  02C4                     i1l3615:
 13100  02C4  3001               	movlw	1
 13101  02C5  00A8               	movwf	??_sprintf
 13102  02C6  0828               	movf	??_sprintf,w
 13103  02C7  07B4               	addwf	sprintf@c,f
 13104  02C8  3005               	movlw	5
 13105  02C9  0634               	xorwf	sprintf@c,w
 13106  02CA  1D03               	btfss	3,2
 13107  02CB  2ACD               	goto	u299_21
 13108  02CC  2ACE               	goto	u299_20
 13109  02CD                     u299_21:
 13110  02CD  2AAA               	goto	i1l3611
 13111  02CE                     u299_20:
 13112  02CE                     i1l3617:
 13113                           
 13114                           ;doprnt.c: 1371: if(width && flag & 0x03)
 13115  02CE  0831               	movf	sprintf@width,w
 13116  02CF  0432               	iorwf	sprintf@width+1,w
 13117  02D0  1903               	btfsc	3,2
 13118  02D1  2AD3               	goto	u300_21
 13119  02D2  2AD4               	goto	u300_20
 13120  02D3                     u300_21:
 13121  02D3  2ADE               	goto	i1l1403
 13122  02D4                     u300_20:
 13123  02D4                     i1l3619:
 13124  02D4  0830               	movf	sprintf@flag,w
 13125  02D5  3903               	andlw	3
 13126  02D6  1903               	btfsc	3,2
 13127  02D7  2AD9               	goto	u301_21
 13128  02D8  2ADA               	goto	u301_20
 13129  02D9                     u301_21:
 13130  02D9  2ADE               	goto	i1l1403
 13131  02DA                     u301_20:
 13132  02DA                     i1l3621:
 13133                           
 13134                           ;doprnt.c: 1372: width--;
 13135  02DA  30FF               	movlw	255
 13136  02DB  07B1               	addwf	sprintf@width,f
 13137  02DC  30FF               	movlw	255
 13138  02DD  3DB2               	addwfc	sprintf@width+1,f
 13139  02DE                     i1l1403:
 13140                           
 13141                           ;doprnt.c: 1407: if(width > c)
 13142  02DE  0832               	movf	sprintf@width+1,w
 13143  02DF  3A80               	xorlw	128
 13144  02E0  3C80               	sublw	128
 13145  02E1  1D03               	skipz
 13146  02E2  2AE5               	goto	u302_25
 13147  02E3  0831               	movf	sprintf@width,w
 13148  02E4  0234               	subwf	sprintf@c,w
 13149  02E5                     u302_25:
 13150  02E5  1803               	skipnc
 13151  02E6  2AE8               	goto	u302_21
 13152  02E7  2AE9               	goto	u302_20
 13153  02E8                     u302_21:
 13154  02E8  2AF2               	goto	i1l3625
 13155  02E9                     u302_20:
 13156  02E9                     i1l3623:
 13157                           
 13158                           ;doprnt.c: 1408: width -= c;
 13159  02E9  0020               	movlb	0	; select bank0
 13160  02EA  0834               	movf	sprintf@c,w
 13161  02EB  00A8               	movwf	??_sprintf
 13162  02EC  01A9               	clrf	??_sprintf+1
 13163  02ED  0828               	movf	??_sprintf,w
 13164  02EE  02B1               	subwf	sprintf@width,f
 13165  02EF  0829               	movf	??_sprintf+1,w
 13166  02F0  3BB2               	subwfb	sprintf@width+1,f
 13167  02F1  2AF5               	goto	i1l3627
 13168  02F2                     i1l3625:
 13169                           
 13170                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 13171  02F2  0020               	movlb	0	; select bank0
 13172  02F3  01B1               	clrf	sprintf@width
 13173  02F4  01B2               	clrf	sprintf@width+1
 13174  02F5                     i1l3627:
 13175                           
 13176                           ;doprnt.c: 1413: if(flag & 0x04) {
 13177  02F5  1D30               	btfss	sprintf@flag,2
 13178  02F6  2AF8               	goto	u303_21
 13179  02F7  2AF9               	goto	u303_20
 13180  02F8                     u303_21:
 13181  02F8  2B26               	goto	i1l3643
 13182  02F9                     u303_20:
 13183  02F9                     i1l3629:
 13184                           
 13185                           ;doprnt.c: 1418: if(flag & 0x03)
 13186  02F9  0830               	movf	sprintf@flag,w
 13187  02FA  3903               	andlw	3
 13188  02FB  1903               	btfsc	3,2
 13189  02FC  2AFE               	goto	u304_21
 13190  02FD  2AFF               	goto	u304_20
 13191  02FE                     u304_21:
 13192  02FE  2B0A               	goto	i1l3635
 13193  02FF                     u304_20:
 13194  02FF                     i1l3631:
 13195                           
 13196                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 13197  02FF  302D               	movlw	45
 13198  0300  00A8               	movwf	??_sprintf
 13199  0301  0833               	movf	sprintf@sp,w
 13200  0302  0086               	movwf	6
 13201  0303  0187               	clrf	7
 13202  0304  0828               	movf	??_sprintf,w
 13203  0305  0081               	movwf	1
 13204  0306                     i1l3633:
 13205  0306  3001               	movlw	1
 13206  0307  00A8               	movwf	??_sprintf
 13207  0308  0828               	movf	??_sprintf,w
 13208  0309  07B3               	addwf	sprintf@sp,f
 13209  030A                     i1l3635:
 13210                           
 13211                           ;doprnt.c: 1441: if(width)
 13212  030A  0831               	movf	sprintf@width,w
 13213  030B  0432               	iorwf	sprintf@width+1,w
 13214  030C  1903               	btfsc	3,2
 13215  030D  2B0F               	goto	u305_21
 13216  030E  2B10               	goto	u305_20
 13217  030F                     u305_21:
 13218  030F  2B52               	goto	i1l3657
 13219  0310                     u305_20:
 13220  0310                     i1l3637:
 13221                           
 13222                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 13223  0310  3030               	movlw	48
 13224  0311  00A8               	movwf	??_sprintf
 13225  0312  0833               	movf	sprintf@sp,w
 13226  0313  0086               	movwf	6
 13227  0314  0187               	clrf	7
 13228  0315  0828               	movf	??_sprintf,w
 13229  0316  0081               	movwf	1
 13230  0317                     i1l3639:
 13231  0317  3001               	movlw	1
 13232  0318  00A8               	movwf	??_sprintf
 13233  0319  0828               	movf	??_sprintf,w
 13234  031A  07B3               	addwf	sprintf@sp,f
 13235  031B                     i1l3641:
 13236                           
 13237                           ;doprnt.c: 1444: while(--width);
 13238  031B  30FF               	movlw	255
 13239  031C  07B1               	addwf	sprintf@width,f
 13240  031D  30FF               	movlw	255
 13241  031E  3DB2               	addwfc	sprintf@width+1,f
 13242  031F  0831               	movf	sprintf@width,w
 13243  0320  0432               	iorwf	sprintf@width+1,w
 13244  0321  1D03               	btfss	3,2
 13245  0322  2B24               	goto	u306_21
 13246  0323  2B25               	goto	u306_20
 13247  0324                     u306_21:
 13248  0324  2B10               	goto	i1l3637
 13249  0325                     u306_20:
 13250  0325  2B52               	goto	i1l3657
 13251  0326                     i1l3643:
 13252                           
 13253                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 13254  0326  0831               	movf	sprintf@width,w
 13255  0327  0432               	iorwf	sprintf@width+1,w
 13256  0328  1903               	btfsc	3,2
 13257  0329  2B2B               	goto	u307_21
 13258  032A  2B2C               	goto	u307_20
 13259  032B                     u307_21:
 13260  032B  2B41               	goto	i1l3651
 13261  032C                     u307_20:
 13262  032C                     i1l3645:
 13263                           
 13264                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 13265  032C  3020               	movlw	32
 13266  032D  00A8               	movwf	??_sprintf
 13267  032E  0833               	movf	sprintf@sp,w
 13268  032F  0086               	movwf	6
 13269  0330  0187               	clrf	7
 13270  0331  0828               	movf	??_sprintf,w
 13271  0332  0081               	movwf	1
 13272  0333                     i1l3647:
 13273  0333  3001               	movlw	1
 13274  0334  00A8               	movwf	??_sprintf
 13275  0335  0828               	movf	??_sprintf,w
 13276  0336  07B3               	addwf	sprintf@sp,f
 13277  0337                     i1l3649:
 13278                           
 13279                           ;doprnt.c: 1457: while(--width);
 13280  0337  30FF               	movlw	255
 13281  0338  07B1               	addwf	sprintf@width,f
 13282  0339  30FF               	movlw	255
 13283  033A  3DB2               	addwfc	sprintf@width+1,f
 13284  033B  0831               	movf	sprintf@width,w
 13285  033C  0432               	iorwf	sprintf@width+1,w
 13286  033D  1D03               	btfss	3,2
 13287  033E  2B40               	goto	u308_21
 13288  033F  2B41               	goto	u308_20
 13289  0340                     u308_21:
 13290  0340  2B2C               	goto	i1l3645
 13291  0341                     u308_20:
 13292  0341                     i1l3651:
 13293                           
 13294                           ;doprnt.c: 1464: if(flag & 0x03)
 13295  0341  0830               	movf	sprintf@flag,w
 13296  0342  3903               	andlw	3
 13297  0343  1903               	btfsc	3,2
 13298  0344  2B46               	goto	u309_21
 13299  0345  2B47               	goto	u309_20
 13300  0346                     u309_21:
 13301  0346  2B52               	goto	i1l3657
 13302  0347                     u309_20:
 13303  0347                     i1l3653:
 13304                           
 13305                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 13306  0347  302D               	movlw	45
 13307  0348  00A8               	movwf	??_sprintf
 13308  0349  0833               	movf	sprintf@sp,w
 13309  034A  0086               	movwf	6
 13310  034B  0187               	clrf	7
 13311  034C  0828               	movf	??_sprintf,w
 13312  034D  0081               	movwf	1
 13313  034E                     i1l3655:
 13314  034E  3001               	movlw	1
 13315  034F  00A8               	movwf	??_sprintf
 13316  0350  0828               	movf	??_sprintf,w
 13317  0351  07B3               	addwf	sprintf@sp,f
 13318  0352                     i1l3657:
 13319                           
 13320                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 13321  0352  0834               	movf	sprintf@c,w
 13322  0353  00A8               	movwf	??_sprintf
 13323  0354  0828               	movf	??_sprintf,w
 13324  0355  00AD               	movwf	sprintf@prec
 13325                           
 13326                           ;doprnt.c: 1500: while(prec--) {
 13327  0356  2B89               	goto	i1l3665
 13328  0357                     i1l3659:
 13329                           
 13330                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 13331  0357  300A               	movlw	10
 13332  0358  00F8               	movwf	___lwmod@divisor
 13333  0359  3000               	movlw	0
 13334  035A  00F9               	movwf	___lwmod@divisor+1
 13335  035B  082D               	movf	sprintf@prec,w
 13336  035C  00A8               	movwf	??_sprintf
 13337  035D  01A9               	clrf	??_sprintf+1
 13338  035E  35A8               	lslf	??_sprintf,f
 13339  035F  0DA9               	rlf	??_sprintf+1,f
 13340  0360  300F               	movlw	low (_dpowers| (0+32768))
 13341  0361  0728               	addwf	??_sprintf,w
 13342  0362  0084               	movwf	4
 13343  0363  3090               	movlw	high (_dpowers| (0+32768))
 13344  0364  3D29               	addwfc	??_sprintf+1,w
 13345  0365  0085               	movwf	5
 13346  0366  3F00               	moviw [0]fsr0
 13347  0367  00F0               	movwf	___lwdiv@divisor
 13348  0368  3F01               	moviw [1]fsr0
 13349  0369  00F1               	movwf	___lwdiv@divisor+1
 13350  036A  082F               	movf	sprintf@val+1,w
 13351  036B  00F3               	movwf	___lwdiv@dividend+1
 13352  036C  082E               	movf	sprintf@val,w
 13353  036D  00F2               	movwf	___lwdiv@dividend
 13354  036E  318D  25B0  3182   	fcall	___lwdiv
 13355  0371  0871               	movf	?___lwdiv+1,w
 13356  0372  00FB               	movwf	___lwmod@dividend+1
 13357  0373  0870               	movf	?___lwdiv,w
 13358  0374  00FA               	movwf	___lwmod@dividend
 13359  0375  318D  257C  3182   	fcall	___lwmod
 13360  0378  0878               	movf	?___lwmod,w
 13361  0379  3E30               	addlw	48
 13362  037A  0020               	movlb	0	; select bank0
 13363  037B  00AA               	movwf	??_sprintf+2
 13364  037C  082A               	movf	??_sprintf+2,w
 13365  037D  00B4               	movwf	sprintf@c
 13366  037E                     i1l3661:
 13367                           
 13368                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 13369  037E  0834               	movf	sprintf@c,w
 13370  037F  00A8               	movwf	??_sprintf
 13371  0380  0833               	movf	sprintf@sp,w
 13372  0381  0086               	movwf	6
 13373  0382  0187               	clrf	7
 13374  0383  0828               	movf	??_sprintf,w
 13375  0384  0081               	movwf	1
 13376  0385                     i1l3663:
 13377  0385  3001               	movlw	1
 13378  0386  00A8               	movwf	??_sprintf
 13379  0387  0828               	movf	??_sprintf,w
 13380  0388  07B3               	addwf	sprintf@sp,f
 13381  0389                     i1l3665:
 13382  0389  30FF               	movlw	255
 13383  038A  00A8               	movwf	??_sprintf
 13384  038B  0828               	movf	??_sprintf,w
 13385  038C  07AD               	addwf	sprintf@prec,f
 13386  038D  0A2D               	incf	sprintf@prec,w
 13387  038E  1D03               	btfss	3,2
 13388  038F  2B91               	goto	u310_21
 13389  0390  2B92               	goto	u310_20
 13390  0391                     u310_21:
 13391  0391  2B57               	goto	i1l3659
 13392  0392                     u310_20:
 13393  0392                     i1l3667:
 13394  0392  0821               	movf	sprintf@f+1,w
 13395  0393  00A9               	movwf	??_sprintf+1
 13396  0394  0820               	movf	sprintf@f,w
 13397  0395  00A8               	movwf	??_sprintf
 13398  0396  0AA0               	incf	sprintf@f,f
 13399  0397  1903               	skipnz
 13400  0398  0AA1               	incf	sprintf@f+1,f
 13401  0399  0828               	movf	??_sprintf,w
 13402  039A  0084               	movwf	4
 13403  039B  0829               	movf	??_sprintf+1,w
 13404  039C  0085               	movwf	5
 13405  039D  0800               	movf	0,w	;code access
 13406  039E  00AA               	movwf	??_sprintf+2
 13407  039F  082A               	movf	??_sprintf+2,w
 13408  03A0  00B4               	movwf	sprintf@c
 13409  03A1  0834               	movf	sprintf@c,w
 13410  03A2  1D03               	btfss	3,2
 13411  03A3  2BA5               	goto	u311_21
 13412  03A4  2BA6               	goto	u311_20
 13413  03A5                     u311_21:
 13414  03A5  2A15               	goto	i1l3565
 13415  03A6                     u311_20:
 13416  03A6                     i1l3669:
 13417                           
 13418                           ;doprnt.c: 1564: *sp = 0;
 13419  03A6  0833               	movf	sprintf@sp,w
 13420  03A7  0086               	movwf	6
 13421  03A8  0187               	clrf	7
 13422  03A9  0181               	clrf	1
 13423  03AA                     i1l1420:
 13424  03AA  0008               	return
 13425  03AB                     __end_of_sprintf:
 13426                           
 13427                           	psect	text38
 13428  0C20                     __ptext38:	
 13429 ;; *************** function _isdigit *****************
 13430 ;; Defined at:
 13431 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 13432 ;; Parameters:    Size  Location     Type
 13433 ;;  c               1    wreg     unsigned char 
 13434 ;; Auto vars:     Size  Location     Type
 13435 ;;  c               1    1[COMMON] unsigned char 
 13436 ;; Return value:  Size  Location     Type
 13437 ;;		None               void
 13438 ;; Registers used:
 13439 ;;		wreg, status,2, status,0
 13440 ;; Tracked objects:
 13441 ;;		On entry : 0/0
 13442 ;;		On exit  : 0/0
 13443 ;;		Unchanged: 0/0
 13444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13446 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13448 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13449 ;;Total ram usage:        2 bytes
 13450 ;; Hardware stack levels used:    1
 13451 ;; This function calls:
 13452 ;;		Nothing
 13453 ;; This function is called by:
 13454 ;;		_sprintf
 13455 ;; This function uses a non-reentrant model
 13456 ;;
 13457                           
 13458                           
 13459                           ;psect for function _isdigit
 13460  0C20                     _isdigit:
 13461                           
 13462                           ;incstack = 0
 13463                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 13464                           ;isdigit@c stored from wreg
 13465  0C20  00F1               	movwf	isdigit@c
 13466  0C21                     i1l3359:
 13467  0C21  01F0               	clrf	_isdigit$2809
 13468  0C22                     i1l3361:
 13469  0C22  303A               	movlw	58
 13470  0C23  0271               	subwf	isdigit@c,w
 13471  0C24  1803               	skipnc
 13472  0C25  2C27               	goto	u236_21
 13473  0C26  2C28               	goto	u236_20
 13474  0C27                     u236_21:
 13475  0C27  2C30               	goto	i1l3367
 13476  0C28                     u236_20:
 13477  0C28                     i1l3363:
 13478  0C28  3030               	movlw	48
 13479  0C29  0271               	subwf	isdigit@c,w
 13480  0C2A  1C03               	skipc
 13481  0C2B  2C2D               	goto	u237_21
 13482  0C2C  2C2E               	goto	u237_20
 13483  0C2D                     u237_21:
 13484  0C2D  2C30               	goto	i1l3367
 13485  0C2E                     u237_20:
 13486  0C2E                     i1l3365:
 13487  0C2E  01F0               	clrf	_isdigit$2809
 13488  0C2F  0AF0               	incf	_isdigit$2809,f
 13489  0C30                     i1l3367:
 13490  0C30  0C70               	rrf	_isdigit$2809,w
 13491  0C31                     i1l1877:
 13492  0C31  0008               	return
 13493  0C32                     __end_of_isdigit:
 13494                           
 13495                           	psect	text39
 13496  0D00                     __ptext39:	
 13497 ;; *************** function ___wmul *****************
 13498 ;; Defined at:
 13499 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 13500 ;; Parameters:    Size  Location     Type
 13501 ;;  multiplier      2    0[COMMON] unsigned int 
 13502 ;;  multiplicand    2    2[COMMON] unsigned int 
 13503 ;; Auto vars:     Size  Location     Type
 13504 ;;  product         2    4[COMMON] unsigned int 
 13505 ;; Return value:  Size  Location     Type
 13506 ;;                  2    0[COMMON] unsigned int 
 13507 ;; Registers used:
 13508 ;;		wreg, status,2, status,0
 13509 ;; Tracked objects:
 13510 ;;		On entry : 0/0
 13511 ;;		On exit  : 0/0
 13512 ;;		Unchanged: 0/0
 13513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13514 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13515 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13517 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13518 ;;Total ram usage:        6 bytes
 13519 ;; Hardware stack levels used:    1
 13520 ;; This function calls:
 13521 ;;		Nothing
 13522 ;; This function is called by:
 13523 ;;		_sprintf
 13524 ;;		_map
 13525 ;; This function uses a non-reentrant model
 13526 ;;
 13527                           
 13528                           
 13529                           ;psect for function ___wmul
 13530  0D00                     ___wmul:
 13531  0D00                     i1l3371:	
 13532                           ;incstack = 0
 13533                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13534                           
 13535  0D00  01F4               	clrf	___wmul@product
 13536  0D01  01F5               	clrf	___wmul@product+1
 13537  0D02                     i1l3373:
 13538  0D02  1C70               	btfss	___wmul@multiplier,0
 13539  0D03  2D05               	goto	u238_21
 13540  0D04  2D06               	goto	u238_20
 13541  0D05                     u238_21:
 13542  0D05  2D0A               	goto	i1l1424
 13543  0D06                     u238_20:
 13544  0D06                     i1l3375:
 13545  0D06  0872               	movf	___wmul@multiplicand,w
 13546  0D07  07F4               	addwf	___wmul@product,f
 13547  0D08  0873               	movf	___wmul@multiplicand+1,w
 13548  0D09  3DF5               	addwfc	___wmul@product+1,f
 13549  0D0A                     i1l1424:
 13550  0D0A  3001               	movlw	1
 13551  0D0B                     u239_25:
 13552  0D0B  35F2               	lslf	___wmul@multiplicand,f
 13553  0D0C  0DF3               	rlf	___wmul@multiplicand+1,f
 13554  0D0D  0B89               	decfsz	9,f
 13555  0D0E  2D0B               	goto	u239_25
 13556  0D0F                     i1l3377:
 13557  0D0F  3001               	movlw	1
 13558  0D10                     u240_25:
 13559  0D10  36F1               	lsrf	___wmul@multiplier+1,f
 13560  0D11  0CF0               	rrf	___wmul@multiplier,f
 13561  0D12  0B89               	decfsz	9,f
 13562  0D13  2D10               	goto	u240_25
 13563  0D14                     i1l3379:
 13564  0D14  0870               	movf	___wmul@multiplier,w
 13565  0D15  0471               	iorwf	___wmul@multiplier+1,w
 13566  0D16  1D03               	btfss	3,2
 13567  0D17  2D19               	goto	u241_21
 13568  0D18  2D1A               	goto	u241_20
 13569  0D19                     u241_21:
 13570  0D19  2D02               	goto	i1l3373
 13571  0D1A                     u241_20:
 13572  0D1A                     i1l3381:
 13573  0D1A  0875               	movf	___wmul@product+1,w
 13574  0D1B  00F1               	movwf	?___wmul+1
 13575  0D1C  0874               	movf	___wmul@product,w
 13576  0D1D  00F0               	movwf	?___wmul
 13577  0D1E                     i1l1426:
 13578  0D1E  0008               	return
 13579  0D1F                     __end_of___wmul:
 13580                           
 13581                           	psect	text40
 13582  0D7C                     __ptext40:	
 13583 ;; *************** function ___lwmod *****************
 13584 ;; Defined at:
 13585 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 13586 ;; Parameters:    Size  Location     Type
 13587 ;;  divisor         2    8[COMMON] unsigned int 
 13588 ;;  dividend        2   10[COMMON] unsigned int 
 13589 ;; Auto vars:     Size  Location     Type
 13590 ;;  counter         1   13[COMMON] unsigned char 
 13591 ;; Return value:  Size  Location     Type
 13592 ;;                  2    8[COMMON] unsigned int 
 13593 ;; Registers used:
 13594 ;;		wreg, status,2, status,0
 13595 ;; Tracked objects:
 13596 ;;		On entry : 0/0
 13597 ;;		On exit  : 0/0
 13598 ;;		Unchanged: 0/0
 13599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13600 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13602 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13603 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13604 ;;Total ram usage:        6 bytes
 13605 ;; Hardware stack levels used:    1
 13606 ;; This function calls:
 13607 ;;		Nothing
 13608 ;; This function is called by:
 13609 ;;		_sprintf
 13610 ;; This function uses a non-reentrant model
 13611 ;;
 13612                           
 13613                           
 13614                           ;psect for function ___lwmod
 13615  0D7C                     ___lwmod:
 13616  0D7C                     i1l3411:	
 13617                           ;incstack = 0
 13618                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13619                           
 13620  0D7C  0878               	movf	___lwmod@divisor,w
 13621  0D7D  0479               	iorwf	___lwmod@divisor+1,w
 13622  0D7E  1903               	btfsc	3,2
 13623  0D7F  2D81               	goto	u249_21
 13624  0D80  2D82               	goto	u249_20
 13625  0D81                     u249_21:
 13626  0D81  2DAB               	goto	i1l3429
 13627  0D82                     u249_20:
 13628  0D82                     i1l3413:
 13629  0D82  01FD               	clrf	___lwmod@counter
 13630  0D83  0AFD               	incf	___lwmod@counter,f
 13631  0D84  2D8E               	goto	i1l3419
 13632  0D85                     i1l3415:
 13633  0D85  3001               	movlw	1
 13634  0D86                     u250_25:
 13635  0D86  35F8               	lslf	___lwmod@divisor,f
 13636  0D87  0DF9               	rlf	___lwmod@divisor+1,f
 13637  0D88  0B89               	decfsz	9,f
 13638  0D89  2D86               	goto	u250_25
 13639  0D8A                     i1l3417:
 13640  0D8A  3001               	movlw	1
 13641  0D8B  00FC               	movwf	??___lwmod
 13642  0D8C  087C               	movf	??___lwmod,w
 13643  0D8D  07FD               	addwf	___lwmod@counter,f
 13644  0D8E                     i1l3419:
 13645  0D8E  1FF9               	btfss	___lwmod@divisor+1,7
 13646  0D8F  2D91               	goto	u251_21
 13647  0D90  2D92               	goto	u251_20
 13648  0D91                     u251_21:
 13649  0D91  2D85               	goto	i1l3415
 13650  0D92                     u251_20:
 13651  0D92                     i1l3421:
 13652  0D92  0879               	movf	___lwmod@divisor+1,w
 13653  0D93  027B               	subwf	___lwmod@dividend+1,w
 13654  0D94  1D03               	skipz
 13655  0D95  2D98               	goto	u252_25
 13656  0D96  0878               	movf	___lwmod@divisor,w
 13657  0D97  027A               	subwf	___lwmod@dividend,w
 13658  0D98                     u252_25:
 13659  0D98  1C03               	skipc
 13660  0D99  2D9B               	goto	u252_21
 13661  0D9A  2D9C               	goto	u252_20
 13662  0D9B                     u252_21:
 13663  0D9B  2DA0               	goto	i1l3425
 13664  0D9C                     u252_20:
 13665  0D9C                     i1l3423:
 13666  0D9C  0878               	movf	___lwmod@divisor,w
 13667  0D9D  02FA               	subwf	___lwmod@dividend,f
 13668  0D9E  0879               	movf	___lwmod@divisor+1,w
 13669  0D9F  3BFB               	subwfb	___lwmod@dividend+1,f
 13670  0DA0                     i1l3425:
 13671  0DA0  3001               	movlw	1
 13672  0DA1                     u253_25:
 13673  0DA1  36F9               	lsrf	___lwmod@divisor+1,f
 13674  0DA2  0CF8               	rrf	___lwmod@divisor,f
 13675  0DA3  0B89               	decfsz	9,f
 13676  0DA4  2DA1               	goto	u253_25
 13677  0DA5                     i1l3427:
 13678  0DA5  3001               	movlw	1
 13679  0DA6  02FD               	subwf	___lwmod@counter,f
 13680  0DA7  1D03               	btfss	3,2
 13681  0DA8  2DAA               	goto	u254_21
 13682  0DA9  2DAB               	goto	u254_20
 13683  0DAA                     u254_21:
 13684  0DAA  2D92               	goto	i1l3421
 13685  0DAB                     u254_20:
 13686  0DAB                     i1l3429:
 13687  0DAB  087B               	movf	___lwmod@dividend+1,w
 13688  0DAC  00F9               	movwf	?___lwmod+1
 13689  0DAD  087A               	movf	___lwmod@dividend,w
 13690  0DAE  00F8               	movwf	?___lwmod
 13691  0DAF                     i1l1706:
 13692  0DAF  0008               	return
 13693  0DB0                     __end_of___lwmod:
 13694                           
 13695                           	psect	text41
 13696  0DB0                     __ptext41:	
 13697 ;; *************** function ___lwdiv *****************
 13698 ;; Defined at:
 13699 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 13700 ;; Parameters:    Size  Location     Type
 13701 ;;  divisor         2    0[COMMON] unsigned int 
 13702 ;;  dividend        2    2[COMMON] unsigned int 
 13703 ;; Auto vars:     Size  Location     Type
 13704 ;;  quotient        2    5[COMMON] unsigned int 
 13705 ;;  counter         1    7[COMMON] unsigned char 
 13706 ;; Return value:  Size  Location     Type
 13707 ;;                  2    0[COMMON] unsigned int 
 13708 ;; Registers used:
 13709 ;;		wreg, status,2, status,0
 13710 ;; Tracked objects:
 13711 ;;		On entry : 0/0
 13712 ;;		On exit  : 0/0
 13713 ;;		Unchanged: 0/0
 13714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13715 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13716 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13717 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13718 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13719 ;;Total ram usage:        8 bytes
 13720 ;; Hardware stack levels used:    1
 13721 ;; This function calls:
 13722 ;;		Nothing
 13723 ;; This function is called by:
 13724 ;;		_sprintf
 13725 ;; This function uses a non-reentrant model
 13726 ;;
 13727                           
 13728                           
 13729                           ;psect for function ___lwdiv
 13730  0DB0                     ___lwdiv:
 13731  0DB0                     i1l3385:	
 13732                           ;incstack = 0
 13733                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 13734                           
 13735  0DB0  01F5               	clrf	___lwdiv@quotient
 13736  0DB1  01F6               	clrf	___lwdiv@quotient+1
 13737  0DB2                     i1l3387:
 13738  0DB2  0870               	movf	___lwdiv@divisor,w
 13739  0DB3  0471               	iorwf	___lwdiv@divisor+1,w
 13740  0DB4  1903               	btfsc	3,2
 13741  0DB5  2DB7               	goto	u242_21
 13742  0DB6  2DB8               	goto	u242_20
 13743  0DB7                     u242_21:
 13744  0DB7  2DE7               	goto	i1l3407
 13745  0DB8                     u242_20:
 13746  0DB8                     i1l3389:
 13747  0DB8  01F7               	clrf	___lwdiv@counter
 13748  0DB9  0AF7               	incf	___lwdiv@counter,f
 13749  0DBA  2DC4               	goto	i1l3395
 13750  0DBB                     i1l3391:
 13751  0DBB  3001               	movlw	1
 13752  0DBC                     u243_25:
 13753  0DBC  35F0               	lslf	___lwdiv@divisor,f
 13754  0DBD  0DF1               	rlf	___lwdiv@divisor+1,f
 13755  0DBE  0B89               	decfsz	9,f
 13756  0DBF  2DBC               	goto	u243_25
 13757  0DC0                     i1l3393:
 13758  0DC0  3001               	movlw	1
 13759  0DC1  00F4               	movwf	??___lwdiv
 13760  0DC2  0874               	movf	??___lwdiv,w
 13761  0DC3  07F7               	addwf	___lwdiv@counter,f
 13762  0DC4                     i1l3395:
 13763  0DC4  1FF1               	btfss	___lwdiv@divisor+1,7
 13764  0DC5  2DC7               	goto	u244_21
 13765  0DC6  2DC8               	goto	u244_20
 13766  0DC7                     u244_21:
 13767  0DC7  2DBB               	goto	i1l3391
 13768  0DC8                     u244_20:
 13769  0DC8                     i1l3397:
 13770  0DC8  3001               	movlw	1
 13771  0DC9                     u245_25:
 13772  0DC9  35F5               	lslf	___lwdiv@quotient,f
 13773  0DCA  0DF6               	rlf	___lwdiv@quotient+1,f
 13774  0DCB  0B89               	decfsz	9,f
 13775  0DCC  2DC9               	goto	u245_25
 13776  0DCD  0871               	movf	___lwdiv@divisor+1,w
 13777  0DCE  0273               	subwf	___lwdiv@dividend+1,w
 13778  0DCF  1D03               	skipz
 13779  0DD0  2DD3               	goto	u246_25
 13780  0DD1  0870               	movf	___lwdiv@divisor,w
 13781  0DD2  0272               	subwf	___lwdiv@dividend,w
 13782  0DD3                     u246_25:
 13783  0DD3  1C03               	skipc
 13784  0DD4  2DD6               	goto	u246_21
 13785  0DD5  2DD7               	goto	u246_20
 13786  0DD6                     u246_21:
 13787  0DD6  2DDC               	goto	i1l3403
 13788  0DD7                     u246_20:
 13789  0DD7                     i1l3399:
 13790  0DD7  0870               	movf	___lwdiv@divisor,w
 13791  0DD8  02F2               	subwf	___lwdiv@dividend,f
 13792  0DD9  0871               	movf	___lwdiv@divisor+1,w
 13793  0DDA  3BF3               	subwfb	___lwdiv@dividend+1,f
 13794  0DDB                     i1l3401:
 13795  0DDB  1475               	bsf	___lwdiv@quotient,0
 13796  0DDC                     i1l3403:
 13797  0DDC  3001               	movlw	1
 13798  0DDD                     u247_25:
 13799  0DDD  36F1               	lsrf	___lwdiv@divisor+1,f
 13800  0DDE  0CF0               	rrf	___lwdiv@divisor,f
 13801  0DDF  0B89               	decfsz	9,f
 13802  0DE0  2DDD               	goto	u247_25
 13803  0DE1                     i1l3405:
 13804  0DE1  3001               	movlw	1
 13805  0DE2  02F7               	subwf	___lwdiv@counter,f
 13806  0DE3  1D03               	btfss	3,2
 13807  0DE4  2DE6               	goto	u248_21
 13808  0DE5  2DE7               	goto	u248_20
 13809  0DE6                     u248_21:
 13810  0DE6  2DC8               	goto	i1l3397
 13811  0DE7                     u248_20:
 13812  0DE7                     i1l3407:
 13813  0DE7  0876               	movf	___lwdiv@quotient+1,w
 13814  0DE8  00F1               	movwf	?___lwdiv+1
 13815  0DE9  0875               	movf	___lwdiv@quotient,w
 13816  0DEA  00F0               	movwf	?___lwdiv
 13817  0DEB                     i1l1696:
 13818  0DEB  0008               	return
 13819  0DEC                     __end_of___lwdiv:
 13820                           
 13821                           	psect	text42
 13822  0F20                     __ptext42:	
 13823 ;; *************** function _differenceBetweenTimePeriod *****************
 13824 ;; Defined at:
 13825 ;;		line 208 in file "main.c"
 13826 ;; Parameters:    Size  Location     Type
 13827 ;;  start           6    0[COMMON] struct Time
 13828 ;;  stop            6    6[COMMON] struct Time
 13829 ;;  diff            1   12[COMMON] PTR struct Time
 13830 ;;		 -> menuLCD_ISR@diff(6), 
 13831 ;; Auto vars:     Size  Location     Type
 13832 ;;		None
 13833 ;; Return value:  Size  Location     Type
 13834 ;;                  1    wreg      void 
 13835 ;; Registers used:
 13836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 13837 ;; Tracked objects:
 13838 ;;		On entry : 0/0
 13839 ;;		On exit  : 0/0
 13840 ;;		Unchanged: 0/0
 13841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13842 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13844 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13845 ;;      Totals:        13       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13846 ;;Total ram usage:       15 bytes
 13847 ;; Hardware stack levels used:    1
 13848 ;; This function calls:
 13849 ;;		Nothing
 13850 ;; This function is called by:
 13851 ;;		_menuLCD_ISR
 13852 ;; This function uses a non-reentrant model
 13853 ;;
 13854                           
 13855                           
 13856                           ;psect for function _differenceBetweenTimePeriod
 13857  0F20                     _differenceBetweenTimePeriod:
 13858  0F20                     i1l3549:	
 13859                           ;incstack = 0
 13860                           ; Regs used in _differenceBetweenTimePeriod: [wreg-fsr1h+status,2+status,0]
 13861                           
 13862                           
 13863                           ;main.c: 211: while (stop.s > start.s) {
 13864  0F20  2F29               	goto	i1l1078
 13865  0F21                     i1l3551:
 13866                           
 13867                           ;main.c: 212: --start.m;
 13868  0F21  30FF               	movlw	255
 13869  0F22  07F2               	addwf	differenceBetweenTimePeriod@start+2,f
 13870  0F23  30FF               	movlw	255
 13871  0F24  3DF3               	addwfc	differenceBetweenTimePeriod@start+3,f
 13872                           
 13873                           ;main.c: 213: start.s += 60;
 13874  0F25  303C               	movlw	60
 13875  0F26  07F4               	addwf	differenceBetweenTimePeriod@start+4,f
 13876  0F27  3000               	movlw	0
 13877  0F28  3DF5               	addwfc	differenceBetweenTimePeriod@start+5,f
 13878  0F29                     i1l1078:
 13879  0F29  0875               	movf	differenceBetweenTimePeriod@start+5,w
 13880  0F2A  3A80               	xorlw	128
 13881  0F2B  0020               	movlb	0	; select bank0
 13882  0F2C  00A0               	movwf	??_differenceBetweenTimePeriod
 13883  0F2D  087B               	movf	differenceBetweenTimePeriod@stop+5,w
 13884  0F2E  3A80               	xorlw	128
 13885  0F2F  0220               	subwf	??_differenceBetweenTimePeriod,w
 13886  0F30  1D03               	skipz
 13887  0F31  2F34               	goto	u292_25
 13888  0F32  087A               	movf	differenceBetweenTimePeriod@stop+4,w
 13889  0F33  0274               	subwf	differenceBetweenTimePeriod@start+4,w
 13890  0F34                     u292_25:
 13891  0F34  1C03               	skipc
 13892  0F35  2F37               	goto	u292_21
 13893  0F36  2F38               	goto	u292_20
 13894  0F37                     u292_21:
 13895  0F37  2F21               	goto	i1l3551
 13896  0F38                     u292_20:
 13897  0F38                     i1l3553:
 13898                           
 13899                           ;main.c: 214: };main.c: 215: diff->s = start.s - stop.s;
 13900  0F38  3004               	movlw	4
 13901  0F39  3E76               	addlw	(low (differenceBetweenTimePeriod@stop| 0))& (0+255)
 13902  0F3A  0086               	movwf	6
 13903  0F3B  0187               	clrf	7
 13904  0F3C  3004               	movlw	4
 13905  0F3D  3E70               	addlw	(low (differenceBetweenTimePeriod@start| 0))& (0+255)
 13906  0F3E  0084               	movwf	4
 13907  0F3F  0185               	clrf	5
 13908  0F40  3F40               	moviw [0]fsr1
 13909  0F41  0200               	subwf	0,w
 13910  0F42  0020               	movlb	0	; select bank0
 13911  0F43  00A0               	movwf	??_differenceBetweenTimePeriod
 13912  0F44  3101               	addfsr 0,1
 13913  0F45  3F41               	moviw [1]fsr1
 13914  0F46  3B00               	subwfb	0,w
 13915  0F47  00A1               	movwf	??_differenceBetweenTimePeriod+1
 13916  0F48  087C               	movf	differenceBetweenTimePeriod@diff,w
 13917  0F49  3E04               	addlw	4
 13918  0F4A  0086               	movwf	6
 13919  0F4B  0187               	clrf	7
 13920  0F4C  0820               	movf	??_differenceBetweenTimePeriod,w
 13921  0F4D  3FC0               	movwi [0]fsr1
 13922  0F4E  0821               	movf	??_differenceBetweenTimePeriod+1,w
 13923  0F4F  3FC1               	movwi [1]fsr1
 13924                           
 13925                           ;main.c: 216: while (stop.m > start.m) {
 13926  0F50  2F59               	goto	i1l1081
 13927  0F51                     i1l3555:
 13928                           
 13929                           ;main.c: 217: --start.h;
 13930  0F51  30FF               	movlw	255
 13931  0F52  07F0               	addwf	differenceBetweenTimePeriod@start,f
 13932  0F53  30FF               	movlw	255
 13933  0F54  3DF1               	addwfc	differenceBetweenTimePeriod@start+1,f
 13934                           
 13935                           ;main.c: 218: start.m += 60;
 13936  0F55  303C               	movlw	60
 13937  0F56  07F2               	addwf	differenceBetweenTimePeriod@start+2,f
 13938  0F57  3000               	movlw	0
 13939  0F58  3DF3               	addwfc	differenceBetweenTimePeriod@start+3,f
 13940  0F59                     i1l1081:
 13941  0F59  0873               	movf	differenceBetweenTimePeriod@start+3,w
 13942  0F5A  3A80               	xorlw	128
 13943  0F5B  0020               	movlb	0	; select bank0
 13944  0F5C  00A0               	movwf	??_differenceBetweenTimePeriod
 13945  0F5D  0879               	movf	differenceBetweenTimePeriod@stop+3,w
 13946  0F5E  3A80               	xorlw	128
 13947  0F5F  0220               	subwf	??_differenceBetweenTimePeriod,w
 13948  0F60  1D03               	skipz
 13949  0F61  2F64               	goto	u293_25
 13950  0F62  0878               	movf	differenceBetweenTimePeriod@stop+2,w
 13951  0F63  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 13952  0F64                     u293_25:
 13953  0F64  1C03               	skipc
 13954  0F65  2F67               	goto	u293_21
 13955  0F66  2F68               	goto	u293_20
 13956  0F67                     u293_21:
 13957  0F67  2F51               	goto	i1l3555
 13958  0F68                     u293_20:
 13959  0F68                     i1l3557:
 13960                           
 13961                           ;main.c: 219: };main.c: 220: diff->m = start.m - stop.m;
 13962  0F68  3002               	movlw	2
 13963  0F69  3E76               	addlw	(low (differenceBetweenTimePeriod@stop| 0))& (0+255)
 13964  0F6A  0086               	movwf	6
 13965  0F6B  0187               	clrf	7
 13966  0F6C  3002               	movlw	2
 13967  0F6D  3E70               	addlw	(low (differenceBetweenTimePeriod@start| 0))& (0+255)
 13968  0F6E  0084               	movwf	4
 13969  0F6F  0185               	clrf	5
 13970  0F70  3F40               	moviw [0]fsr1
 13971  0F71  0200               	subwf	0,w
 13972  0F72  0020               	movlb	0	; select bank0
 13973  0F73  00A0               	movwf	??_differenceBetweenTimePeriod
 13974  0F74  3101               	addfsr 0,1
 13975  0F75  3F41               	moviw [1]fsr1
 13976  0F76  3B00               	subwfb	0,w
 13977  0F77  00A1               	movwf	??_differenceBetweenTimePeriod+1
 13978  0F78  087C               	movf	differenceBetweenTimePeriod@diff,w
 13979  0F79  3E02               	addlw	2
 13980  0F7A  0086               	movwf	6
 13981  0F7B  0187               	clrf	7
 13982  0F7C  0820               	movf	??_differenceBetweenTimePeriod,w
 13983  0F7D  3FC0               	movwi [0]fsr1
 13984  0F7E  0821               	movf	??_differenceBetweenTimePeriod+1,w
 13985  0F7F  3FC1               	movwi [1]fsr1
 13986  0F80                     i1l3559:
 13987                           
 13988                           ;main.c: 221: diff->h = start.h - stop.h;
 13989  0F80  0876               	movf	differenceBetweenTimePeriod@stop,w
 13990  0F81  0270               	subwf	differenceBetweenTimePeriod@start,w
 13991  0F82  00A0               	movwf	??_differenceBetweenTimePeriod
 13992  0F83  0877               	movf	differenceBetweenTimePeriod@stop+1,w
 13993  0F84  3B71               	subwfb	differenceBetweenTimePeriod@start+1,w
 13994  0F85  00A1               	movwf	??_differenceBetweenTimePeriod+1
 13995  0F86  087C               	movf	differenceBetweenTimePeriod@diff,w
 13996  0F87  0086               	movwf	6
 13997  0F88  0187               	clrf	7
 13998  0F89  0820               	movf	??_differenceBetweenTimePeriod,w
 13999  0F8A  3FC0               	movwi [0]fsr1
 14000  0F8B  0821               	movf	??_differenceBetweenTimePeriod+1,w
 14001  0F8C  3FC1               	movwi [1]fsr1
 14002  0F8D                     i1l1084:
 14003  0F8D  0008               	return
 14004  0F8E                     __end_of_differenceBetweenTimePeriod:
 14005                           
 14006                           	psect	text43
 14007  0B67                     __ptext43:	
 14008 ;; *************** function _TMR2_StartTimer *****************
 14009 ;; Defined at:
 14010 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 14011 ;; Parameters:    Size  Location     Type
 14012 ;;		None
 14013 ;; Auto vars:     Size  Location     Type
 14014 ;;		None
 14015 ;; Return value:  Size  Location     Type
 14016 ;;                  1    wreg      void 
 14017 ;; Registers used:
 14018 ;;		status,2, status,0, pclath, cstack
 14019 ;; Tracked objects:
 14020 ;;		On entry : 0/0
 14021 ;;		On exit  : 0/0
 14022 ;;		Unchanged: 0/0
 14023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14028 ;;Total ram usage:        0 bytes
 14029 ;; Hardware stack levels used:    1
 14030 ;; Hardware stack levels required when called:    1
 14031 ;; This function calls:
 14032 ;;		_TMR2_Start
 14033 ;; This function is called by:
 14034 ;;		_menuLCD_ISR
 14035 ;; This function uses a non-reentrant model
 14036 ;;
 14037                           
 14038                           
 14039                           ;psect for function _TMR2_StartTimer
 14040  0B67                     _TMR2_StartTimer:
 14041  0B67                     i1l3487:	
 14042                           ;incstack = 0
 14043                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
 14044                           
 14045                           
 14046                           ;tmr2.c: 108: TMR2_Start();
 14047  0B67  318B  2358  318B   	fcall	_TMR2_Start
 14048  0B6A                     i1l761:
 14049  0B6A  0008               	return
 14050  0B6B                     __end_of_TMR2_StartTimer:
 14051                           
 14052                           	psect	text44
 14053  0B58                     __ptext44:	
 14054 ;; *************** function _TMR2_Start *****************
 14055 ;; Defined at:
 14056 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 14057 ;; Parameters:    Size  Location     Type
 14058 ;;		None
 14059 ;; Auto vars:     Size  Location     Type
 14060 ;;		None
 14061 ;; Return value:  Size  Location     Type
 14062 ;;                  1    wreg      void 
 14063 ;; Registers used:
 14064 ;;		None
 14065 ;; Tracked objects:
 14066 ;;		On entry : 0/0
 14067 ;;		On exit  : 0/0
 14068 ;;		Unchanged: 0/0
 14069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14074 ;;Total ram usage:        0 bytes
 14075 ;; Hardware stack levels used:    1
 14076 ;; This function calls:
 14077 ;;		Nothing
 14078 ;; This function is called by:
 14079 ;;		_TMR2_StartTimer
 14080 ;; This function uses a non-reentrant model
 14081 ;;
 14082                           
 14083                           
 14084                           ;psect for function _TMR2_Start
 14085  0B58                     _TMR2_Start:
 14086  0B58                     i1l3355:	
 14087                           ;incstack = 0
 14088                           ; Regs used in _TMR2_Start: []
 14089                           
 14090                           
 14091                           ;tmr2.c: 103: T2CONbits.TMR2ON = 1;
 14092  0B58  0025               	movlb	5	; select bank5
 14093  0B59  178E               	bsf	14,7	;volatile
 14094  0B5A                     i1l758:
 14095  0B5A  0008               	return
 14096  0B5B                     __end_of_TMR2_Start:
 14097                           
 14098                           	psect	text45
 14099  0B55                     __ptext45:	
 14100 ;; *************** function _PWM_Output_D4_Enable *****************
 14101 ;; Defined at:
 14102 ;;		line 224 in file "main.c"
 14103 ;; Parameters:    Size  Location     Type
 14104 ;;		None
 14105 ;; Auto vars:     Size  Location     Type
 14106 ;;		None
 14107 ;; Return value:  Size  Location     Type
 14108 ;;                  1    wreg      void 
 14109 ;; Registers used:
 14110 ;;		None
 14111 ;; Tracked objects:
 14112 ;;		On entry : 0/0
 14113 ;;		On exit  : 0/0
 14114 ;;		Unchanged: 0/0
 14115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14120 ;;Total ram usage:        0 bytes
 14121 ;; Hardware stack levels used:    1
 14122 ;; This function calls:
 14123 ;;		Nothing
 14124 ;; This function is called by:
 14125 ;;		_menuLCD_ISR
 14126 ;; This function uses a non-reentrant model
 14127 ;;
 14128                           
 14129                           
 14130                           ;psect for function _PWM_Output_D4_Enable
 14131  0B55                     _PWM_Output_D4_Enable:
 14132  0B55                     i1l3561:	
 14133                           ;incstack = 0
 14134                           ; Regs used in _PWM_Output_D4_Enable: []
 14135                           
 14136                           
 14137                           ;main.c: 225: PWM6EN = 1;
 14138  0B55  0027               	movlb	7	; select bank7
 14139  0B56  178E               	bsf	14,7	;volatile
 14140  0B57                     i1l1087:
 14141  0B57  0008               	return
 14142  0B58                     __end_of_PWM_Output_D4_Enable:
 14143                           
 14144                           	psect	text46
 14145  0C58                     __ptext46:	
 14146 ;; *************** function _PWM6_LoadDutyValue *****************
 14147 ;; Defined at:
 14148 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 14149 ;; Parameters:    Size  Location     Type
 14150 ;;  dutyValue       2    0[COMMON] unsigned int 
 14151 ;; Auto vars:     Size  Location     Type
 14152 ;;		None
 14153 ;; Return value:  Size  Location     Type
 14154 ;;                  1    wreg      void 
 14155 ;; Registers used:
 14156 ;;		wreg, status,2, status,0
 14157 ;; Tracked objects:
 14158 ;;		On entry : 0/0
 14159 ;;		On exit  : 0/0
 14160 ;;		Unchanged: 0/0
 14161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14162 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14165 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14166 ;;Total ram usage:        4 bytes
 14167 ;; Hardware stack levels used:    1
 14168 ;; This function calls:
 14169 ;;		Nothing
 14170 ;; This function is called by:
 14171 ;;		_menuLCD_ISR
 14172 ;; This function uses a non-reentrant model
 14173 ;;
 14174                           
 14175                           
 14176                           ;psect for function _PWM6_LoadDutyValue
 14177  0C58                     _PWM6_LoadDutyValue:
 14178  0C58                     i1l3485:	
 14179                           ;incstack = 0
 14180                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 14181                           
 14182                           
 14183                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 14184  0C58  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 14185  0C59  00F3               	movwf	??_PWM6_LoadDutyValue+1
 14186  0C5A  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 14187  0C5B  00F2               	movwf	??_PWM6_LoadDutyValue
 14188  0C5C  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 14189  0C5D  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 14190  0C5E  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 14191  0C5F  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 14192  0C60  0872               	movf	??_PWM6_LoadDutyValue,w
 14193  0C61  0027               	movlb	7	; select bank7
 14194  0C62  008D               	movwf	13	;volatile
 14195                           
 14196                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 14197  0C63  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 14198  0C64  3903               	andlw	3
 14199  0C65  00F2               	movwf	??_PWM6_LoadDutyValue
 14200  0C66  3005               	movlw	5
 14201  0C67                     u265_25:
 14202  0C67  35F2               	lslf	??_PWM6_LoadDutyValue,f
 14203  0C68  3EFF               	addlw	-1
 14204  0C69  1D03               	skipz
 14205  0C6A  2C67               	goto	u265_25
 14206  0C6B  3572               	lslf	??_PWM6_LoadDutyValue,w
 14207  0C6C  008C               	movwf	12	;volatile
 14208  0C6D                     i1l722:
 14209  0C6D  0008               	return
 14210  0C6E                     __end_of_PWM6_LoadDutyValue:
 14211                           
 14212                           	psect	text47
 14213  0C44                     __ptext47:	
 14214 ;; *************** function _LCDstr *****************
 14215 ;; Defined at:
 14216 ;;		line 188 in file "main.c"
 14217 ;; Parameters:    Size  Location     Type
 14218 ;;  p               1    wreg     PTR unsigned char 
 14219 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 14220 ;; Auto vars:     Size  Location     Type
 14221 ;;  p               1   11[COMMON] PTR unsigned char 
 14222 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 14223 ;;  c               1   10[COMMON] unsigned char 
 14224 ;; Return value:  Size  Location     Type
 14225 ;;                  1    wreg      void 
 14226 ;; Registers used:
 14227 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14228 ;; Tracked objects:
 14229 ;;		On entry : 0/0
 14230 ;;		On exit  : 0/0
 14231 ;;		Unchanged: 0/0
 14232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14234 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14235 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14236 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14237 ;;Total ram usage:        3 bytes
 14238 ;; Hardware stack levels used:    1
 14239 ;; Hardware stack levels required when called:    3
 14240 ;; This function calls:
 14241 ;;		_LCDchar
 14242 ;; This function is called by:
 14243 ;;		_menuLCD_ISR
 14244 ;; This function uses a non-reentrant model
 14245 ;;
 14246                           
 14247                           
 14248                           ;psect for function _LCDstr
 14249  0C44                     _LCDstr:
 14250                           
 14251                           ;incstack = 0
 14252                           ; Regs used in _LCDstr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14253                           ;LCDstr@p stored from wreg
 14254  0C44  00FB               	movwf	LCDstr@p
 14255  0C45                     i1l3543:
 14256                           
 14257                           ;main.c: 190: unsigned char c;;main.c: 192: while((c = *p++)) LCDchar(c);
 14258  0C45  2C4A               	goto	i1l3547
 14259  0C46                     i1l3545:
 14260  0C46  087A               	movf	LCDstr@c,w
 14261  0C47  318B  2398  318C   	fcall	_LCDchar
 14262  0C4A                     i1l3547:
 14263  0C4A  087B               	movf	LCDstr@p,w
 14264  0C4B  0086               	movwf	6
 14265  0C4C  0187               	clrf	7
 14266  0C4D  0AFB               	incf	LCDstr@p,f
 14267  0C4E  0801               	movf	1,w
 14268  0C4F  00F9               	movwf	??_LCDstr
 14269  0C50  0879               	movf	??_LCDstr,w
 14270  0C51  00FA               	movwf	LCDstr@c
 14271  0C52  087A               	movf	LCDstr@c,w
 14272  0C53  1D03               	btfss	3,2
 14273  0C54  2C56               	goto	u291_21
 14274  0C55  2C57               	goto	u291_20
 14275  0C56                     u291_21:
 14276  0C56  2C46               	goto	i1l3545
 14277  0C57                     u291_20:
 14278  0C57                     i1l1071:
 14279  0C57  0008               	return
 14280  0C58                     __end_of_LCDstr:
 14281                           
 14282                           	psect	text48
 14283  0B98                     __ptext48:	
 14284 ;; *************** function _LCDchar *****************
 14285 ;; Defined at:
 14286 ;;		line 183 in file "main.c"
 14287 ;; Parameters:    Size  Location     Type
 14288 ;;  c               1    wreg     unsigned char 
 14289 ;; Auto vars:     Size  Location     Type
 14290 ;;  c               1    8[COMMON] unsigned char 
 14291 ;; Return value:  Size  Location     Type
 14292 ;;                  1    wreg      void 
 14293 ;; Registers used:
 14294 ;;		wreg, status,2, status,0, pclath, cstack
 14295 ;; Tracked objects:
 14296 ;;		On entry : 0/0
 14297 ;;		On exit  : 0/0
 14298 ;;		Unchanged: 0/0
 14299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14301 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14303 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14304 ;;Total ram usage:        1 bytes
 14305 ;; Hardware stack levels used:    1
 14306 ;; Hardware stack levels required when called:    2
 14307 ;; This function calls:
 14308 ;;		i1_LCDsend2x4
 14309 ;; This function is called by:
 14310 ;;		_LCDstr
 14311 ;;		_menuLCD_ISR
 14312 ;; This function uses a non-reentrant model
 14313 ;;
 14314                           
 14315                           
 14316                           ;psect for function _LCDchar
 14317  0B98                     _LCDchar:
 14318                           
 14319                           ;incstack = 0
 14320                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 14321                           ;LCDchar@c stored from wreg
 14322  0B98  00F8               	movwf	LCDchar@c
 14323  0B99                     i1l3357:
 14324                           
 14325                           ;main.c: 185: LCDsend2x4(c, 0x01);
 14326  0B99  01F2               	clrf	i1LCDsend2x4@mode
 14327  0B9A  0AF2               	incf	i1LCDsend2x4@mode,f
 14328  0B9B  0878               	movf	LCDchar@c,w
 14329  0B9C  3185  258C  318B   	fcall	i1_LCDsend2x4
 14330  0B9F                     i1l1065:
 14331  0B9F  0008               	return
 14332  0BA0                     __end_of_LCDchar:
 14333                           
 14334                           	psect	text49
 14335  0B91                     __ptext49:	
 14336 ;; *************** function _LCDcmd *****************
 14337 ;; Defined at:
 14338 ;;		line 178 in file "main.c"
 14339 ;; Parameters:    Size  Location     Type
 14340 ;;  c               1    wreg     unsigned char 
 14341 ;; Auto vars:     Size  Location     Type
 14342 ;;  c               1    8[COMMON] unsigned char 
 14343 ;; Return value:  Size  Location     Type
 14344 ;;                  1    wreg      void 
 14345 ;; Registers used:
 14346 ;;		wreg, status,2, status,0, pclath, cstack
 14347 ;; Tracked objects:
 14348 ;;		On entry : 0/0
 14349 ;;		On exit  : 0/0
 14350 ;;		Unchanged: 0/0
 14351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14353 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14355 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14356 ;;Total ram usage:        1 bytes
 14357 ;; Hardware stack levels used:    1
 14358 ;; Hardware stack levels required when called:    2
 14359 ;; This function calls:
 14360 ;;		i1_LCDsend2x4
 14361 ;; This function is called by:
 14362 ;;		_menuLCD_ISR
 14363 ;; This function uses a non-reentrant model
 14364 ;;
 14365                           
 14366                           
 14367                           ;psect for function _LCDcmd
 14368  0B91                     _LCDcmd:
 14369                           
 14370                           ;incstack = 0
 14371                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 14372                           ;LCDcmd@c stored from wreg
 14373  0B91  00F8               	movwf	LCDcmd@c
 14374  0B92                     i1l3541:
 14375                           
 14376                           ;main.c: 180: LCDsend2x4(c, 0);
 14377  0B92  01F2               	clrf	i1LCDsend2x4@mode
 14378  0B93  0878               	movf	LCDcmd@c,w
 14379  0B94  3185  258C  318B   	fcall	i1_LCDsend2x4
 14380  0B97                     i1l1062:
 14381  0B97  0008               	return
 14382  0B98                     __end_of_LCDcmd:
 14383                           
 14384                           	psect	text50
 14385  058C                     __ptext50:	
 14386 ;; *************** function i1_LCDsend2x4 *****************
 14387 ;; Defined at:
 14388 ;;		line 132 in file "main.c"
 14389 ;; Parameters:    Size  Location     Type
 14390 ;;  c               1    wreg     unsigned char 
 14391 ;;  mode            1    2[COMMON] unsigned char 
 14392 ;; Auto vars:     Size  Location     Type
 14393 ;;  c               1    5[COMMON] unsigned char 
 14394 ;;  lc              1    7[COMMON] unsigned char 
 14395 ;;  hc              1    6[COMMON] unsigned char 
 14396 ;; Return value:  Size  Location     Type
 14397 ;;                  1    wreg      void 
 14398 ;; Registers used:
 14399 ;;		wreg, status,2, status,0, pclath, cstack
 14400 ;; Tracked objects:
 14401 ;;		On entry : 0/0
 14402 ;;		On exit  : 0/0
 14403 ;;		Unchanged: 0/0
 14404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14405 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14406 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14407 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14408 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14409 ;;Total ram usage:        6 bytes
 14410 ;; Hardware stack levels used:    1
 14411 ;; Hardware stack levels required when called:    1
 14412 ;; This function calls:
 14413 ;;		i1_WriteI2C
 14414 ;; This function is called by:
 14415 ;;		_LCDcmd
 14416 ;;		_LCDchar
 14417 ;; This function uses a non-reentrant model
 14418 ;;
 14419                           
 14420                           
 14421                           ;psect for function i1_LCDsend2x4
 14422  058C                     i1_LCDsend2x4:
 14423                           
 14424                           ;incstack = 0
 14425                           ; Regs used in i1_LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 14426                           ;i1LCDsend2x4@c stored from wreg
 14427  058C  00F5               	movwf	i1LCDsend2x4@c
 14428  058D                     i1l3309:
 14429                           
 14430                           ;main.c: 134: unsigned char hc;;main.c: 135: unsigned char lc;;main.c: 137: hc = c & 0xf
      +                          0;
 14431  058D  0875               	movf	i1LCDsend2x4@c,w
 14432  058E  39F0               	andlw	240
 14433  058F  00F3               	movwf	??i1_LCDsend2x4
 14434  0590  0873               	movf	??i1_LCDsend2x4,w
 14435  0591  00F6               	movwf	i1LCDsend2x4@hc
 14436  0592                     i1l3311:
 14437                           
 14438                           ;main.c: 138: lc = (c << 4) & 0xf0;
 14439  0592  0875               	movf	i1LCDsend2x4@c,w
 14440  0593  00F3               	movwf	??i1_LCDsend2x4
 14441  0594  3003               	movlw	3
 14442  0595                     u221_25:
 14443  0595  35F3               	lslf	??i1_LCDsend2x4,f
 14444  0596  3EFF               	addlw	-1
 14445  0597  1D03               	skipz
 14446  0598  2D95               	goto	u221_25
 14447  0599  3573               	lslf	??i1_LCDsend2x4,w
 14448  059A  39F0               	andlw	240
 14449  059B  00F4               	movwf	??i1_LCDsend2x4+1
 14450  059C  0874               	movf	??i1_LCDsend2x4+1,w
 14451  059D  00F7               	movwf	i1LCDsend2x4@lc
 14452  059E                     i1l3313:	
 14453                           ;main.c: 140: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14454                           
 14455  059E  0023               	movlb	3	; select bank3
 14456  059F  0C0F               	rrf	15,w	;volatile
 14457  05A0  0C89               	rrf	9,f
 14458  05A1  3901               	andlw	1
 14459  05A2  00F3               	movwf	??i1_LCDsend2x4
 14460  05A3  0811               	movf	17,w	;volatile
 14461  05A4  391F               	andlw	31
 14462  05A5  0473               	iorwf	??i1_LCDsend2x4,w
 14463  05A6  1D03               	btfss	3,2
 14464  05A7  2DA9               	goto	u222_21
 14465  05A8  2DAA               	goto	u222_20
 14466  05A9                     u222_21:
 14467  05A9  2D9E               	goto	i1l3313
 14468  05AA                     u222_20:
 14469  05AA                     i1l1025:
 14470                           
 14471                           ;main.c: 141: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 14472  05AA  1411               	bsf	17,0	;volatile
 14473  05AB                     i1l1026:
 14474  05AB  1811               	btfsc	17,0	;volatile
 14475  05AC  2DAE               	goto	u223_21
 14476  05AD  2DAF               	goto	u223_20
 14477  05AE                     u223_21:
 14478  05AE  2DAB               	goto	i1l1026
 14479  05AF                     u223_20:
 14480  05AF                     i1l3315:
 14481  05AF  0C0F               	rrf	15,w	;volatile
 14482  05B0  0C89               	rrf	9,f
 14483  05B1  3901               	andlw	1
 14484  05B2  00F3               	movwf	??i1_LCDsend2x4
 14485  05B3  0811               	movf	17,w	;volatile
 14486  05B4  391F               	andlw	31
 14487  05B5  0473               	iorwf	??i1_LCDsend2x4,w
 14488  05B6  1D03               	btfss	3,2
 14489  05B7  2DB9               	goto	u224_21
 14490  05B8  2DBA               	goto	u224_20
 14491  05B9                     u224_21:
 14492  05B9  2DAF               	goto	i1l3315
 14493  05BA                     u224_20:
 14494  05BA                     i1l3317:
 14495                           
 14496                           ;main.c: 142: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14497  05BA  304E               	movlw	78
 14498  05BB  318E  2628  3185   	fcall	i1_WriteI2C
 14499  05BE                     i1l3319:
 14500  05BE  0023               	movlb	3	; select bank3
 14501  05BF  0C0F               	rrf	15,w	;volatile
 14502  05C0  0C89               	rrf	9,f
 14503  05C1  3901               	andlw	1
 14504  05C2  00F3               	movwf	??i1_LCDsend2x4
 14505  05C3  0811               	movf	17,w	;volatile
 14506  05C4  391F               	andlw	31
 14507  05C5  0473               	iorwf	??i1_LCDsend2x4,w
 14508  05C6  1D03               	btfss	3,2
 14509  05C7  2DC9               	goto	u225_21
 14510  05C8  2DCA               	goto	u225_20
 14511  05C9                     u225_21:
 14512  05C9  2DBE               	goto	i1l3319
 14513  05CA                     u225_20:
 14514  05CA                     i1l3321:
 14515                           
 14516                           ;main.c: 143: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14517  05CA  0876               	movf	i1LCDsend2x4@hc,w
 14518  05CB  0472               	iorwf	i1LCDsend2x4@mode,w
 14519  05CC  3808               	iorlw	8
 14520  05CD  318E  2628  3185   	fcall	i1_WriteI2C
 14521  05D0                     i1l3323:
 14522  05D0  0023               	movlb	3	; select bank3
 14523  05D1  0C0F               	rrf	15,w	;volatile
 14524  05D2  0C89               	rrf	9,f
 14525  05D3  3901               	andlw	1
 14526  05D4  00F3               	movwf	??i1_LCDsend2x4
 14527  05D5  0811               	movf	17,w	;volatile
 14528  05D6  391F               	andlw	31
 14529  05D7  0473               	iorwf	??i1_LCDsend2x4,w
 14530  05D8  1D03               	btfss	3,2
 14531  05D9  2DDB               	goto	u226_21
 14532  05DA  2DDC               	goto	u226_20
 14533  05DB                     u226_21:
 14534  05DB  2DD0               	goto	i1l3323
 14535  05DC                     u226_20:
 14536  05DC                     i1l3325:
 14537                           
 14538                           ;main.c: 144: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 14539  05DC  0876               	movf	i1LCDsend2x4@hc,w
 14540  05DD  0472               	iorwf	i1LCDsend2x4@mode,w
 14541  05DE  380C               	iorlw	12
 14542  05DF  318E  2628  3185   	fcall	i1_WriteI2C
 14543  05E2                     i1l3327:
 14544  05E2  0023               	movlb	3	; select bank3
 14545  05E3  0C0F               	rrf	15,w	;volatile
 14546  05E4  0C89               	rrf	9,f
 14547  05E5  3901               	andlw	1
 14548  05E6  00F3               	movwf	??i1_LCDsend2x4
 14549  05E7  0811               	movf	17,w	;volatile
 14550  05E8  391F               	andlw	31
 14551  05E9  0473               	iorwf	??i1_LCDsend2x4,w
 14552  05EA  1D03               	btfss	3,2
 14553  05EB  2DED               	goto	u227_21
 14554  05EC  2DEE               	goto	u227_20
 14555  05ED                     u227_21:
 14556  05ED  2DE2               	goto	i1l3327
 14557  05EE                     u227_20:
 14558  05EE                     i1l1040:
 14559  05EE                     i1l3329:	
 14560                           ;main.c: 145: _delay((unsigned long)((1)*(1000000/4000000.0)));
 14561                           
 14562                           
 14563                           ;main.c: 146: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14564  05EE  0876               	movf	i1LCDsend2x4@hc,w
 14565  05EF  0472               	iorwf	i1LCDsend2x4@mode,w
 14566  05F0  3808               	iorlw	8
 14567  05F1  318E  2628  3185   	fcall	i1_WriteI2C
 14568  05F4                     i1l3331:
 14569  05F4  0023               	movlb	3	; select bank3
 14570  05F5  0C0F               	rrf	15,w	;volatile
 14571  05F6  0C89               	rrf	9,f
 14572  05F7  3901               	andlw	1
 14573  05F8  00F3               	movwf	??i1_LCDsend2x4
 14574  05F9  0811               	movf	17,w	;volatile
 14575  05FA  391F               	andlw	31
 14576  05FB  0473               	iorwf	??i1_LCDsend2x4,w
 14577  05FC  1D03               	btfss	3,2
 14578  05FD  2DFF               	goto	u228_21
 14579  05FE  2E00               	goto	u228_20
 14580  05FF                     u228_21:
 14581  05FF  2DF4               	goto	i1l3331
 14582  0600                     u228_20:
 14583  0600                     i1l3333:
 14584                           
 14585                           ;main.c: 147: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14586  0600  0877               	movf	i1LCDsend2x4@lc,w
 14587  0601  0472               	iorwf	i1LCDsend2x4@mode,w
 14588  0602  3808               	iorlw	8
 14589  0603  318E  2628  3185   	fcall	i1_WriteI2C
 14590  0606                     i1l3335:
 14591  0606  0023               	movlb	3	; select bank3
 14592  0607  0C0F               	rrf	15,w	;volatile
 14593  0608  0C89               	rrf	9,f
 14594  0609  3901               	andlw	1
 14595  060A  00F3               	movwf	??i1_LCDsend2x4
 14596  060B  0811               	movf	17,w	;volatile
 14597  060C  391F               	andlw	31
 14598  060D  0473               	iorwf	??i1_LCDsend2x4,w
 14599  060E  1D03               	btfss	3,2
 14600  060F  2E11               	goto	u229_21
 14601  0610  2E12               	goto	u229_20
 14602  0611                     u229_21:
 14603  0611  2E06               	goto	i1l3335
 14604  0612                     u229_20:
 14605  0612                     i1l3337:
 14606                           
 14607                           ;main.c: 148: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 14608  0612  0877               	movf	i1LCDsend2x4@lc,w
 14609  0613  0472               	iorwf	i1LCDsend2x4@mode,w
 14610  0614  380C               	iorlw	12
 14611  0615  318E  2628  3185   	fcall	i1_WriteI2C
 14612  0618                     i1l3339:
 14613  0618  0023               	movlb	3	; select bank3
 14614  0619  0C0F               	rrf	15,w	;volatile
 14615  061A  0C89               	rrf	9,f
 14616  061B  3901               	andlw	1
 14617  061C  00F3               	movwf	??i1_LCDsend2x4
 14618  061D  0811               	movf	17,w	;volatile
 14619  061E  391F               	andlw	31
 14620  061F  0473               	iorwf	??i1_LCDsend2x4,w
 14621  0620  1D03               	btfss	3,2
 14622  0621  2E23               	goto	u230_21
 14623  0622  2E24               	goto	u230_20
 14624  0623                     u230_21:
 14625  0623  2E18               	goto	i1l3339
 14626  0624                     u230_20:
 14627  0624                     i1l1049:
 14628  0624                     i1l3341:	
 14629                           ;main.c: 149: _delay((unsigned long)((1)*(1000000/4000000.0)));
 14630                           
 14631                           
 14632                           ;main.c: 150: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14633  0624  0877               	movf	i1LCDsend2x4@lc,w
 14634  0625  0472               	iorwf	i1LCDsend2x4@mode,w
 14635  0626  3808               	iorlw	8
 14636  0627  318E  2628  3185   	fcall	i1_WriteI2C
 14637  062A                     i1l3343:
 14638  062A  0023               	movlb	3	; select bank3
 14639  062B  0C0F               	rrf	15,w	;volatile
 14640  062C  0C89               	rrf	9,f
 14641  062D  3901               	andlw	1
 14642  062E  00F3               	movwf	??i1_LCDsend2x4
 14643  062F  0811               	movf	17,w	;volatile
 14644  0630  391F               	andlw	31
 14645  0631  0473               	iorwf	??i1_LCDsend2x4,w
 14646  0632  1D03               	btfss	3,2
 14647  0633  2E35               	goto	u231_21
 14648  0634  2E36               	goto	u231_20
 14649  0635                     u231_21:
 14650  0635  2E2A               	goto	i1l3343
 14651  0636                     u231_20:
 14652  0636                     i1l1052:
 14653                           
 14654                           ;main.c: 151: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 14655  0636  1511               	bsf	17,2	;volatile
 14656  0637                     i1l1053:
 14657  0637  1911               	btfsc	17,2	;volatile
 14658  0638  2E3A               	goto	u232_21
 14659  0639  2E3B               	goto	u232_20
 14660  063A                     u232_21:
 14661  063A  2E37               	goto	i1l1053
 14662  063B                     u232_20:
 14663  063B                     i1l3345:
 14664                           
 14665                           ;main.c: 152: _delay((unsigned long)((50)*(1000000/4000000.0)));
 14666  063B  3004               	movlw	4
 14667  063C                     u433_27:
 14668  063C  0B89               	decfsz	9,f
 14669  063D  2E3C               	goto	u433_27
 14670  063E                     i1l1056:
 14671  063E  0008               	return
 14672  063F                     __end_ofi1_LCDsend2x4:
 14673                           
 14674                           	psect	text51
 14675  0E28                     __ptext51:	
 14676 ;; *************** function i1_WriteI2C *****************
 14677 ;; Defined at:
 14678 ;;		line 47 in file "I2C/i2c.c"
 14679 ;; Parameters:    Size  Location     Type
 14680 ;;  data_out        1    wreg     unsigned char 
 14681 ;; Auto vars:     Size  Location     Type
 14682 ;;  data_out        1    1[COMMON] unsigned char 
 14683 ;; Return value:  Size  Location     Type
 14684 ;;                  1    wreg      char 
 14685 ;; Registers used:
 14686 ;;		wreg, status,2, status,0
 14687 ;; Tracked objects:
 14688 ;;		On entry : 0/0
 14689 ;;		On exit  : 0/0
 14690 ;;		Unchanged: 0/0
 14691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14694 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14695 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14696 ;;Total ram usage:        2 bytes
 14697 ;; Hardware stack levels used:    1
 14698 ;; This function calls:
 14699 ;;		Nothing
 14700 ;; This function is called by:
 14701 ;;		_tsttc
 14702 ;;		i1_LCDsend2x4
 14703 ;; This function uses a non-reentrant model
 14704 ;;
 14705                           
 14706                           
 14707                           ;psect for function i1_WriteI2C
 14708  0E28                     i1_WriteI2C:
 14709                           
 14710                           ;incstack = 0
 14711                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 14712                           ;i1WriteI2C@data_out stored from wreg
 14713  0E28  00F1               	movwf	i1WriteI2C@data_out
 14714  0E29                     i1l3279:
 14715                           
 14716                           ;i2c.c: 49: SSP1BUF = data_out;
 14717  0E29  0871               	movf	i1WriteI2C@data_out,w
 14718  0E2A  0023               	movlb	3	; select bank3
 14719  0E2B  008C               	movwf	12	;volatile
 14720  0E2C                     i1l3281:
 14721                           
 14722                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 14723  0E2C  1F90               	btfss	16,7	;volatile
 14724  0E2D  2E2F               	goto	u212_21
 14725  0E2E  2E30               	goto	u212_20
 14726  0E2F                     u212_21:
 14727  0E2F  2E31               	goto	i1l3287
 14728  0E30                     u212_20:
 14729  0E30  2E72               	goto	i1l30
 14730  0E31                     i1l3287:
 14731                           
 14732                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 14733  0E31  300F               	movlw	15
 14734  0E32  0510               	andwf	16,w	;volatile
 14735  0E33  00F0               	movwf	??i1_WriteI2C
 14736  0E34  3008               	movlw	8
 14737  0E35  0670               	xorwf	??i1_WriteI2C,w
 14738  0E36  1903               	btfsc	3,2
 14739  0E37  2E39               	goto	u213_21
 14740  0E38  2E3A               	goto	u213_20
 14741  0E39                     u213_21:
 14742  0E39  2E50               	goto	i1l3299
 14743  0E3A                     u213_20:
 14744  0E3A                     i1l3289:
 14745  0E3A  300F               	movlw	15
 14746  0E3B  0510               	andwf	16,w	;volatile
 14747  0E3C  00F0               	movwf	??i1_WriteI2C
 14748  0E3D  300B               	movlw	11
 14749  0E3E  0670               	xorwf	??i1_WriteI2C,w
 14750  0E3F  1903               	btfsc	3,2
 14751  0E40  2E42               	goto	u214_21
 14752  0E41  2E43               	goto	u214_20
 14753  0E42                     u214_21:
 14754  0E42  2E50               	goto	i1l3299
 14755  0E43                     u214_20:
 14756  0E43                     i1l3291:
 14757                           
 14758                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 14759  0E43  1610               	bsf	16,4	;volatile
 14760  0E44                     i1l33:	
 14761                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 14762                           
 14763  0E44  002E               	movlb	14	; select bank14
 14764  0E45  1C0F               	btfss	15,0	;volatile
 14765  0E46  2E48               	goto	u215_21
 14766  0E47  2E49               	goto	u215_20
 14767  0E48                     u215_21:
 14768  0E48  2E44               	goto	i1l33
 14769  0E49                     u215_20:
 14770  0E49                     i1l35:
 14771                           
 14772                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 14773  0E49  0023               	movlb	3	; select bank3
 14774  0E4A  190F               	btfsc	15,2	;volatile
 14775  0E4B  2E4D               	goto	u216_21
 14776  0E4C  2E4E               	goto	u216_20
 14777  0E4D                     u216_21:
 14778  0E4D  2E72               	goto	i1l30
 14779  0E4E                     u216_20:
 14780  0E4E                     i1l3293:
 14781  0E4E  080F               	movf	15,w	;volatile
 14782  0E4F  2E72               	goto	i1l30
 14783  0E50                     i1l3299:
 14784                           
 14785                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 14786  0E50  300F               	movlw	15
 14787  0E51  0510               	andwf	16,w	;volatile
 14788  0E52  00F0               	movwf	??i1_WriteI2C
 14789  0E53  3008               	movlw	8
 14790  0E54  0670               	xorwf	??i1_WriteI2C,w
 14791  0E55  1903               	btfsc	3,2
 14792  0E56  2E58               	goto	u217_21
 14793  0E57  2E59               	goto	u217_20
 14794  0E58                     u217_21:
 14795  0E58  2E62               	goto	i1l42
 14796  0E59                     u217_20:
 14797  0E59                     i1l3301:
 14798  0E59  300F               	movlw	15
 14799  0E5A  0510               	andwf	16,w	;volatile
 14800  0E5B  00F0               	movwf	??i1_WriteI2C
 14801  0E5C  300B               	movlw	11
 14802  0E5D  0670               	xorwf	??i1_WriteI2C,w
 14803  0E5E  1D03               	btfss	3,2
 14804  0E5F  2E61               	goto	u218_21
 14805  0E60  2E62               	goto	u218_20
 14806  0E61                     u218_21:
 14807  0E61  2E72               	goto	i1l30
 14808  0E62                     u218_20:
 14809  0E62                     i1l42:
 14810  0E62  180F               	btfsc	15,0	;volatile
 14811  0E63  2E65               	goto	u219_21
 14812  0E64  2E66               	goto	u219_20
 14813  0E65                     u219_21:
 14814  0E65  2E62               	goto	i1l42
 14815  0E66                     u219_20:
 14816  0E66                     i1l3303:
 14817  0E66  0C0F               	rrf	15,w	;volatile
 14818  0E67  0C89               	rrf	9,f
 14819  0E68  3901               	andlw	1
 14820  0E69  00F0               	movwf	??i1_WriteI2C
 14821  0E6A  0811               	movf	17,w	;volatile
 14822  0E6B  391F               	andlw	31
 14823  0E6C  0470               	iorwf	??i1_WriteI2C,w
 14824  0E6D  1D03               	btfss	3,2
 14825  0E6E  2E70               	goto	u220_21
 14826  0E6F  2E71               	goto	u220_20
 14827  0E70                     u220_21:
 14828  0E70  2E66               	goto	i1l3303
 14829  0E71                     u220_20:
 14830  0E71                     i1l47:
 14831                           
 14832                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 14833  0E71  0811               	movf	17,w	;volatile
 14834  0E72                     i1l30:
 14835  0E72  0008               	return
 14836  0E73                     __end_ofi1_WriteI2C:
 14837                           
 14838                           	psect	text52
 14839  0BFE                     __ptext52:	
 14840 ;; *************** function _TMR3_WriteTimer *****************
 14841 ;; Defined at:
 14842 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 14843 ;; Parameters:    Size  Location     Type
 14844 ;;  timerVal        2    0[COMMON] unsigned int 
 14845 ;; Auto vars:     Size  Location     Type
 14846 ;;		None
 14847 ;; Return value:  Size  Location     Type
 14848 ;;                  1    wreg      void 
 14849 ;; Registers used:
 14850 ;;		wreg, status,2
 14851 ;; Tracked objects:
 14852 ;;		On entry : 0/0
 14853 ;;		On exit  : 0/0
 14854 ;;		Unchanged: 0/0
 14855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14856 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14859 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14860 ;;Total ram usage:        2 bytes
 14861 ;; Hardware stack levels used:    1
 14862 ;; This function calls:
 14863 ;;		Nothing
 14864 ;; This function is called by:
 14865 ;;		_TMR3_ISR
 14866 ;;		_TMR3_Reload
 14867 ;; This function uses a non-reentrant model
 14868 ;;
 14869                           
 14870                           
 14871                           ;psect for function _TMR3_WriteTimer
 14872  0BFE                     _TMR3_WriteTimer:
 14873  0BFE                     i1l3819:	
 14874                           ;incstack = 0
 14875                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 14876                           
 14877                           
 14878                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 14879  0BFE  0024               	movlb	4	; select bank4
 14880  0BFF  1D14               	btfss	20,2	;volatile
 14881  0C00  2C02               	goto	u313_21
 14882  0C01  2C03               	goto	u313_20
 14883  0C02                     u313_21:
 14884  0C02  2C0A               	goto	i1l3829
 14885  0C03                     u313_20:
 14886  0C03                     i1l3821:
 14887                           
 14888                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 14889  0C03  1014               	bcf	20,0	;volatile
 14890  0C04                     i1l3823:
 14891                           
 14892                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 14893  0C04  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 14894  0C05  0093               	movwf	19	;volatile
 14895  0C06                     i1l3825:
 14896                           
 14897                           ;tmr3.c: 136: TMR3L = timerVal;
 14898  0C06  0870               	movf	TMR3_WriteTimer@timerVal,w
 14899  0C07  0092               	movwf	18	;volatile
 14900  0C08                     i1l3827:
 14901                           
 14902                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 14903  0C08  1414               	bsf	20,0	;volatile
 14904                           
 14905                           ;tmr3.c: 140: }
 14906  0C09  2C0E               	goto	i1l465
 14907  0C0A                     i1l3829:
 14908                           
 14909                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 14910  0C0A  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 14911  0C0B  0093               	movwf	19	;volatile
 14912  0C0C                     i1l3831:
 14913                           
 14914                           ;tmr3.c: 145: TMR3L = timerVal;
 14915  0C0C  0870               	movf	TMR3_WriteTimer@timerVal,w
 14916  0C0D  0092               	movwf	18	;volatile
 14917  0C0E                     i1l465:
 14918  0C0E  0008               	return
 14919  0C0F                     __end_of_TMR3_WriteTimer:
 14920                           
 14921                           	psect	text53
 14922  0C6E                     __ptext53:	
 14923 ;; *************** function _TMR1_ISR *****************
 14924 ;; Defined at:
 14925 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 14926 ;; Parameters:    Size  Location     Type
 14927 ;;		None
 14928 ;; Auto vars:     Size  Location     Type
 14929 ;;		None
 14930 ;; Return value:  Size  Location     Type
 14931 ;;                  1    wreg      void 
 14932 ;; Registers used:
 14933 ;;		wreg, status,2, status,0, pclath, cstack
 14934 ;; Tracked objects:
 14935 ;;		On entry : 0/0
 14936 ;;		On exit  : 0/0
 14937 ;;		Unchanged: 0/0
 14938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14943 ;;Total ram usage:        0 bytes
 14944 ;; Hardware stack levels used:    1
 14945 ;; Hardware stack levels required when called:    1
 14946 ;; This function calls:
 14947 ;;		Absolute function
 14948 ;;		_Clock_ISR
 14949 ;;		_TMR1_DefaultInterruptHandler
 14950 ;;		_TMR1_WriteTimer
 14951 ;; This function is called by:
 14952 ;;		_INTERRUPT_InterruptManager
 14953 ;; This function uses a non-reentrant model
 14954 ;;
 14955                           
 14956                           
 14957                           ;psect for function _TMR1_ISR
 14958  0C6E                     _TMR1_ISR:
 14959  0C6E                     i1l4085:	
 14960                           ;incstack = 0
 14961                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 14962                           
 14963                           
 14964                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 14965  0C6E  002E               	movlb	14	; select bank14
 14966  0C6F  1010               	bcf	16,0	;volatile
 14967  0C70                     i1l4087:
 14968                           
 14969                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 14970  0C70  0021               	movlb	1	; select bank1
 14971  0C71  0831               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 14972  0C72  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 14973  0C73  0830               	movf	_timer1ReloadVal^(0+128),w	;volatile
 14974  0C74  00F0               	movwf	TMR1_WriteTimer@timerVal
 14975  0C75  318B  23ED  318C   	fcall	_TMR1_WriteTimer
 14976  0C78                     i1l4089:
 14977                           
 14978                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 14979  0C78  0021               	movlb	1	; select bank1
 14980  0C79  082E               	movf	_TMR1_InterruptHandler^(0+128),w
 14981  0C7A  042F               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 14982  0C7B  1903               	btfsc	3,2
 14983  0C7C  2C7E               	goto	u365_21
 14984  0C7D  2C7F               	goto	u365_20
 14985  0C7E                     u365_21:
 14986  0C7E  2C84               	goto	i1l414
 14987  0C7F                     u365_20:
 14988  0C7F                     i1l4091:
 14989                           
 14990                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 14991  0C7F  082F               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 14992  0C80  008A               	movwf	10
 14993  0C81  082E               	movf	_TMR1_InterruptHandler^(0+128),w
 14994  0C82  000A               	callw
 14995  0C83  318C               	pagesel	$
 14996  0C84                     i1l414:
 14997  0C84  0008               	return
 14998  0C85                     __end_of_TMR1_ISR:
 14999                           
 15000                           	psect	text54
 15001  0BED                     __ptext54:	
 15002 ;; *************** function _TMR1_WriteTimer *****************
 15003 ;; Defined at:
 15004 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 15005 ;; Parameters:    Size  Location     Type
 15006 ;;  timerVal        2    0[COMMON] unsigned int 
 15007 ;; Auto vars:     Size  Location     Type
 15008 ;;		None
 15009 ;; Return value:  Size  Location     Type
 15010 ;;                  1    wreg      void 
 15011 ;; Registers used:
 15012 ;;		wreg, status,2
 15013 ;; Tracked objects:
 15014 ;;		On entry : 0/0
 15015 ;;		On exit  : 0/0
 15016 ;;		Unchanged: 0/0
 15017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15018 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15021 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15022 ;;Total ram usage:        2 bytes
 15023 ;; Hardware stack levels used:    1
 15024 ;; This function calls:
 15025 ;;		Nothing
 15026 ;; This function is called by:
 15027 ;;		_TMR1_ISR
 15028 ;;		_TMR1_Reload
 15029 ;; This function uses a non-reentrant model
 15030 ;;
 15031                           
 15032                           
 15033                           ;psect for function _TMR1_WriteTimer
 15034  0BED                     _TMR1_WriteTimer:
 15035  0BED                     i1l3805:	
 15036                           ;incstack = 0
 15037                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 15038                           
 15039                           
 15040                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 15041  0BED  0024               	movlb	4	; select bank4
 15042  0BEE  1D0E               	btfss	14,2	;volatile
 15043  0BEF  2BF1               	goto	u312_21
 15044  0BF0  2BF2               	goto	u312_20
 15045  0BF1                     u312_21:
 15046  0BF1  2BF9               	goto	i1l3815
 15047  0BF2                     u312_20:
 15048  0BF2                     i1l3807:
 15049                           
 15050                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 15051  0BF2  100E               	bcf	14,0	;volatile
 15052  0BF3                     i1l3809:
 15053                           
 15054                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 15055  0BF3  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15056  0BF4  008D               	movwf	13	;volatile
 15057  0BF5                     i1l3811:
 15058                           
 15059                           ;tmr1.c: 136: TMR1L = timerVal;
 15060  0BF5  0870               	movf	TMR1_WriteTimer@timerVal,w
 15061  0BF6  008C               	movwf	12	;volatile
 15062  0BF7                     i1l3813:
 15063                           
 15064                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 15065  0BF7  140E               	bsf	14,0	;volatile
 15066                           
 15067                           ;tmr1.c: 140: }
 15068  0BF8  2BFD               	goto	i1l401
 15069  0BF9                     i1l3815:
 15070                           
 15071                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 15072  0BF9  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15073  0BFA  008D               	movwf	13	;volatile
 15074  0BFB                     i1l3817:
 15075                           
 15076                           ;tmr1.c: 145: TMR1L = timerVal;
 15077  0BFB  0870               	movf	TMR1_WriteTimer@timerVal,w
 15078  0BFC  008C               	movwf	12	;volatile
 15079  0BFD                     i1l401:
 15080  0BFD  0008               	return
 15081  0BFE                     __end_of_TMR1_WriteTimer:
 15082                           
 15083                           	psect	text55
 15084  0F8E                     __ptext55:	
 15085 ;; *************** function _Clock_ISR *****************
 15086 ;; Defined at:
 15087 ;;		line 287 in file "main.c"
 15088 ;; Parameters:    Size  Location     Type
 15089 ;;		None
 15090 ;; Auto vars:     Size  Location     Type
 15091 ;;		None
 15092 ;; Return value:  Size  Location     Type
 15093 ;;                  1    wreg      void 
 15094 ;; Registers used:
 15095 ;;		wreg, status,2, status,0
 15096 ;; Tracked objects:
 15097 ;;		On entry : 0/0
 15098 ;;		On exit  : 0/0
 15099 ;;		Unchanged: 0/0
 15100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15103 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15104 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15105 ;;Total ram usage:        1 bytes
 15106 ;; Hardware stack levels used:    1
 15107 ;; This function calls:
 15108 ;;		Nothing
 15109 ;; This function is called by:
 15110 ;;		_main
 15111 ;;		_TMR1_ISR
 15112 ;; This function uses a non-reentrant model
 15113 ;;
 15114                           
 15115                           
 15116                           ;psect for function _Clock_ISR
 15117  0F8E                     _Clock_ISR:
 15118  0F8E                     i1l3901:	
 15119                           ;incstack = 0
 15120                           ; Regs used in _Clock_ISR: [wreg+status,2+status,0]
 15121                           
 15122                           
 15123                           ;main.c: 289: t.s++;
 15124  0F8E  3001               	movlw	1
 15125  0F8F  0020               	movlb	0	; select bank0
 15126  0F90  07D0               	addwf	_t+4,f
 15127  0F91  3000               	movlw	0
 15128  0F92  3DD1               	addwfc	_t+5,f
 15129  0F93                     i1l3903:
 15130                           
 15131                           ;main.c: 291: if(t.s==60){
 15132  0F93  303C               	movlw	60
 15133  0F94  0650               	xorwf	_t+4,w
 15134  0F95  0451               	iorwf	_t+5,w
 15135  0F96  1D03               	btfss	3,2
 15136  0F97  2F99               	goto	u333_21
 15137  0F98  2F9A               	goto	u333_20
 15138  0F99                     u333_21:
 15139  0F99  2FA0               	goto	i1l3909
 15140  0F9A                     u333_20:
 15141  0F9A                     i1l3905:
 15142                           
 15143                           ;main.c: 292: t.m++;
 15144  0F9A  3001               	movlw	1
 15145  0F9B  07CE               	addwf	_t+2,f
 15146  0F9C  3000               	movlw	0
 15147  0F9D  3DCF               	addwfc	_t+3,f
 15148  0F9E                     i1l3907:
 15149                           
 15150                           ;main.c: 293: t.s=0;
 15151  0F9E  01D0               	clrf	_t+4
 15152  0F9F  01D1               	clrf	_t+5
 15153  0FA0                     i1l3909:
 15154                           
 15155                           ;main.c: 294: };main.c: 295: if(t.m==60){
 15156  0FA0  303C               	movlw	60
 15157  0FA1  064E               	xorwf	_t+2,w
 15158  0FA2  044F               	iorwf	_t+3,w
 15159  0FA3  1D03               	btfss	3,2
 15160  0FA4  2FA6               	goto	u334_21
 15161  0FA5  2FA7               	goto	u334_20
 15162  0FA6                     u334_21:
 15163  0FA6  2FAD               	goto	i1l3915
 15164  0FA7                     u334_20:
 15165  0FA7                     i1l3911:
 15166                           
 15167                           ;main.c: 297: t.h++;
 15168  0FA7  3001               	movlw	1
 15169  0FA8  07CC               	addwf	_t,f
 15170  0FA9  3000               	movlw	0
 15171  0FAA  3DCD               	addwfc	_t+1,f
 15172  0FAB                     i1l3913:
 15173                           
 15174                           ;main.c: 298: t.m=0;
 15175  0FAB  01CE               	clrf	_t+2
 15176  0FAC  01CF               	clrf	_t+3
 15177  0FAD                     i1l3915:
 15178                           
 15179                           ;main.c: 299: };main.c: 300: if(t.h==24){
 15180  0FAD  3018               	movlw	24
 15181  0FAE  064C               	xorwf	_t,w
 15182  0FAF  044D               	iorwf	_t+1,w
 15183  0FB0  1D03               	btfss	3,2
 15184  0FB1  2FB3               	goto	u335_21
 15185  0FB2  2FB4               	goto	u335_20
 15186  0FB3                     u335_21:
 15187  0FB3  2FB6               	goto	i1l3919
 15188  0FB4                     u335_20:
 15189  0FB4                     i1l3917:
 15190                           
 15191                           ;main.c: 301: t.h=0;
 15192  0FB4  01CC               	clrf	_t
 15193  0FB5  01CD               	clrf	_t+1
 15194  0FB6                     i1l3919:
 15195                           
 15196                           ;main.c: 302: };main.c: 305: if(alarmsEnable == 1 && t.s >= clkAlarm.alarmVal.s && t.m >
      +                          = clkAlarm.alarmVal.m && t.h >= clkAlarm.alarmVal.h){
 15197  0FB6  036A               	decf	_alarmsEnable,w
 15198  0FB7  1D03               	btfss	3,2
 15199  0FB8  2FBA               	goto	u336_21
 15200  0FB9  2FBB               	goto	u336_20
 15201  0FBA                     u336_21:
 15202  0FBA  2FF3               	goto	i1l3931
 15203  0FBB                     u336_20:
 15204  0FBB                     i1l3921:
 15205  0FBB  0851               	movf	_t+5,w
 15206  0FBC  3A80               	xorlw	128
 15207  0FBD  00F0               	movwf	??_Clock_ISR
 15208  0FBE  0864               	movf	_clkAlarm+5,w
 15209  0FBF  3A80               	xorlw	128
 15210  0FC0  0270               	subwf	??_Clock_ISR,w
 15211  0FC1  1D03               	skipz
 15212  0FC2  2FC5               	goto	u337_25
 15213  0FC3  0863               	movf	_clkAlarm+4,w
 15214  0FC4  0250               	subwf	_t+4,w
 15215  0FC5                     u337_25:
 15216  0FC5  1C03               	skipc
 15217  0FC6  2FC8               	goto	u337_21
 15218  0FC7  2FC9               	goto	u337_20
 15219  0FC8                     u337_21:
 15220  0FC8  2FF3               	goto	i1l3931
 15221  0FC9                     u337_20:
 15222  0FC9                     i1l3923:
 15223  0FC9  0020               	movlb	0	; select bank0
 15224  0FCA  084F               	movf	_t+3,w
 15225  0FCB  3A80               	xorlw	128
 15226  0FCC  00F0               	movwf	??_Clock_ISR
 15227  0FCD  0862               	movf	_clkAlarm+3,w
 15228  0FCE  3A80               	xorlw	128
 15229  0FCF  0270               	subwf	??_Clock_ISR,w
 15230  0FD0  1D03               	skipz
 15231  0FD1  2FD4               	goto	u338_25
 15232  0FD2  0861               	movf	_clkAlarm+2,w
 15233  0FD3  024E               	subwf	_t+2,w
 15234  0FD4                     u338_25:
 15235  0FD4  1C03               	skipc
 15236  0FD5  2FD7               	goto	u338_21
 15237  0FD6  2FD8               	goto	u338_20
 15238  0FD7                     u338_21:
 15239  0FD7  2FF3               	goto	i1l3931
 15240  0FD8                     u338_20:
 15241  0FD8                     i1l3925:
 15242  0FD8  0020               	movlb	0	; select bank0
 15243  0FD9  084D               	movf	_t+1,w
 15244  0FDA  3A80               	xorlw	128
 15245  0FDB  00F0               	movwf	??_Clock_ISR
 15246  0FDC  0860               	movf	_clkAlarm+1,w
 15247  0FDD  3A80               	xorlw	128
 15248  0FDE  0270               	subwf	??_Clock_ISR,w
 15249  0FDF  1D03               	skipz
 15250  0FE0  2FE3               	goto	u339_25
 15251  0FE1  085F               	movf	_clkAlarm,w
 15252  0FE2  024C               	subwf	_t,w
 15253  0FE3                     u339_25:
 15254  0FE3  1C03               	skipc
 15255  0FE4  2FE6               	goto	u339_21
 15256  0FE5  2FE7               	goto	u339_20
 15257  0FE6                     u339_21:
 15258  0FE6  2FF3               	goto	i1l3931
 15259  0FE7                     u339_20:
 15260  0FE7                     i1l3927:
 15261                           
 15262                           ;main.c: 306: alarmPWMStart.h = -1;
 15263  0FE7  30FF               	movlw	255
 15264  0FE8  0021               	movlb	1	; select bank1
 15265  0FE9  00BA               	movwf	_alarmPWMStart^(0+128)
 15266  0FEA  30FF               	movlw	255
 15267  0FEB  00BB               	movwf	(_alarmPWMStart^(0+128)+1)
 15268  0FEC                     i1l3929:
 15269                           
 15270                           ;main.c: 307: clkAlarm.trigger = 1;
 15271  0FEC  0020               	movlb	0	; select bank0
 15272  0FED  01E5               	clrf	_clkAlarm+6
 15273  0FEE  0AE5               	incf	_clkAlarm+6,f
 15274                           
 15275                           ;main.c: 308: clkAlarm.alarmVal.h = 25;
 15276  0FEF  3019               	movlw	25
 15277  0FF0  00DF               	movwf	_clkAlarm
 15278  0FF1  3000               	movlw	0
 15279  0FF2  00E0               	movwf	_clkAlarm+1
 15280  0FF3                     i1l3931:
 15281  0FF3  1003               	clrc
 15282  0FF4  0020               	movlb	0	; select bank0
 15283  0FF5  1F96               	btfss	22,7	;volatile
 15284  0FF6  1403               	setc
 15285  0FF7  1803               	btfsc	3,0
 15286  0FF8  2FFA               	goto	u340_21
 15287  0FF9  2FFD               	goto	u340_20
 15288  0FFA                     u340_21:
 15289  0FFA  0020               	movlb	0	; select bank0
 15290  0FFB  1796               	bsf	22,7	;volatile
 15291  0FFC  2FFF               	goto	u341_24
 15292  0FFD                     u340_20:
 15293  0FFD  0020               	movlb	0	; select bank0
 15294  0FFE  1396               	bcf	22,7	;volatile
 15295  0FFF                     u341_24:
 15296  0FFF                     i1l1130:
 15297  0FFF  0008               	return
 15298  1000                     __end_of_Clock_ISR:
 15299                           
 15300                           	psect	text56
 15301  0B54                     __ptext56:	
 15302 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 15303 ;; Defined at:
 15304 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 15305 ;; Parameters:    Size  Location     Type
 15306 ;;		None
 15307 ;; Auto vars:     Size  Location     Type
 15308 ;;		None
 15309 ;; Return value:  Size  Location     Type
 15310 ;;                  1    wreg      void 
 15311 ;; Registers used:
 15312 ;;		None
 15313 ;; Tracked objects:
 15314 ;;		On entry : 0/0
 15315 ;;		On exit  : 0/0
 15316 ;;		Unchanged: 0/0
 15317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15322 ;;Total ram usage:        0 bytes
 15323 ;; Hardware stack levels used:    1
 15324 ;; This function calls:
 15325 ;;		Nothing
 15326 ;; This function is called by:
 15327 ;;		_TMR1_Initialize
 15328 ;;		_TMR1_ISR
 15329 ;; This function uses a non-reentrant model
 15330 ;;
 15331                           
 15332                           
 15333                           ;psect for function _TMR1_DefaultInterruptHandler
 15334  0B54                     _TMR1_DefaultInterruptHandler:
 15335  0B54                     i1l420:	
 15336                           ;incstack = 0
 15337                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 15338                           
 15339  0B54  0008               	return
 15340  0B55                     __end_of_TMR1_DefaultInterruptHandler:
 15341  007E                     btemp	set	126	;btemp
 15342  007E                     int$flags	set	126
 15343  007E                     wtemp0	set	126
 15344                           
 15345                           	psect	config
 15346                           
 15347                           ;Config register CONFIG1 @ 0x8007
 15348                           ;	External Oscillator mode selection bits
 15349                           ;	FEXTOSC = OFF, Oscillator not enabled
 15350                           ;	Power-up default value for COSC bits
 15351                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 15352                           ;	Clock Out Enable bit
 15353                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 15354                           ;	Clock Switch Enable bit
 15355                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 15356                           ;	Fail-Safe Clock Monitor Enable bit
 15357                           ;	FCMEN = ON, FSCM timer enabled
 15358  8007                     	org	32775
 15359  8007  3FEC               	dw	16364
 15360                           
 15361                           ;Config register CONFIG2 @ 0x8008
 15362                           ;	Master Clear Enable bit
 15363                           ;	MCLRE = ON, MCLR pin is Master Clear function
 15364                           ;	Power-up Timer Enable bit
 15365                           ;	PWRTE = OFF, PWRT disabled
 15366                           ;	Low-Power BOR enable bit
 15367                           ;	LPBOREN = OFF, ULPBOR disabled
 15368                           ;	Brown-out reset enable bits
 15369                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 15370                           ;	Brown-out Reset Voltage Selection
 15371                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 15372                           ;	Zero-cross detect disable
 15373                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 15374                           ;	Peripheral Pin Select one-way control
 15375                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 15376                           ;	Stack Overflow/Underflow Reset Enable bit
 15377                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 15378                           ;	Background Debugger
 15379                           ;	DEBUG = OFF, Background Debugger disabled
 15380  8008                     	org	32776
 15381  8008  3FFF               	dw	16383
 15382                           
 15383                           ;Config register CONFIG3 @ 0x8009
 15384                           ;	WDT Period Select bits
 15385                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 15386                           ;	WDT operating mode
 15387                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 15388                           ;	WDT Window Select bits
 15389                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 15390                           ;	WDT input clock selector
 15391                           ;	WDTCCS = SC, Software Control
 15392  8009                     	org	32777
 15393  8009  3F9F               	dw	16287
 15394                           
 15395                           ;Config register CONFIG4 @ 0x800A
 15396                           ;	UserNVM self-write protection bits
 15397                           ;	WRT = OFF, Write protection off
 15398                           ;	Scanner Enable bit
 15399                           ;	SCANE = available, Scanner module is available for use
 15400                           ;	Low Voltage Programming Enable bit
 15401                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 15402  800A                     	org	32778
 15403  800A  3FFF               	dw	16383
 15404                           
 15405                           ;Config register CONFIG5 @ 0x800B
 15406                           ;	UserNVM Program memory code protection bit
 15407                           ;	CP = OFF, Program Memory code protection disabled
 15408                           ;	DataNVM code protection bit
 15409                           ;	CPD = OFF, Data EEPROM code protection disabled
 15410  800B                     	org	32779
 15411  800B  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    10
    Data        18
    BSS         27
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     44      79
    BANK1            80     10      32
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[5]), STR_3(CODE[7]), STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    differenceBetweenTimePeriod@diff	PTR struct Time size(1) Largest target is 6
		 -> menuLCD_ISR@diff(BANK0[6]), 

    LCDstr@p	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR5_ISR->_monitoring_ISR
    _monitoring_ISR->_ADCC_GetSingleConversion
    _monitoring_ISR->_tsttc
    _tsttc->i1_WriteI2C
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->i1_LCDsend2x4
    _LCDcmd->i1_LCDsend2x4
    i1_LCDsend2x4->i1_WriteI2C
    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR3_ISR->_menuLCD_ISR
    _menuLCD_ISR->_sprintf

Critical Paths under _main in BANK1

    _main->_LCDinit
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1824
                                              9 BANK1      1     1      0
                            _LCDinit
              _PWM_Output_D4_Disable
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                     _TMR2_StopTimer
           _TMR3_SetInterruptHandler
           _TMR5_SetInterruptHandler
                          _editClock
                   _i2c1_driver_open
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _editClock                                            1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StopTimer                                       0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (2) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     522
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0     174
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     174
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Output_D4_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     780
                                              8 BANK1      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend2x4                                           6     5      1     736
                                              2 BANK1      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK1      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    5647
                           _TMR1_ISR
                           _TMR3_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR5_ISR                                             0     0      0     330
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                     _monitoring_ISR *
 ---------------------------------------------------------------------------------
 (6) _monitoring_ISR                                       3     3      0      90
                                              4 COMMON     3     3      0
           _ADCC_GetSingleConversion
                              _tsttc
 ---------------------------------------------------------------------------------
 (7) _tsttc                                                2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (6) _TMR5_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR5_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0    5077
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
                        _menuLCD_ISR *
 ---------------------------------------------------------------------------------
 (6) _menuLCD_ISR                                         23    23      0    4837
                                             21 BANK0     23    23      0
                            _LCDchar
                             _LCDcmd
                             _LCDstr
                 _PWM6_LoadDutyValue
               _PWM_Output_D4_Enable
                    _TMR2_StartTimer
        _differenceBetweenTimePeriod
                            _sprintf
            i1_PWM_Output_D4_Disable
                   i1_TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (7) i1_TMR2_StopTimer                                     0     0      0       0
                        i1_TMR2_Stop
 ---------------------------------------------------------------------------------
 (8) i1_TMR2_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM_Output_D4_Disable                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             29    21      8    2433
                                              0 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _differenceBetweenTimePeriod                         15     2     13     595
                                              0 COMMON    13     0     13
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (8) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PWM_Output_D4_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PWM6_LoadDutyValue                                   4     2      2     196
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _LCDstr                                               3     3      0     550
                                              9 COMMON     3     3      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (8) _LCDchar                                              1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (7) _LCDcmd                                               1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (9) i1_LCDsend2x4                                         6     5      1     384
                                              2 COMMON     6     5      1
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) i1_WriteI2C                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _TMR3_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
                          _Clock_ISR *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Clock_ISR                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _PWM_Output_D4_Disable
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_StopTimer
     _TMR2_Stop
   _TMR3_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _editClock
   _i2c1_driver_open

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _Clock_ISR *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *
     _menuLCD_ISR *
       _LCDchar
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDcmd
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDstr
         _LCDchar
           i1_LCDsend2x4
             i1_WriteI2C
       _PWM6_LoadDutyValue
       _PWM_Output_D4_Enable
       _TMR2_StartTimer
         _TMR2_Start
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       i1_PWM_Output_D4_Disable
       i1_TMR2_StopTimer
         i1_TMR2_Stop
   _TMR5_ISR
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _monitoring_ISR *
       _ADCC_GetSingleConversion
       _tsttc
         _ReadI2C
         i1_WriteI2C

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2C      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      A      20       7       40.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      7D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      7D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri Oct 30 18:35:00 2020

                                       _t 004C          __end_of_TMR5_SetInterruptHandler 0B7F  
                              i1_WriteI2C 0E28                                        l30 0F1F  
                                      l33 0EE7                                        l42 0F09  
                                      l35 0EEC                                        l47 0F1D  
                     ___wmul@multiplicand 0072                         ??_TMR5_WriteTimer 0072  
             __size_of_PWM6_LoadDutyValue 0016                                       l122 07FF  
                                     l172 0CFF                                       l175 0BB0  
                                     l239 0BC5                                       l417 0B78  
                                     l178 0BA7                                       l451 0D5C  
                                     l481 0BB9                                       l705 0B7E  
                                     l563 0CC9                                       l387 0D3D  
                                     l719 0BDE                                       l923 0E84  
                                     l675 0D7B                                       l924 0E86  
                                     l764 0B66                                       l749 0BEC  
                                     l935 0EBF                                       l767 0B72  
                                     l936 0EC1                                       l939 0EC5  
                                     _PR2 028D                           _timer1ReloadVal 00B0  
                 __size_of_PMD_Initialize 0008                           _TMR2_Initialize 0BDF  
                                     wreg 0009                               ?_LCDsend2x4 00A2  
                         __end_of_LCDchar 0BA0                                      l1040 052C  
                                    l1025 04DA                                      l1026 04DC  
                                    l1052 0582                                      l1053 0584  
                                    l1056 058B                                      l1049 056C  
                                    l1209 072A                                      l1090 0B63  
                                    l1059 07C2                                      l1182 066F  
                                    l1179 0674                           _timer3ReloadVal 006D  
                                    l1189 06C2                                      l1198 06CC  
                                    l4041 0CE7                                      l4201 0649  
                                    l4051 0CF6                                      l4043 0CEA  
                                    l4211 068D                                      l4203 0666  
                                    l4053 0CF9                                      l4045 0CED  
                                    l4221 06A8                                      l4213 0691  
                                    l4205 0669                                      l4061 0BC0  
                                    l4301 071C                                      l4055 0CFC  
                                    l4047 0CF0                                      l4039 0CE4  
                                    l4223 06AD                                      l4215 0697  
                                    l4207 0678                                      l4063 0BC2  
                                    l4303 0721                                      l4311 0734  
                                    l4161 074D                                      l4049 0CF3  
                                    l4225 06B4                                      l4217 069E  
                                    l4209 067E                                      l4057 0BBA  
                                    l4305 0725                                      l3443 0ED0  
                                    l3435 0EC8                                      l4171 0772  
                                    l4163 0756                                      l4227 06BB  
                                    l4219 06A5                                      l4059 0BBF  
                                    l4307 0730                                      l3445 0EDA  
                                    l3437 0ECB                                      l4181 078E  
                                    l4173 0776                                      l4165 075A  
                                    l3701 07EA                                      l4093 0B6F  
                                    l4229 06BE                                      l3447 0EE5  
                                    l3455 0EF3                                      l4191 07B2  
                                    l4183 079A                                      l4175 077E  
                                    l4167 0762                                      l3711 07F5  
                                    l3703 07EC                                      l3457 0EFE  
                                    l3449 0EF1                                      l4193 07B8  
                                    l4185 079E                                      l4177 0782  
                                    l4169 0766                                      l3721 0BA8  
                                    l3713 07F8                                      l3705 07EE  
                                    l3465 0B73                                      l3801 0D32  
                                    l4281 06F3                                      l4273 06CD  
                                    l3459 0F0E                                      l4187 07A6  
                                    l4179 078A                                      l4195 0B61  
                                    l3723 0BAB                                      l3715 07FA  
                                    l3707 07F0                                      l3731 0BD9  
                                    l3803 0D3A                                      l3467 0BB1  
                                    l3483 0B79                                      l4291 06FC  
                                    l4283 06F4                                      l4275 06D0  
                                    l4189 07AC                                      l3733 0CB3  
                                    l3725 0BAC                                      l3717 07FC  
                                    l3709 07F2                                      l3741 0D41  
                                    l4197 063F                                      l4349 073A  
                                    l4293 0701                                      l4285 06F6  
                                    l4277 06D3                                      l3735 0CC5  
                                    l3727 0BAF                                      l3719 0BA0  
                                    l3751 0D50                                      l3743 0D43  
                                    l4199 0644                                      l4295 070A  
                                    l4287 06FA                                      l4279 06F1  
                         __end_of_LCDinit 07C3                                      l3737 0CC7  
                                    l3681 07CB                                      l3729 0BD2  
                                    l3761 0BE3                                      l3753 0D51  
                                    l3745 0D45                                      l4297 0711  
                                    l4289 06FB                                      l3851 0E75  
                                    l3691 07D6                                      l3683 07CD  
                                    l3763 0BE6                                      l3755 0D59  
                                    l3747 0D47                                      l3739 0D3E  
                                    l3771 0D60                                      l4299 0717  
                                    l3861 0EB0                                      l3853 0E8A  
                                    l3693 07D8                                      l3685 07CF  
                                    l3677 07C3                                      l3765 0BE7  
                                    l3757 0BDF                                      l3749 0D4E  
                                    l3781 0D6F                                      l3773 0D62  
                                    l3855 0E99                                      l3871 04EF  
                                    l3863 04BA                                      l3695 07DA  
                                    l3687 07D1                                      l3679 07C9  
                                    l3791 0D24                                      l3767 0BE9  
                                    l3759 0BE2                                      l3783 0D70  
                                    l3775 0D64                                      l3847 0B64  
                                    l3857 0E9D                                      l3849 0E75  
                                    l3881 051D                                      l3873 04F3  
                                    l3865 04BF                                      l3697 07DC  
                                    l3689 07D3                                      l3793 0D26  
                                    l3785 0D78                                      l3777 0D66  
                                    l3769 0D5D                                      l3859 0EAC  
                                    l3891 0557                                      l3883 052C  
                                    l3875 0502                                      l3867 04CB  
                                    l3699 07E8                                      l3795 0D28  
                                    l3787 0D1F                                      l3779 0D6D  
                                    l3893 055D                                      l3885 0533  
                                    l3877 0508                                      l3869 04E0  
                                    l3797 0D2F                                      l3789 0D22  
                                    l3895 056C                                      l3887 0542  
                                    l3879 0517                                      l3799 0D31  
                                    l3897 0573                                      l3889 0548  
                                    l3899 0588                           __end_of_LCDsend 0EC6  
                                    STR_1 1000                                      STR_2 1000  
                                    STR_3 1019                                      STR_4 1020  
                                    _LATA 0016                                      _LATB 0017  
                                    _LATC 0018                                      u3200 0EC5  
                                    u4000 06A5                                      _LATD 0019  
                                    u3201 0EC4                                      u4001 06A4  
                                    _LATE 001A                                      u4010 06B4  
                                    u4011 06B3                                      u3300 056C  
                                    u3220 04DA                                      u4020 06BB  
                                    u3301 056B                                      u3221 04D9  
                                    u4021 06BA                                      u3150 0E84  
                                    u3310 0582                                      u3230 04E0  
                                    u3151 0E83                                      u3311 0581  
                                    u3231 04DF                                      u3215 04C2  
                                    u2600 0EFE                                      u3160 0E8A  
                                    u3320 0588                                      u3240 04EF  
                                    u2601 0EFD                                      u3161 0E89  
                                    u3321 0587                                      u3241 04EE  
                                    u2610 0F09                                      u3170 0E99  
                                    u3250 0502                                      u4130 0701  
                                    _T2PR 028D                                      u2611 0F08  
                                    u3171 0E98                                      u3251 0501  
                                    u4131 0700                                      u2620 0F0E  
                                    u3180 0EAC                                      u3260 0517  
                                    u4140 0711                                      u2621 0F0D  
                                    u3181 0EAB                                      u3261 0516  
                                    u4141 0710                                      u2630 0F1D  
                                    u2550 0ECF                                      u3190 0EBF  
                                    u3270 052C                                      u4150 0717  
                                    u2631 0F1C                                      u2551 0ECE  
                                    u3191 0EBE                                      u3271 052B  
                                    u4207 064D                                      u4151 0716  
                                    u2560 0EDA                                      u3280 0542  
                                    u4160 071C                                      u2561 0ED9  
                                    u3281 0541                                      u4217 06C6  
                                    u4161 071B                                      u2570 0EE5  
                                    u3290 0557                                      u4170 0721  
                                    u2571 0EE4                                      u3291 0556  
                                    u4307 07A3                                      u4227 0751  
                                    u4171 0720                                      u2580 0EEC  
                                    u3620 0BBF                                      u4180 072F  
                                    u2581 0EEB                                      u4317 07BF  
                                    u4237 075F                                      u3621 0BBE  
                                    u4181 072E                                      u2590 0EF1  
                                    u2591 0EF0                                      u4327 0589  
                                    u4247 0767                                      u4257 0773  
                                    u4267 077B                                      _PMD0 0796  
                                    u4277 0787                                      u4197 0705  
                                    _PMD1 0797                                      i1l30 0E72  
                                    i1l22 0CDD                                      _PMD2 0798  
                                    i1l23 0CDE                                      u4287 078F  
                                    _PMD3 0799                                      _PMD4 079A  
                                    i1l33 0E44                                      u4297 079B  
                                    _PMD5 079B                                      i1l42 0E62  
                                    i1l26 0CE3                                      u3930 0649  
                                    i1l35 0E49                                      u3931 0648  
                                    u3940 0666                                      u3941 0665  
                                    u3950 0674                                      i1l47 0E71  
                                    u3951 0673                                      u3960 0678  
                                    u3961 0677                                      u3945 0662  
                                    u3970 067E                                      u3971 067D  
                                    u3980 068D                                      u3981 068C  
                                    u3990 069E                                      u3991 069D  
                                    u3985 0689                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                              ?_menuLCD_ISR 0070  
                                    _main 06CD                                      _mode 00B8  
                                    _temp 005E                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                                    start 0040                           _timer5ReloadVal 00AC  
                         _TMR3_Initialize 0D3E                ??_TMR1_SetInterruptHandler 00A2  
                         __end_of_ReadI2C 0CE4            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 0BB1                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                __end_of_i2c1_driver_open 0BC6                                     ?_main 0070  
                                   _ADCLK 0098                                     _ADCNT 010C  
                                   _ADPCH 009E                                     _ADREF 009A  
                                   _ADPRE 009C                                     _ADRPT 010D  
                                   _T1CLK 0211                                     _T1CON 020E  
                                   _T3CLK 0217                                     _T2CON 028E  
                                   _T3CON 0214                                     _T5CLK 021D  
                                   _T2HLT 028F                                     _T5CON 021A  
                         __end_of___lwdiv 0DEC                                     _T2TMR 028C  
                                   i1l401 0BFD                                     _T2RST 0291  
                                   i1l420 0B54                                     i1l414 0C84  
                                   i1l350 003E                                     i1l351 0038  
                         __end_of___lwmod 0DB0                                     i1l345 0017  
                                   i1l347 0023                                     i1l356 003E  
                                   i1l349 002F                                     i1l702 0CB2  
                                   i1l465 0C0E                                     i1l722 0C6D  
                                   i1l484 0002                                     i1l708 0003  
                                   i1l478 0C9B                                     i1l575 0C3A  
                                   i1l761 0B6A                                     i1l578 0C43  
                                   i1l914 04B1                                     i1l915 04B2  
                                   i1l764 0B60                                     i1l908 04A0  
                                   i1l860 03E8                                     i1l844 03AB  
                                   i1l909 04A2                                     i1l758 0B5A  
                                   i1l918 04B7                                     i1l767 0B6E  
                                   i1l871 0419                                     i1l847 03B7  
                                   i1l880 042F                                     i1l872 041B  
                                   i1l848 03B8                                     i1l689 0C1F  
                                   i1l859 03E7                                     i1l884 043E  
                                   i1l885 043F                                     i1l877 042A  
                                   i1l878 042B                                     i1l896 046E  
                                   i1l897 046F                                     _OSCEN 0891  
                                   _TMR1H 020D                                     _TMR1L 020C  
                                   _TMR3H 0213                                     _TMR3L 0212  
                                   _TMR5H 0219                                     _TMR5L 0218  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                                     _WPUC3 7A7B  
                                   _WPUC4 7A7C                           _PWM6_Initialize 0BD2  
       __size_of_TMR3_SetInterruptHandler 0009                 ?_TMR3_SetInterruptHandler 00A0  
                __end_ofi1_TMR2_StopTimer 0B6F                          __end_of_TMR1_ISR 0C85  
                        __end_of_TMR3_ISR 0C9C                          __end_of_TMR5_ISR 0CB3  
          ??_TMR3_DefaultInterruptHandler 0070                           __end_of_dpowers 1019  
                      __size_of_TMR2_Stop 0003                               ?_TMR2_Start 0070  
                         __end_of_isdigit 0C32                                     _tsttc 03AB  
                 __end_of_TMR1_Initialize 0D3E                                     pclath 000A  
                          menuLCD_ISR@str 0037                                     status 0003  
                                   wtemp0 007E                           __end_of_sprintf 03AB  
                  ??_PWM_Output_D4_Enable 0070                           _TMR2_StartTimer 0B67  
                         _TMR1_WriteTimer 0BED                           _TMR5_Initialize 0D5D  
                         __initialization 0042                              ?i1_TMR2_Stop 0070  
                            __end_of_main 074D                               ?i1_WriteI2C 0070  
                     __size_of_LCDsend2x4 00D4                   __end_of_TMR2_Initialize 0BED  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 00A9  
                _TMR5_SetInterruptHandler 0B79                        __size_of_Clock_ISR 0072  
                   _TMR3_InterruptHandler 006B          differenceBetweenTimePeriod@start 0070  
                               ??_LCDchar 0078                                 ??_LCDinit 00A8  
                               ??_LCDsend 00A2                                    _ADACCH 0091  
                                  _ADACCL 0090                                    _ADCON0 0093  
                                  _ADCON1 0094                                    _ADCON2 0095  
                                  _ADCON3 0096                                    _ADERRH 0117  
                                  _ADERRL 0116                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                                    _ADUTHL 0110  
                        __end_of_WriteI2C 0F20                                    _ANSELA 0F38  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  ?_tsttc 0070                                    _T3GATE 0216  
                                  _T3GCON 0215                                    _T5GATE 021C  
                                  _T5GCON 021B                                    _RA6PPS 0F16  
                                  _RC3PPS 0F23                                    i1l1040 05EE  
                                  i1l1025 05AA                                    i1l1130 0FFF  
                                  i1l1026 05AB                   TMR1_WriteTimer@timerVal 0070  
                                  _RC4PPS 0F24                                    i1l1052 0636  
                                  i1l1053 0637                                    i1l1062 0B97  
                                  i1l1071 0C57                                    i1l1056 063E  
                                  i1l1160 020D                                    i1l1049 0624  
                                  i1l1065 0B9F                                    i1l1081 0F59  
                                  i1l1090 0B5D                                    i1l1154 01BA  
                                  i1l1403 02DE                                    i1l1084 0F8D  
                                  i1l1420 03AA                                    i1l1148 01A0  
                                  i1l1173 0E26                                    i1l1078 0F29  
                                  i1l1087 0B57                                    i1l1175 0E27  
                                  i1l1167 0E15                                    i1l1424 0D0A  
                                  i1l4001 01BE                                    _ODCONA 0F3A  
                                  i1l1426 0D1E                                    _ODCONB 0F45  
                                  i1l4011 01F1                                    i1l4003 01CE  
                                  _ODCONC 0F50                                    _ODCOND 0F5B  
                                  i1l3301 0E59                                    i1l4013 01F6  
                                  i1l4005 01D2                                    i1l4021 0DEC  
                                  _ODCONE 0F66                                    i1l3303 0E66  
                                  i1l3311 0592                                    i1l4015 01FD  
                                  i1l4007 01D6                                    i1l4031 0E16  
                                  i1l4023 0E05                                    i1l3321 05CA  
                                  i1l3313 059E                                    i1l3401 0DDB  
                                  i1l1385 022B                                    i1l4017 0202  
                                  i1l4009 01EA                                    i1l4033 0E1C  
                                  i1l4025 0E0B                                    i1l1706 0DAF  
                                  i1l3331 05F4                                    i1l3323 05D0  
                                  i1l3315 05AF                                    i1l3403 0DDC  
                                  i1l3411 0D7C                                    i1l4019 0209  
                                  i1l4035 0E21                                    i1l4027 0E10  
                                  i1l3341 0624                                    i1l3333 0600  
                                  i1l3325 05DC                                    i1l3317 05BA  
                                  i1l3309 058D                                    i1l3405 0DE1  
                                  i1l3421 0D92                                    i1l3413 0D82  
                                  i1l3501 03EC                                    i1l4037 0E24  
                                  i1l4029 0E13                                    i1l3343 062A  
                                  i1l3335 0606                                    i1l3327 05E2  
                                  i1l3319 05BE                                    i1l3407 0DE7  
                                  i1l3423 0D9C                                    i1l3415 0D85  
                                  i1l3351 0CE2                                    i1l3511 041F  
                                  i1l3503 03F7                                    i1l4071 0C9E  
                                  i1l3281 0E2C                                    i1l3345 063B  
                                  i1l3337 0612                                    i1l3329 05EE  
                                  i1l3425 0DA0                                    i1l3417 0D8A  
                                  i1l3361 0C22                                    i1l3601 029F  
                                  i1l3433 0B5E                                    i1l4081 0C8F  
                                  i1l3521 045E                                    i1l3513 0433  
                                  i1l3505 03FB                                    i1l4073 0CA6  
                                  i1l4241 0013                                    i1l4091 0C7F  
                                  i1l3291 0E43                                    i1l3339 0618  
                                  i1l3355 0B58                                    i1l3427 0DA5  
                                  i1l3419 0D8E                                    i1l3371 0D00  
                                  i1l3363 0C28                                    i1l3611 02AA  
                                  i1l3603 02A3                                    i1l4083 0C96  
                                  i1l3347 0CCA                                    i1l3531 048E  
                                  i1l3523 0462                                    i1l3515 0443  
                                  i1l3507 0407                                    i1l4075 0CAD  
                                  i1l4251 0033                                    i1l4243 001B  
                                  i1l4235 0006                   __end_of_TMR3_Initialize 0D5D  
                                  i1l4085 0C6E                                    i1l3293 0E4E  
                                  i1l3541 0B92                                    i1l3357 0B99  
                                  i1l3429 0DAB                                    i1l3381 0D1A  
                                  i1l3373 0D02                                    i1l3365 0C2E  
                                  i1l3621 02DA                                    i1l3605 02A8  
                                  i1l4077 0C85                                    i1l3349 0CD4  
                                  i1l3533 0494                                    i1l3525 0473  
                                  i1l3517 044E                                    i1l3509 040D  
                                  i1l4069 0C9C                                    i1l4245 001F  
                                  i1l4237 000A                                    i1l4087 0C70  
                                  i1l3287 0E31                                    i1l3279 0E29  
                                  i1l3543 0C45                                    i1l3551 0F21  
                                  i1l3391 0DBB                                    i1l3375 0D06  
                                  i1l3367 0C30                                    i1l3359 0C21  
                                  i1l3631 02FF                                    i1l3623 02E9  
                                  i1l3615 02C4                                    i1l4079 0C87  
                                  i1l3471 0C36                                    i1l3535 04A6  
                                  i1l3527 047E                                    i1l3519 0452  
                                  i1l4255 003C                                    i1l4247 0027  
                                  i1l4239 000F                                    i1l1696 0DEB  
                                  i1l4089 0C78                                    i1l3289 0E3A  
                                  i1l3545 0C46                                    i1l3561 0B55  
                                  i1l3553 0F38                                    i1l3393 0DC0  
                                  i1l3385 0DB0                                    i1l3377 0D0F  
                                  i1l3641 031B                                    i1l3633 0306  
                                  i1l3625 02F2                                    i1l3617 02CE  
                                  i1l3473 0C37                                    i1l3537 04B6  
                                  i1l3529 0482                                    i1l4249 002B  
                                  i1l3811 0BF5                                    i1l3299 0E50  
                                  i1l3547 0C4A                                    i1l3555 0F51  
                                  i1l3395 0DC4                                    i1l3387 0DB2  
                                  i1l3379 0D14                                    i1l3651 0341  
                                  i1l3635 030A                                    i1l3643 0326  
                                  i1l3627 02F5                                    i1l3619 02D4  
                                  i1l3571 0227                                    i1l3563 0210  
                                  i1l3475 0C38                                    i1l3491 03BC  
                                  i1l3901 0F8E                                    i1l3813 0BF7  
                                  i1l3805 0BED                                    i1l3821 0C03  
                                  i1l3485 0C58                                    i1l3557 0F68  
                                  i1l3549 0F20                                    i1l3397 0DC8  
                                  i1l3389 0DB8                                    i1l1877 0C31  
                                  i1l3661 037E                                    i1l3653 0347  
                                  i1l3645 032C                                    i1l3637 0310  
                                  i1l3629 02F9                                    i1l3581 0245  
                                  i1l3573 022C                                    i1l3565 0215  
                                  i1l3477 0C39                                    i1l3469 0C33  
                                  i1l3493 03C7                                    i1l3911 0FA7  
                                  i1l3903 0F93                                    i1l3807 0BF2  
                                  i1l3815 0BF9                                    i1l3831 0C0C  
                                  i1l3823 0C04                                    i1l3487 0B67  
                                  i1l3559 0F80                                    i1l3399 0DD7  
                                  i1l3663 0385                                    i1l3655 034E  
                                  i1l3647 0333                                    i1l3639 0317  
                                  i1l3583 0248                                    i1l3567 021B  
                                  i1l3479 0C3F                                    i1l3495 03CB  
                                  u220_20 0E71                                    u212_20 0E30  
                                  u300_20 02D4                                    i1l3921 0FBB  
                                  i1l3913 0FAB                                    i1l3905 0F9A  
                                  i1l3817 0BFB                                    i1l3809 0BF3  
                                  i1l3825 0C06                                    u220_21 0E70  
                                  u212_21 0E2F                                    i1l3665 0389  
                                  i1l3649 0337                                    i1l3657 0352  
                                  u300_21 02D3                                    i1l3585 0259  
                                  i1l3593 0278                                    i1l3577 0230  
                                  i1l3569 0222                                    i1l3673 0B6B  
                                  i1l3841 0C19                                    i1l3833 0C0F  
                                  i1l3497 03D7                                    i1l3489 03AB  
                                  i1l3923 0FC9                                    i1l3931 0FF3  
                                  i1l3915 0FAD                                    i1l3907 0F9E  
                                  i1l3827 0C08                                    i1l3819 0BFE  
                                  i1l3659 0357                                    i1l3595 0290  
                                  i1l3587 0268                                    i1l3579 0239  
                                  i1l3667 0392                                    i1l3675 0B5B  
                                  i1l3835 0C14                                    i1l3843 0C1B  
                                  i1l3499 03DB                                    i1l3925 0FD8  
                                  i1l3917 0FB4                                    i1l3909 0FA0  
                                  i1l3829 0C0A                                    i1l3597 0297  
                                  i1l3669 03A6                                    i1l3589 026C  
                                  i1l3941 00A2                                    i1l3933 006E  
                                  i1l3845 0C1D                                    i1l3837 0C15  
                                  i1l3927 0FE7                                    i1l3919 0FB6  
                                  i1l3599 029B                                    i1l3951 00C3  
                                  i1l3943 00A6                                    i1l3935 0075  
                                  i1l3839 0C17                                    u213_20 0E3A  
                                  u301_20 02DA                                    i1l3929 0FEC  
                                  u213_21 0E39                                    u301_21 02D9  
                                  i1l3961 00E8                                    i1l3953 00CB  
                                  i1l3945 00AC                                    i1l3937 008A  
                                  i1l3971 0109                                    i1l3963 00F1  
                                  i1l3955 00D1                                    i1l3947 00B4  
                                  i1l3939 009E                                    u221_25 0595  
                                  i1l3981 0176                                    i1l3973 0112  
                                  i1l3965 00F9                                    i1l3957 00DA  
                                  i1l3949 00BA                                    i1l3991 0198  
                                  i1l3983 017B                                    i1l3975 012A  
                                  i1l3967 00FF                                    i1l3959 00E2  
                                  u214_20 0E43                                    u230_20 0624  
                                  u222_20 05AA                                    u310_20 0392  
                                  u302_20 02E9                                    u214_21 0E42  
                                  u230_21 0623                                    u222_21 05A9  
                                  u310_21 0391                                    u302_21 02E8  
                                  i1l3993 01A5                                    i1l3985 0181  
                                  i1l3977 0139                                    i1l3969 0104  
                                  i1l3995 01AB                                    i1l3987 018F  
                                  i1l3979 0168                                    u302_25 02E5  
                                  i1l3997 01AE                                    i1l3989 0195  
                                  i1l3999 01B2                                    u215_20 0E49  
                                  u231_20 0636                                    u223_20 05AF  
                                  u311_20 03A6                                    u303_20 02F9  
                                  u215_21 0E48                                    u231_21 0635  
                                  u223_21 05AE                                    u311_21 03A5  
                                  u303_21 02F8                                    u312_20 0BF2  
                                  u216_20 0E4E                                    u232_20 063B  
                                  u224_20 05BA                                    u304_20 02FF  
                                  u312_21 0BF1                                    u216_21 0E4D  
                                  u232_21 063A                                    u224_21 05B9  
                                  u304_21 02FE                                    u240_25 0D10  
                                  u313_20 0C03                                    u217_20 0E59  
                                  u225_20 05CA                                    u241_20 0D1A  
                                  u305_20 0310                                    u233_20 0CD4  
                                  u313_21 0C02                                    u217_21 0E58  
                                  u225_21 05C9                                    u241_21 0D19  
                                  u305_21 030F                                    u233_21 0CD3  
                                  _LCDcmd 0B91                                    u218_20 0E62  
                                  u226_20 05DC                                    u242_20 0DB8  
                                  u306_20 0325                                    u314_20 0C14  
                                  u234_20 0CDD                                    u410_20 0033  
                                  u218_21 0E61                                    u226_21 05DB  
                                  u242_21 0DB7                                    u306_21 0324  
                                  u314_21 0C13                                    u234_21 0CDC  
                                  u410_21 0032                                    u250_25 0D86  
                                  u219_20 0E66                                    u227_20 05EE  
                                  u251_20 0D92                                    u307_20 032C  
                                  u235_20 0CE2                                    u411_20 0037  
                                  u403_20 000A                                    u219_21 0E65  
                                  u227_21 05ED                                    u251_21 0D91  
                                  u307_21 032B                                    u235_21 0CE1  
                                  u411_21 0036                                    u403_21 0009  
                                  u243_25 0DBC                                    u340_20 0FFD  
                                  u228_20 0600                                    u244_20 0DC8  
                                  u252_20 0D9C                                    u236_20 0C28  
                                  u308_20 0341                                    u412_20 003C  
                                  u404_20 000F                                    u340_21 0FFA  
                                  u228_21 05FF                                    u244_21 0DC7  
                                  u252_21 0D9B                                    u236_21 0C27  
                                  u308_21 0340                                    u412_21 003B  
                                  u404_21 000E                                    u252_25 0D98  
                                  u333_20 0F9A                                    u229_20 0612  
                                  u237_20 0C2E                                    u309_20 0347  
                                  u405_20 0013                                    u333_21 0F99  
                                  u229_21 0611                                    u237_21 0C2D  
                                  u309_21 0346                                    u405_21 0012  
                                  u341_24 0FFF                                    u245_25 0DC9  
                                  u253_25 0DA1                                    u334_20 0FA7  
                                  u246_20 0DD7                                    u254_20 0DAB  
                                  u238_20 0D06                                    u350_20 0112  
                                  u342_20 0075                                    u270_20 03E7  
                                  u406_20 001B                                    u334_21 0FA6  
                                  u246_21 0DD6                                    u254_21 0DAA  
                                  u238_21 0D05                                    u350_21 0111  
                                  u342_21 0074                                    u270_21 03E6  
                                  u406_21 001A                                    u246_25 0DD3  
                                  u335_20 0FB4                                    u351_20 0135  
                                  u343_20 00AC                                    u271_20 03EC  
                                  u407_20 001F                                    u335_21 0FB3  
                                  u343_21 00AB                                    u271_21 03EB  
                                  u407_21 001E                                    u247_25 0DDD  
                                  u239_25 0D0B                                    u336_20 0FBB  
                                  u248_20 0DE7                                    u352_20 0176  
                                  u344_20 00BA                                    u264_20 0C3F  
                                  u280_20 0443                                    u272_20 03F7  
                                  u360_20 0E0B                                    u408_20 0027  
                                  u336_21 0FBA                                    u248_21 0DE6  
                                  u352_21 0175                                    u344_21 00B9  
                                  u264_21 0C3E                                    u280_21 0442  
                                  u272_21 03F6                                    u360_21 0E0A  
                                  u408_21 0026                                    u352_25 0172  
                                  u337_20 0FC9                                    u249_20 0D82  
                                  u353_20 017B                                    u345_20 00D1  
                                  u281_20 044E                                    u273_20 0407  
                                  u361_20 0E1C                                    u409_20 002B  
                                  u337_21 0FC8                                    u249_21 0D81  
                                  u353_21 017A                                    u345_21 00D0  
                                  u281_21 044D                                    u273_21 0406  
                                  u361_21 0E1B                                    u409_21 002A  
                                  u337_25 0FC5                                    u265_25 0C67  
                                  u433_27 063C                                    u338_20 0FD8  
                                  u354_20 018F                                    u346_20 00E8  
                                  u290_20 04B6                                    u282_20 045E  
                                  u274_20 0419                                    u266_20 03B7  
                                  u338_21 0FD7                                    u354_21 018E  
                                  u346_21 00E7                                    u290_21 04B5  
                                  u282_21 045D                                    u274_21 0418  
                                  u266_21 03B6                                    u338_25 0FD4  
                                  u354_25 018B                                    u339_20 0FE7  
                                  u291_20 0C57                                    u355_20 01A5  
                                  u347_20 00FF                                    u283_20 046E  
                                  u275_20 041F                                    u267_20 03BC  
                                  u363_20 0CAD                                    u339_21 0FE6  
                                  u291_21 0C56                                    u355_21 01A4  
                                  u347_21 00FE                                    u283_21 046D  
                                  u275_21 041E                                    u267_21 03BB  
                                  u363_21 0CAC                                    u339_25 0FE3  
                                  u292_20 0F38                                    u356_20 01F1  
                                  u348_20 0104                                    u364_20 0C96  
                                  u284_20 0473                                    u276_20 042A  
                                  u268_20 03C7                                    u292_21 0F37  
                                  u356_21 01F0                                    u348_21 0103  
                                  u364_21 0C95                                    u284_21 0472  
                                  u276_21 0429                                    u268_21 03C6  
                                  u292_25 0F34                                    _LCDstr 0C44  
                                  u365_20 0C7F                                    u293_20 0F68  
                                  u357_20 01FD                                    u349_20 0109  
                                  u285_20 047E                                    u277_20 042F  
                                  u269_20 03D7                                    u365_21 0C7E  
                                  u293_21 0F67                                    u357_21 01FC  
                                  u349_21 0108                                    u285_21 047D  
                                  u277_21 042E                                    u269_21 03D6  
                                  u293_25 0F64                                    u294_20 021B  
                                  u358_20 0209                                    u286_20 048E  
                                  u278_20 0433                                    u294_21 021A  
                                  u358_21 0208                                    u286_21 048D  
                                  u278_21 0432                                    u295_20 0245  
                                  u287_20 04A0                                    u279_20 043E  
                                  u295_21 0244                                    u287_21 049F  
                                  u279_21 043D                                    u359_25 0DFC  
                                  u296_20 0278                                    u288_20 04A6  
                                  u296_21 0277                                    u288_21 04A5  
                                  u297_20 029F                                    u289_20 04B1  
                                  u297_21 029E                                    u289_21 04B0  
                                  u298_20 02C3                                    u298_21 02C2  
                                  u298_25 02BF                                    u299_20 02CE  
                                  u299_21 02CD                                    _OSCFRQ 0893  
                                  _PWM6EN 1C77                                 ??_ReadI2C 0070  
                             LCDsend2x4@c 00A5                           _TMR3_WriteTimer 0BFE  
    __end_of_TMR1_DefaultInterruptHandler 0B55     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0B54                              _CCPTMRS1bits 021F  
                           ?i1_LCDsend2x4 0072                                    ___wmul 0D00  
                       __end_of_TMR2_Stop 0B67                                 ??___lwdiv 0074  
                               ??___lwmod 007C                       __size_of_TMR2_Start 0003  
                 __end_of_PWM6_Initialize 0BDF                   __size_of_monitoring_ISR 003C  
                         _ADCC_Initialize 0CB3                            _PMD_Initialize 0BA0  
                               ??_isdigit 0070                  ?i1_PWM_Output_D4_Disable 0070  
                         menuLCD_ISR@diff 0046         __size_of_ADCC_GetSingleConversion 0012  
               ?_ADCC_GetSingleConversion 0070                   __end_of_TMR2_StartTimer 0B6B  
TMR5_SetInterruptHandler@InterruptHandler 00A0  TMR3_SetInterruptHandler@InterruptHandler 00A0  
TMR1_SetInterruptHandler@InterruptHandler 00A0                                 ??_sprintf 0028  
                 __end_of_TMR1_WriteTimer 0BFE                   ??_PWM_Output_D4_Disable 00A0  
                     __size_ofi1_WriteI2C 004B                          ?_TMR1_Initialize 0070  
                 __end_of_TMR5_Initialize 0D7C                         _SYSTEM_Initialize 0CE4  
                 __end_of__initialization 006A                        ?_SYSTEM_Initialize 0070  
                       __end_of_Clock_ISR 1000                           _TMR5_WriteTimer 0C0F  
                    __size_of_menuLCD_ISR 01A0                            __pcstackCOMMON 0070  
                          ??i1_LCDsend2x4 0073                              __pidataBANK0 0BC6  
                            __pidataBANK1 0B8B                       ??_SYSTEM_Initialize 00A2  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                               ?_TMR3_ISR 0070                                 ?_TMR5_ISR 0070  
                            menuLCD_ISR@l 0043                        __size_of_editClock 008E  
         differenceBetweenTimePeriod@diff 007C                             __end_of_tsttc 04B8  
                        ?_TMR2_Initialize 0070           differenceBetweenTimePeriod@stop 0076  
                  __end_of_PMD_Initialize 0BA8                              _alarmsEnable 006A  
                            ??_LCDsend2x4 00A3                 __end_of_SYSTEM_Initialize 0D00  
                            sprintf@width 0031                   __end_of_TMR3_WriteTimer 0C0F  
                                 ??_tsttc 0072                                __pbssBANK0 004C  
                              __pbssBANK1 00B2                                   ?_LCDcmd 0070  
                        ?_TMR3_Initialize 0070                                   ?_LCDstr 0070  
                                 LCDcmd@c 0078                                   LCDstr@c 007A  
                                 LCDstr@p 007B                                __pmaintext 06CD  
        __end_of_TMR3_SetInterruptHandler 0BBA                                   ?___wmul 0070  
                              ??_TMR1_ISR 0072                                ??_TMR3_ISR 007E  
                 __end_of_ADCC_Initialize 0CCA                __end_of_PWM6_LoadDutyValue 0C6E  
                              ??_TMR5_ISR 0077                                __pintentry 0004  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                    __size_ofi1_TMR2_Stop 0003                        __end_of_LCDsend2x4 058C  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                               ?_WriteI2C 0070                          ?_PWM6_Initialize 0070  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
         __end_ofi1_PWM_Output_D4_Disable 0B5E                           ?_PMD_Initialize 0070  
                       ?_i2c1_driver_open 0070                                   _LCDchar 0B98  
                                 _LCDinit 074D                                   _LCDsend 0E73  
                      ??_i2c1_driver_open 00A0                                   _OSCCON1 088D  
                                 _OSCCON3 088F                                   _OSCTUNE 0892  
                                 _PWM6DCH 038D                                   _PWM6DCL 038C  
                       ?i1_TMR2_StopTimer 0070                                   _PWM6CON 038E  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                                   _SSP1MSK 018E  
                            ??_TMR2_Start 0070                   __size_of_TMR2_StopTimer 0004  
                        ?_TMR2_StartTimer 0070                          ?_TMR1_WriteTimer 0070  
                      ??i1_TMR2_StopTimer 0070                   __end_of_TMR5_WriteTimer 0C20  
                            LCDsend2x4@hc 00A6                              LCDsend2x4@lc 00A7  
                       __end_of_editClock 06CD                          ?_TMR5_Initialize 0070  
                         __size_of_LCDcmd 0007                        _i2c1_driver_i2cISR 0056  
                         __size_of_LCDstr 0014                                   _ReadI2C 0CCA  
              ??_TMR5_SetInterruptHandler 00A2                              ??i1_WriteI2C 0070  
                         __size_of___wmul 001F                                   ___lwdiv 0DB0  
                                 ___lwmod 0D7C                        __end_of_TMR2_Start 0B5B  
                              ??_WriteI2C 00A0                                   __ptext1 0BBA  
                                 __ptext2 063F                                   __ptext3 0B6F  
                                 __ptext4 0B64                                   __ptext5 0CE4  
                                 __ptext6 0D5D                                   __ptext7 0B79  
                                 __ptext8 0D3E                                   __ptext9 0BB1  
                          _monitoring_ISR 0DEC            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 020E                                   _dpowers 100F  
                   _OSCILLATOR_Initialize 0BA8                                 _T2CONbits 028E  
                                 _isdigit 0C20                                 _T3CONbits 0214  
       __size_of_TMR1_SetInterruptHandler 0006                  ??_PIN_MANAGER_Initialize 00A0  
               ?_TMR1_SetInterruptHandler 00A0                                 _T2HLTbits 028F  
                               _T5CONbits 021A                      __end_ofi1_LCDsend2x4 063F  
              __size_of_SYSTEM_Initialize 001C                                   _sprintf 020E  
                                 clrloop0 0B80                      end_of_initialization 006A  
                        ?_TMR3_WriteTimer 0070                                 _T2RSTbits 0291  
                      __end_ofi1_WriteI2C 0E73                                   init_ram 0B85  
                                 initloop 0B86                            i1LCDsend2x4@hc 0076  
                          i1LCDsend2x4@lc 0077             __size_of_PWM_Output_D4_Enable 0003  
            ?_differenceBetweenTimePeriod 0070                          ?_ADCC_Initialize 0070  
        __end_of_ADCC_GetSingleConversion 0C44                    __end_of_monitoring_ISR 0E28  
                               _PORTBbits 000D                                 _PORTCbits 000E  
                               _TMR2_Stop 0B64                  _TMR3_SetInterruptHandler 0BB1  
                   _TMR5_InterruptHandler 00AA                                 _TRISCbits 0013  
                           _alarmPWMStart 00BA                          ?_TMR5_WriteTimer 0070  
                 TMR5_WriteTimer@timerVal 0070            __size_of_PWM_Output_D4_Disable 0003  
           __end_of_PWM_Output_D4_Disable 0B64                            __end_of_LCDcmd 0B98  
                          __end_of_LCDstr 0C58          __size_ofi1_PWM_Output_D4_Disable 0003  
                          LCDsend2x4@mode 00A2                                 _Clock_ISR 0F8E  
                          __end_of___wmul 0D1F                           ?_monitoring_ISR 0070  
                       __size_of_TMR1_ISR 0017                         __size_of_TMR3_ISR 0017  
                       __size_of_TMR5_ISR 0017                                ?_TMR2_Stop 0070  
                  ?_OSCILLATOR_Initialize 0070                             menuLCD_ISR@tt 003F  
                     start_initialization 0042      __end_of_TMR5_DefaultInterruptHandler 0004  
   __size_of_TMR5_DefaultInterruptHandler 0001              _TMR5_DefaultInterruptHandler 0003  
         __size_of_PIN_MANAGER_Initialize 003D                            _TMR2_StopTimer 0B6F  
                        WriteI2C@data_out 00A1                                  ??_LCDcmd 0078  
                                ??_LCDstr 0079                             ??_menuLCD_ISR 0035  
                __size_of_TMR1_Initialize 001F                          ??_PMD_Initialize 00A0  
                              ?_Clock_ISR 0070                                  ??___wmul 0074  
                             __pdataBANK0 005F                               __pdataBANK1 00BA  
                       _editingClockAlarm 0052                         __size_of_WriteI2C 005A  
                   __size_ofi1_LCDsend2x4 00B3                  _ADCC_GetSingleConversion 0C32  
                  __end_of_TMR2_StopTimer 0B73                                  ?_LCDchar 0070  
                                ?_LCDinit 0070                                  ?_LCDsend 0070  
                               ___latbits 0002                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                        _PWM6_LoadDutyValue 0C58  
                __size_of_TMR2_Initialize 000E                              _isdigit$2809 0070  
           ?_TMR5_DefaultInterruptHandler 0070      __size_of_differenceBetweenTimePeriod 006E  
                                LCDchar@c 0078                                  LCDsend@c 00A3  
                     ?_PWM6_LoadDutyValue 0070                               sprintf@flag 0030  
               __size_of_i2c1_driver_open 000C                               sprintf@prec 002D  
                                ?_ReadI2C 0070                                 __pnvBANK0 006B  
                               __pnvBANK1 00AA                                 _editClock 063F  
                        ___lwdiv@dividend 0072                    _PIN_MANAGER_Initialize 07C3  
               __size_ofi1_TMR2_StopTimer 0004                             ??i1_TMR2_Stop 0070  
                __size_of_TMR3_Initialize 001F                       __end_of_menuLCD_ISR 020E  
        __end_of_TMR1_SetInterruptHandler 0B79           ADCC_GetSingleConversion@channel 0073  
                            i1_LCDsend2x4 058C                                 _dimingLed 0054  
                                ?___lwdiv 0070                                  ?___lwmod 0078  
             _i2c1_driver_busCollisionISR 0058                      ??_PWM6_LoadDutyValue 0072  
            ??_INTERRUPT_InterruptManager 007E                               ??_TMR2_Stop 00A0  
                                ?_isdigit 0070                           ?_TMR2_StopTimer 0070  
                __size_of_PWM6_Initialize 000D                          ___lwdiv@quotient 0075  
                                ?_sprintf 0020                                  _T2CLKCON 0290  
                          __size_of_tsttc 010D                   i1_PWM_Output_D4_Disable 0B5B  
                          ___wmul@product 0074                                  _LATAbits 0016  
                               clear_ram0 0B7F                                  _PIE3bits 0719  
                                _PIE4bits 071A                  __size_of_TMR2_StartTimer 0004  
                           i1LCDsend2x4@c 0075                                ?_editClock 0070  
                               _tempAlarm 0068                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 003C                                  _PIR3bits 070F  
                                _PIR4bits 0710                ??_TMR3_SetInterruptHandler 00A2  
                __size_of_TMR5_Initialize 001F                               ??_Clock_ISR 0070  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR1_ISR 0C6E                                  _TMR3_ISR 0C85  
                                _TMR5_ISR 0C9C                                  _SSP1STAT 018F  
                       ??_TMR1_Initialize 00A2                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                     __end_ofi1_TMR2_Stop 0B61                                _ADCON3bits 0096  
                       ___wmul@multiplier 0070                        i1WriteI2C@data_out 0071  
            __end_of_PWM_Output_D4_Enable 0B58         __size_of_TMR5_SetInterruptHandler 0006  
                        __size_of_LCDchar 0008                 ?_TMR5_SetInterruptHandler 00A0  
                        __size_of_LCDinit 0076                          __size_of_LCDsend 0053  
                       ??_TMR2_Initialize 00A0                               _menuLCD_ISR 006E  
          ??_TMR5_DefaultInterruptHandler 0070                          __size_of_ReadI2C 001A  
                              _ADSTATbits 0097                  __size_of_TMR3_WriteTimer 0011  
                        ??_monitoring_ISR 0074                   ??_OSCILLATOR_Initialize 00A0  
                        __size_of___lwdiv 003C                          __size_of___lwmod 0034  
                                _WriteI2C 0EC6                         ??_TMR3_Initialize 00A2  
                _TMR1_SetInterruptHandler 0B73                          i1LCDsend2x4@mode 0072  
                   _TMR1_InterruptHandler 00AE                                sprintf@val 002E  
                                _clkAlarm 005F                  __size_of_ADCC_Initialize 0017  
                        __size_of_isdigit 0012                           ___lwdiv@divisor 0070  
                         ___lwdiv@counter 0077                                  __ptext10 0BDF  
                                __ptext11 0D1F                                  __ptext20 04B8  
                                __ptext12 0B73                                  __ptext21 0E73  
                                __ptext13 0BD2                                _T1GCONbits 020F  
                                __ptext30 0C0F                                  __ptext22 0EC6  
                                __ptext14 0BA0                                  __ptext31 0C85  
                                __ptext15 07C3                                  __ptext40 0D7C  
                                __ptext32 0002                                  __ptext24 0C9C  
                                __ptext16 0BA8                                  __ptext41 0DB0  
                                __ptext33 006E                                  __ptext25 0003  
                                __ptext17 0CB3                                  __ptext50 058C  
                                __ptext42 0F20                                  __ptext34 0B6B  
                                __ptext26 0DEC                                  __ptext18 0B61  
                                __ptext51 0E28                                  __ptext43 0B67  
                                __ptext35 0B5E                                  __ptext27 03AB  
                                __ptext19 074D                                  __ptext52 0BFE  
                                __ptext44 0B58                                  __ptext36 0B5B  
                                __ptext28 0CCA                                  __ptext53 0C6E  
                                __ptext45 0B55                                  __ptext37 020E  
                                __ptext29 0C32                                  __ptext54 0BED  
                                __ptext46 0C58                                  __ptext38 0C20  
                                __ptext55 0F8E                                  __ptext47 0C44  
                                __ptext39 0D00                                  __ptext56 0B54  
                                __ptext48 0B98                                  __ptext49 0B91  
                            _SSP1CON1bits 0190                              _SSP1CON2bits 0191  
               ??i1_PWM_Output_D4_Disable 0070                          __size_of_sprintf 019D  
                              _T3GCONbits 0215                   TMR3_WriteTimer@timerVal 0070  
                        _i2c1_driver_open 0BBA                         ??_PWM6_Initialize 00A0  
                           __size_of_main 0080                                _T5GCONbits 021B  
                                _lumAlarm 0066                                  _lumLevel 005D  
                   _PWM_Output_D4_Disable 0B61                               ??_editClock 00A0  
                        _editingTempAlarm 005C                          i1_TMR2_StopTimer 0B6B  
                __size_of_TMR5_WriteTimer 0011                                tsttc@value 0073  
                             i1_TMR2_Stop 0B5E                ??_ADCC_GetSingleConversion 0073  
                                int$flags 007E                         ??_TMR2_StartTimer 0070  
      __end_of_INTERRUPT_InterruptManager 0040                _INTERRUPT_InterruptManager 0004  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                       menuLCD_ISR@F12791 00B2      __end_of_TMR3_DefaultInterruptHandler 0003  
   __size_of_TMR3_DefaultInterruptHandler 0001              _TMR3_DefaultInterruptHandler 0002  
                       ??_TMR5_Initialize 00A2                                _INTCONbits 000B  
                                isdigit@c 0071                                _LCDsend2x4 04B8  
                                intlevel1 0000                                 sprintf@ap 002C  
                               sprintf@sp 0033                          ___lwmod@dividend 007A  
                 ?_PIN_MANAGER_Initialize 0070                           _editingLumAlarm 005B  
                    _PWM_Output_D4_Enable 0B55       __end_of_differenceBetweenTimePeriod 0F8E  
             _differenceBetweenTimePeriod 0F20                          ??_TMR2_StopTimer 00A0  
                       ??_TMR3_WriteTimer 0072                             __pstringtext1 100F  
                           __pstringtext2 1000                             __pstringtext3 1019  
                           __pstringtext4 1020                             __pstringtext5 0000  
           ??_differenceBetweenTimePeriod 0020                                  sprintf@c 0034  
                                sprintf@f 0020             ?_TMR3_DefaultInterruptHandler 0070  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                         ___lwmod@divisor 0078                           ___lwmod@counter 007D  
             PWM6_LoadDutyValue@dutyValue 0070                                _TMR2_Start 0B58  
          __end_of_PIN_MANAGER_Initialize 0800                         ??_ADCC_Initialize 00A0  
                           _togglingAlarm 005A                    ?_PWM_Output_D4_Disable 0070  
                   ?_PWM_Output_D4_Enable 0070                           _TMR1_Initialize 0D1F  
