

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Oct 31 12:43:13 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	psect	text41,local,class=CODE,merge=1,delta=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2
    64                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text44,local,class=CODE,merge=1,delta=2,group=3
    66                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text48,local,class=CODE,merge=1,delta=2
    70                           	psect	text49,local,class=CODE,merge=1,delta=2
    71                           	psect	text50,local,class=CODE,merge=1,delta=2
    72                           	psect	text51,local,class=CODE,merge=1,delta=2
    73                           	psect	text52,local,class=CODE,merge=1,delta=2
    74                           	psect	text53,local,class=CODE,merge=1,delta=2
    75                           	psect	text54,local,class=CODE,merge=1,delta=2
    76                           	psect	text55,local,class=CODE,merge=1,delta=2
    77                           	psect	text56,local,class=CODE,merge=1,delta=2
    78                           	psect	text57,local,class=CODE,merge=1,delta=2
    79                           	psect	text58,local,class=CODE,merge=1,delta=2
    80                           	psect	text59,local,class=CODE,merge=1,delta=2
    81                           	psect	text60,local,class=CODE,merge=1,delta=2
    82                           	psect	text61,local,class=CODE,merge=1,delta=2
    83                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    84                           	dabs	1,0x7E,2
    85  0000                     
    86                           ; Version 2.30
    87                           ; Generated 15/09/2020 GMT
    88                           ; 
    89                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution. Publication is not required when
   103                           ;        this file is used in an embedded application.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC16F18875 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000F                     	;# 
   137  0010                     	;# 
   138  0011                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001C                     	;# 
   149  001C                     	;# 
   150  001D                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  008C                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  008E                     	;# 
   159  008F                     	;# 
   160  0090                     	;# 
   161  0090                     	;# 
   162  0091                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0095                     	;# 
   166  0096                     	;# 
   167  0097                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009B                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009E                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010E                     	;# 
   179  010F                     	;# 
   180  0110                     	;# 
   181  0110                     	;# 
   182  0111                     	;# 
   183  0112                     	;# 
   184  0112                     	;# 
   185  0113                     	;# 
   186  0114                     	;# 
   187  0114                     	;# 
   188  0115                     	;# 
   189  0116                     	;# 
   190  0116                     	;# 
   191  0117                     	;# 
   192  0119                     	;# 
   193  0119                     	;# 
   194  0119                     	;# 
   195  011A                     	;# 
   196  011A                     	;# 
   197  011A                     	;# 
   198  011B                     	;# 
   199  011B                     	;# 
   200  011B                     	;# 
   201  011B                     	;# 
   202  011B                     	;# 
   203  011C                     	;# 
   204  011C                     	;# 
   205  011C                     	;# 
   206  011D                     	;# 
   207  011D                     	;# 
   208  011D                     	;# 
   209  011E                     	;# 
   210  011E                     	;# 
   211  011E                     	;# 
   212  011F                     	;# 
   213  011F                     	;# 
   214  011F                     	;# 
   215  011F                     	;# 
   216  011F                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  018E                     	;# 
   220  018F                     	;# 
   221  0190                     	;# 
   222  0191                     	;# 
   223  0192                     	;# 
   224  0196                     	;# 
   225  0197                     	;# 
   226  0198                     	;# 
   227  0199                     	;# 
   228  019A                     	;# 
   229  019B                     	;# 
   230  019C                     	;# 
   231  020C                     	;# 
   232  020C                     	;# 
   233  020D                     	;# 
   234  020E                     	;# 
   235  020F                     	;# 
   236  020F                     	;# 
   237  0210                     	;# 
   238  0210                     	;# 
   239  0211                     	;# 
   240  0211                     	;# 
   241  0212                     	;# 
   242  0212                     	;# 
   243  0213                     	;# 
   244  0214                     	;# 
   245  0215                     	;# 
   246  0215                     	;# 
   247  0216                     	;# 
   248  0216                     	;# 
   249  0217                     	;# 
   250  0217                     	;# 
   251  0218                     	;# 
   252  0218                     	;# 
   253  0219                     	;# 
   254  021A                     	;# 
   255  021B                     	;# 
   256  021B                     	;# 
   257  021C                     	;# 
   258  021C                     	;# 
   259  021D                     	;# 
   260  021D                     	;# 
   261  021E                     	;# 
   262  021F                     	;# 
   263  028C                     	;# 
   264  028C                     	;# 
   265  028D                     	;# 
   266  028D                     	;# 
   267  028E                     	;# 
   268  028F                     	;# 
   269  0290                     	;# 
   270  0290                     	;# 
   271  0291                     	;# 
   272  0292                     	;# 
   273  0292                     	;# 
   274  0293                     	;# 
   275  0293                     	;# 
   276  0294                     	;# 
   277  0295                     	;# 
   278  0296                     	;# 
   279  0296                     	;# 
   280  0297                     	;# 
   281  0298                     	;# 
   282  0298                     	;# 
   283  0299                     	;# 
   284  0299                     	;# 
   285  029A                     	;# 
   286  029B                     	;# 
   287  029C                     	;# 
   288  029C                     	;# 
   289  029D                     	;# 
   290  030C                     	;# 
   291  030C                     	;# 
   292  030D                     	;# 
   293  030E                     	;# 
   294  030F                     	;# 
   295  0310                     	;# 
   296  0310                     	;# 
   297  0311                     	;# 
   298  0312                     	;# 
   299  0313                     	;# 
   300  0314                     	;# 
   301  0314                     	;# 
   302  0315                     	;# 
   303  0316                     	;# 
   304  0317                     	;# 
   305  0318                     	;# 
   306  0318                     	;# 
   307  0319                     	;# 
   308  031A                     	;# 
   309  031B                     	;# 
   310  031C                     	;# 
   311  031C                     	;# 
   312  031D                     	;# 
   313  031E                     	;# 
   314  031F                     	;# 
   315  038C                     	;# 
   316  038C                     	;# 
   317  038D                     	;# 
   318  038E                     	;# 
   319  0390                     	;# 
   320  0390                     	;# 
   321  0391                     	;# 
   322  0392                     	;# 
   323  040C                     	;# 
   324  040D                     	;# 
   325  040E                     	;# 
   326  040F                     	;# 
   327  0410                     	;# 
   328  0411                     	;# 
   329  0416                     	;# 
   330  0416                     	;# 
   331  0417                     	;# 
   332  0418                     	;# 
   333  0418                     	;# 
   334  0419                     	;# 
   335  041A                     	;# 
   336  041A                     	;# 
   337  041B                     	;# 
   338  041C                     	;# 
   339  041C                     	;# 
   340  041D                     	;# 
   341  041E                     	;# 
   342  041F                     	;# 
   343  048C                     	;# 
   344  048C                     	;# 
   345  048D                     	;# 
   346  048E                     	;# 
   347  048F                     	;# 
   348  048F                     	;# 
   349  0490                     	;# 
   350  0491                     	;# 
   351  0492                     	;# 
   352  0492                     	;# 
   353  0493                     	;# 
   354  0494                     	;# 
   355  0495                     	;# 
   356  0495                     	;# 
   357  0496                     	;# 
   358  0497                     	;# 
   359  0498                     	;# 
   360  0499                     	;# 
   361  049A                     	;# 
   362  049B                     	;# 
   363  049C                     	;# 
   364  049D                     	;# 
   365  050C                     	;# 
   366  050C                     	;# 
   367  050D                     	;# 
   368  050E                     	;# 
   369  050F                     	;# 
   370  050F                     	;# 
   371  0510                     	;# 
   372  0511                     	;# 
   373  0512                     	;# 
   374  0512                     	;# 
   375  0513                     	;# 
   376  0514                     	;# 
   377  0515                     	;# 
   378  0515                     	;# 
   379  0516                     	;# 
   380  0517                     	;# 
   381  0518                     	;# 
   382  0519                     	;# 
   383  051A                     	;# 
   384  051B                     	;# 
   385  051C                     	;# 
   386  051D                     	;# 
   387  058C                     	;# 
   388  058C                     	;# 
   389  058D                     	;# 
   390  058E                     	;# 
   391  058F                     	;# 
   392  058F                     	;# 
   393  0590                     	;# 
   394  0591                     	;# 
   395  0592                     	;# 
   396  0593                     	;# 
   397  060C                     	;# 
   398  060D                     	;# 
   399  060E                     	;# 
   400  060F                     	;# 
   401  0610                     	;# 
   402  0611                     	;# 
   403  0612                     	;# 
   404  0613                     	;# 
   405  0614                     	;# 
   406  0616                     	;# 
   407  0617                     	;# 
   408  0618                     	;# 
   409  0619                     	;# 
   410  061A                     	;# 
   411  061B                     	;# 
   412  061C                     	;# 
   413  061D                     	;# 
   414  061E                     	;# 
   415  068C                     	;# 
   416  068D                     	;# 
   417  068E                     	;# 
   418  068F                     	;# 
   419  0690                     	;# 
   420  0691                     	;# 
   421  0692                     	;# 
   422  0693                     	;# 
   423  0694                     	;# 
   424  070C                     	;# 
   425  070D                     	;# 
   426  070E                     	;# 
   427  070F                     	;# 
   428  0710                     	;# 
   429  0711                     	;# 
   430  0712                     	;# 
   431  0713                     	;# 
   432  0714                     	;# 
   433  0716                     	;# 
   434  0717                     	;# 
   435  0718                     	;# 
   436  0719                     	;# 
   437  071A                     	;# 
   438  071B                     	;# 
   439  071C                     	;# 
   440  071D                     	;# 
   441  071E                     	;# 
   442  0796                     	;# 
   443  0797                     	;# 
   444  0798                     	;# 
   445  0799                     	;# 
   446  079A                     	;# 
   447  079B                     	;# 
   448  080C                     	;# 
   449  080D                     	;# 
   450  080E                     	;# 
   451  080F                     	;# 
   452  0810                     	;# 
   453  0811                     	;# 
   454  0812                     	;# 
   455  0813                     	;# 
   456  0814                     	;# 
   457  081A                     	;# 
   458  081B                     	;# 
   459  081C                     	;# 
   460  081D                     	;# 
   461  081E                     	;# 
   462  081F                     	;# 
   463  088C                     	;# 
   464  088D                     	;# 
   465  088E                     	;# 
   466  088F                     	;# 
   467  0890                     	;# 
   468  0891                     	;# 
   469  0892                     	;# 
   470  0893                     	;# 
   471  0895                     	;# 
   472  0896                     	;# 
   473  0897                     	;# 
   474  0898                     	;# 
   475  0899                     	;# 
   476  089A                     	;# 
   477  089B                     	;# 
   478  090C                     	;# 
   479  090E                     	;# 
   480  090F                     	;# 
   481  091F                     	;# 
   482  091F                     	;# 
   483  098F                     	;# 
   484  098F                     	;# 
   485  0990                     	;# 
   486  0991                     	;# 
   487  0992                     	;# 
   488  0993                     	;# 
   489  0994                     	;# 
   490  0995                     	;# 
   491  0996                     	;# 
   492  0997                     	;# 
   493  0E0F                     	;# 
   494  0E10                     	;# 
   495  0E11                     	;# 
   496  0E12                     	;# 
   497  0E13                     	;# 
   498  0E14                     	;# 
   499  0E15                     	;# 
   500  0E16                     	;# 
   501  0E17                     	;# 
   502  0E18                     	;# 
   503  0E19                     	;# 
   504  0E1A                     	;# 
   505  0E1B                     	;# 
   506  0E1C                     	;# 
   507  0E1D                     	;# 
   508  0E1E                     	;# 
   509  0E1F                     	;# 
   510  0E20                     	;# 
   511  0E21                     	;# 
   512  0E22                     	;# 
   513  0E23                     	;# 
   514  0E24                     	;# 
   515  0E25                     	;# 
   516  0E26                     	;# 
   517  0E27                     	;# 
   518  0E28                     	;# 
   519  0E29                     	;# 
   520  0E2A                     	;# 
   521  0E2B                     	;# 
   522  0E2C                     	;# 
   523  0E2D                     	;# 
   524  0E2E                     	;# 
   525  0E2F                     	;# 
   526  0E30                     	;# 
   527  0E31                     	;# 
   528  0E32                     	;# 
   529  0E33                     	;# 
   530  0E34                     	;# 
   531  0E35                     	;# 
   532  0E36                     	;# 
   533  0E37                     	;# 
   534  0E8F                     	;# 
   535  0E90                     	;# 
   536  0E91                     	;# 
   537  0E92                     	;# 
   538  0E93                     	;# 
   539  0E94                     	;# 
   540  0E95                     	;# 
   541  0E96                     	;# 
   542  0E97                     	;# 
   543  0E9C                     	;# 
   544  0E9D                     	;# 
   545  0E9E                     	;# 
   546  0EA1                     	;# 
   547  0EA2                     	;# 
   548  0EA3                     	;# 
   549  0EA4                     	;# 
   550  0EA5                     	;# 
   551  0EA9                     	;# 
   552  0EAA                     	;# 
   553  0EAB                     	;# 
   554  0EAC                     	;# 
   555  0EB1                     	;# 
   556  0EB2                     	;# 
   557  0EB3                     	;# 
   558  0EB8                     	;# 
   559  0EB9                     	;# 
   560  0EBA                     	;# 
   561  0EBB                     	;# 
   562  0EBC                     	;# 
   563  0EBD                     	;# 
   564  0EBE                     	;# 
   565  0EC3                     	;# 
   566  0EC5                     	;# 
   567  0EC6                     	;# 
   568  0EC7                     	;# 
   569  0EC8                     	;# 
   570  0EC9                     	;# 
   571  0ECA                     	;# 
   572  0ECB                     	;# 
   573  0ECC                     	;# 
   574  0F10                     	;# 
   575  0F11                     	;# 
   576  0F12                     	;# 
   577  0F13                     	;# 
   578  0F14                     	;# 
   579  0F15                     	;# 
   580  0F16                     	;# 
   581  0F17                     	;# 
   582  0F18                     	;# 
   583  0F19                     	;# 
   584  0F1A                     	;# 
   585  0F1B                     	;# 
   586  0F1C                     	;# 
   587  0F1D                     	;# 
   588  0F1E                     	;# 
   589  0F1F                     	;# 
   590  0F20                     	;# 
   591  0F21                     	;# 
   592  0F22                     	;# 
   593  0F23                     	;# 
   594  0F24                     	;# 
   595  0F25                     	;# 
   596  0F26                     	;# 
   597  0F27                     	;# 
   598  0F28                     	;# 
   599  0F29                     	;# 
   600  0F2A                     	;# 
   601  0F2B                     	;# 
   602  0F2C                     	;# 
   603  0F2D                     	;# 
   604  0F2E                     	;# 
   605  0F2F                     	;# 
   606  0F30                     	;# 
   607  0F31                     	;# 
   608  0F32                     	;# 
   609  0F38                     	;# 
   610  0F39                     	;# 
   611  0F3A                     	;# 
   612  0F3B                     	;# 
   613  0F3C                     	;# 
   614  0F3D                     	;# 
   615  0F3E                     	;# 
   616  0F3F                     	;# 
   617  0F40                     	;# 
   618  0F41                     	;# 
   619  0F43                     	;# 
   620  0F44                     	;# 
   621  0F45                     	;# 
   622  0F46                     	;# 
   623  0F47                     	;# 
   624  0F48                     	;# 
   625  0F49                     	;# 
   626  0F4A                     	;# 
   627  0F4B                     	;# 
   628  0F4C                     	;# 
   629  0F4E                     	;# 
   630  0F4F                     	;# 
   631  0F50                     	;# 
   632  0F51                     	;# 
   633  0F52                     	;# 
   634  0F53                     	;# 
   635  0F54                     	;# 
   636  0F55                     	;# 
   637  0F56                     	;# 
   638  0F57                     	;# 
   639  0F59                     	;# 
   640  0F5A                     	;# 
   641  0F5B                     	;# 
   642  0F5C                     	;# 
   643  0F5D                     	;# 
   644  0F61                     	;# 
   645  0F62                     	;# 
   646  0F64                     	;# 
   647  0F65                     	;# 
   648  0F66                     	;# 
   649  0F67                     	;# 
   650  0F68                     	;# 
   651  0F69                     	;# 
   652  0F6A                     	;# 
   653  0F6B                     	;# 
   654  0F6C                     	;# 
   655  0F6D                     	;# 
   656  0FE4                     	;# 
   657  0FE5                     	;# 
   658  0FE6                     	;# 
   659  0FE7                     	;# 
   660  0FE8                     	;# 
   661  0FE9                     	;# 
   662  0FEA                     	;# 
   663  0FEB                     	;# 
   664  0FED                     	;# 
   665  0FEE                     	;# 
   666  0FEF                     	;# 
   667  0000                     	;# 
   668  0001                     	;# 
   669  0002                     	;# 
   670  0003                     	;# 
   671  0004                     	;# 
   672  0005                     	;# 
   673  0006                     	;# 
   674  0007                     	;# 
   675  0008                     	;# 
   676  0009                     	;# 
   677  000A                     	;# 
   678  000B                     	;# 
   679  000C                     	;# 
   680  000D                     	;# 
   681  000E                     	;# 
   682  000F                     	;# 
   683  0010                     	;# 
   684  0011                     	;# 
   685  0012                     	;# 
   686  0013                     	;# 
   687  0014                     	;# 
   688  0015                     	;# 
   689  0016                     	;# 
   690  0017                     	;# 
   691  0018                     	;# 
   692  0019                     	;# 
   693  001A                     	;# 
   694  001C                     	;# 
   695  001C                     	;# 
   696  001D                     	;# 
   697  001D                     	;# 
   698  001E                     	;# 
   699  001F                     	;# 
   700  008C                     	;# 
   701  008C                     	;# 
   702  008D                     	;# 
   703  008E                     	;# 
   704  008E                     	;# 
   705  008F                     	;# 
   706  0090                     	;# 
   707  0090                     	;# 
   708  0091                     	;# 
   709  0093                     	;# 
   710  0094                     	;# 
   711  0095                     	;# 
   712  0096                     	;# 
   713  0097                     	;# 
   714  0098                     	;# 
   715  0099                     	;# 
   716  009A                     	;# 
   717  009B                     	;# 
   718  009C                     	;# 
   719  009D                     	;# 
   720  009E                     	;# 
   721  010C                     	;# 
   722  010D                     	;# 
   723  010E                     	;# 
   724  010E                     	;# 
   725  010F                     	;# 
   726  0110                     	;# 
   727  0110                     	;# 
   728  0111                     	;# 
   729  0112                     	;# 
   730  0112                     	;# 
   731  0113                     	;# 
   732  0114                     	;# 
   733  0114                     	;# 
   734  0115                     	;# 
   735  0116                     	;# 
   736  0116                     	;# 
   737  0117                     	;# 
   738  0119                     	;# 
   739  0119                     	;# 
   740  0119                     	;# 
   741  011A                     	;# 
   742  011A                     	;# 
   743  011A                     	;# 
   744  011B                     	;# 
   745  011B                     	;# 
   746  011B                     	;# 
   747  011B                     	;# 
   748  011B                     	;# 
   749  011C                     	;# 
   750  011C                     	;# 
   751  011C                     	;# 
   752  011D                     	;# 
   753  011D                     	;# 
   754  011D                     	;# 
   755  011E                     	;# 
   756  011E                     	;# 
   757  011E                     	;# 
   758  011F                     	;# 
   759  011F                     	;# 
   760  011F                     	;# 
   761  011F                     	;# 
   762  011F                     	;# 
   763  018C                     	;# 
   764  018D                     	;# 
   765  018E                     	;# 
   766  018F                     	;# 
   767  0190                     	;# 
   768  0191                     	;# 
   769  0192                     	;# 
   770  0196                     	;# 
   771  0197                     	;# 
   772  0198                     	;# 
   773  0199                     	;# 
   774  019A                     	;# 
   775  019B                     	;# 
   776  019C                     	;# 
   777  020C                     	;# 
   778  020C                     	;# 
   779  020D                     	;# 
   780  020E                     	;# 
   781  020F                     	;# 
   782  020F                     	;# 
   783  0210                     	;# 
   784  0210                     	;# 
   785  0211                     	;# 
   786  0211                     	;# 
   787  0212                     	;# 
   788  0212                     	;# 
   789  0213                     	;# 
   790  0214                     	;# 
   791  0215                     	;# 
   792  0215                     	;# 
   793  0216                     	;# 
   794  0216                     	;# 
   795  0217                     	;# 
   796  0217                     	;# 
   797  0218                     	;# 
   798  0218                     	;# 
   799  0219                     	;# 
   800  021A                     	;# 
   801  021B                     	;# 
   802  021B                     	;# 
   803  021C                     	;# 
   804  021C                     	;# 
   805  021D                     	;# 
   806  021D                     	;# 
   807  021E                     	;# 
   808  021F                     	;# 
   809  028C                     	;# 
   810  028C                     	;# 
   811  028D                     	;# 
   812  028D                     	;# 
   813  028E                     	;# 
   814  028F                     	;# 
   815  0290                     	;# 
   816  0290                     	;# 
   817  0291                     	;# 
   818  0292                     	;# 
   819  0292                     	;# 
   820  0293                     	;# 
   821  0293                     	;# 
   822  0294                     	;# 
   823  0295                     	;# 
   824  0296                     	;# 
   825  0296                     	;# 
   826  0297                     	;# 
   827  0298                     	;# 
   828  0298                     	;# 
   829  0299                     	;# 
   830  0299                     	;# 
   831  029A                     	;# 
   832  029B                     	;# 
   833  029C                     	;# 
   834  029C                     	;# 
   835  029D                     	;# 
   836  030C                     	;# 
   837  030C                     	;# 
   838  030D                     	;# 
   839  030E                     	;# 
   840  030F                     	;# 
   841  0310                     	;# 
   842  0310                     	;# 
   843  0311                     	;# 
   844  0312                     	;# 
   845  0313                     	;# 
   846  0314                     	;# 
   847  0314                     	;# 
   848  0315                     	;# 
   849  0316                     	;# 
   850  0317                     	;# 
   851  0318                     	;# 
   852  0318                     	;# 
   853  0319                     	;# 
   854  031A                     	;# 
   855  031B                     	;# 
   856  031C                     	;# 
   857  031C                     	;# 
   858  031D                     	;# 
   859  031E                     	;# 
   860  031F                     	;# 
   861  038C                     	;# 
   862  038C                     	;# 
   863  038D                     	;# 
   864  038E                     	;# 
   865  0390                     	;# 
   866  0390                     	;# 
   867  0391                     	;# 
   868  0392                     	;# 
   869  040C                     	;# 
   870  040D                     	;# 
   871  040E                     	;# 
   872  040F                     	;# 
   873  0410                     	;# 
   874  0411                     	;# 
   875  0416                     	;# 
   876  0416                     	;# 
   877  0417                     	;# 
   878  0418                     	;# 
   879  0418                     	;# 
   880  0419                     	;# 
   881  041A                     	;# 
   882  041A                     	;# 
   883  041B                     	;# 
   884  041C                     	;# 
   885  041C                     	;# 
   886  041D                     	;# 
   887  041E                     	;# 
   888  041F                     	;# 
   889  048C                     	;# 
   890  048C                     	;# 
   891  048D                     	;# 
   892  048E                     	;# 
   893  048F                     	;# 
   894  048F                     	;# 
   895  0490                     	;# 
   896  0491                     	;# 
   897  0492                     	;# 
   898  0492                     	;# 
   899  0493                     	;# 
   900  0494                     	;# 
   901  0495                     	;# 
   902  0495                     	;# 
   903  0496                     	;# 
   904  0497                     	;# 
   905  0498                     	;# 
   906  0499                     	;# 
   907  049A                     	;# 
   908  049B                     	;# 
   909  049C                     	;# 
   910  049D                     	;# 
   911  050C                     	;# 
   912  050C                     	;# 
   913  050D                     	;# 
   914  050E                     	;# 
   915  050F                     	;# 
   916  050F                     	;# 
   917  0510                     	;# 
   918  0511                     	;# 
   919  0512                     	;# 
   920  0512                     	;# 
   921  0513                     	;# 
   922  0514                     	;# 
   923  0515                     	;# 
   924  0515                     	;# 
   925  0516                     	;# 
   926  0517                     	;# 
   927  0518                     	;# 
   928  0519                     	;# 
   929  051A                     	;# 
   930  051B                     	;# 
   931  051C                     	;# 
   932  051D                     	;# 
   933  058C                     	;# 
   934  058C                     	;# 
   935  058D                     	;# 
   936  058E                     	;# 
   937  058F                     	;# 
   938  058F                     	;# 
   939  0590                     	;# 
   940  0591                     	;# 
   941  0592                     	;# 
   942  0593                     	;# 
   943  060C                     	;# 
   944  060D                     	;# 
   945  060E                     	;# 
   946  060F                     	;# 
   947  0610                     	;# 
   948  0611                     	;# 
   949  0612                     	;# 
   950  0613                     	;# 
   951  0614                     	;# 
   952  0616                     	;# 
   953  0617                     	;# 
   954  0618                     	;# 
   955  0619                     	;# 
   956  061A                     	;# 
   957  061B                     	;# 
   958  061C                     	;# 
   959  061D                     	;# 
   960  061E                     	;# 
   961  068C                     	;# 
   962  068D                     	;# 
   963  068E                     	;# 
   964  068F                     	;# 
   965  0690                     	;# 
   966  0691                     	;# 
   967  0692                     	;# 
   968  0693                     	;# 
   969  0694                     	;# 
   970  070C                     	;# 
   971  070D                     	;# 
   972  070E                     	;# 
   973  070F                     	;# 
   974  0710                     	;# 
   975  0711                     	;# 
   976  0712                     	;# 
   977  0713                     	;# 
   978  0714                     	;# 
   979  0716                     	;# 
   980  0717                     	;# 
   981  0718                     	;# 
   982  0719                     	;# 
   983  071A                     	;# 
   984  071B                     	;# 
   985  071C                     	;# 
   986  071D                     	;# 
   987  071E                     	;# 
   988  0796                     	;# 
   989  0797                     	;# 
   990  0798                     	;# 
   991  0799                     	;# 
   992  079A                     	;# 
   993  079B                     	;# 
   994  080C                     	;# 
   995  080D                     	;# 
   996  080E                     	;# 
   997  080F                     	;# 
   998  0810                     	;# 
   999  0811                     	;# 
  1000  0812                     	;# 
  1001  0813                     	;# 
  1002  0814                     	;# 
  1003  081A                     	;# 
  1004  081B                     	;# 
  1005  081C                     	;# 
  1006  081D                     	;# 
  1007  081E                     	;# 
  1008  081F                     	;# 
  1009  088C                     	;# 
  1010  088D                     	;# 
  1011  088E                     	;# 
  1012  088F                     	;# 
  1013  0890                     	;# 
  1014  0891                     	;# 
  1015  0892                     	;# 
  1016  0893                     	;# 
  1017  0895                     	;# 
  1018  0896                     	;# 
  1019  0897                     	;# 
  1020  0898                     	;# 
  1021  0899                     	;# 
  1022  089A                     	;# 
  1023  089B                     	;# 
  1024  090C                     	;# 
  1025  090E                     	;# 
  1026  090F                     	;# 
  1027  091F                     	;# 
  1028  091F                     	;# 
  1029  098F                     	;# 
  1030  098F                     	;# 
  1031  0990                     	;# 
  1032  0991                     	;# 
  1033  0992                     	;# 
  1034  0993                     	;# 
  1035  0994                     	;# 
  1036  0995                     	;# 
  1037  0996                     	;# 
  1038  0997                     	;# 
  1039  0E0F                     	;# 
  1040  0E10                     	;# 
  1041  0E11                     	;# 
  1042  0E12                     	;# 
  1043  0E13                     	;# 
  1044  0E14                     	;# 
  1045  0E15                     	;# 
  1046  0E16                     	;# 
  1047  0E17                     	;# 
  1048  0E18                     	;# 
  1049  0E19                     	;# 
  1050  0E1A                     	;# 
  1051  0E1B                     	;# 
  1052  0E1C                     	;# 
  1053  0E1D                     	;# 
  1054  0E1E                     	;# 
  1055  0E1F                     	;# 
  1056  0E20                     	;# 
  1057  0E21                     	;# 
  1058  0E22                     	;# 
  1059  0E23                     	;# 
  1060  0E24                     	;# 
  1061  0E25                     	;# 
  1062  0E26                     	;# 
  1063  0E27                     	;# 
  1064  0E28                     	;# 
  1065  0E29                     	;# 
  1066  0E2A                     	;# 
  1067  0E2B                     	;# 
  1068  0E2C                     	;# 
  1069  0E2D                     	;# 
  1070  0E2E                     	;# 
  1071  0E2F                     	;# 
  1072  0E30                     	;# 
  1073  0E31                     	;# 
  1074  0E32                     	;# 
  1075  0E33                     	;# 
  1076  0E34                     	;# 
  1077  0E35                     	;# 
  1078  0E36                     	;# 
  1079  0E37                     	;# 
  1080  0E8F                     	;# 
  1081  0E90                     	;# 
  1082  0E91                     	;# 
  1083  0E92                     	;# 
  1084  0E93                     	;# 
  1085  0E94                     	;# 
  1086  0E95                     	;# 
  1087  0E96                     	;# 
  1088  0E97                     	;# 
  1089  0E9C                     	;# 
  1090  0E9D                     	;# 
  1091  0E9E                     	;# 
  1092  0EA1                     	;# 
  1093  0EA2                     	;# 
  1094  0EA3                     	;# 
  1095  0EA4                     	;# 
  1096  0EA5                     	;# 
  1097  0EA9                     	;# 
  1098  0EAA                     	;# 
  1099  0EAB                     	;# 
  1100  0EAC                     	;# 
  1101  0EB1                     	;# 
  1102  0EB2                     	;# 
  1103  0EB3                     	;# 
  1104  0EB8                     	;# 
  1105  0EB9                     	;# 
  1106  0EBA                     	;# 
  1107  0EBB                     	;# 
  1108  0EBC                     	;# 
  1109  0EBD                     	;# 
  1110  0EBE                     	;# 
  1111  0EC3                     	;# 
  1112  0EC5                     	;# 
  1113  0EC6                     	;# 
  1114  0EC7                     	;# 
  1115  0EC8                     	;# 
  1116  0EC9                     	;# 
  1117  0ECA                     	;# 
  1118  0ECB                     	;# 
  1119  0ECC                     	;# 
  1120  0F10                     	;# 
  1121  0F11                     	;# 
  1122  0F12                     	;# 
  1123  0F13                     	;# 
  1124  0F14                     	;# 
  1125  0F15                     	;# 
  1126  0F16                     	;# 
  1127  0F17                     	;# 
  1128  0F18                     	;# 
  1129  0F19                     	;# 
  1130  0F1A                     	;# 
  1131  0F1B                     	;# 
  1132  0F1C                     	;# 
  1133  0F1D                     	;# 
  1134  0F1E                     	;# 
  1135  0F1F                     	;# 
  1136  0F20                     	;# 
  1137  0F21                     	;# 
  1138  0F22                     	;# 
  1139  0F23                     	;# 
  1140  0F24                     	;# 
  1141  0F25                     	;# 
  1142  0F26                     	;# 
  1143  0F27                     	;# 
  1144  0F28                     	;# 
  1145  0F29                     	;# 
  1146  0F2A                     	;# 
  1147  0F2B                     	;# 
  1148  0F2C                     	;# 
  1149  0F2D                     	;# 
  1150  0F2E                     	;# 
  1151  0F2F                     	;# 
  1152  0F30                     	;# 
  1153  0F31                     	;# 
  1154  0F32                     	;# 
  1155  0F38                     	;# 
  1156  0F39                     	;# 
  1157  0F3A                     	;# 
  1158  0F3B                     	;# 
  1159  0F3C                     	;# 
  1160  0F3D                     	;# 
  1161  0F3E                     	;# 
  1162  0F3F                     	;# 
  1163  0F40                     	;# 
  1164  0F41                     	;# 
  1165  0F43                     	;# 
  1166  0F44                     	;# 
  1167  0F45                     	;# 
  1168  0F46                     	;# 
  1169  0F47                     	;# 
  1170  0F48                     	;# 
  1171  0F49                     	;# 
  1172  0F4A                     	;# 
  1173  0F4B                     	;# 
  1174  0F4C                     	;# 
  1175  0F4E                     	;# 
  1176  0F4F                     	;# 
  1177  0F50                     	;# 
  1178  0F51                     	;# 
  1179  0F52                     	;# 
  1180  0F53                     	;# 
  1181  0F54                     	;# 
  1182  0F55                     	;# 
  1183  0F56                     	;# 
  1184  0F57                     	;# 
  1185  0F59                     	;# 
  1186  0F5A                     	;# 
  1187  0F5B                     	;# 
  1188  0F5C                     	;# 
  1189  0F5D                     	;# 
  1190  0F61                     	;# 
  1191  0F62                     	;# 
  1192  0F64                     	;# 
  1193  0F65                     	;# 
  1194  0F66                     	;# 
  1195  0F67                     	;# 
  1196  0F68                     	;# 
  1197  0F69                     	;# 
  1198  0F6A                     	;# 
  1199  0F6B                     	;# 
  1200  0F6C                     	;# 
  1201  0F6D                     	;# 
  1202  0FE4                     	;# 
  1203  0FE5                     	;# 
  1204  0FE6                     	;# 
  1205  0FE7                     	;# 
  1206  0FE8                     	;# 
  1207  0FE9                     	;# 
  1208  0FEA                     	;# 
  1209  0FEB                     	;# 
  1210  0FED                     	;# 
  1211  0FEE                     	;# 
  1212  0FEF                     	;# 
  1213  0000                     	;# 
  1214  0001                     	;# 
  1215  0002                     	;# 
  1216  0003                     	;# 
  1217  0004                     	;# 
  1218  0005                     	;# 
  1219  0006                     	;# 
  1220  0007                     	;# 
  1221  0008                     	;# 
  1222  0009                     	;# 
  1223  000A                     	;# 
  1224  000B                     	;# 
  1225  000C                     	;# 
  1226  000D                     	;# 
  1227  000E                     	;# 
  1228  000F                     	;# 
  1229  0010                     	;# 
  1230  0011                     	;# 
  1231  0012                     	;# 
  1232  0013                     	;# 
  1233  0014                     	;# 
  1234  0015                     	;# 
  1235  0016                     	;# 
  1236  0017                     	;# 
  1237  0018                     	;# 
  1238  0019                     	;# 
  1239  001A                     	;# 
  1240  001C                     	;# 
  1241  001C                     	;# 
  1242  001D                     	;# 
  1243  001D                     	;# 
  1244  001E                     	;# 
  1245  001F                     	;# 
  1246  008C                     	;# 
  1247  008C                     	;# 
  1248  008D                     	;# 
  1249  008E                     	;# 
  1250  008E                     	;# 
  1251  008F                     	;# 
  1252  0090                     	;# 
  1253  0090                     	;# 
  1254  0091                     	;# 
  1255  0093                     	;# 
  1256  0094                     	;# 
  1257  0095                     	;# 
  1258  0096                     	;# 
  1259  0097                     	;# 
  1260  0098                     	;# 
  1261  0099                     	;# 
  1262  009A                     	;# 
  1263  009B                     	;# 
  1264  009C                     	;# 
  1265  009D                     	;# 
  1266  009E                     	;# 
  1267  010C                     	;# 
  1268  010D                     	;# 
  1269  010E                     	;# 
  1270  010E                     	;# 
  1271  010F                     	;# 
  1272  0110                     	;# 
  1273  0110                     	;# 
  1274  0111                     	;# 
  1275  0112                     	;# 
  1276  0112                     	;# 
  1277  0113                     	;# 
  1278  0114                     	;# 
  1279  0114                     	;# 
  1280  0115                     	;# 
  1281  0116                     	;# 
  1282  0116                     	;# 
  1283  0117                     	;# 
  1284  0119                     	;# 
  1285  0119                     	;# 
  1286  0119                     	;# 
  1287  011A                     	;# 
  1288  011A                     	;# 
  1289  011A                     	;# 
  1290  011B                     	;# 
  1291  011B                     	;# 
  1292  011B                     	;# 
  1293  011B                     	;# 
  1294  011B                     	;# 
  1295  011C                     	;# 
  1296  011C                     	;# 
  1297  011C                     	;# 
  1298  011D                     	;# 
  1299  011D                     	;# 
  1300  011D                     	;# 
  1301  011E                     	;# 
  1302  011E                     	;# 
  1303  011E                     	;# 
  1304  011F                     	;# 
  1305  011F                     	;# 
  1306  011F                     	;# 
  1307  011F                     	;# 
  1308  011F                     	;# 
  1309  018C                     	;# 
  1310  018D                     	;# 
  1311  018E                     	;# 
  1312  018F                     	;# 
  1313  0190                     	;# 
  1314  0191                     	;# 
  1315  0192                     	;# 
  1316  0196                     	;# 
  1317  0197                     	;# 
  1318  0198                     	;# 
  1319  0199                     	;# 
  1320  019A                     	;# 
  1321  019B                     	;# 
  1322  019C                     	;# 
  1323  020C                     	;# 
  1324  020C                     	;# 
  1325  020D                     	;# 
  1326  020E                     	;# 
  1327  020F                     	;# 
  1328  020F                     	;# 
  1329  0210                     	;# 
  1330  0210                     	;# 
  1331  0211                     	;# 
  1332  0211                     	;# 
  1333  0212                     	;# 
  1334  0212                     	;# 
  1335  0213                     	;# 
  1336  0214                     	;# 
  1337  0215                     	;# 
  1338  0215                     	;# 
  1339  0216                     	;# 
  1340  0216                     	;# 
  1341  0217                     	;# 
  1342  0217                     	;# 
  1343  0218                     	;# 
  1344  0218                     	;# 
  1345  0219                     	;# 
  1346  021A                     	;# 
  1347  021B                     	;# 
  1348  021B                     	;# 
  1349  021C                     	;# 
  1350  021C                     	;# 
  1351  021D                     	;# 
  1352  021D                     	;# 
  1353  021E                     	;# 
  1354  021F                     	;# 
  1355  028C                     	;# 
  1356  028C                     	;# 
  1357  028D                     	;# 
  1358  028D                     	;# 
  1359  028E                     	;# 
  1360  028F                     	;# 
  1361  0290                     	;# 
  1362  0290                     	;# 
  1363  0291                     	;# 
  1364  0292                     	;# 
  1365  0292                     	;# 
  1366  0293                     	;# 
  1367  0293                     	;# 
  1368  0294                     	;# 
  1369  0295                     	;# 
  1370  0296                     	;# 
  1371  0296                     	;# 
  1372  0297                     	;# 
  1373  0298                     	;# 
  1374  0298                     	;# 
  1375  0299                     	;# 
  1376  0299                     	;# 
  1377  029A                     	;# 
  1378  029B                     	;# 
  1379  029C                     	;# 
  1380  029C                     	;# 
  1381  029D                     	;# 
  1382  030C                     	;# 
  1383  030C                     	;# 
  1384  030D                     	;# 
  1385  030E                     	;# 
  1386  030F                     	;# 
  1387  0310                     	;# 
  1388  0310                     	;# 
  1389  0311                     	;# 
  1390  0312                     	;# 
  1391  0313                     	;# 
  1392  0314                     	;# 
  1393  0314                     	;# 
  1394  0315                     	;# 
  1395  0316                     	;# 
  1396  0317                     	;# 
  1397  0318                     	;# 
  1398  0318                     	;# 
  1399  0319                     	;# 
  1400  031A                     	;# 
  1401  031B                     	;# 
  1402  031C                     	;# 
  1403  031C                     	;# 
  1404  031D                     	;# 
  1405  031E                     	;# 
  1406  031F                     	;# 
  1407  038C                     	;# 
  1408  038C                     	;# 
  1409  038D                     	;# 
  1410  038E                     	;# 
  1411  0390                     	;# 
  1412  0390                     	;# 
  1413  0391                     	;# 
  1414  0392                     	;# 
  1415  040C                     	;# 
  1416  040D                     	;# 
  1417  040E                     	;# 
  1418  040F                     	;# 
  1419  0410                     	;# 
  1420  0411                     	;# 
  1421  0416                     	;# 
  1422  0416                     	;# 
  1423  0417                     	;# 
  1424  0418                     	;# 
  1425  0418                     	;# 
  1426  0419                     	;# 
  1427  041A                     	;# 
  1428  041A                     	;# 
  1429  041B                     	;# 
  1430  041C                     	;# 
  1431  041C                     	;# 
  1432  041D                     	;# 
  1433  041E                     	;# 
  1434  041F                     	;# 
  1435  048C                     	;# 
  1436  048C                     	;# 
  1437  048D                     	;# 
  1438  048E                     	;# 
  1439  048F                     	;# 
  1440  048F                     	;# 
  1441  0490                     	;# 
  1442  0491                     	;# 
  1443  0492                     	;# 
  1444  0492                     	;# 
  1445  0493                     	;# 
  1446  0494                     	;# 
  1447  0495                     	;# 
  1448  0495                     	;# 
  1449  0496                     	;# 
  1450  0497                     	;# 
  1451  0498                     	;# 
  1452  0499                     	;# 
  1453  049A                     	;# 
  1454  049B                     	;# 
  1455  049C                     	;# 
  1456  049D                     	;# 
  1457  050C                     	;# 
  1458  050C                     	;# 
  1459  050D                     	;# 
  1460  050E                     	;# 
  1461  050F                     	;# 
  1462  050F                     	;# 
  1463  0510                     	;# 
  1464  0511                     	;# 
  1465  0512                     	;# 
  1466  0512                     	;# 
  1467  0513                     	;# 
  1468  0514                     	;# 
  1469  0515                     	;# 
  1470  0515                     	;# 
  1471  0516                     	;# 
  1472  0517                     	;# 
  1473  0518                     	;# 
  1474  0519                     	;# 
  1475  051A                     	;# 
  1476  051B                     	;# 
  1477  051C                     	;# 
  1478  051D                     	;# 
  1479  058C                     	;# 
  1480  058C                     	;# 
  1481  058D                     	;# 
  1482  058E                     	;# 
  1483  058F                     	;# 
  1484  058F                     	;# 
  1485  0590                     	;# 
  1486  0591                     	;# 
  1487  0592                     	;# 
  1488  0593                     	;# 
  1489  060C                     	;# 
  1490  060D                     	;# 
  1491  060E                     	;# 
  1492  060F                     	;# 
  1493  0610                     	;# 
  1494  0611                     	;# 
  1495  0612                     	;# 
  1496  0613                     	;# 
  1497  0614                     	;# 
  1498  0616                     	;# 
  1499  0617                     	;# 
  1500  0618                     	;# 
  1501  0619                     	;# 
  1502  061A                     	;# 
  1503  061B                     	;# 
  1504  061C                     	;# 
  1505  061D                     	;# 
  1506  061E                     	;# 
  1507  068C                     	;# 
  1508  068D                     	;# 
  1509  068E                     	;# 
  1510  068F                     	;# 
  1511  0690                     	;# 
  1512  0691                     	;# 
  1513  0692                     	;# 
  1514  0693                     	;# 
  1515  0694                     	;# 
  1516  070C                     	;# 
  1517  070D                     	;# 
  1518  070E                     	;# 
  1519  070F                     	;# 
  1520  0710                     	;# 
  1521  0711                     	;# 
  1522  0712                     	;# 
  1523  0713                     	;# 
  1524  0714                     	;# 
  1525  0716                     	;# 
  1526  0717                     	;# 
  1527  0718                     	;# 
  1528  0719                     	;# 
  1529  071A                     	;# 
  1530  071B                     	;# 
  1531  071C                     	;# 
  1532  071D                     	;# 
  1533  071E                     	;# 
  1534  0796                     	;# 
  1535  0797                     	;# 
  1536  0798                     	;# 
  1537  0799                     	;# 
  1538  079A                     	;# 
  1539  079B                     	;# 
  1540  080C                     	;# 
  1541  080D                     	;# 
  1542  080E                     	;# 
  1543  080F                     	;# 
  1544  0810                     	;# 
  1545  0811                     	;# 
  1546  0812                     	;# 
  1547  0813                     	;# 
  1548  0814                     	;# 
  1549  081A                     	;# 
  1550  081B                     	;# 
  1551  081C                     	;# 
  1552  081D                     	;# 
  1553  081E                     	;# 
  1554  081F                     	;# 
  1555  088C                     	;# 
  1556  088D                     	;# 
  1557  088E                     	;# 
  1558  088F                     	;# 
  1559  0890                     	;# 
  1560  0891                     	;# 
  1561  0892                     	;# 
  1562  0893                     	;# 
  1563  0895                     	;# 
  1564  0896                     	;# 
  1565  0897                     	;# 
  1566  0898                     	;# 
  1567  0899                     	;# 
  1568  089A                     	;# 
  1569  089B                     	;# 
  1570  090C                     	;# 
  1571  090E                     	;# 
  1572  090F                     	;# 
  1573  091F                     	;# 
  1574  091F                     	;# 
  1575  098F                     	;# 
  1576  098F                     	;# 
  1577  0990                     	;# 
  1578  0991                     	;# 
  1579  0992                     	;# 
  1580  0993                     	;# 
  1581  0994                     	;# 
  1582  0995                     	;# 
  1583  0996                     	;# 
  1584  0997                     	;# 
  1585  0E0F                     	;# 
  1586  0E10                     	;# 
  1587  0E11                     	;# 
  1588  0E12                     	;# 
  1589  0E13                     	;# 
  1590  0E14                     	;# 
  1591  0E15                     	;# 
  1592  0E16                     	;# 
  1593  0E17                     	;# 
  1594  0E18                     	;# 
  1595  0E19                     	;# 
  1596  0E1A                     	;# 
  1597  0E1B                     	;# 
  1598  0E1C                     	;# 
  1599  0E1D                     	;# 
  1600  0E1E                     	;# 
  1601  0E1F                     	;# 
  1602  0E20                     	;# 
  1603  0E21                     	;# 
  1604  0E22                     	;# 
  1605  0E23                     	;# 
  1606  0E24                     	;# 
  1607  0E25                     	;# 
  1608  0E26                     	;# 
  1609  0E27                     	;# 
  1610  0E28                     	;# 
  1611  0E29                     	;# 
  1612  0E2A                     	;# 
  1613  0E2B                     	;# 
  1614  0E2C                     	;# 
  1615  0E2D                     	;# 
  1616  0E2E                     	;# 
  1617  0E2F                     	;# 
  1618  0E30                     	;# 
  1619  0E31                     	;# 
  1620  0E32                     	;# 
  1621  0E33                     	;# 
  1622  0E34                     	;# 
  1623  0E35                     	;# 
  1624  0E36                     	;# 
  1625  0E37                     	;# 
  1626  0E8F                     	;# 
  1627  0E90                     	;# 
  1628  0E91                     	;# 
  1629  0E92                     	;# 
  1630  0E93                     	;# 
  1631  0E94                     	;# 
  1632  0E95                     	;# 
  1633  0E96                     	;# 
  1634  0E97                     	;# 
  1635  0E9C                     	;# 
  1636  0E9D                     	;# 
  1637  0E9E                     	;# 
  1638  0EA1                     	;# 
  1639  0EA2                     	;# 
  1640  0EA3                     	;# 
  1641  0EA4                     	;# 
  1642  0EA5                     	;# 
  1643  0EA9                     	;# 
  1644  0EAA                     	;# 
  1645  0EAB                     	;# 
  1646  0EAC                     	;# 
  1647  0EB1                     	;# 
  1648  0EB2                     	;# 
  1649  0EB3                     	;# 
  1650  0EB8                     	;# 
  1651  0EB9                     	;# 
  1652  0EBA                     	;# 
  1653  0EBB                     	;# 
  1654  0EBC                     	;# 
  1655  0EBD                     	;# 
  1656  0EBE                     	;# 
  1657  0EC3                     	;# 
  1658  0EC5                     	;# 
  1659  0EC6                     	;# 
  1660  0EC7                     	;# 
  1661  0EC8                     	;# 
  1662  0EC9                     	;# 
  1663  0ECA                     	;# 
  1664  0ECB                     	;# 
  1665  0ECC                     	;# 
  1666  0F10                     	;# 
  1667  0F11                     	;# 
  1668  0F12                     	;# 
  1669  0F13                     	;# 
  1670  0F14                     	;# 
  1671  0F15                     	;# 
  1672  0F16                     	;# 
  1673  0F17                     	;# 
  1674  0F18                     	;# 
  1675  0F19                     	;# 
  1676  0F1A                     	;# 
  1677  0F1B                     	;# 
  1678  0F1C                     	;# 
  1679  0F1D                     	;# 
  1680  0F1E                     	;# 
  1681  0F1F                     	;# 
  1682  0F20                     	;# 
  1683  0F21                     	;# 
  1684  0F22                     	;# 
  1685  0F23                     	;# 
  1686  0F24                     	;# 
  1687  0F25                     	;# 
  1688  0F26                     	;# 
  1689  0F27                     	;# 
  1690  0F28                     	;# 
  1691  0F29                     	;# 
  1692  0F2A                     	;# 
  1693  0F2B                     	;# 
  1694  0F2C                     	;# 
  1695  0F2D                     	;# 
  1696  0F2E                     	;# 
  1697  0F2F                     	;# 
  1698  0F30                     	;# 
  1699  0F31                     	;# 
  1700  0F32                     	;# 
  1701  0F38                     	;# 
  1702  0F39                     	;# 
  1703  0F3A                     	;# 
  1704  0F3B                     	;# 
  1705  0F3C                     	;# 
  1706  0F3D                     	;# 
  1707  0F3E                     	;# 
  1708  0F3F                     	;# 
  1709  0F40                     	;# 
  1710  0F41                     	;# 
  1711  0F43                     	;# 
  1712  0F44                     	;# 
  1713  0F45                     	;# 
  1714  0F46                     	;# 
  1715  0F47                     	;# 
  1716  0F48                     	;# 
  1717  0F49                     	;# 
  1718  0F4A                     	;# 
  1719  0F4B                     	;# 
  1720  0F4C                     	;# 
  1721  0F4E                     	;# 
  1722  0F4F                     	;# 
  1723  0F50                     	;# 
  1724  0F51                     	;# 
  1725  0F52                     	;# 
  1726  0F53                     	;# 
  1727  0F54                     	;# 
  1728  0F55                     	;# 
  1729  0F56                     	;# 
  1730  0F57                     	;# 
  1731  0F59                     	;# 
  1732  0F5A                     	;# 
  1733  0F5B                     	;# 
  1734  0F5C                     	;# 
  1735  0F5D                     	;# 
  1736  0F61                     	;# 
  1737  0F62                     	;# 
  1738  0F64                     	;# 
  1739  0F65                     	;# 
  1740  0F66                     	;# 
  1741  0F67                     	;# 
  1742  0F68                     	;# 
  1743  0F69                     	;# 
  1744  0F6A                     	;# 
  1745  0F6B                     	;# 
  1746  0F6C                     	;# 
  1747  0F6D                     	;# 
  1748  0FE4                     	;# 
  1749  0FE5                     	;# 
  1750  0FE6                     	;# 
  1751  0FE7                     	;# 
  1752  0FE8                     	;# 
  1753  0FE9                     	;# 
  1754  0FEA                     	;# 
  1755  0FEB                     	;# 
  1756  0FED                     	;# 
  1757  0FEE                     	;# 
  1758  0FEF                     	;# 
  1759  0000                     	;# 
  1760  0001                     	;# 
  1761  0002                     	;# 
  1762  0003                     	;# 
  1763  0004                     	;# 
  1764  0005                     	;# 
  1765  0006                     	;# 
  1766  0007                     	;# 
  1767  0008                     	;# 
  1768  0009                     	;# 
  1769  000A                     	;# 
  1770  000B                     	;# 
  1771  000C                     	;# 
  1772  000D                     	;# 
  1773  000E                     	;# 
  1774  000F                     	;# 
  1775  0010                     	;# 
  1776  0011                     	;# 
  1777  0012                     	;# 
  1778  0013                     	;# 
  1779  0014                     	;# 
  1780  0015                     	;# 
  1781  0016                     	;# 
  1782  0017                     	;# 
  1783  0018                     	;# 
  1784  0019                     	;# 
  1785  001A                     	;# 
  1786  001C                     	;# 
  1787  001C                     	;# 
  1788  001D                     	;# 
  1789  001D                     	;# 
  1790  001E                     	;# 
  1791  001F                     	;# 
  1792  008C                     	;# 
  1793  008C                     	;# 
  1794  008D                     	;# 
  1795  008E                     	;# 
  1796  008E                     	;# 
  1797  008F                     	;# 
  1798  0090                     	;# 
  1799  0090                     	;# 
  1800  0091                     	;# 
  1801  0093                     	;# 
  1802  0094                     	;# 
  1803  0095                     	;# 
  1804  0096                     	;# 
  1805  0097                     	;# 
  1806  0098                     	;# 
  1807  0099                     	;# 
  1808  009A                     	;# 
  1809  009B                     	;# 
  1810  009C                     	;# 
  1811  009D                     	;# 
  1812  009E                     	;# 
  1813  010C                     	;# 
  1814  010D                     	;# 
  1815  010E                     	;# 
  1816  010E                     	;# 
  1817  010F                     	;# 
  1818  0110                     	;# 
  1819  0110                     	;# 
  1820  0111                     	;# 
  1821  0112                     	;# 
  1822  0112                     	;# 
  1823  0113                     	;# 
  1824  0114                     	;# 
  1825  0114                     	;# 
  1826  0115                     	;# 
  1827  0116                     	;# 
  1828  0116                     	;# 
  1829  0117                     	;# 
  1830  0119                     	;# 
  1831  0119                     	;# 
  1832  0119                     	;# 
  1833  011A                     	;# 
  1834  011A                     	;# 
  1835  011A                     	;# 
  1836  011B                     	;# 
  1837  011B                     	;# 
  1838  011B                     	;# 
  1839  011B                     	;# 
  1840  011B                     	;# 
  1841  011C                     	;# 
  1842  011C                     	;# 
  1843  011C                     	;# 
  1844  011D                     	;# 
  1845  011D                     	;# 
  1846  011D                     	;# 
  1847  011E                     	;# 
  1848  011E                     	;# 
  1849  011E                     	;# 
  1850  011F                     	;# 
  1851  011F                     	;# 
  1852  011F                     	;# 
  1853  011F                     	;# 
  1854  011F                     	;# 
  1855  018C                     	;# 
  1856  018D                     	;# 
  1857  018E                     	;# 
  1858  018F                     	;# 
  1859  0190                     	;# 
  1860  0191                     	;# 
  1861  0192                     	;# 
  1862  0196                     	;# 
  1863  0197                     	;# 
  1864  0198                     	;# 
  1865  0199                     	;# 
  1866  019A                     	;# 
  1867  019B                     	;# 
  1868  019C                     	;# 
  1869  020C                     	;# 
  1870  020C                     	;# 
  1871  020D                     	;# 
  1872  020E                     	;# 
  1873  020F                     	;# 
  1874  020F                     	;# 
  1875  0210                     	;# 
  1876  0210                     	;# 
  1877  0211                     	;# 
  1878  0211                     	;# 
  1879  0212                     	;# 
  1880  0212                     	;# 
  1881  0213                     	;# 
  1882  0214                     	;# 
  1883  0215                     	;# 
  1884  0215                     	;# 
  1885  0216                     	;# 
  1886  0216                     	;# 
  1887  0217                     	;# 
  1888  0217                     	;# 
  1889  0218                     	;# 
  1890  0218                     	;# 
  1891  0219                     	;# 
  1892  021A                     	;# 
  1893  021B                     	;# 
  1894  021B                     	;# 
  1895  021C                     	;# 
  1896  021C                     	;# 
  1897  021D                     	;# 
  1898  021D                     	;# 
  1899  021E                     	;# 
  1900  021F                     	;# 
  1901  028C                     	;# 
  1902  028C                     	;# 
  1903  028D                     	;# 
  1904  028D                     	;# 
  1905  028E                     	;# 
  1906  028F                     	;# 
  1907  0290                     	;# 
  1908  0290                     	;# 
  1909  0291                     	;# 
  1910  0292                     	;# 
  1911  0292                     	;# 
  1912  0293                     	;# 
  1913  0293                     	;# 
  1914  0294                     	;# 
  1915  0295                     	;# 
  1916  0296                     	;# 
  1917  0296                     	;# 
  1918  0297                     	;# 
  1919  0298                     	;# 
  1920  0298                     	;# 
  1921  0299                     	;# 
  1922  0299                     	;# 
  1923  029A                     	;# 
  1924  029B                     	;# 
  1925  029C                     	;# 
  1926  029C                     	;# 
  1927  029D                     	;# 
  1928  030C                     	;# 
  1929  030C                     	;# 
  1930  030D                     	;# 
  1931  030E                     	;# 
  1932  030F                     	;# 
  1933  0310                     	;# 
  1934  0310                     	;# 
  1935  0311                     	;# 
  1936  0312                     	;# 
  1937  0313                     	;# 
  1938  0314                     	;# 
  1939  0314                     	;# 
  1940  0315                     	;# 
  1941  0316                     	;# 
  1942  0317                     	;# 
  1943  0318                     	;# 
  1944  0318                     	;# 
  1945  0319                     	;# 
  1946  031A                     	;# 
  1947  031B                     	;# 
  1948  031C                     	;# 
  1949  031C                     	;# 
  1950  031D                     	;# 
  1951  031E                     	;# 
  1952  031F                     	;# 
  1953  038C                     	;# 
  1954  038C                     	;# 
  1955  038D                     	;# 
  1956  038E                     	;# 
  1957  0390                     	;# 
  1958  0390                     	;# 
  1959  0391                     	;# 
  1960  0392                     	;# 
  1961  040C                     	;# 
  1962  040D                     	;# 
  1963  040E                     	;# 
  1964  040F                     	;# 
  1965  0410                     	;# 
  1966  0411                     	;# 
  1967  0416                     	;# 
  1968  0416                     	;# 
  1969  0417                     	;# 
  1970  0418                     	;# 
  1971  0418                     	;# 
  1972  0419                     	;# 
  1973  041A                     	;# 
  1974  041A                     	;# 
  1975  041B                     	;# 
  1976  041C                     	;# 
  1977  041C                     	;# 
  1978  041D                     	;# 
  1979  041E                     	;# 
  1980  041F                     	;# 
  1981  048C                     	;# 
  1982  048C                     	;# 
  1983  048D                     	;# 
  1984  048E                     	;# 
  1985  048F                     	;# 
  1986  048F                     	;# 
  1987  0490                     	;# 
  1988  0491                     	;# 
  1989  0492                     	;# 
  1990  0492                     	;# 
  1991  0493                     	;# 
  1992  0494                     	;# 
  1993  0495                     	;# 
  1994  0495                     	;# 
  1995  0496                     	;# 
  1996  0497                     	;# 
  1997  0498                     	;# 
  1998  0499                     	;# 
  1999  049A                     	;# 
  2000  049B                     	;# 
  2001  049C                     	;# 
  2002  049D                     	;# 
  2003  050C                     	;# 
  2004  050C                     	;# 
  2005  050D                     	;# 
  2006  050E                     	;# 
  2007  050F                     	;# 
  2008  050F                     	;# 
  2009  0510                     	;# 
  2010  0511                     	;# 
  2011  0512                     	;# 
  2012  0512                     	;# 
  2013  0513                     	;# 
  2014  0514                     	;# 
  2015  0515                     	;# 
  2016  0515                     	;# 
  2017  0516                     	;# 
  2018  0517                     	;# 
  2019  0518                     	;# 
  2020  0519                     	;# 
  2021  051A                     	;# 
  2022  051B                     	;# 
  2023  051C                     	;# 
  2024  051D                     	;# 
  2025  058C                     	;# 
  2026  058C                     	;# 
  2027  058D                     	;# 
  2028  058E                     	;# 
  2029  058F                     	;# 
  2030  058F                     	;# 
  2031  0590                     	;# 
  2032  0591                     	;# 
  2033  0592                     	;# 
  2034  0593                     	;# 
  2035  060C                     	;# 
  2036  060D                     	;# 
  2037  060E                     	;# 
  2038  060F                     	;# 
  2039  0610                     	;# 
  2040  0611                     	;# 
  2041  0612                     	;# 
  2042  0613                     	;# 
  2043  0614                     	;# 
  2044  0616                     	;# 
  2045  0617                     	;# 
  2046  0618                     	;# 
  2047  0619                     	;# 
  2048  061A                     	;# 
  2049  061B                     	;# 
  2050  061C                     	;# 
  2051  061D                     	;# 
  2052  061E                     	;# 
  2053  068C                     	;# 
  2054  068D                     	;# 
  2055  068E                     	;# 
  2056  068F                     	;# 
  2057  0690                     	;# 
  2058  0691                     	;# 
  2059  0692                     	;# 
  2060  0693                     	;# 
  2061  0694                     	;# 
  2062  070C                     	;# 
  2063  070D                     	;# 
  2064  070E                     	;# 
  2065  070F                     	;# 
  2066  0710                     	;# 
  2067  0711                     	;# 
  2068  0712                     	;# 
  2069  0713                     	;# 
  2070  0714                     	;# 
  2071  0716                     	;# 
  2072  0717                     	;# 
  2073  0718                     	;# 
  2074  0719                     	;# 
  2075  071A                     	;# 
  2076  071B                     	;# 
  2077  071C                     	;# 
  2078  071D                     	;# 
  2079  071E                     	;# 
  2080  0796                     	;# 
  2081  0797                     	;# 
  2082  0798                     	;# 
  2083  0799                     	;# 
  2084  079A                     	;# 
  2085  079B                     	;# 
  2086  080C                     	;# 
  2087  080D                     	;# 
  2088  080E                     	;# 
  2089  080F                     	;# 
  2090  0810                     	;# 
  2091  0811                     	;# 
  2092  0812                     	;# 
  2093  0813                     	;# 
  2094  0814                     	;# 
  2095  081A                     	;# 
  2096  081B                     	;# 
  2097  081C                     	;# 
  2098  081D                     	;# 
  2099  081E                     	;# 
  2100  081F                     	;# 
  2101  088C                     	;# 
  2102  088D                     	;# 
  2103  088E                     	;# 
  2104  088F                     	;# 
  2105  0890                     	;# 
  2106  0891                     	;# 
  2107  0892                     	;# 
  2108  0893                     	;# 
  2109  0895                     	;# 
  2110  0896                     	;# 
  2111  0897                     	;# 
  2112  0898                     	;# 
  2113  0899                     	;# 
  2114  089A                     	;# 
  2115  089B                     	;# 
  2116  090C                     	;# 
  2117  090E                     	;# 
  2118  090F                     	;# 
  2119  091F                     	;# 
  2120  091F                     	;# 
  2121  098F                     	;# 
  2122  098F                     	;# 
  2123  0990                     	;# 
  2124  0991                     	;# 
  2125  0992                     	;# 
  2126  0993                     	;# 
  2127  0994                     	;# 
  2128  0995                     	;# 
  2129  0996                     	;# 
  2130  0997                     	;# 
  2131  0E0F                     	;# 
  2132  0E10                     	;# 
  2133  0E11                     	;# 
  2134  0E12                     	;# 
  2135  0E13                     	;# 
  2136  0E14                     	;# 
  2137  0E15                     	;# 
  2138  0E16                     	;# 
  2139  0E17                     	;# 
  2140  0E18                     	;# 
  2141  0E19                     	;# 
  2142  0E1A                     	;# 
  2143  0E1B                     	;# 
  2144  0E1C                     	;# 
  2145  0E1D                     	;# 
  2146  0E1E                     	;# 
  2147  0E1F                     	;# 
  2148  0E20                     	;# 
  2149  0E21                     	;# 
  2150  0E22                     	;# 
  2151  0E23                     	;# 
  2152  0E24                     	;# 
  2153  0E25                     	;# 
  2154  0E26                     	;# 
  2155  0E27                     	;# 
  2156  0E28                     	;# 
  2157  0E29                     	;# 
  2158  0E2A                     	;# 
  2159  0E2B                     	;# 
  2160  0E2C                     	;# 
  2161  0E2D                     	;# 
  2162  0E2E                     	;# 
  2163  0E2F                     	;# 
  2164  0E30                     	;# 
  2165  0E31                     	;# 
  2166  0E32                     	;# 
  2167  0E33                     	;# 
  2168  0E34                     	;# 
  2169  0E35                     	;# 
  2170  0E36                     	;# 
  2171  0E37                     	;# 
  2172  0E8F                     	;# 
  2173  0E90                     	;# 
  2174  0E91                     	;# 
  2175  0E92                     	;# 
  2176  0E93                     	;# 
  2177  0E94                     	;# 
  2178  0E95                     	;# 
  2179  0E96                     	;# 
  2180  0E97                     	;# 
  2181  0E9C                     	;# 
  2182  0E9D                     	;# 
  2183  0E9E                     	;# 
  2184  0EA1                     	;# 
  2185  0EA2                     	;# 
  2186  0EA3                     	;# 
  2187  0EA4                     	;# 
  2188  0EA5                     	;# 
  2189  0EA9                     	;# 
  2190  0EAA                     	;# 
  2191  0EAB                     	;# 
  2192  0EAC                     	;# 
  2193  0EB1                     	;# 
  2194  0EB2                     	;# 
  2195  0EB3                     	;# 
  2196  0EB8                     	;# 
  2197  0EB9                     	;# 
  2198  0EBA                     	;# 
  2199  0EBB                     	;# 
  2200  0EBC                     	;# 
  2201  0EBD                     	;# 
  2202  0EBE                     	;# 
  2203  0EC3                     	;# 
  2204  0EC5                     	;# 
  2205  0EC6                     	;# 
  2206  0EC7                     	;# 
  2207  0EC8                     	;# 
  2208  0EC9                     	;# 
  2209  0ECA                     	;# 
  2210  0ECB                     	;# 
  2211  0ECC                     	;# 
  2212  0F10                     	;# 
  2213  0F11                     	;# 
  2214  0F12                     	;# 
  2215  0F13                     	;# 
  2216  0F14                     	;# 
  2217  0F15                     	;# 
  2218  0F16                     	;# 
  2219  0F17                     	;# 
  2220  0F18                     	;# 
  2221  0F19                     	;# 
  2222  0F1A                     	;# 
  2223  0F1B                     	;# 
  2224  0F1C                     	;# 
  2225  0F1D                     	;# 
  2226  0F1E                     	;# 
  2227  0F1F                     	;# 
  2228  0F20                     	;# 
  2229  0F21                     	;# 
  2230  0F22                     	;# 
  2231  0F23                     	;# 
  2232  0F24                     	;# 
  2233  0F25                     	;# 
  2234  0F26                     	;# 
  2235  0F27                     	;# 
  2236  0F28                     	;# 
  2237  0F29                     	;# 
  2238  0F2A                     	;# 
  2239  0F2B                     	;# 
  2240  0F2C                     	;# 
  2241  0F2D                     	;# 
  2242  0F2E                     	;# 
  2243  0F2F                     	;# 
  2244  0F30                     	;# 
  2245  0F31                     	;# 
  2246  0F32                     	;# 
  2247  0F38                     	;# 
  2248  0F39                     	;# 
  2249  0F3A                     	;# 
  2250  0F3B                     	;# 
  2251  0F3C                     	;# 
  2252  0F3D                     	;# 
  2253  0F3E                     	;# 
  2254  0F3F                     	;# 
  2255  0F40                     	;# 
  2256  0F41                     	;# 
  2257  0F43                     	;# 
  2258  0F44                     	;# 
  2259  0F45                     	;# 
  2260  0F46                     	;# 
  2261  0F47                     	;# 
  2262  0F48                     	;# 
  2263  0F49                     	;# 
  2264  0F4A                     	;# 
  2265  0F4B                     	;# 
  2266  0F4C                     	;# 
  2267  0F4E                     	;# 
  2268  0F4F                     	;# 
  2269  0F50                     	;# 
  2270  0F51                     	;# 
  2271  0F52                     	;# 
  2272  0F53                     	;# 
  2273  0F54                     	;# 
  2274  0F55                     	;# 
  2275  0F56                     	;# 
  2276  0F57                     	;# 
  2277  0F59                     	;# 
  2278  0F5A                     	;# 
  2279  0F5B                     	;# 
  2280  0F5C                     	;# 
  2281  0F5D                     	;# 
  2282  0F61                     	;# 
  2283  0F62                     	;# 
  2284  0F64                     	;# 
  2285  0F65                     	;# 
  2286  0F66                     	;# 
  2287  0F67                     	;# 
  2288  0F68                     	;# 
  2289  0F69                     	;# 
  2290  0F6A                     	;# 
  2291  0F6B                     	;# 
  2292  0F6C                     	;# 
  2293  0F6D                     	;# 
  2294  0FE4                     	;# 
  2295  0FE5                     	;# 
  2296  0FE6                     	;# 
  2297  0FE7                     	;# 
  2298  0FE8                     	;# 
  2299  0FE9                     	;# 
  2300  0FEA                     	;# 
  2301  0FEB                     	;# 
  2302  0FED                     	;# 
  2303  0FEE                     	;# 
  2304  0FEF                     	;# 
  2305  0000                     	;# 
  2306  0001                     	;# 
  2307  0002                     	;# 
  2308  0003                     	;# 
  2309  0004                     	;# 
  2310  0005                     	;# 
  2311  0006                     	;# 
  2312  0007                     	;# 
  2313  0008                     	;# 
  2314  0009                     	;# 
  2315  000A                     	;# 
  2316  000B                     	;# 
  2317  000C                     	;# 
  2318  000D                     	;# 
  2319  000E                     	;# 
  2320  000F                     	;# 
  2321  0010                     	;# 
  2322  0011                     	;# 
  2323  0012                     	;# 
  2324  0013                     	;# 
  2325  0014                     	;# 
  2326  0015                     	;# 
  2327  0016                     	;# 
  2328  0017                     	;# 
  2329  0018                     	;# 
  2330  0019                     	;# 
  2331  001A                     	;# 
  2332  001C                     	;# 
  2333  001C                     	;# 
  2334  001D                     	;# 
  2335  001D                     	;# 
  2336  001E                     	;# 
  2337  001F                     	;# 
  2338  008C                     	;# 
  2339  008C                     	;# 
  2340  008D                     	;# 
  2341  008E                     	;# 
  2342  008E                     	;# 
  2343  008F                     	;# 
  2344  0090                     	;# 
  2345  0090                     	;# 
  2346  0091                     	;# 
  2347  0093                     	;# 
  2348  0094                     	;# 
  2349  0095                     	;# 
  2350  0096                     	;# 
  2351  0097                     	;# 
  2352  0098                     	;# 
  2353  0099                     	;# 
  2354  009A                     	;# 
  2355  009B                     	;# 
  2356  009C                     	;# 
  2357  009D                     	;# 
  2358  009E                     	;# 
  2359  010C                     	;# 
  2360  010D                     	;# 
  2361  010E                     	;# 
  2362  010E                     	;# 
  2363  010F                     	;# 
  2364  0110                     	;# 
  2365  0110                     	;# 
  2366  0111                     	;# 
  2367  0112                     	;# 
  2368  0112                     	;# 
  2369  0113                     	;# 
  2370  0114                     	;# 
  2371  0114                     	;# 
  2372  0115                     	;# 
  2373  0116                     	;# 
  2374  0116                     	;# 
  2375  0117                     	;# 
  2376  0119                     	;# 
  2377  0119                     	;# 
  2378  0119                     	;# 
  2379  011A                     	;# 
  2380  011A                     	;# 
  2381  011A                     	;# 
  2382  011B                     	;# 
  2383  011B                     	;# 
  2384  011B                     	;# 
  2385  011B                     	;# 
  2386  011B                     	;# 
  2387  011C                     	;# 
  2388  011C                     	;# 
  2389  011C                     	;# 
  2390  011D                     	;# 
  2391  011D                     	;# 
  2392  011D                     	;# 
  2393  011E                     	;# 
  2394  011E                     	;# 
  2395  011E                     	;# 
  2396  011F                     	;# 
  2397  011F                     	;# 
  2398  011F                     	;# 
  2399  011F                     	;# 
  2400  011F                     	;# 
  2401  018C                     	;# 
  2402  018D                     	;# 
  2403  018E                     	;# 
  2404  018F                     	;# 
  2405  0190                     	;# 
  2406  0191                     	;# 
  2407  0192                     	;# 
  2408  0196                     	;# 
  2409  0197                     	;# 
  2410  0198                     	;# 
  2411  0199                     	;# 
  2412  019A                     	;# 
  2413  019B                     	;# 
  2414  019C                     	;# 
  2415  020C                     	;# 
  2416  020C                     	;# 
  2417  020D                     	;# 
  2418  020E                     	;# 
  2419  020F                     	;# 
  2420  020F                     	;# 
  2421  0210                     	;# 
  2422  0210                     	;# 
  2423  0211                     	;# 
  2424  0211                     	;# 
  2425  0212                     	;# 
  2426  0212                     	;# 
  2427  0213                     	;# 
  2428  0214                     	;# 
  2429  0215                     	;# 
  2430  0215                     	;# 
  2431  0216                     	;# 
  2432  0216                     	;# 
  2433  0217                     	;# 
  2434  0217                     	;# 
  2435  0218                     	;# 
  2436  0218                     	;# 
  2437  0219                     	;# 
  2438  021A                     	;# 
  2439  021B                     	;# 
  2440  021B                     	;# 
  2441  021C                     	;# 
  2442  021C                     	;# 
  2443  021D                     	;# 
  2444  021D                     	;# 
  2445  021E                     	;# 
  2446  021F                     	;# 
  2447  028C                     	;# 
  2448  028C                     	;# 
  2449  028D                     	;# 
  2450  028D                     	;# 
  2451  028E                     	;# 
  2452  028F                     	;# 
  2453  0290                     	;# 
  2454  0290                     	;# 
  2455  0291                     	;# 
  2456  0292                     	;# 
  2457  0292                     	;# 
  2458  0293                     	;# 
  2459  0293                     	;# 
  2460  0294                     	;# 
  2461  0295                     	;# 
  2462  0296                     	;# 
  2463  0296                     	;# 
  2464  0297                     	;# 
  2465  0298                     	;# 
  2466  0298                     	;# 
  2467  0299                     	;# 
  2468  0299                     	;# 
  2469  029A                     	;# 
  2470  029B                     	;# 
  2471  029C                     	;# 
  2472  029C                     	;# 
  2473  029D                     	;# 
  2474  030C                     	;# 
  2475  030C                     	;# 
  2476  030D                     	;# 
  2477  030E                     	;# 
  2478  030F                     	;# 
  2479  0310                     	;# 
  2480  0310                     	;# 
  2481  0311                     	;# 
  2482  0312                     	;# 
  2483  0313                     	;# 
  2484  0314                     	;# 
  2485  0314                     	;# 
  2486  0315                     	;# 
  2487  0316                     	;# 
  2488  0317                     	;# 
  2489  0318                     	;# 
  2490  0318                     	;# 
  2491  0319                     	;# 
  2492  031A                     	;# 
  2493  031B                     	;# 
  2494  031C                     	;# 
  2495  031C                     	;# 
  2496  031D                     	;# 
  2497  031E                     	;# 
  2498  031F                     	;# 
  2499  038C                     	;# 
  2500  038C                     	;# 
  2501  038D                     	;# 
  2502  038E                     	;# 
  2503  0390                     	;# 
  2504  0390                     	;# 
  2505  0391                     	;# 
  2506  0392                     	;# 
  2507  040C                     	;# 
  2508  040D                     	;# 
  2509  040E                     	;# 
  2510  040F                     	;# 
  2511  0410                     	;# 
  2512  0411                     	;# 
  2513  0416                     	;# 
  2514  0416                     	;# 
  2515  0417                     	;# 
  2516  0418                     	;# 
  2517  0418                     	;# 
  2518  0419                     	;# 
  2519  041A                     	;# 
  2520  041A                     	;# 
  2521  041B                     	;# 
  2522  041C                     	;# 
  2523  041C                     	;# 
  2524  041D                     	;# 
  2525  041E                     	;# 
  2526  041F                     	;# 
  2527  048C                     	;# 
  2528  048C                     	;# 
  2529  048D                     	;# 
  2530  048E                     	;# 
  2531  048F                     	;# 
  2532  048F                     	;# 
  2533  0490                     	;# 
  2534  0491                     	;# 
  2535  0492                     	;# 
  2536  0492                     	;# 
  2537  0493                     	;# 
  2538  0494                     	;# 
  2539  0495                     	;# 
  2540  0495                     	;# 
  2541  0496                     	;# 
  2542  0497                     	;# 
  2543  0498                     	;# 
  2544  0499                     	;# 
  2545  049A                     	;# 
  2546  049B                     	;# 
  2547  049C                     	;# 
  2548  049D                     	;# 
  2549  050C                     	;# 
  2550  050C                     	;# 
  2551  050D                     	;# 
  2552  050E                     	;# 
  2553  050F                     	;# 
  2554  050F                     	;# 
  2555  0510                     	;# 
  2556  0511                     	;# 
  2557  0512                     	;# 
  2558  0512                     	;# 
  2559  0513                     	;# 
  2560  0514                     	;# 
  2561  0515                     	;# 
  2562  0515                     	;# 
  2563  0516                     	;# 
  2564  0517                     	;# 
  2565  0518                     	;# 
  2566  0519                     	;# 
  2567  051A                     	;# 
  2568  051B                     	;# 
  2569  051C                     	;# 
  2570  051D                     	;# 
  2571  058C                     	;# 
  2572  058C                     	;# 
  2573  058D                     	;# 
  2574  058E                     	;# 
  2575  058F                     	;# 
  2576  058F                     	;# 
  2577  0590                     	;# 
  2578  0591                     	;# 
  2579  0592                     	;# 
  2580  0593                     	;# 
  2581  060C                     	;# 
  2582  060D                     	;# 
  2583  060E                     	;# 
  2584  060F                     	;# 
  2585  0610                     	;# 
  2586  0611                     	;# 
  2587  0612                     	;# 
  2588  0613                     	;# 
  2589  0614                     	;# 
  2590  0616                     	;# 
  2591  0617                     	;# 
  2592  0618                     	;# 
  2593  0619                     	;# 
  2594  061A                     	;# 
  2595  061B                     	;# 
  2596  061C                     	;# 
  2597  061D                     	;# 
  2598  061E                     	;# 
  2599  068C                     	;# 
  2600  068D                     	;# 
  2601  068E                     	;# 
  2602  068F                     	;# 
  2603  0690                     	;# 
  2604  0691                     	;# 
  2605  0692                     	;# 
  2606  0693                     	;# 
  2607  0694                     	;# 
  2608  070C                     	;# 
  2609  070D                     	;# 
  2610  070E                     	;# 
  2611  070F                     	;# 
  2612  0710                     	;# 
  2613  0711                     	;# 
  2614  0712                     	;# 
  2615  0713                     	;# 
  2616  0714                     	;# 
  2617  0716                     	;# 
  2618  0717                     	;# 
  2619  0718                     	;# 
  2620  0719                     	;# 
  2621  071A                     	;# 
  2622  071B                     	;# 
  2623  071C                     	;# 
  2624  071D                     	;# 
  2625  071E                     	;# 
  2626  0796                     	;# 
  2627  0797                     	;# 
  2628  0798                     	;# 
  2629  0799                     	;# 
  2630  079A                     	;# 
  2631  079B                     	;# 
  2632  080C                     	;# 
  2633  080D                     	;# 
  2634  080E                     	;# 
  2635  080F                     	;# 
  2636  0810                     	;# 
  2637  0811                     	;# 
  2638  0812                     	;# 
  2639  0813                     	;# 
  2640  0814                     	;# 
  2641  081A                     	;# 
  2642  081B                     	;# 
  2643  081C                     	;# 
  2644  081D                     	;# 
  2645  081E                     	;# 
  2646  081F                     	;# 
  2647  088C                     	;# 
  2648  088D                     	;# 
  2649  088E                     	;# 
  2650  088F                     	;# 
  2651  0890                     	;# 
  2652  0891                     	;# 
  2653  0892                     	;# 
  2654  0893                     	;# 
  2655  0895                     	;# 
  2656  0896                     	;# 
  2657  0897                     	;# 
  2658  0898                     	;# 
  2659  0899                     	;# 
  2660  089A                     	;# 
  2661  089B                     	;# 
  2662  090C                     	;# 
  2663  090E                     	;# 
  2664  090F                     	;# 
  2665  091F                     	;# 
  2666  091F                     	;# 
  2667  098F                     	;# 
  2668  098F                     	;# 
  2669  0990                     	;# 
  2670  0991                     	;# 
  2671  0992                     	;# 
  2672  0993                     	;# 
  2673  0994                     	;# 
  2674  0995                     	;# 
  2675  0996                     	;# 
  2676  0997                     	;# 
  2677  0E0F                     	;# 
  2678  0E10                     	;# 
  2679  0E11                     	;# 
  2680  0E12                     	;# 
  2681  0E13                     	;# 
  2682  0E14                     	;# 
  2683  0E15                     	;# 
  2684  0E16                     	;# 
  2685  0E17                     	;# 
  2686  0E18                     	;# 
  2687  0E19                     	;# 
  2688  0E1A                     	;# 
  2689  0E1B                     	;# 
  2690  0E1C                     	;# 
  2691  0E1D                     	;# 
  2692  0E1E                     	;# 
  2693  0E1F                     	;# 
  2694  0E20                     	;# 
  2695  0E21                     	;# 
  2696  0E22                     	;# 
  2697  0E23                     	;# 
  2698  0E24                     	;# 
  2699  0E25                     	;# 
  2700  0E26                     	;# 
  2701  0E27                     	;# 
  2702  0E28                     	;# 
  2703  0E29                     	;# 
  2704  0E2A                     	;# 
  2705  0E2B                     	;# 
  2706  0E2C                     	;# 
  2707  0E2D                     	;# 
  2708  0E2E                     	;# 
  2709  0E2F                     	;# 
  2710  0E30                     	;# 
  2711  0E31                     	;# 
  2712  0E32                     	;# 
  2713  0E33                     	;# 
  2714  0E34                     	;# 
  2715  0E35                     	;# 
  2716  0E36                     	;# 
  2717  0E37                     	;# 
  2718  0E8F                     	;# 
  2719  0E90                     	;# 
  2720  0E91                     	;# 
  2721  0E92                     	;# 
  2722  0E93                     	;# 
  2723  0E94                     	;# 
  2724  0E95                     	;# 
  2725  0E96                     	;# 
  2726  0E97                     	;# 
  2727  0E9C                     	;# 
  2728  0E9D                     	;# 
  2729  0E9E                     	;# 
  2730  0EA1                     	;# 
  2731  0EA2                     	;# 
  2732  0EA3                     	;# 
  2733  0EA4                     	;# 
  2734  0EA5                     	;# 
  2735  0EA9                     	;# 
  2736  0EAA                     	;# 
  2737  0EAB                     	;# 
  2738  0EAC                     	;# 
  2739  0EB1                     	;# 
  2740  0EB2                     	;# 
  2741  0EB3                     	;# 
  2742  0EB8                     	;# 
  2743  0EB9                     	;# 
  2744  0EBA                     	;# 
  2745  0EBB                     	;# 
  2746  0EBC                     	;# 
  2747  0EBD                     	;# 
  2748  0EBE                     	;# 
  2749  0EC3                     	;# 
  2750  0EC5                     	;# 
  2751  0EC6                     	;# 
  2752  0EC7                     	;# 
  2753  0EC8                     	;# 
  2754  0EC9                     	;# 
  2755  0ECA                     	;# 
  2756  0ECB                     	;# 
  2757  0ECC                     	;# 
  2758  0F10                     	;# 
  2759  0F11                     	;# 
  2760  0F12                     	;# 
  2761  0F13                     	;# 
  2762  0F14                     	;# 
  2763  0F15                     	;# 
  2764  0F16                     	;# 
  2765  0F17                     	;# 
  2766  0F18                     	;# 
  2767  0F19                     	;# 
  2768  0F1A                     	;# 
  2769  0F1B                     	;# 
  2770  0F1C                     	;# 
  2771  0F1D                     	;# 
  2772  0F1E                     	;# 
  2773  0F1F                     	;# 
  2774  0F20                     	;# 
  2775  0F21                     	;# 
  2776  0F22                     	;# 
  2777  0F23                     	;# 
  2778  0F24                     	;# 
  2779  0F25                     	;# 
  2780  0F26                     	;# 
  2781  0F27                     	;# 
  2782  0F28                     	;# 
  2783  0F29                     	;# 
  2784  0F2A                     	;# 
  2785  0F2B                     	;# 
  2786  0F2C                     	;# 
  2787  0F2D                     	;# 
  2788  0F2E                     	;# 
  2789  0F2F                     	;# 
  2790  0F30                     	;# 
  2791  0F31                     	;# 
  2792  0F32                     	;# 
  2793  0F38                     	;# 
  2794  0F39                     	;# 
  2795  0F3A                     	;# 
  2796  0F3B                     	;# 
  2797  0F3C                     	;# 
  2798  0F3D                     	;# 
  2799  0F3E                     	;# 
  2800  0F3F                     	;# 
  2801  0F40                     	;# 
  2802  0F41                     	;# 
  2803  0F43                     	;# 
  2804  0F44                     	;# 
  2805  0F45                     	;# 
  2806  0F46                     	;# 
  2807  0F47                     	;# 
  2808  0F48                     	;# 
  2809  0F49                     	;# 
  2810  0F4A                     	;# 
  2811  0F4B                     	;# 
  2812  0F4C                     	;# 
  2813  0F4E                     	;# 
  2814  0F4F                     	;# 
  2815  0F50                     	;# 
  2816  0F51                     	;# 
  2817  0F52                     	;# 
  2818  0F53                     	;# 
  2819  0F54                     	;# 
  2820  0F55                     	;# 
  2821  0F56                     	;# 
  2822  0F57                     	;# 
  2823  0F59                     	;# 
  2824  0F5A                     	;# 
  2825  0F5B                     	;# 
  2826  0F5C                     	;# 
  2827  0F5D                     	;# 
  2828  0F61                     	;# 
  2829  0F62                     	;# 
  2830  0F64                     	;# 
  2831  0F65                     	;# 
  2832  0F66                     	;# 
  2833  0F67                     	;# 
  2834  0F68                     	;# 
  2835  0F69                     	;# 
  2836  0F6A                     	;# 
  2837  0F6B                     	;# 
  2838  0F6C                     	;# 
  2839  0F6D                     	;# 
  2840  0FE4                     	;# 
  2841  0FE5                     	;# 
  2842  0FE6                     	;# 
  2843  0FE7                     	;# 
  2844  0FE8                     	;# 
  2845  0FE9                     	;# 
  2846  0FEA                     	;# 
  2847  0FEB                     	;# 
  2848  0FED                     	;# 
  2849  0FEE                     	;# 
  2850  0FEF                     	;# 
  2851  0000                     	;# 
  2852  0001                     	;# 
  2853  0002                     	;# 
  2854  0003                     	;# 
  2855  0004                     	;# 
  2856  0005                     	;# 
  2857  0006                     	;# 
  2858  0007                     	;# 
  2859  0008                     	;# 
  2860  0009                     	;# 
  2861  000A                     	;# 
  2862  000B                     	;# 
  2863  000C                     	;# 
  2864  000D                     	;# 
  2865  000E                     	;# 
  2866  000F                     	;# 
  2867  0010                     	;# 
  2868  0011                     	;# 
  2869  0012                     	;# 
  2870  0013                     	;# 
  2871  0014                     	;# 
  2872  0015                     	;# 
  2873  0016                     	;# 
  2874  0017                     	;# 
  2875  0018                     	;# 
  2876  0019                     	;# 
  2877  001A                     	;# 
  2878  001C                     	;# 
  2879  001C                     	;# 
  2880  001D                     	;# 
  2881  001D                     	;# 
  2882  001E                     	;# 
  2883  001F                     	;# 
  2884  008C                     	;# 
  2885  008C                     	;# 
  2886  008D                     	;# 
  2887  008E                     	;# 
  2888  008E                     	;# 
  2889  008F                     	;# 
  2890  0090                     	;# 
  2891  0090                     	;# 
  2892  0091                     	;# 
  2893  0093                     	;# 
  2894  0094                     	;# 
  2895  0095                     	;# 
  2896  0096                     	;# 
  2897  0097                     	;# 
  2898  0098                     	;# 
  2899  0099                     	;# 
  2900  009A                     	;# 
  2901  009B                     	;# 
  2902  009C                     	;# 
  2903  009D                     	;# 
  2904  009E                     	;# 
  2905  010C                     	;# 
  2906  010D                     	;# 
  2907  010E                     	;# 
  2908  010E                     	;# 
  2909  010F                     	;# 
  2910  0110                     	;# 
  2911  0110                     	;# 
  2912  0111                     	;# 
  2913  0112                     	;# 
  2914  0112                     	;# 
  2915  0113                     	;# 
  2916  0114                     	;# 
  2917  0114                     	;# 
  2918  0115                     	;# 
  2919  0116                     	;# 
  2920  0116                     	;# 
  2921  0117                     	;# 
  2922  0119                     	;# 
  2923  0119                     	;# 
  2924  0119                     	;# 
  2925  011A                     	;# 
  2926  011A                     	;# 
  2927  011A                     	;# 
  2928  011B                     	;# 
  2929  011B                     	;# 
  2930  011B                     	;# 
  2931  011B                     	;# 
  2932  011B                     	;# 
  2933  011C                     	;# 
  2934  011C                     	;# 
  2935  011C                     	;# 
  2936  011D                     	;# 
  2937  011D                     	;# 
  2938  011D                     	;# 
  2939  011E                     	;# 
  2940  011E                     	;# 
  2941  011E                     	;# 
  2942  011F                     	;# 
  2943  011F                     	;# 
  2944  011F                     	;# 
  2945  011F                     	;# 
  2946  011F                     	;# 
  2947  018C                     	;# 
  2948  018D                     	;# 
  2949  018E                     	;# 
  2950  018F                     	;# 
  2951  0190                     	;# 
  2952  0191                     	;# 
  2953  0192                     	;# 
  2954  0196                     	;# 
  2955  0197                     	;# 
  2956  0198                     	;# 
  2957  0199                     	;# 
  2958  019A                     	;# 
  2959  019B                     	;# 
  2960  019C                     	;# 
  2961  020C                     	;# 
  2962  020C                     	;# 
  2963  020D                     	;# 
  2964  020E                     	;# 
  2965  020F                     	;# 
  2966  020F                     	;# 
  2967  0210                     	;# 
  2968  0210                     	;# 
  2969  0211                     	;# 
  2970  0211                     	;# 
  2971  0212                     	;# 
  2972  0212                     	;# 
  2973  0213                     	;# 
  2974  0214                     	;# 
  2975  0215                     	;# 
  2976  0215                     	;# 
  2977  0216                     	;# 
  2978  0216                     	;# 
  2979  0217                     	;# 
  2980  0217                     	;# 
  2981  0218                     	;# 
  2982  0218                     	;# 
  2983  0219                     	;# 
  2984  021A                     	;# 
  2985  021B                     	;# 
  2986  021B                     	;# 
  2987  021C                     	;# 
  2988  021C                     	;# 
  2989  021D                     	;# 
  2990  021D                     	;# 
  2991  021E                     	;# 
  2992  021F                     	;# 
  2993  028C                     	;# 
  2994  028C                     	;# 
  2995  028D                     	;# 
  2996  028D                     	;# 
  2997  028E                     	;# 
  2998  028F                     	;# 
  2999  0290                     	;# 
  3000  0290                     	;# 
  3001  0291                     	;# 
  3002  0292                     	;# 
  3003  0292                     	;# 
  3004  0293                     	;# 
  3005  0293                     	;# 
  3006  0294                     	;# 
  3007  0295                     	;# 
  3008  0296                     	;# 
  3009  0296                     	;# 
  3010  0297                     	;# 
  3011  0298                     	;# 
  3012  0298                     	;# 
  3013  0299                     	;# 
  3014  0299                     	;# 
  3015  029A                     	;# 
  3016  029B                     	;# 
  3017  029C                     	;# 
  3018  029C                     	;# 
  3019  029D                     	;# 
  3020  030C                     	;# 
  3021  030C                     	;# 
  3022  030D                     	;# 
  3023  030E                     	;# 
  3024  030F                     	;# 
  3025  0310                     	;# 
  3026  0310                     	;# 
  3027  0311                     	;# 
  3028  0312                     	;# 
  3029  0313                     	;# 
  3030  0314                     	;# 
  3031  0314                     	;# 
  3032  0315                     	;# 
  3033  0316                     	;# 
  3034  0317                     	;# 
  3035  0318                     	;# 
  3036  0318                     	;# 
  3037  0319                     	;# 
  3038  031A                     	;# 
  3039  031B                     	;# 
  3040  031C                     	;# 
  3041  031C                     	;# 
  3042  031D                     	;# 
  3043  031E                     	;# 
  3044  031F                     	;# 
  3045  038C                     	;# 
  3046  038C                     	;# 
  3047  038D                     	;# 
  3048  038E                     	;# 
  3049  0390                     	;# 
  3050  0390                     	;# 
  3051  0391                     	;# 
  3052  0392                     	;# 
  3053  040C                     	;# 
  3054  040D                     	;# 
  3055  040E                     	;# 
  3056  040F                     	;# 
  3057  0410                     	;# 
  3058  0411                     	;# 
  3059  0416                     	;# 
  3060  0416                     	;# 
  3061  0417                     	;# 
  3062  0418                     	;# 
  3063  0418                     	;# 
  3064  0419                     	;# 
  3065  041A                     	;# 
  3066  041A                     	;# 
  3067  041B                     	;# 
  3068  041C                     	;# 
  3069  041C                     	;# 
  3070  041D                     	;# 
  3071  041E                     	;# 
  3072  041F                     	;# 
  3073  048C                     	;# 
  3074  048C                     	;# 
  3075  048D                     	;# 
  3076  048E                     	;# 
  3077  048F                     	;# 
  3078  048F                     	;# 
  3079  0490                     	;# 
  3080  0491                     	;# 
  3081  0492                     	;# 
  3082  0492                     	;# 
  3083  0493                     	;# 
  3084  0494                     	;# 
  3085  0495                     	;# 
  3086  0495                     	;# 
  3087  0496                     	;# 
  3088  0497                     	;# 
  3089  0498                     	;# 
  3090  0499                     	;# 
  3091  049A                     	;# 
  3092  049B                     	;# 
  3093  049C                     	;# 
  3094  049D                     	;# 
  3095  050C                     	;# 
  3096  050C                     	;# 
  3097  050D                     	;# 
  3098  050E                     	;# 
  3099  050F                     	;# 
  3100  050F                     	;# 
  3101  0510                     	;# 
  3102  0511                     	;# 
  3103  0512                     	;# 
  3104  0512                     	;# 
  3105  0513                     	;# 
  3106  0514                     	;# 
  3107  0515                     	;# 
  3108  0515                     	;# 
  3109  0516                     	;# 
  3110  0517                     	;# 
  3111  0518                     	;# 
  3112  0519                     	;# 
  3113  051A                     	;# 
  3114  051B                     	;# 
  3115  051C                     	;# 
  3116  051D                     	;# 
  3117  058C                     	;# 
  3118  058C                     	;# 
  3119  058D                     	;# 
  3120  058E                     	;# 
  3121  058F                     	;# 
  3122  058F                     	;# 
  3123  0590                     	;# 
  3124  0591                     	;# 
  3125  0592                     	;# 
  3126  0593                     	;# 
  3127  060C                     	;# 
  3128  060D                     	;# 
  3129  060E                     	;# 
  3130  060F                     	;# 
  3131  0610                     	;# 
  3132  0611                     	;# 
  3133  0612                     	;# 
  3134  0613                     	;# 
  3135  0614                     	;# 
  3136  0616                     	;# 
  3137  0617                     	;# 
  3138  0618                     	;# 
  3139  0619                     	;# 
  3140  061A                     	;# 
  3141  061B                     	;# 
  3142  061C                     	;# 
  3143  061D                     	;# 
  3144  061E                     	;# 
  3145  068C                     	;# 
  3146  068D                     	;# 
  3147  068E                     	;# 
  3148  068F                     	;# 
  3149  0690                     	;# 
  3150  0691                     	;# 
  3151  0692                     	;# 
  3152  0693                     	;# 
  3153  0694                     	;# 
  3154  070C                     	;# 
  3155  070D                     	;# 
  3156  070E                     	;# 
  3157  070F                     	;# 
  3158  0710                     	;# 
  3159  0711                     	;# 
  3160  0712                     	;# 
  3161  0713                     	;# 
  3162  0714                     	;# 
  3163  0716                     	;# 
  3164  0717                     	;# 
  3165  0718                     	;# 
  3166  0719                     	;# 
  3167  071A                     	;# 
  3168  071B                     	;# 
  3169  071C                     	;# 
  3170  071D                     	;# 
  3171  071E                     	;# 
  3172  0796                     	;# 
  3173  0797                     	;# 
  3174  0798                     	;# 
  3175  0799                     	;# 
  3176  079A                     	;# 
  3177  079B                     	;# 
  3178  080C                     	;# 
  3179  080D                     	;# 
  3180  080E                     	;# 
  3181  080F                     	;# 
  3182  0810                     	;# 
  3183  0811                     	;# 
  3184  0812                     	;# 
  3185  0813                     	;# 
  3186  0814                     	;# 
  3187  081A                     	;# 
  3188  081B                     	;# 
  3189  081C                     	;# 
  3190  081D                     	;# 
  3191  081E                     	;# 
  3192  081F                     	;# 
  3193  088C                     	;# 
  3194  088D                     	;# 
  3195  088E                     	;# 
  3196  088F                     	;# 
  3197  0890                     	;# 
  3198  0891                     	;# 
  3199  0892                     	;# 
  3200  0893                     	;# 
  3201  0895                     	;# 
  3202  0896                     	;# 
  3203  0897                     	;# 
  3204  0898                     	;# 
  3205  0899                     	;# 
  3206  089A                     	;# 
  3207  089B                     	;# 
  3208  090C                     	;# 
  3209  090E                     	;# 
  3210  090F                     	;# 
  3211  091F                     	;# 
  3212  091F                     	;# 
  3213  098F                     	;# 
  3214  098F                     	;# 
  3215  0990                     	;# 
  3216  0991                     	;# 
  3217  0992                     	;# 
  3218  0993                     	;# 
  3219  0994                     	;# 
  3220  0995                     	;# 
  3221  0996                     	;# 
  3222  0997                     	;# 
  3223  0E0F                     	;# 
  3224  0E10                     	;# 
  3225  0E11                     	;# 
  3226  0E12                     	;# 
  3227  0E13                     	;# 
  3228  0E14                     	;# 
  3229  0E15                     	;# 
  3230  0E16                     	;# 
  3231  0E17                     	;# 
  3232  0E18                     	;# 
  3233  0E19                     	;# 
  3234  0E1A                     	;# 
  3235  0E1B                     	;# 
  3236  0E1C                     	;# 
  3237  0E1D                     	;# 
  3238  0E1E                     	;# 
  3239  0E1F                     	;# 
  3240  0E20                     	;# 
  3241  0E21                     	;# 
  3242  0E22                     	;# 
  3243  0E23                     	;# 
  3244  0E24                     	;# 
  3245  0E25                     	;# 
  3246  0E26                     	;# 
  3247  0E27                     	;# 
  3248  0E28                     	;# 
  3249  0E29                     	;# 
  3250  0E2A                     	;# 
  3251  0E2B                     	;# 
  3252  0E2C                     	;# 
  3253  0E2D                     	;# 
  3254  0E2E                     	;# 
  3255  0E2F                     	;# 
  3256  0E30                     	;# 
  3257  0E31                     	;# 
  3258  0E32                     	;# 
  3259  0E33                     	;# 
  3260  0E34                     	;# 
  3261  0E35                     	;# 
  3262  0E36                     	;# 
  3263  0E37                     	;# 
  3264  0E8F                     	;# 
  3265  0E90                     	;# 
  3266  0E91                     	;# 
  3267  0E92                     	;# 
  3268  0E93                     	;# 
  3269  0E94                     	;# 
  3270  0E95                     	;# 
  3271  0E96                     	;# 
  3272  0E97                     	;# 
  3273  0E9C                     	;# 
  3274  0E9D                     	;# 
  3275  0E9E                     	;# 
  3276  0EA1                     	;# 
  3277  0EA2                     	;# 
  3278  0EA3                     	;# 
  3279  0EA4                     	;# 
  3280  0EA5                     	;# 
  3281  0EA9                     	;# 
  3282  0EAA                     	;# 
  3283  0EAB                     	;# 
  3284  0EAC                     	;# 
  3285  0EB1                     	;# 
  3286  0EB2                     	;# 
  3287  0EB3                     	;# 
  3288  0EB8                     	;# 
  3289  0EB9                     	;# 
  3290  0EBA                     	;# 
  3291  0EBB                     	;# 
  3292  0EBC                     	;# 
  3293  0EBD                     	;# 
  3294  0EBE                     	;# 
  3295  0EC3                     	;# 
  3296  0EC5                     	;# 
  3297  0EC6                     	;# 
  3298  0EC7                     	;# 
  3299  0EC8                     	;# 
  3300  0EC9                     	;# 
  3301  0ECA                     	;# 
  3302  0ECB                     	;# 
  3303  0ECC                     	;# 
  3304  0F10                     	;# 
  3305  0F11                     	;# 
  3306  0F12                     	;# 
  3307  0F13                     	;# 
  3308  0F14                     	;# 
  3309  0F15                     	;# 
  3310  0F16                     	;# 
  3311  0F17                     	;# 
  3312  0F18                     	;# 
  3313  0F19                     	;# 
  3314  0F1A                     	;# 
  3315  0F1B                     	;# 
  3316  0F1C                     	;# 
  3317  0F1D                     	;# 
  3318  0F1E                     	;# 
  3319  0F1F                     	;# 
  3320  0F20                     	;# 
  3321  0F21                     	;# 
  3322  0F22                     	;# 
  3323  0F23                     	;# 
  3324  0F24                     	;# 
  3325  0F25                     	;# 
  3326  0F26                     	;# 
  3327  0F27                     	;# 
  3328  0F28                     	;# 
  3329  0F29                     	;# 
  3330  0F2A                     	;# 
  3331  0F2B                     	;# 
  3332  0F2C                     	;# 
  3333  0F2D                     	;# 
  3334  0F2E                     	;# 
  3335  0F2F                     	;# 
  3336  0F30                     	;# 
  3337  0F31                     	;# 
  3338  0F32                     	;# 
  3339  0F38                     	;# 
  3340  0F39                     	;# 
  3341  0F3A                     	;# 
  3342  0F3B                     	;# 
  3343  0F3C                     	;# 
  3344  0F3D                     	;# 
  3345  0F3E                     	;# 
  3346  0F3F                     	;# 
  3347  0F40                     	;# 
  3348  0F41                     	;# 
  3349  0F43                     	;# 
  3350  0F44                     	;# 
  3351  0F45                     	;# 
  3352  0F46                     	;# 
  3353  0F47                     	;# 
  3354  0F48                     	;# 
  3355  0F49                     	;# 
  3356  0F4A                     	;# 
  3357  0F4B                     	;# 
  3358  0F4C                     	;# 
  3359  0F4E                     	;# 
  3360  0F4F                     	;# 
  3361  0F50                     	;# 
  3362  0F51                     	;# 
  3363  0F52                     	;# 
  3364  0F53                     	;# 
  3365  0F54                     	;# 
  3366  0F55                     	;# 
  3367  0F56                     	;# 
  3368  0F57                     	;# 
  3369  0F59                     	;# 
  3370  0F5A                     	;# 
  3371  0F5B                     	;# 
  3372  0F5C                     	;# 
  3373  0F5D                     	;# 
  3374  0F61                     	;# 
  3375  0F62                     	;# 
  3376  0F64                     	;# 
  3377  0F65                     	;# 
  3378  0F66                     	;# 
  3379  0F67                     	;# 
  3380  0F68                     	;# 
  3381  0F69                     	;# 
  3382  0F6A                     	;# 
  3383  0F6B                     	;# 
  3384  0F6C                     	;# 
  3385  0F6D                     	;# 
  3386  0FE4                     	;# 
  3387  0FE5                     	;# 
  3388  0FE6                     	;# 
  3389  0FE7                     	;# 
  3390  0FE8                     	;# 
  3391  0FE9                     	;# 
  3392  0FEA                     	;# 
  3393  0FEB                     	;# 
  3394  0FED                     	;# 
  3395  0FEE                     	;# 
  3396  0FEF                     	;# 
  3397  0000                     	;# 
  3398  0001                     	;# 
  3399  0002                     	;# 
  3400  0003                     	;# 
  3401  0004                     	;# 
  3402  0005                     	;# 
  3403  0006                     	;# 
  3404  0007                     	;# 
  3405  0008                     	;# 
  3406  0009                     	;# 
  3407  000A                     	;# 
  3408  000B                     	;# 
  3409  000C                     	;# 
  3410  000D                     	;# 
  3411  000E                     	;# 
  3412  000F                     	;# 
  3413  0010                     	;# 
  3414  0011                     	;# 
  3415  0012                     	;# 
  3416  0013                     	;# 
  3417  0014                     	;# 
  3418  0015                     	;# 
  3419  0016                     	;# 
  3420  0017                     	;# 
  3421  0018                     	;# 
  3422  0019                     	;# 
  3423  001A                     	;# 
  3424  001C                     	;# 
  3425  001C                     	;# 
  3426  001D                     	;# 
  3427  001D                     	;# 
  3428  001E                     	;# 
  3429  001F                     	;# 
  3430  008C                     	;# 
  3431  008C                     	;# 
  3432  008D                     	;# 
  3433  008E                     	;# 
  3434  008E                     	;# 
  3435  008F                     	;# 
  3436  0090                     	;# 
  3437  0090                     	;# 
  3438  0091                     	;# 
  3439  0093                     	;# 
  3440  0094                     	;# 
  3441  0095                     	;# 
  3442  0096                     	;# 
  3443  0097                     	;# 
  3444  0098                     	;# 
  3445  0099                     	;# 
  3446  009A                     	;# 
  3447  009B                     	;# 
  3448  009C                     	;# 
  3449  009D                     	;# 
  3450  009E                     	;# 
  3451  010C                     	;# 
  3452  010D                     	;# 
  3453  010E                     	;# 
  3454  010E                     	;# 
  3455  010F                     	;# 
  3456  0110                     	;# 
  3457  0110                     	;# 
  3458  0111                     	;# 
  3459  0112                     	;# 
  3460  0112                     	;# 
  3461  0113                     	;# 
  3462  0114                     	;# 
  3463  0114                     	;# 
  3464  0115                     	;# 
  3465  0116                     	;# 
  3466  0116                     	;# 
  3467  0117                     	;# 
  3468  0119                     	;# 
  3469  0119                     	;# 
  3470  0119                     	;# 
  3471  011A                     	;# 
  3472  011A                     	;# 
  3473  011A                     	;# 
  3474  011B                     	;# 
  3475  011B                     	;# 
  3476  011B                     	;# 
  3477  011B                     	;# 
  3478  011B                     	;# 
  3479  011C                     	;# 
  3480  011C                     	;# 
  3481  011C                     	;# 
  3482  011D                     	;# 
  3483  011D                     	;# 
  3484  011D                     	;# 
  3485  011E                     	;# 
  3486  011E                     	;# 
  3487  011E                     	;# 
  3488  011F                     	;# 
  3489  011F                     	;# 
  3490  011F                     	;# 
  3491  011F                     	;# 
  3492  011F                     	;# 
  3493  018C                     	;# 
  3494  018D                     	;# 
  3495  018E                     	;# 
  3496  018F                     	;# 
  3497  0190                     	;# 
  3498  0191                     	;# 
  3499  0192                     	;# 
  3500  0196                     	;# 
  3501  0197                     	;# 
  3502  0198                     	;# 
  3503  0199                     	;# 
  3504  019A                     	;# 
  3505  019B                     	;# 
  3506  019C                     	;# 
  3507  020C                     	;# 
  3508  020C                     	;# 
  3509  020D                     	;# 
  3510  020E                     	;# 
  3511  020F                     	;# 
  3512  020F                     	;# 
  3513  0210                     	;# 
  3514  0210                     	;# 
  3515  0211                     	;# 
  3516  0211                     	;# 
  3517  0212                     	;# 
  3518  0212                     	;# 
  3519  0213                     	;# 
  3520  0214                     	;# 
  3521  0215                     	;# 
  3522  0215                     	;# 
  3523  0216                     	;# 
  3524  0216                     	;# 
  3525  0217                     	;# 
  3526  0217                     	;# 
  3527  0218                     	;# 
  3528  0218                     	;# 
  3529  0219                     	;# 
  3530  021A                     	;# 
  3531  021B                     	;# 
  3532  021B                     	;# 
  3533  021C                     	;# 
  3534  021C                     	;# 
  3535  021D                     	;# 
  3536  021D                     	;# 
  3537  021E                     	;# 
  3538  021F                     	;# 
  3539  028C                     	;# 
  3540  028C                     	;# 
  3541  028D                     	;# 
  3542  028D                     	;# 
  3543  028E                     	;# 
  3544  028F                     	;# 
  3545  0290                     	;# 
  3546  0290                     	;# 
  3547  0291                     	;# 
  3548  0292                     	;# 
  3549  0292                     	;# 
  3550  0293                     	;# 
  3551  0293                     	;# 
  3552  0294                     	;# 
  3553  0295                     	;# 
  3554  0296                     	;# 
  3555  0296                     	;# 
  3556  0297                     	;# 
  3557  0298                     	;# 
  3558  0298                     	;# 
  3559  0299                     	;# 
  3560  0299                     	;# 
  3561  029A                     	;# 
  3562  029B                     	;# 
  3563  029C                     	;# 
  3564  029C                     	;# 
  3565  029D                     	;# 
  3566  030C                     	;# 
  3567  030C                     	;# 
  3568  030D                     	;# 
  3569  030E                     	;# 
  3570  030F                     	;# 
  3571  0310                     	;# 
  3572  0310                     	;# 
  3573  0311                     	;# 
  3574  0312                     	;# 
  3575  0313                     	;# 
  3576  0314                     	;# 
  3577  0314                     	;# 
  3578  0315                     	;# 
  3579  0316                     	;# 
  3580  0317                     	;# 
  3581  0318                     	;# 
  3582  0318                     	;# 
  3583  0319                     	;# 
  3584  031A                     	;# 
  3585  031B                     	;# 
  3586  031C                     	;# 
  3587  031C                     	;# 
  3588  031D                     	;# 
  3589  031E                     	;# 
  3590  031F                     	;# 
  3591  038C                     	;# 
  3592  038C                     	;# 
  3593  038D                     	;# 
  3594  038E                     	;# 
  3595  0390                     	;# 
  3596  0390                     	;# 
  3597  0391                     	;# 
  3598  0392                     	;# 
  3599  040C                     	;# 
  3600  040D                     	;# 
  3601  040E                     	;# 
  3602  040F                     	;# 
  3603  0410                     	;# 
  3604  0411                     	;# 
  3605  0416                     	;# 
  3606  0416                     	;# 
  3607  0417                     	;# 
  3608  0418                     	;# 
  3609  0418                     	;# 
  3610  0419                     	;# 
  3611  041A                     	;# 
  3612  041A                     	;# 
  3613  041B                     	;# 
  3614  041C                     	;# 
  3615  041C                     	;# 
  3616  041D                     	;# 
  3617  041E                     	;# 
  3618  041F                     	;# 
  3619  048C                     	;# 
  3620  048C                     	;# 
  3621  048D                     	;# 
  3622  048E                     	;# 
  3623  048F                     	;# 
  3624  048F                     	;# 
  3625  0490                     	;# 
  3626  0491                     	;# 
  3627  0492                     	;# 
  3628  0492                     	;# 
  3629  0493                     	;# 
  3630  0494                     	;# 
  3631  0495                     	;# 
  3632  0495                     	;# 
  3633  0496                     	;# 
  3634  0497                     	;# 
  3635  0498                     	;# 
  3636  0499                     	;# 
  3637  049A                     	;# 
  3638  049B                     	;# 
  3639  049C                     	;# 
  3640  049D                     	;# 
  3641  050C                     	;# 
  3642  050C                     	;# 
  3643  050D                     	;# 
  3644  050E                     	;# 
  3645  050F                     	;# 
  3646  050F                     	;# 
  3647  0510                     	;# 
  3648  0511                     	;# 
  3649  0512                     	;# 
  3650  0512                     	;# 
  3651  0513                     	;# 
  3652  0514                     	;# 
  3653  0515                     	;# 
  3654  0515                     	;# 
  3655  0516                     	;# 
  3656  0517                     	;# 
  3657  0518                     	;# 
  3658  0519                     	;# 
  3659  051A                     	;# 
  3660  051B                     	;# 
  3661  051C                     	;# 
  3662  051D                     	;# 
  3663  058C                     	;# 
  3664  058C                     	;# 
  3665  058D                     	;# 
  3666  058E                     	;# 
  3667  058F                     	;# 
  3668  058F                     	;# 
  3669  0590                     	;# 
  3670  0591                     	;# 
  3671  0592                     	;# 
  3672  0593                     	;# 
  3673  060C                     	;# 
  3674  060D                     	;# 
  3675  060E                     	;# 
  3676  060F                     	;# 
  3677  0610                     	;# 
  3678  0611                     	;# 
  3679  0612                     	;# 
  3680  0613                     	;# 
  3681  0614                     	;# 
  3682  0616                     	;# 
  3683  0617                     	;# 
  3684  0618                     	;# 
  3685  0619                     	;# 
  3686  061A                     	;# 
  3687  061B                     	;# 
  3688  061C                     	;# 
  3689  061D                     	;# 
  3690  061E                     	;# 
  3691  068C                     	;# 
  3692  068D                     	;# 
  3693  068E                     	;# 
  3694  068F                     	;# 
  3695  0690                     	;# 
  3696  0691                     	;# 
  3697  0692                     	;# 
  3698  0693                     	;# 
  3699  0694                     	;# 
  3700  070C                     	;# 
  3701  070D                     	;# 
  3702  070E                     	;# 
  3703  070F                     	;# 
  3704  0710                     	;# 
  3705  0711                     	;# 
  3706  0712                     	;# 
  3707  0713                     	;# 
  3708  0714                     	;# 
  3709  0716                     	;# 
  3710  0717                     	;# 
  3711  0718                     	;# 
  3712  0719                     	;# 
  3713  071A                     	;# 
  3714  071B                     	;# 
  3715  071C                     	;# 
  3716  071D                     	;# 
  3717  071E                     	;# 
  3718  0796                     	;# 
  3719  0797                     	;# 
  3720  0798                     	;# 
  3721  0799                     	;# 
  3722  079A                     	;# 
  3723  079B                     	;# 
  3724  080C                     	;# 
  3725  080D                     	;# 
  3726  080E                     	;# 
  3727  080F                     	;# 
  3728  0810                     	;# 
  3729  0811                     	;# 
  3730  0812                     	;# 
  3731  0813                     	;# 
  3732  0814                     	;# 
  3733  081A                     	;# 
  3734  081B                     	;# 
  3735  081C                     	;# 
  3736  081D                     	;# 
  3737  081E                     	;# 
  3738  081F                     	;# 
  3739  088C                     	;# 
  3740  088D                     	;# 
  3741  088E                     	;# 
  3742  088F                     	;# 
  3743  0890                     	;# 
  3744  0891                     	;# 
  3745  0892                     	;# 
  3746  0893                     	;# 
  3747  0895                     	;# 
  3748  0896                     	;# 
  3749  0897                     	;# 
  3750  0898                     	;# 
  3751  0899                     	;# 
  3752  089A                     	;# 
  3753  089B                     	;# 
  3754  090C                     	;# 
  3755  090E                     	;# 
  3756  090F                     	;# 
  3757  091F                     	;# 
  3758  091F                     	;# 
  3759  098F                     	;# 
  3760  098F                     	;# 
  3761  0990                     	;# 
  3762  0991                     	;# 
  3763  0992                     	;# 
  3764  0993                     	;# 
  3765  0994                     	;# 
  3766  0995                     	;# 
  3767  0996                     	;# 
  3768  0997                     	;# 
  3769  0E0F                     	;# 
  3770  0E10                     	;# 
  3771  0E11                     	;# 
  3772  0E12                     	;# 
  3773  0E13                     	;# 
  3774  0E14                     	;# 
  3775  0E15                     	;# 
  3776  0E16                     	;# 
  3777  0E17                     	;# 
  3778  0E18                     	;# 
  3779  0E19                     	;# 
  3780  0E1A                     	;# 
  3781  0E1B                     	;# 
  3782  0E1C                     	;# 
  3783  0E1D                     	;# 
  3784  0E1E                     	;# 
  3785  0E1F                     	;# 
  3786  0E20                     	;# 
  3787  0E21                     	;# 
  3788  0E22                     	;# 
  3789  0E23                     	;# 
  3790  0E24                     	;# 
  3791  0E25                     	;# 
  3792  0E26                     	;# 
  3793  0E27                     	;# 
  3794  0E28                     	;# 
  3795  0E29                     	;# 
  3796  0E2A                     	;# 
  3797  0E2B                     	;# 
  3798  0E2C                     	;# 
  3799  0E2D                     	;# 
  3800  0E2E                     	;# 
  3801  0E2F                     	;# 
  3802  0E30                     	;# 
  3803  0E31                     	;# 
  3804  0E32                     	;# 
  3805  0E33                     	;# 
  3806  0E34                     	;# 
  3807  0E35                     	;# 
  3808  0E36                     	;# 
  3809  0E37                     	;# 
  3810  0E8F                     	;# 
  3811  0E90                     	;# 
  3812  0E91                     	;# 
  3813  0E92                     	;# 
  3814  0E93                     	;# 
  3815  0E94                     	;# 
  3816  0E95                     	;# 
  3817  0E96                     	;# 
  3818  0E97                     	;# 
  3819  0E9C                     	;# 
  3820  0E9D                     	;# 
  3821  0E9E                     	;# 
  3822  0EA1                     	;# 
  3823  0EA2                     	;# 
  3824  0EA3                     	;# 
  3825  0EA4                     	;# 
  3826  0EA5                     	;# 
  3827  0EA9                     	;# 
  3828  0EAA                     	;# 
  3829  0EAB                     	;# 
  3830  0EAC                     	;# 
  3831  0EB1                     	;# 
  3832  0EB2                     	;# 
  3833  0EB3                     	;# 
  3834  0EB8                     	;# 
  3835  0EB9                     	;# 
  3836  0EBA                     	;# 
  3837  0EBB                     	;# 
  3838  0EBC                     	;# 
  3839  0EBD                     	;# 
  3840  0EBE                     	;# 
  3841  0EC3                     	;# 
  3842  0EC5                     	;# 
  3843  0EC6                     	;# 
  3844  0EC7                     	;# 
  3845  0EC8                     	;# 
  3846  0EC9                     	;# 
  3847  0ECA                     	;# 
  3848  0ECB                     	;# 
  3849  0ECC                     	;# 
  3850  0F10                     	;# 
  3851  0F11                     	;# 
  3852  0F12                     	;# 
  3853  0F13                     	;# 
  3854  0F14                     	;# 
  3855  0F15                     	;# 
  3856  0F16                     	;# 
  3857  0F17                     	;# 
  3858  0F18                     	;# 
  3859  0F19                     	;# 
  3860  0F1A                     	;# 
  3861  0F1B                     	;# 
  3862  0F1C                     	;# 
  3863  0F1D                     	;# 
  3864  0F1E                     	;# 
  3865  0F1F                     	;# 
  3866  0F20                     	;# 
  3867  0F21                     	;# 
  3868  0F22                     	;# 
  3869  0F23                     	;# 
  3870  0F24                     	;# 
  3871  0F25                     	;# 
  3872  0F26                     	;# 
  3873  0F27                     	;# 
  3874  0F28                     	;# 
  3875  0F29                     	;# 
  3876  0F2A                     	;# 
  3877  0F2B                     	;# 
  3878  0F2C                     	;# 
  3879  0F2D                     	;# 
  3880  0F2E                     	;# 
  3881  0F2F                     	;# 
  3882  0F30                     	;# 
  3883  0F31                     	;# 
  3884  0F32                     	;# 
  3885  0F38                     	;# 
  3886  0F39                     	;# 
  3887  0F3A                     	;# 
  3888  0F3B                     	;# 
  3889  0F3C                     	;# 
  3890  0F3D                     	;# 
  3891  0F3E                     	;# 
  3892  0F3F                     	;# 
  3893  0F40                     	;# 
  3894  0F41                     	;# 
  3895  0F43                     	;# 
  3896  0F44                     	;# 
  3897  0F45                     	;# 
  3898  0F46                     	;# 
  3899  0F47                     	;# 
  3900  0F48                     	;# 
  3901  0F49                     	;# 
  3902  0F4A                     	;# 
  3903  0F4B                     	;# 
  3904  0F4C                     	;# 
  3905  0F4E                     	;# 
  3906  0F4F                     	;# 
  3907  0F50                     	;# 
  3908  0F51                     	;# 
  3909  0F52                     	;# 
  3910  0F53                     	;# 
  3911  0F54                     	;# 
  3912  0F55                     	;# 
  3913  0F56                     	;# 
  3914  0F57                     	;# 
  3915  0F59                     	;# 
  3916  0F5A                     	;# 
  3917  0F5B                     	;# 
  3918  0F5C                     	;# 
  3919  0F5D                     	;# 
  3920  0F61                     	;# 
  3921  0F62                     	;# 
  3922  0F64                     	;# 
  3923  0F65                     	;# 
  3924  0F66                     	;# 
  3925  0F67                     	;# 
  3926  0F68                     	;# 
  3927  0F69                     	;# 
  3928  0F6A                     	;# 
  3929  0F6B                     	;# 
  3930  0F6C                     	;# 
  3931  0F6D                     	;# 
  3932  0FE4                     	;# 
  3933  0FE5                     	;# 
  3934  0FE6                     	;# 
  3935  0FE7                     	;# 
  3936  0FE8                     	;# 
  3937  0FE9                     	;# 
  3938  0FEA                     	;# 
  3939  0FEB                     	;# 
  3940  0FED                     	;# 
  3941  0FEE                     	;# 
  3942  0FEF                     	;# 
  3943  0000                     	;# 
  3944  0001                     	;# 
  3945  0002                     	;# 
  3946  0003                     	;# 
  3947  0004                     	;# 
  3948  0005                     	;# 
  3949  0006                     	;# 
  3950  0007                     	;# 
  3951  0008                     	;# 
  3952  0009                     	;# 
  3953  000A                     	;# 
  3954  000B                     	;# 
  3955  000C                     	;# 
  3956  000D                     	;# 
  3957  000E                     	;# 
  3958  000F                     	;# 
  3959  0010                     	;# 
  3960  0011                     	;# 
  3961  0012                     	;# 
  3962  0013                     	;# 
  3963  0014                     	;# 
  3964  0015                     	;# 
  3965  0016                     	;# 
  3966  0017                     	;# 
  3967  0018                     	;# 
  3968  0019                     	;# 
  3969  001A                     	;# 
  3970  001C                     	;# 
  3971  001C                     	;# 
  3972  001D                     	;# 
  3973  001D                     	;# 
  3974  001E                     	;# 
  3975  001F                     	;# 
  3976  008C                     	;# 
  3977  008C                     	;# 
  3978  008D                     	;# 
  3979  008E                     	;# 
  3980  008E                     	;# 
  3981  008F                     	;# 
  3982  0090                     	;# 
  3983  0090                     	;# 
  3984  0091                     	;# 
  3985  0093                     	;# 
  3986  0094                     	;# 
  3987  0095                     	;# 
  3988  0096                     	;# 
  3989  0097                     	;# 
  3990  0098                     	;# 
  3991  0099                     	;# 
  3992  009A                     	;# 
  3993  009B                     	;# 
  3994  009C                     	;# 
  3995  009D                     	;# 
  3996  009E                     	;# 
  3997  010C                     	;# 
  3998  010D                     	;# 
  3999  010E                     	;# 
  4000  010E                     	;# 
  4001  010F                     	;# 
  4002  0110                     	;# 
  4003  0110                     	;# 
  4004  0111                     	;# 
  4005  0112                     	;# 
  4006  0112                     	;# 
  4007  0113                     	;# 
  4008  0114                     	;# 
  4009  0114                     	;# 
  4010  0115                     	;# 
  4011  0116                     	;# 
  4012  0116                     	;# 
  4013  0117                     	;# 
  4014  0119                     	;# 
  4015  0119                     	;# 
  4016  0119                     	;# 
  4017  011A                     	;# 
  4018  011A                     	;# 
  4019  011A                     	;# 
  4020  011B                     	;# 
  4021  011B                     	;# 
  4022  011B                     	;# 
  4023  011B                     	;# 
  4024  011B                     	;# 
  4025  011C                     	;# 
  4026  011C                     	;# 
  4027  011C                     	;# 
  4028  011D                     	;# 
  4029  011D                     	;# 
  4030  011D                     	;# 
  4031  011E                     	;# 
  4032  011E                     	;# 
  4033  011E                     	;# 
  4034  011F                     	;# 
  4035  011F                     	;# 
  4036  011F                     	;# 
  4037  011F                     	;# 
  4038  011F                     	;# 
  4039  018C                     	;# 
  4040  018D                     	;# 
  4041  018E                     	;# 
  4042  018F                     	;# 
  4043  0190                     	;# 
  4044  0191                     	;# 
  4045  0192                     	;# 
  4046  0196                     	;# 
  4047  0197                     	;# 
  4048  0198                     	;# 
  4049  0199                     	;# 
  4050  019A                     	;# 
  4051  019B                     	;# 
  4052  019C                     	;# 
  4053  020C                     	;# 
  4054  020C                     	;# 
  4055  020D                     	;# 
  4056  020E                     	;# 
  4057  020F                     	;# 
  4058  020F                     	;# 
  4059  0210                     	;# 
  4060  0210                     	;# 
  4061  0211                     	;# 
  4062  0211                     	;# 
  4063  0212                     	;# 
  4064  0212                     	;# 
  4065  0213                     	;# 
  4066  0214                     	;# 
  4067  0215                     	;# 
  4068  0215                     	;# 
  4069  0216                     	;# 
  4070  0216                     	;# 
  4071  0217                     	;# 
  4072  0217                     	;# 
  4073  0218                     	;# 
  4074  0218                     	;# 
  4075  0219                     	;# 
  4076  021A                     	;# 
  4077  021B                     	;# 
  4078  021B                     	;# 
  4079  021C                     	;# 
  4080  021C                     	;# 
  4081  021D                     	;# 
  4082  021D                     	;# 
  4083  021E                     	;# 
  4084  021F                     	;# 
  4085  028C                     	;# 
  4086  028C                     	;# 
  4087  028D                     	;# 
  4088  028D                     	;# 
  4089  028E                     	;# 
  4090  028F                     	;# 
  4091  0290                     	;# 
  4092  0290                     	;# 
  4093  0291                     	;# 
  4094  0292                     	;# 
  4095  0292                     	;# 
  4096  0293                     	;# 
  4097  0293                     	;# 
  4098  0294                     	;# 
  4099  0295                     	;# 
  4100  0296                     	;# 
  4101  0296                     	;# 
  4102  0297                     	;# 
  4103  0298                     	;# 
  4104  0298                     	;# 
  4105  0299                     	;# 
  4106  0299                     	;# 
  4107  029A                     	;# 
  4108  029B                     	;# 
  4109  029C                     	;# 
  4110  029C                     	;# 
  4111  029D                     	;# 
  4112  030C                     	;# 
  4113  030C                     	;# 
  4114  030D                     	;# 
  4115  030E                     	;# 
  4116  030F                     	;# 
  4117  0310                     	;# 
  4118  0310                     	;# 
  4119  0311                     	;# 
  4120  0312                     	;# 
  4121  0313                     	;# 
  4122  0314                     	;# 
  4123  0314                     	;# 
  4124  0315                     	;# 
  4125  0316                     	;# 
  4126  0317                     	;# 
  4127  0318                     	;# 
  4128  0318                     	;# 
  4129  0319                     	;# 
  4130  031A                     	;# 
  4131  031B                     	;# 
  4132  031C                     	;# 
  4133  031C                     	;# 
  4134  031D                     	;# 
  4135  031E                     	;# 
  4136  031F                     	;# 
  4137  038C                     	;# 
  4138  038C                     	;# 
  4139  038D                     	;# 
  4140  038E                     	;# 
  4141  0390                     	;# 
  4142  0390                     	;# 
  4143  0391                     	;# 
  4144  0392                     	;# 
  4145  040C                     	;# 
  4146  040D                     	;# 
  4147  040E                     	;# 
  4148  040F                     	;# 
  4149  0410                     	;# 
  4150  0411                     	;# 
  4151  0416                     	;# 
  4152  0416                     	;# 
  4153  0417                     	;# 
  4154  0418                     	;# 
  4155  0418                     	;# 
  4156  0419                     	;# 
  4157  041A                     	;# 
  4158  041A                     	;# 
  4159  041B                     	;# 
  4160  041C                     	;# 
  4161  041C                     	;# 
  4162  041D                     	;# 
  4163  041E                     	;# 
  4164  041F                     	;# 
  4165  048C                     	;# 
  4166  048C                     	;# 
  4167  048D                     	;# 
  4168  048E                     	;# 
  4169  048F                     	;# 
  4170  048F                     	;# 
  4171  0490                     	;# 
  4172  0491                     	;# 
  4173  0492                     	;# 
  4174  0492                     	;# 
  4175  0493                     	;# 
  4176  0494                     	;# 
  4177  0495                     	;# 
  4178  0495                     	;# 
  4179  0496                     	;# 
  4180  0497                     	;# 
  4181  0498                     	;# 
  4182  0499                     	;# 
  4183  049A                     	;# 
  4184  049B                     	;# 
  4185  049C                     	;# 
  4186  049D                     	;# 
  4187  050C                     	;# 
  4188  050C                     	;# 
  4189  050D                     	;# 
  4190  050E                     	;# 
  4191  050F                     	;# 
  4192  050F                     	;# 
  4193  0510                     	;# 
  4194  0511                     	;# 
  4195  0512                     	;# 
  4196  0512                     	;# 
  4197  0513                     	;# 
  4198  0514                     	;# 
  4199  0515                     	;# 
  4200  0515                     	;# 
  4201  0516                     	;# 
  4202  0517                     	;# 
  4203  0518                     	;# 
  4204  0519                     	;# 
  4205  051A                     	;# 
  4206  051B                     	;# 
  4207  051C                     	;# 
  4208  051D                     	;# 
  4209  058C                     	;# 
  4210  058C                     	;# 
  4211  058D                     	;# 
  4212  058E                     	;# 
  4213  058F                     	;# 
  4214  058F                     	;# 
  4215  0590                     	;# 
  4216  0591                     	;# 
  4217  0592                     	;# 
  4218  0593                     	;# 
  4219  060C                     	;# 
  4220  060D                     	;# 
  4221  060E                     	;# 
  4222  060F                     	;# 
  4223  0610                     	;# 
  4224  0611                     	;# 
  4225  0612                     	;# 
  4226  0613                     	;# 
  4227  0614                     	;# 
  4228  0616                     	;# 
  4229  0617                     	;# 
  4230  0618                     	;# 
  4231  0619                     	;# 
  4232  061A                     	;# 
  4233  061B                     	;# 
  4234  061C                     	;# 
  4235  061D                     	;# 
  4236  061E                     	;# 
  4237  068C                     	;# 
  4238  068D                     	;# 
  4239  068E                     	;# 
  4240  068F                     	;# 
  4241  0690                     	;# 
  4242  0691                     	;# 
  4243  0692                     	;# 
  4244  0693                     	;# 
  4245  0694                     	;# 
  4246  070C                     	;# 
  4247  070D                     	;# 
  4248  070E                     	;# 
  4249  070F                     	;# 
  4250  0710                     	;# 
  4251  0711                     	;# 
  4252  0712                     	;# 
  4253  0713                     	;# 
  4254  0714                     	;# 
  4255  0716                     	;# 
  4256  0717                     	;# 
  4257  0718                     	;# 
  4258  0719                     	;# 
  4259  071A                     	;# 
  4260  071B                     	;# 
  4261  071C                     	;# 
  4262  071D                     	;# 
  4263  071E                     	;# 
  4264  0796                     	;# 
  4265  0797                     	;# 
  4266  0798                     	;# 
  4267  0799                     	;# 
  4268  079A                     	;# 
  4269  079B                     	;# 
  4270  080C                     	;# 
  4271  080D                     	;# 
  4272  080E                     	;# 
  4273  080F                     	;# 
  4274  0810                     	;# 
  4275  0811                     	;# 
  4276  0812                     	;# 
  4277  0813                     	;# 
  4278  0814                     	;# 
  4279  081A                     	;# 
  4280  081B                     	;# 
  4281  081C                     	;# 
  4282  081D                     	;# 
  4283  081E                     	;# 
  4284  081F                     	;# 
  4285  088C                     	;# 
  4286  088D                     	;# 
  4287  088E                     	;# 
  4288  088F                     	;# 
  4289  0890                     	;# 
  4290  0891                     	;# 
  4291  0892                     	;# 
  4292  0893                     	;# 
  4293  0895                     	;# 
  4294  0896                     	;# 
  4295  0897                     	;# 
  4296  0898                     	;# 
  4297  0899                     	;# 
  4298  089A                     	;# 
  4299  089B                     	;# 
  4300  090C                     	;# 
  4301  090E                     	;# 
  4302  090F                     	;# 
  4303  091F                     	;# 
  4304  091F                     	;# 
  4305  098F                     	;# 
  4306  098F                     	;# 
  4307  0990                     	;# 
  4308  0991                     	;# 
  4309  0992                     	;# 
  4310  0993                     	;# 
  4311  0994                     	;# 
  4312  0995                     	;# 
  4313  0996                     	;# 
  4314  0997                     	;# 
  4315  0E0F                     	;# 
  4316  0E10                     	;# 
  4317  0E11                     	;# 
  4318  0E12                     	;# 
  4319  0E13                     	;# 
  4320  0E14                     	;# 
  4321  0E15                     	;# 
  4322  0E16                     	;# 
  4323  0E17                     	;# 
  4324  0E18                     	;# 
  4325  0E19                     	;# 
  4326  0E1A                     	;# 
  4327  0E1B                     	;# 
  4328  0E1C                     	;# 
  4329  0E1D                     	;# 
  4330  0E1E                     	;# 
  4331  0E1F                     	;# 
  4332  0E20                     	;# 
  4333  0E21                     	;# 
  4334  0E22                     	;# 
  4335  0E23                     	;# 
  4336  0E24                     	;# 
  4337  0E25                     	;# 
  4338  0E26                     	;# 
  4339  0E27                     	;# 
  4340  0E28                     	;# 
  4341  0E29                     	;# 
  4342  0E2A                     	;# 
  4343  0E2B                     	;# 
  4344  0E2C                     	;# 
  4345  0E2D                     	;# 
  4346  0E2E                     	;# 
  4347  0E2F                     	;# 
  4348  0E30                     	;# 
  4349  0E31                     	;# 
  4350  0E32                     	;# 
  4351  0E33                     	;# 
  4352  0E34                     	;# 
  4353  0E35                     	;# 
  4354  0E36                     	;# 
  4355  0E37                     	;# 
  4356  0E8F                     	;# 
  4357  0E90                     	;# 
  4358  0E91                     	;# 
  4359  0E92                     	;# 
  4360  0E93                     	;# 
  4361  0E94                     	;# 
  4362  0E95                     	;# 
  4363  0E96                     	;# 
  4364  0E97                     	;# 
  4365  0E9C                     	;# 
  4366  0E9D                     	;# 
  4367  0E9E                     	;# 
  4368  0EA1                     	;# 
  4369  0EA2                     	;# 
  4370  0EA3                     	;# 
  4371  0EA4                     	;# 
  4372  0EA5                     	;# 
  4373  0EA9                     	;# 
  4374  0EAA                     	;# 
  4375  0EAB                     	;# 
  4376  0EAC                     	;# 
  4377  0EB1                     	;# 
  4378  0EB2                     	;# 
  4379  0EB3                     	;# 
  4380  0EB8                     	;# 
  4381  0EB9                     	;# 
  4382  0EBA                     	;# 
  4383  0EBB                     	;# 
  4384  0EBC                     	;# 
  4385  0EBD                     	;# 
  4386  0EBE                     	;# 
  4387  0EC3                     	;# 
  4388  0EC5                     	;# 
  4389  0EC6                     	;# 
  4390  0EC7                     	;# 
  4391  0EC8                     	;# 
  4392  0EC9                     	;# 
  4393  0ECA                     	;# 
  4394  0ECB                     	;# 
  4395  0ECC                     	;# 
  4396  0F10                     	;# 
  4397  0F11                     	;# 
  4398  0F12                     	;# 
  4399  0F13                     	;# 
  4400  0F14                     	;# 
  4401  0F15                     	;# 
  4402  0F16                     	;# 
  4403  0F17                     	;# 
  4404  0F18                     	;# 
  4405  0F19                     	;# 
  4406  0F1A                     	;# 
  4407  0F1B                     	;# 
  4408  0F1C                     	;# 
  4409  0F1D                     	;# 
  4410  0F1E                     	;# 
  4411  0F1F                     	;# 
  4412  0F20                     	;# 
  4413  0F21                     	;# 
  4414  0F22                     	;# 
  4415  0F23                     	;# 
  4416  0F24                     	;# 
  4417  0F25                     	;# 
  4418  0F26                     	;# 
  4419  0F27                     	;# 
  4420  0F28                     	;# 
  4421  0F29                     	;# 
  4422  0F2A                     	;# 
  4423  0F2B                     	;# 
  4424  0F2C                     	;# 
  4425  0F2D                     	;# 
  4426  0F2E                     	;# 
  4427  0F2F                     	;# 
  4428  0F30                     	;# 
  4429  0F31                     	;# 
  4430  0F32                     	;# 
  4431  0F38                     	;# 
  4432  0F39                     	;# 
  4433  0F3A                     	;# 
  4434  0F3B                     	;# 
  4435  0F3C                     	;# 
  4436  0F3D                     	;# 
  4437  0F3E                     	;# 
  4438  0F3F                     	;# 
  4439  0F40                     	;# 
  4440  0F41                     	;# 
  4441  0F43                     	;# 
  4442  0F44                     	;# 
  4443  0F45                     	;# 
  4444  0F46                     	;# 
  4445  0F47                     	;# 
  4446  0F48                     	;# 
  4447  0F49                     	;# 
  4448  0F4A                     	;# 
  4449  0F4B                     	;# 
  4450  0F4C                     	;# 
  4451  0F4E                     	;# 
  4452  0F4F                     	;# 
  4453  0F50                     	;# 
  4454  0F51                     	;# 
  4455  0F52                     	;# 
  4456  0F53                     	;# 
  4457  0F54                     	;# 
  4458  0F55                     	;# 
  4459  0F56                     	;# 
  4460  0F57                     	;# 
  4461  0F59                     	;# 
  4462  0F5A                     	;# 
  4463  0F5B                     	;# 
  4464  0F5C                     	;# 
  4465  0F5D                     	;# 
  4466  0F61                     	;# 
  4467  0F62                     	;# 
  4468  0F64                     	;# 
  4469  0F65                     	;# 
  4470  0F66                     	;# 
  4471  0F67                     	;# 
  4472  0F68                     	;# 
  4473  0F69                     	;# 
  4474  0F6A                     	;# 
  4475  0F6B                     	;# 
  4476  0F6C                     	;# 
  4477  0F6D                     	;# 
  4478  0FE4                     	;# 
  4479  0FE5                     	;# 
  4480  0FE6                     	;# 
  4481  0FE7                     	;# 
  4482  0FE8                     	;# 
  4483  0FE9                     	;# 
  4484  0FEA                     	;# 
  4485  0FEB                     	;# 
  4486  0FED                     	;# 
  4487  0FEE                     	;# 
  4488  0FEF                     	;# 
  4489  0000                     	;# 
  4490  0001                     	;# 
  4491  0002                     	;# 
  4492  0003                     	;# 
  4493  0004                     	;# 
  4494  0005                     	;# 
  4495  0006                     	;# 
  4496  0007                     	;# 
  4497  0008                     	;# 
  4498  0009                     	;# 
  4499  000A                     	;# 
  4500  000B                     	;# 
  4501  000C                     	;# 
  4502  000D                     	;# 
  4503  000E                     	;# 
  4504  000F                     	;# 
  4505  0010                     	;# 
  4506  0011                     	;# 
  4507  0012                     	;# 
  4508  0013                     	;# 
  4509  0014                     	;# 
  4510  0015                     	;# 
  4511  0016                     	;# 
  4512  0017                     	;# 
  4513  0018                     	;# 
  4514  0019                     	;# 
  4515  001A                     	;# 
  4516  001C                     	;# 
  4517  001C                     	;# 
  4518  001D                     	;# 
  4519  001D                     	;# 
  4520  001E                     	;# 
  4521  001F                     	;# 
  4522  008C                     	;# 
  4523  008C                     	;# 
  4524  008D                     	;# 
  4525  008E                     	;# 
  4526  008E                     	;# 
  4527  008F                     	;# 
  4528  0090                     	;# 
  4529  0090                     	;# 
  4530  0091                     	;# 
  4531  0093                     	;# 
  4532  0094                     	;# 
  4533  0095                     	;# 
  4534  0096                     	;# 
  4535  0097                     	;# 
  4536  0098                     	;# 
  4537  0099                     	;# 
  4538  009A                     	;# 
  4539  009B                     	;# 
  4540  009C                     	;# 
  4541  009D                     	;# 
  4542  009E                     	;# 
  4543  010C                     	;# 
  4544  010D                     	;# 
  4545  010E                     	;# 
  4546  010E                     	;# 
  4547  010F                     	;# 
  4548  0110                     	;# 
  4549  0110                     	;# 
  4550  0111                     	;# 
  4551  0112                     	;# 
  4552  0112                     	;# 
  4553  0113                     	;# 
  4554  0114                     	;# 
  4555  0114                     	;# 
  4556  0115                     	;# 
  4557  0116                     	;# 
  4558  0116                     	;# 
  4559  0117                     	;# 
  4560  0119                     	;# 
  4561  0119                     	;# 
  4562  0119                     	;# 
  4563  011A                     	;# 
  4564  011A                     	;# 
  4565  011A                     	;# 
  4566  011B                     	;# 
  4567  011B                     	;# 
  4568  011B                     	;# 
  4569  011B                     	;# 
  4570  011B                     	;# 
  4571  011C                     	;# 
  4572  011C                     	;# 
  4573  011C                     	;# 
  4574  011D                     	;# 
  4575  011D                     	;# 
  4576  011D                     	;# 
  4577  011E                     	;# 
  4578  011E                     	;# 
  4579  011E                     	;# 
  4580  011F                     	;# 
  4581  011F                     	;# 
  4582  011F                     	;# 
  4583  011F                     	;# 
  4584  011F                     	;# 
  4585  018C                     	;# 
  4586  018D                     	;# 
  4587  018E                     	;# 
  4588  018F                     	;# 
  4589  0190                     	;# 
  4590  0191                     	;# 
  4591  0192                     	;# 
  4592  0196                     	;# 
  4593  0197                     	;# 
  4594  0198                     	;# 
  4595  0199                     	;# 
  4596  019A                     	;# 
  4597  019B                     	;# 
  4598  019C                     	;# 
  4599  020C                     	;# 
  4600  020C                     	;# 
  4601  020D                     	;# 
  4602  020E                     	;# 
  4603  020F                     	;# 
  4604  020F                     	;# 
  4605  0210                     	;# 
  4606  0210                     	;# 
  4607  0211                     	;# 
  4608  0211                     	;# 
  4609  0212                     	;# 
  4610  0212                     	;# 
  4611  0213                     	;# 
  4612  0214                     	;# 
  4613  0215                     	;# 
  4614  0215                     	;# 
  4615  0216                     	;# 
  4616  0216                     	;# 
  4617  0217                     	;# 
  4618  0217                     	;# 
  4619  0218                     	;# 
  4620  0218                     	;# 
  4621  0219                     	;# 
  4622  021A                     	;# 
  4623  021B                     	;# 
  4624  021B                     	;# 
  4625  021C                     	;# 
  4626  021C                     	;# 
  4627  021D                     	;# 
  4628  021D                     	;# 
  4629  021E                     	;# 
  4630  021F                     	;# 
  4631  028C                     	;# 
  4632  028C                     	;# 
  4633  028D                     	;# 
  4634  028D                     	;# 
  4635  028E                     	;# 
  4636  028F                     	;# 
  4637  0290                     	;# 
  4638  0290                     	;# 
  4639  0291                     	;# 
  4640  0292                     	;# 
  4641  0292                     	;# 
  4642  0293                     	;# 
  4643  0293                     	;# 
  4644  0294                     	;# 
  4645  0295                     	;# 
  4646  0296                     	;# 
  4647  0296                     	;# 
  4648  0297                     	;# 
  4649  0298                     	;# 
  4650  0298                     	;# 
  4651  0299                     	;# 
  4652  0299                     	;# 
  4653  029A                     	;# 
  4654  029B                     	;# 
  4655  029C                     	;# 
  4656  029C                     	;# 
  4657  029D                     	;# 
  4658  030C                     	;# 
  4659  030C                     	;# 
  4660  030D                     	;# 
  4661  030E                     	;# 
  4662  030F                     	;# 
  4663  0310                     	;# 
  4664  0310                     	;# 
  4665  0311                     	;# 
  4666  0312                     	;# 
  4667  0313                     	;# 
  4668  0314                     	;# 
  4669  0314                     	;# 
  4670  0315                     	;# 
  4671  0316                     	;# 
  4672  0317                     	;# 
  4673  0318                     	;# 
  4674  0318                     	;# 
  4675  0319                     	;# 
  4676  031A                     	;# 
  4677  031B                     	;# 
  4678  031C                     	;# 
  4679  031C                     	;# 
  4680  031D                     	;# 
  4681  031E                     	;# 
  4682  031F                     	;# 
  4683  038C                     	;# 
  4684  038C                     	;# 
  4685  038D                     	;# 
  4686  038E                     	;# 
  4687  0390                     	;# 
  4688  0390                     	;# 
  4689  0391                     	;# 
  4690  0392                     	;# 
  4691  040C                     	;# 
  4692  040D                     	;# 
  4693  040E                     	;# 
  4694  040F                     	;# 
  4695  0410                     	;# 
  4696  0411                     	;# 
  4697  0416                     	;# 
  4698  0416                     	;# 
  4699  0417                     	;# 
  4700  0418                     	;# 
  4701  0418                     	;# 
  4702  0419                     	;# 
  4703  041A                     	;# 
  4704  041A                     	;# 
  4705  041B                     	;# 
  4706  041C                     	;# 
  4707  041C                     	;# 
  4708  041D                     	;# 
  4709  041E                     	;# 
  4710  041F                     	;# 
  4711  048C                     	;# 
  4712  048C                     	;# 
  4713  048D                     	;# 
  4714  048E                     	;# 
  4715  048F                     	;# 
  4716  048F                     	;# 
  4717  0490                     	;# 
  4718  0491                     	;# 
  4719  0492                     	;# 
  4720  0492                     	;# 
  4721  0493                     	;# 
  4722  0494                     	;# 
  4723  0495                     	;# 
  4724  0495                     	;# 
  4725  0496                     	;# 
  4726  0497                     	;# 
  4727  0498                     	;# 
  4728  0499                     	;# 
  4729  049A                     	;# 
  4730  049B                     	;# 
  4731  049C                     	;# 
  4732  049D                     	;# 
  4733  050C                     	;# 
  4734  050C                     	;# 
  4735  050D                     	;# 
  4736  050E                     	;# 
  4737  050F                     	;# 
  4738  050F                     	;# 
  4739  0510                     	;# 
  4740  0511                     	;# 
  4741  0512                     	;# 
  4742  0512                     	;# 
  4743  0513                     	;# 
  4744  0514                     	;# 
  4745  0515                     	;# 
  4746  0515                     	;# 
  4747  0516                     	;# 
  4748  0517                     	;# 
  4749  0518                     	;# 
  4750  0519                     	;# 
  4751  051A                     	;# 
  4752  051B                     	;# 
  4753  051C                     	;# 
  4754  051D                     	;# 
  4755  058C                     	;# 
  4756  058C                     	;# 
  4757  058D                     	;# 
  4758  058E                     	;# 
  4759  058F                     	;# 
  4760  058F                     	;# 
  4761  0590                     	;# 
  4762  0591                     	;# 
  4763  0592                     	;# 
  4764  0593                     	;# 
  4765  060C                     	;# 
  4766  060D                     	;# 
  4767  060E                     	;# 
  4768  060F                     	;# 
  4769  0610                     	;# 
  4770  0611                     	;# 
  4771  0612                     	;# 
  4772  0613                     	;# 
  4773  0614                     	;# 
  4774  0616                     	;# 
  4775  0617                     	;# 
  4776  0618                     	;# 
  4777  0619                     	;# 
  4778  061A                     	;# 
  4779  061B                     	;# 
  4780  061C                     	;# 
  4781  061D                     	;# 
  4782  061E                     	;# 
  4783  068C                     	;# 
  4784  068D                     	;# 
  4785  068E                     	;# 
  4786  068F                     	;# 
  4787  0690                     	;# 
  4788  0691                     	;# 
  4789  0692                     	;# 
  4790  0693                     	;# 
  4791  0694                     	;# 
  4792  070C                     	;# 
  4793  070D                     	;# 
  4794  070E                     	;# 
  4795  070F                     	;# 
  4796  0710                     	;# 
  4797  0711                     	;# 
  4798  0712                     	;# 
  4799  0713                     	;# 
  4800  0714                     	;# 
  4801  0716                     	;# 
  4802  0717                     	;# 
  4803  0718                     	;# 
  4804  0719                     	;# 
  4805  071A                     	;# 
  4806  071B                     	;# 
  4807  071C                     	;# 
  4808  071D                     	;# 
  4809  071E                     	;# 
  4810  0796                     	;# 
  4811  0797                     	;# 
  4812  0798                     	;# 
  4813  0799                     	;# 
  4814  079A                     	;# 
  4815  079B                     	;# 
  4816  080C                     	;# 
  4817  080D                     	;# 
  4818  080E                     	;# 
  4819  080F                     	;# 
  4820  0810                     	;# 
  4821  0811                     	;# 
  4822  0812                     	;# 
  4823  0813                     	;# 
  4824  0814                     	;# 
  4825  081A                     	;# 
  4826  081B                     	;# 
  4827  081C                     	;# 
  4828  081D                     	;# 
  4829  081E                     	;# 
  4830  081F                     	;# 
  4831  088C                     	;# 
  4832  088D                     	;# 
  4833  088E                     	;# 
  4834  088F                     	;# 
  4835  0890                     	;# 
  4836  0891                     	;# 
  4837  0892                     	;# 
  4838  0893                     	;# 
  4839  0895                     	;# 
  4840  0896                     	;# 
  4841  0897                     	;# 
  4842  0898                     	;# 
  4843  0899                     	;# 
  4844  089A                     	;# 
  4845  089B                     	;# 
  4846  090C                     	;# 
  4847  090E                     	;# 
  4848  090F                     	;# 
  4849  091F                     	;# 
  4850  091F                     	;# 
  4851  098F                     	;# 
  4852  098F                     	;# 
  4853  0990                     	;# 
  4854  0991                     	;# 
  4855  0992                     	;# 
  4856  0993                     	;# 
  4857  0994                     	;# 
  4858  0995                     	;# 
  4859  0996                     	;# 
  4860  0997                     	;# 
  4861  0E0F                     	;# 
  4862  0E10                     	;# 
  4863  0E11                     	;# 
  4864  0E12                     	;# 
  4865  0E13                     	;# 
  4866  0E14                     	;# 
  4867  0E15                     	;# 
  4868  0E16                     	;# 
  4869  0E17                     	;# 
  4870  0E18                     	;# 
  4871  0E19                     	;# 
  4872  0E1A                     	;# 
  4873  0E1B                     	;# 
  4874  0E1C                     	;# 
  4875  0E1D                     	;# 
  4876  0E1E                     	;# 
  4877  0E1F                     	;# 
  4878  0E20                     	;# 
  4879  0E21                     	;# 
  4880  0E22                     	;# 
  4881  0E23                     	;# 
  4882  0E24                     	;# 
  4883  0E25                     	;# 
  4884  0E26                     	;# 
  4885  0E27                     	;# 
  4886  0E28                     	;# 
  4887  0E29                     	;# 
  4888  0E2A                     	;# 
  4889  0E2B                     	;# 
  4890  0E2C                     	;# 
  4891  0E2D                     	;# 
  4892  0E2E                     	;# 
  4893  0E2F                     	;# 
  4894  0E30                     	;# 
  4895  0E31                     	;# 
  4896  0E32                     	;# 
  4897  0E33                     	;# 
  4898  0E34                     	;# 
  4899  0E35                     	;# 
  4900  0E36                     	;# 
  4901  0E37                     	;# 
  4902  0E8F                     	;# 
  4903  0E90                     	;# 
  4904  0E91                     	;# 
  4905  0E92                     	;# 
  4906  0E93                     	;# 
  4907  0E94                     	;# 
  4908  0E95                     	;# 
  4909  0E96                     	;# 
  4910  0E97                     	;# 
  4911  0E9C                     	;# 
  4912  0E9D                     	;# 
  4913  0E9E                     	;# 
  4914  0EA1                     	;# 
  4915  0EA2                     	;# 
  4916  0EA3                     	;# 
  4917  0EA4                     	;# 
  4918  0EA5                     	;# 
  4919  0EA9                     	;# 
  4920  0EAA                     	;# 
  4921  0EAB                     	;# 
  4922  0EAC                     	;# 
  4923  0EB1                     	;# 
  4924  0EB2                     	;# 
  4925  0EB3                     	;# 
  4926  0EB8                     	;# 
  4927  0EB9                     	;# 
  4928  0EBA                     	;# 
  4929  0EBB                     	;# 
  4930  0EBC                     	;# 
  4931  0EBD                     	;# 
  4932  0EBE                     	;# 
  4933  0EC3                     	;# 
  4934  0EC5                     	;# 
  4935  0EC6                     	;# 
  4936  0EC7                     	;# 
  4937  0EC8                     	;# 
  4938  0EC9                     	;# 
  4939  0ECA                     	;# 
  4940  0ECB                     	;# 
  4941  0ECC                     	;# 
  4942  0F10                     	;# 
  4943  0F11                     	;# 
  4944  0F12                     	;# 
  4945  0F13                     	;# 
  4946  0F14                     	;# 
  4947  0F15                     	;# 
  4948  0F16                     	;# 
  4949  0F17                     	;# 
  4950  0F18                     	;# 
  4951  0F19                     	;# 
  4952  0F1A                     	;# 
  4953  0F1B                     	;# 
  4954  0F1C                     	;# 
  4955  0F1D                     	;# 
  4956  0F1E                     	;# 
  4957  0F1F                     	;# 
  4958  0F20                     	;# 
  4959  0F21                     	;# 
  4960  0F22                     	;# 
  4961  0F23                     	;# 
  4962  0F24                     	;# 
  4963  0F25                     	;# 
  4964  0F26                     	;# 
  4965  0F27                     	;# 
  4966  0F28                     	;# 
  4967  0F29                     	;# 
  4968  0F2A                     	;# 
  4969  0F2B                     	;# 
  4970  0F2C                     	;# 
  4971  0F2D                     	;# 
  4972  0F2E                     	;# 
  4973  0F2F                     	;# 
  4974  0F30                     	;# 
  4975  0F31                     	;# 
  4976  0F32                     	;# 
  4977  0F38                     	;# 
  4978  0F39                     	;# 
  4979  0F3A                     	;# 
  4980  0F3B                     	;# 
  4981  0F3C                     	;# 
  4982  0F3D                     	;# 
  4983  0F3E                     	;# 
  4984  0F3F                     	;# 
  4985  0F40                     	;# 
  4986  0F41                     	;# 
  4987  0F43                     	;# 
  4988  0F44                     	;# 
  4989  0F45                     	;# 
  4990  0F46                     	;# 
  4991  0F47                     	;# 
  4992  0F48                     	;# 
  4993  0F49                     	;# 
  4994  0F4A                     	;# 
  4995  0F4B                     	;# 
  4996  0F4C                     	;# 
  4997  0F4E                     	;# 
  4998  0F4F                     	;# 
  4999  0F50                     	;# 
  5000  0F51                     	;# 
  5001  0F52                     	;# 
  5002  0F53                     	;# 
  5003  0F54                     	;# 
  5004  0F55                     	;# 
  5005  0F56                     	;# 
  5006  0F57                     	;# 
  5007  0F59                     	;# 
  5008  0F5A                     	;# 
  5009  0F5B                     	;# 
  5010  0F5C                     	;# 
  5011  0F5D                     	;# 
  5012  0F61                     	;# 
  5013  0F62                     	;# 
  5014  0F64                     	;# 
  5015  0F65                     	;# 
  5016  0F66                     	;# 
  5017  0F67                     	;# 
  5018  0F68                     	;# 
  5019  0F69                     	;# 
  5020  0F6A                     	;# 
  5021  0F6B                     	;# 
  5022  0F6C                     	;# 
  5023  0F6D                     	;# 
  5024  0FE4                     	;# 
  5025  0FE5                     	;# 
  5026  0FE6                     	;# 
  5027  0FE7                     	;# 
  5028  0FE8                     	;# 
  5029  0FE9                     	;# 
  5030  0FEA                     	;# 
  5031  0FEB                     	;# 
  5032  0FED                     	;# 
  5033  0FEE                     	;# 
  5034  0FEF                     	;# 
  5035  0000                     	;# 
  5036  0001                     	;# 
  5037  0002                     	;# 
  5038  0003                     	;# 
  5039  0004                     	;# 
  5040  0005                     	;# 
  5041  0006                     	;# 
  5042  0007                     	;# 
  5043  0008                     	;# 
  5044  0009                     	;# 
  5045  000A                     	;# 
  5046  000B                     	;# 
  5047  000C                     	;# 
  5048  000D                     	;# 
  5049  000E                     	;# 
  5050  000F                     	;# 
  5051  0010                     	;# 
  5052  0011                     	;# 
  5053  0012                     	;# 
  5054  0013                     	;# 
  5055  0014                     	;# 
  5056  0015                     	;# 
  5057  0016                     	;# 
  5058  0017                     	;# 
  5059  0018                     	;# 
  5060  0019                     	;# 
  5061  001A                     	;# 
  5062  001C                     	;# 
  5063  001C                     	;# 
  5064  001D                     	;# 
  5065  001D                     	;# 
  5066  001E                     	;# 
  5067  001F                     	;# 
  5068  008C                     	;# 
  5069  008C                     	;# 
  5070  008D                     	;# 
  5071  008E                     	;# 
  5072  008E                     	;# 
  5073  008F                     	;# 
  5074  0090                     	;# 
  5075  0090                     	;# 
  5076  0091                     	;# 
  5077  0093                     	;# 
  5078  0094                     	;# 
  5079  0095                     	;# 
  5080  0096                     	;# 
  5081  0097                     	;# 
  5082  0098                     	;# 
  5083  0099                     	;# 
  5084  009A                     	;# 
  5085  009B                     	;# 
  5086  009C                     	;# 
  5087  009D                     	;# 
  5088  009E                     	;# 
  5089  010C                     	;# 
  5090  010D                     	;# 
  5091  010E                     	;# 
  5092  010E                     	;# 
  5093  010F                     	;# 
  5094  0110                     	;# 
  5095  0110                     	;# 
  5096  0111                     	;# 
  5097  0112                     	;# 
  5098  0112                     	;# 
  5099  0113                     	;# 
  5100  0114                     	;# 
  5101  0114                     	;# 
  5102  0115                     	;# 
  5103  0116                     	;# 
  5104  0116                     	;# 
  5105  0117                     	;# 
  5106  0119                     	;# 
  5107  0119                     	;# 
  5108  0119                     	;# 
  5109  011A                     	;# 
  5110  011A                     	;# 
  5111  011A                     	;# 
  5112  011B                     	;# 
  5113  011B                     	;# 
  5114  011B                     	;# 
  5115  011B                     	;# 
  5116  011B                     	;# 
  5117  011C                     	;# 
  5118  011C                     	;# 
  5119  011C                     	;# 
  5120  011D                     	;# 
  5121  011D                     	;# 
  5122  011D                     	;# 
  5123  011E                     	;# 
  5124  011E                     	;# 
  5125  011E                     	;# 
  5126  011F                     	;# 
  5127  011F                     	;# 
  5128  011F                     	;# 
  5129  011F                     	;# 
  5130  011F                     	;# 
  5131  018C                     	;# 
  5132  018D                     	;# 
  5133  018E                     	;# 
  5134  018F                     	;# 
  5135  0190                     	;# 
  5136  0191                     	;# 
  5137  0192                     	;# 
  5138  0196                     	;# 
  5139  0197                     	;# 
  5140  0198                     	;# 
  5141  0199                     	;# 
  5142  019A                     	;# 
  5143  019B                     	;# 
  5144  019C                     	;# 
  5145  020C                     	;# 
  5146  020C                     	;# 
  5147  020D                     	;# 
  5148  020E                     	;# 
  5149  020F                     	;# 
  5150  020F                     	;# 
  5151  0210                     	;# 
  5152  0210                     	;# 
  5153  0211                     	;# 
  5154  0211                     	;# 
  5155  0212                     	;# 
  5156  0212                     	;# 
  5157  0213                     	;# 
  5158  0214                     	;# 
  5159  0215                     	;# 
  5160  0215                     	;# 
  5161  0216                     	;# 
  5162  0216                     	;# 
  5163  0217                     	;# 
  5164  0217                     	;# 
  5165  0218                     	;# 
  5166  0218                     	;# 
  5167  0219                     	;# 
  5168  021A                     	;# 
  5169  021B                     	;# 
  5170  021B                     	;# 
  5171  021C                     	;# 
  5172  021C                     	;# 
  5173  021D                     	;# 
  5174  021D                     	;# 
  5175  021E                     	;# 
  5176  021F                     	;# 
  5177  028C                     	;# 
  5178  028C                     	;# 
  5179  028D                     	;# 
  5180  028D                     	;# 
  5181  028E                     	;# 
  5182  028F                     	;# 
  5183  0290                     	;# 
  5184  0290                     	;# 
  5185  0291                     	;# 
  5186  0292                     	;# 
  5187  0292                     	;# 
  5188  0293                     	;# 
  5189  0293                     	;# 
  5190  0294                     	;# 
  5191  0295                     	;# 
  5192  0296                     	;# 
  5193  0296                     	;# 
  5194  0297                     	;# 
  5195  0298                     	;# 
  5196  0298                     	;# 
  5197  0299                     	;# 
  5198  0299                     	;# 
  5199  029A                     	;# 
  5200  029B                     	;# 
  5201  029C                     	;# 
  5202  029C                     	;# 
  5203  029D                     	;# 
  5204  030C                     	;# 
  5205  030C                     	;# 
  5206  030D                     	;# 
  5207  030E                     	;# 
  5208  030F                     	;# 
  5209  0310                     	;# 
  5210  0310                     	;# 
  5211  0311                     	;# 
  5212  0312                     	;# 
  5213  0313                     	;# 
  5214  0314                     	;# 
  5215  0314                     	;# 
  5216  0315                     	;# 
  5217  0316                     	;# 
  5218  0317                     	;# 
  5219  0318                     	;# 
  5220  0318                     	;# 
  5221  0319                     	;# 
  5222  031A                     	;# 
  5223  031B                     	;# 
  5224  031C                     	;# 
  5225  031C                     	;# 
  5226  031D                     	;# 
  5227  031E                     	;# 
  5228  031F                     	;# 
  5229  038C                     	;# 
  5230  038C                     	;# 
  5231  038D                     	;# 
  5232  038E                     	;# 
  5233  0390                     	;# 
  5234  0390                     	;# 
  5235  0391                     	;# 
  5236  0392                     	;# 
  5237  040C                     	;# 
  5238  040D                     	;# 
  5239  040E                     	;# 
  5240  040F                     	;# 
  5241  0410                     	;# 
  5242  0411                     	;# 
  5243  0416                     	;# 
  5244  0416                     	;# 
  5245  0417                     	;# 
  5246  0418                     	;# 
  5247  0418                     	;# 
  5248  0419                     	;# 
  5249  041A                     	;# 
  5250  041A                     	;# 
  5251  041B                     	;# 
  5252  041C                     	;# 
  5253  041C                     	;# 
  5254  041D                     	;# 
  5255  041E                     	;# 
  5256  041F                     	;# 
  5257  048C                     	;# 
  5258  048C                     	;# 
  5259  048D                     	;# 
  5260  048E                     	;# 
  5261  048F                     	;# 
  5262  048F                     	;# 
  5263  0490                     	;# 
  5264  0491                     	;# 
  5265  0492                     	;# 
  5266  0492                     	;# 
  5267  0493                     	;# 
  5268  0494                     	;# 
  5269  0495                     	;# 
  5270  0495                     	;# 
  5271  0496                     	;# 
  5272  0497                     	;# 
  5273  0498                     	;# 
  5274  0499                     	;# 
  5275  049A                     	;# 
  5276  049B                     	;# 
  5277  049C                     	;# 
  5278  049D                     	;# 
  5279  050C                     	;# 
  5280  050C                     	;# 
  5281  050D                     	;# 
  5282  050E                     	;# 
  5283  050F                     	;# 
  5284  050F                     	;# 
  5285  0510                     	;# 
  5286  0511                     	;# 
  5287  0512                     	;# 
  5288  0512                     	;# 
  5289  0513                     	;# 
  5290  0514                     	;# 
  5291  0515                     	;# 
  5292  0515                     	;# 
  5293  0516                     	;# 
  5294  0517                     	;# 
  5295  0518                     	;# 
  5296  0519                     	;# 
  5297  051A                     	;# 
  5298  051B                     	;# 
  5299  051C                     	;# 
  5300  051D                     	;# 
  5301  058C                     	;# 
  5302  058C                     	;# 
  5303  058D                     	;# 
  5304  058E                     	;# 
  5305  058F                     	;# 
  5306  058F                     	;# 
  5307  0590                     	;# 
  5308  0591                     	;# 
  5309  0592                     	;# 
  5310  0593                     	;# 
  5311  060C                     	;# 
  5312  060D                     	;# 
  5313  060E                     	;# 
  5314  060F                     	;# 
  5315  0610                     	;# 
  5316  0611                     	;# 
  5317  0612                     	;# 
  5318  0613                     	;# 
  5319  0614                     	;# 
  5320  0616                     	;# 
  5321  0617                     	;# 
  5322  0618                     	;# 
  5323  0619                     	;# 
  5324  061A                     	;# 
  5325  061B                     	;# 
  5326  061C                     	;# 
  5327  061D                     	;# 
  5328  061E                     	;# 
  5329  068C                     	;# 
  5330  068D                     	;# 
  5331  068E                     	;# 
  5332  068F                     	;# 
  5333  0690                     	;# 
  5334  0691                     	;# 
  5335  0692                     	;# 
  5336  0693                     	;# 
  5337  0694                     	;# 
  5338  070C                     	;# 
  5339  070D                     	;# 
  5340  070E                     	;# 
  5341  070F                     	;# 
  5342  0710                     	;# 
  5343  0711                     	;# 
  5344  0712                     	;# 
  5345  0713                     	;# 
  5346  0714                     	;# 
  5347  0716                     	;# 
  5348  0717                     	;# 
  5349  0718                     	;# 
  5350  0719                     	;# 
  5351  071A                     	;# 
  5352  071B                     	;# 
  5353  071C                     	;# 
  5354  071D                     	;# 
  5355  071E                     	;# 
  5356  0796                     	;# 
  5357  0797                     	;# 
  5358  0798                     	;# 
  5359  0799                     	;# 
  5360  079A                     	;# 
  5361  079B                     	;# 
  5362  080C                     	;# 
  5363  080D                     	;# 
  5364  080E                     	;# 
  5365  080F                     	;# 
  5366  0810                     	;# 
  5367  0811                     	;# 
  5368  0812                     	;# 
  5369  0813                     	;# 
  5370  0814                     	;# 
  5371  081A                     	;# 
  5372  081B                     	;# 
  5373  081C                     	;# 
  5374  081D                     	;# 
  5375  081E                     	;# 
  5376  081F                     	;# 
  5377  088C                     	;# 
  5378  088D                     	;# 
  5379  088E                     	;# 
  5380  088F                     	;# 
  5381  0890                     	;# 
  5382  0891                     	;# 
  5383  0892                     	;# 
  5384  0893                     	;# 
  5385  0895                     	;# 
  5386  0896                     	;# 
  5387  0897                     	;# 
  5388  0898                     	;# 
  5389  0899                     	;# 
  5390  089A                     	;# 
  5391  089B                     	;# 
  5392  090C                     	;# 
  5393  090E                     	;# 
  5394  090F                     	;# 
  5395  091F                     	;# 
  5396  091F                     	;# 
  5397  098F                     	;# 
  5398  098F                     	;# 
  5399  0990                     	;# 
  5400  0991                     	;# 
  5401  0992                     	;# 
  5402  0993                     	;# 
  5403  0994                     	;# 
  5404  0995                     	;# 
  5405  0996                     	;# 
  5406  0997                     	;# 
  5407  0E0F                     	;# 
  5408  0E10                     	;# 
  5409  0E11                     	;# 
  5410  0E12                     	;# 
  5411  0E13                     	;# 
  5412  0E14                     	;# 
  5413  0E15                     	;# 
  5414  0E16                     	;# 
  5415  0E17                     	;# 
  5416  0E18                     	;# 
  5417  0E19                     	;# 
  5418  0E1A                     	;# 
  5419  0E1B                     	;# 
  5420  0E1C                     	;# 
  5421  0E1D                     	;# 
  5422  0E1E                     	;# 
  5423  0E1F                     	;# 
  5424  0E20                     	;# 
  5425  0E21                     	;# 
  5426  0E22                     	;# 
  5427  0E23                     	;# 
  5428  0E24                     	;# 
  5429  0E25                     	;# 
  5430  0E26                     	;# 
  5431  0E27                     	;# 
  5432  0E28                     	;# 
  5433  0E29                     	;# 
  5434  0E2A                     	;# 
  5435  0E2B                     	;# 
  5436  0E2C                     	;# 
  5437  0E2D                     	;# 
  5438  0E2E                     	;# 
  5439  0E2F                     	;# 
  5440  0E30                     	;# 
  5441  0E31                     	;# 
  5442  0E32                     	;# 
  5443  0E33                     	;# 
  5444  0E34                     	;# 
  5445  0E35                     	;# 
  5446  0E36                     	;# 
  5447  0E37                     	;# 
  5448  0E8F                     	;# 
  5449  0E90                     	;# 
  5450  0E91                     	;# 
  5451  0E92                     	;# 
  5452  0E93                     	;# 
  5453  0E94                     	;# 
  5454  0E95                     	;# 
  5455  0E96                     	;# 
  5456  0E97                     	;# 
  5457  0E9C                     	;# 
  5458  0E9D                     	;# 
  5459  0E9E                     	;# 
  5460  0EA1                     	;# 
  5461  0EA2                     	;# 
  5462  0EA3                     	;# 
  5463  0EA4                     	;# 
  5464  0EA5                     	;# 
  5465  0EA9                     	;# 
  5466  0EAA                     	;# 
  5467  0EAB                     	;# 
  5468  0EAC                     	;# 
  5469  0EB1                     	;# 
  5470  0EB2                     	;# 
  5471  0EB3                     	;# 
  5472  0EB8                     	;# 
  5473  0EB9                     	;# 
  5474  0EBA                     	;# 
  5475  0EBB                     	;# 
  5476  0EBC                     	;# 
  5477  0EBD                     	;# 
  5478  0EBE                     	;# 
  5479  0EC3                     	;# 
  5480  0EC5                     	;# 
  5481  0EC6                     	;# 
  5482  0EC7                     	;# 
  5483  0EC8                     	;# 
  5484  0EC9                     	;# 
  5485  0ECA                     	;# 
  5486  0ECB                     	;# 
  5487  0ECC                     	;# 
  5488  0F10                     	;# 
  5489  0F11                     	;# 
  5490  0F12                     	;# 
  5491  0F13                     	;# 
  5492  0F14                     	;# 
  5493  0F15                     	;# 
  5494  0F16                     	;# 
  5495  0F17                     	;# 
  5496  0F18                     	;# 
  5497  0F19                     	;# 
  5498  0F1A                     	;# 
  5499  0F1B                     	;# 
  5500  0F1C                     	;# 
  5501  0F1D                     	;# 
  5502  0F1E                     	;# 
  5503  0F1F                     	;# 
  5504  0F20                     	;# 
  5505  0F21                     	;# 
  5506  0F22                     	;# 
  5507  0F23                     	;# 
  5508  0F24                     	;# 
  5509  0F25                     	;# 
  5510  0F26                     	;# 
  5511  0F27                     	;# 
  5512  0F28                     	;# 
  5513  0F29                     	;# 
  5514  0F2A                     	;# 
  5515  0F2B                     	;# 
  5516  0F2C                     	;# 
  5517  0F2D                     	;# 
  5518  0F2E                     	;# 
  5519  0F2F                     	;# 
  5520  0F30                     	;# 
  5521  0F31                     	;# 
  5522  0F32                     	;# 
  5523  0F38                     	;# 
  5524  0F39                     	;# 
  5525  0F3A                     	;# 
  5526  0F3B                     	;# 
  5527  0F3C                     	;# 
  5528  0F3D                     	;# 
  5529  0F3E                     	;# 
  5530  0F3F                     	;# 
  5531  0F40                     	;# 
  5532  0F41                     	;# 
  5533  0F43                     	;# 
  5534  0F44                     	;# 
  5535  0F45                     	;# 
  5536  0F46                     	;# 
  5537  0F47                     	;# 
  5538  0F48                     	;# 
  5539  0F49                     	;# 
  5540  0F4A                     	;# 
  5541  0F4B                     	;# 
  5542  0F4C                     	;# 
  5543  0F4E                     	;# 
  5544  0F4F                     	;# 
  5545  0F50                     	;# 
  5546  0F51                     	;# 
  5547  0F52                     	;# 
  5548  0F53                     	;# 
  5549  0F54                     	;# 
  5550  0F55                     	;# 
  5551  0F56                     	;# 
  5552  0F57                     	;# 
  5553  0F59                     	;# 
  5554  0F5A                     	;# 
  5555  0F5B                     	;# 
  5556  0F5C                     	;# 
  5557  0F5D                     	;# 
  5558  0F61                     	;# 
  5559  0F62                     	;# 
  5560  0F64                     	;# 
  5561  0F65                     	;# 
  5562  0F66                     	;# 
  5563  0F67                     	;# 
  5564  0F68                     	;# 
  5565  0F69                     	;# 
  5566  0F6A                     	;# 
  5567  0F6B                     	;# 
  5568  0F6C                     	;# 
  5569  0F6D                     	;# 
  5570  0FE4                     	;# 
  5571  0FE5                     	;# 
  5572  0FE6                     	;# 
  5573  0FE7                     	;# 
  5574  0FE8                     	;# 
  5575  0FE9                     	;# 
  5576  0FEA                     	;# 
  5577  0FEB                     	;# 
  5578  0FED                     	;# 
  5579  0FEE                     	;# 
  5580  0FEF                     	;# 
  5581  0000                     	;# 
  5582  0001                     	;# 
  5583  0002                     	;# 
  5584  0003                     	;# 
  5585  0004                     	;# 
  5586  0005                     	;# 
  5587  0006                     	;# 
  5588  0007                     	;# 
  5589  0008                     	;# 
  5590  0009                     	;# 
  5591  000A                     	;# 
  5592  000B                     	;# 
  5593  000C                     	;# 
  5594  000D                     	;# 
  5595  000E                     	;# 
  5596  000F                     	;# 
  5597  0010                     	;# 
  5598  0011                     	;# 
  5599  0012                     	;# 
  5600  0013                     	;# 
  5601  0014                     	;# 
  5602  0015                     	;# 
  5603  0016                     	;# 
  5604  0017                     	;# 
  5605  0018                     	;# 
  5606  0019                     	;# 
  5607  001A                     	;# 
  5608  001C                     	;# 
  5609  001C                     	;# 
  5610  001D                     	;# 
  5611  001D                     	;# 
  5612  001E                     	;# 
  5613  001F                     	;# 
  5614  008C                     	;# 
  5615  008C                     	;# 
  5616  008D                     	;# 
  5617  008E                     	;# 
  5618  008E                     	;# 
  5619  008F                     	;# 
  5620  0090                     	;# 
  5621  0090                     	;# 
  5622  0091                     	;# 
  5623  0093                     	;# 
  5624  0094                     	;# 
  5625  0095                     	;# 
  5626  0096                     	;# 
  5627  0097                     	;# 
  5628  0098                     	;# 
  5629  0099                     	;# 
  5630  009A                     	;# 
  5631  009B                     	;# 
  5632  009C                     	;# 
  5633  009D                     	;# 
  5634  009E                     	;# 
  5635  010C                     	;# 
  5636  010D                     	;# 
  5637  010E                     	;# 
  5638  010E                     	;# 
  5639  010F                     	;# 
  5640  0110                     	;# 
  5641  0110                     	;# 
  5642  0111                     	;# 
  5643  0112                     	;# 
  5644  0112                     	;# 
  5645  0113                     	;# 
  5646  0114                     	;# 
  5647  0114                     	;# 
  5648  0115                     	;# 
  5649  0116                     	;# 
  5650  0116                     	;# 
  5651  0117                     	;# 
  5652  0119                     	;# 
  5653  0119                     	;# 
  5654  0119                     	;# 
  5655  011A                     	;# 
  5656  011A                     	;# 
  5657  011A                     	;# 
  5658  011B                     	;# 
  5659  011B                     	;# 
  5660  011B                     	;# 
  5661  011B                     	;# 
  5662  011B                     	;# 
  5663  011C                     	;# 
  5664  011C                     	;# 
  5665  011C                     	;# 
  5666  011D                     	;# 
  5667  011D                     	;# 
  5668  011D                     	;# 
  5669  011E                     	;# 
  5670  011E                     	;# 
  5671  011E                     	;# 
  5672  011F                     	;# 
  5673  011F                     	;# 
  5674  011F                     	;# 
  5675  011F                     	;# 
  5676  011F                     	;# 
  5677  018C                     	;# 
  5678  018D                     	;# 
  5679  018E                     	;# 
  5680  018F                     	;# 
  5681  0190                     	;# 
  5682  0191                     	;# 
  5683  0192                     	;# 
  5684  0196                     	;# 
  5685  0197                     	;# 
  5686  0198                     	;# 
  5687  0199                     	;# 
  5688  019A                     	;# 
  5689  019B                     	;# 
  5690  019C                     	;# 
  5691  020C                     	;# 
  5692  020C                     	;# 
  5693  020D                     	;# 
  5694  020E                     	;# 
  5695  020F                     	;# 
  5696  020F                     	;# 
  5697  0210                     	;# 
  5698  0210                     	;# 
  5699  0211                     	;# 
  5700  0211                     	;# 
  5701  0212                     	;# 
  5702  0212                     	;# 
  5703  0213                     	;# 
  5704  0214                     	;# 
  5705  0215                     	;# 
  5706  0215                     	;# 
  5707  0216                     	;# 
  5708  0216                     	;# 
  5709  0217                     	;# 
  5710  0217                     	;# 
  5711  0218                     	;# 
  5712  0218                     	;# 
  5713  0219                     	;# 
  5714  021A                     	;# 
  5715  021B                     	;# 
  5716  021B                     	;# 
  5717  021C                     	;# 
  5718  021C                     	;# 
  5719  021D                     	;# 
  5720  021D                     	;# 
  5721  021E                     	;# 
  5722  021F                     	;# 
  5723  028C                     	;# 
  5724  028C                     	;# 
  5725  028D                     	;# 
  5726  028D                     	;# 
  5727  028E                     	;# 
  5728  028F                     	;# 
  5729  0290                     	;# 
  5730  0290                     	;# 
  5731  0291                     	;# 
  5732  0292                     	;# 
  5733  0292                     	;# 
  5734  0293                     	;# 
  5735  0293                     	;# 
  5736  0294                     	;# 
  5737  0295                     	;# 
  5738  0296                     	;# 
  5739  0296                     	;# 
  5740  0297                     	;# 
  5741  0298                     	;# 
  5742  0298                     	;# 
  5743  0299                     	;# 
  5744  0299                     	;# 
  5745  029A                     	;# 
  5746  029B                     	;# 
  5747  029C                     	;# 
  5748  029C                     	;# 
  5749  029D                     	;# 
  5750  030C                     	;# 
  5751  030C                     	;# 
  5752  030D                     	;# 
  5753  030E                     	;# 
  5754  030F                     	;# 
  5755  0310                     	;# 
  5756  0310                     	;# 
  5757  0311                     	;# 
  5758  0312                     	;# 
  5759  0313                     	;# 
  5760  0314                     	;# 
  5761  0314                     	;# 
  5762  0315                     	;# 
  5763  0316                     	;# 
  5764  0317                     	;# 
  5765  0318                     	;# 
  5766  0318                     	;# 
  5767  0319                     	;# 
  5768  031A                     	;# 
  5769  031B                     	;# 
  5770  031C                     	;# 
  5771  031C                     	;# 
  5772  031D                     	;# 
  5773  031E                     	;# 
  5774  031F                     	;# 
  5775  038C                     	;# 
  5776  038C                     	;# 
  5777  038D                     	;# 
  5778  038E                     	;# 
  5779  0390                     	;# 
  5780  0390                     	;# 
  5781  0391                     	;# 
  5782  0392                     	;# 
  5783  040C                     	;# 
  5784  040D                     	;# 
  5785  040E                     	;# 
  5786  040F                     	;# 
  5787  0410                     	;# 
  5788  0411                     	;# 
  5789  0416                     	;# 
  5790  0416                     	;# 
  5791  0417                     	;# 
  5792  0418                     	;# 
  5793  0418                     	;# 
  5794  0419                     	;# 
  5795  041A                     	;# 
  5796  041A                     	;# 
  5797  041B                     	;# 
  5798  041C                     	;# 
  5799  041C                     	;# 
  5800  041D                     	;# 
  5801  041E                     	;# 
  5802  041F                     	;# 
  5803  048C                     	;# 
  5804  048C                     	;# 
  5805  048D                     	;# 
  5806  048E                     	;# 
  5807  048F                     	;# 
  5808  048F                     	;# 
  5809  0490                     	;# 
  5810  0491                     	;# 
  5811  0492                     	;# 
  5812  0492                     	;# 
  5813  0493                     	;# 
  5814  0494                     	;# 
  5815  0495                     	;# 
  5816  0495                     	;# 
  5817  0496                     	;# 
  5818  0497                     	;# 
  5819  0498                     	;# 
  5820  0499                     	;# 
  5821  049A                     	;# 
  5822  049B                     	;# 
  5823  049C                     	;# 
  5824  049D                     	;# 
  5825  050C                     	;# 
  5826  050C                     	;# 
  5827  050D                     	;# 
  5828  050E                     	;# 
  5829  050F                     	;# 
  5830  050F                     	;# 
  5831  0510                     	;# 
  5832  0511                     	;# 
  5833  0512                     	;# 
  5834  0512                     	;# 
  5835  0513                     	;# 
  5836  0514                     	;# 
  5837  0515                     	;# 
  5838  0515                     	;# 
  5839  0516                     	;# 
  5840  0517                     	;# 
  5841  0518                     	;# 
  5842  0519                     	;# 
  5843  051A                     	;# 
  5844  051B                     	;# 
  5845  051C                     	;# 
  5846  051D                     	;# 
  5847  058C                     	;# 
  5848  058C                     	;# 
  5849  058D                     	;# 
  5850  058E                     	;# 
  5851  058F                     	;# 
  5852  058F                     	;# 
  5853  0590                     	;# 
  5854  0591                     	;# 
  5855  0592                     	;# 
  5856  0593                     	;# 
  5857  060C                     	;# 
  5858  060D                     	;# 
  5859  060E                     	;# 
  5860  060F                     	;# 
  5861  0610                     	;# 
  5862  0611                     	;# 
  5863  0612                     	;# 
  5864  0613                     	;# 
  5865  0614                     	;# 
  5866  0616                     	;# 
  5867  0617                     	;# 
  5868  0618                     	;# 
  5869  0619                     	;# 
  5870  061A                     	;# 
  5871  061B                     	;# 
  5872  061C                     	;# 
  5873  061D                     	;# 
  5874  061E                     	;# 
  5875  068C                     	;# 
  5876  068D                     	;# 
  5877  068E                     	;# 
  5878  068F                     	;# 
  5879  0690                     	;# 
  5880  0691                     	;# 
  5881  0692                     	;# 
  5882  0693                     	;# 
  5883  0694                     	;# 
  5884  070C                     	;# 
  5885  070D                     	;# 
  5886  070E                     	;# 
  5887  070F                     	;# 
  5888  0710                     	;# 
  5889  0711                     	;# 
  5890  0712                     	;# 
  5891  0713                     	;# 
  5892  0714                     	;# 
  5893  0716                     	;# 
  5894  0717                     	;# 
  5895  0718                     	;# 
  5896  0719                     	;# 
  5897  071A                     	;# 
  5898  071B                     	;# 
  5899  071C                     	;# 
  5900  071D                     	;# 
  5901  071E                     	;# 
  5902  0796                     	;# 
  5903  0797                     	;# 
  5904  0798                     	;# 
  5905  0799                     	;# 
  5906  079A                     	;# 
  5907  079B                     	;# 
  5908  080C                     	;# 
  5909  080D                     	;# 
  5910  080E                     	;# 
  5911  080F                     	;# 
  5912  0810                     	;# 
  5913  0811                     	;# 
  5914  0812                     	;# 
  5915  0813                     	;# 
  5916  0814                     	;# 
  5917  081A                     	;# 
  5918  081B                     	;# 
  5919  081C                     	;# 
  5920  081D                     	;# 
  5921  081E                     	;# 
  5922  081F                     	;# 
  5923  088C                     	;# 
  5924  088D                     	;# 
  5925  088E                     	;# 
  5926  088F                     	;# 
  5927  0890                     	;# 
  5928  0891                     	;# 
  5929  0892                     	;# 
  5930  0893                     	;# 
  5931  0895                     	;# 
  5932  0896                     	;# 
  5933  0897                     	;# 
  5934  0898                     	;# 
  5935  0899                     	;# 
  5936  089A                     	;# 
  5937  089B                     	;# 
  5938  090C                     	;# 
  5939  090E                     	;# 
  5940  090F                     	;# 
  5941  091F                     	;# 
  5942  091F                     	;# 
  5943  098F                     	;# 
  5944  098F                     	;# 
  5945  0990                     	;# 
  5946  0991                     	;# 
  5947  0992                     	;# 
  5948  0993                     	;# 
  5949  0994                     	;# 
  5950  0995                     	;# 
  5951  0996                     	;# 
  5952  0997                     	;# 
  5953  0E0F                     	;# 
  5954  0E10                     	;# 
  5955  0E11                     	;# 
  5956  0E12                     	;# 
  5957  0E13                     	;# 
  5958  0E14                     	;# 
  5959  0E15                     	;# 
  5960  0E16                     	;# 
  5961  0E17                     	;# 
  5962  0E18                     	;# 
  5963  0E19                     	;# 
  5964  0E1A                     	;# 
  5965  0E1B                     	;# 
  5966  0E1C                     	;# 
  5967  0E1D                     	;# 
  5968  0E1E                     	;# 
  5969  0E1F                     	;# 
  5970  0E20                     	;# 
  5971  0E21                     	;# 
  5972  0E22                     	;# 
  5973  0E23                     	;# 
  5974  0E24                     	;# 
  5975  0E25                     	;# 
  5976  0E26                     	;# 
  5977  0E27                     	;# 
  5978  0E28                     	;# 
  5979  0E29                     	;# 
  5980  0E2A                     	;# 
  5981  0E2B                     	;# 
  5982  0E2C                     	;# 
  5983  0E2D                     	;# 
  5984  0E2E                     	;# 
  5985  0E2F                     	;# 
  5986  0E30                     	;# 
  5987  0E31                     	;# 
  5988  0E32                     	;# 
  5989  0E33                     	;# 
  5990  0E34                     	;# 
  5991  0E35                     	;# 
  5992  0E36                     	;# 
  5993  0E37                     	;# 
  5994  0E8F                     	;# 
  5995  0E90                     	;# 
  5996  0E91                     	;# 
  5997  0E92                     	;# 
  5998  0E93                     	;# 
  5999  0E94                     	;# 
  6000  0E95                     	;# 
  6001  0E96                     	;# 
  6002  0E97                     	;# 
  6003  0E9C                     	;# 
  6004  0E9D                     	;# 
  6005  0E9E                     	;# 
  6006  0EA1                     	;# 
  6007  0EA2                     	;# 
  6008  0EA3                     	;# 
  6009  0EA4                     	;# 
  6010  0EA5                     	;# 
  6011  0EA9                     	;# 
  6012  0EAA                     	;# 
  6013  0EAB                     	;# 
  6014  0EAC                     	;# 
  6015  0EB1                     	;# 
  6016  0EB2                     	;# 
  6017  0EB3                     	;# 
  6018  0EB8                     	;# 
  6019  0EB9                     	;# 
  6020  0EBA                     	;# 
  6021  0EBB                     	;# 
  6022  0EBC                     	;# 
  6023  0EBD                     	;# 
  6024  0EBE                     	;# 
  6025  0EC3                     	;# 
  6026  0EC5                     	;# 
  6027  0EC6                     	;# 
  6028  0EC7                     	;# 
  6029  0EC8                     	;# 
  6030  0EC9                     	;# 
  6031  0ECA                     	;# 
  6032  0ECB                     	;# 
  6033  0ECC                     	;# 
  6034  0F10                     	;# 
  6035  0F11                     	;# 
  6036  0F12                     	;# 
  6037  0F13                     	;# 
  6038  0F14                     	;# 
  6039  0F15                     	;# 
  6040  0F16                     	;# 
  6041  0F17                     	;# 
  6042  0F18                     	;# 
  6043  0F19                     	;# 
  6044  0F1A                     	;# 
  6045  0F1B                     	;# 
  6046  0F1C                     	;# 
  6047  0F1D                     	;# 
  6048  0F1E                     	;# 
  6049  0F1F                     	;# 
  6050  0F20                     	;# 
  6051  0F21                     	;# 
  6052  0F22                     	;# 
  6053  0F23                     	;# 
  6054  0F24                     	;# 
  6055  0F25                     	;# 
  6056  0F26                     	;# 
  6057  0F27                     	;# 
  6058  0F28                     	;# 
  6059  0F29                     	;# 
  6060  0F2A                     	;# 
  6061  0F2B                     	;# 
  6062  0F2C                     	;# 
  6063  0F2D                     	;# 
  6064  0F2E                     	;# 
  6065  0F2F                     	;# 
  6066  0F30                     	;# 
  6067  0F31                     	;# 
  6068  0F32                     	;# 
  6069  0F38                     	;# 
  6070  0F39                     	;# 
  6071  0F3A                     	;# 
  6072  0F3B                     	;# 
  6073  0F3C                     	;# 
  6074  0F3D                     	;# 
  6075  0F3E                     	;# 
  6076  0F3F                     	;# 
  6077  0F40                     	;# 
  6078  0F41                     	;# 
  6079  0F43                     	;# 
  6080  0F44                     	;# 
  6081  0F45                     	;# 
  6082  0F46                     	;# 
  6083  0F47                     	;# 
  6084  0F48                     	;# 
  6085  0F49                     	;# 
  6086  0F4A                     	;# 
  6087  0F4B                     	;# 
  6088  0F4C                     	;# 
  6089  0F4E                     	;# 
  6090  0F4F                     	;# 
  6091  0F50                     	;# 
  6092  0F51                     	;# 
  6093  0F52                     	;# 
  6094  0F53                     	;# 
  6095  0F54                     	;# 
  6096  0F55                     	;# 
  6097  0F56                     	;# 
  6098  0F57                     	;# 
  6099  0F59                     	;# 
  6100  0F5A                     	;# 
  6101  0F5B                     	;# 
  6102  0F5C                     	;# 
  6103  0F5D                     	;# 
  6104  0F61                     	;# 
  6105  0F62                     	;# 
  6106  0F64                     	;# 
  6107  0F65                     	;# 
  6108  0F66                     	;# 
  6109  0F67                     	;# 
  6110  0F68                     	;# 
  6111  0F69                     	;# 
  6112  0F6A                     	;# 
  6113  0F6B                     	;# 
  6114  0F6C                     	;# 
  6115  0F6D                     	;# 
  6116  0FE4                     	;# 
  6117  0FE5                     	;# 
  6118  0FE6                     	;# 
  6119  0FE7                     	;# 
  6120  0FE8                     	;# 
  6121  0FE9                     	;# 
  6122  0FEA                     	;# 
  6123  0FEB                     	;# 
  6124  0FED                     	;# 
  6125  0FEE                     	;# 
  6126  0FEF                     	;# 
  6127  0000                     	;# 
  6128  0001                     	;# 
  6129  0002                     	;# 
  6130  0003                     	;# 
  6131  0004                     	;# 
  6132  0005                     	;# 
  6133  0006                     	;# 
  6134  0007                     	;# 
  6135  0008                     	;# 
  6136  0009                     	;# 
  6137  000A                     	;# 
  6138  000B                     	;# 
  6139  000C                     	;# 
  6140  000D                     	;# 
  6141  000E                     	;# 
  6142  000F                     	;# 
  6143  0010                     	;# 
  6144  0011                     	;# 
  6145  0012                     	;# 
  6146  0013                     	;# 
  6147  0014                     	;# 
  6148  0015                     	;# 
  6149  0016                     	;# 
  6150  0017                     	;# 
  6151  0018                     	;# 
  6152  0019                     	;# 
  6153  001A                     	;# 
  6154  001C                     	;# 
  6155  001C                     	;# 
  6156  001D                     	;# 
  6157  001D                     	;# 
  6158  001E                     	;# 
  6159  001F                     	;# 
  6160  008C                     	;# 
  6161  008C                     	;# 
  6162  008D                     	;# 
  6163  008E                     	;# 
  6164  008E                     	;# 
  6165  008F                     	;# 
  6166  0090                     	;# 
  6167  0090                     	;# 
  6168  0091                     	;# 
  6169  0093                     	;# 
  6170  0094                     	;# 
  6171  0095                     	;# 
  6172  0096                     	;# 
  6173  0097                     	;# 
  6174  0098                     	;# 
  6175  0099                     	;# 
  6176  009A                     	;# 
  6177  009B                     	;# 
  6178  009C                     	;# 
  6179  009D                     	;# 
  6180  009E                     	;# 
  6181  010C                     	;# 
  6182  010D                     	;# 
  6183  010E                     	;# 
  6184  010E                     	;# 
  6185  010F                     	;# 
  6186  0110                     	;# 
  6187  0110                     	;# 
  6188  0111                     	;# 
  6189  0112                     	;# 
  6190  0112                     	;# 
  6191  0113                     	;# 
  6192  0114                     	;# 
  6193  0114                     	;# 
  6194  0115                     	;# 
  6195  0116                     	;# 
  6196  0116                     	;# 
  6197  0117                     	;# 
  6198  0119                     	;# 
  6199  0119                     	;# 
  6200  0119                     	;# 
  6201  011A                     	;# 
  6202  011A                     	;# 
  6203  011A                     	;# 
  6204  011B                     	;# 
  6205  011B                     	;# 
  6206  011B                     	;# 
  6207  011B                     	;# 
  6208  011B                     	;# 
  6209  011C                     	;# 
  6210  011C                     	;# 
  6211  011C                     	;# 
  6212  011D                     	;# 
  6213  011D                     	;# 
  6214  011D                     	;# 
  6215  011E                     	;# 
  6216  011E                     	;# 
  6217  011E                     	;# 
  6218  011F                     	;# 
  6219  011F                     	;# 
  6220  011F                     	;# 
  6221  011F                     	;# 
  6222  011F                     	;# 
  6223  018C                     	;# 
  6224  018D                     	;# 
  6225  018E                     	;# 
  6226  018F                     	;# 
  6227  0190                     	;# 
  6228  0191                     	;# 
  6229  0192                     	;# 
  6230  0196                     	;# 
  6231  0197                     	;# 
  6232  0198                     	;# 
  6233  0199                     	;# 
  6234  019A                     	;# 
  6235  019B                     	;# 
  6236  019C                     	;# 
  6237  020C                     	;# 
  6238  020C                     	;# 
  6239  020D                     	;# 
  6240  020E                     	;# 
  6241  020F                     	;# 
  6242  020F                     	;# 
  6243  0210                     	;# 
  6244  0210                     	;# 
  6245  0211                     	;# 
  6246  0211                     	;# 
  6247  0212                     	;# 
  6248  0212                     	;# 
  6249  0213                     	;# 
  6250  0214                     	;# 
  6251  0215                     	;# 
  6252  0215                     	;# 
  6253  0216                     	;# 
  6254  0216                     	;# 
  6255  0217                     	;# 
  6256  0217                     	;# 
  6257  0218                     	;# 
  6258  0218                     	;# 
  6259  0219                     	;# 
  6260  021A                     	;# 
  6261  021B                     	;# 
  6262  021B                     	;# 
  6263  021C                     	;# 
  6264  021C                     	;# 
  6265  021D                     	;# 
  6266  021D                     	;# 
  6267  021E                     	;# 
  6268  021F                     	;# 
  6269  028C                     	;# 
  6270  028C                     	;# 
  6271  028D                     	;# 
  6272  028D                     	;# 
  6273  028E                     	;# 
  6274  028F                     	;# 
  6275  0290                     	;# 
  6276  0290                     	;# 
  6277  0291                     	;# 
  6278  0292                     	;# 
  6279  0292                     	;# 
  6280  0293                     	;# 
  6281  0293                     	;# 
  6282  0294                     	;# 
  6283  0295                     	;# 
  6284  0296                     	;# 
  6285  0296                     	;# 
  6286  0297                     	;# 
  6287  0298                     	;# 
  6288  0298                     	;# 
  6289  0299                     	;# 
  6290  0299                     	;# 
  6291  029A                     	;# 
  6292  029B                     	;# 
  6293  029C                     	;# 
  6294  029C                     	;# 
  6295  029D                     	;# 
  6296  030C                     	;# 
  6297  030C                     	;# 
  6298  030D                     	;# 
  6299  030E                     	;# 
  6300  030F                     	;# 
  6301  0310                     	;# 
  6302  0310                     	;# 
  6303  0311                     	;# 
  6304  0312                     	;# 
  6305  0313                     	;# 
  6306  0314                     	;# 
  6307  0314                     	;# 
  6308  0315                     	;# 
  6309  0316                     	;# 
  6310  0317                     	;# 
  6311  0318                     	;# 
  6312  0318                     	;# 
  6313  0319                     	;# 
  6314  031A                     	;# 
  6315  031B                     	;# 
  6316  031C                     	;# 
  6317  031C                     	;# 
  6318  031D                     	;# 
  6319  031E                     	;# 
  6320  031F                     	;# 
  6321  038C                     	;# 
  6322  038C                     	;# 
  6323  038D                     	;# 
  6324  038E                     	;# 
  6325  0390                     	;# 
  6326  0390                     	;# 
  6327  0391                     	;# 
  6328  0392                     	;# 
  6329  040C                     	;# 
  6330  040D                     	;# 
  6331  040E                     	;# 
  6332  040F                     	;# 
  6333  0410                     	;# 
  6334  0411                     	;# 
  6335  0416                     	;# 
  6336  0416                     	;# 
  6337  0417                     	;# 
  6338  0418                     	;# 
  6339  0418                     	;# 
  6340  0419                     	;# 
  6341  041A                     	;# 
  6342  041A                     	;# 
  6343  041B                     	;# 
  6344  041C                     	;# 
  6345  041C                     	;# 
  6346  041D                     	;# 
  6347  041E                     	;# 
  6348  041F                     	;# 
  6349  048C                     	;# 
  6350  048C                     	;# 
  6351  048D                     	;# 
  6352  048E                     	;# 
  6353  048F                     	;# 
  6354  048F                     	;# 
  6355  0490                     	;# 
  6356  0491                     	;# 
  6357  0492                     	;# 
  6358  0492                     	;# 
  6359  0493                     	;# 
  6360  0494                     	;# 
  6361  0495                     	;# 
  6362  0495                     	;# 
  6363  0496                     	;# 
  6364  0497                     	;# 
  6365  0498                     	;# 
  6366  0499                     	;# 
  6367  049A                     	;# 
  6368  049B                     	;# 
  6369  049C                     	;# 
  6370  049D                     	;# 
  6371  050C                     	;# 
  6372  050C                     	;# 
  6373  050D                     	;# 
  6374  050E                     	;# 
  6375  050F                     	;# 
  6376  050F                     	;# 
  6377  0510                     	;# 
  6378  0511                     	;# 
  6379  0512                     	;# 
  6380  0512                     	;# 
  6381  0513                     	;# 
  6382  0514                     	;# 
  6383  0515                     	;# 
  6384  0515                     	;# 
  6385  0516                     	;# 
  6386  0517                     	;# 
  6387  0518                     	;# 
  6388  0519                     	;# 
  6389  051A                     	;# 
  6390  051B                     	;# 
  6391  051C                     	;# 
  6392  051D                     	;# 
  6393  058C                     	;# 
  6394  058C                     	;# 
  6395  058D                     	;# 
  6396  058E                     	;# 
  6397  058F                     	;# 
  6398  058F                     	;# 
  6399  0590                     	;# 
  6400  0591                     	;# 
  6401  0592                     	;# 
  6402  0593                     	;# 
  6403  060C                     	;# 
  6404  060D                     	;# 
  6405  060E                     	;# 
  6406  060F                     	;# 
  6407  0610                     	;# 
  6408  0611                     	;# 
  6409  0612                     	;# 
  6410  0613                     	;# 
  6411  0614                     	;# 
  6412  0616                     	;# 
  6413  0617                     	;# 
  6414  0618                     	;# 
  6415  0619                     	;# 
  6416  061A                     	;# 
  6417  061B                     	;# 
  6418  061C                     	;# 
  6419  061D                     	;# 
  6420  061E                     	;# 
  6421  068C                     	;# 
  6422  068D                     	;# 
  6423  068E                     	;# 
  6424  068F                     	;# 
  6425  0690                     	;# 
  6426  0691                     	;# 
  6427  0692                     	;# 
  6428  0693                     	;# 
  6429  0694                     	;# 
  6430  070C                     	;# 
  6431  070D                     	;# 
  6432  070E                     	;# 
  6433  070F                     	;# 
  6434  0710                     	;# 
  6435  0711                     	;# 
  6436  0712                     	;# 
  6437  0713                     	;# 
  6438  0714                     	;# 
  6439  0716                     	;# 
  6440  0717                     	;# 
  6441  0718                     	;# 
  6442  0719                     	;# 
  6443  071A                     	;# 
  6444  071B                     	;# 
  6445  071C                     	;# 
  6446  071D                     	;# 
  6447  071E                     	;# 
  6448  0796                     	;# 
  6449  0797                     	;# 
  6450  0798                     	;# 
  6451  0799                     	;# 
  6452  079A                     	;# 
  6453  079B                     	;# 
  6454  080C                     	;# 
  6455  080D                     	;# 
  6456  080E                     	;# 
  6457  080F                     	;# 
  6458  0810                     	;# 
  6459  0811                     	;# 
  6460  0812                     	;# 
  6461  0813                     	;# 
  6462  0814                     	;# 
  6463  081A                     	;# 
  6464  081B                     	;# 
  6465  081C                     	;# 
  6466  081D                     	;# 
  6467  081E                     	;# 
  6468  081F                     	;# 
  6469  088C                     	;# 
  6470  088D                     	;# 
  6471  088E                     	;# 
  6472  088F                     	;# 
  6473  0890                     	;# 
  6474  0891                     	;# 
  6475  0892                     	;# 
  6476  0893                     	;# 
  6477  0895                     	;# 
  6478  0896                     	;# 
  6479  0897                     	;# 
  6480  0898                     	;# 
  6481  0899                     	;# 
  6482  089A                     	;# 
  6483  089B                     	;# 
  6484  090C                     	;# 
  6485  090E                     	;# 
  6486  090F                     	;# 
  6487  091F                     	;# 
  6488  091F                     	;# 
  6489  098F                     	;# 
  6490  098F                     	;# 
  6491  0990                     	;# 
  6492  0991                     	;# 
  6493  0992                     	;# 
  6494  0993                     	;# 
  6495  0994                     	;# 
  6496  0995                     	;# 
  6497  0996                     	;# 
  6498  0997                     	;# 
  6499  0E0F                     	;# 
  6500  0E10                     	;# 
  6501  0E11                     	;# 
  6502  0E12                     	;# 
  6503  0E13                     	;# 
  6504  0E14                     	;# 
  6505  0E15                     	;# 
  6506  0E16                     	;# 
  6507  0E17                     	;# 
  6508  0E18                     	;# 
  6509  0E19                     	;# 
  6510  0E1A                     	;# 
  6511  0E1B                     	;# 
  6512  0E1C                     	;# 
  6513  0E1D                     	;# 
  6514  0E1E                     	;# 
  6515  0E1F                     	;# 
  6516  0E20                     	;# 
  6517  0E21                     	;# 
  6518  0E22                     	;# 
  6519  0E23                     	;# 
  6520  0E24                     	;# 
  6521  0E25                     	;# 
  6522  0E26                     	;# 
  6523  0E27                     	;# 
  6524  0E28                     	;# 
  6525  0E29                     	;# 
  6526  0E2A                     	;# 
  6527  0E2B                     	;# 
  6528  0E2C                     	;# 
  6529  0E2D                     	;# 
  6530  0E2E                     	;# 
  6531  0E2F                     	;# 
  6532  0E30                     	;# 
  6533  0E31                     	;# 
  6534  0E32                     	;# 
  6535  0E33                     	;# 
  6536  0E34                     	;# 
  6537  0E35                     	;# 
  6538  0E36                     	;# 
  6539  0E37                     	;# 
  6540  0E8F                     	;# 
  6541  0E90                     	;# 
  6542  0E91                     	;# 
  6543  0E92                     	;# 
  6544  0E93                     	;# 
  6545  0E94                     	;# 
  6546  0E95                     	;# 
  6547  0E96                     	;# 
  6548  0E97                     	;# 
  6549  0E9C                     	;# 
  6550  0E9D                     	;# 
  6551  0E9E                     	;# 
  6552  0EA1                     	;# 
  6553  0EA2                     	;# 
  6554  0EA3                     	;# 
  6555  0EA4                     	;# 
  6556  0EA5                     	;# 
  6557  0EA9                     	;# 
  6558  0EAA                     	;# 
  6559  0EAB                     	;# 
  6560  0EAC                     	;# 
  6561  0EB1                     	;# 
  6562  0EB2                     	;# 
  6563  0EB3                     	;# 
  6564  0EB8                     	;# 
  6565  0EB9                     	;# 
  6566  0EBA                     	;# 
  6567  0EBB                     	;# 
  6568  0EBC                     	;# 
  6569  0EBD                     	;# 
  6570  0EBE                     	;# 
  6571  0EC3                     	;# 
  6572  0EC5                     	;# 
  6573  0EC6                     	;# 
  6574  0EC7                     	;# 
  6575  0EC8                     	;# 
  6576  0EC9                     	;# 
  6577  0ECA                     	;# 
  6578  0ECB                     	;# 
  6579  0ECC                     	;# 
  6580  0F10                     	;# 
  6581  0F11                     	;# 
  6582  0F12                     	;# 
  6583  0F13                     	;# 
  6584  0F14                     	;# 
  6585  0F15                     	;# 
  6586  0F16                     	;# 
  6587  0F17                     	;# 
  6588  0F18                     	;# 
  6589  0F19                     	;# 
  6590  0F1A                     	;# 
  6591  0F1B                     	;# 
  6592  0F1C                     	;# 
  6593  0F1D                     	;# 
  6594  0F1E                     	;# 
  6595  0F1F                     	;# 
  6596  0F20                     	;# 
  6597  0F21                     	;# 
  6598  0F22                     	;# 
  6599  0F23                     	;# 
  6600  0F24                     	;# 
  6601  0F25                     	;# 
  6602  0F26                     	;# 
  6603  0F27                     	;# 
  6604  0F28                     	;# 
  6605  0F29                     	;# 
  6606  0F2A                     	;# 
  6607  0F2B                     	;# 
  6608  0F2C                     	;# 
  6609  0F2D                     	;# 
  6610  0F2E                     	;# 
  6611  0F2F                     	;# 
  6612  0F30                     	;# 
  6613  0F31                     	;# 
  6614  0F32                     	;# 
  6615  0F38                     	;# 
  6616  0F39                     	;# 
  6617  0F3A                     	;# 
  6618  0F3B                     	;# 
  6619  0F3C                     	;# 
  6620  0F3D                     	;# 
  6621  0F3E                     	;# 
  6622  0F3F                     	;# 
  6623  0F40                     	;# 
  6624  0F41                     	;# 
  6625  0F43                     	;# 
  6626  0F44                     	;# 
  6627  0F45                     	;# 
  6628  0F46                     	;# 
  6629  0F47                     	;# 
  6630  0F48                     	;# 
  6631  0F49                     	;# 
  6632  0F4A                     	;# 
  6633  0F4B                     	;# 
  6634  0F4C                     	;# 
  6635  0F4E                     	;# 
  6636  0F4F                     	;# 
  6637  0F50                     	;# 
  6638  0F51                     	;# 
  6639  0F52                     	;# 
  6640  0F53                     	;# 
  6641  0F54                     	;# 
  6642  0F55                     	;# 
  6643  0F56                     	;# 
  6644  0F57                     	;# 
  6645  0F59                     	;# 
  6646  0F5A                     	;# 
  6647  0F5B                     	;# 
  6648  0F5C                     	;# 
  6649  0F5D                     	;# 
  6650  0F61                     	;# 
  6651  0F62                     	;# 
  6652  0F64                     	;# 
  6653  0F65                     	;# 
  6654  0F66                     	;# 
  6655  0F67                     	;# 
  6656  0F68                     	;# 
  6657  0F69                     	;# 
  6658  0F6A                     	;# 
  6659  0F6B                     	;# 
  6660  0F6C                     	;# 
  6661  0F6D                     	;# 
  6662  0FE4                     	;# 
  6663  0FE5                     	;# 
  6664  0FE6                     	;# 
  6665  0FE7                     	;# 
  6666  0FE8                     	;# 
  6667  0FE9                     	;# 
  6668  0FEA                     	;# 
  6669  0FEB                     	;# 
  6670  0FED                     	;# 
  6671  0FEE                     	;# 
  6672  0FEF                     	;# 
  6673  0000                     	;# 
  6674  0001                     	;# 
  6675  0002                     	;# 
  6676  0003                     	;# 
  6677  0004                     	;# 
  6678  0005                     	;# 
  6679  0006                     	;# 
  6680  0007                     	;# 
  6681  0008                     	;# 
  6682  0009                     	;# 
  6683  000A                     	;# 
  6684  000B                     	;# 
  6685  000C                     	;# 
  6686  000D                     	;# 
  6687  000E                     	;# 
  6688  000F                     	;# 
  6689  0010                     	;# 
  6690  0011                     	;# 
  6691  0012                     	;# 
  6692  0013                     	;# 
  6693  0014                     	;# 
  6694  0015                     	;# 
  6695  0016                     	;# 
  6696  0017                     	;# 
  6697  0018                     	;# 
  6698  0019                     	;# 
  6699  001A                     	;# 
  6700  001C                     	;# 
  6701  001C                     	;# 
  6702  001D                     	;# 
  6703  001D                     	;# 
  6704  001E                     	;# 
  6705  001F                     	;# 
  6706  008C                     	;# 
  6707  008C                     	;# 
  6708  008D                     	;# 
  6709  008E                     	;# 
  6710  008E                     	;# 
  6711  008F                     	;# 
  6712  0090                     	;# 
  6713  0090                     	;# 
  6714  0091                     	;# 
  6715  0093                     	;# 
  6716  0094                     	;# 
  6717  0095                     	;# 
  6718  0096                     	;# 
  6719  0097                     	;# 
  6720  0098                     	;# 
  6721  0099                     	;# 
  6722  009A                     	;# 
  6723  009B                     	;# 
  6724  009C                     	;# 
  6725  009D                     	;# 
  6726  009E                     	;# 
  6727  010C                     	;# 
  6728  010D                     	;# 
  6729  010E                     	;# 
  6730  010E                     	;# 
  6731  010F                     	;# 
  6732  0110                     	;# 
  6733  0110                     	;# 
  6734  0111                     	;# 
  6735  0112                     	;# 
  6736  0112                     	;# 
  6737  0113                     	;# 
  6738  0114                     	;# 
  6739  0114                     	;# 
  6740  0115                     	;# 
  6741  0116                     	;# 
  6742  0116                     	;# 
  6743  0117                     	;# 
  6744  0119                     	;# 
  6745  0119                     	;# 
  6746  0119                     	;# 
  6747  011A                     	;# 
  6748  011A                     	;# 
  6749  011A                     	;# 
  6750  011B                     	;# 
  6751  011B                     	;# 
  6752  011B                     	;# 
  6753  011B                     	;# 
  6754  011B                     	;# 
  6755  011C                     	;# 
  6756  011C                     	;# 
  6757  011C                     	;# 
  6758  011D                     	;# 
  6759  011D                     	;# 
  6760  011D                     	;# 
  6761  011E                     	;# 
  6762  011E                     	;# 
  6763  011E                     	;# 
  6764  011F                     	;# 
  6765  011F                     	;# 
  6766  011F                     	;# 
  6767  011F                     	;# 
  6768  011F                     	;# 
  6769  018C                     	;# 
  6770  018D                     	;# 
  6771  018E                     	;# 
  6772  018F                     	;# 
  6773  0190                     	;# 
  6774  0191                     	;# 
  6775  0192                     	;# 
  6776  0196                     	;# 
  6777  0197                     	;# 
  6778  0198                     	;# 
  6779  0199                     	;# 
  6780  019A                     	;# 
  6781  019B                     	;# 
  6782  019C                     	;# 
  6783  020C                     	;# 
  6784  020C                     	;# 
  6785  020D                     	;# 
  6786  020E                     	;# 
  6787  020F                     	;# 
  6788  020F                     	;# 
  6789  0210                     	;# 
  6790  0210                     	;# 
  6791  0211                     	;# 
  6792  0211                     	;# 
  6793  0212                     	;# 
  6794  0212                     	;# 
  6795  0213                     	;# 
  6796  0214                     	;# 
  6797  0215                     	;# 
  6798  0215                     	;# 
  6799  0216                     	;# 
  6800  0216                     	;# 
  6801  0217                     	;# 
  6802  0217                     	;# 
  6803  0218                     	;# 
  6804  0218                     	;# 
  6805  0219                     	;# 
  6806  021A                     	;# 
  6807  021B                     	;# 
  6808  021B                     	;# 
  6809  021C                     	;# 
  6810  021C                     	;# 
  6811  021D                     	;# 
  6812  021D                     	;# 
  6813  021E                     	;# 
  6814  021F                     	;# 
  6815  028C                     	;# 
  6816  028C                     	;# 
  6817  028D                     	;# 
  6818  028D                     	;# 
  6819  028E                     	;# 
  6820  028F                     	;# 
  6821  0290                     	;# 
  6822  0290                     	;# 
  6823  0291                     	;# 
  6824  0292                     	;# 
  6825  0292                     	;# 
  6826  0293                     	;# 
  6827  0293                     	;# 
  6828  0294                     	;# 
  6829  0295                     	;# 
  6830  0296                     	;# 
  6831  0296                     	;# 
  6832  0297                     	;# 
  6833  0298                     	;# 
  6834  0298                     	;# 
  6835  0299                     	;# 
  6836  0299                     	;# 
  6837  029A                     	;# 
  6838  029B                     	;# 
  6839  029C                     	;# 
  6840  029C                     	;# 
  6841  029D                     	;# 
  6842  030C                     	;# 
  6843  030C                     	;# 
  6844  030D                     	;# 
  6845  030E                     	;# 
  6846  030F                     	;# 
  6847  0310                     	;# 
  6848  0310                     	;# 
  6849  0311                     	;# 
  6850  0312                     	;# 
  6851  0313                     	;# 
  6852  0314                     	;# 
  6853  0314                     	;# 
  6854  0315                     	;# 
  6855  0316                     	;# 
  6856  0317                     	;# 
  6857  0318                     	;# 
  6858  0318                     	;# 
  6859  0319                     	;# 
  6860  031A                     	;# 
  6861  031B                     	;# 
  6862  031C                     	;# 
  6863  031C                     	;# 
  6864  031D                     	;# 
  6865  031E                     	;# 
  6866  031F                     	;# 
  6867  038C                     	;# 
  6868  038C                     	;# 
  6869  038D                     	;# 
  6870  038E                     	;# 
  6871  0390                     	;# 
  6872  0390                     	;# 
  6873  0391                     	;# 
  6874  0392                     	;# 
  6875  040C                     	;# 
  6876  040D                     	;# 
  6877  040E                     	;# 
  6878  040F                     	;# 
  6879  0410                     	;# 
  6880  0411                     	;# 
  6881  0416                     	;# 
  6882  0416                     	;# 
  6883  0417                     	;# 
  6884  0418                     	;# 
  6885  0418                     	;# 
  6886  0419                     	;# 
  6887  041A                     	;# 
  6888  041A                     	;# 
  6889  041B                     	;# 
  6890  041C                     	;# 
  6891  041C                     	;# 
  6892  041D                     	;# 
  6893  041E                     	;# 
  6894  041F                     	;# 
  6895  048C                     	;# 
  6896  048C                     	;# 
  6897  048D                     	;# 
  6898  048E                     	;# 
  6899  048F                     	;# 
  6900  048F                     	;# 
  6901  0490                     	;# 
  6902  0491                     	;# 
  6903  0492                     	;# 
  6904  0492                     	;# 
  6905  0493                     	;# 
  6906  0494                     	;# 
  6907  0495                     	;# 
  6908  0495                     	;# 
  6909  0496                     	;# 
  6910  0497                     	;# 
  6911  0498                     	;# 
  6912  0499                     	;# 
  6913  049A                     	;# 
  6914  049B                     	;# 
  6915  049C                     	;# 
  6916  049D                     	;# 
  6917  050C                     	;# 
  6918  050C                     	;# 
  6919  050D                     	;# 
  6920  050E                     	;# 
  6921  050F                     	;# 
  6922  050F                     	;# 
  6923  0510                     	;# 
  6924  0511                     	;# 
  6925  0512                     	;# 
  6926  0512                     	;# 
  6927  0513                     	;# 
  6928  0514                     	;# 
  6929  0515                     	;# 
  6930  0515                     	;# 
  6931  0516                     	;# 
  6932  0517                     	;# 
  6933  0518                     	;# 
  6934  0519                     	;# 
  6935  051A                     	;# 
  6936  051B                     	;# 
  6937  051C                     	;# 
  6938  051D                     	;# 
  6939  058C                     	;# 
  6940  058C                     	;# 
  6941  058D                     	;# 
  6942  058E                     	;# 
  6943  058F                     	;# 
  6944  058F                     	;# 
  6945  0590                     	;# 
  6946  0591                     	;# 
  6947  0592                     	;# 
  6948  0593                     	;# 
  6949  060C                     	;# 
  6950  060D                     	;# 
  6951  060E                     	;# 
  6952  060F                     	;# 
  6953  0610                     	;# 
  6954  0611                     	;# 
  6955  0612                     	;# 
  6956  0613                     	;# 
  6957  0614                     	;# 
  6958  0616                     	;# 
  6959  0617                     	;# 
  6960  0618                     	;# 
  6961  0619                     	;# 
  6962  061A                     	;# 
  6963  061B                     	;# 
  6964  061C                     	;# 
  6965  061D                     	;# 
  6966  061E                     	;# 
  6967  068C                     	;# 
  6968  068D                     	;# 
  6969  068E                     	;# 
  6970  068F                     	;# 
  6971  0690                     	;# 
  6972  0691                     	;# 
  6973  0692                     	;# 
  6974  0693                     	;# 
  6975  0694                     	;# 
  6976  070C                     	;# 
  6977  070D                     	;# 
  6978  070E                     	;# 
  6979  070F                     	;# 
  6980  0710                     	;# 
  6981  0711                     	;# 
  6982  0712                     	;# 
  6983  0713                     	;# 
  6984  0714                     	;# 
  6985  0716                     	;# 
  6986  0717                     	;# 
  6987  0718                     	;# 
  6988  0719                     	;# 
  6989  071A                     	;# 
  6990  071B                     	;# 
  6991  071C                     	;# 
  6992  071D                     	;# 
  6993  071E                     	;# 
  6994  0796                     	;# 
  6995  0797                     	;# 
  6996  0798                     	;# 
  6997  0799                     	;# 
  6998  079A                     	;# 
  6999  079B                     	;# 
  7000  080C                     	;# 
  7001  080D                     	;# 
  7002  080E                     	;# 
  7003  080F                     	;# 
  7004  0810                     	;# 
  7005  0811                     	;# 
  7006  0812                     	;# 
  7007  0813                     	;# 
  7008  0814                     	;# 
  7009  081A                     	;# 
  7010  081B                     	;# 
  7011  081C                     	;# 
  7012  081D                     	;# 
  7013  081E                     	;# 
  7014  081F                     	;# 
  7015  088C                     	;# 
  7016  088D                     	;# 
  7017  088E                     	;# 
  7018  088F                     	;# 
  7019  0890                     	;# 
  7020  0891                     	;# 
  7021  0892                     	;# 
  7022  0893                     	;# 
  7023  0895                     	;# 
  7024  0896                     	;# 
  7025  0897                     	;# 
  7026  0898                     	;# 
  7027  0899                     	;# 
  7028  089A                     	;# 
  7029  089B                     	;# 
  7030  090C                     	;# 
  7031  090E                     	;# 
  7032  090F                     	;# 
  7033  091F                     	;# 
  7034  091F                     	;# 
  7035  098F                     	;# 
  7036  098F                     	;# 
  7037  0990                     	;# 
  7038  0991                     	;# 
  7039  0992                     	;# 
  7040  0993                     	;# 
  7041  0994                     	;# 
  7042  0995                     	;# 
  7043  0996                     	;# 
  7044  0997                     	;# 
  7045  0E0F                     	;# 
  7046  0E10                     	;# 
  7047  0E11                     	;# 
  7048  0E12                     	;# 
  7049  0E13                     	;# 
  7050  0E14                     	;# 
  7051  0E15                     	;# 
  7052  0E16                     	;# 
  7053  0E17                     	;# 
  7054  0E18                     	;# 
  7055  0E19                     	;# 
  7056  0E1A                     	;# 
  7057  0E1B                     	;# 
  7058  0E1C                     	;# 
  7059  0E1D                     	;# 
  7060  0E1E                     	;# 
  7061  0E1F                     	;# 
  7062  0E20                     	;# 
  7063  0E21                     	;# 
  7064  0E22                     	;# 
  7065  0E23                     	;# 
  7066  0E24                     	;# 
  7067  0E25                     	;# 
  7068  0E26                     	;# 
  7069  0E27                     	;# 
  7070  0E28                     	;# 
  7071  0E29                     	;# 
  7072  0E2A                     	;# 
  7073  0E2B                     	;# 
  7074  0E2C                     	;# 
  7075  0E2D                     	;# 
  7076  0E2E                     	;# 
  7077  0E2F                     	;# 
  7078  0E30                     	;# 
  7079  0E31                     	;# 
  7080  0E32                     	;# 
  7081  0E33                     	;# 
  7082  0E34                     	;# 
  7083  0E35                     	;# 
  7084  0E36                     	;# 
  7085  0E37                     	;# 
  7086  0E8F                     	;# 
  7087  0E90                     	;# 
  7088  0E91                     	;# 
  7089  0E92                     	;# 
  7090  0E93                     	;# 
  7091  0E94                     	;# 
  7092  0E95                     	;# 
  7093  0E96                     	;# 
  7094  0E97                     	;# 
  7095  0E9C                     	;# 
  7096  0E9D                     	;# 
  7097  0E9E                     	;# 
  7098  0EA1                     	;# 
  7099  0EA2                     	;# 
  7100  0EA3                     	;# 
  7101  0EA4                     	;# 
  7102  0EA5                     	;# 
  7103  0EA9                     	;# 
  7104  0EAA                     	;# 
  7105  0EAB                     	;# 
  7106  0EAC                     	;# 
  7107  0EB1                     	;# 
  7108  0EB2                     	;# 
  7109  0EB3                     	;# 
  7110  0EB8                     	;# 
  7111  0EB9                     	;# 
  7112  0EBA                     	;# 
  7113  0EBB                     	;# 
  7114  0EBC                     	;# 
  7115  0EBD                     	;# 
  7116  0EBE                     	;# 
  7117  0EC3                     	;# 
  7118  0EC5                     	;# 
  7119  0EC6                     	;# 
  7120  0EC7                     	;# 
  7121  0EC8                     	;# 
  7122  0EC9                     	;# 
  7123  0ECA                     	;# 
  7124  0ECB                     	;# 
  7125  0ECC                     	;# 
  7126  0F10                     	;# 
  7127  0F11                     	;# 
  7128  0F12                     	;# 
  7129  0F13                     	;# 
  7130  0F14                     	;# 
  7131  0F15                     	;# 
  7132  0F16                     	;# 
  7133  0F17                     	;# 
  7134  0F18                     	;# 
  7135  0F19                     	;# 
  7136  0F1A                     	;# 
  7137  0F1B                     	;# 
  7138  0F1C                     	;# 
  7139  0F1D                     	;# 
  7140  0F1E                     	;# 
  7141  0F1F                     	;# 
  7142  0F20                     	;# 
  7143  0F21                     	;# 
  7144  0F22                     	;# 
  7145  0F23                     	;# 
  7146  0F24                     	;# 
  7147  0F25                     	;# 
  7148  0F26                     	;# 
  7149  0F27                     	;# 
  7150  0F28                     	;# 
  7151  0F29                     	;# 
  7152  0F2A                     	;# 
  7153  0F2B                     	;# 
  7154  0F2C                     	;# 
  7155  0F2D                     	;# 
  7156  0F2E                     	;# 
  7157  0F2F                     	;# 
  7158  0F30                     	;# 
  7159  0F31                     	;# 
  7160  0F32                     	;# 
  7161  0F38                     	;# 
  7162  0F39                     	;# 
  7163  0F3A                     	;# 
  7164  0F3B                     	;# 
  7165  0F3C                     	;# 
  7166  0F3D                     	;# 
  7167  0F3E                     	;# 
  7168  0F3F                     	;# 
  7169  0F40                     	;# 
  7170  0F41                     	;# 
  7171  0F43                     	;# 
  7172  0F44                     	;# 
  7173  0F45                     	;# 
  7174  0F46                     	;# 
  7175  0F47                     	;# 
  7176  0F48                     	;# 
  7177  0F49                     	;# 
  7178  0F4A                     	;# 
  7179  0F4B                     	;# 
  7180  0F4C                     	;# 
  7181  0F4E                     	;# 
  7182  0F4F                     	;# 
  7183  0F50                     	;# 
  7184  0F51                     	;# 
  7185  0F52                     	;# 
  7186  0F53                     	;# 
  7187  0F54                     	;# 
  7188  0F55                     	;# 
  7189  0F56                     	;# 
  7190  0F57                     	;# 
  7191  0F59                     	;# 
  7192  0F5A                     	;# 
  7193  0F5B                     	;# 
  7194  0F5C                     	;# 
  7195  0F5D                     	;# 
  7196  0F61                     	;# 
  7197  0F62                     	;# 
  7198  0F64                     	;# 
  7199  0F65                     	;# 
  7200  0F66                     	;# 
  7201  0F67                     	;# 
  7202  0F68                     	;# 
  7203  0F69                     	;# 
  7204  0F6A                     	;# 
  7205  0F6B                     	;# 
  7206  0F6C                     	;# 
  7207  0F6D                     	;# 
  7208  0FE4                     	;# 
  7209  0FE5                     	;# 
  7210  0FE6                     	;# 
  7211  0FE7                     	;# 
  7212  0FE8                     	;# 
  7213  0FE9                     	;# 
  7214  0FEA                     	;# 
  7215  0FEB                     	;# 
  7216  0FED                     	;# 
  7217  0FEE                     	;# 
  7218  0FEF                     	;# 
  7219  0000                     	;# 
  7220  0001                     	;# 
  7221  0002                     	;# 
  7222  0003                     	;# 
  7223  0004                     	;# 
  7224  0005                     	;# 
  7225  0006                     	;# 
  7226  0007                     	;# 
  7227  0008                     	;# 
  7228  0009                     	;# 
  7229  000A                     	;# 
  7230  000B                     	;# 
  7231  000C                     	;# 
  7232  000D                     	;# 
  7233  000E                     	;# 
  7234  000F                     	;# 
  7235  0010                     	;# 
  7236  0011                     	;# 
  7237  0012                     	;# 
  7238  0013                     	;# 
  7239  0014                     	;# 
  7240  0015                     	;# 
  7241  0016                     	;# 
  7242  0017                     	;# 
  7243  0018                     	;# 
  7244  0019                     	;# 
  7245  001A                     	;# 
  7246  001C                     	;# 
  7247  001C                     	;# 
  7248  001D                     	;# 
  7249  001D                     	;# 
  7250  001E                     	;# 
  7251  001F                     	;# 
  7252  008C                     	;# 
  7253  008C                     	;# 
  7254  008D                     	;# 
  7255  008E                     	;# 
  7256  008E                     	;# 
  7257  008F                     	;# 
  7258  0090                     	;# 
  7259  0090                     	;# 
  7260  0091                     	;# 
  7261  0093                     	;# 
  7262  0094                     	;# 
  7263  0095                     	;# 
  7264  0096                     	;# 
  7265  0097                     	;# 
  7266  0098                     	;# 
  7267  0099                     	;# 
  7268  009A                     	;# 
  7269  009B                     	;# 
  7270  009C                     	;# 
  7271  009D                     	;# 
  7272  009E                     	;# 
  7273  010C                     	;# 
  7274  010D                     	;# 
  7275  010E                     	;# 
  7276  010E                     	;# 
  7277  010F                     	;# 
  7278  0110                     	;# 
  7279  0110                     	;# 
  7280  0111                     	;# 
  7281  0112                     	;# 
  7282  0112                     	;# 
  7283  0113                     	;# 
  7284  0114                     	;# 
  7285  0114                     	;# 
  7286  0115                     	;# 
  7287  0116                     	;# 
  7288  0116                     	;# 
  7289  0117                     	;# 
  7290  0119                     	;# 
  7291  0119                     	;# 
  7292  0119                     	;# 
  7293  011A                     	;# 
  7294  011A                     	;# 
  7295  011A                     	;# 
  7296  011B                     	;# 
  7297  011B                     	;# 
  7298  011B                     	;# 
  7299  011B                     	;# 
  7300  011B                     	;# 
  7301  011C                     	;# 
  7302  011C                     	;# 
  7303  011C                     	;# 
  7304  011D                     	;# 
  7305  011D                     	;# 
  7306  011D                     	;# 
  7307  011E                     	;# 
  7308  011E                     	;# 
  7309  011E                     	;# 
  7310  011F                     	;# 
  7311  011F                     	;# 
  7312  011F                     	;# 
  7313  011F                     	;# 
  7314  011F                     	;# 
  7315  018C                     	;# 
  7316  018D                     	;# 
  7317  018E                     	;# 
  7318  018F                     	;# 
  7319  0190                     	;# 
  7320  0191                     	;# 
  7321  0192                     	;# 
  7322  0196                     	;# 
  7323  0197                     	;# 
  7324  0198                     	;# 
  7325  0199                     	;# 
  7326  019A                     	;# 
  7327  019B                     	;# 
  7328  019C                     	;# 
  7329  020C                     	;# 
  7330  020C                     	;# 
  7331  020D                     	;# 
  7332  020E                     	;# 
  7333  020F                     	;# 
  7334  020F                     	;# 
  7335  0210                     	;# 
  7336  0210                     	;# 
  7337  0211                     	;# 
  7338  0211                     	;# 
  7339  0212                     	;# 
  7340  0212                     	;# 
  7341  0213                     	;# 
  7342  0214                     	;# 
  7343  0215                     	;# 
  7344  0215                     	;# 
  7345  0216                     	;# 
  7346  0216                     	;# 
  7347  0217                     	;# 
  7348  0217                     	;# 
  7349  0218                     	;# 
  7350  0218                     	;# 
  7351  0219                     	;# 
  7352  021A                     	;# 
  7353  021B                     	;# 
  7354  021B                     	;# 
  7355  021C                     	;# 
  7356  021C                     	;# 
  7357  021D                     	;# 
  7358  021D                     	;# 
  7359  021E                     	;# 
  7360  021F                     	;# 
  7361  028C                     	;# 
  7362  028C                     	;# 
  7363  028D                     	;# 
  7364  028D                     	;# 
  7365  028E                     	;# 
  7366  028F                     	;# 
  7367  0290                     	;# 
  7368  0290                     	;# 
  7369  0291                     	;# 
  7370  0292                     	;# 
  7371  0292                     	;# 
  7372  0293                     	;# 
  7373  0293                     	;# 
  7374  0294                     	;# 
  7375  0295                     	;# 
  7376  0296                     	;# 
  7377  0296                     	;# 
  7378  0297                     	;# 
  7379  0298                     	;# 
  7380  0298                     	;# 
  7381  0299                     	;# 
  7382  0299                     	;# 
  7383  029A                     	;# 
  7384  029B                     	;# 
  7385  029C                     	;# 
  7386  029C                     	;# 
  7387  029D                     	;# 
  7388  030C                     	;# 
  7389  030C                     	;# 
  7390  030D                     	;# 
  7391  030E                     	;# 
  7392  030F                     	;# 
  7393  0310                     	;# 
  7394  0310                     	;# 
  7395  0311                     	;# 
  7396  0312                     	;# 
  7397  0313                     	;# 
  7398  0314                     	;# 
  7399  0314                     	;# 
  7400  0315                     	;# 
  7401  0316                     	;# 
  7402  0317                     	;# 
  7403  0318                     	;# 
  7404  0318                     	;# 
  7405  0319                     	;# 
  7406  031A                     	;# 
  7407  031B                     	;# 
  7408  031C                     	;# 
  7409  031C                     	;# 
  7410  031D                     	;# 
  7411  031E                     	;# 
  7412  031F                     	;# 
  7413  038C                     	;# 
  7414  038C                     	;# 
  7415  038D                     	;# 
  7416  038E                     	;# 
  7417  0390                     	;# 
  7418  0390                     	;# 
  7419  0391                     	;# 
  7420  0392                     	;# 
  7421  040C                     	;# 
  7422  040D                     	;# 
  7423  040E                     	;# 
  7424  040F                     	;# 
  7425  0410                     	;# 
  7426  0411                     	;# 
  7427  0416                     	;# 
  7428  0416                     	;# 
  7429  0417                     	;# 
  7430  0418                     	;# 
  7431  0418                     	;# 
  7432  0419                     	;# 
  7433  041A                     	;# 
  7434  041A                     	;# 
  7435  041B                     	;# 
  7436  041C                     	;# 
  7437  041C                     	;# 
  7438  041D                     	;# 
  7439  041E                     	;# 
  7440  041F                     	;# 
  7441  048C                     	;# 
  7442  048C                     	;# 
  7443  048D                     	;# 
  7444  048E                     	;# 
  7445  048F                     	;# 
  7446  048F                     	;# 
  7447  0490                     	;# 
  7448  0491                     	;# 
  7449  0492                     	;# 
  7450  0492                     	;# 
  7451  0493                     	;# 
  7452  0494                     	;# 
  7453  0495                     	;# 
  7454  0495                     	;# 
  7455  0496                     	;# 
  7456  0497                     	;# 
  7457  0498                     	;# 
  7458  0499                     	;# 
  7459  049A                     	;# 
  7460  049B                     	;# 
  7461  049C                     	;# 
  7462  049D                     	;# 
  7463  050C                     	;# 
  7464  050C                     	;# 
  7465  050D                     	;# 
  7466  050E                     	;# 
  7467  050F                     	;# 
  7468  050F                     	;# 
  7469  0510                     	;# 
  7470  0511                     	;# 
  7471  0512                     	;# 
  7472  0512                     	;# 
  7473  0513                     	;# 
  7474  0514                     	;# 
  7475  0515                     	;# 
  7476  0515                     	;# 
  7477  0516                     	;# 
  7478  0517                     	;# 
  7479  0518                     	;# 
  7480  0519                     	;# 
  7481  051A                     	;# 
  7482  051B                     	;# 
  7483  051C                     	;# 
  7484  051D                     	;# 
  7485  058C                     	;# 
  7486  058C                     	;# 
  7487  058D                     	;# 
  7488  058E                     	;# 
  7489  058F                     	;# 
  7490  058F                     	;# 
  7491  0590                     	;# 
  7492  0591                     	;# 
  7493  0592                     	;# 
  7494  0593                     	;# 
  7495  060C                     	;# 
  7496  060D                     	;# 
  7497  060E                     	;# 
  7498  060F                     	;# 
  7499  0610                     	;# 
  7500  0611                     	;# 
  7501  0612                     	;# 
  7502  0613                     	;# 
  7503  0614                     	;# 
  7504  0616                     	;# 
  7505  0617                     	;# 
  7506  0618                     	;# 
  7507  0619                     	;# 
  7508  061A                     	;# 
  7509  061B                     	;# 
  7510  061C                     	;# 
  7511  061D                     	;# 
  7512  061E                     	;# 
  7513  068C                     	;# 
  7514  068D                     	;# 
  7515  068E                     	;# 
  7516  068F                     	;# 
  7517  0690                     	;# 
  7518  0691                     	;# 
  7519  0692                     	;# 
  7520  0693                     	;# 
  7521  0694                     	;# 
  7522  070C                     	;# 
  7523  070D                     	;# 
  7524  070E                     	;# 
  7525  070F                     	;# 
  7526  0710                     	;# 
  7527  0711                     	;# 
  7528  0712                     	;# 
  7529  0713                     	;# 
  7530  0714                     	;# 
  7531  0716                     	;# 
  7532  0717                     	;# 
  7533  0718                     	;# 
  7534  0719                     	;# 
  7535  071A                     	;# 
  7536  071B                     	;# 
  7537  071C                     	;# 
  7538  071D                     	;# 
  7539  071E                     	;# 
  7540  0796                     	;# 
  7541  0797                     	;# 
  7542  0798                     	;# 
  7543  0799                     	;# 
  7544  079A                     	;# 
  7545  079B                     	;# 
  7546  080C                     	;# 
  7547  080D                     	;# 
  7548  080E                     	;# 
  7549  080F                     	;# 
  7550  0810                     	;# 
  7551  0811                     	;# 
  7552  0812                     	;# 
  7553  0813                     	;# 
  7554  0814                     	;# 
  7555  081A                     	;# 
  7556  081B                     	;# 
  7557  081C                     	;# 
  7558  081D                     	;# 
  7559  081E                     	;# 
  7560  081F                     	;# 
  7561  088C                     	;# 
  7562  088D                     	;# 
  7563  088E                     	;# 
  7564  088F                     	;# 
  7565  0890                     	;# 
  7566  0891                     	;# 
  7567  0892                     	;# 
  7568  0893                     	;# 
  7569  0895                     	;# 
  7570  0896                     	;# 
  7571  0897                     	;# 
  7572  0898                     	;# 
  7573  0899                     	;# 
  7574  089A                     	;# 
  7575  089B                     	;# 
  7576  090C                     	;# 
  7577  090E                     	;# 
  7578  090F                     	;# 
  7579  091F                     	;# 
  7580  091F                     	;# 
  7581  098F                     	;# 
  7582  098F                     	;# 
  7583  0990                     	;# 
  7584  0991                     	;# 
  7585  0992                     	;# 
  7586  0993                     	;# 
  7587  0994                     	;# 
  7588  0995                     	;# 
  7589  0996                     	;# 
  7590  0997                     	;# 
  7591  0E0F                     	;# 
  7592  0E10                     	;# 
  7593  0E11                     	;# 
  7594  0E12                     	;# 
  7595  0E13                     	;# 
  7596  0E14                     	;# 
  7597  0E15                     	;# 
  7598  0E16                     	;# 
  7599  0E17                     	;# 
  7600  0E18                     	;# 
  7601  0E19                     	;# 
  7602  0E1A                     	;# 
  7603  0E1B                     	;# 
  7604  0E1C                     	;# 
  7605  0E1D                     	;# 
  7606  0E1E                     	;# 
  7607  0E1F                     	;# 
  7608  0E20                     	;# 
  7609  0E21                     	;# 
  7610  0E22                     	;# 
  7611  0E23                     	;# 
  7612  0E24                     	;# 
  7613  0E25                     	;# 
  7614  0E26                     	;# 
  7615  0E27                     	;# 
  7616  0E28                     	;# 
  7617  0E29                     	;# 
  7618  0E2A                     	;# 
  7619  0E2B                     	;# 
  7620  0E2C                     	;# 
  7621  0E2D                     	;# 
  7622  0E2E                     	;# 
  7623  0E2F                     	;# 
  7624  0E30                     	;# 
  7625  0E31                     	;# 
  7626  0E32                     	;# 
  7627  0E33                     	;# 
  7628  0E34                     	;# 
  7629  0E35                     	;# 
  7630  0E36                     	;# 
  7631  0E37                     	;# 
  7632  0E8F                     	;# 
  7633  0E90                     	;# 
  7634  0E91                     	;# 
  7635  0E92                     	;# 
  7636  0E93                     	;# 
  7637  0E94                     	;# 
  7638  0E95                     	;# 
  7639  0E96                     	;# 
  7640  0E97                     	;# 
  7641  0E9C                     	;# 
  7642  0E9D                     	;# 
  7643  0E9E                     	;# 
  7644  0EA1                     	;# 
  7645  0EA2                     	;# 
  7646  0EA3                     	;# 
  7647  0EA4                     	;# 
  7648  0EA5                     	;# 
  7649  0EA9                     	;# 
  7650  0EAA                     	;# 
  7651  0EAB                     	;# 
  7652  0EAC                     	;# 
  7653  0EB1                     	;# 
  7654  0EB2                     	;# 
  7655  0EB3                     	;# 
  7656  0EB8                     	;# 
  7657  0EB9                     	;# 
  7658  0EBA                     	;# 
  7659  0EBB                     	;# 
  7660  0EBC                     	;# 
  7661  0EBD                     	;# 
  7662  0EBE                     	;# 
  7663  0EC3                     	;# 
  7664  0EC5                     	;# 
  7665  0EC6                     	;# 
  7666  0EC7                     	;# 
  7667  0EC8                     	;# 
  7668  0EC9                     	;# 
  7669  0ECA                     	;# 
  7670  0ECB                     	;# 
  7671  0ECC                     	;# 
  7672  0F10                     	;# 
  7673  0F11                     	;# 
  7674  0F12                     	;# 
  7675  0F13                     	;# 
  7676  0F14                     	;# 
  7677  0F15                     	;# 
  7678  0F16                     	;# 
  7679  0F17                     	;# 
  7680  0F18                     	;# 
  7681  0F19                     	;# 
  7682  0F1A                     	;# 
  7683  0F1B                     	;# 
  7684  0F1C                     	;# 
  7685  0F1D                     	;# 
  7686  0F1E                     	;# 
  7687  0F1F                     	;# 
  7688  0F20                     	;# 
  7689  0F21                     	;# 
  7690  0F22                     	;# 
  7691  0F23                     	;# 
  7692  0F24                     	;# 
  7693  0F25                     	;# 
  7694  0F26                     	;# 
  7695  0F27                     	;# 
  7696  0F28                     	;# 
  7697  0F29                     	;# 
  7698  0F2A                     	;# 
  7699  0F2B                     	;# 
  7700  0F2C                     	;# 
  7701  0F2D                     	;# 
  7702  0F2E                     	;# 
  7703  0F2F                     	;# 
  7704  0F30                     	;# 
  7705  0F31                     	;# 
  7706  0F32                     	;# 
  7707  0F38                     	;# 
  7708  0F39                     	;# 
  7709  0F3A                     	;# 
  7710  0F3B                     	;# 
  7711  0F3C                     	;# 
  7712  0F3D                     	;# 
  7713  0F3E                     	;# 
  7714  0F3F                     	;# 
  7715  0F40                     	;# 
  7716  0F41                     	;# 
  7717  0F43                     	;# 
  7718  0F44                     	;# 
  7719  0F45                     	;# 
  7720  0F46                     	;# 
  7721  0F47                     	;# 
  7722  0F48                     	;# 
  7723  0F49                     	;# 
  7724  0F4A                     	;# 
  7725  0F4B                     	;# 
  7726  0F4C                     	;# 
  7727  0F4E                     	;# 
  7728  0F4F                     	;# 
  7729  0F50                     	;# 
  7730  0F51                     	;# 
  7731  0F52                     	;# 
  7732  0F53                     	;# 
  7733  0F54                     	;# 
  7734  0F55                     	;# 
  7735  0F56                     	;# 
  7736  0F57                     	;# 
  7737  0F59                     	;# 
  7738  0F5A                     	;# 
  7739  0F5B                     	;# 
  7740  0F5C                     	;# 
  7741  0F5D                     	;# 
  7742  0F61                     	;# 
  7743  0F62                     	;# 
  7744  0F64                     	;# 
  7745  0F65                     	;# 
  7746  0F66                     	;# 
  7747  0F67                     	;# 
  7748  0F68                     	;# 
  7749  0F69                     	;# 
  7750  0F6A                     	;# 
  7751  0F6B                     	;# 
  7752  0F6C                     	;# 
  7753  0F6D                     	;# 
  7754  0FE4                     	;# 
  7755  0FE5                     	;# 
  7756  0FE6                     	;# 
  7757  0FE7                     	;# 
  7758  0FE8                     	;# 
  7759  0FE9                     	;# 
  7760  0FEA                     	;# 
  7761  0FEB                     	;# 
  7762  0FED                     	;# 
  7763  0FEE                     	;# 
  7764  0FEF                     	;# 
  7765                           
  7766                           	psect	idataBANK0
  7767  0AB2                     __pidataBANK0:
  7768                           
  7769                           ;initializer for _clkAlarm
  7770  0AB2  3401               	retlw	1
  7771  0AB3  3400               	retlw	0
  7772  0AB4  3400               	retlw	0
  7773  0AB5  3400               	retlw	0
  7774                           
  7775                           ;initializer for _alarmPWMStart
  7776  0AB6  34FF               	retlw	255
  7777  0AB7  34FF               	retlw	255
  7778  0AB8  34FF               	retlw	255
  7779                           
  7780                           ;initializer for _lumAlarm
  7781  0AB9  3404               	retlw	4
  7782  0ABA  3400               	retlw	0
  7783  0ABB  3400               	retlw	0
  7784                           
  7785                           ;initializer for _tempAlarm
  7786  0ABC  341C               	retlw	28
  7787  0ABD  3400               	retlw	0
  7788  0ABE  3400               	retlw	0
  7789                           
  7790                           ;initializer for _prevLumLevel
  7791  0ABF  34FF               	retlw	255
  7792  0AC0  34FF               	retlw	255
  7793                           
  7794                           ;initializer for _prevTemp
  7795  0AC1  34FF               	retlw	255
  7796  0AC2  34FF               	retlw	255
  7797                           
  7798                           ;initializer for _alarmsEnable
  7799  0AC3  3401               	retlw	1
  7800                           
  7801                           	psect	stringtext1
  7802  100F                     __pstringtext1:
  7803  100F                     _dpowers:
  7804  100F  3401               	retlw	1
  7805  1010  3400               	retlw	0
  7806  1011  340A               	retlw	10
  7807  1012  3400               	retlw	0
  7808  1013  3464               	retlw	100
  7809  1014  3400               	retlw	0
  7810  1015  34E8               	retlw	232
  7811  1016  3403               	retlw	3
  7812  1017  3410               	retlw	16
  7813  1018  3427               	retlw	39
  7814  1019                     __end_of_dpowers:
  7815                           
  7816                           	psect	nvBANK0
  7817  006E                     __pnvBANK0:
  7818  006E                     _timer3ReloadVal:
  7819  006E                     	ds	2
  7820                           
  7821                           	psect	nvBANK1
  7822  00A0                     __pnvBANK1:
  7823  00A0                     _TMR5_InterruptHandler:
  7824  00A0                     	ds	2
  7825  00A2                     _timer5ReloadVal:
  7826  00A2                     	ds	2
  7827  00A4                     _TMR3_InterruptHandler:
  7828  00A4                     	ds	2
  7829  00A6                     _TMR1_InterruptHandler:
  7830  00A6                     	ds	2
  7831  00A8                     _timer1ReloadVal:
  7832  00A8                     	ds	2
  7833  0013                     _TRISCbits	set	19
  7834  000E                     _PORTCbits	set	14
  7835  000D                     _PORTBbits	set	13
  7836  0016                     _LATAbits	set	22
  7837  000B                     _INTCONbits	set	11
  7838  0014                     _TRISD	set	20
  7839  0013                     _TRISC	set	19
  7840  0012                     _TRISB	set	18
  7841  0011                     _TRISA	set	17
  7842  0015                     _TRISE	set	21
  7843  0018                     _LATC	set	24
  7844  0017                     _LATB	set	23
  7845  0016                     _LATA	set	22
  7846  0019                     _LATD	set	25
  7847  001A                     _LATE	set	26
  7848  0094                     _ADCON1bits	set	148
  7849  008E                     _ADPREVL	set	142
  7850  008F                     _ADPREVH	set	143
  7851  0097                     _ADSTATbits	set	151
  7852  0090                     _ADACCL	set	144
  7853  0091                     _ADACCH	set	145
  7854  0095                     _ADCON2bits	set	149
  7855  009C                     _ADPRE	set	156
  7856  0096                     _ADCON3bits	set	150
  7857  008C                     _ADRESL	set	140
  7858  008D                     _ADRESH	set	141
  7859  0093                     _ADCON0bits	set	147
  7860  009D                     _ADACQ	set	157
  7861  0093                     _ADCON0	set	147
  7862  0098                     _ADCLK	set	152
  7863  0099                     _ADACT	set	153
  7864  009A                     _ADREF	set	154
  7865  0097                     _ADSTAT	set	151
  7866  0096                     _ADCON3	set	150
  7867  0095                     _ADCON2	set	149
  7868  0094                     _ADCON1	set	148
  7869  009B                     _ADCAP	set	155
  7870  009E                     _ADPCH	set	158
  7871  0116                     _ADERRL	set	278
  7872  0117                     _ADERRH	set	279
  7873  0114                     _ADFLTRL	set	276
  7874  0115                     _ADFLTRH	set	277
  7875  010C                     _ADCNT	set	268
  7876  010D                     _ADRPT	set	269
  7877  0113                     _ADSTPTH	set	275
  7878  0112                     _ADSTPTL	set	274
  7879  0111                     _ADUTHH	set	273
  7880  0110                     _ADUTHL	set	272
  7881  010F                     _ADLTHH	set	271
  7882  010E                     _ADLTHL	set	270
  7883  018E                     _SSP1MSK	set	398
  7884  018D                     _SSP1ADD	set	397
  7885  018F                     _SSP1STAT	set	399
  7886  0191                     _SSP1CON2	set	401
  7887  0190                     _SSP1CON1bits	set	400
  7888  018C                     _SSP1BUF	set	396
  7889  018F                     _SSP1STATbits	set	399
  7890  0191                     _SSP1CON2bits	set	401
  7891  0190                     _SSP1CON1	set	400
  7892  021F                     _CCPTMRS1bits	set	543
  7893  021B                     _T5GCONbits	set	539
  7894  021A                     _T5CONbits	set	538
  7895  021A                     _T5CON	set	538
  7896  0218                     _TMR5L	set	536
  7897  0219                     _TMR5H	set	537
  7898  021D                     _T5CLK	set	541
  7899  021C                     _T5GATE	set	540
  7900  021B                     _T5GCON	set	539
  7901  0215                     _T3GCONbits	set	533
  7902  0214                     _T3CONbits	set	532
  7903  0214                     _T3CON	set	532
  7904  0212                     _TMR3L	set	530
  7905  0213                     _TMR3H	set	531
  7906  0217                     _T3CLK	set	535
  7907  0216                     _T3GATE	set	534
  7908  0215                     _T3GCON	set	533
  7909  020F                     _T1GCONbits	set	527
  7910  020E                     _T1CONbits	set	526
  7911  020E                     _T1CON	set	526
  7912  020C                     _TMR1L	set	524
  7913  020D                     _TMR1H	set	525
  7914  0211                     _T1CLK	set	529
  7915  0210                     _T1GATE	set	528
  7916  020F                     _T1GCON	set	527
  7917  028D                     _PR2	set	653
  7918  028C                     _TMR2	set	652
  7919  028E                     _T2CONbits	set	654
  7920  0291                     _T2RSTbits	set	657
  7921  028F                     _T2HLTbits	set	655
  7922  028E                     _T2CON	set	654
  7923  028C                     _T2TMR	set	652
  7924  028D                     _T2PR	set	653
  7925  0291                     _T2RST	set	657
  7926  028F                     _T2HLT	set	655
  7927  0290                     _T2CLKCON	set	656
  7928  038C                     _PWM6DCL	set	908
  7929  038D                     _PWM6DCH	set	909
  7930  038E                     _PWM6CON	set	910
  7931  1C77                     _PWM6EN	set	7287
  7932  0710                     _PIR4bits	set	1808
  7933  071A                     _PIE4bits	set	1818
  7934  0719                     _PIE3bits	set	1817
  7935  070F                     _PIR3bits	set	1807
  7936  079B                     _PMD5	set	1947
  7937  079A                     _PMD4	set	1946
  7938  0799                     _PMD3	set	1945
  7939  0798                     _PMD2	set	1944
  7940  0797                     _PMD1	set	1943
  7941  0796                     _PMD0	set	1942
  7942  081F                     _NVMCON2	set	2079
  7943  081C                     _NVMDATL	set	2076
  7944  081D                     _NVMDATH	set	2077
  7945  081E                     _NVMCON1bits	set	2078
  7946  081B                     _NVMADRH	set	2075
  7947  081A                     _NVMADRL	set	2074
  7948  0892                     _OSCTUNE	set	2194
  7949  0893                     _OSCFRQ	set	2195
  7950  0891                     _OSCEN	set	2193
  7951  088F                     _OSCCON3	set	2191
  7952  088D                     _OSCCON1	set	2189
  7953  0EC6                     _SSP1DATPPS	set	3782
  7954  0EC5                     _SSP1CLKPPS	set	3781
  7955  0F16                     _RA6PPS	set	3862
  7956  0F24                     _RC4PPS	set	3876
  7957  0F23                     _RC3PPS	set	3875
  7958  0F67                     _SLRCONE	set	3943
  7959  0F5C                     _SLRCOND	set	3932
  7960  0F51                     _SLRCONC	set	3921
  7961  0F46                     _SLRCONB	set	3910
  7962  0F3B                     _SLRCONA	set	3899
  7963  0F5B                     _ODCOND	set	3931
  7964  0F50                     _ODCONC	set	3920
  7965  0F45                     _ODCONB	set	3909
  7966  0F3A                     _ODCONA	set	3898
  7967  0F66                     _ODCONE	set	3942
  7968  0F4F                     _WPUC	set	3919
  7969  0F39                     _WPUA	set	3897
  7970  0F44                     _WPUB	set	3908
  7971  0F65                     _WPUE	set	3941
  7972  0F5A                     _WPUD	set	3930
  7973  0F38                     _ANSELA	set	3896
  7974  0F64                     _ANSELE	set	3940
  7975  0F43                     _ANSELB	set	3907
  7976  0F4E                     _ANSELC	set	3918
  7977  0F59                     _ANSELD	set	3929
  7978  7A7C                     _WPUC4	set	31356
  7979  7A7B                     _WPUC3	set	31355
  7980                           
  7981                           	psect	stringtext2
  7982  1000                     __pstringtext2:
  7983  1000                     STR_1:
  7984  1000  3425               	retlw	37	;'%'
  7985  1001  3430               	retlw	48	;'0'
  7986  1002  3432               	retlw	50	;'2'
  7987  1003  3464               	retlw	100	;'d'
  7988  1004  343A               	retlw	58	;':'
  7989  1005  3425               	retlw	37	;'%'
  7990  1006  3430               	retlw	48	;'0'
  7991  1007  3432               	retlw	50	;'2'
  7992  1008  3464               	retlw	100	;'d'
  7993  1009  343A               	retlw	58	;':'
  7994  100A  3425               	retlw	37	;'%'
  7995  100B  3430               	retlw	48	;'0'
  7996  100C  3432               	retlw	50	;'2'
  7997  100D  3464               	retlw	100	;'d'
  7998  100E  3400               	retlw	0
  7999                           
  8000                           	psect	stringtext3
  8001  1019                     __pstringtext3:
  8002  1019                     STR_3:
  8003  1019  3425               	retlw	37	;'%'
  8004  101A  3430               	retlw	48	;'0'
  8005  101B  3432               	retlw	50	;'2'
  8006  101C  3464               	retlw	100	;'d'
  8007  101D  3420               	retlw	32	;' '
  8008  101E  3443               	retlw	67	;'C'
  8009  101F  3400               	retlw	0
  8010                           
  8011                           	psect	stringtext4
  8012  1020                     __pstringtext4:
  8013  1020                     STR_5:
  8014  1020  344C               	retlw	76	;'L'
  8015  1021  3420               	retlw	32	;' '
  8016  1022  3425               	retlw	37	;'%'
  8017  1023  3464               	retlw	100	;'d'
  8018  1024  3400               	retlw	0
  8019                           
  8020                           	psect	stringtext5
  8021  0000                     __pstringtext5:
  8022  1019                     
  8023                           	psect	cinit
  8024  0042                     start_initialization:	
  8025                           ; #config settings
  8026                           
  8027  0042                     __initialization:
  8028                           
  8029                           ; Initialize objects allocated to BANK0
  8030  0042  30B2               	movlw	low __pidataBANK0
  8031  0043  0084               	movwf	4
  8032  0044  308A               	movlw	(high __pidataBANK0)| (0+128)
  8033  0045  0085               	movwf	5
  8034  0046  304D               	movlw	low __pdataBANK0
  8035  0047  0086               	movwf	6
  8036  0048  3000               	movlw	high __pdataBANK0
  8037  0049  0087               	movwf	7
  8038  004A  3012               	movlw	18
  8039  004B  318A  2217  3180   	fcall	init_ram
  8040                           
  8041                           ; Clear objects allocated to BANK0
  8042  004E  305F               	movlw	low __pbssBANK0
  8043  004F  0084               	movwf	4
  8044  0050  3000               	movlw	high __pbssBANK0
  8045  0051  0085               	movwf	5
  8046  0052  300F               	movlw	15
  8047  0053  318A  2211  3180   	fcall	clear_ram0
  8048                           
  8049                           ; Clear objects allocated to BANK1
  8050  0056  30B4               	movlw	low __pbssBANK1
  8051  0057  0084               	movwf	4
  8052  0058  3000               	movlw	high __pbssBANK1
  8053  0059  0085               	movwf	5
  8054  005A  3007               	movlw	7
  8055  005B  318A  2211  3180   	fcall	clear_ram0
  8056  005E                     end_of_initialization:	
  8057                           ;End of C runtime variable initialization code
  8058                           
  8059  005E                     __end_of__initialization:
  8060  005E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8061  005F  0020               	movlb	0
  8062  0060  3187  2F69         	ljmp	_main	;jump to C main() function
  8063                           
  8064                           	psect	bssBANK0
  8065  005F                     __pbssBANK0:
  8066  005F                     _t:
  8067  005F                     	ds	3
  8068  0062                     _regIdx:
  8069  0062                     	ds	2
  8070  0064                     _mode:
  8071  0064                     	ds	2
  8072  0066                     _editingClockAlarm:
  8073  0066                     	ds	2
  8074  0068                     _dimingLed:
  8075  0068                     	ds	2
  8076  006A                     _editingLumAlarm:
  8077  006A                     	ds	1
  8078  006B                     _editingTempAlarm:
  8079  006B                     	ds	1
  8080  006C                     _lumLevel:
  8081  006C                     	ds	1
  8082  006D                     _temp:
  8083  006D                     	ds	1
  8084                           
  8085                           	psect	dataBANK0
  8086  004D                     __pdataBANK0:
  8087  004D                     _clkAlarm:
  8088  004D                     	ds	4
  8089  0051                     _alarmPWMStart:
  8090  0051                     	ds	3
  8091  0054                     _lumAlarm:
  8092  0054                     	ds	3
  8093  0057                     _tempAlarm:
  8094  0057                     	ds	3
  8095  005A                     _prevLumLevel:
  8096  005A                     	ds	2
  8097  005C                     _prevTemp:
  8098  005C                     	ds	2
  8099  005E                     _alarmsEnable:
  8100  005E                     	ds	1
  8101                           
  8102                           	psect	bssBANK1
  8103  00B4                     __pbssBANK1:
  8104  00B4                     menuLCD_ISR@F12809:
  8105  00B4                     	ds	3
  8106  00B7                     _i2c1_driver_i2cISR:
  8107  00B7                     	ds	2
  8108  00B9                     _i2c1_driver_busCollisionISR:
  8109  00B9                     	ds	2
  8110                           
  8111                           	psect	inittext
  8112  0A17                     init_ram:
  8113  0A17  00FE               	movwf	btemp
  8114  0A18                     initloop:
  8115  0A18  0012               	moviw fsr0++
  8116  0A19  001E               	movwi fsr1++
  8117  0A1A  0BFE               	decfsz	btemp,f
  8118  0A1B  2A18               	goto	initloop
  8119  0A1C  3400               	retlw	0
  8120                           
  8121                           	psect	clrtext
  8122  0A11                     clear_ram0:	
  8123                           ;	Called with FSR0 containing the base address, and
  8124                           ;	WREG with the size to clear
  8125                           
  8126  0A11  0064               	clrwdt	;clear the watchdog before getting into this loop
  8127  0A12                     clrloop0:
  8128  0A12  0180               	clrf	0	;clear RAM location pointed to by FSR
  8129  0A13  3101               	addfsr 0,1
  8130  0A14  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  8131  0A15  2A12               	goto	clrloop0	;have we reached the end yet?
  8132  0A16  3400               	retlw	0	;all done for this memory range, return
  8133                           
  8134                           	psect	cstackBANK1
  8135  00AA                     __pcstackBANK1:
  8136  00AA                     ??_PMD_Initialize:
  8137  00AA                     ??_OSCILLATOR_Initialize:	
  8138                           ; 1 bytes @ 0x0
  8139                           
  8140  00AA                     ??_PWM6_Initialize:	
  8141                           ; 1 bytes @ 0x0
  8142                           
  8143  00AA                     ??_ADCC_Initialize:	
  8144                           ; 1 bytes @ 0x0
  8145                           
  8146  00AA                     ??_TMR2_Initialize:	
  8147                           ; 1 bytes @ 0x0
  8148                           
  8149  00AA                     ?_TMR1_SetInterruptHandler:	
  8150                           ; 1 bytes @ 0x0
  8151                           
  8152  00AA                     ?_TMR3_SetInterruptHandler:	
  8153                           ; 1 bytes @ 0x0
  8154                           
  8155  00AA                     ?_TMR5_SetInterruptHandler:	
  8156                           ; 1 bytes @ 0x0
  8157                           
  8158  00AA                     ??_WriteI2C:	
  8159                           ; 1 bytes @ 0x0
  8160                           
  8161  00AA                     ??_PIN_MANAGER_Initialize:	
  8162                           ; 1 bytes @ 0x0
  8163                           
  8164  00AA                     ??_i2c1_driver_open:	
  8165                           ; 1 bytes @ 0x0
  8166                           
  8167  00AA                     ?_PWM6_LoadDutyValue:	
  8168                           ; 1 bytes @ 0x0
  8169                           
  8170  00AA                     ??_TMR2_Stop:	
  8171                           ; 1 bytes @ 0x0
  8172                           
  8173  00AA                     ??_TMR2_StopTimer:	
  8174                           ; 1 bytes @ 0x0
  8175                           
  8176  00AA                     ??_PWM_Output_D4_Disable:	
  8177                           ; 1 bytes @ 0x0
  8178                           
  8179  00AA                     ??_editClock:	
  8180                           ; 1 bytes @ 0x0
  8181                           
  8182  00AA                     ??_editTemp:	
  8183                           ; 1 bytes @ 0x0
  8184                           
  8185  00AA                     ??_editLum:	
  8186                           ; 1 bytes @ 0x0
  8187                           
  8188  00AA                     ??_toggleAlarms:	
  8189                           ; 1 bytes @ 0x0
  8190                           
  8191  00AA                     TMR1_SetInterruptHandler@InterruptHandler:	
  8192                           ; 1 bytes @ 0x0
  8193                           
  8194  00AA                     TMR3_SetInterruptHandler@InterruptHandler:	
  8195                           ; 2 bytes @ 0x0
  8196                           
  8197  00AA                     TMR5_SetInterruptHandler@InterruptHandler:	
  8198                           ; 2 bytes @ 0x0
  8199                           
  8200  00AA                     PWM6_LoadDutyValue@dutyValue:	
  8201                           ; 2 bytes @ 0x0
  8202                           
  8203                           
  8204                           ; 2 bytes @ 0x0
  8205  00AA                     	ds	1
  8206  00AB                     WriteI2C@data_out:
  8207                           
  8208                           ; 1 bytes @ 0x1
  8209  00AB                     	ds	1
  8210  00AC                     ??_TMR3_Initialize:
  8211  00AC                     ??_TMR5_Initialize:	
  8212                           ; 1 bytes @ 0x2
  8213                           
  8214  00AC                     ??_TMR1_Initialize:	
  8215                           ; 1 bytes @ 0x2
  8216                           
  8217  00AC                     ??_TMR1_SetInterruptHandler:	
  8218                           ; 1 bytes @ 0x2
  8219                           
  8220  00AC                     ??_TMR3_SetInterruptHandler:	
  8221                           ; 1 bytes @ 0x2
  8222                           
  8223  00AC                     ??_TMR5_SetInterruptHandler:	
  8224                           ; 1 bytes @ 0x2
  8225                           
  8226  00AC                     ??_SYSTEM_Initialize:	
  8227                           ; 1 bytes @ 0x2
  8228                           
  8229  00AC                     ??_PWM6_LoadDutyValue:	
  8230                           ; 1 bytes @ 0x2
  8231                           
  8232  00AC                     ??_LCDsend:	
  8233                           ; 1 bytes @ 0x2
  8234                           
  8235  00AC                     ?_LCDsend2x4:	
  8236                           ; 1 bytes @ 0x2
  8237                           
  8238  00AC                     LCDsend2x4@mode:	
  8239                           ; 1 bytes @ 0x2
  8240                           
  8241                           
  8242                           ; 1 bytes @ 0x2
  8243  00AC                     	ds	1
  8244  00AD                     ??_LCDsend2x4:
  8245  00AD                     LCDsend@c:	
  8246                           ; 1 bytes @ 0x3
  8247                           
  8248                           
  8249                           ; 1 bytes @ 0x3
  8250  00AD                     	ds	2
  8251  00AF                     LCDsend2x4@c:
  8252                           
  8253                           ; 1 bytes @ 0x5
  8254  00AF                     	ds	1
  8255  00B0                     LCDsend2x4@hc:
  8256                           
  8257                           ; 1 bytes @ 0x6
  8258  00B0                     	ds	1
  8259  00B1                     LCDsend2x4@lc:
  8260                           
  8261                           ; 1 bytes @ 0x7
  8262  00B1                     	ds	1
  8263  00B2                     ??_LCDinit:
  8264                           
  8265                           ; 1 bytes @ 0x8
  8266  00B2                     	ds	1
  8267  00B3                     ??_main:
  8268                           
  8269                           ; 1 bytes @ 0x9
  8270  00B3                     	ds	1
  8271                           
  8272                           	psect	cstackCOMMON
  8273  0070                     __pcstackCOMMON:
  8274  0070                     ?_isdigit:
  8275  0070                     ?_i2c1_driver_open:	
  8276                           ; 1 bit 
  8277                           
  8278  0070                     ?_PMD_Initialize:	
  8279                           ; 1 bit 
  8280                           
  8281  0070                     ?_OSCILLATOR_Initialize:	
  8282                           ; 1 bytes @ 0x0
  8283                           
  8284  0070                     ?_PWM6_Initialize:	
  8285                           ; 1 bytes @ 0x0
  8286                           
  8287  0070                     ?_ADCC_Initialize:	
  8288                           ; 1 bytes @ 0x0
  8289                           
  8290  0070                     ?_TMR3_Initialize:	
  8291                           ; 1 bytes @ 0x0
  8292                           
  8293  0070                     ?_TMR5_Initialize:	
  8294                           ; 1 bytes @ 0x0
  8295                           
  8296  0070                     ?_TMR2_Initialize:	
  8297                           ; 1 bytes @ 0x0
  8298                           
  8299  0070                     ?_TMR1_Initialize:	
  8300                           ; 1 bytes @ 0x0
  8301                           
  8302  0070                     ?_TMR5_ISR:	
  8303                           ; 1 bytes @ 0x0
  8304                           
  8305  0070                     ?_TMR3_ISR:	
  8306                           ; 1 bytes @ 0x0
  8307                           
  8308  0070                     ?_TMR1_ISR:	
  8309                           ; 1 bytes @ 0x0
  8310                           
  8311  0070                     ?_TMR1_DefaultInterruptHandler:	
  8312                           ; 1 bytes @ 0x0
  8313                           
  8314  0070                     ??_TMR1_DefaultInterruptHandler:	
  8315                           ; 1 bytes @ 0x0
  8316                           
  8317  0070                     ?_TMR3_DefaultInterruptHandler:	
  8318                           ; 1 bytes @ 0x0
  8319                           
  8320  0070                     ??_TMR3_DefaultInterruptHandler:	
  8321                           ; 1 bytes @ 0x0
  8322                           
  8323  0070                     ?_TMR5_DefaultInterruptHandler:	
  8324                           ; 1 bytes @ 0x0
  8325                           
  8326  0070                     ??_TMR5_DefaultInterruptHandler:	
  8327                           ; 1 bytes @ 0x0
  8328                           
  8329  0070                     ??_isdigit:	
  8330                           ; 1 bytes @ 0x0
  8331                           
  8332  0070                     ?_ReadI2C:	
  8333                           ; 1 bytes @ 0x0
  8334                           
  8335  0070                     ??_ReadI2C:	
  8336                           ; 1 bytes @ 0x0
  8337                           
  8338  0070                     ?_WriteI2C:	
  8339                           ; 1 bytes @ 0x0
  8340                           
  8341  0070                     ?_PIN_MANAGER_Initialize:	
  8342                           ; 1 bytes @ 0x0
  8343                           
  8344  0070                     ?_SYSTEM_Initialize:	
  8345                           ; 1 bytes @ 0x0
  8346                           
  8347  0070                     ?_INTERRUPT_InterruptManager:	
  8348                           ; 1 bytes @ 0x0
  8349                           
  8350  0070                     ?_TMR1_WriteTimer:	
  8351                           ; 1 bytes @ 0x0
  8352                           
  8353  0070                     ?_TMR3_WriteTimer:	
  8354                           ; 1 bytes @ 0x0
  8355                           
  8356  0070                     ?_TMR5_WriteTimer:	
  8357                           ; 1 bytes @ 0x0
  8358                           
  8359  0070                     ?_TMR2_Start:	
  8360                           ; 1 bytes @ 0x0
  8361                           
  8362  0070                     ??_TMR2_Start:	
  8363                           ; 1 bytes @ 0x0
  8364                           
  8365  0070                     ?_TMR2_StartTimer:	
  8366                           ; 1 bytes @ 0x0
  8367                           
  8368  0070                     ??_TMR2_StartTimer:	
  8369                           ; 1 bytes @ 0x0
  8370                           
  8371  0070                     ?_TMR2_Stop:	
  8372                           ; 1 bytes @ 0x0
  8373                           
  8374  0070                     ?_TMR2_StopTimer:	
  8375                           ; 1 bytes @ 0x0
  8376                           
  8377  0070                     ?_tsttc:	
  8378                           ; 1 bytes @ 0x0
  8379                           
  8380  0070                     ?_LCDsend:	
  8381                           ; 1 bytes @ 0x0
  8382                           
  8383  0070                     ?_LCDinit:	
  8384                           ; 1 bytes @ 0x0
  8385                           
  8386  0070                     ?_LCDcmd:	
  8387                           ; 1 bytes @ 0x0
  8388                           
  8389  0070                     ?_LCDchar:	
  8390                           ; 1 bytes @ 0x0
  8391                           
  8392  0070                     ?_LCDstr:	
  8393                           ; 1 bytes @ 0x0
  8394                           
  8395  0070                     ?_differenceBetweenTimePeriod:	
  8396                           ; 1 bytes @ 0x0
  8397                           
  8398  0070                     ?_PWM_Output_D4_Enable:	
  8399                           ; 1 bytes @ 0x0
  8400                           
  8401  0070                     ??_PWM_Output_D4_Enable:	
  8402                           ; 1 bytes @ 0x0
  8403                           
  8404  0070                     ?_PWM_Output_D4_Disable:	
  8405                           ; 1 bytes @ 0x0
  8406                           
  8407  0070                     ?_Clock_ISR:	
  8408                           ; 1 bytes @ 0x0
  8409                           
  8410  0070                     ??_Clock_ISR:	
  8411                           ; 1 bytes @ 0x0
  8412                           
  8413  0070                     ?_menuLCD_ISR:	
  8414                           ; 1 bytes @ 0x0
  8415                           
  8416  0070                     ?_monitoring_ISR:	
  8417                           ; 1 bytes @ 0x0
  8418                           
  8419  0070                     ?_editClock:	
  8420                           ; 1 bytes @ 0x0
  8421                           
  8422  0070                     ?_editTemp:	
  8423                           ; 1 bytes @ 0x0
  8424                           
  8425  0070                     ?_editLum:	
  8426                           ; 1 bytes @ 0x0
  8427                           
  8428  0070                     ?_toggleAlarms:	
  8429                           ; 1 bytes @ 0x0
  8430                           
  8431  0070                     ?_main:	
  8432                           ; 1 bytes @ 0x0
  8433                           
  8434  0070                     ?i1_WriteI2C:	
  8435                           ; 1 bytes @ 0x0
  8436                           
  8437  0070                     ??i1_WriteI2C:	
  8438                           ; 1 bytes @ 0x0
  8439                           
  8440  0070                     ?i1_PWM6_LoadDutyValue:	
  8441                           ; 1 bytes @ 0x0
  8442                           
  8443  0070                     ?i1_TMR2_Stop:	
  8444                           ; 1 bytes @ 0x0
  8445                           
  8446  0070                     ??i1_TMR2_Stop:	
  8447                           ; 1 bytes @ 0x0
  8448                           
  8449  0070                     ?i1_TMR2_StopTimer:	
  8450                           ; 1 bytes @ 0x0
  8451                           
  8452  0070                     ??i1_TMR2_StopTimer:	
  8453                           ; 1 bytes @ 0x0
  8454                           
  8455  0070                     ?i1_PWM_Output_D4_Disable:	
  8456                           ; 1 bytes @ 0x0
  8457                           
  8458  0070                     ??i1_PWM_Output_D4_Disable:	
  8459                           ; 1 bytes @ 0x0
  8460                           
  8461  0070                     ?_ADCC_GetSingleConversion:	
  8462                           ; 1 bytes @ 0x0
  8463                           
  8464  0070                     ?___wmul:	
  8465                           ; 2 bytes @ 0x0
  8466                           
  8467  0070                     ?___lwdiv:	
  8468                           ; 2 bytes @ 0x0
  8469                           
  8470  0070                     _isdigit$2891:	
  8471                           ; 2 bytes @ 0x0
  8472                           
  8473  0070                     TMR1_WriteTimer@timerVal:	
  8474                           ; 1 bytes @ 0x0
  8475                           
  8476  0070                     TMR3_WriteTimer@timerVal:	
  8477                           ; 2 bytes @ 0x0
  8478                           
  8479  0070                     TMR5_WriteTimer@timerVal:	
  8480                           ; 2 bytes @ 0x0
  8481                           
  8482  0070                     ___wmul@multiplier:	
  8483                           ; 2 bytes @ 0x0
  8484                           
  8485  0070                     ___lwdiv@divisor:	
  8486                           ; 2 bytes @ 0x0
  8487                           
  8488  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  8489                           ; 2 bytes @ 0x0
  8490                           
  8491  0070                     differenceBetweenTimePeriod@start:	
  8492                           ; 2 bytes @ 0x0
  8493                           
  8494                           
  8495                           ; 3 bytes @ 0x0
  8496  0070                     	ds	1
  8497  0071                     isdigit@c:
  8498  0071                     i1WriteI2C@data_out:	
  8499                           ; 1 bytes @ 0x1
  8500                           
  8501                           
  8502                           ; 1 bytes @ 0x1
  8503  0071                     	ds	1
  8504  0072                     ??_TMR1_ISR:
  8505  0072                     ??_TMR1_WriteTimer:	
  8506                           ; 1 bytes @ 0x2
  8507                           
  8508  0072                     ??_TMR3_WriteTimer:	
  8509                           ; 1 bytes @ 0x2
  8510                           
  8511  0072                     ??_TMR5_WriteTimer:	
  8512                           ; 1 bytes @ 0x2
  8513                           
  8514  0072                     ??_tsttc:	
  8515                           ; 1 bytes @ 0x2
  8516                           
  8517  0072                     ??i1_PWM6_LoadDutyValue:	
  8518                           ; 1 bytes @ 0x2
  8519                           
  8520  0072                     ?i1_LCDsend2x4:	
  8521                           ; 1 bytes @ 0x2
  8522                           
  8523  0072                     i1LCDsend2x4@mode:	
  8524                           ; 1 bytes @ 0x2
  8525                           
  8526  0072                     ___wmul@multiplicand:	
  8527                           ; 1 bytes @ 0x2
  8528                           
  8529  0072                     ___lwdiv@dividend:	
  8530                           ; 2 bytes @ 0x2
  8531                           
  8532                           
  8533                           ; 2 bytes @ 0x2
  8534  0072                     	ds	1
  8535  0073                     ??_ADCC_GetSingleConversion:
  8536  0073                     ??i1_LCDsend2x4:	
  8537                           ; 1 bytes @ 0x3
  8538                           
  8539  0073                     ADCC_GetSingleConversion@channel:	
  8540                           ; 1 bytes @ 0x3
  8541                           
  8542  0073                     tsttc@value:	
  8543                           ; 1 bytes @ 0x3
  8544                           
  8545  0073                     differenceBetweenTimePeriod@stop:	
  8546                           ; 1 bytes @ 0x3
  8547                           
  8548                           
  8549                           ; 3 bytes @ 0x3
  8550  0073                     	ds	1
  8551  0074                     ??___wmul:
  8552  0074                     ??___lwdiv:	
  8553                           ; 1 bytes @ 0x4
  8554                           
  8555  0074                     ___wmul@product:	
  8556                           ; 1 bytes @ 0x4
  8557                           
  8558                           
  8559                           ; 2 bytes @ 0x4
  8560  0074                     	ds	1
  8561  0075                     i1LCDsend2x4@c:
  8562  0075                     ___lwdiv@quotient:	
  8563                           ; 1 bytes @ 0x5
  8564                           
  8565                           
  8566                           ; 2 bytes @ 0x5
  8567  0075                     	ds	1
  8568  0076                     ?_DATAEE_WriteByte:
  8569  0076                     differenceBetweenTimePeriod@diff:	
  8570                           ; 1 bytes @ 0x6
  8571                           
  8572  0076                     i1LCDsend2x4@hc:	
  8573                           ; 1 bytes @ 0x6
  8574                           
  8575  0076                     DATAEE_WriteByte@bAdd:	
  8576                           ; 1 bytes @ 0x6
  8577                           
  8578                           
  8579                           ; 2 bytes @ 0x6
  8580  0076                     	ds	1
  8581  0077                     ??_differenceBetweenTimePeriod:
  8582  0077                     ___lwdiv@counter:	
  8583                           ; 1 bytes @ 0x7
  8584                           
  8585  0077                     i1LCDsend2x4@lc:	
  8586                           ; 1 bytes @ 0x7
  8587                           
  8588                           
  8589                           ; 1 bytes @ 0x7
  8590  0077                     	ds	1
  8591  0078                     ??_LCDcmd:
  8592  0078                     ??_LCDchar:	
  8593                           ; 1 bytes @ 0x8
  8594                           
  8595  0078                     ?___lwmod:	
  8596                           ; 1 bytes @ 0x8
  8597                           
  8598  0078                     LCDcmd@c:	
  8599                           ; 2 bytes @ 0x8
  8600                           
  8601  0078                     LCDchar@c:	
  8602                           ; 1 bytes @ 0x8
  8603                           
  8604  0078                     DATAEE_WriteByte@bData:	
  8605                           ; 1 bytes @ 0x8
  8606                           
  8607  0078                     ___lwmod@divisor:	
  8608                           ; 1 bytes @ 0x8
  8609                           
  8610                           
  8611                           ; 2 bytes @ 0x8
  8612  0078                     	ds	1
  8613  0079                     ??_DATAEE_WriteByte:
  8614  0079                     ??_LCDstr:	
  8615                           ; 1 bytes @ 0x9
  8616                           
  8617  0079                     DATAEE_WriteByte@GIEBitValue:	
  8618                           ; 1 bytes @ 0x9
  8619                           
  8620                           
  8621                           ; 1 bytes @ 0x9
  8622  0079                     	ds	1
  8623  007A                     ??_monitoring_ISR:
  8624  007A                     LCDstr@c:	
  8625                           ; 1 bytes @ 0xA
  8626                           
  8627  007A                     ___lwmod@dividend:	
  8628                           ; 1 bytes @ 0xA
  8629                           
  8630                           
  8631                           ; 2 bytes @ 0xA
  8632  007A                     	ds	1
  8633  007B                     LCDstr@p:
  8634                           
  8635                           ; 1 bytes @ 0xB
  8636  007B                     	ds	1
  8637  007C                     ??___lwmod:
  8638                           
  8639                           ; 1 bytes @ 0xC
  8640  007C                     	ds	1
  8641  007D                     ??_TMR5_ISR:
  8642  007D                     ___lwmod@counter:	
  8643                           ; 1 bytes @ 0xD
  8644                           
  8645                           
  8646                           ; 1 bytes @ 0xD
  8647  007D                     	ds	1
  8648  007E                     ??_TMR3_ISR:
  8649  007E                     ??_INTERRUPT_InterruptManager:	
  8650                           ; 1 bytes @ 0xE
  8651                           
  8652                           
  8653                           	psect	cstackBANK0
  8654  0020                     __pcstackBANK0:	
  8655                           ; 1 bytes @ 0xE
  8656                           
  8657  0020                     ?_sprintf:
  8658  0020                     sprintf@f:	
  8659                           ; 2 bytes @ 0x0
  8660                           
  8661                           
  8662                           ; 2 bytes @ 0x0
  8663  0020                     	ds	8
  8664  0028                     ??_sprintf:
  8665                           
  8666                           ; 1 bytes @ 0x8
  8667  0028                     	ds	4
  8668  002C                     sprintf@ap:
  8669                           
  8670                           ; 1 bytes @ 0xC
  8671  002C                     	ds	1
  8672  002D                     sprintf@prec:
  8673                           
  8674                           ; 1 bytes @ 0xD
  8675  002D                     	ds	1
  8676  002E                     sprintf@val:
  8677                           
  8678                           ; 2 bytes @ 0xE
  8679  002E                     	ds	2
  8680  0030                     sprintf@flag:
  8681                           
  8682                           ; 1 bytes @ 0x10
  8683  0030                     	ds	1
  8684  0031                     sprintf@width:
  8685                           
  8686                           ; 2 bytes @ 0x11
  8687  0031                     	ds	2
  8688  0033                     sprintf@c:
  8689                           
  8690                           ; 1 bytes @ 0x13
  8691  0033                     	ds	1
  8692  0034                     sprintf@sp:
  8693                           
  8694                           ; 1 bytes @ 0x14
  8695  0034                     	ds	1
  8696  0035                     ??_menuLCD_ISR:
  8697                           
  8698                           ; 1 bytes @ 0x15
  8699  0035                     	ds	6
  8700  003B                     menuLCD_ISR@str:
  8701                           
  8702                           ; 8 bytes @ 0x1B
  8703  003B                     	ds	8
  8704  0043                     menuLCD_ISR@tt:
  8705                           
  8706                           ; 4 bytes @ 0x23
  8707  0043                     	ds	4
  8708  0047                     menuLCD_ISR@l:
  8709                           
  8710                           ; 3 bytes @ 0x27
  8711  0047                     	ds	3
  8712  004A                     menuLCD_ISR@diff:
  8713                           
  8714                           ; 3 bytes @ 0x2A
  8715  004A                     	ds	3
  8716                           
  8717                           	psect	maintext
  8718  0769                     __pmaintext:	
  8719 ;;
  8720 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  8721 ;;
  8722 ;; *************** function _main *****************
  8723 ;; Defined at:
  8724 ;;		line 604 in file "main.c"
  8725 ;; Parameters:    Size  Location     Type
  8726 ;;		None
  8727 ;; Auto vars:     Size  Location     Type
  8728 ;;		None
  8729 ;; Return value:  Size  Location     Type
  8730 ;;                  1    wreg      void 
  8731 ;; Registers used:
  8732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8733 ;; Tracked objects:
  8734 ;;		On entry : B1F/0
  8735 ;;		On exit  : 0/0
  8736 ;;		Unchanged: 0/0
  8737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8740 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8741 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8742 ;;Total ram usage:        1 bytes
  8743 ;; Hardware stack levels required when called:   10
  8744 ;; This function calls:
  8745 ;;		_LCDinit
  8746 ;;		_PWM6_LoadDutyValue
  8747 ;;		_PWM_Output_D4_Disable
  8748 ;;		_SYSTEM_Initialize
  8749 ;;		_TMR1_SetInterruptHandler
  8750 ;;		_TMR2_StopTimer
  8751 ;;		_TMR3_SetInterruptHandler
  8752 ;;		_TMR5_SetInterruptHandler
  8753 ;;		_editClock
  8754 ;;		_editLum
  8755 ;;		_editTemp
  8756 ;;		_i2c1_driver_open
  8757 ;;		_toggleAlarms
  8758 ;; This function is called by:
  8759 ;;		Startup code after reset
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763                           
  8764                           ;psect for function _main
  8765  0769                     _main:
  8766  0769                     l4785:	
  8767                           ;incstack = 0
  8768                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8769                           
  8770                           
  8771                           ;main.c: 607: SYSTEM_Initialize();
  8772  0769  318B  237D  3187   	fcall	_SYSTEM_Initialize
  8773                           
  8774                           ;main.c: 609: PWM6_LoadDutyValue(0);
  8775  076C  3000               	movlw	0
  8776  076D  0021               	movlb	1	; select bank1
  8777  076E  00AA               	movwf	PWM6_LoadDutyValue@dutyValue^(0+128)
  8778  076F  00AB               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128)
  8779  0770  318B  234A  3187   	fcall	_PWM6_LoadDutyValue
  8780  0773                     l4787:
  8781                           
  8782                           ;main.c: 610: TMR2_StopTimer();
  8783  0773  3189  21FB  3187   	fcall	_TMR2_StopTimer
  8784  0776                     l4789:
  8785                           
  8786                           ;main.c: 611: PWM_Output_D4_Disable();
  8787  0776  3189  21ED  3187   	fcall	_PWM_Output_D4_Disable
  8788                           
  8789                           ;main.c: 613: TMR1_SetInterruptHandler(Clock_ISR);
  8790  0779  3055               	movlw	low _Clock_ISR
  8791  077A  0021               	movlb	1	; select bank1
  8792  077B  00AA               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  8793  077C  300E               	movlw	high _Clock_ISR
  8794  077D  00AB               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8795  077E  3189  21FF  3187   	fcall	_TMR1_SetInterruptHandler
  8796                           
  8797                           ;main.c: 615: TMR3_SetInterruptHandler(menuLCD_ISR);
  8798  0781  3062               	movlw	low _menuLCD_ISR
  8799  0782  0021               	movlb	1	; select bank1
  8800  0783  00AA               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  8801  0784  3000               	movlw	high _menuLCD_ISR
  8802  0785  00AB               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8803  0786  318A  2205  3187   	fcall	_TMR3_SetInterruptHandler
  8804                           
  8805                           ;main.c: 617: TMR5_SetInterruptHandler(monitoring_ISR);
  8806  0789  30BF               	movlw	low _monitoring_ISR
  8807  078A  0021               	movlb	1	; select bank1
  8808  078B  00AA               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
  8809  078C  3003               	movlw	high _monitoring_ISR
  8810  078D  00AB               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8811  078E  318A  220B  3187   	fcall	_TMR5_SetInterruptHandler
  8812                           
  8813                           ;main.c: 623: i2c1_driver_open();
  8814  0791  318A  2234  3187   	fcall	_i2c1_driver_open
  8815  0794                     l4791:
  8816                           
  8817                           ;main.c: 624: TRISCbits.TRISC3 = 1;
  8818  0794  0020               	movlb	0	; select bank0
  8819  0795  1593               	bsf	19,3	;volatile
  8820  0796                     l4793:
  8821                           
  8822                           ;main.c: 625: TRISCbits.TRISC4 = 1;
  8823  0796  1613               	bsf	19,4	;volatile
  8824  0797                     l4795:
  8825                           
  8826                           ;main.c: 626: WPUC3 = 1;
  8827  0797  003E               	movlb	30	; select bank30
  8828  0798  15CF               	bsf	79,3	;volatile
  8829  0799                     l4797:
  8830                           
  8831                           ;main.c: 627: WPUC4 = 1;
  8832  0799  164F               	bsf	79,4	;volatile
  8833                           
  8834                           ;main.c: 628: LCDinit();
  8835  079A  318F  2704  3187   	fcall	_LCDinit
  8836  079D                     l4799:
  8837                           
  8838                           ;main.c: 631: (INTCONbits.GIE = 1);
  8839  079D  178B               	bsf	11,7	;volatile
  8840  079E                     l4801:
  8841                           
  8842                           ;main.c: 634: (INTCONbits.PEIE = 1);
  8843  079E  170B               	bsf	11,6	;volatile
  8844  079F                     l4803:
  8845                           
  8846                           ;main.c: 637: {;main.c: 638: if(PORTBbits.RB4 == 0){
  8847  079F  0020               	movlb	0	; select bank0
  8848  07A0  1A0D               	btfsc	13,4	;volatile
  8849  07A1  2FA3               	goto	u4731
  8850  07A2  2FA4               	goto	u4730
  8851  07A3                     u4731:
  8852  07A3  2FDD               	goto	l4821
  8853  07A4                     u4730:
  8854  07A4                     l4805:
  8855                           
  8856                           ;main.c: 639: _delay((unsigned long)((50)*(1000000/4000.0)));
  8857  07A4  3011               	movlw	17
  8858  07A5  0021               	movlb	1	; select bank1
  8859  07A6  00B3               	movwf	??_main^(0+128)
  8860  07A7  303A               	movlw	58
  8861  07A8                     u4797:
  8862  07A8  0B89               	decfsz	9,f
  8863  07A9  2FA8               	goto	u4797
  8864  07AA  0BB3               	decfsz	??_main^(0+128),f
  8865  07AB  2FA8               	goto	u4797
  8866  07AC  0000               	nop
  8867  07AD                     l4807:
  8868                           
  8869                           ;main.c: 641: if(mode == 0 && (clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigger
      +                          )){
  8870  07AD  0020               	movlb	0	; select bank0
  8871  07AE  0864               	movf	_mode,w
  8872  07AF  0465               	iorwf	_mode+1,w
  8873  07B0  1D03               	btfss	3,2
  8874  07B1  2FB3               	goto	u4741
  8875  07B2  2FB4               	goto	u4740
  8876  07B3                     u4741:
  8877  07B3  2FC7               	goto	l4817
  8878  07B4                     u4740:
  8879  07B4                     l4809:
  8880  07B4  0850               	movf	_clkAlarm+3,w
  8881  07B5  1D03               	btfss	3,2
  8882  07B6  2FB8               	goto	u4751
  8883  07B7  2FB9               	goto	u4750
  8884  07B8                     u4751:
  8885  07B8  2FC3               	goto	l4815
  8886  07B9                     u4750:
  8887  07B9                     l4811:
  8888  07B9  0858               	movf	_tempAlarm+1,w
  8889  07BA  1D03               	btfss	3,2
  8890  07BB  2FBD               	goto	u4761
  8891  07BC  2FBE               	goto	u4760
  8892  07BD                     u4761:
  8893  07BD  2FC3               	goto	l4815
  8894  07BE                     u4760:
  8895  07BE                     l4813:
  8896  07BE  0855               	movf	_lumAlarm+1,w
  8897  07BF  1903               	btfsc	3,2
  8898  07C0  2FC2               	goto	u4771
  8899  07C1  2FC3               	goto	u4770
  8900  07C2                     u4771:
  8901  07C2  2FC7               	goto	l4817
  8902  07C3                     u4770:
  8903  07C3                     l4815:
  8904                           
  8905                           ;main.c: 642: clkAlarm.trigger = 0;
  8906  07C3  01D0               	clrf	_clkAlarm+3
  8907                           
  8908                           ;main.c: 643: tempAlarm.trigger = 0;
  8909  07C4  01D8               	clrf	_tempAlarm+1
  8910                           
  8911                           ;main.c: 644: lumAlarm.trigger = 0;
  8912  07C5  01D5               	clrf	_lumAlarm+1
  8913                           
  8914                           ;main.c: 645: }
  8915  07C6  2FCB               	goto	l1268
  8916  07C7                     l4817:
  8917                           
  8918                           ;main.c: 646: else{;main.c: 647: mode = 1;
  8919  07C7  3001               	movlw	1
  8920  07C8  00E4               	movwf	_mode
  8921  07C9  3000               	movlw	0
  8922  07CA  00E5               	movwf	_mode+1
  8923  07CB                     l1268:
  8924  07CB  1E0D               	btfss	13,4	;volatile
  8925  07CC  2FCE               	goto	u4781
  8926  07CD  2FCF               	goto	u4780
  8927  07CE                     u4781:
  8928  07CE  2FCB               	goto	l1268
  8929  07CF                     u4780:
  8930  07CF  2FDD               	goto	l4821
  8931  07D0                     l4819:
  8932                           
  8933                           ;main.c: 655: editClock();
  8934  07D0  318F  277A  3187   	fcall	_editClock
  8935  07D3                     l1275:	
  8936                           ;main.c: 656: case 2:
  8937                           
  8938                           
  8939                           ;main.c: 657: editTemp();
  8940  07D3  318D  2505  3187   	fcall	_editTemp
  8941  07D6                     l1276:	
  8942                           ;main.c: 658: case 3:
  8943                           
  8944                           
  8945                           ;main.c: 659: editLum();
  8946  07D6  318C  24CC  3187   	fcall	_editLum
  8947  07D9                     l1277:	
  8948                           ;main.c: 660: case 4:
  8949                           
  8950                           
  8951                           ;main.c: 661: toggleAlarms();
  8952  07D9  318C  2433  3187   	fcall	_toggleAlarms
  8953                           
  8954                           ;main.c: 662: }
  8955  07DC  2F9F               	goto	l4803
  8956  07DD                     l4821:
  8957                           
  8958                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8959                           ; Switch size 1, requested type "simple"
  8960                           ; Number of cases is 1, Range of values is 0 to 0
  8961                           ; switch strategies available:
  8962                           ; Name         Instructions Cycles
  8963                           ; simple_byte            4     3 (average)
  8964                           ; direct_byte            8     6 (fixed)
  8965                           ; jumptable            260     6 (fixed)
  8966                           ;	Chosen strategy is simple_byte
  8967  07DD  0865               	movf	_mode+1,w
  8968  07DE  3A00               	xorlw	0	; case 0
  8969  07DF  1903               	skipnz
  8970  07E0  2FE2               	goto	l4847
  8971  07E1  2F9F               	goto	l4803
  8972  07E2                     l4847:
  8973                           
  8974                           ; Switch size 1, requested type "simple"
  8975                           ; Number of cases is 5, Range of values is 0 to 4
  8976                           ; switch strategies available:
  8977                           ; Name         Instructions Cycles
  8978                           ; direct_byte           16     6 (fixed)
  8979                           ; simple_byte           16     9 (average)
  8980                           ; jumptable            260     6 (fixed)
  8981                           ;	Chosen strategy is simple_byte
  8982  07E2  0864               	movf	_mode,w
  8983  07E3  3A00               	xorlw	0	; case 0
  8984  07E4  1903               	skipnz
  8985  07E5  2F9F               	goto	l4803
  8986  07E6  3A01               	xorlw	1	; case 1
  8987  07E7  1903               	skipnz
  8988  07E8  2FD0               	goto	l4819
  8989  07E9  3A03               	xorlw	3	; case 2
  8990  07EA  1903               	skipnz
  8991  07EB  2FD3               	goto	l1275
  8992  07EC  3A01               	xorlw	1	; case 3
  8993  07ED  1903               	skipnz
  8994  07EE  2FD6               	goto	l1276
  8995  07EF  3A07               	xorlw	7	; case 4
  8996  07F0  1903               	skipnz
  8997  07F1  2FD9               	goto	l1277
  8998  07F2  2F9F               	goto	l4803
  8999  07F3  3180  2840         	ljmp	start
  9000  07F5                     __end_of_main:
  9001                           
  9002                           	psect	text1
  9003  0C33                     __ptext1:	
  9004 ;; *************** function _toggleAlarms *****************
  9005 ;; Defined at:
  9006 ;;		line 587 in file "main.c"
  9007 ;; Parameters:    Size  Location     Type
  9008 ;;		None
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;		None
  9011 ;; Return value:  Size  Location     Type
  9012 ;;                  1    wreg      void 
  9013 ;; Registers used:
  9014 ;;		wreg, status,2, status,0
  9015 ;; Tracked objects:
  9016 ;;		On entry : 0/0
  9017 ;;		On exit  : 0/0
  9018 ;;		Unchanged: 0/0
  9019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9022 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9023 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9024 ;;Total ram usage:        1 bytes
  9025 ;; Hardware stack levels used:    1
  9026 ;; Hardware stack levels required when called:    7
  9027 ;; This function calls:
  9028 ;;		Nothing
  9029 ;; This function is called by:
  9030 ;;		_main
  9031 ;; This function uses a non-reentrant model
  9032 ;;
  9033                           
  9034                           
  9035                           ;psect for function _toggleAlarms
  9036  0C33                     _toggleAlarms:
  9037  0C33                     l1249:	
  9038                           ;incstack = 0
  9039                           ; Regs used in _toggleAlarms: [wreg+status,2+status,0]
  9040                           ;main.c: 589: while(1){
  9041                           
  9042                           
  9043                           ;main.c: 590: if(PORTBbits.RB4 == 0){
  9044  0C33  0020               	movlb	0	; select bank0
  9045  0C34  1A0D               	btfsc	13,4	;volatile
  9046  0C35  2C37               	goto	u4581
  9047  0C36  2C38               	goto	u4580
  9048  0C37                     u4581:
  9049  0C37  2C49               	goto	l1250
  9050  0C38                     u4580:
  9051  0C38                     l4735:
  9052                           
  9053                           ;main.c: 591: _delay((unsigned long)((50)*(1000000/4000.0)));
  9054  0C38  3011               	movlw	17
  9055  0C39  0021               	movlb	1	; select bank1
  9056  0C3A  00AA               	movwf	??_toggleAlarms^(0+128)
  9057  0C3B  303A               	movlw	58
  9058  0C3C                     u4807:
  9059  0C3C  0B89               	decfsz	9,f
  9060  0C3D  2C3C               	goto	u4807
  9061  0C3E  0BAA               	decfsz	??_toggleAlarms^(0+128),f
  9062  0C3F  2C3C               	goto	u4807
  9063  0C40  0000               	nop
  9064  0C41                     l4737:
  9065                           
  9066                           ;main.c: 592: mode = 0;
  9067  0C41  0020               	movlb	0	; select bank0
  9068  0C42  01E4               	clrf	_mode
  9069  0C43  01E5               	clrf	_mode+1
  9070  0C44                     l1251:	
  9071                           ;main.c: 593: while(PORTBbits.RB4==0){};
  9072                           
  9073  0C44  1E0D               	btfss	13,4	;volatile
  9074  0C45  2C47               	goto	u4591
  9075  0C46  2C48               	goto	u4590
  9076  0C47                     u4591:
  9077  0C47  2C44               	goto	l1251
  9078  0C48                     u4590:
  9079  0C48  2C63               	goto	l1257
  9080  0C49                     l1250:
  9081                           
  9082                           ;main.c: 595: };main.c: 597: if(PORTCbits.RC5 == 0){
  9083  0C49  1A8E               	btfsc	14,5	;volatile
  9084  0C4A  2C4C               	goto	u4601
  9085  0C4B  2C4D               	goto	u4600
  9086  0C4C                     u4601:
  9087  0C4C  2C33               	goto	l1249
  9088  0C4D                     u4600:
  9089  0C4D                     l4739:
  9090                           
  9091                           ;main.c: 598: alarmsEnable = !alarmsEnable;
  9092  0C4D  085E               	movf	_alarmsEnable,w
  9093  0C4E  1903               	btfsc	3,2
  9094  0C4F  2C51               	goto	u4611
  9095  0C50  2C53               	goto	u4610
  9096  0C51                     u4611:
  9097  0C51  3001               	movlw	1
  9098  0C52  2C54               	goto	u4620
  9099  0C53                     u4610:
  9100  0C53  3000               	movlw	0
  9101  0C54                     u4620:
  9102  0C54  0021               	movlb	1	; select bank1
  9103  0C55  00AA               	movwf	??_toggleAlarms^(0+128)
  9104  0C56  082A               	movf	??_toggleAlarms^(0+128),w
  9105  0C57  0020               	movlb	0	; select bank0
  9106  0C58  00DE               	movwf	_alarmsEnable
  9107  0C59                     l4741:
  9108                           
  9109                           ;main.c: 599: _delay((unsigned long)((100)*(1000000/4000.0)));
  9110  0C59  3021               	movlw	33
  9111  0C5A  0021               	movlb	1	; select bank1
  9112  0C5B  00AA               	movwf	??_toggleAlarms^(0+128)
  9113  0C5C  3076               	movlw	118
  9114  0C5D                     u4817:
  9115  0C5D  0B89               	decfsz	9,f
  9116  0C5E  2C5D               	goto	u4817
  9117  0C5F  0BAA               	decfsz	??_toggleAlarms^(0+128),f
  9118  0C60  2C5D               	goto	u4817
  9119  0C61  0000               	nop
  9120  0C62  2C33               	goto	l1249
  9121  0C63                     l1257:
  9122  0C63  0008               	return
  9123  0C64                     __end_of_toggleAlarms:
  9124                           
  9125                           	psect	text2
  9126  0A34                     __ptext2:	
  9127 ;; *************** function _i2c1_driver_open *****************
  9128 ;; Defined at:
  9129 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;		None
  9132 ;; Auto vars:     Size  Location     Type
  9133 ;;		None
  9134 ;; Return value:  Size  Location     Type
  9135 ;;		None               void
  9136 ;; Registers used:
  9137 ;;		wreg, status,2
  9138 ;; Tracked objects:
  9139 ;;		On entry : 0/0
  9140 ;;		On exit  : 0/0
  9141 ;;		Unchanged: 0/0
  9142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9147 ;;Total ram usage:        0 bytes
  9148 ;; Hardware stack levels used:    1
  9149 ;; Hardware stack levels required when called:    7
  9150 ;; This function calls:
  9151 ;;		Nothing
  9152 ;; This function is called by:
  9153 ;;		_main
  9154 ;; This function uses a non-reentrant model
  9155 ;;
  9156                           
  9157                           
  9158                           ;psect for function _i2c1_driver_open
  9159  0A34                     _i2c1_driver_open:
  9160  0A34                     l4509:	
  9161                           ;incstack = 0
  9162                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  9163                           
  9164                           
  9165                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
  9166  0A34  0023               	movlb	3	; select bank3
  9167  0A35  1A90               	btfsc	16,5	;volatile
  9168  0A36  2A38               	goto	u4081
  9169  0A37  2A39               	goto	u4080
  9170  0A38                     u4081:
  9171  0A38  2A3F               	goto	l239
  9172  0A39                     u4080:
  9173  0A39                     l4511:
  9174                           
  9175                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
  9176  0A39  018F               	clrf	15	;volatile
  9177  0A3A                     l4513:
  9178                           
  9179                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
  9180  0A3A  3028               	movlw	40
  9181  0A3B  0090               	movwf	16	;volatile
  9182  0A3C                     l4515:
  9183                           
  9184                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
  9185  0A3C  0191               	clrf	17	;volatile
  9186                           
  9187                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
  9188  0A3D  3003               	movlw	3
  9189  0A3E  008D               	movwf	13	;volatile
  9190  0A3F                     l239:
  9191  0A3F  0008               	return
  9192  0A40                     __end_of_i2c1_driver_open:
  9193                           
  9194                           	psect	text3
  9195  0D05                     __ptext3:	
  9196 ;; *************** function _editTemp *****************
  9197 ;; Defined at:
  9198 ;;		line 540 in file "main.c"
  9199 ;; Parameters:    Size  Location     Type
  9200 ;;		None
  9201 ;; Auto vars:     Size  Location     Type
  9202 ;;		None
  9203 ;; Return value:  Size  Location     Type
  9204 ;;                  1    wreg      void 
  9205 ;; Registers used:
  9206 ;;		wreg, status,2, status,0
  9207 ;; Tracked objects:
  9208 ;;		On entry : 0/0
  9209 ;;		On exit  : 0/0
  9210 ;;		Unchanged: 0/0
  9211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9214 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9215 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9216 ;;Total ram usage:        1 bytes
  9217 ;; Hardware stack levels used:    1
  9218 ;; Hardware stack levels required when called:    7
  9219 ;; This function calls:
  9220 ;;		Nothing
  9221 ;; This function is called by:
  9222 ;;		_main
  9223 ;; This function uses a non-reentrant model
  9224 ;;
  9225                           
  9226                           
  9227                           ;psect for function _editTemp
  9228  0D05                     _editTemp:
  9229  0D05                     l4695:	
  9230                           ;incstack = 0
  9231                           ; Regs used in _editTemp: [wreg+status,2+status,0]
  9232                           
  9233                           
  9234                           ;main.c: 541: editingTempAlarm = 1;
  9235  0D05  0020               	movlb	0	; select bank0
  9236  0D06  01EB               	clrf	_editingTempAlarm
  9237  0D07  0AEB               	incf	_editingTempAlarm,f
  9238  0D08                     l4697:
  9239                           
  9240                           ;main.c: 543: tempAlarm.alarmTemp = 0;
  9241  0D08  01D7               	clrf	_tempAlarm
  9242  0D09                     l4699:
  9243                           
  9244                           ;main.c: 546: if(PORTBbits.RB4 == 0){
  9245  0D09  0020               	movlb	0	; select bank0
  9246  0D0A  1A0D               	btfsc	13,4	;volatile
  9247  0D0B  2D0D               	goto	u4501
  9248  0D0C  2D0E               	goto	u4500
  9249  0D0D                     u4501:
  9250  0D0D  2D22               	goto	l1226
  9251  0D0E                     u4500:
  9252  0D0E                     l4701:
  9253                           
  9254                           ;main.c: 547: _delay((unsigned long)((50)*(1000000/4000.0)));
  9255  0D0E  3011               	movlw	17
  9256  0D0F  0021               	movlb	1	; select bank1
  9257  0D10  00AA               	movwf	??_editTemp^(0+128)
  9258  0D11  303A               	movlw	58
  9259  0D12                     u4827:
  9260  0D12  0B89               	decfsz	9,f
  9261  0D13  2D12               	goto	u4827
  9262  0D14  0BAA               	decfsz	??_editTemp^(0+128),f
  9263  0D15  2D12               	goto	u4827
  9264  0D16  0000               	nop
  9265  0D17                     l4703:
  9266                           
  9267                           ;main.c: 548: editingTempAlarm = 0;
  9268  0D17  0020               	movlb	0	; select bank0
  9269  0D18  01EB               	clrf	_editingTempAlarm
  9270  0D19                     l4705:
  9271                           
  9272                           ;main.c: 549: mode = 3;
  9273  0D19  3003               	movlw	3
  9274  0D1A  00E4               	movwf	_mode
  9275  0D1B  3000               	movlw	0
  9276  0D1C  00E5               	movwf	_mode+1
  9277  0D1D                     l1227:	
  9278                           ;main.c: 550: while(PORTBbits.RB4==0){};
  9279                           
  9280  0D1D  1E0D               	btfss	13,4	;volatile
  9281  0D1E  2D20               	goto	u4511
  9282  0D1F  2D21               	goto	u4510
  9283  0D20                     u4511:
  9284  0D20  2D1D               	goto	l1227
  9285  0D21                     u4510:
  9286  0D21  2D3D               	goto	l1234
  9287  0D22                     l1226:
  9288                           
  9289                           ;main.c: 552: };main.c: 554: if(PORTCbits.RC5 == 0){
  9290  0D22  1A8E               	btfsc	14,5	;volatile
  9291  0D23  2D25               	goto	u4521
  9292  0D24  2D26               	goto	u4520
  9293  0D25                     u4521:
  9294  0D25  2D09               	goto	l4699
  9295  0D26                     u4520:
  9296  0D26                     l4707:
  9297                           
  9298                           ;main.c: 555: tempAlarm.alarmTemp++;
  9299  0D26  3001               	movlw	1
  9300  0D27  0021               	movlb	1	; select bank1
  9301  0D28  00AA               	movwf	??_editTemp^(0+128)
  9302  0D29  082A               	movf	??_editTemp^(0+128),w
  9303  0D2A  0020               	movlb	0	; select bank0
  9304  0D2B  07D7               	addwf	_tempAlarm,f
  9305  0D2C                     l4709:
  9306                           
  9307                           ;main.c: 556: if(tempAlarm.alarmTemp > 50){
  9308  0D2C  3033               	movlw	51
  9309  0D2D  0257               	subwf	_tempAlarm,w
  9310  0D2E  1C03               	skipc
  9311  0D2F  2D31               	goto	u4531
  9312  0D30  2D32               	goto	u4530
  9313  0D31                     u4531:
  9314  0D31  2D33               	goto	l4713
  9315  0D32                     u4530:
  9316  0D32                     l4711:
  9317                           
  9318                           ;main.c: 557: tempAlarm.alarmTemp = 0;
  9319  0D32  01D7               	clrf	_tempAlarm
  9320  0D33                     l4713:
  9321                           
  9322                           ;main.c: 558: };main.c: 559: _delay((unsigned long)((100)*(1000000/4000.0)));
  9323  0D33  3021               	movlw	33
  9324  0D34  0021               	movlb	1	; select bank1
  9325  0D35  00AA               	movwf	??_editTemp^(0+128)
  9326  0D36  3076               	movlw	118
  9327  0D37                     u4837:
  9328  0D37  0B89               	decfsz	9,f
  9329  0D38  2D37               	goto	u4837
  9330  0D39  0BAA               	decfsz	??_editTemp^(0+128),f
  9331  0D3A  2D37               	goto	u4837
  9332  0D3B  0000               	nop
  9333  0D3C  2D09               	goto	l4699
  9334  0D3D                     l1234:
  9335  0D3D  0008               	return
  9336  0D3E                     __end_of_editTemp:
  9337                           
  9338                           	psect	text4
  9339  0CCC                     __ptext4:	
  9340 ;; *************** function _editLum *****************
  9341 ;; Defined at:
  9342 ;;		line 564 in file "main.c"
  9343 ;; Parameters:    Size  Location     Type
  9344 ;;		None
  9345 ;; Auto vars:     Size  Location     Type
  9346 ;;		None
  9347 ;; Return value:  Size  Location     Type
  9348 ;;                  1    wreg      void 
  9349 ;; Registers used:
  9350 ;;		wreg, status,2, status,0
  9351 ;; Tracked objects:
  9352 ;;		On entry : 0/0
  9353 ;;		On exit  : 0/0
  9354 ;;		Unchanged: 0/0
  9355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9358 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9359 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9360 ;;Total ram usage:        1 bytes
  9361 ;; Hardware stack levels used:    1
  9362 ;; Hardware stack levels required when called:    7
  9363 ;; This function calls:
  9364 ;;		Nothing
  9365 ;; This function is called by:
  9366 ;;		_main
  9367 ;; This function uses a non-reentrant model
  9368 ;;
  9369                           
  9370                           
  9371                           ;psect for function _editLum
  9372  0CCC                     _editLum:
  9373  0CCC                     l4715:	
  9374                           ;incstack = 0
  9375                           ; Regs used in _editLum: [wreg+status,2+status,0]
  9376                           
  9377                           
  9378                           ;main.c: 565: editingLumAlarm = 1;
  9379  0CCC  0020               	movlb	0	; select bank0
  9380  0CCD  01EA               	clrf	_editingLumAlarm
  9381  0CCE  0AEA               	incf	_editingLumAlarm,f
  9382  0CCF                     l4717:
  9383                           
  9384                           ;main.c: 566: lumAlarm.alarmLum = 0;
  9385  0CCF  01D4               	clrf	_lumAlarm
  9386  0CD0                     l4719:
  9387                           
  9388                           ;main.c: 569: if(PORTBbits.RB4 == 0){
  9389  0CD0  0020               	movlb	0	; select bank0
  9390  0CD1  1A0D               	btfsc	13,4	;volatile
  9391  0CD2  2CD4               	goto	u4541
  9392  0CD3  2CD5               	goto	u4540
  9393  0CD4                     u4541:
  9394  0CD4  2CE9               	goto	l1238
  9395  0CD5                     u4540:
  9396  0CD5                     l4721:
  9397                           
  9398                           ;main.c: 570: _delay((unsigned long)((50)*(1000000/4000.0)));
  9399  0CD5  3011               	movlw	17
  9400  0CD6  0021               	movlb	1	; select bank1
  9401  0CD7  00AA               	movwf	??_editLum^(0+128)
  9402  0CD8  303A               	movlw	58
  9403  0CD9                     u4847:
  9404  0CD9  0B89               	decfsz	9,f
  9405  0CDA  2CD9               	goto	u4847
  9406  0CDB  0BAA               	decfsz	??_editLum^(0+128),f
  9407  0CDC  2CD9               	goto	u4847
  9408  0CDD  0000               	nop
  9409  0CDE                     l4723:
  9410                           
  9411                           ;main.c: 571: editingLumAlarm = 0;
  9412  0CDE  0020               	movlb	0	; select bank0
  9413  0CDF  01EA               	clrf	_editingLumAlarm
  9414  0CE0                     l4725:
  9415                           
  9416                           ;main.c: 572: mode = 4;
  9417  0CE0  3004               	movlw	4
  9418  0CE1  00E4               	movwf	_mode
  9419  0CE2  3000               	movlw	0
  9420  0CE3  00E5               	movwf	_mode+1
  9421  0CE4                     l1239:	
  9422                           ;main.c: 573: while(PORTBbits.RB4==0){};
  9423                           
  9424  0CE4  1E0D               	btfss	13,4	;volatile
  9425  0CE5  2CE7               	goto	u4551
  9426  0CE6  2CE8               	goto	u4550
  9427  0CE7                     u4551:
  9428  0CE7  2CE4               	goto	l1239
  9429  0CE8                     u4550:
  9430  0CE8  2D04               	goto	l1246
  9431  0CE9                     l1238:
  9432                           
  9433                           ;main.c: 575: };main.c: 577: if(PORTCbits.RC5 == 0){
  9434  0CE9  1A8E               	btfsc	14,5	;volatile
  9435  0CEA  2CEC               	goto	u4561
  9436  0CEB  2CED               	goto	u4560
  9437  0CEC                     u4561:
  9438  0CEC  2CD0               	goto	l4719
  9439  0CED                     u4560:
  9440  0CED                     l4727:
  9441                           
  9442                           ;main.c: 578: lumAlarm.alarmLum++;
  9443  0CED  3001               	movlw	1
  9444  0CEE  0021               	movlb	1	; select bank1
  9445  0CEF  00AA               	movwf	??_editLum^(0+128)
  9446  0CF0  082A               	movf	??_editLum^(0+128),w
  9447  0CF1  0020               	movlb	0	; select bank0
  9448  0CF2  07D4               	addwf	_lumAlarm,f
  9449  0CF3                     l4729:
  9450                           
  9451                           ;main.c: 579: if(lumAlarm.alarmLum > 7){
  9452  0CF3  3008               	movlw	8
  9453  0CF4  0254               	subwf	_lumAlarm,w
  9454  0CF5  1C03               	skipc
  9455  0CF6  2CF8               	goto	u4571
  9456  0CF7  2CF9               	goto	u4570
  9457  0CF8                     u4571:
  9458  0CF8  2CFA               	goto	l4733
  9459  0CF9                     u4570:
  9460  0CF9                     l4731:
  9461                           
  9462                           ;main.c: 580: lumAlarm.alarmLum = 0;
  9463  0CF9  01D4               	clrf	_lumAlarm
  9464  0CFA                     l4733:
  9465                           
  9466                           ;main.c: 581: };main.c: 582: _delay((unsigned long)((100)*(1000000/4000.0)));
  9467  0CFA  3021               	movlw	33
  9468  0CFB  0021               	movlb	1	; select bank1
  9469  0CFC  00AA               	movwf	??_editLum^(0+128)
  9470  0CFD  3076               	movlw	118
  9471  0CFE                     u4857:
  9472  0CFE  0B89               	decfsz	9,f
  9473  0CFF  2CFE               	goto	u4857
  9474  0D00  0BAA               	decfsz	??_editLum^(0+128),f
  9475  0D01  2CFE               	goto	u4857
  9476  0D02  0000               	nop
  9477  0D03  2CD0               	goto	l4719
  9478  0D04                     l1246:
  9479  0D04  0008               	return
  9480  0D05                     __end_of_editLum:
  9481                           
  9482                           	psect	text5
  9483  0F7A                     __ptext5:	
  9484 ;; *************** function _editClock *****************
  9485 ;; Defined at:
  9486 ;;		line 496 in file "main.c"
  9487 ;; Parameters:    Size  Location     Type
  9488 ;;		None
  9489 ;; Auto vars:     Size  Location     Type
  9490 ;;		None
  9491 ;; Return value:  Size  Location     Type
  9492 ;;                  1    wreg      void 
  9493 ;; Registers used:
  9494 ;;		wreg, status,2, status,0
  9495 ;; Tracked objects:
  9496 ;;		On entry : 0/0
  9497 ;;		On exit  : 0/0
  9498 ;;		Unchanged: 0/0
  9499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9502 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9503 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9504 ;;Total ram usage:        1 bytes
  9505 ;; Hardware stack levels used:    1
  9506 ;; Hardware stack levels required when called:    7
  9507 ;; This function calls:
  9508 ;;		Nothing
  9509 ;; This function is called by:
  9510 ;;		_main
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           
  9514                           
  9515                           ;psect for function _editClock
  9516  0F7A                     _editClock:
  9517  0F7A                     l4651:	
  9518                           ;incstack = 0
  9519                           ; Regs used in _editClock: [wreg+status,2+status,0]
  9520                           
  9521                           
  9522                           ;main.c: 498: editingClockAlarm = 1;
  9523  0F7A  3001               	movlw	1
  9524  0F7B  0020               	movlb	0	; select bank0
  9525  0F7C  00E6               	movwf	_editingClockAlarm
  9526  0F7D  3000               	movlw	0
  9527  0F7E  00E7               	movwf	_editingClockAlarm+1
  9528  0F7F                     l4653:
  9529                           
  9530                           ;main.c: 499: clkAlarm.alarmVal.h = 0;
  9531  0F7F  01CD               	clrf	_clkAlarm
  9532  0F80                     l4655:
  9533                           
  9534                           ;main.c: 500: clkAlarm.alarmVal.m = 0;
  9535  0F80  01CE               	clrf	_clkAlarm+1
  9536  0F81                     l4657:
  9537                           
  9538                           ;main.c: 501: clkAlarm.alarmVal.s = 0;
  9539  0F81  01CF               	clrf	_clkAlarm+2
  9540  0F82                     l4659:
  9541                           
  9542                           ;main.c: 504: if(PORTBbits.RB4 == 0){
  9543  0F82  0020               	movlb	0	; select bank0
  9544  0F83  1A0D               	btfsc	13,4	;volatile
  9545  0F84  2F86               	goto	u4401
  9546  0F85  2F87               	goto	u4400
  9547  0F86                     u4401:
  9548  0F86  2FB0               	goto	l1203
  9549  0F87                     u4400:
  9550  0F87                     l4661:
  9551                           
  9552                           ;main.c: 505: _delay((unsigned long)((50)*(1000000/4000.0)));
  9553  0F87  3011               	movlw	17
  9554  0F88  0021               	movlb	1	; select bank1
  9555  0F89  00AA               	movwf	??_editClock^(0+128)
  9556  0F8A  303A               	movlw	58
  9557  0F8B                     u4867:
  9558  0F8B  0B89               	decfsz	9,f
  9559  0F8C  2F8B               	goto	u4867
  9560  0F8D  0BAA               	decfsz	??_editClock^(0+128),f
  9561  0F8E  2F8B               	goto	u4867
  9562  0F8F  0000               	nop
  9563                           
  9564                           ;main.c: 506: editingClockAlarm++;
  9565  0F90  3001               	movlw	1
  9566  0F91  0020               	movlb	0	; select bank0
  9567  0F92  07E6               	addwf	_editingClockAlarm,f
  9568  0F93  3000               	movlw	0
  9569  0F94  3DE7               	addwfc	_editingClockAlarm+1,f
  9570  0F95                     l1204:	
  9571                           ;main.c: 507: while(PORTBbits.RB4==0){};
  9572                           
  9573  0F95  1E0D               	btfss	13,4	;volatile
  9574  0F96  2F98               	goto	u4411
  9575  0F97  2F99               	goto	u4410
  9576  0F98                     u4411:
  9577  0F98  2F95               	goto	l1204
  9578  0F99                     u4410:
  9579  0F99                     l4663:
  9580                           
  9581                           ;main.c: 508: if(editingClockAlarm > 3){
  9582  0F99  0867               	movf	_editingClockAlarm+1,w
  9583  0F9A  3A80               	xorlw	128
  9584  0F9B  0021               	movlb	1	; select bank1
  9585  0F9C  00AA               	movwf	??_editClock^(0+128)
  9586  0F9D  3080               	movlw	128
  9587  0F9E  022A               	subwf	??_editClock^(0+128),w
  9588  0F9F  1D03               	skipz
  9589  0FA0  2FA4               	goto	u4425
  9590  0FA1  3004               	movlw	4
  9591  0FA2  0020               	movlb	0	; select bank0
  9592  0FA3  0266               	subwf	_editingClockAlarm,w
  9593  0FA4                     u4425:
  9594  0FA4  1C03               	skipc
  9595  0FA5  2FA7               	goto	u4421
  9596  0FA6  2FA8               	goto	u4420
  9597  0FA7                     u4421:
  9598  0FA7  2FB0               	goto	l1203
  9599  0FA8                     u4420:
  9600  0FA8                     l4665:
  9601                           
  9602                           ;main.c: 509: editingClockAlarm = 0;
  9603  0FA8  0020               	movlb	0	; select bank0
  9604  0FA9  01E6               	clrf	_editingClockAlarm
  9605  0FAA  01E7               	clrf	_editingClockAlarm+1
  9606  0FAB                     l4667:
  9607                           
  9608                           ;main.c: 510: mode = 2;
  9609  0FAB  3002               	movlw	2
  9610  0FAC  00E4               	movwf	_mode
  9611  0FAD  3000               	movlw	0
  9612  0FAE  00E5               	movwf	_mode+1
  9613                           
  9614                           ;main.c: 511: break;
  9615  0FAF  2FFF               	goto	l1222
  9616  0FB0                     l1203:
  9617                           
  9618                           ;main.c: 512: };main.c: 513: };main.c: 515: if(PORTCbits.RC5 == 0){
  9619  0FB0  0020               	movlb	0	; select bank0
  9620  0FB1  1A8E               	btfsc	14,5	;volatile
  9621  0FB2  2FB4               	goto	u4431
  9622  0FB3  2FB5               	goto	u4430
  9623  0FB4                     u4431:
  9624  0FB4  2F82               	goto	l4659
  9625  0FB5                     u4430:
  9626  0FB5                     l4669:
  9627                           
  9628                           ;main.c: 516: if(editingClockAlarm == 1){
  9629  0FB5  0366               	decf	_editingClockAlarm,w
  9630  0FB6  0467               	iorwf	_editingClockAlarm+1,w
  9631  0FB7  1D03               	btfss	3,2
  9632  0FB8  2FBA               	goto	u4441
  9633  0FB9  2FBB               	goto	u4440
  9634  0FBA                     u4441:
  9635  0FBA  2FCA               	goto	l4677
  9636  0FBB                     u4440:
  9637  0FBB                     l4671:
  9638                           
  9639                           ;main.c: 517: if(clkAlarm.alarmVal.h >= 23){
  9640  0FBB  3017               	movlw	23
  9641  0FBC  024D               	subwf	_clkAlarm,w
  9642  0FBD  1C03               	skipc
  9643  0FBE  2FC0               	goto	u4451
  9644  0FBF  2FC1               	goto	u4450
  9645  0FC0                     u4451:
  9646  0FC0  2FC3               	goto	l4675
  9647  0FC1                     u4450:
  9648  0FC1                     l4673:
  9649                           
  9650                           ;main.c: 518: clkAlarm.alarmVal.h = 0;
  9651  0FC1  01CD               	clrf	_clkAlarm
  9652                           
  9653                           ;main.c: 519: } else{
  9654  0FC2  2FF5               	goto	l4693
  9655  0FC3                     l4675:
  9656                           
  9657                           ;main.c: 520: clkAlarm.alarmVal.h++;
  9658  0FC3  3001               	movlw	1
  9659  0FC4  0021               	movlb	1	; select bank1
  9660  0FC5  00AA               	movwf	??_editClock^(0+128)
  9661  0FC6  082A               	movf	??_editClock^(0+128),w
  9662  0FC7  0020               	movlb	0	; select bank0
  9663  0FC8  07CD               	addwf	_clkAlarm,f
  9664  0FC9  2FF5               	goto	l4693
  9665  0FCA                     l4677:
  9666  0FCA  3002               	movlw	2
  9667  0FCB  0666               	xorwf	_editingClockAlarm,w
  9668  0FCC  0467               	iorwf	_editingClockAlarm+1,w
  9669  0FCD  1D03               	btfss	3,2
  9670  0FCE  2FD0               	goto	u4461
  9671  0FCF  2FD1               	goto	u4460
  9672  0FD0                     u4461:
  9673  0FD0  2FE0               	goto	l4685
  9674  0FD1                     u4460:
  9675  0FD1                     l4679:
  9676                           
  9677                           ;main.c: 523: if(clkAlarm.alarmVal.m == 59){
  9678  0FD1  303B               	movlw	59
  9679  0FD2  064E               	xorwf	_clkAlarm+1,w
  9680  0FD3  1D03               	btfss	3,2
  9681  0FD4  2FD6               	goto	u4471
  9682  0FD5  2FD7               	goto	u4470
  9683  0FD6                     u4471:
  9684  0FD6  2FD9               	goto	l4683
  9685  0FD7                     u4470:
  9686  0FD7                     l4681:
  9687                           
  9688                           ;main.c: 524: clkAlarm.alarmVal.m = 0;
  9689  0FD7  01CE               	clrf	_clkAlarm+1
  9690                           
  9691                           ;main.c: 525: } else{
  9692  0FD8  2FF5               	goto	l4693
  9693  0FD9                     l4683:
  9694                           
  9695                           ;main.c: 526: clkAlarm.alarmVal.m++;
  9696  0FD9  3001               	movlw	1
  9697  0FDA  0021               	movlb	1	; select bank1
  9698  0FDB  00AA               	movwf	??_editClock^(0+128)
  9699  0FDC  082A               	movf	??_editClock^(0+128),w
  9700  0FDD  0020               	movlb	0	; select bank0
  9701  0FDE  07CE               	addwf	_clkAlarm+1,f
  9702  0FDF  2FF5               	goto	l4693
  9703  0FE0                     l4685:
  9704  0FE0  3003               	movlw	3
  9705  0FE1  0666               	xorwf	_editingClockAlarm,w
  9706  0FE2  0467               	iorwf	_editingClockAlarm+1,w
  9707  0FE3  1D03               	btfss	3,2
  9708  0FE4  2FE6               	goto	u4481
  9709  0FE5  2FE7               	goto	u4480
  9710  0FE6                     u4481:
  9711  0FE6  2FF5               	goto	l4693
  9712  0FE7                     u4480:
  9713  0FE7                     l4687:
  9714                           
  9715                           ;main.c: 529: if(clkAlarm.alarmVal.s == 59){
  9716  0FE7  303B               	movlw	59
  9717  0FE8  064F               	xorwf	_clkAlarm+2,w
  9718  0FE9  1D03               	btfss	3,2
  9719  0FEA  2FEC               	goto	u4491
  9720  0FEB  2FED               	goto	u4490
  9721  0FEC                     u4491:
  9722  0FEC  2FEF               	goto	l4691
  9723  0FED                     u4490:
  9724  0FED                     l4689:
  9725                           
  9726                           ;main.c: 530: clkAlarm.alarmVal.s = 0;
  9727  0FED  01CF               	clrf	_clkAlarm+2
  9728                           
  9729                           ;main.c: 531: } else{
  9730  0FEE  2FF5               	goto	l4693
  9731  0FEF                     l4691:
  9732                           
  9733                           ;main.c: 532: clkAlarm.alarmVal.s++;
  9734  0FEF  3001               	movlw	1
  9735  0FF0  0021               	movlb	1	; select bank1
  9736  0FF1  00AA               	movwf	??_editClock^(0+128)
  9737  0FF2  082A               	movf	??_editClock^(0+128),w
  9738  0FF3  0020               	movlb	0	; select bank0
  9739  0FF4  07CF               	addwf	_clkAlarm+2,f
  9740  0FF5                     l4693:
  9741                           
  9742                           ;main.c: 533: };main.c: 534: };main.c: 535: _delay((unsigned long)((100)*(1000000/4000.0
      +                          )));
  9743  0FF5  3021               	movlw	33
  9744  0FF6  0021               	movlb	1	; select bank1
  9745  0FF7  00AA               	movwf	??_editClock^(0+128)
  9746  0FF8  3076               	movlw	118
  9747  0FF9                     u4877:
  9748  0FF9  0B89               	decfsz	9,f
  9749  0FFA  2FF9               	goto	u4877
  9750  0FFB  0BAA               	decfsz	??_editClock^(0+128),f
  9751  0FFC  2FF9               	goto	u4877
  9752  0FFD  0000               	nop
  9753  0FFE  2F82               	goto	l4659
  9754  0FFF                     l1222:
  9755  0FFF  0008               	return
  9756  1000                     __end_of_editClock:
  9757                           
  9758                           	psect	text6
  9759  09FB                     __ptext6:	
  9760 ;; *************** function _TMR2_StopTimer *****************
  9761 ;; Defined at:
  9762 ;;		line 117 in file "mcc_generated_files/tmr2.c"
  9763 ;; Parameters:    Size  Location     Type
  9764 ;;		None
  9765 ;; Auto vars:     Size  Location     Type
  9766 ;;		None
  9767 ;; Return value:  Size  Location     Type
  9768 ;;                  1    wreg      void 
  9769 ;; Registers used:
  9770 ;;		status,2, status,0, pclath, cstack
  9771 ;; Tracked objects:
  9772 ;;		On entry : 0/0
  9773 ;;		On exit  : 0/0
  9774 ;;		Unchanged: 0/0
  9775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9780 ;;Total ram usage:        0 bytes
  9781 ;; Hardware stack levels used:    1
  9782 ;; Hardware stack levels required when called:    8
  9783 ;; This function calls:
  9784 ;;		_TMR2_Stop
  9785 ;; This function is called by:
  9786 ;;		_main
  9787 ;; This function uses a non-reentrant model
  9788 ;;
  9789                           
  9790                           
  9791                           ;psect for function _TMR2_StopTimer
  9792  09FB                     _TMR2_StopTimer:
  9793  09FB                     l4547:	
  9794                           ;incstack = 0
  9795                           ; Regs used in _TMR2_StopTimer: [status,2+status,0+pclath+cstack]
  9796                           
  9797                           
  9798                           ;tmr2.c: 119: TMR2_Stop();
  9799  09FB  3189  21F0  3189   	fcall	_TMR2_Stop
  9800  09FE                     l767:
  9801  09FE  0008               	return
  9802  09FF                     __end_of_TMR2_StopTimer:
  9803                           
  9804                           	psect	text7
  9805  09F0                     __ptext7:	
  9806 ;; *************** function _TMR2_Stop *****************
  9807 ;; Defined at:
  9808 ;;		line 111 in file "mcc_generated_files/tmr2.c"
  9809 ;; Parameters:    Size  Location     Type
  9810 ;;		None
  9811 ;; Auto vars:     Size  Location     Type
  9812 ;;		None
  9813 ;; Return value:  Size  Location     Type
  9814 ;;                  1    wreg      void 
  9815 ;; Registers used:
  9816 ;;		None
  9817 ;; Tracked objects:
  9818 ;;		On entry : 0/0
  9819 ;;		On exit  : 0/0
  9820 ;;		Unchanged: 0/0
  9821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9826 ;;Total ram usage:        0 bytes
  9827 ;; Hardware stack levels used:    1
  9828 ;; Hardware stack levels required when called:    7
  9829 ;; This function calls:
  9830 ;;		Nothing
  9831 ;; This function is called by:
  9832 ;;		_TMR2_StopTimer
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836                           
  9837                           ;psect for function _TMR2_Stop
  9838  09F0                     _TMR2_Stop:
  9839  09F0                     l4241:	
  9840                           ;incstack = 0
  9841                           ; Regs used in _TMR2_Stop: []
  9842                           
  9843                           
  9844                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
  9845  09F0  0025               	movlb	5	; select bank5
  9846  09F1  138E               	bcf	14,7	;volatile
  9847  09F2                     l764:
  9848  09F2  0008               	return
  9849  09F3                     __end_of_TMR2_Stop:
  9850                           
  9851                           	psect	text8
  9852  0B7D                     __ptext8:	
  9853 ;; *************** function _SYSTEM_Initialize *****************
  9854 ;; Defined at:
  9855 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9856 ;; Parameters:    Size  Location     Type
  9857 ;;		None
  9858 ;; Auto vars:     Size  Location     Type
  9859 ;;		None
  9860 ;; Return value:  Size  Location     Type
  9861 ;;                  1    wreg      void 
  9862 ;; Registers used:
  9863 ;;		wreg, status,2, status,0, pclath, cstack
  9864 ;; Tracked objects:
  9865 ;;		On entry : 0/0
  9866 ;;		On exit  : 0/0
  9867 ;;		Unchanged: 0/0
  9868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9873 ;;Total ram usage:        0 bytes
  9874 ;; Hardware stack levels used:    1
  9875 ;; Hardware stack levels required when called:    9
  9876 ;; This function calls:
  9877 ;;		_ADCC_Initialize
  9878 ;;		_OSCILLATOR_Initialize
  9879 ;;		_PIN_MANAGER_Initialize
  9880 ;;		_PMD_Initialize
  9881 ;;		_PWM6_Initialize
  9882 ;;		_TMR1_Initialize
  9883 ;;		_TMR2_Initialize
  9884 ;;		_TMR3_Initialize
  9885 ;;		_TMR5_Initialize
  9886 ;; This function is called by:
  9887 ;;		_main
  9888 ;; This function uses a non-reentrant model
  9889 ;;
  9890                           
  9891                           
  9892                           ;psect for function _SYSTEM_Initialize
  9893  0B7D                     _SYSTEM_Initialize:
  9894  0B7D                     l4491:	
  9895                           ;incstack = 0
  9896                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9897                           
  9898                           
  9899                           ;mcc.c: 52: PMD_Initialize();
  9900  0B7D  318A  222C  318B   	fcall	_PMD_Initialize
  9901  0B80                     l4493:
  9902                           
  9903                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  9904  0B80  318D  257A  318B   	fcall	_PIN_MANAGER_Initialize
  9905  0B83                     l4495:
  9906                           
  9907                           ;mcc.c: 54: OSCILLATOR_Initialize();
  9908  0B83  3187  27F5  318B   	fcall	_OSCILLATOR_Initialize
  9909  0B86                     l4497:
  9910                           
  9911                           ;mcc.c: 55: PWM6_Initialize();
  9912  0B86  318A  2240  318B   	fcall	_PWM6_Initialize
  9913  0B89                     l4499:
  9914                           
  9915                           ;mcc.c: 56: ADCC_Initialize();
  9916  0B89  318B  2333  318B   	fcall	_ADCC_Initialize
  9917  0B8C                     l4501:
  9918                           
  9919                           ;mcc.c: 57: TMR3_Initialize();
  9920  0B8C  318B  23F5  318B   	fcall	_TMR3_Initialize
  9921  0B8F                     l4503:
  9922                           
  9923                           ;mcc.c: 58: TMR5_Initialize();
  9924  0B8F  318C  2414  318B   	fcall	_TMR5_Initialize
  9925  0B92                     l4505:
  9926                           
  9927                           ;mcc.c: 59: TMR2_Initialize();
  9928  0B92  318A  224D  318B   	fcall	_TMR2_Initialize
  9929  0B95                     l4507:
  9930                           
  9931                           ;mcc.c: 60: TMR1_Initialize();
  9932  0B95  318B  23D6  318B   	fcall	_TMR1_Initialize
  9933  0B98                     l172:
  9934  0B98  0008               	return
  9935  0B99                     __end_of_SYSTEM_Initialize:
  9936                           
  9937                           	psect	text9
  9938  0C14                     __ptext9:	
  9939 ;; *************** function _TMR5_Initialize *****************
  9940 ;; Defined at:
  9941 ;;		line 64 in file "mcc_generated_files/tmr5.c"
  9942 ;; Parameters:    Size  Location     Type
  9943 ;;		None
  9944 ;; Auto vars:     Size  Location     Type
  9945 ;;		None
  9946 ;; Return value:  Size  Location     Type
  9947 ;;                  1    wreg      void 
  9948 ;; Registers used:
  9949 ;;		wreg, status,2, status,0, pclath, cstack
  9950 ;; Tracked objects:
  9951 ;;		On entry : 0/0
  9952 ;;		On exit  : 0/0
  9953 ;;		Unchanged: 0/0
  9954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9959 ;;Total ram usage:        0 bytes
  9960 ;; Hardware stack levels used:    1
  9961 ;; Hardware stack levels required when called:    8
  9962 ;; This function calls:
  9963 ;;		_TMR5_SetInterruptHandler
  9964 ;; This function is called by:
  9965 ;;		_SYSTEM_Initialize
  9966 ;; This function uses a non-reentrant model
  9967 ;;
  9968                           
  9969                           
  9970                           ;psect for function _TMR5_Initialize
  9971  0C14                     _TMR5_Initialize:
  9972  0C14                     l4151:	
  9973                           ;incstack = 0
  9974                           ; Regs used in _TMR5_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9975                           
  9976                           
  9977                           ;tmr5.c: 69: T5GCON = 0x00;
  9978  0C14  0024               	movlb	4	; select bank4
  9979  0C15  019B               	clrf	27	;volatile
  9980                           
  9981                           ;tmr5.c: 72: T5GATE = 0x00;
  9982  0C16  019C               	clrf	28	;volatile
  9983  0C17                     l4153:
  9984                           
  9985                           ;tmr5.c: 75: T5CLK = 0x04;
  9986  0C17  3004               	movlw	4
  9987  0C18  009D               	movwf	29	;volatile
  9988  0C19                     l4155:
  9989                           
  9990                           ;tmr5.c: 79: TMR5H = 0x4A;
  9991  0C19  304A               	movlw	74
  9992  0C1A  0099               	movwf	25	;volatile
  9993  0C1B                     l4157:
  9994                           
  9995                           ;tmr5.c: 82: TMR5L = 0x5C;
  9996  0C1B  305C               	movlw	92
  9997  0C1C  0098               	movwf	24	;volatile
  9998  0C1D                     l4159:
  9999                           
 10000                           ;tmr5.c: 85: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 10001  0C1D  0819               	movf	25,w	;volatile
 10002  0C1E  0021               	movlb	1	; select bank1
 10003  0C1F  00A3               	movwf	(_timer5ReloadVal+1)^(0+128)	;volatile
 10004  0C20  0024               	movlb	4	; select bank4
 10005  0C21  0818               	movf	24,w	;volatile
 10006  0C22  0021               	movlb	1	; select bank1
 10007  0C23  00A2               	movwf	_timer5ReloadVal^(0+128)	;volatile
 10008  0C24                     l4161:
 10009                           
 10010                           ;tmr5.c: 88: PIR4bits.TMR5IF = 0;
 10011  0C24  002E               	movlb	14	; select bank14
 10012  0C25  1210               	bcf	16,4	;volatile
 10013  0C26                     l4163:
 10014                           
 10015                           ;tmr5.c: 91: PIE4bits.TMR5IE = 1;
 10016  0C26  161A               	bsf	26,4	;volatile
 10017  0C27                     l4165:
 10018                           
 10019                           ;tmr5.c: 94: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 10020  0C27  30FE               	movlw	low _TMR5_DefaultInterruptHandler
 10021  0C28  0021               	movlb	1	; select bank1
 10022  0C29  00AA               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
 10023  0C2A  3007               	movlw	high _TMR5_DefaultInterruptHandler
 10024  0C2B  00AB               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10025  0C2C  318A  220B  318C   	fcall	_TMR5_SetInterruptHandler
 10026  0C2F                     l4167:
 10027                           
 10028                           ;tmr5.c: 97: T5CON = 0x11;
 10029  0C2F  3011               	movlw	17
 10030  0C30  0024               	movlb	4	; select bank4
 10031  0C31  009A               	movwf	26	;volatile
 10032  0C32                     l675:
 10033  0C32  0008               	return
 10034  0C33                     __end_of_TMR5_Initialize:
 10035                           
 10036                           	psect	text10
 10037  0A0B                     __ptext10:	
 10038 ;; *************** function _TMR5_SetInterruptHandler *****************
 10039 ;; Defined at:
 10040 ;;		line 179 in file "mcc_generated_files/tmr5.c"
 10041 ;; Parameters:    Size  Location     Type
 10042 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 10043 ;;		 -> monitoring_ISR(1), TMR5_DefaultInterruptHandler(1), 
 10044 ;; Auto vars:     Size  Location     Type
 10045 ;;		None
 10046 ;; Return value:  Size  Location     Type
 10047 ;;                  1    wreg      void 
 10048 ;; Registers used:
 10049 ;;		wreg
 10050 ;; Tracked objects:
 10051 ;;		On entry : 0/0
 10052 ;;		On exit  : 0/0
 10053 ;;		Unchanged: 0/0
 10054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10055 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10058 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10059 ;;Total ram usage:        2 bytes
 10060 ;; Hardware stack levels used:    1
 10061 ;; Hardware stack levels required when called:    7
 10062 ;; This function calls:
 10063 ;;		Nothing
 10064 ;; This function is called by:
 10065 ;;		_TMR5_Initialize
 10066 ;;		_main
 10067 ;; This function uses a non-reentrant model
 10068 ;;
 10069                           
 10070                           
 10071                           ;psect for function _TMR5_SetInterruptHandler
 10072  0A0B                     _TMR5_SetInterruptHandler:
 10073  0A0B                     l3855:	
 10074                           ;incstack = 0
 10075                           ; Regs used in _TMR5_SetInterruptHandler: [wreg]
 10076                           
 10077                           
 10078                           ;tmr5.c: 180: TMR5_InterruptHandler = InterruptHandler;
 10079  0A0B  0021               	movlb	1	; select bank1
 10080  0A0C  082B               	movf	(TMR5_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 10081  0A0D  00A1               	movwf	(_TMR5_InterruptHandler+1)^(0+128)
 10082  0A0E  082A               	movf	TMR5_SetInterruptHandler@InterruptHandler^(0+128),w
 10083  0A0F  00A0               	movwf	_TMR5_InterruptHandler^(0+128)
 10084  0A10                     l705:
 10085  0A10  0008               	return
 10086  0A11                     __end_of_TMR5_SetInterruptHandler:
 10087                           
 10088                           	psect	text11
 10089  0BF5                     __ptext11:	
 10090 ;; *************** function _TMR3_Initialize *****************
 10091 ;; Defined at:
 10092 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 10093 ;; Parameters:    Size  Location     Type
 10094 ;;		None
 10095 ;; Auto vars:     Size  Location     Type
 10096 ;;		None
 10097 ;; Return value:  Size  Location     Type
 10098 ;;                  1    wreg      void 
 10099 ;; Registers used:
 10100 ;;		wreg, status,2, status,0, pclath, cstack
 10101 ;; Tracked objects:
 10102 ;;		On entry : 0/0
 10103 ;;		On exit  : 0/0
 10104 ;;		Unchanged: 0/0
 10105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10110 ;;Total ram usage:        0 bytes
 10111 ;; Hardware stack levels used:    1
 10112 ;; Hardware stack levels required when called:    8
 10113 ;; This function calls:
 10114 ;;		_TMR3_SetInterruptHandler
 10115 ;; This function is called by:
 10116 ;;		_SYSTEM_Initialize
 10117 ;; This function uses a non-reentrant model
 10118 ;;
 10119                           
 10120                           
 10121                           ;psect for function _TMR3_Initialize
 10122  0BF5                     _TMR3_Initialize:
 10123  0BF5                     l4133:	
 10124                           ;incstack = 0
 10125                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10126                           
 10127                           
 10128                           ;tmr3.c: 69: T3GCON = 0x00;
 10129  0BF5  0024               	movlb	4	; select bank4
 10130  0BF6  0195               	clrf	21	;volatile
 10131                           
 10132                           ;tmr3.c: 72: T3GATE = 0x00;
 10133  0BF7  0196               	clrf	22	;volatile
 10134  0BF8                     l4135:
 10135                           
 10136                           ;tmr3.c: 75: T3CLK = 0x04;
 10137  0BF8  3004               	movlw	4
 10138  0BF9  0097               	movwf	23	;volatile
 10139  0BFA                     l4137:
 10140                           
 10141                           ;tmr3.c: 78: TMR3H = 0xE7;
 10142  0BFA  30E7               	movlw	231
 10143  0BFB  0093               	movwf	19	;volatile
 10144  0BFC                     l4139:
 10145                           
 10146                           ;tmr3.c: 81: TMR3L = 0xC8;
 10147  0BFC  30C8               	movlw	200
 10148  0BFD  0092               	movwf	18	;volatile
 10149  0BFE                     l4141:
 10150                           
 10151                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 10152  0BFE  0813               	movf	19,w	;volatile
 10153  0BFF  0020               	movlb	0	; select bank0
 10154  0C00  00EF               	movwf	_timer3ReloadVal+1	;volatile
 10155  0C01  0024               	movlb	4	; select bank4
 10156  0C02  0812               	movf	18,w	;volatile
 10157  0C03  0020               	movlb	0	; select bank0
 10158  0C04  00EE               	movwf	_timer3ReloadVal	;volatile
 10159  0C05                     l4143:
 10160                           
 10161                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
 10162  0C05  002E               	movlb	14	; select bank14
 10163  0C06  1110               	bcf	16,2	;volatile
 10164  0C07                     l4145:
 10165                           
 10166                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
 10167  0C07  151A               	bsf	26,2	;volatile
 10168  0C08                     l4147:
 10169                           
 10170                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
 10171  0C08  30FF               	movlw	low _TMR3_DefaultInterruptHandler
 10172  0C09  0021               	movlb	1	; select bank1
 10173  0C0A  00AA               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
 10174  0C0B  3007               	movlw	high _TMR3_DefaultInterruptHandler
 10175  0C0C  00AB               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10176  0C0D  318A  2205  318B   	fcall	_TMR3_SetInterruptHandler
 10177  0C10                     l4149:
 10178                           
 10179                           ;tmr3.c: 96: T3CON = 0x01;
 10180  0C10  3001               	movlw	1
 10181  0C11  0024               	movlb	4	; select bank4
 10182  0C12  0094               	movwf	20	;volatile
 10183  0C13                     l451:
 10184  0C13  0008               	return
 10185  0C14                     __end_of_TMR3_Initialize:
 10186                           
 10187                           	psect	text12
 10188  0A05                     __ptext12:	
 10189 ;; *************** function _TMR3_SetInterruptHandler *****************
 10190 ;; Defined at:
 10191 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 10192 ;; Parameters:    Size  Location     Type
 10193 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 10194 ;;		 -> menuLCD_ISR(1), TMR3_DefaultInterruptHandler(1), 
 10195 ;; Auto vars:     Size  Location     Type
 10196 ;;		None
 10197 ;; Return value:  Size  Location     Type
 10198 ;;                  1    wreg      void 
 10199 ;; Registers used:
 10200 ;;		wreg
 10201 ;; Tracked objects:
 10202 ;;		On entry : 0/0
 10203 ;;		On exit  : 0/0
 10204 ;;		Unchanged: 0/0
 10205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10206 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10209 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10210 ;;Total ram usage:        2 bytes
 10211 ;; Hardware stack levels used:    1
 10212 ;; Hardware stack levels required when called:    7
 10213 ;; This function calls:
 10214 ;;		Nothing
 10215 ;; This function is called by:
 10216 ;;		_TMR3_Initialize
 10217 ;;		_main
 10218 ;; This function uses a non-reentrant model
 10219 ;;
 10220                           
 10221                           
 10222                           ;psect for function _TMR3_SetInterruptHandler
 10223  0A05                     _TMR3_SetInterruptHandler:
 10224  0A05                     l3839:	
 10225                           ;incstack = 0
 10226                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
 10227                           
 10228                           
 10229                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
 10230  0A05  0021               	movlb	1	; select bank1
 10231  0A06  082B               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 10232  0A07  00A5               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
 10233  0A08  082A               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
 10234  0A09  00A4               	movwf	_TMR3_InterruptHandler^(0+128)
 10235  0A0A                     l481:
 10236  0A0A  0008               	return
 10237  0A0B                     __end_of_TMR3_SetInterruptHandler:
 10238                           
 10239                           	psect	text13
 10240  0A4D                     __ptext13:	
 10241 ;; *************** function _TMR2_Initialize *****************
 10242 ;; Defined at:
 10243 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 10244 ;; Parameters:    Size  Location     Type
 10245 ;;		None
 10246 ;; Auto vars:     Size  Location     Type
 10247 ;;		None
 10248 ;; Return value:  Size  Location     Type
 10249 ;;                  1    wreg      void 
 10250 ;; Registers used:
 10251 ;;		wreg, status,2
 10252 ;; Tracked objects:
 10253 ;;		On entry : 0/0
 10254 ;;		On exit  : 0/0
 10255 ;;		Unchanged: 0/0
 10256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10261 ;;Total ram usage:        0 bytes
 10262 ;; Hardware stack levels used:    1
 10263 ;; Hardware stack levels required when called:    7
 10264 ;; This function calls:
 10265 ;;		Nothing
 10266 ;; This function is called by:
 10267 ;;		_SYSTEM_Initialize
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270                           
 10271                           
 10272                           ;psect for function _TMR2_Initialize
 10273  0A4D                     _TMR2_Initialize:
 10274  0A4D                     l4169:	
 10275                           ;incstack = 0
 10276                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 10277                           
 10278                           
 10279                           ;tmr2.c: 67: T2CLKCON = 0x01;
 10280  0A4D  3001               	movlw	1
 10281  0A4E  0025               	movlb	5	; select bank5
 10282  0A4F  0090               	movwf	16	;volatile
 10283  0A50                     l4171:
 10284                           
 10285                           ;tmr2.c: 70: T2HLT = 0x00;
 10286  0A50  018F               	clrf	15	;volatile
 10287  0A51                     l4173:
 10288                           
 10289                           ;tmr2.c: 73: T2RST = 0x00;
 10290  0A51  0191               	clrf	17	;volatile
 10291                           
 10292                           ;tmr2.c: 76: T2PR = 0xFF;
 10293  0A52  30FF               	movlw	255
 10294  0A53  008D               	movwf	13	;volatile
 10295  0A54                     l4175:
 10296                           
 10297                           ;tmr2.c: 79: T2TMR = 0x00;
 10298  0A54  018C               	clrf	12	;volatile
 10299  0A55                     l4177:
 10300                           
 10301                           ;tmr2.c: 82: PIR4bits.TMR2IF = 0;
 10302  0A55  002E               	movlb	14	; select bank14
 10303  0A56  1090               	bcf	16,1	;volatile
 10304  0A57                     l4179:
 10305                           
 10306                           ;tmr2.c: 85: T2CON = 0x80;
 10307  0A57  3080               	movlw	128
 10308  0A58  0025               	movlb	5	; select bank5
 10309  0A59  008E               	movwf	14	;volatile
 10310  0A5A                     l749:
 10311  0A5A  0008               	return
 10312  0A5B                     __end_of_TMR2_Initialize:
 10313                           
 10314                           	psect	text14
 10315  0BD6                     __ptext14:	
 10316 ;; *************** function _TMR1_Initialize *****************
 10317 ;; Defined at:
 10318 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 10319 ;; Parameters:    Size  Location     Type
 10320 ;;		None
 10321 ;; Auto vars:     Size  Location     Type
 10322 ;;		None
 10323 ;; Return value:  Size  Location     Type
 10324 ;;                  1    wreg      void 
 10325 ;; Registers used:
 10326 ;;		wreg, status,2, status,0, pclath, cstack
 10327 ;; Tracked objects:
 10328 ;;		On entry : 0/0
 10329 ;;		On exit  : 0/0
 10330 ;;		Unchanged: 0/0
 10331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10336 ;;Total ram usage:        0 bytes
 10337 ;; Hardware stack levels used:    1
 10338 ;; Hardware stack levels required when called:    8
 10339 ;; This function calls:
 10340 ;;		_TMR1_SetInterruptHandler
 10341 ;; This function is called by:
 10342 ;;		_SYSTEM_Initialize
 10343 ;; This function uses a non-reentrant model
 10344 ;;
 10345                           
 10346                           
 10347                           ;psect for function _TMR1_Initialize
 10348  0BD6                     _TMR1_Initialize:
 10349  0BD6                     l4181:	
 10350                           ;incstack = 0
 10351                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10352                           
 10353                           
 10354                           ;tmr1.c: 69: T1GCON = 0x00;
 10355  0BD6  0024               	movlb	4	; select bank4
 10356  0BD7  018F               	clrf	15	;volatile
 10357                           
 10358                           ;tmr1.c: 72: T1GATE = 0x00;
 10359  0BD8  0190               	clrf	16	;volatile
 10360  0BD9                     l4183:
 10361                           
 10362                           ;tmr1.c: 75: T1CLK = 0x04;
 10363  0BD9  3004               	movlw	4
 10364  0BDA  0091               	movwf	17	;volatile
 10365  0BDB                     l4185:
 10366                           
 10367                           ;tmr1.c: 78: TMR1H = 0x86;
 10368  0BDB  3086               	movlw	134
 10369  0BDC  008D               	movwf	13	;volatile
 10370  0BDD                     l4187:
 10371                           
 10372                           ;tmr1.c: 81: TMR1L = 0xE8;
 10373  0BDD  30E8               	movlw	232
 10374  0BDE  008C               	movwf	12	;volatile
 10375  0BDF                     l4189:
 10376                           
 10377                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 10378  0BDF  080D               	movf	13,w	;volatile
 10379  0BE0  0021               	movlb	1	; select bank1
 10380  0BE1  00A9               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 10381  0BE2  0024               	movlb	4	; select bank4
 10382  0BE3  080C               	movf	12,w	;volatile
 10383  0BE4  0021               	movlb	1	; select bank1
 10384  0BE5  00A8               	movwf	_timer1ReloadVal^(0+128)	;volatile
 10385  0BE6                     l4191:
 10386                           
 10387                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
 10388  0BE6  002E               	movlb	14	; select bank14
 10389  0BE7  1010               	bcf	16,0	;volatile
 10390  0BE8                     l4193:
 10391                           
 10392                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
 10393  0BE8  141A               	bsf	26,0	;volatile
 10394  0BE9                     l4195:
 10395                           
 10396                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 10397  0BE9  3003               	movlw	low _TMR1_DefaultInterruptHandler
 10398  0BEA  0021               	movlb	1	; select bank1
 10399  0BEB  00AA               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
 10400  0BEC  3000               	movlw	high _TMR1_DefaultInterruptHandler
 10401  0BED  00AB               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10402  0BEE  3189  21FF  318B   	fcall	_TMR1_SetInterruptHandler
 10403  0BF1                     l4197:
 10404                           
 10405                           ;tmr1.c: 96: T1CON = 0x01;
 10406  0BF1  3001               	movlw	1
 10407  0BF2  0024               	movlb	4	; select bank4
 10408  0BF3  008E               	movwf	14	;volatile
 10409  0BF4                     l387:
 10410  0BF4  0008               	return
 10411  0BF5                     __end_of_TMR1_Initialize:
 10412                           
 10413                           	psect	text15
 10414  09FF                     __ptext15:	
 10415 ;; *************** function _TMR1_SetInterruptHandler *****************
 10416 ;; Defined at:
 10417 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 10418 ;; Parameters:    Size  Location     Type
 10419 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 10420 ;;		 -> Clock_ISR(1), TMR1_DefaultInterruptHandler(1), 
 10421 ;; Auto vars:     Size  Location     Type
 10422 ;;		None
 10423 ;; Return value:  Size  Location     Type
 10424 ;;                  1    wreg      void 
 10425 ;; Registers used:
 10426 ;;		wreg
 10427 ;; Tracked objects:
 10428 ;;		On entry : 0/0
 10429 ;;		On exit  : 0/0
 10430 ;;		Unchanged: 0/0
 10431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10432 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10435 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10436 ;;Total ram usage:        2 bytes
 10437 ;; Hardware stack levels used:    1
 10438 ;; Hardware stack levels required when called:    7
 10439 ;; This function calls:
 10440 ;;		Nothing
 10441 ;; This function is called by:
 10442 ;;		_TMR1_Initialize
 10443 ;;		_main
 10444 ;; This function uses a non-reentrant model
 10445 ;;
 10446                           
 10447                           
 10448                           ;psect for function _TMR1_SetInterruptHandler
 10449  09FF                     _TMR1_SetInterruptHandler:
 10450  09FF                     l3837:	
 10451                           ;incstack = 0
 10452                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 10453                           
 10454                           
 10455                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
 10456  09FF  0021               	movlb	1	; select bank1
 10457  0A00  082B               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 10458  0A01  00A7               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 10459  0A02  082A               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
 10460  0A03  00A6               	movwf	_TMR1_InterruptHandler^(0+128)
 10461  0A04                     l417:
 10462  0A04  0008               	return
 10463  0A05                     __end_of_TMR1_SetInterruptHandler:
 10464                           
 10465                           	psect	text16
 10466  0A40                     __ptext16:	
 10467 ;; *************** function _PWM6_Initialize *****************
 10468 ;; Defined at:
 10469 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 10470 ;; Parameters:    Size  Location     Type
 10471 ;;		None
 10472 ;; Auto vars:     Size  Location     Type
 10473 ;;		None
 10474 ;; Return value:  Size  Location     Type
 10475 ;;                  1    wreg      void 
 10476 ;; Registers used:
 10477 ;;		wreg, status,2, status,0
 10478 ;; Tracked objects:
 10479 ;;		On entry : 0/0
 10480 ;;		On exit  : 0/0
 10481 ;;		Unchanged: 0/0
 10482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10487 ;;Total ram usage:        0 bytes
 10488 ;; Hardware stack levels used:    1
 10489 ;; Hardware stack levels required when called:    7
 10490 ;; This function calls:
 10491 ;;		Nothing
 10492 ;; This function is called by:
 10493 ;;		_SYSTEM_Initialize
 10494 ;; This function uses a non-reentrant model
 10495 ;;
 10496                           
 10497                           
 10498                           ;psect for function _PWM6_Initialize
 10499  0A40                     _PWM6_Initialize:
 10500  0A40                     l4123:	
 10501                           ;incstack = 0
 10502                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 10503                           
 10504                           
 10505                           ;pwm6.c: 62: PWM6CON = 0x80;
 10506  0A40  3080               	movlw	128
 10507  0A41  0027               	movlb	7	; select bank7
 10508  0A42  008E               	movwf	14	;volatile
 10509                           
 10510                           ;pwm6.c: 65: PWM6DCH = 0xFF;
 10511  0A43  30FF               	movlw	255
 10512  0A44  008D               	movwf	13	;volatile
 10513                           
 10514                           ;pwm6.c: 68: PWM6DCL = 0xC0;
 10515  0A45  30C0               	movlw	192
 10516  0A46  008C               	movwf	12	;volatile
 10517  0A47                     l4125:
 10518                           
 10519                           ;pwm6.c: 71: CCPTMRS1bits.P6TSEL = 1;
 10520  0A47  0024               	movlb	4	; select bank4
 10521  0A48  081F               	movf	31,w	;volatile
 10522  0A49  39F3               	andlw	-13
 10523  0A4A  3804               	iorlw	4
 10524  0A4B  009F               	movwf	31	;volatile
 10525  0A4C                     l719:
 10526  0A4C  0008               	return
 10527  0A4D                     __end_of_PWM6_Initialize:
 10528                           
 10529                           	psect	text17
 10530  0A2C                     __ptext17:	
 10531 ;; *************** function _PMD_Initialize *****************
 10532 ;; Defined at:
 10533 ;;		line 77 in file "mcc_generated_files/mcc.c"
 10534 ;; Parameters:    Size  Location     Type
 10535 ;;		None
 10536 ;; Auto vars:     Size  Location     Type
 10537 ;;		None
 10538 ;; Return value:  Size  Location     Type
 10539 ;;                  1    wreg      void 
 10540 ;; Registers used:
 10541 ;;		status,2
 10542 ;; Tracked objects:
 10543 ;;		On entry : 0/0
 10544 ;;		On exit  : 0/0
 10545 ;;		Unchanged: 0/0
 10546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10551 ;;Total ram usage:        0 bytes
 10552 ;; Hardware stack levels used:    1
 10553 ;; Hardware stack levels required when called:    7
 10554 ;; This function calls:
 10555 ;;		Nothing
 10556 ;; This function is called by:
 10557 ;;		_SYSTEM_Initialize
 10558 ;; This function uses a non-reentrant model
 10559 ;;
 10560                           
 10561                           
 10562                           ;psect for function _PMD_Initialize
 10563  0A2C                     _PMD_Initialize:
 10564  0A2C                     l4113:	
 10565                           ;incstack = 0
 10566                           ; Regs used in _PMD_Initialize: [status,2]
 10567                           
 10568                           
 10569                           ;mcc.c: 80: PMD0 = 0x00;
 10570  0A2C  002F               	movlb	15	; select bank15
 10571  0A2D  0196               	clrf	22	;volatile
 10572                           
 10573                           ;mcc.c: 82: PMD1 = 0x00;
 10574  0A2E  0197               	clrf	23	;volatile
 10575                           
 10576                           ;mcc.c: 84: PMD2 = 0x00;
 10577  0A2F  0198               	clrf	24	;volatile
 10578                           
 10579                           ;mcc.c: 86: PMD3 = 0x00;
 10580  0A30  0199               	clrf	25	;volatile
 10581                           
 10582                           ;mcc.c: 88: PMD4 = 0x00;
 10583  0A31  019A               	clrf	26	;volatile
 10584                           
 10585                           ;mcc.c: 90: PMD5 = 0x00;
 10586  0A32  019B               	clrf	27	;volatile
 10587  0A33                     l178:
 10588  0A33  0008               	return
 10589  0A34                     __end_of_PMD_Initialize:
 10590                           
 10591                           	psect	text18
 10592  0D7A                     __ptext18:	
 10593 ;; *************** function _PIN_MANAGER_Initialize *****************
 10594 ;; Defined at:
 10595 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 10596 ;; Parameters:    Size  Location     Type
 10597 ;;		None
 10598 ;; Auto vars:     Size  Location     Type
 10599 ;;		None
 10600 ;; Return value:  Size  Location     Type
 10601 ;;                  1    wreg      void 
 10602 ;; Registers used:
 10603 ;;		wreg, status,2
 10604 ;; Tracked objects:
 10605 ;;		On entry : 0/0
 10606 ;;		On exit  : 0/0
 10607 ;;		Unchanged: 0/0
 10608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10613 ;;Total ram usage:        0 bytes
 10614 ;; Hardware stack levels used:    1
 10615 ;; Hardware stack levels required when called:    7
 10616 ;; This function calls:
 10617 ;;		Nothing
 10618 ;; This function is called by:
 10619 ;;		_SYSTEM_Initialize
 10620 ;; This function uses a non-reentrant model
 10621 ;;
 10622                           
 10623                           
 10624                           ;psect for function _PIN_MANAGER_Initialize
 10625  0D7A                     _PIN_MANAGER_Initialize:
 10626  0D7A                     l4071:	
 10627                           ;incstack = 0
 10628                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10629                           
 10630                           
 10631                           ;pin_manager.c: 62: LATE = 0x00;
 10632  0D7A  0020               	movlb	0	; select bank0
 10633  0D7B  019A               	clrf	26	;volatile
 10634                           
 10635                           ;pin_manager.c: 63: LATD = 0x00;
 10636  0D7C  0199               	clrf	25	;volatile
 10637                           
 10638                           ;pin_manager.c: 64: LATA = 0x00;
 10639  0D7D  0196               	clrf	22	;volatile
 10640                           
 10641                           ;pin_manager.c: 65: LATB = 0x00;
 10642  0D7E  0197               	clrf	23	;volatile
 10643                           
 10644                           ;pin_manager.c: 66: LATC = 0x00;
 10645  0D7F  0198               	clrf	24	;volatile
 10646  0D80                     l4073:
 10647                           
 10648                           ;pin_manager.c: 71: TRISE = 0x07;
 10649  0D80  3007               	movlw	7
 10650  0D81  0095               	movwf	21	;volatile
 10651  0D82                     l4075:
 10652                           
 10653                           ;pin_manager.c: 72: TRISA = 0x0F;
 10654  0D82  300F               	movlw	15
 10655  0D83  0091               	movwf	17	;volatile
 10656  0D84                     l4077:
 10657                           
 10658                           ;pin_manager.c: 73: TRISB = 0xFF;
 10659  0D84  30FF               	movlw	255
 10660  0D85  0092               	movwf	18	;volatile
 10661  0D86                     l4079:
 10662                           
 10663                           ;pin_manager.c: 74: TRISC = 0xFF;
 10664  0D86  30FF               	movlw	255
 10665  0D87  0093               	movwf	19	;volatile
 10666  0D88                     l4081:
 10667                           
 10668                           ;pin_manager.c: 75: TRISD = 0xFF;
 10669  0D88  30FF               	movlw	255
 10670  0D89  0094               	movwf	20	;volatile
 10671  0D8A                     l4083:
 10672                           
 10673                           ;pin_manager.c: 80: ANSELD = 0xFF;
 10674  0D8A  30FF               	movlw	255
 10675  0D8B  003E               	movlb	30	; select bank30
 10676  0D8C  00D9               	movwf	89	;volatile
 10677  0D8D                     l4085:
 10678                           
 10679                           ;pin_manager.c: 81: ANSELC = 0xC7;
 10680  0D8D  30C7               	movlw	199
 10681  0D8E  00CE               	movwf	78	;volatile
 10682  0D8F                     l4087:
 10683                           
 10684                           ;pin_manager.c: 82: ANSELB = 0xEF;
 10685  0D8F  30EF               	movlw	239
 10686  0D90  00C3               	movwf	67	;volatile
 10687  0D91                     l4089:
 10688                           
 10689                           ;pin_manager.c: 83: ANSELE = 0x07;
 10690  0D91  3007               	movlw	7
 10691  0D92  00E4               	movwf	100	;volatile
 10692  0D93                     l4091:
 10693                           
 10694                           ;pin_manager.c: 84: ANSELA = 0x4F;
 10695  0D93  304F               	movlw	79
 10696  0D94  00B8               	movwf	56	;volatile
 10697                           
 10698                           ;pin_manager.c: 89: WPUD = 0x00;
 10699  0D95  01DA               	clrf	90	;volatile
 10700                           
 10701                           ;pin_manager.c: 90: WPUE = 0x00;
 10702  0D96  01E5               	clrf	101	;volatile
 10703                           
 10704                           ;pin_manager.c: 91: WPUB = 0x00;
 10705  0D97  01C4               	clrf	68	;volatile
 10706                           
 10707                           ;pin_manager.c: 92: WPUA = 0x00;
 10708  0D98  01B9               	clrf	57	;volatile
 10709                           
 10710                           ;pin_manager.c: 93: WPUC = 0x00;
 10711  0D99  01CF               	clrf	79	;volatile
 10712                           
 10713                           ;pin_manager.c: 98: ODCONE = 0x00;
 10714  0D9A  01E6               	clrf	102	;volatile
 10715                           
 10716                           ;pin_manager.c: 99: ODCONA = 0x00;
 10717  0D9B  01BA               	clrf	58	;volatile
 10718                           
 10719                           ;pin_manager.c: 100: ODCONB = 0x00;
 10720  0D9C  01C5               	clrf	69	;volatile
 10721                           
 10722                           ;pin_manager.c: 101: ODCONC = 0x00;
 10723  0D9D  01D0               	clrf	80	;volatile
 10724                           
 10725                           ;pin_manager.c: 102: ODCOND = 0x00;
 10726  0D9E  01DB               	clrf	91	;volatile
 10727  0D9F                     l4093:
 10728                           
 10729                           ;pin_manager.c: 107: SLRCONA = 0xFF;
 10730  0D9F  30FF               	movlw	255
 10731  0DA0  00BB               	movwf	59	;volatile
 10732  0DA1                     l4095:
 10733                           
 10734                           ;pin_manager.c: 108: SLRCONB = 0xFF;
 10735  0DA1  30FF               	movlw	255
 10736  0DA2  00C6               	movwf	70	;volatile
 10737  0DA3                     l4097:
 10738                           
 10739                           ;pin_manager.c: 109: SLRCONC = 0xFF;
 10740  0DA3  30FF               	movlw	255
 10741  0DA4  00D1               	movwf	81	;volatile
 10742  0DA5                     l4099:
 10743                           
 10744                           ;pin_manager.c: 110: SLRCOND = 0xFF;
 10745  0DA5  30FF               	movlw	255
 10746  0DA6  00DC               	movwf	92	;volatile
 10747  0DA7                     l4101:
 10748                           
 10749                           ;pin_manager.c: 111: SLRCONE = 0x07;
 10750  0DA7  3007               	movlw	7
 10751  0DA8  00E7               	movwf	103	;volatile
 10752  0DA9                     l4103:
 10753                           
 10754                           ;pin_manager.c: 120: SSP1CLKPPS = 0x13;
 10755  0DA9  3013               	movlw	19
 10756  0DAA  003D               	movlb	29	; select bank29
 10757  0DAB  00C5               	movwf	69	;volatile
 10758  0DAC                     l4105:
 10759                           
 10760                           ;pin_manager.c: 121: RC3PPS = 0x14;
 10761  0DAC  3014               	movlw	20
 10762  0DAD  003E               	movlb	30	; select bank30
 10763  0DAE  00A3               	movwf	35	;volatile
 10764  0DAF                     l4107:
 10765                           
 10766                           ;pin_manager.c: 122: RC4PPS = 0x15;
 10767  0DAF  3015               	movlw	21
 10768  0DB0  00A4               	movwf	36	;volatile
 10769  0DB1                     l4109:
 10770                           
 10771                           ;pin_manager.c: 123: RA6PPS = 0x0E;
 10772  0DB1  300E               	movlw	14
 10773  0DB2  0096               	movwf	22	;volatile
 10774  0DB3                     l4111:
 10775                           
 10776                           ;pin_manager.c: 124: SSP1DATPPS = 0x14;
 10777  0DB3  3014               	movlw	20
 10778  0DB4  003D               	movlb	29	; select bank29
 10779  0DB5  00C6               	movwf	70	;volatile
 10780  0DB6                     l122:
 10781  0DB6  0008               	return
 10782  0DB7                     __end_of_PIN_MANAGER_Initialize:
 10783                           
 10784                           	psect	text19
 10785  07F5                     __ptext19:	
 10786 ;; *************** function _OSCILLATOR_Initialize *****************
 10787 ;; Defined at:
 10788 ;;		line 63 in file "mcc_generated_files/mcc.c"
 10789 ;; Parameters:    Size  Location     Type
 10790 ;;		None
 10791 ;; Auto vars:     Size  Location     Type
 10792 ;;		None
 10793 ;; Return value:  Size  Location     Type
 10794 ;;                  1    wreg      void 
 10795 ;; Registers used:
 10796 ;;		wreg, status,2
 10797 ;; Tracked objects:
 10798 ;;		On entry : 0/0
 10799 ;;		On exit  : 0/0
 10800 ;;		Unchanged: 0/0
 10801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10806 ;;Total ram usage:        0 bytes
 10807 ;; Hardware stack levels used:    1
 10808 ;; Hardware stack levels required when called:    7
 10809 ;; This function calls:
 10810 ;;		Nothing
 10811 ;; This function is called by:
 10812 ;;		_SYSTEM_Initialize
 10813 ;; This function uses a non-reentrant model
 10814 ;;
 10815                           
 10816                           
 10817                           ;psect for function _OSCILLATOR_Initialize
 10818  07F5                     _OSCILLATOR_Initialize:
 10819  07F5                     l4115:	
 10820                           ;incstack = 0
 10821                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10822                           
 10823                           
 10824                           ;mcc.c: 66: OSCCON1 = 0x62;
 10825  07F5  3062               	movlw	98
 10826  07F6  0031               	movlb	17	; select bank17
 10827  07F7  008D               	movwf	13	;volatile
 10828  07F8                     l4117:
 10829                           
 10830                           ;mcc.c: 68: OSCCON3 = 0x00;
 10831  07F8  018F               	clrf	15	;volatile
 10832  07F9                     l4119:
 10833                           
 10834                           ;mcc.c: 70: OSCEN = 0x00;
 10835  07F9  0191               	clrf	17	;volatile
 10836                           
 10837                           ;mcc.c: 72: OSCFRQ = 0x02;
 10838  07FA  3002               	movlw	2
 10839  07FB  0093               	movwf	19	;volatile
 10840  07FC                     l4121:
 10841                           
 10842                           ;mcc.c: 74: OSCTUNE = 0x00;
 10843  07FC  0192               	clrf	18	;volatile
 10844  07FD                     l175:
 10845  07FD  0008               	return
 10846  07FE                     __end_of_OSCILLATOR_Initialize:
 10847                           
 10848                           	psect	text20
 10849  0B33                     __ptext20:	
 10850 ;; *************** function _ADCC_Initialize *****************
 10851 ;; Defined at:
 10852 ;;		line 63 in file "mcc_generated_files/adcc.c"
 10853 ;; Parameters:    Size  Location     Type
 10854 ;;		None
 10855 ;; Auto vars:     Size  Location     Type
 10856 ;;		None
 10857 ;; Return value:  Size  Location     Type
 10858 ;;                  1    wreg      void 
 10859 ;; Registers used:
 10860 ;;		wreg, status,2
 10861 ;; Tracked objects:
 10862 ;;		On entry : 0/0
 10863 ;;		On exit  : 0/0
 10864 ;;		Unchanged: 0/0
 10865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10870 ;;Total ram usage:        0 bytes
 10871 ;; Hardware stack levels used:    1
 10872 ;; Hardware stack levels required when called:    7
 10873 ;; This function calls:
 10874 ;;		Nothing
 10875 ;; This function is called by:
 10876 ;;		_SYSTEM_Initialize
 10877 ;; This function uses a non-reentrant model
 10878 ;;
 10879                           
 10880                           
 10881                           ;psect for function _ADCC_Initialize
 10882  0B33                     _ADCC_Initialize:
 10883  0B33                     l4127:	
 10884                           ;incstack = 0
 10885                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10886                           
 10887                           
 10888                           ;adcc.c: 67: ADLTHL = 0x00;
 10889  0B33  0022               	movlb	2	; select bank2
 10890  0B34  018E               	clrf	14	;volatile
 10891                           
 10892                           ;adcc.c: 69: ADLTHH = 0x00;
 10893  0B35  018F               	clrf	15	;volatile
 10894                           
 10895                           ;adcc.c: 71: ADUTHL = 0x00;
 10896  0B36  0190               	clrf	16	;volatile
 10897                           
 10898                           ;adcc.c: 73: ADUTHH = 0x00;
 10899  0B37  0191               	clrf	17	;volatile
 10900                           
 10901                           ;adcc.c: 75: ADSTPTL = 0x00;
 10902  0B38  0192               	clrf	18	;volatile
 10903                           
 10904                           ;adcc.c: 77: ADSTPTH = 0x00;
 10905  0B39  0193               	clrf	19	;volatile
 10906                           
 10907                           ;adcc.c: 79: ADRPT = 0x00;
 10908  0B3A  018D               	clrf	13	;volatile
 10909                           
 10910                           ;adcc.c: 81: ADPCH = 0x00;
 10911  0B3B  0021               	movlb	1	; select bank1
 10912  0B3C  019E               	clrf	30	;volatile
 10913                           
 10914                           ;adcc.c: 83: ADCAP = 0x00;
 10915  0B3D  019B               	clrf	27	;volatile
 10916                           
 10917                           ;adcc.c: 85: ADCON1 = 0x00;
 10918  0B3E  0194               	clrf	20	;volatile
 10919                           
 10920                           ;adcc.c: 87: ADCON2 = 0x00;
 10921  0B3F  0195               	clrf	21	;volatile
 10922                           
 10923                           ;adcc.c: 89: ADCON3 = 0x00;
 10924  0B40  0196               	clrf	22	;volatile
 10925                           
 10926                           ;adcc.c: 91: ADSTAT = 0x00;
 10927  0B41  0197               	clrf	23	;volatile
 10928                           
 10929                           ;adcc.c: 93: ADREF = 0x00;
 10930  0B42  019A               	clrf	26	;volatile
 10931                           
 10932                           ;adcc.c: 95: ADACT = 0x00;
 10933  0B43  0199               	clrf	25	;volatile
 10934                           
 10935                           ;adcc.c: 97: ADCLK = 0x00;
 10936  0B44  0198               	clrf	24	;volatile
 10937  0B45                     l4129:
 10938                           
 10939                           ;adcc.c: 99: ADCON0 = 0x80;
 10940  0B45  3080               	movlw	128
 10941  0B46  0093               	movwf	19	;volatile
 10942  0B47                     l4131:
 10943                           
 10944                           ;adcc.c: 101: ADACQ = 0xFF;
 10945  0B47  30FF               	movlw	255
 10946  0B48  009D               	movwf	29	;volatile
 10947  0B49                     l563:
 10948  0B49  0008               	return
 10949  0B4A                     __end_of_ADCC_Initialize:
 10950                           
 10951                           	psect	text21
 10952  09ED                     __ptext21:	
 10953 ;; *************** function _PWM_Output_D4_Disable *****************
 10954 ;; Defined at:
 10955 ;;		line 233 in file "main.c"
 10956 ;; Parameters:    Size  Location     Type
 10957 ;;		None
 10958 ;; Auto vars:     Size  Location     Type
 10959 ;;		None
 10960 ;; Return value:  Size  Location     Type
 10961 ;;                  1    wreg      void 
 10962 ;; Registers used:
 10963 ;;		None
 10964 ;; Tracked objects:
 10965 ;;		On entry : 0/0
 10966 ;;		On exit  : 0/0
 10967 ;;		Unchanged: 0/0
 10968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10973 ;;Total ram usage:        0 bytes
 10974 ;; Hardware stack levels used:    1
 10975 ;; Hardware stack levels required when called:    7
 10976 ;; This function calls:
 10977 ;;		Nothing
 10978 ;; This function is called by:
 10979 ;;		_main
 10980 ;; This function uses a non-reentrant model
 10981 ;;
 10982                           
 10983                           
 10984                           ;psect for function _PWM_Output_D4_Disable
 10985  09ED                     _PWM_Output_D4_Disable:
 10986  09ED                     l4649:	
 10987                           ;incstack = 0
 10988                           ; Regs used in _PWM_Output_D4_Disable: []
 10989                           
 10990                           
 10991                           ;main.c: 234: PWM6EN = 0;
 10992  09ED  0027               	movlb	7	; select bank7
 10993  09EE  138E               	bcf	14,7	;volatile
 10994  09EF                     l1092:
 10995  09EF  0008               	return
 10996  09F0                     __end_of_PWM_Output_D4_Disable:
 10997                           
 10998                           	psect	text22
 10999  0B4A                     __ptext22:	
 11000 ;; *************** function _PWM6_LoadDutyValue *****************
 11001 ;; Defined at:
 11002 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 11003 ;; Parameters:    Size  Location     Type
 11004 ;;  dutyValue       2    0[BANK1 ] unsigned int 
 11005 ;; Auto vars:     Size  Location     Type
 11006 ;;		None
 11007 ;; Return value:  Size  Location     Type
 11008 ;;                  1    wreg      void 
 11009 ;; Registers used:
 11010 ;;		wreg, status,2, status,0
 11011 ;; Tracked objects:
 11012 ;;		On entry : 0/0
 11013 ;;		On exit  : 0/0
 11014 ;;		Unchanged: 0/0
 11015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11016 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11018 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11019 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11020 ;;Total ram usage:        4 bytes
 11021 ;; Hardware stack levels used:    1
 11022 ;; Hardware stack levels required when called:    7
 11023 ;; This function calls:
 11024 ;;		Nothing
 11025 ;; This function is called by:
 11026 ;;		_main
 11027 ;; This function uses a non-reentrant model
 11028 ;;
 11029                           
 11030                           
 11031                           ;psect for function _PWM6_LoadDutyValue
 11032  0B4A                     _PWM6_LoadDutyValue:
 11033  0B4A                     l4545:	
 11034                           ;incstack = 0
 11035                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 11036                           
 11037                           
 11038                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 11039  0B4A  0021               	movlb	1	; select bank1
 11040  0B4B  082B               	movf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128),w
 11041  0B4C  00AD               	movwf	(??_PWM6_LoadDutyValue^(0+128)+1)
 11042  0B4D  082A               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 11043  0B4E  00AC               	movwf	??_PWM6_LoadDutyValue^(0+128)
 11044  0B4F  36AD               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 11045  0B50  0CAC               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 11046  0B51  36AD               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 11047  0B52  0CAC               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 11048  0B53  082C               	movf	??_PWM6_LoadDutyValue^(0+128),w
 11049  0B54  0027               	movlb	7	; select bank7
 11050  0B55  008D               	movwf	13	;volatile
 11051                           
 11052                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 11053  0B56  0021               	movlb	1	; select bank1
 11054  0B57  082A               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 11055  0B58  3903               	andlw	3
 11056  0B59  00AC               	movwf	??_PWM6_LoadDutyValue^(0+128)
 11057  0B5A  3005               	movlw	5
 11058  0B5B                     u4125:
 11059  0B5B  35AC               	lslf	??_PWM6_LoadDutyValue^(0+128),f
 11060  0B5C  3EFF               	addlw	-1
 11061  0B5D  1D03               	skipz
 11062  0B5E  2B5B               	goto	u4125
 11063  0B5F  352C               	lslf	??_PWM6_LoadDutyValue^(0+128),w
 11064  0B60  0027               	movlb	7	; select bank7
 11065  0B61  008C               	movwf	12	;volatile
 11066  0B62                     l722:
 11067  0B62  0008               	return
 11068  0B63                     __end_of_PWM6_LoadDutyValue:
 11069                           
 11070                           	psect	text23
 11071  0F04                     __ptext23:	
 11072 ;; *************** function _LCDinit *****************
 11073 ;; Defined at:
 11074 ;;		line 160 in file "main.c"
 11075 ;; Parameters:    Size  Location     Type
 11076 ;;		None
 11077 ;; Auto vars:     Size  Location     Type
 11078 ;;		None
 11079 ;; Return value:  Size  Location     Type
 11080 ;;                  1    wreg      void 
 11081 ;; Registers used:
 11082 ;;		wreg, status,2, status,0, pclath, cstack
 11083 ;; Tracked objects:
 11084 ;;		On entry : 0/0
 11085 ;;		On exit  : 0/0
 11086 ;;		Unchanged: 0/0
 11087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11090 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11091 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11092 ;;Total ram usage:        1 bytes
 11093 ;; Hardware stack levels used:    1
 11094 ;; Hardware stack levels required when called:    9
 11095 ;; This function calls:
 11096 ;;		_LCDsend
 11097 ;;		_LCDsend2x4
 11098 ;; This function is called by:
 11099 ;;		_main
 11100 ;; This function uses a non-reentrant model
 11101 ;;
 11102                           
 11103                           
 11104                           ;psect for function _LCDinit
 11105  0F04                     _LCDinit:
 11106  0F04                     l4615:	
 11107                           ;incstack = 0
 11108                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 11109                           
 11110                           
 11111                           ;main.c: 162: _delay((unsigned long)((50)*(1000000/4000.0)));
 11112  0F04  3011               	movlw	17
 11113  0F05  0021               	movlb	1	; select bank1
 11114  0F06  00B2               	movwf	??_LCDinit^(0+128)
 11115  0F07  303A               	movlw	58
 11116  0F08                     u4887:
 11117  0F08  0B89               	decfsz	9,f
 11118  0F09  2F08               	goto	u4887
 11119  0F0A  0BB2               	decfsz	??_LCDinit^(0+128),f
 11120  0F0B  2F08               	goto	u4887
 11121  0F0C  0000               	nop
 11122  0F0D                     l4617:
 11123                           
 11124                           ;main.c: 163: LCDsend(0x30);
 11125  0F0D  3030               	movlw	48
 11126  0F0E  318E  2602  318F   	fcall	_LCDsend
 11127  0F11                     l4619:
 11128                           
 11129                           ;main.c: 164: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 11130  0F11  3034               	movlw	52
 11131  0F12  318E  2602  318F   	fcall	_LCDsend
 11132  0F15  3029               	movlw	41
 11133  0F16                     u4897:
 11134  0F16  0B89               	decfsz	9,f
 11135  0F17  2F16               	goto	u4897
 11136  0F18  3200               	nop2
 11137  0F19                     l4621:
 11138  0F19  3030               	movlw	48
 11139  0F1A  318E  2602  318F   	fcall	_LCDsend
 11140  0F1D                     l4623:
 11141                           
 11142                           ;main.c: 165: _delay((unsigned long)((5)*(1000000/4000.0)));
 11143  0F1D  30FA               	movlw	250
 11144  0F1E                     u4907:
 11145  0F1E  3200               	nop2
 11146  0F1F  0B89               	decfsz	9,f
 11147  0F20  2F1E               	goto	u4907
 11148                           
 11149                           ;main.c: 166: LCDsend(0x30);
 11150  0F21  3030               	movlw	48
 11151  0F22  318E  2602  318F   	fcall	_LCDsend
 11152                           
 11153                           ;main.c: 167: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 11154  0F25  3034               	movlw	52
 11155  0F26  318E  2602  318F   	fcall	_LCDsend
 11156  0F29                     l4625:
 11157  0F29  3029               	movlw	41
 11158  0F2A                     u4917:
 11159  0F2A  0B89               	decfsz	9,f
 11160  0F2B  2F2A               	goto	u4917
 11161  0F2C  3200               	nop2
 11162  0F2D                     l4627:
 11163  0F2D  3030               	movlw	48
 11164  0F2E  318E  2602  318F   	fcall	_LCDsend
 11165                           
 11166                           ;main.c: 168: _delay((unsigned long)((100)*(1000000/4000000.0)));
 11167  0F31  3008               	movlw	8
 11168  0F32                     u4927:
 11169  0F32  0B89               	decfsz	9,f
 11170  0F33  2F32               	goto	u4927
 11171  0F34  0000               	nop
 11172  0F35                     l4629:
 11173                           
 11174                           ;main.c: 169: LCDsend(0x30);
 11175  0F35  3030               	movlw	48
 11176  0F36  318E  2602  318F   	fcall	_LCDsend
 11177  0F39                     l4631:
 11178                           
 11179                           ;main.c: 170: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 11180  0F39  3034               	movlw	52
 11181  0F3A  318E  2602  318F   	fcall	_LCDsend
 11182  0F3D  3029               	movlw	41
 11183  0F3E                     u4937:
 11184  0F3E  0B89               	decfsz	9,f
 11185  0F3F  2F3E               	goto	u4937
 11186  0F40  3200               	nop2
 11187  0F41                     l4633:
 11188  0F41  3030               	movlw	48
 11189  0F42  318E  2602  318F   	fcall	_LCDsend
 11190  0F45                     l4635:
 11191                           
 11192                           ;main.c: 171: _delay((unsigned long)((100)*(1000000/4000000.0)));
 11193  0F45  3008               	movlw	8
 11194  0F46                     u4947:
 11195  0F46  0B89               	decfsz	9,f
 11196  0F47  2F46               	goto	u4947
 11197  0F48  0000               	nop
 11198                           
 11199                           ;main.c: 172: LCDsend(0x20);
 11200  0F49  3020               	movlw	32
 11201  0F4A  318E  2602  318F   	fcall	_LCDsend
 11202                           
 11203                           ;main.c: 173: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
 11204  0F4D  3024               	movlw	36
 11205  0F4E  318E  2602  318F   	fcall	_LCDsend
 11206  0F51                     l4637:
 11207  0F51  3029               	movlw	41
 11208  0F52                     u4957:
 11209  0F52  0B89               	decfsz	9,f
 11210  0F53  2F52               	goto	u4957
 11211  0F54  3200               	nop2
 11212  0F55                     l4639:
 11213  0F55  3020               	movlw	32
 11214  0F56  318E  2602  318F   	fcall	_LCDsend
 11215                           
 11216                           ;main.c: 174: _delay((unsigned long)((5)*(1000000/4000.0)));
 11217  0F59  30FA               	movlw	250
 11218  0F5A                     u4967:
 11219  0F5A  3200               	nop2
 11220  0F5B  0B89               	decfsz	9,f
 11221  0F5C  2F5A               	goto	u4967
 11222  0F5D                     l4641:
 11223                           
 11224                           ;main.c: 176: LCDsend2x4(0x28, 0);
 11225  0F5D  0021               	movlb	1	; select bank1
 11226  0F5E  01AC               	clrf	LCDsend2x4@mode^(0+128)
 11227  0F5F  3028               	movlw	40
 11228  0F60  3185  25E2  318F   	fcall	_LCDsend2x4
 11229  0F63                     l4643:
 11230                           
 11231                           ;main.c: 177: LCDsend2x4(0x06, 0);
 11232  0F63  0021               	movlb	1	; select bank1
 11233  0F64  01AC               	clrf	LCDsend2x4@mode^(0+128)
 11234  0F65  3006               	movlw	6
 11235  0F66  3185  25E2  318F   	fcall	_LCDsend2x4
 11236  0F69                     l4645:
 11237                           
 11238                           ;main.c: 178: LCDsend2x4(0x0f, 0);
 11239  0F69  0021               	movlb	1	; select bank1
 11240  0F6A  01AC               	clrf	LCDsend2x4@mode^(0+128)
 11241  0F6B  300F               	movlw	15
 11242  0F6C  3185  25E2  318F   	fcall	_LCDsend2x4
 11243  0F6F                     l4647:
 11244                           
 11245                           ;main.c: 179: LCDsend2x4(0x01, 0);
 11246  0F6F  0021               	movlb	1	; select bank1
 11247  0F70  01AC               	clrf	LCDsend2x4@mode^(0+128)
 11248  0F71  3001               	movlw	1
 11249  0F72  3185  25E2  318F   	fcall	_LCDsend2x4
 11250                           
 11251                           ;main.c: 180: _delay((unsigned long)((2)*(1000000/4000.0)));
 11252  0F75  30A6               	movlw	166
 11253  0F76                     u4977:
 11254  0F76  0B89               	decfsz	9,f
 11255  0F77  2F76               	goto	u4977
 11256  0F78  3200               	nop2
 11257  0F79                     l1061:
 11258  0F79  0008               	return
 11259  0F7A                     __end_of_LCDinit:
 11260                           
 11261                           	psect	text24
 11262  05E2                     __ptext24:	
 11263 ;; *************** function _LCDsend2x4 *****************
 11264 ;; Defined at:
 11265 ;;		line 137 in file "main.c"
 11266 ;; Parameters:    Size  Location     Type
 11267 ;;  c               1    wreg     unsigned char 
 11268 ;;  mode            1    2[BANK1 ] unsigned char 
 11269 ;; Auto vars:     Size  Location     Type
 11270 ;;  c               1    5[BANK1 ] unsigned char 
 11271 ;;  lc              1    7[BANK1 ] unsigned char 
 11272 ;;  hc              1    6[BANK1 ] unsigned char 
 11273 ;; Return value:  Size  Location     Type
 11274 ;;                  1    wreg      void 
 11275 ;; Registers used:
 11276 ;;		wreg, status,2, status,0, pclath, cstack
 11277 ;; Tracked objects:
 11278 ;;		On entry : 0/0
 11279 ;;		On exit  : 0/0
 11280 ;;		Unchanged: 0/0
 11281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11282 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11283 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11284 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11285 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 11286 ;;Total ram usage:        6 bytes
 11287 ;; Hardware stack levels used:    1
 11288 ;; Hardware stack levels required when called:    8
 11289 ;; This function calls:
 11290 ;;		_WriteI2C
 11291 ;; This function is called by:
 11292 ;;		_LCDinit
 11293 ;; This function uses a non-reentrant model
 11294 ;;
 11295                           
 11296                           
 11297                           ;psect for function _LCDsend2x4
 11298  05E2                     _LCDsend2x4:
 11299                           
 11300                           ;incstack = 0
 11301                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 11302                           ;LCDsend2x4@c stored from wreg
 11303  05E2  0021               	movlb	1	; select bank1
 11304  05E3  00AF               	movwf	LCDsend2x4@c^(0+128)
 11305  05E4                     l4257:
 11306                           
 11307                           ;main.c: 139: unsigned char hc;;main.c: 140: unsigned char lc;;main.c: 142: hc = c & 0xf
      +                          0;
 11308  05E4  082F               	movf	LCDsend2x4@c^(0+128),w
 11309  05E5  39F0               	andlw	240
 11310  05E6  00AD               	movwf	??_LCDsend2x4^(0+128)
 11311  05E7  082D               	movf	??_LCDsend2x4^(0+128),w
 11312  05E8  00B0               	movwf	LCDsend2x4@hc^(0+128)
 11313  05E9                     l4259:
 11314                           
 11315                           ;main.c: 143: lc = (c << 4) & 0xf0;
 11316  05E9  082F               	movf	LCDsend2x4@c^(0+128),w
 11317  05EA  00AD               	movwf	??_LCDsend2x4^(0+128)
 11318  05EB  3003               	movlw	3
 11319  05EC                     u3545:
 11320  05EC  35AD               	lslf	??_LCDsend2x4^(0+128),f
 11321  05ED  3EFF               	addlw	-1
 11322  05EE  1D03               	skipz
 11323  05EF  2DEC               	goto	u3545
 11324  05F0  352D               	lslf	??_LCDsend2x4^(0+128),w
 11325  05F1  39F0               	andlw	240
 11326  05F2  00AE               	movwf	(??_LCDsend2x4+1)^(0+128)
 11327  05F3  082E               	movf	(??_LCDsend2x4+1)^(0+128),w
 11328  05F4  00B1               	movwf	LCDsend2x4@lc^(0+128)
 11329  05F5                     l4261:	
 11330                           ;main.c: 145: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11331                           
 11332  05F5  0023               	movlb	3	; select bank3
 11333  05F6  0C0F               	rrf	15,w	;volatile
 11334  05F7  0C89               	rrf	9,f
 11335  05F8  3901               	andlw	1
 11336  05F9  0021               	movlb	1	; select bank1
 11337  05FA  00AD               	movwf	??_LCDsend2x4^(0+128)
 11338  05FB  0023               	movlb	3	; select bank3
 11339  05FC  0811               	movf	17,w	;volatile
 11340  05FD  391F               	andlw	31
 11341  05FE  0021               	movlb	1	; select bank1
 11342  05FF  042D               	iorwf	??_LCDsend2x4^(0+128),w
 11343  0600  1D03               	btfss	3,2
 11344  0601  2E03               	goto	u3551
 11345  0602  2E04               	goto	u3550
 11346  0603                     u3551:
 11347  0603  2DF5               	goto	l4261
 11348  0604                     u3550:
 11349  0604                     l1027:
 11350                           
 11351                           ;main.c: 146: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 11352  0604  0023               	movlb	3	; select bank3
 11353  0605  1411               	bsf	17,0	;volatile
 11354  0606                     l1028:
 11355  0606  1811               	btfsc	17,0	;volatile
 11356  0607  2E09               	goto	u3561
 11357  0608  2E0A               	goto	u3560
 11358  0609                     u3561:
 11359  0609  2E06               	goto	l1028
 11360  060A                     u3560:
 11361  060A                     l4263:
 11362  060A  0023               	movlb	3	; select bank3
 11363  060B  0C0F               	rrf	15,w	;volatile
 11364  060C  0C89               	rrf	9,f
 11365  060D  3901               	andlw	1
 11366  060E  0021               	movlb	1	; select bank1
 11367  060F  00AD               	movwf	??_LCDsend2x4^(0+128)
 11368  0610  0023               	movlb	3	; select bank3
 11369  0611  0811               	movf	17,w	;volatile
 11370  0612  391F               	andlw	31
 11371  0613  0021               	movlb	1	; select bank1
 11372  0614  042D               	iorwf	??_LCDsend2x4^(0+128),w
 11373  0615  1D03               	btfss	3,2
 11374  0616  2E18               	goto	u3571
 11375  0617  2E19               	goto	u3570
 11376  0618                     u3571:
 11377  0618  2E0A               	goto	l4263
 11378  0619                     u3570:
 11379  0619                     l4265:
 11380                           
 11381                           ;main.c: 147: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11382  0619  304E               	movlw	78
 11383  061A  318E  26AA  3185   	fcall	_WriteI2C
 11384  061D                     l4267:
 11385  061D  0023               	movlb	3	; select bank3
 11386  061E  0C0F               	rrf	15,w	;volatile
 11387  061F  0C89               	rrf	9,f
 11388  0620  3901               	andlw	1
 11389  0621  0021               	movlb	1	; select bank1
 11390  0622  00AD               	movwf	??_LCDsend2x4^(0+128)
 11391  0623  0023               	movlb	3	; select bank3
 11392  0624  0811               	movf	17,w	;volatile
 11393  0625  391F               	andlw	31
 11394  0626  0021               	movlb	1	; select bank1
 11395  0627  042D               	iorwf	??_LCDsend2x4^(0+128),w
 11396  0628  1D03               	btfss	3,2
 11397  0629  2E2B               	goto	u3581
 11398  062A  2E2C               	goto	u3580
 11399  062B                     u3581:
 11400  062B  2E1D               	goto	l4267
 11401  062C                     u3580:
 11402  062C                     l4269:
 11403                           
 11404                           ;main.c: 148: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 11405  062C  0830               	movf	LCDsend2x4@hc^(0+128),w
 11406  062D  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 11407  062E  3808               	iorlw	8
 11408  062F  318E  26AA  3185   	fcall	_WriteI2C
 11409  0632                     l4271:
 11410  0632  0023               	movlb	3	; select bank3
 11411  0633  0C0F               	rrf	15,w	;volatile
 11412  0634  0C89               	rrf	9,f
 11413  0635  3901               	andlw	1
 11414  0636  0021               	movlb	1	; select bank1
 11415  0637  00AD               	movwf	??_LCDsend2x4^(0+128)
 11416  0638  0023               	movlb	3	; select bank3
 11417  0639  0811               	movf	17,w	;volatile
 11418  063A  391F               	andlw	31
 11419  063B  0021               	movlb	1	; select bank1
 11420  063C  042D               	iorwf	??_LCDsend2x4^(0+128),w
 11421  063D  1D03               	btfss	3,2
 11422  063E  2E40               	goto	u3591
 11423  063F  2E41               	goto	u3590
 11424  0640                     u3591:
 11425  0640  2E32               	goto	l4271
 11426  0641                     u3590:
 11427  0641                     l4273:
 11428                           
 11429                           ;main.c: 149: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 11430  0641  0830               	movf	LCDsend2x4@hc^(0+128),w
 11431  0642  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 11432  0643  380C               	iorlw	12
 11433  0644  318E  26AA  3185   	fcall	_WriteI2C
 11434  0647                     l4275:
 11435  0647  0023               	movlb	3	; select bank3
 11436  0648  0C0F               	rrf	15,w	;volatile
 11437  0649  0C89               	rrf	9,f
 11438  064A  3901               	andlw	1
 11439  064B  0021               	movlb	1	; select bank1
 11440  064C  00AD               	movwf	??_LCDsend2x4^(0+128)
 11441  064D  0023               	movlb	3	; select bank3
 11442  064E  0811               	movf	17,w	;volatile
 11443  064F  391F               	andlw	31
 11444  0650  0021               	movlb	1	; select bank1
 11445  0651  042D               	iorwf	??_LCDsend2x4^(0+128),w
 11446  0652  1D03               	btfss	3,2
 11447  0653  2E55               	goto	u3601
 11448  0654  2E56               	goto	u3600
 11449  0655                     u3601:
 11450  0655  2E47               	goto	l4275
 11451  0656                     u3600:
 11452  0656                     l1042:
 11453  0656                     l4277:	
 11454                           ;main.c: 150: _delay((unsigned long)((1)*(1000000/4000000.0)));
 11455                           
 11456                           
 11457                           ;main.c: 151: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 11458  0656  0021               	movlb	1	; select bank1
 11459  0657  0830               	movf	LCDsend2x4@hc^(0+128),w
 11460  0658  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 11461  0659  3808               	iorlw	8
 11462  065A  318E  26AA  3185   	fcall	_WriteI2C
 11463  065D                     l4279:
 11464  065D  0023               	movlb	3	; select bank3
 11465  065E  0C0F               	rrf	15,w	;volatile
 11466  065F  0C89               	rrf	9,f
 11467  0660  3901               	andlw	1
 11468  0661  0021               	movlb	1	; select bank1
 11469  0662  00AD               	movwf	??_LCDsend2x4^(0+128)
 11470  0663  0023               	movlb	3	; select bank3
 11471  0664  0811               	movf	17,w	;volatile
 11472  0665  391F               	andlw	31
 11473  0666  0021               	movlb	1	; select bank1
 11474  0667  042D               	iorwf	??_LCDsend2x4^(0+128),w
 11475  0668  1D03               	btfss	3,2
 11476  0669  2E6B               	goto	u3611
 11477  066A  2E6C               	goto	u3610
 11478  066B                     u3611:
 11479  066B  2E5D               	goto	l4279
 11480  066C                     u3610:
 11481  066C                     l4281:
 11482                           
 11483                           ;main.c: 152: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 11484  066C  0831               	movf	LCDsend2x4@lc^(0+128),w
 11485  066D  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 11486  066E  3808               	iorlw	8
 11487  066F  318E  26AA  3185   	fcall	_WriteI2C
 11488  0672                     l4283:
 11489  0672  0023               	movlb	3	; select bank3
 11490  0673  0C0F               	rrf	15,w	;volatile
 11491  0674  0C89               	rrf	9,f
 11492  0675  3901               	andlw	1
 11493  0676  0021               	movlb	1	; select bank1
 11494  0677  00AD               	movwf	??_LCDsend2x4^(0+128)
 11495  0678  0023               	movlb	3	; select bank3
 11496  0679  0811               	movf	17,w	;volatile
 11497  067A  391F               	andlw	31
 11498  067B  0021               	movlb	1	; select bank1
 11499  067C  042D               	iorwf	??_LCDsend2x4^(0+128),w
 11500  067D  1D03               	btfss	3,2
 11501  067E  2E80               	goto	u3621
 11502  067F  2E81               	goto	u3620
 11503  0680                     u3621:
 11504  0680  2E72               	goto	l4283
 11505  0681                     u3620:
 11506  0681                     l4285:
 11507                           
 11508                           ;main.c: 153: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 11509  0681  0831               	movf	LCDsend2x4@lc^(0+128),w
 11510  0682  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 11511  0683  380C               	iorlw	12
 11512  0684  318E  26AA  3185   	fcall	_WriteI2C
 11513  0687                     l4287:
 11514  0687  0023               	movlb	3	; select bank3
 11515  0688  0C0F               	rrf	15,w	;volatile
 11516  0689  0C89               	rrf	9,f
 11517  068A  3901               	andlw	1
 11518  068B  0021               	movlb	1	; select bank1
 11519  068C  00AD               	movwf	??_LCDsend2x4^(0+128)
 11520  068D  0023               	movlb	3	; select bank3
 11521  068E  0811               	movf	17,w	;volatile
 11522  068F  391F               	andlw	31
 11523  0690  0021               	movlb	1	; select bank1
 11524  0691  042D               	iorwf	??_LCDsend2x4^(0+128),w
 11525  0692  1D03               	btfss	3,2
 11526  0693  2E95               	goto	u3631
 11527  0694  2E96               	goto	u3630
 11528  0695                     u3631:
 11529  0695  2E87               	goto	l4287
 11530  0696                     u3630:
 11531  0696                     l1051:
 11532  0696                     l4289:	
 11533                           ;main.c: 154: _delay((unsigned long)((1)*(1000000/4000000.0)));
 11534                           
 11535                           
 11536                           ;main.c: 155: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 11537  0696  0021               	movlb	1	; select bank1
 11538  0697  0831               	movf	LCDsend2x4@lc^(0+128),w
 11539  0698  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 11540  0699  3808               	iorlw	8
 11541  069A  318E  26AA  3185   	fcall	_WriteI2C
 11542  069D                     l4291:
 11543  069D  0023               	movlb	3	; select bank3
 11544  069E  0C0F               	rrf	15,w	;volatile
 11545  069F  0C89               	rrf	9,f
 11546  06A0  3901               	andlw	1
 11547  06A1  0021               	movlb	1	; select bank1
 11548  06A2  00AD               	movwf	??_LCDsend2x4^(0+128)
 11549  06A3  0023               	movlb	3	; select bank3
 11550  06A4  0811               	movf	17,w	;volatile
 11551  06A5  391F               	andlw	31
 11552  06A6  0021               	movlb	1	; select bank1
 11553  06A7  042D               	iorwf	??_LCDsend2x4^(0+128),w
 11554  06A8  1D03               	btfss	3,2
 11555  06A9  2EAB               	goto	u3641
 11556  06AA  2EAC               	goto	u3640
 11557  06AB                     u3641:
 11558  06AB  2E9D               	goto	l4291
 11559  06AC                     u3640:
 11560  06AC                     l1054:
 11561                           
 11562                           ;main.c: 156: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11563  06AC  0023               	movlb	3	; select bank3
 11564  06AD  1511               	bsf	17,2	;volatile
 11565  06AE                     l1055:
 11566  06AE  1911               	btfsc	17,2	;volatile
 11567  06AF  2EB1               	goto	u3651
 11568  06B0  2EB2               	goto	u3650
 11569  06B1                     u3651:
 11570  06B1  2EAE               	goto	l1055
 11571  06B2                     u3650:
 11572  06B2                     l4293:
 11573                           
 11574                           ;main.c: 157: _delay((unsigned long)((50)*(1000000/4000000.0)));
 11575  06B2  3004               	movlw	4
 11576  06B3                     u4987:
 11577  06B3  0B89               	decfsz	9,f
 11578  06B4  2EB3               	goto	u4987
 11579  06B5                     l1058:
 11580  06B5  0008               	return
 11581  06B6                     __end_of_LCDsend2x4:
 11582                           
 11583                           	psect	text25
 11584  0E02                     __ptext25:	
 11585 ;; *************** function _LCDsend *****************
 11586 ;; Defined at:
 11587 ;;		line 98 in file "main.c"
 11588 ;; Parameters:    Size  Location     Type
 11589 ;;  c               1    wreg     unsigned char 
 11590 ;; Auto vars:     Size  Location     Type
 11591 ;;  c               1    3[BANK1 ] unsigned char 
 11592 ;; Return value:  Size  Location     Type
 11593 ;;                  1    wreg      void 
 11594 ;; Registers used:
 11595 ;;		wreg, status,2, status,0, pclath, cstack
 11596 ;; Tracked objects:
 11597 ;;		On entry : 0/0
 11598 ;;		On exit  : 0/0
 11599 ;;		Unchanged: 0/0
 11600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11602 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11603 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11604 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11605 ;;Total ram usage:        2 bytes
 11606 ;; Hardware stack levels used:    1
 11607 ;; Hardware stack levels required when called:    8
 11608 ;; This function calls:
 11609 ;;		_WriteI2C
 11610 ;; This function is called by:
 11611 ;;		_LCDinit
 11612 ;; This function uses a non-reentrant model
 11613 ;;
 11614                           
 11615                           
 11616                           ;psect for function _LCDsend
 11617  0E02                     _LCDsend:
 11618                           
 11619                           ;incstack = 0
 11620                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 11621                           ;LCDsend@c stored from wreg
 11622  0E02  0021               	movlb	1	; select bank1
 11623  0E03  00AD               	movwf	LCDsend@c^(0+128)
 11624  0E04                     l4243:
 11625  0E04                     l4245:	
 11626                           ;main.c: 100: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11627                           
 11628  0E04  0023               	movlb	3	; select bank3
 11629  0E05  0C0F               	rrf	15,w	;volatile
 11630  0E06  0C89               	rrf	9,f
 11631  0E07  3901               	andlw	1
 11632  0E08  0021               	movlb	1	; select bank1
 11633  0E09  00AC               	movwf	??_LCDsend^(0+128)
 11634  0E0A  0023               	movlb	3	; select bank3
 11635  0E0B  0811               	movf	17,w	;volatile
 11636  0E0C  391F               	andlw	31
 11637  0E0D  0021               	movlb	1	; select bank1
 11638  0E0E  042C               	iorwf	??_LCDsend^(0+128),w
 11639  0E0F  1D03               	btfss	3,2
 11640  0E10  2E12               	goto	u3481
 11641  0E11  2E13               	goto	u3480
 11642  0E12                     u3481:
 11643  0E12  2E04               	goto	l4245
 11644  0E13                     u3480:
 11645  0E13                     l925:
 11646                           
 11647                           ;main.c: 101: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 11648  0E13  0023               	movlb	3	; select bank3
 11649  0E14  1411               	bsf	17,0	;volatile
 11650  0E15                     l926:
 11651  0E15  1811               	btfsc	17,0	;volatile
 11652  0E16  2E18               	goto	u3491
 11653  0E17  2E19               	goto	u3490
 11654  0E18                     u3491:
 11655  0E18  2E15               	goto	l926
 11656  0E19                     u3490:
 11657  0E19                     l4247:
 11658  0E19  0023               	movlb	3	; select bank3
 11659  0E1A  0C0F               	rrf	15,w	;volatile
 11660  0E1B  0C89               	rrf	9,f
 11661  0E1C  3901               	andlw	1
 11662  0E1D  0021               	movlb	1	; select bank1
 11663  0E1E  00AC               	movwf	??_LCDsend^(0+128)
 11664  0E1F  0023               	movlb	3	; select bank3
 11665  0E20  0811               	movf	17,w	;volatile
 11666  0E21  391F               	andlw	31
 11667  0E22  0021               	movlb	1	; select bank1
 11668  0E23  042C               	iorwf	??_LCDsend^(0+128),w
 11669  0E24  1D03               	btfss	3,2
 11670  0E25  2E27               	goto	u3501
 11671  0E26  2E28               	goto	u3500
 11672  0E27                     u3501:
 11673  0E27  2E19               	goto	l4247
 11674  0E28                     u3500:
 11675  0E28                     l4249:
 11676                           
 11677                           ;main.c: 102: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11678  0E28  304E               	movlw	78
 11679  0E29  318E  26AA  318E   	fcall	_WriteI2C
 11680  0E2C                     l4251:
 11681  0E2C  0023               	movlb	3	; select bank3
 11682  0E2D  0C0F               	rrf	15,w	;volatile
 11683  0E2E  0C89               	rrf	9,f
 11684  0E2F  3901               	andlw	1
 11685  0E30  0021               	movlb	1	; select bank1
 11686  0E31  00AC               	movwf	??_LCDsend^(0+128)
 11687  0E32  0023               	movlb	3	; select bank3
 11688  0E33  0811               	movf	17,w	;volatile
 11689  0E34  391F               	andlw	31
 11690  0E35  0021               	movlb	1	; select bank1
 11691  0E36  042C               	iorwf	??_LCDsend^(0+128),w
 11692  0E37  1D03               	btfss	3,2
 11693  0E38  2E3A               	goto	u3511
 11694  0E39  2E3B               	goto	u3510
 11695  0E3A                     u3511:
 11696  0E3A  2E2C               	goto	l4251
 11697  0E3B                     u3510:
 11698  0E3B                     l4253:
 11699                           
 11700                           ;main.c: 103: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11701  0E3B  082D               	movf	LCDsend@c^(0+128),w
 11702  0E3C  318E  26AA  318E   	fcall	_WriteI2C
 11703  0E3F                     l4255:
 11704  0E3F  0023               	movlb	3	; select bank3
 11705  0E40  0C0F               	rrf	15,w	;volatile
 11706  0E41  0C89               	rrf	9,f
 11707  0E42  3901               	andlw	1
 11708  0E43  0021               	movlb	1	; select bank1
 11709  0E44  00AC               	movwf	??_LCDsend^(0+128)
 11710  0E45  0023               	movlb	3	; select bank3
 11711  0E46  0811               	movf	17,w	;volatile
 11712  0E47  391F               	andlw	31
 11713  0E48  0021               	movlb	1	; select bank1
 11714  0E49  042C               	iorwf	??_LCDsend^(0+128),w
 11715  0E4A  1D03               	btfss	3,2
 11716  0E4B  2E4D               	goto	u3521
 11717  0E4C  2E4E               	goto	u3520
 11718  0E4D                     u3521:
 11719  0E4D  2E3F               	goto	l4255
 11720  0E4E                     u3520:
 11721  0E4E                     l937:
 11722                           
 11723                           ;main.c: 104: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11724  0E4E  0023               	movlb	3	; select bank3
 11725  0E4F  1511               	bsf	17,2	;volatile
 11726  0E50                     l938:
 11727  0E50  1911               	btfsc	17,2	;volatile
 11728  0E51  2E53               	goto	u3531
 11729  0E52  2E54               	goto	u3530
 11730  0E53                     u3531:
 11731  0E53  2E50               	goto	l938
 11732  0E54                     u3530:
 11733  0E54                     l941:
 11734  0E54  0008               	return
 11735  0E55                     __end_of_LCDsend:
 11736                           
 11737                           	psect	text26
 11738  0EAA                     __ptext26:	
 11739 ;; *************** function _WriteI2C *****************
 11740 ;; Defined at:
 11741 ;;		line 47 in file "I2C/i2c.c"
 11742 ;; Parameters:    Size  Location     Type
 11743 ;;  data_out        1    wreg     unsigned char 
 11744 ;; Auto vars:     Size  Location     Type
 11745 ;;  data_out        1    1[BANK1 ] unsigned char 
 11746 ;; Return value:  Size  Location     Type
 11747 ;;                  1    wreg      char 
 11748 ;; Registers used:
 11749 ;;		wreg, status,2, status,0
 11750 ;; Tracked objects:
 11751 ;;		On entry : 0/0
 11752 ;;		On exit  : 0/0
 11753 ;;		Unchanged: 0/0
 11754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11756 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11757 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11758 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11759 ;;Total ram usage:        2 bytes
 11760 ;; Hardware stack levels used:    1
 11761 ;; Hardware stack levels required when called:    7
 11762 ;; This function calls:
 11763 ;;		Nothing
 11764 ;; This function is called by:
 11765 ;;		_LCDsend
 11766 ;;		_LCDsend2x4
 11767 ;;		_LCDrecv
 11768 ;; This function uses a non-reentrant model
 11769 ;;
 11770                           
 11771                           
 11772                           ;psect for function _WriteI2C
 11773  0EAA                     _WriteI2C:
 11774                           
 11775                           ;incstack = 0
 11776                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 11777                           ;WriteI2C@data_out stored from wreg
 11778  0EAA  0021               	movlb	1	; select bank1
 11779  0EAB  00AB               	movwf	WriteI2C@data_out^(0+128)
 11780  0EAC                     l3807:
 11781                           
 11782                           ;i2c.c: 49: SSP1BUF = data_out;
 11783  0EAC  082B               	movf	WriteI2C@data_out^(0+128),w
 11784  0EAD  0023               	movlb	3	; select bank3
 11785  0EAE  008C               	movwf	12	;volatile
 11786  0EAF                     l3809:
 11787                           
 11788                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 11789  0EAF  1F90               	btfss	16,7	;volatile
 11790  0EB0  2EB2               	goto	u2871
 11791  0EB1  2EB3               	goto	u2870
 11792  0EB2                     u2871:
 11793  0EB2  2EB4               	goto	l3815
 11794  0EB3                     u2870:
 11795  0EB3  2F03               	goto	l30
 11796  0EB4                     l3815:
 11797                           
 11798                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 11799  0EB4  300F               	movlw	15
 11800  0EB5  0510               	andwf	16,w	;volatile
 11801  0EB6  0021               	movlb	1	; select bank1
 11802  0EB7  00AA               	movwf	??_WriteI2C^(0+128)
 11803  0EB8  3008               	movlw	8
 11804  0EB9  062A               	xorwf	??_WriteI2C^(0+128),w
 11805  0EBA  1903               	btfsc	3,2
 11806  0EBB  2EBD               	goto	u2881
 11807  0EBC  2EBE               	goto	u2880
 11808  0EBD                     u2881:
 11809  0EBD  2ED7               	goto	l3827
 11810  0EBE                     u2880:
 11811  0EBE                     l3817:
 11812  0EBE  300F               	movlw	15
 11813  0EBF  0023               	movlb	3	; select bank3
 11814  0EC0  0510               	andwf	16,w	;volatile
 11815  0EC1  0021               	movlb	1	; select bank1
 11816  0EC2  00AA               	movwf	??_WriteI2C^(0+128)
 11817  0EC3  300B               	movlw	11
 11818  0EC4  062A               	xorwf	??_WriteI2C^(0+128),w
 11819  0EC5  1903               	btfsc	3,2
 11820  0EC6  2EC8               	goto	u2891
 11821  0EC7  2EC9               	goto	u2890
 11822  0EC8                     u2891:
 11823  0EC8  2ED7               	goto	l3827
 11824  0EC9                     u2890:
 11825  0EC9                     l3819:
 11826                           
 11827                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 11828  0EC9  0023               	movlb	3	; select bank3
 11829  0ECA  1610               	bsf	16,4	;volatile
 11830  0ECB                     l33:	
 11831                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 11832                           
 11833  0ECB  002E               	movlb	14	; select bank14
 11834  0ECC  1C0F               	btfss	15,0	;volatile
 11835  0ECD  2ECF               	goto	u2901
 11836  0ECE  2ED0               	goto	u2900
 11837  0ECF                     u2901:
 11838  0ECF  2ECB               	goto	l33
 11839  0ED0                     u2900:
 11840  0ED0                     l35:
 11841                           
 11842                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 11843  0ED0  0023               	movlb	3	; select bank3
 11844  0ED1  190F               	btfsc	15,2	;volatile
 11845  0ED2  2ED4               	goto	u2911
 11846  0ED3  2ED5               	goto	u2910
 11847  0ED4                     u2911:
 11848  0ED4  2F03               	goto	l30
 11849  0ED5                     u2910:
 11850  0ED5                     l3821:
 11851  0ED5  080F               	movf	15,w	;volatile
 11852  0ED6  2F03               	goto	l30
 11853  0ED7                     l3827:
 11854                           
 11855                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 11856  0ED7  300F               	movlw	15
 11857  0ED8  0023               	movlb	3	; select bank3
 11858  0ED9  0510               	andwf	16,w	;volatile
 11859  0EDA  0021               	movlb	1	; select bank1
 11860  0EDB  00AA               	movwf	??_WriteI2C^(0+128)
 11861  0EDC  3008               	movlw	8
 11862  0EDD  062A               	xorwf	??_WriteI2C^(0+128),w
 11863  0EDE  1903               	btfsc	3,2
 11864  0EDF  2EE1               	goto	u2921
 11865  0EE0  2EE2               	goto	u2920
 11866  0EE1                     u2921:
 11867  0EE1  2EED               	goto	l42
 11868  0EE2                     u2920:
 11869  0EE2                     l3829:
 11870  0EE2  300F               	movlw	15
 11871  0EE3  0023               	movlb	3	; select bank3
 11872  0EE4  0510               	andwf	16,w	;volatile
 11873  0EE5  0021               	movlb	1	; select bank1
 11874  0EE6  00AA               	movwf	??_WriteI2C^(0+128)
 11875  0EE7  300B               	movlw	11
 11876  0EE8  062A               	xorwf	??_WriteI2C^(0+128),w
 11877  0EE9  1D03               	btfss	3,2
 11878  0EEA  2EEC               	goto	u2931
 11879  0EEB  2EED               	goto	u2930
 11880  0EEC                     u2931:
 11881  0EEC  2F03               	goto	l30
 11882  0EED                     u2930:
 11883  0EED                     l42:
 11884  0EED  0023               	movlb	3	; select bank3
 11885  0EEE  180F               	btfsc	15,0	;volatile
 11886  0EEF  2EF1               	goto	u2941
 11887  0EF0  2EF2               	goto	u2940
 11888  0EF1                     u2941:
 11889  0EF1  2EED               	goto	l42
 11890  0EF2                     u2940:
 11891  0EF2                     l3831:
 11892  0EF2  0023               	movlb	3	; select bank3
 11893  0EF3  0C0F               	rrf	15,w	;volatile
 11894  0EF4  0C89               	rrf	9,f
 11895  0EF5  3901               	andlw	1
 11896  0EF6  0021               	movlb	1	; select bank1
 11897  0EF7  00AA               	movwf	??_WriteI2C^(0+128)
 11898  0EF8  0023               	movlb	3	; select bank3
 11899  0EF9  0811               	movf	17,w	;volatile
 11900  0EFA  391F               	andlw	31
 11901  0EFB  0021               	movlb	1	; select bank1
 11902  0EFC  042A               	iorwf	??_WriteI2C^(0+128),w
 11903  0EFD  1D03               	btfss	3,2
 11904  0EFE  2F00               	goto	u2951
 11905  0EFF  2F01               	goto	u2950
 11906  0F00                     u2951:
 11907  0F00  2EF2               	goto	l3831
 11908  0F01                     u2950:
 11909  0F01                     l47:
 11910                           
 11911                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 11912  0F01  0023               	movlb	3	; select bank3
 11913  0F02  0811               	movf	17,w	;volatile
 11914  0F03                     l30:
 11915  0F03  0008               	return
 11916  0F04                     __end_of_WriteI2C:
 11917                           
 11918                           	psect	intentry
 11919  0004                     __pintentry:	
 11920 ;; *************** function _INTERRUPT_InterruptManager *****************
 11921 ;; Defined at:
 11922 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11923 ;; Parameters:    Size  Location     Type
 11924 ;;		None
 11925 ;; Auto vars:     Size  Location     Type
 11926 ;;		None
 11927 ;; Return value:  Size  Location     Type
 11928 ;;                  1    wreg      void 
 11929 ;; Registers used:
 11930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11931 ;; Tracked objects:
 11932 ;;		On entry : 0/0
 11933 ;;		On exit  : 0/0
 11934 ;;		Unchanged: 0/0
 11935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11940 ;;Total ram usage:        0 bytes
 11941 ;; Hardware stack levels used:    1
 11942 ;; Hardware stack levels required when called:    6
 11943 ;; This function calls:
 11944 ;;		_TMR1_ISR
 11945 ;;		_TMR3_ISR
 11946 ;;		_TMR5_ISR
 11947 ;; This function is called by:
 11948 ;;		Interrupt level 1
 11949 ;; This function uses a non-reentrant model
 11950 ;;
 11951                           
 11952  0004                     _INTERRUPT_InterruptManager:
 11953                           
 11954                           ;incstack = 0
 11955  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11956                           
 11957                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11958  0005  3180               	pagesel	$
 11959  0006                     i1l4747:
 11960                           
 11961                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
 11962  0006  1F0B               	btfss	11,6	;volatile
 11963  0007  2809               	goto	u463_21
 11964  0008  280A               	goto	u463_20
 11965  0009                     u463_21:
 11966  0009  283E               	goto	i1l356
 11967  000A                     u463_20:
 11968  000A                     i1l4749:
 11969                           
 11970                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE4bits.TMR5IE == 1 && PIR4bits
      +                          .TMR5IF == 1)
 11971  000A  002E               	movlb	14	; select bank14
 11972  000B  1E1A               	btfss	26,4	;volatile
 11973  000C  280E               	goto	u464_21
 11974  000D  280F               	goto	u464_20
 11975  000E                     u464_21:
 11976  000E  2817               	goto	i1l345
 11977  000F                     u464_20:
 11978  000F                     i1l4751:
 11979  000F  1E10               	btfss	16,4	;volatile
 11980  0010  2812               	goto	u465_21
 11981  0011  2813               	goto	u465_20
 11982  0012                     u465_21:
 11983  0012  2817               	goto	i1l345
 11984  0013                     u465_20:
 11985  0013                     i1l4753:
 11986                           
 11987                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: TMR5_ISR();
 11988  0013  318B  231C  3180   	fcall	_TMR5_ISR
 11989                           
 11990                           ;interrupt_manager.c: 60: }
 11991  0016  283E               	goto	i1l356
 11992  0017                     i1l345:
 11993                           
 11994                           ;interrupt_manager.c: 61: else if(PIE4bits.TMR3IE == 1 && PIR4bits.TMR3IF == 1)
 11995  0017  1D1A               	btfss	26,2	;volatile
 11996  0018  281A               	goto	u466_21
 11997  0019  281B               	goto	u466_20
 11998  001A                     u466_21:
 11999  001A  2823               	goto	i1l347
 12000  001B                     u466_20:
 12001  001B                     i1l4755:
 12002  001B  1D10               	btfss	16,2	;volatile
 12003  001C  281E               	goto	u467_21
 12004  001D  281F               	goto	u467_20
 12005  001E                     u467_21:
 12006  001E  2823               	goto	i1l347
 12007  001F                     u467_20:
 12008  001F                     i1l4757:
 12009                           
 12010                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR3_ISR();
 12011  001F  318B  2305  3180   	fcall	_TMR3_ISR
 12012                           
 12013                           ;interrupt_manager.c: 64: }
 12014  0022  283E               	goto	i1l356
 12015  0023                     i1l347:
 12016                           
 12017                           ;interrupt_manager.c: 65: else if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 12018  0023  1C1A               	btfss	26,0	;volatile
 12019  0024  2826               	goto	u468_21
 12020  0025  2827               	goto	u468_20
 12021  0026                     u468_21:
 12022  0026  282F               	goto	i1l349
 12023  0027                     u468_20:
 12024  0027                     i1l4759:
 12025  0027  1C10               	btfss	16,0	;volatile
 12026  0028  282A               	goto	u469_21
 12027  0029  282B               	goto	u469_20
 12028  002A                     u469_21:
 12029  002A  282F               	goto	i1l349
 12030  002B                     u469_20:
 12031  002B                     i1l4761:
 12032                           
 12033                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: TMR1_ISR();
 12034  002B  318A  22EE  3180   	fcall	_TMR1_ISR
 12035                           
 12036                           ;interrupt_manager.c: 68: }
 12037  002E  283E               	goto	i1l356
 12038  002F                     i1l349:
 12039                           
 12040                           ;interrupt_manager.c: 69: else if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 12041  002F  1C99               	btfss	25,1	;volatile
 12042  0030  2832               	goto	u470_21
 12043  0031  2833               	goto	u470_20
 12044  0032                     u470_21:
 12045  0032  2838               	goto	i1l351
 12046  0033                     u470_20:
 12047  0033                     i1l4763:
 12048                           
 12049                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: i2c1_driver_busCollisionISR();
 12050  0033  1C8F               	btfss	15,1	;volatile
 12051  0034  2836               	goto	u471_21
 12052  0035  2837               	goto	u471_20
 12053  0036                     u471_21:
 12054  0036  2838               	goto	i1l351
 12055  0037                     u471_20:
 12056  0037  283E               	goto	i1l356
 12057  0038                     i1l351:
 12058                           
 12059                           ;interrupt_manager.c: 73: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 12060  0038  1C19               	btfss	25,0	;volatile
 12061  0039  283B               	goto	u472_21
 12062  003A  283C               	goto	u472_20
 12063  003B                     u472_21:
 12064  003B  283E               	goto	i1l350
 12065  003C                     u472_20:
 12066  003C                     i1l4767:
 12067                           
 12068                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: i2c1_driver_i2cISR();
 12069  003C  080F               	movf	15,w	;volatile
 12070  003D  283E               	goto	i1l356
 12071  003E                     i1l350:
 12072  003E                     i1l356:
 12073  003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 12074  003F  0009               	retfie
 12075  0040                     __end_of_INTERRUPT_InterruptManager:
 12076                           
 12077                           	psect	text28
 12078  0B1C                     __ptext28:	
 12079 ;; *************** function _TMR5_ISR *****************
 12080 ;; Defined at:
 12081 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 12082 ;; Parameters:    Size  Location     Type
 12083 ;;		None
 12084 ;; Auto vars:     Size  Location     Type
 12085 ;;		None
 12086 ;; Return value:  Size  Location     Type
 12087 ;;                  1    wreg      void 
 12088 ;; Registers used:
 12089 ;;		wreg, status,2, status,0, pclath, cstack
 12090 ;; Tracked objects:
 12091 ;;		On entry : 0/0
 12092 ;;		On exit  : 0/0
 12093 ;;		Unchanged: 0/0
 12094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12099 ;;Total ram usage:        0 bytes
 12100 ;; Hardware stack levels used:    1
 12101 ;; Hardware stack levels required when called:    3
 12102 ;; This function calls:
 12103 ;;		Absolute function
 12104 ;;		_TMR5_DefaultInterruptHandler
 12105 ;;		_TMR5_WriteTimer
 12106 ;;		_monitoring_ISR
 12107 ;; This function is called by:
 12108 ;;		_INTERRUPT_InterruptManager
 12109 ;; This function uses a non-reentrant model
 12110 ;;
 12111                           
 12112                           
 12113                           ;psect for function _TMR5_ISR
 12114  0B1C                     _TMR5_ISR:
 12115  0B1C                     i1l4521:	
 12116                           ;incstack = 0
 12117                           ; Regs used in _TMR5_ISR: [wreg+status,2+status,0+pclath+cstack]
 12118                           
 12119                           
 12120                           ;tmr5.c: 169: PIR4bits.TMR5IF = 0;
 12121  0B1C  002E               	movlb	14	; select bank14
 12122  0B1D  1210               	bcf	16,4	;volatile
 12123  0B1E                     i1l4523:
 12124                           
 12125                           ;tmr5.c: 170: TMR5_WriteTimer(timer5ReloadVal);
 12126  0B1E  0021               	movlb	1	; select bank1
 12127  0B1F  0823               	movf	(_timer5ReloadVal+1)^(0+128),w	;volatile
 12128  0B20  00F1               	movwf	TMR5_WriteTimer@timerVal+1
 12129  0B21  0822               	movf	_timer5ReloadVal^(0+128),w	;volatile
 12130  0B22  00F0               	movwf	TMR5_WriteTimer@timerVal
 12131  0B23  318A  227D  318B   	fcall	_TMR5_WriteTimer
 12132  0B26                     i1l4525:
 12133                           
 12134                           ;tmr5.c: 172: if(TMR5_InterruptHandler)
 12135  0B26  0021               	movlb	1	; select bank1
 12136  0B27  0820               	movf	_TMR5_InterruptHandler^(0+128),w
 12137  0B28  0421               	iorwf	(_TMR5_InterruptHandler+1)^(0+128),w
 12138  0B29  1903               	btfsc	3,2
 12139  0B2A  2B2C               	goto	u409_21
 12140  0B2B  2B2D               	goto	u409_20
 12141  0B2C                     u409_21:
 12142  0B2C  2B32               	goto	i1l702
 12143  0B2D                     u409_20:
 12144  0B2D                     i1l4527:
 12145                           
 12146                           ;tmr5.c: 173: {;tmr5.c: 174: TMR5_InterruptHandler();
 12147  0B2D  0821               	movf	(_TMR5_InterruptHandler+1)^(0+128),w
 12148  0B2E  008A               	movwf	10
 12149  0B2F  0820               	movf	_TMR5_InterruptHandler^(0+128),w
 12150  0B30  000A               	callw
 12151  0B31  318B               	pagesel	$
 12152  0B32                     i1l702:
 12153  0B32  0008               	return
 12154  0B33                     __end_of_TMR5_ISR:
 12155                           
 12156                           	psect	text29
 12157  07FE                     __ptext29:	
 12158 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 12159 ;; Defined at:
 12160 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 12161 ;; Parameters:    Size  Location     Type
 12162 ;;		None
 12163 ;; Auto vars:     Size  Location     Type
 12164 ;;		None
 12165 ;; Return value:  Size  Location     Type
 12166 ;;                  1    wreg      void 
 12167 ;; Registers used:
 12168 ;;		None
 12169 ;; Tracked objects:
 12170 ;;		On entry : 0/0
 12171 ;;		On exit  : 0/0
 12172 ;;		Unchanged: 0/0
 12173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12178 ;;Total ram usage:        0 bytes
 12179 ;; Hardware stack levels used:    1
 12180 ;; This function calls:
 12181 ;;		Nothing
 12182 ;; This function is called by:
 12183 ;;		_TMR5_Initialize
 12184 ;;		_TMR5_ISR
 12185 ;; This function uses a non-reentrant model
 12186 ;;
 12187                           
 12188                           
 12189                           ;psect for function _TMR5_DefaultInterruptHandler
 12190  07FE                     _TMR5_DefaultInterruptHandler:
 12191  07FE                     i1l708:	
 12192                           ;incstack = 0
 12193                           ; Regs used in _TMR5_DefaultInterruptHandler: []
 12194                           
 12195  07FE  0008               	return
 12196  07FF                     __end_of_TMR5_DefaultInterruptHandler:
 12197                           
 12198                           	psect	text30
 12199  03BF                     __ptext30:	
 12200 ;; *************** function _monitoring_ISR *****************
 12201 ;; Defined at:
 12202 ;;		line 437 in file "main.c"
 12203 ;; Parameters:    Size  Location     Type
 12204 ;;		None
 12205 ;; Auto vars:     Size  Location     Type
 12206 ;;		None
 12207 ;; Return value:  Size  Location     Type
 12208 ;;                  1    wreg      void 
 12209 ;; Registers used:
 12210 ;;		wreg, status,2, status,0, pclath, cstack
 12211 ;; Tracked objects:
 12212 ;;		On entry : 0/0
 12213 ;;		On exit  : 0/0
 12214 ;;		Unchanged: 0/0
 12215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12218 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12219 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12220 ;;Total ram usage:        3 bytes
 12221 ;; Hardware stack levels used:    1
 12222 ;; Hardware stack levels required when called:    2
 12223 ;; This function calls:
 12224 ;;		_ADCC_GetSingleConversion
 12225 ;;		_DATAEE_WriteByte
 12226 ;;		___wmul
 12227 ;;		_tsttc
 12228 ;; This function is called by:
 12229 ;;		_main
 12230 ;;		_TMR5_ISR
 12231 ;; This function uses a non-reentrant model
 12232 ;;
 12233                           
 12234                           
 12235                           ;psect for function _monitoring_ISR
 12236  03BF                     _monitoring_ISR:
 12237  03BF                     i1l4435:	
 12238                           ;incstack = 0
 12239                           ; Regs used in _monitoring_ISR: [wreg+status,2+status,0+pclath+cstack]
 12240                           
 12241                           
 12242                           ;main.c: 438: temp = (uint8_t)tsttc();
 12243  03BF  3184  24D5  3183   	fcall	_tsttc
 12244  03C2  00FA               	movwf	??_monitoring_ISR
 12245  03C3  087A               	movf	??_monitoring_ISR,w
 12246  03C4  0020               	movlb	0	; select bank0
 12247  03C5  00ED               	movwf	_temp
 12248                           
 12249                           ;main.c: 440: lumLevel = ADCC_GetSingleConversion(channel_ANA0) >> 13;
 12250  03C6  3000               	movlw	0
 12251  03C7  318A  22A0  3183   	fcall	_ADCC_GetSingleConversion
 12252  03CA  0870               	movf	?_ADCC_GetSingleConversion,w
 12253  03CB  00FA               	movwf	??_monitoring_ISR
 12254  03CC  0871               	movf	?_ADCC_GetSingleConversion+1,w
 12255  03CD  00FB               	movwf	??_monitoring_ISR+1
 12256  03CE  300D               	movlw	13
 12257  03CF                     u397_25:
 12258  03CF  36FB               	lsrf	??_monitoring_ISR+1,f
 12259  03D0  0CFA               	rrf	??_monitoring_ISR,f
 12260  03D1  0B89               	decfsz	9,f
 12261  03D2  2BCF               	goto	u397_25
 12262  03D3  087A               	movf	??_monitoring_ISR,w
 12263  03D4  00FC               	movwf	??_monitoring_ISR+2
 12264  03D5  087C               	movf	??_monitoring_ISR+2,w
 12265  03D6  0020               	movlb	0	; select bank0
 12266  03D7  00EC               	movwf	_lumLevel
 12267  03D8                     i1l4437:
 12268                           
 12269                           ;main.c: 442: if(prevTemp != temp || prevLumLevel != lumLevel){
 12270  03D8  086D               	movf	_temp,w
 12271  03D9  00FA               	movwf	??_monitoring_ISR
 12272  03DA  01FB               	clrf	??_monitoring_ISR+1
 12273  03DB  085D               	movf	_prevTemp+1,w
 12274  03DC  067B               	xorwf	??_monitoring_ISR+1,w
 12275  03DD  1D03               	skipz
 12276  03DE  2BE1               	goto	u398_25
 12277  03DF  085C               	movf	_prevTemp,w
 12278  03E0  067A               	xorwf	??_monitoring_ISR,w
 12279  03E1                     u398_25:
 12280  03E1  1D03               	skipz
 12281  03E2  2BE4               	goto	u398_21
 12282  03E3  2BE5               	goto	u398_20
 12283  03E4                     u398_21:
 12284  03E4  2BF2               	goto	i1l4441
 12285  03E5                     u398_20:
 12286  03E5                     i1l4439:
 12287  03E5  086C               	movf	_lumLevel,w
 12288  03E6  00FA               	movwf	??_monitoring_ISR
 12289  03E7  01FB               	clrf	??_monitoring_ISR+1
 12290  03E8  085B               	movf	_prevLumLevel+1,w
 12291  03E9  067B               	xorwf	??_monitoring_ISR+1,w
 12292  03EA  1D03               	skipz
 12293  03EB  2BEE               	goto	u399_25
 12294  03EC  085A               	movf	_prevLumLevel,w
 12295  03ED  067A               	xorwf	??_monitoring_ISR,w
 12296  03EE                     u399_25:
 12297  03EE  1903               	skipnz
 12298  03EF  2BF1               	goto	u399_21
 12299  03F0  2BF2               	goto	u399_20
 12300  03F1                     u399_21:
 12301  03F1  2C97               	goto	i1l4453
 12302  03F2                     u399_20:
 12303  03F2                     i1l4441:
 12304                           
 12305                           ;main.c: 444: DATAEE_WriteByte( (regIdx * 0x28) + 0x7000 + (sizeof(uint8_t)*0) , t.h);
 12306  03F2  0863               	movf	_regIdx+1,w
 12307  03F3  00F1               	movwf	___wmul@multiplier+1
 12308  03F4  0862               	movf	_regIdx,w
 12309  03F5  00F0               	movwf	___wmul@multiplier
 12310  03F6  3028               	movlw	40
 12311  03F7  00F2               	movwf	___wmul@multiplicand
 12312  03F8  3000               	movlw	0
 12313  03F9  00F3               	movwf	___wmul@multiplicand+1
 12314  03FA  318B  23B7  3183   	fcall	___wmul
 12315  03FD  0870               	movf	?___wmul,w
 12316  03FE  3E00               	addlw	0
 12317  03FF  00F6               	movwf	DATAEE_WriteByte@bAdd
 12318  0400  3070               	movlw	112
 12319  0401  3D71               	addwfc	?___wmul+1,w
 12320  0402  00F7               	movwf	DATAEE_WriteByte@bAdd+1
 12321  0403  0020               	movlb	0	; select bank0
 12322  0404  085F               	movf	_t,w
 12323  0405  00FA               	movwf	??_monitoring_ISR
 12324  0406  087A               	movf	??_monitoring_ISR,w
 12325  0407  00F8               	movwf	DATAEE_WriteByte@bData
 12326  0408  318B  2399  3183   	fcall	_DATAEE_WriteByte
 12327                           
 12328                           ;main.c: 445: DATAEE_WriteByte( (regIdx * 0x28) + 0x7000 + (sizeof(uint8_t)*1) , t.m);
 12329  040B  0020               	movlb	0	; select bank0
 12330  040C  0863               	movf	_regIdx+1,w
 12331  040D  00F1               	movwf	___wmul@multiplier+1
 12332  040E  0862               	movf	_regIdx,w
 12333  040F  00F0               	movwf	___wmul@multiplier
 12334  0410  3028               	movlw	40
 12335  0411  00F2               	movwf	___wmul@multiplicand
 12336  0412  3000               	movlw	0
 12337  0413  00F3               	movwf	___wmul@multiplicand+1
 12338  0414  318B  23B7  3183   	fcall	___wmul
 12339  0417  0870               	movf	?___wmul,w
 12340  0418  3E01               	addlw	1
 12341  0419  00F6               	movwf	DATAEE_WriteByte@bAdd
 12342  041A  3070               	movlw	112
 12343  041B  3D71               	addwfc	?___wmul+1,w
 12344  041C  00F7               	movwf	DATAEE_WriteByte@bAdd+1
 12345  041D  0020               	movlb	0	; select bank0
 12346  041E  0860               	movf	_t+1,w
 12347  041F  00FA               	movwf	??_monitoring_ISR
 12348  0420  087A               	movf	??_monitoring_ISR,w
 12349  0421  00F8               	movwf	DATAEE_WriteByte@bData
 12350  0422  318B  2399  3183   	fcall	_DATAEE_WriteByte
 12351                           
 12352                           ;main.c: 446: DATAEE_WriteByte( (regIdx * 0x28) + 0x7000 + (sizeof(uint8_t)*2) , t.s);
 12353  0425  0020               	movlb	0	; select bank0
 12354  0426  0863               	movf	_regIdx+1,w
 12355  0427  00F1               	movwf	___wmul@multiplier+1
 12356  0428  0862               	movf	_regIdx,w
 12357  0429  00F0               	movwf	___wmul@multiplier
 12358  042A  3028               	movlw	40
 12359  042B  00F2               	movwf	___wmul@multiplicand
 12360  042C  3000               	movlw	0
 12361  042D  00F3               	movwf	___wmul@multiplicand+1
 12362  042E  318B  23B7  3183   	fcall	___wmul
 12363  0431  0870               	movf	?___wmul,w
 12364  0432  3E02               	addlw	2
 12365  0433  00F6               	movwf	DATAEE_WriteByte@bAdd
 12366  0434  3070               	movlw	112
 12367  0435  3D71               	addwfc	?___wmul+1,w
 12368  0436  00F7               	movwf	DATAEE_WriteByte@bAdd+1
 12369  0437  0020               	movlb	0	; select bank0
 12370  0438  0861               	movf	_t+2,w
 12371  0439  00FA               	movwf	??_monitoring_ISR
 12372  043A  087A               	movf	??_monitoring_ISR,w
 12373  043B  00F8               	movwf	DATAEE_WriteByte@bData
 12374  043C  318B  2399  3183   	fcall	_DATAEE_WriteByte
 12375                           
 12376                           ;main.c: 447: DATAEE_WriteByte( (regIdx * 0x28) + 0x7000 + (sizeof(uint8_t)*3) , temp);
 12377  043F  0020               	movlb	0	; select bank0
 12378  0440  0863               	movf	_regIdx+1,w
 12379  0441  00F1               	movwf	___wmul@multiplier+1
 12380  0442  0862               	movf	_regIdx,w
 12381  0443  00F0               	movwf	___wmul@multiplier
 12382  0444  3028               	movlw	40
 12383  0445  00F2               	movwf	___wmul@multiplicand
 12384  0446  3000               	movlw	0
 12385  0447  00F3               	movwf	___wmul@multiplicand+1
 12386  0448  318B  23B7  3183   	fcall	___wmul
 12387  044B  0870               	movf	?___wmul,w
 12388  044C  3E03               	addlw	3
 12389  044D  00F6               	movwf	DATAEE_WriteByte@bAdd
 12390  044E  3070               	movlw	112
 12391  044F  3D71               	addwfc	?___wmul+1,w
 12392  0450  00F7               	movwf	DATAEE_WriteByte@bAdd+1
 12393  0451  0020               	movlb	0	; select bank0
 12394  0452  086D               	movf	_temp,w
 12395  0453  00FA               	movwf	??_monitoring_ISR
 12396  0454  087A               	movf	??_monitoring_ISR,w
 12397  0455  00F8               	movwf	DATAEE_WriteByte@bData
 12398  0456  318B  2399  3183   	fcall	_DATAEE_WriteByte
 12399                           
 12400                           ;main.c: 448: DATAEE_WriteByte( (regIdx * 0x28) + 0x7000 + (sizeof(uint8_t)*4) , lumLeve
      +                          l);
 12401  0459  0020               	movlb	0	; select bank0
 12402  045A  0863               	movf	_regIdx+1,w
 12403  045B  00F1               	movwf	___wmul@multiplier+1
 12404  045C  0862               	movf	_regIdx,w
 12405  045D  00F0               	movwf	___wmul@multiplier
 12406  045E  3028               	movlw	40
 12407  045F  00F2               	movwf	___wmul@multiplicand
 12408  0460  3000               	movlw	0
 12409  0461  00F3               	movwf	___wmul@multiplicand+1
 12410  0462  318B  23B7  3183   	fcall	___wmul
 12411  0465  0870               	movf	?___wmul,w
 12412  0466  3E04               	addlw	4
 12413  0467  00F6               	movwf	DATAEE_WriteByte@bAdd
 12414  0468  3070               	movlw	112
 12415  0469  3D71               	addwfc	?___wmul+1,w
 12416  046A  00F7               	movwf	DATAEE_WriteByte@bAdd+1
 12417  046B  0020               	movlb	0	; select bank0
 12418  046C  086C               	movf	_lumLevel,w
 12419  046D  00FA               	movwf	??_monitoring_ISR
 12420  046E  087A               	movf	??_monitoring_ISR,w
 12421  046F  00F8               	movwf	DATAEE_WriteByte@bData
 12422  0470  318B  2399  3183   	fcall	_DATAEE_WriteByte
 12423  0473                     i1l4443:
 12424                           
 12425                           ;main.c: 450: regIdx++;
 12426  0473  3001               	movlw	1
 12427  0474  0020               	movlb	0	; select bank0
 12428  0475  07E2               	addwf	_regIdx,f
 12429  0476  3000               	movlw	0
 12430  0477  3DE3               	addwfc	_regIdx+1,f
 12431  0478                     i1l4445:
 12432                           
 12433                           ;main.c: 451: if(regIdx > 24){
 12434  0478  0863               	movf	_regIdx+1,w
 12435  0479  3A80               	xorlw	128
 12436  047A  00FA               	movwf	??_monitoring_ISR
 12437  047B  3080               	movlw	128
 12438  047C  027A               	subwf	??_monitoring_ISR,w
 12439  047D  1D03               	skipz
 12440  047E  2C81               	goto	u400_25
 12441  047F  3019               	movlw	25
 12442  0480  0262               	subwf	_regIdx,w
 12443  0481                     u400_25:
 12444  0481  1C03               	skipc
 12445  0482  2C84               	goto	u400_21
 12446  0483  2C85               	goto	u400_20
 12447  0484                     u400_21:
 12448  0484  2C88               	goto	i1l4449
 12449  0485                     u400_20:
 12450  0485                     i1l4447:
 12451                           
 12452                           ;main.c: 452: regIdx = 0;
 12453  0485  0020               	movlb	0	; select bank0
 12454  0486  01E2               	clrf	_regIdx
 12455  0487  01E3               	clrf	_regIdx+1
 12456  0488                     i1l4449:
 12457                           
 12458                           ;main.c: 453: };main.c: 454: prevTemp = temp;
 12459  0488  0020               	movlb	0	; select bank0
 12460  0489  086D               	movf	_temp,w
 12461  048A  00FA               	movwf	??_monitoring_ISR
 12462  048B  01FB               	clrf	??_monitoring_ISR+1
 12463  048C  087A               	movf	??_monitoring_ISR,w
 12464  048D  00DC               	movwf	_prevTemp
 12465  048E  087B               	movf	??_monitoring_ISR+1,w
 12466  048F  00DD               	movwf	_prevTemp+1
 12467  0490                     i1l4451:
 12468                           
 12469                           ;main.c: 455: prevLumLevel = lumLevel;
 12470  0490  086C               	movf	_lumLevel,w
 12471  0491  00FA               	movwf	??_monitoring_ISR
 12472  0492  01FB               	clrf	??_monitoring_ISR+1
 12473  0493  087A               	movf	??_monitoring_ISR,w
 12474  0494  00DA               	movwf	_prevLumLevel
 12475  0495  087B               	movf	??_monitoring_ISR+1,w
 12476  0496  00DB               	movwf	_prevLumLevel+1
 12477  0497                     i1l4453:
 12478                           
 12479                           ;main.c: 456: };main.c: 459: if(alarmsEnable){
 12480  0497  085E               	movf	_alarmsEnable,w
 12481  0498  1903               	btfsc	3,2
 12482  0499  2C9B               	goto	u401_21
 12483  049A  2C9C               	goto	u401_20
 12484  049B                     u401_21:
 12485  049B  2CD4               	goto	i1l1199
 12486  049C                     u401_20:
 12487  049C                     i1l4455:
 12488                           
 12489                           ;main.c: 461: if((lumAlarm.alarmLum > lumLevel) && (editingLumAlarm == 0)){
 12490  049C  0854               	movf	_lumAlarm,w
 12491  049D  026C               	subwf	_lumLevel,w
 12492  049E  1803               	skipnc
 12493  049F  2CA1               	goto	u402_21
 12494  04A0  2CA2               	goto	u402_20
 12495  04A1                     u402_21:
 12496  04A1  2CB6               	goto	i1l4469
 12497  04A2                     u402_20:
 12498  04A2                     i1l4457:
 12499  04A2  086A               	movf	_editingLumAlarm,w
 12500  04A3  1D03               	btfss	3,2
 12501  04A4  2CA6               	goto	u403_21
 12502  04A5  2CA7               	goto	u403_20
 12503  04A6                     u403_21:
 12504  04A6  2CB6               	goto	i1l4469
 12505  04A7                     u403_20:
 12506  04A7                     i1l4459:
 12507                           
 12508                           ;main.c: 462: if(!lumAlarm.triggered){
 12509  04A7  0856               	movf	_lumAlarm+2,w
 12510  04A8  1D03               	btfss	3,2
 12511  04A9  2CAB               	goto	u404_21
 12512  04AA  2CAC               	goto	u404_20
 12513  04AB                     u404_21:
 12514  04AB  2CB0               	goto	i1l4463
 12515  04AC                     u404_20:
 12516  04AC                     i1l4461:
 12517                           
 12518                           ;main.c: 463: alarmPWMStart.h = -1;
 12519  04AC  30FF               	movlw	255
 12520  04AD  00FA               	movwf	??_monitoring_ISR
 12521  04AE  087A               	movf	??_monitoring_ISR,w
 12522  04AF  00D1               	movwf	_alarmPWMStart
 12523  04B0                     i1l4463:
 12524                           
 12525                           ;main.c: 464: };main.c: 465: lumAlarm.triggered = 1;
 12526  04B0  01D6               	clrf	_lumAlarm+2
 12527  04B1  0AD6               	incf	_lumAlarm+2,f
 12528  04B2                     i1l4465:
 12529                           
 12530                           ;main.c: 467: lumAlarm.trigger = 1;
 12531  04B2  01D5               	clrf	_lumAlarm+1
 12532  04B3  0AD5               	incf	_lumAlarm+1,f
 12533  04B4                     i1l4467:
 12534  04B4  1616               	bsf	22,4	;volatile
 12535  04B5  2CB8               	goto	i1l4473
 12536  04B6                     i1l4469:
 12537                           
 12538                           ;main.c: 470: lumAlarm.triggered = 0;
 12539  04B6  01D6               	clrf	_lumAlarm+2
 12540  04B7                     i1l4471:
 12541  04B7  1216               	bcf	22,4	;volatile
 12542  04B8                     i1l4473:
 12543                           
 12544                           ;main.c: 472: };main.c: 475: if((tempAlarm.alarmTemp < temp) && (editingTempAlarm == 0))
      +                          {
 12545  04B8  086D               	movf	_temp,w
 12546  04B9  0257               	subwf	_tempAlarm,w
 12547  04BA  1803               	skipnc
 12548  04BB  2CBD               	goto	u405_21
 12549  04BC  2CBE               	goto	u405_20
 12550  04BD                     u405_21:
 12551  04BD  2CD2               	goto	i1l4487
 12552  04BE                     u405_20:
 12553  04BE                     i1l4475:
 12554  04BE  086B               	movf	_editingTempAlarm,w
 12555  04BF  1D03               	btfss	3,2
 12556  04C0  2CC2               	goto	u406_21
 12557  04C1  2CC3               	goto	u406_20
 12558  04C2                     u406_21:
 12559  04C2  2CD2               	goto	i1l4487
 12560  04C3                     u406_20:
 12561  04C3                     i1l4477:
 12562                           
 12563                           ;main.c: 476: if(!tempAlarm.triggered){
 12564  04C3  0859               	movf	_tempAlarm+2,w
 12565  04C4  1D03               	btfss	3,2
 12566  04C5  2CC7               	goto	u407_21
 12567  04C6  2CC8               	goto	u407_20
 12568  04C7                     u407_21:
 12569  04C7  2CCC               	goto	i1l4481
 12570  04C8                     u407_20:
 12571  04C8                     i1l4479:
 12572                           
 12573                           ;main.c: 477: alarmPWMStart.h = -1;
 12574  04C8  30FF               	movlw	255
 12575  04C9  00FA               	movwf	??_monitoring_ISR
 12576  04CA  087A               	movf	??_monitoring_ISR,w
 12577  04CB  00D1               	movwf	_alarmPWMStart
 12578  04CC                     i1l4481:
 12579                           
 12580                           ;main.c: 478: };main.c: 480: tempAlarm.triggered = 1;
 12581  04CC  01D9               	clrf	_tempAlarm+2
 12582  04CD  0AD9               	incf	_tempAlarm+2,f
 12583  04CE                     i1l4483:
 12584                           
 12585                           ;main.c: 482: tempAlarm.trigger = 1;
 12586  04CE  01D8               	clrf	_tempAlarm+1
 12587  04CF  0AD8               	incf	_tempAlarm+1,f
 12588  04D0                     i1l4485:
 12589  04D0  1696               	bsf	22,5	;volatile
 12590  04D1  2CD4               	goto	i1l1199
 12591  04D2                     i1l4487:
 12592                           
 12593                           ;main.c: 486: tempAlarm.triggered = 0;
 12594  04D2  01D9               	clrf	_tempAlarm+2
 12595  04D3                     i1l4489:
 12596  04D3  1296               	bcf	22,5	;volatile
 12597  04D4                     i1l1199:
 12598  04D4  0008               	return
 12599  04D5                     __end_of_monitoring_ISR:
 12600                           
 12601                           	psect	text31
 12602  04D5                     __ptext31:	
 12603 ;; *************** function _tsttc *****************
 12604 ;; Defined at:
 12605 ;;		line 63 in file "main.c"
 12606 ;; Parameters:    Size  Location     Type
 12607 ;;		None
 12608 ;; Auto vars:     Size  Location     Type
 12609 ;;  value           1    3[COMMON] unsigned char 
 12610 ;; Return value:  Size  Location     Type
 12611 ;;                  1    wreg      unsigned char 
 12612 ;; Registers used:
 12613 ;;		wreg, status,2, status,0, pclath, cstack
 12614 ;; Tracked objects:
 12615 ;;		On entry : 0/0
 12616 ;;		On exit  : 0/0
 12617 ;;		Unchanged: 0/0
 12618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12620 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12621 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12622 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12623 ;;Total ram usage:        2 bytes
 12624 ;; Hardware stack levels used:    1
 12625 ;; Hardware stack levels required when called:    1
 12626 ;; This function calls:
 12627 ;;		_ReadI2C
 12628 ;;		i1_WriteI2C
 12629 ;; This function is called by:
 12630 ;;		_monitoring_ISR
 12631 ;; This function uses a non-reentrant model
 12632 ;;
 12633                           
 12634                           
 12635                           ;psect for function _tsttc
 12636  04D5                     _tsttc:
 12637  04D5                     i1l846:	
 12638                           ;incstack = 0
 12639                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 12640                           ;main.c: 65: unsigned char value;;main.c: 66: do{
 12641                           
 12642  04D5                     i1l3859:	
 12643                           ;main.c: 67: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12644                           
 12645  04D5  0023               	movlb	3	; select bank3
 12646  04D6  0C0F               	rrf	15,w	;volatile
 12647  04D7  0C89               	rrf	9,f
 12648  04D8  3901               	andlw	1
 12649  04D9  00F2               	movwf	??_tsttc
 12650  04DA  0811               	movf	17,w	;volatile
 12651  04DB  391F               	andlw	31
 12652  04DC  0472               	iorwf	??_tsttc,w
 12653  04DD  1D03               	btfss	3,2
 12654  04DE  2CE0               	goto	u297_21
 12655  04DF  2CE1               	goto	u297_20
 12656  04E0                     u297_21:
 12657  04E0  2CD5               	goto	i1l3859
 12658  04E1                     u297_20:
 12659  04E1                     i1l849:
 12660                           
 12661                           ;main.c: 68: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 12662  04E1  1411               	bsf	17,0	;volatile
 12663  04E2                     i1l850:
 12664  04E2  1811               	btfsc	17,0	;volatile
 12665  04E3  2CE5               	goto	u298_21
 12666  04E4  2CE6               	goto	u298_20
 12667  04E5                     u298_21:
 12668  04E5  2CE2               	goto	i1l850
 12669  04E6                     u298_20:
 12670  04E6                     i1l3861:
 12671  04E6  0C0F               	rrf	15,w	;volatile
 12672  04E7  0C89               	rrf	9,f
 12673  04E8  3901               	andlw	1
 12674  04E9  00F2               	movwf	??_tsttc
 12675  04EA  0811               	movf	17,w	;volatile
 12676  04EB  391F               	andlw	31
 12677  04EC  0472               	iorwf	??_tsttc,w
 12678  04ED  1D03               	btfss	3,2
 12679  04EE  2CF0               	goto	u299_21
 12680  04EF  2CF1               	goto	u299_20
 12681  04F0                     u299_21:
 12682  04F0  2CE6               	goto	i1l3861
 12683  04F1                     u299_20:
 12684  04F1                     i1l3863:
 12685                           
 12686                           ;main.c: 70: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12687  04F1  309A               	movlw	154
 12688  04F2  318D  25B7  3184   	fcall	i1_WriteI2C
 12689  04F5                     i1l3865:
 12690  04F5  0023               	movlb	3	; select bank3
 12691  04F6  0C0F               	rrf	15,w	;volatile
 12692  04F7  0C89               	rrf	9,f
 12693  04F8  3901               	andlw	1
 12694  04F9  00F2               	movwf	??_tsttc
 12695  04FA  0811               	movf	17,w	;volatile
 12696  04FB  391F               	andlw	31
 12697  04FC  0472               	iorwf	??_tsttc,w
 12698  04FD  1D03               	btfss	3,2
 12699  04FE  2D00               	goto	u300_21
 12700  04FF  2D01               	goto	u300_20
 12701  0500                     u300_21:
 12702  0500  2CF5               	goto	i1l3865
 12703  0501                     u300_20:
 12704  0501                     i1l3867:
 12705                           
 12706                           ;main.c: 71: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12707  0501  3001               	movlw	1
 12708  0502  318D  25B7  3184   	fcall	i1_WriteI2C
 12709  0505                     i1l3869:
 12710  0505  0023               	movlb	3	; select bank3
 12711  0506  0C0F               	rrf	15,w	;volatile
 12712  0507  0C89               	rrf	9,f
 12713  0508  3901               	andlw	1
 12714  0509  00F2               	movwf	??_tsttc
 12715  050A  0811               	movf	17,w	;volatile
 12716  050B  391F               	andlw	31
 12717  050C  0472               	iorwf	??_tsttc,w
 12718  050D  1D03               	btfss	3,2
 12719  050E  2D10               	goto	u301_21
 12720  050F  2D11               	goto	u301_20
 12721  0510                     u301_21:
 12722  0510  2D05               	goto	i1l3869
 12723  0511                     u301_20:
 12724  0511                     i1l861:
 12725                           
 12726                           ;main.c: 72: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 12727  0511  1491               	bsf	17,1	;volatile
 12728  0512                     i1l862:
 12729  0512  1891               	btfsc	17,1	;volatile
 12730  0513  2D15               	goto	u302_21
 12731  0514  2D16               	goto	u302_20
 12732  0515                     u302_21:
 12733  0515  2D12               	goto	i1l862
 12734  0516                     u302_20:
 12735  0516                     i1l3871:
 12736  0516  0C0F               	rrf	15,w	;volatile
 12737  0517  0C89               	rrf	9,f
 12738  0518  3901               	andlw	1
 12739  0519  00F2               	movwf	??_tsttc
 12740  051A  0811               	movf	17,w	;volatile
 12741  051B  391F               	andlw	31
 12742  051C  0472               	iorwf	??_tsttc,w
 12743  051D  1D03               	btfss	3,2
 12744  051E  2D20               	goto	u303_21
 12745  051F  2D21               	goto	u303_20
 12746  0520                     u303_21:
 12747  0520  2D16               	goto	i1l3871
 12748  0521                     u303_20:
 12749  0521                     i1l3873:
 12750                           
 12751                           ;main.c: 73: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12752  0521  309B               	movlw	155
 12753  0522  318D  25B7  3184   	fcall	i1_WriteI2C
 12754  0525                     i1l3875:
 12755  0525  0023               	movlb	3	; select bank3
 12756  0526  0C0F               	rrf	15,w	;volatile
 12757  0527  0C89               	rrf	9,f
 12758  0528  3901               	andlw	1
 12759  0529  00F2               	movwf	??_tsttc
 12760  052A  0811               	movf	17,w	;volatile
 12761  052B  391F               	andlw	31
 12762  052C  0472               	iorwf	??_tsttc,w
 12763  052D  1D03               	btfss	3,2
 12764  052E  2D30               	goto	u304_21
 12765  052F  2D31               	goto	u304_20
 12766  0530                     u304_21:
 12767  0530  2D25               	goto	i1l3875
 12768  0531                     u304_20:
 12769  0531                     i1l3877:
 12770                           
 12771                           ;main.c: 74: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12772  0531  318B  2363  3184   	fcall	_ReadI2C
 12773  0534  00F2               	movwf	??_tsttc
 12774  0535  0872               	movf	??_tsttc,w
 12775  0536  00F3               	movwf	tsttc@value
 12776  0537                     i1l3879:
 12777  0537  0023               	movlb	3	; select bank3
 12778  0538  0C0F               	rrf	15,w	;volatile
 12779  0539  0C89               	rrf	9,f
 12780  053A  3901               	andlw	1
 12781  053B  00F2               	movwf	??_tsttc
 12782  053C  0811               	movf	17,w	;volatile
 12783  053D  391F               	andlw	31
 12784  053E  0472               	iorwf	??_tsttc,w
 12785  053F  1D03               	btfss	3,2
 12786  0540  2D42               	goto	u305_21
 12787  0541  2D43               	goto	u305_20
 12788  0542                     u305_21:
 12789  0542  2D37               	goto	i1l3879
 12790  0543                     u305_20:
 12791  0543                     i1l873:
 12792                           
 12793                           ;main.c: 75: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12794  0543  1691               	bsf	17,5	;volatile
 12795  0544  1611               	bsf	17,4	;volatile
 12796  0545                     i1l874:
 12797  0545  1A11               	btfsc	17,4	;volatile
 12798  0546  2D48               	goto	u306_21
 12799  0547  2D49               	goto	u306_20
 12800  0548                     u306_21:
 12801  0548  2D45               	goto	i1l874
 12802  0549                     u306_20:
 12803  0549                     i1l3881:
 12804  0549  0C0F               	rrf	15,w	;volatile
 12805  054A  0C89               	rrf	9,f
 12806  054B  3901               	andlw	1
 12807  054C  00F2               	movwf	??_tsttc
 12808  054D  0811               	movf	17,w	;volatile
 12809  054E  391F               	andlw	31
 12810  054F  0472               	iorwf	??_tsttc,w
 12811  0550  1D03               	btfss	3,2
 12812  0551  2D53               	goto	u307_21
 12813  0552  2D54               	goto	u307_20
 12814  0553                     u307_21:
 12815  0553  2D49               	goto	i1l3881
 12816  0554                     u307_20:
 12817  0554                     i1l879:
 12818                           
 12819                           ;main.c: 76: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 12820  0554  1511               	bsf	17,2	;volatile
 12821  0555                     i1l880:
 12822  0555  1911               	btfsc	17,2	;volatile
 12823  0556  2D58               	goto	u308_21
 12824  0557  2D59               	goto	u308_20
 12825  0558                     u308_21:
 12826  0558  2D55               	goto	i1l880
 12827  0559                     u308_20:
 12828  0559                     i1l882:
 12829                           
 12830                           ;main.c: 77: } while (!(value & 0x40));
 12831  0559  1F73               	btfss	tsttc@value,6
 12832  055A  2D5C               	goto	u309_21
 12833  055B  2D5D               	goto	u309_20
 12834  055C                     u309_21:
 12835  055C  2CD5               	goto	i1l846
 12836  055D                     u309_20:
 12837  055D                     i1l3883:
 12838  055D  0C0F               	rrf	15,w	;volatile
 12839  055E  0C89               	rrf	9,f
 12840  055F  3901               	andlw	1
 12841  0560  00F2               	movwf	??_tsttc
 12842  0561  0811               	movf	17,w	;volatile
 12843  0562  391F               	andlw	31
 12844  0563  0472               	iorwf	??_tsttc,w
 12845  0564  1D03               	btfss	3,2
 12846  0565  2D67               	goto	u310_21
 12847  0566  2D68               	goto	u310_20
 12848  0567                     u310_21:
 12849  0567  2D5D               	goto	i1l3883
 12850  0568                     u310_20:
 12851  0568                     i1l886:
 12852                           
 12853                           ;main.c: 80: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 12854  0568  1411               	bsf	17,0	;volatile
 12855  0569                     i1l887:
 12856  0569  1811               	btfsc	17,0	;volatile
 12857  056A  2D6C               	goto	u311_21
 12858  056B  2D6D               	goto	u311_20
 12859  056C                     u311_21:
 12860  056C  2D69               	goto	i1l887
 12861  056D                     u311_20:
 12862  056D                     i1l3885:
 12863  056D  0C0F               	rrf	15,w	;volatile
 12864  056E  0C89               	rrf	9,f
 12865  056F  3901               	andlw	1
 12866  0570  00F2               	movwf	??_tsttc
 12867  0571  0811               	movf	17,w	;volatile
 12868  0572  391F               	andlw	31
 12869  0573  0472               	iorwf	??_tsttc,w
 12870  0574  1D03               	btfss	3,2
 12871  0575  2D77               	goto	u312_21
 12872  0576  2D78               	goto	u312_20
 12873  0577                     u312_21:
 12874  0577  2D6D               	goto	i1l3885
 12875  0578                     u312_20:
 12876  0578                     i1l3887:
 12877                           
 12878                           ;main.c: 81: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12879  0578  309A               	movlw	154
 12880  0579  318D  25B7  3184   	fcall	i1_WriteI2C
 12881  057C                     i1l3889:
 12882  057C  0023               	movlb	3	; select bank3
 12883  057D  0C0F               	rrf	15,w	;volatile
 12884  057E  0C89               	rrf	9,f
 12885  057F  3901               	andlw	1
 12886  0580  00F2               	movwf	??_tsttc
 12887  0581  0811               	movf	17,w	;volatile
 12888  0582  391F               	andlw	31
 12889  0583  0472               	iorwf	??_tsttc,w
 12890  0584  1D03               	btfss	3,2
 12891  0585  2D87               	goto	u313_21
 12892  0586  2D88               	goto	u313_20
 12893  0587                     u313_21:
 12894  0587  2D7C               	goto	i1l3889
 12895  0588                     u313_20:
 12896  0588                     i1l3891:
 12897                           
 12898                           ;main.c: 82: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12899  0588  3000               	movlw	0
 12900  0589  318D  25B7  3184   	fcall	i1_WriteI2C
 12901  058C                     i1l3893:
 12902  058C  0023               	movlb	3	; select bank3
 12903  058D  0C0F               	rrf	15,w	;volatile
 12904  058E  0C89               	rrf	9,f
 12905  058F  3901               	andlw	1
 12906  0590  00F2               	movwf	??_tsttc
 12907  0591  0811               	movf	17,w	;volatile
 12908  0592  391F               	andlw	31
 12909  0593  0472               	iorwf	??_tsttc,w
 12910  0594  1D03               	btfss	3,2
 12911  0595  2D97               	goto	u314_21
 12912  0596  2D98               	goto	u314_20
 12913  0597                     u314_21:
 12914  0597  2D8C               	goto	i1l3893
 12915  0598                     u314_20:
 12916  0598                     i1l898:
 12917                           
 12918                           ;main.c: 83: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 12919  0598  1491               	bsf	17,1	;volatile
 12920  0599                     i1l899:
 12921  0599  1891               	btfsc	17,1	;volatile
 12922  059A  2D9C               	goto	u315_21
 12923  059B  2D9D               	goto	u315_20
 12924  059C                     u315_21:
 12925  059C  2D99               	goto	i1l899
 12926  059D                     u315_20:
 12927  059D                     i1l3895:
 12928  059D  0C0F               	rrf	15,w	;volatile
 12929  059E  0C89               	rrf	9,f
 12930  059F  3901               	andlw	1
 12931  05A0  00F2               	movwf	??_tsttc
 12932  05A1  0811               	movf	17,w	;volatile
 12933  05A2  391F               	andlw	31
 12934  05A3  0472               	iorwf	??_tsttc,w
 12935  05A4  1D03               	btfss	3,2
 12936  05A5  2DA7               	goto	u316_21
 12937  05A6  2DA8               	goto	u316_20
 12938  05A7                     u316_21:
 12939  05A7  2D9D               	goto	i1l3895
 12940  05A8                     u316_20:
 12941  05A8                     i1l3897:
 12942                           
 12943                           ;main.c: 84: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12944  05A8  309B               	movlw	155
 12945  05A9  318D  25B7  3184   	fcall	i1_WriteI2C
 12946  05AC                     i1l3899:
 12947  05AC  0023               	movlb	3	; select bank3
 12948  05AD  0C0F               	rrf	15,w	;volatile
 12949  05AE  0C89               	rrf	9,f
 12950  05AF  3901               	andlw	1
 12951  05B0  00F2               	movwf	??_tsttc
 12952  05B1  0811               	movf	17,w	;volatile
 12953  05B2  391F               	andlw	31
 12954  05B3  0472               	iorwf	??_tsttc,w
 12955  05B4  1D03               	btfss	3,2
 12956  05B5  2DB7               	goto	u317_21
 12957  05B6  2DB8               	goto	u317_20
 12958  05B7                     u317_21:
 12959  05B7  2DAC               	goto	i1l3899
 12960  05B8                     u317_20:
 12961  05B8                     i1l3901:
 12962                           
 12963                           ;main.c: 85: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12964  05B8  318B  2363  3184   	fcall	_ReadI2C
 12965  05BB  00F2               	movwf	??_tsttc
 12966  05BC  0872               	movf	??_tsttc,w
 12967  05BD  00F3               	movwf	tsttc@value
 12968  05BE                     i1l3903:
 12969  05BE  0023               	movlb	3	; select bank3
 12970  05BF  0C0F               	rrf	15,w	;volatile
 12971  05C0  0C89               	rrf	9,f
 12972  05C1  3901               	andlw	1
 12973  05C2  00F2               	movwf	??_tsttc
 12974  05C3  0811               	movf	17,w	;volatile
 12975  05C4  391F               	andlw	31
 12976  05C5  0472               	iorwf	??_tsttc,w
 12977  05C6  1D03               	btfss	3,2
 12978  05C7  2DC9               	goto	u318_21
 12979  05C8  2DCA               	goto	u318_20
 12980  05C9                     u318_21:
 12981  05C9  2DBE               	goto	i1l3903
 12982  05CA                     u318_20:
 12983  05CA                     i1l910:
 12984                           
 12985                           ;main.c: 86: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12986  05CA  1691               	bsf	17,5	;volatile
 12987  05CB  1611               	bsf	17,4	;volatile
 12988  05CC                     i1l911:
 12989  05CC  1A11               	btfsc	17,4	;volatile
 12990  05CD  2DCF               	goto	u319_21
 12991  05CE  2DD0               	goto	u319_20
 12992  05CF                     u319_21:
 12993  05CF  2DCC               	goto	i1l911
 12994  05D0                     u319_20:
 12995  05D0                     i1l3905:
 12996  05D0  0C0F               	rrf	15,w	;volatile
 12997  05D1  0C89               	rrf	9,f
 12998  05D2  3901               	andlw	1
 12999  05D3  00F2               	movwf	??_tsttc
 13000  05D4  0811               	movf	17,w	;volatile
 13001  05D5  391F               	andlw	31
 13002  05D6  0472               	iorwf	??_tsttc,w
 13003  05D7  1D03               	btfss	3,2
 13004  05D8  2DDA               	goto	u320_21
 13005  05D9  2DDB               	goto	u320_20
 13006  05DA                     u320_21:
 13007  05DA  2DD0               	goto	i1l3905
 13008  05DB                     u320_20:
 13009  05DB                     i1l916:
 13010                           
 13011                           ;main.c: 87: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 13012  05DB  1511               	bsf	17,2	;volatile
 13013  05DC                     i1l917:
 13014  05DC  1911               	btfsc	17,2	;volatile
 13015  05DD  2DDF               	goto	u321_21
 13016  05DE  2DE0               	goto	u321_20
 13017  05DF                     u321_21:
 13018  05DF  2DDC               	goto	i1l917
 13019  05E0                     u321_20:
 13020  05E0                     i1l3907:
 13021                           
 13022                           ;main.c: 89: return value;
 13023  05E0  0873               	movf	tsttc@value,w
 13024  05E1                     i1l920:
 13025  05E1  0008               	return
 13026  05E2                     __end_of_tsttc:
 13027                           
 13028                           	psect	text32
 13029  0B63                     __ptext32:	
 13030 ;; *************** function _ReadI2C *****************
 13031 ;; Defined at:
 13032 ;;		line 32 in file "I2C/i2c.c"
 13033 ;; Parameters:    Size  Location     Type
 13034 ;;		None
 13035 ;; Auto vars:     Size  Location     Type
 13036 ;;		None
 13037 ;; Return value:  Size  Location     Type
 13038 ;;                  1    wreg      unsigned char 
 13039 ;; Registers used:
 13040 ;;		wreg, status,2, status,0
 13041 ;; Tracked objects:
 13042 ;;		On entry : 0/0
 13043 ;;		On exit  : 0/0
 13044 ;;		Unchanged: 0/0
 13045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13048 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13049 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13050 ;;Total ram usage:        1 bytes
 13051 ;; Hardware stack levels used:    1
 13052 ;; This function calls:
 13053 ;;		Nothing
 13054 ;; This function is called by:
 13055 ;;		_tsttc
 13056 ;;		_LCDrecv
 13057 ;; This function uses a non-reentrant model
 13058 ;;
 13059                           
 13060                           
 13061                           ;psect for function _ReadI2C
 13062  0B63                     _ReadI2C:
 13063  0B63                     i1l3719:	
 13064                           ;incstack = 0
 13065                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 13066                           
 13067                           
 13068                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 13069  0B63  300F               	movlw	15
 13070  0B64  0023               	movlb	3	; select bank3
 13071  0B65  0510               	andwf	16,w	;volatile
 13072  0B66  00F0               	movwf	??_ReadI2C
 13073  0B67  3008               	movlw	8
 13074  0B68  0670               	xorwf	??_ReadI2C,w
 13075  0B69  1903               	btfsc	3,2
 13076  0B6A  2B6C               	goto	u265_21
 13077  0B6B  2B6D               	goto	u265_20
 13078  0B6C                     u265_21:
 13079  0B6C  2B76               	goto	i1l22
 13080  0B6D                     u265_20:
 13081  0B6D                     i1l3721:
 13082  0B6D  300F               	movlw	15
 13083  0B6E  0510               	andwf	16,w	;volatile
 13084  0B6F  00F0               	movwf	??_ReadI2C
 13085  0B70  300B               	movlw	11
 13086  0B71  0670               	xorwf	??_ReadI2C,w
 13087  0B72  1D03               	btfss	3,2
 13088  0B73  2B75               	goto	u266_21
 13089  0B74  2B76               	goto	u266_20
 13090  0B75                     u266_21:
 13091  0B75  2B77               	goto	i1l23
 13092  0B76                     u266_20:
 13093  0B76                     i1l22:
 13094                           
 13095                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
 13096  0B76  1591               	bsf	17,3	;volatile
 13097  0B77                     i1l23:
 13098  0B77  1C0F               	btfss	15,0	;volatile
 13099  0B78  2B7A               	goto	u267_21
 13100  0B79  2B7B               	goto	u267_20
 13101  0B7A                     u267_21:
 13102  0B7A  2B77               	goto	i1l23
 13103  0B7B                     u267_20:
 13104  0B7B                     i1l3723:
 13105                           
 13106                           ;i2c.c: 37: return ( SSP1BUF );
 13107  0B7B  080C               	movf	12,w	;volatile
 13108  0B7C                     i1l26:
 13109  0B7C  0008               	return
 13110  0B7D                     __end_of_ReadI2C:
 13111                           
 13112                           	psect	text33
 13113  0B99                     __ptext33:	
 13114 ;; *************** function _DATAEE_WriteByte *****************
 13115 ;; Defined at:
 13116 ;;		line 180 in file "mcc_generated_files/memory.c"
 13117 ;; Parameters:    Size  Location     Type
 13118 ;;  bAdd            2    6[COMMON] unsigned int 
 13119 ;;  bData           1    8[COMMON] unsigned char 
 13120 ;; Auto vars:     Size  Location     Type
 13121 ;;  GIEBitValue     1    9[COMMON] unsigned char 
 13122 ;; Return value:  Size  Location     Type
 13123 ;;                  1    wreg      void 
 13124 ;; Registers used:
 13125 ;;		wreg, status,2, status,0
 13126 ;; Tracked objects:
 13127 ;;		On entry : 0/0
 13128 ;;		On exit  : 0/0
 13129 ;;		Unchanged: 0/0
 13130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13131 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13134 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13135 ;;Total ram usage:        4 bytes
 13136 ;; Hardware stack levels used:    1
 13137 ;; This function calls:
 13138 ;;		Nothing
 13139 ;; This function is called by:
 13140 ;;		_monitoring_ISR
 13141 ;; This function uses a non-reentrant model
 13142 ;;
 13143                           
 13144                           
 13145                           ;psect for function _DATAEE_WriteByte
 13146  0B99                     _DATAEE_WriteByte:
 13147  0B99                     i1l4045:	
 13148                           ;incstack = 0
 13149                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 13150                           
 13151                           
 13152                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 13153  0B99  3000               	movlw	0
 13154  0B9A  1B8B               	btfsc	11,7	;volatile
 13155  0B9B  3001               	movlw	1
 13156  0B9C  00F9               	movwf	DATAEE_WriteByte@GIEBitValue
 13157                           
 13158                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 13159  0B9D  0877               	movf	DATAEE_WriteByte@bAdd+1,w
 13160  0B9E  0030               	movlb	16	; select bank16
 13161  0B9F  009B               	movwf	27	;volatile
 13162  0BA0                     i1l4047:
 13163                           
 13164                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 13165  0BA0  0876               	movf	DATAEE_WriteByte@bAdd,w
 13166  0BA1  009A               	movwf	26	;volatile
 13167  0BA2                     i1l4049:
 13168                           
 13169                           ;memory.c: 186: NVMDATL = bData;
 13170  0BA2  0878               	movf	DATAEE_WriteByte@bData,w
 13171  0BA3  009C               	movwf	28	;volatile
 13172  0BA4                     i1l4051:
 13173                           
 13174                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 13175  0BA4  171E               	bsf	30,6	;volsfr
 13176  0BA5                     i1l4053:
 13177                           
 13178                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 13179  0BA5  151E               	bsf	30,2	;volsfr
 13180  0BA6                     i1l4055:
 13181                           
 13182                           ;memory.c: 189: INTCONbits.GIE = 0;
 13183  0BA6  138B               	bcf	11,7	;volatile
 13184  0BA7                     i1l4057:
 13185                           
 13186                           ;memory.c: 190: NVMCON2 = 0x55;
 13187  0BA7  3055               	movlw	85
 13188  0BA8  009F               	movwf	31	;volsfr
 13189  0BA9                     i1l4059:
 13190                           
 13191                           ;memory.c: 191: NVMCON2 = 0xAA;
 13192  0BA9  30AA               	movlw	170
 13193  0BAA  009F               	movwf	31	;volsfr
 13194  0BAB                     i1l4061:
 13195                           
 13196                           ;memory.c: 192: NVMCON1bits.WR = 1;
 13197  0BAB  149E               	bsf	30,1	;volsfr
 13198  0BAC                     i1l1321:	
 13199                           ;memory.c: 195: {
 13200                           
 13201  0BAC  189E               	btfsc	30,1	;volsfr
 13202  0BAD  2BAF               	goto	u343_21
 13203  0BAE  2BB0               	goto	u343_20
 13204  0BAF                     u343_21:
 13205  0BAF  2BAC               	goto	i1l1321
 13206  0BB0                     u343_20:
 13207  0BB0                     i1l1323:
 13208                           
 13209                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 13210  0BB0  111E               	bcf	30,2	;volsfr
 13211  0BB1                     i1l4063:
 13212                           
 13213                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 13214  0BB1  0C79               	rrf	DATAEE_WriteByte@GIEBitValue,w
 13215  0BB2  1C03               	skipc
 13216  0BB3  138B               	bcf	11,7	;volatile
 13217  0BB4  1803               	skipnc
 13218  0BB5  178B               	bsf	11,7	;volatile
 13219  0BB6                     i1l1324:
 13220  0BB6  0008               	return
 13221  0BB7                     __end_of_DATAEE_WriteByte:
 13222                           
 13223                           	psect	text34
 13224  0AA0                     __ptext34:	
 13225 ;; *************** function _ADCC_GetSingleConversion *****************
 13226 ;; Defined at:
 13227 ;;		line 130 in file "mcc_generated_files/adcc.c"
 13228 ;; Parameters:    Size  Location     Type
 13229 ;;  channel         1    wreg     enum E12086
 13230 ;; Auto vars:     Size  Location     Type
 13231 ;;  channel         1    3[COMMON] enum E12086
 13232 ;; Return value:  Size  Location     Type
 13233 ;;                  2    0[COMMON] unsigned int 
 13234 ;; Registers used:
 13235 ;;		wreg
 13236 ;; Tracked objects:
 13237 ;;		On entry : 0/0
 13238 ;;		On exit  : 0/0
 13239 ;;		Unchanged: 0/0
 13240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13241 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13242 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13244 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13245 ;;Total ram usage:        4 bytes
 13246 ;; Hardware stack levels used:    1
 13247 ;; This function calls:
 13248 ;;		Nothing
 13249 ;; This function is called by:
 13250 ;;		_monitoring_ISR
 13251 ;; This function uses a non-reentrant model
 13252 ;;
 13253                           
 13254                           
 13255                           ;psect for function _ADCC_GetSingleConversion
 13256  0AA0                     _ADCC_GetSingleConversion:
 13257                           
 13258                           ;incstack = 0
 13259                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 13260                           ;ADCC_GetSingleConversion@channel stored from wreg
 13261  0AA0  00F3               	movwf	ADCC_GetSingleConversion@channel
 13262  0AA1                     i1l3841:
 13263                           
 13264                           ;adcc.c: 133: ADPCH = channel;
 13265  0AA1  0873               	movf	ADCC_GetSingleConversion@channel,w
 13266  0AA2  0021               	movlb	1	; select bank1
 13267  0AA3  009E               	movwf	30	;volatile
 13268  0AA4                     i1l3843:
 13269                           
 13270                           ;adcc.c: 136: ADCON0bits.ADON = 1;
 13271  0AA4  1793               	bsf	19,7	;volatile
 13272  0AA5                     i1l3845:
 13273                           
 13274                           ;adcc.c: 139: ADCON0bits.ADCONT = 0;
 13275  0AA5  1313               	bcf	19,6	;volatile
 13276  0AA6                     i1l3847:
 13277                           
 13278                           ;adcc.c: 142: ADCON0bits.ADGO = 1;
 13279  0AA6  1413               	bsf	19,0	;volatile
 13280  0AA7                     i1l3849:
 13281                           
 13282                           ;adcc.c: 145: __nop();
 13283  0AA7  0000               	nop
 13284  0AA8                     i1l575:	
 13285                           ;adcc.c: 149: {
 13286                           
 13287  0AA8  0021               	movlb	1	; select bank1
 13288  0AA9  1813               	btfsc	19,0	;volatile
 13289  0AAA  2AAC               	goto	u296_21
 13290  0AAB  2AAD               	goto	u296_20
 13291  0AAC                     u296_21:
 13292  0AAC  2AA8               	goto	i1l575
 13293  0AAD                     u296_20:
 13294  0AAD                     i1l3851:
 13295                           
 13296                           ;adcc.c: 150: };adcc.c: 154: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 13297  0AAD  080D               	movf	13,w	;volatile
 13298  0AAE  00F1               	movwf	?_ADCC_GetSingleConversion+1
 13299  0AAF  080C               	movf	12,w	;volatile
 13300  0AB0  00F0               	movwf	?_ADCC_GetSingleConversion
 13301  0AB1                     i1l578:
 13302  0AB1  0008               	return
 13303  0AB2                     __end_of_ADCC_GetSingleConversion:
 13304                           
 13305                           	psect	text35
 13306  0A7D                     __ptext35:	
 13307 ;; *************** function _TMR5_WriteTimer *****************
 13308 ;; Defined at:
 13309 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 13310 ;; Parameters:    Size  Location     Type
 13311 ;;  timerVal        2    0[COMMON] unsigned int 
 13312 ;; Auto vars:     Size  Location     Type
 13313 ;;		None
 13314 ;; Return value:  Size  Location     Type
 13315 ;;                  1    wreg      void 
 13316 ;; Registers used:
 13317 ;;		wreg, status,2
 13318 ;; Tracked objects:
 13319 ;;		On entry : 0/0
 13320 ;;		On exit  : 0/0
 13321 ;;		Unchanged: 0/0
 13322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13327 ;;Total ram usage:        2 bytes
 13328 ;; Hardware stack levels used:    1
 13329 ;; This function calls:
 13330 ;;		Nothing
 13331 ;; This function is called by:
 13332 ;;		_TMR5_ISR
 13333 ;;		_TMR5_Reload
 13334 ;; This function uses a non-reentrant model
 13335 ;;
 13336                           
 13337                           
 13338                           ;psect for function _TMR5_WriteTimer
 13339  0A7D                     _TMR5_WriteTimer:
 13340  0A7D                     i1l4227:	
 13341                           ;incstack = 0
 13342                           ; Regs used in _TMR5_WriteTimer: [wreg+status,2]
 13343                           
 13344                           
 13345                           ;tmr5.c: 130: if (T5CONbits.nT5SYNC == 1)
 13346  0A7D  0024               	movlb	4	; select bank4
 13347  0A7E  1D1A               	btfss	26,2	;volatile
 13348  0A7F  2A81               	goto	u347_21
 13349  0A80  2A82               	goto	u347_20
 13350  0A81                     u347_21:
 13351  0A81  2A89               	goto	i1l4237
 13352  0A82                     u347_20:
 13353  0A82                     i1l4229:
 13354                           
 13355                           ;tmr5.c: 131: {;tmr5.c: 133: T5CONbits.TMR5ON = 0;
 13356  0A82  101A               	bcf	26,0	;volatile
 13357  0A83                     i1l4231:
 13358                           
 13359                           ;tmr5.c: 136: TMR5H = (timerVal >> 8);
 13360  0A83  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 13361  0A84  0099               	movwf	25	;volatile
 13362  0A85                     i1l4233:
 13363                           
 13364                           ;tmr5.c: 137: TMR5L = timerVal;
 13365  0A85  0870               	movf	TMR5_WriteTimer@timerVal,w
 13366  0A86  0098               	movwf	24	;volatile
 13367  0A87                     i1l4235:
 13368                           
 13369                           ;tmr5.c: 140: T5CONbits.TMR5ON =1;
 13370  0A87  141A               	bsf	26,0	;volatile
 13371                           
 13372                           ;tmr5.c: 141: }
 13373  0A88  2A8D               	goto	i1l689
 13374  0A89                     i1l4237:
 13375                           
 13376                           ;tmr5.c: 142: else;tmr5.c: 143: {;tmr5.c: 145: TMR5H = (timerVal >> 8);
 13377  0A89  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 13378  0A8A  0099               	movwf	25	;volatile
 13379  0A8B                     i1l4239:
 13380                           
 13381                           ;tmr5.c: 146: TMR5L = timerVal;
 13382  0A8B  0870               	movf	TMR5_WriteTimer@timerVal,w
 13383  0A8C  0098               	movwf	24	;volatile
 13384  0A8D                     i1l689:
 13385  0A8D  0008               	return
 13386  0A8E                     __end_of_TMR5_WriteTimer:
 13387                           
 13388                           	psect	text36
 13389  0B05                     __ptext36:	
 13390 ;; *************** function _TMR3_ISR *****************
 13391 ;; Defined at:
 13392 ;;		line 164 in file "mcc_generated_files/tmr3.c"
 13393 ;; Parameters:    Size  Location     Type
 13394 ;;		None
 13395 ;; Auto vars:     Size  Location     Type
 13396 ;;		None
 13397 ;; Return value:  Size  Location     Type
 13398 ;;                  1    wreg      void 
 13399 ;; Registers used:
 13400 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13401 ;; Tracked objects:
 13402 ;;		On entry : 0/0
 13403 ;;		On exit  : 0/0
 13404 ;;		Unchanged: 0/0
 13405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13410 ;;Total ram usage:        0 bytes
 13411 ;; Hardware stack levels used:    1
 13412 ;; Hardware stack levels required when called:    5
 13413 ;; This function calls:
 13414 ;;		Absolute function
 13415 ;;		_TMR3_DefaultInterruptHandler
 13416 ;;		_TMR3_WriteTimer
 13417 ;;		_menuLCD_ISR
 13418 ;; This function is called by:
 13419 ;;		_INTERRUPT_InterruptManager
 13420 ;; This function uses a non-reentrant model
 13421 ;;
 13422                           
 13423                           
 13424                           ;psect for function _TMR3_ISR
 13425  0B05                     _TMR3_ISR:
 13426  0B05                     i1l4529:	
 13427                           ;incstack = 0
 13428                           ; Regs used in _TMR3_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13429                           
 13430                           
 13431                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
 13432  0B05  002E               	movlb	14	; select bank14
 13433  0B06  1110               	bcf	16,2	;volatile
 13434  0B07                     i1l4531:
 13435                           
 13436                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
 13437  0B07  0020               	movlb	0	; select bank0
 13438  0B08  086F               	movf	_timer3ReloadVal+1,w	;volatile
 13439  0B09  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 13440  0B0A  086E               	movf	_timer3ReloadVal,w	;volatile
 13441  0B0B  00F0               	movwf	TMR3_WriteTimer@timerVal
 13442  0B0C  318A  226C  318B   	fcall	_TMR3_WriteTimer
 13443  0B0F                     i1l4533:
 13444                           
 13445                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
 13446  0B0F  0021               	movlb	1	; select bank1
 13447  0B10  0824               	movf	_TMR3_InterruptHandler^(0+128),w
 13448  0B11  0425               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 13449  0B12  1903               	btfsc	3,2
 13450  0B13  2B15               	goto	u410_21
 13451  0B14  2B16               	goto	u410_20
 13452  0B15                     u410_21:
 13453  0B15  2B1B               	goto	i1l478
 13454  0B16                     u410_20:
 13455  0B16                     i1l4535:
 13456                           
 13457                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
 13458  0B16  0825               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 13459  0B17  008A               	movwf	10
 13460  0B18  0824               	movf	_TMR3_InterruptHandler^(0+128),w
 13461  0B19  000A               	callw
 13462  0B1A  318B               	pagesel	$
 13463  0B1B                     i1l478:
 13464  0B1B  0008               	return
 13465  0B1C                     __end_of_TMR3_ISR:
 13466                           
 13467                           	psect	text37
 13468  07FF                     __ptext37:	
 13469 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 13470 ;; Defined at:
 13471 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 13472 ;; Parameters:    Size  Location     Type
 13473 ;;		None
 13474 ;; Auto vars:     Size  Location     Type
 13475 ;;		None
 13476 ;; Return value:  Size  Location     Type
 13477 ;;                  1    wreg      void 
 13478 ;; Registers used:
 13479 ;;		None
 13480 ;; Tracked objects:
 13481 ;;		On entry : 0/0
 13482 ;;		On exit  : 0/0
 13483 ;;		Unchanged: 0/0
 13484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13489 ;;Total ram usage:        0 bytes
 13490 ;; Hardware stack levels used:    1
 13491 ;; This function calls:
 13492 ;;		Nothing
 13493 ;; This function is called by:
 13494 ;;		_TMR3_Initialize
 13495 ;;		_TMR3_ISR
 13496 ;; This function uses a non-reentrant model
 13497 ;;
 13498                           
 13499                           
 13500                           ;psect for function _TMR3_DefaultInterruptHandler
 13501  07FF                     _TMR3_DefaultInterruptHandler:
 13502  07FF                     i1l484:	
 13503                           ;incstack = 0
 13504                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 13505                           
 13506  07FF  0008               	return
 13507  0800                     __end_of_TMR3_DefaultInterruptHandler:
 13508                           
 13509                           	psect	text38
 13510  0062                     __ptext38:	
 13511 ;; *************** function _menuLCD_ISR *****************
 13512 ;; Defined at:
 13513 ;;		line 324 in file "main.c"
 13514 ;; Parameters:    Size  Location     Type
 13515 ;;		None
 13516 ;; Auto vars:     Size  Location     Type
 13517 ;;  diff            3   42[BANK0 ] struct Time
 13518 ;;  str             8   27[BANK0 ] unsigned char [8]
 13519 ;;  tt              4   35[BANK0 ] unsigned char [4]
 13520 ;;  l               3   39[BANK0 ] unsigned char [3]
 13521 ;; Return value:  Size  Location     Type
 13522 ;;                  1    wreg      void 
 13523 ;; Registers used:
 13524 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13525 ;; Tracked objects:
 13526 ;;		On entry : 0/0
 13527 ;;		On exit  : 0/0
 13528 ;;		Unchanged: 0/0
 13529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13531 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13532 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13533 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13534 ;;Total ram usage:       24 bytes
 13535 ;; Hardware stack levels used:    1
 13536 ;; Hardware stack levels required when called:    4
 13537 ;; This function calls:
 13538 ;;		_LCDchar
 13539 ;;		_LCDcmd
 13540 ;;		_LCDstr
 13541 ;;		_PWM_Output_D4_Enable
 13542 ;;		_TMR2_StartTimer
 13543 ;;		_differenceBetweenTimePeriod
 13544 ;;		_sprintf
 13545 ;;		i1_PWM6_LoadDutyValue
 13546 ;;		i1_PWM_Output_D4_Disable
 13547 ;;		i1_TMR2_StopTimer
 13548 ;; This function is called by:
 13549 ;;		_main
 13550 ;;		_TMR3_ISR
 13551 ;; This function uses a non-reentrant model
 13552 ;;
 13553                           
 13554                           
 13555                           ;psect for function _menuLCD_ISR
 13556  0062                     _menuLCD_ISR:
 13557  0062                     i1l4327:	
 13558                           ;incstack = 0
 13559                           ; Regs used in _menuLCD_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13560                           
 13561                           
 13562                           ;main.c: 325: char str[8];;main.c: 326: if(editingClockAlarm){
 13563  0062  0020               	movlb	0	; select bank0
 13564  0063  0866               	movf	_editingClockAlarm,w
 13565  0064  0467               	iorwf	_editingClockAlarm+1,w
 13566  0065  1903               	btfsc	3,2
 13567  0066  2868               	goto	u376_21
 13568  0067  2869               	goto	u376_20
 13569  0068                     u376_21:
 13570  0068  2887               	goto	i1l4331
 13571  0069                     u376_20:
 13572  0069                     i1l4329:
 13573                           
 13574                           ;main.c: 327: sprintf(str, "%02d:%02d:%02d", clkAlarm.alarmVal.h,clkAlarm.alarmVal.m,clk
      +                          Alarm.alarmVal.s);
 13575  0069  3000               	movlw	low (STR_1| (0+32768))
 13576  006A  00A0               	movwf	sprintf@f
 13577  006B  3090               	movlw	high (STR_1| (0+32768))
 13578  006C  00A1               	movwf	sprintf@f+1
 13579  006D  084D               	movf	_clkAlarm,w
 13580  006E  00B5               	movwf	??_menuLCD_ISR
 13581  006F  01B6               	clrf	??_menuLCD_ISR+1
 13582  0070  0835               	movf	??_menuLCD_ISR,w
 13583  0071  00A2               	movwf	?_sprintf+2
 13584  0072  0836               	movf	??_menuLCD_ISR+1,w
 13585  0073  00A3               	movwf	?_sprintf+3
 13586  0074  084E               	movf	_clkAlarm+1,w
 13587  0075  00B7               	movwf	??_menuLCD_ISR+2
 13588  0076  01B8               	clrf	??_menuLCD_ISR+3
 13589  0077  0837               	movf	??_menuLCD_ISR+2,w
 13590  0078  00A4               	movwf	?_sprintf+4
 13591  0079  0838               	movf	??_menuLCD_ISR+3,w
 13592  007A  00A5               	movwf	?_sprintf+5
 13593  007B  084F               	movf	_clkAlarm+2,w
 13594  007C  00B9               	movwf	??_menuLCD_ISR+4
 13595  007D  01BA               	clrf	??_menuLCD_ISR+5
 13596  007E  0839               	movf	??_menuLCD_ISR+4,w
 13597  007F  00A6               	movwf	?_sprintf+6
 13598  0080  083A               	movf	??_menuLCD_ISR+5,w
 13599  0081  00A7               	movwf	?_sprintf+7
 13600  0082  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 13601  0083  3182  2222  3180   	fcall	_sprintf
 13602                           
 13603                           ;main.c: 328: } else {
 13604  0086  28A4               	goto	i1l4333
 13605  0087                     i1l4331:
 13606                           
 13607                           ;main.c: 329: sprintf(str, "%02d:%02d:%02d", t.h,t.m,t.s);
 13608  0087  3000               	movlw	low (STR_1| (0+32768))
 13609  0088  00A0               	movwf	sprintf@f
 13610  0089  3090               	movlw	high (STR_1| (0+32768))
 13611  008A  00A1               	movwf	sprintf@f+1
 13612  008B  085F               	movf	_t,w
 13613  008C  00B5               	movwf	??_menuLCD_ISR
 13614  008D  01B6               	clrf	??_menuLCD_ISR+1
 13615  008E  0835               	movf	??_menuLCD_ISR,w
 13616  008F  00A2               	movwf	?_sprintf+2
 13617  0090  0836               	movf	??_menuLCD_ISR+1,w
 13618  0091  00A3               	movwf	?_sprintf+3
 13619  0092  0860               	movf	_t+1,w
 13620  0093  00B7               	movwf	??_menuLCD_ISR+2
 13621  0094  01B8               	clrf	??_menuLCD_ISR+3
 13622  0095  0837               	movf	??_menuLCD_ISR+2,w
 13623  0096  00A4               	movwf	?_sprintf+4
 13624  0097  0838               	movf	??_menuLCD_ISR+3,w
 13625  0098  00A5               	movwf	?_sprintf+5
 13626  0099  0861               	movf	_t+2,w
 13627  009A  00B9               	movwf	??_menuLCD_ISR+4
 13628  009B  01BA               	clrf	??_menuLCD_ISR+5
 13629  009C  0839               	movf	??_menuLCD_ISR+4,w
 13630  009D  00A6               	movwf	?_sprintf+6
 13631  009E  083A               	movf	??_menuLCD_ISR+5,w
 13632  009F  00A7               	movwf	?_sprintf+7
 13633  00A0  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 13634  00A1  3182  2222  3180   	fcall	_sprintf
 13635  00A4                     i1l4333:
 13636                           
 13637                           ;main.c: 330: };main.c: 331: LCDcmd(0x80);
 13638  00A4  3080               	movlw	128
 13639  00A5  318A  221D  3180   	fcall	_LCDcmd
 13640  00A8                     i1l4335:
 13641                           
 13642                           ;main.c: 332: LCDstr(str);
 13643  00A8  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 13644  00A9  318A  22C4  3180   	fcall	_LCDstr
 13645  00AC                     i1l4337:
 13646                           
 13647                           ;main.c: 335: if(alarmsEnable){
 13648  00AC  0020               	movlb	0	; select bank0
 13649  00AD  085E               	movf	_alarmsEnable,w
 13650  00AE  1903               	btfsc	3,2
 13651  00AF  28B1               	goto	u377_21
 13652  00B0  28B2               	goto	u377_20
 13653  00B1                     u377_21:
 13654  00B1  2971               	goto	i1l4389
 13655  00B2                     u377_20:
 13656  00B2                     i1l4339:
 13657                           
 13658                           ;main.c: 336: LCDcmd(0x8F);
 13659  00B2  308F               	movlw	143
 13660  00B3  318A  221D  3180   	fcall	_LCDcmd
 13661                           
 13662                           ;main.c: 337: LCDchar('A');
 13663  00B6  3041               	movlw	65
 13664  00B7  318A  2224  3180   	fcall	_LCDchar
 13665  00BA                     i1l4341:
 13666                           
 13667                           ;main.c: 340: if(clkAlarm.trigger == 1){
 13668  00BA  0020               	movlb	0	; select bank0
 13669  00BB  0350               	decf	_clkAlarm+3,w
 13670  00BC  1D03               	btfss	3,2
 13671  00BD  28BF               	goto	u378_21
 13672  00BE  28C0               	goto	u378_20
 13673  00BF                     u378_21:
 13674  00BF  28C9               	goto	i1l4345
 13675  00C0                     u378_20:
 13676  00C0                     i1l4343:
 13677                           
 13678                           ;main.c: 341: LCDcmd(0x8B);
 13679  00C0  308B               	movlw	139
 13680  00C1  318A  221D  3180   	fcall	_LCDcmd
 13681                           
 13682                           ;main.c: 342: LCDchar('C');
 13683  00C4  3043               	movlw	67
 13684  00C5  318A  2224  3180   	fcall	_LCDchar
 13685                           
 13686                           ;main.c: 343: } else{
 13687  00C8  28D1               	goto	i1l4347
 13688  00C9                     i1l4345:
 13689                           
 13690                           ;main.c: 344: LCDcmd(0x8B);
 13691  00C9  308B               	movlw	139
 13692  00CA  318A  221D  3180   	fcall	_LCDcmd
 13693                           
 13694                           ;main.c: 345: LCDchar(' ');
 13695  00CD  3020               	movlw	32
 13696  00CE  318A  2224  3180   	fcall	_LCDchar
 13697  00D1                     i1l4347:
 13698                           
 13699                           ;main.c: 346: };main.c: 349: if(tempAlarm.trigger == 1){
 13700  00D1  0020               	movlb	0	; select bank0
 13701  00D2  0358               	decf	_tempAlarm+1,w
 13702  00D3  1D03               	btfss	3,2
 13703  00D4  28D6               	goto	u379_21
 13704  00D5  28D7               	goto	u379_20
 13705  00D6                     u379_21:
 13706  00D6  28E0               	goto	i1l4351
 13707  00D7                     u379_20:
 13708  00D7                     i1l4349:
 13709                           
 13710                           ;main.c: 350: LCDcmd(0x8C);
 13711  00D7  308C               	movlw	140
 13712  00D8  318A  221D  3180   	fcall	_LCDcmd
 13713                           
 13714                           ;main.c: 351: LCDchar('T');
 13715  00DB  3054               	movlw	84
 13716  00DC  318A  2224  3180   	fcall	_LCDchar
 13717                           
 13718                           ;main.c: 352: } else{
 13719  00DF  28E8               	goto	i1l4353
 13720  00E0                     i1l4351:
 13721                           
 13722                           ;main.c: 353: LCDcmd(0x8C);
 13723  00E0  308C               	movlw	140
 13724  00E1  318A  221D  3180   	fcall	_LCDcmd
 13725                           
 13726                           ;main.c: 354: LCDchar(' ');
 13727  00E4  3020               	movlw	32
 13728  00E5  318A  2224  3180   	fcall	_LCDchar
 13729  00E8                     i1l4353:
 13730                           
 13731                           ;main.c: 355: };main.c: 358: if(lumAlarm.trigger == 1){
 13732  00E8  0020               	movlb	0	; select bank0
 13733  00E9  0355               	decf	_lumAlarm+1,w
 13734  00EA  1D03               	btfss	3,2
 13735  00EB  28ED               	goto	u380_21
 13736  00EC  28EE               	goto	u380_20
 13737  00ED                     u380_21:
 13738  00ED  28F7               	goto	i1l4357
 13739  00EE                     u380_20:
 13740  00EE                     i1l4355:
 13741                           
 13742                           ;main.c: 359: LCDcmd(0x8D);
 13743  00EE  308D               	movlw	141
 13744  00EF  318A  221D  3180   	fcall	_LCDcmd
 13745                           
 13746                           ;main.c: 360: LCDchar('L');
 13747  00F2  304C               	movlw	76
 13748  00F3  318A  2224  3180   	fcall	_LCDchar
 13749                           
 13750                           ;main.c: 361: } else{
 13751  00F6  28FF               	goto	i1l4359
 13752  00F7                     i1l4357:
 13753                           
 13754                           ;main.c: 362: LCDcmd(0x8D);
 13755  00F7  308D               	movlw	141
 13756  00F8  318A  221D  3180   	fcall	_LCDcmd
 13757                           
 13758                           ;main.c: 363: LCDchar(' ');
 13759  00FB  3020               	movlw	32
 13760  00FC  318A  2224  3180   	fcall	_LCDchar
 13761  00FF                     i1l4359:
 13762                           
 13763                           ;main.c: 364: };main.c: 365: if(clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigge
      +                          r){
 13764  00FF  0020               	movlb	0	; select bank0
 13765  0100  0850               	movf	_clkAlarm+3,w
 13766  0101  1D03               	btfss	3,2
 13767  0102  2904               	goto	u381_21
 13768  0103  2905               	goto	u381_20
 13769  0104                     u381_21:
 13770  0104  290F               	goto	i1l1147
 13771  0105                     u381_20:
 13772  0105                     i1l4361:
 13773  0105  0858               	movf	_tempAlarm+1,w
 13774  0106  1D03               	btfss	3,2
 13775  0107  2909               	goto	u382_21
 13776  0108  290A               	goto	u382_20
 13777  0109                     u382_21:
 13778  0109  290F               	goto	i1l1147
 13779  010A                     u382_20:
 13780  010A                     i1l4363:
 13781  010A  0855               	movf	_lumAlarm+1,w
 13782  010B  1903               	btfsc	3,2
 13783  010C  290E               	goto	u383_21
 13784  010D  290F               	goto	u383_20
 13785  010E                     u383_21:
 13786  010E  2979               	goto	i1l1156
 13787  010F                     u383_20:
 13788  010F                     i1l1147:
 13789                           
 13790                           ;main.c: 370: };main.c: 371: struct Time diff = {0,0,0};
 13791  010F  0021               	movlb	1	; select bank1
 13792  0110  0834               	movf	menuLCD_ISR@F12809^(0+128),w
 13793  0111  0020               	movlb	0	; select bank0
 13794  0112  00CA               	movwf	menuLCD_ISR@diff
 13795  0113  0021               	movlb	1	; select bank1
 13796  0114  0835               	movf	(menuLCD_ISR@F12809+1)^(0+128),w
 13797  0115  0020               	movlb	0	; select bank0
 13798  0116  00CB               	movwf	menuLCD_ISR@diff+1
 13799  0117  0021               	movlb	1	; select bank1
 13800  0118  0836               	movf	(menuLCD_ISR@F12809+2)^(0+128),w
 13801  0119  0020               	movlb	0	; select bank0
 13802  011A  00CC               	movwf	menuLCD_ISR@diff+2
 13803  011B                     i1l4367:
 13804                           
 13805                           ;main.c: 372: differenceBetweenTimePeriod( t, alarmPWMStart, &diff);
 13806  011B  085F               	movf	_t,w
 13807  011C  00F0               	movwf	differenceBetweenTimePeriod@start
 13808  011D  0860               	movf	_t+1,w
 13809  011E  00F1               	movwf	differenceBetweenTimePeriod@start+1
 13810  011F  0861               	movf	_t+2,w
 13811  0120  00F2               	movwf	differenceBetweenTimePeriod@start+2
 13812  0121  0851               	movf	_alarmPWMStart,w
 13813  0122  00F3               	movwf	differenceBetweenTimePeriod@stop
 13814  0123  0852               	movf	_alarmPWMStart+1,w
 13815  0124  00F4               	movwf	differenceBetweenTimePeriod@stop+1
 13816  0125  0853               	movf	_alarmPWMStart+2,w
 13817  0126  00F5               	movwf	differenceBetweenTimePeriod@stop+2
 13818  0127  304A               	movlw	(low (menuLCD_ISR@diff| 0))& (0+255)
 13819  0128  00B5               	movwf	??_menuLCD_ISR
 13820  0129  0835               	movf	??_menuLCD_ISR,w
 13821  012A  00F6               	movwf	differenceBetweenTimePeriod@diff
 13822  012B  318C  2464  3180   	fcall	_differenceBetweenTimePeriod
 13823  012E                     i1l4369:
 13824                           
 13825                           ;main.c: 375: if(diff.s <= 5){
 13826  012E  3006               	movlw	6
 13827  012F  0020               	movlb	0	; select bank0
 13828  0130  024C               	subwf	menuLCD_ISR@diff+2,w
 13829  0131  1803               	skipnc
 13830  0132  2934               	goto	u384_21
 13831  0133  2935               	goto	u384_20
 13832  0134                     u384_21:
 13833  0134  295F               	goto	i1l1150
 13834  0135                     u384_20:
 13835  0135                     i1l4371:
 13836                           
 13837                           ;main.c: 376: if(PWM6EN==0){
 13838  0135  0027               	movlb	7	; select bank7
 13839  0136  1B8E               	btfsc	14,7	;volatile
 13840  0137  2939               	goto	u385_21
 13841  0138  293A               	goto	u385_20
 13842  0139                     u385_21:
 13843  0139  2940               	goto	i1l4375
 13844  013A                     u385_20:
 13845  013A                     i1l4373:
 13846                           
 13847                           ;main.c: 377: TMR2_StartTimer();
 13848  013A  3189  21F3  3180   	fcall	_TMR2_StartTimer
 13849                           
 13850                           ;main.c: 378: PWM_Output_D4_Enable();
 13851  013D  3189  21E1  3180   	fcall	_PWM_Output_D4_Enable
 13852  0140                     i1l4375:
 13853                           
 13854                           ;main.c: 379: };main.c: 380: if(dimingLed <= 1023){
 13855  0140  0020               	movlb	0	; select bank0
 13856  0141  0869               	movf	_dimingLed+1,w
 13857  0142  3A80               	xorlw	128
 13858  0143  00B5               	movwf	??_menuLCD_ISR
 13859  0144  3084               	movlw	132
 13860  0145  0235               	subwf	??_menuLCD_ISR,w
 13861  0146  1D03               	skipz
 13862  0147  294A               	goto	u386_25
 13863  0148  3000               	movlw	0
 13864  0149  0268               	subwf	_dimingLed,w
 13865  014A                     u386_25:
 13866  014A  1803               	skipnc
 13867  014B  294D               	goto	u386_21
 13868  014C  294E               	goto	u386_20
 13869  014D                     u386_21:
 13870  014D  2954               	goto	i1l4379
 13871  014E                     u386_20:
 13872  014E                     i1l4377:
 13873                           
 13874                           ;main.c: 381: dimingLed += 200;
 13875  014E  30C8               	movlw	200
 13876  014F  0020               	movlb	0	; select bank0
 13877  0150  07E8               	addwf	_dimingLed,f
 13878  0151  3000               	movlw	0
 13879  0152  3DE9               	addwfc	_dimingLed+1,f
 13880                           
 13881                           ;main.c: 382: } else{
 13882  0153  2957               	goto	i1l4381
 13883  0154                     i1l4379:
 13884                           
 13885                           ;main.c: 383: dimingLed = 0;
 13886  0154  0020               	movlb	0	; select bank0
 13887  0155  01E8               	clrf	_dimingLed
 13888  0156  01E9               	clrf	_dimingLed+1
 13889  0157                     i1l4381:
 13890                           
 13891                           ;main.c: 384: };main.c: 385: PWM6_LoadDutyValue(dimingLed);
 13892  0157  0869               	movf	_dimingLed+1,w
 13893  0158  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 13894  0159  0868               	movf	_dimingLed,w
 13895  015A  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 13896  015B  318A  22D8  3180   	fcall	i1_PWM6_LoadDutyValue
 13897                           
 13898                           ;main.c: 386: } else if(PWM6EN==1){
 13899  015E  2979               	goto	i1l1156
 13900  015F                     i1l1150:
 13901  015F  0027               	movlb	7	; select bank7
 13902  0160  1F8E               	btfss	14,7	;volatile
 13903  0161  2963               	goto	u387_21
 13904  0162  2964               	goto	u387_20
 13905  0163                     u387_21:
 13906  0163  2979               	goto	i1l1156
 13907  0164                     u387_20:
 13908  0164                     i1l4383:
 13909                           
 13910                           ;main.c: 387: PWM6_LoadDutyValue(0);
 13911  0164  3000               	movlw	0
 13912  0165  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 13913  0166  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 13914  0167  318A  22D8  3180   	fcall	i1_PWM6_LoadDutyValue
 13915  016A                     i1l4385:
 13916                           
 13917                           ;main.c: 388: TMR2_StopTimer();
 13918  016A  3189  21F7  3180   	fcall	i1_TMR2_StopTimer
 13919  016D                     i1l4387:
 13920                           
 13921                           ;main.c: 389: PWM_Output_D4_Disable();
 13922  016D  3189  21E7  3180   	fcall	i1_PWM_Output_D4_Disable
 13923  0170  2979               	goto	i1l1156
 13924  0171                     i1l4389:
 13925                           
 13926                           ;main.c: 393: LCDcmd(0x8F);
 13927  0171  308F               	movlw	143
 13928  0172  318A  221D  3180   	fcall	_LCDcmd
 13929                           
 13930                           ;main.c: 394: LCDchar('a');
 13931  0175  3061               	movlw	97
 13932  0176  318A  2224  3180   	fcall	_LCDchar
 13933  0179                     i1l1156:
 13934                           
 13935                           ;main.c: 395: };main.c: 397: LCDcmd(0xc0);
 13936  0179  30C0               	movlw	192
 13937  017A  318A  221D  3180   	fcall	_LCDcmd
 13938  017D                     i1l4391:
 13939                           
 13940                           ;main.c: 398: char tt[4];;main.c: 399: if(editingTempAlarm){
 13941  017D  0020               	movlb	0	; select bank0
 13942  017E  086B               	movf	_editingTempAlarm,w
 13943  017F  1903               	btfsc	3,2
 13944  0180  2982               	goto	u388_21
 13945  0181  2983               	goto	u388_20
 13946  0182                     u388_21:
 13947  0182  2993               	goto	i1l4395
 13948  0183                     u388_20:
 13949  0183                     i1l4393:
 13950                           
 13951                           ;main.c: 400: sprintf(tt, "%02d C", tempAlarm.alarmTemp);
 13952  0183  3019               	movlw	low (STR_3| (0+32768))
 13953  0184  00A0               	movwf	sprintf@f
 13954  0185  3090               	movlw	high (STR_3| (0+32768))
 13955  0186  00A1               	movwf	sprintf@f+1
 13956  0187  0857               	movf	_tempAlarm,w
 13957  0188  00B5               	movwf	??_menuLCD_ISR
 13958  0189  01B6               	clrf	??_menuLCD_ISR+1
 13959  018A  0835               	movf	??_menuLCD_ISR,w
 13960  018B  00A2               	movwf	?_sprintf+2
 13961  018C  0836               	movf	??_menuLCD_ISR+1,w
 13962  018D  00A3               	movwf	?_sprintf+3
 13963  018E  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 13964  018F  3182  2222  3180   	fcall	_sprintf
 13965                           
 13966                           ;main.c: 401: } else{
 13967  0192  29A2               	goto	i1l4397
 13968  0193                     i1l4395:
 13969                           
 13970                           ;main.c: 402: sprintf(tt, "%02d C", temp);
 13971  0193  3019               	movlw	low (STR_3| (0+32768))
 13972  0194  00A0               	movwf	sprintf@f
 13973  0195  3090               	movlw	high (STR_3| (0+32768))
 13974  0196  00A1               	movwf	sprintf@f+1
 13975  0197  086D               	movf	_temp,w
 13976  0198  00B5               	movwf	??_menuLCD_ISR
 13977  0199  01B6               	clrf	??_menuLCD_ISR+1
 13978  019A  0835               	movf	??_menuLCD_ISR,w
 13979  019B  00A2               	movwf	?_sprintf+2
 13980  019C  0836               	movf	??_menuLCD_ISR+1,w
 13981  019D  00A3               	movwf	?_sprintf+3
 13982  019E  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 13983  019F  3182  2222  3180   	fcall	_sprintf
 13984  01A2                     i1l4397:
 13985                           
 13986                           ;main.c: 403: };main.c: 404: LCDstr(tt);
 13987  01A2  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 13988  01A3  318A  22C4  3180   	fcall	_LCDstr
 13989  01A6                     i1l4399:
 13990                           
 13991                           ;main.c: 406: LCDcmd(0xcd);
 13992  01A6  30CD               	movlw	205
 13993  01A7  318A  221D  3180   	fcall	_LCDcmd
 13994  01AA                     i1l4401:
 13995                           
 13996                           ;main.c: 407: char l[3];;main.c: 409: if(editingLumAlarm){
 13997  01AA  0020               	movlb	0	; select bank0
 13998  01AB  086A               	movf	_editingLumAlarm,w
 13999  01AC  1903               	btfsc	3,2
 14000  01AD  29AF               	goto	u389_21
 14001  01AE  29B0               	goto	u389_20
 14002  01AF                     u389_21:
 14003  01AF  29C0               	goto	i1l4405
 14004  01B0                     u389_20:
 14005  01B0                     i1l4403:
 14006                           
 14007                           ;main.c: 410: sprintf(l, "L %d", lumAlarm.alarmLum);
 14008  01B0  3020               	movlw	low (STR_5| (0+32768))
 14009  01B1  00A0               	movwf	sprintf@f
 14010  01B2  3090               	movlw	high (STR_5| (0+32768))
 14011  01B3  00A1               	movwf	sprintf@f+1
 14012  01B4  0854               	movf	_lumAlarm,w
 14013  01B5  00B5               	movwf	??_menuLCD_ISR
 14014  01B6  01B6               	clrf	??_menuLCD_ISR+1
 14015  01B7  0835               	movf	??_menuLCD_ISR,w
 14016  01B8  00A2               	movwf	?_sprintf+2
 14017  01B9  0836               	movf	??_menuLCD_ISR+1,w
 14018  01BA  00A3               	movwf	?_sprintf+3
 14019  01BB  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 14020  01BC  3182  2222  3180   	fcall	_sprintf
 14021                           
 14022                           ;main.c: 411: } else{
 14023  01BF  29CF               	goto	i1l4407
 14024  01C0                     i1l4405:
 14025                           
 14026                           ;main.c: 412: sprintf(l, "L %d", lumLevel);
 14027  01C0  3020               	movlw	low (STR_5| (0+32768))
 14028  01C1  00A0               	movwf	sprintf@f
 14029  01C2  3090               	movlw	high (STR_5| (0+32768))
 14030  01C3  00A1               	movwf	sprintf@f+1
 14031  01C4  086C               	movf	_lumLevel,w
 14032  01C5  00B5               	movwf	??_menuLCD_ISR
 14033  01C6  01B6               	clrf	??_menuLCD_ISR+1
 14034  01C7  0835               	movf	??_menuLCD_ISR,w
 14035  01C8  00A2               	movwf	?_sprintf+2
 14036  01C9  0836               	movf	??_menuLCD_ISR+1,w
 14037  01CA  00A3               	movwf	?_sprintf+3
 14038  01CB  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 14039  01CC  3182  2222  3180   	fcall	_sprintf
 14040  01CF                     i1l4407:
 14041                           
 14042                           ;main.c: 413: };main.c: 414: LCDstr(l);
 14043  01CF  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 14044  01D0  318A  22C4  3180   	fcall	_LCDstr
 14045  01D3                     i1l4409:
 14046                           
 14047                           ;main.c: 416: if(mode == 1){
 14048  01D3  0020               	movlb	0	; select bank0
 14049  01D4  0364               	decf	_mode,w
 14050  01D5  0465               	iorwf	_mode+1,w
 14051  01D6  1D03               	btfss	3,2
 14052  01D7  29D9               	goto	u390_21
 14053  01D8  29DA               	goto	u390_20
 14054  01D9                     u390_21:
 14055  01D9  29FE               	goto	i1l4423
 14056  01DA                     u390_20:
 14057  01DA                     i1l4411:
 14058                           
 14059                           ;main.c: 417: if(editingClockAlarm == 1){
 14060  01DA  0366               	decf	_editingClockAlarm,w
 14061  01DB  0467               	iorwf	_editingClockAlarm+1,w
 14062  01DC  1D03               	btfss	3,2
 14063  01DD  29DF               	goto	u391_21
 14064  01DE  29E0               	goto	u391_20
 14065  01DF                     u391_21:
 14066  01DF  29E5               	goto	i1l4415
 14067  01E0                     u391_20:
 14068  01E0                     i1l4413:
 14069                           
 14070                           ;main.c: 418: LCDcmd(0x81);
 14071  01E0  3081               	movlw	129
 14072  01E1  318A  221D  3180   	fcall	_LCDcmd
 14073                           
 14074                           ;main.c: 419: } else if(editingClockAlarm == 2){
 14075  01E4  2A21               	goto	i1l1173
 14076  01E5                     i1l4415:
 14077  01E5  3002               	movlw	2
 14078  01E6  0666               	xorwf	_editingClockAlarm,w
 14079  01E7  0467               	iorwf	_editingClockAlarm+1,w
 14080  01E8  1D03               	btfss	3,2
 14081  01E9  29EB               	goto	u392_21
 14082  01EA  29EC               	goto	u392_20
 14083  01EB                     u392_21:
 14084  01EB  29F1               	goto	i1l4419
 14085  01EC                     u392_20:
 14086  01EC                     i1l4417:
 14087                           
 14088                           ;main.c: 420: LCDcmd(0x84);
 14089  01EC  3084               	movlw	132
 14090  01ED  318A  221D  3180   	fcall	_LCDcmd
 14091                           
 14092                           ;main.c: 421: } else if(editingClockAlarm == 3){
 14093  01F0  2A21               	goto	i1l1173
 14094  01F1                     i1l4419:
 14095  01F1  3003               	movlw	3
 14096  01F2  0666               	xorwf	_editingClockAlarm,w
 14097  01F3  0467               	iorwf	_editingClockAlarm+1,w
 14098  01F4  1D03               	btfss	3,2
 14099  01F5  29F7               	goto	u393_21
 14100  01F6  29F8               	goto	u393_20
 14101  01F7                     u393_21:
 14102  01F7  29FD               	goto	i1l1163
 14103  01F8                     u393_20:
 14104  01F8                     i1l4421:
 14105                           
 14106                           ;main.c: 422: LCDcmd(0x87);
 14107  01F8  3087               	movlw	135
 14108  01F9  318A  221D  3180   	fcall	_LCDcmd
 14109  01FC  2A21               	goto	i1l1173
 14110  01FD                     i1l1163:
 14111                           
 14112                           ;main.c: 423: };main.c: 424: } else if(mode == 2){
 14113  01FD  2A21               	goto	i1l1173
 14114  01FE                     i1l4423:
 14115  01FE  3002               	movlw	2
 14116  01FF  0664               	xorwf	_mode,w
 14117  0200  0465               	iorwf	_mode+1,w
 14118  0201  1D03               	btfss	3,2
 14119  0202  2A04               	goto	u394_21
 14120  0203  2A05               	goto	u394_20
 14121  0204                     u394_21:
 14122  0204  2A0A               	goto	i1l4427
 14123  0205                     u394_20:
 14124  0205                     i1l4425:
 14125                           
 14126                           ;main.c: 425: LCDcmd(0xc1);
 14127  0205  30C1               	movlw	193
 14128  0206  318A  221D  3180   	fcall	_LCDcmd
 14129                           
 14130                           ;main.c: 426: } else if(mode == 3){
 14131  0209  2A21               	goto	i1l1173
 14132  020A                     i1l4427:
 14133  020A  3003               	movlw	3
 14134  020B  0664               	xorwf	_mode,w
 14135  020C  0465               	iorwf	_mode+1,w
 14136  020D  1D03               	btfss	3,2
 14137  020E  2A10               	goto	u395_21
 14138  020F  2A11               	goto	u395_20
 14139  0210                     u395_21:
 14140  0210  2A16               	goto	i1l4431
 14141  0211                     u395_20:
 14142  0211                     i1l4429:
 14143                           
 14144                           ;main.c: 427: LCDcmd(0xcf);
 14145  0211  30CF               	movlw	207
 14146  0212  318A  221D  3180   	fcall	_LCDcmd
 14147                           
 14148                           ;main.c: 428: } else if(mode == 4){
 14149  0215  2A21               	goto	i1l1173
 14150  0216                     i1l4431:
 14151  0216  3004               	movlw	4
 14152  0217  0664               	xorwf	_mode,w
 14153  0218  0465               	iorwf	_mode+1,w
 14154  0219  1D03               	btfss	3,2
 14155  021A  2A1C               	goto	u396_21
 14156  021B  2A1D               	goto	u396_20
 14157  021C                     u396_21:
 14158  021C  2A21               	goto	i1l1173
 14159  021D                     u396_20:
 14160  021D                     i1l4433:
 14161                           
 14162                           ;main.c: 429: LCDcmd(0x8f);
 14163  021D  308F               	movlw	143
 14164  021E  318A  221D  3180   	fcall	_LCDcmd
 14165  0221                     i1l1173:
 14166  0221  0008               	return
 14167  0222                     __end_of_menuLCD_ISR:
 14168                           
 14169                           	psect	text39
 14170  09F7                     __ptext39:	
 14171 ;; *************** function i1_TMR2_StopTimer *****************
 14172 ;; Defined at:
 14173 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 14174 ;; Parameters:    Size  Location     Type
 14175 ;;		None
 14176 ;; Auto vars:     Size  Location     Type
 14177 ;;		None
 14178 ;; Return value:  Size  Location     Type
 14179 ;;                  1    wreg      void 
 14180 ;; Registers used:
 14181 ;;		status,2, status,0, pclath, cstack
 14182 ;; Tracked objects:
 14183 ;;		On entry : 0/0
 14184 ;;		On exit  : 0/0
 14185 ;;		Unchanged: 0/0
 14186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14191 ;;Total ram usage:        0 bytes
 14192 ;; Hardware stack levels used:    1
 14193 ;; Hardware stack levels required when called:    1
 14194 ;; This function calls:
 14195 ;;		i1_TMR2_Stop
 14196 ;; This function is called by:
 14197 ;;		_menuLCD_ISR
 14198 ;; This function uses a non-reentrant model
 14199 ;;
 14200                           
 14201                           
 14202                           ;psect for function i1_TMR2_StopTimer
 14203  09F7                     i1_TMR2_StopTimer:
 14204  09F7                     i1l4067:	
 14205                           ;incstack = 0
 14206                           ; Regs used in i1_TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 14207                           
 14208                           
 14209                           ;tmr2.c: 119: TMR2_Stop();
 14210  09F7  3189  21EA  3189   	fcall	i1_TMR2_Stop
 14211  09FA                     i1l767:
 14212  09FA  0008               	return
 14213  09FB                     __end_ofi1_TMR2_StopTimer:
 14214                           
 14215                           	psect	text40
 14216  09EA                     __ptext40:	
 14217 ;; *************** function i1_TMR2_Stop *****************
 14218 ;; Defined at:
 14219 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 14220 ;; Parameters:    Size  Location     Type
 14221 ;;		None
 14222 ;; Auto vars:     Size  Location     Type
 14223 ;;		None
 14224 ;; Return value:  Size  Location     Type
 14225 ;;                  1    wreg      void 
 14226 ;; Registers used:
 14227 ;;		None
 14228 ;; Tracked objects:
 14229 ;;		On entry : 0/0
 14230 ;;		On exit  : 0/0
 14231 ;;		Unchanged: 0/0
 14232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14237 ;;Total ram usage:        0 bytes
 14238 ;; Hardware stack levels used:    1
 14239 ;; This function calls:
 14240 ;;		Nothing
 14241 ;; This function is called by:
 14242 ;;		i1_TMR2_StopTimer
 14243 ;; This function uses a non-reentrant model
 14244 ;;
 14245                           
 14246                           
 14247                           ;psect for function i1_TMR2_Stop
 14248  09EA                     i1_TMR2_Stop:
 14249  09EA                     i1l3805:	
 14250                           ;incstack = 0
 14251                           ; Regs used in i1_TMR2_Stop: []
 14252                           
 14253                           
 14254                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 14255  09EA  0025               	movlb	5	; select bank5
 14256  09EB  138E               	bcf	14,7	;volatile
 14257  09EC                     i1l764:
 14258  09EC  0008               	return
 14259  09ED                     __end_ofi1_TMR2_Stop:
 14260                           
 14261                           	psect	text41
 14262  09E7                     __ptext41:	
 14263 ;; *************** function i1_PWM_Output_D4_Disable *****************
 14264 ;; Defined at:
 14265 ;;		line 233 in file "main.c"
 14266 ;; Parameters:    Size  Location     Type
 14267 ;;		None
 14268 ;; Auto vars:     Size  Location     Type
 14269 ;;		None
 14270 ;; Return value:  Size  Location     Type
 14271 ;;                  1    wreg      void 
 14272 ;; Registers used:
 14273 ;;		None
 14274 ;; Tracked objects:
 14275 ;;		On entry : 0/0
 14276 ;;		On exit  : 0/0
 14277 ;;		Unchanged: 0/0
 14278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14283 ;;Total ram usage:        0 bytes
 14284 ;; Hardware stack levels used:    1
 14285 ;; This function calls:
 14286 ;;		Nothing
 14287 ;; This function is called by:
 14288 ;;		_menuLCD_ISR
 14289 ;; This function uses a non-reentrant model
 14290 ;;
 14291                           
 14292                           
 14293                           ;psect for function i1_PWM_Output_D4_Disable
 14294  09E7                     i1_PWM_Output_D4_Disable:
 14295  09E7                     i1l4069:	
 14296                           ;incstack = 0
 14297                           ; Regs used in i1_PWM_Output_D4_Disable: []
 14298                           
 14299                           
 14300                           ;main.c: 234: PWM6EN = 0;
 14301  09E7  0027               	movlb	7	; select bank7
 14302  09E8  138E               	bcf	14,7	;volatile
 14303  09E9                     i1l1092:
 14304  09E9  0008               	return
 14305  09EA                     __end_ofi1_PWM_Output_D4_Disable:
 14306                           
 14307                           	psect	text42
 14308  0AD8                     __ptext42:	
 14309 ;; *************** function i1_PWM6_LoadDutyValue *****************
 14310 ;; Defined at:
 14311 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 14312 ;; Parameters:    Size  Location     Type
 14313 ;;  dutyValue       2    0[COMMON] unsigned int 
 14314 ;; Auto vars:     Size  Location     Type
 14315 ;;		None
 14316 ;; Return value:  Size  Location     Type
 14317 ;;                  1    wreg      void 
 14318 ;; Registers used:
 14319 ;;		wreg, status,2, status,0
 14320 ;; Tracked objects:
 14321 ;;		On entry : 0/0
 14322 ;;		On exit  : 0/0
 14323 ;;		Unchanged: 0/0
 14324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14325 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14327 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14328 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14329 ;;Total ram usage:        4 bytes
 14330 ;; Hardware stack levels used:    1
 14331 ;; This function calls:
 14332 ;;		Nothing
 14333 ;; This function is called by:
 14334 ;;		_menuLCD_ISR
 14335 ;; This function uses a non-reentrant model
 14336 ;;
 14337                           
 14338                           
 14339                           ;psect for function i1_PWM6_LoadDutyValue
 14340  0AD8                     i1_PWM6_LoadDutyValue:
 14341  0AD8                     i1l4065:	
 14342                           ;incstack = 0
 14343                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 14344                           
 14345                           
 14346                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 14347  0AD8  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 14348  0AD9  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 14349  0ADA  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 14350  0ADB  00F2               	movwf	??i1_PWM6_LoadDutyValue
 14351  0ADC  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 14352  0ADD  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 14353  0ADE  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 14354  0ADF  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 14355  0AE0  0872               	movf	??i1_PWM6_LoadDutyValue,w
 14356  0AE1  0027               	movlb	7	; select bank7
 14357  0AE2  008D               	movwf	13	;volatile
 14358                           
 14359                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 14360  0AE3  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 14361  0AE4  3903               	andlw	3
 14362  0AE5  00F2               	movwf	??i1_PWM6_LoadDutyValue
 14363  0AE6  3005               	movlw	5
 14364  0AE7                     u344_25:
 14365  0AE7  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 14366  0AE8  3EFF               	addlw	-1
 14367  0AE9  1D03               	skipz
 14368  0AEA  2AE7               	goto	u344_25
 14369  0AEB  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 14370  0AEC  008C               	movwf	12	;volatile
 14371  0AED                     i1l722:
 14372  0AED  0008               	return
 14373  0AEE                     __end_ofi1_PWM6_LoadDutyValue:
 14374                           
 14375                           	psect	text43
 14376  0222                     __ptext43:	
 14377 ;; *************** function _sprintf *****************
 14378 ;; Defined at:
 14379 ;;		line 505 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
 14380 ;; Parameters:    Size  Location     Type
 14381 ;;  sp              1    wreg     PTR unsigned char 
 14382 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 14383 ;;  f               2    0[BANK0 ] PTR const unsigned char 
 14384 ;;		 -> STR_6(5), STR_5(5), STR_4(7), STR_3(7), 
 14385 ;;		 -> STR_2(15), STR_1(15), 
 14386 ;; Auto vars:     Size  Location     Type
 14387 ;;  sp              1   20[BANK0 ] PTR unsigned char 
 14388 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 14389 ;;  tmpval          4    0        struct .
 14390 ;;  width           2   17[BANK0 ] int 
 14391 ;;  val             2   14[BANK0 ] unsigned int 
 14392 ;;  cp              2    0        PTR const unsigned char 
 14393 ;;  len             2    0        unsigned int 
 14394 ;;  c               1   19[BANK0 ] unsigned char 
 14395 ;;  flag            1   16[BANK0 ] unsigned char 
 14396 ;;  prec            1   13[BANK0 ] char 
 14397 ;;  ap              1   12[BANK0 ] PTR void [1]
 14398 ;;		 -> ?_sprintf(2), 
 14399 ;; Return value:  Size  Location     Type
 14400 ;;                  2    0[BANK0 ] int 
 14401 ;; Registers used:
 14402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14403 ;; Tracked objects:
 14404 ;;		On entry : 0/0
 14405 ;;		On exit  : 0/0
 14406 ;;		Unchanged: 0/0
 14407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14408 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14409 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14410 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14411 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14412 ;;Total ram usage:       21 bytes
 14413 ;; Hardware stack levels used:    1
 14414 ;; Hardware stack levels required when called:    1
 14415 ;; This function calls:
 14416 ;;		___lwdiv
 14417 ;;		___lwmod
 14418 ;;		___wmul
 14419 ;;		_isdigit
 14420 ;; This function is called by:
 14421 ;;		_menuLCD_ISR
 14422 ;; This function uses a non-reentrant model
 14423 ;;
 14424                           
 14425                           
 14426                           ;psect for function _sprintf
 14427  0222                     _sprintf:
 14428                           
 14429                           ;incstack = 0
 14430                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14431                           ;sprintf@sp stored from wreg
 14432  0222  0020               	movlb	0	; select bank0
 14433  0223  00B4               	movwf	sprintf@sp
 14434  0224                     i1l3935:
 14435                           
 14436                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 14437  0224  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 14438  0225  00A8               	movwf	??_sprintf
 14439  0226  0828               	movf	??_sprintf,w
 14440  0227  00AC               	movwf	sprintf@ap
 14441                           
 14442                           ;doprnt.c: 553: while((c = *f++)) {
 14443  0228  2BA6               	goto	i1l4039
 14444  0229                     i1l3937:
 14445                           
 14446                           ;doprnt.c: 555: if(c != '%')
 14447  0229  3025               	movlw	37
 14448  022A  0633               	xorwf	sprintf@c,w
 14449  022B  1903               	btfsc	3,2
 14450  022C  2A2E               	goto	u325_21
 14451  022D  2A2F               	goto	u325_20
 14452  022E                     u325_21:
 14453  022E  2A3B               	goto	i1l3943
 14454  022F                     u325_20:
 14455  022F                     i1l3939:
 14456                           
 14457                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 14458  022F  0833               	movf	sprintf@c,w
 14459  0230  00A8               	movwf	??_sprintf
 14460  0231  0834               	movf	sprintf@sp,w
 14461  0232  0086               	movwf	6
 14462  0233  0187               	clrf	7
 14463  0234  0828               	movf	??_sprintf,w
 14464  0235  0081               	movwf	1
 14465  0236                     i1l3941:
 14466  0236  3001               	movlw	1
 14467  0237  00A8               	movwf	??_sprintf
 14468  0238  0828               	movf	??_sprintf,w
 14469  0239  07B4               	addwf	sprintf@sp,f
 14470                           
 14471                           ;doprnt.c: 559: continue;
 14472  023A  2BA6               	goto	i1l4039
 14473  023B                     i1l3943:
 14474                           
 14475                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 14476  023B  01B1               	clrf	sprintf@width
 14477  023C  01B2               	clrf	sprintf@width+1
 14478                           
 14479                           ;doprnt.c: 565: flag = 0;
 14480  023D  01B0               	clrf	sprintf@flag
 14481  023E  2A44               	goto	i1l3949
 14482  023F                     i1l1491:	
 14483                           ;doprnt.c: 596: case '0':
 14484                           
 14485                           
 14486                           ;doprnt.c: 597: flag |= 0x04;
 14487  023F  1530               	bsf	sprintf@flag,2
 14488  0240                     i1l3945:
 14489                           
 14490                           ;doprnt.c: 598: f++;
 14491  0240  3001               	movlw	1
 14492  0241  07A0               	addwf	sprintf@f,f
 14493  0242  3000               	movlw	0
 14494  0243  3DA1               	addwfc	sprintf@f+1,f
 14495  0244                     i1l3949:	
 14496                           ;doprnt.c: 599: continue;
 14497                           
 14498  0244  0820               	movf	sprintf@f,w
 14499  0245  0084               	movwf	4
 14500  0246  0821               	movf	sprintf@f+1,w
 14501  0247  0085               	movwf	5
 14502  0248  0800               	movf	0,w	;code access
 14503                           
 14504                           ; Switch size 1, requested type "simple"
 14505                           ; Number of cases is 1, Range of values is 48 to 48
 14506                           ; switch strategies available:
 14507                           ; Name         Instructions Cycles
 14508                           ; simple_byte            4     3 (average)
 14509                           ; direct_byte           11     9 (fixed)
 14510                           ; jumptable            263     9 (fixed)
 14511                           ;	Chosen strategy is simple_byte
 14512  0249  3A30               	xorlw	48	; case 48
 14513  024A  1903               	skipnz
 14514  024B  2A3F               	goto	i1l1491
 14515  024C  2A4D               	goto	i1l3951
 14516  024D                     i1l3951:
 14517                           
 14518                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 14519  024D  0820               	movf	sprintf@f,w
 14520  024E  0084               	movwf	4
 14521  024F  0821               	movf	sprintf@f+1,w
 14522  0250  0085               	movwf	5
 14523  0251  0800               	movf	0,w	;code access
 14524  0252  318A  228E  3182   	fcall	_isdigit
 14525  0255  1C03               	btfss	3,0
 14526  0256  2A58               	goto	u326_21
 14527  0257  2A59               	goto	u326_20
 14528  0258                     u326_21:
 14529  0258  2A8C               	goto	i1l3965
 14530  0259                     u326_20:
 14531  0259                     i1l3953:
 14532                           
 14533                           ;doprnt.c: 615: width = 0;
 14534  0259  0020               	movlb	0	; select bank0
 14535  025A  01B1               	clrf	sprintf@width
 14536  025B  01B2               	clrf	sprintf@width+1
 14537  025C                     i1l3955:
 14538                           
 14539                           ;doprnt.c: 617: width *= 10;
 14540  025C  300A               	movlw	10
 14541  025D  00F0               	movwf	___wmul@multiplier
 14542  025E  3000               	movlw	0
 14543  025F  00F1               	movwf	___wmul@multiplier+1
 14544  0260  0020               	movlb	0	; select bank0
 14545  0261  0832               	movf	sprintf@width+1,w
 14546  0262  00F3               	movwf	___wmul@multiplicand+1
 14547  0263  0831               	movf	sprintf@width,w
 14548  0264  00F2               	movwf	___wmul@multiplicand
 14549  0265  318B  23B7  3182   	fcall	___wmul
 14550  0268  0871               	movf	?___wmul+1,w
 14551  0269  0020               	movlb	0	; select bank0
 14552  026A  00B2               	movwf	sprintf@width+1
 14553  026B  0870               	movf	?___wmul,w
 14554  026C  00B1               	movwf	sprintf@width
 14555  026D                     i1l3957:
 14556                           
 14557                           ;doprnt.c: 618: width += *f++ - '0';
 14558  026D  0820               	movf	sprintf@f,w
 14559  026E  0084               	movwf	4
 14560  026F  0821               	movf	sprintf@f+1,w
 14561  0270  0085               	movwf	5
 14562  0271  0800               	movf	0,w	;code access
 14563  0272  3ED0               	addlw	208
 14564  0273  00A8               	movwf	??_sprintf
 14565  0274  30FF               	movlw	255
 14566  0275  1803               	skipnc
 14567  0276  3000               	movlw	0
 14568  0277  00A9               	movwf	??_sprintf+1
 14569  0278  0828               	movf	??_sprintf,w
 14570  0279  07B1               	addwf	sprintf@width,f
 14571  027A  0829               	movf	??_sprintf+1,w
 14572  027B  3DB2               	addwfc	sprintf@width+1,f
 14573  027C                     i1l3959:
 14574  027C  3001               	movlw	1
 14575  027D  07A0               	addwf	sprintf@f,f
 14576  027E  3000               	movlw	0
 14577  027F  3DA1               	addwfc	sprintf@f+1,f
 14578  0280                     i1l3961:
 14579                           
 14580                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 14581  0280  0820               	movf	sprintf@f,w
 14582  0281  0084               	movwf	4
 14583  0282  0821               	movf	sprintf@f+1,w
 14584  0283  0085               	movwf	5
 14585  0284  0800               	movf	0,w	;code access
 14586  0285  318A  228E  3182   	fcall	_isdigit
 14587  0288  1803               	btfsc	3,0
 14588  0289  2A8B               	goto	u327_21
 14589  028A  2A8C               	goto	u327_20
 14590  028B                     u327_21:
 14591  028B  2A5C               	goto	i1l3955
 14592  028C                     u327_20:
 14593  028C                     i1l3965:
 14594  028C  0020               	movlb	0	; select bank0
 14595  028D  0821               	movf	sprintf@f+1,w
 14596  028E  00A9               	movwf	??_sprintf+1
 14597  028F  0820               	movf	sprintf@f,w
 14598  0290  00A8               	movwf	??_sprintf
 14599  0291  0AA0               	incf	sprintf@f,f
 14600  0292  1903               	skipnz
 14601  0293  0AA1               	incf	sprintf@f+1,f
 14602  0294  0828               	movf	??_sprintf,w
 14603  0295  0084               	movwf	4
 14604  0296  0829               	movf	??_sprintf+1,w
 14605  0297  0085               	movwf	5
 14606  0298  0800               	movf	0,w	;code access
 14607  0299  00B3               	movwf	sprintf@c
 14608                           
 14609                           ; Switch size 1, requested type "simple"
 14610                           ; Number of cases is 3, Range of values is 0 to 105
 14611                           ; switch strategies available:
 14612                           ; Name         Instructions Cycles
 14613                           ; simple_byte           10     6 (average)
 14614                           ; direct_byte          218     6 (fixed)
 14615                           ; jumptable            260     6 (fixed)
 14616                           ;	Chosen strategy is simple_byte
 14617  029A  3A00               	xorlw	0	; case 0
 14618  029B  1903               	skipnz
 14619  029C  2BBA               	goto	i1l4041
 14620  029D  3A64               	xorlw	100	; case 100
 14621  029E  1903               	skipnz
 14622  029F  2AA4               	goto	i1l3967
 14623  02A0  3A0D               	xorlw	13	; case 105
 14624  02A1  1903               	skipnz
 14625  02A2  2AA4               	goto	i1l3967
 14626  02A3  2BA6               	goto	i1l4039
 14627  02A4                     i1l3967:
 14628                           
 14629                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 14630  02A4  082C               	movf	sprintf@ap,w
 14631  02A5  0086               	movwf	6
 14632  02A6  0187               	clrf	7
 14633  02A7  3F40               	moviw [0]fsr1
 14634  02A8  00AE               	movwf	sprintf@val
 14635  02A9  3F41               	moviw [1]fsr1
 14636  02AA  00AF               	movwf	sprintf@val+1
 14637  02AB                     i1l3969:
 14638  02AB  3002               	movlw	2
 14639  02AC  00A8               	movwf	??_sprintf
 14640  02AD  0828               	movf	??_sprintf,w
 14641  02AE  07AC               	addwf	sprintf@ap,f
 14642  02AF                     i1l3971:
 14643                           
 14644                           ;doprnt.c: 1287: if((int)val < 0) {
 14645  02AF  1FAF               	btfss	sprintf@val+1,7
 14646  02B0  2AB2               	goto	u328_21
 14647  02B1  2AB3               	goto	u328_20
 14648  02B2                     u328_21:
 14649  02B2  2ABC               	goto	i1l3977
 14650  02B3                     u328_20:
 14651  02B3                     i1l3973:
 14652                           
 14653                           ;doprnt.c: 1288: flag |= 0x03;
 14654  02B3  3003               	movlw	3
 14655  02B4  00A8               	movwf	??_sprintf
 14656  02B5  0828               	movf	??_sprintf,w
 14657  02B6  04B0               	iorwf	sprintf@flag,f
 14658  02B7                     i1l3975:
 14659                           
 14660                           ;doprnt.c: 1289: val = -val;
 14661  02B7  09AE               	comf	sprintf@val,f
 14662  02B8  09AF               	comf	sprintf@val+1,f
 14663  02B9  0AAE               	incf	sprintf@val,f
 14664  02BA  1903               	skipnz
 14665  02BB  0AAF               	incf	sprintf@val+1,f
 14666  02BC                     i1l3977:
 14667                           
 14668                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 14669  02BC  01B3               	clrf	sprintf@c
 14670  02BD  0AB3               	incf	sprintf@c,f
 14671  02BE                     i1l3983:
 14672                           
 14673                           ;doprnt.c: 1332: if(val < dpowers[c])
 14674  02BE  0833               	movf	sprintf@c,w
 14675  02BF  00A8               	movwf	??_sprintf
 14676  02C0  01A9               	clrf	??_sprintf+1
 14677  02C1  35A8               	lslf	??_sprintf,f
 14678  02C2  0DA9               	rlf	??_sprintf+1,f
 14679  02C3  300F               	movlw	low (_dpowers| (0+32768))
 14680  02C4  0728               	addwf	??_sprintf,w
 14681  02C5  0084               	movwf	4
 14682  02C6  3090               	movlw	high (_dpowers| (0+32768))
 14683  02C7  3D29               	addwfc	??_sprintf+1,w
 14684  02C8  0085               	movwf	5
 14685  02C9  3F00               	moviw [0]fsr0
 14686  02CA  00AA               	movwf	??_sprintf+2
 14687  02CB  3F01               	moviw [1]fsr0
 14688  02CC  00AB               	movwf	??_sprintf+3
 14689  02CD  082B               	movf	??_sprintf+3,w
 14690  02CE  022F               	subwf	sprintf@val+1,w
 14691  02CF  1D03               	skipz
 14692  02D0  2AD3               	goto	u329_25
 14693  02D1  082A               	movf	??_sprintf+2,w
 14694  02D2  022E               	subwf	sprintf@val,w
 14695  02D3                     u329_25:
 14696  02D3  1803               	skipnc
 14697  02D4  2AD6               	goto	u329_21
 14698  02D5  2AD7               	goto	u329_20
 14699  02D6                     u329_21:
 14700  02D6  2AD8               	goto	i1l3987
 14701  02D7                     u329_20:
 14702  02D7  2AE2               	goto	i1l3989
 14703  02D8                     i1l3987:
 14704  02D8  3001               	movlw	1
 14705  02D9  00A8               	movwf	??_sprintf
 14706  02DA  0828               	movf	??_sprintf,w
 14707  02DB  07B3               	addwf	sprintf@c,f
 14708  02DC  3005               	movlw	5
 14709  02DD  0633               	xorwf	sprintf@c,w
 14710  02DE  1D03               	btfss	3,2
 14711  02DF  2AE1               	goto	u330_21
 14712  02E0  2AE2               	goto	u330_20
 14713  02E1                     u330_21:
 14714  02E1  2ABE               	goto	i1l3983
 14715  02E2                     u330_20:
 14716  02E2                     i1l3989:
 14717                           
 14718                           ;doprnt.c: 1371: if(width && flag & 0x03)
 14719  02E2  0831               	movf	sprintf@width,w
 14720  02E3  0432               	iorwf	sprintf@width+1,w
 14721  02E4  1903               	btfsc	3,2
 14722  02E5  2AE7               	goto	u331_21
 14723  02E6  2AE8               	goto	u331_20
 14724  02E7                     u331_21:
 14725  02E7  2AF2               	goto	i1l1509
 14726  02E8                     u331_20:
 14727  02E8                     i1l3991:
 14728  02E8  0830               	movf	sprintf@flag,w
 14729  02E9  3903               	andlw	3
 14730  02EA  1903               	btfsc	3,2
 14731  02EB  2AED               	goto	u332_21
 14732  02EC  2AEE               	goto	u332_20
 14733  02ED                     u332_21:
 14734  02ED  2AF2               	goto	i1l1509
 14735  02EE                     u332_20:
 14736  02EE                     i1l3993:
 14737                           
 14738                           ;doprnt.c: 1372: width--;
 14739  02EE  30FF               	movlw	255
 14740  02EF  07B1               	addwf	sprintf@width,f
 14741  02F0  30FF               	movlw	255
 14742  02F1  3DB2               	addwfc	sprintf@width+1,f
 14743  02F2                     i1l1509:
 14744                           
 14745                           ;doprnt.c: 1407: if(width > c)
 14746  02F2  0832               	movf	sprintf@width+1,w
 14747  02F3  3A80               	xorlw	128
 14748  02F4  3C80               	sublw	128
 14749  02F5  1D03               	skipz
 14750  02F6  2AF9               	goto	u333_25
 14751  02F7  0831               	movf	sprintf@width,w
 14752  02F8  0233               	subwf	sprintf@c,w
 14753  02F9                     u333_25:
 14754  02F9  1803               	skipnc
 14755  02FA  2AFC               	goto	u333_21
 14756  02FB  2AFD               	goto	u333_20
 14757  02FC                     u333_21:
 14758  02FC  2B06               	goto	i1l3997
 14759  02FD                     u333_20:
 14760  02FD                     i1l3995:
 14761                           
 14762                           ;doprnt.c: 1408: width -= c;
 14763  02FD  0020               	movlb	0	; select bank0
 14764  02FE  0833               	movf	sprintf@c,w
 14765  02FF  00A8               	movwf	??_sprintf
 14766  0300  01A9               	clrf	??_sprintf+1
 14767  0301  0828               	movf	??_sprintf,w
 14768  0302  02B1               	subwf	sprintf@width,f
 14769  0303  0829               	movf	??_sprintf+1,w
 14770  0304  3BB2               	subwfb	sprintf@width+1,f
 14771  0305  2B09               	goto	i1l3999
 14772  0306                     i1l3997:
 14773                           
 14774                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 14775  0306  0020               	movlb	0	; select bank0
 14776  0307  01B1               	clrf	sprintf@width
 14777  0308  01B2               	clrf	sprintf@width+1
 14778  0309                     i1l3999:
 14779                           
 14780                           ;doprnt.c: 1413: if(flag & 0x04) {
 14781  0309  1D30               	btfss	sprintf@flag,2
 14782  030A  2B0C               	goto	u334_21
 14783  030B  2B0D               	goto	u334_20
 14784  030C                     u334_21:
 14785  030C  2B3A               	goto	i1l4015
 14786  030D                     u334_20:
 14787  030D                     i1l4001:
 14788                           
 14789                           ;doprnt.c: 1418: if(flag & 0x03)
 14790  030D  0830               	movf	sprintf@flag,w
 14791  030E  3903               	andlw	3
 14792  030F  1903               	btfsc	3,2
 14793  0310  2B12               	goto	u335_21
 14794  0311  2B13               	goto	u335_20
 14795  0312                     u335_21:
 14796  0312  2B1E               	goto	i1l4007
 14797  0313                     u335_20:
 14798  0313                     i1l4003:
 14799                           
 14800                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 14801  0313  302D               	movlw	45
 14802  0314  00A8               	movwf	??_sprintf
 14803  0315  0834               	movf	sprintf@sp,w
 14804  0316  0086               	movwf	6
 14805  0317  0187               	clrf	7
 14806  0318  0828               	movf	??_sprintf,w
 14807  0319  0081               	movwf	1
 14808  031A                     i1l4005:
 14809  031A  3001               	movlw	1
 14810  031B  00A8               	movwf	??_sprintf
 14811  031C  0828               	movf	??_sprintf,w
 14812  031D  07B4               	addwf	sprintf@sp,f
 14813  031E                     i1l4007:
 14814                           
 14815                           ;doprnt.c: 1441: if(width)
 14816  031E  0831               	movf	sprintf@width,w
 14817  031F  0432               	iorwf	sprintf@width+1,w
 14818  0320  1903               	btfsc	3,2
 14819  0321  2B23               	goto	u336_21
 14820  0322  2B24               	goto	u336_20
 14821  0323                     u336_21:
 14822  0323  2B66               	goto	i1l4029
 14823  0324                     u336_20:
 14824  0324                     i1l4009:
 14825                           
 14826                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 14827  0324  3030               	movlw	48
 14828  0325  00A8               	movwf	??_sprintf
 14829  0326  0834               	movf	sprintf@sp,w
 14830  0327  0086               	movwf	6
 14831  0328  0187               	clrf	7
 14832  0329  0828               	movf	??_sprintf,w
 14833  032A  0081               	movwf	1
 14834  032B                     i1l4011:
 14835  032B  3001               	movlw	1
 14836  032C  00A8               	movwf	??_sprintf
 14837  032D  0828               	movf	??_sprintf,w
 14838  032E  07B4               	addwf	sprintf@sp,f
 14839  032F                     i1l4013:
 14840                           
 14841                           ;doprnt.c: 1444: while(--width);
 14842  032F  30FF               	movlw	255
 14843  0330  07B1               	addwf	sprintf@width,f
 14844  0331  30FF               	movlw	255
 14845  0332  3DB2               	addwfc	sprintf@width+1,f
 14846  0333  0831               	movf	sprintf@width,w
 14847  0334  0432               	iorwf	sprintf@width+1,w
 14848  0335  1D03               	btfss	3,2
 14849  0336  2B38               	goto	u337_21
 14850  0337  2B39               	goto	u337_20
 14851  0338                     u337_21:
 14852  0338  2B24               	goto	i1l4009
 14853  0339                     u337_20:
 14854  0339  2B66               	goto	i1l4029
 14855  033A                     i1l4015:
 14856                           
 14857                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 14858  033A  0831               	movf	sprintf@width,w
 14859  033B  0432               	iorwf	sprintf@width+1,w
 14860  033C  1903               	btfsc	3,2
 14861  033D  2B3F               	goto	u338_21
 14862  033E  2B40               	goto	u338_20
 14863  033F                     u338_21:
 14864  033F  2B55               	goto	i1l4023
 14865  0340                     u338_20:
 14866  0340                     i1l4017:
 14867                           
 14868                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 14869  0340  3020               	movlw	32
 14870  0341  00A8               	movwf	??_sprintf
 14871  0342  0834               	movf	sprintf@sp,w
 14872  0343  0086               	movwf	6
 14873  0344  0187               	clrf	7
 14874  0345  0828               	movf	??_sprintf,w
 14875  0346  0081               	movwf	1
 14876  0347                     i1l4019:
 14877  0347  3001               	movlw	1
 14878  0348  00A8               	movwf	??_sprintf
 14879  0349  0828               	movf	??_sprintf,w
 14880  034A  07B4               	addwf	sprintf@sp,f
 14881  034B                     i1l4021:
 14882                           
 14883                           ;doprnt.c: 1457: while(--width);
 14884  034B  30FF               	movlw	255
 14885  034C  07B1               	addwf	sprintf@width,f
 14886  034D  30FF               	movlw	255
 14887  034E  3DB2               	addwfc	sprintf@width+1,f
 14888  034F  0831               	movf	sprintf@width,w
 14889  0350  0432               	iorwf	sprintf@width+1,w
 14890  0351  1D03               	btfss	3,2
 14891  0352  2B54               	goto	u339_21
 14892  0353  2B55               	goto	u339_20
 14893  0354                     u339_21:
 14894  0354  2B40               	goto	i1l4017
 14895  0355                     u339_20:
 14896  0355                     i1l4023:
 14897                           
 14898                           ;doprnt.c: 1464: if(flag & 0x03)
 14899  0355  0830               	movf	sprintf@flag,w
 14900  0356  3903               	andlw	3
 14901  0357  1903               	btfsc	3,2
 14902  0358  2B5A               	goto	u340_21
 14903  0359  2B5B               	goto	u340_20
 14904  035A                     u340_21:
 14905  035A  2B66               	goto	i1l4029
 14906  035B                     u340_20:
 14907  035B                     i1l4025:
 14908                           
 14909                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 14910  035B  302D               	movlw	45
 14911  035C  00A8               	movwf	??_sprintf
 14912  035D  0834               	movf	sprintf@sp,w
 14913  035E  0086               	movwf	6
 14914  035F  0187               	clrf	7
 14915  0360  0828               	movf	??_sprintf,w
 14916  0361  0081               	movwf	1
 14917  0362                     i1l4027:
 14918  0362  3001               	movlw	1
 14919  0363  00A8               	movwf	??_sprintf
 14920  0364  0828               	movf	??_sprintf,w
 14921  0365  07B4               	addwf	sprintf@sp,f
 14922  0366                     i1l4029:
 14923                           
 14924                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 14925  0366  0833               	movf	sprintf@c,w
 14926  0367  00A8               	movwf	??_sprintf
 14927  0368  0828               	movf	??_sprintf,w
 14928  0369  00AD               	movwf	sprintf@prec
 14929                           
 14930                           ;doprnt.c: 1500: while(prec--) {
 14931  036A  2B9D               	goto	i1l4037
 14932  036B                     i1l4031:
 14933                           
 14934                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 14935  036B  300A               	movlw	10
 14936  036C  00F8               	movwf	___lwmod@divisor
 14937  036D  3000               	movlw	0
 14938  036E  00F9               	movwf	___lwmod@divisor+1
 14939  036F  082D               	movf	sprintf@prec,w
 14940  0370  00A8               	movwf	??_sprintf
 14941  0371  01A9               	clrf	??_sprintf+1
 14942  0372  35A8               	lslf	??_sprintf,f
 14943  0373  0DA9               	rlf	??_sprintf+1,f
 14944  0374  300F               	movlw	low (_dpowers| (0+32768))
 14945  0375  0728               	addwf	??_sprintf,w
 14946  0376  0084               	movwf	4
 14947  0377  3090               	movlw	high (_dpowers| (0+32768))
 14948  0378  3D29               	addwfc	??_sprintf+1,w
 14949  0379  0085               	movwf	5
 14950  037A  3F00               	moviw [0]fsr0
 14951  037B  00F0               	movwf	___lwdiv@divisor
 14952  037C  3F01               	moviw [1]fsr0
 14953  037D  00F1               	movwf	___lwdiv@divisor+1
 14954  037E  082F               	movf	sprintf@val+1,w
 14955  037F  00F3               	movwf	___lwdiv@dividend+1
 14956  0380  082E               	movf	sprintf@val,w
 14957  0381  00F2               	movwf	___lwdiv@dividend
 14958  0382  318D  253E  3182   	fcall	___lwdiv
 14959  0385  0871               	movf	?___lwdiv+1,w
 14960  0386  00FB               	movwf	___lwmod@dividend+1
 14961  0387  0870               	movf	?___lwdiv,w
 14962  0388  00FA               	movwf	___lwmod@dividend
 14963  0389  318C  2498  3182   	fcall	___lwmod
 14964  038C  0878               	movf	?___lwmod,w
 14965  038D  3E30               	addlw	48
 14966  038E  0020               	movlb	0	; select bank0
 14967  038F  00AA               	movwf	??_sprintf+2
 14968  0390  082A               	movf	??_sprintf+2,w
 14969  0391  00B3               	movwf	sprintf@c
 14970  0392                     i1l4033:
 14971                           
 14972                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 14973  0392  0833               	movf	sprintf@c,w
 14974  0393  00A8               	movwf	??_sprintf
 14975  0394  0834               	movf	sprintf@sp,w
 14976  0395  0086               	movwf	6
 14977  0396  0187               	clrf	7
 14978  0397  0828               	movf	??_sprintf,w
 14979  0398  0081               	movwf	1
 14980  0399                     i1l4035:
 14981  0399  3001               	movlw	1
 14982  039A  00A8               	movwf	??_sprintf
 14983  039B  0828               	movf	??_sprintf,w
 14984  039C  07B4               	addwf	sprintf@sp,f
 14985  039D                     i1l4037:
 14986  039D  30FF               	movlw	255
 14987  039E  00A8               	movwf	??_sprintf
 14988  039F  0828               	movf	??_sprintf,w
 14989  03A0  07AD               	addwf	sprintf@prec,f
 14990  03A1  0A2D               	incf	sprintf@prec,w
 14991  03A2  1D03               	btfss	3,2
 14992  03A3  2BA5               	goto	u341_21
 14993  03A4  2BA6               	goto	u341_20
 14994  03A5                     u341_21:
 14995  03A5  2B6B               	goto	i1l4031
 14996  03A6                     u341_20:
 14997  03A6                     i1l4039:
 14998  03A6  0821               	movf	sprintf@f+1,w
 14999  03A7  00A9               	movwf	??_sprintf+1
 15000  03A8  0820               	movf	sprintf@f,w
 15001  03A9  00A8               	movwf	??_sprintf
 15002  03AA  0AA0               	incf	sprintf@f,f
 15003  03AB  1903               	skipnz
 15004  03AC  0AA1               	incf	sprintf@f+1,f
 15005  03AD  0828               	movf	??_sprintf,w
 15006  03AE  0084               	movwf	4
 15007  03AF  0829               	movf	??_sprintf+1,w
 15008  03B0  0085               	movwf	5
 15009  03B1  0800               	movf	0,w	;code access
 15010  03B2  00AA               	movwf	??_sprintf+2
 15011  03B3  082A               	movf	??_sprintf+2,w
 15012  03B4  00B3               	movwf	sprintf@c
 15013  03B5  0833               	movf	sprintf@c,w
 15014  03B6  1D03               	btfss	3,2
 15015  03B7  2BB9               	goto	u342_21
 15016  03B8  2BBA               	goto	u342_20
 15017  03B9                     u342_21:
 15018  03B9  2A29               	goto	i1l3937
 15019  03BA                     u342_20:
 15020  03BA                     i1l4041:
 15021                           
 15022                           ;doprnt.c: 1564: *sp = 0;
 15023  03BA  0834               	movf	sprintf@sp,w
 15024  03BB  0086               	movwf	6
 15025  03BC  0187               	clrf	7
 15026  03BD  0181               	clrf	1
 15027  03BE                     i1l1526:
 15028  03BE  0008               	return
 15029  03BF                     __end_of_sprintf:
 15030                           
 15031                           	psect	text44
 15032  0A8E                     __ptext44:	
 15033 ;; *************** function _isdigit *****************
 15034 ;; Defined at:
 15035 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 15036 ;; Parameters:    Size  Location     Type
 15037 ;;  c               1    wreg     unsigned char 
 15038 ;; Auto vars:     Size  Location     Type
 15039 ;;  c               1    1[COMMON] unsigned char 
 15040 ;; Return value:  Size  Location     Type
 15041 ;;		None               void
 15042 ;; Registers used:
 15043 ;;		wreg, status,2, status,0
 15044 ;; Tracked objects:
 15045 ;;		On entry : 0/0
 15046 ;;		On exit  : 0/0
 15047 ;;		Unchanged: 0/0
 15048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15050 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15052 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15053 ;;Total ram usage:        2 bytes
 15054 ;; Hardware stack levels used:    1
 15055 ;; This function calls:
 15056 ;;		Nothing
 15057 ;; This function is called by:
 15058 ;;		_sprintf
 15059 ;; This function uses a non-reentrant model
 15060 ;;
 15061                           
 15062                           
 15063                           ;psect for function _isdigit
 15064  0A8E                     _isdigit:
 15065                           
 15066                           ;incstack = 0
 15067                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 15068                           ;isdigit@c stored from wreg
 15069  0A8E  00F1               	movwf	isdigit@c
 15070  0A8F                     i1l3731:
 15071  0A8F  01F0               	clrf	_isdigit$2891
 15072  0A90                     i1l3733:
 15073  0A90  303A               	movlw	58
 15074  0A91  0271               	subwf	isdigit@c,w
 15075  0A92  1803               	skipnc
 15076  0A93  2A95               	goto	u268_21
 15077  0A94  2A96               	goto	u268_20
 15078  0A95                     u268_21:
 15079  0A95  2A9E               	goto	i1l3739
 15080  0A96                     u268_20:
 15081  0A96                     i1l3735:
 15082  0A96  3030               	movlw	48
 15083  0A97  0271               	subwf	isdigit@c,w
 15084  0A98  1C03               	skipc
 15085  0A99  2A9B               	goto	u269_21
 15086  0A9A  2A9C               	goto	u269_20
 15087  0A9B                     u269_21:
 15088  0A9B  2A9E               	goto	i1l3739
 15089  0A9C                     u269_20:
 15090  0A9C                     i1l3737:
 15091  0A9C  01F0               	clrf	_isdigit$2891
 15092  0A9D  0AF0               	incf	_isdigit$2891,f
 15093  0A9E                     i1l3739:
 15094  0A9E  0C70               	rrf	_isdigit$2891,w
 15095  0A9F                     i1l1983:
 15096  0A9F  0008               	return
 15097  0AA0                     __end_of_isdigit:
 15098                           
 15099                           	psect	text45
 15100  0BB7                     __ptext45:	
 15101 ;; *************** function ___wmul *****************
 15102 ;; Defined at:
 15103 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 15104 ;; Parameters:    Size  Location     Type
 15105 ;;  multiplier      2    0[COMMON] unsigned int 
 15106 ;;  multiplicand    2    2[COMMON] unsigned int 
 15107 ;; Auto vars:     Size  Location     Type
 15108 ;;  product         2    4[COMMON] unsigned int 
 15109 ;; Return value:  Size  Location     Type
 15110 ;;                  2    0[COMMON] unsigned int 
 15111 ;; Registers used:
 15112 ;;		wreg, status,2, status,0
 15113 ;; Tracked objects:
 15114 ;;		On entry : 0/0
 15115 ;;		On exit  : 0/0
 15116 ;;		Unchanged: 0/0
 15117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15118 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15119 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15121 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15122 ;;Total ram usage:        6 bytes
 15123 ;; Hardware stack levels used:    1
 15124 ;; This function calls:
 15125 ;;		Nothing
 15126 ;; This function is called by:
 15127 ;;		_monitoring_ISR
 15128 ;;		_sprintf
 15129 ;;		_map
 15130 ;; This function uses a non-reentrant model
 15131 ;;
 15132                           
 15133                           
 15134                           ;psect for function ___wmul
 15135  0BB7                     ___wmul:
 15136  0BB7                     i1l3743:	
 15137                           ;incstack = 0
 15138                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 15139                           
 15140  0BB7  01F4               	clrf	___wmul@product
 15141  0BB8  01F5               	clrf	___wmul@product+1
 15142  0BB9                     i1l3745:
 15143  0BB9  1C70               	btfss	___wmul@multiplier,0
 15144  0BBA  2BBC               	goto	u270_21
 15145  0BBB  2BBD               	goto	u270_20
 15146  0BBC                     u270_21:
 15147  0BBC  2BC1               	goto	i1l1530
 15148  0BBD                     u270_20:
 15149  0BBD                     i1l3747:
 15150  0BBD  0872               	movf	___wmul@multiplicand,w
 15151  0BBE  07F4               	addwf	___wmul@product,f
 15152  0BBF  0873               	movf	___wmul@multiplicand+1,w
 15153  0BC0  3DF5               	addwfc	___wmul@product+1,f
 15154  0BC1                     i1l1530:
 15155  0BC1  3001               	movlw	1
 15156  0BC2                     u271_25:
 15157  0BC2  35F2               	lslf	___wmul@multiplicand,f
 15158  0BC3  0DF3               	rlf	___wmul@multiplicand+1,f
 15159  0BC4  0B89               	decfsz	9,f
 15160  0BC5  2BC2               	goto	u271_25
 15161  0BC6                     i1l3749:
 15162  0BC6  3001               	movlw	1
 15163  0BC7                     u272_25:
 15164  0BC7  36F1               	lsrf	___wmul@multiplier+1,f
 15165  0BC8  0CF0               	rrf	___wmul@multiplier,f
 15166  0BC9  0B89               	decfsz	9,f
 15167  0BCA  2BC7               	goto	u272_25
 15168  0BCB                     i1l3751:
 15169  0BCB  0870               	movf	___wmul@multiplier,w
 15170  0BCC  0471               	iorwf	___wmul@multiplier+1,w
 15171  0BCD  1D03               	btfss	3,2
 15172  0BCE  2BD0               	goto	u273_21
 15173  0BCF  2BD1               	goto	u273_20
 15174  0BD0                     u273_21:
 15175  0BD0  2BB9               	goto	i1l3745
 15176  0BD1                     u273_20:
 15177  0BD1                     i1l3753:
 15178  0BD1  0875               	movf	___wmul@product+1,w
 15179  0BD2  00F1               	movwf	?___wmul+1
 15180  0BD3  0874               	movf	___wmul@product,w
 15181  0BD4  00F0               	movwf	?___wmul
 15182  0BD5                     i1l1532:
 15183  0BD5  0008               	return
 15184  0BD6                     __end_of___wmul:
 15185                           
 15186                           	psect	text46
 15187  0C98                     __ptext46:	
 15188 ;; *************** function ___lwmod *****************
 15189 ;; Defined at:
 15190 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 15191 ;; Parameters:    Size  Location     Type
 15192 ;;  divisor         2    8[COMMON] unsigned int 
 15193 ;;  dividend        2   10[COMMON] unsigned int 
 15194 ;; Auto vars:     Size  Location     Type
 15195 ;;  counter         1   13[COMMON] unsigned char 
 15196 ;; Return value:  Size  Location     Type
 15197 ;;                  2    8[COMMON] unsigned int 
 15198 ;; Registers used:
 15199 ;;		wreg, status,2, status,0
 15200 ;; Tracked objects:
 15201 ;;		On entry : 0/0
 15202 ;;		On exit  : 0/0
 15203 ;;		Unchanged: 0/0
 15204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15205 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15207 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15208 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15209 ;;Total ram usage:        6 bytes
 15210 ;; Hardware stack levels used:    1
 15211 ;; This function calls:
 15212 ;;		Nothing
 15213 ;; This function is called by:
 15214 ;;		_sprintf
 15215 ;; This function uses a non-reentrant model
 15216 ;;
 15217                           
 15218                           
 15219                           ;psect for function ___lwmod
 15220  0C98                     ___lwmod:
 15221  0C98                     i1l3783:	
 15222                           ;incstack = 0
 15223                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 15224                           
 15225  0C98  0878               	movf	___lwmod@divisor,w
 15226  0C99  0479               	iorwf	___lwmod@divisor+1,w
 15227  0C9A  1903               	btfsc	3,2
 15228  0C9B  2C9D               	goto	u281_21
 15229  0C9C  2C9E               	goto	u281_20
 15230  0C9D                     u281_21:
 15231  0C9D  2CC7               	goto	i1l3801
 15232  0C9E                     u281_20:
 15233  0C9E                     i1l3785:
 15234  0C9E  01FD               	clrf	___lwmod@counter
 15235  0C9F  0AFD               	incf	___lwmod@counter,f
 15236  0CA0  2CAA               	goto	i1l3791
 15237  0CA1                     i1l3787:
 15238  0CA1  3001               	movlw	1
 15239  0CA2                     u282_25:
 15240  0CA2  35F8               	lslf	___lwmod@divisor,f
 15241  0CA3  0DF9               	rlf	___lwmod@divisor+1,f
 15242  0CA4  0B89               	decfsz	9,f
 15243  0CA5  2CA2               	goto	u282_25
 15244  0CA6                     i1l3789:
 15245  0CA6  3001               	movlw	1
 15246  0CA7  00FC               	movwf	??___lwmod
 15247  0CA8  087C               	movf	??___lwmod,w
 15248  0CA9  07FD               	addwf	___lwmod@counter,f
 15249  0CAA                     i1l3791:
 15250  0CAA  1FF9               	btfss	___lwmod@divisor+1,7
 15251  0CAB  2CAD               	goto	u283_21
 15252  0CAC  2CAE               	goto	u283_20
 15253  0CAD                     u283_21:
 15254  0CAD  2CA1               	goto	i1l3787
 15255  0CAE                     u283_20:
 15256  0CAE                     i1l3793:
 15257  0CAE  0879               	movf	___lwmod@divisor+1,w
 15258  0CAF  027B               	subwf	___lwmod@dividend+1,w
 15259  0CB0  1D03               	skipz
 15260  0CB1  2CB4               	goto	u284_25
 15261  0CB2  0878               	movf	___lwmod@divisor,w
 15262  0CB3  027A               	subwf	___lwmod@dividend,w
 15263  0CB4                     u284_25:
 15264  0CB4  1C03               	skipc
 15265  0CB5  2CB7               	goto	u284_21
 15266  0CB6  2CB8               	goto	u284_20
 15267  0CB7                     u284_21:
 15268  0CB7  2CBC               	goto	i1l3797
 15269  0CB8                     u284_20:
 15270  0CB8                     i1l3795:
 15271  0CB8  0878               	movf	___lwmod@divisor,w
 15272  0CB9  02FA               	subwf	___lwmod@dividend,f
 15273  0CBA  0879               	movf	___lwmod@divisor+1,w
 15274  0CBB  3BFB               	subwfb	___lwmod@dividend+1,f
 15275  0CBC                     i1l3797:
 15276  0CBC  3001               	movlw	1
 15277  0CBD                     u285_25:
 15278  0CBD  36F9               	lsrf	___lwmod@divisor+1,f
 15279  0CBE  0CF8               	rrf	___lwmod@divisor,f
 15280  0CBF  0B89               	decfsz	9,f
 15281  0CC0  2CBD               	goto	u285_25
 15282  0CC1                     i1l3799:
 15283  0CC1  3001               	movlw	1
 15284  0CC2  02FD               	subwf	___lwmod@counter,f
 15285  0CC3  1D03               	btfss	3,2
 15286  0CC4  2CC6               	goto	u286_21
 15287  0CC5  2CC7               	goto	u286_20
 15288  0CC6                     u286_21:
 15289  0CC6  2CAE               	goto	i1l3793
 15290  0CC7                     u286_20:
 15291  0CC7                     i1l3801:
 15292  0CC7  087B               	movf	___lwmod@dividend+1,w
 15293  0CC8  00F9               	movwf	?___lwmod+1
 15294  0CC9  087A               	movf	___lwmod@dividend,w
 15295  0CCA  00F8               	movwf	?___lwmod
 15296  0CCB                     i1l1812:
 15297  0CCB  0008               	return
 15298  0CCC                     __end_of___lwmod:
 15299                           
 15300                           	psect	text47
 15301  0D3E                     __ptext47:	
 15302 ;; *************** function ___lwdiv *****************
 15303 ;; Defined at:
 15304 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 15305 ;; Parameters:    Size  Location     Type
 15306 ;;  divisor         2    0[COMMON] unsigned int 
 15307 ;;  dividend        2    2[COMMON] unsigned int 
 15308 ;; Auto vars:     Size  Location     Type
 15309 ;;  quotient        2    5[COMMON] unsigned int 
 15310 ;;  counter         1    7[COMMON] unsigned char 
 15311 ;; Return value:  Size  Location     Type
 15312 ;;                  2    0[COMMON] unsigned int 
 15313 ;; Registers used:
 15314 ;;		wreg, status,2, status,0
 15315 ;; Tracked objects:
 15316 ;;		On entry : 0/0
 15317 ;;		On exit  : 0/0
 15318 ;;		Unchanged: 0/0
 15319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15320 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15321 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15322 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15323 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15324 ;;Total ram usage:        8 bytes
 15325 ;; Hardware stack levels used:    1
 15326 ;; This function calls:
 15327 ;;		Nothing
 15328 ;; This function is called by:
 15329 ;;		_sprintf
 15330 ;; This function uses a non-reentrant model
 15331 ;;
 15332                           
 15333                           
 15334                           ;psect for function ___lwdiv
 15335  0D3E                     ___lwdiv:
 15336  0D3E                     i1l3757:	
 15337                           ;incstack = 0
 15338                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 15339                           
 15340  0D3E  01F5               	clrf	___lwdiv@quotient
 15341  0D3F  01F6               	clrf	___lwdiv@quotient+1
 15342  0D40                     i1l3759:
 15343  0D40  0870               	movf	___lwdiv@divisor,w
 15344  0D41  0471               	iorwf	___lwdiv@divisor+1,w
 15345  0D42  1903               	btfsc	3,2
 15346  0D43  2D45               	goto	u274_21
 15347  0D44  2D46               	goto	u274_20
 15348  0D45                     u274_21:
 15349  0D45  2D75               	goto	i1l3779
 15350  0D46                     u274_20:
 15351  0D46                     i1l3761:
 15352  0D46  01F7               	clrf	___lwdiv@counter
 15353  0D47  0AF7               	incf	___lwdiv@counter,f
 15354  0D48  2D52               	goto	i1l3767
 15355  0D49                     i1l3763:
 15356  0D49  3001               	movlw	1
 15357  0D4A                     u275_25:
 15358  0D4A  35F0               	lslf	___lwdiv@divisor,f
 15359  0D4B  0DF1               	rlf	___lwdiv@divisor+1,f
 15360  0D4C  0B89               	decfsz	9,f
 15361  0D4D  2D4A               	goto	u275_25
 15362  0D4E                     i1l3765:
 15363  0D4E  3001               	movlw	1
 15364  0D4F  00F4               	movwf	??___lwdiv
 15365  0D50  0874               	movf	??___lwdiv,w
 15366  0D51  07F7               	addwf	___lwdiv@counter,f
 15367  0D52                     i1l3767:
 15368  0D52  1FF1               	btfss	___lwdiv@divisor+1,7
 15369  0D53  2D55               	goto	u276_21
 15370  0D54  2D56               	goto	u276_20
 15371  0D55                     u276_21:
 15372  0D55  2D49               	goto	i1l3763
 15373  0D56                     u276_20:
 15374  0D56                     i1l3769:
 15375  0D56  3001               	movlw	1
 15376  0D57                     u277_25:
 15377  0D57  35F5               	lslf	___lwdiv@quotient,f
 15378  0D58  0DF6               	rlf	___lwdiv@quotient+1,f
 15379  0D59  0B89               	decfsz	9,f
 15380  0D5A  2D57               	goto	u277_25
 15381  0D5B  0871               	movf	___lwdiv@divisor+1,w
 15382  0D5C  0273               	subwf	___lwdiv@dividend+1,w
 15383  0D5D  1D03               	skipz
 15384  0D5E  2D61               	goto	u278_25
 15385  0D5F  0870               	movf	___lwdiv@divisor,w
 15386  0D60  0272               	subwf	___lwdiv@dividend,w
 15387  0D61                     u278_25:
 15388  0D61  1C03               	skipc
 15389  0D62  2D64               	goto	u278_21
 15390  0D63  2D65               	goto	u278_20
 15391  0D64                     u278_21:
 15392  0D64  2D6A               	goto	i1l3775
 15393  0D65                     u278_20:
 15394  0D65                     i1l3771:
 15395  0D65  0870               	movf	___lwdiv@divisor,w
 15396  0D66  02F2               	subwf	___lwdiv@dividend,f
 15397  0D67  0871               	movf	___lwdiv@divisor+1,w
 15398  0D68  3BF3               	subwfb	___lwdiv@dividend+1,f
 15399  0D69                     i1l3773:
 15400  0D69  1475               	bsf	___lwdiv@quotient,0
 15401  0D6A                     i1l3775:
 15402  0D6A  3001               	movlw	1
 15403  0D6B                     u279_25:
 15404  0D6B  36F1               	lsrf	___lwdiv@divisor+1,f
 15405  0D6C  0CF0               	rrf	___lwdiv@divisor,f
 15406  0D6D  0B89               	decfsz	9,f
 15407  0D6E  2D6B               	goto	u279_25
 15408  0D6F                     i1l3777:
 15409  0D6F  3001               	movlw	1
 15410  0D70  02F7               	subwf	___lwdiv@counter,f
 15411  0D71  1D03               	btfss	3,2
 15412  0D72  2D74               	goto	u280_21
 15413  0D73  2D75               	goto	u280_20
 15414  0D74                     u280_21:
 15415  0D74  2D56               	goto	i1l3769
 15416  0D75                     u280_20:
 15417  0D75                     i1l3779:
 15418  0D75  0876               	movf	___lwdiv@quotient+1,w
 15419  0D76  00F1               	movwf	?___lwdiv+1
 15420  0D77  0875               	movf	___lwdiv@quotient,w
 15421  0D78  00F0               	movwf	?___lwdiv
 15422  0D79                     i1l1802:
 15423  0D79  0008               	return
 15424  0D7A                     __end_of___lwdiv:
 15425                           
 15426                           	psect	text48
 15427  0C64                     __ptext48:	
 15428 ;; *************** function _differenceBetweenTimePeriod *****************
 15429 ;; Defined at:
 15430 ;;		line 213 in file "main.c"
 15431 ;; Parameters:    Size  Location     Type
 15432 ;;  start           3    0[COMMON] struct Time
 15433 ;;  stop            3    3[COMMON] struct Time
 15434 ;;  diff            1    6[COMMON] PTR struct Time
 15435 ;;		 -> menuLCD_ISR@diff(3), 
 15436 ;; Auto vars:     Size  Location     Type
 15437 ;;		None
 15438 ;; Return value:  Size  Location     Type
 15439 ;;                  1    wreg      void 
 15440 ;; Registers used:
 15441 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15442 ;; Tracked objects:
 15443 ;;		On entry : 0/0
 15444 ;;		On exit  : 0/0
 15445 ;;		Unchanged: 0/0
 15446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15447 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15449 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15450 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15451 ;;Total ram usage:        8 bytes
 15452 ;; Hardware stack levels used:    1
 15453 ;; This function calls:
 15454 ;;		Nothing
 15455 ;; This function is called by:
 15456 ;;		_menuLCD_ISR
 15457 ;; This function uses a non-reentrant model
 15458 ;;
 15459                           
 15460                           
 15461                           ;psect for function _differenceBetweenTimePeriod
 15462  0C64                     _differenceBetweenTimePeriod:
 15463  0C64                     i1l3919:	
 15464                           ;incstack = 0
 15465                           ; Regs used in _differenceBetweenTimePeriod: [wreg+fsr1l+fsr1h+status,2+status,0]
 15466                           
 15467                           
 15468                           ;main.c: 216: while (stop.s > start.s) {
 15469  0C64  2C6B               	goto	i1l3923
 15470  0C65                     i1l3921:
 15471                           
 15472                           ;main.c: 217: --start.m;
 15473  0C65  3001               	movlw	1
 15474  0C66  02F1               	subwf	differenceBetweenTimePeriod@start+1,f
 15475                           
 15476                           ;main.c: 218: start.s += 60;
 15477  0C67  303C               	movlw	60
 15478  0C68  00F7               	movwf	??_differenceBetweenTimePeriod
 15479  0C69  0877               	movf	??_differenceBetweenTimePeriod,w
 15480  0C6A  07F2               	addwf	differenceBetweenTimePeriod@start+2,f
 15481  0C6B                     i1l3923:
 15482  0C6B  0875               	movf	differenceBetweenTimePeriod@stop+2,w
 15483  0C6C  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 15484  0C6D  1C03               	skipc
 15485  0C6E  2C70               	goto	u323_21
 15486  0C6F  2C71               	goto	u323_20
 15487  0C70                     u323_21:
 15488  0C70  2C65               	goto	i1l3921
 15489  0C71                     u323_20:
 15490  0C71                     i1l3925:
 15491                           
 15492                           ;main.c: 219: };main.c: 220: diff->s = start.s - stop.s;
 15493  0C71  0875               	movf	differenceBetweenTimePeriod@stop+2,w
 15494  0C72  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 15495  0C73  00F7               	movwf	??_differenceBetweenTimePeriod
 15496  0C74  0876               	movf	differenceBetweenTimePeriod@diff,w
 15497  0C75  3E02               	addlw	2
 15498  0C76  0086               	movwf	6
 15499  0C77  0187               	clrf	7
 15500  0C78  0877               	movf	??_differenceBetweenTimePeriod,w
 15501  0C79  0081               	movwf	1
 15502                           
 15503                           ;main.c: 221: while (stop.m > start.m) {
 15504  0C7A  2C81               	goto	i1l3929
 15505  0C7B                     i1l3927:
 15506                           
 15507                           ;main.c: 222: --start.h;
 15508  0C7B  3001               	movlw	1
 15509  0C7C  02F0               	subwf	differenceBetweenTimePeriod@start,f
 15510                           
 15511                           ;main.c: 223: start.m += 60;
 15512  0C7D  303C               	movlw	60
 15513  0C7E  00F7               	movwf	??_differenceBetweenTimePeriod
 15514  0C7F  0877               	movf	??_differenceBetweenTimePeriod,w
 15515  0C80  07F1               	addwf	differenceBetweenTimePeriod@start+1,f
 15516  0C81                     i1l3929:
 15517  0C81  0874               	movf	differenceBetweenTimePeriod@stop+1,w
 15518  0C82  0271               	subwf	differenceBetweenTimePeriod@start+1,w
 15519  0C83  1C03               	skipc
 15520  0C84  2C86               	goto	u324_21
 15521  0C85  2C87               	goto	u324_20
 15522  0C86                     u324_21:
 15523  0C86  2C7B               	goto	i1l3927
 15524  0C87                     u324_20:
 15525  0C87                     i1l3931:
 15526                           
 15527                           ;main.c: 224: };main.c: 225: diff->m = start.m - stop.m;
 15528  0C87  0874               	movf	differenceBetweenTimePeriod@stop+1,w
 15529  0C88  0271               	subwf	differenceBetweenTimePeriod@start+1,w
 15530  0C89  00F7               	movwf	??_differenceBetweenTimePeriod
 15531  0C8A  0A76               	incf	differenceBetweenTimePeriod@diff,w
 15532  0C8B  0086               	movwf	6
 15533  0C8C  0187               	clrf	7
 15534  0C8D  0877               	movf	??_differenceBetweenTimePeriod,w
 15535  0C8E  0081               	movwf	1
 15536                           
 15537                           ;main.c: 226: diff->h = start.h - stop.h;
 15538  0C8F  0873               	movf	differenceBetweenTimePeriod@stop,w
 15539  0C90  0270               	subwf	differenceBetweenTimePeriod@start,w
 15540  0C91  00F7               	movwf	??_differenceBetweenTimePeriod
 15541  0C92  0876               	movf	differenceBetweenTimePeriod@diff,w
 15542  0C93  0086               	movwf	6
 15543  0C94  0187               	clrf	7
 15544  0C95  0877               	movf	??_differenceBetweenTimePeriod,w
 15545  0C96  0081               	movwf	1
 15546  0C97                     i1l1086:
 15547  0C97  0008               	return
 15548  0C98                     __end_of_differenceBetweenTimePeriod:
 15549                           
 15550                           	psect	text49
 15551  09F3                     __ptext49:	
 15552 ;; *************** function _TMR2_StartTimer *****************
 15553 ;; Defined at:
 15554 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 15555 ;; Parameters:    Size  Location     Type
 15556 ;;		None
 15557 ;; Auto vars:     Size  Location     Type
 15558 ;;		None
 15559 ;; Return value:  Size  Location     Type
 15560 ;;                  1    wreg      void 
 15561 ;; Registers used:
 15562 ;;		status,2, status,0, pclath, cstack
 15563 ;; Tracked objects:
 15564 ;;		On entry : 0/0
 15565 ;;		On exit  : 0/0
 15566 ;;		Unchanged: 0/0
 15567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15572 ;;Total ram usage:        0 bytes
 15573 ;; Hardware stack levels used:    1
 15574 ;; Hardware stack levels required when called:    1
 15575 ;; This function calls:
 15576 ;;		_TMR2_Start
 15577 ;; This function is called by:
 15578 ;;		_menuLCD_ISR
 15579 ;; This function uses a non-reentrant model
 15580 ;;
 15581                           
 15582                           
 15583                           ;psect for function _TMR2_StartTimer
 15584  09F3                     _TMR2_StartTimer:
 15585  09F3                     i1l3857:	
 15586                           ;incstack = 0
 15587                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
 15588                           
 15589                           
 15590                           ;tmr2.c: 108: TMR2_Start();
 15591  09F3  3189  21E4  3189   	fcall	_TMR2_Start
 15592  09F6                     i1l761:
 15593  09F6  0008               	return
 15594  09F7                     __end_of_TMR2_StartTimer:
 15595                           
 15596                           	psect	text50
 15597  09E4                     __ptext50:	
 15598 ;; *************** function _TMR2_Start *****************
 15599 ;; Defined at:
 15600 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 15601 ;; Parameters:    Size  Location     Type
 15602 ;;		None
 15603 ;; Auto vars:     Size  Location     Type
 15604 ;;		None
 15605 ;; Return value:  Size  Location     Type
 15606 ;;                  1    wreg      void 
 15607 ;; Registers used:
 15608 ;;		None
 15609 ;; Tracked objects:
 15610 ;;		On entry : 0/0
 15611 ;;		On exit  : 0/0
 15612 ;;		Unchanged: 0/0
 15613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15618 ;;Total ram usage:        0 bytes
 15619 ;; Hardware stack levels used:    1
 15620 ;; This function calls:
 15621 ;;		Nothing
 15622 ;; This function is called by:
 15623 ;;		_TMR2_StartTimer
 15624 ;; This function uses a non-reentrant model
 15625 ;;
 15626                           
 15627                           
 15628                           ;psect for function _TMR2_Start
 15629  09E4                     _TMR2_Start:
 15630  09E4                     i1l3727:	
 15631                           ;incstack = 0
 15632                           ; Regs used in _TMR2_Start: []
 15633                           
 15634                           
 15635                           ;tmr2.c: 103: T2CONbits.TMR2ON = 1;
 15636  09E4  0025               	movlb	5	; select bank5
 15637  09E5  178E               	bsf	14,7	;volatile
 15638  09E6                     i1l758:
 15639  09E6  0008               	return
 15640  09E7                     __end_of_TMR2_Start:
 15641                           
 15642                           	psect	text51
 15643  09E1                     __ptext51:	
 15644 ;; *************** function _PWM_Output_D4_Enable *****************
 15645 ;; Defined at:
 15646 ;;		line 229 in file "main.c"
 15647 ;; Parameters:    Size  Location     Type
 15648 ;;		None
 15649 ;; Auto vars:     Size  Location     Type
 15650 ;;		None
 15651 ;; Return value:  Size  Location     Type
 15652 ;;                  1    wreg      void 
 15653 ;; Registers used:
 15654 ;;		None
 15655 ;; Tracked objects:
 15656 ;;		On entry : 0/0
 15657 ;;		On exit  : 0/0
 15658 ;;		Unchanged: 0/0
 15659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15664 ;;Total ram usage:        0 bytes
 15665 ;; Hardware stack levels used:    1
 15666 ;; This function calls:
 15667 ;;		Nothing
 15668 ;; This function is called by:
 15669 ;;		_menuLCD_ISR
 15670 ;; This function uses a non-reentrant model
 15671 ;;
 15672                           
 15673                           
 15674                           ;psect for function _PWM_Output_D4_Enable
 15675  09E1                     _PWM_Output_D4_Enable:
 15676  09E1                     i1l3933:	
 15677                           ;incstack = 0
 15678                           ; Regs used in _PWM_Output_D4_Enable: []
 15679                           
 15680                           
 15681                           ;main.c: 230: PWM6EN = 1;
 15682  09E1  0027               	movlb	7	; select bank7
 15683  09E2  178E               	bsf	14,7	;volatile
 15684  09E3                     i1l1089:
 15685  09E3  0008               	return
 15686  09E4                     __end_of_PWM_Output_D4_Enable:
 15687                           
 15688                           	psect	text52
 15689  0AC4                     __ptext52:	
 15690 ;; *************** function _LCDstr *****************
 15691 ;; Defined at:
 15692 ;;		line 193 in file "main.c"
 15693 ;; Parameters:    Size  Location     Type
 15694 ;;  p               1    wreg     PTR unsigned char 
 15695 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 15696 ;; Auto vars:     Size  Location     Type
 15697 ;;  p               1   11[COMMON] PTR unsigned char 
 15698 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 15699 ;;  c               1   10[COMMON] unsigned char 
 15700 ;; Return value:  Size  Location     Type
 15701 ;;                  1    wreg      void 
 15702 ;; Registers used:
 15703 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15704 ;; Tracked objects:
 15705 ;;		On entry : 0/0
 15706 ;;		On exit  : 0/0
 15707 ;;		Unchanged: 0/0
 15708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15710 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15711 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15712 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15713 ;;Total ram usage:        3 bytes
 15714 ;; Hardware stack levels used:    1
 15715 ;; Hardware stack levels required when called:    3
 15716 ;; This function calls:
 15717 ;;		_LCDchar
 15718 ;; This function is called by:
 15719 ;;		_menuLCD_ISR
 15720 ;; This function uses a non-reentrant model
 15721 ;;
 15722                           
 15723                           
 15724                           ;psect for function _LCDstr
 15725  0AC4                     _LCDstr:
 15726                           
 15727                           ;incstack = 0
 15728                           ; Regs used in _LCDstr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15729                           ;LCDstr@p stored from wreg
 15730  0AC4  00FB               	movwf	LCDstr@p
 15731  0AC5                     i1l3913:
 15732                           
 15733                           ;main.c: 195: unsigned char c;;main.c: 197: while((c = *p++)) LCDchar(c);
 15734  0AC5  2ACA               	goto	i1l3917
 15735  0AC6                     i1l3915:
 15736  0AC6  087A               	movf	LCDstr@c,w
 15737  0AC7  318A  2224  318A   	fcall	_LCDchar
 15738  0ACA                     i1l3917:
 15739  0ACA  087B               	movf	LCDstr@p,w
 15740  0ACB  0086               	movwf	6
 15741  0ACC  0187               	clrf	7
 15742  0ACD  0AFB               	incf	LCDstr@p,f
 15743  0ACE  0801               	movf	1,w
 15744  0ACF  00F9               	movwf	??_LCDstr
 15745  0AD0  0879               	movf	??_LCDstr,w
 15746  0AD1  00FA               	movwf	LCDstr@c
 15747  0AD2  087A               	movf	LCDstr@c,w
 15748  0AD3  1D03               	btfss	3,2
 15749  0AD4  2AD6               	goto	u322_21
 15750  0AD5  2AD7               	goto	u322_20
 15751  0AD6                     u322_21:
 15752  0AD6  2AC6               	goto	i1l3915
 15753  0AD7                     u322_20:
 15754  0AD7                     i1l1073:
 15755  0AD7  0008               	return
 15756  0AD8                     __end_of_LCDstr:
 15757                           
 15758                           	psect	text53
 15759  0A24                     __ptext53:	
 15760 ;; *************** function _LCDchar *****************
 15761 ;; Defined at:
 15762 ;;		line 188 in file "main.c"
 15763 ;; Parameters:    Size  Location     Type
 15764 ;;  c               1    wreg     unsigned char 
 15765 ;; Auto vars:     Size  Location     Type
 15766 ;;  c               1    8[COMMON] unsigned char 
 15767 ;; Return value:  Size  Location     Type
 15768 ;;                  1    wreg      void 
 15769 ;; Registers used:
 15770 ;;		wreg, status,2, status,0, pclath, cstack
 15771 ;; Tracked objects:
 15772 ;;		On entry : 0/0
 15773 ;;		On exit  : 0/0
 15774 ;;		Unchanged: 0/0
 15775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15779 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15780 ;;Total ram usage:        1 bytes
 15781 ;; Hardware stack levels used:    1
 15782 ;; Hardware stack levels required when called:    2
 15783 ;; This function calls:
 15784 ;;		i1_LCDsend2x4
 15785 ;; This function is called by:
 15786 ;;		_LCDstr
 15787 ;;		_menuLCD_ISR
 15788 ;; This function uses a non-reentrant model
 15789 ;;
 15790                           
 15791                           
 15792                           ;psect for function _LCDchar
 15793  0A24                     _LCDchar:
 15794                           
 15795                           ;incstack = 0
 15796                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 15797                           ;LCDchar@c stored from wreg
 15798  0A24  00F8               	movwf	LCDchar@c
 15799  0A25                     i1l3729:
 15800                           
 15801                           ;main.c: 190: LCDsend2x4(c, 0x01);
 15802  0A25  01F2               	clrf	i1LCDsend2x4@mode
 15803  0A26  0AF2               	incf	i1LCDsend2x4@mode,f
 15804  0A27  0878               	movf	LCDchar@c,w
 15805  0A28  3186  26B6  318A   	fcall	i1_LCDsend2x4
 15806  0A2B                     i1l1067:
 15807  0A2B  0008               	return
 15808  0A2C                     __end_of_LCDchar:
 15809                           
 15810                           	psect	text54
 15811  0A1D                     __ptext54:	
 15812 ;; *************** function _LCDcmd *****************
 15813 ;; Defined at:
 15814 ;;		line 183 in file "main.c"
 15815 ;; Parameters:    Size  Location     Type
 15816 ;;  c               1    wreg     unsigned char 
 15817 ;; Auto vars:     Size  Location     Type
 15818 ;;  c               1    8[COMMON] unsigned char 
 15819 ;; Return value:  Size  Location     Type
 15820 ;;                  1    wreg      void 
 15821 ;; Registers used:
 15822 ;;		wreg, status,2, status,0, pclath, cstack
 15823 ;; Tracked objects:
 15824 ;;		On entry : 0/0
 15825 ;;		On exit  : 0/0
 15826 ;;		Unchanged: 0/0
 15827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15829 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15831 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15832 ;;Total ram usage:        1 bytes
 15833 ;; Hardware stack levels used:    1
 15834 ;; Hardware stack levels required when called:    2
 15835 ;; This function calls:
 15836 ;;		i1_LCDsend2x4
 15837 ;; This function is called by:
 15838 ;;		_menuLCD_ISR
 15839 ;; This function uses a non-reentrant model
 15840 ;;
 15841                           
 15842                           
 15843                           ;psect for function _LCDcmd
 15844  0A1D                     _LCDcmd:
 15845                           
 15846                           ;incstack = 0
 15847                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 15848                           ;LCDcmd@c stored from wreg
 15849  0A1D  00F8               	movwf	LCDcmd@c
 15850  0A1E                     i1l3911:
 15851                           
 15852                           ;main.c: 185: LCDsend2x4(c, 0);
 15853  0A1E  01F2               	clrf	i1LCDsend2x4@mode
 15854  0A1F  0878               	movf	LCDcmd@c,w
 15855  0A20  3186  26B6  318A   	fcall	i1_LCDsend2x4
 15856  0A23                     i1l1064:
 15857  0A23  0008               	return
 15858  0A24                     __end_of_LCDcmd:
 15859                           
 15860                           	psect	text55
 15861  06B6                     __ptext55:	
 15862 ;; *************** function i1_LCDsend2x4 *****************
 15863 ;; Defined at:
 15864 ;;		line 137 in file "main.c"
 15865 ;; Parameters:    Size  Location     Type
 15866 ;;  c               1    wreg     unsigned char 
 15867 ;;  mode            1    2[COMMON] unsigned char 
 15868 ;; Auto vars:     Size  Location     Type
 15869 ;;  c               1    5[COMMON] unsigned char 
 15870 ;;  lc              1    7[COMMON] unsigned char 
 15871 ;;  hc              1    6[COMMON] unsigned char 
 15872 ;; Return value:  Size  Location     Type
 15873 ;;                  1    wreg      void 
 15874 ;; Registers used:
 15875 ;;		wreg, status,2, status,0, pclath, cstack
 15876 ;; Tracked objects:
 15877 ;;		On entry : 0/0
 15878 ;;		On exit  : 0/0
 15879 ;;		Unchanged: 0/0
 15880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15881 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15882 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15883 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15884 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15885 ;;Total ram usage:        6 bytes
 15886 ;; Hardware stack levels used:    1
 15887 ;; Hardware stack levels required when called:    1
 15888 ;; This function calls:
 15889 ;;		i1_WriteI2C
 15890 ;; This function is called by:
 15891 ;;		_LCDcmd
 15892 ;;		_LCDchar
 15893 ;; This function uses a non-reentrant model
 15894 ;;
 15895                           
 15896                           
 15897                           ;psect for function i1_LCDsend2x4
 15898  06B6                     i1_LCDsend2x4:
 15899                           
 15900                           ;incstack = 0
 15901                           ; Regs used in i1_LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 15902                           ;i1LCDsend2x4@c stored from wreg
 15903  06B6  00F5               	movwf	i1LCDsend2x4@c
 15904  06B7                     i1l3681:
 15905                           
 15906                           ;main.c: 139: unsigned char hc;;main.c: 140: unsigned char lc;;main.c: 142: hc = c & 0xf
      +                          0;
 15907  06B7  0875               	movf	i1LCDsend2x4@c,w
 15908  06B8  39F0               	andlw	240
 15909  06B9  00F3               	movwf	??i1_LCDsend2x4
 15910  06BA  0873               	movf	??i1_LCDsend2x4,w
 15911  06BB  00F6               	movwf	i1LCDsend2x4@hc
 15912  06BC                     i1l3683:
 15913                           
 15914                           ;main.c: 143: lc = (c << 4) & 0xf0;
 15915  06BC  0875               	movf	i1LCDsend2x4@c,w
 15916  06BD  00F3               	movwf	??i1_LCDsend2x4
 15917  06BE  3003               	movlw	3
 15918  06BF                     u253_25:
 15919  06BF  35F3               	lslf	??i1_LCDsend2x4,f
 15920  06C0  3EFF               	addlw	-1
 15921  06C1  1D03               	skipz
 15922  06C2  2EBF               	goto	u253_25
 15923  06C3  3573               	lslf	??i1_LCDsend2x4,w
 15924  06C4  39F0               	andlw	240
 15925  06C5  00F4               	movwf	??i1_LCDsend2x4+1
 15926  06C6  0874               	movf	??i1_LCDsend2x4+1,w
 15927  06C7  00F7               	movwf	i1LCDsend2x4@lc
 15928  06C8                     i1l3685:	
 15929                           ;main.c: 145: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15930                           
 15931  06C8  0023               	movlb	3	; select bank3
 15932  06C9  0C0F               	rrf	15,w	;volatile
 15933  06CA  0C89               	rrf	9,f
 15934  06CB  3901               	andlw	1
 15935  06CC  00F3               	movwf	??i1_LCDsend2x4
 15936  06CD  0811               	movf	17,w	;volatile
 15937  06CE  391F               	andlw	31
 15938  06CF  0473               	iorwf	??i1_LCDsend2x4,w
 15939  06D0  1D03               	btfss	3,2
 15940  06D1  2ED3               	goto	u254_21
 15941  06D2  2ED4               	goto	u254_20
 15942  06D3                     u254_21:
 15943  06D3  2EC8               	goto	i1l3685
 15944  06D4                     u254_20:
 15945  06D4                     i1l1027:
 15946                           
 15947                           ;main.c: 146: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 15948  06D4  1411               	bsf	17,0	;volatile
 15949  06D5                     i1l1028:
 15950  06D5  1811               	btfsc	17,0	;volatile
 15951  06D6  2ED8               	goto	u255_21
 15952  06D7  2ED9               	goto	u255_20
 15953  06D8                     u255_21:
 15954  06D8  2ED5               	goto	i1l1028
 15955  06D9                     u255_20:
 15956  06D9                     i1l3687:
 15957  06D9  0C0F               	rrf	15,w	;volatile
 15958  06DA  0C89               	rrf	9,f
 15959  06DB  3901               	andlw	1
 15960  06DC  00F3               	movwf	??i1_LCDsend2x4
 15961  06DD  0811               	movf	17,w	;volatile
 15962  06DE  391F               	andlw	31
 15963  06DF  0473               	iorwf	??i1_LCDsend2x4,w
 15964  06E0  1D03               	btfss	3,2
 15965  06E1  2EE3               	goto	u256_21
 15966  06E2  2EE4               	goto	u256_20
 15967  06E3                     u256_21:
 15968  06E3  2ED9               	goto	i1l3687
 15969  06E4                     u256_20:
 15970  06E4                     i1l3689:
 15971                           
 15972                           ;main.c: 147: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15973  06E4  304E               	movlw	78
 15974  06E5  318D  25B7  3186   	fcall	i1_WriteI2C
 15975  06E8                     i1l3691:
 15976  06E8  0023               	movlb	3	; select bank3
 15977  06E9  0C0F               	rrf	15,w	;volatile
 15978  06EA  0C89               	rrf	9,f
 15979  06EB  3901               	andlw	1
 15980  06EC  00F3               	movwf	??i1_LCDsend2x4
 15981  06ED  0811               	movf	17,w	;volatile
 15982  06EE  391F               	andlw	31
 15983  06EF  0473               	iorwf	??i1_LCDsend2x4,w
 15984  06F0  1D03               	btfss	3,2
 15985  06F1  2EF3               	goto	u257_21
 15986  06F2  2EF4               	goto	u257_20
 15987  06F3                     u257_21:
 15988  06F3  2EE8               	goto	i1l3691
 15989  06F4                     u257_20:
 15990  06F4                     i1l3693:
 15991                           
 15992                           ;main.c: 148: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 15993  06F4  0876               	movf	i1LCDsend2x4@hc,w
 15994  06F5  0472               	iorwf	i1LCDsend2x4@mode,w
 15995  06F6  3808               	iorlw	8
 15996  06F7  318D  25B7  3186   	fcall	i1_WriteI2C
 15997  06FA                     i1l3695:
 15998  06FA  0023               	movlb	3	; select bank3
 15999  06FB  0C0F               	rrf	15,w	;volatile
 16000  06FC  0C89               	rrf	9,f
 16001  06FD  3901               	andlw	1
 16002  06FE  00F3               	movwf	??i1_LCDsend2x4
 16003  06FF  0811               	movf	17,w	;volatile
 16004  0700  391F               	andlw	31
 16005  0701  0473               	iorwf	??i1_LCDsend2x4,w
 16006  0702  1D03               	btfss	3,2
 16007  0703  2F05               	goto	u258_21
 16008  0704  2F06               	goto	u258_20
 16009  0705                     u258_21:
 16010  0705  2EFA               	goto	i1l3695
 16011  0706                     u258_20:
 16012  0706                     i1l3697:
 16013                           
 16014                           ;main.c: 149: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 16015  0706  0876               	movf	i1LCDsend2x4@hc,w
 16016  0707  0472               	iorwf	i1LCDsend2x4@mode,w
 16017  0708  380C               	iorlw	12
 16018  0709  318D  25B7  3186   	fcall	i1_WriteI2C
 16019  070C                     i1l3699:
 16020  070C  0023               	movlb	3	; select bank3
 16021  070D  0C0F               	rrf	15,w	;volatile
 16022  070E  0C89               	rrf	9,f
 16023  070F  3901               	andlw	1
 16024  0710  00F3               	movwf	??i1_LCDsend2x4
 16025  0711  0811               	movf	17,w	;volatile
 16026  0712  391F               	andlw	31
 16027  0713  0473               	iorwf	??i1_LCDsend2x4,w
 16028  0714  1D03               	btfss	3,2
 16029  0715  2F17               	goto	u259_21
 16030  0716  2F18               	goto	u259_20
 16031  0717                     u259_21:
 16032  0717  2F0C               	goto	i1l3699
 16033  0718                     u259_20:
 16034  0718                     i1l1042:
 16035  0718                     i1l3701:	
 16036                           ;main.c: 150: _delay((unsigned long)((1)*(1000000/4000000.0)));
 16037                           
 16038                           
 16039                           ;main.c: 151: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 16040  0718  0876               	movf	i1LCDsend2x4@hc,w
 16041  0719  0472               	iorwf	i1LCDsend2x4@mode,w
 16042  071A  3808               	iorlw	8
 16043  071B  318D  25B7  3186   	fcall	i1_WriteI2C
 16044  071E                     i1l3703:
 16045  071E  0023               	movlb	3	; select bank3
 16046  071F  0C0F               	rrf	15,w	;volatile
 16047  0720  0C89               	rrf	9,f
 16048  0721  3901               	andlw	1
 16049  0722  00F3               	movwf	??i1_LCDsend2x4
 16050  0723  0811               	movf	17,w	;volatile
 16051  0724  391F               	andlw	31
 16052  0725  0473               	iorwf	??i1_LCDsend2x4,w
 16053  0726  1D03               	btfss	3,2
 16054  0727  2F29               	goto	u260_21
 16055  0728  2F2A               	goto	u260_20
 16056  0729                     u260_21:
 16057  0729  2F1E               	goto	i1l3703
 16058  072A                     u260_20:
 16059  072A                     i1l3705:
 16060                           
 16061                           ;main.c: 152: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 16062  072A  0877               	movf	i1LCDsend2x4@lc,w
 16063  072B  0472               	iorwf	i1LCDsend2x4@mode,w
 16064  072C  3808               	iorlw	8
 16065  072D  318D  25B7  3186   	fcall	i1_WriteI2C
 16066  0730                     i1l3707:
 16067  0730  0023               	movlb	3	; select bank3
 16068  0731  0C0F               	rrf	15,w	;volatile
 16069  0732  0C89               	rrf	9,f
 16070  0733  3901               	andlw	1
 16071  0734  00F3               	movwf	??i1_LCDsend2x4
 16072  0735  0811               	movf	17,w	;volatile
 16073  0736  391F               	andlw	31
 16074  0737  0473               	iorwf	??i1_LCDsend2x4,w
 16075  0738  1D03               	btfss	3,2
 16076  0739  2F3B               	goto	u261_21
 16077  073A  2F3C               	goto	u261_20
 16078  073B                     u261_21:
 16079  073B  2F30               	goto	i1l3707
 16080  073C                     u261_20:
 16081  073C                     i1l3709:
 16082                           
 16083                           ;main.c: 153: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 16084  073C  0877               	movf	i1LCDsend2x4@lc,w
 16085  073D  0472               	iorwf	i1LCDsend2x4@mode,w
 16086  073E  380C               	iorlw	12
 16087  073F  318D  25B7  3186   	fcall	i1_WriteI2C
 16088  0742                     i1l3711:
 16089  0742  0023               	movlb	3	; select bank3
 16090  0743  0C0F               	rrf	15,w	;volatile
 16091  0744  0C89               	rrf	9,f
 16092  0745  3901               	andlw	1
 16093  0746  00F3               	movwf	??i1_LCDsend2x4
 16094  0747  0811               	movf	17,w	;volatile
 16095  0748  391F               	andlw	31
 16096  0749  0473               	iorwf	??i1_LCDsend2x4,w
 16097  074A  1D03               	btfss	3,2
 16098  074B  2F4D               	goto	u262_21
 16099  074C  2F4E               	goto	u262_20
 16100  074D                     u262_21:
 16101  074D  2F42               	goto	i1l3711
 16102  074E                     u262_20:
 16103  074E                     i1l1051:
 16104  074E                     i1l3713:	
 16105                           ;main.c: 154: _delay((unsigned long)((1)*(1000000/4000000.0)));
 16106                           
 16107                           
 16108                           ;main.c: 155: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 16109  074E  0877               	movf	i1LCDsend2x4@lc,w
 16110  074F  0472               	iorwf	i1LCDsend2x4@mode,w
 16111  0750  3808               	iorlw	8
 16112  0751  318D  25B7  3186   	fcall	i1_WriteI2C
 16113  0754                     i1l3715:
 16114  0754  0023               	movlb	3	; select bank3
 16115  0755  0C0F               	rrf	15,w	;volatile
 16116  0756  0C89               	rrf	9,f
 16117  0757  3901               	andlw	1
 16118  0758  00F3               	movwf	??i1_LCDsend2x4
 16119  0759  0811               	movf	17,w	;volatile
 16120  075A  391F               	andlw	31
 16121  075B  0473               	iorwf	??i1_LCDsend2x4,w
 16122  075C  1D03               	btfss	3,2
 16123  075D  2F5F               	goto	u263_21
 16124  075E  2F60               	goto	u263_20
 16125  075F                     u263_21:
 16126  075F  2F54               	goto	i1l3715
 16127  0760                     u263_20:
 16128  0760                     i1l1054:
 16129                           
 16130                           ;main.c: 156: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 16131  0760  1511               	bsf	17,2	;volatile
 16132  0761                     i1l1055:
 16133  0761  1911               	btfsc	17,2	;volatile
 16134  0762  2F64               	goto	u264_21
 16135  0763  2F65               	goto	u264_20
 16136  0764                     u264_21:
 16137  0764  2F61               	goto	i1l1055
 16138  0765                     u264_20:
 16139  0765                     i1l3717:
 16140                           
 16141                           ;main.c: 157: _delay((unsigned long)((50)*(1000000/4000000.0)));
 16142  0765  3004               	movlw	4
 16143  0766                     u499_27:
 16144  0766  0B89               	decfsz	9,f
 16145  0767  2F66               	goto	u499_27
 16146  0768                     i1l1058:
 16147  0768  0008               	return
 16148  0769                     __end_ofi1_LCDsend2x4:
 16149                           
 16150                           	psect	text56
 16151  0DB7                     __ptext56:	
 16152 ;; *************** function i1_WriteI2C *****************
 16153 ;; Defined at:
 16154 ;;		line 47 in file "I2C/i2c.c"
 16155 ;; Parameters:    Size  Location     Type
 16156 ;;  data_out        1    wreg     unsigned char 
 16157 ;; Auto vars:     Size  Location     Type
 16158 ;;  data_out        1    1[COMMON] unsigned char 
 16159 ;; Return value:  Size  Location     Type
 16160 ;;                  1    wreg      char 
 16161 ;; Registers used:
 16162 ;;		wreg, status,2, status,0
 16163 ;; Tracked objects:
 16164 ;;		On entry : 0/0
 16165 ;;		On exit  : 0/0
 16166 ;;		Unchanged: 0/0
 16167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16169 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16170 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16171 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16172 ;;Total ram usage:        2 bytes
 16173 ;; Hardware stack levels used:    1
 16174 ;; This function calls:
 16175 ;;		Nothing
 16176 ;; This function is called by:
 16177 ;;		_tsttc
 16178 ;;		i1_LCDsend2x4
 16179 ;; This function uses a non-reentrant model
 16180 ;;
 16181                           
 16182                           
 16183                           ;psect for function i1_WriteI2C
 16184  0DB7                     i1_WriteI2C:
 16185                           
 16186                           ;incstack = 0
 16187                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 16188                           ;i1WriteI2C@data_out stored from wreg
 16189  0DB7  00F1               	movwf	i1WriteI2C@data_out
 16190  0DB8                     i1l3651:
 16191                           
 16192                           ;i2c.c: 49: SSP1BUF = data_out;
 16193  0DB8  0871               	movf	i1WriteI2C@data_out,w
 16194  0DB9  0023               	movlb	3	; select bank3
 16195  0DBA  008C               	movwf	12	;volatile
 16196  0DBB                     i1l3653:
 16197                           
 16198                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 16199  0DBB  1F90               	btfss	16,7	;volatile
 16200  0DBC  2DBE               	goto	u244_21
 16201  0DBD  2DBF               	goto	u244_20
 16202  0DBE                     u244_21:
 16203  0DBE  2DC0               	goto	i1l3659
 16204  0DBF                     u244_20:
 16205  0DBF  2E01               	goto	i1l30
 16206  0DC0                     i1l3659:
 16207                           
 16208                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 16209  0DC0  300F               	movlw	15
 16210  0DC1  0510               	andwf	16,w	;volatile
 16211  0DC2  00F0               	movwf	??i1_WriteI2C
 16212  0DC3  3008               	movlw	8
 16213  0DC4  0670               	xorwf	??i1_WriteI2C,w
 16214  0DC5  1903               	btfsc	3,2
 16215  0DC6  2DC8               	goto	u245_21
 16216  0DC7  2DC9               	goto	u245_20
 16217  0DC8                     u245_21:
 16218  0DC8  2DDF               	goto	i1l3671
 16219  0DC9                     u245_20:
 16220  0DC9                     i1l3661:
 16221  0DC9  300F               	movlw	15
 16222  0DCA  0510               	andwf	16,w	;volatile
 16223  0DCB  00F0               	movwf	??i1_WriteI2C
 16224  0DCC  300B               	movlw	11
 16225  0DCD  0670               	xorwf	??i1_WriteI2C,w
 16226  0DCE  1903               	btfsc	3,2
 16227  0DCF  2DD1               	goto	u246_21
 16228  0DD0  2DD2               	goto	u246_20
 16229  0DD1                     u246_21:
 16230  0DD1  2DDF               	goto	i1l3671
 16231  0DD2                     u246_20:
 16232  0DD2                     i1l3663:
 16233                           
 16234                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 16235  0DD2  1610               	bsf	16,4	;volatile
 16236  0DD3                     i1l33:	
 16237                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 16238                           
 16239  0DD3  002E               	movlb	14	; select bank14
 16240  0DD4  1C0F               	btfss	15,0	;volatile
 16241  0DD5  2DD7               	goto	u247_21
 16242  0DD6  2DD8               	goto	u247_20
 16243  0DD7                     u247_21:
 16244  0DD7  2DD3               	goto	i1l33
 16245  0DD8                     u247_20:
 16246  0DD8                     i1l35:
 16247                           
 16248                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 16249  0DD8  0023               	movlb	3	; select bank3
 16250  0DD9  190F               	btfsc	15,2	;volatile
 16251  0DDA  2DDC               	goto	u248_21
 16252  0DDB  2DDD               	goto	u248_20
 16253  0DDC                     u248_21:
 16254  0DDC  2E01               	goto	i1l30
 16255  0DDD                     u248_20:
 16256  0DDD                     i1l3665:
 16257  0DDD  080F               	movf	15,w	;volatile
 16258  0DDE  2E01               	goto	i1l30
 16259  0DDF                     i1l3671:
 16260                           
 16261                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 16262  0DDF  300F               	movlw	15
 16263  0DE0  0510               	andwf	16,w	;volatile
 16264  0DE1  00F0               	movwf	??i1_WriteI2C
 16265  0DE2  3008               	movlw	8
 16266  0DE3  0670               	xorwf	??i1_WriteI2C,w
 16267  0DE4  1903               	btfsc	3,2
 16268  0DE5  2DE7               	goto	u249_21
 16269  0DE6  2DE8               	goto	u249_20
 16270  0DE7                     u249_21:
 16271  0DE7  2DF1               	goto	i1l42
 16272  0DE8                     u249_20:
 16273  0DE8                     i1l3673:
 16274  0DE8  300F               	movlw	15
 16275  0DE9  0510               	andwf	16,w	;volatile
 16276  0DEA  00F0               	movwf	??i1_WriteI2C
 16277  0DEB  300B               	movlw	11
 16278  0DEC  0670               	xorwf	??i1_WriteI2C,w
 16279  0DED  1D03               	btfss	3,2
 16280  0DEE  2DF0               	goto	u250_21
 16281  0DEF  2DF1               	goto	u250_20
 16282  0DF0                     u250_21:
 16283  0DF0  2E01               	goto	i1l30
 16284  0DF1                     u250_20:
 16285  0DF1                     i1l42:
 16286  0DF1  180F               	btfsc	15,0	;volatile
 16287  0DF2  2DF4               	goto	u251_21
 16288  0DF3  2DF5               	goto	u251_20
 16289  0DF4                     u251_21:
 16290  0DF4  2DF1               	goto	i1l42
 16291  0DF5                     u251_20:
 16292  0DF5                     i1l3675:
 16293  0DF5  0C0F               	rrf	15,w	;volatile
 16294  0DF6  0C89               	rrf	9,f
 16295  0DF7  3901               	andlw	1
 16296  0DF8  00F0               	movwf	??i1_WriteI2C
 16297  0DF9  0811               	movf	17,w	;volatile
 16298  0DFA  391F               	andlw	31
 16299  0DFB  0470               	iorwf	??i1_WriteI2C,w
 16300  0DFC  1D03               	btfss	3,2
 16301  0DFD  2DFF               	goto	u252_21
 16302  0DFE  2E00               	goto	u252_20
 16303  0DFF                     u252_21:
 16304  0DFF  2DF5               	goto	i1l3675
 16305  0E00                     u252_20:
 16306  0E00                     i1l47:
 16307                           
 16308                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 16309  0E00  0811               	movf	17,w	;volatile
 16310  0E01                     i1l30:
 16311  0E01  0008               	return
 16312  0E02                     __end_ofi1_WriteI2C:
 16313                           
 16314                           	psect	text57
 16315  0A6C                     __ptext57:	
 16316 ;; *************** function _TMR3_WriteTimer *****************
 16317 ;; Defined at:
 16318 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 16319 ;; Parameters:    Size  Location     Type
 16320 ;;  timerVal        2    0[COMMON] unsigned int 
 16321 ;; Auto vars:     Size  Location     Type
 16322 ;;		None
 16323 ;; Return value:  Size  Location     Type
 16324 ;;                  1    wreg      void 
 16325 ;; Registers used:
 16326 ;;		wreg, status,2
 16327 ;; Tracked objects:
 16328 ;;		On entry : 0/0
 16329 ;;		On exit  : 0/0
 16330 ;;		Unchanged: 0/0
 16331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16335 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16336 ;;Total ram usage:        2 bytes
 16337 ;; Hardware stack levels used:    1
 16338 ;; This function calls:
 16339 ;;		Nothing
 16340 ;; This function is called by:
 16341 ;;		_TMR3_ISR
 16342 ;;		_TMR3_Reload
 16343 ;; This function uses a non-reentrant model
 16344 ;;
 16345                           
 16346                           
 16347                           ;psect for function _TMR3_WriteTimer
 16348  0A6C                     _TMR3_WriteTimer:
 16349  0A6C                     i1l4213:	
 16350                           ;incstack = 0
 16351                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 16352                           
 16353                           
 16354                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 16355  0A6C  0024               	movlb	4	; select bank4
 16356  0A6D  1D14               	btfss	20,2	;volatile
 16357  0A6E  2A70               	goto	u346_21
 16358  0A6F  2A71               	goto	u346_20
 16359  0A70                     u346_21:
 16360  0A70  2A78               	goto	i1l4223
 16361  0A71                     u346_20:
 16362  0A71                     i1l4215:
 16363                           
 16364                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 16365  0A71  1014               	bcf	20,0	;volatile
 16366  0A72                     i1l4217:
 16367                           
 16368                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 16369  0A72  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 16370  0A73  0093               	movwf	19	;volatile
 16371  0A74                     i1l4219:
 16372                           
 16373                           ;tmr3.c: 136: TMR3L = timerVal;
 16374  0A74  0870               	movf	TMR3_WriteTimer@timerVal,w
 16375  0A75  0092               	movwf	18	;volatile
 16376  0A76                     i1l4221:
 16377                           
 16378                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 16379  0A76  1414               	bsf	20,0	;volatile
 16380                           
 16381                           ;tmr3.c: 140: }
 16382  0A77  2A7C               	goto	i1l465
 16383  0A78                     i1l4223:
 16384                           
 16385                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 16386  0A78  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 16387  0A79  0093               	movwf	19	;volatile
 16388  0A7A                     i1l4225:
 16389                           
 16390                           ;tmr3.c: 145: TMR3L = timerVal;
 16391  0A7A  0870               	movf	TMR3_WriteTimer@timerVal,w
 16392  0A7B  0092               	movwf	18	;volatile
 16393  0A7C                     i1l465:
 16394  0A7C  0008               	return
 16395  0A7D                     __end_of_TMR3_WriteTimer:
 16396                           
 16397                           	psect	text58
 16398  0AEE                     __ptext58:	
 16399 ;; *************** function _TMR1_ISR *****************
 16400 ;; Defined at:
 16401 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 16402 ;; Parameters:    Size  Location     Type
 16403 ;;		None
 16404 ;; Auto vars:     Size  Location     Type
 16405 ;;		None
 16406 ;; Return value:  Size  Location     Type
 16407 ;;                  1    wreg      void 
 16408 ;; Registers used:
 16409 ;;		wreg, status,2, status,0, pclath, cstack
 16410 ;; Tracked objects:
 16411 ;;		On entry : 0/0
 16412 ;;		On exit  : 0/0
 16413 ;;		Unchanged: 0/0
 16414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16419 ;;Total ram usage:        0 bytes
 16420 ;; Hardware stack levels used:    1
 16421 ;; Hardware stack levels required when called:    1
 16422 ;; This function calls:
 16423 ;;		Absolute function
 16424 ;;		_Clock_ISR
 16425 ;;		_TMR1_DefaultInterruptHandler
 16426 ;;		_TMR1_WriteTimer
 16427 ;; This function is called by:
 16428 ;;		_INTERRUPT_InterruptManager
 16429 ;; This function uses a non-reentrant model
 16430 ;;
 16431                           
 16432                           
 16433                           ;psect for function _TMR1_ISR
 16434  0AEE                     _TMR1_ISR:
 16435  0AEE                     i1l4537:	
 16436                           ;incstack = 0
 16437                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 16438                           
 16439                           
 16440                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 16441  0AEE  002E               	movlb	14	; select bank14
 16442  0AEF  1010               	bcf	16,0	;volatile
 16443  0AF0                     i1l4539:
 16444                           
 16445                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 16446  0AF0  0021               	movlb	1	; select bank1
 16447  0AF1  0829               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 16448  0AF2  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 16449  0AF3  0828               	movf	_timer1ReloadVal^(0+128),w	;volatile
 16450  0AF4  00F0               	movwf	TMR1_WriteTimer@timerVal
 16451  0AF5  318A  225B  318A   	fcall	_TMR1_WriteTimer
 16452  0AF8                     i1l4541:
 16453                           
 16454                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 16455  0AF8  0021               	movlb	1	; select bank1
 16456  0AF9  0826               	movf	_TMR1_InterruptHandler^(0+128),w
 16457  0AFA  0427               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 16458  0AFB  1903               	btfsc	3,2
 16459  0AFC  2AFE               	goto	u411_21
 16460  0AFD  2AFF               	goto	u411_20
 16461  0AFE                     u411_21:
 16462  0AFE  2B04               	goto	i1l414
 16463  0AFF                     u411_20:
 16464  0AFF                     i1l4543:
 16465                           
 16466                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 16467  0AFF  0827               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 16468  0B00  008A               	movwf	10
 16469  0B01  0826               	movf	_TMR1_InterruptHandler^(0+128),w
 16470  0B02  000A               	callw
 16471  0B03  318A               	pagesel	$
 16472  0B04                     i1l414:
 16473  0B04  0008               	return
 16474  0B05                     __end_of_TMR1_ISR:
 16475                           
 16476                           	psect	text59
 16477  0A5B                     __ptext59:	
 16478 ;; *************** function _TMR1_WriteTimer *****************
 16479 ;; Defined at:
 16480 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 16481 ;; Parameters:    Size  Location     Type
 16482 ;;  timerVal        2    0[COMMON] unsigned int 
 16483 ;; Auto vars:     Size  Location     Type
 16484 ;;		None
 16485 ;; Return value:  Size  Location     Type
 16486 ;;                  1    wreg      void 
 16487 ;; Registers used:
 16488 ;;		wreg, status,2
 16489 ;; Tracked objects:
 16490 ;;		On entry : 0/0
 16491 ;;		On exit  : 0/0
 16492 ;;		Unchanged: 0/0
 16493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16497 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16498 ;;Total ram usage:        2 bytes
 16499 ;; Hardware stack levels used:    1
 16500 ;; This function calls:
 16501 ;;		Nothing
 16502 ;; This function is called by:
 16503 ;;		_TMR1_ISR
 16504 ;;		_TMR1_Reload
 16505 ;; This function uses a non-reentrant model
 16506 ;;
 16507                           
 16508                           
 16509                           ;psect for function _TMR1_WriteTimer
 16510  0A5B                     _TMR1_WriteTimer:
 16511  0A5B                     i1l4199:	
 16512                           ;incstack = 0
 16513                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 16514                           
 16515                           
 16516                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 16517  0A5B  0024               	movlb	4	; select bank4
 16518  0A5C  1D0E               	btfss	14,2	;volatile
 16519  0A5D  2A5F               	goto	u345_21
 16520  0A5E  2A60               	goto	u345_20
 16521  0A5F                     u345_21:
 16522  0A5F  2A67               	goto	i1l4209
 16523  0A60                     u345_20:
 16524  0A60                     i1l4201:
 16525                           
 16526                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 16527  0A60  100E               	bcf	14,0	;volatile
 16528  0A61                     i1l4203:
 16529                           
 16530                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 16531  0A61  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 16532  0A62  008D               	movwf	13	;volatile
 16533  0A63                     i1l4205:
 16534                           
 16535                           ;tmr1.c: 136: TMR1L = timerVal;
 16536  0A63  0870               	movf	TMR1_WriteTimer@timerVal,w
 16537  0A64  008C               	movwf	12	;volatile
 16538  0A65                     i1l4207:
 16539                           
 16540                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 16541  0A65  140E               	bsf	14,0	;volatile
 16542                           
 16543                           ;tmr1.c: 140: }
 16544  0A66  2A6B               	goto	i1l401
 16545  0A67                     i1l4209:
 16546                           
 16547                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 16548  0A67  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 16549  0A68  008D               	movwf	13	;volatile
 16550  0A69                     i1l4211:
 16551                           
 16552                           ;tmr1.c: 145: TMR1L = timerVal;
 16553  0A69  0870               	movf	TMR1_WriteTimer@timerVal,w
 16554  0A6A  008C               	movwf	12	;volatile
 16555  0A6B                     i1l401:
 16556  0A6B  0008               	return
 16557  0A6C                     __end_of_TMR1_WriteTimer:
 16558                           
 16559                           	psect	text60
 16560  0E55                     __ptext60:	
 16561 ;; *************** function _Clock_ISR *****************
 16562 ;; Defined at:
 16563 ;;		line 295 in file "main.c"
 16564 ;; Parameters:    Size  Location     Type
 16565 ;;		None
 16566 ;; Auto vars:     Size  Location     Type
 16567 ;;		None
 16568 ;; Return value:  Size  Location     Type
 16569 ;;                  1    wreg      void 
 16570 ;; Registers used:
 16571 ;;		wreg, status,2, status,0
 16572 ;; Tracked objects:
 16573 ;;		On entry : 0/0
 16574 ;;		On exit  : 0/0
 16575 ;;		Unchanged: 0/0
 16576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16579 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16580 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16581 ;;Total ram usage:        1 bytes
 16582 ;; Hardware stack levels used:    1
 16583 ;; This function calls:
 16584 ;;		Nothing
 16585 ;; This function is called by:
 16586 ;;		_main
 16587 ;;		_TMR1_ISR
 16588 ;; This function uses a non-reentrant model
 16589 ;;
 16590                           
 16591                           
 16592                           ;psect for function _Clock_ISR
 16593  0E55                     _Clock_ISR:
 16594  0E55                     i1l4295:	
 16595                           ;incstack = 0
 16596                           ; Regs used in _Clock_ISR: [wreg+status,2+status,0]
 16597                           
 16598                           
 16599                           ;main.c: 297: t.s++;
 16600  0E55  3001               	movlw	1
 16601  0E56  00F0               	movwf	??_Clock_ISR
 16602  0E57  0870               	movf	??_Clock_ISR,w
 16603  0E58  0020               	movlb	0	; select bank0
 16604  0E59  07E1               	addwf	_t+2,f
 16605                           
 16606                           ;main.c: 299: if(t.s==60){
 16607  0E5A  303C               	movlw	60
 16608  0E5B  0661               	xorwf	_t+2,w
 16609  0E5C  1D03               	btfss	3,2
 16610  0E5D  2E5F               	goto	u366_21
 16611  0E5E  2E60               	goto	u366_20
 16612  0E5F                     u366_21:
 16613  0E5F  2E65               	goto	i1l4301
 16614  0E60                     u366_20:
 16615  0E60                     i1l4297:
 16616                           
 16617                           ;main.c: 300: t.m++;
 16618  0E60  3001               	movlw	1
 16619  0E61  00F0               	movwf	??_Clock_ISR
 16620  0E62  0870               	movf	??_Clock_ISR,w
 16621  0E63  07E0               	addwf	_t+1,f
 16622  0E64                     i1l4299:
 16623                           
 16624                           ;main.c: 301: t.s=0;
 16625  0E64  01E1               	clrf	_t+2
 16626  0E65                     i1l4301:
 16627                           
 16628                           ;main.c: 302: };main.c: 303: if(t.m==60){
 16629  0E65  303C               	movlw	60
 16630  0E66  0660               	xorwf	_t+1,w
 16631  0E67  1D03               	btfss	3,2
 16632  0E68  2E6A               	goto	u367_21
 16633  0E69  2E6B               	goto	u367_20
 16634  0E6A                     u367_21:
 16635  0E6A  2E70               	goto	i1l4307
 16636  0E6B                     u367_20:
 16637  0E6B                     i1l4303:
 16638                           
 16639                           ;main.c: 305: t.h++;
 16640  0E6B  3001               	movlw	1
 16641  0E6C  00F0               	movwf	??_Clock_ISR
 16642  0E6D  0870               	movf	??_Clock_ISR,w
 16643  0E6E  07DF               	addwf	_t,f
 16644  0E6F                     i1l4305:
 16645                           
 16646                           ;main.c: 306: t.m=0;
 16647  0E6F  01E0               	clrf	_t+1
 16648  0E70                     i1l4307:
 16649                           
 16650                           ;main.c: 307: };main.c: 308: if(t.h==24){
 16651  0E70  3018               	movlw	24
 16652  0E71  065F               	xorwf	_t,w
 16653  0E72  1D03               	btfss	3,2
 16654  0E73  2E75               	goto	u368_21
 16655  0E74  2E76               	goto	u368_20
 16656  0E75                     u368_21:
 16657  0E75  2E77               	goto	i1l4311
 16658  0E76                     u368_20:
 16659  0E76                     i1l4309:
 16660                           
 16661                           ;main.c: 309: t.h=0;
 16662  0E76  01DF               	clrf	_t
 16663  0E77                     i1l4311:
 16664                           
 16665                           ;main.c: 310: };main.c: 313: if(alarmsEnable && t.s >= clkAlarm.alarmVal.s && t.m >= clk
      +                          Alarm.alarmVal.m && t.h >= clkAlarm.alarmVal.h && editingClockAlarm == 0){
 16666  0E77  085E               	movf	_alarmsEnable,w
 16667  0E78  1903               	btfsc	3,2
 16668  0E79  2E7B               	goto	u369_21
 16669  0E7A  2E7C               	goto	u369_20
 16670  0E7B                     u369_21:
 16671  0E7B  2E9E               	goto	i1l4325
 16672  0E7C                     u369_20:
 16673  0E7C                     i1l4313:
 16674  0E7C  084F               	movf	_clkAlarm+2,w
 16675  0E7D  0261               	subwf	_t+2,w
 16676  0E7E  1C03               	skipc
 16677  0E7F  2E81               	goto	u370_21
 16678  0E80  2E82               	goto	u370_20
 16679  0E81                     u370_21:
 16680  0E81  2E9E               	goto	i1l4325
 16681  0E82                     u370_20:
 16682  0E82                     i1l4315:
 16683  0E82  084E               	movf	_clkAlarm+1,w
 16684  0E83  0260               	subwf	_t+1,w
 16685  0E84  1C03               	skipc
 16686  0E85  2E87               	goto	u371_21
 16687  0E86  2E88               	goto	u371_20
 16688  0E87                     u371_21:
 16689  0E87  2E9E               	goto	i1l4325
 16690  0E88                     u371_20:
 16691  0E88                     i1l4317:
 16692  0E88  084D               	movf	_clkAlarm,w
 16693  0E89  025F               	subwf	_t,w
 16694  0E8A  1C03               	skipc
 16695  0E8B  2E8D               	goto	u372_21
 16696  0E8C  2E8E               	goto	u372_20
 16697  0E8D                     u372_21:
 16698  0E8D  2E9E               	goto	i1l4325
 16699  0E8E                     u372_20:
 16700  0E8E                     i1l4319:
 16701  0E8E  0866               	movf	_editingClockAlarm,w
 16702  0E8F  0467               	iorwf	_editingClockAlarm+1,w
 16703  0E90  1D03               	btfss	3,2
 16704  0E91  2E93               	goto	u373_21
 16705  0E92  2E94               	goto	u373_20
 16706  0E93                     u373_21:
 16707  0E93  2E9E               	goto	i1l4325
 16708  0E94                     u373_20:
 16709  0E94                     i1l4321:
 16710                           
 16711                           ;main.c: 314: alarmPWMStart.h = -1;
 16712  0E94  30FF               	movlw	255
 16713  0E95  00F0               	movwf	??_Clock_ISR
 16714  0E96  0870               	movf	??_Clock_ISR,w
 16715  0E97  00D1               	movwf	_alarmPWMStart
 16716  0E98                     i1l4323:
 16717                           
 16718                           ;main.c: 315: clkAlarm.trigger = 1;
 16719  0E98  01D0               	clrf	_clkAlarm+3
 16720  0E99  0AD0               	incf	_clkAlarm+3,f
 16721                           
 16722                           ;main.c: 316: clkAlarm.alarmVal.h = 25;
 16723  0E9A  3019               	movlw	25
 16724  0E9B  00F0               	movwf	??_Clock_ISR
 16725  0E9C  0870               	movf	??_Clock_ISR,w
 16726  0E9D  00CD               	movwf	_clkAlarm
 16727  0E9E                     i1l4325:
 16728  0E9E  1003               	clrc
 16729  0E9F  1F96               	btfss	22,7	;volatile
 16730  0EA0  1403               	setc
 16731  0EA1  1803               	btfsc	3,0
 16732  0EA2  2EA4               	goto	u374_21
 16733  0EA3  2EA7               	goto	u374_20
 16734  0EA4                     u374_21:
 16735  0EA4  0020               	movlb	0	; select bank0
 16736  0EA5  1796               	bsf	22,7	;volatile
 16737  0EA6  2EA9               	goto	u375_24
 16738  0EA7                     u374_20:
 16739  0EA7  0020               	movlb	0	; select bank0
 16740  0EA8  1396               	bcf	22,7	;volatile
 16741  0EA9                     u375_24:
 16742  0EA9                     i1l1132:
 16743  0EA9  0008               	return
 16744  0EAA                     __end_of_Clock_ISR:
 16745                           
 16746                           	psect	text61
 16747  0003                     __ptext61:	
 16748 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 16749 ;; Defined at:
 16750 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 16751 ;; Parameters:    Size  Location     Type
 16752 ;;		None
 16753 ;; Auto vars:     Size  Location     Type
 16754 ;;		None
 16755 ;; Return value:  Size  Location     Type
 16756 ;;                  1    wreg      void 
 16757 ;; Registers used:
 16758 ;;		None
 16759 ;; Tracked objects:
 16760 ;;		On entry : 0/0
 16761 ;;		On exit  : 0/0
 16762 ;;		Unchanged: 0/0
 16763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16768 ;;Total ram usage:        0 bytes
 16769 ;; Hardware stack levels used:    1
 16770 ;; This function calls:
 16771 ;;		Nothing
 16772 ;; This function is called by:
 16773 ;;		_TMR1_Initialize
 16774 ;;		_TMR1_ISR
 16775 ;; This function uses a non-reentrant model
 16776 ;;
 16777                           
 16778                           
 16779                           ;psect for function _TMR1_DefaultInterruptHandler
 16780  0003                     _TMR1_DefaultInterruptHandler:
 16781  0003                     i1l420:	
 16782                           ;incstack = 0
 16783                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 16784                           
 16785  0003  0008               	return
 16786  0004                     __end_of_TMR1_DefaultInterruptHandler:
 16787  007E                     btemp	set	126	;btemp
 16788  007E                     int$flags	set	126
 16789  007E                     wtemp0	set	126
 16790                           
 16791                           	psect	config
 16792                           
 16793                           ;Config register CONFIG1 @ 0x8007
 16794                           ;	External Oscillator mode selection bits
 16795                           ;	FEXTOSC = OFF, Oscillator not enabled
 16796                           ;	Power-up default value for COSC bits
 16797                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 16798                           ;	Clock Out Enable bit
 16799                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 16800                           ;	Clock Switch Enable bit
 16801                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 16802                           ;	Fail-Safe Clock Monitor Enable bit
 16803                           ;	FCMEN = ON, FSCM timer enabled
 16804  8007                     	org	32775
 16805  8007  3FEC               	dw	16364
 16806                           
 16807                           ;Config register CONFIG2 @ 0x8008
 16808                           ;	Master Clear Enable bit
 16809                           ;	MCLRE = ON, MCLR pin is Master Clear function
 16810                           ;	Power-up Timer Enable bit
 16811                           ;	PWRTE = OFF, PWRT disabled
 16812                           ;	Low-Power BOR enable bit
 16813                           ;	LPBOREN = OFF, ULPBOR disabled
 16814                           ;	Brown-out reset enable bits
 16815                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 16816                           ;	Brown-out Reset Voltage Selection
 16817                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 16818                           ;	Zero-cross detect disable
 16819                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 16820                           ;	Peripheral Pin Select one-way control
 16821                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 16822                           ;	Stack Overflow/Underflow Reset Enable bit
 16823                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 16824                           ;	Background Debugger
 16825                           ;	DEBUG = OFF, Background Debugger disabled
 16826  8008                     	org	32776
 16827  8008  3FFF               	dw	16383
 16828                           
 16829                           ;Config register CONFIG3 @ 0x8009
 16830                           ;	WDT Period Select bits
 16831                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 16832                           ;	WDT operating mode
 16833                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 16834                           ;	WDT Window Select bits
 16835                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 16836                           ;	WDT input clock selector
 16837                           ;	WDTCCS = SC, Software Control
 16838  8009                     	org	32777
 16839  8009  3F9F               	dw	16287
 16840                           
 16841                           ;Config register CONFIG4 @ 0x800A
 16842                           ;	UserNVM self-write protection bits
 16843                           ;	WRT = OFF, Write protection off
 16844                           ;	Scanner Enable bit
 16845                           ;	SCANE = available, Scanner module is available for use
 16846                           ;	Low Voltage Programming Enable bit
 16847                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 16848  800A                     	org	32778
 16849  800A  3FFF               	dw	16383
 16850                           
 16851                           ;Config register CONFIG5 @ 0x800B
 16852                           ;	UserNVM Program memory code protection bit
 16853                           ;	CP = OFF, Program Memory code protection disabled
 16854                           ;	DataNVM code protection bit
 16855                           ;	CPD = OFF, Data EEPROM code protection disabled
 16856  800B                     	org	32779
 16857  800B  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    10
    Data        18
    BSS         22
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      80
    BANK1            80     10      27
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    differenceBetweenTimePeriod@diff	PTR struct Time size(1) Largest target is 3
		 -> menuLCD_ISR@diff(BANK0[3]), 

    LCDstr@p	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR5_ISR->_monitoring_ISR
    _monitoring_ISR->_DATAEE_WriteByte
    _tsttc->i1_WriteI2C
    _DATAEE_WriteByte->___wmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->i1_LCDsend2x4
    _LCDcmd->i1_LCDsend2x4
    i1_LCDsend2x4->i1_WriteI2C
    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR3_ISR->_menuLCD_ISR
    _menuLCD_ISR->_sprintf

Critical Paths under _main in BANK1

    _main->_LCDinit
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2044
                                              9 BANK1      1     1      0
                            _LCDinit
                 _PWM6_LoadDutyValue
              _PWM_Output_D4_Disable
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                     _TMR2_StopTimer
           _TMR3_SetInterruptHandler
           _TMR5_SetInterruptHandler
                          _editClock
                            _editLum
                           _editTemp
                   _i2c1_driver_open
                       _toggleAlarms
 ---------------------------------------------------------------------------------
 (1) _toggleAlarms                                         1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _editTemp                                             1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editLum                                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editClock                                            1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StopTimer                                       0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (2) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     522
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0     174
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     174
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Output_D4_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     220
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     780
                                              8 BANK1      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend2x4                                           6     5      1     736
                                              2 BANK1      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK1      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    8574
                           _TMR1_ISR
                           _TMR3_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR5_ISR                                             0     0      0    2335
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                     _monitoring_ISR *
 ---------------------------------------------------------------------------------
 (6) _monitoring_ISR                                       3     3      0    2095
                                             10 COMMON     3     3      0
           _ADCC_GetSingleConversion
                   _DATAEE_WriteByte
                             ___wmul
                              _tsttc
 ---------------------------------------------------------------------------------
 (7) _tsttc                                                2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _DATAEE_WriteByte                                     4     1      3     849
                                              6 COMMON     4     1      3
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (6) _TMR5_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR5_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0    5999
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
                        _menuLCD_ISR *
 ---------------------------------------------------------------------------------
 (6) _menuLCD_ISR                                         24    24      0    5759
                                             21 BANK0     24    24      0
                            _LCDchar
                             _LCDcmd
                             _LCDstr
               _PWM_Output_D4_Enable
                    _TMR2_StartTimer
        _differenceBetweenTimePeriod
                            _sprintf
               i1_PWM6_LoadDutyValue
            i1_PWM_Output_D4_Disable
                   i1_TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (7) i1_TMR2_StopTimer                                     0     0      0       0
                        i1_TMR2_Stop
 ---------------------------------------------------------------------------------
 (8) i1_TMR2_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM_Output_D4_Disable                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM6_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             29    21      8    3411
                                              0 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    1156
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _differenceBetweenTimePeriod                          8     1      7     595
                                              0 COMMON     8     1      7
 ---------------------------------------------------------------------------------
 (7) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (8) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PWM_Output_D4_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LCDstr                                               3     3      0     550
                                              9 COMMON     3     3      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (8) _LCDchar                                              1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (7) _LCDcmd                                               1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (9) i1_LCDsend2x4                                         6     5      1     384
                                              2 COMMON     6     5      1
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) i1_WriteI2C                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _TMR3_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
                          _Clock_ISR *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Clock_ISR                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _PWM6_LoadDutyValue
   _PWM_Output_D4_Disable
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_StopTimer
     _TMR2_Stop
   _TMR3_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _editClock
   _editLum
   _editTemp
   _i2c1_driver_open
   _toggleAlarms

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _Clock_ISR *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *
     _menuLCD_ISR *
       _LCDchar
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDcmd
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDstr
         _LCDchar
           i1_LCDsend2x4
             i1_WriteI2C
       _PWM_Output_D4_Enable
       _TMR2_StartTimer
         _TMR2_Start
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       i1_PWM6_LoadDutyValue
       i1_PWM_Output_D4_Disable
       i1_TMR2_StopTimer
         i1_TMR2_Stop
   _TMR5_ISR
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _monitoring_ISR *
       _ADCC_GetSingleConversion
       _DATAEE_WriteByte
         ___wmul (ARG)
       ___wmul
       _tsttc
         _ReadI2C
         i1_WriteI2C

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      A      1B       7       33.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      79      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      79      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Oct 31 12:43:13 2020

                                       _t 005F          __end_of_TMR5_SetInterruptHandler 0A11  
                              i1_WriteI2C 0DB7                                        l30 0F03  
                                      l33 0ECB                                        l42 0EED  
                                      l35 0ED0                                        l47 0F01  
                     ___wmul@multiplicand 0072                         ??_TMR5_WriteTimer 0072  
             __size_of_PWM6_LoadDutyValue 0019                                       l122 0DB6  
                                     l172 0B98                                       l175 07FD  
                                     l239 0A3F                                       l417 0A04  
                                     l178 0A33                                       l451 0C13  
                                     l481 0A0A                                       l705 0A10  
                                     l722 0B62                                       l563 0B49  
                                     l387 0BF4                                       l719 0A4C  
                                     l675 0C32                                       l764 09F2  
                                     l941 0E54                                       l925 0E13  
                                     l749 0A5A                                       l926 0E15  
                                     l767 09FE                                       l937 0E4E  
                                     l938 0E50                                       _PR2 028D  
                         _timer1ReloadVal 00A8                   __size_of_PMD_Initialize 0008  
                         _TMR2_Initialize 0A4D                                       wreg 0009  
                             ?_LCDsend2x4 00AC                           __end_of_LCDchar 0A2C  
                                    l1042 0656                                      l1051 0696  
                                    l1027 0604                                      l1203 0FB0  
                                    l1028 0606                                      l1204 0F95  
                                    l1061 0F79                                      l1054 06AC  
                                    l1222 0FFF                                      l1055 06AE  
                                    l1058 06B5                                      l1234 0D3D  
                                    l1226 0D22                                      l1250 0C49  
                                    l1227 0D1D                                      l1251 0C44  
                                    l1092 09EF                                      l1246 0D04  
                                    l1238 0CE9                                      l1239 0CE4  
                                    l1257 0C63                                      l1249 0C33  
                                    l1275 07D3                           _timer3ReloadVal 006E  
                                    l1276 07D6                                      l1268 07CB  
                                    l4101 0DA7                                      l1277 07D9  
                                    l4111 0DB3                                      l4103 0DA9  
                                    l4121 07FC                                      l4105 0DAC  
                                    l4113 0A2C                                      l4131 0B47  
                                    l4115 07F5                                      l4107 0DAF  
                                    l4123 0A40                                      l4117 07F8  
                                    l4109 0DB1                                      l4125 0A47  
                                    l4141 0BFE                                      l4133 0BF5  
                                    l4127 0B33                                      l4119 07F9  
                                    l4071 0D7A                                      l4143 0C05  
                                    l4135 0BF8                                      l4151 0C14  
                                    l4129 0B45                                      l4081 0D88  
                                    l4073 0D80                                      l4145 0C07  
                                    l4137 0BFA                                      l4161 0C24  
                                    l4153 0C17                                      l4241 09F0  
                                    l4251 0E2C                                      l4243 0E04  
                                    l4091 0D93                                      l4083 0D8A  
                                    l4075 0D82                                      l4171 0A50  
                                    l4147 0C08                                      l4139 0BFC  
                                    l4163 0C26                                      l4155 0C19  
                                    l4253 0E3B                                      l4245 0E04  
                                    l4261 05F5                                      l4093 0D9F  
                                    l4085 0D8D                                      l4077 0D84  
                                    l4181 0BD6                                      l4173 0A51  
                                    l4149 0C10                                      l4165 0C27  
                                    l4157 0C1B                                      l4501 0B8C  
                                    l4255 0E3F                                      l4247 0E19  
                                    l4271 0632                                      l4263 060A  
                                    l4095 0DA1                                      l4087 0D8F  
                                    l4079 0D86                                      l4191 0BE6  
                                    l4183 0BD9                                      l4175 0A54  
                                    l4167 0C2F                                      l4159 0C1D  
                                    l4503 0B8F                                      l4511 0A39  
                                    l4249 0E28                                      l4281 066C  
                                    l4273 0641                                      l4265 0619  
                                    l4257 05E4                                      l4097 0DA3  
                                    l4089 0D91                                      l4193 0BE8  
                                    l4185 0BDB                                      l4177 0A55  
                                    l4169 0A4D                                      l4505 0B92  
                                    l4513 0A3A                                      l4291 069D  
                                    l4283 0672                                      l4275 0647  
                                    l4267 061D                                      l4259 05E9  
                                    l4099 0DA5                                      l4195 0BE9  
                                    l4187 0BDD                                      l4179 0A57  
                                    l4507 0B95                                      l4515 0A3C  
                                    l3821 0ED5                                      l4293 06B2  
                                    l4285 0681                                      l4277 0656  
                                    l4269 062C                                      l4621 0F19  
                                    l4197 0BF1                                      l4189 0BDF  
                                    l4701 0D0E                                      l4509 0A34  
                                    l3831 0EF2                                      l3815 0EB4  
                                    l3807 0EAC                                      l4287 0687  
                                    l4279 065D                                      l4631 0F39  
                                    l4623 0F1D                                      l4615 0F04  
                                    l4711 0D32                                      l4703 0D17  
                                    l3817 0EBE                                      l3809 0EAF  
                                    l4289 0696                                      l4641 0F5D  
                                    l4633 0F41                                      l4625 0F29  
                                    l4617 0F0D                           __end_of_LCDinit 0F7A  
                                    l4545 0B4A                                      l4721 0CD5  
                                    l4713 0D33                                      l4705 0D19  
                                    l4801 079E                                      l3819 0EC9  
                                    l3827 0ED7                                      l4643 0F63  
                                    l4635 0F45                                      l4627 0F2D  
                                    l4619 0F11                                      l4491 0B7D  
                                    l4547 09FB                                      l4651 0F7A  
                                    l4731 0CF9                                      l4723 0CDE  
                                    l4715 0CCC                                      l4707 0D26  
                                    l4811 07B9                                      l4803 079F  
                                    l3829 0EE2                                      l4645 0F69  
                                    l4637 0F51                                      l4629 0F35  
                                    l3837 09FF                                      l4493 0B80  
                                    l4661 0F87                                      l4653 0F7F  
                                    l4733 0CFA                                      l4725 0CE0  
                                    l4717 0CCF                                      l4709 0D2C  
                                    l4741 0C59                                      l4813 07BE  
                                    l4805 07A4                                      l4821 07DD  
                                    l4647 0F6F                                      l4639 0F55  
                                    l3839 0A05                                      l3855 0A0B  
                                    l4495 0B83                                      l4671 0FBB  
                                    l4663 0F99                                      l4655 0F80  
                                    l4727 0CED                                      l4719 0CD0  
                                    l4735 0C38                                      l4815 07C3  
                                    l4807 07AD                                      l4649 09ED  
                                    l4497 0B86                                      l4681 0FD7  
                                    l4673 0FC1                                      l4665 0FA8  
                                    l4657 0F81                                      l4729 0CF3  
                                    l4737 0C41                                      l4809 07B4  
                                    l4817 07C7                                      l4499 0B89  
                                    l4691 0FEF                                      l4683 0FD9  
                                    l4675 0FC3                                      l4667 0FAB  
                                    l4659 0F82                                      l4739 0C4D  
                                    l4819 07D0                                      l4685 0FE0  
                                    l4693 0FF5                                      l4677 0FCA  
                                    l4669 0FB5                                      l4687 0FE7  
                                    l4679 0FD1                                      l4695 0D05  
                                    l4847 07E2                                      l4791 0794  
                                    l4689 0FED                                      l4697 0D08  
                                    l4793 0796                                      l4785 0769  
                                    l4699 0D09                                      l4795 0797  
                                    l4787 0773                                      l4797 0799  
                                    l4789 0776                                      l4799 079D  
                         __end_of_LCDsend 0E55                                      STR_1 1000  
                                    STR_2 1000                                      STR_3 1019  
                                    STR_4 1019                                      STR_5 1020  
                                    STR_6 1020                                      _LATA 0016  
                                    _LATB 0017                                      _LATC 0018  
                                    _LATD 0019                                      _LATE 001A  
                                    _T2PR 028D                                      u3500 0E28  
                                    u3501 0E27                                      u4125 0B5B  
                                    u3510 0E3B                                      u3511 0E3A  
                                    u3520 0E4E                                      u3600 0656  
                                    u4400 0F87                                      u4080 0A39  
                                    u3521 0E4D                                      u3601 0655  
                                    u4401 0F86                                      u4081 0A38  
                                    u3530 0E54                                      u3610 066C  
                                    u4410 0F99                                      u3531 0E53  
                                    u3611 066B                                      u4411 0F98  
                                    u2900 0ED0                                      u3620 0681  
                                    u4420 0FA8                                      u4500 0D0E  
                                    u2901 0ECF                                      u3621 0680  
                                    u4421 0FA7                                      u4501 0D0D  
                                    u2910 0ED5                                      u3630 0696  
                                    u3550 0604                                      u4430 0FB5  
                                    u4510 0D21                                      u2911 0ED4  
                                    u3631 0695                                      u3551 0603  
                                    u4431 0FB4                                      u4511 0D20  
                                    u2920 0EE2                                      u3480 0E13  
                                    u3640 06AC                                      u3560 060A  
                                    u4440 0FBB                                      u4520 0D26  
                                    u4600 0C4D                                      u2921 0EE1  
                                    u3481 0E12                                      u3641 06AB  
                                    u3561 0609                                      u3545 05EC  
                                    u4441 0FBA                                      u4425 0FA4  
                                    u4521 0D25                                      u4601 0C4C  
                                    u2930 0EED                                      u3490 0E19  
                                    u3650 06B2                                      u3570 0619  
                                    u4450 0FC1                                      u4530 0D32  
                                    u4610 0C53                                      u2931 0EEC  
                                    u3491 0E18                                      u3651 06B1  
                                    u3571 0618                                      u4451 0FC0  
                                    u4531 0D31                                      u4611 0C51  
                                    u2940 0EF2                                      u3580 062C  
                                    u4460 0FD1                                      u4540 0CD5  
                                    u4620 0C54                                      _PMD0 0796  
                                    u2941 0EF1                                      u3581 062B  
                                    u4461 0FD0                                      u4541 0CD4  
                                    _PMD1 0797                                      i1l30 0E01  
                                    i1l22 0B76                                      u2950 0F01  
                                    u2870 0EB3                                      u3590 0641  
                                    u4470 0FD7                                      u4550 0CE8  
                                    _PMD2 0798                                      i1l23 0B77  
                                    u2951 0F00                                      u2871 0EB2  
                                    u3591 0640                                      u4471 0FD6  
                                    u4551 0CE7                                      _PMD3 0799  
                                    u2880 0EBE                                      u4480 0FE7  
                                    u4560 0CED                                      _PMD4 079A  
                                    i1l33 0DD3                                      u2881 0EBD  
                                    u4481 0FE6                                      u4561 0CEC  
                                    _PMD5 079B                                      i1l42 0DF1  
                                    i1l26 0B7C                                      u2890 0EC9  
                                    u4490 0FED                                      u4570 0CF9  
                                    u4730 07A4                                      i1l35 0DD8  
                                    u2891 0EC8                                      u4491 0FEC  
                                    u4571 0CF8                                      u4731 07A3  
                                    u4580 0C38                                      u4740 07B4  
                                    u4581 0C37                                      u4741 07B3  
                                    u4590 0C48                                      u4750 07B9  
                                    i1l47 0E00                                      u4591 0C47  
                                    u4807 0C3C                                      u4751 07B8  
                                    u4760 07BE                                      u4817 0C5D  
                                    u4761 07BD                                      u4770 07C3  
                                    u4907 0F1E                                      u4827 0D12  
                                    u4771 07C2                                      u4780 07CF  
                                    u4917 0F2A                                      u4837 0D37  
                                    u4781 07CE                                      u4927 0F32  
                                    u4847 0CD9                                      u4937 0F3E  
                                    u4857 0CFE                                      u4947 0F46  
                                    u4867 0F8B                                      u4957 0F52  
                                    u4877 0FF9                                      u4797 07A8  
                                    u4967 0F5A                                      u4887 0F08  
                                    u4977 0F76                                      u4897 0F16  
                                    u4987 06B3                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                              ?_menuLCD_ISR 0070  
                                    _main 0769                                      _mode 0064  
                                    _temp 006D                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                                    start 0040                           _timer5ReloadVal 00A2  
                         _TMR3_Initialize 0BF5                ??_TMR1_SetInterruptHandler 00AC  
                         __end_of_ReadI2C 0B7D                 __size_of_DATAEE_WriteByte 001E  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 07FE  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                  __end_of_i2c1_driver_open 0A40  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                                     _ADPRE 009C  
                                   _ADRPT 010D                                     _T1CLK 0211  
                                   _T1CON 020E                                     _T3CLK 0217  
                                   _T2CON 028E                                     _T3CON 0214  
                                   _T5CLK 021D                                     _T2HLT 028F  
                                   _T5CON 021A                           __end_of___lwdiv 0D7A  
                                   _T2TMR 028C                                     i1l401 0A6B  
                                   _T2RST 0291                                     i1l420 0003  
                                   i1l414 0B04                                     i1l350 003E  
                                   i1l351 0038                           __end_of___lwmod 0CCC  
                                   i1l345 0017                                     i1l347 0023  
                                   i1l356 003E                                     i1l349 002F  
                                   i1l702 0B32                                     i1l465 0A7C  
                                   i1l722 0AED                                     i1l484 07FF  
                                   i1l708 07FE                                     i1l478 0B1B  
                                   i1l910 05CA                                     i1l575 0AA8  
                                   i1l911 05CC                                     i1l920 05E1  
                                   i1l761 09F6                                     i1l578 0AB1  
                                   i1l850 04E2                                     i1l764 09EC  
                                   i1l916 05DB                                     i1l917 05DC  
                                   i1l861 0511                                     i1l758 09E6  
                                   i1l862 0512                                     i1l846 04D5  
                                   i1l767 09FA                                     i1l880 0555  
                                   i1l689 0A8D                                     i1l873 0543  
                                   i1l849 04E1                                     i1l882 0559  
                                   i1l874 0545                                     i1l886 0568  
                                   i1l887 0569                                     i1l879 0554  
                                   i1l898 0598                                     i1l899 0599  
                                   _OSCEN 0891                                     _TMR1H 020D  
                                   _TMR1L 020C                                     _TMR3H 0213  
                                   _TMR3L 0212                                     _TMR5H 0219  
                                   _TMR5L 0218                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
                         __end_of_editLum 0D05                           _PWM6_Initialize 0A40  
       __size_of_TMR3_SetInterruptHandler 0006                 ?_TMR3_SetInterruptHandler 00AA  
                __end_ofi1_TMR2_StopTimer 09FB                          __end_of_TMR1_ISR 0B05  
                        __end_of_TMR3_ISR 0B1C                          __end_of_TMR5_ISR 0B33  
          ??_TMR3_DefaultInterruptHandler 0070                           __end_of_dpowers 1019  
                      __size_of_TMR2_Stop 0003                               ?_TMR2_Start 0070  
                         __end_of_isdigit 0AA0                                     _tsttc 04D5  
                 __end_of_TMR1_Initialize 0BF5                                     pclath 000A  
                          menuLCD_ISR@str 003B                                     status 0003  
                                   wtemp0 007E                           __end_of_sprintf 03BF  
                  ??_PWM_Output_D4_Enable 0070                           _TMR2_StartTimer 09F3  
                         _TMR1_WriteTimer 0A5B                           _TMR5_Initialize 0C14  
                         __initialization 0042                              ?i1_TMR2_Stop 0070  
                            __end_of_main 07F5                               ?i1_WriteI2C 0070  
                     __size_of_LCDsend2x4 00D4                   __end_of_TMR2_Initialize 0A5B  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 00B3  
                _TMR5_SetInterruptHandler 0A0B                        __size_of_Clock_ISR 0055  
                   _TMR3_InterruptHandler 00A4          differenceBetweenTimePeriod@start 0070  
                               ??_LCDchar 0078                                 ??_LCDinit 00B2  
                               ??_LCDsend 00AC                                    _ADACCH 0091  
                                  _ADACCL 0090                                    _ADCON0 0093  
                                  _ADCON1 0094                                    _ADCON2 0095  
                                  _ADCON3 0096                                    _ADERRH 0117  
                                  _ADERRL 0116                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                                    _ADUTHL 0110  
                        __end_of_WriteI2C 0F04                                    _ANSELA 0F38  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  ?_tsttc 0070                                    _T3GATE 0216  
                                  _T3GCON 0215                                    _T5GATE 021C  
                                  _T5GCON 021B                                    _RA6PPS 0F16  
                                  _RC3PPS 0F23                                    i1l1042 0718  
                 TMR1_WriteTimer@timerVal 0070                                    i1l1051 074E  
                                  i1l1027 06D4                                    _RC4PPS 0F24  
                                  i1l1132 0EA9                                    i1l1028 06D5  
                                  i1l1054 0760                                    i1l1150 015F  
                                  i1l1055 0761                                    i1l1064 0A23  
                                  i1l1073 0AD7                                    i1l1321 0BAC  
                                  i1l1058 0768                                    i1l1067 0A2B  
                                  i1l1163 01FD                                    i1l1147 010F  
                                  i1l1323 0BB0                                    i1l1092 09E9  
                                  i1l1156 0179                                    i1l1324 0BB6  
                                  i1l1173 0221                                    i1l1086 0C97  
                                  i1l1089 09E3                                    i1l4001 030D  
                                  _ODCONA 0F3A                                    i1l1530 0BC1  
                                  _ODCONB 0F45                                    i1l4011 032B  
                                  i1l4003 0313                                    _ODCONC 0F50  
                                  i1l1532 0BD5                                    _ODCOND 0F5B  
                                  i1l4021 034B                                    i1l4013 032F  
                                  i1l4005 031A                                    i1l1509 02F2  
                                  _ODCONE 0F66                                    i1l1526 03BE  
                                  i1l4031 036B                                    i1l4023 0355  
                                  i1l4007 031E                                    i1l4015 033A  
                                  i1l1199 04D4                                    i1l4201 0A60  
                                  i1l4033 0392                                    i1l4025 035B  
                                  i1l4017 0340                                    i1l4009 0324  
                                  i1l4041 03BA                                    i1l1802 0D79  
                                  i1l4211 0A69                                    i1l4203 0A61  
                                  i1l4035 0399                                    i1l4027 0362  
                                  i1l4019 0347                                    i1l1491 023F  
                                  i1l4051 0BA4                                    i1l1812 0CCB  
                                  i1l4301 0E65                                    i1l4205 0A63  
                                  i1l4221 0A76                                    i1l4213 0A6C  
                                  i1l4037 039D                                    i1l4029 0366  
                                  i1l4061 0BAB                                    i1l4053 0BA5  
                                  i1l4045 0B99                                    i1l4311 0E77  
                                  i1l4303 0E6B                                    i1l4207 0A65  
                                  i1l4215 0A71                                    i1l4223 0A78  
                                  i1l4039 03A6                                    i1l4231 0A83  
                                  i1l4063 0BB1                                    i1l4055 0BA6  
                                  i1l4047 0BA0                                    i1l4321 0E94  
                                  i1l4313 0E7C                                    i1l4305 0E6F  
                                  i1l4209 0A67                                    i1l4225 0A7A  
                                  i1l4217 0A72                                    i1l4065 0AD8  
                                  i1l4401 01AA                                    i1l4233 0A85  
                                  i1l4057 0BA7                                    i1l4049 0BA2  
                                  i1l4323 0E98                                    i1l4315 0E82  
                                  i1l4307 0E70                                    i1l4219 0A74  
                                  i1l4067 09F7                                    i1l4411 01DA  
                                  i1l4403 01B0                                    i1l4331 0087  
                                  i1l4235 0A87                                    i1l4227 0A7D  
                                  i1l4059 0BA9                   __end_of_TMR3_Initialize 0C14  
                                  i1l4317 0E88                                    i1l4325 0E9E  
                                  i1l4309 0E76                                    i1l3701 0718  
                                  i1l4069 09E7                                    i1l4421 01F8  
                                  i1l4413 01E0                                    i1l4405 01C0  
                                  i1l4341 00BA                                    i1l4333 00A4  
                                  i1l4229 0A82                                    i1l4237 0A89  
                                  i1l4319 0E8E                                    i1l3711 0742  
                                  i1l3703 071E                                    i1l4431 0216  
                                  i1l4415 01E5                                    i1l4423 01FE  
                                  i1l4407 01CF                                    i1l4351 00E0  
                                  i1l4343 00C0                                    i1l4335 00A8  
                                  i1l4327 0062                                    i1l4239 0A8B  
                                  i1l3713 074E                                    i1l3705 072A  
                                  i1l3801 0CC7                                    i1l4433 021D  
                                  i1l4425 0205                                    i1l4417 01EC  
                                  i1l4409 01D3                                    i1l4361 0105  
                                  i1l4353 00E8                                    i1l4345 00C9  
                                  i1l4337 00AC                                    i1l4329 0069  
                                  i1l3721 0B6D                                    i1l4441 03F2  
                                  i1l4521 0B1C                                    i1l3651 0DB8  
                                  i1l3715 0754                                    i1l3707 0730  
                                  i1l3731 0A8F                                    i1l4427 020A  
                                  i1l4419 01F1                                    i1l4371 0135  
                                  i1l4363 010A                                    i1l4355 00EE  
                                  i1l4347 00D1                                    i1l4339 00B2  
                                  i1l4531 0B07                                    i1l3723 0B7B  
                                  i1l4451 0490                                    i1l4443 0473  
                                  i1l4435 03BF                                    i1l4523 0B1E  
                                  i1l4541 0AF8                                    i1l3661 0DC9  
                                  i1l3653 0DBB                                    i1l3717 0765  
                                  i1l3709 073C                                    i1l3733 0A90  
                                  i1l3805 09EA                                    i1l4429 0211  
                                  i1l4381 0157                                    i1l4373 013A  
                                  i1l4357 00F7                                    i1l4349 00D7  
                                  i1l4533 0B0F                                    i1l3901 05B8  
                                  i1l4461 04AC                                    i1l4445 0478  
                                  i1l4453 0497                                    i1l4437 03D8  
                                  i1l4525 0B26                                    i1l4295 0E55  
                                  i1l4199 0A5B                                    i1l4543 0AFF  
                                  i1l3663 0DD2                                    i1l3671 0DDF  
                                  i1l3911 0A1E                                    i1l3727 09E4  
                                  i1l3751 0BCB                                    i1l3743 0BB7  
                                  i1l1983 0A9F                                    i1l3735 0A96  
                                  i1l4391 017D                                    i1l4383 0164  
                                  i1l4375 0140                                    i1l4367 011B  
                                  i1l4359 00FF                                    i1l4535 0B16  
                                  i1l3719 0B63                                    i1l3903 05BE  
                                  i1l4471 04B7                                    i1l4463 04B0  
                                  i1l4455 049C                                    i1l4447 0485  
                                  i1l4439 03E5                                    i1l4527 0B2D  
                                  u300_20 0501                                    i1l4297 0E60  
                                  i1l4537 0AEE                                    i1l3673 0DE8  
                                  i1l3665 0DDD                                    i1l3681 06B7  
                                  i1l3729 0A25                                    i1l3913 0AC5  
                                  i1l3921 0C65                                    i1l3761 0D46  
                                  i1l3753 0BD1                                    i1l3745 0BB9  
                                  i1l3737 0A9C                                    i1l4393 0183  
                                  i1l4385 016A                                    i1l4377 014E  
                                  i1l4369 012E                                    i1l4529 0B05  
                                  i1l3841 0AA1                                    i1l3905 05D0  
                                  u300_21 0500                                    i1l4481 04CC  
                                  i1l4473 04B8                                    i1l4465 04B2  
                                  i1l4457 04A2                                    i1l4449 0488  
                                  i1l4299 0E64                                    i1l4539 0AF0  
                                  i1l3675 0DF5                                    i1l3659 0DC0  
                                  i1l3691 06E8                                    i1l3683 06BC  
                                  i1l3915 0AC6                                    i1l3931 0C87  
                                  i1l3923 0C6B                                    i1l3771 0D65  
                                  i1l3763 0D49                                    i1l3747 0BBD  
                                  i1l3739 0A9E                                    i1l4395 0193  
                                  i1l4387 016D                                    i1l4379 0154  
                                  i1l3851 0AAD                                    i1l3843 0AA4  
                                  i1l3907 05E0                                    i1l4483 04CE  
                                  i1l4475 04BE                                    i1l4467 04B4  
                                  i1l4459 04A7                                    i1l3693 06F4  
                                  i1l3685 06C8                                    i1l3917 0ACA  
                                  i1l3933 09E1                                    i1l3925 0C71  
                                  i1l3773 0D69                                    i1l3765 0D4E  
                                  i1l3757 0D3E                                    i1l3749 0BC6  
                                  i1l3941 0236                                    i1l4397 01A2  
                                  i1l4389 0171                                    i1l3845 0AA5  
                                  i1l3861 04E6                                    i1l4485 04D0  
                                  i1l4477 04C3                                    i1l4469 04B6  
                                  i1l3695 06FA                                    i1l3687 06D9  
                                  i1l3927 0C7B                                    i1l3919 0C64  
                                  i1l3775 0D6A                                    i1l3767 0D52  
                                  i1l3759 0D40                                    i1l3791 0CAA  
                                  i1l3783 0C98                                    i1l3951 024D  
                                  i1l3943 023B                                    i1l3935 0224  
                                  i1l4399 01A6                                    i1l3847 0AA6  
                                  i1l3871 0516                                    i1l3863 04F1  
                                  i1l4479 04C8                                    i1l4487 04D2  
                                  i1l4751 000F                                    u301_20 0511  
                                  i1l3697 0706                                    i1l3689 06E4  
                                  i1l3857 09F3                                    i1l3929 0C81  
                                  i1l3777 0D6F                                    i1l3769 0D56  
                                  i1l3793 0CAE                                    i1l3785 0C9E  
                                  i1l3961 0280                                    i1l3953 0259  
                                  i1l3945 0240                                    i1l3937 0229  
                                  i1l3849 0AA7                                    i1l3881 0549  
                                  i1l3873 0521                                    u301_21 0510  
                                  i1l3865 04F5                                    i1l4489 04D3  
                                  i1l4761 002B                                    i1l4753 0013  
                                  i1l3699 070C                                    i1l3779 0D75  
                                  i1l3795 0CB8                                    i1l3787 0CA1  
                                  i1l3971 02AF                                    i1l3955 025C  
                                  i1l3939 022F                                    i1l3891 0588  
                                  i1l3883 055D                                    i1l3875 0525  
                                  i1l3867 0501                                    i1l3859 04D5  
                                  i1l4763 0033                                    i1l4755 001B  
                                  i1l4747 0006                                    i1l3797 0CBC  
                                  i1l3789 0CA6                                    i1l3973 02B3  
                                  i1l3957 026D                                    i1l3965 028C  
                                  i1l3949 0244                                    i1l3893 058C  
                                  i1l3885 056D                                    i1l3877 0531  
                                  i1l3869 0505                                    i1l4757 001F  
                                  i1l4749 000A                                    i1l3799 0CC1  
                                  i1l3991 02E8                                    i1l3983 02BE  
                                  i1l3975 02B7                                    i1l3967 02A4  
                                  i1l3959 027C                                    i1l3895 059D  
                                  i1l3887 0578                                    i1l3879 0537  
                                  i1l4767 003C                                    i1l4759 0027  
                                  u310_20 0568                                    u302_20 0516  
                                  i1l3993 02EE                                    i1l3977 02BC  
                                  i1l3969 02AB                                    i1l3897 05A8  
                                  i1l3889 057C                                    u310_21 0567  
                                  u302_21 0515                                    i1l3995 02FD  
                                  i1l3987 02D8                                    i1l3899 05AC  
                                  i1l3997 0306                                    i1l3989 02E2  
                                  i1l3999 0309                                    u311_20 056D  
                                  u303_20 0521                                    u311_21 056C  
                                  u303_21 0520                                    u320_20 05DB  
                                  u312_20 0578                                    u304_20 0531  
                                  u400_20 0485                                    u320_21 05DA  
                                  u312_21 0577                                    u304_21 0530  
                                  u400_21 0484                                    u400_25 0481  
                                  u321_20 05E0                                    u313_20 0588  
                                  u305_20 0543                                    u401_20 049C  
                                  u321_21 05DF                                    u313_21 0587  
                                  u305_21 0542                                    u401_21 049B  
                                  _LCDcmd 0A1D                                    u250_20 0DF1  
                                  u322_20 0AD7                                    u330_20 02E2  
                                  u410_20 0B16                                    u314_20 0598  
                                  u306_20 0549                                    u402_20 04A2  
                                  u250_21 0DF0                                    u322_21 0AD6  
                                  u330_21 02E1                                    u410_21 0B15  
                                  u314_21 0597                                    u306_21 0548  
                                  u402_21 04A1                                    u411_20 0AFF  
                                  u251_20 0DF5                                    u323_20 0C71  
                                  u331_20 02E8                                    u315_20 059D  
                                  u307_20 0554                                    u403_20 04A7  
                                  u411_21 0AFE                                    u251_21 0DF4  
                                  u323_21 0C70                                    u331_21 02E7  
                                  u315_21 059C                                    u307_21 0553  
                                  u403_21 04A6                                    u252_20 0E00  
                                  u244_20 0DBF                                    u260_20 072A  
                                  u324_20 0C87                                    u340_20 035B  
                                  u332_20 02EE                                    u316_20 05A8  
                                  u308_20 0559                                    u404_20 04AC  
                                  u252_21 0DFF                                    u244_21 0DBE  
                                  u260_21 0729                                    u324_21 0C86  
                                  u340_21 035A                                    u332_21 02ED  
                                  u316_21 05A7                                    u308_21 0558  
                                  u404_21 04AB                                    u245_20 0DC9  
                                  u261_20 073C                                    u341_20 03A6  
                                  u333_20 02FD                                    u325_20 022F  
                                  u317_20 05B8                                    u309_20 055D  
                                  u405_20 04BE                                    u245_21 0DC8  
                                  u261_21 073B                                    u341_21 03A5  
                                  u333_21 02FC                                    u325_21 022E  
                                  u317_21 05B7                                    u309_21 055C  
                                  u405_21 04BD                                    u253_25 06BF  
                                  u333_25 02F9                                    u246_20 0DD2  
                                  u262_20 074E                                    u254_20 06D4  
                                  u270_20 0BBD                                    u342_20 03BA  
                                  u334_20 030D                                    u326_20 0259  
                                  u318_20 05CA                                    u406_20 04C3  
                                  u246_21 0DD1                                    u262_21 074D  
                                  u254_21 06D3                                    u270_21 0BBC  
                                  u342_21 03B9                                    u334_21 030C  
                                  u326_21 0258                                    u318_21 05C9  
                                  u406_21 04C2                                    u247_20 0DD8  
                                  u263_20 0760                                    u255_20 06D9  
                                  u335_20 0313                                    u327_20 028C  
                                  u343_20 0BB0                                    u319_20 05D0  
                                  u407_20 04C8                                    u247_21 0DD7  
                                  u263_21 075F                                    u255_21 06D8  
                                  u335_21 0312                                    u327_21 028B  
                                  u343_21 0BAF                                    u319_21 05CF  
                                  u407_21 04C7                                    u271_25 0BC2  
                                  u248_20 0DDD                                    u264_20 0765  
                                  u256_20 06E4                                    u280_20 0D75  
                                  u336_20 0324                                    u328_20 02B3  
                                  u248_21 0DDC                                    u264_21 0764  
                                  u256_21 06E3                                    u280_21 0D74  
                                  u336_21 0323                                    u328_21 02B2  
                                  u272_25 0BC7                                    u344_25 0AE7  
                                  u345_20 0A60                                    u249_20 0DE8  
                                  u257_20 06F4                                    u281_20 0C9E  
                                  u273_20 0BD1                                    u337_20 0339  
                                  u329_20 02D7                                    u265_20 0B6D  
                                  u409_20 0B2D                                    u345_21 0A5F  
                                  u249_21 0DE7                                    u257_21 06F3  
                                  u281_21 0C9D                                    u273_21 0BD0  
                                  u337_21 0338                                    u329_21 02D6  
                                  u265_21 0B6C                                    u409_21 0B2C  
                                  u329_25 02D3                                    u370_20 0E82  
                                  u346_20 0A71                                    u258_20 0706  
                                  u274_20 0D46                                    u338_20 0340  
                                  u266_20 0B76                                    u370_21 0E81  
                                  u346_21 0A70                                    u258_21 0705  
                                  u274_21 0D45                                    u338_21 033F  
                                  u266_21 0B75                                    u282_25 0CA2  
                                  u371_20 0E88                                    u259_20 0718  
                                  u283_20 0CAE                                    u339_20 0355  
                                  u347_20 0A82                                    u267_20 0B7B  
                                  u371_21 0E87                                    u259_21 0717  
                                  u283_21 0CAD                                    u339_21 0354  
                                  u347_21 0A81                                    u267_21 0B7A  
                                  u275_25 0D4A                                    u372_20 0E8E  
                                  u276_20 0D56                                    u284_20 0CB8  
                                  u268_20 0A96                                    u380_20 00EE  
                                  u372_21 0E8D                                    u276_21 0D55  
                                  u284_21 0CB7                                    u268_21 0A95  
                                  u380_21 00ED                                    u284_25 0CB4  
                                  _LCDstr 0AC4                                    u373_20 0E94  
                                  u269_20 0A9C                                    u381_20 0105  
                                  u373_21 0E93                                    u269_21 0A9B  
                                  u381_21 0104                                    u277_25 0D57  
                                  u285_25 0CBD                                    u374_20 0EA7  
                                  u366_20 0E60                                    u278_20 0D65  
                                  u286_20 0CC7                                    u390_20 01DA  
                                  u382_20 010A                                    u470_20 0033  
                                  u374_21 0EA4                                    u366_21 0E5F  
                                  u278_21 0D64                                    u286_21 0CC6  
                                  u390_21 01D9                                    u382_21 0109  
                                  u470_21 0032                                    u278_25 0D61  
                                  u367_20 0E6B                                    u391_20 01E0  
                                  u383_20 010F                                    u471_20 0037  
                                  u463_20 000A                                    u367_21 0E6A  
                                  u391_21 01DF                                    u383_21 010E  
                                  u471_21 0036                                    u463_21 0009  
                                  u375_24 0EA9                                    u279_25 0D6B  
                                  u368_20 0E76                                    u392_20 01EC  
                                  u384_20 0135                                    u376_20 0069  
                                  u296_20 0AAD                                    u472_20 003C  
                                  u464_20 000F                                    u368_21 0E75  
                                  u392_21 01EB                                    u384_21 0134  
                                  u376_21 0068                                    u296_21 0AAC  
                                  u472_21 003B                                    u464_21 000E  
                                  u369_20 0E7C                                    u393_20 01F8  
                                  u385_20 013A                                    u377_20 00B2  
                                  u297_20 04E1                                    u465_20 0013  
                                  u369_21 0E7B                                    u393_21 01F7  
                                  u385_21 0139                                    u377_21 00B1  
                                  u297_21 04E0                                    u465_21 0012  
                                  u394_20 0205                                    u386_20 014E  
                                  u378_20 00C0                                    u298_20 04E6  
                                  u466_20 001B                                    u394_21 0204  
                                  u386_21 014D                                    u378_21 00BF  
                                  u298_21 04E5                                    u466_21 001A  
                                  u386_25 014A                                    u395_20 0211  
                                  u387_20 0164                                    u379_20 00D7  
                                  u299_20 04F1                                    u467_20 001F  
                                  u395_21 0210                                    u387_21 0163  
                                  u379_21 00D6                                    u299_21 04F0  
                                  u467_21 001E                                    u396_20 021D  
                                  u388_20 0183                                    u468_20 0027  
                                  u396_21 021C                                    u388_21 0182  
                                  u468_21 0026                                    _OSCFRQ 0893  
                                  u389_20 01B0                                    u469_20 002B  
                                  u389_21 01AF                                    u469_21 002A  
                                  u397_25 03CF                                    u398_20 03E5  
                                  u398_21 03E4                                    u398_25 03E1  
                                  u399_20 03F2                                    u399_21 03F1  
                                  u399_25 03EE                                    u499_27 0766  
                                  _PWM6EN 1C77                                 ??_ReadI2C 0070  
                             LCDsend2x4@c 00AF                           _TMR3_WriteTimer 0A6C  
                        __end_of_editTemp 0D3E              __end_ofi1_PWM6_LoadDutyValue 0AEE  
    __end_of_TMR1_DefaultInterruptHandler 0004     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0003                              _CCPTMRS1bits 021F  
                           ?i1_LCDsend2x4 0072                                    ___wmul 0BB7  
                       __end_of_TMR2_Stop 09F3                                 ??___lwdiv 0074  
                               ??___lwmod 007C                       __size_of_TMR2_Start 0003  
                                  _regIdx 0062                   __end_of_PWM6_Initialize 0A4D  
                               ??_editLum 00AA                   __size_of_monitoring_ISR 0116  
                         _ADCC_Initialize 0B33                            _PMD_Initialize 0A2C  
                               ??_isdigit 0070                  ?i1_PWM_Output_D4_Disable 0070  
                         menuLCD_ISR@diff 004A         __size_of_ADCC_GetSingleConversion 0012  
               ?_ADCC_GetSingleConversion 0070                   __end_of_TMR2_StartTimer 09F7  
TMR5_SetInterruptHandler@InterruptHandler 00AA  TMR3_SetInterruptHandler@InterruptHandler 00AA  
TMR1_SetInterruptHandler@InterruptHandler 00AA                                 ??_sprintf 0028  
                 __end_of_TMR1_WriteTimer 0A6C                   ??_PWM_Output_D4_Disable 00AA  
                     __size_ofi1_WriteI2C 004B                          ?_TMR1_Initialize 0070  
                 __end_of_TMR5_Initialize 0C33                         _SYSTEM_Initialize 0B7D  
                 __end_of__initialization 005E                        ?_SYSTEM_Initialize 0070  
                       __end_of_Clock_ISR 0EAA                           _TMR5_WriteTimer 0A7D  
                    __size_of_menuLCD_ISR 01C0                            __pcstackCOMMON 0070  
                          ??i1_LCDsend2x4 0073                              __pidataBANK0 0AB2  
                     ??_SYSTEM_Initialize 00AC                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                                 ?_TMR3_ISR 0070  
                               ?_TMR5_ISR 0070                          _DATAEE_WriteByte 0B99  
                            menuLCD_ISR@l 0047                        __size_of_editClock 0086  
         differenceBetweenTimePeriod@diff 0076                             __end_of_tsttc 05E2  
                        ?_TMR2_Initialize 0070           differenceBetweenTimePeriod@stop 0073  
                  __end_of_PMD_Initialize 0A34                              _alarmsEnable 005E  
                            ??_LCDsend2x4 00AD                 __end_of_SYSTEM_Initialize 0B99  
                            sprintf@width 0031                   __end_of_TMR3_WriteTimer 0A7D  
                                 ??_tsttc 0072                                __pbssBANK0 005F  
                              __pbssBANK1 00B4                                   ?_LCDcmd 0070  
                        ?_TMR3_Initialize 0070                                   ?_LCDstr 0070  
                                 LCDcmd@c 0078                                   LCDstr@c 007A  
                                 LCDstr@p 007B                                __pmaintext 0769  
        __end_of_TMR3_SetInterruptHandler 0A0B                                   ?___wmul 0070  
                              ??_TMR1_ISR 0072                                ??_TMR3_ISR 007E  
                 __end_of_ADCC_Initialize 0B4A                __end_of_PWM6_LoadDutyValue 0B63  
                              ??_TMR5_ISR 007D                                __pintentry 0004  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                    __size_ofi1_TMR2_Stop 0003                        __end_of_LCDsend2x4 06B6  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                               ?_WriteI2C 0070                          ?_PWM6_Initialize 0070  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
         __end_ofi1_PWM_Output_D4_Disable 09EA                           ?_PMD_Initialize 0070  
                       ?_i2c1_driver_open 0070             i1PWM6_LoadDutyValue@dutyValue 0070  
                                 _LCDchar 0A24                                   _LCDinit 0F04  
                                 _LCDsend 0E02                        ??_i2c1_driver_open 00AA  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                               ?_editTemp 0070                      i1_PWM6_LoadDutyValue 0AD8  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
                                 _PWM6DCH 038D                                   _PWM6DCL 038C  
                       ?i1_TMR2_StopTimer 0070                                   _PWM6CON 038E  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                                   _SSP1MSK 018E  
                            ??_TMR2_Start 0070                   __size_of_TMR2_StopTimer 0004  
                        ?_TMR2_StartTimer 0070                          ?_TMR1_WriteTimer 0070  
                      ??i1_TMR2_StopTimer 0070                   __end_of_TMR5_WriteTimer 0A8E  
                            LCDsend2x4@hc 00B0                              LCDsend2x4@lc 00B1  
                       __end_of_editClock 1000                          ?_TMR5_Initialize 0070  
                         __size_of_LCDcmd 0007                      DATAEE_WriteByte@bAdd 0076  
                      _i2c1_driver_i2cISR 00B7                           __size_of_LCDstr 0014  
                                 _ReadI2C 0B63                ??_TMR5_SetInterruptHandler 00AC  
                            ??i1_WriteI2C 0070                           __size_of___wmul 001F  
                                 ___lwdiv 0D3E                                   ___lwmod 0C98  
                      __end_of_TMR2_Start 09E7                                ??_WriteI2C 00AA  
                                 _editLum 0CCC                                   __ptext1 0C33  
                                 __ptext2 0A34                                   __ptext3 0D05  
                                 __ptext4 0CCC                                   __ptext5 0F7A  
                                 __ptext6 09FB                                   __ptext7 09F0  
                                 __ptext8 0B7D                                   __ptext9 0C14  
                          _monitoring_ISR 03BF            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 020E                                   _dpowers 100F  
                   _OSCILLATOR_Initialize 07F5                                 _T2CONbits 028E  
                                 _isdigit 0A8E                                 _T3CONbits 0214  
       __size_of_TMR1_SetInterruptHandler 0006                     ?i1_PWM6_LoadDutyValue 0070  
                ??_PIN_MANAGER_Initialize 00AA                 ?_TMR1_SetInterruptHandler 00AA  
                               _T2HLTbits 028F                                 _T5CONbits 021A  
                              ??_editTemp 00AA                      __end_ofi1_LCDsend2x4 0769  
              __size_of_SYSTEM_Initialize 001C                                   _sprintf 0222  
                                 clrloop0 0A12                      end_of_initialization 005E  
                        ?_TMR3_WriteTimer 0070                                 _T2RSTbits 0291  
                      __end_ofi1_WriteI2C 0E02                                   init_ram 0A17  
                                 initloop 0A18                            i1LCDsend2x4@hc 0076  
                          i1LCDsend2x4@lc 0077             __size_of_PWM_Output_D4_Enable 0003  
            ?_differenceBetweenTimePeriod 0070                          ?_ADCC_Initialize 0070  
        __end_of_ADCC_GetSingleConversion 0AB2                    __end_of_monitoring_ISR 04D5  
                               _PORTBbits 000D                                 _PORTCbits 000E  
                               _TMR2_Stop 09F0                  _TMR3_SetInterruptHandler 0A05  
                   _TMR5_InterruptHandler 00A0                                 _TRISCbits 0013  
                           ?_toggleAlarms 0070                  __end_of_DATAEE_WriteByte 0BB7  
                           _alarmPWMStart 0051                          ?_TMR5_WriteTimer 0070  
                 TMR5_WriteTimer@timerVal 0070            __size_of_PWM_Output_D4_Disable 0003  
           __end_of_PWM_Output_D4_Disable 09F0                            __end_of_LCDcmd 0A24  
                          __end_of_LCDstr 0AD8          __size_ofi1_PWM_Output_D4_Disable 0003  
                          LCDsend2x4@mode 00AC                                 _Clock_ISR 0E55  
                          __end_of___wmul 0BD6                           ?_monitoring_ISR 0070  
                       __size_of_TMR1_ISR 0017                         __size_of_TMR3_ISR 0017  
                       __size_of_TMR5_ISR 0017                                ?_TMR2_Stop 0070  
                  ?_OSCILLATOR_Initialize 0070                    ??i1_PWM6_LoadDutyValue 0072  
                           menuLCD_ISR@tt 0043                       start_initialization 0042  
    __end_of_TMR5_DefaultInterruptHandler 07FF     __size_of_TMR5_DefaultInterruptHandler 0001  
            _TMR5_DefaultInterruptHandler 07FE                            ??_toggleAlarms 00AA  
         __size_of_PIN_MANAGER_Initialize 003D                            _TMR2_StopTimer 09FB  
                        WriteI2C@data_out 00AB                                  ??_LCDcmd 0078  
                                ??_LCDstr 0079                             ??_menuLCD_ISR 0035  
                __size_of_TMR1_Initialize 001F                          ??_PMD_Initialize 00AA  
                              ?_Clock_ISR 0070                                  ??___wmul 0074  
                             __pdataBANK0 004D                         _editingClockAlarm 0066  
                       __size_of_WriteI2C 005A                     __size_ofi1_LCDsend2x4 00B3  
                _ADCC_GetSingleConversion 0AA0                    __end_of_TMR2_StopTimer 09FF  
                                ?_LCDchar 0070                                  ?_LCDinit 0070  
                                ?_LCDsend 0070                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00AA  
                      _PWM6_LoadDutyValue 0B4A                  __size_of_TMR2_Initialize 000E  
                            _isdigit$2891 0070             ?_TMR5_DefaultInterruptHandler 0070  
    __size_of_differenceBetweenTimePeriod 0034                                  LCDchar@c 0078  
                       __size_of_editTemp 0039                                  LCDsend@c 00AD  
                     ?_PWM6_LoadDutyValue 00AA                               sprintf@flag 0030  
               __size_of_i2c1_driver_open 000C                               sprintf@prec 002D  
                                ?_ReadI2C 0070                                 __pnvBANK0 006E  
                               __pnvBANK1 00A0                                 _editClock 0F7A  
                        ___lwdiv@dividend 0072                    _PIN_MANAGER_Initialize 0D7A  
               __size_ofi1_TMR2_StopTimer 0004                             ??i1_TMR2_Stop 0070  
                __size_of_TMR3_Initialize 001F                       __end_of_menuLCD_ISR 0222  
        __end_of_TMR1_SetInterruptHandler 0A05           ADCC_GetSingleConversion@channel 0073  
                            i1_LCDsend2x4 06B6                                 _dimingLed 0068  
                                ?___lwdiv 0070                                  ?___lwmod 0078  
             _i2c1_driver_busCollisionISR 00B9                      ??_PWM6_LoadDutyValue 00AC  
                                ?_editLum 0070              ??_INTERRUPT_InterruptManager 007E  
                             ??_TMR2_Stop 00AA                                  ?_isdigit 0070  
                         ?_TMR2_StopTimer 0070                  __size_of_PWM6_Initialize 000D  
                        ___lwdiv@quotient 0075                                  ?_sprintf 0020  
                                _T2CLKCON 0290                            __size_of_tsttc 010D  
                 i1_PWM_Output_D4_Disable 09E7                            ___wmul@product 0074  
                                _LATAbits 0016                                 clear_ram0 0A11  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR2_StartTimer 0004                             i1LCDsend2x4@c 0075  
                              ?_editClock 0070                                 _tempAlarm 0057  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 003C  
                                _PIR3bits 070F                                  _PIR4bits 0710  
              ??_TMR3_SetInterruptHandler 00AC                  __size_of_TMR5_Initialize 001F  
                             ??_Clock_ISR 0070                      __end_of_toggleAlarms 0C64  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR1_ISR 0AEE                                  _TMR3_ISR 0B05  
                                _TMR5_ISR 0B1C                                  _SSP1STAT 018F  
                       ??_TMR1_Initialize 00AC                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                     __end_ofi1_TMR2_Stop 09ED                                _ADCON3bits 0096  
                       ___wmul@multiplier 0070                        i1WriteI2C@data_out 0071  
            __end_of_PWM_Output_D4_Enable 09E4         __size_of_TMR5_SetInterruptHandler 0006  
                        __size_of_LCDchar 0008                 ?_TMR5_SetInterruptHandler 00AA  
                   DATAEE_WriteByte@bData 0078                          __size_of_LCDinit 0076  
                        __size_of_LCDsend 0053                         ?_DATAEE_WriteByte 0076  
                       ??_TMR2_Initialize 00AA                               _menuLCD_ISR 0062  
          ??_TMR5_DefaultInterruptHandler 0070                        ??_DATAEE_WriteByte 0079  
                        __size_of_ReadI2C 001A                                _ADSTATbits 0097  
                __size_of_TMR3_WriteTimer 0011                          ??_monitoring_ISR 007A  
                 ??_OSCILLATOR_Initialize 00AA                          __size_of___lwdiv 003C  
                        __size_of___lwmod 0034                                  _WriteI2C 0EAA  
                       ??_TMR3_Initialize 00AC                  _TMR1_SetInterruptHandler 09FF  
                        i1LCDsend2x4@mode 0072                          __size_of_editLum 0039  
                   _TMR1_InterruptHandler 00A6                                sprintf@val 002E  
                                _clkAlarm 004D                  __size_of_ADCC_Initialize 0017  
                        __size_of_isdigit 0012                                  _editTemp 0D05  
                         ___lwdiv@divisor 0070                           ___lwdiv@counter 0077  
                                __ptext10 0A0B                                  __ptext11 0BF5  
                                __ptext20 0B33                                  __ptext12 0A05  
                                __ptext21 09ED                                  __ptext13 0A4D  
                              _T1GCONbits 020F                                  __ptext30 03BF  
                                __ptext22 0B4A                                  __ptext14 0BD6  
                                __ptext31 04D5                                  __ptext23 0F04  
                                __ptext15 09FF                                  __ptext40 09EA  
                                __ptext32 0B63                                  __ptext24 05E2  
                                __ptext16 0A40                                  __ptext41 09E7  
                                __ptext33 0B99                                  __ptext25 0E02  
                                __ptext17 0A2C                                  __ptext50 09E4  
                                __ptext42 0AD8                                  __ptext34 0AA0  
                                __ptext26 0EAA                                  __ptext18 0D7A  
                                __ptext51 09E1                                  __ptext43 0222  
                                __ptext35 0A7D                                  __ptext19 07F5  
                                __ptext60 0E55                                  __ptext52 0AC4  
                                __ptext44 0A8E                                  __ptext36 0B05  
                                __ptext28 0B1C                                  __ptext61 0003  
                                __ptext53 0A24                                  __ptext45 0BB7  
                                __ptext37 07FF                                  __ptext29 07FE  
                                __ptext54 0A1D                                  __ptext46 0C98  
                                __ptext38 0062                                  __ptext55 06B6  
                                __ptext47 0D3E                                  __ptext39 09F7  
                                __ptext56 0DB7                                  __ptext48 0C64  
                                __ptext57 0A6C                                  __ptext49 09F3  
                                __ptext58 0AEE                                  __ptext59 0A5B  
                            _SSP1CON1bits 0190                              _SSP1CON2bits 0191  
               ??i1_PWM_Output_D4_Disable 0070                          __size_of_sprintf 019D  
                              _T3GCONbits 0215               DATAEE_WriteByte@GIEBitValue 0079  
                 TMR3_WriteTimer@timerVal 0070                          _i2c1_driver_open 0A34  
                       ??_PWM6_Initialize 00AA                             __size_of_main 008C  
                              _T5GCONbits 021B                                  _lumAlarm 0054  
                                _lumLevel 006C                     _PWM_Output_D4_Disable 09ED  
                             ??_editClock 00AA                          _editingTempAlarm 006B  
                        i1_TMR2_StopTimer 09F7                  __size_of_TMR5_WriteTimer 0011  
                                _prevTemp 005C                                tsttc@value 0073  
                             i1_TMR2_Stop 09EA                ??_ADCC_GetSingleConversion 0073  
                                int$flags 007E                         ??_TMR2_StartTimer 0070  
      __end_of_INTERRUPT_InterruptManager 0040                _INTERRUPT_InterruptManager 0004  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                       menuLCD_ISR@F12809 00B4      __end_of_TMR3_DefaultInterruptHandler 0800  
   __size_of_TMR3_DefaultInterruptHandler 0001              _TMR3_DefaultInterruptHandler 07FF  
                       ??_TMR5_Initialize 00AC                                _INTCONbits 000B  
                             _NVMCON1bits 081E                              _prevLumLevel 005A  
           __size_ofi1_PWM6_LoadDutyValue 0016                                  isdigit@c 0071  
                              _LCDsend2x4 05E2                                  intlevel1 0000  
                               sprintf@ap 002C                                 sprintf@sp 0034  
                        ___lwmod@dividend 007A                   ?_PIN_MANAGER_Initialize 0070  
                   __size_of_toggleAlarms 0031                           _editingLumAlarm 006A  
                    _PWM_Output_D4_Enable 09E1       __end_of_differenceBetweenTimePeriod 0C98  
             _differenceBetweenTimePeriod 0C64                          ??_TMR2_StopTimer 00AA  
                       ??_TMR3_WriteTimer 0072                             __pstringtext1 100F  
                           __pstringtext2 1000                             __pstringtext3 1019  
                           __pstringtext4 1020                             __pstringtext5 0000  
           ??_differenceBetweenTimePeriod 0077                                  sprintf@c 0033  
                                sprintf@f 0020             ?_TMR3_DefaultInterruptHandler 0070  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                         ___lwmod@divisor 0078                           ___lwmod@counter 007D  
             PWM6_LoadDutyValue@dutyValue 00AA                              _toggleAlarms 0C33  
                              _TMR2_Start 09E4            __end_of_PIN_MANAGER_Initialize 0DB7  
                       ??_ADCC_Initialize 00AA                    ?_PWM_Output_D4_Disable 0070  
                   ?_PWM_Output_D4_Enable 0070                           _TMR1_Initialize 0BD6  
