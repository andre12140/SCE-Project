

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Nov 09 20:03:09 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	psect	text42,local,class=CODE,merge=1,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2
    68                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text47,local,class=CODE,merge=1,delta=2,group=3
    70                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
    73                           	psect	text51,local,class=CODE,merge=1,delta=2
    74                           	psect	text52,local,class=CODE,merge=1,delta=2
    75                           	psect	text53,local,class=CODE,merge=1,delta=2
    76                           	psect	text54,local,class=CODE,merge=1,delta=2
    77                           	psect	text55,local,class=CODE,merge=1,delta=2
    78                           	psect	text56,local,class=CODE,merge=1,delta=2
    79                           	psect	text57,local,class=CODE,merge=1,delta=2
    80                           	psect	text58,local,class=CODE,merge=1,delta=2
    81                           	psect	text59,local,class=CODE,merge=1,delta=2
    82                           	psect	text60,local,class=CODE,merge=1,delta=2
    83                           	psect	text61,local,class=CODE,merge=1,delta=2
    84                           	psect	text62,local,class=CODE,merge=1,delta=2
    85                           	psect	text63,local,class=CODE,merge=1,delta=2
    86                           	psect	text64,local,class=CODE,merge=1,delta=2
    87                           	psect	text65,local,class=CODE,merge=1,delta=2
    88                           	psect	text66,local,class=CODE,merge=1,delta=2
    89                           	psect	text67,local,class=CODE,merge=1,delta=2
    90                           	psect	text68,local,class=CODE,merge=1,delta=2
    91                           	psect	text69,local,class=CODE,merge=1,delta=2
    92                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    93                           	dabs	1,0x7E,2
    94  0000                     
    95                           ; Version 2.30
    96                           ; Generated 15/09/2020 GMT
    97                           ; 
    98                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution. Publication is not required when
   112                           ;        this file is used in an embedded application.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC16F18875 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001C                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  008C                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  008E                     	;# 
   168  008F                     	;# 
   169  0090                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0093                     	;# 
   173  0094                     	;# 
   174  0095                     	;# 
   175  0096                     	;# 
   176  0097                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009A                     	;# 
   180  009B                     	;# 
   181  009C                     	;# 
   182  009D                     	;# 
   183  009E                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010E                     	;# 
   187  010E                     	;# 
   188  010F                     	;# 
   189  0110                     	;# 
   190  0110                     	;# 
   191  0111                     	;# 
   192  0112                     	;# 
   193  0112                     	;# 
   194  0113                     	;# 
   195  0114                     	;# 
   196  0114                     	;# 
   197  0115                     	;# 
   198  0116                     	;# 
   199  0116                     	;# 
   200  0117                     	;# 
   201  0119                     	;# 
   202  0119                     	;# 
   203  0119                     	;# 
   204  011A                     	;# 
   205  011A                     	;# 
   206  011A                     	;# 
   207  011B                     	;# 
   208  011B                     	;# 
   209  011B                     	;# 
   210  011B                     	;# 
   211  011B                     	;# 
   212  011C                     	;# 
   213  011C                     	;# 
   214  011C                     	;# 
   215  011D                     	;# 
   216  011D                     	;# 
   217  011D                     	;# 
   218  011E                     	;# 
   219  011E                     	;# 
   220  011E                     	;# 
   221  011F                     	;# 
   222  011F                     	;# 
   223  011F                     	;# 
   224  011F                     	;# 
   225  011F                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  018E                     	;# 
   229  018F                     	;# 
   230  0190                     	;# 
   231  0191                     	;# 
   232  0192                     	;# 
   233  0196                     	;# 
   234  0197                     	;# 
   235  0198                     	;# 
   236  0199                     	;# 
   237  019A                     	;# 
   238  019B                     	;# 
   239  019C                     	;# 
   240  020C                     	;# 
   241  020C                     	;# 
   242  020D                     	;# 
   243  020E                     	;# 
   244  020F                     	;# 
   245  020F                     	;# 
   246  0210                     	;# 
   247  0210                     	;# 
   248  0211                     	;# 
   249  0211                     	;# 
   250  0212                     	;# 
   251  0212                     	;# 
   252  0213                     	;# 
   253  0214                     	;# 
   254  0215                     	;# 
   255  0215                     	;# 
   256  0216                     	;# 
   257  0216                     	;# 
   258  0217                     	;# 
   259  0217                     	;# 
   260  0218                     	;# 
   261  0218                     	;# 
   262  0219                     	;# 
   263  021A                     	;# 
   264  021B                     	;# 
   265  021B                     	;# 
   266  021C                     	;# 
   267  021C                     	;# 
   268  021D                     	;# 
   269  021D                     	;# 
   270  021E                     	;# 
   271  021F                     	;# 
   272  028C                     	;# 
   273  028C                     	;# 
   274  028D                     	;# 
   275  028D                     	;# 
   276  028E                     	;# 
   277  028F                     	;# 
   278  0290                     	;# 
   279  0290                     	;# 
   280  0291                     	;# 
   281  0292                     	;# 
   282  0292                     	;# 
   283  0293                     	;# 
   284  0293                     	;# 
   285  0294                     	;# 
   286  0295                     	;# 
   287  0296                     	;# 
   288  0296                     	;# 
   289  0297                     	;# 
   290  0298                     	;# 
   291  0298                     	;# 
   292  0299                     	;# 
   293  0299                     	;# 
   294  029A                     	;# 
   295  029B                     	;# 
   296  029C                     	;# 
   297  029C                     	;# 
   298  029D                     	;# 
   299  030C                     	;# 
   300  030C                     	;# 
   301  030D                     	;# 
   302  030E                     	;# 
   303  030F                     	;# 
   304  0310                     	;# 
   305  0310                     	;# 
   306  0311                     	;# 
   307  0312                     	;# 
   308  0313                     	;# 
   309  0314                     	;# 
   310  0314                     	;# 
   311  0315                     	;# 
   312  0316                     	;# 
   313  0317                     	;# 
   314  0318                     	;# 
   315  0318                     	;# 
   316  0319                     	;# 
   317  031A                     	;# 
   318  031B                     	;# 
   319  031C                     	;# 
   320  031C                     	;# 
   321  031D                     	;# 
   322  031E                     	;# 
   323  031F                     	;# 
   324  038C                     	;# 
   325  038C                     	;# 
   326  038D                     	;# 
   327  038E                     	;# 
   328  0390                     	;# 
   329  0390                     	;# 
   330  0391                     	;# 
   331  0392                     	;# 
   332  040C                     	;# 
   333  040D                     	;# 
   334  040E                     	;# 
   335  040F                     	;# 
   336  0410                     	;# 
   337  0411                     	;# 
   338  0416                     	;# 
   339  0416                     	;# 
   340  0417                     	;# 
   341  0418                     	;# 
   342  0418                     	;# 
   343  0419                     	;# 
   344  041A                     	;# 
   345  041A                     	;# 
   346  041B                     	;# 
   347  041C                     	;# 
   348  041C                     	;# 
   349  041D                     	;# 
   350  041E                     	;# 
   351  041F                     	;# 
   352  048C                     	;# 
   353  048C                     	;# 
   354  048D                     	;# 
   355  048E                     	;# 
   356  048F                     	;# 
   357  048F                     	;# 
   358  0490                     	;# 
   359  0491                     	;# 
   360  0492                     	;# 
   361  0492                     	;# 
   362  0493                     	;# 
   363  0494                     	;# 
   364  0495                     	;# 
   365  0495                     	;# 
   366  0496                     	;# 
   367  0497                     	;# 
   368  0498                     	;# 
   369  0499                     	;# 
   370  049A                     	;# 
   371  049B                     	;# 
   372  049C                     	;# 
   373  049D                     	;# 
   374  050C                     	;# 
   375  050C                     	;# 
   376  050D                     	;# 
   377  050E                     	;# 
   378  050F                     	;# 
   379  050F                     	;# 
   380  0510                     	;# 
   381  0511                     	;# 
   382  0512                     	;# 
   383  0512                     	;# 
   384  0513                     	;# 
   385  0514                     	;# 
   386  0515                     	;# 
   387  0515                     	;# 
   388  0516                     	;# 
   389  0517                     	;# 
   390  0518                     	;# 
   391  0519                     	;# 
   392  051A                     	;# 
   393  051B                     	;# 
   394  051C                     	;# 
   395  051D                     	;# 
   396  058C                     	;# 
   397  058C                     	;# 
   398  058D                     	;# 
   399  058E                     	;# 
   400  058F                     	;# 
   401  058F                     	;# 
   402  0590                     	;# 
   403  0591                     	;# 
   404  0592                     	;# 
   405  0593                     	;# 
   406  060C                     	;# 
   407  060D                     	;# 
   408  060E                     	;# 
   409  060F                     	;# 
   410  0610                     	;# 
   411  0611                     	;# 
   412  0612                     	;# 
   413  0613                     	;# 
   414  0614                     	;# 
   415  0616                     	;# 
   416  0617                     	;# 
   417  0618                     	;# 
   418  0619                     	;# 
   419  061A                     	;# 
   420  061B                     	;# 
   421  061C                     	;# 
   422  061D                     	;# 
   423  061E                     	;# 
   424  068C                     	;# 
   425  068D                     	;# 
   426  068E                     	;# 
   427  068F                     	;# 
   428  0690                     	;# 
   429  0691                     	;# 
   430  0692                     	;# 
   431  0693                     	;# 
   432  0694                     	;# 
   433  070C                     	;# 
   434  070D                     	;# 
   435  070E                     	;# 
   436  070F                     	;# 
   437  0710                     	;# 
   438  0711                     	;# 
   439  0712                     	;# 
   440  0713                     	;# 
   441  0714                     	;# 
   442  0716                     	;# 
   443  0717                     	;# 
   444  0718                     	;# 
   445  0719                     	;# 
   446  071A                     	;# 
   447  071B                     	;# 
   448  071C                     	;# 
   449  071D                     	;# 
   450  071E                     	;# 
   451  0796                     	;# 
   452  0797                     	;# 
   453  0798                     	;# 
   454  0799                     	;# 
   455  079A                     	;# 
   456  079B                     	;# 
   457  080C                     	;# 
   458  080D                     	;# 
   459  080E                     	;# 
   460  080F                     	;# 
   461  0810                     	;# 
   462  0811                     	;# 
   463  0812                     	;# 
   464  0813                     	;# 
   465  0814                     	;# 
   466  081A                     	;# 
   467  081B                     	;# 
   468  081C                     	;# 
   469  081D                     	;# 
   470  081E                     	;# 
   471  081F                     	;# 
   472  088C                     	;# 
   473  088D                     	;# 
   474  088E                     	;# 
   475  088F                     	;# 
   476  0890                     	;# 
   477  0891                     	;# 
   478  0892                     	;# 
   479  0893                     	;# 
   480  0895                     	;# 
   481  0896                     	;# 
   482  0897                     	;# 
   483  0898                     	;# 
   484  0899                     	;# 
   485  089A                     	;# 
   486  089B                     	;# 
   487  090C                     	;# 
   488  090E                     	;# 
   489  090F                     	;# 
   490  091F                     	;# 
   491  091F                     	;# 
   492  098F                     	;# 
   493  098F                     	;# 
   494  0990                     	;# 
   495  0991                     	;# 
   496  0992                     	;# 
   497  0993                     	;# 
   498  0994                     	;# 
   499  0995                     	;# 
   500  0996                     	;# 
   501  0997                     	;# 
   502  0E0F                     	;# 
   503  0E10                     	;# 
   504  0E11                     	;# 
   505  0E12                     	;# 
   506  0E13                     	;# 
   507  0E14                     	;# 
   508  0E15                     	;# 
   509  0E16                     	;# 
   510  0E17                     	;# 
   511  0E18                     	;# 
   512  0E19                     	;# 
   513  0E1A                     	;# 
   514  0E1B                     	;# 
   515  0E1C                     	;# 
   516  0E1D                     	;# 
   517  0E1E                     	;# 
   518  0E1F                     	;# 
   519  0E20                     	;# 
   520  0E21                     	;# 
   521  0E22                     	;# 
   522  0E23                     	;# 
   523  0E24                     	;# 
   524  0E25                     	;# 
   525  0E26                     	;# 
   526  0E27                     	;# 
   527  0E28                     	;# 
   528  0E29                     	;# 
   529  0E2A                     	;# 
   530  0E2B                     	;# 
   531  0E2C                     	;# 
   532  0E2D                     	;# 
   533  0E2E                     	;# 
   534  0E2F                     	;# 
   535  0E30                     	;# 
   536  0E31                     	;# 
   537  0E32                     	;# 
   538  0E33                     	;# 
   539  0E34                     	;# 
   540  0E35                     	;# 
   541  0E36                     	;# 
   542  0E37                     	;# 
   543  0E8F                     	;# 
   544  0E90                     	;# 
   545  0E91                     	;# 
   546  0E92                     	;# 
   547  0E93                     	;# 
   548  0E94                     	;# 
   549  0E95                     	;# 
   550  0E96                     	;# 
   551  0E97                     	;# 
   552  0E9C                     	;# 
   553  0E9D                     	;# 
   554  0E9E                     	;# 
   555  0EA1                     	;# 
   556  0EA2                     	;# 
   557  0EA3                     	;# 
   558  0EA4                     	;# 
   559  0EA5                     	;# 
   560  0EA9                     	;# 
   561  0EAA                     	;# 
   562  0EAB                     	;# 
   563  0EAC                     	;# 
   564  0EB1                     	;# 
   565  0EB2                     	;# 
   566  0EB3                     	;# 
   567  0EB8                     	;# 
   568  0EB9                     	;# 
   569  0EBA                     	;# 
   570  0EBB                     	;# 
   571  0EBC                     	;# 
   572  0EBD                     	;# 
   573  0EBE                     	;# 
   574  0EC3                     	;# 
   575  0EC5                     	;# 
   576  0EC6                     	;# 
   577  0EC7                     	;# 
   578  0EC8                     	;# 
   579  0EC9                     	;# 
   580  0ECA                     	;# 
   581  0ECB                     	;# 
   582  0ECC                     	;# 
   583  0F10                     	;# 
   584  0F11                     	;# 
   585  0F12                     	;# 
   586  0F13                     	;# 
   587  0F14                     	;# 
   588  0F15                     	;# 
   589  0F16                     	;# 
   590  0F17                     	;# 
   591  0F18                     	;# 
   592  0F19                     	;# 
   593  0F1A                     	;# 
   594  0F1B                     	;# 
   595  0F1C                     	;# 
   596  0F1D                     	;# 
   597  0F1E                     	;# 
   598  0F1F                     	;# 
   599  0F20                     	;# 
   600  0F21                     	;# 
   601  0F22                     	;# 
   602  0F23                     	;# 
   603  0F24                     	;# 
   604  0F25                     	;# 
   605  0F26                     	;# 
   606  0F27                     	;# 
   607  0F28                     	;# 
   608  0F29                     	;# 
   609  0F2A                     	;# 
   610  0F2B                     	;# 
   611  0F2C                     	;# 
   612  0F2D                     	;# 
   613  0F2E                     	;# 
   614  0F2F                     	;# 
   615  0F30                     	;# 
   616  0F31                     	;# 
   617  0F32                     	;# 
   618  0F38                     	;# 
   619  0F39                     	;# 
   620  0F3A                     	;# 
   621  0F3B                     	;# 
   622  0F3C                     	;# 
   623  0F3D                     	;# 
   624  0F3E                     	;# 
   625  0F3F                     	;# 
   626  0F40                     	;# 
   627  0F41                     	;# 
   628  0F43                     	;# 
   629  0F44                     	;# 
   630  0F45                     	;# 
   631  0F46                     	;# 
   632  0F47                     	;# 
   633  0F48                     	;# 
   634  0F49                     	;# 
   635  0F4A                     	;# 
   636  0F4B                     	;# 
   637  0F4C                     	;# 
   638  0F4E                     	;# 
   639  0F4F                     	;# 
   640  0F50                     	;# 
   641  0F51                     	;# 
   642  0F52                     	;# 
   643  0F53                     	;# 
   644  0F54                     	;# 
   645  0F55                     	;# 
   646  0F56                     	;# 
   647  0F57                     	;# 
   648  0F59                     	;# 
   649  0F5A                     	;# 
   650  0F5B                     	;# 
   651  0F5C                     	;# 
   652  0F5D                     	;# 
   653  0F61                     	;# 
   654  0F62                     	;# 
   655  0F64                     	;# 
   656  0F65                     	;# 
   657  0F66                     	;# 
   658  0F67                     	;# 
   659  0F68                     	;# 
   660  0F69                     	;# 
   661  0F6A                     	;# 
   662  0F6B                     	;# 
   663  0F6C                     	;# 
   664  0F6D                     	;# 
   665  0FE4                     	;# 
   666  0FE5                     	;# 
   667  0FE6                     	;# 
   668  0FE7                     	;# 
   669  0FE8                     	;# 
   670  0FE9                     	;# 
   671  0FEA                     	;# 
   672  0FEB                     	;# 
   673  0FED                     	;# 
   674  0FEE                     	;# 
   675  0FEF                     	;# 
   676  0000                     	;# 
   677  0001                     	;# 
   678  0002                     	;# 
   679  0003                     	;# 
   680  0004                     	;# 
   681  0005                     	;# 
   682  0006                     	;# 
   683  0007                     	;# 
   684  0008                     	;# 
   685  0009                     	;# 
   686  000A                     	;# 
   687  000B                     	;# 
   688  000C                     	;# 
   689  000D                     	;# 
   690  000E                     	;# 
   691  000F                     	;# 
   692  0010                     	;# 
   693  0011                     	;# 
   694  0012                     	;# 
   695  0013                     	;# 
   696  0014                     	;# 
   697  0015                     	;# 
   698  0016                     	;# 
   699  0017                     	;# 
   700  0018                     	;# 
   701  0019                     	;# 
   702  001A                     	;# 
   703  001C                     	;# 
   704  001C                     	;# 
   705  001D                     	;# 
   706  001D                     	;# 
   707  001E                     	;# 
   708  001F                     	;# 
   709  008C                     	;# 
   710  008C                     	;# 
   711  008D                     	;# 
   712  008E                     	;# 
   713  008E                     	;# 
   714  008F                     	;# 
   715  0090                     	;# 
   716  0090                     	;# 
   717  0091                     	;# 
   718  0093                     	;# 
   719  0094                     	;# 
   720  0095                     	;# 
   721  0096                     	;# 
   722  0097                     	;# 
   723  0098                     	;# 
   724  0099                     	;# 
   725  009A                     	;# 
   726  009B                     	;# 
   727  009C                     	;# 
   728  009D                     	;# 
   729  009E                     	;# 
   730  010C                     	;# 
   731  010D                     	;# 
   732  010E                     	;# 
   733  010E                     	;# 
   734  010F                     	;# 
   735  0110                     	;# 
   736  0110                     	;# 
   737  0111                     	;# 
   738  0112                     	;# 
   739  0112                     	;# 
   740  0113                     	;# 
   741  0114                     	;# 
   742  0114                     	;# 
   743  0115                     	;# 
   744  0116                     	;# 
   745  0116                     	;# 
   746  0117                     	;# 
   747  0119                     	;# 
   748  0119                     	;# 
   749  0119                     	;# 
   750  011A                     	;# 
   751  011A                     	;# 
   752  011A                     	;# 
   753  011B                     	;# 
   754  011B                     	;# 
   755  011B                     	;# 
   756  011B                     	;# 
   757  011B                     	;# 
   758  011C                     	;# 
   759  011C                     	;# 
   760  011C                     	;# 
   761  011D                     	;# 
   762  011D                     	;# 
   763  011D                     	;# 
   764  011E                     	;# 
   765  011E                     	;# 
   766  011E                     	;# 
   767  011F                     	;# 
   768  011F                     	;# 
   769  011F                     	;# 
   770  011F                     	;# 
   771  011F                     	;# 
   772  018C                     	;# 
   773  018D                     	;# 
   774  018E                     	;# 
   775  018F                     	;# 
   776  0190                     	;# 
   777  0191                     	;# 
   778  0192                     	;# 
   779  0196                     	;# 
   780  0197                     	;# 
   781  0198                     	;# 
   782  0199                     	;# 
   783  019A                     	;# 
   784  019B                     	;# 
   785  019C                     	;# 
   786  020C                     	;# 
   787  020C                     	;# 
   788  020D                     	;# 
   789  020E                     	;# 
   790  020F                     	;# 
   791  020F                     	;# 
   792  0210                     	;# 
   793  0210                     	;# 
   794  0211                     	;# 
   795  0211                     	;# 
   796  0212                     	;# 
   797  0212                     	;# 
   798  0213                     	;# 
   799  0214                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0216                     	;# 
   803  0216                     	;# 
   804  0217                     	;# 
   805  0217                     	;# 
   806  0218                     	;# 
   807  0218                     	;# 
   808  0219                     	;# 
   809  021A                     	;# 
   810  021B                     	;# 
   811  021B                     	;# 
   812  021C                     	;# 
   813  021C                     	;# 
   814  021D                     	;# 
   815  021D                     	;# 
   816  021E                     	;# 
   817  021F                     	;# 
   818  028C                     	;# 
   819  028C                     	;# 
   820  028D                     	;# 
   821  028D                     	;# 
   822  028E                     	;# 
   823  028F                     	;# 
   824  0290                     	;# 
   825  0290                     	;# 
   826  0291                     	;# 
   827  0292                     	;# 
   828  0292                     	;# 
   829  0293                     	;# 
   830  0293                     	;# 
   831  0294                     	;# 
   832  0295                     	;# 
   833  0296                     	;# 
   834  0296                     	;# 
   835  0297                     	;# 
   836  0298                     	;# 
   837  0298                     	;# 
   838  0299                     	;# 
   839  0299                     	;# 
   840  029A                     	;# 
   841  029B                     	;# 
   842  029C                     	;# 
   843  029C                     	;# 
   844  029D                     	;# 
   845  030C                     	;# 
   846  030C                     	;# 
   847  030D                     	;# 
   848  030E                     	;# 
   849  030F                     	;# 
   850  0310                     	;# 
   851  0310                     	;# 
   852  0311                     	;# 
   853  0312                     	;# 
   854  0313                     	;# 
   855  0314                     	;# 
   856  0314                     	;# 
   857  0315                     	;# 
   858  0316                     	;# 
   859  0317                     	;# 
   860  0318                     	;# 
   861  0318                     	;# 
   862  0319                     	;# 
   863  031A                     	;# 
   864  031B                     	;# 
   865  031C                     	;# 
   866  031C                     	;# 
   867  031D                     	;# 
   868  031E                     	;# 
   869  031F                     	;# 
   870  038C                     	;# 
   871  038C                     	;# 
   872  038D                     	;# 
   873  038E                     	;# 
   874  0390                     	;# 
   875  0390                     	;# 
   876  0391                     	;# 
   877  0392                     	;# 
   878  040C                     	;# 
   879  040D                     	;# 
   880  040E                     	;# 
   881  040F                     	;# 
   882  0410                     	;# 
   883  0411                     	;# 
   884  0416                     	;# 
   885  0416                     	;# 
   886  0417                     	;# 
   887  0418                     	;# 
   888  0418                     	;# 
   889  0419                     	;# 
   890  041A                     	;# 
   891  041A                     	;# 
   892  041B                     	;# 
   893  041C                     	;# 
   894  041C                     	;# 
   895  041D                     	;# 
   896  041E                     	;# 
   897  041F                     	;# 
   898  048C                     	;# 
   899  048C                     	;# 
   900  048D                     	;# 
   901  048E                     	;# 
   902  048F                     	;# 
   903  048F                     	;# 
   904  0490                     	;# 
   905  0491                     	;# 
   906  0492                     	;# 
   907  0492                     	;# 
   908  0493                     	;# 
   909  0494                     	;# 
   910  0495                     	;# 
   911  0495                     	;# 
   912  0496                     	;# 
   913  0497                     	;# 
   914  0498                     	;# 
   915  0499                     	;# 
   916  049A                     	;# 
   917  049B                     	;# 
   918  049C                     	;# 
   919  049D                     	;# 
   920  050C                     	;# 
   921  050C                     	;# 
   922  050D                     	;# 
   923  050E                     	;# 
   924  050F                     	;# 
   925  050F                     	;# 
   926  0510                     	;# 
   927  0511                     	;# 
   928  0512                     	;# 
   929  0512                     	;# 
   930  0513                     	;# 
   931  0514                     	;# 
   932  0515                     	;# 
   933  0515                     	;# 
   934  0516                     	;# 
   935  0517                     	;# 
   936  0518                     	;# 
   937  0519                     	;# 
   938  051A                     	;# 
   939  051B                     	;# 
   940  051C                     	;# 
   941  051D                     	;# 
   942  058C                     	;# 
   943  058C                     	;# 
   944  058D                     	;# 
   945  058E                     	;# 
   946  058F                     	;# 
   947  058F                     	;# 
   948  0590                     	;# 
   949  0591                     	;# 
   950  0592                     	;# 
   951  0593                     	;# 
   952  060C                     	;# 
   953  060D                     	;# 
   954  060E                     	;# 
   955  060F                     	;# 
   956  0610                     	;# 
   957  0611                     	;# 
   958  0612                     	;# 
   959  0613                     	;# 
   960  0614                     	;# 
   961  0616                     	;# 
   962  0617                     	;# 
   963  0618                     	;# 
   964  0619                     	;# 
   965  061A                     	;# 
   966  061B                     	;# 
   967  061C                     	;# 
   968  061D                     	;# 
   969  061E                     	;# 
   970  068C                     	;# 
   971  068D                     	;# 
   972  068E                     	;# 
   973  068F                     	;# 
   974  0690                     	;# 
   975  0691                     	;# 
   976  0692                     	;# 
   977  0693                     	;# 
   978  0694                     	;# 
   979  070C                     	;# 
   980  070D                     	;# 
   981  070E                     	;# 
   982  070F                     	;# 
   983  0710                     	;# 
   984  0711                     	;# 
   985  0712                     	;# 
   986  0713                     	;# 
   987  0714                     	;# 
   988  0716                     	;# 
   989  0717                     	;# 
   990  0718                     	;# 
   991  0719                     	;# 
   992  071A                     	;# 
   993  071B                     	;# 
   994  071C                     	;# 
   995  071D                     	;# 
   996  071E                     	;# 
   997  0796                     	;# 
   998  0797                     	;# 
   999  0798                     	;# 
  1000  0799                     	;# 
  1001  079A                     	;# 
  1002  079B                     	;# 
  1003  080C                     	;# 
  1004  080D                     	;# 
  1005  080E                     	;# 
  1006  080F                     	;# 
  1007  0810                     	;# 
  1008  0811                     	;# 
  1009  0812                     	;# 
  1010  0813                     	;# 
  1011  0814                     	;# 
  1012  081A                     	;# 
  1013  081B                     	;# 
  1014  081C                     	;# 
  1015  081D                     	;# 
  1016  081E                     	;# 
  1017  081F                     	;# 
  1018  088C                     	;# 
  1019  088D                     	;# 
  1020  088E                     	;# 
  1021  088F                     	;# 
  1022  0890                     	;# 
  1023  0891                     	;# 
  1024  0892                     	;# 
  1025  0893                     	;# 
  1026  0895                     	;# 
  1027  0896                     	;# 
  1028  0897                     	;# 
  1029  0898                     	;# 
  1030  0899                     	;# 
  1031  089A                     	;# 
  1032  089B                     	;# 
  1033  090C                     	;# 
  1034  090E                     	;# 
  1035  090F                     	;# 
  1036  091F                     	;# 
  1037  091F                     	;# 
  1038  098F                     	;# 
  1039  098F                     	;# 
  1040  0990                     	;# 
  1041  0991                     	;# 
  1042  0992                     	;# 
  1043  0993                     	;# 
  1044  0994                     	;# 
  1045  0995                     	;# 
  1046  0996                     	;# 
  1047  0997                     	;# 
  1048  0E0F                     	;# 
  1049  0E10                     	;# 
  1050  0E11                     	;# 
  1051  0E12                     	;# 
  1052  0E13                     	;# 
  1053  0E14                     	;# 
  1054  0E15                     	;# 
  1055  0E16                     	;# 
  1056  0E17                     	;# 
  1057  0E18                     	;# 
  1058  0E19                     	;# 
  1059  0E1A                     	;# 
  1060  0E1B                     	;# 
  1061  0E1C                     	;# 
  1062  0E1D                     	;# 
  1063  0E1E                     	;# 
  1064  0E1F                     	;# 
  1065  0E20                     	;# 
  1066  0E21                     	;# 
  1067  0E22                     	;# 
  1068  0E23                     	;# 
  1069  0E24                     	;# 
  1070  0E25                     	;# 
  1071  0E26                     	;# 
  1072  0E27                     	;# 
  1073  0E28                     	;# 
  1074  0E29                     	;# 
  1075  0E2A                     	;# 
  1076  0E2B                     	;# 
  1077  0E2C                     	;# 
  1078  0E2D                     	;# 
  1079  0E2E                     	;# 
  1080  0E2F                     	;# 
  1081  0E30                     	;# 
  1082  0E31                     	;# 
  1083  0E32                     	;# 
  1084  0E33                     	;# 
  1085  0E34                     	;# 
  1086  0E35                     	;# 
  1087  0E36                     	;# 
  1088  0E37                     	;# 
  1089  0E8F                     	;# 
  1090  0E90                     	;# 
  1091  0E91                     	;# 
  1092  0E92                     	;# 
  1093  0E93                     	;# 
  1094  0E94                     	;# 
  1095  0E95                     	;# 
  1096  0E96                     	;# 
  1097  0E97                     	;# 
  1098  0E9C                     	;# 
  1099  0E9D                     	;# 
  1100  0E9E                     	;# 
  1101  0EA1                     	;# 
  1102  0EA2                     	;# 
  1103  0EA3                     	;# 
  1104  0EA4                     	;# 
  1105  0EA5                     	;# 
  1106  0EA9                     	;# 
  1107  0EAA                     	;# 
  1108  0EAB                     	;# 
  1109  0EAC                     	;# 
  1110  0EB1                     	;# 
  1111  0EB2                     	;# 
  1112  0EB3                     	;# 
  1113  0EB8                     	;# 
  1114  0EB9                     	;# 
  1115  0EBA                     	;# 
  1116  0EBB                     	;# 
  1117  0EBC                     	;# 
  1118  0EBD                     	;# 
  1119  0EBE                     	;# 
  1120  0EC3                     	;# 
  1121  0EC5                     	;# 
  1122  0EC6                     	;# 
  1123  0EC7                     	;# 
  1124  0EC8                     	;# 
  1125  0EC9                     	;# 
  1126  0ECA                     	;# 
  1127  0ECB                     	;# 
  1128  0ECC                     	;# 
  1129  0F10                     	;# 
  1130  0F11                     	;# 
  1131  0F12                     	;# 
  1132  0F13                     	;# 
  1133  0F14                     	;# 
  1134  0F15                     	;# 
  1135  0F16                     	;# 
  1136  0F17                     	;# 
  1137  0F18                     	;# 
  1138  0F19                     	;# 
  1139  0F1A                     	;# 
  1140  0F1B                     	;# 
  1141  0F1C                     	;# 
  1142  0F1D                     	;# 
  1143  0F1E                     	;# 
  1144  0F1F                     	;# 
  1145  0F20                     	;# 
  1146  0F21                     	;# 
  1147  0F22                     	;# 
  1148  0F23                     	;# 
  1149  0F24                     	;# 
  1150  0F25                     	;# 
  1151  0F26                     	;# 
  1152  0F27                     	;# 
  1153  0F28                     	;# 
  1154  0F29                     	;# 
  1155  0F2A                     	;# 
  1156  0F2B                     	;# 
  1157  0F2C                     	;# 
  1158  0F2D                     	;# 
  1159  0F2E                     	;# 
  1160  0F2F                     	;# 
  1161  0F30                     	;# 
  1162  0F31                     	;# 
  1163  0F32                     	;# 
  1164  0F38                     	;# 
  1165  0F39                     	;# 
  1166  0F3A                     	;# 
  1167  0F3B                     	;# 
  1168  0F3C                     	;# 
  1169  0F3D                     	;# 
  1170  0F3E                     	;# 
  1171  0F3F                     	;# 
  1172  0F40                     	;# 
  1173  0F41                     	;# 
  1174  0F43                     	;# 
  1175  0F44                     	;# 
  1176  0F45                     	;# 
  1177  0F46                     	;# 
  1178  0F47                     	;# 
  1179  0F48                     	;# 
  1180  0F49                     	;# 
  1181  0F4A                     	;# 
  1182  0F4B                     	;# 
  1183  0F4C                     	;# 
  1184  0F4E                     	;# 
  1185  0F4F                     	;# 
  1186  0F50                     	;# 
  1187  0F51                     	;# 
  1188  0F52                     	;# 
  1189  0F53                     	;# 
  1190  0F54                     	;# 
  1191  0F55                     	;# 
  1192  0F56                     	;# 
  1193  0F57                     	;# 
  1194  0F59                     	;# 
  1195  0F5A                     	;# 
  1196  0F5B                     	;# 
  1197  0F5C                     	;# 
  1198  0F5D                     	;# 
  1199  0F61                     	;# 
  1200  0F62                     	;# 
  1201  0F64                     	;# 
  1202  0F65                     	;# 
  1203  0F66                     	;# 
  1204  0F67                     	;# 
  1205  0F68                     	;# 
  1206  0F69                     	;# 
  1207  0F6A                     	;# 
  1208  0F6B                     	;# 
  1209  0F6C                     	;# 
  1210  0F6D                     	;# 
  1211  0FE4                     	;# 
  1212  0FE5                     	;# 
  1213  0FE6                     	;# 
  1214  0FE7                     	;# 
  1215  0FE8                     	;# 
  1216  0FE9                     	;# 
  1217  0FEA                     	;# 
  1218  0FEB                     	;# 
  1219  0FED                     	;# 
  1220  0FEE                     	;# 
  1221  0FEF                     	;# 
  1222  0000                     	;# 
  1223  0001                     	;# 
  1224  0002                     	;# 
  1225  0003                     	;# 
  1226  0004                     	;# 
  1227  0005                     	;# 
  1228  0006                     	;# 
  1229  0007                     	;# 
  1230  0008                     	;# 
  1231  0009                     	;# 
  1232  000A                     	;# 
  1233  000B                     	;# 
  1234  000C                     	;# 
  1235  000D                     	;# 
  1236  000E                     	;# 
  1237  000F                     	;# 
  1238  0010                     	;# 
  1239  0011                     	;# 
  1240  0012                     	;# 
  1241  0013                     	;# 
  1242  0014                     	;# 
  1243  0015                     	;# 
  1244  0016                     	;# 
  1245  0017                     	;# 
  1246  0018                     	;# 
  1247  0019                     	;# 
  1248  001A                     	;# 
  1249  001C                     	;# 
  1250  001C                     	;# 
  1251  001D                     	;# 
  1252  001D                     	;# 
  1253  001E                     	;# 
  1254  001F                     	;# 
  1255  008C                     	;# 
  1256  008C                     	;# 
  1257  008D                     	;# 
  1258  008E                     	;# 
  1259  008E                     	;# 
  1260  008F                     	;# 
  1261  0090                     	;# 
  1262  0090                     	;# 
  1263  0091                     	;# 
  1264  0093                     	;# 
  1265  0094                     	;# 
  1266  0095                     	;# 
  1267  0096                     	;# 
  1268  0097                     	;# 
  1269  0098                     	;# 
  1270  0099                     	;# 
  1271  009A                     	;# 
  1272  009B                     	;# 
  1273  009C                     	;# 
  1274  009D                     	;# 
  1275  009E                     	;# 
  1276  010C                     	;# 
  1277  010D                     	;# 
  1278  010E                     	;# 
  1279  010E                     	;# 
  1280  010F                     	;# 
  1281  0110                     	;# 
  1282  0110                     	;# 
  1283  0111                     	;# 
  1284  0112                     	;# 
  1285  0112                     	;# 
  1286  0113                     	;# 
  1287  0114                     	;# 
  1288  0114                     	;# 
  1289  0115                     	;# 
  1290  0116                     	;# 
  1291  0116                     	;# 
  1292  0117                     	;# 
  1293  0119                     	;# 
  1294  0119                     	;# 
  1295  0119                     	;# 
  1296  011A                     	;# 
  1297  011A                     	;# 
  1298  011A                     	;# 
  1299  011B                     	;# 
  1300  011B                     	;# 
  1301  011B                     	;# 
  1302  011B                     	;# 
  1303  011B                     	;# 
  1304  011C                     	;# 
  1305  011C                     	;# 
  1306  011C                     	;# 
  1307  011D                     	;# 
  1308  011D                     	;# 
  1309  011D                     	;# 
  1310  011E                     	;# 
  1311  011E                     	;# 
  1312  011E                     	;# 
  1313  011F                     	;# 
  1314  011F                     	;# 
  1315  011F                     	;# 
  1316  011F                     	;# 
  1317  011F                     	;# 
  1318  018C                     	;# 
  1319  018D                     	;# 
  1320  018E                     	;# 
  1321  018F                     	;# 
  1322  0190                     	;# 
  1323  0191                     	;# 
  1324  0192                     	;# 
  1325  0196                     	;# 
  1326  0197                     	;# 
  1327  0198                     	;# 
  1328  0199                     	;# 
  1329  019A                     	;# 
  1330  019B                     	;# 
  1331  019C                     	;# 
  1332  020C                     	;# 
  1333  020C                     	;# 
  1334  020D                     	;# 
  1335  020E                     	;# 
  1336  020F                     	;# 
  1337  020F                     	;# 
  1338  0210                     	;# 
  1339  0210                     	;# 
  1340  0211                     	;# 
  1341  0211                     	;# 
  1342  0212                     	;# 
  1343  0212                     	;# 
  1344  0213                     	;# 
  1345  0214                     	;# 
  1346  0215                     	;# 
  1347  0215                     	;# 
  1348  0216                     	;# 
  1349  0216                     	;# 
  1350  0217                     	;# 
  1351  0217                     	;# 
  1352  0218                     	;# 
  1353  0218                     	;# 
  1354  0219                     	;# 
  1355  021A                     	;# 
  1356  021B                     	;# 
  1357  021B                     	;# 
  1358  021C                     	;# 
  1359  021C                     	;# 
  1360  021D                     	;# 
  1361  021D                     	;# 
  1362  021E                     	;# 
  1363  021F                     	;# 
  1364  028C                     	;# 
  1365  028C                     	;# 
  1366  028D                     	;# 
  1367  028D                     	;# 
  1368  028E                     	;# 
  1369  028F                     	;# 
  1370  0290                     	;# 
  1371  0290                     	;# 
  1372  0291                     	;# 
  1373  0292                     	;# 
  1374  0292                     	;# 
  1375  0293                     	;# 
  1376  0293                     	;# 
  1377  0294                     	;# 
  1378  0295                     	;# 
  1379  0296                     	;# 
  1380  0296                     	;# 
  1381  0297                     	;# 
  1382  0298                     	;# 
  1383  0298                     	;# 
  1384  0299                     	;# 
  1385  0299                     	;# 
  1386  029A                     	;# 
  1387  029B                     	;# 
  1388  029C                     	;# 
  1389  029C                     	;# 
  1390  029D                     	;# 
  1391  030C                     	;# 
  1392  030C                     	;# 
  1393  030D                     	;# 
  1394  030E                     	;# 
  1395  030F                     	;# 
  1396  0310                     	;# 
  1397  0310                     	;# 
  1398  0311                     	;# 
  1399  0312                     	;# 
  1400  0313                     	;# 
  1401  0314                     	;# 
  1402  0314                     	;# 
  1403  0315                     	;# 
  1404  0316                     	;# 
  1405  0317                     	;# 
  1406  0318                     	;# 
  1407  0318                     	;# 
  1408  0319                     	;# 
  1409  031A                     	;# 
  1410  031B                     	;# 
  1411  031C                     	;# 
  1412  031C                     	;# 
  1413  031D                     	;# 
  1414  031E                     	;# 
  1415  031F                     	;# 
  1416  038C                     	;# 
  1417  038C                     	;# 
  1418  038D                     	;# 
  1419  038E                     	;# 
  1420  0390                     	;# 
  1421  0390                     	;# 
  1422  0391                     	;# 
  1423  0392                     	;# 
  1424  040C                     	;# 
  1425  040D                     	;# 
  1426  040E                     	;# 
  1427  040F                     	;# 
  1428  0410                     	;# 
  1429  0411                     	;# 
  1430  0416                     	;# 
  1431  0416                     	;# 
  1432  0417                     	;# 
  1433  0418                     	;# 
  1434  0418                     	;# 
  1435  0419                     	;# 
  1436  041A                     	;# 
  1437  041A                     	;# 
  1438  041B                     	;# 
  1439  041C                     	;# 
  1440  041C                     	;# 
  1441  041D                     	;# 
  1442  041E                     	;# 
  1443  041F                     	;# 
  1444  048C                     	;# 
  1445  048C                     	;# 
  1446  048D                     	;# 
  1447  048E                     	;# 
  1448  048F                     	;# 
  1449  048F                     	;# 
  1450  0490                     	;# 
  1451  0491                     	;# 
  1452  0492                     	;# 
  1453  0492                     	;# 
  1454  0493                     	;# 
  1455  0494                     	;# 
  1456  0495                     	;# 
  1457  0495                     	;# 
  1458  0496                     	;# 
  1459  0497                     	;# 
  1460  0498                     	;# 
  1461  0499                     	;# 
  1462  049A                     	;# 
  1463  049B                     	;# 
  1464  049C                     	;# 
  1465  049D                     	;# 
  1466  050C                     	;# 
  1467  050C                     	;# 
  1468  050D                     	;# 
  1469  050E                     	;# 
  1470  050F                     	;# 
  1471  050F                     	;# 
  1472  0510                     	;# 
  1473  0511                     	;# 
  1474  0512                     	;# 
  1475  0512                     	;# 
  1476  0513                     	;# 
  1477  0514                     	;# 
  1478  0515                     	;# 
  1479  0515                     	;# 
  1480  0516                     	;# 
  1481  0517                     	;# 
  1482  0518                     	;# 
  1483  0519                     	;# 
  1484  051A                     	;# 
  1485  051B                     	;# 
  1486  051C                     	;# 
  1487  051D                     	;# 
  1488  058C                     	;# 
  1489  058C                     	;# 
  1490  058D                     	;# 
  1491  058E                     	;# 
  1492  058F                     	;# 
  1493  058F                     	;# 
  1494  0590                     	;# 
  1495  0591                     	;# 
  1496  0592                     	;# 
  1497  0593                     	;# 
  1498  060C                     	;# 
  1499  060D                     	;# 
  1500  060E                     	;# 
  1501  060F                     	;# 
  1502  0610                     	;# 
  1503  0611                     	;# 
  1504  0612                     	;# 
  1505  0613                     	;# 
  1506  0614                     	;# 
  1507  0616                     	;# 
  1508  0617                     	;# 
  1509  0618                     	;# 
  1510  0619                     	;# 
  1511  061A                     	;# 
  1512  061B                     	;# 
  1513  061C                     	;# 
  1514  061D                     	;# 
  1515  061E                     	;# 
  1516  068C                     	;# 
  1517  068D                     	;# 
  1518  068E                     	;# 
  1519  068F                     	;# 
  1520  0690                     	;# 
  1521  0691                     	;# 
  1522  0692                     	;# 
  1523  0693                     	;# 
  1524  0694                     	;# 
  1525  070C                     	;# 
  1526  070D                     	;# 
  1527  070E                     	;# 
  1528  070F                     	;# 
  1529  0710                     	;# 
  1530  0711                     	;# 
  1531  0712                     	;# 
  1532  0713                     	;# 
  1533  0714                     	;# 
  1534  0716                     	;# 
  1535  0717                     	;# 
  1536  0718                     	;# 
  1537  0719                     	;# 
  1538  071A                     	;# 
  1539  071B                     	;# 
  1540  071C                     	;# 
  1541  071D                     	;# 
  1542  071E                     	;# 
  1543  0796                     	;# 
  1544  0797                     	;# 
  1545  0798                     	;# 
  1546  0799                     	;# 
  1547  079A                     	;# 
  1548  079B                     	;# 
  1549  080C                     	;# 
  1550  080D                     	;# 
  1551  080E                     	;# 
  1552  080F                     	;# 
  1553  0810                     	;# 
  1554  0811                     	;# 
  1555  0812                     	;# 
  1556  0813                     	;# 
  1557  0814                     	;# 
  1558  081A                     	;# 
  1559  081B                     	;# 
  1560  081C                     	;# 
  1561  081D                     	;# 
  1562  081E                     	;# 
  1563  081F                     	;# 
  1564  088C                     	;# 
  1565  088D                     	;# 
  1566  088E                     	;# 
  1567  088F                     	;# 
  1568  0890                     	;# 
  1569  0891                     	;# 
  1570  0892                     	;# 
  1571  0893                     	;# 
  1572  0895                     	;# 
  1573  0896                     	;# 
  1574  0897                     	;# 
  1575  0898                     	;# 
  1576  0899                     	;# 
  1577  089A                     	;# 
  1578  089B                     	;# 
  1579  090C                     	;# 
  1580  090E                     	;# 
  1581  090F                     	;# 
  1582  091F                     	;# 
  1583  091F                     	;# 
  1584  098F                     	;# 
  1585  098F                     	;# 
  1586  0990                     	;# 
  1587  0991                     	;# 
  1588  0992                     	;# 
  1589  0993                     	;# 
  1590  0994                     	;# 
  1591  0995                     	;# 
  1592  0996                     	;# 
  1593  0997                     	;# 
  1594  0E0F                     	;# 
  1595  0E10                     	;# 
  1596  0E11                     	;# 
  1597  0E12                     	;# 
  1598  0E13                     	;# 
  1599  0E14                     	;# 
  1600  0E15                     	;# 
  1601  0E16                     	;# 
  1602  0E17                     	;# 
  1603  0E18                     	;# 
  1604  0E19                     	;# 
  1605  0E1A                     	;# 
  1606  0E1B                     	;# 
  1607  0E1C                     	;# 
  1608  0E1D                     	;# 
  1609  0E1E                     	;# 
  1610  0E1F                     	;# 
  1611  0E20                     	;# 
  1612  0E21                     	;# 
  1613  0E22                     	;# 
  1614  0E23                     	;# 
  1615  0E24                     	;# 
  1616  0E25                     	;# 
  1617  0E26                     	;# 
  1618  0E27                     	;# 
  1619  0E28                     	;# 
  1620  0E29                     	;# 
  1621  0E2A                     	;# 
  1622  0E2B                     	;# 
  1623  0E2C                     	;# 
  1624  0E2D                     	;# 
  1625  0E2E                     	;# 
  1626  0E2F                     	;# 
  1627  0E30                     	;# 
  1628  0E31                     	;# 
  1629  0E32                     	;# 
  1630  0E33                     	;# 
  1631  0E34                     	;# 
  1632  0E35                     	;# 
  1633  0E36                     	;# 
  1634  0E37                     	;# 
  1635  0E8F                     	;# 
  1636  0E90                     	;# 
  1637  0E91                     	;# 
  1638  0E92                     	;# 
  1639  0E93                     	;# 
  1640  0E94                     	;# 
  1641  0E95                     	;# 
  1642  0E96                     	;# 
  1643  0E97                     	;# 
  1644  0E9C                     	;# 
  1645  0E9D                     	;# 
  1646  0E9E                     	;# 
  1647  0EA1                     	;# 
  1648  0EA2                     	;# 
  1649  0EA3                     	;# 
  1650  0EA4                     	;# 
  1651  0EA5                     	;# 
  1652  0EA9                     	;# 
  1653  0EAA                     	;# 
  1654  0EAB                     	;# 
  1655  0EAC                     	;# 
  1656  0EB1                     	;# 
  1657  0EB2                     	;# 
  1658  0EB3                     	;# 
  1659  0EB8                     	;# 
  1660  0EB9                     	;# 
  1661  0EBA                     	;# 
  1662  0EBB                     	;# 
  1663  0EBC                     	;# 
  1664  0EBD                     	;# 
  1665  0EBE                     	;# 
  1666  0EC3                     	;# 
  1667  0EC5                     	;# 
  1668  0EC6                     	;# 
  1669  0EC7                     	;# 
  1670  0EC8                     	;# 
  1671  0EC9                     	;# 
  1672  0ECA                     	;# 
  1673  0ECB                     	;# 
  1674  0ECC                     	;# 
  1675  0F10                     	;# 
  1676  0F11                     	;# 
  1677  0F12                     	;# 
  1678  0F13                     	;# 
  1679  0F14                     	;# 
  1680  0F15                     	;# 
  1681  0F16                     	;# 
  1682  0F17                     	;# 
  1683  0F18                     	;# 
  1684  0F19                     	;# 
  1685  0F1A                     	;# 
  1686  0F1B                     	;# 
  1687  0F1C                     	;# 
  1688  0F1D                     	;# 
  1689  0F1E                     	;# 
  1690  0F1F                     	;# 
  1691  0F20                     	;# 
  1692  0F21                     	;# 
  1693  0F22                     	;# 
  1694  0F23                     	;# 
  1695  0F24                     	;# 
  1696  0F25                     	;# 
  1697  0F26                     	;# 
  1698  0F27                     	;# 
  1699  0F28                     	;# 
  1700  0F29                     	;# 
  1701  0F2A                     	;# 
  1702  0F2B                     	;# 
  1703  0F2C                     	;# 
  1704  0F2D                     	;# 
  1705  0F2E                     	;# 
  1706  0F2F                     	;# 
  1707  0F30                     	;# 
  1708  0F31                     	;# 
  1709  0F32                     	;# 
  1710  0F38                     	;# 
  1711  0F39                     	;# 
  1712  0F3A                     	;# 
  1713  0F3B                     	;# 
  1714  0F3C                     	;# 
  1715  0F3D                     	;# 
  1716  0F3E                     	;# 
  1717  0F3F                     	;# 
  1718  0F40                     	;# 
  1719  0F41                     	;# 
  1720  0F43                     	;# 
  1721  0F44                     	;# 
  1722  0F45                     	;# 
  1723  0F46                     	;# 
  1724  0F47                     	;# 
  1725  0F48                     	;# 
  1726  0F49                     	;# 
  1727  0F4A                     	;# 
  1728  0F4B                     	;# 
  1729  0F4C                     	;# 
  1730  0F4E                     	;# 
  1731  0F4F                     	;# 
  1732  0F50                     	;# 
  1733  0F51                     	;# 
  1734  0F52                     	;# 
  1735  0F53                     	;# 
  1736  0F54                     	;# 
  1737  0F55                     	;# 
  1738  0F56                     	;# 
  1739  0F57                     	;# 
  1740  0F59                     	;# 
  1741  0F5A                     	;# 
  1742  0F5B                     	;# 
  1743  0F5C                     	;# 
  1744  0F5D                     	;# 
  1745  0F61                     	;# 
  1746  0F62                     	;# 
  1747  0F64                     	;# 
  1748  0F65                     	;# 
  1749  0F66                     	;# 
  1750  0F67                     	;# 
  1751  0F68                     	;# 
  1752  0F69                     	;# 
  1753  0F6A                     	;# 
  1754  0F6B                     	;# 
  1755  0F6C                     	;# 
  1756  0F6D                     	;# 
  1757  0FE4                     	;# 
  1758  0FE5                     	;# 
  1759  0FE6                     	;# 
  1760  0FE7                     	;# 
  1761  0FE8                     	;# 
  1762  0FE9                     	;# 
  1763  0FEA                     	;# 
  1764  0FEB                     	;# 
  1765  0FED                     	;# 
  1766  0FEE                     	;# 
  1767  0FEF                     	;# 
  1768  0000                     	;# 
  1769  0001                     	;# 
  1770  0002                     	;# 
  1771  0003                     	;# 
  1772  0004                     	;# 
  1773  0005                     	;# 
  1774  0006                     	;# 
  1775  0007                     	;# 
  1776  0008                     	;# 
  1777  0009                     	;# 
  1778  000A                     	;# 
  1779  000B                     	;# 
  1780  000C                     	;# 
  1781  000D                     	;# 
  1782  000E                     	;# 
  1783  000F                     	;# 
  1784  0010                     	;# 
  1785  0011                     	;# 
  1786  0012                     	;# 
  1787  0013                     	;# 
  1788  0014                     	;# 
  1789  0015                     	;# 
  1790  0016                     	;# 
  1791  0017                     	;# 
  1792  0018                     	;# 
  1793  0019                     	;# 
  1794  001A                     	;# 
  1795  001C                     	;# 
  1796  001C                     	;# 
  1797  001D                     	;# 
  1798  001D                     	;# 
  1799  001E                     	;# 
  1800  001F                     	;# 
  1801  008C                     	;# 
  1802  008C                     	;# 
  1803  008D                     	;# 
  1804  008E                     	;# 
  1805  008E                     	;# 
  1806  008F                     	;# 
  1807  0090                     	;# 
  1808  0090                     	;# 
  1809  0091                     	;# 
  1810  0093                     	;# 
  1811  0094                     	;# 
  1812  0095                     	;# 
  1813  0096                     	;# 
  1814  0097                     	;# 
  1815  0098                     	;# 
  1816  0099                     	;# 
  1817  009A                     	;# 
  1818  009B                     	;# 
  1819  009C                     	;# 
  1820  009D                     	;# 
  1821  009E                     	;# 
  1822  010C                     	;# 
  1823  010D                     	;# 
  1824  010E                     	;# 
  1825  010E                     	;# 
  1826  010F                     	;# 
  1827  0110                     	;# 
  1828  0110                     	;# 
  1829  0111                     	;# 
  1830  0112                     	;# 
  1831  0112                     	;# 
  1832  0113                     	;# 
  1833  0114                     	;# 
  1834  0114                     	;# 
  1835  0115                     	;# 
  1836  0116                     	;# 
  1837  0116                     	;# 
  1838  0117                     	;# 
  1839  0119                     	;# 
  1840  0119                     	;# 
  1841  0119                     	;# 
  1842  011A                     	;# 
  1843  011A                     	;# 
  1844  011A                     	;# 
  1845  011B                     	;# 
  1846  011B                     	;# 
  1847  011B                     	;# 
  1848  011B                     	;# 
  1849  011B                     	;# 
  1850  011C                     	;# 
  1851  011C                     	;# 
  1852  011C                     	;# 
  1853  011D                     	;# 
  1854  011D                     	;# 
  1855  011D                     	;# 
  1856  011E                     	;# 
  1857  011E                     	;# 
  1858  011E                     	;# 
  1859  011F                     	;# 
  1860  011F                     	;# 
  1861  011F                     	;# 
  1862  011F                     	;# 
  1863  011F                     	;# 
  1864  018C                     	;# 
  1865  018D                     	;# 
  1866  018E                     	;# 
  1867  018F                     	;# 
  1868  0190                     	;# 
  1869  0191                     	;# 
  1870  0192                     	;# 
  1871  0196                     	;# 
  1872  0197                     	;# 
  1873  0198                     	;# 
  1874  0199                     	;# 
  1875  019A                     	;# 
  1876  019B                     	;# 
  1877  019C                     	;# 
  1878  020C                     	;# 
  1879  020C                     	;# 
  1880  020D                     	;# 
  1881  020E                     	;# 
  1882  020F                     	;# 
  1883  020F                     	;# 
  1884  0210                     	;# 
  1885  0210                     	;# 
  1886  0211                     	;# 
  1887  0211                     	;# 
  1888  0212                     	;# 
  1889  0212                     	;# 
  1890  0213                     	;# 
  1891  0214                     	;# 
  1892  0215                     	;# 
  1893  0215                     	;# 
  1894  0216                     	;# 
  1895  0216                     	;# 
  1896  0217                     	;# 
  1897  0217                     	;# 
  1898  0218                     	;# 
  1899  0218                     	;# 
  1900  0219                     	;# 
  1901  021A                     	;# 
  1902  021B                     	;# 
  1903  021B                     	;# 
  1904  021C                     	;# 
  1905  021C                     	;# 
  1906  021D                     	;# 
  1907  021D                     	;# 
  1908  021E                     	;# 
  1909  021F                     	;# 
  1910  028C                     	;# 
  1911  028C                     	;# 
  1912  028D                     	;# 
  1913  028D                     	;# 
  1914  028E                     	;# 
  1915  028F                     	;# 
  1916  0290                     	;# 
  1917  0290                     	;# 
  1918  0291                     	;# 
  1919  0292                     	;# 
  1920  0292                     	;# 
  1921  0293                     	;# 
  1922  0293                     	;# 
  1923  0294                     	;# 
  1924  0295                     	;# 
  1925  0296                     	;# 
  1926  0296                     	;# 
  1927  0297                     	;# 
  1928  0298                     	;# 
  1929  0298                     	;# 
  1930  0299                     	;# 
  1931  0299                     	;# 
  1932  029A                     	;# 
  1933  029B                     	;# 
  1934  029C                     	;# 
  1935  029C                     	;# 
  1936  029D                     	;# 
  1937  030C                     	;# 
  1938  030C                     	;# 
  1939  030D                     	;# 
  1940  030E                     	;# 
  1941  030F                     	;# 
  1942  0310                     	;# 
  1943  0310                     	;# 
  1944  0311                     	;# 
  1945  0312                     	;# 
  1946  0313                     	;# 
  1947  0314                     	;# 
  1948  0314                     	;# 
  1949  0315                     	;# 
  1950  0316                     	;# 
  1951  0317                     	;# 
  1952  0318                     	;# 
  1953  0318                     	;# 
  1954  0319                     	;# 
  1955  031A                     	;# 
  1956  031B                     	;# 
  1957  031C                     	;# 
  1958  031C                     	;# 
  1959  031D                     	;# 
  1960  031E                     	;# 
  1961  031F                     	;# 
  1962  038C                     	;# 
  1963  038C                     	;# 
  1964  038D                     	;# 
  1965  038E                     	;# 
  1966  0390                     	;# 
  1967  0390                     	;# 
  1968  0391                     	;# 
  1969  0392                     	;# 
  1970  040C                     	;# 
  1971  040D                     	;# 
  1972  040E                     	;# 
  1973  040F                     	;# 
  1974  0410                     	;# 
  1975  0411                     	;# 
  1976  0416                     	;# 
  1977  0416                     	;# 
  1978  0417                     	;# 
  1979  0418                     	;# 
  1980  0418                     	;# 
  1981  0419                     	;# 
  1982  041A                     	;# 
  1983  041A                     	;# 
  1984  041B                     	;# 
  1985  041C                     	;# 
  1986  041C                     	;# 
  1987  041D                     	;# 
  1988  041E                     	;# 
  1989  041F                     	;# 
  1990  048C                     	;# 
  1991  048C                     	;# 
  1992  048D                     	;# 
  1993  048E                     	;# 
  1994  048F                     	;# 
  1995  048F                     	;# 
  1996  0490                     	;# 
  1997  0491                     	;# 
  1998  0492                     	;# 
  1999  0492                     	;# 
  2000  0493                     	;# 
  2001  0494                     	;# 
  2002  0495                     	;# 
  2003  0495                     	;# 
  2004  0496                     	;# 
  2005  0497                     	;# 
  2006  0498                     	;# 
  2007  0499                     	;# 
  2008  049A                     	;# 
  2009  049B                     	;# 
  2010  049C                     	;# 
  2011  049D                     	;# 
  2012  050C                     	;# 
  2013  050C                     	;# 
  2014  050D                     	;# 
  2015  050E                     	;# 
  2016  050F                     	;# 
  2017  050F                     	;# 
  2018  0510                     	;# 
  2019  0511                     	;# 
  2020  0512                     	;# 
  2021  0512                     	;# 
  2022  0513                     	;# 
  2023  0514                     	;# 
  2024  0515                     	;# 
  2025  0515                     	;# 
  2026  0516                     	;# 
  2027  0517                     	;# 
  2028  0518                     	;# 
  2029  0519                     	;# 
  2030  051A                     	;# 
  2031  051B                     	;# 
  2032  051C                     	;# 
  2033  051D                     	;# 
  2034  058C                     	;# 
  2035  058C                     	;# 
  2036  058D                     	;# 
  2037  058E                     	;# 
  2038  058F                     	;# 
  2039  058F                     	;# 
  2040  0590                     	;# 
  2041  0591                     	;# 
  2042  0592                     	;# 
  2043  0593                     	;# 
  2044  060C                     	;# 
  2045  060D                     	;# 
  2046  060E                     	;# 
  2047  060F                     	;# 
  2048  0610                     	;# 
  2049  0611                     	;# 
  2050  0612                     	;# 
  2051  0613                     	;# 
  2052  0614                     	;# 
  2053  0616                     	;# 
  2054  0617                     	;# 
  2055  0618                     	;# 
  2056  0619                     	;# 
  2057  061A                     	;# 
  2058  061B                     	;# 
  2059  061C                     	;# 
  2060  061D                     	;# 
  2061  061E                     	;# 
  2062  068C                     	;# 
  2063  068D                     	;# 
  2064  068E                     	;# 
  2065  068F                     	;# 
  2066  0690                     	;# 
  2067  0691                     	;# 
  2068  0692                     	;# 
  2069  0693                     	;# 
  2070  0694                     	;# 
  2071  070C                     	;# 
  2072  070D                     	;# 
  2073  070E                     	;# 
  2074  070F                     	;# 
  2075  0710                     	;# 
  2076  0711                     	;# 
  2077  0712                     	;# 
  2078  0713                     	;# 
  2079  0714                     	;# 
  2080  0716                     	;# 
  2081  0717                     	;# 
  2082  0718                     	;# 
  2083  0719                     	;# 
  2084  071A                     	;# 
  2085  071B                     	;# 
  2086  071C                     	;# 
  2087  071D                     	;# 
  2088  071E                     	;# 
  2089  0796                     	;# 
  2090  0797                     	;# 
  2091  0798                     	;# 
  2092  0799                     	;# 
  2093  079A                     	;# 
  2094  079B                     	;# 
  2095  080C                     	;# 
  2096  080D                     	;# 
  2097  080E                     	;# 
  2098  080F                     	;# 
  2099  0810                     	;# 
  2100  0811                     	;# 
  2101  0812                     	;# 
  2102  0813                     	;# 
  2103  0814                     	;# 
  2104  081A                     	;# 
  2105  081B                     	;# 
  2106  081C                     	;# 
  2107  081D                     	;# 
  2108  081E                     	;# 
  2109  081F                     	;# 
  2110  088C                     	;# 
  2111  088D                     	;# 
  2112  088E                     	;# 
  2113  088F                     	;# 
  2114  0890                     	;# 
  2115  0891                     	;# 
  2116  0892                     	;# 
  2117  0893                     	;# 
  2118  0895                     	;# 
  2119  0896                     	;# 
  2120  0897                     	;# 
  2121  0898                     	;# 
  2122  0899                     	;# 
  2123  089A                     	;# 
  2124  089B                     	;# 
  2125  090C                     	;# 
  2126  090E                     	;# 
  2127  090F                     	;# 
  2128  091F                     	;# 
  2129  091F                     	;# 
  2130  098F                     	;# 
  2131  098F                     	;# 
  2132  0990                     	;# 
  2133  0991                     	;# 
  2134  0992                     	;# 
  2135  0993                     	;# 
  2136  0994                     	;# 
  2137  0995                     	;# 
  2138  0996                     	;# 
  2139  0997                     	;# 
  2140  0E0F                     	;# 
  2141  0E10                     	;# 
  2142  0E11                     	;# 
  2143  0E12                     	;# 
  2144  0E13                     	;# 
  2145  0E14                     	;# 
  2146  0E15                     	;# 
  2147  0E16                     	;# 
  2148  0E17                     	;# 
  2149  0E18                     	;# 
  2150  0E19                     	;# 
  2151  0E1A                     	;# 
  2152  0E1B                     	;# 
  2153  0E1C                     	;# 
  2154  0E1D                     	;# 
  2155  0E1E                     	;# 
  2156  0E1F                     	;# 
  2157  0E20                     	;# 
  2158  0E21                     	;# 
  2159  0E22                     	;# 
  2160  0E23                     	;# 
  2161  0E24                     	;# 
  2162  0E25                     	;# 
  2163  0E26                     	;# 
  2164  0E27                     	;# 
  2165  0E28                     	;# 
  2166  0E29                     	;# 
  2167  0E2A                     	;# 
  2168  0E2B                     	;# 
  2169  0E2C                     	;# 
  2170  0E2D                     	;# 
  2171  0E2E                     	;# 
  2172  0E2F                     	;# 
  2173  0E30                     	;# 
  2174  0E31                     	;# 
  2175  0E32                     	;# 
  2176  0E33                     	;# 
  2177  0E34                     	;# 
  2178  0E35                     	;# 
  2179  0E36                     	;# 
  2180  0E37                     	;# 
  2181  0E8F                     	;# 
  2182  0E90                     	;# 
  2183  0E91                     	;# 
  2184  0E92                     	;# 
  2185  0E93                     	;# 
  2186  0E94                     	;# 
  2187  0E95                     	;# 
  2188  0E96                     	;# 
  2189  0E97                     	;# 
  2190  0E9C                     	;# 
  2191  0E9D                     	;# 
  2192  0E9E                     	;# 
  2193  0EA1                     	;# 
  2194  0EA2                     	;# 
  2195  0EA3                     	;# 
  2196  0EA4                     	;# 
  2197  0EA5                     	;# 
  2198  0EA9                     	;# 
  2199  0EAA                     	;# 
  2200  0EAB                     	;# 
  2201  0EAC                     	;# 
  2202  0EB1                     	;# 
  2203  0EB2                     	;# 
  2204  0EB3                     	;# 
  2205  0EB8                     	;# 
  2206  0EB9                     	;# 
  2207  0EBA                     	;# 
  2208  0EBB                     	;# 
  2209  0EBC                     	;# 
  2210  0EBD                     	;# 
  2211  0EBE                     	;# 
  2212  0EC3                     	;# 
  2213  0EC5                     	;# 
  2214  0EC6                     	;# 
  2215  0EC7                     	;# 
  2216  0EC8                     	;# 
  2217  0EC9                     	;# 
  2218  0ECA                     	;# 
  2219  0ECB                     	;# 
  2220  0ECC                     	;# 
  2221  0F10                     	;# 
  2222  0F11                     	;# 
  2223  0F12                     	;# 
  2224  0F13                     	;# 
  2225  0F14                     	;# 
  2226  0F15                     	;# 
  2227  0F16                     	;# 
  2228  0F17                     	;# 
  2229  0F18                     	;# 
  2230  0F19                     	;# 
  2231  0F1A                     	;# 
  2232  0F1B                     	;# 
  2233  0F1C                     	;# 
  2234  0F1D                     	;# 
  2235  0F1E                     	;# 
  2236  0F1F                     	;# 
  2237  0F20                     	;# 
  2238  0F21                     	;# 
  2239  0F22                     	;# 
  2240  0F23                     	;# 
  2241  0F24                     	;# 
  2242  0F25                     	;# 
  2243  0F26                     	;# 
  2244  0F27                     	;# 
  2245  0F28                     	;# 
  2246  0F29                     	;# 
  2247  0F2A                     	;# 
  2248  0F2B                     	;# 
  2249  0F2C                     	;# 
  2250  0F2D                     	;# 
  2251  0F2E                     	;# 
  2252  0F2F                     	;# 
  2253  0F30                     	;# 
  2254  0F31                     	;# 
  2255  0F32                     	;# 
  2256  0F38                     	;# 
  2257  0F39                     	;# 
  2258  0F3A                     	;# 
  2259  0F3B                     	;# 
  2260  0F3C                     	;# 
  2261  0F3D                     	;# 
  2262  0F3E                     	;# 
  2263  0F3F                     	;# 
  2264  0F40                     	;# 
  2265  0F41                     	;# 
  2266  0F43                     	;# 
  2267  0F44                     	;# 
  2268  0F45                     	;# 
  2269  0F46                     	;# 
  2270  0F47                     	;# 
  2271  0F48                     	;# 
  2272  0F49                     	;# 
  2273  0F4A                     	;# 
  2274  0F4B                     	;# 
  2275  0F4C                     	;# 
  2276  0F4E                     	;# 
  2277  0F4F                     	;# 
  2278  0F50                     	;# 
  2279  0F51                     	;# 
  2280  0F52                     	;# 
  2281  0F53                     	;# 
  2282  0F54                     	;# 
  2283  0F55                     	;# 
  2284  0F56                     	;# 
  2285  0F57                     	;# 
  2286  0F59                     	;# 
  2287  0F5A                     	;# 
  2288  0F5B                     	;# 
  2289  0F5C                     	;# 
  2290  0F5D                     	;# 
  2291  0F61                     	;# 
  2292  0F62                     	;# 
  2293  0F64                     	;# 
  2294  0F65                     	;# 
  2295  0F66                     	;# 
  2296  0F67                     	;# 
  2297  0F68                     	;# 
  2298  0F69                     	;# 
  2299  0F6A                     	;# 
  2300  0F6B                     	;# 
  2301  0F6C                     	;# 
  2302  0F6D                     	;# 
  2303  0FE4                     	;# 
  2304  0FE5                     	;# 
  2305  0FE6                     	;# 
  2306  0FE7                     	;# 
  2307  0FE8                     	;# 
  2308  0FE9                     	;# 
  2309  0FEA                     	;# 
  2310  0FEB                     	;# 
  2311  0FED                     	;# 
  2312  0FEE                     	;# 
  2313  0FEF                     	;# 
  2314  0000                     	;# 
  2315  0001                     	;# 
  2316  0002                     	;# 
  2317  0003                     	;# 
  2318  0004                     	;# 
  2319  0005                     	;# 
  2320  0006                     	;# 
  2321  0007                     	;# 
  2322  0008                     	;# 
  2323  0009                     	;# 
  2324  000A                     	;# 
  2325  000B                     	;# 
  2326  000C                     	;# 
  2327  000D                     	;# 
  2328  000E                     	;# 
  2329  000F                     	;# 
  2330  0010                     	;# 
  2331  0011                     	;# 
  2332  0012                     	;# 
  2333  0013                     	;# 
  2334  0014                     	;# 
  2335  0015                     	;# 
  2336  0016                     	;# 
  2337  0017                     	;# 
  2338  0018                     	;# 
  2339  0019                     	;# 
  2340  001A                     	;# 
  2341  001C                     	;# 
  2342  001C                     	;# 
  2343  001D                     	;# 
  2344  001D                     	;# 
  2345  001E                     	;# 
  2346  001F                     	;# 
  2347  008C                     	;# 
  2348  008C                     	;# 
  2349  008D                     	;# 
  2350  008E                     	;# 
  2351  008E                     	;# 
  2352  008F                     	;# 
  2353  0090                     	;# 
  2354  0090                     	;# 
  2355  0091                     	;# 
  2356  0093                     	;# 
  2357  0094                     	;# 
  2358  0095                     	;# 
  2359  0096                     	;# 
  2360  0097                     	;# 
  2361  0098                     	;# 
  2362  0099                     	;# 
  2363  009A                     	;# 
  2364  009B                     	;# 
  2365  009C                     	;# 
  2366  009D                     	;# 
  2367  009E                     	;# 
  2368  010C                     	;# 
  2369  010D                     	;# 
  2370  010E                     	;# 
  2371  010E                     	;# 
  2372  010F                     	;# 
  2373  0110                     	;# 
  2374  0110                     	;# 
  2375  0111                     	;# 
  2376  0112                     	;# 
  2377  0112                     	;# 
  2378  0113                     	;# 
  2379  0114                     	;# 
  2380  0114                     	;# 
  2381  0115                     	;# 
  2382  0116                     	;# 
  2383  0116                     	;# 
  2384  0117                     	;# 
  2385  0119                     	;# 
  2386  0119                     	;# 
  2387  0119                     	;# 
  2388  011A                     	;# 
  2389  011A                     	;# 
  2390  011A                     	;# 
  2391  011B                     	;# 
  2392  011B                     	;# 
  2393  011B                     	;# 
  2394  011B                     	;# 
  2395  011B                     	;# 
  2396  011C                     	;# 
  2397  011C                     	;# 
  2398  011C                     	;# 
  2399  011D                     	;# 
  2400  011D                     	;# 
  2401  011D                     	;# 
  2402  011E                     	;# 
  2403  011E                     	;# 
  2404  011E                     	;# 
  2405  011F                     	;# 
  2406  011F                     	;# 
  2407  011F                     	;# 
  2408  011F                     	;# 
  2409  011F                     	;# 
  2410  018C                     	;# 
  2411  018D                     	;# 
  2412  018E                     	;# 
  2413  018F                     	;# 
  2414  0190                     	;# 
  2415  0191                     	;# 
  2416  0192                     	;# 
  2417  0196                     	;# 
  2418  0197                     	;# 
  2419  0198                     	;# 
  2420  0199                     	;# 
  2421  019A                     	;# 
  2422  019B                     	;# 
  2423  019C                     	;# 
  2424  020C                     	;# 
  2425  020C                     	;# 
  2426  020D                     	;# 
  2427  020E                     	;# 
  2428  020F                     	;# 
  2429  020F                     	;# 
  2430  0210                     	;# 
  2431  0210                     	;# 
  2432  0211                     	;# 
  2433  0211                     	;# 
  2434  0212                     	;# 
  2435  0212                     	;# 
  2436  0213                     	;# 
  2437  0214                     	;# 
  2438  0215                     	;# 
  2439  0215                     	;# 
  2440  0216                     	;# 
  2441  0216                     	;# 
  2442  0217                     	;# 
  2443  0217                     	;# 
  2444  0218                     	;# 
  2445  0218                     	;# 
  2446  0219                     	;# 
  2447  021A                     	;# 
  2448  021B                     	;# 
  2449  021B                     	;# 
  2450  021C                     	;# 
  2451  021C                     	;# 
  2452  021D                     	;# 
  2453  021D                     	;# 
  2454  021E                     	;# 
  2455  021F                     	;# 
  2456  028C                     	;# 
  2457  028C                     	;# 
  2458  028D                     	;# 
  2459  028D                     	;# 
  2460  028E                     	;# 
  2461  028F                     	;# 
  2462  0290                     	;# 
  2463  0290                     	;# 
  2464  0291                     	;# 
  2465  0292                     	;# 
  2466  0292                     	;# 
  2467  0293                     	;# 
  2468  0293                     	;# 
  2469  0294                     	;# 
  2470  0295                     	;# 
  2471  0296                     	;# 
  2472  0296                     	;# 
  2473  0297                     	;# 
  2474  0298                     	;# 
  2475  0298                     	;# 
  2476  0299                     	;# 
  2477  0299                     	;# 
  2478  029A                     	;# 
  2479  029B                     	;# 
  2480  029C                     	;# 
  2481  029C                     	;# 
  2482  029D                     	;# 
  2483  030C                     	;# 
  2484  030C                     	;# 
  2485  030D                     	;# 
  2486  030E                     	;# 
  2487  030F                     	;# 
  2488  0310                     	;# 
  2489  0310                     	;# 
  2490  0311                     	;# 
  2491  0312                     	;# 
  2492  0313                     	;# 
  2493  0314                     	;# 
  2494  0314                     	;# 
  2495  0315                     	;# 
  2496  0316                     	;# 
  2497  0317                     	;# 
  2498  0318                     	;# 
  2499  0318                     	;# 
  2500  0319                     	;# 
  2501  031A                     	;# 
  2502  031B                     	;# 
  2503  031C                     	;# 
  2504  031C                     	;# 
  2505  031D                     	;# 
  2506  031E                     	;# 
  2507  031F                     	;# 
  2508  038C                     	;# 
  2509  038C                     	;# 
  2510  038D                     	;# 
  2511  038E                     	;# 
  2512  0390                     	;# 
  2513  0390                     	;# 
  2514  0391                     	;# 
  2515  0392                     	;# 
  2516  040C                     	;# 
  2517  040D                     	;# 
  2518  040E                     	;# 
  2519  040F                     	;# 
  2520  0410                     	;# 
  2521  0411                     	;# 
  2522  0416                     	;# 
  2523  0416                     	;# 
  2524  0417                     	;# 
  2525  0418                     	;# 
  2526  0418                     	;# 
  2527  0419                     	;# 
  2528  041A                     	;# 
  2529  041A                     	;# 
  2530  041B                     	;# 
  2531  041C                     	;# 
  2532  041C                     	;# 
  2533  041D                     	;# 
  2534  041E                     	;# 
  2535  041F                     	;# 
  2536  048C                     	;# 
  2537  048C                     	;# 
  2538  048D                     	;# 
  2539  048E                     	;# 
  2540  048F                     	;# 
  2541  048F                     	;# 
  2542  0490                     	;# 
  2543  0491                     	;# 
  2544  0492                     	;# 
  2545  0492                     	;# 
  2546  0493                     	;# 
  2547  0494                     	;# 
  2548  0495                     	;# 
  2549  0495                     	;# 
  2550  0496                     	;# 
  2551  0497                     	;# 
  2552  0498                     	;# 
  2553  0499                     	;# 
  2554  049A                     	;# 
  2555  049B                     	;# 
  2556  049C                     	;# 
  2557  049D                     	;# 
  2558  050C                     	;# 
  2559  050C                     	;# 
  2560  050D                     	;# 
  2561  050E                     	;# 
  2562  050F                     	;# 
  2563  050F                     	;# 
  2564  0510                     	;# 
  2565  0511                     	;# 
  2566  0512                     	;# 
  2567  0512                     	;# 
  2568  0513                     	;# 
  2569  0514                     	;# 
  2570  0515                     	;# 
  2571  0515                     	;# 
  2572  0516                     	;# 
  2573  0517                     	;# 
  2574  0518                     	;# 
  2575  0519                     	;# 
  2576  051A                     	;# 
  2577  051B                     	;# 
  2578  051C                     	;# 
  2579  051D                     	;# 
  2580  058C                     	;# 
  2581  058C                     	;# 
  2582  058D                     	;# 
  2583  058E                     	;# 
  2584  058F                     	;# 
  2585  058F                     	;# 
  2586  0590                     	;# 
  2587  0591                     	;# 
  2588  0592                     	;# 
  2589  0593                     	;# 
  2590  060C                     	;# 
  2591  060D                     	;# 
  2592  060E                     	;# 
  2593  060F                     	;# 
  2594  0610                     	;# 
  2595  0611                     	;# 
  2596  0612                     	;# 
  2597  0613                     	;# 
  2598  0614                     	;# 
  2599  0616                     	;# 
  2600  0617                     	;# 
  2601  0618                     	;# 
  2602  0619                     	;# 
  2603  061A                     	;# 
  2604  061B                     	;# 
  2605  061C                     	;# 
  2606  061D                     	;# 
  2607  061E                     	;# 
  2608  068C                     	;# 
  2609  068D                     	;# 
  2610  068E                     	;# 
  2611  068F                     	;# 
  2612  0690                     	;# 
  2613  0691                     	;# 
  2614  0692                     	;# 
  2615  0693                     	;# 
  2616  0694                     	;# 
  2617  070C                     	;# 
  2618  070D                     	;# 
  2619  070E                     	;# 
  2620  070F                     	;# 
  2621  0710                     	;# 
  2622  0711                     	;# 
  2623  0712                     	;# 
  2624  0713                     	;# 
  2625  0714                     	;# 
  2626  0716                     	;# 
  2627  0717                     	;# 
  2628  0718                     	;# 
  2629  0719                     	;# 
  2630  071A                     	;# 
  2631  071B                     	;# 
  2632  071C                     	;# 
  2633  071D                     	;# 
  2634  071E                     	;# 
  2635  0796                     	;# 
  2636  0797                     	;# 
  2637  0798                     	;# 
  2638  0799                     	;# 
  2639  079A                     	;# 
  2640  079B                     	;# 
  2641  080C                     	;# 
  2642  080D                     	;# 
  2643  080E                     	;# 
  2644  080F                     	;# 
  2645  0810                     	;# 
  2646  0811                     	;# 
  2647  0812                     	;# 
  2648  0813                     	;# 
  2649  0814                     	;# 
  2650  081A                     	;# 
  2651  081B                     	;# 
  2652  081C                     	;# 
  2653  081D                     	;# 
  2654  081E                     	;# 
  2655  081F                     	;# 
  2656  088C                     	;# 
  2657  088D                     	;# 
  2658  088E                     	;# 
  2659  088F                     	;# 
  2660  0890                     	;# 
  2661  0891                     	;# 
  2662  0892                     	;# 
  2663  0893                     	;# 
  2664  0895                     	;# 
  2665  0896                     	;# 
  2666  0897                     	;# 
  2667  0898                     	;# 
  2668  0899                     	;# 
  2669  089A                     	;# 
  2670  089B                     	;# 
  2671  090C                     	;# 
  2672  090E                     	;# 
  2673  090F                     	;# 
  2674  091F                     	;# 
  2675  091F                     	;# 
  2676  098F                     	;# 
  2677  098F                     	;# 
  2678  0990                     	;# 
  2679  0991                     	;# 
  2680  0992                     	;# 
  2681  0993                     	;# 
  2682  0994                     	;# 
  2683  0995                     	;# 
  2684  0996                     	;# 
  2685  0997                     	;# 
  2686  0E0F                     	;# 
  2687  0E10                     	;# 
  2688  0E11                     	;# 
  2689  0E12                     	;# 
  2690  0E13                     	;# 
  2691  0E14                     	;# 
  2692  0E15                     	;# 
  2693  0E16                     	;# 
  2694  0E17                     	;# 
  2695  0E18                     	;# 
  2696  0E19                     	;# 
  2697  0E1A                     	;# 
  2698  0E1B                     	;# 
  2699  0E1C                     	;# 
  2700  0E1D                     	;# 
  2701  0E1E                     	;# 
  2702  0E1F                     	;# 
  2703  0E20                     	;# 
  2704  0E21                     	;# 
  2705  0E22                     	;# 
  2706  0E23                     	;# 
  2707  0E24                     	;# 
  2708  0E25                     	;# 
  2709  0E26                     	;# 
  2710  0E27                     	;# 
  2711  0E28                     	;# 
  2712  0E29                     	;# 
  2713  0E2A                     	;# 
  2714  0E2B                     	;# 
  2715  0E2C                     	;# 
  2716  0E2D                     	;# 
  2717  0E2E                     	;# 
  2718  0E2F                     	;# 
  2719  0E30                     	;# 
  2720  0E31                     	;# 
  2721  0E32                     	;# 
  2722  0E33                     	;# 
  2723  0E34                     	;# 
  2724  0E35                     	;# 
  2725  0E36                     	;# 
  2726  0E37                     	;# 
  2727  0E8F                     	;# 
  2728  0E90                     	;# 
  2729  0E91                     	;# 
  2730  0E92                     	;# 
  2731  0E93                     	;# 
  2732  0E94                     	;# 
  2733  0E95                     	;# 
  2734  0E96                     	;# 
  2735  0E97                     	;# 
  2736  0E9C                     	;# 
  2737  0E9D                     	;# 
  2738  0E9E                     	;# 
  2739  0EA1                     	;# 
  2740  0EA2                     	;# 
  2741  0EA3                     	;# 
  2742  0EA4                     	;# 
  2743  0EA5                     	;# 
  2744  0EA9                     	;# 
  2745  0EAA                     	;# 
  2746  0EAB                     	;# 
  2747  0EAC                     	;# 
  2748  0EB1                     	;# 
  2749  0EB2                     	;# 
  2750  0EB3                     	;# 
  2751  0EB8                     	;# 
  2752  0EB9                     	;# 
  2753  0EBA                     	;# 
  2754  0EBB                     	;# 
  2755  0EBC                     	;# 
  2756  0EBD                     	;# 
  2757  0EBE                     	;# 
  2758  0EC3                     	;# 
  2759  0EC5                     	;# 
  2760  0EC6                     	;# 
  2761  0EC7                     	;# 
  2762  0EC8                     	;# 
  2763  0EC9                     	;# 
  2764  0ECA                     	;# 
  2765  0ECB                     	;# 
  2766  0ECC                     	;# 
  2767  0F10                     	;# 
  2768  0F11                     	;# 
  2769  0F12                     	;# 
  2770  0F13                     	;# 
  2771  0F14                     	;# 
  2772  0F15                     	;# 
  2773  0F16                     	;# 
  2774  0F17                     	;# 
  2775  0F18                     	;# 
  2776  0F19                     	;# 
  2777  0F1A                     	;# 
  2778  0F1B                     	;# 
  2779  0F1C                     	;# 
  2780  0F1D                     	;# 
  2781  0F1E                     	;# 
  2782  0F1F                     	;# 
  2783  0F20                     	;# 
  2784  0F21                     	;# 
  2785  0F22                     	;# 
  2786  0F23                     	;# 
  2787  0F24                     	;# 
  2788  0F25                     	;# 
  2789  0F26                     	;# 
  2790  0F27                     	;# 
  2791  0F28                     	;# 
  2792  0F29                     	;# 
  2793  0F2A                     	;# 
  2794  0F2B                     	;# 
  2795  0F2C                     	;# 
  2796  0F2D                     	;# 
  2797  0F2E                     	;# 
  2798  0F2F                     	;# 
  2799  0F30                     	;# 
  2800  0F31                     	;# 
  2801  0F32                     	;# 
  2802  0F38                     	;# 
  2803  0F39                     	;# 
  2804  0F3A                     	;# 
  2805  0F3B                     	;# 
  2806  0F3C                     	;# 
  2807  0F3D                     	;# 
  2808  0F3E                     	;# 
  2809  0F3F                     	;# 
  2810  0F40                     	;# 
  2811  0F41                     	;# 
  2812  0F43                     	;# 
  2813  0F44                     	;# 
  2814  0F45                     	;# 
  2815  0F46                     	;# 
  2816  0F47                     	;# 
  2817  0F48                     	;# 
  2818  0F49                     	;# 
  2819  0F4A                     	;# 
  2820  0F4B                     	;# 
  2821  0F4C                     	;# 
  2822  0F4E                     	;# 
  2823  0F4F                     	;# 
  2824  0F50                     	;# 
  2825  0F51                     	;# 
  2826  0F52                     	;# 
  2827  0F53                     	;# 
  2828  0F54                     	;# 
  2829  0F55                     	;# 
  2830  0F56                     	;# 
  2831  0F57                     	;# 
  2832  0F59                     	;# 
  2833  0F5A                     	;# 
  2834  0F5B                     	;# 
  2835  0F5C                     	;# 
  2836  0F5D                     	;# 
  2837  0F61                     	;# 
  2838  0F62                     	;# 
  2839  0F64                     	;# 
  2840  0F65                     	;# 
  2841  0F66                     	;# 
  2842  0F67                     	;# 
  2843  0F68                     	;# 
  2844  0F69                     	;# 
  2845  0F6A                     	;# 
  2846  0F6B                     	;# 
  2847  0F6C                     	;# 
  2848  0F6D                     	;# 
  2849  0FE4                     	;# 
  2850  0FE5                     	;# 
  2851  0FE6                     	;# 
  2852  0FE7                     	;# 
  2853  0FE8                     	;# 
  2854  0FE9                     	;# 
  2855  0FEA                     	;# 
  2856  0FEB                     	;# 
  2857  0FED                     	;# 
  2858  0FEE                     	;# 
  2859  0FEF                     	;# 
  2860  0000                     	;# 
  2861  0001                     	;# 
  2862  0002                     	;# 
  2863  0003                     	;# 
  2864  0004                     	;# 
  2865  0005                     	;# 
  2866  0006                     	;# 
  2867  0007                     	;# 
  2868  0008                     	;# 
  2869  0009                     	;# 
  2870  000A                     	;# 
  2871  000B                     	;# 
  2872  000C                     	;# 
  2873  000D                     	;# 
  2874  000E                     	;# 
  2875  000F                     	;# 
  2876  0010                     	;# 
  2877  0011                     	;# 
  2878  0012                     	;# 
  2879  0013                     	;# 
  2880  0014                     	;# 
  2881  0015                     	;# 
  2882  0016                     	;# 
  2883  0017                     	;# 
  2884  0018                     	;# 
  2885  0019                     	;# 
  2886  001A                     	;# 
  2887  001C                     	;# 
  2888  001C                     	;# 
  2889  001D                     	;# 
  2890  001D                     	;# 
  2891  001E                     	;# 
  2892  001F                     	;# 
  2893  008C                     	;# 
  2894  008C                     	;# 
  2895  008D                     	;# 
  2896  008E                     	;# 
  2897  008E                     	;# 
  2898  008F                     	;# 
  2899  0090                     	;# 
  2900  0090                     	;# 
  2901  0091                     	;# 
  2902  0093                     	;# 
  2903  0094                     	;# 
  2904  0095                     	;# 
  2905  0096                     	;# 
  2906  0097                     	;# 
  2907  0098                     	;# 
  2908  0099                     	;# 
  2909  009A                     	;# 
  2910  009B                     	;# 
  2911  009C                     	;# 
  2912  009D                     	;# 
  2913  009E                     	;# 
  2914  010C                     	;# 
  2915  010D                     	;# 
  2916  010E                     	;# 
  2917  010E                     	;# 
  2918  010F                     	;# 
  2919  0110                     	;# 
  2920  0110                     	;# 
  2921  0111                     	;# 
  2922  0112                     	;# 
  2923  0112                     	;# 
  2924  0113                     	;# 
  2925  0114                     	;# 
  2926  0114                     	;# 
  2927  0115                     	;# 
  2928  0116                     	;# 
  2929  0116                     	;# 
  2930  0117                     	;# 
  2931  0119                     	;# 
  2932  0119                     	;# 
  2933  0119                     	;# 
  2934  011A                     	;# 
  2935  011A                     	;# 
  2936  011A                     	;# 
  2937  011B                     	;# 
  2938  011B                     	;# 
  2939  011B                     	;# 
  2940  011B                     	;# 
  2941  011B                     	;# 
  2942  011C                     	;# 
  2943  011C                     	;# 
  2944  011C                     	;# 
  2945  011D                     	;# 
  2946  011D                     	;# 
  2947  011D                     	;# 
  2948  011E                     	;# 
  2949  011E                     	;# 
  2950  011E                     	;# 
  2951  011F                     	;# 
  2952  011F                     	;# 
  2953  011F                     	;# 
  2954  011F                     	;# 
  2955  011F                     	;# 
  2956  018C                     	;# 
  2957  018D                     	;# 
  2958  018E                     	;# 
  2959  018F                     	;# 
  2960  0190                     	;# 
  2961  0191                     	;# 
  2962  0192                     	;# 
  2963  0196                     	;# 
  2964  0197                     	;# 
  2965  0198                     	;# 
  2966  0199                     	;# 
  2967  019A                     	;# 
  2968  019B                     	;# 
  2969  019C                     	;# 
  2970  020C                     	;# 
  2971  020C                     	;# 
  2972  020D                     	;# 
  2973  020E                     	;# 
  2974  020F                     	;# 
  2975  020F                     	;# 
  2976  0210                     	;# 
  2977  0210                     	;# 
  2978  0211                     	;# 
  2979  0211                     	;# 
  2980  0212                     	;# 
  2981  0212                     	;# 
  2982  0213                     	;# 
  2983  0214                     	;# 
  2984  0215                     	;# 
  2985  0215                     	;# 
  2986  0216                     	;# 
  2987  0216                     	;# 
  2988  0217                     	;# 
  2989  0217                     	;# 
  2990  0218                     	;# 
  2991  0218                     	;# 
  2992  0219                     	;# 
  2993  021A                     	;# 
  2994  021B                     	;# 
  2995  021B                     	;# 
  2996  021C                     	;# 
  2997  021C                     	;# 
  2998  021D                     	;# 
  2999  021D                     	;# 
  3000  021E                     	;# 
  3001  021F                     	;# 
  3002  028C                     	;# 
  3003  028C                     	;# 
  3004  028D                     	;# 
  3005  028D                     	;# 
  3006  028E                     	;# 
  3007  028F                     	;# 
  3008  0290                     	;# 
  3009  0290                     	;# 
  3010  0291                     	;# 
  3011  0292                     	;# 
  3012  0292                     	;# 
  3013  0293                     	;# 
  3014  0293                     	;# 
  3015  0294                     	;# 
  3016  0295                     	;# 
  3017  0296                     	;# 
  3018  0296                     	;# 
  3019  0297                     	;# 
  3020  0298                     	;# 
  3021  0298                     	;# 
  3022  0299                     	;# 
  3023  0299                     	;# 
  3024  029A                     	;# 
  3025  029B                     	;# 
  3026  029C                     	;# 
  3027  029C                     	;# 
  3028  029D                     	;# 
  3029  030C                     	;# 
  3030  030C                     	;# 
  3031  030D                     	;# 
  3032  030E                     	;# 
  3033  030F                     	;# 
  3034  0310                     	;# 
  3035  0310                     	;# 
  3036  0311                     	;# 
  3037  0312                     	;# 
  3038  0313                     	;# 
  3039  0314                     	;# 
  3040  0314                     	;# 
  3041  0315                     	;# 
  3042  0316                     	;# 
  3043  0317                     	;# 
  3044  0318                     	;# 
  3045  0318                     	;# 
  3046  0319                     	;# 
  3047  031A                     	;# 
  3048  031B                     	;# 
  3049  031C                     	;# 
  3050  031C                     	;# 
  3051  031D                     	;# 
  3052  031E                     	;# 
  3053  031F                     	;# 
  3054  038C                     	;# 
  3055  038C                     	;# 
  3056  038D                     	;# 
  3057  038E                     	;# 
  3058  0390                     	;# 
  3059  0390                     	;# 
  3060  0391                     	;# 
  3061  0392                     	;# 
  3062  040C                     	;# 
  3063  040D                     	;# 
  3064  040E                     	;# 
  3065  040F                     	;# 
  3066  0410                     	;# 
  3067  0411                     	;# 
  3068  0416                     	;# 
  3069  0416                     	;# 
  3070  0417                     	;# 
  3071  0418                     	;# 
  3072  0418                     	;# 
  3073  0419                     	;# 
  3074  041A                     	;# 
  3075  041A                     	;# 
  3076  041B                     	;# 
  3077  041C                     	;# 
  3078  041C                     	;# 
  3079  041D                     	;# 
  3080  041E                     	;# 
  3081  041F                     	;# 
  3082  048C                     	;# 
  3083  048C                     	;# 
  3084  048D                     	;# 
  3085  048E                     	;# 
  3086  048F                     	;# 
  3087  048F                     	;# 
  3088  0490                     	;# 
  3089  0491                     	;# 
  3090  0492                     	;# 
  3091  0492                     	;# 
  3092  0493                     	;# 
  3093  0494                     	;# 
  3094  0495                     	;# 
  3095  0495                     	;# 
  3096  0496                     	;# 
  3097  0497                     	;# 
  3098  0498                     	;# 
  3099  0499                     	;# 
  3100  049A                     	;# 
  3101  049B                     	;# 
  3102  049C                     	;# 
  3103  049D                     	;# 
  3104  050C                     	;# 
  3105  050C                     	;# 
  3106  050D                     	;# 
  3107  050E                     	;# 
  3108  050F                     	;# 
  3109  050F                     	;# 
  3110  0510                     	;# 
  3111  0511                     	;# 
  3112  0512                     	;# 
  3113  0512                     	;# 
  3114  0513                     	;# 
  3115  0514                     	;# 
  3116  0515                     	;# 
  3117  0515                     	;# 
  3118  0516                     	;# 
  3119  0517                     	;# 
  3120  0518                     	;# 
  3121  0519                     	;# 
  3122  051A                     	;# 
  3123  051B                     	;# 
  3124  051C                     	;# 
  3125  051D                     	;# 
  3126  058C                     	;# 
  3127  058C                     	;# 
  3128  058D                     	;# 
  3129  058E                     	;# 
  3130  058F                     	;# 
  3131  058F                     	;# 
  3132  0590                     	;# 
  3133  0591                     	;# 
  3134  0592                     	;# 
  3135  0593                     	;# 
  3136  060C                     	;# 
  3137  060D                     	;# 
  3138  060E                     	;# 
  3139  060F                     	;# 
  3140  0610                     	;# 
  3141  0611                     	;# 
  3142  0612                     	;# 
  3143  0613                     	;# 
  3144  0614                     	;# 
  3145  0616                     	;# 
  3146  0617                     	;# 
  3147  0618                     	;# 
  3148  0619                     	;# 
  3149  061A                     	;# 
  3150  061B                     	;# 
  3151  061C                     	;# 
  3152  061D                     	;# 
  3153  061E                     	;# 
  3154  068C                     	;# 
  3155  068D                     	;# 
  3156  068E                     	;# 
  3157  068F                     	;# 
  3158  0690                     	;# 
  3159  0691                     	;# 
  3160  0692                     	;# 
  3161  0693                     	;# 
  3162  0694                     	;# 
  3163  070C                     	;# 
  3164  070D                     	;# 
  3165  070E                     	;# 
  3166  070F                     	;# 
  3167  0710                     	;# 
  3168  0711                     	;# 
  3169  0712                     	;# 
  3170  0713                     	;# 
  3171  0714                     	;# 
  3172  0716                     	;# 
  3173  0717                     	;# 
  3174  0718                     	;# 
  3175  0719                     	;# 
  3176  071A                     	;# 
  3177  071B                     	;# 
  3178  071C                     	;# 
  3179  071D                     	;# 
  3180  071E                     	;# 
  3181  0796                     	;# 
  3182  0797                     	;# 
  3183  0798                     	;# 
  3184  0799                     	;# 
  3185  079A                     	;# 
  3186  079B                     	;# 
  3187  080C                     	;# 
  3188  080D                     	;# 
  3189  080E                     	;# 
  3190  080F                     	;# 
  3191  0810                     	;# 
  3192  0811                     	;# 
  3193  0812                     	;# 
  3194  0813                     	;# 
  3195  0814                     	;# 
  3196  081A                     	;# 
  3197  081B                     	;# 
  3198  081C                     	;# 
  3199  081D                     	;# 
  3200  081E                     	;# 
  3201  081F                     	;# 
  3202  088C                     	;# 
  3203  088D                     	;# 
  3204  088E                     	;# 
  3205  088F                     	;# 
  3206  0890                     	;# 
  3207  0891                     	;# 
  3208  0892                     	;# 
  3209  0893                     	;# 
  3210  0895                     	;# 
  3211  0896                     	;# 
  3212  0897                     	;# 
  3213  0898                     	;# 
  3214  0899                     	;# 
  3215  089A                     	;# 
  3216  089B                     	;# 
  3217  090C                     	;# 
  3218  090E                     	;# 
  3219  090F                     	;# 
  3220  091F                     	;# 
  3221  091F                     	;# 
  3222  098F                     	;# 
  3223  098F                     	;# 
  3224  0990                     	;# 
  3225  0991                     	;# 
  3226  0992                     	;# 
  3227  0993                     	;# 
  3228  0994                     	;# 
  3229  0995                     	;# 
  3230  0996                     	;# 
  3231  0997                     	;# 
  3232  0E0F                     	;# 
  3233  0E10                     	;# 
  3234  0E11                     	;# 
  3235  0E12                     	;# 
  3236  0E13                     	;# 
  3237  0E14                     	;# 
  3238  0E15                     	;# 
  3239  0E16                     	;# 
  3240  0E17                     	;# 
  3241  0E18                     	;# 
  3242  0E19                     	;# 
  3243  0E1A                     	;# 
  3244  0E1B                     	;# 
  3245  0E1C                     	;# 
  3246  0E1D                     	;# 
  3247  0E1E                     	;# 
  3248  0E1F                     	;# 
  3249  0E20                     	;# 
  3250  0E21                     	;# 
  3251  0E22                     	;# 
  3252  0E23                     	;# 
  3253  0E24                     	;# 
  3254  0E25                     	;# 
  3255  0E26                     	;# 
  3256  0E27                     	;# 
  3257  0E28                     	;# 
  3258  0E29                     	;# 
  3259  0E2A                     	;# 
  3260  0E2B                     	;# 
  3261  0E2C                     	;# 
  3262  0E2D                     	;# 
  3263  0E2E                     	;# 
  3264  0E2F                     	;# 
  3265  0E30                     	;# 
  3266  0E31                     	;# 
  3267  0E32                     	;# 
  3268  0E33                     	;# 
  3269  0E34                     	;# 
  3270  0E35                     	;# 
  3271  0E36                     	;# 
  3272  0E37                     	;# 
  3273  0E8F                     	;# 
  3274  0E90                     	;# 
  3275  0E91                     	;# 
  3276  0E92                     	;# 
  3277  0E93                     	;# 
  3278  0E94                     	;# 
  3279  0E95                     	;# 
  3280  0E96                     	;# 
  3281  0E97                     	;# 
  3282  0E9C                     	;# 
  3283  0E9D                     	;# 
  3284  0E9E                     	;# 
  3285  0EA1                     	;# 
  3286  0EA2                     	;# 
  3287  0EA3                     	;# 
  3288  0EA4                     	;# 
  3289  0EA5                     	;# 
  3290  0EA9                     	;# 
  3291  0EAA                     	;# 
  3292  0EAB                     	;# 
  3293  0EAC                     	;# 
  3294  0EB1                     	;# 
  3295  0EB2                     	;# 
  3296  0EB3                     	;# 
  3297  0EB8                     	;# 
  3298  0EB9                     	;# 
  3299  0EBA                     	;# 
  3300  0EBB                     	;# 
  3301  0EBC                     	;# 
  3302  0EBD                     	;# 
  3303  0EBE                     	;# 
  3304  0EC3                     	;# 
  3305  0EC5                     	;# 
  3306  0EC6                     	;# 
  3307  0EC7                     	;# 
  3308  0EC8                     	;# 
  3309  0EC9                     	;# 
  3310  0ECA                     	;# 
  3311  0ECB                     	;# 
  3312  0ECC                     	;# 
  3313  0F10                     	;# 
  3314  0F11                     	;# 
  3315  0F12                     	;# 
  3316  0F13                     	;# 
  3317  0F14                     	;# 
  3318  0F15                     	;# 
  3319  0F16                     	;# 
  3320  0F17                     	;# 
  3321  0F18                     	;# 
  3322  0F19                     	;# 
  3323  0F1A                     	;# 
  3324  0F1B                     	;# 
  3325  0F1C                     	;# 
  3326  0F1D                     	;# 
  3327  0F1E                     	;# 
  3328  0F1F                     	;# 
  3329  0F20                     	;# 
  3330  0F21                     	;# 
  3331  0F22                     	;# 
  3332  0F23                     	;# 
  3333  0F24                     	;# 
  3334  0F25                     	;# 
  3335  0F26                     	;# 
  3336  0F27                     	;# 
  3337  0F28                     	;# 
  3338  0F29                     	;# 
  3339  0F2A                     	;# 
  3340  0F2B                     	;# 
  3341  0F2C                     	;# 
  3342  0F2D                     	;# 
  3343  0F2E                     	;# 
  3344  0F2F                     	;# 
  3345  0F30                     	;# 
  3346  0F31                     	;# 
  3347  0F32                     	;# 
  3348  0F38                     	;# 
  3349  0F39                     	;# 
  3350  0F3A                     	;# 
  3351  0F3B                     	;# 
  3352  0F3C                     	;# 
  3353  0F3D                     	;# 
  3354  0F3E                     	;# 
  3355  0F3F                     	;# 
  3356  0F40                     	;# 
  3357  0F41                     	;# 
  3358  0F43                     	;# 
  3359  0F44                     	;# 
  3360  0F45                     	;# 
  3361  0F46                     	;# 
  3362  0F47                     	;# 
  3363  0F48                     	;# 
  3364  0F49                     	;# 
  3365  0F4A                     	;# 
  3366  0F4B                     	;# 
  3367  0F4C                     	;# 
  3368  0F4E                     	;# 
  3369  0F4F                     	;# 
  3370  0F50                     	;# 
  3371  0F51                     	;# 
  3372  0F52                     	;# 
  3373  0F53                     	;# 
  3374  0F54                     	;# 
  3375  0F55                     	;# 
  3376  0F56                     	;# 
  3377  0F57                     	;# 
  3378  0F59                     	;# 
  3379  0F5A                     	;# 
  3380  0F5B                     	;# 
  3381  0F5C                     	;# 
  3382  0F5D                     	;# 
  3383  0F61                     	;# 
  3384  0F62                     	;# 
  3385  0F64                     	;# 
  3386  0F65                     	;# 
  3387  0F66                     	;# 
  3388  0F67                     	;# 
  3389  0F68                     	;# 
  3390  0F69                     	;# 
  3391  0F6A                     	;# 
  3392  0F6B                     	;# 
  3393  0F6C                     	;# 
  3394  0F6D                     	;# 
  3395  0FE4                     	;# 
  3396  0FE5                     	;# 
  3397  0FE6                     	;# 
  3398  0FE7                     	;# 
  3399  0FE8                     	;# 
  3400  0FE9                     	;# 
  3401  0FEA                     	;# 
  3402  0FEB                     	;# 
  3403  0FED                     	;# 
  3404  0FEE                     	;# 
  3405  0FEF                     	;# 
  3406  0000                     	;# 
  3407  0001                     	;# 
  3408  0002                     	;# 
  3409  0003                     	;# 
  3410  0004                     	;# 
  3411  0005                     	;# 
  3412  0006                     	;# 
  3413  0007                     	;# 
  3414  0008                     	;# 
  3415  0009                     	;# 
  3416  000A                     	;# 
  3417  000B                     	;# 
  3418  000C                     	;# 
  3419  000D                     	;# 
  3420  000E                     	;# 
  3421  000F                     	;# 
  3422  0010                     	;# 
  3423  0011                     	;# 
  3424  0012                     	;# 
  3425  0013                     	;# 
  3426  0014                     	;# 
  3427  0015                     	;# 
  3428  0016                     	;# 
  3429  0017                     	;# 
  3430  0018                     	;# 
  3431  0019                     	;# 
  3432  001A                     	;# 
  3433  001C                     	;# 
  3434  001C                     	;# 
  3435  001D                     	;# 
  3436  001D                     	;# 
  3437  001E                     	;# 
  3438  001F                     	;# 
  3439  008C                     	;# 
  3440  008C                     	;# 
  3441  008D                     	;# 
  3442  008E                     	;# 
  3443  008E                     	;# 
  3444  008F                     	;# 
  3445  0090                     	;# 
  3446  0090                     	;# 
  3447  0091                     	;# 
  3448  0093                     	;# 
  3449  0094                     	;# 
  3450  0095                     	;# 
  3451  0096                     	;# 
  3452  0097                     	;# 
  3453  0098                     	;# 
  3454  0099                     	;# 
  3455  009A                     	;# 
  3456  009B                     	;# 
  3457  009C                     	;# 
  3458  009D                     	;# 
  3459  009E                     	;# 
  3460  010C                     	;# 
  3461  010D                     	;# 
  3462  010E                     	;# 
  3463  010E                     	;# 
  3464  010F                     	;# 
  3465  0110                     	;# 
  3466  0110                     	;# 
  3467  0111                     	;# 
  3468  0112                     	;# 
  3469  0112                     	;# 
  3470  0113                     	;# 
  3471  0114                     	;# 
  3472  0114                     	;# 
  3473  0115                     	;# 
  3474  0116                     	;# 
  3475  0116                     	;# 
  3476  0117                     	;# 
  3477  0119                     	;# 
  3478  0119                     	;# 
  3479  0119                     	;# 
  3480  011A                     	;# 
  3481  011A                     	;# 
  3482  011A                     	;# 
  3483  011B                     	;# 
  3484  011B                     	;# 
  3485  011B                     	;# 
  3486  011B                     	;# 
  3487  011B                     	;# 
  3488  011C                     	;# 
  3489  011C                     	;# 
  3490  011C                     	;# 
  3491  011D                     	;# 
  3492  011D                     	;# 
  3493  011D                     	;# 
  3494  011E                     	;# 
  3495  011E                     	;# 
  3496  011E                     	;# 
  3497  011F                     	;# 
  3498  011F                     	;# 
  3499  011F                     	;# 
  3500  011F                     	;# 
  3501  011F                     	;# 
  3502  018C                     	;# 
  3503  018D                     	;# 
  3504  018E                     	;# 
  3505  018F                     	;# 
  3506  0190                     	;# 
  3507  0191                     	;# 
  3508  0192                     	;# 
  3509  0196                     	;# 
  3510  0197                     	;# 
  3511  0198                     	;# 
  3512  0199                     	;# 
  3513  019A                     	;# 
  3514  019B                     	;# 
  3515  019C                     	;# 
  3516  020C                     	;# 
  3517  020C                     	;# 
  3518  020D                     	;# 
  3519  020E                     	;# 
  3520  020F                     	;# 
  3521  020F                     	;# 
  3522  0210                     	;# 
  3523  0210                     	;# 
  3524  0211                     	;# 
  3525  0211                     	;# 
  3526  0212                     	;# 
  3527  0212                     	;# 
  3528  0213                     	;# 
  3529  0214                     	;# 
  3530  0215                     	;# 
  3531  0215                     	;# 
  3532  0216                     	;# 
  3533  0216                     	;# 
  3534  0217                     	;# 
  3535  0217                     	;# 
  3536  0218                     	;# 
  3537  0218                     	;# 
  3538  0219                     	;# 
  3539  021A                     	;# 
  3540  021B                     	;# 
  3541  021B                     	;# 
  3542  021C                     	;# 
  3543  021C                     	;# 
  3544  021D                     	;# 
  3545  021D                     	;# 
  3546  021E                     	;# 
  3547  021F                     	;# 
  3548  028C                     	;# 
  3549  028C                     	;# 
  3550  028D                     	;# 
  3551  028D                     	;# 
  3552  028E                     	;# 
  3553  028F                     	;# 
  3554  0290                     	;# 
  3555  0290                     	;# 
  3556  0291                     	;# 
  3557  0292                     	;# 
  3558  0292                     	;# 
  3559  0293                     	;# 
  3560  0293                     	;# 
  3561  0294                     	;# 
  3562  0295                     	;# 
  3563  0296                     	;# 
  3564  0296                     	;# 
  3565  0297                     	;# 
  3566  0298                     	;# 
  3567  0298                     	;# 
  3568  0299                     	;# 
  3569  0299                     	;# 
  3570  029A                     	;# 
  3571  029B                     	;# 
  3572  029C                     	;# 
  3573  029C                     	;# 
  3574  029D                     	;# 
  3575  030C                     	;# 
  3576  030C                     	;# 
  3577  030D                     	;# 
  3578  030E                     	;# 
  3579  030F                     	;# 
  3580  0310                     	;# 
  3581  0310                     	;# 
  3582  0311                     	;# 
  3583  0312                     	;# 
  3584  0313                     	;# 
  3585  0314                     	;# 
  3586  0314                     	;# 
  3587  0315                     	;# 
  3588  0316                     	;# 
  3589  0317                     	;# 
  3590  0318                     	;# 
  3591  0318                     	;# 
  3592  0319                     	;# 
  3593  031A                     	;# 
  3594  031B                     	;# 
  3595  031C                     	;# 
  3596  031C                     	;# 
  3597  031D                     	;# 
  3598  031E                     	;# 
  3599  031F                     	;# 
  3600  038C                     	;# 
  3601  038C                     	;# 
  3602  038D                     	;# 
  3603  038E                     	;# 
  3604  0390                     	;# 
  3605  0390                     	;# 
  3606  0391                     	;# 
  3607  0392                     	;# 
  3608  040C                     	;# 
  3609  040D                     	;# 
  3610  040E                     	;# 
  3611  040F                     	;# 
  3612  0410                     	;# 
  3613  0411                     	;# 
  3614  0416                     	;# 
  3615  0416                     	;# 
  3616  0417                     	;# 
  3617  0418                     	;# 
  3618  0418                     	;# 
  3619  0419                     	;# 
  3620  041A                     	;# 
  3621  041A                     	;# 
  3622  041B                     	;# 
  3623  041C                     	;# 
  3624  041C                     	;# 
  3625  041D                     	;# 
  3626  041E                     	;# 
  3627  041F                     	;# 
  3628  048C                     	;# 
  3629  048C                     	;# 
  3630  048D                     	;# 
  3631  048E                     	;# 
  3632  048F                     	;# 
  3633  048F                     	;# 
  3634  0490                     	;# 
  3635  0491                     	;# 
  3636  0492                     	;# 
  3637  0492                     	;# 
  3638  0493                     	;# 
  3639  0494                     	;# 
  3640  0495                     	;# 
  3641  0495                     	;# 
  3642  0496                     	;# 
  3643  0497                     	;# 
  3644  0498                     	;# 
  3645  0499                     	;# 
  3646  049A                     	;# 
  3647  049B                     	;# 
  3648  049C                     	;# 
  3649  049D                     	;# 
  3650  050C                     	;# 
  3651  050C                     	;# 
  3652  050D                     	;# 
  3653  050E                     	;# 
  3654  050F                     	;# 
  3655  050F                     	;# 
  3656  0510                     	;# 
  3657  0511                     	;# 
  3658  0512                     	;# 
  3659  0512                     	;# 
  3660  0513                     	;# 
  3661  0514                     	;# 
  3662  0515                     	;# 
  3663  0515                     	;# 
  3664  0516                     	;# 
  3665  0517                     	;# 
  3666  0518                     	;# 
  3667  0519                     	;# 
  3668  051A                     	;# 
  3669  051B                     	;# 
  3670  051C                     	;# 
  3671  051D                     	;# 
  3672  058C                     	;# 
  3673  058C                     	;# 
  3674  058D                     	;# 
  3675  058E                     	;# 
  3676  058F                     	;# 
  3677  058F                     	;# 
  3678  0590                     	;# 
  3679  0591                     	;# 
  3680  0592                     	;# 
  3681  0593                     	;# 
  3682  060C                     	;# 
  3683  060D                     	;# 
  3684  060E                     	;# 
  3685  060F                     	;# 
  3686  0610                     	;# 
  3687  0611                     	;# 
  3688  0612                     	;# 
  3689  0613                     	;# 
  3690  0614                     	;# 
  3691  0616                     	;# 
  3692  0617                     	;# 
  3693  0618                     	;# 
  3694  0619                     	;# 
  3695  061A                     	;# 
  3696  061B                     	;# 
  3697  061C                     	;# 
  3698  061D                     	;# 
  3699  061E                     	;# 
  3700  068C                     	;# 
  3701  068D                     	;# 
  3702  068E                     	;# 
  3703  068F                     	;# 
  3704  0690                     	;# 
  3705  0691                     	;# 
  3706  0692                     	;# 
  3707  0693                     	;# 
  3708  0694                     	;# 
  3709  070C                     	;# 
  3710  070D                     	;# 
  3711  070E                     	;# 
  3712  070F                     	;# 
  3713  0710                     	;# 
  3714  0711                     	;# 
  3715  0712                     	;# 
  3716  0713                     	;# 
  3717  0714                     	;# 
  3718  0716                     	;# 
  3719  0717                     	;# 
  3720  0718                     	;# 
  3721  0719                     	;# 
  3722  071A                     	;# 
  3723  071B                     	;# 
  3724  071C                     	;# 
  3725  071D                     	;# 
  3726  071E                     	;# 
  3727  0796                     	;# 
  3728  0797                     	;# 
  3729  0798                     	;# 
  3730  0799                     	;# 
  3731  079A                     	;# 
  3732  079B                     	;# 
  3733  080C                     	;# 
  3734  080D                     	;# 
  3735  080E                     	;# 
  3736  080F                     	;# 
  3737  0810                     	;# 
  3738  0811                     	;# 
  3739  0812                     	;# 
  3740  0813                     	;# 
  3741  0814                     	;# 
  3742  081A                     	;# 
  3743  081B                     	;# 
  3744  081C                     	;# 
  3745  081D                     	;# 
  3746  081E                     	;# 
  3747  081F                     	;# 
  3748  088C                     	;# 
  3749  088D                     	;# 
  3750  088E                     	;# 
  3751  088F                     	;# 
  3752  0890                     	;# 
  3753  0891                     	;# 
  3754  0892                     	;# 
  3755  0893                     	;# 
  3756  0895                     	;# 
  3757  0896                     	;# 
  3758  0897                     	;# 
  3759  0898                     	;# 
  3760  0899                     	;# 
  3761  089A                     	;# 
  3762  089B                     	;# 
  3763  090C                     	;# 
  3764  090E                     	;# 
  3765  090F                     	;# 
  3766  091F                     	;# 
  3767  091F                     	;# 
  3768  098F                     	;# 
  3769  098F                     	;# 
  3770  0990                     	;# 
  3771  0991                     	;# 
  3772  0992                     	;# 
  3773  0993                     	;# 
  3774  0994                     	;# 
  3775  0995                     	;# 
  3776  0996                     	;# 
  3777  0997                     	;# 
  3778  0E0F                     	;# 
  3779  0E10                     	;# 
  3780  0E11                     	;# 
  3781  0E12                     	;# 
  3782  0E13                     	;# 
  3783  0E14                     	;# 
  3784  0E15                     	;# 
  3785  0E16                     	;# 
  3786  0E17                     	;# 
  3787  0E18                     	;# 
  3788  0E19                     	;# 
  3789  0E1A                     	;# 
  3790  0E1B                     	;# 
  3791  0E1C                     	;# 
  3792  0E1D                     	;# 
  3793  0E1E                     	;# 
  3794  0E1F                     	;# 
  3795  0E20                     	;# 
  3796  0E21                     	;# 
  3797  0E22                     	;# 
  3798  0E23                     	;# 
  3799  0E24                     	;# 
  3800  0E25                     	;# 
  3801  0E26                     	;# 
  3802  0E27                     	;# 
  3803  0E28                     	;# 
  3804  0E29                     	;# 
  3805  0E2A                     	;# 
  3806  0E2B                     	;# 
  3807  0E2C                     	;# 
  3808  0E2D                     	;# 
  3809  0E2E                     	;# 
  3810  0E2F                     	;# 
  3811  0E30                     	;# 
  3812  0E31                     	;# 
  3813  0E32                     	;# 
  3814  0E33                     	;# 
  3815  0E34                     	;# 
  3816  0E35                     	;# 
  3817  0E36                     	;# 
  3818  0E37                     	;# 
  3819  0E8F                     	;# 
  3820  0E90                     	;# 
  3821  0E91                     	;# 
  3822  0E92                     	;# 
  3823  0E93                     	;# 
  3824  0E94                     	;# 
  3825  0E95                     	;# 
  3826  0E96                     	;# 
  3827  0E97                     	;# 
  3828  0E9C                     	;# 
  3829  0E9D                     	;# 
  3830  0E9E                     	;# 
  3831  0EA1                     	;# 
  3832  0EA2                     	;# 
  3833  0EA3                     	;# 
  3834  0EA4                     	;# 
  3835  0EA5                     	;# 
  3836  0EA9                     	;# 
  3837  0EAA                     	;# 
  3838  0EAB                     	;# 
  3839  0EAC                     	;# 
  3840  0EB1                     	;# 
  3841  0EB2                     	;# 
  3842  0EB3                     	;# 
  3843  0EB8                     	;# 
  3844  0EB9                     	;# 
  3845  0EBA                     	;# 
  3846  0EBB                     	;# 
  3847  0EBC                     	;# 
  3848  0EBD                     	;# 
  3849  0EBE                     	;# 
  3850  0EC3                     	;# 
  3851  0EC5                     	;# 
  3852  0EC6                     	;# 
  3853  0EC7                     	;# 
  3854  0EC8                     	;# 
  3855  0EC9                     	;# 
  3856  0ECA                     	;# 
  3857  0ECB                     	;# 
  3858  0ECC                     	;# 
  3859  0F10                     	;# 
  3860  0F11                     	;# 
  3861  0F12                     	;# 
  3862  0F13                     	;# 
  3863  0F14                     	;# 
  3864  0F15                     	;# 
  3865  0F16                     	;# 
  3866  0F17                     	;# 
  3867  0F18                     	;# 
  3868  0F19                     	;# 
  3869  0F1A                     	;# 
  3870  0F1B                     	;# 
  3871  0F1C                     	;# 
  3872  0F1D                     	;# 
  3873  0F1E                     	;# 
  3874  0F1F                     	;# 
  3875  0F20                     	;# 
  3876  0F21                     	;# 
  3877  0F22                     	;# 
  3878  0F23                     	;# 
  3879  0F24                     	;# 
  3880  0F25                     	;# 
  3881  0F26                     	;# 
  3882  0F27                     	;# 
  3883  0F28                     	;# 
  3884  0F29                     	;# 
  3885  0F2A                     	;# 
  3886  0F2B                     	;# 
  3887  0F2C                     	;# 
  3888  0F2D                     	;# 
  3889  0F2E                     	;# 
  3890  0F2F                     	;# 
  3891  0F30                     	;# 
  3892  0F31                     	;# 
  3893  0F32                     	;# 
  3894  0F38                     	;# 
  3895  0F39                     	;# 
  3896  0F3A                     	;# 
  3897  0F3B                     	;# 
  3898  0F3C                     	;# 
  3899  0F3D                     	;# 
  3900  0F3E                     	;# 
  3901  0F3F                     	;# 
  3902  0F40                     	;# 
  3903  0F41                     	;# 
  3904  0F43                     	;# 
  3905  0F44                     	;# 
  3906  0F45                     	;# 
  3907  0F46                     	;# 
  3908  0F47                     	;# 
  3909  0F48                     	;# 
  3910  0F49                     	;# 
  3911  0F4A                     	;# 
  3912  0F4B                     	;# 
  3913  0F4C                     	;# 
  3914  0F4E                     	;# 
  3915  0F4F                     	;# 
  3916  0F50                     	;# 
  3917  0F51                     	;# 
  3918  0F52                     	;# 
  3919  0F53                     	;# 
  3920  0F54                     	;# 
  3921  0F55                     	;# 
  3922  0F56                     	;# 
  3923  0F57                     	;# 
  3924  0F59                     	;# 
  3925  0F5A                     	;# 
  3926  0F5B                     	;# 
  3927  0F5C                     	;# 
  3928  0F5D                     	;# 
  3929  0F61                     	;# 
  3930  0F62                     	;# 
  3931  0F64                     	;# 
  3932  0F65                     	;# 
  3933  0F66                     	;# 
  3934  0F67                     	;# 
  3935  0F68                     	;# 
  3936  0F69                     	;# 
  3937  0F6A                     	;# 
  3938  0F6B                     	;# 
  3939  0F6C                     	;# 
  3940  0F6D                     	;# 
  3941  0FE4                     	;# 
  3942  0FE5                     	;# 
  3943  0FE6                     	;# 
  3944  0FE7                     	;# 
  3945  0FE8                     	;# 
  3946  0FE9                     	;# 
  3947  0FEA                     	;# 
  3948  0FEB                     	;# 
  3949  0FED                     	;# 
  3950  0FEE                     	;# 
  3951  0FEF                     	;# 
  3952  0000                     	;# 
  3953  0001                     	;# 
  3954  0002                     	;# 
  3955  0003                     	;# 
  3956  0004                     	;# 
  3957  0005                     	;# 
  3958  0006                     	;# 
  3959  0007                     	;# 
  3960  0008                     	;# 
  3961  0009                     	;# 
  3962  000A                     	;# 
  3963  000B                     	;# 
  3964  000C                     	;# 
  3965  000D                     	;# 
  3966  000E                     	;# 
  3967  000F                     	;# 
  3968  0010                     	;# 
  3969  0011                     	;# 
  3970  0012                     	;# 
  3971  0013                     	;# 
  3972  0014                     	;# 
  3973  0015                     	;# 
  3974  0016                     	;# 
  3975  0017                     	;# 
  3976  0018                     	;# 
  3977  0019                     	;# 
  3978  001A                     	;# 
  3979  001C                     	;# 
  3980  001C                     	;# 
  3981  001D                     	;# 
  3982  001D                     	;# 
  3983  001E                     	;# 
  3984  001F                     	;# 
  3985  008C                     	;# 
  3986  008C                     	;# 
  3987  008D                     	;# 
  3988  008E                     	;# 
  3989  008E                     	;# 
  3990  008F                     	;# 
  3991  0090                     	;# 
  3992  0090                     	;# 
  3993  0091                     	;# 
  3994  0093                     	;# 
  3995  0094                     	;# 
  3996  0095                     	;# 
  3997  0096                     	;# 
  3998  0097                     	;# 
  3999  0098                     	;# 
  4000  0099                     	;# 
  4001  009A                     	;# 
  4002  009B                     	;# 
  4003  009C                     	;# 
  4004  009D                     	;# 
  4005  009E                     	;# 
  4006  010C                     	;# 
  4007  010D                     	;# 
  4008  010E                     	;# 
  4009  010E                     	;# 
  4010  010F                     	;# 
  4011  0110                     	;# 
  4012  0110                     	;# 
  4013  0111                     	;# 
  4014  0112                     	;# 
  4015  0112                     	;# 
  4016  0113                     	;# 
  4017  0114                     	;# 
  4018  0114                     	;# 
  4019  0115                     	;# 
  4020  0116                     	;# 
  4021  0116                     	;# 
  4022  0117                     	;# 
  4023  0119                     	;# 
  4024  0119                     	;# 
  4025  0119                     	;# 
  4026  011A                     	;# 
  4027  011A                     	;# 
  4028  011A                     	;# 
  4029  011B                     	;# 
  4030  011B                     	;# 
  4031  011B                     	;# 
  4032  011B                     	;# 
  4033  011B                     	;# 
  4034  011C                     	;# 
  4035  011C                     	;# 
  4036  011C                     	;# 
  4037  011D                     	;# 
  4038  011D                     	;# 
  4039  011D                     	;# 
  4040  011E                     	;# 
  4041  011E                     	;# 
  4042  011E                     	;# 
  4043  011F                     	;# 
  4044  011F                     	;# 
  4045  011F                     	;# 
  4046  011F                     	;# 
  4047  011F                     	;# 
  4048  018C                     	;# 
  4049  018D                     	;# 
  4050  018E                     	;# 
  4051  018F                     	;# 
  4052  0190                     	;# 
  4053  0191                     	;# 
  4054  0192                     	;# 
  4055  0196                     	;# 
  4056  0197                     	;# 
  4057  0198                     	;# 
  4058  0199                     	;# 
  4059  019A                     	;# 
  4060  019B                     	;# 
  4061  019C                     	;# 
  4062  020C                     	;# 
  4063  020C                     	;# 
  4064  020D                     	;# 
  4065  020E                     	;# 
  4066  020F                     	;# 
  4067  020F                     	;# 
  4068  0210                     	;# 
  4069  0210                     	;# 
  4070  0211                     	;# 
  4071  0211                     	;# 
  4072  0212                     	;# 
  4073  0212                     	;# 
  4074  0213                     	;# 
  4075  0214                     	;# 
  4076  0215                     	;# 
  4077  0215                     	;# 
  4078  0216                     	;# 
  4079  0216                     	;# 
  4080  0217                     	;# 
  4081  0217                     	;# 
  4082  0218                     	;# 
  4083  0218                     	;# 
  4084  0219                     	;# 
  4085  021A                     	;# 
  4086  021B                     	;# 
  4087  021B                     	;# 
  4088  021C                     	;# 
  4089  021C                     	;# 
  4090  021D                     	;# 
  4091  021D                     	;# 
  4092  021E                     	;# 
  4093  021F                     	;# 
  4094  028C                     	;# 
  4095  028C                     	;# 
  4096  028D                     	;# 
  4097  028D                     	;# 
  4098  028E                     	;# 
  4099  028F                     	;# 
  4100  0290                     	;# 
  4101  0290                     	;# 
  4102  0291                     	;# 
  4103  0292                     	;# 
  4104  0292                     	;# 
  4105  0293                     	;# 
  4106  0293                     	;# 
  4107  0294                     	;# 
  4108  0295                     	;# 
  4109  0296                     	;# 
  4110  0296                     	;# 
  4111  0297                     	;# 
  4112  0298                     	;# 
  4113  0298                     	;# 
  4114  0299                     	;# 
  4115  0299                     	;# 
  4116  029A                     	;# 
  4117  029B                     	;# 
  4118  029C                     	;# 
  4119  029C                     	;# 
  4120  029D                     	;# 
  4121  030C                     	;# 
  4122  030C                     	;# 
  4123  030D                     	;# 
  4124  030E                     	;# 
  4125  030F                     	;# 
  4126  0310                     	;# 
  4127  0310                     	;# 
  4128  0311                     	;# 
  4129  0312                     	;# 
  4130  0313                     	;# 
  4131  0314                     	;# 
  4132  0314                     	;# 
  4133  0315                     	;# 
  4134  0316                     	;# 
  4135  0317                     	;# 
  4136  0318                     	;# 
  4137  0318                     	;# 
  4138  0319                     	;# 
  4139  031A                     	;# 
  4140  031B                     	;# 
  4141  031C                     	;# 
  4142  031C                     	;# 
  4143  031D                     	;# 
  4144  031E                     	;# 
  4145  031F                     	;# 
  4146  038C                     	;# 
  4147  038C                     	;# 
  4148  038D                     	;# 
  4149  038E                     	;# 
  4150  0390                     	;# 
  4151  0390                     	;# 
  4152  0391                     	;# 
  4153  0392                     	;# 
  4154  040C                     	;# 
  4155  040D                     	;# 
  4156  040E                     	;# 
  4157  040F                     	;# 
  4158  0410                     	;# 
  4159  0411                     	;# 
  4160  0416                     	;# 
  4161  0416                     	;# 
  4162  0417                     	;# 
  4163  0418                     	;# 
  4164  0418                     	;# 
  4165  0419                     	;# 
  4166  041A                     	;# 
  4167  041A                     	;# 
  4168  041B                     	;# 
  4169  041C                     	;# 
  4170  041C                     	;# 
  4171  041D                     	;# 
  4172  041E                     	;# 
  4173  041F                     	;# 
  4174  048C                     	;# 
  4175  048C                     	;# 
  4176  048D                     	;# 
  4177  048E                     	;# 
  4178  048F                     	;# 
  4179  048F                     	;# 
  4180  0490                     	;# 
  4181  0491                     	;# 
  4182  0492                     	;# 
  4183  0492                     	;# 
  4184  0493                     	;# 
  4185  0494                     	;# 
  4186  0495                     	;# 
  4187  0495                     	;# 
  4188  0496                     	;# 
  4189  0497                     	;# 
  4190  0498                     	;# 
  4191  0499                     	;# 
  4192  049A                     	;# 
  4193  049B                     	;# 
  4194  049C                     	;# 
  4195  049D                     	;# 
  4196  050C                     	;# 
  4197  050C                     	;# 
  4198  050D                     	;# 
  4199  050E                     	;# 
  4200  050F                     	;# 
  4201  050F                     	;# 
  4202  0510                     	;# 
  4203  0511                     	;# 
  4204  0512                     	;# 
  4205  0512                     	;# 
  4206  0513                     	;# 
  4207  0514                     	;# 
  4208  0515                     	;# 
  4209  0515                     	;# 
  4210  0516                     	;# 
  4211  0517                     	;# 
  4212  0518                     	;# 
  4213  0519                     	;# 
  4214  051A                     	;# 
  4215  051B                     	;# 
  4216  051C                     	;# 
  4217  051D                     	;# 
  4218  058C                     	;# 
  4219  058C                     	;# 
  4220  058D                     	;# 
  4221  058E                     	;# 
  4222  058F                     	;# 
  4223  058F                     	;# 
  4224  0590                     	;# 
  4225  0591                     	;# 
  4226  0592                     	;# 
  4227  0593                     	;# 
  4228  060C                     	;# 
  4229  060D                     	;# 
  4230  060E                     	;# 
  4231  060F                     	;# 
  4232  0610                     	;# 
  4233  0611                     	;# 
  4234  0612                     	;# 
  4235  0613                     	;# 
  4236  0614                     	;# 
  4237  0616                     	;# 
  4238  0617                     	;# 
  4239  0618                     	;# 
  4240  0619                     	;# 
  4241  061A                     	;# 
  4242  061B                     	;# 
  4243  061C                     	;# 
  4244  061D                     	;# 
  4245  061E                     	;# 
  4246  068C                     	;# 
  4247  068D                     	;# 
  4248  068E                     	;# 
  4249  068F                     	;# 
  4250  0690                     	;# 
  4251  0691                     	;# 
  4252  0692                     	;# 
  4253  0693                     	;# 
  4254  0694                     	;# 
  4255  070C                     	;# 
  4256  070D                     	;# 
  4257  070E                     	;# 
  4258  070F                     	;# 
  4259  0710                     	;# 
  4260  0711                     	;# 
  4261  0712                     	;# 
  4262  0713                     	;# 
  4263  0714                     	;# 
  4264  0716                     	;# 
  4265  0717                     	;# 
  4266  0718                     	;# 
  4267  0719                     	;# 
  4268  071A                     	;# 
  4269  071B                     	;# 
  4270  071C                     	;# 
  4271  071D                     	;# 
  4272  071E                     	;# 
  4273  0796                     	;# 
  4274  0797                     	;# 
  4275  0798                     	;# 
  4276  0799                     	;# 
  4277  079A                     	;# 
  4278  079B                     	;# 
  4279  080C                     	;# 
  4280  080D                     	;# 
  4281  080E                     	;# 
  4282  080F                     	;# 
  4283  0810                     	;# 
  4284  0811                     	;# 
  4285  0812                     	;# 
  4286  0813                     	;# 
  4287  0814                     	;# 
  4288  081A                     	;# 
  4289  081B                     	;# 
  4290  081C                     	;# 
  4291  081D                     	;# 
  4292  081E                     	;# 
  4293  081F                     	;# 
  4294  088C                     	;# 
  4295  088D                     	;# 
  4296  088E                     	;# 
  4297  088F                     	;# 
  4298  0890                     	;# 
  4299  0891                     	;# 
  4300  0892                     	;# 
  4301  0893                     	;# 
  4302  0895                     	;# 
  4303  0896                     	;# 
  4304  0897                     	;# 
  4305  0898                     	;# 
  4306  0899                     	;# 
  4307  089A                     	;# 
  4308  089B                     	;# 
  4309  090C                     	;# 
  4310  090E                     	;# 
  4311  090F                     	;# 
  4312  091F                     	;# 
  4313  091F                     	;# 
  4314  098F                     	;# 
  4315  098F                     	;# 
  4316  0990                     	;# 
  4317  0991                     	;# 
  4318  0992                     	;# 
  4319  0993                     	;# 
  4320  0994                     	;# 
  4321  0995                     	;# 
  4322  0996                     	;# 
  4323  0997                     	;# 
  4324  0E0F                     	;# 
  4325  0E10                     	;# 
  4326  0E11                     	;# 
  4327  0E12                     	;# 
  4328  0E13                     	;# 
  4329  0E14                     	;# 
  4330  0E15                     	;# 
  4331  0E16                     	;# 
  4332  0E17                     	;# 
  4333  0E18                     	;# 
  4334  0E19                     	;# 
  4335  0E1A                     	;# 
  4336  0E1B                     	;# 
  4337  0E1C                     	;# 
  4338  0E1D                     	;# 
  4339  0E1E                     	;# 
  4340  0E1F                     	;# 
  4341  0E20                     	;# 
  4342  0E21                     	;# 
  4343  0E22                     	;# 
  4344  0E23                     	;# 
  4345  0E24                     	;# 
  4346  0E25                     	;# 
  4347  0E26                     	;# 
  4348  0E27                     	;# 
  4349  0E28                     	;# 
  4350  0E29                     	;# 
  4351  0E2A                     	;# 
  4352  0E2B                     	;# 
  4353  0E2C                     	;# 
  4354  0E2D                     	;# 
  4355  0E2E                     	;# 
  4356  0E2F                     	;# 
  4357  0E30                     	;# 
  4358  0E31                     	;# 
  4359  0E32                     	;# 
  4360  0E33                     	;# 
  4361  0E34                     	;# 
  4362  0E35                     	;# 
  4363  0E36                     	;# 
  4364  0E37                     	;# 
  4365  0E8F                     	;# 
  4366  0E90                     	;# 
  4367  0E91                     	;# 
  4368  0E92                     	;# 
  4369  0E93                     	;# 
  4370  0E94                     	;# 
  4371  0E95                     	;# 
  4372  0E96                     	;# 
  4373  0E97                     	;# 
  4374  0E9C                     	;# 
  4375  0E9D                     	;# 
  4376  0E9E                     	;# 
  4377  0EA1                     	;# 
  4378  0EA2                     	;# 
  4379  0EA3                     	;# 
  4380  0EA4                     	;# 
  4381  0EA5                     	;# 
  4382  0EA9                     	;# 
  4383  0EAA                     	;# 
  4384  0EAB                     	;# 
  4385  0EAC                     	;# 
  4386  0EB1                     	;# 
  4387  0EB2                     	;# 
  4388  0EB3                     	;# 
  4389  0EB8                     	;# 
  4390  0EB9                     	;# 
  4391  0EBA                     	;# 
  4392  0EBB                     	;# 
  4393  0EBC                     	;# 
  4394  0EBD                     	;# 
  4395  0EBE                     	;# 
  4396  0EC3                     	;# 
  4397  0EC5                     	;# 
  4398  0EC6                     	;# 
  4399  0EC7                     	;# 
  4400  0EC8                     	;# 
  4401  0EC9                     	;# 
  4402  0ECA                     	;# 
  4403  0ECB                     	;# 
  4404  0ECC                     	;# 
  4405  0F10                     	;# 
  4406  0F11                     	;# 
  4407  0F12                     	;# 
  4408  0F13                     	;# 
  4409  0F14                     	;# 
  4410  0F15                     	;# 
  4411  0F16                     	;# 
  4412  0F17                     	;# 
  4413  0F18                     	;# 
  4414  0F19                     	;# 
  4415  0F1A                     	;# 
  4416  0F1B                     	;# 
  4417  0F1C                     	;# 
  4418  0F1D                     	;# 
  4419  0F1E                     	;# 
  4420  0F1F                     	;# 
  4421  0F20                     	;# 
  4422  0F21                     	;# 
  4423  0F22                     	;# 
  4424  0F23                     	;# 
  4425  0F24                     	;# 
  4426  0F25                     	;# 
  4427  0F26                     	;# 
  4428  0F27                     	;# 
  4429  0F28                     	;# 
  4430  0F29                     	;# 
  4431  0F2A                     	;# 
  4432  0F2B                     	;# 
  4433  0F2C                     	;# 
  4434  0F2D                     	;# 
  4435  0F2E                     	;# 
  4436  0F2F                     	;# 
  4437  0F30                     	;# 
  4438  0F31                     	;# 
  4439  0F32                     	;# 
  4440  0F38                     	;# 
  4441  0F39                     	;# 
  4442  0F3A                     	;# 
  4443  0F3B                     	;# 
  4444  0F3C                     	;# 
  4445  0F3D                     	;# 
  4446  0F3E                     	;# 
  4447  0F3F                     	;# 
  4448  0F40                     	;# 
  4449  0F41                     	;# 
  4450  0F43                     	;# 
  4451  0F44                     	;# 
  4452  0F45                     	;# 
  4453  0F46                     	;# 
  4454  0F47                     	;# 
  4455  0F48                     	;# 
  4456  0F49                     	;# 
  4457  0F4A                     	;# 
  4458  0F4B                     	;# 
  4459  0F4C                     	;# 
  4460  0F4E                     	;# 
  4461  0F4F                     	;# 
  4462  0F50                     	;# 
  4463  0F51                     	;# 
  4464  0F52                     	;# 
  4465  0F53                     	;# 
  4466  0F54                     	;# 
  4467  0F55                     	;# 
  4468  0F56                     	;# 
  4469  0F57                     	;# 
  4470  0F59                     	;# 
  4471  0F5A                     	;# 
  4472  0F5B                     	;# 
  4473  0F5C                     	;# 
  4474  0F5D                     	;# 
  4475  0F61                     	;# 
  4476  0F62                     	;# 
  4477  0F64                     	;# 
  4478  0F65                     	;# 
  4479  0F66                     	;# 
  4480  0F67                     	;# 
  4481  0F68                     	;# 
  4482  0F69                     	;# 
  4483  0F6A                     	;# 
  4484  0F6B                     	;# 
  4485  0F6C                     	;# 
  4486  0F6D                     	;# 
  4487  0FE4                     	;# 
  4488  0FE5                     	;# 
  4489  0FE6                     	;# 
  4490  0FE7                     	;# 
  4491  0FE8                     	;# 
  4492  0FE9                     	;# 
  4493  0FEA                     	;# 
  4494  0FEB                     	;# 
  4495  0FED                     	;# 
  4496  0FEE                     	;# 
  4497  0FEF                     	;# 
  4498  0000                     	;# 
  4499  0001                     	;# 
  4500  0002                     	;# 
  4501  0003                     	;# 
  4502  0004                     	;# 
  4503  0005                     	;# 
  4504  0006                     	;# 
  4505  0007                     	;# 
  4506  0008                     	;# 
  4507  0009                     	;# 
  4508  000A                     	;# 
  4509  000B                     	;# 
  4510  000C                     	;# 
  4511  000D                     	;# 
  4512  000E                     	;# 
  4513  000F                     	;# 
  4514  0010                     	;# 
  4515  0011                     	;# 
  4516  0012                     	;# 
  4517  0013                     	;# 
  4518  0014                     	;# 
  4519  0015                     	;# 
  4520  0016                     	;# 
  4521  0017                     	;# 
  4522  0018                     	;# 
  4523  0019                     	;# 
  4524  001A                     	;# 
  4525  001C                     	;# 
  4526  001C                     	;# 
  4527  001D                     	;# 
  4528  001D                     	;# 
  4529  001E                     	;# 
  4530  001F                     	;# 
  4531  008C                     	;# 
  4532  008C                     	;# 
  4533  008D                     	;# 
  4534  008E                     	;# 
  4535  008E                     	;# 
  4536  008F                     	;# 
  4537  0090                     	;# 
  4538  0090                     	;# 
  4539  0091                     	;# 
  4540  0093                     	;# 
  4541  0094                     	;# 
  4542  0095                     	;# 
  4543  0096                     	;# 
  4544  0097                     	;# 
  4545  0098                     	;# 
  4546  0099                     	;# 
  4547  009A                     	;# 
  4548  009B                     	;# 
  4549  009C                     	;# 
  4550  009D                     	;# 
  4551  009E                     	;# 
  4552  010C                     	;# 
  4553  010D                     	;# 
  4554  010E                     	;# 
  4555  010E                     	;# 
  4556  010F                     	;# 
  4557  0110                     	;# 
  4558  0110                     	;# 
  4559  0111                     	;# 
  4560  0112                     	;# 
  4561  0112                     	;# 
  4562  0113                     	;# 
  4563  0114                     	;# 
  4564  0114                     	;# 
  4565  0115                     	;# 
  4566  0116                     	;# 
  4567  0116                     	;# 
  4568  0117                     	;# 
  4569  0119                     	;# 
  4570  0119                     	;# 
  4571  0119                     	;# 
  4572  011A                     	;# 
  4573  011A                     	;# 
  4574  011A                     	;# 
  4575  011B                     	;# 
  4576  011B                     	;# 
  4577  011B                     	;# 
  4578  011B                     	;# 
  4579  011B                     	;# 
  4580  011C                     	;# 
  4581  011C                     	;# 
  4582  011C                     	;# 
  4583  011D                     	;# 
  4584  011D                     	;# 
  4585  011D                     	;# 
  4586  011E                     	;# 
  4587  011E                     	;# 
  4588  011E                     	;# 
  4589  011F                     	;# 
  4590  011F                     	;# 
  4591  011F                     	;# 
  4592  011F                     	;# 
  4593  011F                     	;# 
  4594  018C                     	;# 
  4595  018D                     	;# 
  4596  018E                     	;# 
  4597  018F                     	;# 
  4598  0190                     	;# 
  4599  0191                     	;# 
  4600  0192                     	;# 
  4601  0196                     	;# 
  4602  0197                     	;# 
  4603  0198                     	;# 
  4604  0199                     	;# 
  4605  019A                     	;# 
  4606  019B                     	;# 
  4607  019C                     	;# 
  4608  020C                     	;# 
  4609  020C                     	;# 
  4610  020D                     	;# 
  4611  020E                     	;# 
  4612  020F                     	;# 
  4613  020F                     	;# 
  4614  0210                     	;# 
  4615  0210                     	;# 
  4616  0211                     	;# 
  4617  0211                     	;# 
  4618  0212                     	;# 
  4619  0212                     	;# 
  4620  0213                     	;# 
  4621  0214                     	;# 
  4622  0215                     	;# 
  4623  0215                     	;# 
  4624  0216                     	;# 
  4625  0216                     	;# 
  4626  0217                     	;# 
  4627  0217                     	;# 
  4628  0218                     	;# 
  4629  0218                     	;# 
  4630  0219                     	;# 
  4631  021A                     	;# 
  4632  021B                     	;# 
  4633  021B                     	;# 
  4634  021C                     	;# 
  4635  021C                     	;# 
  4636  021D                     	;# 
  4637  021D                     	;# 
  4638  021E                     	;# 
  4639  021F                     	;# 
  4640  028C                     	;# 
  4641  028C                     	;# 
  4642  028D                     	;# 
  4643  028D                     	;# 
  4644  028E                     	;# 
  4645  028F                     	;# 
  4646  0290                     	;# 
  4647  0290                     	;# 
  4648  0291                     	;# 
  4649  0292                     	;# 
  4650  0292                     	;# 
  4651  0293                     	;# 
  4652  0293                     	;# 
  4653  0294                     	;# 
  4654  0295                     	;# 
  4655  0296                     	;# 
  4656  0296                     	;# 
  4657  0297                     	;# 
  4658  0298                     	;# 
  4659  0298                     	;# 
  4660  0299                     	;# 
  4661  0299                     	;# 
  4662  029A                     	;# 
  4663  029B                     	;# 
  4664  029C                     	;# 
  4665  029C                     	;# 
  4666  029D                     	;# 
  4667  030C                     	;# 
  4668  030C                     	;# 
  4669  030D                     	;# 
  4670  030E                     	;# 
  4671  030F                     	;# 
  4672  0310                     	;# 
  4673  0310                     	;# 
  4674  0311                     	;# 
  4675  0312                     	;# 
  4676  0313                     	;# 
  4677  0314                     	;# 
  4678  0314                     	;# 
  4679  0315                     	;# 
  4680  0316                     	;# 
  4681  0317                     	;# 
  4682  0318                     	;# 
  4683  0318                     	;# 
  4684  0319                     	;# 
  4685  031A                     	;# 
  4686  031B                     	;# 
  4687  031C                     	;# 
  4688  031C                     	;# 
  4689  031D                     	;# 
  4690  031E                     	;# 
  4691  031F                     	;# 
  4692  038C                     	;# 
  4693  038C                     	;# 
  4694  038D                     	;# 
  4695  038E                     	;# 
  4696  0390                     	;# 
  4697  0390                     	;# 
  4698  0391                     	;# 
  4699  0392                     	;# 
  4700  040C                     	;# 
  4701  040D                     	;# 
  4702  040E                     	;# 
  4703  040F                     	;# 
  4704  0410                     	;# 
  4705  0411                     	;# 
  4706  0416                     	;# 
  4707  0416                     	;# 
  4708  0417                     	;# 
  4709  0418                     	;# 
  4710  0418                     	;# 
  4711  0419                     	;# 
  4712  041A                     	;# 
  4713  041A                     	;# 
  4714  041B                     	;# 
  4715  041C                     	;# 
  4716  041C                     	;# 
  4717  041D                     	;# 
  4718  041E                     	;# 
  4719  041F                     	;# 
  4720  048C                     	;# 
  4721  048C                     	;# 
  4722  048D                     	;# 
  4723  048E                     	;# 
  4724  048F                     	;# 
  4725  048F                     	;# 
  4726  0490                     	;# 
  4727  0491                     	;# 
  4728  0492                     	;# 
  4729  0492                     	;# 
  4730  0493                     	;# 
  4731  0494                     	;# 
  4732  0495                     	;# 
  4733  0495                     	;# 
  4734  0496                     	;# 
  4735  0497                     	;# 
  4736  0498                     	;# 
  4737  0499                     	;# 
  4738  049A                     	;# 
  4739  049B                     	;# 
  4740  049C                     	;# 
  4741  049D                     	;# 
  4742  050C                     	;# 
  4743  050C                     	;# 
  4744  050D                     	;# 
  4745  050E                     	;# 
  4746  050F                     	;# 
  4747  050F                     	;# 
  4748  0510                     	;# 
  4749  0511                     	;# 
  4750  0512                     	;# 
  4751  0512                     	;# 
  4752  0513                     	;# 
  4753  0514                     	;# 
  4754  0515                     	;# 
  4755  0515                     	;# 
  4756  0516                     	;# 
  4757  0517                     	;# 
  4758  0518                     	;# 
  4759  0519                     	;# 
  4760  051A                     	;# 
  4761  051B                     	;# 
  4762  051C                     	;# 
  4763  051D                     	;# 
  4764  058C                     	;# 
  4765  058C                     	;# 
  4766  058D                     	;# 
  4767  058E                     	;# 
  4768  058F                     	;# 
  4769  058F                     	;# 
  4770  0590                     	;# 
  4771  0591                     	;# 
  4772  0592                     	;# 
  4773  0593                     	;# 
  4774  060C                     	;# 
  4775  060D                     	;# 
  4776  060E                     	;# 
  4777  060F                     	;# 
  4778  0610                     	;# 
  4779  0611                     	;# 
  4780  0612                     	;# 
  4781  0613                     	;# 
  4782  0614                     	;# 
  4783  0616                     	;# 
  4784  0617                     	;# 
  4785  0618                     	;# 
  4786  0619                     	;# 
  4787  061A                     	;# 
  4788  061B                     	;# 
  4789  061C                     	;# 
  4790  061D                     	;# 
  4791  061E                     	;# 
  4792  068C                     	;# 
  4793  068D                     	;# 
  4794  068E                     	;# 
  4795  068F                     	;# 
  4796  0690                     	;# 
  4797  0691                     	;# 
  4798  0692                     	;# 
  4799  0693                     	;# 
  4800  0694                     	;# 
  4801  070C                     	;# 
  4802  070D                     	;# 
  4803  070E                     	;# 
  4804  070F                     	;# 
  4805  0710                     	;# 
  4806  0711                     	;# 
  4807  0712                     	;# 
  4808  0713                     	;# 
  4809  0714                     	;# 
  4810  0716                     	;# 
  4811  0717                     	;# 
  4812  0718                     	;# 
  4813  0719                     	;# 
  4814  071A                     	;# 
  4815  071B                     	;# 
  4816  071C                     	;# 
  4817  071D                     	;# 
  4818  071E                     	;# 
  4819  0796                     	;# 
  4820  0797                     	;# 
  4821  0798                     	;# 
  4822  0799                     	;# 
  4823  079A                     	;# 
  4824  079B                     	;# 
  4825  080C                     	;# 
  4826  080D                     	;# 
  4827  080E                     	;# 
  4828  080F                     	;# 
  4829  0810                     	;# 
  4830  0811                     	;# 
  4831  0812                     	;# 
  4832  0813                     	;# 
  4833  0814                     	;# 
  4834  081A                     	;# 
  4835  081B                     	;# 
  4836  081C                     	;# 
  4837  081D                     	;# 
  4838  081E                     	;# 
  4839  081F                     	;# 
  4840  088C                     	;# 
  4841  088D                     	;# 
  4842  088E                     	;# 
  4843  088F                     	;# 
  4844  0890                     	;# 
  4845  0891                     	;# 
  4846  0892                     	;# 
  4847  0893                     	;# 
  4848  0895                     	;# 
  4849  0896                     	;# 
  4850  0897                     	;# 
  4851  0898                     	;# 
  4852  0899                     	;# 
  4853  089A                     	;# 
  4854  089B                     	;# 
  4855  090C                     	;# 
  4856  090E                     	;# 
  4857  090F                     	;# 
  4858  091F                     	;# 
  4859  091F                     	;# 
  4860  098F                     	;# 
  4861  098F                     	;# 
  4862  0990                     	;# 
  4863  0991                     	;# 
  4864  0992                     	;# 
  4865  0993                     	;# 
  4866  0994                     	;# 
  4867  0995                     	;# 
  4868  0996                     	;# 
  4869  0997                     	;# 
  4870  0E0F                     	;# 
  4871  0E10                     	;# 
  4872  0E11                     	;# 
  4873  0E12                     	;# 
  4874  0E13                     	;# 
  4875  0E14                     	;# 
  4876  0E15                     	;# 
  4877  0E16                     	;# 
  4878  0E17                     	;# 
  4879  0E18                     	;# 
  4880  0E19                     	;# 
  4881  0E1A                     	;# 
  4882  0E1B                     	;# 
  4883  0E1C                     	;# 
  4884  0E1D                     	;# 
  4885  0E1E                     	;# 
  4886  0E1F                     	;# 
  4887  0E20                     	;# 
  4888  0E21                     	;# 
  4889  0E22                     	;# 
  4890  0E23                     	;# 
  4891  0E24                     	;# 
  4892  0E25                     	;# 
  4893  0E26                     	;# 
  4894  0E27                     	;# 
  4895  0E28                     	;# 
  4896  0E29                     	;# 
  4897  0E2A                     	;# 
  4898  0E2B                     	;# 
  4899  0E2C                     	;# 
  4900  0E2D                     	;# 
  4901  0E2E                     	;# 
  4902  0E2F                     	;# 
  4903  0E30                     	;# 
  4904  0E31                     	;# 
  4905  0E32                     	;# 
  4906  0E33                     	;# 
  4907  0E34                     	;# 
  4908  0E35                     	;# 
  4909  0E36                     	;# 
  4910  0E37                     	;# 
  4911  0E8F                     	;# 
  4912  0E90                     	;# 
  4913  0E91                     	;# 
  4914  0E92                     	;# 
  4915  0E93                     	;# 
  4916  0E94                     	;# 
  4917  0E95                     	;# 
  4918  0E96                     	;# 
  4919  0E97                     	;# 
  4920  0E9C                     	;# 
  4921  0E9D                     	;# 
  4922  0E9E                     	;# 
  4923  0EA1                     	;# 
  4924  0EA2                     	;# 
  4925  0EA3                     	;# 
  4926  0EA4                     	;# 
  4927  0EA5                     	;# 
  4928  0EA9                     	;# 
  4929  0EAA                     	;# 
  4930  0EAB                     	;# 
  4931  0EAC                     	;# 
  4932  0EB1                     	;# 
  4933  0EB2                     	;# 
  4934  0EB3                     	;# 
  4935  0EB8                     	;# 
  4936  0EB9                     	;# 
  4937  0EBA                     	;# 
  4938  0EBB                     	;# 
  4939  0EBC                     	;# 
  4940  0EBD                     	;# 
  4941  0EBE                     	;# 
  4942  0EC3                     	;# 
  4943  0EC5                     	;# 
  4944  0EC6                     	;# 
  4945  0EC7                     	;# 
  4946  0EC8                     	;# 
  4947  0EC9                     	;# 
  4948  0ECA                     	;# 
  4949  0ECB                     	;# 
  4950  0ECC                     	;# 
  4951  0F10                     	;# 
  4952  0F11                     	;# 
  4953  0F12                     	;# 
  4954  0F13                     	;# 
  4955  0F14                     	;# 
  4956  0F15                     	;# 
  4957  0F16                     	;# 
  4958  0F17                     	;# 
  4959  0F18                     	;# 
  4960  0F19                     	;# 
  4961  0F1A                     	;# 
  4962  0F1B                     	;# 
  4963  0F1C                     	;# 
  4964  0F1D                     	;# 
  4965  0F1E                     	;# 
  4966  0F1F                     	;# 
  4967  0F20                     	;# 
  4968  0F21                     	;# 
  4969  0F22                     	;# 
  4970  0F23                     	;# 
  4971  0F24                     	;# 
  4972  0F25                     	;# 
  4973  0F26                     	;# 
  4974  0F27                     	;# 
  4975  0F28                     	;# 
  4976  0F29                     	;# 
  4977  0F2A                     	;# 
  4978  0F2B                     	;# 
  4979  0F2C                     	;# 
  4980  0F2D                     	;# 
  4981  0F2E                     	;# 
  4982  0F2F                     	;# 
  4983  0F30                     	;# 
  4984  0F31                     	;# 
  4985  0F32                     	;# 
  4986  0F38                     	;# 
  4987  0F39                     	;# 
  4988  0F3A                     	;# 
  4989  0F3B                     	;# 
  4990  0F3C                     	;# 
  4991  0F3D                     	;# 
  4992  0F3E                     	;# 
  4993  0F3F                     	;# 
  4994  0F40                     	;# 
  4995  0F41                     	;# 
  4996  0F43                     	;# 
  4997  0F44                     	;# 
  4998  0F45                     	;# 
  4999  0F46                     	;# 
  5000  0F47                     	;# 
  5001  0F48                     	;# 
  5002  0F49                     	;# 
  5003  0F4A                     	;# 
  5004  0F4B                     	;# 
  5005  0F4C                     	;# 
  5006  0F4E                     	;# 
  5007  0F4F                     	;# 
  5008  0F50                     	;# 
  5009  0F51                     	;# 
  5010  0F52                     	;# 
  5011  0F53                     	;# 
  5012  0F54                     	;# 
  5013  0F55                     	;# 
  5014  0F56                     	;# 
  5015  0F57                     	;# 
  5016  0F59                     	;# 
  5017  0F5A                     	;# 
  5018  0F5B                     	;# 
  5019  0F5C                     	;# 
  5020  0F5D                     	;# 
  5021  0F61                     	;# 
  5022  0F62                     	;# 
  5023  0F64                     	;# 
  5024  0F65                     	;# 
  5025  0F66                     	;# 
  5026  0F67                     	;# 
  5027  0F68                     	;# 
  5028  0F69                     	;# 
  5029  0F6A                     	;# 
  5030  0F6B                     	;# 
  5031  0F6C                     	;# 
  5032  0F6D                     	;# 
  5033  0FE4                     	;# 
  5034  0FE5                     	;# 
  5035  0FE6                     	;# 
  5036  0FE7                     	;# 
  5037  0FE8                     	;# 
  5038  0FE9                     	;# 
  5039  0FEA                     	;# 
  5040  0FEB                     	;# 
  5041  0FED                     	;# 
  5042  0FEE                     	;# 
  5043  0FEF                     	;# 
  5044  0000                     	;# 
  5045  0001                     	;# 
  5046  0002                     	;# 
  5047  0003                     	;# 
  5048  0004                     	;# 
  5049  0005                     	;# 
  5050  0006                     	;# 
  5051  0007                     	;# 
  5052  0008                     	;# 
  5053  0009                     	;# 
  5054  000A                     	;# 
  5055  000B                     	;# 
  5056  000C                     	;# 
  5057  000D                     	;# 
  5058  000E                     	;# 
  5059  000F                     	;# 
  5060  0010                     	;# 
  5061  0011                     	;# 
  5062  0012                     	;# 
  5063  0013                     	;# 
  5064  0014                     	;# 
  5065  0015                     	;# 
  5066  0016                     	;# 
  5067  0017                     	;# 
  5068  0018                     	;# 
  5069  0019                     	;# 
  5070  001A                     	;# 
  5071  001C                     	;# 
  5072  001C                     	;# 
  5073  001D                     	;# 
  5074  001D                     	;# 
  5075  001E                     	;# 
  5076  001F                     	;# 
  5077  008C                     	;# 
  5078  008C                     	;# 
  5079  008D                     	;# 
  5080  008E                     	;# 
  5081  008E                     	;# 
  5082  008F                     	;# 
  5083  0090                     	;# 
  5084  0090                     	;# 
  5085  0091                     	;# 
  5086  0093                     	;# 
  5087  0094                     	;# 
  5088  0095                     	;# 
  5089  0096                     	;# 
  5090  0097                     	;# 
  5091  0098                     	;# 
  5092  0099                     	;# 
  5093  009A                     	;# 
  5094  009B                     	;# 
  5095  009C                     	;# 
  5096  009D                     	;# 
  5097  009E                     	;# 
  5098  010C                     	;# 
  5099  010D                     	;# 
  5100  010E                     	;# 
  5101  010E                     	;# 
  5102  010F                     	;# 
  5103  0110                     	;# 
  5104  0110                     	;# 
  5105  0111                     	;# 
  5106  0112                     	;# 
  5107  0112                     	;# 
  5108  0113                     	;# 
  5109  0114                     	;# 
  5110  0114                     	;# 
  5111  0115                     	;# 
  5112  0116                     	;# 
  5113  0116                     	;# 
  5114  0117                     	;# 
  5115  0119                     	;# 
  5116  0119                     	;# 
  5117  0119                     	;# 
  5118  011A                     	;# 
  5119  011A                     	;# 
  5120  011A                     	;# 
  5121  011B                     	;# 
  5122  011B                     	;# 
  5123  011B                     	;# 
  5124  011B                     	;# 
  5125  011B                     	;# 
  5126  011C                     	;# 
  5127  011C                     	;# 
  5128  011C                     	;# 
  5129  011D                     	;# 
  5130  011D                     	;# 
  5131  011D                     	;# 
  5132  011E                     	;# 
  5133  011E                     	;# 
  5134  011E                     	;# 
  5135  011F                     	;# 
  5136  011F                     	;# 
  5137  011F                     	;# 
  5138  011F                     	;# 
  5139  011F                     	;# 
  5140  018C                     	;# 
  5141  018D                     	;# 
  5142  018E                     	;# 
  5143  018F                     	;# 
  5144  0190                     	;# 
  5145  0191                     	;# 
  5146  0192                     	;# 
  5147  0196                     	;# 
  5148  0197                     	;# 
  5149  0198                     	;# 
  5150  0199                     	;# 
  5151  019A                     	;# 
  5152  019B                     	;# 
  5153  019C                     	;# 
  5154  020C                     	;# 
  5155  020C                     	;# 
  5156  020D                     	;# 
  5157  020E                     	;# 
  5158  020F                     	;# 
  5159  020F                     	;# 
  5160  0210                     	;# 
  5161  0210                     	;# 
  5162  0211                     	;# 
  5163  0211                     	;# 
  5164  0212                     	;# 
  5165  0212                     	;# 
  5166  0213                     	;# 
  5167  0214                     	;# 
  5168  0215                     	;# 
  5169  0215                     	;# 
  5170  0216                     	;# 
  5171  0216                     	;# 
  5172  0217                     	;# 
  5173  0217                     	;# 
  5174  0218                     	;# 
  5175  0218                     	;# 
  5176  0219                     	;# 
  5177  021A                     	;# 
  5178  021B                     	;# 
  5179  021B                     	;# 
  5180  021C                     	;# 
  5181  021C                     	;# 
  5182  021D                     	;# 
  5183  021D                     	;# 
  5184  021E                     	;# 
  5185  021F                     	;# 
  5186  028C                     	;# 
  5187  028C                     	;# 
  5188  028D                     	;# 
  5189  028D                     	;# 
  5190  028E                     	;# 
  5191  028F                     	;# 
  5192  0290                     	;# 
  5193  0290                     	;# 
  5194  0291                     	;# 
  5195  0292                     	;# 
  5196  0292                     	;# 
  5197  0293                     	;# 
  5198  0293                     	;# 
  5199  0294                     	;# 
  5200  0295                     	;# 
  5201  0296                     	;# 
  5202  0296                     	;# 
  5203  0297                     	;# 
  5204  0298                     	;# 
  5205  0298                     	;# 
  5206  0299                     	;# 
  5207  0299                     	;# 
  5208  029A                     	;# 
  5209  029B                     	;# 
  5210  029C                     	;# 
  5211  029C                     	;# 
  5212  029D                     	;# 
  5213  030C                     	;# 
  5214  030C                     	;# 
  5215  030D                     	;# 
  5216  030E                     	;# 
  5217  030F                     	;# 
  5218  0310                     	;# 
  5219  0310                     	;# 
  5220  0311                     	;# 
  5221  0312                     	;# 
  5222  0313                     	;# 
  5223  0314                     	;# 
  5224  0314                     	;# 
  5225  0315                     	;# 
  5226  0316                     	;# 
  5227  0317                     	;# 
  5228  0318                     	;# 
  5229  0318                     	;# 
  5230  0319                     	;# 
  5231  031A                     	;# 
  5232  031B                     	;# 
  5233  031C                     	;# 
  5234  031C                     	;# 
  5235  031D                     	;# 
  5236  031E                     	;# 
  5237  031F                     	;# 
  5238  038C                     	;# 
  5239  038C                     	;# 
  5240  038D                     	;# 
  5241  038E                     	;# 
  5242  0390                     	;# 
  5243  0390                     	;# 
  5244  0391                     	;# 
  5245  0392                     	;# 
  5246  040C                     	;# 
  5247  040D                     	;# 
  5248  040E                     	;# 
  5249  040F                     	;# 
  5250  0410                     	;# 
  5251  0411                     	;# 
  5252  0416                     	;# 
  5253  0416                     	;# 
  5254  0417                     	;# 
  5255  0418                     	;# 
  5256  0418                     	;# 
  5257  0419                     	;# 
  5258  041A                     	;# 
  5259  041A                     	;# 
  5260  041B                     	;# 
  5261  041C                     	;# 
  5262  041C                     	;# 
  5263  041D                     	;# 
  5264  041E                     	;# 
  5265  041F                     	;# 
  5266  048C                     	;# 
  5267  048C                     	;# 
  5268  048D                     	;# 
  5269  048E                     	;# 
  5270  048F                     	;# 
  5271  048F                     	;# 
  5272  0490                     	;# 
  5273  0491                     	;# 
  5274  0492                     	;# 
  5275  0492                     	;# 
  5276  0493                     	;# 
  5277  0494                     	;# 
  5278  0495                     	;# 
  5279  0495                     	;# 
  5280  0496                     	;# 
  5281  0497                     	;# 
  5282  0498                     	;# 
  5283  0499                     	;# 
  5284  049A                     	;# 
  5285  049B                     	;# 
  5286  049C                     	;# 
  5287  049D                     	;# 
  5288  050C                     	;# 
  5289  050C                     	;# 
  5290  050D                     	;# 
  5291  050E                     	;# 
  5292  050F                     	;# 
  5293  050F                     	;# 
  5294  0510                     	;# 
  5295  0511                     	;# 
  5296  0512                     	;# 
  5297  0512                     	;# 
  5298  0513                     	;# 
  5299  0514                     	;# 
  5300  0515                     	;# 
  5301  0515                     	;# 
  5302  0516                     	;# 
  5303  0517                     	;# 
  5304  0518                     	;# 
  5305  0519                     	;# 
  5306  051A                     	;# 
  5307  051B                     	;# 
  5308  051C                     	;# 
  5309  051D                     	;# 
  5310  058C                     	;# 
  5311  058C                     	;# 
  5312  058D                     	;# 
  5313  058E                     	;# 
  5314  058F                     	;# 
  5315  058F                     	;# 
  5316  0590                     	;# 
  5317  0591                     	;# 
  5318  0592                     	;# 
  5319  0593                     	;# 
  5320  060C                     	;# 
  5321  060D                     	;# 
  5322  060E                     	;# 
  5323  060F                     	;# 
  5324  0610                     	;# 
  5325  0611                     	;# 
  5326  0612                     	;# 
  5327  0613                     	;# 
  5328  0614                     	;# 
  5329  0616                     	;# 
  5330  0617                     	;# 
  5331  0618                     	;# 
  5332  0619                     	;# 
  5333  061A                     	;# 
  5334  061B                     	;# 
  5335  061C                     	;# 
  5336  061D                     	;# 
  5337  061E                     	;# 
  5338  068C                     	;# 
  5339  068D                     	;# 
  5340  068E                     	;# 
  5341  068F                     	;# 
  5342  0690                     	;# 
  5343  0691                     	;# 
  5344  0692                     	;# 
  5345  0693                     	;# 
  5346  0694                     	;# 
  5347  070C                     	;# 
  5348  070D                     	;# 
  5349  070E                     	;# 
  5350  070F                     	;# 
  5351  0710                     	;# 
  5352  0711                     	;# 
  5353  0712                     	;# 
  5354  0713                     	;# 
  5355  0714                     	;# 
  5356  0716                     	;# 
  5357  0717                     	;# 
  5358  0718                     	;# 
  5359  0719                     	;# 
  5360  071A                     	;# 
  5361  071B                     	;# 
  5362  071C                     	;# 
  5363  071D                     	;# 
  5364  071E                     	;# 
  5365  0796                     	;# 
  5366  0797                     	;# 
  5367  0798                     	;# 
  5368  0799                     	;# 
  5369  079A                     	;# 
  5370  079B                     	;# 
  5371  080C                     	;# 
  5372  080D                     	;# 
  5373  080E                     	;# 
  5374  080F                     	;# 
  5375  0810                     	;# 
  5376  0811                     	;# 
  5377  0812                     	;# 
  5378  0813                     	;# 
  5379  0814                     	;# 
  5380  081A                     	;# 
  5381  081B                     	;# 
  5382  081C                     	;# 
  5383  081D                     	;# 
  5384  081E                     	;# 
  5385  081F                     	;# 
  5386  088C                     	;# 
  5387  088D                     	;# 
  5388  088E                     	;# 
  5389  088F                     	;# 
  5390  0890                     	;# 
  5391  0891                     	;# 
  5392  0892                     	;# 
  5393  0893                     	;# 
  5394  0895                     	;# 
  5395  0896                     	;# 
  5396  0897                     	;# 
  5397  0898                     	;# 
  5398  0899                     	;# 
  5399  089A                     	;# 
  5400  089B                     	;# 
  5401  090C                     	;# 
  5402  090E                     	;# 
  5403  090F                     	;# 
  5404  091F                     	;# 
  5405  091F                     	;# 
  5406  098F                     	;# 
  5407  098F                     	;# 
  5408  0990                     	;# 
  5409  0991                     	;# 
  5410  0992                     	;# 
  5411  0993                     	;# 
  5412  0994                     	;# 
  5413  0995                     	;# 
  5414  0996                     	;# 
  5415  0997                     	;# 
  5416  0E0F                     	;# 
  5417  0E10                     	;# 
  5418  0E11                     	;# 
  5419  0E12                     	;# 
  5420  0E13                     	;# 
  5421  0E14                     	;# 
  5422  0E15                     	;# 
  5423  0E16                     	;# 
  5424  0E17                     	;# 
  5425  0E18                     	;# 
  5426  0E19                     	;# 
  5427  0E1A                     	;# 
  5428  0E1B                     	;# 
  5429  0E1C                     	;# 
  5430  0E1D                     	;# 
  5431  0E1E                     	;# 
  5432  0E1F                     	;# 
  5433  0E20                     	;# 
  5434  0E21                     	;# 
  5435  0E22                     	;# 
  5436  0E23                     	;# 
  5437  0E24                     	;# 
  5438  0E25                     	;# 
  5439  0E26                     	;# 
  5440  0E27                     	;# 
  5441  0E28                     	;# 
  5442  0E29                     	;# 
  5443  0E2A                     	;# 
  5444  0E2B                     	;# 
  5445  0E2C                     	;# 
  5446  0E2D                     	;# 
  5447  0E2E                     	;# 
  5448  0E2F                     	;# 
  5449  0E30                     	;# 
  5450  0E31                     	;# 
  5451  0E32                     	;# 
  5452  0E33                     	;# 
  5453  0E34                     	;# 
  5454  0E35                     	;# 
  5455  0E36                     	;# 
  5456  0E37                     	;# 
  5457  0E8F                     	;# 
  5458  0E90                     	;# 
  5459  0E91                     	;# 
  5460  0E92                     	;# 
  5461  0E93                     	;# 
  5462  0E94                     	;# 
  5463  0E95                     	;# 
  5464  0E96                     	;# 
  5465  0E97                     	;# 
  5466  0E9C                     	;# 
  5467  0E9D                     	;# 
  5468  0E9E                     	;# 
  5469  0EA1                     	;# 
  5470  0EA2                     	;# 
  5471  0EA3                     	;# 
  5472  0EA4                     	;# 
  5473  0EA5                     	;# 
  5474  0EA9                     	;# 
  5475  0EAA                     	;# 
  5476  0EAB                     	;# 
  5477  0EAC                     	;# 
  5478  0EB1                     	;# 
  5479  0EB2                     	;# 
  5480  0EB3                     	;# 
  5481  0EB8                     	;# 
  5482  0EB9                     	;# 
  5483  0EBA                     	;# 
  5484  0EBB                     	;# 
  5485  0EBC                     	;# 
  5486  0EBD                     	;# 
  5487  0EBE                     	;# 
  5488  0EC3                     	;# 
  5489  0EC5                     	;# 
  5490  0EC6                     	;# 
  5491  0EC7                     	;# 
  5492  0EC8                     	;# 
  5493  0EC9                     	;# 
  5494  0ECA                     	;# 
  5495  0ECB                     	;# 
  5496  0ECC                     	;# 
  5497  0F10                     	;# 
  5498  0F11                     	;# 
  5499  0F12                     	;# 
  5500  0F13                     	;# 
  5501  0F14                     	;# 
  5502  0F15                     	;# 
  5503  0F16                     	;# 
  5504  0F17                     	;# 
  5505  0F18                     	;# 
  5506  0F19                     	;# 
  5507  0F1A                     	;# 
  5508  0F1B                     	;# 
  5509  0F1C                     	;# 
  5510  0F1D                     	;# 
  5511  0F1E                     	;# 
  5512  0F1F                     	;# 
  5513  0F20                     	;# 
  5514  0F21                     	;# 
  5515  0F22                     	;# 
  5516  0F23                     	;# 
  5517  0F24                     	;# 
  5518  0F25                     	;# 
  5519  0F26                     	;# 
  5520  0F27                     	;# 
  5521  0F28                     	;# 
  5522  0F29                     	;# 
  5523  0F2A                     	;# 
  5524  0F2B                     	;# 
  5525  0F2C                     	;# 
  5526  0F2D                     	;# 
  5527  0F2E                     	;# 
  5528  0F2F                     	;# 
  5529  0F30                     	;# 
  5530  0F31                     	;# 
  5531  0F32                     	;# 
  5532  0F38                     	;# 
  5533  0F39                     	;# 
  5534  0F3A                     	;# 
  5535  0F3B                     	;# 
  5536  0F3C                     	;# 
  5537  0F3D                     	;# 
  5538  0F3E                     	;# 
  5539  0F3F                     	;# 
  5540  0F40                     	;# 
  5541  0F41                     	;# 
  5542  0F43                     	;# 
  5543  0F44                     	;# 
  5544  0F45                     	;# 
  5545  0F46                     	;# 
  5546  0F47                     	;# 
  5547  0F48                     	;# 
  5548  0F49                     	;# 
  5549  0F4A                     	;# 
  5550  0F4B                     	;# 
  5551  0F4C                     	;# 
  5552  0F4E                     	;# 
  5553  0F4F                     	;# 
  5554  0F50                     	;# 
  5555  0F51                     	;# 
  5556  0F52                     	;# 
  5557  0F53                     	;# 
  5558  0F54                     	;# 
  5559  0F55                     	;# 
  5560  0F56                     	;# 
  5561  0F57                     	;# 
  5562  0F59                     	;# 
  5563  0F5A                     	;# 
  5564  0F5B                     	;# 
  5565  0F5C                     	;# 
  5566  0F5D                     	;# 
  5567  0F61                     	;# 
  5568  0F62                     	;# 
  5569  0F64                     	;# 
  5570  0F65                     	;# 
  5571  0F66                     	;# 
  5572  0F67                     	;# 
  5573  0F68                     	;# 
  5574  0F69                     	;# 
  5575  0F6A                     	;# 
  5576  0F6B                     	;# 
  5577  0F6C                     	;# 
  5578  0F6D                     	;# 
  5579  0FE4                     	;# 
  5580  0FE5                     	;# 
  5581  0FE6                     	;# 
  5582  0FE7                     	;# 
  5583  0FE8                     	;# 
  5584  0FE9                     	;# 
  5585  0FEA                     	;# 
  5586  0FEB                     	;# 
  5587  0FED                     	;# 
  5588  0FEE                     	;# 
  5589  0FEF                     	;# 
  5590  0000                     	;# 
  5591  0001                     	;# 
  5592  0002                     	;# 
  5593  0003                     	;# 
  5594  0004                     	;# 
  5595  0005                     	;# 
  5596  0006                     	;# 
  5597  0007                     	;# 
  5598  0008                     	;# 
  5599  0009                     	;# 
  5600  000A                     	;# 
  5601  000B                     	;# 
  5602  000C                     	;# 
  5603  000D                     	;# 
  5604  000E                     	;# 
  5605  000F                     	;# 
  5606  0010                     	;# 
  5607  0011                     	;# 
  5608  0012                     	;# 
  5609  0013                     	;# 
  5610  0014                     	;# 
  5611  0015                     	;# 
  5612  0016                     	;# 
  5613  0017                     	;# 
  5614  0018                     	;# 
  5615  0019                     	;# 
  5616  001A                     	;# 
  5617  001C                     	;# 
  5618  001C                     	;# 
  5619  001D                     	;# 
  5620  001D                     	;# 
  5621  001E                     	;# 
  5622  001F                     	;# 
  5623  008C                     	;# 
  5624  008C                     	;# 
  5625  008D                     	;# 
  5626  008E                     	;# 
  5627  008E                     	;# 
  5628  008F                     	;# 
  5629  0090                     	;# 
  5630  0090                     	;# 
  5631  0091                     	;# 
  5632  0093                     	;# 
  5633  0094                     	;# 
  5634  0095                     	;# 
  5635  0096                     	;# 
  5636  0097                     	;# 
  5637  0098                     	;# 
  5638  0099                     	;# 
  5639  009A                     	;# 
  5640  009B                     	;# 
  5641  009C                     	;# 
  5642  009D                     	;# 
  5643  009E                     	;# 
  5644  010C                     	;# 
  5645  010D                     	;# 
  5646  010E                     	;# 
  5647  010E                     	;# 
  5648  010F                     	;# 
  5649  0110                     	;# 
  5650  0110                     	;# 
  5651  0111                     	;# 
  5652  0112                     	;# 
  5653  0112                     	;# 
  5654  0113                     	;# 
  5655  0114                     	;# 
  5656  0114                     	;# 
  5657  0115                     	;# 
  5658  0116                     	;# 
  5659  0116                     	;# 
  5660  0117                     	;# 
  5661  0119                     	;# 
  5662  0119                     	;# 
  5663  0119                     	;# 
  5664  011A                     	;# 
  5665  011A                     	;# 
  5666  011A                     	;# 
  5667  011B                     	;# 
  5668  011B                     	;# 
  5669  011B                     	;# 
  5670  011B                     	;# 
  5671  011B                     	;# 
  5672  011C                     	;# 
  5673  011C                     	;# 
  5674  011C                     	;# 
  5675  011D                     	;# 
  5676  011D                     	;# 
  5677  011D                     	;# 
  5678  011E                     	;# 
  5679  011E                     	;# 
  5680  011E                     	;# 
  5681  011F                     	;# 
  5682  011F                     	;# 
  5683  011F                     	;# 
  5684  011F                     	;# 
  5685  011F                     	;# 
  5686  018C                     	;# 
  5687  018D                     	;# 
  5688  018E                     	;# 
  5689  018F                     	;# 
  5690  0190                     	;# 
  5691  0191                     	;# 
  5692  0192                     	;# 
  5693  0196                     	;# 
  5694  0197                     	;# 
  5695  0198                     	;# 
  5696  0199                     	;# 
  5697  019A                     	;# 
  5698  019B                     	;# 
  5699  019C                     	;# 
  5700  020C                     	;# 
  5701  020C                     	;# 
  5702  020D                     	;# 
  5703  020E                     	;# 
  5704  020F                     	;# 
  5705  020F                     	;# 
  5706  0210                     	;# 
  5707  0210                     	;# 
  5708  0211                     	;# 
  5709  0211                     	;# 
  5710  0212                     	;# 
  5711  0212                     	;# 
  5712  0213                     	;# 
  5713  0214                     	;# 
  5714  0215                     	;# 
  5715  0215                     	;# 
  5716  0216                     	;# 
  5717  0216                     	;# 
  5718  0217                     	;# 
  5719  0217                     	;# 
  5720  0218                     	;# 
  5721  0218                     	;# 
  5722  0219                     	;# 
  5723  021A                     	;# 
  5724  021B                     	;# 
  5725  021B                     	;# 
  5726  021C                     	;# 
  5727  021C                     	;# 
  5728  021D                     	;# 
  5729  021D                     	;# 
  5730  021E                     	;# 
  5731  021F                     	;# 
  5732  028C                     	;# 
  5733  028C                     	;# 
  5734  028D                     	;# 
  5735  028D                     	;# 
  5736  028E                     	;# 
  5737  028F                     	;# 
  5738  0290                     	;# 
  5739  0290                     	;# 
  5740  0291                     	;# 
  5741  0292                     	;# 
  5742  0292                     	;# 
  5743  0293                     	;# 
  5744  0293                     	;# 
  5745  0294                     	;# 
  5746  0295                     	;# 
  5747  0296                     	;# 
  5748  0296                     	;# 
  5749  0297                     	;# 
  5750  0298                     	;# 
  5751  0298                     	;# 
  5752  0299                     	;# 
  5753  0299                     	;# 
  5754  029A                     	;# 
  5755  029B                     	;# 
  5756  029C                     	;# 
  5757  029C                     	;# 
  5758  029D                     	;# 
  5759  030C                     	;# 
  5760  030C                     	;# 
  5761  030D                     	;# 
  5762  030E                     	;# 
  5763  030F                     	;# 
  5764  0310                     	;# 
  5765  0310                     	;# 
  5766  0311                     	;# 
  5767  0312                     	;# 
  5768  0313                     	;# 
  5769  0314                     	;# 
  5770  0314                     	;# 
  5771  0315                     	;# 
  5772  0316                     	;# 
  5773  0317                     	;# 
  5774  0318                     	;# 
  5775  0318                     	;# 
  5776  0319                     	;# 
  5777  031A                     	;# 
  5778  031B                     	;# 
  5779  031C                     	;# 
  5780  031C                     	;# 
  5781  031D                     	;# 
  5782  031E                     	;# 
  5783  031F                     	;# 
  5784  038C                     	;# 
  5785  038C                     	;# 
  5786  038D                     	;# 
  5787  038E                     	;# 
  5788  0390                     	;# 
  5789  0390                     	;# 
  5790  0391                     	;# 
  5791  0392                     	;# 
  5792  040C                     	;# 
  5793  040D                     	;# 
  5794  040E                     	;# 
  5795  040F                     	;# 
  5796  0410                     	;# 
  5797  0411                     	;# 
  5798  0416                     	;# 
  5799  0416                     	;# 
  5800  0417                     	;# 
  5801  0418                     	;# 
  5802  0418                     	;# 
  5803  0419                     	;# 
  5804  041A                     	;# 
  5805  041A                     	;# 
  5806  041B                     	;# 
  5807  041C                     	;# 
  5808  041C                     	;# 
  5809  041D                     	;# 
  5810  041E                     	;# 
  5811  041F                     	;# 
  5812  048C                     	;# 
  5813  048C                     	;# 
  5814  048D                     	;# 
  5815  048E                     	;# 
  5816  048F                     	;# 
  5817  048F                     	;# 
  5818  0490                     	;# 
  5819  0491                     	;# 
  5820  0492                     	;# 
  5821  0492                     	;# 
  5822  0493                     	;# 
  5823  0494                     	;# 
  5824  0495                     	;# 
  5825  0495                     	;# 
  5826  0496                     	;# 
  5827  0497                     	;# 
  5828  0498                     	;# 
  5829  0499                     	;# 
  5830  049A                     	;# 
  5831  049B                     	;# 
  5832  049C                     	;# 
  5833  049D                     	;# 
  5834  050C                     	;# 
  5835  050C                     	;# 
  5836  050D                     	;# 
  5837  050E                     	;# 
  5838  050F                     	;# 
  5839  050F                     	;# 
  5840  0510                     	;# 
  5841  0511                     	;# 
  5842  0512                     	;# 
  5843  0512                     	;# 
  5844  0513                     	;# 
  5845  0514                     	;# 
  5846  0515                     	;# 
  5847  0515                     	;# 
  5848  0516                     	;# 
  5849  0517                     	;# 
  5850  0518                     	;# 
  5851  0519                     	;# 
  5852  051A                     	;# 
  5853  051B                     	;# 
  5854  051C                     	;# 
  5855  051D                     	;# 
  5856  058C                     	;# 
  5857  058C                     	;# 
  5858  058D                     	;# 
  5859  058E                     	;# 
  5860  058F                     	;# 
  5861  058F                     	;# 
  5862  0590                     	;# 
  5863  0591                     	;# 
  5864  0592                     	;# 
  5865  0593                     	;# 
  5866  060C                     	;# 
  5867  060D                     	;# 
  5868  060E                     	;# 
  5869  060F                     	;# 
  5870  0610                     	;# 
  5871  0611                     	;# 
  5872  0612                     	;# 
  5873  0613                     	;# 
  5874  0614                     	;# 
  5875  0616                     	;# 
  5876  0617                     	;# 
  5877  0618                     	;# 
  5878  0619                     	;# 
  5879  061A                     	;# 
  5880  061B                     	;# 
  5881  061C                     	;# 
  5882  061D                     	;# 
  5883  061E                     	;# 
  5884  068C                     	;# 
  5885  068D                     	;# 
  5886  068E                     	;# 
  5887  068F                     	;# 
  5888  0690                     	;# 
  5889  0691                     	;# 
  5890  0692                     	;# 
  5891  0693                     	;# 
  5892  0694                     	;# 
  5893  070C                     	;# 
  5894  070D                     	;# 
  5895  070E                     	;# 
  5896  070F                     	;# 
  5897  0710                     	;# 
  5898  0711                     	;# 
  5899  0712                     	;# 
  5900  0713                     	;# 
  5901  0714                     	;# 
  5902  0716                     	;# 
  5903  0717                     	;# 
  5904  0718                     	;# 
  5905  0719                     	;# 
  5906  071A                     	;# 
  5907  071B                     	;# 
  5908  071C                     	;# 
  5909  071D                     	;# 
  5910  071E                     	;# 
  5911  0796                     	;# 
  5912  0797                     	;# 
  5913  0798                     	;# 
  5914  0799                     	;# 
  5915  079A                     	;# 
  5916  079B                     	;# 
  5917  080C                     	;# 
  5918  080D                     	;# 
  5919  080E                     	;# 
  5920  080F                     	;# 
  5921  0810                     	;# 
  5922  0811                     	;# 
  5923  0812                     	;# 
  5924  0813                     	;# 
  5925  0814                     	;# 
  5926  081A                     	;# 
  5927  081B                     	;# 
  5928  081C                     	;# 
  5929  081D                     	;# 
  5930  081E                     	;# 
  5931  081F                     	;# 
  5932  088C                     	;# 
  5933  088D                     	;# 
  5934  088E                     	;# 
  5935  088F                     	;# 
  5936  0890                     	;# 
  5937  0891                     	;# 
  5938  0892                     	;# 
  5939  0893                     	;# 
  5940  0895                     	;# 
  5941  0896                     	;# 
  5942  0897                     	;# 
  5943  0898                     	;# 
  5944  0899                     	;# 
  5945  089A                     	;# 
  5946  089B                     	;# 
  5947  090C                     	;# 
  5948  090E                     	;# 
  5949  090F                     	;# 
  5950  091F                     	;# 
  5951  091F                     	;# 
  5952  098F                     	;# 
  5953  098F                     	;# 
  5954  0990                     	;# 
  5955  0991                     	;# 
  5956  0992                     	;# 
  5957  0993                     	;# 
  5958  0994                     	;# 
  5959  0995                     	;# 
  5960  0996                     	;# 
  5961  0997                     	;# 
  5962  0E0F                     	;# 
  5963  0E10                     	;# 
  5964  0E11                     	;# 
  5965  0E12                     	;# 
  5966  0E13                     	;# 
  5967  0E14                     	;# 
  5968  0E15                     	;# 
  5969  0E16                     	;# 
  5970  0E17                     	;# 
  5971  0E18                     	;# 
  5972  0E19                     	;# 
  5973  0E1A                     	;# 
  5974  0E1B                     	;# 
  5975  0E1C                     	;# 
  5976  0E1D                     	;# 
  5977  0E1E                     	;# 
  5978  0E1F                     	;# 
  5979  0E20                     	;# 
  5980  0E21                     	;# 
  5981  0E22                     	;# 
  5982  0E23                     	;# 
  5983  0E24                     	;# 
  5984  0E25                     	;# 
  5985  0E26                     	;# 
  5986  0E27                     	;# 
  5987  0E28                     	;# 
  5988  0E29                     	;# 
  5989  0E2A                     	;# 
  5990  0E2B                     	;# 
  5991  0E2C                     	;# 
  5992  0E2D                     	;# 
  5993  0E2E                     	;# 
  5994  0E2F                     	;# 
  5995  0E30                     	;# 
  5996  0E31                     	;# 
  5997  0E32                     	;# 
  5998  0E33                     	;# 
  5999  0E34                     	;# 
  6000  0E35                     	;# 
  6001  0E36                     	;# 
  6002  0E37                     	;# 
  6003  0E8F                     	;# 
  6004  0E90                     	;# 
  6005  0E91                     	;# 
  6006  0E92                     	;# 
  6007  0E93                     	;# 
  6008  0E94                     	;# 
  6009  0E95                     	;# 
  6010  0E96                     	;# 
  6011  0E97                     	;# 
  6012  0E9C                     	;# 
  6013  0E9D                     	;# 
  6014  0E9E                     	;# 
  6015  0EA1                     	;# 
  6016  0EA2                     	;# 
  6017  0EA3                     	;# 
  6018  0EA4                     	;# 
  6019  0EA5                     	;# 
  6020  0EA9                     	;# 
  6021  0EAA                     	;# 
  6022  0EAB                     	;# 
  6023  0EAC                     	;# 
  6024  0EB1                     	;# 
  6025  0EB2                     	;# 
  6026  0EB3                     	;# 
  6027  0EB8                     	;# 
  6028  0EB9                     	;# 
  6029  0EBA                     	;# 
  6030  0EBB                     	;# 
  6031  0EBC                     	;# 
  6032  0EBD                     	;# 
  6033  0EBE                     	;# 
  6034  0EC3                     	;# 
  6035  0EC5                     	;# 
  6036  0EC6                     	;# 
  6037  0EC7                     	;# 
  6038  0EC8                     	;# 
  6039  0EC9                     	;# 
  6040  0ECA                     	;# 
  6041  0ECB                     	;# 
  6042  0ECC                     	;# 
  6043  0F10                     	;# 
  6044  0F11                     	;# 
  6045  0F12                     	;# 
  6046  0F13                     	;# 
  6047  0F14                     	;# 
  6048  0F15                     	;# 
  6049  0F16                     	;# 
  6050  0F17                     	;# 
  6051  0F18                     	;# 
  6052  0F19                     	;# 
  6053  0F1A                     	;# 
  6054  0F1B                     	;# 
  6055  0F1C                     	;# 
  6056  0F1D                     	;# 
  6057  0F1E                     	;# 
  6058  0F1F                     	;# 
  6059  0F20                     	;# 
  6060  0F21                     	;# 
  6061  0F22                     	;# 
  6062  0F23                     	;# 
  6063  0F24                     	;# 
  6064  0F25                     	;# 
  6065  0F26                     	;# 
  6066  0F27                     	;# 
  6067  0F28                     	;# 
  6068  0F29                     	;# 
  6069  0F2A                     	;# 
  6070  0F2B                     	;# 
  6071  0F2C                     	;# 
  6072  0F2D                     	;# 
  6073  0F2E                     	;# 
  6074  0F2F                     	;# 
  6075  0F30                     	;# 
  6076  0F31                     	;# 
  6077  0F32                     	;# 
  6078  0F38                     	;# 
  6079  0F39                     	;# 
  6080  0F3A                     	;# 
  6081  0F3B                     	;# 
  6082  0F3C                     	;# 
  6083  0F3D                     	;# 
  6084  0F3E                     	;# 
  6085  0F3F                     	;# 
  6086  0F40                     	;# 
  6087  0F41                     	;# 
  6088  0F43                     	;# 
  6089  0F44                     	;# 
  6090  0F45                     	;# 
  6091  0F46                     	;# 
  6092  0F47                     	;# 
  6093  0F48                     	;# 
  6094  0F49                     	;# 
  6095  0F4A                     	;# 
  6096  0F4B                     	;# 
  6097  0F4C                     	;# 
  6098  0F4E                     	;# 
  6099  0F4F                     	;# 
  6100  0F50                     	;# 
  6101  0F51                     	;# 
  6102  0F52                     	;# 
  6103  0F53                     	;# 
  6104  0F54                     	;# 
  6105  0F55                     	;# 
  6106  0F56                     	;# 
  6107  0F57                     	;# 
  6108  0F59                     	;# 
  6109  0F5A                     	;# 
  6110  0F5B                     	;# 
  6111  0F5C                     	;# 
  6112  0F5D                     	;# 
  6113  0F61                     	;# 
  6114  0F62                     	;# 
  6115  0F64                     	;# 
  6116  0F65                     	;# 
  6117  0F66                     	;# 
  6118  0F67                     	;# 
  6119  0F68                     	;# 
  6120  0F69                     	;# 
  6121  0F6A                     	;# 
  6122  0F6B                     	;# 
  6123  0F6C                     	;# 
  6124  0F6D                     	;# 
  6125  0FE4                     	;# 
  6126  0FE5                     	;# 
  6127  0FE6                     	;# 
  6128  0FE7                     	;# 
  6129  0FE8                     	;# 
  6130  0FE9                     	;# 
  6131  0FEA                     	;# 
  6132  0FEB                     	;# 
  6133  0FED                     	;# 
  6134  0FEE                     	;# 
  6135  0FEF                     	;# 
  6136  0000                     	;# 
  6137  0001                     	;# 
  6138  0002                     	;# 
  6139  0003                     	;# 
  6140  0004                     	;# 
  6141  0005                     	;# 
  6142  0006                     	;# 
  6143  0007                     	;# 
  6144  0008                     	;# 
  6145  0009                     	;# 
  6146  000A                     	;# 
  6147  000B                     	;# 
  6148  000C                     	;# 
  6149  000D                     	;# 
  6150  000E                     	;# 
  6151  000F                     	;# 
  6152  0010                     	;# 
  6153  0011                     	;# 
  6154  0012                     	;# 
  6155  0013                     	;# 
  6156  0014                     	;# 
  6157  0015                     	;# 
  6158  0016                     	;# 
  6159  0017                     	;# 
  6160  0018                     	;# 
  6161  0019                     	;# 
  6162  001A                     	;# 
  6163  001C                     	;# 
  6164  001C                     	;# 
  6165  001D                     	;# 
  6166  001D                     	;# 
  6167  001E                     	;# 
  6168  001F                     	;# 
  6169  008C                     	;# 
  6170  008C                     	;# 
  6171  008D                     	;# 
  6172  008E                     	;# 
  6173  008E                     	;# 
  6174  008F                     	;# 
  6175  0090                     	;# 
  6176  0090                     	;# 
  6177  0091                     	;# 
  6178  0093                     	;# 
  6179  0094                     	;# 
  6180  0095                     	;# 
  6181  0096                     	;# 
  6182  0097                     	;# 
  6183  0098                     	;# 
  6184  0099                     	;# 
  6185  009A                     	;# 
  6186  009B                     	;# 
  6187  009C                     	;# 
  6188  009D                     	;# 
  6189  009E                     	;# 
  6190  010C                     	;# 
  6191  010D                     	;# 
  6192  010E                     	;# 
  6193  010E                     	;# 
  6194  010F                     	;# 
  6195  0110                     	;# 
  6196  0110                     	;# 
  6197  0111                     	;# 
  6198  0112                     	;# 
  6199  0112                     	;# 
  6200  0113                     	;# 
  6201  0114                     	;# 
  6202  0114                     	;# 
  6203  0115                     	;# 
  6204  0116                     	;# 
  6205  0116                     	;# 
  6206  0117                     	;# 
  6207  0119                     	;# 
  6208  0119                     	;# 
  6209  0119                     	;# 
  6210  011A                     	;# 
  6211  011A                     	;# 
  6212  011A                     	;# 
  6213  011B                     	;# 
  6214  011B                     	;# 
  6215  011B                     	;# 
  6216  011B                     	;# 
  6217  011B                     	;# 
  6218  011C                     	;# 
  6219  011C                     	;# 
  6220  011C                     	;# 
  6221  011D                     	;# 
  6222  011D                     	;# 
  6223  011D                     	;# 
  6224  011E                     	;# 
  6225  011E                     	;# 
  6226  011E                     	;# 
  6227  011F                     	;# 
  6228  011F                     	;# 
  6229  011F                     	;# 
  6230  011F                     	;# 
  6231  011F                     	;# 
  6232  018C                     	;# 
  6233  018D                     	;# 
  6234  018E                     	;# 
  6235  018F                     	;# 
  6236  0190                     	;# 
  6237  0191                     	;# 
  6238  0192                     	;# 
  6239  0196                     	;# 
  6240  0197                     	;# 
  6241  0198                     	;# 
  6242  0199                     	;# 
  6243  019A                     	;# 
  6244  019B                     	;# 
  6245  019C                     	;# 
  6246  020C                     	;# 
  6247  020C                     	;# 
  6248  020D                     	;# 
  6249  020E                     	;# 
  6250  020F                     	;# 
  6251  020F                     	;# 
  6252  0210                     	;# 
  6253  0210                     	;# 
  6254  0211                     	;# 
  6255  0211                     	;# 
  6256  0212                     	;# 
  6257  0212                     	;# 
  6258  0213                     	;# 
  6259  0214                     	;# 
  6260  0215                     	;# 
  6261  0215                     	;# 
  6262  0216                     	;# 
  6263  0216                     	;# 
  6264  0217                     	;# 
  6265  0217                     	;# 
  6266  0218                     	;# 
  6267  0218                     	;# 
  6268  0219                     	;# 
  6269  021A                     	;# 
  6270  021B                     	;# 
  6271  021B                     	;# 
  6272  021C                     	;# 
  6273  021C                     	;# 
  6274  021D                     	;# 
  6275  021D                     	;# 
  6276  021E                     	;# 
  6277  021F                     	;# 
  6278  028C                     	;# 
  6279  028C                     	;# 
  6280  028D                     	;# 
  6281  028D                     	;# 
  6282  028E                     	;# 
  6283  028F                     	;# 
  6284  0290                     	;# 
  6285  0290                     	;# 
  6286  0291                     	;# 
  6287  0292                     	;# 
  6288  0292                     	;# 
  6289  0293                     	;# 
  6290  0293                     	;# 
  6291  0294                     	;# 
  6292  0295                     	;# 
  6293  0296                     	;# 
  6294  0296                     	;# 
  6295  0297                     	;# 
  6296  0298                     	;# 
  6297  0298                     	;# 
  6298  0299                     	;# 
  6299  0299                     	;# 
  6300  029A                     	;# 
  6301  029B                     	;# 
  6302  029C                     	;# 
  6303  029C                     	;# 
  6304  029D                     	;# 
  6305  030C                     	;# 
  6306  030C                     	;# 
  6307  030D                     	;# 
  6308  030E                     	;# 
  6309  030F                     	;# 
  6310  0310                     	;# 
  6311  0310                     	;# 
  6312  0311                     	;# 
  6313  0312                     	;# 
  6314  0313                     	;# 
  6315  0314                     	;# 
  6316  0314                     	;# 
  6317  0315                     	;# 
  6318  0316                     	;# 
  6319  0317                     	;# 
  6320  0318                     	;# 
  6321  0318                     	;# 
  6322  0319                     	;# 
  6323  031A                     	;# 
  6324  031B                     	;# 
  6325  031C                     	;# 
  6326  031C                     	;# 
  6327  031D                     	;# 
  6328  031E                     	;# 
  6329  031F                     	;# 
  6330  038C                     	;# 
  6331  038C                     	;# 
  6332  038D                     	;# 
  6333  038E                     	;# 
  6334  0390                     	;# 
  6335  0390                     	;# 
  6336  0391                     	;# 
  6337  0392                     	;# 
  6338  040C                     	;# 
  6339  040D                     	;# 
  6340  040E                     	;# 
  6341  040F                     	;# 
  6342  0410                     	;# 
  6343  0411                     	;# 
  6344  0416                     	;# 
  6345  0416                     	;# 
  6346  0417                     	;# 
  6347  0418                     	;# 
  6348  0418                     	;# 
  6349  0419                     	;# 
  6350  041A                     	;# 
  6351  041A                     	;# 
  6352  041B                     	;# 
  6353  041C                     	;# 
  6354  041C                     	;# 
  6355  041D                     	;# 
  6356  041E                     	;# 
  6357  041F                     	;# 
  6358  048C                     	;# 
  6359  048C                     	;# 
  6360  048D                     	;# 
  6361  048E                     	;# 
  6362  048F                     	;# 
  6363  048F                     	;# 
  6364  0490                     	;# 
  6365  0491                     	;# 
  6366  0492                     	;# 
  6367  0492                     	;# 
  6368  0493                     	;# 
  6369  0494                     	;# 
  6370  0495                     	;# 
  6371  0495                     	;# 
  6372  0496                     	;# 
  6373  0497                     	;# 
  6374  0498                     	;# 
  6375  0499                     	;# 
  6376  049A                     	;# 
  6377  049B                     	;# 
  6378  049C                     	;# 
  6379  049D                     	;# 
  6380  050C                     	;# 
  6381  050C                     	;# 
  6382  050D                     	;# 
  6383  050E                     	;# 
  6384  050F                     	;# 
  6385  050F                     	;# 
  6386  0510                     	;# 
  6387  0511                     	;# 
  6388  0512                     	;# 
  6389  0512                     	;# 
  6390  0513                     	;# 
  6391  0514                     	;# 
  6392  0515                     	;# 
  6393  0515                     	;# 
  6394  0516                     	;# 
  6395  0517                     	;# 
  6396  0518                     	;# 
  6397  0519                     	;# 
  6398  051A                     	;# 
  6399  051B                     	;# 
  6400  051C                     	;# 
  6401  051D                     	;# 
  6402  058C                     	;# 
  6403  058C                     	;# 
  6404  058D                     	;# 
  6405  058E                     	;# 
  6406  058F                     	;# 
  6407  058F                     	;# 
  6408  0590                     	;# 
  6409  0591                     	;# 
  6410  0592                     	;# 
  6411  0593                     	;# 
  6412  060C                     	;# 
  6413  060D                     	;# 
  6414  060E                     	;# 
  6415  060F                     	;# 
  6416  0610                     	;# 
  6417  0611                     	;# 
  6418  0612                     	;# 
  6419  0613                     	;# 
  6420  0614                     	;# 
  6421  0616                     	;# 
  6422  0617                     	;# 
  6423  0618                     	;# 
  6424  0619                     	;# 
  6425  061A                     	;# 
  6426  061B                     	;# 
  6427  061C                     	;# 
  6428  061D                     	;# 
  6429  061E                     	;# 
  6430  068C                     	;# 
  6431  068D                     	;# 
  6432  068E                     	;# 
  6433  068F                     	;# 
  6434  0690                     	;# 
  6435  0691                     	;# 
  6436  0692                     	;# 
  6437  0693                     	;# 
  6438  0694                     	;# 
  6439  070C                     	;# 
  6440  070D                     	;# 
  6441  070E                     	;# 
  6442  070F                     	;# 
  6443  0710                     	;# 
  6444  0711                     	;# 
  6445  0712                     	;# 
  6446  0713                     	;# 
  6447  0714                     	;# 
  6448  0716                     	;# 
  6449  0717                     	;# 
  6450  0718                     	;# 
  6451  0719                     	;# 
  6452  071A                     	;# 
  6453  071B                     	;# 
  6454  071C                     	;# 
  6455  071D                     	;# 
  6456  071E                     	;# 
  6457  0796                     	;# 
  6458  0797                     	;# 
  6459  0798                     	;# 
  6460  0799                     	;# 
  6461  079A                     	;# 
  6462  079B                     	;# 
  6463  080C                     	;# 
  6464  080D                     	;# 
  6465  080E                     	;# 
  6466  080F                     	;# 
  6467  0810                     	;# 
  6468  0811                     	;# 
  6469  0812                     	;# 
  6470  0813                     	;# 
  6471  0814                     	;# 
  6472  081A                     	;# 
  6473  081B                     	;# 
  6474  081C                     	;# 
  6475  081D                     	;# 
  6476  081E                     	;# 
  6477  081F                     	;# 
  6478  088C                     	;# 
  6479  088D                     	;# 
  6480  088E                     	;# 
  6481  088F                     	;# 
  6482  0890                     	;# 
  6483  0891                     	;# 
  6484  0892                     	;# 
  6485  0893                     	;# 
  6486  0895                     	;# 
  6487  0896                     	;# 
  6488  0897                     	;# 
  6489  0898                     	;# 
  6490  0899                     	;# 
  6491  089A                     	;# 
  6492  089B                     	;# 
  6493  090C                     	;# 
  6494  090E                     	;# 
  6495  090F                     	;# 
  6496  091F                     	;# 
  6497  091F                     	;# 
  6498  098F                     	;# 
  6499  098F                     	;# 
  6500  0990                     	;# 
  6501  0991                     	;# 
  6502  0992                     	;# 
  6503  0993                     	;# 
  6504  0994                     	;# 
  6505  0995                     	;# 
  6506  0996                     	;# 
  6507  0997                     	;# 
  6508  0E0F                     	;# 
  6509  0E10                     	;# 
  6510  0E11                     	;# 
  6511  0E12                     	;# 
  6512  0E13                     	;# 
  6513  0E14                     	;# 
  6514  0E15                     	;# 
  6515  0E16                     	;# 
  6516  0E17                     	;# 
  6517  0E18                     	;# 
  6518  0E19                     	;# 
  6519  0E1A                     	;# 
  6520  0E1B                     	;# 
  6521  0E1C                     	;# 
  6522  0E1D                     	;# 
  6523  0E1E                     	;# 
  6524  0E1F                     	;# 
  6525  0E20                     	;# 
  6526  0E21                     	;# 
  6527  0E22                     	;# 
  6528  0E23                     	;# 
  6529  0E24                     	;# 
  6530  0E25                     	;# 
  6531  0E26                     	;# 
  6532  0E27                     	;# 
  6533  0E28                     	;# 
  6534  0E29                     	;# 
  6535  0E2A                     	;# 
  6536  0E2B                     	;# 
  6537  0E2C                     	;# 
  6538  0E2D                     	;# 
  6539  0E2E                     	;# 
  6540  0E2F                     	;# 
  6541  0E30                     	;# 
  6542  0E31                     	;# 
  6543  0E32                     	;# 
  6544  0E33                     	;# 
  6545  0E34                     	;# 
  6546  0E35                     	;# 
  6547  0E36                     	;# 
  6548  0E37                     	;# 
  6549  0E8F                     	;# 
  6550  0E90                     	;# 
  6551  0E91                     	;# 
  6552  0E92                     	;# 
  6553  0E93                     	;# 
  6554  0E94                     	;# 
  6555  0E95                     	;# 
  6556  0E96                     	;# 
  6557  0E97                     	;# 
  6558  0E9C                     	;# 
  6559  0E9D                     	;# 
  6560  0E9E                     	;# 
  6561  0EA1                     	;# 
  6562  0EA2                     	;# 
  6563  0EA3                     	;# 
  6564  0EA4                     	;# 
  6565  0EA5                     	;# 
  6566  0EA9                     	;# 
  6567  0EAA                     	;# 
  6568  0EAB                     	;# 
  6569  0EAC                     	;# 
  6570  0EB1                     	;# 
  6571  0EB2                     	;# 
  6572  0EB3                     	;# 
  6573  0EB8                     	;# 
  6574  0EB9                     	;# 
  6575  0EBA                     	;# 
  6576  0EBB                     	;# 
  6577  0EBC                     	;# 
  6578  0EBD                     	;# 
  6579  0EBE                     	;# 
  6580  0EC3                     	;# 
  6581  0EC5                     	;# 
  6582  0EC6                     	;# 
  6583  0EC7                     	;# 
  6584  0EC8                     	;# 
  6585  0EC9                     	;# 
  6586  0ECA                     	;# 
  6587  0ECB                     	;# 
  6588  0ECC                     	;# 
  6589  0F10                     	;# 
  6590  0F11                     	;# 
  6591  0F12                     	;# 
  6592  0F13                     	;# 
  6593  0F14                     	;# 
  6594  0F15                     	;# 
  6595  0F16                     	;# 
  6596  0F17                     	;# 
  6597  0F18                     	;# 
  6598  0F19                     	;# 
  6599  0F1A                     	;# 
  6600  0F1B                     	;# 
  6601  0F1C                     	;# 
  6602  0F1D                     	;# 
  6603  0F1E                     	;# 
  6604  0F1F                     	;# 
  6605  0F20                     	;# 
  6606  0F21                     	;# 
  6607  0F22                     	;# 
  6608  0F23                     	;# 
  6609  0F24                     	;# 
  6610  0F25                     	;# 
  6611  0F26                     	;# 
  6612  0F27                     	;# 
  6613  0F28                     	;# 
  6614  0F29                     	;# 
  6615  0F2A                     	;# 
  6616  0F2B                     	;# 
  6617  0F2C                     	;# 
  6618  0F2D                     	;# 
  6619  0F2E                     	;# 
  6620  0F2F                     	;# 
  6621  0F30                     	;# 
  6622  0F31                     	;# 
  6623  0F32                     	;# 
  6624  0F38                     	;# 
  6625  0F39                     	;# 
  6626  0F3A                     	;# 
  6627  0F3B                     	;# 
  6628  0F3C                     	;# 
  6629  0F3D                     	;# 
  6630  0F3E                     	;# 
  6631  0F3F                     	;# 
  6632  0F40                     	;# 
  6633  0F41                     	;# 
  6634  0F43                     	;# 
  6635  0F44                     	;# 
  6636  0F45                     	;# 
  6637  0F46                     	;# 
  6638  0F47                     	;# 
  6639  0F48                     	;# 
  6640  0F49                     	;# 
  6641  0F4A                     	;# 
  6642  0F4B                     	;# 
  6643  0F4C                     	;# 
  6644  0F4E                     	;# 
  6645  0F4F                     	;# 
  6646  0F50                     	;# 
  6647  0F51                     	;# 
  6648  0F52                     	;# 
  6649  0F53                     	;# 
  6650  0F54                     	;# 
  6651  0F55                     	;# 
  6652  0F56                     	;# 
  6653  0F57                     	;# 
  6654  0F59                     	;# 
  6655  0F5A                     	;# 
  6656  0F5B                     	;# 
  6657  0F5C                     	;# 
  6658  0F5D                     	;# 
  6659  0F61                     	;# 
  6660  0F62                     	;# 
  6661  0F64                     	;# 
  6662  0F65                     	;# 
  6663  0F66                     	;# 
  6664  0F67                     	;# 
  6665  0F68                     	;# 
  6666  0F69                     	;# 
  6667  0F6A                     	;# 
  6668  0F6B                     	;# 
  6669  0F6C                     	;# 
  6670  0F6D                     	;# 
  6671  0FE4                     	;# 
  6672  0FE5                     	;# 
  6673  0FE6                     	;# 
  6674  0FE7                     	;# 
  6675  0FE8                     	;# 
  6676  0FE9                     	;# 
  6677  0FEA                     	;# 
  6678  0FEB                     	;# 
  6679  0FED                     	;# 
  6680  0FEE                     	;# 
  6681  0FEF                     	;# 
  6682  0000                     	;# 
  6683  0001                     	;# 
  6684  0002                     	;# 
  6685  0003                     	;# 
  6686  0004                     	;# 
  6687  0005                     	;# 
  6688  0006                     	;# 
  6689  0007                     	;# 
  6690  0008                     	;# 
  6691  0009                     	;# 
  6692  000A                     	;# 
  6693  000B                     	;# 
  6694  000C                     	;# 
  6695  000D                     	;# 
  6696  000E                     	;# 
  6697  000F                     	;# 
  6698  0010                     	;# 
  6699  0011                     	;# 
  6700  0012                     	;# 
  6701  0013                     	;# 
  6702  0014                     	;# 
  6703  0015                     	;# 
  6704  0016                     	;# 
  6705  0017                     	;# 
  6706  0018                     	;# 
  6707  0019                     	;# 
  6708  001A                     	;# 
  6709  001C                     	;# 
  6710  001C                     	;# 
  6711  001D                     	;# 
  6712  001D                     	;# 
  6713  001E                     	;# 
  6714  001F                     	;# 
  6715  008C                     	;# 
  6716  008C                     	;# 
  6717  008D                     	;# 
  6718  008E                     	;# 
  6719  008E                     	;# 
  6720  008F                     	;# 
  6721  0090                     	;# 
  6722  0090                     	;# 
  6723  0091                     	;# 
  6724  0093                     	;# 
  6725  0094                     	;# 
  6726  0095                     	;# 
  6727  0096                     	;# 
  6728  0097                     	;# 
  6729  0098                     	;# 
  6730  0099                     	;# 
  6731  009A                     	;# 
  6732  009B                     	;# 
  6733  009C                     	;# 
  6734  009D                     	;# 
  6735  009E                     	;# 
  6736  010C                     	;# 
  6737  010D                     	;# 
  6738  010E                     	;# 
  6739  010E                     	;# 
  6740  010F                     	;# 
  6741  0110                     	;# 
  6742  0110                     	;# 
  6743  0111                     	;# 
  6744  0112                     	;# 
  6745  0112                     	;# 
  6746  0113                     	;# 
  6747  0114                     	;# 
  6748  0114                     	;# 
  6749  0115                     	;# 
  6750  0116                     	;# 
  6751  0116                     	;# 
  6752  0117                     	;# 
  6753  0119                     	;# 
  6754  0119                     	;# 
  6755  0119                     	;# 
  6756  011A                     	;# 
  6757  011A                     	;# 
  6758  011A                     	;# 
  6759  011B                     	;# 
  6760  011B                     	;# 
  6761  011B                     	;# 
  6762  011B                     	;# 
  6763  011B                     	;# 
  6764  011C                     	;# 
  6765  011C                     	;# 
  6766  011C                     	;# 
  6767  011D                     	;# 
  6768  011D                     	;# 
  6769  011D                     	;# 
  6770  011E                     	;# 
  6771  011E                     	;# 
  6772  011E                     	;# 
  6773  011F                     	;# 
  6774  011F                     	;# 
  6775  011F                     	;# 
  6776  011F                     	;# 
  6777  011F                     	;# 
  6778  018C                     	;# 
  6779  018D                     	;# 
  6780  018E                     	;# 
  6781  018F                     	;# 
  6782  0190                     	;# 
  6783  0191                     	;# 
  6784  0192                     	;# 
  6785  0196                     	;# 
  6786  0197                     	;# 
  6787  0198                     	;# 
  6788  0199                     	;# 
  6789  019A                     	;# 
  6790  019B                     	;# 
  6791  019C                     	;# 
  6792  020C                     	;# 
  6793  020C                     	;# 
  6794  020D                     	;# 
  6795  020E                     	;# 
  6796  020F                     	;# 
  6797  020F                     	;# 
  6798  0210                     	;# 
  6799  0210                     	;# 
  6800  0211                     	;# 
  6801  0211                     	;# 
  6802  0212                     	;# 
  6803  0212                     	;# 
  6804  0213                     	;# 
  6805  0214                     	;# 
  6806  0215                     	;# 
  6807  0215                     	;# 
  6808  0216                     	;# 
  6809  0216                     	;# 
  6810  0217                     	;# 
  6811  0217                     	;# 
  6812  0218                     	;# 
  6813  0218                     	;# 
  6814  0219                     	;# 
  6815  021A                     	;# 
  6816  021B                     	;# 
  6817  021B                     	;# 
  6818  021C                     	;# 
  6819  021C                     	;# 
  6820  021D                     	;# 
  6821  021D                     	;# 
  6822  021E                     	;# 
  6823  021F                     	;# 
  6824  028C                     	;# 
  6825  028C                     	;# 
  6826  028D                     	;# 
  6827  028D                     	;# 
  6828  028E                     	;# 
  6829  028F                     	;# 
  6830  0290                     	;# 
  6831  0290                     	;# 
  6832  0291                     	;# 
  6833  0292                     	;# 
  6834  0292                     	;# 
  6835  0293                     	;# 
  6836  0293                     	;# 
  6837  0294                     	;# 
  6838  0295                     	;# 
  6839  0296                     	;# 
  6840  0296                     	;# 
  6841  0297                     	;# 
  6842  0298                     	;# 
  6843  0298                     	;# 
  6844  0299                     	;# 
  6845  0299                     	;# 
  6846  029A                     	;# 
  6847  029B                     	;# 
  6848  029C                     	;# 
  6849  029C                     	;# 
  6850  029D                     	;# 
  6851  030C                     	;# 
  6852  030C                     	;# 
  6853  030D                     	;# 
  6854  030E                     	;# 
  6855  030F                     	;# 
  6856  0310                     	;# 
  6857  0310                     	;# 
  6858  0311                     	;# 
  6859  0312                     	;# 
  6860  0313                     	;# 
  6861  0314                     	;# 
  6862  0314                     	;# 
  6863  0315                     	;# 
  6864  0316                     	;# 
  6865  0317                     	;# 
  6866  0318                     	;# 
  6867  0318                     	;# 
  6868  0319                     	;# 
  6869  031A                     	;# 
  6870  031B                     	;# 
  6871  031C                     	;# 
  6872  031C                     	;# 
  6873  031D                     	;# 
  6874  031E                     	;# 
  6875  031F                     	;# 
  6876  038C                     	;# 
  6877  038C                     	;# 
  6878  038D                     	;# 
  6879  038E                     	;# 
  6880  0390                     	;# 
  6881  0390                     	;# 
  6882  0391                     	;# 
  6883  0392                     	;# 
  6884  040C                     	;# 
  6885  040D                     	;# 
  6886  040E                     	;# 
  6887  040F                     	;# 
  6888  0410                     	;# 
  6889  0411                     	;# 
  6890  0416                     	;# 
  6891  0416                     	;# 
  6892  0417                     	;# 
  6893  0418                     	;# 
  6894  0418                     	;# 
  6895  0419                     	;# 
  6896  041A                     	;# 
  6897  041A                     	;# 
  6898  041B                     	;# 
  6899  041C                     	;# 
  6900  041C                     	;# 
  6901  041D                     	;# 
  6902  041E                     	;# 
  6903  041F                     	;# 
  6904  048C                     	;# 
  6905  048C                     	;# 
  6906  048D                     	;# 
  6907  048E                     	;# 
  6908  048F                     	;# 
  6909  048F                     	;# 
  6910  0490                     	;# 
  6911  0491                     	;# 
  6912  0492                     	;# 
  6913  0492                     	;# 
  6914  0493                     	;# 
  6915  0494                     	;# 
  6916  0495                     	;# 
  6917  0495                     	;# 
  6918  0496                     	;# 
  6919  0497                     	;# 
  6920  0498                     	;# 
  6921  0499                     	;# 
  6922  049A                     	;# 
  6923  049B                     	;# 
  6924  049C                     	;# 
  6925  049D                     	;# 
  6926  050C                     	;# 
  6927  050C                     	;# 
  6928  050D                     	;# 
  6929  050E                     	;# 
  6930  050F                     	;# 
  6931  050F                     	;# 
  6932  0510                     	;# 
  6933  0511                     	;# 
  6934  0512                     	;# 
  6935  0512                     	;# 
  6936  0513                     	;# 
  6937  0514                     	;# 
  6938  0515                     	;# 
  6939  0515                     	;# 
  6940  0516                     	;# 
  6941  0517                     	;# 
  6942  0518                     	;# 
  6943  0519                     	;# 
  6944  051A                     	;# 
  6945  051B                     	;# 
  6946  051C                     	;# 
  6947  051D                     	;# 
  6948  058C                     	;# 
  6949  058C                     	;# 
  6950  058D                     	;# 
  6951  058E                     	;# 
  6952  058F                     	;# 
  6953  058F                     	;# 
  6954  0590                     	;# 
  6955  0591                     	;# 
  6956  0592                     	;# 
  6957  0593                     	;# 
  6958  060C                     	;# 
  6959  060D                     	;# 
  6960  060E                     	;# 
  6961  060F                     	;# 
  6962  0610                     	;# 
  6963  0611                     	;# 
  6964  0612                     	;# 
  6965  0613                     	;# 
  6966  0614                     	;# 
  6967  0616                     	;# 
  6968  0617                     	;# 
  6969  0618                     	;# 
  6970  0619                     	;# 
  6971  061A                     	;# 
  6972  061B                     	;# 
  6973  061C                     	;# 
  6974  061D                     	;# 
  6975  061E                     	;# 
  6976  068C                     	;# 
  6977  068D                     	;# 
  6978  068E                     	;# 
  6979  068F                     	;# 
  6980  0690                     	;# 
  6981  0691                     	;# 
  6982  0692                     	;# 
  6983  0693                     	;# 
  6984  0694                     	;# 
  6985  070C                     	;# 
  6986  070D                     	;# 
  6987  070E                     	;# 
  6988  070F                     	;# 
  6989  0710                     	;# 
  6990  0711                     	;# 
  6991  0712                     	;# 
  6992  0713                     	;# 
  6993  0714                     	;# 
  6994  0716                     	;# 
  6995  0717                     	;# 
  6996  0718                     	;# 
  6997  0719                     	;# 
  6998  071A                     	;# 
  6999  071B                     	;# 
  7000  071C                     	;# 
  7001  071D                     	;# 
  7002  071E                     	;# 
  7003  0796                     	;# 
  7004  0797                     	;# 
  7005  0798                     	;# 
  7006  0799                     	;# 
  7007  079A                     	;# 
  7008  079B                     	;# 
  7009  080C                     	;# 
  7010  080D                     	;# 
  7011  080E                     	;# 
  7012  080F                     	;# 
  7013  0810                     	;# 
  7014  0811                     	;# 
  7015  0812                     	;# 
  7016  0813                     	;# 
  7017  0814                     	;# 
  7018  081A                     	;# 
  7019  081B                     	;# 
  7020  081C                     	;# 
  7021  081D                     	;# 
  7022  081E                     	;# 
  7023  081F                     	;# 
  7024  088C                     	;# 
  7025  088D                     	;# 
  7026  088E                     	;# 
  7027  088F                     	;# 
  7028  0890                     	;# 
  7029  0891                     	;# 
  7030  0892                     	;# 
  7031  0893                     	;# 
  7032  0895                     	;# 
  7033  0896                     	;# 
  7034  0897                     	;# 
  7035  0898                     	;# 
  7036  0899                     	;# 
  7037  089A                     	;# 
  7038  089B                     	;# 
  7039  090C                     	;# 
  7040  090E                     	;# 
  7041  090F                     	;# 
  7042  091F                     	;# 
  7043  091F                     	;# 
  7044  098F                     	;# 
  7045  098F                     	;# 
  7046  0990                     	;# 
  7047  0991                     	;# 
  7048  0992                     	;# 
  7049  0993                     	;# 
  7050  0994                     	;# 
  7051  0995                     	;# 
  7052  0996                     	;# 
  7053  0997                     	;# 
  7054  0E0F                     	;# 
  7055  0E10                     	;# 
  7056  0E11                     	;# 
  7057  0E12                     	;# 
  7058  0E13                     	;# 
  7059  0E14                     	;# 
  7060  0E15                     	;# 
  7061  0E16                     	;# 
  7062  0E17                     	;# 
  7063  0E18                     	;# 
  7064  0E19                     	;# 
  7065  0E1A                     	;# 
  7066  0E1B                     	;# 
  7067  0E1C                     	;# 
  7068  0E1D                     	;# 
  7069  0E1E                     	;# 
  7070  0E1F                     	;# 
  7071  0E20                     	;# 
  7072  0E21                     	;# 
  7073  0E22                     	;# 
  7074  0E23                     	;# 
  7075  0E24                     	;# 
  7076  0E25                     	;# 
  7077  0E26                     	;# 
  7078  0E27                     	;# 
  7079  0E28                     	;# 
  7080  0E29                     	;# 
  7081  0E2A                     	;# 
  7082  0E2B                     	;# 
  7083  0E2C                     	;# 
  7084  0E2D                     	;# 
  7085  0E2E                     	;# 
  7086  0E2F                     	;# 
  7087  0E30                     	;# 
  7088  0E31                     	;# 
  7089  0E32                     	;# 
  7090  0E33                     	;# 
  7091  0E34                     	;# 
  7092  0E35                     	;# 
  7093  0E36                     	;# 
  7094  0E37                     	;# 
  7095  0E8F                     	;# 
  7096  0E90                     	;# 
  7097  0E91                     	;# 
  7098  0E92                     	;# 
  7099  0E93                     	;# 
  7100  0E94                     	;# 
  7101  0E95                     	;# 
  7102  0E96                     	;# 
  7103  0E97                     	;# 
  7104  0E9C                     	;# 
  7105  0E9D                     	;# 
  7106  0E9E                     	;# 
  7107  0EA1                     	;# 
  7108  0EA2                     	;# 
  7109  0EA3                     	;# 
  7110  0EA4                     	;# 
  7111  0EA5                     	;# 
  7112  0EA9                     	;# 
  7113  0EAA                     	;# 
  7114  0EAB                     	;# 
  7115  0EAC                     	;# 
  7116  0EB1                     	;# 
  7117  0EB2                     	;# 
  7118  0EB3                     	;# 
  7119  0EB8                     	;# 
  7120  0EB9                     	;# 
  7121  0EBA                     	;# 
  7122  0EBB                     	;# 
  7123  0EBC                     	;# 
  7124  0EBD                     	;# 
  7125  0EBE                     	;# 
  7126  0EC3                     	;# 
  7127  0EC5                     	;# 
  7128  0EC6                     	;# 
  7129  0EC7                     	;# 
  7130  0EC8                     	;# 
  7131  0EC9                     	;# 
  7132  0ECA                     	;# 
  7133  0ECB                     	;# 
  7134  0ECC                     	;# 
  7135  0F10                     	;# 
  7136  0F11                     	;# 
  7137  0F12                     	;# 
  7138  0F13                     	;# 
  7139  0F14                     	;# 
  7140  0F15                     	;# 
  7141  0F16                     	;# 
  7142  0F17                     	;# 
  7143  0F18                     	;# 
  7144  0F19                     	;# 
  7145  0F1A                     	;# 
  7146  0F1B                     	;# 
  7147  0F1C                     	;# 
  7148  0F1D                     	;# 
  7149  0F1E                     	;# 
  7150  0F1F                     	;# 
  7151  0F20                     	;# 
  7152  0F21                     	;# 
  7153  0F22                     	;# 
  7154  0F23                     	;# 
  7155  0F24                     	;# 
  7156  0F25                     	;# 
  7157  0F26                     	;# 
  7158  0F27                     	;# 
  7159  0F28                     	;# 
  7160  0F29                     	;# 
  7161  0F2A                     	;# 
  7162  0F2B                     	;# 
  7163  0F2C                     	;# 
  7164  0F2D                     	;# 
  7165  0F2E                     	;# 
  7166  0F2F                     	;# 
  7167  0F30                     	;# 
  7168  0F31                     	;# 
  7169  0F32                     	;# 
  7170  0F38                     	;# 
  7171  0F39                     	;# 
  7172  0F3A                     	;# 
  7173  0F3B                     	;# 
  7174  0F3C                     	;# 
  7175  0F3D                     	;# 
  7176  0F3E                     	;# 
  7177  0F3F                     	;# 
  7178  0F40                     	;# 
  7179  0F41                     	;# 
  7180  0F43                     	;# 
  7181  0F44                     	;# 
  7182  0F45                     	;# 
  7183  0F46                     	;# 
  7184  0F47                     	;# 
  7185  0F48                     	;# 
  7186  0F49                     	;# 
  7187  0F4A                     	;# 
  7188  0F4B                     	;# 
  7189  0F4C                     	;# 
  7190  0F4E                     	;# 
  7191  0F4F                     	;# 
  7192  0F50                     	;# 
  7193  0F51                     	;# 
  7194  0F52                     	;# 
  7195  0F53                     	;# 
  7196  0F54                     	;# 
  7197  0F55                     	;# 
  7198  0F56                     	;# 
  7199  0F57                     	;# 
  7200  0F59                     	;# 
  7201  0F5A                     	;# 
  7202  0F5B                     	;# 
  7203  0F5C                     	;# 
  7204  0F5D                     	;# 
  7205  0F61                     	;# 
  7206  0F62                     	;# 
  7207  0F64                     	;# 
  7208  0F65                     	;# 
  7209  0F66                     	;# 
  7210  0F67                     	;# 
  7211  0F68                     	;# 
  7212  0F69                     	;# 
  7213  0F6A                     	;# 
  7214  0F6B                     	;# 
  7215  0F6C                     	;# 
  7216  0F6D                     	;# 
  7217  0FE4                     	;# 
  7218  0FE5                     	;# 
  7219  0FE6                     	;# 
  7220  0FE7                     	;# 
  7221  0FE8                     	;# 
  7222  0FE9                     	;# 
  7223  0FEA                     	;# 
  7224  0FEB                     	;# 
  7225  0FED                     	;# 
  7226  0FEE                     	;# 
  7227  0FEF                     	;# 
  7228  0000                     	;# 
  7229  0001                     	;# 
  7230  0002                     	;# 
  7231  0003                     	;# 
  7232  0004                     	;# 
  7233  0005                     	;# 
  7234  0006                     	;# 
  7235  0007                     	;# 
  7236  0008                     	;# 
  7237  0009                     	;# 
  7238  000A                     	;# 
  7239  000B                     	;# 
  7240  000C                     	;# 
  7241  000D                     	;# 
  7242  000E                     	;# 
  7243  000F                     	;# 
  7244  0010                     	;# 
  7245  0011                     	;# 
  7246  0012                     	;# 
  7247  0013                     	;# 
  7248  0014                     	;# 
  7249  0015                     	;# 
  7250  0016                     	;# 
  7251  0017                     	;# 
  7252  0018                     	;# 
  7253  0019                     	;# 
  7254  001A                     	;# 
  7255  001C                     	;# 
  7256  001C                     	;# 
  7257  001D                     	;# 
  7258  001D                     	;# 
  7259  001E                     	;# 
  7260  001F                     	;# 
  7261  008C                     	;# 
  7262  008C                     	;# 
  7263  008D                     	;# 
  7264  008E                     	;# 
  7265  008E                     	;# 
  7266  008F                     	;# 
  7267  0090                     	;# 
  7268  0090                     	;# 
  7269  0091                     	;# 
  7270  0093                     	;# 
  7271  0094                     	;# 
  7272  0095                     	;# 
  7273  0096                     	;# 
  7274  0097                     	;# 
  7275  0098                     	;# 
  7276  0099                     	;# 
  7277  009A                     	;# 
  7278  009B                     	;# 
  7279  009C                     	;# 
  7280  009D                     	;# 
  7281  009E                     	;# 
  7282  010C                     	;# 
  7283  010D                     	;# 
  7284  010E                     	;# 
  7285  010E                     	;# 
  7286  010F                     	;# 
  7287  0110                     	;# 
  7288  0110                     	;# 
  7289  0111                     	;# 
  7290  0112                     	;# 
  7291  0112                     	;# 
  7292  0113                     	;# 
  7293  0114                     	;# 
  7294  0114                     	;# 
  7295  0115                     	;# 
  7296  0116                     	;# 
  7297  0116                     	;# 
  7298  0117                     	;# 
  7299  0119                     	;# 
  7300  0119                     	;# 
  7301  0119                     	;# 
  7302  011A                     	;# 
  7303  011A                     	;# 
  7304  011A                     	;# 
  7305  011B                     	;# 
  7306  011B                     	;# 
  7307  011B                     	;# 
  7308  011B                     	;# 
  7309  011B                     	;# 
  7310  011C                     	;# 
  7311  011C                     	;# 
  7312  011C                     	;# 
  7313  011D                     	;# 
  7314  011D                     	;# 
  7315  011D                     	;# 
  7316  011E                     	;# 
  7317  011E                     	;# 
  7318  011E                     	;# 
  7319  011F                     	;# 
  7320  011F                     	;# 
  7321  011F                     	;# 
  7322  011F                     	;# 
  7323  011F                     	;# 
  7324  018C                     	;# 
  7325  018D                     	;# 
  7326  018E                     	;# 
  7327  018F                     	;# 
  7328  0190                     	;# 
  7329  0191                     	;# 
  7330  0192                     	;# 
  7331  0196                     	;# 
  7332  0197                     	;# 
  7333  0198                     	;# 
  7334  0199                     	;# 
  7335  019A                     	;# 
  7336  019B                     	;# 
  7337  019C                     	;# 
  7338  020C                     	;# 
  7339  020C                     	;# 
  7340  020D                     	;# 
  7341  020E                     	;# 
  7342  020F                     	;# 
  7343  020F                     	;# 
  7344  0210                     	;# 
  7345  0210                     	;# 
  7346  0211                     	;# 
  7347  0211                     	;# 
  7348  0212                     	;# 
  7349  0212                     	;# 
  7350  0213                     	;# 
  7351  0214                     	;# 
  7352  0215                     	;# 
  7353  0215                     	;# 
  7354  0216                     	;# 
  7355  0216                     	;# 
  7356  0217                     	;# 
  7357  0217                     	;# 
  7358  0218                     	;# 
  7359  0218                     	;# 
  7360  0219                     	;# 
  7361  021A                     	;# 
  7362  021B                     	;# 
  7363  021B                     	;# 
  7364  021C                     	;# 
  7365  021C                     	;# 
  7366  021D                     	;# 
  7367  021D                     	;# 
  7368  021E                     	;# 
  7369  021F                     	;# 
  7370  028C                     	;# 
  7371  028C                     	;# 
  7372  028D                     	;# 
  7373  028D                     	;# 
  7374  028E                     	;# 
  7375  028F                     	;# 
  7376  0290                     	;# 
  7377  0290                     	;# 
  7378  0291                     	;# 
  7379  0292                     	;# 
  7380  0292                     	;# 
  7381  0293                     	;# 
  7382  0293                     	;# 
  7383  0294                     	;# 
  7384  0295                     	;# 
  7385  0296                     	;# 
  7386  0296                     	;# 
  7387  0297                     	;# 
  7388  0298                     	;# 
  7389  0298                     	;# 
  7390  0299                     	;# 
  7391  0299                     	;# 
  7392  029A                     	;# 
  7393  029B                     	;# 
  7394  029C                     	;# 
  7395  029C                     	;# 
  7396  029D                     	;# 
  7397  030C                     	;# 
  7398  030C                     	;# 
  7399  030D                     	;# 
  7400  030E                     	;# 
  7401  030F                     	;# 
  7402  0310                     	;# 
  7403  0310                     	;# 
  7404  0311                     	;# 
  7405  0312                     	;# 
  7406  0313                     	;# 
  7407  0314                     	;# 
  7408  0314                     	;# 
  7409  0315                     	;# 
  7410  0316                     	;# 
  7411  0317                     	;# 
  7412  0318                     	;# 
  7413  0318                     	;# 
  7414  0319                     	;# 
  7415  031A                     	;# 
  7416  031B                     	;# 
  7417  031C                     	;# 
  7418  031C                     	;# 
  7419  031D                     	;# 
  7420  031E                     	;# 
  7421  031F                     	;# 
  7422  038C                     	;# 
  7423  038C                     	;# 
  7424  038D                     	;# 
  7425  038E                     	;# 
  7426  0390                     	;# 
  7427  0390                     	;# 
  7428  0391                     	;# 
  7429  0392                     	;# 
  7430  040C                     	;# 
  7431  040D                     	;# 
  7432  040E                     	;# 
  7433  040F                     	;# 
  7434  0410                     	;# 
  7435  0411                     	;# 
  7436  0416                     	;# 
  7437  0416                     	;# 
  7438  0417                     	;# 
  7439  0418                     	;# 
  7440  0418                     	;# 
  7441  0419                     	;# 
  7442  041A                     	;# 
  7443  041A                     	;# 
  7444  041B                     	;# 
  7445  041C                     	;# 
  7446  041C                     	;# 
  7447  041D                     	;# 
  7448  041E                     	;# 
  7449  041F                     	;# 
  7450  048C                     	;# 
  7451  048C                     	;# 
  7452  048D                     	;# 
  7453  048E                     	;# 
  7454  048F                     	;# 
  7455  048F                     	;# 
  7456  0490                     	;# 
  7457  0491                     	;# 
  7458  0492                     	;# 
  7459  0492                     	;# 
  7460  0493                     	;# 
  7461  0494                     	;# 
  7462  0495                     	;# 
  7463  0495                     	;# 
  7464  0496                     	;# 
  7465  0497                     	;# 
  7466  0498                     	;# 
  7467  0499                     	;# 
  7468  049A                     	;# 
  7469  049B                     	;# 
  7470  049C                     	;# 
  7471  049D                     	;# 
  7472  050C                     	;# 
  7473  050C                     	;# 
  7474  050D                     	;# 
  7475  050E                     	;# 
  7476  050F                     	;# 
  7477  050F                     	;# 
  7478  0510                     	;# 
  7479  0511                     	;# 
  7480  0512                     	;# 
  7481  0512                     	;# 
  7482  0513                     	;# 
  7483  0514                     	;# 
  7484  0515                     	;# 
  7485  0515                     	;# 
  7486  0516                     	;# 
  7487  0517                     	;# 
  7488  0518                     	;# 
  7489  0519                     	;# 
  7490  051A                     	;# 
  7491  051B                     	;# 
  7492  051C                     	;# 
  7493  051D                     	;# 
  7494  058C                     	;# 
  7495  058C                     	;# 
  7496  058D                     	;# 
  7497  058E                     	;# 
  7498  058F                     	;# 
  7499  058F                     	;# 
  7500  0590                     	;# 
  7501  0591                     	;# 
  7502  0592                     	;# 
  7503  0593                     	;# 
  7504  060C                     	;# 
  7505  060D                     	;# 
  7506  060E                     	;# 
  7507  060F                     	;# 
  7508  0610                     	;# 
  7509  0611                     	;# 
  7510  0612                     	;# 
  7511  0613                     	;# 
  7512  0614                     	;# 
  7513  0616                     	;# 
  7514  0617                     	;# 
  7515  0618                     	;# 
  7516  0619                     	;# 
  7517  061A                     	;# 
  7518  061B                     	;# 
  7519  061C                     	;# 
  7520  061D                     	;# 
  7521  061E                     	;# 
  7522  068C                     	;# 
  7523  068D                     	;# 
  7524  068E                     	;# 
  7525  068F                     	;# 
  7526  0690                     	;# 
  7527  0691                     	;# 
  7528  0692                     	;# 
  7529  0693                     	;# 
  7530  0694                     	;# 
  7531  070C                     	;# 
  7532  070D                     	;# 
  7533  070E                     	;# 
  7534  070F                     	;# 
  7535  0710                     	;# 
  7536  0711                     	;# 
  7537  0712                     	;# 
  7538  0713                     	;# 
  7539  0714                     	;# 
  7540  0716                     	;# 
  7541  0717                     	;# 
  7542  0718                     	;# 
  7543  0719                     	;# 
  7544  071A                     	;# 
  7545  071B                     	;# 
  7546  071C                     	;# 
  7547  071D                     	;# 
  7548  071E                     	;# 
  7549  0796                     	;# 
  7550  0797                     	;# 
  7551  0798                     	;# 
  7552  0799                     	;# 
  7553  079A                     	;# 
  7554  079B                     	;# 
  7555  080C                     	;# 
  7556  080D                     	;# 
  7557  080E                     	;# 
  7558  080F                     	;# 
  7559  0810                     	;# 
  7560  0811                     	;# 
  7561  0812                     	;# 
  7562  0813                     	;# 
  7563  0814                     	;# 
  7564  081A                     	;# 
  7565  081B                     	;# 
  7566  081C                     	;# 
  7567  081D                     	;# 
  7568  081E                     	;# 
  7569  081F                     	;# 
  7570  088C                     	;# 
  7571  088D                     	;# 
  7572  088E                     	;# 
  7573  088F                     	;# 
  7574  0890                     	;# 
  7575  0891                     	;# 
  7576  0892                     	;# 
  7577  0893                     	;# 
  7578  0895                     	;# 
  7579  0896                     	;# 
  7580  0897                     	;# 
  7581  0898                     	;# 
  7582  0899                     	;# 
  7583  089A                     	;# 
  7584  089B                     	;# 
  7585  090C                     	;# 
  7586  090E                     	;# 
  7587  090F                     	;# 
  7588  091F                     	;# 
  7589  091F                     	;# 
  7590  098F                     	;# 
  7591  098F                     	;# 
  7592  0990                     	;# 
  7593  0991                     	;# 
  7594  0992                     	;# 
  7595  0993                     	;# 
  7596  0994                     	;# 
  7597  0995                     	;# 
  7598  0996                     	;# 
  7599  0997                     	;# 
  7600  0E0F                     	;# 
  7601  0E10                     	;# 
  7602  0E11                     	;# 
  7603  0E12                     	;# 
  7604  0E13                     	;# 
  7605  0E14                     	;# 
  7606  0E15                     	;# 
  7607  0E16                     	;# 
  7608  0E17                     	;# 
  7609  0E18                     	;# 
  7610  0E19                     	;# 
  7611  0E1A                     	;# 
  7612  0E1B                     	;# 
  7613  0E1C                     	;# 
  7614  0E1D                     	;# 
  7615  0E1E                     	;# 
  7616  0E1F                     	;# 
  7617  0E20                     	;# 
  7618  0E21                     	;# 
  7619  0E22                     	;# 
  7620  0E23                     	;# 
  7621  0E24                     	;# 
  7622  0E25                     	;# 
  7623  0E26                     	;# 
  7624  0E27                     	;# 
  7625  0E28                     	;# 
  7626  0E29                     	;# 
  7627  0E2A                     	;# 
  7628  0E2B                     	;# 
  7629  0E2C                     	;# 
  7630  0E2D                     	;# 
  7631  0E2E                     	;# 
  7632  0E2F                     	;# 
  7633  0E30                     	;# 
  7634  0E31                     	;# 
  7635  0E32                     	;# 
  7636  0E33                     	;# 
  7637  0E34                     	;# 
  7638  0E35                     	;# 
  7639  0E36                     	;# 
  7640  0E37                     	;# 
  7641  0E8F                     	;# 
  7642  0E90                     	;# 
  7643  0E91                     	;# 
  7644  0E92                     	;# 
  7645  0E93                     	;# 
  7646  0E94                     	;# 
  7647  0E95                     	;# 
  7648  0E96                     	;# 
  7649  0E97                     	;# 
  7650  0E9C                     	;# 
  7651  0E9D                     	;# 
  7652  0E9E                     	;# 
  7653  0EA1                     	;# 
  7654  0EA2                     	;# 
  7655  0EA3                     	;# 
  7656  0EA4                     	;# 
  7657  0EA5                     	;# 
  7658  0EA9                     	;# 
  7659  0EAA                     	;# 
  7660  0EAB                     	;# 
  7661  0EAC                     	;# 
  7662  0EB1                     	;# 
  7663  0EB2                     	;# 
  7664  0EB3                     	;# 
  7665  0EB8                     	;# 
  7666  0EB9                     	;# 
  7667  0EBA                     	;# 
  7668  0EBB                     	;# 
  7669  0EBC                     	;# 
  7670  0EBD                     	;# 
  7671  0EBE                     	;# 
  7672  0EC3                     	;# 
  7673  0EC5                     	;# 
  7674  0EC6                     	;# 
  7675  0EC7                     	;# 
  7676  0EC8                     	;# 
  7677  0EC9                     	;# 
  7678  0ECA                     	;# 
  7679  0ECB                     	;# 
  7680  0ECC                     	;# 
  7681  0F10                     	;# 
  7682  0F11                     	;# 
  7683  0F12                     	;# 
  7684  0F13                     	;# 
  7685  0F14                     	;# 
  7686  0F15                     	;# 
  7687  0F16                     	;# 
  7688  0F17                     	;# 
  7689  0F18                     	;# 
  7690  0F19                     	;# 
  7691  0F1A                     	;# 
  7692  0F1B                     	;# 
  7693  0F1C                     	;# 
  7694  0F1D                     	;# 
  7695  0F1E                     	;# 
  7696  0F1F                     	;# 
  7697  0F20                     	;# 
  7698  0F21                     	;# 
  7699  0F22                     	;# 
  7700  0F23                     	;# 
  7701  0F24                     	;# 
  7702  0F25                     	;# 
  7703  0F26                     	;# 
  7704  0F27                     	;# 
  7705  0F28                     	;# 
  7706  0F29                     	;# 
  7707  0F2A                     	;# 
  7708  0F2B                     	;# 
  7709  0F2C                     	;# 
  7710  0F2D                     	;# 
  7711  0F2E                     	;# 
  7712  0F2F                     	;# 
  7713  0F30                     	;# 
  7714  0F31                     	;# 
  7715  0F32                     	;# 
  7716  0F38                     	;# 
  7717  0F39                     	;# 
  7718  0F3A                     	;# 
  7719  0F3B                     	;# 
  7720  0F3C                     	;# 
  7721  0F3D                     	;# 
  7722  0F3E                     	;# 
  7723  0F3F                     	;# 
  7724  0F40                     	;# 
  7725  0F41                     	;# 
  7726  0F43                     	;# 
  7727  0F44                     	;# 
  7728  0F45                     	;# 
  7729  0F46                     	;# 
  7730  0F47                     	;# 
  7731  0F48                     	;# 
  7732  0F49                     	;# 
  7733  0F4A                     	;# 
  7734  0F4B                     	;# 
  7735  0F4C                     	;# 
  7736  0F4E                     	;# 
  7737  0F4F                     	;# 
  7738  0F50                     	;# 
  7739  0F51                     	;# 
  7740  0F52                     	;# 
  7741  0F53                     	;# 
  7742  0F54                     	;# 
  7743  0F55                     	;# 
  7744  0F56                     	;# 
  7745  0F57                     	;# 
  7746  0F59                     	;# 
  7747  0F5A                     	;# 
  7748  0F5B                     	;# 
  7749  0F5C                     	;# 
  7750  0F5D                     	;# 
  7751  0F61                     	;# 
  7752  0F62                     	;# 
  7753  0F64                     	;# 
  7754  0F65                     	;# 
  7755  0F66                     	;# 
  7756  0F67                     	;# 
  7757  0F68                     	;# 
  7758  0F69                     	;# 
  7759  0F6A                     	;# 
  7760  0F6B                     	;# 
  7761  0F6C                     	;# 
  7762  0F6D                     	;# 
  7763  0FE4                     	;# 
  7764  0FE5                     	;# 
  7765  0FE6                     	;# 
  7766  0FE7                     	;# 
  7767  0FE8                     	;# 
  7768  0FE9                     	;# 
  7769  0FEA                     	;# 
  7770  0FEB                     	;# 
  7771  0FED                     	;# 
  7772  0FEE                     	;# 
  7773  0FEF                     	;# 
  7774  0000                     	;# 
  7775  0001                     	;# 
  7776  0002                     	;# 
  7777  0003                     	;# 
  7778  0004                     	;# 
  7779  0005                     	;# 
  7780  0006                     	;# 
  7781  0007                     	;# 
  7782  0008                     	;# 
  7783  0009                     	;# 
  7784  000A                     	;# 
  7785  000B                     	;# 
  7786  000C                     	;# 
  7787  000D                     	;# 
  7788  000E                     	;# 
  7789  000F                     	;# 
  7790  0010                     	;# 
  7791  0011                     	;# 
  7792  0012                     	;# 
  7793  0013                     	;# 
  7794  0014                     	;# 
  7795  0015                     	;# 
  7796  0016                     	;# 
  7797  0017                     	;# 
  7798  0018                     	;# 
  7799  0019                     	;# 
  7800  001A                     	;# 
  7801  001C                     	;# 
  7802  001C                     	;# 
  7803  001D                     	;# 
  7804  001D                     	;# 
  7805  001E                     	;# 
  7806  001F                     	;# 
  7807  008C                     	;# 
  7808  008C                     	;# 
  7809  008D                     	;# 
  7810  008E                     	;# 
  7811  008E                     	;# 
  7812  008F                     	;# 
  7813  0090                     	;# 
  7814  0090                     	;# 
  7815  0091                     	;# 
  7816  0093                     	;# 
  7817  0094                     	;# 
  7818  0095                     	;# 
  7819  0096                     	;# 
  7820  0097                     	;# 
  7821  0098                     	;# 
  7822  0099                     	;# 
  7823  009A                     	;# 
  7824  009B                     	;# 
  7825  009C                     	;# 
  7826  009D                     	;# 
  7827  009E                     	;# 
  7828  010C                     	;# 
  7829  010D                     	;# 
  7830  010E                     	;# 
  7831  010E                     	;# 
  7832  010F                     	;# 
  7833  0110                     	;# 
  7834  0110                     	;# 
  7835  0111                     	;# 
  7836  0112                     	;# 
  7837  0112                     	;# 
  7838  0113                     	;# 
  7839  0114                     	;# 
  7840  0114                     	;# 
  7841  0115                     	;# 
  7842  0116                     	;# 
  7843  0116                     	;# 
  7844  0117                     	;# 
  7845  0119                     	;# 
  7846  0119                     	;# 
  7847  0119                     	;# 
  7848  011A                     	;# 
  7849  011A                     	;# 
  7850  011A                     	;# 
  7851  011B                     	;# 
  7852  011B                     	;# 
  7853  011B                     	;# 
  7854  011B                     	;# 
  7855  011B                     	;# 
  7856  011C                     	;# 
  7857  011C                     	;# 
  7858  011C                     	;# 
  7859  011D                     	;# 
  7860  011D                     	;# 
  7861  011D                     	;# 
  7862  011E                     	;# 
  7863  011E                     	;# 
  7864  011E                     	;# 
  7865  011F                     	;# 
  7866  011F                     	;# 
  7867  011F                     	;# 
  7868  011F                     	;# 
  7869  011F                     	;# 
  7870  018C                     	;# 
  7871  018D                     	;# 
  7872  018E                     	;# 
  7873  018F                     	;# 
  7874  0190                     	;# 
  7875  0191                     	;# 
  7876  0192                     	;# 
  7877  0196                     	;# 
  7878  0197                     	;# 
  7879  0198                     	;# 
  7880  0199                     	;# 
  7881  019A                     	;# 
  7882  019B                     	;# 
  7883  019C                     	;# 
  7884  020C                     	;# 
  7885  020C                     	;# 
  7886  020D                     	;# 
  7887  020E                     	;# 
  7888  020F                     	;# 
  7889  020F                     	;# 
  7890  0210                     	;# 
  7891  0210                     	;# 
  7892  0211                     	;# 
  7893  0211                     	;# 
  7894  0212                     	;# 
  7895  0212                     	;# 
  7896  0213                     	;# 
  7897  0214                     	;# 
  7898  0215                     	;# 
  7899  0215                     	;# 
  7900  0216                     	;# 
  7901  0216                     	;# 
  7902  0217                     	;# 
  7903  0217                     	;# 
  7904  0218                     	;# 
  7905  0218                     	;# 
  7906  0219                     	;# 
  7907  021A                     	;# 
  7908  021B                     	;# 
  7909  021B                     	;# 
  7910  021C                     	;# 
  7911  021C                     	;# 
  7912  021D                     	;# 
  7913  021D                     	;# 
  7914  021E                     	;# 
  7915  021F                     	;# 
  7916  028C                     	;# 
  7917  028C                     	;# 
  7918  028D                     	;# 
  7919  028D                     	;# 
  7920  028E                     	;# 
  7921  028F                     	;# 
  7922  0290                     	;# 
  7923  0290                     	;# 
  7924  0291                     	;# 
  7925  0292                     	;# 
  7926  0292                     	;# 
  7927  0293                     	;# 
  7928  0293                     	;# 
  7929  0294                     	;# 
  7930  0295                     	;# 
  7931  0296                     	;# 
  7932  0296                     	;# 
  7933  0297                     	;# 
  7934  0298                     	;# 
  7935  0298                     	;# 
  7936  0299                     	;# 
  7937  0299                     	;# 
  7938  029A                     	;# 
  7939  029B                     	;# 
  7940  029C                     	;# 
  7941  029C                     	;# 
  7942  029D                     	;# 
  7943  030C                     	;# 
  7944  030C                     	;# 
  7945  030D                     	;# 
  7946  030E                     	;# 
  7947  030F                     	;# 
  7948  0310                     	;# 
  7949  0310                     	;# 
  7950  0311                     	;# 
  7951  0312                     	;# 
  7952  0313                     	;# 
  7953  0314                     	;# 
  7954  0314                     	;# 
  7955  0315                     	;# 
  7956  0316                     	;# 
  7957  0317                     	;# 
  7958  0318                     	;# 
  7959  0318                     	;# 
  7960  0319                     	;# 
  7961  031A                     	;# 
  7962  031B                     	;# 
  7963  031C                     	;# 
  7964  031C                     	;# 
  7965  031D                     	;# 
  7966  031E                     	;# 
  7967  031F                     	;# 
  7968  038C                     	;# 
  7969  038C                     	;# 
  7970  038D                     	;# 
  7971  038E                     	;# 
  7972  0390                     	;# 
  7973  0390                     	;# 
  7974  0391                     	;# 
  7975  0392                     	;# 
  7976  040C                     	;# 
  7977  040D                     	;# 
  7978  040E                     	;# 
  7979  040F                     	;# 
  7980  0410                     	;# 
  7981  0411                     	;# 
  7982  0416                     	;# 
  7983  0416                     	;# 
  7984  0417                     	;# 
  7985  0418                     	;# 
  7986  0418                     	;# 
  7987  0419                     	;# 
  7988  041A                     	;# 
  7989  041A                     	;# 
  7990  041B                     	;# 
  7991  041C                     	;# 
  7992  041C                     	;# 
  7993  041D                     	;# 
  7994  041E                     	;# 
  7995  041F                     	;# 
  7996  048C                     	;# 
  7997  048C                     	;# 
  7998  048D                     	;# 
  7999  048E                     	;# 
  8000  048F                     	;# 
  8001  048F                     	;# 
  8002  0490                     	;# 
  8003  0491                     	;# 
  8004  0492                     	;# 
  8005  0492                     	;# 
  8006  0493                     	;# 
  8007  0494                     	;# 
  8008  0495                     	;# 
  8009  0495                     	;# 
  8010  0496                     	;# 
  8011  0497                     	;# 
  8012  0498                     	;# 
  8013  0499                     	;# 
  8014  049A                     	;# 
  8015  049B                     	;# 
  8016  049C                     	;# 
  8017  049D                     	;# 
  8018  050C                     	;# 
  8019  050C                     	;# 
  8020  050D                     	;# 
  8021  050E                     	;# 
  8022  050F                     	;# 
  8023  050F                     	;# 
  8024  0510                     	;# 
  8025  0511                     	;# 
  8026  0512                     	;# 
  8027  0512                     	;# 
  8028  0513                     	;# 
  8029  0514                     	;# 
  8030  0515                     	;# 
  8031  0515                     	;# 
  8032  0516                     	;# 
  8033  0517                     	;# 
  8034  0518                     	;# 
  8035  0519                     	;# 
  8036  051A                     	;# 
  8037  051B                     	;# 
  8038  051C                     	;# 
  8039  051D                     	;# 
  8040  058C                     	;# 
  8041  058C                     	;# 
  8042  058D                     	;# 
  8043  058E                     	;# 
  8044  058F                     	;# 
  8045  058F                     	;# 
  8046  0590                     	;# 
  8047  0591                     	;# 
  8048  0592                     	;# 
  8049  0593                     	;# 
  8050  060C                     	;# 
  8051  060D                     	;# 
  8052  060E                     	;# 
  8053  060F                     	;# 
  8054  0610                     	;# 
  8055  0611                     	;# 
  8056  0612                     	;# 
  8057  0613                     	;# 
  8058  0614                     	;# 
  8059  0616                     	;# 
  8060  0617                     	;# 
  8061  0618                     	;# 
  8062  0619                     	;# 
  8063  061A                     	;# 
  8064  061B                     	;# 
  8065  061C                     	;# 
  8066  061D                     	;# 
  8067  061E                     	;# 
  8068  068C                     	;# 
  8069  068D                     	;# 
  8070  068E                     	;# 
  8071  068F                     	;# 
  8072  0690                     	;# 
  8073  0691                     	;# 
  8074  0692                     	;# 
  8075  0693                     	;# 
  8076  0694                     	;# 
  8077  070C                     	;# 
  8078  070D                     	;# 
  8079  070E                     	;# 
  8080  070F                     	;# 
  8081  0710                     	;# 
  8082  0711                     	;# 
  8083  0712                     	;# 
  8084  0713                     	;# 
  8085  0714                     	;# 
  8086  0716                     	;# 
  8087  0717                     	;# 
  8088  0718                     	;# 
  8089  0719                     	;# 
  8090  071A                     	;# 
  8091  071B                     	;# 
  8092  071C                     	;# 
  8093  071D                     	;# 
  8094  071E                     	;# 
  8095  0796                     	;# 
  8096  0797                     	;# 
  8097  0798                     	;# 
  8098  0799                     	;# 
  8099  079A                     	;# 
  8100  079B                     	;# 
  8101  080C                     	;# 
  8102  080D                     	;# 
  8103  080E                     	;# 
  8104  080F                     	;# 
  8105  0810                     	;# 
  8106  0811                     	;# 
  8107  0812                     	;# 
  8108  0813                     	;# 
  8109  0814                     	;# 
  8110  081A                     	;# 
  8111  081B                     	;# 
  8112  081C                     	;# 
  8113  081D                     	;# 
  8114  081E                     	;# 
  8115  081F                     	;# 
  8116  088C                     	;# 
  8117  088D                     	;# 
  8118  088E                     	;# 
  8119  088F                     	;# 
  8120  0890                     	;# 
  8121  0891                     	;# 
  8122  0892                     	;# 
  8123  0893                     	;# 
  8124  0895                     	;# 
  8125  0896                     	;# 
  8126  0897                     	;# 
  8127  0898                     	;# 
  8128  0899                     	;# 
  8129  089A                     	;# 
  8130  089B                     	;# 
  8131  090C                     	;# 
  8132  090E                     	;# 
  8133  090F                     	;# 
  8134  091F                     	;# 
  8135  091F                     	;# 
  8136  098F                     	;# 
  8137  098F                     	;# 
  8138  0990                     	;# 
  8139  0991                     	;# 
  8140  0992                     	;# 
  8141  0993                     	;# 
  8142  0994                     	;# 
  8143  0995                     	;# 
  8144  0996                     	;# 
  8145  0997                     	;# 
  8146  0E0F                     	;# 
  8147  0E10                     	;# 
  8148  0E11                     	;# 
  8149  0E12                     	;# 
  8150  0E13                     	;# 
  8151  0E14                     	;# 
  8152  0E15                     	;# 
  8153  0E16                     	;# 
  8154  0E17                     	;# 
  8155  0E18                     	;# 
  8156  0E19                     	;# 
  8157  0E1A                     	;# 
  8158  0E1B                     	;# 
  8159  0E1C                     	;# 
  8160  0E1D                     	;# 
  8161  0E1E                     	;# 
  8162  0E1F                     	;# 
  8163  0E20                     	;# 
  8164  0E21                     	;# 
  8165  0E22                     	;# 
  8166  0E23                     	;# 
  8167  0E24                     	;# 
  8168  0E25                     	;# 
  8169  0E26                     	;# 
  8170  0E27                     	;# 
  8171  0E28                     	;# 
  8172  0E29                     	;# 
  8173  0E2A                     	;# 
  8174  0E2B                     	;# 
  8175  0E2C                     	;# 
  8176  0E2D                     	;# 
  8177  0E2E                     	;# 
  8178  0E2F                     	;# 
  8179  0E30                     	;# 
  8180  0E31                     	;# 
  8181  0E32                     	;# 
  8182  0E33                     	;# 
  8183  0E34                     	;# 
  8184  0E35                     	;# 
  8185  0E36                     	;# 
  8186  0E37                     	;# 
  8187  0E8F                     	;# 
  8188  0E90                     	;# 
  8189  0E91                     	;# 
  8190  0E92                     	;# 
  8191  0E93                     	;# 
  8192  0E94                     	;# 
  8193  0E95                     	;# 
  8194  0E96                     	;# 
  8195  0E97                     	;# 
  8196  0E9C                     	;# 
  8197  0E9D                     	;# 
  8198  0E9E                     	;# 
  8199  0EA1                     	;# 
  8200  0EA2                     	;# 
  8201  0EA3                     	;# 
  8202  0EA4                     	;# 
  8203  0EA5                     	;# 
  8204  0EA9                     	;# 
  8205  0EAA                     	;# 
  8206  0EAB                     	;# 
  8207  0EAC                     	;# 
  8208  0EB1                     	;# 
  8209  0EB2                     	;# 
  8210  0EB3                     	;# 
  8211  0EB8                     	;# 
  8212  0EB9                     	;# 
  8213  0EBA                     	;# 
  8214  0EBB                     	;# 
  8215  0EBC                     	;# 
  8216  0EBD                     	;# 
  8217  0EBE                     	;# 
  8218  0EC3                     	;# 
  8219  0EC5                     	;# 
  8220  0EC6                     	;# 
  8221  0EC7                     	;# 
  8222  0EC8                     	;# 
  8223  0EC9                     	;# 
  8224  0ECA                     	;# 
  8225  0ECB                     	;# 
  8226  0ECC                     	;# 
  8227  0F10                     	;# 
  8228  0F11                     	;# 
  8229  0F12                     	;# 
  8230  0F13                     	;# 
  8231  0F14                     	;# 
  8232  0F15                     	;# 
  8233  0F16                     	;# 
  8234  0F17                     	;# 
  8235  0F18                     	;# 
  8236  0F19                     	;# 
  8237  0F1A                     	;# 
  8238  0F1B                     	;# 
  8239  0F1C                     	;# 
  8240  0F1D                     	;# 
  8241  0F1E                     	;# 
  8242  0F1F                     	;# 
  8243  0F20                     	;# 
  8244  0F21                     	;# 
  8245  0F22                     	;# 
  8246  0F23                     	;# 
  8247  0F24                     	;# 
  8248  0F25                     	;# 
  8249  0F26                     	;# 
  8250  0F27                     	;# 
  8251  0F28                     	;# 
  8252  0F29                     	;# 
  8253  0F2A                     	;# 
  8254  0F2B                     	;# 
  8255  0F2C                     	;# 
  8256  0F2D                     	;# 
  8257  0F2E                     	;# 
  8258  0F2F                     	;# 
  8259  0F30                     	;# 
  8260  0F31                     	;# 
  8261  0F32                     	;# 
  8262  0F38                     	;# 
  8263  0F39                     	;# 
  8264  0F3A                     	;# 
  8265  0F3B                     	;# 
  8266  0F3C                     	;# 
  8267  0F3D                     	;# 
  8268  0F3E                     	;# 
  8269  0F3F                     	;# 
  8270  0F40                     	;# 
  8271  0F41                     	;# 
  8272  0F43                     	;# 
  8273  0F44                     	;# 
  8274  0F45                     	;# 
  8275  0F46                     	;# 
  8276  0F47                     	;# 
  8277  0F48                     	;# 
  8278  0F49                     	;# 
  8279  0F4A                     	;# 
  8280  0F4B                     	;# 
  8281  0F4C                     	;# 
  8282  0F4E                     	;# 
  8283  0F4F                     	;# 
  8284  0F50                     	;# 
  8285  0F51                     	;# 
  8286  0F52                     	;# 
  8287  0F53                     	;# 
  8288  0F54                     	;# 
  8289  0F55                     	;# 
  8290  0F56                     	;# 
  8291  0F57                     	;# 
  8292  0F59                     	;# 
  8293  0F5A                     	;# 
  8294  0F5B                     	;# 
  8295  0F5C                     	;# 
  8296  0F5D                     	;# 
  8297  0F61                     	;# 
  8298  0F62                     	;# 
  8299  0F64                     	;# 
  8300  0F65                     	;# 
  8301  0F66                     	;# 
  8302  0F67                     	;# 
  8303  0F68                     	;# 
  8304  0F69                     	;# 
  8305  0F6A                     	;# 
  8306  0F6B                     	;# 
  8307  0F6C                     	;# 
  8308  0F6D                     	;# 
  8309  0FE4                     	;# 
  8310  0FE5                     	;# 
  8311  0FE6                     	;# 
  8312  0FE7                     	;# 
  8313  0FE8                     	;# 
  8314  0FE9                     	;# 
  8315  0FEA                     	;# 
  8316  0FEB                     	;# 
  8317  0FED                     	;# 
  8318  0FEE                     	;# 
  8319  0FEF                     	;# 
  8320                           
  8321                           	psect	idataBANK0
  8322  1754                     __pidataBANK0:
  8323                           
  8324                           ;initializer for _alarmPWMStart
  8325  1754  34FF               	retlw	255
  8326  1755  34FF               	retlw	255
  8327  1756  34FF               	retlw	255
  8328                           
  8329                           ;initializer for _prevLumLevel
  8330  1757  34FF               	retlw	255
  8331  1758  34FF               	retlw	255
  8332                           
  8333                           ;initializer for _prevTemp
  8334  1759  34FF               	retlw	255
  8335  175A  34FF               	retlw	255
  8336                           
  8337                           	psect	stringtext1
  8338  180F                     __pstringtext1:
  8339  180F                     _dpowers:
  8340  180F  3401               	retlw	1
  8341  1810  3400               	retlw	0
  8342  1811  340A               	retlw	10
  8343  1812  3400               	retlw	0
  8344  1813  3464               	retlw	100
  8345  1814  3400               	retlw	0
  8346  1815  34E8               	retlw	232
  8347  1816  3403               	retlw	3
  8348  1817  3410               	retlw	16
  8349  1818  3427               	retlw	39
  8350  1819                     __end_of_dpowers:
  8351                           
  8352                           	psect	nvBANK0
  8353  006E                     __pnvBANK0:
  8354  006E                     _timer3ReloadVal:
  8355  006E                     	ds	2
  8356                           
  8357                           	psect	nvBANK1
  8358  00B1                     __pnvBANK1:
  8359  00B1                     _INT_InterruptHandler:
  8360  00B1                     	ds	2
  8361  00B3                     _TMR5_InterruptHandler:
  8362  00B3                     	ds	2
  8363  00B5                     _timer5ReloadVal:
  8364  00B5                     	ds	2
  8365  00B7                     _TMR3_InterruptHandler:
  8366  00B7                     	ds	2
  8367  00B9                     _TMR1_InterruptHandler:
  8368  00B9                     	ds	2
  8369  00BB                     _timer1ReloadVal:
  8370  00BB                     	ds	2
  8371  0013                     _TRISCbits	set	19
  8372  000E                     _PORTCbits	set	14
  8373  0016                     _LATAbits	set	22
  8374  000B                     _INTCONbits	set	11
  8375  0014                     _TRISD	set	20
  8376  0013                     _TRISC	set	19
  8377  0012                     _TRISB	set	18
  8378  0011                     _TRISA	set	17
  8379  0015                     _TRISE	set	21
  8380  0018                     _LATC	set	24
  8381  0017                     _LATB	set	23
  8382  0016                     _LATA	set	22
  8383  0019                     _LATD	set	25
  8384  001A                     _LATE	set	26
  8385  0094                     _ADCON1bits	set	148
  8386  008E                     _ADPREVL	set	142
  8387  008F                     _ADPREVH	set	143
  8388  0097                     _ADSTATbits	set	151
  8389  0090                     _ADACCL	set	144
  8390  0091                     _ADACCH	set	145
  8391  0095                     _ADCON2bits	set	149
  8392  009C                     _ADPRE	set	156
  8393  0096                     _ADCON3bits	set	150
  8394  008C                     _ADRESL	set	140
  8395  008D                     _ADRESH	set	141
  8396  0093                     _ADCON0bits	set	147
  8397  009D                     _ADACQ	set	157
  8398  0093                     _ADCON0	set	147
  8399  0098                     _ADCLK	set	152
  8400  0099                     _ADACT	set	153
  8401  009A                     _ADREF	set	154
  8402  0097                     _ADSTAT	set	151
  8403  0096                     _ADCON3	set	150
  8404  0095                     _ADCON2	set	149
  8405  0094                     _ADCON1	set	148
  8406  009B                     _ADCAP	set	155
  8407  009E                     _ADPCH	set	158
  8408  0116                     _ADERRL	set	278
  8409  0117                     _ADERRH	set	279
  8410  0114                     _ADFLTRL	set	276
  8411  0115                     _ADFLTRH	set	277
  8412  010C                     _ADCNT	set	268
  8413  010D                     _ADRPT	set	269
  8414  0113                     _ADSTPTH	set	275
  8415  0112                     _ADSTPTL	set	274
  8416  0111                     _ADUTHH	set	273
  8417  0110                     _ADUTHL	set	272
  8418  010F                     _ADLTHH	set	271
  8419  010E                     _ADLTHL	set	270
  8420  018E                     _SSP1MSK	set	398
  8421  018D                     _SSP1ADD	set	397
  8422  018F                     _SSP1STAT	set	399
  8423  0191                     _SSP1CON2	set	401
  8424  0190                     _SSP1CON1bits	set	400
  8425  018C                     _SSP1BUF	set	396
  8426  018F                     _SSP1STATbits	set	399
  8427  0191                     _SSP1CON2bits	set	401
  8428  0190                     _SSP1CON1	set	400
  8429  021F                     _CCPTMRS1bits	set	543
  8430  021B                     _T5GCONbits	set	539
  8431  021A                     _T5CONbits	set	538
  8432  021A                     _T5CON	set	538
  8433  0218                     _TMR5L	set	536
  8434  0219                     _TMR5H	set	537
  8435  021D                     _T5CLK	set	541
  8436  021C                     _T5GATE	set	540
  8437  021B                     _T5GCON	set	539
  8438  0215                     _T3GCONbits	set	533
  8439  0214                     _T3CONbits	set	532
  8440  0214                     _T3CON	set	532
  8441  0212                     _TMR3L	set	530
  8442  0213                     _TMR3H	set	531
  8443  0217                     _T3CLK	set	535
  8444  0216                     _T3GATE	set	534
  8445  0215                     _T3GCON	set	533
  8446  020F                     _T1GCONbits	set	527
  8447  020E                     _T1CONbits	set	526
  8448  020E                     _T1CON	set	526
  8449  020C                     _TMR1L	set	524
  8450  020D                     _TMR1H	set	525
  8451  0211                     _T1CLK	set	529
  8452  0210                     _T1GATE	set	528
  8453  020F                     _T1GCON	set	527
  8454  028D                     _PR2	set	653
  8455  028C                     _TMR2	set	652
  8456  028E                     _T2CONbits	set	654
  8457  0291                     _T2RSTbits	set	657
  8458  028F                     _T2HLTbits	set	655
  8459  028E                     _T2CON	set	654
  8460  028C                     _T2TMR	set	652
  8461  028D                     _T2PR	set	653
  8462  0291                     _T2RST	set	657
  8463  028F                     _T2HLT	set	655
  8464  0290                     _T2CLKCON	set	656
  8465  038C                     _PWM6DCL	set	908
  8466  038D                     _PWM6DCH	set	909
  8467  038E                     _PWM6CON	set	910
  8468  1C77                     _PWM6EN	set	7287
  8469  0710                     _PIR4bits	set	1808
  8470  071A                     _PIE4bits	set	1818
  8471  070C                     _PIR0bits	set	1804
  8472  0716                     _PIE0bits	set	1814
  8473  0719                     _PIE3bits	set	1817
  8474  070F                     _PIR3bits	set	1807
  8475  079B                     _PMD5	set	1947
  8476  079A                     _PMD4	set	1946
  8477  0799                     _PMD3	set	1945
  8478  0798                     _PMD2	set	1944
  8479  0797                     _PMD1	set	1943
  8480  0796                     _PMD0	set	1942
  8481  081F                     _NVMCON2	set	2079
  8482  081C                     _NVMDATL	set	2076
  8483  081D                     _NVMDATH	set	2077
  8484  081E                     _NVMCON1bits	set	2078
  8485  081B                     _NVMADRH	set	2075
  8486  081A                     _NVMADRL	set	2074
  8487  0892                     _OSCTUNE	set	2194
  8488  0893                     _OSCFRQ	set	2195
  8489  0891                     _OSCEN	set	2193
  8490  088F                     _OSCCON3	set	2191
  8491  088D                     _OSCCON1	set	2189
  8492  0EC6                     _SSP1DATPPS	set	3782
  8493  0EC5                     _SSP1CLKPPS	set	3781
  8494  0E90                     _INTPPS	set	3728
  8495  0F16                     _RA6PPS	set	3862
  8496  0F24                     _RC4PPS	set	3876
  8497  0F23                     _RC3PPS	set	3875
  8498  0F67                     _SLRCONE	set	3943
  8499  0F5C                     _SLRCOND	set	3932
  8500  0F51                     _SLRCONC	set	3921
  8501  0F46                     _SLRCONB	set	3910
  8502  0F3B                     _SLRCONA	set	3899
  8503  0F5B                     _ODCOND	set	3931
  8504  0F50                     _ODCONC	set	3920
  8505  0F45                     _ODCONB	set	3909
  8506  0F3A                     _ODCONA	set	3898
  8507  0F66                     _ODCONE	set	3942
  8508  0F4F                     _WPUC	set	3919
  8509  0F39                     _WPUA	set	3897
  8510  0F44                     _WPUB	set	3908
  8511  0F65                     _WPUE	set	3941
  8512  0F5A                     _WPUD	set	3930
  8513  0F38                     _ANSELA	set	3896
  8514  0F64                     _ANSELE	set	3940
  8515  0F43                     _ANSELB	set	3907
  8516  0F4E                     _ANSELC	set	3918
  8517  0F59                     _ANSELD	set	3929
  8518  7A7C                     _WPUC4	set	31356
  8519  7A7B                     _WPUC3	set	31355
  8520                           
  8521                           	psect	stringtext2
  8522  1800                     __pstringtext2:
  8523  1800                     STR_1:
  8524  1800  3425               	retlw	37	;'%'
  8525  1801  3430               	retlw	48	;'0'
  8526  1802  3432               	retlw	50	;'2'
  8527  1803  3464               	retlw	100	;'d'
  8528  1804  343A               	retlw	58	;':'
  8529  1805  3425               	retlw	37	;'%'
  8530  1806  3430               	retlw	48	;'0'
  8531  1807  3432               	retlw	50	;'2'
  8532  1808  3464               	retlw	100	;'d'
  8533  1809  343A               	retlw	58	;':'
  8534  180A  3425               	retlw	37	;'%'
  8535  180B  3430               	retlw	48	;'0'
  8536  180C  3432               	retlw	50	;'2'
  8537  180D  3464               	retlw	100	;'d'
  8538  180E  3400               	retlw	0
  8539                           
  8540                           	psect	stringtext3
  8541  1819                     __pstringtext3:
  8542  1819                     STR_3:
  8543  1819  3425               	retlw	37	;'%'
  8544  181A  3430               	retlw	48	;'0'
  8545  181B  3432               	retlw	50	;'2'
  8546  181C  3464               	retlw	100	;'d'
  8547  181D  3420               	retlw	32	;' '
  8548  181E  3443               	retlw	67	;'C'
  8549  181F  3400               	retlw	0
  8550                           
  8551                           	psect	stringtext4
  8552  1820                     __pstringtext4:
  8553  1820                     STR_5:
  8554  1820  344C               	retlw	76	;'L'
  8555  1821  3420               	retlw	32	;' '
  8556  1822  3425               	retlw	37	;'%'
  8557  1823  3464               	retlw	100	;'d'
  8558  1824  3400               	retlw	0
  8559                           
  8560                           	psect	stringtext5
  8561  1825                     __pstringtext5:
  8562  1825                     STR_7:
  8563  1825  3443               	retlw	67	;'C'
  8564  1826  3454               	retlw	84	;'T'
  8565  1827  344C               	retlw	76	;'L'
  8566  1828  3400               	retlw	0
  8567                           
  8568                           	psect	stringtext6
  8569  0000                     __pstringtext6:
  8570  1819                     
  8571                           	psect	cinit
  8572  004E                     start_initialization:	
  8573                           ; #config settings
  8574                           
  8575  004E                     __initialization:
  8576                           
  8577                           ; Initialize objects allocated to BANK0
  8578  004E  3054               	movlw	low __pidataBANK0
  8579  004F  0084               	movwf	4
  8580  0050  3097               	movlw	(high __pidataBANK0)| (0+128)
  8581  0051  0085               	movwf	5
  8582  0052  3067               	movlw	low __pdataBANK0
  8583  0053  0086               	movwf	6
  8584  0054  3000               	movlw	high __pdataBANK0
  8585  0055  0087               	movwf	7
  8586  0056  3007               	movlw	7
  8587  0057  3197  2747  3180   	fcall	init_ram
  8588                           
  8589                           ; Clear objects allocated to BANK0
  8590  005A  304D               	movlw	low __pbssBANK0
  8591  005B  0084               	movwf	4
  8592  005C  3000               	movlw	high __pbssBANK0
  8593  005D  0085               	movwf	5
  8594  005E  301A               	movlw	26
  8595  005F  3197  2741  3180   	fcall	clear_ram0
  8596                           
  8597                           ; Clear objects allocated to BANK1
  8598  0062  30BD               	movlw	low __pbssBANK1
  8599  0063  0084               	movwf	4
  8600  0064  3000               	movlw	high __pbssBANK1
  8601  0065  0085               	movwf	5
  8602  0066  300B               	movlw	11
  8603  0067  3197  2741  3180   	fcall	clear_ram0
  8604  006A                     end_of_initialization:	
  8605                           ;End of C runtime variable initialization code
  8606                           
  8607  006A                     __end_of__initialization:
  8608  006A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8609  006B  0020               	movlb	0
  8610  006C  3182  2A87         	ljmp	_main	;jump to C main() function
  8611                           
  8612                           	psect	bssBANK0
  8613  004D                     __pbssBANK0:
  8614  004D                     _clkAlarm:
  8615  004D                     	ds	4
  8616  0051                     _lumAlarm:
  8617  0051                     	ds	3
  8618  0054                     _tempAlarm:
  8619  0054                     	ds	3
  8620  0057                     _t:
  8621  0057                     	ds	3
  8622  005A                     _mode:
  8623  005A                     	ds	2
  8624  005C                     _editingClockAlarm:
  8625  005C                     	ds	2
  8626  005E                     _dimingLed:
  8627  005E                     	ds	2
  8628  0060                     _editingLumAlarm:
  8629  0060                     	ds	1
  8630  0061                     _editingTempAlarm:
  8631  0061                     	ds	1
  8632  0062                     _lumLevel:
  8633  0062                     	ds	1
  8634  0063                     _temp:
  8635  0063                     	ds	1
  8636  0064                     _S1_Value:
  8637  0064                     	ds	1
  8638  0065                     _ALAF:
  8639  0065                     	ds	1
  8640  0066                     _TALA:
  8641  0066                     	ds	1
  8642                           
  8643                           	psect	dataBANK0
  8644  0067                     __pdataBANK0:
  8645  0067                     _alarmPWMStart:
  8646  0067                     	ds	3
  8647  006A                     _prevLumLevel:
  8648  006A                     	ds	2
  8649  006C                     _prevTemp:
  8650  006C                     	ds	2
  8651                           
  8652                           	psect	bssBANK1
  8653  00BD                     __pbssBANK1:
  8654  00BD                     menuLCD_ISR@F12829:
  8655  00BD                     	ds	3
  8656  00C0                     _i2c1_driver_i2cISR:
  8657  00C0                     	ds	2
  8658  00C2                     _i2c1_driver_busCollisionISR:
  8659  00C2                     	ds	2
  8660  00C4                     _PWM_on:
  8661  00C4                     	ds	1
  8662  00C5                     _idx_RingBuffer:
  8663  00C5                     	ds	1
  8664  00C6                     _PMON:
  8665  00C6                     	ds	1
  8666  00C7                     _NREG:
  8667  00C7                     	ds	1
  8668                           
  8669                           	psect	inittext
  8670  1747                     init_ram:
  8671  1747  00FE               	movwf	btemp
  8672  1748                     initloop:
  8673  1748  0012               	moviw fsr0++
  8674  1749  001E               	movwi fsr1++
  8675  174A  0BFE               	decfsz	btemp,f
  8676  174B  2F48               	goto	initloop
  8677  174C  3400               	retlw	0
  8678                           
  8679                           	psect	clrtext
  8680  1741                     clear_ram0:	
  8681                           ;	Called with FSR0 containing the base address, and
  8682                           ;	WREG with the size to clear
  8683                           
  8684  1741  0064               	clrwdt	;clear the watchdog before getting into this loop
  8685  1742                     clrloop0:
  8686  1742  0180               	clrf	0	;clear RAM location pointed to by FSR
  8687  1743  3101               	addfsr 0,1
  8688  1744  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  8689  1745  2F42               	goto	clrloop0	;have we reached the end yet?
  8690  1746  3400               	retlw	0	;all done for this memory range, return
  8691                           
  8692                           	psect	cstackBANK1
  8693  00A0                     __pcstackBANK1:
  8694  00A0                     ??_PMD_Initialize:
  8695  00A0                     ??_OSCILLATOR_Initialize:	
  8696                           ; 1 bytes @ 0x0
  8697                           
  8698  00A0                     ??_PWM6_Initialize:	
  8699                           ; 1 bytes @ 0x0
  8700                           
  8701  00A0                     ??_ADCC_Initialize:	
  8702                           ; 1 bytes @ 0x0
  8703                           
  8704  00A0                     ??_TMR2_Initialize:	
  8705                           ; 1 bytes @ 0x0
  8706                           
  8707  00A0                     ?_TMR1_SetInterruptHandler:	
  8708                           ; 1 bytes @ 0x0
  8709                           
  8710  00A0                     ?_TMR3_SetInterruptHandler:	
  8711                           ; 1 bytes @ 0x0
  8712                           
  8713  00A0                     ?_TMR5_SetInterruptHandler:	
  8714                           ; 1 bytes @ 0x0
  8715                           
  8716  00A0                     ??_WriteI2C:	
  8717                           ; 1 bytes @ 0x0
  8718                           
  8719  00A0                     ??_PIN_MANAGER_Initialize:	
  8720                           ; 1 bytes @ 0x0
  8721                           
  8722  00A0                     ??_i2c1_driver_open:	
  8723                           ; 1 bytes @ 0x0
  8724                           
  8725  00A0                     ?_PWM6_LoadDutyValue:	
  8726                           ; 1 bytes @ 0x0
  8727                           
  8728  00A0                     ??_TMR2_Stop:	
  8729                           ; 1 bytes @ 0x0
  8730                           
  8731  00A0                     ??_TMR2_StopTimer:	
  8732                           ; 1 bytes @ 0x0
  8733                           
  8734  00A0                     ?_DATAEE_WriteByte:	
  8735                           ; 1 bytes @ 0x0
  8736                           
  8737  00A0                     ?_DATAEE_ReadByte:	
  8738                           ; 1 bytes @ 0x0
  8739                           
  8740  00A0                     ?_INT_SetInterruptHandler:	
  8741                           ; 1 bytes @ 0x0
  8742                           
  8743  00A0                     ??_PWM_Output_D4_Disable:	
  8744                           ; 1 bytes @ 0x0
  8745                           
  8746  00A0                     ??_editClock:	
  8747                           ; 1 bytes @ 0x0
  8748                           
  8749  00A0                     ??_editTemp:	
  8750                           ; 1 bytes @ 0x0
  8751                           
  8752  00A0                     ??_editLum:	
  8753                           ; 1 bytes @ 0x0
  8754                           
  8755  00A0                     ??_toggleAlarms:	
  8756                           ; 1 bytes @ 0x0
  8757                           
  8758  00A0                     TMR1_SetInterruptHandler@InterruptHandler:	
  8759                           ; 1 bytes @ 0x0
  8760                           
  8761  00A0                     TMR3_SetInterruptHandler@InterruptHandler:	
  8762                           ; 2 bytes @ 0x0
  8763                           
  8764  00A0                     TMR5_SetInterruptHandler@InterruptHandler:	
  8765                           ; 2 bytes @ 0x0
  8766                           
  8767  00A0                     PWM6_LoadDutyValue@dutyValue:	
  8768                           ; 2 bytes @ 0x0
  8769                           
  8770  00A0                     DATAEE_WriteByte@bAdd:	
  8771                           ; 2 bytes @ 0x0
  8772                           
  8773  00A0                     DATAEE_ReadByte@bAdd:	
  8774                           ; 2 bytes @ 0x0
  8775                           
  8776  00A0                     INT_SetInterruptHandler@InterruptHandler:	
  8777                           ; 2 bytes @ 0x0
  8778                           
  8779                           
  8780                           ; 2 bytes @ 0x0
  8781  00A0                     	ds	1
  8782  00A1                     WriteI2C@data_out:
  8783                           
  8784                           ; 1 bytes @ 0x1
  8785  00A1                     	ds	1
  8786  00A2                     ??_TMR3_Initialize:
  8787  00A2                     ??_TMR5_Initialize:	
  8788                           ; 1 bytes @ 0x2
  8789                           
  8790  00A2                     ??_EXT_INT_Initialize:	
  8791                           ; 1 bytes @ 0x2
  8792                           
  8793  00A2                     ??_TMR1_Initialize:	
  8794                           ; 1 bytes @ 0x2
  8795                           
  8796  00A2                     ??_TMR1_SetInterruptHandler:	
  8797                           ; 1 bytes @ 0x2
  8798                           
  8799  00A2                     ??_TMR3_SetInterruptHandler:	
  8800                           ; 1 bytes @ 0x2
  8801                           
  8802  00A2                     ??_TMR5_SetInterruptHandler:	
  8803                           ; 1 bytes @ 0x2
  8804                           
  8805  00A2                     ??_SYSTEM_Initialize:	
  8806                           ; 1 bytes @ 0x2
  8807                           
  8808  00A2                     ??_PWM6_LoadDutyValue:	
  8809                           ; 1 bytes @ 0x2
  8810                           
  8811  00A2                     ??_DATAEE_ReadByte:	
  8812                           ; 1 bytes @ 0x2
  8813                           
  8814  00A2                     ??_INT_SetInterruptHandler:	
  8815                           ; 1 bytes @ 0x2
  8816                           
  8817  00A2                     ??_LCDsend:	
  8818                           ; 1 bytes @ 0x2
  8819                           
  8820  00A2                     ?_LCDsend2x4:	
  8821                           ; 1 bytes @ 0x2
  8822                           
  8823  00A2                     DATAEE_WriteByte@bData:	
  8824                           ; 1 bytes @ 0x2
  8825                           
  8826  00A2                     LCDsend2x4@mode:	
  8827                           ; 1 bytes @ 0x2
  8828                           
  8829                           
  8830                           ; 1 bytes @ 0x2
  8831  00A2                     	ds	1
  8832  00A3                     ??_DATAEE_WriteByte:
  8833  00A3                     ??_LCDsend2x4:	
  8834                           ; 1 bytes @ 0x3
  8835                           
  8836  00A3                     DATAEE_WriteByte@GIEBitValue:	
  8837                           ; 1 bytes @ 0x3
  8838                           
  8839  00A3                     LCDsend@c:	
  8840                           ; 1 bytes @ 0x3
  8841                           
  8842                           
  8843                           ; 1 bytes @ 0x3
  8844  00A3                     	ds	2
  8845  00A5                     LCDsend2x4@c:
  8846                           
  8847                           ; 1 bytes @ 0x5
  8848  00A5                     	ds	1
  8849  00A6                     LCDsend2x4@hc:
  8850                           
  8851                           ; 1 bytes @ 0x6
  8852  00A6                     	ds	1
  8853  00A7                     LCDsend2x4@lc:
  8854                           
  8855                           ; 1 bytes @ 0x7
  8856  00A7                     	ds	1
  8857  00A8                     ??_LCDinit:
  8858                           
  8859                           ; 1 bytes @ 0x8
  8860  00A8                     	ds	1
  8861  00A9                     ??_main:
  8862                           
  8863                           ; 1 bytes @ 0x9
  8864  00A9                     	ds	3
  8865  00AC                     main@checkSumAux:
  8866                           
  8867                           ; 1 bytes @ 0xC
  8868  00AC                     	ds	1
  8869  00AD                     main@notInit:
  8870                           
  8871                           ; 1 bytes @ 0xD
  8872  00AD                     	ds	1
  8873  00AE                     main@corrupted:
  8874                           
  8875                           ; 1 bytes @ 0xE
  8876  00AE                     	ds	1
  8877  00AF                     main@i:
  8878                           
  8879                           ; 2 bytes @ 0xF
  8880  00AF                     	ds	2
  8881                           
  8882                           	psect	cstackCOMMON
  8883  0070                     __pcstackCOMMON:
  8884  0070                     ?_isdigit:
  8885  0070                     ?_i2c1_driver_open:	
  8886                           ; 1 bit 
  8887                           
  8888  0070                     ?_PMD_Initialize:	
  8889                           ; 1 bit 
  8890                           
  8891  0070                     ?_OSCILLATOR_Initialize:	
  8892                           ; 1 bytes @ 0x0
  8893                           
  8894  0070                     ?_PWM6_Initialize:	
  8895                           ; 1 bytes @ 0x0
  8896                           
  8897  0070                     ?_ADCC_Initialize:	
  8898                           ; 1 bytes @ 0x0
  8899                           
  8900  0070                     ?_TMR3_Initialize:	
  8901                           ; 1 bytes @ 0x0
  8902                           
  8903  0070                     ?_TMR2_Initialize:	
  8904                           ; 1 bytes @ 0x0
  8905                           
  8906  0070                     ?_TMR5_Initialize:	
  8907                           ; 1 bytes @ 0x0
  8908                           
  8909  0070                     ?_EXT_INT_Initialize:	
  8910                           ; 1 bytes @ 0x0
  8911                           
  8912  0070                     ?_TMR1_Initialize:	
  8913                           ; 1 bytes @ 0x0
  8914                           
  8915  0070                     ?_INT_ISR:	
  8916                           ; 1 bytes @ 0x0
  8917                           
  8918  0070                     ?_TMR5_ISR:	
  8919                           ; 1 bytes @ 0x0
  8920                           
  8921  0070                     ?_TMR3_ISR:	
  8922                           ; 1 bytes @ 0x0
  8923                           
  8924  0070                     ?_TMR1_ISR:	
  8925                           ; 1 bytes @ 0x0
  8926                           
  8927  0070                     ?_TMR1_DefaultInterruptHandler:	
  8928                           ; 1 bytes @ 0x0
  8929                           
  8930  0070                     ??_TMR1_DefaultInterruptHandler:	
  8931                           ; 1 bytes @ 0x0
  8932                           
  8933  0070                     ?_TMR3_DefaultInterruptHandler:	
  8934                           ; 1 bytes @ 0x0
  8935                           
  8936  0070                     ??_TMR3_DefaultInterruptHandler:	
  8937                           ; 1 bytes @ 0x0
  8938                           
  8939  0070                     ?_TMR5_DefaultInterruptHandler:	
  8940                           ; 1 bytes @ 0x0
  8941                           
  8942  0070                     ??_TMR5_DefaultInterruptHandler:	
  8943                           ; 1 bytes @ 0x0
  8944                           
  8945  0070                     ?_INT_CallBack:	
  8946                           ; 1 bytes @ 0x0
  8947                           
  8948  0070                     ??_isdigit:	
  8949                           ; 1 bytes @ 0x0
  8950                           
  8951  0070                     ?_ReadI2C:	
  8952                           ; 1 bytes @ 0x0
  8953                           
  8954  0070                     ??_ReadI2C:	
  8955                           ; 1 bytes @ 0x0
  8956                           
  8957  0070                     ?_WriteI2C:	
  8958                           ; 1 bytes @ 0x0
  8959                           
  8960  0070                     ?_PIN_MANAGER_Initialize:	
  8961                           ; 1 bytes @ 0x0
  8962                           
  8963  0070                     ?_SYSTEM_Initialize:	
  8964                           ; 1 bytes @ 0x0
  8965                           
  8966  0070                     ?_INTERRUPT_InterruptManager:	
  8967                           ; 1 bytes @ 0x0
  8968                           
  8969  0070                     ?_TMR1_WriteTimer:	
  8970                           ; 1 bytes @ 0x0
  8971                           
  8972  0070                     ?_TMR3_WriteTimer:	
  8973                           ; 1 bytes @ 0x0
  8974                           
  8975  0070                     ?_TMR5_WriteTimer:	
  8976                           ; 1 bytes @ 0x0
  8977                           
  8978  0070                     ?_TMR2_Start:	
  8979                           ; 1 bytes @ 0x0
  8980                           
  8981  0070                     ??_TMR2_Start:	
  8982                           ; 1 bytes @ 0x0
  8983                           
  8984  0070                     ?_TMR2_StartTimer:	
  8985                           ; 1 bytes @ 0x0
  8986                           
  8987  0070                     ??_TMR2_StartTimer:	
  8988                           ; 1 bytes @ 0x0
  8989                           
  8990  0070                     ?_TMR2_Stop:	
  8991                           ; 1 bytes @ 0x0
  8992                           
  8993  0070                     ?_TMR2_StopTimer:	
  8994                           ; 1 bytes @ 0x0
  8995                           
  8996  0070                     ?_INT_DefaultInterruptHandler:	
  8997                           ; 1 bytes @ 0x0
  8998                           
  8999  0070                     ??_INT_DefaultInterruptHandler:	
  9000                           ; 1 bytes @ 0x0
  9001                           
  9002  0070                     ?_tsttc:	
  9003                           ; 1 bytes @ 0x0
  9004                           
  9005  0070                     ?_LCDsend:	
  9006                           ; 1 bytes @ 0x0
  9007                           
  9008  0070                     ?_LCDinit:	
  9009                           ; 1 bytes @ 0x0
  9010                           
  9011  0070                     ?_LCDcmd:	
  9012                           ; 1 bytes @ 0x0
  9013                           
  9014  0070                     ?_LCDchar:	
  9015                           ; 1 bytes @ 0x0
  9016                           
  9017  0070                     ?_differenceBetweenTimePeriod:	
  9018                           ; 1 bytes @ 0x0
  9019                           
  9020  0070                     ?_PWM_Output_D4_Enable:	
  9021                           ; 1 bytes @ 0x0
  9022                           
  9023  0070                     ??_PWM_Output_D4_Enable:	
  9024                           ; 1 bytes @ 0x0
  9025                           
  9026  0070                     ?_PWM_Output_D4_Disable:	
  9027                           ; 1 bytes @ 0x0
  9028                           
  9029  0070                     ?_Clock_ISR:	
  9030                           ; 1 bytes @ 0x0
  9031                           
  9032  0070                     ?_menuLCD_ISR:	
  9033                           ; 1 bytes @ 0x0
  9034                           
  9035  0070                     ?_monitoring_ISR:	
  9036                           ; 1 bytes @ 0x0
  9037                           
  9038  0070                     ?_editClock:	
  9039                           ; 1 bytes @ 0x0
  9040                           
  9041  0070                     ?_editTemp:	
  9042                           ; 1 bytes @ 0x0
  9043                           
  9044  0070                     ?_editLum:	
  9045                           ; 1 bytes @ 0x0
  9046                           
  9047  0070                     ?_toggleAlarms:	
  9048                           ; 1 bytes @ 0x0
  9049                           
  9050  0070                     ?_S1_ISR:	
  9051                           ; 1 bytes @ 0x0
  9052                           
  9053  0070                     ??_S1_ISR:	
  9054                           ; 1 bytes @ 0x0
  9055                           
  9056  0070                     ?_main:	
  9057                           ; 1 bytes @ 0x0
  9058                           
  9059  0070                     ?i1_WriteI2C:	
  9060                           ; 1 bytes @ 0x0
  9061                           
  9062  0070                     ??i1_WriteI2C:	
  9063                           ; 1 bytes @ 0x0
  9064                           
  9065  0070                     ?i1_PWM6_LoadDutyValue:	
  9066                           ; 1 bytes @ 0x0
  9067                           
  9068  0070                     ?i1_TMR2_Stop:	
  9069                           ; 1 bytes @ 0x0
  9070                           
  9071  0070                     ??i1_TMR2_Stop:	
  9072                           ; 1 bytes @ 0x0
  9073                           
  9074  0070                     ?i1_TMR2_StopTimer:	
  9075                           ; 1 bytes @ 0x0
  9076                           
  9077  0070                     ??i1_TMR2_StopTimer:	
  9078                           ; 1 bytes @ 0x0
  9079                           
  9080  0070                     ?i1_PWM_Output_D4_Disable:	
  9081                           ; 1 bytes @ 0x0
  9082                           
  9083  0070                     ??i1_PWM_Output_D4_Disable:	
  9084                           ; 1 bytes @ 0x0
  9085                           
  9086  0070                     ?_ADCC_GetSingleConversion:	
  9087                           ; 1 bytes @ 0x0
  9088                           
  9089  0070                     ?___wmul:	
  9090                           ; 2 bytes @ 0x0
  9091                           
  9092  0070                     ?___lwdiv:	
  9093                           ; 2 bytes @ 0x0
  9094                           
  9095  0070                     _isdigit$2972:	
  9096                           ; 2 bytes @ 0x0
  9097                           
  9098  0070                     TMR1_WriteTimer@timerVal:	
  9099                           ; 1 bytes @ 0x0
  9100                           
  9101  0070                     TMR3_WriteTimer@timerVal:	
  9102                           ; 2 bytes @ 0x0
  9103                           
  9104  0070                     TMR5_WriteTimer@timerVal:	
  9105                           ; 2 bytes @ 0x0
  9106                           
  9107  0070                     ___wmul@multiplier:	
  9108                           ; 2 bytes @ 0x0
  9109                           
  9110  0070                     ___lwdiv@divisor:	
  9111                           ; 2 bytes @ 0x0
  9112                           
  9113  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  9114                           ; 2 bytes @ 0x0
  9115                           
  9116  0070                     differenceBetweenTimePeriod@start:	
  9117                           ; 2 bytes @ 0x0
  9118                           
  9119                           
  9120                           ; 3 bytes @ 0x0
  9121  0070                     	ds	1
  9122  0071                     ??_INT_ISR:
  9123  0071                     ??_INT_CallBack:	
  9124                           ; 1 bytes @ 0x1
  9125                           
  9126  0071                     isdigit@c:	
  9127                           ; 1 bytes @ 0x1
  9128                           
  9129  0071                     i1WriteI2C@data_out:	
  9130                           ; 1 bytes @ 0x1
  9131                           
  9132                           
  9133                           ; 1 bytes @ 0x1
  9134  0071                     	ds	1
  9135  0072                     ??_TMR1_WriteTimer:
  9136  0072                     ??_TMR3_WriteTimer:	
  9137                           ; 1 bytes @ 0x2
  9138                           
  9139  0072                     ??_TMR5_WriteTimer:	
  9140                           ; 1 bytes @ 0x2
  9141                           
  9142  0072                     ??_tsttc:	
  9143                           ; 1 bytes @ 0x2
  9144                           
  9145  0072                     ??i1_PWM6_LoadDutyValue:	
  9146                           ; 1 bytes @ 0x2
  9147                           
  9148  0072                     ?i1_LCDsend2x4:	
  9149                           ; 1 bytes @ 0x2
  9150                           
  9151  0072                     i1LCDsend2x4@mode:	
  9152                           ; 1 bytes @ 0x2
  9153                           
  9154  0072                     ___wmul@multiplicand:	
  9155                           ; 1 bytes @ 0x2
  9156                           
  9157  0072                     ___lwdiv@dividend:	
  9158                           ; 2 bytes @ 0x2
  9159                           
  9160                           
  9161                           ; 2 bytes @ 0x2
  9162  0072                     	ds	1
  9163  0073                     ??_ADCC_GetSingleConversion:
  9164  0073                     ??i1_LCDsend2x4:	
  9165                           ; 1 bytes @ 0x3
  9166                           
  9167  0073                     ADCC_GetSingleConversion@channel:	
  9168                           ; 1 bytes @ 0x3
  9169                           
  9170  0073                     tsttc@value:	
  9171                           ; 1 bytes @ 0x3
  9172                           
  9173  0073                     differenceBetweenTimePeriod@stop:	
  9174                           ; 1 bytes @ 0x3
  9175                           
  9176                           
  9177                           ; 3 bytes @ 0x3
  9178  0073                     	ds	1
  9179  0074                     ??___wmul:
  9180  0074                     ??___lwdiv:	
  9181                           ; 1 bytes @ 0x4
  9182                           
  9183  0074                     ___wmul@product:	
  9184                           ; 1 bytes @ 0x4
  9185                           
  9186                           
  9187                           ; 2 bytes @ 0x4
  9188  0074                     	ds	1
  9189  0075                     i1LCDsend2x4@c:
  9190  0075                     ___lwdiv@quotient:	
  9191                           ; 1 bytes @ 0x5
  9192                           
  9193                           
  9194                           ; 2 bytes @ 0x5
  9195  0075                     	ds	1
  9196  0076                     ?i1_DATAEE_WriteByte:
  9197  0076                     differenceBetweenTimePeriod@diff:	
  9198                           ; 1 bytes @ 0x6
  9199                           
  9200  0076                     i1LCDsend2x4@hc:	
  9201                           ; 1 bytes @ 0x6
  9202                           
  9203  0076                     i1DATAEE_WriteByte@bAdd:	
  9204                           ; 1 bytes @ 0x6
  9205                           
  9206                           
  9207                           ; 2 bytes @ 0x6
  9208  0076                     	ds	1
  9209  0077                     ??_differenceBetweenTimePeriod:
  9210  0077                     ___lwdiv@counter:	
  9211                           ; 1 bytes @ 0x7
  9212                           
  9213  0077                     i1LCDsend2x4@lc:	
  9214                           ; 1 bytes @ 0x7
  9215                           
  9216                           
  9217                           ; 1 bytes @ 0x7
  9218  0077                     	ds	1
  9219  0078                     ??_LCDcmd:
  9220  0078                     ??_LCDchar:	
  9221                           ; 1 bytes @ 0x8
  9222                           
  9223  0078                     ?___lwmod:	
  9224                           ; 1 bytes @ 0x8
  9225                           
  9226  0078                     LCDcmd@c:	
  9227                           ; 2 bytes @ 0x8
  9228                           
  9229  0078                     LCDchar@c:	
  9230                           ; 1 bytes @ 0x8
  9231                           
  9232  0078                     i1DATAEE_WriteByte@bData:	
  9233                           ; 1 bytes @ 0x8
  9234                           
  9235  0078                     ___lwmod@divisor:	
  9236                           ; 1 bytes @ 0x8
  9237                           
  9238                           
  9239                           ; 2 bytes @ 0x8
  9240  0078                     	ds	1
  9241  0079                     ?_LCDstr:
  9242  0079                     ??i1_DATAEE_WriteByte:	
  9243                           ; 1 bytes @ 0x9
  9244                           
  9245  0079                     i1DATAEE_WriteByte@GIEBitValue:	
  9246                           ; 1 bytes @ 0x9
  9247                           
  9248  0079                     LCDstr@p:	
  9249                           ; 1 bytes @ 0x9
  9250                           
  9251                           
  9252                           ; 2 bytes @ 0x9
  9253  0079                     	ds	1
  9254  007A                     ??_Clock_ISR:
  9255  007A                     ??_monitoring_ISR:	
  9256                           ; 1 bytes @ 0xA
  9257                           
  9258  007A                     ___lwmod@dividend:	
  9259                           ; 1 bytes @ 0xA
  9260                           
  9261                           
  9262                           ; 2 bytes @ 0xA
  9263  007A                     	ds	1
  9264  007B                     ??_TMR1_ISR:
  9265  007B                     ??_LCDstr:	
  9266                           ; 1 bytes @ 0xB
  9267                           
  9268                           
  9269                           ; 1 bytes @ 0xB
  9270  007B                     	ds	1
  9271  007C                     ??___lwmod:
  9272                           
  9273                           ; 1 bytes @ 0xC
  9274  007C                     	ds	1
  9275  007D                     ??_TMR5_ISR:
  9276  007D                     ___lwmod@counter:	
  9277                           ; 1 bytes @ 0xD
  9278                           
  9279                           
  9280                           ; 1 bytes @ 0xD
  9281  007D                     	ds	1
  9282  007E                     ??_TMR3_ISR:
  9283  007E                     ??_INTERRUPT_InterruptManager:	
  9284                           ; 1 bytes @ 0xE
  9285                           
  9286                           
  9287                           	psect	cstackBANK0
  9288  0020                     __pcstackBANK0:	
  9289                           ; 1 bytes @ 0xE
  9290                           
  9291  0020                     ?_sprintf:
  9292  0020                     LCDstr@c:	
  9293                           ; 2 bytes @ 0x0
  9294                           
  9295  0020                     sprintf@f:	
  9296                           ; 1 bytes @ 0x0
  9297                           
  9298                           
  9299                           ; 2 bytes @ 0x0
  9300  0020                     	ds	8
  9301  0028                     ??_sprintf:
  9302                           
  9303                           ; 1 bytes @ 0x8
  9304  0028                     	ds	4
  9305  002C                     sprintf@ap:
  9306                           
  9307                           ; 1 bytes @ 0xC
  9308  002C                     	ds	1
  9309  002D                     sprintf@prec:
  9310                           
  9311                           ; 1 bytes @ 0xD
  9312  002D                     	ds	1
  9313  002E                     sprintf@val:
  9314                           
  9315                           ; 2 bytes @ 0xE
  9316  002E                     	ds	2
  9317  0030                     sprintf@flag:
  9318                           
  9319                           ; 1 bytes @ 0x10
  9320  0030                     	ds	1
  9321  0031                     sprintf@width:
  9322                           
  9323                           ; 2 bytes @ 0x11
  9324  0031                     	ds	2
  9325  0033                     sprintf@c:
  9326                           
  9327                           ; 1 bytes @ 0x13
  9328  0033                     	ds	1
  9329  0034                     sprintf@sp:
  9330                           
  9331                           ; 1 bytes @ 0x14
  9332  0034                     	ds	1
  9333  0035                     ??_menuLCD_ISR:
  9334                           
  9335                           ; 1 bytes @ 0x15
  9336  0035                     	ds	6
  9337  003B                     menuLCD_ISR@str:
  9338                           
  9339                           ; 8 bytes @ 0x1B
  9340  003B                     	ds	8
  9341  0043                     menuLCD_ISR@tt:
  9342                           
  9343                           ; 4 bytes @ 0x23
  9344  0043                     	ds	4
  9345  0047                     menuLCD_ISR@l:
  9346                           
  9347                           ; 3 bytes @ 0x27
  9348  0047                     	ds	3
  9349  004A                     menuLCD_ISR@diff:
  9350                           
  9351                           ; 3 bytes @ 0x2A
  9352  004A                     	ds	3
  9353                           
  9354                           	psect	maintext
  9355  0287                     __pmaintext:	
  9356 ;;
  9357 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  9358 ;;
  9359 ;; *************** function _main *****************
  9360 ;; Defined at:
  9361 ;;		line 672 in file "main.c"
  9362 ;; Parameters:    Size  Location     Type
  9363 ;;		None
  9364 ;; Auto vars:     Size  Location     Type
  9365 ;;  i               2   15[BANK1 ] int 
  9366 ;;  corrupted       1   14[BANK1 ] unsigned char 
  9367 ;;  notInit         1   13[BANK1 ] unsigned char 
  9368 ;;  checkSumAux     1   12[BANK1 ] unsigned char 
  9369 ;; Return value:  Size  Location     Type
  9370 ;;                  1    wreg      void 
  9371 ;; Registers used:
  9372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9373 ;; Tracked objects:
  9374 ;;		On entry : B1F/0
  9375 ;;		On exit  : 0/0
  9376 ;;		Unchanged: 0/0
  9377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9379 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9380 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9381 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9382 ;;Total ram usage:        8 bytes
  9383 ;; Hardware stack levels required when called:   10
  9384 ;; This function calls:
  9385 ;;		_DATAEE_ReadByte
  9386 ;;		_DATAEE_WriteByte
  9387 ;;		_INT_SetInterruptHandler
  9388 ;;		_LCDinit
  9389 ;;		_PWM6_LoadDutyValue
  9390 ;;		_PWM_Output_D4_Disable
  9391 ;;		_SYSTEM_Initialize
  9392 ;;		_TMR1_SetInterruptHandler
  9393 ;;		_TMR2_StopTimer
  9394 ;;		_TMR3_SetInterruptHandler
  9395 ;;		_TMR5_SetInterruptHandler
  9396 ;;		_editClock
  9397 ;;		_editLum
  9398 ;;		_editTemp
  9399 ;;		_i2c1_driver_open
  9400 ;;		_toggleAlarms
  9401 ;; This function is called by:
  9402 ;;		Startup code after reset
  9403 ;; This function uses a non-reentrant model
  9404 ;;
  9405                           
  9406                           
  9407                           ;psect for function _main
  9408  0287                     _main:
  9409  0287                     l5148:	
  9410                           ;incstack = 0
  9411                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9412                           
  9413                           
  9414                           ;main.c: 675: SYSTEM_Initialize();
  9415  0287  3189  2168  3182   	fcall	_SYSTEM_Initialize
  9416                           
  9417                           ;main.c: 677: PWM6_LoadDutyValue(0);
  9418  028A  3000               	movlw	0
  9419  028B  0021               	movlb	1	; select bank1
  9420  028C  00A0               	movwf	PWM6_LoadDutyValue@dutyValue^(0+128)
  9421  028D  00A1               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128)
  9422  028E  3188  2080  3182   	fcall	_PWM6_LoadDutyValue
  9423  0291                     l5150:
  9424                           
  9425                           ;main.c: 678: TMR2_StopTimer();
  9426  0291  3197  271F  3182   	fcall	_TMR2_StopTimer
  9427  0294                     l5152:
  9428                           
  9429                           ;main.c: 679: PWM_Output_D4_Disable();
  9430  0294  3197  2711  3182   	fcall	_PWM_Output_D4_Disable
  9431                           
  9432                           ;main.c: 681: TMR1_SetInterruptHandler(Clock_ISR);
  9433  0297  30F2               	movlw	low _Clock_ISR
  9434  0298  0021               	movlb	1	; select bank1
  9435  0299  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  9436  029A  300D               	movlw	high _Clock_ISR
  9437  029B  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9438  029C  3197  272F  3182   	fcall	_TMR1_SetInterruptHandler
  9439                           
  9440                           ;main.c: 683: TMR3_SetInterruptHandler(menuLCD_ISR);
  9441  029F  306E               	movlw	low _menuLCD_ISR
  9442  02A0  0021               	movlb	1	; select bank1
  9443  02A1  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  9444  02A2  3000               	movlw	high _menuLCD_ISR
  9445  02A3  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9446  02A4  3197  2735  3182   	fcall	_TMR3_SetInterruptHandler
  9447                           
  9448                           ;main.c: 685: TMR5_SetInterruptHandler(monitoring_ISR);
  9449  02A7  3021               	movlw	low _monitoring_ISR
  9450  02A8  0021               	movlb	1	; select bank1
  9451  02A9  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
  9452  02AA  3006               	movlw	high _monitoring_ISR
  9453  02AB  00A1               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9454  02AC  3197  273B  3182   	fcall	_TMR5_SetInterruptHandler
  9455                           
  9456                           ;main.c: 687: INT_SetInterruptHandler(S1_ISR);
  9457  02AF  3053               	movlw	low _S1_ISR
  9458  02B0  0021               	movlb	1	; select bank1
  9459  02B1  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
  9460  02B2  300B               	movlw	high _S1_ISR
  9461  02B3  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9462  02B4  3197  2729  3182   	fcall	_INT_SetInterruptHandler
  9463  02B7                     l5154:
  9464                           
  9465                           ;main.c: 689: uint8_t checkSumAux = 0;
  9466  02B7  0021               	movlb	1	; select bank1
  9467  02B8  01AC               	clrf	main@checkSumAux^(0+128)
  9468  02B9                     l5156:
  9469                           
  9470                           ;main.c: 690: bool notInit = 1;
  9471  02B9  01AD               	clrf	main@notInit^(0+128)
  9472  02BA  0AAD               	incf	main@notInit^(0+128),f
  9473  02BB                     l5158:
  9474                           
  9475                           ;main.c: 691: bool corrupted = 0;
  9476  02BB  01AE               	clrf	main@corrupted^(0+128)
  9477  02BC                     l5160:
  9478                           
  9479                           ;main.c: 692: if(DATAEE_ReadByte(0x7000) == 'S'){
  9480  02BC  3000               	movlw	0
  9481  02BD  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9482  02BE  3070               	movlw	112
  9483  02BF  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9484  02C0  3197  279A  3182   	fcall	_DATAEE_ReadByte
  9485  02C3  3A53               	xorlw	83
  9486  02C4  1D03               	skipz
  9487  02C5  2AC7               	goto	u4951
  9488  02C6  2AC8               	goto	u4950
  9489  02C7                     u4951:
  9490  02C7  2B07               	goto	l5180
  9491  02C8                     u4950:
  9492  02C8                     l5162:
  9493                           
  9494                           ;main.c: 693: notInit = 0;
  9495  02C8  0021               	movlb	1	; select bank1
  9496  02C9  01AD               	clrf	main@notInit^(0+128)
  9497  02CA                     l5164:
  9498                           
  9499                           ;main.c: 694: for(int i = 1; i < 13; i++){
  9500  02CA  3001               	movlw	1
  9501  02CB  00AF               	movwf	main@i^(0+128)
  9502  02CC  3000               	movlw	0
  9503  02CD  00B0               	movwf	(main@i^(0+128)+1)
  9504  02CE                     l5170:
  9505                           
  9506                           ;main.c: 695: checkSumAux += DATAEE_ReadByte(0x7000 + (i*8));
  9507  02CE  0021               	movlb	1	; select bank1
  9508  02CF  0830               	movf	(main@i+1)^(0+128),w
  9509  02D0  00AA               	movwf	(??_main^(0+128)+1)
  9510  02D1  082F               	movf	main@i^(0+128),w
  9511  02D2  00A9               	movwf	??_main^(0+128)
  9512  02D3  35A9               	lslf	??_main^(0+128),f
  9513  02D4  0DAA               	rlf	(??_main^(0+128)+1),f
  9514  02D5  35A9               	lslf	??_main^(0+128),f
  9515  02D6  0DAA               	rlf	(??_main^(0+128)+1),f
  9516  02D7  35A9               	lslf	??_main^(0+128),f
  9517  02D8  0DAA               	rlf	(??_main^(0+128)+1),f
  9518  02D9  0829               	movf	??_main^(0+128),w
  9519  02DA  3E00               	addlw	0
  9520  02DB  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9521  02DC  3070               	movlw	112
  9522  02DD  3D2A               	addwfc	(??_main+1)^(0+128),w
  9523  02DE  00A1               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+128)
  9524  02DF  3197  279A  3182   	fcall	_DATAEE_ReadByte
  9525  02E2  0021               	movlb	1	; select bank1
  9526  02E3  00AB               	movwf	(??_main+2)^(0+128)
  9527  02E4  082B               	movf	(??_main+2)^(0+128),w
  9528  02E5  07AC               	addwf	main@checkSumAux^(0+128),f
  9529  02E6                     l5172:
  9530  02E6  3001               	movlw	1
  9531  02E7  07AF               	addwf	main@i^(0+128),f
  9532  02E8  3000               	movlw	0
  9533  02E9  3DB0               	addwfc	(main@i+1)^(0+128),f
  9534  02EA                     l5174:
  9535  02EA  0830               	movf	(main@i+1)^(0+128),w
  9536  02EB  3A80               	xorlw	128
  9537  02EC  00A9               	movwf	??_main^(0+128)
  9538  02ED  3080               	movlw	128
  9539  02EE  0229               	subwf	??_main^(0+128),w
  9540  02EF  1D03               	skipz
  9541  02F0  2AF3               	goto	u4965
  9542  02F1  300D               	movlw	13
  9543  02F2  022F               	subwf	main@i^(0+128),w
  9544  02F3                     u4965:
  9545  02F3  1C03               	skipc
  9546  02F4  2AF6               	goto	u4961
  9547  02F5  2AF7               	goto	u4960
  9548  02F6                     u4961:
  9549  02F6  2ACE               	goto	l5170
  9550  02F7                     u4960:
  9551  02F7                     l5176:
  9552                           
  9553                           ;main.c: 696: };main.c: 697: if(checkSumAux != DATAEE_ReadByte(0x7000 + (13*8))){
  9554  02F7  3068               	movlw	104
  9555  02F8  0021               	movlb	1	; select bank1
  9556  02F9  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9557  02FA  3070               	movlw	112
  9558  02FB  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9559  02FC  3197  279A  3182   	fcall	_DATAEE_ReadByte
  9560  02FF  0021               	movlb	1	; select bank1
  9561  0300  062C               	xorwf	main@checkSumAux^(0+128),w
  9562  0301  1903               	skipnz
  9563  0302  2B04               	goto	u4971
  9564  0303  2B05               	goto	u4970
  9565  0304                     u4971:
  9566  0304  2B07               	goto	l5180
  9567  0305                     u4970:
  9568  0305                     l5178:
  9569                           
  9570                           ;main.c: 698: corrupted = 1;
  9571  0305  01AE               	clrf	main@corrupted^(0+128)
  9572  0306  0AAE               	incf	main@corrupted^(0+128),f
  9573  0307                     l5180:
  9574                           
  9575                           ;main.c: 699: };main.c: 700: };main.c: 702: if(notInit || corrupted){
  9576  0307  0021               	movlb	1	; select bank1
  9577  0308  082D               	movf	main@notInit^(0+128),w
  9578  0309  1D03               	btfss	3,2
  9579  030A  2B0C               	goto	u4981
  9580  030B  2B0D               	goto	u4980
  9581  030C                     u4981:
  9582  030C  2B12               	goto	l5184
  9583  030D                     u4980:
  9584  030D                     l5182:
  9585  030D  082E               	movf	main@corrupted^(0+128),w
  9586  030E  1903               	btfsc	3,2
  9587  030F  2B11               	goto	u4991
  9588  0310  2B12               	goto	u4990
  9589  0311                     u4991:
  9590  0311  2BAA               	goto	l5186
  9591  0312                     u4990:
  9592  0312                     l5184:
  9593                           
  9594                           ;main.c: 703: DATAEE_WriteByte( 0x7000 + (0 * 8), 'S');
  9595  0312  3000               	movlw	0
  9596  0313  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9597  0314  3070               	movlw	112
  9598  0315  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9599  0316  3053               	movlw	83
  9600  0317  00A9               	movwf	??_main^(0+128)
  9601  0318  0829               	movf	??_main^(0+128),w
  9602  0319  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9603  031A  3189  2187  3182   	fcall	_DATAEE_WriteByte
  9604                           
  9605                           ;main.c: 704: DATAEE_WriteByte( 0x7000 + (1 * 8), 25);
  9606  031D  3008               	movlw	8
  9607  031E  0021               	movlb	1	; select bank1
  9608  031F  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9609  0320  3070               	movlw	112
  9610  0321  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9611  0322  3019               	movlw	25
  9612  0323  00A9               	movwf	??_main^(0+128)
  9613  0324  0829               	movf	??_main^(0+128),w
  9614  0325  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9615  0326  3189  2187  3182   	fcall	_DATAEE_WriteByte
  9616                           
  9617                           ;main.c: 705: DATAEE_WriteByte( 0x7000 + (2 * 8), 3);
  9618  0329  3010               	movlw	16
  9619  032A  0021               	movlb	1	; select bank1
  9620  032B  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9621  032C  3070               	movlw	112
  9622  032D  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9623  032E  3003               	movlw	3
  9624  032F  00A9               	movwf	??_main^(0+128)
  9625  0330  0829               	movf	??_main^(0+128),w
  9626  0331  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9627  0332  3189  2187  3182   	fcall	_DATAEE_WriteByte
  9628                           
  9629                           ;main.c: 706: DATAEE_WriteByte( 0x7000 + (3 * 8), 5);
  9630  0335  3018               	movlw	24
  9631  0336  0021               	movlb	1	; select bank1
  9632  0337  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9633  0338  3070               	movlw	112
  9634  0339  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9635  033A  3005               	movlw	5
  9636  033B  00A9               	movwf	??_main^(0+128)
  9637  033C  0829               	movf	??_main^(0+128),w
  9638  033D  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9639  033E  3189  2187  3182   	fcall	_DATAEE_WriteByte
  9640                           
  9641                           ;main.c: 707: DATAEE_WriteByte( 0x7000 + (4 * 8), 12);
  9642  0341  3020               	movlw	32
  9643  0342  0021               	movlb	1	; select bank1
  9644  0343  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9645  0344  3070               	movlw	112
  9646  0345  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9647  0346  300C               	movlw	12
  9648  0347  00A9               	movwf	??_main^(0+128)
  9649  0348  0829               	movf	??_main^(0+128),w
  9650  0349  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9651  034A  3189  2187  3182   	fcall	_DATAEE_WriteByte
  9652                           
  9653                           ;main.c: 708: DATAEE_WriteByte( 0x7000 + (5 * 8), 0);
  9654  034D  3028               	movlw	40
  9655  034E  0021               	movlb	1	; select bank1
  9656  034F  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9657  0350  3070               	movlw	112
  9658  0351  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9659  0352  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9660  0353  3189  2187  3182   	fcall	_DATAEE_WriteByte
  9661                           
  9662                           ;main.c: 709: DATAEE_WriteByte( 0x7000 + (6 * 8), 0);
  9663  0356  3030               	movlw	48
  9664  0357  0021               	movlb	1	; select bank1
  9665  0358  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9666  0359  3070               	movlw	112
  9667  035A  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9668  035B  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9669  035C  3189  2187  3182   	fcall	_DATAEE_WriteByte
  9670                           
  9671                           ;main.c: 710: DATAEE_WriteByte( 0x7000 + (7 * 8), 28);
  9672  035F  3038               	movlw	56
  9673  0360  0021               	movlb	1	; select bank1
  9674  0361  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9675  0362  3070               	movlw	112
  9676  0363  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9677  0364  301C               	movlw	28
  9678  0365  00A9               	movwf	??_main^(0+128)
  9679  0366  0829               	movf	??_main^(0+128),w
  9680  0367  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9681  0368  3189  2187  3182   	fcall	_DATAEE_WriteByte
  9682                           
  9683                           ;main.c: 711: DATAEE_WriteByte( 0x7000 + (8 * 8), 4);
  9684  036B  3040               	movlw	64
  9685  036C  0021               	movlb	1	; select bank1
  9686  036D  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9687  036E  3070               	movlw	112
  9688  036F  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9689  0370  3004               	movlw	4
  9690  0371  00A9               	movwf	??_main^(0+128)
  9691  0372  0829               	movf	??_main^(0+128),w
  9692  0373  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9693  0374  3189  2187  3182   	fcall	_DATAEE_WriteByte
  9694                           
  9695                           ;main.c: 712: DATAEE_WriteByte( 0x7000 + (9 * 8), 'a');
  9696  0377  3048               	movlw	72
  9697  0378  0021               	movlb	1	; select bank1
  9698  0379  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9699  037A  3070               	movlw	112
  9700  037B  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9701  037C  3061               	movlw	97
  9702  037D  00A9               	movwf	??_main^(0+128)
  9703  037E  0829               	movf	??_main^(0+128),w
  9704  037F  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9705  0380  3189  2187  3182   	fcall	_DATAEE_WriteByte
  9706                           
  9707                           ;main.c: 713: DATAEE_WriteByte( 0x7000 + (10 * 8), 0);
  9708  0383  3050               	movlw	80
  9709  0384  0021               	movlb	1	; select bank1
  9710  0385  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9711  0386  3070               	movlw	112
  9712  0387  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9713  0388  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9714  0389  3189  2187  3182   	fcall	_DATAEE_WriteByte
  9715                           
  9716                           ;main.c: 714: DATAEE_WriteByte( 0x7000 + (11 * 8), 0);
  9717  038C  3058               	movlw	88
  9718  038D  0021               	movlb	1	; select bank1
  9719  038E  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9720  038F  3070               	movlw	112
  9721  0390  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9722  0391  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9723  0392  3189  2187  3182   	fcall	_DATAEE_WriteByte
  9724                           
  9725                           ;main.c: 715: DATAEE_WriteByte( 0x7000 + (12 * 8), 0);
  9726  0395  3060               	movlw	96
  9727  0396  0021               	movlb	1	; select bank1
  9728  0397  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9729  0398  3070               	movlw	112
  9730  0399  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9731  039A  01A2               	clrf	DATAEE_WriteByte@bData^(0+128)
  9732  039B  3189  2187  3182   	fcall	_DATAEE_WriteByte
  9733                           
  9734                           ;main.c: 716: DATAEE_WriteByte( 0x7000 + (13 * 8), 174);
  9735  039E  3068               	movlw	104
  9736  039F  0021               	movlb	1	; select bank1
  9737  03A0  00A0               	movwf	DATAEE_WriteByte@bAdd^(0+128)
  9738  03A1  3070               	movlw	112
  9739  03A2  00A1               	movwf	(DATAEE_WriteByte@bAdd^(0+128)+1)
  9740  03A3  30AE               	movlw	174
  9741  03A4  00A9               	movwf	??_main^(0+128)
  9742  03A5  0829               	movf	??_main^(0+128),w
  9743  03A6  00A2               	movwf	DATAEE_WriteByte@bData^(0+128)
  9744  03A7  3189  2187  3182   	fcall	_DATAEE_WriteByte
  9745  03AA                     l5186:
  9746                           
  9747                           ;main.c: 717: };main.c: 719: NREG = DATAEE_ReadByte(0x7000 + (1*8));
  9748  03AA  3008               	movlw	8
  9749  03AB  0021               	movlb	1	; select bank1
  9750  03AC  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9751  03AD  3070               	movlw	112
  9752  03AE  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9753  03AF  3197  279A  3182   	fcall	_DATAEE_ReadByte
  9754  03B2  0021               	movlb	1	; select bank1
  9755  03B3  00A9               	movwf	??_main^(0+128)
  9756  03B4  0829               	movf	??_main^(0+128),w
  9757  03B5  00C7               	movwf	_NREG^(0+128)
  9758  03B6                     l5188:
  9759                           
  9760                           ;main.c: 720: PMON = DATAEE_ReadByte(0x7000 + (2*8));
  9761  03B6  3010               	movlw	16
  9762  03B7  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9763  03B8  3070               	movlw	112
  9764  03B9  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9765  03BA  3197  279A  3182   	fcall	_DATAEE_ReadByte
  9766  03BD  0021               	movlb	1	; select bank1
  9767  03BE  00A9               	movwf	??_main^(0+128)
  9768  03BF  0829               	movf	??_main^(0+128),w
  9769  03C0  00C6               	movwf	_PMON^(0+128)
  9770  03C1                     l5190:
  9771                           
  9772                           ;main.c: 721: TALA = DATAEE_ReadByte(0x7000 + (3*8));
  9773  03C1  3018               	movlw	24
  9774  03C2  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9775  03C3  3070               	movlw	112
  9776  03C4  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9777  03C5  3197  279A  3182   	fcall	_DATAEE_ReadByte
  9778  03C8  0021               	movlb	1	; select bank1
  9779  03C9  00A9               	movwf	??_main^(0+128)
  9780  03CA  0829               	movf	??_main^(0+128),w
  9781  03CB  0020               	movlb	0	; select bank0
  9782  03CC  00E6               	movwf	_TALA
  9783  03CD                     l5192:
  9784                           
  9785                           ;main.c: 722: clkAlarm.alarmVal.h = DATAEE_ReadByte(0x7000 + (4*8));
  9786  03CD  3020               	movlw	32
  9787  03CE  0021               	movlb	1	; select bank1
  9788  03CF  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9789  03D0  3070               	movlw	112
  9790  03D1  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9791  03D2  3197  279A  3182   	fcall	_DATAEE_ReadByte
  9792  03D5  0021               	movlb	1	; select bank1
  9793  03D6  00A9               	movwf	??_main^(0+128)
  9794  03D7  0829               	movf	??_main^(0+128),w
  9795  03D8  0020               	movlb	0	; select bank0
  9796  03D9  00CD               	movwf	_clkAlarm
  9797  03DA                     l5194:
  9798                           
  9799                           ;main.c: 723: clkAlarm.alarmVal.m = DATAEE_ReadByte(0x7000 + (5*8));
  9800  03DA  3028               	movlw	40
  9801  03DB  0021               	movlb	1	; select bank1
  9802  03DC  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9803  03DD  3070               	movlw	112
  9804  03DE  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9805  03DF  3197  279A  3182   	fcall	_DATAEE_ReadByte
  9806  03E2  0021               	movlb	1	; select bank1
  9807  03E3  00A9               	movwf	??_main^(0+128)
  9808  03E4  0829               	movf	??_main^(0+128),w
  9809  03E5  0020               	movlb	0	; select bank0
  9810  03E6  00CE               	movwf	_clkAlarm+1
  9811  03E7                     l5196:
  9812                           
  9813                           ;main.c: 724: clkAlarm.alarmVal.s = DATAEE_ReadByte(0x7000 + (6*8));
  9814  03E7  3030               	movlw	48
  9815  03E8  0021               	movlb	1	; select bank1
  9816  03E9  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9817  03EA  3070               	movlw	112
  9818  03EB  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9819  03EC  3197  279A  3182   	fcall	_DATAEE_ReadByte
  9820  03EF  0021               	movlb	1	; select bank1
  9821  03F0  00A9               	movwf	??_main^(0+128)
  9822  03F1  0829               	movf	??_main^(0+128),w
  9823  03F2  0020               	movlb	0	; select bank0
  9824  03F3  00CF               	movwf	_clkAlarm+2
  9825  03F4                     l5198:
  9826                           
  9827                           ;main.c: 725: tempAlarm.alarmTemp = DATAEE_ReadByte(0x7000 + (7*8));
  9828  03F4  3038               	movlw	56
  9829  03F5  0021               	movlb	1	; select bank1
  9830  03F6  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9831  03F7  3070               	movlw	112
  9832  03F8  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9833  03F9  3197  279A  3182   	fcall	_DATAEE_ReadByte
  9834  03FC  0021               	movlb	1	; select bank1
  9835  03FD  00A9               	movwf	??_main^(0+128)
  9836  03FE  0829               	movf	??_main^(0+128),w
  9837  03FF  0020               	movlb	0	; select bank0
  9838  0400  00D4               	movwf	_tempAlarm
  9839  0401                     l5200:
  9840                           
  9841                           ;main.c: 726: lumAlarm.alarmLum = DATAEE_ReadByte(0x7000 + (8*8));
  9842  0401  3040               	movlw	64
  9843  0402  0021               	movlb	1	; select bank1
  9844  0403  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9845  0404  3070               	movlw	112
  9846  0405  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9847  0406  3197  279A  3182   	fcall	_DATAEE_ReadByte
  9848  0409  0021               	movlb	1	; select bank1
  9849  040A  00A9               	movwf	??_main^(0+128)
  9850  040B  0829               	movf	??_main^(0+128),w
  9851  040C  0020               	movlb	0	; select bank0
  9852  040D  00D1               	movwf	_lumAlarm
  9853  040E                     l5202:
  9854                           
  9855                           ;main.c: 727: ALAF = DATAEE_ReadByte(0x7000 + (9*8));
  9856  040E  3048               	movlw	72
  9857  040F  0021               	movlb	1	; select bank1
  9858  0410  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9859  0411  3070               	movlw	112
  9860  0412  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9861  0413  3197  279A  3182   	fcall	_DATAEE_ReadByte
  9862  0416  0021               	movlb	1	; select bank1
  9863  0417  00A9               	movwf	??_main^(0+128)
  9864  0418  0829               	movf	??_main^(0+128),w
  9865  0419  0020               	movlb	0	; select bank0
  9866  041A  00E5               	movwf	_ALAF
  9867  041B                     l5204:
  9868                           
  9869                           ;main.c: 728: t.h = DATAEE_ReadByte(0x7000 + (10*8));
  9870  041B  3050               	movlw	80
  9871  041C  0021               	movlb	1	; select bank1
  9872  041D  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9873  041E  3070               	movlw	112
  9874  041F  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9875  0420  3197  279A  3182   	fcall	_DATAEE_ReadByte
  9876  0423  0021               	movlb	1	; select bank1
  9877  0424  00A9               	movwf	??_main^(0+128)
  9878  0425  0829               	movf	??_main^(0+128),w
  9879  0426  0020               	movlb	0	; select bank0
  9880  0427  00D7               	movwf	_t
  9881  0428                     l5206:
  9882                           
  9883                           ;main.c: 729: t.m = DATAEE_ReadByte(0x7000 + (11*8));
  9884  0428  3058               	movlw	88
  9885  0429  0021               	movlb	1	; select bank1
  9886  042A  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9887  042B  3070               	movlw	112
  9888  042C  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9889  042D  3197  279A  3182   	fcall	_DATAEE_ReadByte
  9890  0430  0021               	movlb	1	; select bank1
  9891  0431  00A9               	movwf	??_main^(0+128)
  9892  0432  0829               	movf	??_main^(0+128),w
  9893  0433  0020               	movlb	0	; select bank0
  9894  0434  00D8               	movwf	_t+1
  9895  0435                     l5208:
  9896                           
  9897                           ;main.c: 730: idx_RingBuffer = DATAEE_ReadByte(0x7000 + (12*8));
  9898  0435  3060               	movlw	96
  9899  0436  0021               	movlb	1	; select bank1
  9900  0437  00A0               	movwf	DATAEE_ReadByte@bAdd^(0+128)
  9901  0438  3070               	movlw	112
  9902  0439  00A1               	movwf	(DATAEE_ReadByte@bAdd^(0+128)+1)
  9903  043A  3197  279A  3182   	fcall	_DATAEE_ReadByte
  9904  043D  0021               	movlb	1	; select bank1
  9905  043E  00A9               	movwf	??_main^(0+128)
  9906  043F  0829               	movf	??_main^(0+128),w
  9907  0440  00C5               	movwf	_idx_RingBuffer^(0+128)
  9908  0441                     l5210:
  9909                           
  9910                           ;main.c: 734: tempAlarm.trigger = 0;
  9911  0441  0020               	movlb	0	; select bank0
  9912  0442  01D5               	clrf	_tempAlarm+1
  9913  0443                     l5212:
  9914                           
  9915                           ;main.c: 735: tempAlarm.triggered = 0;
  9916  0443  01D6               	clrf	_tempAlarm+2
  9917  0444                     l5214:
  9918                           
  9919                           ;main.c: 737: lumAlarm.trigger = 0;
  9920  0444  01D2               	clrf	_lumAlarm+1
  9921  0445                     l5216:
  9922                           
  9923                           ;main.c: 738: lumAlarm.triggered = 0;
  9924  0445  01D3               	clrf	_lumAlarm+2
  9925  0446                     l5218:
  9926                           
  9927                           ;main.c: 740: clkAlarm.trigger = 0;
  9928  0446  01D0               	clrf	_clkAlarm+3
  9929  0447                     l5220:
  9930                           
  9931                           ;main.c: 743: i2c1_driver_open();
  9932  0447  3197  2774  3182   	fcall	_i2c1_driver_open
  9933  044A                     l5222:
  9934                           
  9935                           ;main.c: 744: TRISCbits.TRISC3 = 1;
  9936  044A  0020               	movlb	0	; select bank0
  9937  044B  1593               	bsf	19,3	;volatile
  9938  044C                     l5224:
  9939                           
  9940                           ;main.c: 745: TRISCbits.TRISC4 = 1;
  9941  044C  1613               	bsf	19,4	;volatile
  9942  044D                     l5226:
  9943                           
  9944                           ;main.c: 746: WPUC3 = 1;
  9945  044D  003E               	movlb	30	; select bank30
  9946  044E  15CF               	bsf	79,3	;volatile
  9947  044F                     l5228:
  9948                           
  9949                           ;main.c: 747: WPUC4 = 1;
  9950  044F  164F               	bsf	79,4	;volatile
  9951  0450                     l5230:
  9952                           
  9953                           ;main.c: 748: LCDinit();
  9954  0450  318C  24A8  3182   	fcall	_LCDinit
  9955  0453                     l5232:
  9956                           
  9957                           ;main.c: 751: (INTCONbits.GIE = 1);
  9958  0453  178B               	bsf	11,7	;volatile
  9959  0454                     l5234:
  9960                           
  9961                           ;main.c: 754: (INTCONbits.PEIE = 1);
  9962  0454  170B               	bsf	11,6	;volatile
  9963  0455  0063               	sleep	;# 
  9964  0456  2C6B               	goto	l5244
  9965  0457                     l5236:
  9966  0457  0021               	movlb	1	; select bank1
  9967  0458  0844               	movf	_PWM_on^(0+128),w
  9968  0459  1903               	btfsc	3,2
  9969  045A  2C5C               	goto	u5001
  9970  045B  2C5D               	goto	u5000
  9971  045C                     u5001:
  9972  045C  2C5E               	goto	l1381
  9973  045D                     u5000:
  9974  045D  2C6B               	goto	l5244
  9975  045E                     l1381:
  9976  045E  0063               	sleep	;# 
  9977  045F                     l5242:
  9978                           
  9979                           ;main.c: 763: editClock();
  9980  045F  318B  23F6  3182   	fcall	_editClock
  9981  0462                     l1385:	
  9982                           ;main.c: 764: case 2:
  9983                           
  9984                           
  9985                           ;main.c: 765: editTemp();
  9986  0462  3189  21D2  3182   	fcall	_editTemp
  9987  0465                     l1386:	
  9988                           ;main.c: 766: case 3:
  9989                           
  9990                           
  9991                           ;main.c: 767: editLum();
  9992  0465  3189  21AB  3182   	fcall	_editLum
  9993  0468                     l1387:	
  9994                           ;main.c: 768: case 4:
  9995                           
  9996                           
  9997                           ;main.c: 769: toggleAlarms();
  9998  0468  3189  21F9  3182   	fcall	_toggleAlarms
  9999  046B                     l5244:	
 10000                           ;main.c: 770: }
 10001                           
 10002                           
 10003                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10004                           ; Switch size 1, requested type "simple"
 10005                           ; Number of cases is 1, Range of values is 0 to 0
 10006                           ; switch strategies available:
 10007                           ; Name         Instructions Cycles
 10008                           ; simple_byte            4     3 (average)
 10009                           ; direct_byte            8     6 (fixed)
 10010                           ; jumptable            260     6 (fixed)
 10011                           ;	Chosen strategy is simple_byte
 10012  046B  0020               	movlb	0	; select bank0
 10013  046C  085B               	movf	_mode+1,w
 10014  046D  3A00               	xorlw	0	; case 0
 10015  046E  1903               	skipnz
 10016  046F  2C71               	goto	l5270
 10017  0470  2C6B               	goto	l5244
 10018  0471                     l5270:
 10019                           
 10020                           ; Switch size 1, requested type "simple"
 10021                           ; Number of cases is 5, Range of values is 0 to 4
 10022                           ; switch strategies available:
 10023                           ; Name         Instructions Cycles
 10024                           ; direct_byte           16     6 (fixed)
 10025                           ; simple_byte           16     9 (average)
 10026                           ; jumptable            260     6 (fixed)
 10027                           ;	Chosen strategy is simple_byte
 10028  0471  085A               	movf	_mode,w
 10029  0472  3A00               	xorlw	0	; case 0
 10030  0473  1903               	skipnz
 10031  0474  2C57               	goto	l5236
 10032  0475  3A01               	xorlw	1	; case 1
 10033  0476  1903               	skipnz
 10034  0477  2C5F               	goto	l5242
 10035  0478  3A03               	xorlw	3	; case 2
 10036  0479  1903               	skipnz
 10037  047A  2C62               	goto	l1385
 10038  047B  3A01               	xorlw	1	; case 3
 10039  047C  1903               	skipnz
 10040  047D  2C65               	goto	l1386
 10041  047E  3A07               	xorlw	7	; case 4
 10042  047F  1903               	skipnz
 10043  0480  2C68               	goto	l1387
 10044  0481  2C6B               	goto	l5244
 10045  0482  3180  284C         	ljmp	start
 10046  0484                     __end_of_main:
 10047                           
 10048                           	psect	text1
 10049  09F9                     __ptext1:	
 10050 ;; *************** function _toggleAlarms *****************
 10051 ;; Defined at:
 10052 ;;		line 623 in file "main.c"
 10053 ;; Parameters:    Size  Location     Type
 10054 ;;		None
 10055 ;; Auto vars:     Size  Location     Type
 10056 ;;		None
 10057 ;; Return value:  Size  Location     Type
 10058 ;;                  1    wreg      void 
 10059 ;; Registers used:
 10060 ;;		wreg, status,2, status,0
 10061 ;; Tracked objects:
 10062 ;;		On entry : 0/0
 10063 ;;		On exit  : 0/0
 10064 ;;		Unchanged: 0/0
 10065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10068 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10069 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10070 ;;Total ram usage:        1 bytes
 10071 ;; Hardware stack levels used:    1
 10072 ;; Hardware stack levels required when called:    7
 10073 ;; This function calls:
 10074 ;;		Nothing
 10075 ;; This function is called by:
 10076 ;;		_main
 10077 ;; This function uses a non-reentrant model
 10078 ;;
 10079                           
 10080                           
 10081                           ;psect for function _toggleAlarms
 10082  09F9                     _toggleAlarms:
 10083  09F9                     l1349:	
 10084                           ;incstack = 0
 10085                           ; Regs used in _toggleAlarms: [wreg+status,2+status,0]
 10086                           ;main.c: 625: while(1){
 10087                           
 10088                           
 10089                           ;main.c: 633: if(PORTCbits.RC5 == 0){
 10090  09F9  0020               	movlb	0	; select bank0
 10091  09FA  1A8E               	btfsc	14,5	;volatile
 10092  09FB  29FD               	goto	u4801
 10093  09FC  29FE               	goto	u4800
 10094  09FD                     u4801:
 10095  09FD  2A1A               	goto	l5098
 10096  09FE                     u4800:
 10097  09FE                     l5092:
 10098                           
 10099                           ;main.c: 634: if(ALAF == 'A'){
 10100  09FE  3041               	movlw	65
 10101  09FF  0665               	xorwf	_ALAF,w
 10102  0A00  1D03               	btfss	3,2
 10103  0A01  2A03               	goto	u4811
 10104  0A02  2A04               	goto	u4810
 10105  0A03                     u4811:
 10106  0A03  2A0B               	goto	l5096
 10107  0A04                     u4810:
 10108  0A04                     l5094:
 10109                           
 10110                           ;main.c: 635: ALAF = 'a';
 10111  0A04  3061               	movlw	97
 10112  0A05  0021               	movlb	1	; select bank1
 10113  0A06  00A0               	movwf	??_toggleAlarms^(0+128)
 10114  0A07  0820               	movf	??_toggleAlarms^(0+128),w
 10115  0A08  0020               	movlb	0	; select bank0
 10116  0A09  00E5               	movwf	_ALAF
 10117                           
 10118                           ;main.c: 636: } else {
 10119  0A0A  2A11               	goto	l1352
 10120  0A0B                     l5096:
 10121                           
 10122                           ;main.c: 637: ALAF = 'A';
 10123  0A0B  3041               	movlw	65
 10124  0A0C  0021               	movlb	1	; select bank1
 10125  0A0D  00A0               	movwf	??_toggleAlarms^(0+128)
 10126  0A0E  0820               	movf	??_toggleAlarms^(0+128),w
 10127  0A0F  0020               	movlb	0	; select bank0
 10128  0A10  00E5               	movwf	_ALAF
 10129  0A11                     l1352:
 10130                           
 10131                           ;main.c: 638: };main.c: 639: _delay((unsigned long)((100)*(1000000/4000.0)));
 10132  0A11  3021               	movlw	33
 10133  0A12  0021               	movlb	1	; select bank1
 10134  0A13  00A0               	movwf	??_toggleAlarms^(0+128)
 10135  0A14  3076               	movlw	118
 10136  0A15                     u5017:
 10137  0A15  0B89               	decfsz	9,f
 10138  0A16  2A15               	goto	u5017
 10139  0A17  0BA0               	decfsz	??_toggleAlarms^(0+128),f
 10140  0A18  2A15               	goto	u5017
 10141  0A19  0000               	nop
 10142  0A1A                     l5098:
 10143                           
 10144                           ;main.c: 640: };main.c: 641: if(mode != 4){
 10145  0A1A  3004               	movlw	4
 10146  0A1B  0020               	movlb	0	; select bank0
 10147  0A1C  065A               	xorwf	_mode,w
 10148  0A1D  045B               	iorwf	_mode+1,w
 10149  0A1E  1903               	btfsc	3,2
 10150  0A1F  2A21               	goto	u4821
 10151  0A20  2A22               	goto	u4820
 10152  0A21                     u4821:
 10153  0A21  29F9               	goto	l1349
 10154  0A22                     u4820:
 10155  0A22                     l5100:
 10156                           
 10157                           ;main.c: 642: mode = 0;
 10158  0A22  01DA               	clrf	_mode
 10159  0A23  01DB               	clrf	_mode+1
 10160  0A24                     l1356:	
 10161                           ;main.c: 643: break;
 10162                           
 10163  0A24  0008               	return
 10164  0A25                     __end_of_toggleAlarms:
 10165                           
 10166                           	psect	text2
 10167  1774                     __ptext2:	
 10168 ;; *************** function _i2c1_driver_open *****************
 10169 ;; Defined at:
 10170 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 10171 ;; Parameters:    Size  Location     Type
 10172 ;;		None
 10173 ;; Auto vars:     Size  Location     Type
 10174 ;;		None
 10175 ;; Return value:  Size  Location     Type
 10176 ;;		None               void
 10177 ;; Registers used:
 10178 ;;		wreg, status,2
 10179 ;; Tracked objects:
 10180 ;;		On entry : 0/0
 10181 ;;		On exit  : 0/0
 10182 ;;		Unchanged: 0/0
 10183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10188 ;;Total ram usage:        0 bytes
 10189 ;; Hardware stack levels used:    1
 10190 ;; Hardware stack levels required when called:    7
 10191 ;; This function calls:
 10192 ;;		Nothing
 10193 ;; This function is called by:
 10194 ;;		_main
 10195 ;; This function uses a non-reentrant model
 10196 ;;
 10197                           
 10198                           
 10199                           ;psect for function _i2c1_driver_open
 10200  1774                     _i2c1_driver_open:
 10201  1774                     l4852:	
 10202                           ;incstack = 0
 10203                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 10204                           
 10205                           
 10206                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 10207  1774  0023               	movlb	3	; select bank3
 10208  1775  1A90               	btfsc	16,5	;volatile
 10209  1776  2F78               	goto	u4331
 10210  1777  2F79               	goto	u4330
 10211  1778                     u4331:
 10212  1778  2F7F               	goto	l243
 10213  1779                     u4330:
 10214  1779                     l4854:
 10215                           
 10216                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
 10217  1779  018F               	clrf	15	;volatile
 10218  177A                     l4856:
 10219                           
 10220                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 10221  177A  3028               	movlw	40
 10222  177B  0090               	movwf	16	;volatile
 10223  177C                     l4858:
 10224                           
 10225                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 10226  177C  0191               	clrf	17	;volatile
 10227                           
 10228                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 10229  177D  3003               	movlw	3
 10230  177E  008D               	movwf	13	;volatile
 10231  177F                     l243:
 10232  177F  0008               	return
 10233  1780                     __end_of_i2c1_driver_open:
 10234                           
 10235                           	psect	text3
 10236  09D2                     __ptext3:	
 10237 ;; *************** function _editTemp *****************
 10238 ;; Defined at:
 10239 ;;		line 571 in file "main.c"
 10240 ;; Parameters:    Size  Location     Type
 10241 ;;		None
 10242 ;; Auto vars:     Size  Location     Type
 10243 ;;		None
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  1    wreg      void 
 10246 ;; Registers used:
 10247 ;;		wreg, status,2, status,0
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10255 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10256 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10257 ;;Total ram usage:        1 bytes
 10258 ;; Hardware stack levels used:    1
 10259 ;; Hardware stack levels required when called:    7
 10260 ;; This function calls:
 10261 ;;		Nothing
 10262 ;; This function is called by:
 10263 ;;		_main
 10264 ;; This function uses a non-reentrant model
 10265 ;;
 10266                           
 10267                           
 10268                           ;psect for function _editTemp
 10269  09D2                     _editTemp:
 10270  09D2                     l5064:	
 10271                           ;incstack = 0
 10272                           ; Regs used in _editTemp: [wreg+status,2+status,0]
 10273                           
 10274                           
 10275                           ;main.c: 572: editingTempAlarm = 1;
 10276  09D2  0020               	movlb	0	; select bank0
 10277  09D3  01E1               	clrf	_editingTempAlarm
 10278  09D4  0AE1               	incf	_editingTempAlarm,f
 10279  09D5                     l1331:	
 10280                           ;main.c: 574: while(1){
 10281                           
 10282                           
 10283                           ;main.c: 583: if(PORTCbits.RC5 == 0){
 10284  09D5  1A8E               	btfsc	14,5	;volatile
 10285  09D6  29D8               	goto	u4741
 10286  09D7  29D9               	goto	u4740
 10287  09D8                     u4741:
 10288  09D8  29EF               	goto	l5074
 10289  09D9                     u4740:
 10290  09D9                     l5066:
 10291                           
 10292                           ;main.c: 584: tempAlarm.alarmTemp++;
 10293  09D9  3001               	movlw	1
 10294  09DA  0021               	movlb	1	; select bank1
 10295  09DB  00A0               	movwf	??_editTemp^(0+128)
 10296  09DC  0820               	movf	??_editTemp^(0+128),w
 10297  09DD  0020               	movlb	0	; select bank0
 10298  09DE  07D4               	addwf	_tempAlarm,f
 10299  09DF                     l5068:
 10300                           
 10301                           ;main.c: 585: if(tempAlarm.alarmTemp > 50){
 10302  09DF  3033               	movlw	51
 10303  09E0  0254               	subwf	_tempAlarm,w
 10304  09E1  1C03               	skipc
 10305  09E2  29E4               	goto	u4751
 10306  09E3  29E5               	goto	u4750
 10307  09E4                     u4751:
 10308  09E4  29E6               	goto	l5072
 10309  09E5                     u4750:
 10310  09E5                     l5070:
 10311                           
 10312                           ;main.c: 586: tempAlarm.alarmTemp = 0;
 10313  09E5  01D4               	clrf	_tempAlarm
 10314  09E6                     l5072:
 10315                           
 10316                           ;main.c: 587: };main.c: 588: _delay((unsigned long)((100)*(1000000/4000.0)));
 10317  09E6  3021               	movlw	33
 10318  09E7  0021               	movlb	1	; select bank1
 10319  09E8  00A0               	movwf	??_editTemp^(0+128)
 10320  09E9  3076               	movlw	118
 10321  09EA                     u5027:
 10322  09EA  0B89               	decfsz	9,f
 10323  09EB  29EA               	goto	u5027
 10324  09EC  0BA0               	decfsz	??_editTemp^(0+128),f
 10325  09ED  29EA               	goto	u5027
 10326  09EE  0000               	nop
 10327  09EF                     l5074:
 10328                           
 10329                           ;main.c: 589: };main.c: 590: if(mode != 2){
 10330  09EF  3002               	movlw	2
 10331  09F0  0020               	movlb	0	; select bank0
 10332  09F1  065A               	xorwf	_mode,w
 10333  09F2  045B               	iorwf	_mode+1,w
 10334  09F3  1903               	btfsc	3,2
 10335  09F4  29F6               	goto	u4761
 10336  09F5  29F7               	goto	u4760
 10337  09F6                     u4761:
 10338  09F6  29D5               	goto	l1331
 10339  09F7                     u4760:
 10340  09F7                     l5076:
 10341                           
 10342                           ;main.c: 591: editingTempAlarm = 0;
 10343  09F7  01E1               	clrf	_editingTempAlarm
 10344  09F8                     l1337:	
 10345                           ;main.c: 592: break;
 10346                           
 10347  09F8  0008               	return
 10348  09F9                     __end_of_editTemp:
 10349                           
 10350                           	psect	text4
 10351  09AB                     __ptext4:	
 10352 ;; *************** function _editLum *****************
 10353 ;; Defined at:
 10354 ;;		line 597 in file "main.c"
 10355 ;; Parameters:    Size  Location     Type
 10356 ;;		None
 10357 ;; Auto vars:     Size  Location     Type
 10358 ;;		None
 10359 ;; Return value:  Size  Location     Type
 10360 ;;                  1    wreg      void 
 10361 ;; Registers used:
 10362 ;;		wreg, status,2, status,0
 10363 ;; Tracked objects:
 10364 ;;		On entry : 0/0
 10365 ;;		On exit  : 0/0
 10366 ;;		Unchanged: 0/0
 10367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10370 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10371 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10372 ;;Total ram usage:        1 bytes
 10373 ;; Hardware stack levels used:    1
 10374 ;; Hardware stack levels required when called:    7
 10375 ;; This function calls:
 10376 ;;		Nothing
 10377 ;; This function is called by:
 10378 ;;		_main
 10379 ;; This function uses a non-reentrant model
 10380 ;;
 10381                           
 10382                           
 10383                           ;psect for function _editLum
 10384  09AB                     _editLum:
 10385  09AB                     l5078:	
 10386                           ;incstack = 0
 10387                           ; Regs used in _editLum: [wreg+status,2+status,0]
 10388                           
 10389                           
 10390                           ;main.c: 598: editingLumAlarm = 1;
 10391  09AB  0020               	movlb	0	; select bank0
 10392  09AC  01E0               	clrf	_editingLumAlarm
 10393  09AD  0AE0               	incf	_editingLumAlarm,f
 10394  09AE                     l1340:	
 10395                           ;main.c: 600: while(1){
 10396                           
 10397                           
 10398                           ;main.c: 609: if(PORTCbits.RC5 == 0){
 10399  09AE  1A8E               	btfsc	14,5	;volatile
 10400  09AF  29B1               	goto	u4771
 10401  09B0  29B2               	goto	u4770
 10402  09B1                     u4771:
 10403  09B1  29C8               	goto	l5088
 10404  09B2                     u4770:
 10405  09B2                     l5080:
 10406                           
 10407                           ;main.c: 610: lumAlarm.alarmLum++;
 10408  09B2  3001               	movlw	1
 10409  09B3  0021               	movlb	1	; select bank1
 10410  09B4  00A0               	movwf	??_editLum^(0+128)
 10411  09B5  0820               	movf	??_editLum^(0+128),w
 10412  09B6  0020               	movlb	0	; select bank0
 10413  09B7  07D1               	addwf	_lumAlarm,f
 10414  09B8                     l5082:
 10415                           
 10416                           ;main.c: 611: if(lumAlarm.alarmLum > 7){
 10417  09B8  3008               	movlw	8
 10418  09B9  0251               	subwf	_lumAlarm,w
 10419  09BA  1C03               	skipc
 10420  09BB  29BD               	goto	u4781
 10421  09BC  29BE               	goto	u4780
 10422  09BD                     u4781:
 10423  09BD  29BF               	goto	l5086
 10424  09BE                     u4780:
 10425  09BE                     l5084:
 10426                           
 10427                           ;main.c: 612: lumAlarm.alarmLum = 0;
 10428  09BE  01D1               	clrf	_lumAlarm
 10429  09BF                     l5086:
 10430                           
 10431                           ;main.c: 613: };main.c: 614: _delay((unsigned long)((100)*(1000000/4000.0)));
 10432  09BF  3021               	movlw	33
 10433  09C0  0021               	movlb	1	; select bank1
 10434  09C1  00A0               	movwf	??_editLum^(0+128)
 10435  09C2  3076               	movlw	118
 10436  09C3                     u5037:
 10437  09C3  0B89               	decfsz	9,f
 10438  09C4  29C3               	goto	u5037
 10439  09C5  0BA0               	decfsz	??_editLum^(0+128),f
 10440  09C6  29C3               	goto	u5037
 10441  09C7  0000               	nop
 10442  09C8                     l5088:
 10443                           
 10444                           ;main.c: 615: };main.c: 616: if(mode != 3){
 10445  09C8  3003               	movlw	3
 10446  09C9  0020               	movlb	0	; select bank0
 10447  09CA  065A               	xorwf	_mode,w
 10448  09CB  045B               	iorwf	_mode+1,w
 10449  09CC  1903               	btfsc	3,2
 10450  09CD  29CF               	goto	u4791
 10451  09CE  29D0               	goto	u4790
 10452  09CF                     u4791:
 10453  09CF  29AE               	goto	l1340
 10454  09D0                     u4790:
 10455  09D0                     l5090:
 10456                           
 10457                           ;main.c: 617: editingLumAlarm = 0;
 10458  09D0  01E0               	clrf	_editingLumAlarm
 10459  09D1                     l1346:	
 10460                           ;main.c: 618: break;
 10461                           
 10462  09D1  0008               	return
 10463  09D2                     __end_of_editLum:
 10464                           
 10465                           	psect	text5
 10466  0BF6                     __ptext5:	
 10467 ;; *************** function _editClock *****************
 10468 ;; Defined at:
 10469 ;;		line 528 in file "main.c"
 10470 ;; Parameters:    Size  Location     Type
 10471 ;;		None
 10472 ;; Auto vars:     Size  Location     Type
 10473 ;;		None
 10474 ;; Return value:  Size  Location     Type
 10475 ;;                  1    wreg      void 
 10476 ;; Registers used:
 10477 ;;		wreg, status,2, status,0
 10478 ;; Tracked objects:
 10479 ;;		On entry : 0/0
 10480 ;;		On exit  : 0/0
 10481 ;;		Unchanged: 0/0
 10482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10485 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10486 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10487 ;;Total ram usage:        1 bytes
 10488 ;; Hardware stack levels used:    1
 10489 ;; Hardware stack levels required when called:    7
 10490 ;; This function calls:
 10491 ;;		Nothing
 10492 ;; This function is called by:
 10493 ;;		_main
 10494 ;; This function uses a non-reentrant model
 10495 ;;
 10496                           
 10497                           
 10498                           ;psect for function _editClock
 10499  0BF6                     _editClock:
 10500  0BF6                     l1312:	
 10501                           ;incstack = 0
 10502                           ; Regs used in _editClock: [wreg+status,2+status,0]
 10503                           ;main.c: 530: while(1){
 10504                           
 10505                           
 10506                           ;main.c: 542: if(PORTCbits.RC5 == 0){
 10507  0BF6  0020               	movlb	0	; select bank0
 10508  0BF7  1A8E               	btfsc	14,5	;volatile
 10509  0BF8  2BFA               	goto	u4661
 10510  0BF9  2BFB               	goto	u4660
 10511  0BFA                     u4661:
 10512  0BFA  2C44               	goto	l5060
 10513  0BFB                     u4660:
 10514  0BFB                     l5034:
 10515                           
 10516                           ;main.c: 543: if(editingClockAlarm == 1){
 10517  0BFB  035C               	decf	_editingClockAlarm,w
 10518  0BFC  045D               	iorwf	_editingClockAlarm+1,w
 10519  0BFD  1D03               	btfss	3,2
 10520  0BFE  2C00               	goto	u4671
 10521  0BFF  2C01               	goto	u4670
 10522  0C00                     u4671:
 10523  0C00  2C10               	goto	l5042
 10524  0C01                     u4670:
 10525  0C01                     l5036:
 10526                           
 10527                           ;main.c: 544: if(clkAlarm.alarmVal.h >= 23){
 10528  0C01  3017               	movlw	23
 10529  0C02  024D               	subwf	_clkAlarm,w
 10530  0C03  1C03               	skipc
 10531  0C04  2C06               	goto	u4681
 10532  0C05  2C07               	goto	u4680
 10533  0C06                     u4681:
 10534  0C06  2C09               	goto	l5040
 10535  0C07                     u4680:
 10536  0C07                     l5038:
 10537                           
 10538                           ;main.c: 545: clkAlarm.alarmVal.h = 0;
 10539  0C07  01CD               	clrf	_clkAlarm
 10540                           
 10541                           ;main.c: 546: } else{
 10542  0C08  2C3B               	goto	l5058
 10543  0C09                     l5040:
 10544                           
 10545                           ;main.c: 547: clkAlarm.alarmVal.h++;
 10546  0C09  3001               	movlw	1
 10547  0C0A  0021               	movlb	1	; select bank1
 10548  0C0B  00A0               	movwf	??_editClock^(0+128)
 10549  0C0C  0820               	movf	??_editClock^(0+128),w
 10550  0C0D  0020               	movlb	0	; select bank0
 10551  0C0E  07CD               	addwf	_clkAlarm,f
 10552  0C0F  2C3B               	goto	l5058
 10553  0C10                     l5042:
 10554  0C10  3002               	movlw	2
 10555  0C11  065C               	xorwf	_editingClockAlarm,w
 10556  0C12  045D               	iorwf	_editingClockAlarm+1,w
 10557  0C13  1D03               	btfss	3,2
 10558  0C14  2C16               	goto	u4691
 10559  0C15  2C17               	goto	u4690
 10560  0C16                     u4691:
 10561  0C16  2C26               	goto	l5050
 10562  0C17                     u4690:
 10563  0C17                     l5044:
 10564                           
 10565                           ;main.c: 550: if(clkAlarm.alarmVal.m == 59){
 10566  0C17  303B               	movlw	59
 10567  0C18  064E               	xorwf	_clkAlarm+1,w
 10568  0C19  1D03               	btfss	3,2
 10569  0C1A  2C1C               	goto	u4701
 10570  0C1B  2C1D               	goto	u4700
 10571  0C1C                     u4701:
 10572  0C1C  2C1F               	goto	l5048
 10573  0C1D                     u4700:
 10574  0C1D                     l5046:
 10575                           
 10576                           ;main.c: 551: clkAlarm.alarmVal.m = 0;
 10577  0C1D  01CE               	clrf	_clkAlarm+1
 10578                           
 10579                           ;main.c: 552: } else{
 10580  0C1E  2C3B               	goto	l5058
 10581  0C1F                     l5048:
 10582                           
 10583                           ;main.c: 553: clkAlarm.alarmVal.m++;
 10584  0C1F  3001               	movlw	1
 10585  0C20  0021               	movlb	1	; select bank1
 10586  0C21  00A0               	movwf	??_editClock^(0+128)
 10587  0C22  0820               	movf	??_editClock^(0+128),w
 10588  0C23  0020               	movlb	0	; select bank0
 10589  0C24  07CE               	addwf	_clkAlarm+1,f
 10590  0C25  2C3B               	goto	l5058
 10591  0C26                     l5050:
 10592  0C26  3003               	movlw	3
 10593  0C27  065C               	xorwf	_editingClockAlarm,w
 10594  0C28  045D               	iorwf	_editingClockAlarm+1,w
 10595  0C29  1D03               	btfss	3,2
 10596  0C2A  2C2C               	goto	u4711
 10597  0C2B  2C2D               	goto	u4710
 10598  0C2C                     u4711:
 10599  0C2C  2C3B               	goto	l5058
 10600  0C2D                     u4710:
 10601  0C2D                     l5052:
 10602                           
 10603                           ;main.c: 556: if(clkAlarm.alarmVal.s == 59){
 10604  0C2D  303B               	movlw	59
 10605  0C2E  064F               	xorwf	_clkAlarm+2,w
 10606  0C2F  1D03               	btfss	3,2
 10607  0C30  2C32               	goto	u4721
 10608  0C31  2C33               	goto	u4720
 10609  0C32                     u4721:
 10610  0C32  2C35               	goto	l5056
 10611  0C33                     u4720:
 10612  0C33                     l5054:
 10613                           
 10614                           ;main.c: 557: clkAlarm.alarmVal.s = 0;
 10615  0C33  01CF               	clrf	_clkAlarm+2
 10616                           
 10617                           ;main.c: 558: } else{
 10618  0C34  2C3B               	goto	l5058
 10619  0C35                     l5056:
 10620                           
 10621                           ;main.c: 559: clkAlarm.alarmVal.s++;
 10622  0C35  3001               	movlw	1
 10623  0C36  0021               	movlb	1	; select bank1
 10624  0C37  00A0               	movwf	??_editClock^(0+128)
 10625  0C38  0820               	movf	??_editClock^(0+128),w
 10626  0C39  0020               	movlb	0	; select bank0
 10627  0C3A  07CF               	addwf	_clkAlarm+2,f
 10628  0C3B                     l5058:
 10629                           
 10630                           ;main.c: 560: };main.c: 561: };main.c: 562: _delay((unsigned long)((100)*(1000000/4000.0
      +                          )));
 10631  0C3B  3021               	movlw	33
 10632  0C3C  0021               	movlb	1	; select bank1
 10633  0C3D  00A0               	movwf	??_editClock^(0+128)
 10634  0C3E  3076               	movlw	118
 10635  0C3F                     u5047:
 10636  0C3F  0B89               	decfsz	9,f
 10637  0C40  2C3F               	goto	u5047
 10638  0C41  0BA0               	decfsz	??_editClock^(0+128),f
 10639  0C42  2C3F               	goto	u5047
 10640  0C43  0000               	nop
 10641  0C44                     l5060:
 10642                           
 10643                           ;main.c: 563: };main.c: 564: if(mode != 1){
 10644  0C44  0020               	movlb	0	; select bank0
 10645  0C45  035A               	decf	_mode,w
 10646  0C46  045B               	iorwf	_mode+1,w
 10647  0C47  1903               	btfsc	3,2
 10648  0C48  2C4A               	goto	u4731
 10649  0C49  2C4B               	goto	u4730
 10650  0C4A                     u4731:
 10651  0C4A  2BF6               	goto	l1312
 10652  0C4B                     u4730:
 10653  0C4B                     l5062:
 10654                           
 10655                           ;main.c: 565: editingClockAlarm = 0;
 10656  0C4B  01DC               	clrf	_editingClockAlarm
 10657  0C4C  01DD               	clrf	_editingClockAlarm+1
 10658  0C4D                     l1328:	
 10659                           ;main.c: 566: break;
 10660                           
 10661  0C4D  0008               	return
 10662  0C4E                     __end_of_editClock:
 10663                           
 10664                           	psect	text6
 10665  171F                     __ptext6:	
 10666 ;; *************** function _TMR2_StopTimer *****************
 10667 ;; Defined at:
 10668 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 10669 ;; Parameters:    Size  Location     Type
 10670 ;;		None
 10671 ;; Auto vars:     Size  Location     Type
 10672 ;;		None
 10673 ;; Return value:  Size  Location     Type
 10674 ;;                  1    wreg      void 
 10675 ;; Registers used:
 10676 ;;		status,2, status,0, pclath, cstack
 10677 ;; Tracked objects:
 10678 ;;		On entry : 0/0
 10679 ;;		On exit  : 0/0
 10680 ;;		Unchanged: 0/0
 10681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10686 ;;Total ram usage:        0 bytes
 10687 ;; Hardware stack levels used:    1
 10688 ;; Hardware stack levels required when called:    8
 10689 ;; This function calls:
 10690 ;;		_TMR2_Stop
 10691 ;; This function is called by:
 10692 ;;		_main
 10693 ;; This function uses a non-reentrant model
 10694 ;;
 10695                           
 10696                           
 10697                           ;psect for function _TMR2_StopTimer
 10698  171F                     _TMR2_StopTimer:
 10699  171F                     l4894:	
 10700                           ;incstack = 0
 10701                           ; Regs used in _TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 10702                           
 10703                           
 10704                           ;tmr2.c: 119: TMR2_Stop();
 10705  171F  3197  2714  3197   	fcall	_TMR2_Stop
 10706  1722                     l779:
 10707  1722  0008               	return
 10708  1723                     __end_of_TMR2_StopTimer:
 10709                           
 10710                           	psect	text7
 10711  1714                     __ptext7:	
 10712 ;; *************** function _TMR2_Stop *****************
 10713 ;; Defined at:
 10714 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 10715 ;; Parameters:    Size  Location     Type
 10716 ;;		None
 10717 ;; Auto vars:     Size  Location     Type
 10718 ;;		None
 10719 ;; Return value:  Size  Location     Type
 10720 ;;                  1    wreg      void 
 10721 ;; Registers used:
 10722 ;;		None
 10723 ;; Tracked objects:
 10724 ;;		On entry : 0/0
 10725 ;;		On exit  : 0/0
 10726 ;;		Unchanged: 0/0
 10727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10732 ;;Total ram usage:        0 bytes
 10733 ;; Hardware stack levels used:    1
 10734 ;; Hardware stack levels required when called:    7
 10735 ;; This function calls:
 10736 ;;		Nothing
 10737 ;; This function is called by:
 10738 ;;		_TMR2_StopTimer
 10739 ;; This function uses a non-reentrant model
 10740 ;;
 10741                           
 10742                           
 10743                           ;psect for function _TMR2_Stop
 10744  1714                     _TMR2_Stop:
 10745  1714                     l4522:	
 10746                           ;incstack = 0
 10747                           ; Regs used in _TMR2_Stop: []
 10748                           
 10749                           
 10750                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 10751  1714  0025               	movlb	5	; select bank5
 10752  1715  138E               	bcf	14,7	;volatile
 10753  1716                     l776:
 10754  1716  0008               	return
 10755  1717                     __end_of_TMR2_Stop:
 10756                           
 10757                           	psect	text8
 10758  0968                     __ptext8:	
 10759 ;; *************** function _SYSTEM_Initialize *****************
 10760 ;; Defined at:
 10761 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10762 ;; Parameters:    Size  Location     Type
 10763 ;;		None
 10764 ;; Auto vars:     Size  Location     Type
 10765 ;;		None
 10766 ;; Return value:  Size  Location     Type
 10767 ;;                  1    wreg      void 
 10768 ;; Registers used:
 10769 ;;		wreg, status,2, status,0, pclath, cstack
 10770 ;; Tracked objects:
 10771 ;;		On entry : 0/0
 10772 ;;		On exit  : 0/0
 10773 ;;		Unchanged: 0/0
 10774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10779 ;;Total ram usage:        0 bytes
 10780 ;; Hardware stack levels used:    1
 10781 ;; Hardware stack levels required when called:    9
 10782 ;; This function calls:
 10783 ;;		_ADCC_Initialize
 10784 ;;		_EXT_INT_Initialize
 10785 ;;		_OSCILLATOR_Initialize
 10786 ;;		_PIN_MANAGER_Initialize
 10787 ;;		_PMD_Initialize
 10788 ;;		_PWM6_Initialize
 10789 ;;		_TMR1_Initialize
 10790 ;;		_TMR2_Initialize
 10791 ;;		_TMR3_Initialize
 10792 ;;		_TMR5_Initialize
 10793 ;; This function is called by:
 10794 ;;		_main
 10795 ;; This function uses a non-reentrant model
 10796 ;;
 10797                           
 10798                           
 10799                           ;psect for function _SYSTEM_Initialize
 10800  0968                     _SYSTEM_Initialize:
 10801  0968                     l4832:	
 10802                           ;incstack = 0
 10803                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10804                           
 10805                           
 10806                           ;mcc.c: 52: PMD_Initialize();
 10807  0968  3197  2763  3189   	fcall	_PMD_Initialize
 10808  096B                     l4834:
 10809                           
 10810                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 10811  096B  318A  22C9  3189   	fcall	_PIN_MANAGER_Initialize
 10812  096E                     l4836:
 10813                           
 10814                           ;mcc.c: 54: OSCILLATOR_Initialize();
 10815  096E  3197  276B  3189   	fcall	_OSCILLATOR_Initialize
 10816  0971                     l4838:
 10817                           
 10818                           ;mcc.c: 55: PWM6_Initialize();
 10819  0971  3197  278D  3189   	fcall	_PWM6_Initialize
 10820  0974                     l4840:
 10821                           
 10822                           ;mcc.c: 56: ADCC_Initialize();
 10823  0974  3188  2069  3189   	fcall	_ADCC_Initialize
 10824  0977                     l4842:
 10825                           
 10826                           ;mcc.c: 57: TMR3_Initialize();
 10827  0977  3189  212A  3189   	fcall	_TMR3_Initialize
 10828  097A                     l4844:
 10829                           
 10830                           ;mcc.c: 58: TMR2_Initialize();
 10831  097A  3187  27F2  3189   	fcall	_TMR2_Initialize
 10832  097D                     l4846:
 10833                           
 10834                           ;mcc.c: 59: TMR5_Initialize();
 10835  097D  3189  2149  3189   	fcall	_TMR5_Initialize
 10836  0980                     l4848:
 10837                           
 10838                           ;mcc.c: 60: EXT_INT_Initialize();
 10839  0980  3188  2000  3189   	fcall	_EXT_INT_Initialize
 10840  0983                     l4850:
 10841                           
 10842                           ;mcc.c: 61: TMR1_Initialize();
 10843  0983  3189  210B  3189   	fcall	_TMR1_Initialize
 10844  0986                     l176:
 10845  0986  0008               	return
 10846  0987                     __end_of_SYSTEM_Initialize:
 10847                           
 10848                           	psect	text9
 10849  0949                     __ptext9:	
 10850 ;; *************** function _TMR5_Initialize *****************
 10851 ;; Defined at:
 10852 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 10853 ;; Parameters:    Size  Location     Type
 10854 ;;		None
 10855 ;; Auto vars:     Size  Location     Type
 10856 ;;		None
 10857 ;; Return value:  Size  Location     Type
 10858 ;;                  1    wreg      void 
 10859 ;; Registers used:
 10860 ;;		wreg, status,2, status,0, pclath, cstack
 10861 ;; Tracked objects:
 10862 ;;		On entry : 0/0
 10863 ;;		On exit  : 0/0
 10864 ;;		Unchanged: 0/0
 10865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10870 ;;Total ram usage:        0 bytes
 10871 ;; Hardware stack levels used:    1
 10872 ;; Hardware stack levels required when called:    8
 10873 ;; This function calls:
 10874 ;;		_TMR5_SetInterruptHandler
 10875 ;; This function is called by:
 10876 ;;		_SYSTEM_Initialize
 10877 ;; This function uses a non-reentrant model
 10878 ;;
 10879                           
 10880                           
 10881                           ;psect for function _TMR5_Initialize
 10882  0949                     _TMR5_Initialize:
 10883  0949                     l4438:	
 10884                           ;incstack = 0
 10885                           ; Regs used in _TMR5_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10886                           
 10887                           
 10888                           ;tmr5.c: 69: T5GCON = 0x00;
 10889  0949  0024               	movlb	4	; select bank4
 10890  094A  019B               	clrf	27	;volatile
 10891                           
 10892                           ;tmr5.c: 72: T5GATE = 0x00;
 10893  094B  019C               	clrf	28	;volatile
 10894  094C                     l4440:
 10895                           
 10896                           ;tmr5.c: 75: T5CLK = 0x04;
 10897  094C  3004               	movlw	4
 10898  094D  009D               	movwf	29	;volatile
 10899  094E                     l4442:
 10900                           
 10901                           ;tmr5.c: 78: TMR5H = 0x4A;
 10902  094E  304A               	movlw	74
 10903  094F  0099               	movwf	25	;volatile
 10904  0950                     l4444:
 10905                           
 10906                           ;tmr5.c: 81: TMR5L = 0x5C;
 10907  0950  305C               	movlw	92
 10908  0951  0098               	movwf	24	;volatile
 10909  0952                     l4446:
 10910                           
 10911                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 10912  0952  0819               	movf	25,w	;volatile
 10913  0953  0021               	movlb	1	; select bank1
 10914  0954  00B6               	movwf	(_timer5ReloadVal+1)^(0+128)	;volatile
 10915  0955  0024               	movlb	4	; select bank4
 10916  0956  0818               	movf	24,w	;volatile
 10917  0957  0021               	movlb	1	; select bank1
 10918  0958  00B5               	movwf	_timer5ReloadVal^(0+128)	;volatile
 10919  0959                     l4448:
 10920                           
 10921                           ;tmr5.c: 87: PIR4bits.TMR5IF = 0;
 10922  0959  002E               	movlb	14	; select bank14
 10923  095A  1210               	bcf	16,4	;volatile
 10924  095B                     l4450:
 10925                           
 10926                           ;tmr5.c: 90: PIE4bits.TMR5IE = 1;
 10927  095B  161A               	bsf	26,4	;volatile
 10928  095C                     l4452:
 10929                           
 10930                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 10931  095C  3003               	movlw	low _TMR5_DefaultInterruptHandler
 10932  095D  0021               	movlb	1	; select bank1
 10933  095E  00A0               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
 10934  095F  3000               	movlw	high _TMR5_DefaultInterruptHandler
 10935  0960  00A1               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
 10936  0961  3197  273B  3189   	fcall	_TMR5_SetInterruptHandler
 10937  0964                     l4454:
 10938                           
 10939                           ;tmr5.c: 96: T5CON = 0x15;
 10940  0964  3015               	movlw	21
 10941  0965  0024               	movlb	4	; select bank4
 10942  0966  009A               	movwf	26	;volatile
 10943  0967                     l687:
 10944  0967  0008               	return
 10945  0968                     __end_of_TMR5_Initialize:
 10946                           
 10947                           	psect	text10
 10948  173B                     __ptext10:	
 10949 ;; *************** function _TMR5_SetInterruptHandler *****************
 10950 ;; Defined at:
 10951 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 10952 ;; Parameters:    Size  Location     Type
 10953 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 10954 ;;		 -> monitoring_ISR(1), TMR5_DefaultInterruptHandler(1), 
 10955 ;; Auto vars:     Size  Location     Type
 10956 ;;		None
 10957 ;; Return value:  Size  Location     Type
 10958 ;;                  1    wreg      void 
 10959 ;; Registers used:
 10960 ;;		wreg
 10961 ;; Tracked objects:
 10962 ;;		On entry : 0/0
 10963 ;;		On exit  : 0/0
 10964 ;;		Unchanged: 0/0
 10965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10966 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10969 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10970 ;;Total ram usage:        2 bytes
 10971 ;; Hardware stack levels used:    1
 10972 ;; Hardware stack levels required when called:    7
 10973 ;; This function calls:
 10974 ;;		Nothing
 10975 ;; This function is called by:
 10976 ;;		_TMR5_Initialize
 10977 ;;		_main
 10978 ;; This function uses a non-reentrant model
 10979 ;;
 10980                           
 10981                           
 10982                           ;psect for function _TMR5_SetInterruptHandler
 10983  173B                     _TMR5_SetInterruptHandler:
 10984  173B                     l4096:	
 10985                           ;incstack = 0
 10986                           ; Regs used in _TMR5_SetInterruptHandler: [wreg]
 10987                           
 10988                           
 10989                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 10990  173B  0021               	movlb	1	; select bank1
 10991  173C  0821               	movf	(TMR5_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 10992  173D  00B4               	movwf	(_TMR5_InterruptHandler+1)^(0+128)
 10993  173E  0820               	movf	TMR5_SetInterruptHandler@InterruptHandler^(0+128),w
 10994  173F  00B3               	movwf	_TMR5_InterruptHandler^(0+128)
 10995  1740                     l717:
 10996  1740  0008               	return
 10997  1741                     __end_of_TMR5_SetInterruptHandler:
 10998                           
 10999                           	psect	text11
 11000  092A                     __ptext11:	
 11001 ;; *************** function _TMR3_Initialize *****************
 11002 ;; Defined at:
 11003 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 11004 ;; Parameters:    Size  Location     Type
 11005 ;;		None
 11006 ;; Auto vars:     Size  Location     Type
 11007 ;;		None
 11008 ;; Return value:  Size  Location     Type
 11009 ;;                  1    wreg      void 
 11010 ;; Registers used:
 11011 ;;		wreg, status,2, status,0, pclath, cstack
 11012 ;; Tracked objects:
 11013 ;;		On entry : 0/0
 11014 ;;		On exit  : 0/0
 11015 ;;		Unchanged: 0/0
 11016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11021 ;;Total ram usage:        0 bytes
 11022 ;; Hardware stack levels used:    1
 11023 ;; Hardware stack levels required when called:    8
 11024 ;; This function calls:
 11025 ;;		_TMR3_SetInterruptHandler
 11026 ;; This function is called by:
 11027 ;;		_SYSTEM_Initialize
 11028 ;; This function uses a non-reentrant model
 11029 ;;
 11030                           
 11031                           
 11032                           ;psect for function _TMR3_Initialize
 11033  092A                     _TMR3_Initialize:
 11034  092A                     l4408:	
 11035                           ;incstack = 0
 11036                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11037                           
 11038                           
 11039                           ;tmr3.c: 69: T3GCON = 0x00;
 11040  092A  0024               	movlb	4	; select bank4
 11041  092B  0195               	clrf	21	;volatile
 11042                           
 11043                           ;tmr3.c: 72: T3GATE = 0x00;
 11044  092C  0196               	clrf	22	;volatile
 11045  092D                     l4410:
 11046                           
 11047                           ;tmr3.c: 75: T3CLK = 0x04;
 11048  092D  3004               	movlw	4
 11049  092E  0097               	movwf	23	;volatile
 11050  092F                     l4412:
 11051                           
 11052                           ;tmr3.c: 78: TMR3H = 0xE7;
 11053  092F  30E7               	movlw	231
 11054  0930  0093               	movwf	19	;volatile
 11055  0931                     l4414:
 11056                           
 11057                           ;tmr3.c: 81: TMR3L = 0xC8;
 11058  0931  30C8               	movlw	200
 11059  0932  0092               	movwf	18	;volatile
 11060  0933                     l4416:
 11061                           
 11062                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 11063  0933  0813               	movf	19,w	;volatile
 11064  0934  0020               	movlb	0	; select bank0
 11065  0935  00EF               	movwf	_timer3ReloadVal+1	;volatile
 11066  0936  0024               	movlb	4	; select bank4
 11067  0937  0812               	movf	18,w	;volatile
 11068  0938  0020               	movlb	0	; select bank0
 11069  0939  00EE               	movwf	_timer3ReloadVal	;volatile
 11070  093A                     l4418:
 11071                           
 11072                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
 11073  093A  002E               	movlb	14	; select bank14
 11074  093B  1110               	bcf	16,2	;volatile
 11075  093C                     l4420:
 11076                           
 11077                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
 11078  093C  151A               	bsf	26,2	;volatile
 11079  093D                     l4422:
 11080                           
 11081                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
 11082  093D  3002               	movlw	low _TMR3_DefaultInterruptHandler
 11083  093E  0021               	movlb	1	; select bank1
 11084  093F  00A0               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
 11085  0940  3000               	movlw	high _TMR3_DefaultInterruptHandler
 11086  0941  00A1               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
 11087  0942  3197  2735  3189   	fcall	_TMR3_SetInterruptHandler
 11088  0945                     l4424:
 11089                           
 11090                           ;tmr3.c: 96: T3CON = 0x05;
 11091  0945  3005               	movlw	5
 11092  0946  0024               	movlb	4	; select bank4
 11093  0947  0094               	movwf	20	;volatile
 11094  0948                     l463:
 11095  0948  0008               	return
 11096  0949                     __end_of_TMR3_Initialize:
 11097                           
 11098                           	psect	text12
 11099  1735                     __ptext12:	
 11100 ;; *************** function _TMR3_SetInterruptHandler *****************
 11101 ;; Defined at:
 11102 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 11103 ;; Parameters:    Size  Location     Type
 11104 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 11105 ;;		 -> menuLCD_ISR(1), TMR3_DefaultInterruptHandler(1), 
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;		None
 11108 ;; Return value:  Size  Location     Type
 11109 ;;                  1    wreg      void 
 11110 ;; Registers used:
 11111 ;;		wreg
 11112 ;; Tracked objects:
 11113 ;;		On entry : 0/0
 11114 ;;		On exit  : 0/0
 11115 ;;		Unchanged: 0/0
 11116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11117 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11120 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11121 ;;Total ram usage:        2 bytes
 11122 ;; Hardware stack levels used:    1
 11123 ;; Hardware stack levels required when called:    7
 11124 ;; This function calls:
 11125 ;;		Nothing
 11126 ;; This function is called by:
 11127 ;;		_TMR3_Initialize
 11128 ;;		_main
 11129 ;; This function uses a non-reentrant model
 11130 ;;
 11131                           
 11132                           
 11133                           ;psect for function _TMR3_SetInterruptHandler
 11134  1735                     _TMR3_SetInterruptHandler:
 11135  1735                     l4080:	
 11136                           ;incstack = 0
 11137                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
 11138                           
 11139                           
 11140                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
 11141  1735  0021               	movlb	1	; select bank1
 11142  1736  0821               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 11143  1737  00B8               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
 11144  1738  0820               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
 11145  1739  00B7               	movwf	_TMR3_InterruptHandler^(0+128)
 11146  173A                     l493:
 11147  173A  0008               	return
 11148  173B                     __end_of_TMR3_SetInterruptHandler:
 11149                           
 11150                           	psect	text13
 11151  07F2                     __ptext13:	
 11152 ;; *************** function _TMR2_Initialize *****************
 11153 ;; Defined at:
 11154 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 11155 ;; Parameters:    Size  Location     Type
 11156 ;;		None
 11157 ;; Auto vars:     Size  Location     Type
 11158 ;;		None
 11159 ;; Return value:  Size  Location     Type
 11160 ;;                  1    wreg      void 
 11161 ;; Registers used:
 11162 ;;		wreg, status,2
 11163 ;; Tracked objects:
 11164 ;;		On entry : 0/0
 11165 ;;		On exit  : 0/0
 11166 ;;		Unchanged: 0/0
 11167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11172 ;;Total ram usage:        0 bytes
 11173 ;; Hardware stack levels used:    1
 11174 ;; Hardware stack levels required when called:    7
 11175 ;; This function calls:
 11176 ;;		Nothing
 11177 ;; This function is called by:
 11178 ;;		_SYSTEM_Initialize
 11179 ;; This function uses a non-reentrant model
 11180 ;;
 11181                           
 11182                           
 11183                           ;psect for function _TMR2_Initialize
 11184  07F2                     _TMR2_Initialize:
 11185  07F2                     l4426:	
 11186                           ;incstack = 0
 11187                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11188                           
 11189                           
 11190                           ;tmr2.c: 67: T2CLKCON = 0x01;
 11191  07F2  3001               	movlw	1
 11192  07F3  0025               	movlb	5	; select bank5
 11193  07F4  0090               	movwf	16	;volatile
 11194  07F5                     l4428:
 11195                           
 11196                           ;tmr2.c: 70: T2HLT = 0x00;
 11197  07F5  018F               	clrf	15	;volatile
 11198  07F6                     l4430:
 11199                           
 11200                           ;tmr2.c: 73: T2RST = 0x00;
 11201  07F6  0191               	clrf	17	;volatile
 11202                           
 11203                           ;tmr2.c: 76: T2PR = 0xFF;
 11204  07F7  30FF               	movlw	255
 11205  07F8  008D               	movwf	13	;volatile
 11206  07F9                     l4432:
 11207                           
 11208                           ;tmr2.c: 79: T2TMR = 0x00;
 11209  07F9  018C               	clrf	12	;volatile
 11210  07FA                     l4434:
 11211                           
 11212                           ;tmr2.c: 82: PIR4bits.TMR2IF = 0;
 11213  07FA  002E               	movlb	14	; select bank14
 11214  07FB  1090               	bcf	16,1	;volatile
 11215  07FC                     l4436:
 11216                           
 11217                           ;tmr2.c: 85: T2CON = 0x80;
 11218  07FC  3080               	movlw	128
 11219  07FD  0025               	movlb	5	; select bank5
 11220  07FE  008E               	movwf	14	;volatile
 11221  07FF                     l761:
 11222  07FF  0008               	return
 11223  0800                     __end_of_TMR2_Initialize:
 11224                           
 11225                           	psect	text14
 11226  090B                     __ptext14:	
 11227 ;; *************** function _TMR1_Initialize *****************
 11228 ;; Defined at:
 11229 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 11230 ;; Parameters:    Size  Location     Type
 11231 ;;		None
 11232 ;; Auto vars:     Size  Location     Type
 11233 ;;		None
 11234 ;; Return value:  Size  Location     Type
 11235 ;;                  1    wreg      void 
 11236 ;; Registers used:
 11237 ;;		wreg, status,2, status,0, pclath, cstack
 11238 ;; Tracked objects:
 11239 ;;		On entry : 0/0
 11240 ;;		On exit  : 0/0
 11241 ;;		Unchanged: 0/0
 11242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11247 ;;Total ram usage:        0 bytes
 11248 ;; Hardware stack levels used:    1
 11249 ;; Hardware stack levels required when called:    8
 11250 ;; This function calls:
 11251 ;;		_TMR1_SetInterruptHandler
 11252 ;; This function is called by:
 11253 ;;		_SYSTEM_Initialize
 11254 ;; This function uses a non-reentrant model
 11255 ;;
 11256                           
 11257                           
 11258                           ;psect for function _TMR1_Initialize
 11259  090B                     _TMR1_Initialize:
 11260  090B                     l4462:	
 11261                           ;incstack = 0
 11262                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11263                           
 11264                           
 11265                           ;tmr1.c: 69: T1GCON = 0x00;
 11266  090B  0024               	movlb	4	; select bank4
 11267  090C  018F               	clrf	15	;volatile
 11268                           
 11269                           ;tmr1.c: 72: T1GATE = 0x00;
 11270  090D  0190               	clrf	16	;volatile
 11271  090E                     l4464:
 11272                           
 11273                           ;tmr1.c: 75: T1CLK = 0x04;
 11274  090E  3004               	movlw	4
 11275  090F  0091               	movwf	17	;volatile
 11276  0910                     l4466:
 11277                           
 11278                           ;tmr1.c: 78: TMR1H = 0x86;
 11279  0910  3086               	movlw	134
 11280  0911  008D               	movwf	13	;volatile
 11281  0912                     l4468:
 11282                           
 11283                           ;tmr1.c: 81: TMR1L = 0xE8;
 11284  0912  30E8               	movlw	232
 11285  0913  008C               	movwf	12	;volatile
 11286  0914                     l4470:
 11287                           
 11288                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 11289  0914  080D               	movf	13,w	;volatile
 11290  0915  0021               	movlb	1	; select bank1
 11291  0916  00BC               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 11292  0917  0024               	movlb	4	; select bank4
 11293  0918  080C               	movf	12,w	;volatile
 11294  0919  0021               	movlb	1	; select bank1
 11295  091A  00BB               	movwf	_timer1ReloadVal^(0+128)	;volatile
 11296  091B                     l4472:
 11297                           
 11298                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
 11299  091B  002E               	movlb	14	; select bank14
 11300  091C  1010               	bcf	16,0	;volatile
 11301  091D                     l4474:
 11302                           
 11303                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
 11304  091D  141A               	bsf	26,0	;volatile
 11305  091E                     l4476:
 11306                           
 11307                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 11308  091E  3004               	movlw	low _TMR1_DefaultInterruptHandler
 11309  091F  0021               	movlb	1	; select bank1
 11310  0920  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
 11311  0921  3017               	movlw	high _TMR1_DefaultInterruptHandler
 11312  0922  00A1               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
 11313  0923  3197  272F  3189   	fcall	_TMR1_SetInterruptHandler
 11314  0926                     l4478:
 11315                           
 11316                           ;tmr1.c: 96: T1CON = 0x05;
 11317  0926  3005               	movlw	5
 11318  0927  0024               	movlb	4	; select bank4
 11319  0928  008E               	movwf	14	;volatile
 11320  0929                     l399:
 11321  0929  0008               	return
 11322  092A                     __end_of_TMR1_Initialize:
 11323                           
 11324                           	psect	text15
 11325  172F                     __ptext15:	
 11326 ;; *************** function _TMR1_SetInterruptHandler *****************
 11327 ;; Defined at:
 11328 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 11329 ;; Parameters:    Size  Location     Type
 11330 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 11331 ;;		 -> Clock_ISR(1), TMR1_DefaultInterruptHandler(1), 
 11332 ;; Auto vars:     Size  Location     Type
 11333 ;;		None
 11334 ;; Return value:  Size  Location     Type
 11335 ;;                  1    wreg      void 
 11336 ;; Registers used:
 11337 ;;		wreg
 11338 ;; Tracked objects:
 11339 ;;		On entry : 0/0
 11340 ;;		On exit  : 0/0
 11341 ;;		Unchanged: 0/0
 11342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11343 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11346 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11347 ;;Total ram usage:        2 bytes
 11348 ;; Hardware stack levels used:    1
 11349 ;; Hardware stack levels required when called:    7
 11350 ;; This function calls:
 11351 ;;		Nothing
 11352 ;; This function is called by:
 11353 ;;		_TMR1_Initialize
 11354 ;;		_main
 11355 ;; This function uses a non-reentrant model
 11356 ;;
 11357                           
 11358                           
 11359                           ;psect for function _TMR1_SetInterruptHandler
 11360  172F                     _TMR1_SetInterruptHandler:
 11361  172F                     l4078:	
 11362                           ;incstack = 0
 11363                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 11364                           
 11365                           
 11366                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
 11367  172F  0021               	movlb	1	; select bank1
 11368  1730  0821               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 11369  1731  00BA               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 11370  1732  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
 11371  1733  00B9               	movwf	_TMR1_InterruptHandler^(0+128)
 11372  1734                     l429:
 11373  1734  0008               	return
 11374  1735                     __end_of_TMR1_SetInterruptHandler:
 11375                           
 11376                           	psect	text16
 11377  178D                     __ptext16:	
 11378 ;; *************** function _PWM6_Initialize *****************
 11379 ;; Defined at:
 11380 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 11381 ;; Parameters:    Size  Location     Type
 11382 ;;		None
 11383 ;; Auto vars:     Size  Location     Type
 11384 ;;		None
 11385 ;; Return value:  Size  Location     Type
 11386 ;;                  1    wreg      void 
 11387 ;; Registers used:
 11388 ;;		wreg, status,2, status,0
 11389 ;; Tracked objects:
 11390 ;;		On entry : 0/0
 11391 ;;		On exit  : 0/0
 11392 ;;		Unchanged: 0/0
 11393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11398 ;;Total ram usage:        0 bytes
 11399 ;; Hardware stack levels used:    1
 11400 ;; Hardware stack levels required when called:    7
 11401 ;; This function calls:
 11402 ;;		Nothing
 11403 ;; This function is called by:
 11404 ;;		_SYSTEM_Initialize
 11405 ;; This function uses a non-reentrant model
 11406 ;;
 11407                           
 11408                           
 11409                           ;psect for function _PWM6_Initialize
 11410  178D                     _PWM6_Initialize:
 11411  178D                     l4398:	
 11412                           ;incstack = 0
 11413                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 11414                           
 11415                           
 11416                           ;pwm6.c: 62: PWM6CON = 0x80;
 11417  178D  3080               	movlw	128
 11418  178E  0027               	movlb	7	; select bank7
 11419  178F  008E               	movwf	14	;volatile
 11420                           
 11421                           ;pwm6.c: 65: PWM6DCH = 0xFF;
 11422  1790  30FF               	movlw	255
 11423  1791  008D               	movwf	13	;volatile
 11424                           
 11425                           ;pwm6.c: 68: PWM6DCL = 0xC0;
 11426  1792  30C0               	movlw	192
 11427  1793  008C               	movwf	12	;volatile
 11428  1794                     l4400:
 11429                           
 11430                           ;pwm6.c: 71: CCPTMRS1bits.P6TSEL = 1;
 11431  1794  0024               	movlb	4	; select bank4
 11432  1795  081F               	movf	31,w	;volatile
 11433  1796  39F3               	andlw	-13
 11434  1797  3804               	iorlw	4
 11435  1798  009F               	movwf	31	;volatile
 11436  1799                     l731:
 11437  1799  0008               	return
 11438  179A                     __end_of_PWM6_Initialize:
 11439                           
 11440                           	psect	text17
 11441  1763                     __ptext17:	
 11442 ;; *************** function _PMD_Initialize *****************
 11443 ;; Defined at:
 11444 ;;		line 78 in file "mcc_generated_files/mcc.c"
 11445 ;; Parameters:    Size  Location     Type
 11446 ;;		None
 11447 ;; Auto vars:     Size  Location     Type
 11448 ;;		None
 11449 ;; Return value:  Size  Location     Type
 11450 ;;                  1    wreg      void 
 11451 ;; Registers used:
 11452 ;;		status,2
 11453 ;; Tracked objects:
 11454 ;;		On entry : 0/0
 11455 ;;		On exit  : 0/0
 11456 ;;		Unchanged: 0/0
 11457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11462 ;;Total ram usage:        0 bytes
 11463 ;; Hardware stack levels used:    1
 11464 ;; Hardware stack levels required when called:    7
 11465 ;; This function calls:
 11466 ;;		Nothing
 11467 ;; This function is called by:
 11468 ;;		_SYSTEM_Initialize
 11469 ;; This function uses a non-reentrant model
 11470 ;;
 11471                           
 11472                           
 11473                           ;psect for function _PMD_Initialize
 11474  1763                     _PMD_Initialize:
 11475  1763                     l4388:	
 11476                           ;incstack = 0
 11477                           ; Regs used in _PMD_Initialize: [status,2]
 11478                           
 11479                           
 11480                           ;mcc.c: 81: PMD0 = 0x00;
 11481  1763  002F               	movlb	15	; select bank15
 11482  1764  0196               	clrf	22	;volatile
 11483                           
 11484                           ;mcc.c: 83: PMD1 = 0x00;
 11485  1765  0197               	clrf	23	;volatile
 11486                           
 11487                           ;mcc.c: 85: PMD2 = 0x00;
 11488  1766  0198               	clrf	24	;volatile
 11489                           
 11490                           ;mcc.c: 87: PMD3 = 0x00;
 11491  1767  0199               	clrf	25	;volatile
 11492                           
 11493                           ;mcc.c: 89: PMD4 = 0x00;
 11494  1768  019A               	clrf	26	;volatile
 11495                           
 11496                           ;mcc.c: 91: PMD5 = 0x00;
 11497  1769  019B               	clrf	27	;volatile
 11498  176A                     l182:
 11499  176A  0008               	return
 11500  176B                     __end_of_PMD_Initialize:
 11501                           
 11502                           	psect	text18
 11503  0AC9                     __ptext18:	
 11504 ;; *************** function _PIN_MANAGER_Initialize *****************
 11505 ;; Defined at:
 11506 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11507 ;; Parameters:    Size  Location     Type
 11508 ;;		None
 11509 ;; Auto vars:     Size  Location     Type
 11510 ;;		None
 11511 ;; Return value:  Size  Location     Type
 11512 ;;                  1    wreg      void 
 11513 ;; Registers used:
 11514 ;;		wreg, status,2
 11515 ;; Tracked objects:
 11516 ;;		On entry : 0/0
 11517 ;;		On exit  : 0/0
 11518 ;;		Unchanged: 0/0
 11519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11524 ;;Total ram usage:        0 bytes
 11525 ;; Hardware stack levels used:    1
 11526 ;; Hardware stack levels required when called:    7
 11527 ;; This function calls:
 11528 ;;		Nothing
 11529 ;; This function is called by:
 11530 ;;		_SYSTEM_Initialize
 11531 ;; This function uses a non-reentrant model
 11532 ;;
 11533                           
 11534                           
 11535                           ;psect for function _PIN_MANAGER_Initialize
 11536  0AC9                     _PIN_MANAGER_Initialize:
 11537  0AC9                     l4344:	
 11538                           ;incstack = 0
 11539                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11540                           
 11541                           
 11542                           ;pin_manager.c: 62: LATE = 0x00;
 11543  0AC9  0020               	movlb	0	; select bank0
 11544  0ACA  019A               	clrf	26	;volatile
 11545                           
 11546                           ;pin_manager.c: 63: LATD = 0x00;
 11547  0ACB  0199               	clrf	25	;volatile
 11548                           
 11549                           ;pin_manager.c: 64: LATA = 0x00;
 11550  0ACC  0196               	clrf	22	;volatile
 11551                           
 11552                           ;pin_manager.c: 65: LATB = 0x00;
 11553  0ACD  0197               	clrf	23	;volatile
 11554                           
 11555                           ;pin_manager.c: 66: LATC = 0x00;
 11556  0ACE  0198               	clrf	24	;volatile
 11557  0ACF                     l4346:
 11558                           
 11559                           ;pin_manager.c: 71: TRISE = 0x07;
 11560  0ACF  3007               	movlw	7
 11561  0AD0  0095               	movwf	21	;volatile
 11562  0AD1                     l4348:
 11563                           
 11564                           ;pin_manager.c: 72: TRISA = 0x0F;
 11565  0AD1  300F               	movlw	15
 11566  0AD2  0091               	movwf	17	;volatile
 11567  0AD3                     l4350:
 11568                           
 11569                           ;pin_manager.c: 73: TRISB = 0xFF;
 11570  0AD3  30FF               	movlw	255
 11571  0AD4  0092               	movwf	18	;volatile
 11572  0AD5                     l4352:
 11573                           
 11574                           ;pin_manager.c: 74: TRISC = 0xFF;
 11575  0AD5  30FF               	movlw	255
 11576  0AD6  0093               	movwf	19	;volatile
 11577  0AD7                     l4354:
 11578                           
 11579                           ;pin_manager.c: 75: TRISD = 0xFF;
 11580  0AD7  30FF               	movlw	255
 11581  0AD8  0094               	movwf	20	;volatile
 11582  0AD9                     l4356:
 11583                           
 11584                           ;pin_manager.c: 80: ANSELD = 0xFF;
 11585  0AD9  30FF               	movlw	255
 11586  0ADA  003E               	movlb	30	; select bank30
 11587  0ADB  00D9               	movwf	89	;volatile
 11588  0ADC                     l4358:
 11589                           
 11590                           ;pin_manager.c: 81: ANSELC = 0xC7;
 11591  0ADC  30C7               	movlw	199
 11592  0ADD  00CE               	movwf	78	;volatile
 11593  0ADE                     l4360:
 11594                           
 11595                           ;pin_manager.c: 82: ANSELB = 0xEF;
 11596  0ADE  30EF               	movlw	239
 11597  0ADF  00C3               	movwf	67	;volatile
 11598  0AE0                     l4362:
 11599                           
 11600                           ;pin_manager.c: 83: ANSELE = 0x07;
 11601  0AE0  3007               	movlw	7
 11602  0AE1  00E4               	movwf	100	;volatile
 11603  0AE2                     l4364:
 11604                           
 11605                           ;pin_manager.c: 84: ANSELA = 0x4F;
 11606  0AE2  304F               	movlw	79
 11607  0AE3  00B8               	movwf	56	;volatile
 11608                           
 11609                           ;pin_manager.c: 89: WPUD = 0x00;
 11610  0AE4  01DA               	clrf	90	;volatile
 11611                           
 11612                           ;pin_manager.c: 90: WPUE = 0x00;
 11613  0AE5  01E5               	clrf	101	;volatile
 11614                           
 11615                           ;pin_manager.c: 91: WPUB = 0x00;
 11616  0AE6  01C4               	clrf	68	;volatile
 11617                           
 11618                           ;pin_manager.c: 92: WPUA = 0x00;
 11619  0AE7  01B9               	clrf	57	;volatile
 11620                           
 11621                           ;pin_manager.c: 93: WPUC = 0x00;
 11622  0AE8  01CF               	clrf	79	;volatile
 11623                           
 11624                           ;pin_manager.c: 98: ODCONE = 0x00;
 11625  0AE9  01E6               	clrf	102	;volatile
 11626                           
 11627                           ;pin_manager.c: 99: ODCONA = 0x00;
 11628  0AEA  01BA               	clrf	58	;volatile
 11629                           
 11630                           ;pin_manager.c: 100: ODCONB = 0x00;
 11631  0AEB  01C5               	clrf	69	;volatile
 11632                           
 11633                           ;pin_manager.c: 101: ODCONC = 0x00;
 11634  0AEC  01D0               	clrf	80	;volatile
 11635                           
 11636                           ;pin_manager.c: 102: ODCOND = 0x00;
 11637  0AED  01DB               	clrf	91	;volatile
 11638  0AEE                     l4366:
 11639                           
 11640                           ;pin_manager.c: 107: SLRCONA = 0xFF;
 11641  0AEE  30FF               	movlw	255
 11642  0AEF  00BB               	movwf	59	;volatile
 11643  0AF0                     l4368:
 11644                           
 11645                           ;pin_manager.c: 108: SLRCONB = 0xFF;
 11646  0AF0  30FF               	movlw	255
 11647  0AF1  00C6               	movwf	70	;volatile
 11648  0AF2                     l4370:
 11649                           
 11650                           ;pin_manager.c: 109: SLRCONC = 0xFF;
 11651  0AF2  30FF               	movlw	255
 11652  0AF3  00D1               	movwf	81	;volatile
 11653  0AF4                     l4372:
 11654                           
 11655                           ;pin_manager.c: 110: SLRCOND = 0xFF;
 11656  0AF4  30FF               	movlw	255
 11657  0AF5  00DC               	movwf	92	;volatile
 11658  0AF6                     l4374:
 11659                           
 11660                           ;pin_manager.c: 111: SLRCONE = 0x07;
 11661  0AF6  3007               	movlw	7
 11662  0AF7  00E7               	movwf	103	;volatile
 11663  0AF8                     l4376:
 11664                           
 11665                           ;pin_manager.c: 120: INTPPS = 0x0C;
 11666  0AF8  300C               	movlw	12
 11667  0AF9  003D               	movlb	29	; select bank29
 11668  0AFA  0090               	movwf	16	;volatile
 11669  0AFB                     l4378:
 11670                           
 11671                           ;pin_manager.c: 121: SSP1CLKPPS = 0x13;
 11672  0AFB  3013               	movlw	19
 11673  0AFC  00C5               	movwf	69	;volatile
 11674  0AFD                     l4380:
 11675                           
 11676                           ;pin_manager.c: 122: RC3PPS = 0x14;
 11677  0AFD  3014               	movlw	20
 11678  0AFE  003E               	movlb	30	; select bank30
 11679  0AFF  00A3               	movwf	35	;volatile
 11680  0B00                     l4382:
 11681                           
 11682                           ;pin_manager.c: 123: RC4PPS = 0x15;
 11683  0B00  3015               	movlw	21
 11684  0B01  00A4               	movwf	36	;volatile
 11685  0B02                     l4384:
 11686                           
 11687                           ;pin_manager.c: 124: RA6PPS = 0x0E;
 11688  0B02  300E               	movlw	14
 11689  0B03  0096               	movwf	22	;volatile
 11690  0B04                     l4386:
 11691                           
 11692                           ;pin_manager.c: 125: SSP1DATPPS = 0x14;
 11693  0B04  3014               	movlw	20
 11694  0B05  003D               	movlb	29	; select bank29
 11695  0B06  00C6               	movwf	70	;volatile
 11696  0B07                     l124:
 11697  0B07  0008               	return
 11698  0B08                     __end_of_PIN_MANAGER_Initialize:
 11699                           
 11700                           	psect	text19
 11701  176B                     __ptext19:	
 11702 ;; *************** function _OSCILLATOR_Initialize *****************
 11703 ;; Defined at:
 11704 ;;		line 64 in file "mcc_generated_files/mcc.c"
 11705 ;; Parameters:    Size  Location     Type
 11706 ;;		None
 11707 ;; Auto vars:     Size  Location     Type
 11708 ;;		None
 11709 ;; Return value:  Size  Location     Type
 11710 ;;                  1    wreg      void 
 11711 ;; Registers used:
 11712 ;;		wreg, status,2
 11713 ;; Tracked objects:
 11714 ;;		On entry : 0/0
 11715 ;;		On exit  : 0/0
 11716 ;;		Unchanged: 0/0
 11717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11722 ;;Total ram usage:        0 bytes
 11723 ;; Hardware stack levels used:    1
 11724 ;; Hardware stack levels required when called:    7
 11725 ;; This function calls:
 11726 ;;		Nothing
 11727 ;; This function is called by:
 11728 ;;		_SYSTEM_Initialize
 11729 ;; This function uses a non-reentrant model
 11730 ;;
 11731                           
 11732                           
 11733                           ;psect for function _OSCILLATOR_Initialize
 11734  176B                     _OSCILLATOR_Initialize:
 11735  176B                     l4390:	
 11736                           ;incstack = 0
 11737                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11738                           
 11739                           
 11740                           ;mcc.c: 67: OSCCON1 = 0x62;
 11741  176B  3062               	movlw	98
 11742  176C  0031               	movlb	17	; select bank17
 11743  176D  008D               	movwf	13	;volatile
 11744  176E                     l4392:
 11745                           
 11746                           ;mcc.c: 69: OSCCON3 = 0x00;
 11747  176E  018F               	clrf	15	;volatile
 11748  176F                     l4394:
 11749                           
 11750                           ;mcc.c: 71: OSCEN = 0x00;
 11751  176F  0191               	clrf	17	;volatile
 11752                           
 11753                           ;mcc.c: 73: OSCFRQ = 0x02;
 11754  1770  3002               	movlw	2
 11755  1771  0093               	movwf	19	;volatile
 11756  1772                     l4396:
 11757                           
 11758                           ;mcc.c: 75: OSCTUNE = 0x00;
 11759  1772  0192               	clrf	18	;volatile
 11760  1773                     l179:
 11761  1773  0008               	return
 11762  1774                     __end_of_OSCILLATOR_Initialize:
 11763                           
 11764                           	psect	text20
 11765  0800                     __ptext20:	
 11766 ;; *************** function _EXT_INT_Initialize *****************
 11767 ;; Defined at:
 11768 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 11769 ;; Parameters:    Size  Location     Type
 11770 ;;		None
 11771 ;; Auto vars:     Size  Location     Type
 11772 ;;		None
 11773 ;; Return value:  Size  Location     Type
 11774 ;;                  1    wreg      void 
 11775 ;; Registers used:
 11776 ;;		wreg, status,2, status,0, pclath, cstack
 11777 ;; Tracked objects:
 11778 ;;		On entry : 0/0
 11779 ;;		On exit  : 0/0
 11780 ;;		Unchanged: 0/0
 11781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11786 ;;Total ram usage:        0 bytes
 11787 ;; Hardware stack levels used:    1
 11788 ;; Hardware stack levels required when called:    8
 11789 ;; This function calls:
 11790 ;;		_INT_SetInterruptHandler
 11791 ;; This function is called by:
 11792 ;;		_SYSTEM_Initialize
 11793 ;; This function uses a non-reentrant model
 11794 ;;
 11795                           
 11796                           
 11797                           ;psect for function _EXT_INT_Initialize
 11798  0800                     _EXT_INT_Initialize:
 11799  0800                     l4456:	
 11800                           ;incstack = 0
 11801                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11802                           
 11803                           
 11804                           ;ext_int.c: 64: (PIR0bits.INTF = 0);
 11805  0800  002E               	movlb	14	; select bank14
 11806  0801  100C               	bcf	12,0	;volatile
 11807                           
 11808                           ;ext_int.c: 66: (INTCONbits.INTEDG = 1);
 11809  0802  140B               	bsf	11,0	;volatile
 11810  0803                     l4458:
 11811                           
 11812                           ;ext_int.c: 68: INT_SetInterruptHandler(INT_DefaultInterruptHandler);
 11813  0803  3003               	movlw	low _INT_DefaultInterruptHandler
 11814  0804  0021               	movlb	1	; select bank1
 11815  0805  00A0               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
 11816  0806  3017               	movlw	high _INT_DefaultInterruptHandler
 11817  0807  00A1               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
 11818  0808  3197  2729  3188   	fcall	_INT_SetInterruptHandler
 11819  080B                     l4460:
 11820                           
 11821                           ;ext_int.c: 69: (PIE0bits.INTE = 1);
 11822  080B  002E               	movlb	14	; select bank14
 11823  080C  1416               	bsf	22,0	;volatile
 11824  080D                     l874:
 11825  080D  0008               	return
 11826  080E                     __end_of_EXT_INT_Initialize:
 11827                           
 11828                           	psect	text21
 11829  1729                     __ptext21:	
 11830 ;; *************** function _INT_SetInterruptHandler *****************
 11831 ;; Defined at:
 11832 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 11833 ;; Parameters:    Size  Location     Type
 11834 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 11835 ;;		 -> S1_ISR(1), INT_DefaultInterruptHandler(1), 
 11836 ;; Auto vars:     Size  Location     Type
 11837 ;;		None
 11838 ;; Return value:  Size  Location     Type
 11839 ;;                  1    wreg      void 
 11840 ;; Registers used:
 11841 ;;		wreg
 11842 ;; Tracked objects:
 11843 ;;		On entry : 0/0
 11844 ;;		On exit  : 0/0
 11845 ;;		Unchanged: 0/0
 11846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11847 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11850 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11851 ;;Total ram usage:        2 bytes
 11852 ;; Hardware stack levels used:    1
 11853 ;; Hardware stack levels required when called:    7
 11854 ;; This function calls:
 11855 ;;		Nothing
 11856 ;; This function is called by:
 11857 ;;		_EXT_INT_Initialize
 11858 ;;		_main
 11859 ;; This function uses a non-reentrant model
 11860 ;;
 11861                           
 11862                           
 11863                           ;psect for function _INT_SetInterruptHandler
 11864  1729                     _INT_SetInterruptHandler:
 11865  1729                     l4100:	
 11866                           ;incstack = 0
 11867                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 11868                           
 11869                           
 11870                           ;ext_int.c: 51: INT_InterruptHandler = InterruptHandler;
 11871  1729  0021               	movlb	1	; select bank1
 11872  172A  0821               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 11873  172B  00B2               	movwf	(_INT_InterruptHandler+1)^(0+128)
 11874  172C  0820               	movf	INT_SetInterruptHandler@InterruptHandler^(0+128),w
 11875  172D  00B1               	movwf	_INT_InterruptHandler^(0+128)
 11876  172E                     l868:
 11877  172E  0008               	return
 11878  172F                     __end_of_INT_SetInterruptHandler:
 11879                           
 11880                           	psect	text22
 11881  0869                     __ptext22:	
 11882 ;; *************** function _ADCC_Initialize *****************
 11883 ;; Defined at:
 11884 ;;		line 63 in file "mcc_generated_files/adcc.c"
 11885 ;; Parameters:    Size  Location     Type
 11886 ;;		None
 11887 ;; Auto vars:     Size  Location     Type
 11888 ;;		None
 11889 ;; Return value:  Size  Location     Type
 11890 ;;                  1    wreg      void 
 11891 ;; Registers used:
 11892 ;;		wreg, status,2
 11893 ;; Tracked objects:
 11894 ;;		On entry : 0/0
 11895 ;;		On exit  : 0/0
 11896 ;;		Unchanged: 0/0
 11897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11902 ;;Total ram usage:        0 bytes
 11903 ;; Hardware stack levels used:    1
 11904 ;; Hardware stack levels required when called:    7
 11905 ;; This function calls:
 11906 ;;		Nothing
 11907 ;; This function is called by:
 11908 ;;		_SYSTEM_Initialize
 11909 ;; This function uses a non-reentrant model
 11910 ;;
 11911                           
 11912                           
 11913                           ;psect for function _ADCC_Initialize
 11914  0869                     _ADCC_Initialize:
 11915  0869                     l4402:	
 11916                           ;incstack = 0
 11917                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 11918                           
 11919                           
 11920                           ;adcc.c: 67: ADLTHL = 0x00;
 11921  0869  0022               	movlb	2	; select bank2
 11922  086A  018E               	clrf	14	;volatile
 11923                           
 11924                           ;adcc.c: 69: ADLTHH = 0x00;
 11925  086B  018F               	clrf	15	;volatile
 11926                           
 11927                           ;adcc.c: 71: ADUTHL = 0x00;
 11928  086C  0190               	clrf	16	;volatile
 11929                           
 11930                           ;adcc.c: 73: ADUTHH = 0x00;
 11931  086D  0191               	clrf	17	;volatile
 11932                           
 11933                           ;adcc.c: 75: ADSTPTL = 0x00;
 11934  086E  0192               	clrf	18	;volatile
 11935                           
 11936                           ;adcc.c: 77: ADSTPTH = 0x00;
 11937  086F  0193               	clrf	19	;volatile
 11938                           
 11939                           ;adcc.c: 79: ADRPT = 0x00;
 11940  0870  018D               	clrf	13	;volatile
 11941                           
 11942                           ;adcc.c: 81: ADPCH = 0x00;
 11943  0871  0021               	movlb	1	; select bank1
 11944  0872  019E               	clrf	30	;volatile
 11945                           
 11946                           ;adcc.c: 83: ADCAP = 0x00;
 11947  0873  019B               	clrf	27	;volatile
 11948                           
 11949                           ;adcc.c: 85: ADCON1 = 0x00;
 11950  0874  0194               	clrf	20	;volatile
 11951                           
 11952                           ;adcc.c: 87: ADCON2 = 0x00;
 11953  0875  0195               	clrf	21	;volatile
 11954                           
 11955                           ;adcc.c: 89: ADCON3 = 0x00;
 11956  0876  0196               	clrf	22	;volatile
 11957                           
 11958                           ;adcc.c: 91: ADSTAT = 0x00;
 11959  0877  0197               	clrf	23	;volatile
 11960                           
 11961                           ;adcc.c: 93: ADREF = 0x00;
 11962  0878  019A               	clrf	26	;volatile
 11963                           
 11964                           ;adcc.c: 95: ADACT = 0x00;
 11965  0879  0199               	clrf	25	;volatile
 11966                           
 11967                           ;adcc.c: 97: ADCLK = 0x00;
 11968  087A  0198               	clrf	24	;volatile
 11969  087B                     l4404:
 11970                           
 11971                           ;adcc.c: 99: ADCON0 = 0x80;
 11972  087B  3080               	movlw	128
 11973  087C  0093               	movwf	19	;volatile
 11974  087D                     l4406:
 11975                           
 11976                           ;adcc.c: 101: ADACQ = 0xFF;
 11977  087D  30FF               	movlw	255
 11978  087E  009D               	movwf	29	;volatile
 11979  087F                     l575:
 11980  087F  0008               	return
 11981  0880                     __end_of_ADCC_Initialize:
 11982                           
 11983                           	psect	text23
 11984  1711                     __ptext23:	
 11985 ;; *************** function _PWM_Output_D4_Disable *****************
 11986 ;; Defined at:
 11987 ;;		line 246 in file "main.c"
 11988 ;; Parameters:    Size  Location     Type
 11989 ;;		None
 11990 ;; Auto vars:     Size  Location     Type
 11991 ;;		None
 11992 ;; Return value:  Size  Location     Type
 11993 ;;                  1    wreg      void 
 11994 ;; Registers used:
 11995 ;;		None
 11996 ;; Tracked objects:
 11997 ;;		On entry : 0/0
 11998 ;;		On exit  : 0/0
 11999 ;;		Unchanged: 0/0
 12000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12005 ;;Total ram usage:        0 bytes
 12006 ;; Hardware stack levels used:    1
 12007 ;; Hardware stack levels required when called:    7
 12008 ;; This function calls:
 12009 ;;		Nothing
 12010 ;; This function is called by:
 12011 ;;		_main
 12012 ;; This function uses a non-reentrant model
 12013 ;;
 12014                           
 12015                           
 12016                           ;psect for function _PWM_Output_D4_Disable
 12017  1711                     _PWM_Output_D4_Disable:
 12018  1711                     l5032:	
 12019                           ;incstack = 0
 12020                           ; Regs used in _PWM_Output_D4_Disable: []
 12021                           
 12022                           
 12023                           ;main.c: 247: PWM6EN = 0;
 12024  1711  0027               	movlb	7	; select bank7
 12025  1712  138E               	bcf	14,7	;volatile
 12026  1713                     l1195:
 12027  1713  0008               	return
 12028  1714                     __end_of_PWM_Output_D4_Disable:
 12029                           
 12030                           	psect	text24
 12031  0880                     __ptext24:	
 12032 ;; *************** function _PWM6_LoadDutyValue *****************
 12033 ;; Defined at:
 12034 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 12035 ;; Parameters:    Size  Location     Type
 12036 ;;  dutyValue       2    0[BANK1 ] unsigned int 
 12037 ;; Auto vars:     Size  Location     Type
 12038 ;;		None
 12039 ;; Return value:  Size  Location     Type
 12040 ;;                  1    wreg      void 
 12041 ;; Registers used:
 12042 ;;		wreg, status,2, status,0
 12043 ;; Tracked objects:
 12044 ;;		On entry : 0/0
 12045 ;;		On exit  : 0/0
 12046 ;;		Unchanged: 0/0
 12047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12048 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12050 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12051 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12052 ;;Total ram usage:        4 bytes
 12053 ;; Hardware stack levels used:    1
 12054 ;; Hardware stack levels required when called:    7
 12055 ;; This function calls:
 12056 ;;		Nothing
 12057 ;; This function is called by:
 12058 ;;		_main
 12059 ;; This function uses a non-reentrant model
 12060 ;;
 12061                           
 12062                           
 12063                           ;psect for function _PWM6_LoadDutyValue
 12064  0880                     _PWM6_LoadDutyValue:
 12065  0880                     l4892:	
 12066                           ;incstack = 0
 12067                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 12068                           
 12069                           
 12070                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 12071  0880  0021               	movlb	1	; select bank1
 12072  0881  0821               	movf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128),w
 12073  0882  00A3               	movwf	(??_PWM6_LoadDutyValue^(0+128)+1)
 12074  0883  0820               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 12075  0884  00A2               	movwf	??_PWM6_LoadDutyValue^(0+128)
 12076  0885  36A3               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 12077  0886  0CA2               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 12078  0887  36A3               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 12079  0888  0CA2               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 12080  0889  0822               	movf	??_PWM6_LoadDutyValue^(0+128),w
 12081  088A  0027               	movlb	7	; select bank7
 12082  088B  008D               	movwf	13	;volatile
 12083                           
 12084                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 12085  088C  0021               	movlb	1	; select bank1
 12086  088D  0820               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 12087  088E  3903               	andlw	3
 12088  088F  00A2               	movwf	??_PWM6_LoadDutyValue^(0+128)
 12089  0890  3005               	movlw	5
 12090  0891                     u4375:
 12091  0891  35A2               	lslf	??_PWM6_LoadDutyValue^(0+128),f
 12092  0892  3EFF               	addlw	-1
 12093  0893  1D03               	skipz
 12094  0894  2891               	goto	u4375
 12095  0895  3522               	lslf	??_PWM6_LoadDutyValue^(0+128),w
 12096  0896  0027               	movlb	7	; select bank7
 12097  0897  008C               	movwf	12	;volatile
 12098  0898                     l734:
 12099  0898  0008               	return
 12100  0899                     __end_of_PWM6_LoadDutyValue:
 12101                           
 12102                           	psect	text25
 12103  0CA8                     __ptext25:	
 12104 ;; *************** function _LCDinit *****************
 12105 ;; Defined at:
 12106 ;;		line 173 in file "main.c"
 12107 ;; Parameters:    Size  Location     Type
 12108 ;;		None
 12109 ;; Auto vars:     Size  Location     Type
 12110 ;;		None
 12111 ;; Return value:  Size  Location     Type
 12112 ;;                  1    wreg      void 
 12113 ;; Registers used:
 12114 ;;		wreg, status,2, status,0, pclath, cstack
 12115 ;; Tracked objects:
 12116 ;;		On entry : 0/0
 12117 ;;		On exit  : 0/0
 12118 ;;		Unchanged: 0/0
 12119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12122 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12123 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12124 ;;Total ram usage:        1 bytes
 12125 ;; Hardware stack levels used:    1
 12126 ;; Hardware stack levels required when called:    9
 12127 ;; This function calls:
 12128 ;;		_LCDsend
 12129 ;;		_LCDsend2x4
 12130 ;; This function is called by:
 12131 ;;		_main
 12132 ;; This function uses a non-reentrant model
 12133 ;;
 12134                           
 12135                           
 12136                           ;psect for function _LCDinit
 12137  0CA8                     _LCDinit:
 12138  0CA8                     l4998:	
 12139                           ;incstack = 0
 12140                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 12141                           
 12142                           
 12143                           ;main.c: 175: _delay((unsigned long)((50)*(1000000/4000.0)));
 12144  0CA8  3011               	movlw	17
 12145  0CA9  0021               	movlb	1	; select bank1
 12146  0CAA  00A8               	movwf	??_LCDinit^(0+128)
 12147  0CAB  303A               	movlw	58
 12148  0CAC                     u5057:
 12149  0CAC  0B89               	decfsz	9,f
 12150  0CAD  2CAC               	goto	u5057
 12151  0CAE  0BA8               	decfsz	??_LCDinit^(0+128),f
 12152  0CAF  2CAC               	goto	u5057
 12153  0CB0  0000               	nop
 12154  0CB1                     l5000:
 12155                           
 12156                           ;main.c: 176: LCDsend(0x30);
 12157  0CB1  3030               	movlw	48
 12158  0CB2  318B  23A3  318C   	fcall	_LCDsend
 12159  0CB5                     l5002:
 12160                           
 12161                           ;main.c: 177: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 12162  0CB5  3034               	movlw	52
 12163  0CB6  318B  23A3  318C   	fcall	_LCDsend
 12164  0CB9  3029               	movlw	41
 12165  0CBA                     u5067:
 12166  0CBA  0B89               	decfsz	9,f
 12167  0CBB  2CBA               	goto	u5067
 12168  0CBC  3200               	nop2
 12169  0CBD                     l5004:
 12170  0CBD  3030               	movlw	48
 12171  0CBE  318B  23A3  318C   	fcall	_LCDsend
 12172  0CC1                     l5006:
 12173                           
 12174                           ;main.c: 178: _delay((unsigned long)((5)*(1000000/4000.0)));
 12175  0CC1  30FA               	movlw	250
 12176  0CC2                     u5077:
 12177  0CC2  3200               	nop2
 12178  0CC3  0B89               	decfsz	9,f
 12179  0CC4  2CC2               	goto	u5077
 12180                           
 12181                           ;main.c: 179: LCDsend(0x30);
 12182  0CC5  3030               	movlw	48
 12183  0CC6  318B  23A3  318C   	fcall	_LCDsend
 12184                           
 12185                           ;main.c: 180: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 12186  0CC9  3034               	movlw	52
 12187  0CCA  318B  23A3  318C   	fcall	_LCDsend
 12188  0CCD                     l5008:
 12189  0CCD  3029               	movlw	41
 12190  0CCE                     u5087:
 12191  0CCE  0B89               	decfsz	9,f
 12192  0CCF  2CCE               	goto	u5087
 12193  0CD0  3200               	nop2
 12194  0CD1                     l5010:
 12195  0CD1  3030               	movlw	48
 12196  0CD2  318B  23A3  318C   	fcall	_LCDsend
 12197                           
 12198                           ;main.c: 181: _delay((unsigned long)((100)*(1000000/4000000.0)));
 12199  0CD5  3008               	movlw	8
 12200  0CD6                     u5097:
 12201  0CD6  0B89               	decfsz	9,f
 12202  0CD7  2CD6               	goto	u5097
 12203  0CD8  0000               	nop
 12204  0CD9                     l5012:
 12205                           
 12206                           ;main.c: 182: LCDsend(0x30);
 12207  0CD9  3030               	movlw	48
 12208  0CDA  318B  23A3  318C   	fcall	_LCDsend
 12209  0CDD                     l5014:
 12210                           
 12211                           ;main.c: 183: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 12212  0CDD  3034               	movlw	52
 12213  0CDE  318B  23A3  318C   	fcall	_LCDsend
 12214  0CE1  3029               	movlw	41
 12215  0CE2                     u5107:
 12216  0CE2  0B89               	decfsz	9,f
 12217  0CE3  2CE2               	goto	u5107
 12218  0CE4  3200               	nop2
 12219  0CE5                     l5016:
 12220  0CE5  3030               	movlw	48
 12221  0CE6  318B  23A3  318C   	fcall	_LCDsend
 12222  0CE9                     l5018:
 12223                           
 12224                           ;main.c: 184: _delay((unsigned long)((100)*(1000000/4000000.0)));
 12225  0CE9  3008               	movlw	8
 12226  0CEA                     u5117:
 12227  0CEA  0B89               	decfsz	9,f
 12228  0CEB  2CEA               	goto	u5117
 12229  0CEC  0000               	nop
 12230                           
 12231                           ;main.c: 185: LCDsend(0x20);
 12232  0CED  3020               	movlw	32
 12233  0CEE  318B  23A3  318C   	fcall	_LCDsend
 12234                           
 12235                           ;main.c: 186: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
 12236  0CF1  3024               	movlw	36
 12237  0CF2  318B  23A3  318C   	fcall	_LCDsend
 12238  0CF5                     l5020:
 12239  0CF5  3029               	movlw	41
 12240  0CF6                     u5127:
 12241  0CF6  0B89               	decfsz	9,f
 12242  0CF7  2CF6               	goto	u5127
 12243  0CF8  3200               	nop2
 12244  0CF9                     l5022:
 12245  0CF9  3020               	movlw	32
 12246  0CFA  318B  23A3  318C   	fcall	_LCDsend
 12247                           
 12248                           ;main.c: 187: _delay((unsigned long)((5)*(1000000/4000.0)));
 12249  0CFD  30FA               	movlw	250
 12250  0CFE                     u5137:
 12251  0CFE  3200               	nop2
 12252  0CFF  0B89               	decfsz	9,f
 12253  0D00  2CFE               	goto	u5137
 12254  0D01                     l5024:
 12255                           
 12256                           ;main.c: 189: LCDsend2x4(0x28, 0);
 12257  0D01  0021               	movlb	1	; select bank1
 12258  0D02  01A2               	clrf	LCDsend2x4@mode^(0+128)
 12259  0D03  3028               	movlw	40
 12260  0D04  318D  251E  318C   	fcall	_LCDsend2x4
 12261  0D07                     l5026:
 12262                           
 12263                           ;main.c: 190: LCDsend2x4(0x06, 0);
 12264  0D07  0021               	movlb	1	; select bank1
 12265  0D08  01A2               	clrf	LCDsend2x4@mode^(0+128)
 12266  0D09  3006               	movlw	6
 12267  0D0A  318D  251E  318C   	fcall	_LCDsend2x4
 12268  0D0D                     l5028:
 12269                           
 12270                           ;main.c: 191: LCDsend2x4(0x0f, 0);
 12271  0D0D  0021               	movlb	1	; select bank1
 12272  0D0E  01A2               	clrf	LCDsend2x4@mode^(0+128)
 12273  0D0F  300F               	movlw	15
 12274  0D10  318D  251E  318C   	fcall	_LCDsend2x4
 12275  0D13                     l5030:
 12276                           
 12277                           ;main.c: 192: LCDsend2x4(0x01, 0);
 12278  0D13  0021               	movlb	1	; select bank1
 12279  0D14  01A2               	clrf	LCDsend2x4@mode^(0+128)
 12280  0D15  3001               	movlw	1
 12281  0D16  318D  251E  318C   	fcall	_LCDsend2x4
 12282                           
 12283                           ;main.c: 193: _delay((unsigned long)((2)*(1000000/4000.0)));
 12284  0D19  30A6               	movlw	166
 12285  0D1A                     u5147:
 12286  0D1A  0B89               	decfsz	9,f
 12287  0D1B  2D1A               	goto	u5147
 12288  0D1C  3200               	nop2
 12289  0D1D                     l1164:
 12290  0D1D  0008               	return
 12291  0D1E                     __end_of_LCDinit:
 12292                           
 12293                           	psect	text26
 12294  0D1E                     __ptext26:	
 12295 ;; *************** function _LCDsend2x4 *****************
 12296 ;; Defined at:
 12297 ;;		line 150 in file "main.c"
 12298 ;; Parameters:    Size  Location     Type
 12299 ;;  c               1    wreg     unsigned char 
 12300 ;;  mode            1    2[BANK1 ] unsigned char 
 12301 ;; Auto vars:     Size  Location     Type
 12302 ;;  c               1    5[BANK1 ] unsigned char 
 12303 ;;  lc              1    7[BANK1 ] unsigned char 
 12304 ;;  hc              1    6[BANK1 ] unsigned char 
 12305 ;; Return value:  Size  Location     Type
 12306 ;;                  1    wreg      void 
 12307 ;; Registers used:
 12308 ;;		wreg, status,2, status,0, pclath, cstack
 12309 ;; Tracked objects:
 12310 ;;		On entry : 0/0
 12311 ;;		On exit  : 0/0
 12312 ;;		Unchanged: 0/0
 12313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12314 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12315 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12316 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12317 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12318 ;;Total ram usage:        6 bytes
 12319 ;; Hardware stack levels used:    1
 12320 ;; Hardware stack levels required when called:    8
 12321 ;; This function calls:
 12322 ;;		_WriteI2C
 12323 ;; This function is called by:
 12324 ;;		_LCDinit
 12325 ;; This function uses a non-reentrant model
 12326 ;;
 12327                           
 12328                           
 12329                           ;psect for function _LCDsend2x4
 12330  0D1E                     _LCDsend2x4:
 12331                           
 12332                           ;incstack = 0
 12333                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 12334                           ;LCDsend2x4@c stored from wreg
 12335  0D1E  0021               	movlb	1	; select bank1
 12336  0D1F  00A5               	movwf	LCDsend2x4@c^(0+128)
 12337  0D20                     l4542:
 12338                           
 12339                           ;main.c: 152: unsigned char hc;;main.c: 153: unsigned char lc;;main.c: 155: hc = c & 0xf
      +                          0;
 12340  0D20  0825               	movf	LCDsend2x4@c^(0+128),w
 12341  0D21  39F0               	andlw	240
 12342  0D22  00A3               	movwf	??_LCDsend2x4^(0+128)
 12343  0D23  0823               	movf	??_LCDsend2x4^(0+128),w
 12344  0D24  00A6               	movwf	LCDsend2x4@hc^(0+128)
 12345  0D25                     l4544:
 12346                           
 12347                           ;main.c: 156: lc = (c << 4) & 0xf0;
 12348  0D25  0825               	movf	LCDsend2x4@c^(0+128),w
 12349  0D26  00A3               	movwf	??_LCDsend2x4^(0+128)
 12350  0D27  3003               	movlw	3
 12351  0D28                     u3735:
 12352  0D28  35A3               	lslf	??_LCDsend2x4^(0+128),f
 12353  0D29  3EFF               	addlw	-1
 12354  0D2A  1D03               	skipz
 12355  0D2B  2D28               	goto	u3735
 12356  0D2C  3523               	lslf	??_LCDsend2x4^(0+128),w
 12357  0D2D  39F0               	andlw	240
 12358  0D2E  00A4               	movwf	(??_LCDsend2x4+1)^(0+128)
 12359  0D2F  0824               	movf	(??_LCDsend2x4+1)^(0+128),w
 12360  0D30  00A7               	movwf	LCDsend2x4@lc^(0+128)
 12361  0D31                     l4546:	
 12362                           ;main.c: 158: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12363                           
 12364  0D31  0023               	movlb	3	; select bank3
 12365  0D32  0C0F               	rrf	15,w	;volatile
 12366  0D33  0C89               	rrf	9,f
 12367  0D34  3901               	andlw	1
 12368  0D35  0021               	movlb	1	; select bank1
 12369  0D36  00A3               	movwf	??_LCDsend2x4^(0+128)
 12370  0D37  0023               	movlb	3	; select bank3
 12371  0D38  0811               	movf	17,w	;volatile
 12372  0D39  391F               	andlw	31
 12373  0D3A  0021               	movlb	1	; select bank1
 12374  0D3B  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12375  0D3C  1D03               	btfss	3,2
 12376  0D3D  2D3F               	goto	u3741
 12377  0D3E  2D40               	goto	u3740
 12378  0D3F                     u3741:
 12379  0D3F  2D31               	goto	l4546
 12380  0D40                     u3740:
 12381  0D40                     l1130:
 12382                           
 12383                           ;main.c: 159: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 12384  0D40  0023               	movlb	3	; select bank3
 12385  0D41  1411               	bsf	17,0	;volatile
 12386  0D42                     l1131:
 12387  0D42  1811               	btfsc	17,0	;volatile
 12388  0D43  2D45               	goto	u3751
 12389  0D44  2D46               	goto	u3750
 12390  0D45                     u3751:
 12391  0D45  2D42               	goto	l1131
 12392  0D46                     u3750:
 12393  0D46                     l4548:
 12394  0D46  0023               	movlb	3	; select bank3
 12395  0D47  0C0F               	rrf	15,w	;volatile
 12396  0D48  0C89               	rrf	9,f
 12397  0D49  3901               	andlw	1
 12398  0D4A  0021               	movlb	1	; select bank1
 12399  0D4B  00A3               	movwf	??_LCDsend2x4^(0+128)
 12400  0D4C  0023               	movlb	3	; select bank3
 12401  0D4D  0811               	movf	17,w	;volatile
 12402  0D4E  391F               	andlw	31
 12403  0D4F  0021               	movlb	1	; select bank1
 12404  0D50  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12405  0D51  1D03               	btfss	3,2
 12406  0D52  2D54               	goto	u3761
 12407  0D53  2D55               	goto	u3760
 12408  0D54                     u3761:
 12409  0D54  2D46               	goto	l4548
 12410  0D55                     u3760:
 12411  0D55                     l4550:
 12412                           
 12413                           ;main.c: 160: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12414  0D55  304E               	movlw	78
 12415  0D56  318C  244E  318D   	fcall	_WriteI2C
 12416  0D59                     l4552:
 12417  0D59  0023               	movlb	3	; select bank3
 12418  0D5A  0C0F               	rrf	15,w	;volatile
 12419  0D5B  0C89               	rrf	9,f
 12420  0D5C  3901               	andlw	1
 12421  0D5D  0021               	movlb	1	; select bank1
 12422  0D5E  00A3               	movwf	??_LCDsend2x4^(0+128)
 12423  0D5F  0023               	movlb	3	; select bank3
 12424  0D60  0811               	movf	17,w	;volatile
 12425  0D61  391F               	andlw	31
 12426  0D62  0021               	movlb	1	; select bank1
 12427  0D63  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12428  0D64  1D03               	btfss	3,2
 12429  0D65  2D67               	goto	u3771
 12430  0D66  2D68               	goto	u3770
 12431  0D67                     u3771:
 12432  0D67  2D59               	goto	l4552
 12433  0D68                     u3770:
 12434  0D68                     l4554:
 12435                           
 12436                           ;main.c: 161: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 12437  0D68  0826               	movf	LCDsend2x4@hc^(0+128),w
 12438  0D69  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12439  0D6A  3808               	iorlw	8
 12440  0D6B  318C  244E  318D   	fcall	_WriteI2C
 12441  0D6E                     l4556:
 12442  0D6E  0023               	movlb	3	; select bank3
 12443  0D6F  0C0F               	rrf	15,w	;volatile
 12444  0D70  0C89               	rrf	9,f
 12445  0D71  3901               	andlw	1
 12446  0D72  0021               	movlb	1	; select bank1
 12447  0D73  00A3               	movwf	??_LCDsend2x4^(0+128)
 12448  0D74  0023               	movlb	3	; select bank3
 12449  0D75  0811               	movf	17,w	;volatile
 12450  0D76  391F               	andlw	31
 12451  0D77  0021               	movlb	1	; select bank1
 12452  0D78  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12453  0D79  1D03               	btfss	3,2
 12454  0D7A  2D7C               	goto	u3781
 12455  0D7B  2D7D               	goto	u3780
 12456  0D7C                     u3781:
 12457  0D7C  2D6E               	goto	l4556
 12458  0D7D                     u3780:
 12459  0D7D                     l4558:
 12460                           
 12461                           ;main.c: 162: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 12462  0D7D  0826               	movf	LCDsend2x4@hc^(0+128),w
 12463  0D7E  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12464  0D7F  380C               	iorlw	12
 12465  0D80  318C  244E  318D   	fcall	_WriteI2C
 12466  0D83                     l4560:
 12467  0D83  0023               	movlb	3	; select bank3
 12468  0D84  0C0F               	rrf	15,w	;volatile
 12469  0D85  0C89               	rrf	9,f
 12470  0D86  3901               	andlw	1
 12471  0D87  0021               	movlb	1	; select bank1
 12472  0D88  00A3               	movwf	??_LCDsend2x4^(0+128)
 12473  0D89  0023               	movlb	3	; select bank3
 12474  0D8A  0811               	movf	17,w	;volatile
 12475  0D8B  391F               	andlw	31
 12476  0D8C  0021               	movlb	1	; select bank1
 12477  0D8D  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12478  0D8E  1D03               	btfss	3,2
 12479  0D8F  2D91               	goto	u3791
 12480  0D90  2D92               	goto	u3790
 12481  0D91                     u3791:
 12482  0D91  2D83               	goto	l4560
 12483  0D92                     u3790:
 12484  0D92                     l1145:
 12485  0D92                     l4562:	
 12486                           ;main.c: 163: _delay((unsigned long)((1)*(1000000/4000000.0)));
 12487                           
 12488                           
 12489                           ;main.c: 164: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 12490  0D92  0021               	movlb	1	; select bank1
 12491  0D93  0826               	movf	LCDsend2x4@hc^(0+128),w
 12492  0D94  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12493  0D95  3808               	iorlw	8
 12494  0D96  318C  244E  318D   	fcall	_WriteI2C
 12495  0D99                     l4564:
 12496  0D99  0023               	movlb	3	; select bank3
 12497  0D9A  0C0F               	rrf	15,w	;volatile
 12498  0D9B  0C89               	rrf	9,f
 12499  0D9C  3901               	andlw	1
 12500  0D9D  0021               	movlb	1	; select bank1
 12501  0D9E  00A3               	movwf	??_LCDsend2x4^(0+128)
 12502  0D9F  0023               	movlb	3	; select bank3
 12503  0DA0  0811               	movf	17,w	;volatile
 12504  0DA1  391F               	andlw	31
 12505  0DA2  0021               	movlb	1	; select bank1
 12506  0DA3  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12507  0DA4  1D03               	btfss	3,2
 12508  0DA5  2DA7               	goto	u3801
 12509  0DA6  2DA8               	goto	u3800
 12510  0DA7                     u3801:
 12511  0DA7  2D99               	goto	l4564
 12512  0DA8                     u3800:
 12513  0DA8                     l4566:
 12514                           
 12515                           ;main.c: 165: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 12516  0DA8  0827               	movf	LCDsend2x4@lc^(0+128),w
 12517  0DA9  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12518  0DAA  3808               	iorlw	8
 12519  0DAB  318C  244E  318D   	fcall	_WriteI2C
 12520  0DAE                     l4568:
 12521  0DAE  0023               	movlb	3	; select bank3
 12522  0DAF  0C0F               	rrf	15,w	;volatile
 12523  0DB0  0C89               	rrf	9,f
 12524  0DB1  3901               	andlw	1
 12525  0DB2  0021               	movlb	1	; select bank1
 12526  0DB3  00A3               	movwf	??_LCDsend2x4^(0+128)
 12527  0DB4  0023               	movlb	3	; select bank3
 12528  0DB5  0811               	movf	17,w	;volatile
 12529  0DB6  391F               	andlw	31
 12530  0DB7  0021               	movlb	1	; select bank1
 12531  0DB8  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12532  0DB9  1D03               	btfss	3,2
 12533  0DBA  2DBC               	goto	u3811
 12534  0DBB  2DBD               	goto	u3810
 12535  0DBC                     u3811:
 12536  0DBC  2DAE               	goto	l4568
 12537  0DBD                     u3810:
 12538  0DBD                     l4570:
 12539                           
 12540                           ;main.c: 166: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 12541  0DBD  0827               	movf	LCDsend2x4@lc^(0+128),w
 12542  0DBE  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12543  0DBF  380C               	iorlw	12
 12544  0DC0  318C  244E  318D   	fcall	_WriteI2C
 12545  0DC3                     l4572:
 12546  0DC3  0023               	movlb	3	; select bank3
 12547  0DC4  0C0F               	rrf	15,w	;volatile
 12548  0DC5  0C89               	rrf	9,f
 12549  0DC6  3901               	andlw	1
 12550  0DC7  0021               	movlb	1	; select bank1
 12551  0DC8  00A3               	movwf	??_LCDsend2x4^(0+128)
 12552  0DC9  0023               	movlb	3	; select bank3
 12553  0DCA  0811               	movf	17,w	;volatile
 12554  0DCB  391F               	andlw	31
 12555  0DCC  0021               	movlb	1	; select bank1
 12556  0DCD  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12557  0DCE  1D03               	btfss	3,2
 12558  0DCF  2DD1               	goto	u3821
 12559  0DD0  2DD2               	goto	u3820
 12560  0DD1                     u3821:
 12561  0DD1  2DC3               	goto	l4572
 12562  0DD2                     u3820:
 12563  0DD2                     l1154:
 12564  0DD2                     l4574:	
 12565                           ;main.c: 167: _delay((unsigned long)((1)*(1000000/4000000.0)));
 12566                           
 12567                           
 12568                           ;main.c: 168: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 12569  0DD2  0021               	movlb	1	; select bank1
 12570  0DD3  0827               	movf	LCDsend2x4@lc^(0+128),w
 12571  0DD4  0422               	iorwf	LCDsend2x4@mode^(0+128),w
 12572  0DD5  3808               	iorlw	8
 12573  0DD6  318C  244E  318D   	fcall	_WriteI2C
 12574  0DD9                     l4576:
 12575  0DD9  0023               	movlb	3	; select bank3
 12576  0DDA  0C0F               	rrf	15,w	;volatile
 12577  0DDB  0C89               	rrf	9,f
 12578  0DDC  3901               	andlw	1
 12579  0DDD  0021               	movlb	1	; select bank1
 12580  0DDE  00A3               	movwf	??_LCDsend2x4^(0+128)
 12581  0DDF  0023               	movlb	3	; select bank3
 12582  0DE0  0811               	movf	17,w	;volatile
 12583  0DE1  391F               	andlw	31
 12584  0DE2  0021               	movlb	1	; select bank1
 12585  0DE3  0423               	iorwf	??_LCDsend2x4^(0+128),w
 12586  0DE4  1D03               	btfss	3,2
 12587  0DE5  2DE7               	goto	u3831
 12588  0DE6  2DE8               	goto	u3830
 12589  0DE7                     u3831:
 12590  0DE7  2DD9               	goto	l4576
 12591  0DE8                     u3830:
 12592  0DE8                     l1157:
 12593                           
 12594                           ;main.c: 169: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 12595  0DE8  0023               	movlb	3	; select bank3
 12596  0DE9  1511               	bsf	17,2	;volatile
 12597  0DEA                     l1158:
 12598  0DEA  1911               	btfsc	17,2	;volatile
 12599  0DEB  2DED               	goto	u3841
 12600  0DEC  2DEE               	goto	u3840
 12601  0DED                     u3841:
 12602  0DED  2DEA               	goto	l1158
 12603  0DEE                     u3840:
 12604  0DEE                     l4578:
 12605                           
 12606                           ;main.c: 170: _delay((unsigned long)((50)*(1000000/4000000.0)));
 12607  0DEE  3004               	movlw	4
 12608  0DEF                     u5157:
 12609  0DEF  0B89               	decfsz	9,f
 12610  0DF0  2DEF               	goto	u5157
 12611  0DF1                     l1161:
 12612  0DF1  0008               	return
 12613  0DF2                     __end_of_LCDsend2x4:
 12614                           
 12615                           	psect	text27
 12616  0BA3                     __ptext27:	
 12617 ;; *************** function _LCDsend *****************
 12618 ;; Defined at:
 12619 ;;		line 111 in file "main.c"
 12620 ;; Parameters:    Size  Location     Type
 12621 ;;  c               1    wreg     unsigned char 
 12622 ;; Auto vars:     Size  Location     Type
 12623 ;;  c               1    3[BANK1 ] unsigned char 
 12624 ;; Return value:  Size  Location     Type
 12625 ;;                  1    wreg      void 
 12626 ;; Registers used:
 12627 ;;		wreg, status,2, status,0, pclath, cstack
 12628 ;; Tracked objects:
 12629 ;;		On entry : 0/0
 12630 ;;		On exit  : 0/0
 12631 ;;		Unchanged: 0/0
 12632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12634 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12635 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12636 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12637 ;;Total ram usage:        2 bytes
 12638 ;; Hardware stack levels used:    1
 12639 ;; Hardware stack levels required when called:    8
 12640 ;; This function calls:
 12641 ;;		_WriteI2C
 12642 ;; This function is called by:
 12643 ;;		_LCDinit
 12644 ;; This function uses a non-reentrant model
 12645 ;;
 12646                           
 12647                           
 12648                           ;psect for function _LCDsend
 12649  0BA3                     _LCDsend:
 12650                           
 12651                           ;incstack = 0
 12652                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 12653                           ;LCDsend@c stored from wreg
 12654  0BA3  0021               	movlb	1	; select bank1
 12655  0BA4  00A3               	movwf	LCDsend@c^(0+128)
 12656  0BA5                     l4528:
 12657  0BA5                     l4530:	
 12658                           ;main.c: 113: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12659                           
 12660  0BA5  0023               	movlb	3	; select bank3
 12661  0BA6  0C0F               	rrf	15,w	;volatile
 12662  0BA7  0C89               	rrf	9,f
 12663  0BA8  3901               	andlw	1
 12664  0BA9  0021               	movlb	1	; select bank1
 12665  0BAA  00A2               	movwf	??_LCDsend^(0+128)
 12666  0BAB  0023               	movlb	3	; select bank3
 12667  0BAC  0811               	movf	17,w	;volatile
 12668  0BAD  391F               	andlw	31
 12669  0BAE  0021               	movlb	1	; select bank1
 12670  0BAF  0422               	iorwf	??_LCDsend^(0+128),w
 12671  0BB0  1D03               	btfss	3,2
 12672  0BB1  2BB3               	goto	u3671
 12673  0BB2  2BB4               	goto	u3670
 12674  0BB3                     u3671:
 12675  0BB3  2BA5               	goto	l4530
 12676  0BB4                     u3670:
 12677  0BB4                     l1028:
 12678                           
 12679                           ;main.c: 114: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 12680  0BB4  0023               	movlb	3	; select bank3
 12681  0BB5  1411               	bsf	17,0	;volatile
 12682  0BB6                     l1029:
 12683  0BB6  1811               	btfsc	17,0	;volatile
 12684  0BB7  2BB9               	goto	u3681
 12685  0BB8  2BBA               	goto	u3680
 12686  0BB9                     u3681:
 12687  0BB9  2BB6               	goto	l1029
 12688  0BBA                     u3680:
 12689  0BBA                     l4532:
 12690  0BBA  0023               	movlb	3	; select bank3
 12691  0BBB  0C0F               	rrf	15,w	;volatile
 12692  0BBC  0C89               	rrf	9,f
 12693  0BBD  3901               	andlw	1
 12694  0BBE  0021               	movlb	1	; select bank1
 12695  0BBF  00A2               	movwf	??_LCDsend^(0+128)
 12696  0BC0  0023               	movlb	3	; select bank3
 12697  0BC1  0811               	movf	17,w	;volatile
 12698  0BC2  391F               	andlw	31
 12699  0BC3  0021               	movlb	1	; select bank1
 12700  0BC4  0422               	iorwf	??_LCDsend^(0+128),w
 12701  0BC5  1D03               	btfss	3,2
 12702  0BC6  2BC8               	goto	u3691
 12703  0BC7  2BC9               	goto	u3690
 12704  0BC8                     u3691:
 12705  0BC8  2BBA               	goto	l4532
 12706  0BC9                     u3690:
 12707  0BC9                     l4534:
 12708                           
 12709                           ;main.c: 115: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12710  0BC9  304E               	movlw	78
 12711  0BCA  318C  244E  318B   	fcall	_WriteI2C
 12712  0BCD                     l4536:
 12713  0BCD  0023               	movlb	3	; select bank3
 12714  0BCE  0C0F               	rrf	15,w	;volatile
 12715  0BCF  0C89               	rrf	9,f
 12716  0BD0  3901               	andlw	1
 12717  0BD1  0021               	movlb	1	; select bank1
 12718  0BD2  00A2               	movwf	??_LCDsend^(0+128)
 12719  0BD3  0023               	movlb	3	; select bank3
 12720  0BD4  0811               	movf	17,w	;volatile
 12721  0BD5  391F               	andlw	31
 12722  0BD6  0021               	movlb	1	; select bank1
 12723  0BD7  0422               	iorwf	??_LCDsend^(0+128),w
 12724  0BD8  1D03               	btfss	3,2
 12725  0BD9  2BDB               	goto	u3701
 12726  0BDA  2BDC               	goto	u3700
 12727  0BDB                     u3701:
 12728  0BDB  2BCD               	goto	l4536
 12729  0BDC                     u3700:
 12730  0BDC                     l4538:
 12731                           
 12732                           ;main.c: 116: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12733  0BDC  0823               	movf	LCDsend@c^(0+128),w
 12734  0BDD  318C  244E  318B   	fcall	_WriteI2C
 12735  0BE0                     l4540:
 12736  0BE0  0023               	movlb	3	; select bank3
 12737  0BE1  0C0F               	rrf	15,w	;volatile
 12738  0BE2  0C89               	rrf	9,f
 12739  0BE3  3901               	andlw	1
 12740  0BE4  0021               	movlb	1	; select bank1
 12741  0BE5  00A2               	movwf	??_LCDsend^(0+128)
 12742  0BE6  0023               	movlb	3	; select bank3
 12743  0BE7  0811               	movf	17,w	;volatile
 12744  0BE8  391F               	andlw	31
 12745  0BE9  0021               	movlb	1	; select bank1
 12746  0BEA  0422               	iorwf	??_LCDsend^(0+128),w
 12747  0BEB  1D03               	btfss	3,2
 12748  0BEC  2BEE               	goto	u3711
 12749  0BED  2BEF               	goto	u3710
 12750  0BEE                     u3711:
 12751  0BEE  2BE0               	goto	l4540
 12752  0BEF                     u3710:
 12753  0BEF                     l1040:
 12754                           
 12755                           ;main.c: 117: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 12756  0BEF  0023               	movlb	3	; select bank3
 12757  0BF0  1511               	bsf	17,2	;volatile
 12758  0BF1                     l1041:
 12759  0BF1  1911               	btfsc	17,2	;volatile
 12760  0BF2  2BF4               	goto	u3721
 12761  0BF3  2BF5               	goto	u3720
 12762  0BF4                     u3721:
 12763  0BF4  2BF1               	goto	l1041
 12764  0BF5                     u3720:
 12765  0BF5                     l1044:
 12766  0BF5  0008               	return
 12767  0BF6                     __end_of_LCDsend:
 12768                           
 12769                           	psect	text28
 12770  0C4E                     __ptext28:	
 12771 ;; *************** function _WriteI2C *****************
 12772 ;; Defined at:
 12773 ;;		line 47 in file "I2C/i2c.c"
 12774 ;; Parameters:    Size  Location     Type
 12775 ;;  data_out        1    wreg     unsigned char 
 12776 ;; Auto vars:     Size  Location     Type
 12777 ;;  data_out        1    1[BANK1 ] unsigned char 
 12778 ;; Return value:  Size  Location     Type
 12779 ;;                  1    wreg      char 
 12780 ;; Registers used:
 12781 ;;		wreg, status,2, status,0
 12782 ;; Tracked objects:
 12783 ;;		On entry : 0/0
 12784 ;;		On exit  : 0/0
 12785 ;;		Unchanged: 0/0
 12786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12788 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12789 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12790 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12791 ;;Total ram usage:        2 bytes
 12792 ;; Hardware stack levels used:    1
 12793 ;; Hardware stack levels required when called:    7
 12794 ;; This function calls:
 12795 ;;		Nothing
 12796 ;; This function is called by:
 12797 ;;		_LCDsend
 12798 ;;		_LCDsend2x4
 12799 ;;		_LCDrecv
 12800 ;; This function uses a non-reentrant model
 12801 ;;
 12802                           
 12803                           
 12804                           ;psect for function _WriteI2C
 12805  0C4E                     _WriteI2C:
 12806                           
 12807                           ;incstack = 0
 12808                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 12809                           ;WriteI2C@data_out stored from wreg
 12810  0C4E  0021               	movlb	1	; select bank1
 12811  0C4F  00A1               	movwf	WriteI2C@data_out^(0+128)
 12812  0C50                     l4048:
 12813                           
 12814                           ;i2c.c: 49: SSP1BUF = data_out;
 12815  0C50  0821               	movf	WriteI2C@data_out^(0+128),w
 12816  0C51  0023               	movlb	3	; select bank3
 12817  0C52  008C               	movwf	12	;volatile
 12818  0C53                     l4050:
 12819                           
 12820                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 12821  0C53  1F90               	btfss	16,7	;volatile
 12822  0C54  2C56               	goto	u2981
 12823  0C55  2C57               	goto	u2980
 12824  0C56                     u2981:
 12825  0C56  2C58               	goto	l4056
 12826  0C57                     u2980:
 12827  0C57  2CA7               	goto	l30
 12828  0C58                     l4056:
 12829                           
 12830                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 12831  0C58  300F               	movlw	15
 12832  0C59  0510               	andwf	16,w	;volatile
 12833  0C5A  0021               	movlb	1	; select bank1
 12834  0C5B  00A0               	movwf	??_WriteI2C^(0+128)
 12835  0C5C  3008               	movlw	8
 12836  0C5D  0620               	xorwf	??_WriteI2C^(0+128),w
 12837  0C5E  1903               	btfsc	3,2
 12838  0C5F  2C61               	goto	u2991
 12839  0C60  2C62               	goto	u2990
 12840  0C61                     u2991:
 12841  0C61  2C7B               	goto	l4068
 12842  0C62                     u2990:
 12843  0C62                     l4058:
 12844  0C62  300F               	movlw	15
 12845  0C63  0023               	movlb	3	; select bank3
 12846  0C64  0510               	andwf	16,w	;volatile
 12847  0C65  0021               	movlb	1	; select bank1
 12848  0C66  00A0               	movwf	??_WriteI2C^(0+128)
 12849  0C67  300B               	movlw	11
 12850  0C68  0620               	xorwf	??_WriteI2C^(0+128),w
 12851  0C69  1903               	btfsc	3,2
 12852  0C6A  2C6C               	goto	u3001
 12853  0C6B  2C6D               	goto	u3000
 12854  0C6C                     u3001:
 12855  0C6C  2C7B               	goto	l4068
 12856  0C6D                     u3000:
 12857  0C6D                     l4060:
 12858                           
 12859                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 12860  0C6D  0023               	movlb	3	; select bank3
 12861  0C6E  1610               	bsf	16,4	;volatile
 12862  0C6F                     l33:	
 12863                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 12864                           
 12865  0C6F  002E               	movlb	14	; select bank14
 12866  0C70  1C0F               	btfss	15,0	;volatile
 12867  0C71  2C73               	goto	u3011
 12868  0C72  2C74               	goto	u3010
 12869  0C73                     u3011:
 12870  0C73  2C6F               	goto	l33
 12871  0C74                     u3010:
 12872  0C74                     l35:
 12873                           
 12874                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 12875  0C74  0023               	movlb	3	; select bank3
 12876  0C75  190F               	btfsc	15,2	;volatile
 12877  0C76  2C78               	goto	u3021
 12878  0C77  2C79               	goto	u3020
 12879  0C78                     u3021:
 12880  0C78  2CA7               	goto	l30
 12881  0C79                     u3020:
 12882  0C79                     l4062:
 12883  0C79  080F               	movf	15,w	;volatile
 12884  0C7A  2CA7               	goto	l30
 12885  0C7B                     l4068:
 12886                           
 12887                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 12888  0C7B  300F               	movlw	15
 12889  0C7C  0023               	movlb	3	; select bank3
 12890  0C7D  0510               	andwf	16,w	;volatile
 12891  0C7E  0021               	movlb	1	; select bank1
 12892  0C7F  00A0               	movwf	??_WriteI2C^(0+128)
 12893  0C80  3008               	movlw	8
 12894  0C81  0620               	xorwf	??_WriteI2C^(0+128),w
 12895  0C82  1903               	btfsc	3,2
 12896  0C83  2C85               	goto	u3031
 12897  0C84  2C86               	goto	u3030
 12898  0C85                     u3031:
 12899  0C85  2C91               	goto	l42
 12900  0C86                     u3030:
 12901  0C86                     l4070:
 12902  0C86  300F               	movlw	15
 12903  0C87  0023               	movlb	3	; select bank3
 12904  0C88  0510               	andwf	16,w	;volatile
 12905  0C89  0021               	movlb	1	; select bank1
 12906  0C8A  00A0               	movwf	??_WriteI2C^(0+128)
 12907  0C8B  300B               	movlw	11
 12908  0C8C  0620               	xorwf	??_WriteI2C^(0+128),w
 12909  0C8D  1D03               	btfss	3,2
 12910  0C8E  2C90               	goto	u3041
 12911  0C8F  2C91               	goto	u3040
 12912  0C90                     u3041:
 12913  0C90  2CA7               	goto	l30
 12914  0C91                     u3040:
 12915  0C91                     l42:
 12916  0C91  0023               	movlb	3	; select bank3
 12917  0C92  180F               	btfsc	15,0	;volatile
 12918  0C93  2C95               	goto	u3051
 12919  0C94  2C96               	goto	u3050
 12920  0C95                     u3051:
 12921  0C95  2C91               	goto	l42
 12922  0C96                     u3050:
 12923  0C96                     l4072:
 12924  0C96  0023               	movlb	3	; select bank3
 12925  0C97  0C0F               	rrf	15,w	;volatile
 12926  0C98  0C89               	rrf	9,f
 12927  0C99  3901               	andlw	1
 12928  0C9A  0021               	movlb	1	; select bank1
 12929  0C9B  00A0               	movwf	??_WriteI2C^(0+128)
 12930  0C9C  0023               	movlb	3	; select bank3
 12931  0C9D  0811               	movf	17,w	;volatile
 12932  0C9E  391F               	andlw	31
 12933  0C9F  0021               	movlb	1	; select bank1
 12934  0CA0  0420               	iorwf	??_WriteI2C^(0+128),w
 12935  0CA1  1D03               	btfss	3,2
 12936  0CA2  2CA4               	goto	u3061
 12937  0CA3  2CA5               	goto	u3060
 12938  0CA4                     u3061:
 12939  0CA4  2C96               	goto	l4072
 12940  0CA5                     u3060:
 12941  0CA5                     l47:
 12942                           
 12943                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 12944  0CA5  0023               	movlb	3	; select bank3
 12945  0CA6  0811               	movf	17,w	;volatile
 12946  0CA7                     l30:
 12947  0CA7  0008               	return
 12948  0CA8                     __end_of_WriteI2C:
 12949                           
 12950                           	psect	text29
 12951  0987                     __ptext29:	
 12952 ;; *************** function _DATAEE_WriteByte *****************
 12953 ;; Defined at:
 12954 ;;		line 180 in file "mcc_generated_files/memory.c"
 12955 ;; Parameters:    Size  Location     Type
 12956 ;;  bAdd            2    0[BANK1 ] unsigned int 
 12957 ;;  bData           1    2[BANK1 ] unsigned char 
 12958 ;; Auto vars:     Size  Location     Type
 12959 ;;  GIEBitValue     1    3[BANK1 ] unsigned char 
 12960 ;; Return value:  Size  Location     Type
 12961 ;;                  1    wreg      void 
 12962 ;; Registers used:
 12963 ;;		wreg, status,2, status,0
 12964 ;; Tracked objects:
 12965 ;;		On entry : 0/0
 12966 ;;		On exit  : 0/0
 12967 ;;		Unchanged: 0/0
 12968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12969 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 12970 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12972 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12973 ;;Total ram usage:        4 bytes
 12974 ;; Hardware stack levels used:    1
 12975 ;; Hardware stack levels required when called:    7
 12976 ;; This function calls:
 12977 ;;		Nothing
 12978 ;; This function is called by:
 12979 ;;		_main
 12980 ;; This function uses a non-reentrant model
 12981 ;;
 12982                           
 12983                           
 12984                           ;psect for function _DATAEE_WriteByte
 12985  0987                     _DATAEE_WriteByte:
 12986  0987                     l4896:	
 12987                           ;incstack = 0
 12988                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 12989                           
 12990                           
 12991                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 12992  0987  3000               	movlw	0
 12993  0988  1B8B               	btfsc	11,7	;volatile
 12994  0989  3001               	movlw	1
 12995  098A  0021               	movlb	1	; select bank1
 12996  098B  00A3               	movwf	DATAEE_WriteByte@GIEBitValue^(0+128)
 12997                           
 12998                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 12999  098C  0821               	movf	(DATAEE_WriteByte@bAdd+1)^(0+128),w
 13000  098D  0030               	movlb	16	; select bank16
 13001  098E  009B               	movwf	27	;volatile
 13002  098F                     l4898:
 13003                           
 13004                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 13005  098F  0021               	movlb	1	; select bank1
 13006  0990  0820               	movf	DATAEE_WriteByte@bAdd^(0+128),w
 13007  0991  0030               	movlb	16	; select bank16
 13008  0992  009A               	movwf	26	;volatile
 13009  0993                     l4900:
 13010                           
 13011                           ;memory.c: 186: NVMDATL = bData;
 13012  0993  0021               	movlb	1	; select bank1
 13013  0994  0822               	movf	DATAEE_WriteByte@bData^(0+128),w
 13014  0995  0030               	movlb	16	; select bank16
 13015  0996  009C               	movwf	28	;volatile
 13016  0997                     l4902:
 13017                           
 13018                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 13019  0997  171E               	bsf	30,6	;volsfr
 13020  0998                     l4904:
 13021                           
 13022                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 13023  0998  151E               	bsf	30,2	;volsfr
 13024  0999                     l4906:
 13025                           
 13026                           ;memory.c: 189: INTCONbits.GIE = 0;
 13027  0999  138B               	bcf	11,7	;volatile
 13028  099A                     l4908:
 13029                           
 13030                           ;memory.c: 190: NVMCON2 = 0x55;
 13031  099A  3055               	movlw	85
 13032  099B  009F               	movwf	31	;volsfr
 13033  099C                     l4910:
 13034                           
 13035                           ;memory.c: 191: NVMCON2 = 0xAA;
 13036  099C  30AA               	movlw	170
 13037  099D  009F               	movwf	31	;volsfr
 13038  099E                     l4912:
 13039                           
 13040                           ;memory.c: 192: NVMCON1bits.WR = 1;
 13041  099E  149E               	bsf	30,1	;volsfr
 13042  099F                     l842:	
 13043                           ;memory.c: 195: {
 13044                           
 13045  099F  189E               	btfsc	30,1	;volsfr
 13046  09A0  29A2               	goto	u4381
 13047  09A1  29A3               	goto	u4380
 13048  09A2                     u4381:
 13049  09A2  299F               	goto	l842
 13050  09A3                     u4380:
 13051  09A3                     l844:
 13052                           
 13053                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 13054  09A3  111E               	bcf	30,2	;volsfr
 13055  09A4                     l4914:
 13056                           
 13057                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 13058  09A4  0021               	movlb	1	; select bank1
 13059  09A5  0C23               	rrf	DATAEE_WriteByte@GIEBitValue^(0+128),w
 13060  09A6  1C03               	skipc
 13061  09A7  138B               	bcf	11,7	;volatile
 13062  09A8  1803               	skipnc
 13063  09A9  178B               	bsf	11,7	;volatile
 13064  09AA                     l845:
 13065  09AA  0008               	return
 13066  09AB                     __end_of_DATAEE_WriteByte:
 13067                           
 13068                           	psect	text30
 13069  179A                     __ptext30:	
 13070 ;; *************** function _DATAEE_ReadByte *****************
 13071 ;; Defined at:
 13072 ;;		line 202 in file "mcc_generated_files/memory.c"
 13073 ;; Parameters:    Size  Location     Type
 13074 ;;  bAdd            2    0[BANK1 ] unsigned int 
 13075 ;; Auto vars:     Size  Location     Type
 13076 ;;		None
 13077 ;; Return value:  Size  Location     Type
 13078 ;;                  1    wreg      unsigned char 
 13079 ;; Registers used:
 13080 ;;		wreg, status,2
 13081 ;; Tracked objects:
 13082 ;;		On entry : 0/0
 13083 ;;		On exit  : 0/0
 13084 ;;		Unchanged: 0/0
 13085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13086 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13089 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13090 ;;Total ram usage:        2 bytes
 13091 ;; Hardware stack levels used:    1
 13092 ;; Hardware stack levels required when called:    7
 13093 ;; This function calls:
 13094 ;;		Nothing
 13095 ;; This function is called by:
 13096 ;;		_main
 13097 ;; This function uses a non-reentrant model
 13098 ;;
 13099                           
 13100                           
 13101                           ;psect for function _DATAEE_ReadByte
 13102  179A                     _DATAEE_ReadByte:
 13103  179A                     l4916:	
 13104                           ;incstack = 0
 13105                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 13106                           
 13107                           
 13108                           ;memory.c: 204: NVMADRH = ((bAdd >> 8) & 0xFF);
 13109  179A  0021               	movlb	1	; select bank1
 13110  179B  0821               	movf	(DATAEE_ReadByte@bAdd+1)^(0+128),w
 13111  179C  0030               	movlb	16	; select bank16
 13112  179D  009B               	movwf	27	;volatile
 13113  179E                     l4918:
 13114                           
 13115                           ;memory.c: 205: NVMADRL = (bAdd & 0xFF);
 13116  179E  0021               	movlb	1	; select bank1
 13117  179F  0820               	movf	DATAEE_ReadByte@bAdd^(0+128),w
 13118  17A0  0030               	movlb	16	; select bank16
 13119  17A1  009A               	movwf	26	;volatile
 13120  17A2                     l4920:
 13121                           
 13122                           ;memory.c: 206: NVMCON1bits.NVMREGS = 1;
 13123  17A2  171E               	bsf	30,6	;volsfr
 13124  17A3                     l4922:
 13125                           
 13126                           ;memory.c: 207: NVMCON1bits.RD = 1;
 13127  17A3  141E               	bsf	30,0	;volsfr
 13128  17A4                     l4924:
 13129                           
 13130                           ;memory.c: 208: __nop();
 13131  17A4  0000               	nop
 13132  17A5                     l4926:
 13133                           
 13134                           ;memory.c: 209: __nop();
 13135  17A5  0000               	nop
 13136  17A6                     l4928:
 13137                           
 13138                           ;memory.c: 211: return (NVMDATL);
 13139  17A6  0030               	movlb	16	; select bank16
 13140  17A7  081C               	movf	28,w	;volatile
 13141  17A8                     l848:
 13142  17A8  0008               	return
 13143  17A9                     __end_of_DATAEE_ReadByte:
 13144                           
 13145                           	psect	intentry
 13146  0004                     __pintentry:	
 13147 ;; *************** function _INTERRUPT_InterruptManager *****************
 13148 ;; Defined at:
 13149 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13150 ;; Parameters:    Size  Location     Type
 13151 ;;		None
 13152 ;; Auto vars:     Size  Location     Type
 13153 ;;		None
 13154 ;; Return value:  Size  Location     Type
 13155 ;;                  1    wreg      void 
 13156 ;; Registers used:
 13157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13158 ;; Tracked objects:
 13159 ;;		On entry : 0/0
 13160 ;;		On exit  : 0/0
 13161 ;;		Unchanged: 0/0
 13162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13167 ;;Total ram usage:        0 bytes
 13168 ;; Hardware stack levels used:    1
 13169 ;; Hardware stack levels required when called:    6
 13170 ;; This function calls:
 13171 ;;		_INT_ISR
 13172 ;;		_TMR1_ISR
 13173 ;;		_TMR3_ISR
 13174 ;;		_TMR5_ISR
 13175 ;; This function is called by:
 13176 ;;		Interrupt level 1
 13177 ;; This function uses a non-reentrant model
 13178 ;;
 13179                           
 13180  0004                     _INTERRUPT_InterruptManager:
 13181                           
 13182                           ;incstack = 0
 13183  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13184                           
 13185                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13186  0005  3180               	pagesel	$
 13187  0006                     i1l5106:
 13188                           
 13189                           ;interrupt_manager.c: 55: if(PIE0bits.INTE == 1 && PIR0bits.INTF == 1)
 13190  0006  002E               	movlb	14	; select bank14
 13191  0007  1C16               	btfss	22,0	;volatile
 13192  0008  280A               	goto	u483_21
 13193  0009  280B               	goto	u483_20
 13194  000A                     u483_21:
 13195  000A  2813               	goto	i1l354
 13196  000B                     u483_20:
 13197  000B                     i1l5108:
 13198  000B  1C0C               	btfss	12,0	;volatile
 13199  000C  280E               	goto	u484_21
 13200  000D  280F               	goto	u484_20
 13201  000E                     u484_21:
 13202  000E  2813               	goto	i1l354
 13203  000F                     u484_20:
 13204  000F                     i1l5110:
 13205                           
 13206                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: INT_ISR();
 13207  000F  3197  2723  3180   	fcall	_INT_ISR
 13208                           
 13209                           ;interrupt_manager.c: 58: }
 13210  0012  284A               	goto	i1l368
 13211  0013                     i1l354:
 13212                           
 13213                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
 13214  0013  1F0B               	btfss	11,6	;volatile
 13215  0014  2816               	goto	u485_21
 13216  0015  2817               	goto	u485_20
 13217  0016                     u485_21:
 13218  0016  284A               	goto	i1l368
 13219  0017                     u485_20:
 13220  0017                     i1l5112:
 13221                           
 13222                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: if(PIE4bits.TMR5IE == 1 && PIR4bits
      +                          .TMR5IF == 1)
 13223  0017  1E1A               	btfss	26,4	;volatile
 13224  0018  281A               	goto	u486_21
 13225  0019  281B               	goto	u486_20
 13226  001A                     u486_21:
 13227  001A  2823               	goto	i1l357
 13228  001B                     u486_20:
 13229  001B                     i1l5114:
 13230  001B  1E10               	btfss	16,4	;volatile
 13231  001C  281E               	goto	u487_21
 13232  001D  281F               	goto	u487_20
 13233  001E                     u487_21:
 13234  001E  2823               	goto	i1l357
 13235  001F                     u487_20:
 13236  001F                     i1l5116:
 13237                           
 13238                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR5_ISR();
 13239  001F  3188  2052  3180   	fcall	_TMR5_ISR
 13240                           
 13241                           ;interrupt_manager.c: 64: }
 13242  0022  284A               	goto	i1l368
 13243  0023                     i1l357:
 13244                           
 13245                           ;interrupt_manager.c: 65: else if(PIE4bits.TMR3IE == 1 && PIR4bits.TMR3IF == 1)
 13246  0023  1D1A               	btfss	26,2	;volatile
 13247  0024  2826               	goto	u488_21
 13248  0025  2827               	goto	u488_20
 13249  0026                     u488_21:
 13250  0026  282F               	goto	i1l359
 13251  0027                     u488_20:
 13252  0027                     i1l5118:
 13253  0027  1D10               	btfss	16,2	;volatile
 13254  0028  282A               	goto	u489_21
 13255  0029  282B               	goto	u489_20
 13256  002A                     u489_21:
 13257  002A  282F               	goto	i1l359
 13258  002B                     u489_20:
 13259  002B                     i1l5120:
 13260                           
 13261                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: TMR3_ISR();
 13262  002B  3188  203B  3180   	fcall	_TMR3_ISR
 13263                           
 13264                           ;interrupt_manager.c: 68: }
 13265  002E  284A               	goto	i1l368
 13266  002F                     i1l359:
 13267                           
 13268                           ;interrupt_manager.c: 69: else if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 13269  002F  1C1A               	btfss	26,0	;volatile
 13270  0030  2832               	goto	u490_21
 13271  0031  2833               	goto	u490_20
 13272  0032                     u490_21:
 13273  0032  283B               	goto	i1l361
 13274  0033                     u490_20:
 13275  0033                     i1l5122:
 13276  0033  1C10               	btfss	16,0	;volatile
 13277  0034  2836               	goto	u491_21
 13278  0035  2837               	goto	u491_20
 13279  0036                     u491_21:
 13280  0036  283B               	goto	i1l361
 13281  0037                     u491_20:
 13282  0037                     i1l5124:
 13283                           
 13284                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: TMR1_ISR();
 13285  0037  3188  2024  3180   	fcall	_TMR1_ISR
 13286                           
 13287                           ;interrupt_manager.c: 72: }
 13288  003A  284A               	goto	i1l368
 13289  003B                     i1l361:
 13290                           
 13291                           ;interrupt_manager.c: 73: else if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 13292  003B  1C99               	btfss	25,1	;volatile
 13293  003C  283E               	goto	u492_21
 13294  003D  283F               	goto	u492_20
 13295  003E                     u492_21:
 13296  003E  2844               	goto	i1l363
 13297  003F                     u492_20:
 13298  003F                     i1l5126:
 13299                           
 13300                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: i2c1_driver_busCollisionISR();
 13301  003F  1C8F               	btfss	15,1	;volatile
 13302  0040  2842               	goto	u493_21
 13303  0041  2843               	goto	u493_20
 13304  0042                     u493_21:
 13305  0042  2844               	goto	i1l363
 13306  0043                     u493_20:
 13307  0043  284A               	goto	i1l368
 13308  0044                     i1l363:
 13309                           
 13310                           ;interrupt_manager.c: 77: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 13311  0044  1C19               	btfss	25,0	;volatile
 13312  0045  2847               	goto	u494_21
 13313  0046  2848               	goto	u494_20
 13314  0047                     u494_21:
 13315  0047  284A               	goto	i1l362
 13316  0048                     u494_20:
 13317  0048                     i1l5130:
 13318                           
 13319                           ;interrupt_manager.c: 78: {;interrupt_manager.c: 79: i2c1_driver_i2cISR();
 13320  0048  080F               	movf	15,w	;volatile
 13321  0049  284A               	goto	i1l368
 13322  004A                     i1l362:
 13323  004A                     i1l368:
 13324  004A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 13325  004B  0009               	retfie
 13326  004C                     __end_of_INTERRUPT_InterruptManager:
 13327                           
 13328                           	psect	text32
 13329  0852                     __ptext32:	
 13330 ;; *************** function _TMR5_ISR *****************
 13331 ;; Defined at:
 13332 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 13333 ;; Parameters:    Size  Location     Type
 13334 ;;		None
 13335 ;; Auto vars:     Size  Location     Type
 13336 ;;		None
 13337 ;; Return value:  Size  Location     Type
 13338 ;;                  1    wreg      void 
 13339 ;; Registers used:
 13340 ;;		wreg, status,2, status,0, pclath, cstack
 13341 ;; Tracked objects:
 13342 ;;		On entry : 0/0
 13343 ;;		On exit  : 0/0
 13344 ;;		Unchanged: 0/0
 13345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13350 ;;Total ram usage:        0 bytes
 13351 ;; Hardware stack levels used:    1
 13352 ;; Hardware stack levels required when called:    3
 13353 ;; This function calls:
 13354 ;;		Absolute function
 13355 ;;		_TMR5_DefaultInterruptHandler
 13356 ;;		_TMR5_WriteTimer
 13357 ;;		_monitoring_ISR
 13358 ;; This function is called by:
 13359 ;;		_INTERRUPT_InterruptManager
 13360 ;; This function uses a non-reentrant model
 13361 ;;
 13362                           
 13363                           
 13364                           ;psect for function _TMR5_ISR
 13365  0852                     _TMR5_ISR:
 13366  0852                     i1l4868:	
 13367                           ;incstack = 0
 13368                           ; Regs used in _TMR5_ISR: [wreg+status,2+status,0+pclath+cstack]
 13369                           
 13370                           
 13371                           ;tmr5.c: 168: PIR4bits.TMR5IF = 0;
 13372  0852  002E               	movlb	14	; select bank14
 13373  0853  1210               	bcf	16,4	;volatile
 13374  0854                     i1l4870:
 13375                           
 13376                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 13377  0854  0021               	movlb	1	; select bank1
 13378  0855  0836               	movf	(_timer5ReloadVal+1)^(0+128),w	;volatile
 13379  0856  00F1               	movwf	TMR5_WriteTimer@timerVal+1
 13380  0857  0835               	movf	_timer5ReloadVal^(0+128),w	;volatile
 13381  0858  00F0               	movwf	TMR5_WriteTimer@timerVal
 13382  0859  3197  27CB  3188   	fcall	_TMR5_WriteTimer
 13383  085C                     i1l4872:
 13384                           
 13385                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 13386  085C  0021               	movlb	1	; select bank1
 13387  085D  0833               	movf	_TMR5_InterruptHandler^(0+128),w
 13388  085E  0434               	iorwf	(_TMR5_InterruptHandler+1)^(0+128),w
 13389  085F  1903               	btfsc	3,2
 13390  0860  2862               	goto	u434_21
 13391  0861  2863               	goto	u434_20
 13392  0862                     u434_21:
 13393  0862  2868               	goto	i1l714
 13394  0863                     u434_20:
 13395  0863                     i1l4874:
 13396                           
 13397                           ;tmr5.c: 172: {;tmr5.c: 173: TMR5_InterruptHandler();
 13398  0863  0834               	movf	(_TMR5_InterruptHandler+1)^(0+128),w
 13399  0864  008A               	movwf	10
 13400  0865  0833               	movf	_TMR5_InterruptHandler^(0+128),w
 13401  0866  000A               	callw
 13402  0867  3188               	pagesel	$
 13403  0868                     i1l714:
 13404  0868  0008               	return
 13405  0869                     __end_of_TMR5_ISR:
 13406                           
 13407                           	psect	text33
 13408  0003                     __ptext33:	
 13409 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 13410 ;; Defined at:
 13411 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 13412 ;; Parameters:    Size  Location     Type
 13413 ;;		None
 13414 ;; Auto vars:     Size  Location     Type
 13415 ;;		None
 13416 ;; Return value:  Size  Location     Type
 13417 ;;                  1    wreg      void 
 13418 ;; Registers used:
 13419 ;;		None
 13420 ;; Tracked objects:
 13421 ;;		On entry : 0/0
 13422 ;;		On exit  : 0/0
 13423 ;;		Unchanged: 0/0
 13424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13429 ;;Total ram usage:        0 bytes
 13430 ;; Hardware stack levels used:    1
 13431 ;; This function calls:
 13432 ;;		Nothing
 13433 ;; This function is called by:
 13434 ;;		_TMR5_Initialize
 13435 ;;		_TMR5_ISR
 13436 ;; This function uses a non-reentrant model
 13437 ;;
 13438                           
 13439                           
 13440                           ;psect for function _TMR5_DefaultInterruptHandler
 13441  0003                     _TMR5_DefaultInterruptHandler:
 13442  0003                     i1l720:	
 13443                           ;incstack = 0
 13444                           ; Regs used in _TMR5_DefaultInterruptHandler: []
 13445                           
 13446  0003  0008               	return
 13447  0004                     __end_of_TMR5_DefaultInterruptHandler:
 13448                           
 13449                           	psect	text34
 13450  0621                     __ptext34:	
 13451 ;; *************** function _monitoring_ISR *****************
 13452 ;; Defined at:
 13453 ;;		line 473 in file "main.c"
 13454 ;; Parameters:    Size  Location     Type
 13455 ;;		None
 13456 ;; Auto vars:     Size  Location     Type
 13457 ;;		None
 13458 ;; Return value:  Size  Location     Type
 13459 ;;                  1    wreg      void 
 13460 ;; Registers used:
 13461 ;;		wreg, status,2, status,0, pclath, cstack
 13462 ;; Tracked objects:
 13463 ;;		On entry : 0/0
 13464 ;;		On exit  : 0/0
 13465 ;;		Unchanged: 0/0
 13466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13469 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13470 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13471 ;;Total ram usage:        3 bytes
 13472 ;; Hardware stack levels used:    1
 13473 ;; Hardware stack levels required when called:    2
 13474 ;; This function calls:
 13475 ;;		_ADCC_GetSingleConversion
 13476 ;;		___wmul
 13477 ;;		_tsttc
 13478 ;;		i1_DATAEE_WriteByte
 13479 ;; This function is called by:
 13480 ;;		_main
 13481 ;;		_TMR5_ISR
 13482 ;; This function uses a non-reentrant model
 13483 ;;
 13484                           
 13485                           
 13486                           ;psect for function _monitoring_ISR
 13487  0621                     _monitoring_ISR:
 13488  0621                     i1l4776:	
 13489                           ;incstack = 0
 13490                           ; Regs used in _monitoring_ISR: [wreg+status,2+status,0+pclath+cstack]
 13491                           
 13492                           
 13493                           ;main.c: 474: temp = (uint8_t)tsttc();
 13494  0621  318E  26F3  3186   	fcall	_tsttc
 13495  0624  00FA               	movwf	??_monitoring_ISR
 13496  0625  087A               	movf	??_monitoring_ISR,w
 13497  0626  0020               	movlb	0	; select bank0
 13498  0627  00E3               	movwf	_temp
 13499                           
 13500                           ;main.c: 476: lumLevel = ADCC_GetSingleConversion(channel_ANA0) >> 13;
 13501  0628  3000               	movlw	0
 13502  0629  3197  27EE  3186   	fcall	_ADCC_GetSingleConversion
 13503  062C  0870               	movf	?_ADCC_GetSingleConversion,w
 13504  062D  00FA               	movwf	??_monitoring_ISR
 13505  062E  0871               	movf	?_ADCC_GetSingleConversion+1,w
 13506  062F  00FB               	movwf	??_monitoring_ISR+1
 13507  0630  300D               	movlw	13
 13508  0631                     u422_25:
 13509  0631  36FB               	lsrf	??_monitoring_ISR+1,f
 13510  0632  0CFA               	rrf	??_monitoring_ISR,f
 13511  0633  0B89               	decfsz	9,f
 13512  0634  2E31               	goto	u422_25
 13513  0635  087A               	movf	??_monitoring_ISR,w
 13514  0636  00FC               	movwf	??_monitoring_ISR+2
 13515  0637  087C               	movf	??_monitoring_ISR+2,w
 13516  0638  0020               	movlb	0	; select bank0
 13517  0639  00E2               	movwf	_lumLevel
 13518  063A                     i1l4778:
 13519                           
 13520                           ;main.c: 478: if(prevTemp != temp || prevLumLevel != lumLevel){
 13521  063A  0863               	movf	_temp,w
 13522  063B  00FA               	movwf	??_monitoring_ISR
 13523  063C  01FB               	clrf	??_monitoring_ISR+1
 13524  063D  086D               	movf	_prevTemp+1,w
 13525  063E  067B               	xorwf	??_monitoring_ISR+1,w
 13526  063F  1D03               	skipz
 13527  0640  2E43               	goto	u423_25
 13528  0641  086C               	movf	_prevTemp,w
 13529  0642  067A               	xorwf	??_monitoring_ISR,w
 13530  0643                     u423_25:
 13531  0643  1D03               	skipz
 13532  0644  2E46               	goto	u423_21
 13533  0645  2E47               	goto	u423_20
 13534  0646                     u423_21:
 13535  0646  2E54               	goto	i1l4782
 13536  0647                     u423_20:
 13537  0647                     i1l4780:
 13538  0647  0862               	movf	_lumLevel,w
 13539  0648  00FA               	movwf	??_monitoring_ISR
 13540  0649  01FB               	clrf	??_monitoring_ISR+1
 13541  064A  086B               	movf	_prevLumLevel+1,w
 13542  064B  067B               	xorwf	??_monitoring_ISR+1,w
 13543  064C  1D03               	skipz
 13544  064D  2E50               	goto	u424_25
 13545  064E  086A               	movf	_prevLumLevel,w
 13546  064F  067A               	xorwf	??_monitoring_ISR,w
 13547  0650                     u424_25:
 13548  0650  1903               	skipnz
 13549  0651  2E53               	goto	u424_21
 13550  0652  2E54               	goto	u424_20
 13551  0653                     u424_21:
 13552  0653  2F00               	goto	i1l4794
 13553  0654                     u424_20:
 13554  0654                     i1l4782:
 13555                           
 13556                           ;main.c: 480: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*0) , t.h);
 13557  0654  0021               	movlb	1	; select bank1
 13558  0655  0845               	movf	_idx_RingBuffer^(0+128),w
 13559  0656  00FA               	movwf	??_monitoring_ISR
 13560  0657  01FB               	clrf	??_monitoring_ISR+1
 13561  0658  087A               	movf	??_monitoring_ISR,w
 13562  0659  00F0               	movwf	___wmul@multiplier
 13563  065A  087B               	movf	??_monitoring_ISR+1,w
 13564  065B  00F1               	movwf	___wmul@multiplier+1
 13565  065C  3005               	movlw	5
 13566  065D  00F2               	movwf	___wmul@multiplicand
 13567  065E  3000               	movlw	0
 13568  065F  00F3               	movwf	___wmul@multiplicand+1
 13569  0660  3188  20EC  3186   	fcall	___wmul
 13570  0663  0870               	movf	?___wmul,w
 13571  0664  3E14               	addlw	20
 13572  0665  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13573  0666  3070               	movlw	112
 13574  0667  3D71               	addwfc	?___wmul+1,w
 13575  0668  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13576  0669  0020               	movlb	0	; select bank0
 13577  066A  0857               	movf	_t,w
 13578  066B  00FC               	movwf	??_monitoring_ISR+2
 13579  066C  087C               	movf	??_monitoring_ISR+2,w
 13580  066D  00F8               	movwf	i1DATAEE_WriteByte@bData
 13581  066E  3188  20CE  3186   	fcall	i1_DATAEE_WriteByte
 13582                           
 13583                           ;main.c: 481: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*1) , t.m);
 13584  0671  0021               	movlb	1	; select bank1
 13585  0672  0845               	movf	_idx_RingBuffer^(0+128),w
 13586  0673  00FA               	movwf	??_monitoring_ISR
 13587  0674  01FB               	clrf	??_monitoring_ISR+1
 13588  0675  087A               	movf	??_monitoring_ISR,w
 13589  0676  00F0               	movwf	___wmul@multiplier
 13590  0677  087B               	movf	??_monitoring_ISR+1,w
 13591  0678  00F1               	movwf	___wmul@multiplier+1
 13592  0679  3005               	movlw	5
 13593  067A  00F2               	movwf	___wmul@multiplicand
 13594  067B  3000               	movlw	0
 13595  067C  00F3               	movwf	___wmul@multiplicand+1
 13596  067D  3188  20EC  3186   	fcall	___wmul
 13597  0680  0870               	movf	?___wmul,w
 13598  0681  3E1C               	addlw	28
 13599  0682  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13600  0683  3070               	movlw	112
 13601  0684  3D71               	addwfc	?___wmul+1,w
 13602  0685  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13603  0686  0020               	movlb	0	; select bank0
 13604  0687  0858               	movf	_t+1,w
 13605  0688  00FC               	movwf	??_monitoring_ISR+2
 13606  0689  087C               	movf	??_monitoring_ISR+2,w
 13607  068A  00F8               	movwf	i1DATAEE_WriteByte@bData
 13608  068B  3188  20CE  3186   	fcall	i1_DATAEE_WriteByte
 13609                           
 13610                           ;main.c: 482: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*2) , t.s);
 13611  068E  0021               	movlb	1	; select bank1
 13612  068F  0845               	movf	_idx_RingBuffer^(0+128),w
 13613  0690  00FA               	movwf	??_monitoring_ISR
 13614  0691  01FB               	clrf	??_monitoring_ISR+1
 13615  0692  087A               	movf	??_monitoring_ISR,w
 13616  0693  00F0               	movwf	___wmul@multiplier
 13617  0694  087B               	movf	??_monitoring_ISR+1,w
 13618  0695  00F1               	movwf	___wmul@multiplier+1
 13619  0696  3005               	movlw	5
 13620  0697  00F2               	movwf	___wmul@multiplicand
 13621  0698  3000               	movlw	0
 13622  0699  00F3               	movwf	___wmul@multiplicand+1
 13623  069A  3188  20EC  3186   	fcall	___wmul
 13624  069D  0870               	movf	?___wmul,w
 13625  069E  3E24               	addlw	36
 13626  069F  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13627  06A0  3070               	movlw	112
 13628  06A1  3D71               	addwfc	?___wmul+1,w
 13629  06A2  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13630  06A3  0020               	movlb	0	; select bank0
 13631  06A4  0859               	movf	_t+2,w
 13632  06A5  00FC               	movwf	??_monitoring_ISR+2
 13633  06A6  087C               	movf	??_monitoring_ISR+2,w
 13634  06A7  00F8               	movwf	i1DATAEE_WriteByte@bData
 13635  06A8  3188  20CE  3186   	fcall	i1_DATAEE_WriteByte
 13636                           
 13637                           ;main.c: 483: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*3) , temp);
 13638  06AB  0021               	movlb	1	; select bank1
 13639  06AC  0845               	movf	_idx_RingBuffer^(0+128),w
 13640  06AD  00FA               	movwf	??_monitoring_ISR
 13641  06AE  01FB               	clrf	??_monitoring_ISR+1
 13642  06AF  087A               	movf	??_monitoring_ISR,w
 13643  06B0  00F0               	movwf	___wmul@multiplier
 13644  06B1  087B               	movf	??_monitoring_ISR+1,w
 13645  06B2  00F1               	movwf	___wmul@multiplier+1
 13646  06B3  3005               	movlw	5
 13647  06B4  00F2               	movwf	___wmul@multiplicand
 13648  06B5  3000               	movlw	0
 13649  06B6  00F3               	movwf	___wmul@multiplicand+1
 13650  06B7  3188  20EC  3186   	fcall	___wmul
 13651  06BA  0870               	movf	?___wmul,w
 13652  06BB  3E2C               	addlw	44
 13653  06BC  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13654  06BD  3070               	movlw	112
 13655  06BE  3D71               	addwfc	?___wmul+1,w
 13656  06BF  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13657  06C0  0020               	movlb	0	; select bank0
 13658  06C1  0863               	movf	_temp,w
 13659  06C2  00FC               	movwf	??_monitoring_ISR+2
 13660  06C3  087C               	movf	??_monitoring_ISR+2,w
 13661  06C4  00F8               	movwf	i1DATAEE_WriteByte@bData
 13662  06C5  3188  20CE  3186   	fcall	i1_DATAEE_WriteByte
 13663                           
 13664                           ;main.c: 484: DATAEE_WriteByte( (idx_RingBuffer * 0x5) + 0x7014 + (8*4) , lumLevel);
 13665  06C8  0021               	movlb	1	; select bank1
 13666  06C9  0845               	movf	_idx_RingBuffer^(0+128),w
 13667  06CA  00FA               	movwf	??_monitoring_ISR
 13668  06CB  01FB               	clrf	??_monitoring_ISR+1
 13669  06CC  087A               	movf	??_monitoring_ISR,w
 13670  06CD  00F0               	movwf	___wmul@multiplier
 13671  06CE  087B               	movf	??_monitoring_ISR+1,w
 13672  06CF  00F1               	movwf	___wmul@multiplier+1
 13673  06D0  3005               	movlw	5
 13674  06D1  00F2               	movwf	___wmul@multiplicand
 13675  06D2  3000               	movlw	0
 13676  06D3  00F3               	movwf	___wmul@multiplicand+1
 13677  06D4  3188  20EC  3186   	fcall	___wmul
 13678  06D7  0870               	movf	?___wmul,w
 13679  06D8  3E34               	addlw	52
 13680  06D9  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 13681  06DA  3070               	movlw	112
 13682  06DB  3D71               	addwfc	?___wmul+1,w
 13683  06DC  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 13684  06DD  0020               	movlb	0	; select bank0
 13685  06DE  0862               	movf	_lumLevel,w
 13686  06DF  00FC               	movwf	??_monitoring_ISR+2
 13687  06E0  087C               	movf	??_monitoring_ISR+2,w
 13688  06E1  00F8               	movwf	i1DATAEE_WriteByte@bData
 13689  06E2  3188  20CE  3186   	fcall	i1_DATAEE_WriteByte
 13690  06E5                     i1l4784:
 13691                           
 13692                           ;main.c: 486: idx_RingBuffer++;
 13693  06E5  3001               	movlw	1
 13694  06E6  00FA               	movwf	??_monitoring_ISR
 13695  06E7  087A               	movf	??_monitoring_ISR,w
 13696  06E8  0021               	movlb	1	; select bank1
 13697  06E9  07C5               	addwf	_idx_RingBuffer^(0+128),f
 13698  06EA                     i1l4786:
 13699                           
 13700                           ;main.c: 487: if(idx_RingBuffer > NREG){
 13701  06EA  0845               	movf	_idx_RingBuffer^(0+128),w
 13702  06EB  0247               	subwf	_NREG^(0+128),w
 13703  06EC  1803               	skipnc
 13704  06ED  2EEF               	goto	u425_21
 13705  06EE  2EF0               	goto	u425_20
 13706  06EF                     u425_21:
 13707  06EF  2EF1               	goto	i1l4790
 13708  06F0                     u425_20:
 13709  06F0                     i1l4788:
 13710                           
 13711                           ;main.c: 488: idx_RingBuffer = 0;
 13712  06F0  01C5               	clrf	_idx_RingBuffer^(0+128)
 13713  06F1                     i1l4790:
 13714                           
 13715                           ;main.c: 489: };main.c: 490: prevTemp = temp;
 13716  06F1  0020               	movlb	0	; select bank0
 13717  06F2  0863               	movf	_temp,w
 13718  06F3  00FA               	movwf	??_monitoring_ISR
 13719  06F4  01FB               	clrf	??_monitoring_ISR+1
 13720  06F5  087A               	movf	??_monitoring_ISR,w
 13721  06F6  00EC               	movwf	_prevTemp
 13722  06F7  087B               	movf	??_monitoring_ISR+1,w
 13723  06F8  00ED               	movwf	_prevTemp+1
 13724  06F9                     i1l4792:
 13725                           
 13726                           ;main.c: 491: prevLumLevel = lumLevel;
 13727  06F9  0862               	movf	_lumLevel,w
 13728  06FA  00FA               	movwf	??_monitoring_ISR
 13729  06FB  01FB               	clrf	??_monitoring_ISR+1
 13730  06FC  087A               	movf	??_monitoring_ISR,w
 13731  06FD  00EA               	movwf	_prevLumLevel
 13732  06FE  087B               	movf	??_monitoring_ISR+1,w
 13733  06FF  00EB               	movwf	_prevLumLevel+1
 13734  0700                     i1l4794:
 13735                           
 13736                           ;main.c: 492: };main.c: 495: if(ALAF == 'A'){
 13737  0700  3041               	movlw	65
 13738  0701  0665               	xorwf	_ALAF,w
 13739  0702  1D03               	btfss	3,2
 13740  0703  2F05               	goto	u426_21
 13741  0704  2F06               	goto	u426_20
 13742  0705                     u426_21:
 13743  0705  2F3E               	goto	i1l1309
 13744  0706                     u426_20:
 13745  0706                     i1l4796:
 13746                           
 13747                           ;main.c: 497: if((lumAlarm.alarmLum > lumLevel) && (editingLumAlarm == 0)){
 13748  0706  0851               	movf	_lumAlarm,w
 13749  0707  0262               	subwf	_lumLevel,w
 13750  0708  1803               	skipnc
 13751  0709  2F0B               	goto	u427_21
 13752  070A  2F0C               	goto	u427_20
 13753  070B                     u427_21:
 13754  070B  2F20               	goto	i1l4810
 13755  070C                     u427_20:
 13756  070C                     i1l4798:
 13757  070C  0860               	movf	_editingLumAlarm,w
 13758  070D  1D03               	btfss	3,2
 13759  070E  2F10               	goto	u428_21
 13760  070F  2F11               	goto	u428_20
 13761  0710                     u428_21:
 13762  0710  2F20               	goto	i1l4810
 13763  0711                     u428_20:
 13764  0711                     i1l4800:
 13765                           
 13766                           ;main.c: 498: if(!lumAlarm.triggered){
 13767  0711  0853               	movf	_lumAlarm+2,w
 13768  0712  1D03               	btfss	3,2
 13769  0713  2F15               	goto	u429_21
 13770  0714  2F16               	goto	u429_20
 13771  0715                     u429_21:
 13772  0715  2F1A               	goto	i1l4804
 13773  0716                     u429_20:
 13774  0716                     i1l4802:
 13775                           
 13776                           ;main.c: 499: alarmPWMStart.h = 0xff;
 13777  0716  30FF               	movlw	255
 13778  0717  00FA               	movwf	??_monitoring_ISR
 13779  0718  087A               	movf	??_monitoring_ISR,w
 13780  0719  00E7               	movwf	_alarmPWMStart
 13781  071A                     i1l4804:
 13782                           
 13783                           ;main.c: 500: };main.c: 501: lumAlarm.triggered = 1;
 13784  071A  01D3               	clrf	_lumAlarm+2
 13785  071B  0AD3               	incf	_lumAlarm+2,f
 13786  071C                     i1l4806:
 13787                           
 13788                           ;main.c: 503: lumAlarm.trigger = 1;
 13789  071C  01D2               	clrf	_lumAlarm+1
 13790  071D  0AD2               	incf	_lumAlarm+1,f
 13791  071E                     i1l4808:
 13792  071E  1616               	bsf	22,4	;volatile
 13793  071F  2F22               	goto	i1l4814
 13794  0720                     i1l4810:
 13795                           
 13796                           ;main.c: 506: lumAlarm.triggered = 0;
 13797  0720  01D3               	clrf	_lumAlarm+2
 13798  0721                     i1l4812:
 13799  0721  1216               	bcf	22,4	;volatile
 13800  0722                     i1l4814:
 13801                           
 13802                           ;main.c: 508: };main.c: 511: if((tempAlarm.alarmTemp < temp) && (editingTempAlarm == 0))
      +                          {
 13803  0722  0863               	movf	_temp,w
 13804  0723  0254               	subwf	_tempAlarm,w
 13805  0724  1803               	skipnc
 13806  0725  2F27               	goto	u430_21
 13807  0726  2F28               	goto	u430_20
 13808  0727                     u430_21:
 13809  0727  2F3C               	goto	i1l4828
 13810  0728                     u430_20:
 13811  0728                     i1l4816:
 13812  0728  0861               	movf	_editingTempAlarm,w
 13813  0729  1D03               	btfss	3,2
 13814  072A  2F2C               	goto	u431_21
 13815  072B  2F2D               	goto	u431_20
 13816  072C                     u431_21:
 13817  072C  2F3C               	goto	i1l4828
 13818  072D                     u431_20:
 13819  072D                     i1l4818:
 13820                           
 13821                           ;main.c: 512: if(!tempAlarm.triggered){
 13822  072D  0856               	movf	_tempAlarm+2,w
 13823  072E  1D03               	btfss	3,2
 13824  072F  2F31               	goto	u432_21
 13825  0730  2F32               	goto	u432_20
 13826  0731                     u432_21:
 13827  0731  2F36               	goto	i1l4822
 13828  0732                     u432_20:
 13829  0732                     i1l4820:
 13830                           
 13831                           ;main.c: 513: alarmPWMStart.h = 0xff;
 13832  0732  30FF               	movlw	255
 13833  0733  00FA               	movwf	??_monitoring_ISR
 13834  0734  087A               	movf	??_monitoring_ISR,w
 13835  0735  00E7               	movwf	_alarmPWMStart
 13836  0736                     i1l4822:
 13837                           
 13838                           ;main.c: 514: };main.c: 516: tempAlarm.triggered = 1;
 13839  0736  01D6               	clrf	_tempAlarm+2
 13840  0737  0AD6               	incf	_tempAlarm+2,f
 13841  0738                     i1l4824:
 13842                           
 13843                           ;main.c: 518: tempAlarm.trigger = 1;
 13844  0738  01D5               	clrf	_tempAlarm+1
 13845  0739  0AD5               	incf	_tempAlarm+1,f
 13846  073A                     i1l4826:
 13847  073A  1696               	bsf	22,5	;volatile
 13848  073B  2F3E               	goto	i1l1309
 13849  073C                     i1l4828:
 13850                           
 13851                           ;main.c: 522: tempAlarm.triggered = 0;
 13852  073C  01D6               	clrf	_tempAlarm+2
 13853  073D                     i1l4830:
 13854  073D  1296               	bcf	22,5	;volatile
 13855  073E                     i1l1309:
 13856  073E  0008               	return
 13857  073F                     __end_of_monitoring_ISR:
 13858                           
 13859                           	psect	text35
 13860  0EF3                     __ptext35:	
 13861 ;; *************** function _tsttc *****************
 13862 ;; Defined at:
 13863 ;;		line 76 in file "main.c"
 13864 ;; Parameters:    Size  Location     Type
 13865 ;;		None
 13866 ;; Auto vars:     Size  Location     Type
 13867 ;;  value           1    3[COMMON] unsigned char 
 13868 ;; Return value:  Size  Location     Type
 13869 ;;                  1    wreg      unsigned char 
 13870 ;; Registers used:
 13871 ;;		wreg, status,2, status,0, pclath, cstack
 13872 ;; Tracked objects:
 13873 ;;		On entry : 0/0
 13874 ;;		On exit  : 0/0
 13875 ;;		Unchanged: 0/0
 13876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13879 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13880 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13881 ;;Total ram usage:        2 bytes
 13882 ;; Hardware stack levels used:    1
 13883 ;; Hardware stack levels required when called:    1
 13884 ;; This function calls:
 13885 ;;		_ReadI2C
 13886 ;;		i1_WriteI2C
 13887 ;; This function is called by:
 13888 ;;		_monitoring_ISR
 13889 ;; This function uses a non-reentrant model
 13890 ;;
 13891                           
 13892                           
 13893                           ;psect for function _tsttc
 13894  0EF3                     _tsttc:
 13895  0EF3                     i1l949:	
 13896                           ;incstack = 0
 13897                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 13898                           ;main.c: 78: unsigned char value;;main.c: 79: do{
 13899                           
 13900  0EF3                     i1l4102:	
 13901                           ;main.c: 80: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13902                           
 13903  0EF3  0023               	movlb	3	; select bank3
 13904  0EF4  0C0F               	rrf	15,w	;volatile
 13905  0EF5  0C89               	rrf	9,f
 13906  0EF6  3901               	andlw	1
 13907  0EF7  00F2               	movwf	??_tsttc
 13908  0EF8  0811               	movf	17,w	;volatile
 13909  0EF9  391F               	andlw	31
 13910  0EFA  0472               	iorwf	??_tsttc,w
 13911  0EFB  1D03               	btfss	3,2
 13912  0EFC  2EFE               	goto	u308_21
 13913  0EFD  2EFF               	goto	u308_20
 13914  0EFE                     u308_21:
 13915  0EFE  2EF3               	goto	i1l4102
 13916  0EFF                     u308_20:
 13917  0EFF                     i1l952:
 13918                           
 13919                           ;main.c: 81: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 13920  0EFF  1411               	bsf	17,0	;volatile
 13921  0F00                     i1l953:
 13922  0F00  1811               	btfsc	17,0	;volatile
 13923  0F01  2F03               	goto	u309_21
 13924  0F02  2F04               	goto	u309_20
 13925  0F03                     u309_21:
 13926  0F03  2F00               	goto	i1l953
 13927  0F04                     u309_20:
 13928  0F04                     i1l4104:
 13929  0F04  0C0F               	rrf	15,w	;volatile
 13930  0F05  0C89               	rrf	9,f
 13931  0F06  3901               	andlw	1
 13932  0F07  00F2               	movwf	??_tsttc
 13933  0F08  0811               	movf	17,w	;volatile
 13934  0F09  391F               	andlw	31
 13935  0F0A  0472               	iorwf	??_tsttc,w
 13936  0F0B  1D03               	btfss	3,2
 13937  0F0C  2F0E               	goto	u310_21
 13938  0F0D  2F0F               	goto	u310_20
 13939  0F0E                     u310_21:
 13940  0F0E  2F04               	goto	i1l4104
 13941  0F0F                     u310_20:
 13942  0F0F                     i1l4106:
 13943                           
 13944                           ;main.c: 83: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13945  0F0F  309A               	movlw	154
 13946  0F10  318B  2308  318E   	fcall	i1_WriteI2C
 13947  0F13                     i1l4108:
 13948  0F13  0023               	movlb	3	; select bank3
 13949  0F14  0C0F               	rrf	15,w	;volatile
 13950  0F15  0C89               	rrf	9,f
 13951  0F16  3901               	andlw	1
 13952  0F17  00F2               	movwf	??_tsttc
 13953  0F18  0811               	movf	17,w	;volatile
 13954  0F19  391F               	andlw	31
 13955  0F1A  0472               	iorwf	??_tsttc,w
 13956  0F1B  1D03               	btfss	3,2
 13957  0F1C  2F1E               	goto	u311_21
 13958  0F1D  2F1F               	goto	u311_20
 13959  0F1E                     u311_21:
 13960  0F1E  2F13               	goto	i1l4108
 13961  0F1F                     u311_20:
 13962  0F1F                     i1l4110:
 13963                           
 13964                           ;main.c: 84: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13965  0F1F  3001               	movlw	1
 13966  0F20  318B  2308  318E   	fcall	i1_WriteI2C
 13967  0F23                     i1l4112:
 13968  0F23  0023               	movlb	3	; select bank3
 13969  0F24  0C0F               	rrf	15,w	;volatile
 13970  0F25  0C89               	rrf	9,f
 13971  0F26  3901               	andlw	1
 13972  0F27  00F2               	movwf	??_tsttc
 13973  0F28  0811               	movf	17,w	;volatile
 13974  0F29  391F               	andlw	31
 13975  0F2A  0472               	iorwf	??_tsttc,w
 13976  0F2B  1D03               	btfss	3,2
 13977  0F2C  2F2E               	goto	u312_21
 13978  0F2D  2F2F               	goto	u312_20
 13979  0F2E                     u312_21:
 13980  0F2E  2F23               	goto	i1l4112
 13981  0F2F                     u312_20:
 13982  0F2F                     i1l964:
 13983                           
 13984                           ;main.c: 85: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 13985  0F2F  1491               	bsf	17,1	;volatile
 13986  0F30                     i1l965:
 13987  0F30  1891               	btfsc	17,1	;volatile
 13988  0F31  2F33               	goto	u313_21
 13989  0F32  2F34               	goto	u313_20
 13990  0F33                     u313_21:
 13991  0F33  2F30               	goto	i1l965
 13992  0F34                     u313_20:
 13993  0F34                     i1l4114:
 13994  0F34  0C0F               	rrf	15,w	;volatile
 13995  0F35  0C89               	rrf	9,f
 13996  0F36  3901               	andlw	1
 13997  0F37  00F2               	movwf	??_tsttc
 13998  0F38  0811               	movf	17,w	;volatile
 13999  0F39  391F               	andlw	31
 14000  0F3A  0472               	iorwf	??_tsttc,w
 14001  0F3B  1D03               	btfss	3,2
 14002  0F3C  2F3E               	goto	u314_21
 14003  0F3D  2F3F               	goto	u314_20
 14004  0F3E                     u314_21:
 14005  0F3E  2F34               	goto	i1l4114
 14006  0F3F                     u314_20:
 14007  0F3F                     i1l4116:
 14008                           
 14009                           ;main.c: 86: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14010  0F3F  309B               	movlw	155
 14011  0F40  318B  2308  318E   	fcall	i1_WriteI2C
 14012  0F43                     i1l4118:
 14013  0F43  0023               	movlb	3	; select bank3
 14014  0F44  0C0F               	rrf	15,w	;volatile
 14015  0F45  0C89               	rrf	9,f
 14016  0F46  3901               	andlw	1
 14017  0F47  00F2               	movwf	??_tsttc
 14018  0F48  0811               	movf	17,w	;volatile
 14019  0F49  391F               	andlw	31
 14020  0F4A  0472               	iorwf	??_tsttc,w
 14021  0F4B  1D03               	btfss	3,2
 14022  0F4C  2F4E               	goto	u315_21
 14023  0F4D  2F4F               	goto	u315_20
 14024  0F4E                     u315_21:
 14025  0F4E  2F43               	goto	i1l4118
 14026  0F4F                     u315_20:
 14027  0F4F                     i1l4120:
 14028                           
 14029                           ;main.c: 87: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14030  0F4F  3188  2099  318E   	fcall	_ReadI2C
 14031  0F52  00F2               	movwf	??_tsttc
 14032  0F53  0872               	movf	??_tsttc,w
 14033  0F54  00F3               	movwf	tsttc@value
 14034  0F55                     i1l4122:
 14035  0F55  0023               	movlb	3	; select bank3
 14036  0F56  0C0F               	rrf	15,w	;volatile
 14037  0F57  0C89               	rrf	9,f
 14038  0F58  3901               	andlw	1
 14039  0F59  00F2               	movwf	??_tsttc
 14040  0F5A  0811               	movf	17,w	;volatile
 14041  0F5B  391F               	andlw	31
 14042  0F5C  0472               	iorwf	??_tsttc,w
 14043  0F5D  1D03               	btfss	3,2
 14044  0F5E  2F60               	goto	u316_21
 14045  0F5F  2F61               	goto	u316_20
 14046  0F60                     u316_21:
 14047  0F60  2F55               	goto	i1l4122
 14048  0F61                     u316_20:
 14049  0F61                     i1l976:
 14050                           
 14051                           ;main.c: 88: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14052  0F61  1691               	bsf	17,5	;volatile
 14053  0F62  1611               	bsf	17,4	;volatile
 14054  0F63                     i1l977:
 14055  0F63  1A11               	btfsc	17,4	;volatile
 14056  0F64  2F66               	goto	u317_21
 14057  0F65  2F67               	goto	u317_20
 14058  0F66                     u317_21:
 14059  0F66  2F63               	goto	i1l977
 14060  0F67                     u317_20:
 14061  0F67                     i1l4124:
 14062  0F67  0C0F               	rrf	15,w	;volatile
 14063  0F68  0C89               	rrf	9,f
 14064  0F69  3901               	andlw	1
 14065  0F6A  00F2               	movwf	??_tsttc
 14066  0F6B  0811               	movf	17,w	;volatile
 14067  0F6C  391F               	andlw	31
 14068  0F6D  0472               	iorwf	??_tsttc,w
 14069  0F6E  1D03               	btfss	3,2
 14070  0F6F  2F71               	goto	u318_21
 14071  0F70  2F72               	goto	u318_20
 14072  0F71                     u318_21:
 14073  0F71  2F67               	goto	i1l4124
 14074  0F72                     u318_20:
 14075  0F72                     i1l982:
 14076                           
 14077                           ;main.c: 89: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 14078  0F72  1511               	bsf	17,2	;volatile
 14079  0F73                     i1l983:
 14080  0F73  1911               	btfsc	17,2	;volatile
 14081  0F74  2F76               	goto	u319_21
 14082  0F75  2F77               	goto	u319_20
 14083  0F76                     u319_21:
 14084  0F76  2F73               	goto	i1l983
 14085  0F77                     u319_20:
 14086  0F77                     i1l985:
 14087                           
 14088                           ;main.c: 90: } while (!(value & 0x40));
 14089  0F77  1F73               	btfss	tsttc@value,6
 14090  0F78  2F7A               	goto	u320_21
 14091  0F79  2F7B               	goto	u320_20
 14092  0F7A                     u320_21:
 14093  0F7A  2EF3               	goto	i1l949
 14094  0F7B                     u320_20:
 14095  0F7B                     i1l4126:
 14096  0F7B  0C0F               	rrf	15,w	;volatile
 14097  0F7C  0C89               	rrf	9,f
 14098  0F7D  3901               	andlw	1
 14099  0F7E  00F2               	movwf	??_tsttc
 14100  0F7F  0811               	movf	17,w	;volatile
 14101  0F80  391F               	andlw	31
 14102  0F81  0472               	iorwf	??_tsttc,w
 14103  0F82  1D03               	btfss	3,2
 14104  0F83  2F85               	goto	u321_21
 14105  0F84  2F86               	goto	u321_20
 14106  0F85                     u321_21:
 14107  0F85  2F7B               	goto	i1l4126
 14108  0F86                     u321_20:
 14109  0F86                     i1l989:
 14110                           
 14111                           ;main.c: 93: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 14112  0F86  1411               	bsf	17,0	;volatile
 14113  0F87                     i1l990:
 14114  0F87  1811               	btfsc	17,0	;volatile
 14115  0F88  2F8A               	goto	u322_21
 14116  0F89  2F8B               	goto	u322_20
 14117  0F8A                     u322_21:
 14118  0F8A  2F87               	goto	i1l990
 14119  0F8B                     u322_20:
 14120  0F8B                     i1l4128:
 14121  0F8B  0C0F               	rrf	15,w	;volatile
 14122  0F8C  0C89               	rrf	9,f
 14123  0F8D  3901               	andlw	1
 14124  0F8E  00F2               	movwf	??_tsttc
 14125  0F8F  0811               	movf	17,w	;volatile
 14126  0F90  391F               	andlw	31
 14127  0F91  0472               	iorwf	??_tsttc,w
 14128  0F92  1D03               	btfss	3,2
 14129  0F93  2F95               	goto	u323_21
 14130  0F94  2F96               	goto	u323_20
 14131  0F95                     u323_21:
 14132  0F95  2F8B               	goto	i1l4128
 14133  0F96                     u323_20:
 14134  0F96                     i1l4130:
 14135                           
 14136                           ;main.c: 94: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14137  0F96  309A               	movlw	154
 14138  0F97  318B  2308  318E   	fcall	i1_WriteI2C
 14139  0F9A                     i1l4132:
 14140  0F9A  0023               	movlb	3	; select bank3
 14141  0F9B  0C0F               	rrf	15,w	;volatile
 14142  0F9C  0C89               	rrf	9,f
 14143  0F9D  3901               	andlw	1
 14144  0F9E  00F2               	movwf	??_tsttc
 14145  0F9F  0811               	movf	17,w	;volatile
 14146  0FA0  391F               	andlw	31
 14147  0FA1  0472               	iorwf	??_tsttc,w
 14148  0FA2  1D03               	btfss	3,2
 14149  0FA3  2FA5               	goto	u324_21
 14150  0FA4  2FA6               	goto	u324_20
 14151  0FA5                     u324_21:
 14152  0FA5  2F9A               	goto	i1l4132
 14153  0FA6                     u324_20:
 14154  0FA6                     i1l4134:
 14155                           
 14156                           ;main.c: 95: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14157  0FA6  3000               	movlw	0
 14158  0FA7  318B  2308  318E   	fcall	i1_WriteI2C
 14159  0FAA                     i1l4136:
 14160  0FAA  0023               	movlb	3	; select bank3
 14161  0FAB  0C0F               	rrf	15,w	;volatile
 14162  0FAC  0C89               	rrf	9,f
 14163  0FAD  3901               	andlw	1
 14164  0FAE  00F2               	movwf	??_tsttc
 14165  0FAF  0811               	movf	17,w	;volatile
 14166  0FB0  391F               	andlw	31
 14167  0FB1  0472               	iorwf	??_tsttc,w
 14168  0FB2  1D03               	btfss	3,2
 14169  0FB3  2FB5               	goto	u325_21
 14170  0FB4  2FB6               	goto	u325_20
 14171  0FB5                     u325_21:
 14172  0FB5  2FAA               	goto	i1l4136
 14173  0FB6                     u325_20:
 14174  0FB6                     i1l1001:
 14175                           
 14176                           ;main.c: 96: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 14177  0FB6  1491               	bsf	17,1	;volatile
 14178  0FB7                     i1l1002:
 14179  0FB7  1891               	btfsc	17,1	;volatile
 14180  0FB8  2FBA               	goto	u326_21
 14181  0FB9  2FBB               	goto	u326_20
 14182  0FBA                     u326_21:
 14183  0FBA  2FB7               	goto	i1l1002
 14184  0FBB                     u326_20:
 14185  0FBB                     i1l4138:
 14186  0FBB  0C0F               	rrf	15,w	;volatile
 14187  0FBC  0C89               	rrf	9,f
 14188  0FBD  3901               	andlw	1
 14189  0FBE  00F2               	movwf	??_tsttc
 14190  0FBF  0811               	movf	17,w	;volatile
 14191  0FC0  391F               	andlw	31
 14192  0FC1  0472               	iorwf	??_tsttc,w
 14193  0FC2  1D03               	btfss	3,2
 14194  0FC3  2FC5               	goto	u327_21
 14195  0FC4  2FC6               	goto	u327_20
 14196  0FC5                     u327_21:
 14197  0FC5  2FBB               	goto	i1l4138
 14198  0FC6                     u327_20:
 14199  0FC6                     i1l4140:
 14200                           
 14201                           ;main.c: 97: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14202  0FC6  309B               	movlw	155
 14203  0FC7  318B  2308  318E   	fcall	i1_WriteI2C
 14204  0FCA                     i1l4142:
 14205  0FCA  0023               	movlb	3	; select bank3
 14206  0FCB  0C0F               	rrf	15,w	;volatile
 14207  0FCC  0C89               	rrf	9,f
 14208  0FCD  3901               	andlw	1
 14209  0FCE  00F2               	movwf	??_tsttc
 14210  0FCF  0811               	movf	17,w	;volatile
 14211  0FD0  391F               	andlw	31
 14212  0FD1  0472               	iorwf	??_tsttc,w
 14213  0FD2  1D03               	btfss	3,2
 14214  0FD3  2FD5               	goto	u328_21
 14215  0FD4  2FD6               	goto	u328_20
 14216  0FD5                     u328_21:
 14217  0FD5  2FCA               	goto	i1l4142
 14218  0FD6                     u328_20:
 14219  0FD6                     i1l4144:
 14220                           
 14221                           ;main.c: 98: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14222  0FD6  3188  2099  318E   	fcall	_ReadI2C
 14223  0FD9  00F2               	movwf	??_tsttc
 14224  0FDA  0872               	movf	??_tsttc,w
 14225  0FDB  00F3               	movwf	tsttc@value
 14226  0FDC                     i1l4146:
 14227  0FDC  0023               	movlb	3	; select bank3
 14228  0FDD  0C0F               	rrf	15,w	;volatile
 14229  0FDE  0C89               	rrf	9,f
 14230  0FDF  3901               	andlw	1
 14231  0FE0  00F2               	movwf	??_tsttc
 14232  0FE1  0811               	movf	17,w	;volatile
 14233  0FE2  391F               	andlw	31
 14234  0FE3  0472               	iorwf	??_tsttc,w
 14235  0FE4  1D03               	btfss	3,2
 14236  0FE5  2FE7               	goto	u329_21
 14237  0FE6  2FE8               	goto	u329_20
 14238  0FE7                     u329_21:
 14239  0FE7  2FDC               	goto	i1l4146
 14240  0FE8                     u329_20:
 14241  0FE8                     i1l1013:
 14242                           
 14243                           ;main.c: 99: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14244  0FE8  1691               	bsf	17,5	;volatile
 14245  0FE9  1611               	bsf	17,4	;volatile
 14246  0FEA                     i1l1014:
 14247  0FEA  1A11               	btfsc	17,4	;volatile
 14248  0FEB  2FED               	goto	u330_21
 14249  0FEC  2FEE               	goto	u330_20
 14250  0FED                     u330_21:
 14251  0FED  2FEA               	goto	i1l1014
 14252  0FEE                     u330_20:
 14253  0FEE                     i1l4148:
 14254  0FEE  0C0F               	rrf	15,w	;volatile
 14255  0FEF  0C89               	rrf	9,f
 14256  0FF0  3901               	andlw	1
 14257  0FF1  00F2               	movwf	??_tsttc
 14258  0FF2  0811               	movf	17,w	;volatile
 14259  0FF3  391F               	andlw	31
 14260  0FF4  0472               	iorwf	??_tsttc,w
 14261  0FF5  1D03               	btfss	3,2
 14262  0FF6  2FF8               	goto	u331_21
 14263  0FF7  2FF9               	goto	u331_20
 14264  0FF8                     u331_21:
 14265  0FF8  2FEE               	goto	i1l4148
 14266  0FF9                     u331_20:
 14267  0FF9                     i1l1019:
 14268                           
 14269                           ;main.c: 100: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 14270  0FF9  1511               	bsf	17,2	;volatile
 14271  0FFA                     i1l1020:
 14272  0FFA  1911               	btfsc	17,2	;volatile
 14273  0FFB  2FFD               	goto	u332_21
 14274  0FFC  2FFE               	goto	u332_20
 14275  0FFD                     u332_21:
 14276  0FFD  2FFA               	goto	i1l1020
 14277  0FFE                     u332_20:
 14278  0FFE                     i1l4150:
 14279                           
 14280                           ;main.c: 102: return value;
 14281  0FFE  0873               	movf	tsttc@value,w
 14282  0FFF                     i1l1023:
 14283  0FFF  0008               	return
 14284  1000                     __end_of_tsttc:
 14285                           
 14286                           	psect	text36
 14287  0899                     __ptext36:	
 14288 ;; *************** function _ReadI2C *****************
 14289 ;; Defined at:
 14290 ;;		line 32 in file "I2C/i2c.c"
 14291 ;; Parameters:    Size  Location     Type
 14292 ;;		None
 14293 ;; Auto vars:     Size  Location     Type
 14294 ;;		None
 14295 ;; Return value:  Size  Location     Type
 14296 ;;                  1    wreg      unsigned char 
 14297 ;; Registers used:
 14298 ;;		wreg, status,2, status,0
 14299 ;; Tracked objects:
 14300 ;;		On entry : 0/0
 14301 ;;		On exit  : 0/0
 14302 ;;		Unchanged: 0/0
 14303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14306 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14307 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14308 ;;Total ram usage:        1 bytes
 14309 ;; Hardware stack levels used:    1
 14310 ;; This function calls:
 14311 ;;		Nothing
 14312 ;; This function is called by:
 14313 ;;		_tsttc
 14314 ;;		_LCDrecv
 14315 ;; This function uses a non-reentrant model
 14316 ;;
 14317                           
 14318                           
 14319                           ;psect for function _ReadI2C
 14320  0899                     _ReadI2C:
 14321  0899                     i1l3960:	
 14322                           ;incstack = 0
 14323                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 14324                           
 14325                           
 14326                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 14327  0899  300F               	movlw	15
 14328  089A  0023               	movlb	3	; select bank3
 14329  089B  0510               	andwf	16,w	;volatile
 14330  089C  00F0               	movwf	??_ReadI2C
 14331  089D  3008               	movlw	8
 14332  089E  0670               	xorwf	??_ReadI2C,w
 14333  089F  1903               	btfsc	3,2
 14334  08A0  28A2               	goto	u276_21
 14335  08A1  28A3               	goto	u276_20
 14336  08A2                     u276_21:
 14337  08A2  28AC               	goto	i1l22
 14338  08A3                     u276_20:
 14339  08A3                     i1l3962:
 14340  08A3  300F               	movlw	15
 14341  08A4  0510               	andwf	16,w	;volatile
 14342  08A5  00F0               	movwf	??_ReadI2C
 14343  08A6  300B               	movlw	11
 14344  08A7  0670               	xorwf	??_ReadI2C,w
 14345  08A8  1D03               	btfss	3,2
 14346  08A9  28AB               	goto	u277_21
 14347  08AA  28AC               	goto	u277_20
 14348  08AB                     u277_21:
 14349  08AB  28AD               	goto	i1l23
 14350  08AC                     u277_20:
 14351  08AC                     i1l22:
 14352                           
 14353                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
 14354  08AC  1591               	bsf	17,3	;volatile
 14355  08AD                     i1l23:
 14356  08AD  1C0F               	btfss	15,0	;volatile
 14357  08AE  28B0               	goto	u278_21
 14358  08AF  28B1               	goto	u278_20
 14359  08B0                     u278_21:
 14360  08B0  28AD               	goto	i1l23
 14361  08B1                     u278_20:
 14362  08B1                     i1l3964:
 14363                           
 14364                           ;i2c.c: 37: return ( SSP1BUF );
 14365  08B1  080C               	movf	12,w	;volatile
 14366  08B2                     i1l26:
 14367  08B2  0008               	return
 14368  08B3                     __end_of_ReadI2C:
 14369                           
 14370                           	psect	text37
 14371  17EE                     __ptext37:	
 14372 ;; *************** function _ADCC_GetSingleConversion *****************
 14373 ;; Defined at:
 14374 ;;		line 130 in file "mcc_generated_files/adcc.c"
 14375 ;; Parameters:    Size  Location     Type
 14376 ;;  channel         1    wreg     enum E12086
 14377 ;; Auto vars:     Size  Location     Type
 14378 ;;  channel         1    3[COMMON] enum E12086
 14379 ;; Return value:  Size  Location     Type
 14380 ;;                  2    0[COMMON] unsigned int 
 14381 ;; Registers used:
 14382 ;;		wreg
 14383 ;; Tracked objects:
 14384 ;;		On entry : 0/0
 14385 ;;		On exit  : 0/0
 14386 ;;		Unchanged: 0/0
 14387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14388 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14389 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14391 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14392 ;;Total ram usage:        4 bytes
 14393 ;; Hardware stack levels used:    1
 14394 ;; This function calls:
 14395 ;;		Nothing
 14396 ;; This function is called by:
 14397 ;;		_monitoring_ISR
 14398 ;; This function uses a non-reentrant model
 14399 ;;
 14400                           
 14401                           
 14402                           ;psect for function _ADCC_GetSingleConversion
 14403  17EE                     _ADCC_GetSingleConversion:
 14404                           
 14405                           ;incstack = 0
 14406                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 14407                           ;ADCC_GetSingleConversion@channel stored from wreg
 14408  17EE  00F3               	movwf	ADCC_GetSingleConversion@channel
 14409  17EF                     i1l4082:
 14410                           
 14411                           ;adcc.c: 133: ADPCH = channel;
 14412  17EF  0873               	movf	ADCC_GetSingleConversion@channel,w
 14413  17F0  0021               	movlb	1	; select bank1
 14414  17F1  009E               	movwf	30	;volatile
 14415  17F2                     i1l4084:
 14416                           
 14417                           ;adcc.c: 136: ADCON0bits.ADON = 1;
 14418  17F2  1793               	bsf	19,7	;volatile
 14419  17F3                     i1l4086:
 14420                           
 14421                           ;adcc.c: 139: ADCON0bits.ADCONT = 0;
 14422  17F3  1313               	bcf	19,6	;volatile
 14423  17F4                     i1l4088:
 14424                           
 14425                           ;adcc.c: 142: ADCON0bits.ADGO = 1;
 14426  17F4  1413               	bsf	19,0	;volatile
 14427  17F5                     i1l4090:
 14428                           
 14429                           ;adcc.c: 145: __nop();
 14430  17F5  0000               	nop
 14431  17F6                     i1l587:	
 14432                           ;adcc.c: 149: {
 14433                           
 14434  17F6  0021               	movlb	1	; select bank1
 14435  17F7  1813               	btfsc	19,0	;volatile
 14436  17F8  2FFA               	goto	u307_21
 14437  17F9  2FFB               	goto	u307_20
 14438  17FA                     u307_21:
 14439  17FA  2FF6               	goto	i1l587
 14440  17FB                     u307_20:
 14441  17FB                     i1l4092:
 14442                           
 14443                           ;adcc.c: 150: };adcc.c: 154: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14444  17FB  080D               	movf	13,w	;volatile
 14445  17FC  00F1               	movwf	?_ADCC_GetSingleConversion+1
 14446  17FD  080C               	movf	12,w	;volatile
 14447  17FE  00F0               	movwf	?_ADCC_GetSingleConversion
 14448  17FF                     i1l590:
 14449  17FF  0008               	return
 14450  1800                     __end_of_ADCC_GetSingleConversion:
 14451                           
 14452                           	psect	text38
 14453  17CB                     __ptext38:	
 14454 ;; *************** function _TMR5_WriteTimer *****************
 14455 ;; Defined at:
 14456 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 14457 ;; Parameters:    Size  Location     Type
 14458 ;;  timerVal        2    0[COMMON] unsigned int 
 14459 ;; Auto vars:     Size  Location     Type
 14460 ;;		None
 14461 ;; Return value:  Size  Location     Type
 14462 ;;                  1    wreg      void 
 14463 ;; Registers used:
 14464 ;;		wreg, status,2
 14465 ;; Tracked objects:
 14466 ;;		On entry : 0/0
 14467 ;;		On exit  : 0/0
 14468 ;;		Unchanged: 0/0
 14469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14470 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14473 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14474 ;;Total ram usage:        2 bytes
 14475 ;; Hardware stack levels used:    1
 14476 ;; This function calls:
 14477 ;;		Nothing
 14478 ;; This function is called by:
 14479 ;;		_TMR5_ISR
 14480 ;;		_TMR5_Reload
 14481 ;; This function uses a non-reentrant model
 14482 ;;
 14483                           
 14484                           
 14485                           ;psect for function _TMR5_WriteTimer
 14486  17CB                     _TMR5_WriteTimer:
 14487  17CB                     i1l4508:	
 14488                           ;incstack = 0
 14489                           ; Regs used in _TMR5_WriteTimer: [wreg+status,2]
 14490                           
 14491                           
 14492                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 14493  17CB  0024               	movlb	4	; select bank4
 14494  17CC  1D1A               	btfss	26,2	;volatile
 14495  17CD  2FCF               	goto	u365_21
 14496  17CE  2FD0               	goto	u365_20
 14497  17CF                     u365_21:
 14498  17CF  2FD7               	goto	i1l4518
 14499  17D0                     u365_20:
 14500  17D0                     i1l4510:
 14501                           
 14502                           ;tmr5.c: 130: {;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 14503  17D0  101A               	bcf	26,0	;volatile
 14504  17D1                     i1l4512:
 14505                           
 14506                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 14507  17D1  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 14508  17D2  0099               	movwf	25	;volatile
 14509  17D3                     i1l4514:
 14510                           
 14511                           ;tmr5.c: 136: TMR5L = timerVal;
 14512  17D3  0870               	movf	TMR5_WriteTimer@timerVal,w
 14513  17D4  0098               	movwf	24	;volatile
 14514  17D5                     i1l4516:
 14515                           
 14516                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 14517  17D5  141A               	bsf	26,0	;volatile
 14518                           
 14519                           ;tmr5.c: 140: }
 14520  17D6  2FDB               	goto	i1l701
 14521  17D7                     i1l4518:
 14522                           
 14523                           ;tmr5.c: 141: else;tmr5.c: 142: {;tmr5.c: 144: TMR5H = (timerVal >> 8);
 14524  17D7  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 14525  17D8  0099               	movwf	25	;volatile
 14526  17D9                     i1l4520:
 14527                           
 14528                           ;tmr5.c: 145: TMR5L = timerVal;
 14529  17D9  0870               	movf	TMR5_WriteTimer@timerVal,w
 14530  17DA  0098               	movwf	24	;volatile
 14531  17DB                     i1l701:
 14532  17DB  0008               	return
 14533  17DC                     __end_of_TMR5_WriteTimer:
 14534                           
 14535                           	psect	text39
 14536  083B                     __ptext39:	
 14537 ;; *************** function _TMR3_ISR *****************
 14538 ;; Defined at:
 14539 ;;		line 164 in file "mcc_generated_files/tmr3.c"
 14540 ;; Parameters:    Size  Location     Type
 14541 ;;		None
 14542 ;; Auto vars:     Size  Location     Type
 14543 ;;		None
 14544 ;; Return value:  Size  Location     Type
 14545 ;;                  1    wreg      void 
 14546 ;; Registers used:
 14547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14548 ;; Tracked objects:
 14549 ;;		On entry : 0/0
 14550 ;;		On exit  : 0/0
 14551 ;;		Unchanged: 0/0
 14552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14557 ;;Total ram usage:        0 bytes
 14558 ;; Hardware stack levels used:    1
 14559 ;; Hardware stack levels required when called:    5
 14560 ;; This function calls:
 14561 ;;		Absolute function
 14562 ;;		_TMR3_DefaultInterruptHandler
 14563 ;;		_TMR3_WriteTimer
 14564 ;;		_menuLCD_ISR
 14565 ;; This function is called by:
 14566 ;;		_INTERRUPT_InterruptManager
 14567 ;; This function uses a non-reentrant model
 14568 ;;
 14569                           
 14570                           
 14571                           ;psect for function _TMR3_ISR
 14572  083B                     _TMR3_ISR:
 14573  083B                     i1l4876:	
 14574                           ;incstack = 0
 14575                           ; Regs used in _TMR3_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14576                           
 14577                           
 14578                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
 14579  083B  002E               	movlb	14	; select bank14
 14580  083C  1110               	bcf	16,2	;volatile
 14581  083D                     i1l4878:
 14582                           
 14583                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
 14584  083D  0020               	movlb	0	; select bank0
 14585  083E  086F               	movf	_timer3ReloadVal+1,w	;volatile
 14586  083F  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 14587  0840  086E               	movf	_timer3ReloadVal,w	;volatile
 14588  0841  00F0               	movwf	TMR3_WriteTimer@timerVal
 14589  0842  3197  27BA  3188   	fcall	_TMR3_WriteTimer
 14590  0845                     i1l4880:
 14591                           
 14592                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
 14593  0845  0021               	movlb	1	; select bank1
 14594  0846  0837               	movf	_TMR3_InterruptHandler^(0+128),w
 14595  0847  0438               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 14596  0848  1903               	btfsc	3,2
 14597  0849  284B               	goto	u435_21
 14598  084A  284C               	goto	u435_20
 14599  084B                     u435_21:
 14600  084B  2851               	goto	i1l490
 14601  084C                     u435_20:
 14602  084C                     i1l4882:
 14603                           
 14604                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
 14605  084C  0838               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 14606  084D  008A               	movwf	10
 14607  084E  0837               	movf	_TMR3_InterruptHandler^(0+128),w
 14608  084F  000A               	callw
 14609  0850  3188               	pagesel	$
 14610  0851                     i1l490:
 14611  0851  0008               	return
 14612  0852                     __end_of_TMR3_ISR:
 14613                           
 14614                           	psect	text40
 14615  0002                     __ptext40:	
 14616 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 14617 ;; Defined at:
 14618 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 14619 ;; Parameters:    Size  Location     Type
 14620 ;;		None
 14621 ;; Auto vars:     Size  Location     Type
 14622 ;;		None
 14623 ;; Return value:  Size  Location     Type
 14624 ;;                  1    wreg      void 
 14625 ;; Registers used:
 14626 ;;		None
 14627 ;; Tracked objects:
 14628 ;;		On entry : 0/0
 14629 ;;		On exit  : 0/0
 14630 ;;		Unchanged: 0/0
 14631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14636 ;;Total ram usage:        0 bytes
 14637 ;; Hardware stack levels used:    1
 14638 ;; This function calls:
 14639 ;;		Nothing
 14640 ;; This function is called by:
 14641 ;;		_TMR3_Initialize
 14642 ;;		_TMR3_ISR
 14643 ;; This function uses a non-reentrant model
 14644 ;;
 14645                           
 14646                           
 14647                           ;psect for function _TMR3_DefaultInterruptHandler
 14648  0002                     _TMR3_DefaultInterruptHandler:
 14649  0002                     i1l496:	
 14650                           ;incstack = 0
 14651                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 14652                           
 14653  0002  0008               	return
 14654  0003                     __end_of_TMR3_DefaultInterruptHandler:
 14655                           
 14656                           	psect	text41
 14657  006E                     __ptext41:	
 14658 ;; *************** function _menuLCD_ISR *****************
 14659 ;; Defined at:
 14660 ;;		line 332 in file "main.c"
 14661 ;; Parameters:    Size  Location     Type
 14662 ;;		None
 14663 ;; Auto vars:     Size  Location     Type
 14664 ;;  diff            3   42[BANK0 ] struct Time
 14665 ;;  str             8   27[BANK0 ] unsigned char [8]
 14666 ;;  tt              4   35[BANK0 ] unsigned char [4]
 14667 ;;  l               3   39[BANK0 ] unsigned char [3]
 14668 ;; Return value:  Size  Location     Type
 14669 ;;                  1    wreg      void 
 14670 ;; Registers used:
 14671 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14672 ;; Tracked objects:
 14673 ;;		On entry : 0/0
 14674 ;;		On exit  : 0/0
 14675 ;;		Unchanged: 0/0
 14676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14678 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14679 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14680 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14681 ;;Total ram usage:       24 bytes
 14682 ;; Hardware stack levels used:    1
 14683 ;; Hardware stack levels required when called:    4
 14684 ;; This function calls:
 14685 ;;		_LCDchar
 14686 ;;		_LCDcmd
 14687 ;;		_LCDstr
 14688 ;;		_PWM_Output_D4_Enable
 14689 ;;		_TMR2_StartTimer
 14690 ;;		_differenceBetweenTimePeriod
 14691 ;;		_sprintf
 14692 ;;		i1_PWM6_LoadDutyValue
 14693 ;;		i1_PWM_Output_D4_Disable
 14694 ;;		i1_TMR2_StopTimer
 14695 ;; This function is called by:
 14696 ;;		_main
 14697 ;;		_TMR3_ISR
 14698 ;; This function uses a non-reentrant model
 14699 ;;
 14700                           
 14701                           
 14702                           ;psect for function _menuLCD_ISR
 14703  006E                     _menuLCD_ISR:
 14704  006E                     i1l4638:	
 14705                           ;incstack = 0
 14706                           ; Regs used in _menuLCD_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14707                           
 14708                           
 14709                           ;main.c: 333: char str[8];;main.c: 334: if(editingClockAlarm){
 14710  006E  0020               	movlb	0	; select bank0
 14711  006F  085C               	movf	_editingClockAlarm,w
 14712  0070  045D               	iorwf	_editingClockAlarm+1,w
 14713  0071  1903               	btfsc	3,2
 14714  0072  2874               	goto	u395_21
 14715  0073  2875               	goto	u395_20
 14716  0074                     u395_21:
 14717  0074  2893               	goto	i1l4642
 14718  0075                     u395_20:
 14719  0075                     i1l4640:
 14720                           
 14721                           ;main.c: 335: sprintf(str, "%02d:%02d:%02d", clkAlarm.alarmVal.h,clkAlarm.alarmVal.m,clk
      +                          Alarm.alarmVal.s);
 14722  0075  3000               	movlw	low (STR_1| (0+32768))
 14723  0076  00A0               	movwf	sprintf@f
 14724  0077  3098               	movlw	high (STR_1| (0+32768))
 14725  0078  00A1               	movwf	sprintf@f+1
 14726  0079  084D               	movf	_clkAlarm,w
 14727  007A  00B5               	movwf	??_menuLCD_ISR
 14728  007B  01B6               	clrf	??_menuLCD_ISR+1
 14729  007C  0835               	movf	??_menuLCD_ISR,w
 14730  007D  00A2               	movwf	?_sprintf+2
 14731  007E  0836               	movf	??_menuLCD_ISR+1,w
 14732  007F  00A3               	movwf	?_sprintf+3
 14733  0080  084E               	movf	_clkAlarm+1,w
 14734  0081  00B7               	movwf	??_menuLCD_ISR+2
 14735  0082  01B8               	clrf	??_menuLCD_ISR+3
 14736  0083  0837               	movf	??_menuLCD_ISR+2,w
 14737  0084  00A4               	movwf	?_sprintf+4
 14738  0085  0838               	movf	??_menuLCD_ISR+3,w
 14739  0086  00A5               	movwf	?_sprintf+5
 14740  0087  084F               	movf	_clkAlarm+2,w
 14741  0088  00B9               	movwf	??_menuLCD_ISR+4
 14742  0089  01BA               	clrf	??_menuLCD_ISR+5
 14743  008A  0839               	movf	??_menuLCD_ISR+4,w
 14744  008B  00A6               	movwf	?_sprintf+6
 14745  008C  083A               	movf	??_menuLCD_ISR+5,w
 14746  008D  00A7               	movwf	?_sprintf+7
 14747  008E  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 14748  008F  3184  2484  3180   	fcall	_sprintf
 14749                           
 14750                           ;main.c: 336: } else {
 14751  0092  28B0               	goto	i1l4644
 14752  0093                     i1l4642:
 14753                           
 14754                           ;main.c: 337: sprintf(str, "%02d:%02d:%02d", t.h,t.m,t.s);
 14755  0093  3000               	movlw	low (STR_1| (0+32768))
 14756  0094  00A0               	movwf	sprintf@f
 14757  0095  3098               	movlw	high (STR_1| (0+32768))
 14758  0096  00A1               	movwf	sprintf@f+1
 14759  0097  0857               	movf	_t,w
 14760  0098  00B5               	movwf	??_menuLCD_ISR
 14761  0099  01B6               	clrf	??_menuLCD_ISR+1
 14762  009A  0835               	movf	??_menuLCD_ISR,w
 14763  009B  00A2               	movwf	?_sprintf+2
 14764  009C  0836               	movf	??_menuLCD_ISR+1,w
 14765  009D  00A3               	movwf	?_sprintf+3
 14766  009E  0858               	movf	_t+1,w
 14767  009F  00B7               	movwf	??_menuLCD_ISR+2
 14768  00A0  01B8               	clrf	??_menuLCD_ISR+3
 14769  00A1  0837               	movf	??_menuLCD_ISR+2,w
 14770  00A2  00A4               	movwf	?_sprintf+4
 14771  00A3  0838               	movf	??_menuLCD_ISR+3,w
 14772  00A4  00A5               	movwf	?_sprintf+5
 14773  00A5  0859               	movf	_t+2,w
 14774  00A6  00B9               	movwf	??_menuLCD_ISR+4
 14775  00A7  01BA               	clrf	??_menuLCD_ISR+5
 14776  00A8  0839               	movf	??_menuLCD_ISR+4,w
 14777  00A9  00A6               	movwf	?_sprintf+6
 14778  00AA  083A               	movf	??_menuLCD_ISR+5,w
 14779  00AB  00A7               	movwf	?_sprintf+7
 14780  00AC  303B               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 14781  00AD  3184  2484  3180   	fcall	_sprintf
 14782  00B0                     i1l4644:
 14783                           
 14784                           ;main.c: 338: };main.c: 339: LCDcmd(0x80);
 14785  00B0  3080               	movlw	128
 14786  00B1  3197  274D  3180   	fcall	_LCDcmd
 14787  00B4                     i1l4646:
 14788                           
 14789                           ;main.c: 340: LCDstr(str);
 14790  00B4  303B               	movlw	low menuLCD_ISR@str
 14791  00B5  00F9               	movwf	LCDstr@p
 14792  00B6  3000               	movlw	high menuLCD_ISR@str
 14793  00B7  00FA               	movwf	LCDstr@p+1
 14794  00B8  3188  20B3  3180   	fcall	_LCDstr
 14795  00BB                     i1l4648:
 14796                           
 14797                           ;main.c: 343: if(ALAF == 'A'){
 14798  00BB  3041               	movlw	65
 14799  00BC  0020               	movlb	0	; select bank0
 14800  00BD  0665               	xorwf	_ALAF,w
 14801  00BE  1D03               	btfss	3,2
 14802  00BF  28C1               	goto	u396_21
 14803  00C0  28C2               	goto	u396_20
 14804  00C1                     u396_21:
 14805  00C1  299E               	goto	i1l4712
 14806  00C2                     u396_20:
 14807  00C2                     i1l4650:
 14808                           
 14809                           ;main.c: 344: LCDcmd(0x8F);
 14810  00C2  308F               	movlw	143
 14811  00C3  3197  274D  3180   	fcall	_LCDcmd
 14812                           
 14813                           ;main.c: 345: LCDchar(ALAF);
 14814  00C6  0020               	movlb	0	; select bank0
 14815  00C7  0865               	movf	_ALAF,w
 14816  00C8  3197  275B  3180   	fcall	_LCDchar
 14817  00CB                     i1l4652:
 14818                           
 14819                           ;main.c: 348: if(clkAlarm.trigger == 1){
 14820  00CB  0020               	movlb	0	; select bank0
 14821  00CC  0350               	decf	_clkAlarm+3,w
 14822  00CD  1D03               	btfss	3,2
 14823  00CE  28D0               	goto	u397_21
 14824  00CF  28D1               	goto	u397_20
 14825  00D0                     u397_21:
 14826  00D0  28DA               	goto	i1l4656
 14827  00D1                     u397_20:
 14828  00D1                     i1l4654:
 14829                           
 14830                           ;main.c: 349: LCDcmd(0x8B);
 14831  00D1  308B               	movlw	139
 14832  00D2  3197  274D  3180   	fcall	_LCDcmd
 14833                           
 14834                           ;main.c: 350: LCDchar('C');
 14835  00D5  3043               	movlw	67
 14836  00D6  3197  275B  3180   	fcall	_LCDchar
 14837                           
 14838                           ;main.c: 351: } else{
 14839  00D9  28E2               	goto	i1l4658
 14840  00DA                     i1l4656:
 14841                           
 14842                           ;main.c: 352: LCDcmd(0x8B);
 14843  00DA  308B               	movlw	139
 14844  00DB  3197  274D  3180   	fcall	_LCDcmd
 14845                           
 14846                           ;main.c: 353: LCDchar(' ');
 14847  00DE  3020               	movlw	32
 14848  00DF  3197  275B  3180   	fcall	_LCDchar
 14849  00E2                     i1l4658:
 14850                           
 14851                           ;main.c: 354: };main.c: 357: if(tempAlarm.trigger == 1){
 14852  00E2  0020               	movlb	0	; select bank0
 14853  00E3  0355               	decf	_tempAlarm+1,w
 14854  00E4  1D03               	btfss	3,2
 14855  00E5  28E7               	goto	u398_21
 14856  00E6  28E8               	goto	u398_20
 14857  00E7                     u398_21:
 14858  00E7  28F1               	goto	i1l4662
 14859  00E8                     u398_20:
 14860  00E8                     i1l4660:
 14861                           
 14862                           ;main.c: 358: LCDcmd(0x8C);
 14863  00E8  308C               	movlw	140
 14864  00E9  3197  274D  3180   	fcall	_LCDcmd
 14865                           
 14866                           ;main.c: 359: LCDchar('T');
 14867  00EC  3054               	movlw	84
 14868  00ED  3197  275B  3180   	fcall	_LCDchar
 14869                           
 14870                           ;main.c: 360: } else{
 14871  00F0  28F9               	goto	i1l4664
 14872  00F1                     i1l4662:
 14873                           
 14874                           ;main.c: 361: LCDcmd(0x8C);
 14875  00F1  308C               	movlw	140
 14876  00F2  3197  274D  3180   	fcall	_LCDcmd
 14877                           
 14878                           ;main.c: 362: LCDchar(' ');
 14879  00F5  3020               	movlw	32
 14880  00F6  3197  275B  3180   	fcall	_LCDchar
 14881  00F9                     i1l4664:
 14882                           
 14883                           ;main.c: 363: };main.c: 366: if(lumAlarm.trigger == 1){
 14884  00F9  0020               	movlb	0	; select bank0
 14885  00FA  0352               	decf	_lumAlarm+1,w
 14886  00FB  1D03               	btfss	3,2
 14887  00FC  28FE               	goto	u399_21
 14888  00FD  28FF               	goto	u399_20
 14889  00FE                     u399_21:
 14890  00FE  2908               	goto	i1l4668
 14891  00FF                     u399_20:
 14892  00FF                     i1l4666:
 14893                           
 14894                           ;main.c: 367: LCDcmd(0x8D);
 14895  00FF  308D               	movlw	141
 14896  0100  3197  274D  3180   	fcall	_LCDcmd
 14897                           
 14898                           ;main.c: 368: LCDchar('L');
 14899  0103  304C               	movlw	76
 14900  0104  3197  275B  3180   	fcall	_LCDchar
 14901                           
 14902                           ;main.c: 369: } else{
 14903  0107  2910               	goto	i1l4670
 14904  0108                     i1l4668:
 14905                           
 14906                           ;main.c: 370: LCDcmd(0x8D);
 14907  0108  308D               	movlw	141
 14908  0109  3197  274D  3180   	fcall	_LCDcmd
 14909                           
 14910                           ;main.c: 371: LCDchar(' ');
 14911  010C  3020               	movlw	32
 14912  010D  3197  275B  3180   	fcall	_LCDchar
 14913  0110                     i1l4670:
 14914                           
 14915                           ;main.c: 372: };main.c: 373: if(clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigge
      +                          r){
 14916  0110  0020               	movlb	0	; select bank0
 14917  0111  0850               	movf	_clkAlarm+3,w
 14918  0112  1D03               	btfss	3,2
 14919  0113  2915               	goto	u400_21
 14920  0114  2916               	goto	u400_20
 14921  0115                     u400_21:
 14922  0115  2920               	goto	i1l4676
 14923  0116                     u400_20:
 14924  0116                     i1l4672:
 14925  0116  0855               	movf	_tempAlarm+1,w
 14926  0117  1D03               	btfss	3,2
 14927  0118  291A               	goto	u401_21
 14928  0119  291B               	goto	u401_20
 14929  011A                     u401_21:
 14930  011A  2920               	goto	i1l4676
 14931  011B                     u401_20:
 14932  011B                     i1l4674:
 14933  011B  0852               	movf	_lumAlarm+1,w
 14934  011C  1903               	btfsc	3,2
 14935  011D  291F               	goto	u402_21
 14936  011E  2920               	goto	u402_20
 14937  011F                     u402_21:
 14938  011F  2998               	goto	i1l1245
 14939  0120                     u402_20:
 14940  0120                     i1l4676:
 14941                           
 14942                           ;main.c: 374: if(alarmPWMStart.h == 0xff){
 14943  0120  0A67               	incf	_alarmPWMStart,w
 14944  0121  1D03               	btfss	3,2
 14945  0122  2924               	goto	u403_21
 14946  0123  2925               	goto	u403_20
 14947  0124                     u403_21:
 14948  0124  2931               	goto	i1l1248
 14949  0125                     u403_20:
 14950  0125                     i1l4678:
 14951                           
 14952                           ;main.c: 375: alarmPWMStart.h = t.h;
 14953  0125  0857               	movf	_t,w
 14954  0126  00B5               	movwf	??_menuLCD_ISR
 14955  0127  0835               	movf	??_menuLCD_ISR,w
 14956  0128  00E7               	movwf	_alarmPWMStart
 14957                           
 14958                           ;main.c: 376: alarmPWMStart.m = t.m;
 14959  0129  0858               	movf	_t+1,w
 14960  012A  00B5               	movwf	??_menuLCD_ISR
 14961  012B  0835               	movf	??_menuLCD_ISR,w
 14962  012C  00E8               	movwf	_alarmPWMStart+1
 14963                           
 14964                           ;main.c: 377: alarmPWMStart.s = t.s;
 14965  012D  0859               	movf	_t+2,w
 14966  012E  00B5               	movwf	??_menuLCD_ISR
 14967  012F  0835               	movf	??_menuLCD_ISR,w
 14968  0130  00E9               	movwf	_alarmPWMStart+2
 14969  0131                     i1l1248:
 14970                           
 14971                           ;main.c: 378: };main.c: 379: struct Time diff = {0,0,0};
 14972  0131  0021               	movlb	1	; select bank1
 14973  0132  083D               	movf	menuLCD_ISR@F12829^(0+128),w
 14974  0133  0020               	movlb	0	; select bank0
 14975  0134  00CA               	movwf	menuLCD_ISR@diff
 14976  0135  0021               	movlb	1	; select bank1
 14977  0136  083E               	movf	(menuLCD_ISR@F12829+1)^(0+128),w
 14978  0137  0020               	movlb	0	; select bank0
 14979  0138  00CB               	movwf	menuLCD_ISR@diff+1
 14980  0139  0021               	movlb	1	; select bank1
 14981  013A  083F               	movf	(menuLCD_ISR@F12829+2)^(0+128),w
 14982  013B  0020               	movlb	0	; select bank0
 14983  013C  00CC               	movwf	menuLCD_ISR@diff+2
 14984  013D                     i1l4680:
 14985                           
 14986                           ;main.c: 380: differenceBetweenTimePeriod( t, alarmPWMStart, &diff);
 14987  013D  0857               	movf	_t,w
 14988  013E  00F0               	movwf	differenceBetweenTimePeriod@start
 14989  013F  0858               	movf	_t+1,w
 14990  0140  00F1               	movwf	differenceBetweenTimePeriod@start+1
 14991  0141  0859               	movf	_t+2,w
 14992  0142  00F2               	movwf	differenceBetweenTimePeriod@start+2
 14993  0143  0867               	movf	_alarmPWMStart,w
 14994  0144  00F3               	movwf	differenceBetweenTimePeriod@stop
 14995  0145  0868               	movf	_alarmPWMStart+1,w
 14996  0146  00F4               	movwf	differenceBetweenTimePeriod@stop+1
 14997  0147  0869               	movf	_alarmPWMStart+2,w
 14998  0148  00F5               	movwf	differenceBetweenTimePeriod@stop+2
 14999  0149  304A               	movlw	(low (menuLCD_ISR@diff| 0))& (0+255)
 15000  014A  00B5               	movwf	??_menuLCD_ISR
 15001  014B  0835               	movf	??_menuLCD_ISR,w
 15002  014C  00F6               	movwf	differenceBetweenTimePeriod@diff
 15003  014D  318A  2225  3180   	fcall	_differenceBetweenTimePeriod
 15004  0150                     i1l4682:
 15005                           
 15006                           ;main.c: 382: if(diff.s <= TALA){
 15007  0150  0020               	movlb	0	; select bank0
 15008  0151  084C               	movf	menuLCD_ISR@diff+2,w
 15009  0152  0266               	subwf	_TALA,w
 15010  0153  1C03               	skipc
 15011  0154  2956               	goto	u404_21
 15012  0155  2957               	goto	u404_20
 15013  0156                     u404_21:
 15014  0156  2984               	goto	i1l1251
 15015  0157                     u404_20:
 15016  0157                     i1l4684:
 15017                           
 15018                           ;main.c: 383: PWM_on = 1;
 15019  0157  0021               	movlb	1	; select bank1
 15020  0158  01C4               	clrf	_PWM_on^(0+128)
 15021  0159  0AC4               	incf	_PWM_on^(0+128),f
 15022                           
 15023                           ;main.c: 384: if(PWM6EN==0){
 15024  015A  0027               	movlb	7	; select bank7
 15025  015B  1B8E               	btfsc	14,7	;volatile
 15026  015C  295E               	goto	u405_21
 15027  015D  295F               	goto	u405_20
 15028  015E                     u405_21:
 15029  015E  2965               	goto	i1l4688
 15030  015F                     u405_20:
 15031  015F                     i1l4686:
 15032                           
 15033                           ;main.c: 385: TMR2_StartTimer();
 15034  015F  3197  2717  3180   	fcall	_TMR2_StartTimer
 15035                           
 15036                           ;main.c: 386: PWM_Output_D4_Enable();
 15037  0162  3197  2705  3180   	fcall	_PWM_Output_D4_Enable
 15038  0165                     i1l4688:
 15039                           
 15040                           ;main.c: 387: };main.c: 388: if(dimingLed <= 330){
 15041  0165  0020               	movlb	0	; select bank0
 15042  0166  085F               	movf	_dimingLed+1,w
 15043  0167  3A80               	xorlw	128
 15044  0168  00B5               	movwf	??_menuLCD_ISR
 15045  0169  3081               	movlw	129
 15046  016A  0235               	subwf	??_menuLCD_ISR,w
 15047  016B  1D03               	skipz
 15048  016C  296F               	goto	u406_25
 15049  016D  304B               	movlw	75
 15050  016E  025E               	subwf	_dimingLed,w
 15051  016F                     u406_25:
 15052  016F  1803               	skipnc
 15053  0170  2972               	goto	u406_21
 15054  0171  2973               	goto	u406_20
 15055  0172                     u406_21:
 15056  0172  2979               	goto	i1l4692
 15057  0173                     u406_20:
 15058  0173                     i1l4690:
 15059                           
 15060                           ;main.c: 389: dimingLed += 30;
 15061  0173  301E               	movlw	30
 15062  0174  0020               	movlb	0	; select bank0
 15063  0175  07DE               	addwf	_dimingLed,f
 15064  0176  3000               	movlw	0
 15065  0177  3DDF               	addwfc	_dimingLed+1,f
 15066                           
 15067                           ;main.c: 390: } else{
 15068  0178  297C               	goto	i1l4694
 15069  0179                     i1l4692:
 15070                           
 15071                           ;main.c: 391: dimingLed = 0;
 15072  0179  0020               	movlb	0	; select bank0
 15073  017A  01DE               	clrf	_dimingLed
 15074  017B  01DF               	clrf	_dimingLed+1
 15075  017C                     i1l4694:
 15076                           
 15077                           ;main.c: 392: };main.c: 393: PWM6_LoadDutyValue(dimingLed);
 15078  017C  085F               	movf	_dimingLed+1,w
 15079  017D  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 15080  017E  085E               	movf	_dimingLed,w
 15081  017F  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 15082  0180  3188  200E  3180   	fcall	i1_PWM6_LoadDutyValue
 15083                           
 15084                           ;main.c: 394: } else if(PWM6EN==1){
 15085  0183  29A7               	goto	i1l1259
 15086  0184                     i1l1251:
 15087  0184  0027               	movlb	7	; select bank7
 15088  0185  1F8E               	btfss	14,7	;volatile
 15089  0186  2988               	goto	u407_21
 15090  0187  2989               	goto	u407_20
 15091  0188                     u407_21:
 15092  0188  29A7               	goto	i1l1259
 15093  0189                     u407_20:
 15094  0189                     i1l4696:
 15095                           
 15096                           ;main.c: 395: PWM_on = 0;
 15097  0189  0021               	movlb	1	; select bank1
 15098  018A  01C4               	clrf	_PWM_on^(0+128)
 15099  018B                     i1l4698:
 15100                           
 15101                           ;main.c: 396: PWM6_LoadDutyValue(0);
 15102  018B  3000               	movlw	0
 15103  018C  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 15104  018D  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 15105  018E  3188  200E  3180   	fcall	i1_PWM6_LoadDutyValue
 15106  0191                     i1l4700:
 15107                           
 15108                           ;main.c: 397: TMR2_StopTimer();
 15109  0191  3197  271B  3180   	fcall	i1_TMR2_StopTimer
 15110  0194                     i1l4702:
 15111                           
 15112                           ;main.c: 398: PWM_Output_D4_Disable();
 15113  0194  3197  270B  3180   	fcall	i1_PWM_Output_D4_Disable
 15114  0197  29A7               	goto	i1l1259
 15115  0198                     i1l1245:
 15116                           
 15117                           ;main.c: 401: if(PWM6EN==1){
 15118  0198  0027               	movlb	7	; select bank7
 15119  0199  1F8E               	btfss	14,7	;volatile
 15120  019A  299C               	goto	u408_21
 15121  019B  299D               	goto	u408_20
 15122  019C                     u408_21:
 15123  019C  29A7               	goto	i1l1259
 15124  019D                     u408_20:
 15125  019D  2989               	goto	i1l4696
 15126  019E                     i1l4712:
 15127                           
 15128                           ;main.c: 409: LCDcmd(0x8F);
 15129  019E  308F               	movlw	143
 15130  019F  3197  274D  3180   	fcall	_LCDcmd
 15131                           
 15132                           ;main.c: 410: LCDchar(ALAF);
 15133  01A2  0020               	movlb	0	; select bank0
 15134  01A3  0865               	movf	_ALAF,w
 15135  01A4  3197  275B  3180   	fcall	_LCDchar
 15136  01A7                     i1l1259:
 15137                           
 15138                           ;main.c: 411: };main.c: 413: LCDcmd(0xc0);
 15139  01A7  30C0               	movlw	192
 15140  01A8  3197  274D  3180   	fcall	_LCDcmd
 15141  01AB                     i1l4714:
 15142                           
 15143                           ;main.c: 414: char tt[4];;main.c: 415: if(editingTempAlarm){
 15144  01AB  0020               	movlb	0	; select bank0
 15145  01AC  0861               	movf	_editingTempAlarm,w
 15146  01AD  1903               	btfsc	3,2
 15147  01AE  29B0               	goto	u409_21
 15148  01AF  29B1               	goto	u409_20
 15149  01B0                     u409_21:
 15150  01B0  29C1               	goto	i1l4718
 15151  01B1                     u409_20:
 15152  01B1                     i1l4716:
 15153                           
 15154                           ;main.c: 416: sprintf(tt, "%02d C", tempAlarm.alarmTemp);
 15155  01B1  3019               	movlw	low (STR_3| (0+32768))
 15156  01B2  00A0               	movwf	sprintf@f
 15157  01B3  3098               	movlw	high (STR_3| (0+32768))
 15158  01B4  00A1               	movwf	sprintf@f+1
 15159  01B5  0854               	movf	_tempAlarm,w
 15160  01B6  00B5               	movwf	??_menuLCD_ISR
 15161  01B7  01B6               	clrf	??_menuLCD_ISR+1
 15162  01B8  0835               	movf	??_menuLCD_ISR,w
 15163  01B9  00A2               	movwf	?_sprintf+2
 15164  01BA  0836               	movf	??_menuLCD_ISR+1,w
 15165  01BB  00A3               	movwf	?_sprintf+3
 15166  01BC  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 15167  01BD  3184  2484  3180   	fcall	_sprintf
 15168                           
 15169                           ;main.c: 417: } else{
 15170  01C0  29D0               	goto	i1l4720
 15171  01C1                     i1l4718:
 15172                           
 15173                           ;main.c: 418: sprintf(tt, "%02d C", temp);
 15174  01C1  3019               	movlw	low (STR_3| (0+32768))
 15175  01C2  00A0               	movwf	sprintf@f
 15176  01C3  3098               	movlw	high (STR_3| (0+32768))
 15177  01C4  00A1               	movwf	sprintf@f+1
 15178  01C5  0863               	movf	_temp,w
 15179  01C6  00B5               	movwf	??_menuLCD_ISR
 15180  01C7  01B6               	clrf	??_menuLCD_ISR+1
 15181  01C8  0835               	movf	??_menuLCD_ISR,w
 15182  01C9  00A2               	movwf	?_sprintf+2
 15183  01CA  0836               	movf	??_menuLCD_ISR+1,w
 15184  01CB  00A3               	movwf	?_sprintf+3
 15185  01CC  3043               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 15186  01CD  3184  2484  3180   	fcall	_sprintf
 15187  01D0                     i1l4720:
 15188                           
 15189                           ;main.c: 419: };main.c: 420: LCDstr(tt);
 15190  01D0  3043               	movlw	low menuLCD_ISR@tt
 15191  01D1  00F9               	movwf	LCDstr@p
 15192  01D2  3000               	movlw	high menuLCD_ISR@tt
 15193  01D3  00FA               	movwf	LCDstr@p+1
 15194  01D4  3188  20B3  3180   	fcall	_LCDstr
 15195  01D7                     i1l4722:
 15196                           
 15197                           ;main.c: 422: LCDcmd(0xcd);
 15198  01D7  30CD               	movlw	205
 15199  01D8  3197  274D  3180   	fcall	_LCDcmd
 15200  01DB                     i1l4724:
 15201                           
 15202                           ;main.c: 423: char l[3];;main.c: 425: if(editingLumAlarm){
 15203  01DB  0020               	movlb	0	; select bank0
 15204  01DC  0860               	movf	_editingLumAlarm,w
 15205  01DD  1903               	btfsc	3,2
 15206  01DE  29E0               	goto	u410_21
 15207  01DF  29E1               	goto	u410_20
 15208  01E0                     u410_21:
 15209  01E0  29F1               	goto	i1l4728
 15210  01E1                     u410_20:
 15211  01E1                     i1l4726:
 15212                           
 15213                           ;main.c: 426: sprintf(l, "L %d", lumAlarm.alarmLum);
 15214  01E1  3020               	movlw	low (STR_5| (0+32768))
 15215  01E2  00A0               	movwf	sprintf@f
 15216  01E3  3098               	movlw	high (STR_5| (0+32768))
 15217  01E4  00A1               	movwf	sprintf@f+1
 15218  01E5  0851               	movf	_lumAlarm,w
 15219  01E6  00B5               	movwf	??_menuLCD_ISR
 15220  01E7  01B6               	clrf	??_menuLCD_ISR+1
 15221  01E8  0835               	movf	??_menuLCD_ISR,w
 15222  01E9  00A2               	movwf	?_sprintf+2
 15223  01EA  0836               	movf	??_menuLCD_ISR+1,w
 15224  01EB  00A3               	movwf	?_sprintf+3
 15225  01EC  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 15226  01ED  3184  2484  3180   	fcall	_sprintf
 15227                           
 15228                           ;main.c: 427: } else{
 15229  01F0  2A00               	goto	i1l4730
 15230  01F1                     i1l4728:
 15231                           
 15232                           ;main.c: 428: sprintf(l, "L %d", lumLevel);
 15233  01F1  3020               	movlw	low (STR_5| (0+32768))
 15234  01F2  00A0               	movwf	sprintf@f
 15235  01F3  3098               	movlw	high (STR_5| (0+32768))
 15236  01F4  00A1               	movwf	sprintf@f+1
 15237  01F5  0862               	movf	_lumLevel,w
 15238  01F6  00B5               	movwf	??_menuLCD_ISR
 15239  01F7  01B6               	clrf	??_menuLCD_ISR+1
 15240  01F8  0835               	movf	??_menuLCD_ISR,w
 15241  01F9  00A2               	movwf	?_sprintf+2
 15242  01FA  0836               	movf	??_menuLCD_ISR+1,w
 15243  01FB  00A3               	movwf	?_sprintf+3
 15244  01FC  3047               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 15245  01FD  3184  2484  3180   	fcall	_sprintf
 15246  0200                     i1l4730:
 15247                           
 15248                           ;main.c: 429: };main.c: 430: LCDstr(l);
 15249  0200  3047               	movlw	low menuLCD_ISR@l
 15250  0201  00F9               	movwf	LCDstr@p
 15251  0202  3000               	movlw	high menuLCD_ISR@l
 15252  0203  00FA               	movwf	LCDstr@p+1
 15253  0204  3188  20B3  3180   	fcall	_LCDstr
 15254  0207                     i1l4732:
 15255                           
 15256                           ;main.c: 432: if(mode != 0){
 15257  0207  0020               	movlb	0	; select bank0
 15258  0208  085A               	movf	_mode,w
 15259  0209  045B               	iorwf	_mode+1,w
 15260  020A  1903               	btfsc	3,2
 15261  020B  2A0D               	goto	u411_21
 15262  020C  2A0E               	goto	u411_20
 15263  020D                     u411_21:
 15264  020D  2A19               	goto	i1l4738
 15265  020E                     u411_20:
 15266  020E                     i1l4734:
 15267                           
 15268                           ;main.c: 433: LCDcmd(0x8B);
 15269  020E  308B               	movlw	139
 15270  020F  3197  274D  3180   	fcall	_LCDcmd
 15271  0212                     i1l4736:
 15272                           
 15273                           ;main.c: 434: LCDstr("CTL");
 15274  0212  3025               	movlw	low (STR_7| (0+32768))
 15275  0213  00F9               	movwf	LCDstr@p
 15276  0214  3098               	movlw	high (STR_7| (0+32768))
 15277  0215  00FA               	movwf	LCDstr@p+1
 15278  0216  3188  20B3  3180   	fcall	_LCDstr
 15279  0219                     i1l4738:
 15280                           
 15281                           ;main.c: 435: };main.c: 437: if(mode == 1){
 15282  0219  0020               	movlb	0	; select bank0
 15283  021A  035A               	decf	_mode,w
 15284  021B  045B               	iorwf	_mode+1,w
 15285  021C  1D03               	btfss	3,2
 15286  021D  2A1F               	goto	u412_21
 15287  021E  2A20               	goto	u412_20
 15288  021F                     u412_21:
 15289  021F  2A4F               	goto	i1l4756
 15290  0220                     u412_20:
 15291  0220                     i1l4740:
 15292                           
 15293                           ;main.c: 438: if(editingClockAlarm == 0){
 15294  0220  085C               	movf	_editingClockAlarm,w
 15295  0221  045D               	iorwf	_editingClockAlarm+1,w
 15296  0222  1D03               	btfss	3,2
 15297  0223  2A25               	goto	u413_21
 15298  0224  2A26               	goto	u413_20
 15299  0225                     u413_21:
 15300  0225  2A2B               	goto	i1l4744
 15301  0226                     u413_20:
 15302  0226                     i1l4742:
 15303                           
 15304                           ;main.c: 439: LCDcmd(0x8B);
 15305  0226  308B               	movlw	139
 15306  0227  3197  274D  3180   	fcall	_LCDcmd
 15307                           
 15308                           ;main.c: 440: } else{
 15309  022A  2A86               	goto	i1l1283
 15310  022B                     i1l4744:
 15311                           
 15312                           ;main.c: 441: if(editingClockAlarm == 1){
 15313  022B  035C               	decf	_editingClockAlarm,w
 15314  022C  045D               	iorwf	_editingClockAlarm+1,w
 15315  022D  1D03               	btfss	3,2
 15316  022E  2A30               	goto	u414_21
 15317  022F  2A31               	goto	u414_20
 15318  0230                     u414_21:
 15319  0230  2A36               	goto	i1l4748
 15320  0231                     u414_20:
 15321  0231                     i1l4746:
 15322                           
 15323                           ;main.c: 442: LCDcmd(0x81);
 15324  0231  3081               	movlw	129
 15325  0232  3197  274D  3180   	fcall	_LCDcmd
 15326                           
 15327                           ;main.c: 443: } else if(editingClockAlarm == 2){
 15328  0235  2A86               	goto	i1l1283
 15329  0236                     i1l4748:
 15330  0236  3002               	movlw	2
 15331  0237  065C               	xorwf	_editingClockAlarm,w
 15332  0238  045D               	iorwf	_editingClockAlarm+1,w
 15333  0239  1D03               	btfss	3,2
 15334  023A  2A3C               	goto	u415_21
 15335  023B  2A3D               	goto	u415_20
 15336  023C                     u415_21:
 15337  023C  2A42               	goto	i1l4752
 15338  023D                     u415_20:
 15339  023D                     i1l4750:
 15340                           
 15341                           ;main.c: 444: LCDcmd(0x84);
 15342  023D  3084               	movlw	132
 15343  023E  3197  274D  3180   	fcall	_LCDcmd
 15344                           
 15345                           ;main.c: 445: } else if(editingClockAlarm == 3){
 15346  0241  2A86               	goto	i1l1283
 15347  0242                     i1l4752:
 15348  0242  3003               	movlw	3
 15349  0243  065C               	xorwf	_editingClockAlarm,w
 15350  0244  045D               	iorwf	_editingClockAlarm+1,w
 15351  0245  1D03               	btfss	3,2
 15352  0246  2A48               	goto	u416_21
 15353  0247  2A49               	goto	u416_20
 15354  0248                     u416_21:
 15355  0248  2A4E               	goto	i1l1267
 15356  0249                     u416_20:
 15357  0249                     i1l4754:
 15358                           
 15359                           ;main.c: 446: LCDcmd(0x87);
 15360  0249  3087               	movlw	135
 15361  024A  3197  274D  3180   	fcall	_LCDcmd
 15362  024D  2A86               	goto	i1l1283
 15363  024E                     i1l1267:
 15364                           
 15365                           ;main.c: 447: };main.c: 448: };main.c: 449: } else if(mode == 2){
 15366  024E  2A86               	goto	i1l1283
 15367  024F                     i1l4756:
 15368  024F  3002               	movlw	2
 15369  0250  065A               	xorwf	_mode,w
 15370  0251  045B               	iorwf	_mode+1,w
 15371  0252  1D03               	btfss	3,2
 15372  0253  2A55               	goto	u417_21
 15373  0254  2A56               	goto	u417_20
 15374  0255                     u417_21:
 15375  0255  2A65               	goto	i1l4764
 15376  0256                     u417_20:
 15377  0256                     i1l4758:
 15378                           
 15379                           ;main.c: 451: if(editingTempAlarm == 0){
 15380  0256  0861               	movf	_editingTempAlarm,w
 15381  0257  1D03               	btfss	3,2
 15382  0258  2A5A               	goto	u418_21
 15383  0259  2A5B               	goto	u418_20
 15384  025A                     u418_21:
 15385  025A  2A60               	goto	i1l4762
 15386  025B                     u418_20:
 15387  025B                     i1l4760:
 15388                           
 15389                           ;main.c: 452: LCDcmd(0x8c);
 15390  025B  308C               	movlw	140
 15391  025C  3197  274D  3180   	fcall	_LCDcmd
 15392                           
 15393                           ;main.c: 453: }else {
 15394  025F  2A86               	goto	i1l1283
 15395  0260                     i1l4762:
 15396                           
 15397                           ;main.c: 454: LCDcmd(0xc0);
 15398  0260  30C0               	movlw	192
 15399  0261  3197  274D  3180   	fcall	_LCDcmd
 15400  0264  2A86               	goto	i1l1283
 15401  0265                     i1l4764:
 15402  0265  3003               	movlw	3
 15403  0266  065A               	xorwf	_mode,w
 15404  0267  045B               	iorwf	_mode+1,w
 15405  0268  1D03               	btfss	3,2
 15406  0269  2A6B               	goto	u419_21
 15407  026A  2A6C               	goto	u419_20
 15408  026B                     u419_21:
 15409  026B  2A7B               	goto	i1l4772
 15410  026C                     u419_20:
 15411  026C                     i1l4766:
 15412                           
 15413                           ;main.c: 459: if(editingTempAlarm == 0){
 15414  026C  0861               	movf	_editingTempAlarm,w
 15415  026D  1D03               	btfss	3,2
 15416  026E  2A70               	goto	u420_21
 15417  026F  2A71               	goto	u420_20
 15418  0270                     u420_21:
 15419  0270  2A76               	goto	i1l4770
 15420  0271                     u420_20:
 15421  0271                     i1l4768:
 15422                           
 15423                           ;main.c: 460: LCDcmd(0x8d);
 15424  0271  308D               	movlw	141
 15425  0272  3197  274D  3180   	fcall	_LCDcmd
 15426                           
 15427                           ;main.c: 461: }else {
 15428  0275  2A86               	goto	i1l1283
 15429  0276                     i1l4770:
 15430                           
 15431                           ;main.c: 462: LCDcmd(0xcd);
 15432  0276  30CD               	movlw	205
 15433  0277  3197  274D  3180   	fcall	_LCDcmd
 15434  027A  2A86               	goto	i1l1283
 15435  027B                     i1l4772:
 15436  027B  3004               	movlw	4
 15437  027C  065A               	xorwf	_mode,w
 15438  027D  045B               	iorwf	_mode+1,w
 15439  027E  1D03               	btfss	3,2
 15440  027F  2A81               	goto	u421_21
 15441  0280  2A82               	goto	u421_20
 15442  0281                     u421_21:
 15443  0281  2A86               	goto	i1l1283
 15444  0282                     u421_20:
 15445  0282                     i1l4774:
 15446                           
 15447                           ;main.c: 466: LCDcmd(0x8f);
 15448  0282  308F               	movlw	143
 15449  0283  3197  274D  3180   	fcall	_LCDcmd
 15450  0286                     i1l1283:
 15451  0286  0008               	return
 15452  0287                     __end_of_menuLCD_ISR:
 15453                           
 15454                           	psect	text42
 15455  171B                     __ptext42:	
 15456 ;; *************** function i1_TMR2_StopTimer *****************
 15457 ;; Defined at:
 15458 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 15459 ;; Parameters:    Size  Location     Type
 15460 ;;		None
 15461 ;; Auto vars:     Size  Location     Type
 15462 ;;		None
 15463 ;; Return value:  Size  Location     Type
 15464 ;;                  1    wreg      void 
 15465 ;; Registers used:
 15466 ;;		status,2, status,0, pclath, cstack
 15467 ;; Tracked objects:
 15468 ;;		On entry : 0/0
 15469 ;;		On exit  : 0/0
 15470 ;;		Unchanged: 0/0
 15471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15476 ;;Total ram usage:        0 bytes
 15477 ;; Hardware stack levels used:    1
 15478 ;; Hardware stack levels required when called:    1
 15479 ;; This function calls:
 15480 ;;		i1_TMR2_Stop
 15481 ;; This function is called by:
 15482 ;;		_menuLCD_ISR
 15483 ;; This function uses a non-reentrant model
 15484 ;;
 15485                           
 15486                           
 15487                           ;psect for function i1_TMR2_StopTimer
 15488  171B                     i1_TMR2_StopTimer:
 15489  171B                     i1l4320:	
 15490                           ;incstack = 0
 15491                           ; Regs used in i1_TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 15492                           
 15493                           
 15494                           ;tmr2.c: 119: TMR2_Stop();
 15495  171B  3197  270E  3197   	fcall	i1_TMR2_Stop
 15496  171E                     i1l779:
 15497  171E  0008               	return
 15498  171F                     __end_ofi1_TMR2_StopTimer:
 15499                           
 15500                           	psect	text43
 15501  170E                     __ptext43:	
 15502 ;; *************** function i1_TMR2_Stop *****************
 15503 ;; Defined at:
 15504 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 15505 ;; Parameters:    Size  Location     Type
 15506 ;;		None
 15507 ;; Auto vars:     Size  Location     Type
 15508 ;;		None
 15509 ;; Return value:  Size  Location     Type
 15510 ;;                  1    wreg      void 
 15511 ;; Registers used:
 15512 ;;		None
 15513 ;; Tracked objects:
 15514 ;;		On entry : 0/0
 15515 ;;		On exit  : 0/0
 15516 ;;		Unchanged: 0/0
 15517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15522 ;;Total ram usage:        0 bytes
 15523 ;; Hardware stack levels used:    1
 15524 ;; This function calls:
 15525 ;;		Nothing
 15526 ;; This function is called by:
 15527 ;;		i1_TMR2_StopTimer
 15528 ;; This function uses a non-reentrant model
 15529 ;;
 15530                           
 15531                           
 15532                           ;psect for function i1_TMR2_Stop
 15533  170E                     i1_TMR2_Stop:
 15534  170E                     i1l4046:	
 15535                           ;incstack = 0
 15536                           ; Regs used in i1_TMR2_Stop: []
 15537                           
 15538                           
 15539                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 15540  170E  0025               	movlb	5	; select bank5
 15541  170F  138E               	bcf	14,7	;volatile
 15542  1710                     i1l776:
 15543  1710  0008               	return
 15544  1711                     __end_ofi1_TMR2_Stop:
 15545                           
 15546                           	psect	text44
 15547  170B                     __ptext44:	
 15548 ;; *************** function i1_PWM_Output_D4_Disable *****************
 15549 ;; Defined at:
 15550 ;;		line 246 in file "main.c"
 15551 ;; Parameters:    Size  Location     Type
 15552 ;;		None
 15553 ;; Auto vars:     Size  Location     Type
 15554 ;;		None
 15555 ;; Return value:  Size  Location     Type
 15556 ;;                  1    wreg      void 
 15557 ;; Registers used:
 15558 ;;		None
 15559 ;; Tracked objects:
 15560 ;;		On entry : 0/0
 15561 ;;		On exit  : 0/0
 15562 ;;		Unchanged: 0/0
 15563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15568 ;;Total ram usage:        0 bytes
 15569 ;; Hardware stack levels used:    1
 15570 ;; This function calls:
 15571 ;;		Nothing
 15572 ;; This function is called by:
 15573 ;;		_menuLCD_ISR
 15574 ;; This function uses a non-reentrant model
 15575 ;;
 15576                           
 15577                           
 15578                           ;psect for function i1_PWM_Output_D4_Disable
 15579  170B                     i1_PWM_Output_D4_Disable:
 15580  170B                     i1l4342:	
 15581                           ;incstack = 0
 15582                           ; Regs used in i1_PWM_Output_D4_Disable: []
 15583                           
 15584                           
 15585                           ;main.c: 247: PWM6EN = 0;
 15586  170B  0027               	movlb	7	; select bank7
 15587  170C  138E               	bcf	14,7	;volatile
 15588  170D                     i1l1195:
 15589  170D  0008               	return
 15590  170E                     __end_ofi1_PWM_Output_D4_Disable:
 15591                           
 15592                           	psect	text45
 15593  080E                     __ptext45:	
 15594 ;; *************** function i1_PWM6_LoadDutyValue *****************
 15595 ;; Defined at:
 15596 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 15597 ;; Parameters:    Size  Location     Type
 15598 ;;  dutyValue       2    0[COMMON] unsigned int 
 15599 ;; Auto vars:     Size  Location     Type
 15600 ;;		None
 15601 ;; Return value:  Size  Location     Type
 15602 ;;                  1    wreg      void 
 15603 ;; Registers used:
 15604 ;;		wreg, status,2, status,0
 15605 ;; Tracked objects:
 15606 ;;		On entry : 0/0
 15607 ;;		On exit  : 0/0
 15608 ;;		Unchanged: 0/0
 15609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15610 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15612 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15613 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15614 ;;Total ram usage:        4 bytes
 15615 ;; Hardware stack levels used:    1
 15616 ;; This function calls:
 15617 ;;		Nothing
 15618 ;; This function is called by:
 15619 ;;		_menuLCD_ISR
 15620 ;; This function uses a non-reentrant model
 15621 ;;
 15622                           
 15623                           
 15624                           ;psect for function i1_PWM6_LoadDutyValue
 15625  080E                     i1_PWM6_LoadDutyValue:
 15626  080E                     i1l4318:	
 15627                           ;incstack = 0
 15628                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 15629                           
 15630                           
 15631                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 15632  080E  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 15633  080F  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 15634  0810  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 15635  0811  00F2               	movwf	??i1_PWM6_LoadDutyValue
 15636  0812  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 15637  0813  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 15638  0814  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 15639  0815  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 15640  0816  0872               	movf	??i1_PWM6_LoadDutyValue,w
 15641  0817  0027               	movlb	7	; select bank7
 15642  0818  008D               	movwf	13	;volatile
 15643                           
 15644                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 15645  0819  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 15646  081A  3903               	andlw	3
 15647  081B  00F2               	movwf	??i1_PWM6_LoadDutyValue
 15648  081C  3005               	movlw	5
 15649  081D                     u361_25:
 15650  081D  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 15651  081E  3EFF               	addlw	-1
 15652  081F  1D03               	skipz
 15653  0820  281D               	goto	u361_25
 15654  0821  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 15655  0822  008C               	movwf	12	;volatile
 15656  0823                     i1l734:
 15657  0823  0008               	return
 15658  0824                     __end_ofi1_PWM6_LoadDutyValue:
 15659                           
 15660                           	psect	text46
 15661  0484                     __ptext46:	
 15662 ;; *************** function _sprintf *****************
 15663 ;; Defined at:
 15664 ;;		line 505 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
 15665 ;; Parameters:    Size  Location     Type
 15666 ;;  sp              1    wreg     PTR unsigned char 
 15667 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 15668 ;;  f               2    0[BANK0 ] PTR const unsigned char 
 15669 ;;		 -> STR_6(5), STR_5(5), STR_4(7), STR_3(7), 
 15670 ;;		 -> STR_2(15), STR_1(15), 
 15671 ;; Auto vars:     Size  Location     Type
 15672 ;;  sp              1   20[BANK0 ] PTR unsigned char 
 15673 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 15674 ;;  tmpval          4    0        struct .
 15675 ;;  width           2   17[BANK0 ] int 
 15676 ;;  val             2   14[BANK0 ] unsigned int 
 15677 ;;  cp              2    0        PTR const unsigned char 
 15678 ;;  len             2    0        unsigned int 
 15679 ;;  c               1   19[BANK0 ] unsigned char 
 15680 ;;  flag            1   16[BANK0 ] unsigned char 
 15681 ;;  prec            1   13[BANK0 ] char 
 15682 ;;  ap              1   12[BANK0 ] PTR void [1]
 15683 ;;		 -> ?_sprintf(2), 
 15684 ;; Return value:  Size  Location     Type
 15685 ;;                  2    0[BANK0 ] int 
 15686 ;; Registers used:
 15687 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15688 ;; Tracked objects:
 15689 ;;		On entry : 0/0
 15690 ;;		On exit  : 0/0
 15691 ;;		Unchanged: 0/0
 15692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15693 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15694 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15695 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15696 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15697 ;;Total ram usage:       21 bytes
 15698 ;; Hardware stack levels used:    1
 15699 ;; Hardware stack levels required when called:    1
 15700 ;; This function calls:
 15701 ;;		___lwdiv
 15702 ;;		___lwmod
 15703 ;;		___wmul
 15704 ;;		_isdigit
 15705 ;; This function is called by:
 15706 ;;		_menuLCD_ISR
 15707 ;; This function uses a non-reentrant model
 15708 ;;
 15709                           
 15710                           
 15711                           ;psect for function _sprintf
 15712  0484                     _sprintf:
 15713                           
 15714                           ;incstack = 0
 15715                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15716                           ;sprintf@sp stored from wreg
 15717  0484  0020               	movlb	0	; select bank0
 15718  0485  00B4               	movwf	sprintf@sp
 15719  0486                     i1l4178:
 15720                           
 15721                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 15722  0486  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 15723  0487  00A8               	movwf	??_sprintf
 15724  0488  0828               	movf	??_sprintf,w
 15725  0489  00AC               	movwf	sprintf@ap
 15726                           
 15727                           ;doprnt.c: 553: while((c = *f++)) {
 15728  048A  2E08               	goto	i1l4282
 15729  048B                     i1l4180:
 15730                           
 15731                           ;doprnt.c: 555: if(c != '%')
 15732  048B  3025               	movlw	37
 15733  048C  0633               	xorwf	sprintf@c,w
 15734  048D  1903               	btfsc	3,2
 15735  048E  2C90               	goto	u336_21
 15736  048F  2C91               	goto	u336_20
 15737  0490                     u336_21:
 15738  0490  2C9D               	goto	i1l4186
 15739  0491                     u336_20:
 15740  0491                     i1l4182:
 15741                           
 15742                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 15743  0491  0833               	movf	sprintf@c,w
 15744  0492  00A8               	movwf	??_sprintf
 15745  0493  0834               	movf	sprintf@sp,w
 15746  0494  0086               	movwf	6
 15747  0495  0187               	clrf	7
 15748  0496  0828               	movf	??_sprintf,w
 15749  0497  0081               	movwf	1
 15750  0498                     i1l4184:
 15751  0498  3001               	movlw	1
 15752  0499  00A8               	movwf	??_sprintf
 15753  049A  0828               	movf	??_sprintf,w
 15754  049B  07B4               	addwf	sprintf@sp,f
 15755                           
 15756                           ;doprnt.c: 559: continue;
 15757  049C  2E08               	goto	i1l4282
 15758  049D                     i1l4186:
 15759                           
 15760                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 15761  049D  01B1               	clrf	sprintf@width
 15762  049E  01B2               	clrf	sprintf@width+1
 15763                           
 15764                           ;doprnt.c: 565: flag = 0;
 15765  049F  01B0               	clrf	sprintf@flag
 15766  04A0  2CA6               	goto	i1l4192
 15767  04A1                     i1l1554:	
 15768                           ;doprnt.c: 596: case '0':
 15769                           
 15770                           
 15771                           ;doprnt.c: 597: flag |= 0x04;
 15772  04A1  1530               	bsf	sprintf@flag,2
 15773  04A2                     i1l4188:
 15774                           
 15775                           ;doprnt.c: 598: f++;
 15776  04A2  3001               	movlw	1
 15777  04A3  07A0               	addwf	sprintf@f,f
 15778  04A4  3000               	movlw	0
 15779  04A5  3DA1               	addwfc	sprintf@f+1,f
 15780  04A6                     i1l4192:	
 15781                           ;doprnt.c: 599: continue;
 15782                           
 15783  04A6  0820               	movf	sprintf@f,w
 15784  04A7  0084               	movwf	4
 15785  04A8  0821               	movf	sprintf@f+1,w
 15786  04A9  0085               	movwf	5
 15787  04AA  0800               	movf	0,w	;code access
 15788                           
 15789                           ; Switch size 1, requested type "simple"
 15790                           ; Number of cases is 1, Range of values is 48 to 48
 15791                           ; switch strategies available:
 15792                           ; Name         Instructions Cycles
 15793                           ; simple_byte            4     3 (average)
 15794                           ; direct_byte           11     9 (fixed)
 15795                           ; jumptable            263     9 (fixed)
 15796                           ;	Chosen strategy is simple_byte
 15797  04AB  3A30               	xorlw	48	; case 48
 15798  04AC  1903               	skipnz
 15799  04AD  2CA1               	goto	i1l1554
 15800  04AE  2CAF               	goto	i1l4194
 15801  04AF                     i1l4194:
 15802                           
 15803                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 15804  04AF  0820               	movf	sprintf@f,w
 15805  04B0  0084               	movwf	4
 15806  04B1  0821               	movf	sprintf@f+1,w
 15807  04B2  0085               	movwf	5
 15808  04B3  0800               	movf	0,w	;code access
 15809  04B4  3197  27DC  3184   	fcall	_isdigit
 15810  04B7  1C03               	btfss	3,0
 15811  04B8  2CBA               	goto	u337_21
 15812  04B9  2CBB               	goto	u337_20
 15813  04BA                     u337_21:
 15814  04BA  2CEE               	goto	i1l4208
 15815  04BB                     u337_20:
 15816  04BB                     i1l4196:
 15817                           
 15818                           ;doprnt.c: 615: width = 0;
 15819  04BB  0020               	movlb	0	; select bank0
 15820  04BC  01B1               	clrf	sprintf@width
 15821  04BD  01B2               	clrf	sprintf@width+1
 15822  04BE                     i1l4198:
 15823                           
 15824                           ;doprnt.c: 617: width *= 10;
 15825  04BE  300A               	movlw	10
 15826  04BF  00F0               	movwf	___wmul@multiplier
 15827  04C0  3000               	movlw	0
 15828  04C1  00F1               	movwf	___wmul@multiplier+1
 15829  04C2  0020               	movlb	0	; select bank0
 15830  04C3  0832               	movf	sprintf@width+1,w
 15831  04C4  00F3               	movwf	___wmul@multiplicand+1
 15832  04C5  0831               	movf	sprintf@width,w
 15833  04C6  00F2               	movwf	___wmul@multiplicand
 15834  04C7  3188  20EC  3184   	fcall	___wmul
 15835  04CA  0871               	movf	?___wmul+1,w
 15836  04CB  0020               	movlb	0	; select bank0
 15837  04CC  00B2               	movwf	sprintf@width+1
 15838  04CD  0870               	movf	?___wmul,w
 15839  04CE  00B1               	movwf	sprintf@width
 15840  04CF                     i1l4200:
 15841                           
 15842                           ;doprnt.c: 618: width += *f++ - '0';
 15843  04CF  0820               	movf	sprintf@f,w
 15844  04D0  0084               	movwf	4
 15845  04D1  0821               	movf	sprintf@f+1,w
 15846  04D2  0085               	movwf	5
 15847  04D3  0800               	movf	0,w	;code access
 15848  04D4  3ED0               	addlw	208
 15849  04D5  00A8               	movwf	??_sprintf
 15850  04D6  30FF               	movlw	255
 15851  04D7  1803               	skipnc
 15852  04D8  3000               	movlw	0
 15853  04D9  00A9               	movwf	??_sprintf+1
 15854  04DA  0828               	movf	??_sprintf,w
 15855  04DB  07B1               	addwf	sprintf@width,f
 15856  04DC  0829               	movf	??_sprintf+1,w
 15857  04DD  3DB2               	addwfc	sprintf@width+1,f
 15858  04DE                     i1l4202:
 15859  04DE  3001               	movlw	1
 15860  04DF  07A0               	addwf	sprintf@f,f
 15861  04E0  3000               	movlw	0
 15862  04E1  3DA1               	addwfc	sprintf@f+1,f
 15863  04E2                     i1l4204:
 15864                           
 15865                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 15866  04E2  0820               	movf	sprintf@f,w
 15867  04E3  0084               	movwf	4
 15868  04E4  0821               	movf	sprintf@f+1,w
 15869  04E5  0085               	movwf	5
 15870  04E6  0800               	movf	0,w	;code access
 15871  04E7  3197  27DC  3184   	fcall	_isdigit
 15872  04EA  1803               	btfsc	3,0
 15873  04EB  2CED               	goto	u338_21
 15874  04EC  2CEE               	goto	u338_20
 15875  04ED                     u338_21:
 15876  04ED  2CBE               	goto	i1l4198
 15877  04EE                     u338_20:
 15878  04EE                     i1l4208:
 15879  04EE  0020               	movlb	0	; select bank0
 15880  04EF  0821               	movf	sprintf@f+1,w
 15881  04F0  00A9               	movwf	??_sprintf+1
 15882  04F1  0820               	movf	sprintf@f,w
 15883  04F2  00A8               	movwf	??_sprintf
 15884  04F3  0AA0               	incf	sprintf@f,f
 15885  04F4  1903               	skipnz
 15886  04F5  0AA1               	incf	sprintf@f+1,f
 15887  04F6  0828               	movf	??_sprintf,w
 15888  04F7  0084               	movwf	4
 15889  04F8  0829               	movf	??_sprintf+1,w
 15890  04F9  0085               	movwf	5
 15891  04FA  0800               	movf	0,w	;code access
 15892  04FB  00B3               	movwf	sprintf@c
 15893                           
 15894                           ; Switch size 1, requested type "simple"
 15895                           ; Number of cases is 3, Range of values is 0 to 105
 15896                           ; switch strategies available:
 15897                           ; Name         Instructions Cycles
 15898                           ; simple_byte           10     6 (average)
 15899                           ; direct_byte          218     6 (fixed)
 15900                           ; jumptable            260     6 (fixed)
 15901                           ;	Chosen strategy is simple_byte
 15902  04FC  3A00               	xorlw	0	; case 0
 15903  04FD  1903               	skipnz
 15904  04FE  2E1C               	goto	i1l4284
 15905  04FF  3A64               	xorlw	100	; case 100
 15906  0500  1903               	skipnz
 15907  0501  2D06               	goto	i1l4210
 15908  0502  3A0D               	xorlw	13	; case 105
 15909  0503  1903               	skipnz
 15910  0504  2D06               	goto	i1l4210
 15911  0505  2E08               	goto	i1l4282
 15912  0506                     i1l4210:
 15913                           
 15914                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 15915  0506  082C               	movf	sprintf@ap,w
 15916  0507  0086               	movwf	6
 15917  0508  0187               	clrf	7
 15918  0509  3F40               	moviw [0]fsr1
 15919  050A  00AE               	movwf	sprintf@val
 15920  050B  3F41               	moviw [1]fsr1
 15921  050C  00AF               	movwf	sprintf@val+1
 15922  050D                     i1l4212:
 15923  050D  3002               	movlw	2
 15924  050E  00A8               	movwf	??_sprintf
 15925  050F  0828               	movf	??_sprintf,w
 15926  0510  07AC               	addwf	sprintf@ap,f
 15927  0511                     i1l4214:
 15928                           
 15929                           ;doprnt.c: 1287: if((int)val < 0) {
 15930  0511  1FAF               	btfss	sprintf@val+1,7
 15931  0512  2D14               	goto	u339_21
 15932  0513  2D15               	goto	u339_20
 15933  0514                     u339_21:
 15934  0514  2D1E               	goto	i1l4220
 15935  0515                     u339_20:
 15936  0515                     i1l4216:
 15937                           
 15938                           ;doprnt.c: 1288: flag |= 0x03;
 15939  0515  3003               	movlw	3
 15940  0516  00A8               	movwf	??_sprintf
 15941  0517  0828               	movf	??_sprintf,w
 15942  0518  04B0               	iorwf	sprintf@flag,f
 15943  0519                     i1l4218:
 15944                           
 15945                           ;doprnt.c: 1289: val = -val;
 15946  0519  09AE               	comf	sprintf@val,f
 15947  051A  09AF               	comf	sprintf@val+1,f
 15948  051B  0AAE               	incf	sprintf@val,f
 15949  051C  1903               	skipnz
 15950  051D  0AAF               	incf	sprintf@val+1,f
 15951  051E                     i1l4220:
 15952                           
 15953                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 15954  051E  01B3               	clrf	sprintf@c
 15955  051F  0AB3               	incf	sprintf@c,f
 15956  0520                     i1l4226:
 15957                           
 15958                           ;doprnt.c: 1332: if(val < dpowers[c])
 15959  0520  0833               	movf	sprintf@c,w
 15960  0521  00A8               	movwf	??_sprintf
 15961  0522  01A9               	clrf	??_sprintf+1
 15962  0523  35A8               	lslf	??_sprintf,f
 15963  0524  0DA9               	rlf	??_sprintf+1,f
 15964  0525  300F               	movlw	low (_dpowers| (0+32768))
 15965  0526  0728               	addwf	??_sprintf,w
 15966  0527  0084               	movwf	4
 15967  0528  3098               	movlw	high (_dpowers| (0+32768))
 15968  0529  3D29               	addwfc	??_sprintf+1,w
 15969  052A  0085               	movwf	5
 15970  052B  3F00               	moviw [0]fsr0
 15971  052C  00AA               	movwf	??_sprintf+2
 15972  052D  3F01               	moviw [1]fsr0
 15973  052E  00AB               	movwf	??_sprintf+3
 15974  052F  082B               	movf	??_sprintf+3,w
 15975  0530  022F               	subwf	sprintf@val+1,w
 15976  0531  1D03               	skipz
 15977  0532  2D35               	goto	u340_25
 15978  0533  082A               	movf	??_sprintf+2,w
 15979  0534  022E               	subwf	sprintf@val,w
 15980  0535                     u340_25:
 15981  0535  1803               	skipnc
 15982  0536  2D38               	goto	u340_21
 15983  0537  2D39               	goto	u340_20
 15984  0538                     u340_21:
 15985  0538  2D3A               	goto	i1l4230
 15986  0539                     u340_20:
 15987  0539  2D44               	goto	i1l4232
 15988  053A                     i1l4230:
 15989  053A  3001               	movlw	1
 15990  053B  00A8               	movwf	??_sprintf
 15991  053C  0828               	movf	??_sprintf,w
 15992  053D  07B3               	addwf	sprintf@c,f
 15993  053E  3005               	movlw	5
 15994  053F  0633               	xorwf	sprintf@c,w
 15995  0540  1D03               	btfss	3,2
 15996  0541  2D43               	goto	u341_21
 15997  0542  2D44               	goto	u341_20
 15998  0543                     u341_21:
 15999  0543  2D20               	goto	i1l4226
 16000  0544                     u341_20:
 16001  0544                     i1l4232:
 16002                           
 16003                           ;doprnt.c: 1371: if(width && flag & 0x03)
 16004  0544  0831               	movf	sprintf@width,w
 16005  0545  0432               	iorwf	sprintf@width+1,w
 16006  0546  1903               	btfsc	3,2
 16007  0547  2D49               	goto	u342_21
 16008  0548  2D4A               	goto	u342_20
 16009  0549                     u342_21:
 16010  0549  2D54               	goto	i1l1572
 16011  054A                     u342_20:
 16012  054A                     i1l4234:
 16013  054A  0830               	movf	sprintf@flag,w
 16014  054B  3903               	andlw	3
 16015  054C  1903               	btfsc	3,2
 16016  054D  2D4F               	goto	u343_21
 16017  054E  2D50               	goto	u343_20
 16018  054F                     u343_21:
 16019  054F  2D54               	goto	i1l1572
 16020  0550                     u343_20:
 16021  0550                     i1l4236:
 16022                           
 16023                           ;doprnt.c: 1372: width--;
 16024  0550  30FF               	movlw	255
 16025  0551  07B1               	addwf	sprintf@width,f
 16026  0552  30FF               	movlw	255
 16027  0553  3DB2               	addwfc	sprintf@width+1,f
 16028  0554                     i1l1572:
 16029                           
 16030                           ;doprnt.c: 1407: if(width > c)
 16031  0554  0832               	movf	sprintf@width+1,w
 16032  0555  3A80               	xorlw	128
 16033  0556  3C80               	sublw	128
 16034  0557  1D03               	skipz
 16035  0558  2D5B               	goto	u344_25
 16036  0559  0831               	movf	sprintf@width,w
 16037  055A  0233               	subwf	sprintf@c,w
 16038  055B                     u344_25:
 16039  055B  1803               	skipnc
 16040  055C  2D5E               	goto	u344_21
 16041  055D  2D5F               	goto	u344_20
 16042  055E                     u344_21:
 16043  055E  2D68               	goto	i1l4240
 16044  055F                     u344_20:
 16045  055F                     i1l4238:
 16046                           
 16047                           ;doprnt.c: 1408: width -= c;
 16048  055F  0020               	movlb	0	; select bank0
 16049  0560  0833               	movf	sprintf@c,w
 16050  0561  00A8               	movwf	??_sprintf
 16051  0562  01A9               	clrf	??_sprintf+1
 16052  0563  0828               	movf	??_sprintf,w
 16053  0564  02B1               	subwf	sprintf@width,f
 16054  0565  0829               	movf	??_sprintf+1,w
 16055  0566  3BB2               	subwfb	sprintf@width+1,f
 16056  0567  2D6B               	goto	i1l4242
 16057  0568                     i1l4240:
 16058                           
 16059                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 16060  0568  0020               	movlb	0	; select bank0
 16061  0569  01B1               	clrf	sprintf@width
 16062  056A  01B2               	clrf	sprintf@width+1
 16063  056B                     i1l4242:
 16064                           
 16065                           ;doprnt.c: 1413: if(flag & 0x04) {
 16066  056B  1D30               	btfss	sprintf@flag,2
 16067  056C  2D6E               	goto	u345_21
 16068  056D  2D6F               	goto	u345_20
 16069  056E                     u345_21:
 16070  056E  2D9C               	goto	i1l4258
 16071  056F                     u345_20:
 16072  056F                     i1l4244:
 16073                           
 16074                           ;doprnt.c: 1418: if(flag & 0x03)
 16075  056F  0830               	movf	sprintf@flag,w
 16076  0570  3903               	andlw	3
 16077  0571  1903               	btfsc	3,2
 16078  0572  2D74               	goto	u346_21
 16079  0573  2D75               	goto	u346_20
 16080  0574                     u346_21:
 16081  0574  2D80               	goto	i1l4250
 16082  0575                     u346_20:
 16083  0575                     i1l4246:
 16084                           
 16085                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 16086  0575  302D               	movlw	45
 16087  0576  00A8               	movwf	??_sprintf
 16088  0577  0834               	movf	sprintf@sp,w
 16089  0578  0086               	movwf	6
 16090  0579  0187               	clrf	7
 16091  057A  0828               	movf	??_sprintf,w
 16092  057B  0081               	movwf	1
 16093  057C                     i1l4248:
 16094  057C  3001               	movlw	1
 16095  057D  00A8               	movwf	??_sprintf
 16096  057E  0828               	movf	??_sprintf,w
 16097  057F  07B4               	addwf	sprintf@sp,f
 16098  0580                     i1l4250:
 16099                           
 16100                           ;doprnt.c: 1441: if(width)
 16101  0580  0831               	movf	sprintf@width,w
 16102  0581  0432               	iorwf	sprintf@width+1,w
 16103  0582  1903               	btfsc	3,2
 16104  0583  2D85               	goto	u347_21
 16105  0584  2D86               	goto	u347_20
 16106  0585                     u347_21:
 16107  0585  2DC8               	goto	i1l4272
 16108  0586                     u347_20:
 16109  0586                     i1l4252:
 16110                           
 16111                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 16112  0586  3030               	movlw	48
 16113  0587  00A8               	movwf	??_sprintf
 16114  0588  0834               	movf	sprintf@sp,w
 16115  0589  0086               	movwf	6
 16116  058A  0187               	clrf	7
 16117  058B  0828               	movf	??_sprintf,w
 16118  058C  0081               	movwf	1
 16119  058D                     i1l4254:
 16120  058D  3001               	movlw	1
 16121  058E  00A8               	movwf	??_sprintf
 16122  058F  0828               	movf	??_sprintf,w
 16123  0590  07B4               	addwf	sprintf@sp,f
 16124  0591                     i1l4256:
 16125                           
 16126                           ;doprnt.c: 1444: while(--width);
 16127  0591  30FF               	movlw	255
 16128  0592  07B1               	addwf	sprintf@width,f
 16129  0593  30FF               	movlw	255
 16130  0594  3DB2               	addwfc	sprintf@width+1,f
 16131  0595  0831               	movf	sprintf@width,w
 16132  0596  0432               	iorwf	sprintf@width+1,w
 16133  0597  1D03               	btfss	3,2
 16134  0598  2D9A               	goto	u348_21
 16135  0599  2D9B               	goto	u348_20
 16136  059A                     u348_21:
 16137  059A  2D86               	goto	i1l4252
 16138  059B                     u348_20:
 16139  059B  2DC8               	goto	i1l4272
 16140  059C                     i1l4258:
 16141                           
 16142                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 16143  059C  0831               	movf	sprintf@width,w
 16144  059D  0432               	iorwf	sprintf@width+1,w
 16145  059E  1903               	btfsc	3,2
 16146  059F  2DA1               	goto	u349_21
 16147  05A0  2DA2               	goto	u349_20
 16148  05A1                     u349_21:
 16149  05A1  2DB7               	goto	i1l4266
 16150  05A2                     u349_20:
 16151  05A2                     i1l4260:
 16152                           
 16153                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 16154  05A2  3020               	movlw	32
 16155  05A3  00A8               	movwf	??_sprintf
 16156  05A4  0834               	movf	sprintf@sp,w
 16157  05A5  0086               	movwf	6
 16158  05A6  0187               	clrf	7
 16159  05A7  0828               	movf	??_sprintf,w
 16160  05A8  0081               	movwf	1
 16161  05A9                     i1l4262:
 16162  05A9  3001               	movlw	1
 16163  05AA  00A8               	movwf	??_sprintf
 16164  05AB  0828               	movf	??_sprintf,w
 16165  05AC  07B4               	addwf	sprintf@sp,f
 16166  05AD                     i1l4264:
 16167                           
 16168                           ;doprnt.c: 1457: while(--width);
 16169  05AD  30FF               	movlw	255
 16170  05AE  07B1               	addwf	sprintf@width,f
 16171  05AF  30FF               	movlw	255
 16172  05B0  3DB2               	addwfc	sprintf@width+1,f
 16173  05B1  0831               	movf	sprintf@width,w
 16174  05B2  0432               	iorwf	sprintf@width+1,w
 16175  05B3  1D03               	btfss	3,2
 16176  05B4  2DB6               	goto	u350_21
 16177  05B5  2DB7               	goto	u350_20
 16178  05B6                     u350_21:
 16179  05B6  2DA2               	goto	i1l4260
 16180  05B7                     u350_20:
 16181  05B7                     i1l4266:
 16182                           
 16183                           ;doprnt.c: 1464: if(flag & 0x03)
 16184  05B7  0830               	movf	sprintf@flag,w
 16185  05B8  3903               	andlw	3
 16186  05B9  1903               	btfsc	3,2
 16187  05BA  2DBC               	goto	u351_21
 16188  05BB  2DBD               	goto	u351_20
 16189  05BC                     u351_21:
 16190  05BC  2DC8               	goto	i1l4272
 16191  05BD                     u351_20:
 16192  05BD                     i1l4268:
 16193                           
 16194                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 16195  05BD  302D               	movlw	45
 16196  05BE  00A8               	movwf	??_sprintf
 16197  05BF  0834               	movf	sprintf@sp,w
 16198  05C0  0086               	movwf	6
 16199  05C1  0187               	clrf	7
 16200  05C2  0828               	movf	??_sprintf,w
 16201  05C3  0081               	movwf	1
 16202  05C4                     i1l4270:
 16203  05C4  3001               	movlw	1
 16204  05C5  00A8               	movwf	??_sprintf
 16205  05C6  0828               	movf	??_sprintf,w
 16206  05C7  07B4               	addwf	sprintf@sp,f
 16207  05C8                     i1l4272:
 16208                           
 16209                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 16210  05C8  0833               	movf	sprintf@c,w
 16211  05C9  00A8               	movwf	??_sprintf
 16212  05CA  0828               	movf	??_sprintf,w
 16213  05CB  00AD               	movwf	sprintf@prec
 16214                           
 16215                           ;doprnt.c: 1500: while(prec--) {
 16216  05CC  2DFF               	goto	i1l4280
 16217  05CD                     i1l4274:
 16218                           
 16219                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 16220  05CD  300A               	movlw	10
 16221  05CE  00F8               	movwf	___lwmod@divisor
 16222  05CF  3000               	movlw	0
 16223  05D0  00F9               	movwf	___lwmod@divisor+1
 16224  05D1  082D               	movf	sprintf@prec,w
 16225  05D2  00A8               	movwf	??_sprintf
 16226  05D3  01A9               	clrf	??_sprintf+1
 16227  05D4  35A8               	lslf	??_sprintf,f
 16228  05D5  0DA9               	rlf	??_sprintf+1,f
 16229  05D6  300F               	movlw	low (_dpowers| (0+32768))
 16230  05D7  0728               	addwf	??_sprintf,w
 16231  05D8  0084               	movwf	4
 16232  05D9  3098               	movlw	high (_dpowers| (0+32768))
 16233  05DA  3D29               	addwfc	??_sprintf+1,w
 16234  05DB  0085               	movwf	5
 16235  05DC  3F00               	moviw [0]fsr0
 16236  05DD  00F0               	movwf	___lwdiv@divisor
 16237  05DE  3F01               	moviw [1]fsr0
 16238  05DF  00F1               	movwf	___lwdiv@divisor+1
 16239  05E0  082F               	movf	sprintf@val+1,w
 16240  05E1  00F3               	movwf	___lwdiv@dividend+1
 16241  05E2  082E               	movf	sprintf@val,w
 16242  05E3  00F2               	movwf	___lwdiv@dividend
 16243  05E4  318A  228D  3184   	fcall	___lwdiv
 16244  05E7  0871               	movf	?___lwdiv+1,w
 16245  05E8  00FB               	movwf	___lwmod@dividend+1
 16246  05E9  0870               	movf	?___lwdiv,w
 16247  05EA  00FA               	movwf	___lwmod@dividend
 16248  05EB  318A  2259  3184   	fcall	___lwmod
 16249  05EE  0878               	movf	?___lwmod,w
 16250  05EF  3E30               	addlw	48
 16251  05F0  0020               	movlb	0	; select bank0
 16252  05F1  00AA               	movwf	??_sprintf+2
 16253  05F2  082A               	movf	??_sprintf+2,w
 16254  05F3  00B3               	movwf	sprintf@c
 16255  05F4                     i1l4276:
 16256                           
 16257                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 16258  05F4  0833               	movf	sprintf@c,w
 16259  05F5  00A8               	movwf	??_sprintf
 16260  05F6  0834               	movf	sprintf@sp,w
 16261  05F7  0086               	movwf	6
 16262  05F8  0187               	clrf	7
 16263  05F9  0828               	movf	??_sprintf,w
 16264  05FA  0081               	movwf	1
 16265  05FB                     i1l4278:
 16266  05FB  3001               	movlw	1
 16267  05FC  00A8               	movwf	??_sprintf
 16268  05FD  0828               	movf	??_sprintf,w
 16269  05FE  07B4               	addwf	sprintf@sp,f
 16270  05FF                     i1l4280:
 16271  05FF  30FF               	movlw	255
 16272  0600  00A8               	movwf	??_sprintf
 16273  0601  0828               	movf	??_sprintf,w
 16274  0602  07AD               	addwf	sprintf@prec,f
 16275  0603  0A2D               	incf	sprintf@prec,w
 16276  0604  1D03               	btfss	3,2
 16277  0605  2E07               	goto	u352_21
 16278  0606  2E08               	goto	u352_20
 16279  0607                     u352_21:
 16280  0607  2DCD               	goto	i1l4274
 16281  0608                     u352_20:
 16282  0608                     i1l4282:
 16283  0608  0821               	movf	sprintf@f+1,w
 16284  0609  00A9               	movwf	??_sprintf+1
 16285  060A  0820               	movf	sprintf@f,w
 16286  060B  00A8               	movwf	??_sprintf
 16287  060C  0AA0               	incf	sprintf@f,f
 16288  060D  1903               	skipnz
 16289  060E  0AA1               	incf	sprintf@f+1,f
 16290  060F  0828               	movf	??_sprintf,w
 16291  0610  0084               	movwf	4
 16292  0611  0829               	movf	??_sprintf+1,w
 16293  0612  0085               	movwf	5
 16294  0613  0800               	movf	0,w	;code access
 16295  0614  00AA               	movwf	??_sprintf+2
 16296  0615  082A               	movf	??_sprintf+2,w
 16297  0616  00B3               	movwf	sprintf@c
 16298  0617  0833               	movf	sprintf@c,w
 16299  0618  1D03               	btfss	3,2
 16300  0619  2E1B               	goto	u353_21
 16301  061A  2E1C               	goto	u353_20
 16302  061B                     u353_21:
 16303  061B  2C8B               	goto	i1l4180
 16304  061C                     u353_20:
 16305  061C                     i1l4284:
 16306                           
 16307                           ;doprnt.c: 1564: *sp = 0;
 16308  061C  0834               	movf	sprintf@sp,w
 16309  061D  0086               	movwf	6
 16310  061E  0187               	clrf	7
 16311  061F  0181               	clrf	1
 16312  0620                     i1l1589:
 16313  0620  0008               	return
 16314  0621                     __end_of_sprintf:
 16315                           
 16316                           	psect	text47
 16317  17DC                     __ptext47:	
 16318 ;; *************** function _isdigit *****************
 16319 ;; Defined at:
 16320 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 16321 ;; Parameters:    Size  Location     Type
 16322 ;;  c               1    wreg     unsigned char 
 16323 ;; Auto vars:     Size  Location     Type
 16324 ;;  c               1    1[COMMON] unsigned char 
 16325 ;; Return value:  Size  Location     Type
 16326 ;;		None               void
 16327 ;; Registers used:
 16328 ;;		wreg, status,2, status,0
 16329 ;; Tracked objects:
 16330 ;;		On entry : 0/0
 16331 ;;		On exit  : 0/0
 16332 ;;		Unchanged: 0/0
 16333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16335 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16337 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16338 ;;Total ram usage:        2 bytes
 16339 ;; Hardware stack levels used:    1
 16340 ;; This function calls:
 16341 ;;		Nothing
 16342 ;; This function is called by:
 16343 ;;		_sprintf
 16344 ;; This function uses a non-reentrant model
 16345 ;;
 16346                           
 16347                           
 16348                           ;psect for function _isdigit
 16349  17DC                     _isdigit:
 16350                           
 16351                           ;incstack = 0
 16352                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 16353                           ;isdigit@c stored from wreg
 16354  17DC  00F1               	movwf	isdigit@c
 16355  17DD                     i1l3972:
 16356  17DD  01F0               	clrf	_isdigit$2972
 16357  17DE                     i1l3974:
 16358  17DE  303A               	movlw	58
 16359  17DF  0271               	subwf	isdigit@c,w
 16360  17E0  1803               	skipnc
 16361  17E1  2FE3               	goto	u279_21
 16362  17E2  2FE4               	goto	u279_20
 16363  17E3                     u279_21:
 16364  17E3  2FEC               	goto	i1l3980
 16365  17E4                     u279_20:
 16366  17E4                     i1l3976:
 16367  17E4  3030               	movlw	48
 16368  17E5  0271               	subwf	isdigit@c,w
 16369  17E6  1C03               	skipc
 16370  17E7  2FE9               	goto	u280_21
 16371  17E8  2FEA               	goto	u280_20
 16372  17E9                     u280_21:
 16373  17E9  2FEC               	goto	i1l3980
 16374  17EA                     u280_20:
 16375  17EA                     i1l3978:
 16376  17EA  01F0               	clrf	_isdigit$2972
 16377  17EB  0AF0               	incf	_isdigit$2972,f
 16378  17EC                     i1l3980:
 16379  17EC  0C70               	rrf	_isdigit$2972,w
 16380  17ED                     i1l2046:
 16381  17ED  0008               	return
 16382  17EE                     __end_of_isdigit:
 16383                           
 16384                           	psect	text48
 16385  08EC                     __ptext48:	
 16386 ;; *************** function ___wmul *****************
 16387 ;; Defined at:
 16388 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 16389 ;; Parameters:    Size  Location     Type
 16390 ;;  multiplier      2    0[COMMON] unsigned int 
 16391 ;;  multiplicand    2    2[COMMON] unsigned int 
 16392 ;; Auto vars:     Size  Location     Type
 16393 ;;  product         2    4[COMMON] unsigned int 
 16394 ;; Return value:  Size  Location     Type
 16395 ;;                  2    0[COMMON] unsigned int 
 16396 ;; Registers used:
 16397 ;;		wreg, status,2, status,0
 16398 ;; Tracked objects:
 16399 ;;		On entry : 0/0
 16400 ;;		On exit  : 0/0
 16401 ;;		Unchanged: 0/0
 16402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16403 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16404 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16406 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16407 ;;Total ram usage:        6 bytes
 16408 ;; Hardware stack levels used:    1
 16409 ;; This function calls:
 16410 ;;		Nothing
 16411 ;; This function is called by:
 16412 ;;		_monitoring_ISR
 16413 ;;		_sprintf
 16414 ;;		_map
 16415 ;; This function uses a non-reentrant model
 16416 ;;
 16417                           
 16418                           
 16419                           ;psect for function ___wmul
 16420  08EC                     ___wmul:
 16421  08EC                     i1l3984:	
 16422                           ;incstack = 0
 16423                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 16424                           
 16425  08EC  01F4               	clrf	___wmul@product
 16426  08ED  01F5               	clrf	___wmul@product+1
 16427  08EE                     i1l3986:
 16428  08EE  1C70               	btfss	___wmul@multiplier,0
 16429  08EF  28F1               	goto	u281_21
 16430  08F0  28F2               	goto	u281_20
 16431  08F1                     u281_21:
 16432  08F1  28F6               	goto	i1l1593
 16433  08F2                     u281_20:
 16434  08F2                     i1l3988:
 16435  08F2  0872               	movf	___wmul@multiplicand,w
 16436  08F3  07F4               	addwf	___wmul@product,f
 16437  08F4  0873               	movf	___wmul@multiplicand+1,w
 16438  08F5  3DF5               	addwfc	___wmul@product+1,f
 16439  08F6                     i1l1593:
 16440  08F6  3001               	movlw	1
 16441  08F7                     u282_25:
 16442  08F7  35F2               	lslf	___wmul@multiplicand,f
 16443  08F8  0DF3               	rlf	___wmul@multiplicand+1,f
 16444  08F9  0B89               	decfsz	9,f
 16445  08FA  28F7               	goto	u282_25
 16446  08FB                     i1l3990:
 16447  08FB  3001               	movlw	1
 16448  08FC                     u283_25:
 16449  08FC  36F1               	lsrf	___wmul@multiplier+1,f
 16450  08FD  0CF0               	rrf	___wmul@multiplier,f
 16451  08FE  0B89               	decfsz	9,f
 16452  08FF  28FC               	goto	u283_25
 16453  0900                     i1l3992:
 16454  0900  0870               	movf	___wmul@multiplier,w
 16455  0901  0471               	iorwf	___wmul@multiplier+1,w
 16456  0902  1D03               	btfss	3,2
 16457  0903  2905               	goto	u284_21
 16458  0904  2906               	goto	u284_20
 16459  0905                     u284_21:
 16460  0905  28EE               	goto	i1l3986
 16461  0906                     u284_20:
 16462  0906                     i1l3994:
 16463  0906  0875               	movf	___wmul@product+1,w
 16464  0907  00F1               	movwf	?___wmul+1
 16465  0908  0874               	movf	___wmul@product,w
 16466  0909  00F0               	movwf	?___wmul
 16467  090A                     i1l1595:
 16468  090A  0008               	return
 16469  090B                     __end_of___wmul:
 16470                           
 16471                           	psect	text49
 16472  0A59                     __ptext49:	
 16473 ;; *************** function ___lwmod *****************
 16474 ;; Defined at:
 16475 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 16476 ;; Parameters:    Size  Location     Type
 16477 ;;  divisor         2    8[COMMON] unsigned int 
 16478 ;;  dividend        2   10[COMMON] unsigned int 
 16479 ;; Auto vars:     Size  Location     Type
 16480 ;;  counter         1   13[COMMON] unsigned char 
 16481 ;; Return value:  Size  Location     Type
 16482 ;;                  2    8[COMMON] unsigned int 
 16483 ;; Registers used:
 16484 ;;		wreg, status,2, status,0
 16485 ;; Tracked objects:
 16486 ;;		On entry : 0/0
 16487 ;;		On exit  : 0/0
 16488 ;;		Unchanged: 0/0
 16489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16490 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16491 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16492 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16493 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16494 ;;Total ram usage:        6 bytes
 16495 ;; Hardware stack levels used:    1
 16496 ;; This function calls:
 16497 ;;		Nothing
 16498 ;; This function is called by:
 16499 ;;		_sprintf
 16500 ;; This function uses a non-reentrant model
 16501 ;;
 16502                           
 16503                           
 16504                           ;psect for function ___lwmod
 16505  0A59                     ___lwmod:
 16506  0A59                     i1l4024:	
 16507                           ;incstack = 0
 16508                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 16509                           
 16510  0A59  0878               	movf	___lwmod@divisor,w
 16511  0A5A  0479               	iorwf	___lwmod@divisor+1,w
 16512  0A5B  1903               	btfsc	3,2
 16513  0A5C  2A5E               	goto	u292_21
 16514  0A5D  2A5F               	goto	u292_20
 16515  0A5E                     u292_21:
 16516  0A5E  2A88               	goto	i1l4042
 16517  0A5F                     u292_20:
 16518  0A5F                     i1l4026:
 16519  0A5F  01FD               	clrf	___lwmod@counter
 16520  0A60  0AFD               	incf	___lwmod@counter,f
 16521  0A61  2A6B               	goto	i1l4032
 16522  0A62                     i1l4028:
 16523  0A62  3001               	movlw	1
 16524  0A63                     u293_25:
 16525  0A63  35F8               	lslf	___lwmod@divisor,f
 16526  0A64  0DF9               	rlf	___lwmod@divisor+1,f
 16527  0A65  0B89               	decfsz	9,f
 16528  0A66  2A63               	goto	u293_25
 16529  0A67                     i1l4030:
 16530  0A67  3001               	movlw	1
 16531  0A68  00FC               	movwf	??___lwmod
 16532  0A69  087C               	movf	??___lwmod,w
 16533  0A6A  07FD               	addwf	___lwmod@counter,f
 16534  0A6B                     i1l4032:
 16535  0A6B  1FF9               	btfss	___lwmod@divisor+1,7
 16536  0A6C  2A6E               	goto	u294_21
 16537  0A6D  2A6F               	goto	u294_20
 16538  0A6E                     u294_21:
 16539  0A6E  2A62               	goto	i1l4028
 16540  0A6F                     u294_20:
 16541  0A6F                     i1l4034:
 16542  0A6F  0879               	movf	___lwmod@divisor+1,w
 16543  0A70  027B               	subwf	___lwmod@dividend+1,w
 16544  0A71  1D03               	skipz
 16545  0A72  2A75               	goto	u295_25
 16546  0A73  0878               	movf	___lwmod@divisor,w
 16547  0A74  027A               	subwf	___lwmod@dividend,w
 16548  0A75                     u295_25:
 16549  0A75  1C03               	skipc
 16550  0A76  2A78               	goto	u295_21
 16551  0A77  2A79               	goto	u295_20
 16552  0A78                     u295_21:
 16553  0A78  2A7D               	goto	i1l4038
 16554  0A79                     u295_20:
 16555  0A79                     i1l4036:
 16556  0A79  0878               	movf	___lwmod@divisor,w
 16557  0A7A  02FA               	subwf	___lwmod@dividend,f
 16558  0A7B  0879               	movf	___lwmod@divisor+1,w
 16559  0A7C  3BFB               	subwfb	___lwmod@dividend+1,f
 16560  0A7D                     i1l4038:
 16561  0A7D  3001               	movlw	1
 16562  0A7E                     u296_25:
 16563  0A7E  36F9               	lsrf	___lwmod@divisor+1,f
 16564  0A7F  0CF8               	rrf	___lwmod@divisor,f
 16565  0A80  0B89               	decfsz	9,f
 16566  0A81  2A7E               	goto	u296_25
 16567  0A82                     i1l4040:
 16568  0A82  3001               	movlw	1
 16569  0A83  02FD               	subwf	___lwmod@counter,f
 16570  0A84  1D03               	btfss	3,2
 16571  0A85  2A87               	goto	u297_21
 16572  0A86  2A88               	goto	u297_20
 16573  0A87                     u297_21:
 16574  0A87  2A6F               	goto	i1l4034
 16575  0A88                     u297_20:
 16576  0A88                     i1l4042:
 16577  0A88  087B               	movf	___lwmod@dividend+1,w
 16578  0A89  00F9               	movwf	?___lwmod+1
 16579  0A8A  087A               	movf	___lwmod@dividend,w
 16580  0A8B  00F8               	movwf	?___lwmod
 16581  0A8C                     i1l1875:
 16582  0A8C  0008               	return
 16583  0A8D                     __end_of___lwmod:
 16584                           
 16585                           	psect	text50
 16586  0A8D                     __ptext50:	
 16587 ;; *************** function ___lwdiv *****************
 16588 ;; Defined at:
 16589 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 16590 ;; Parameters:    Size  Location     Type
 16591 ;;  divisor         2    0[COMMON] unsigned int 
 16592 ;;  dividend        2    2[COMMON] unsigned int 
 16593 ;; Auto vars:     Size  Location     Type
 16594 ;;  quotient        2    5[COMMON] unsigned int 
 16595 ;;  counter         1    7[COMMON] unsigned char 
 16596 ;; Return value:  Size  Location     Type
 16597 ;;                  2    0[COMMON] unsigned int 
 16598 ;; Registers used:
 16599 ;;		wreg, status,2, status,0
 16600 ;; Tracked objects:
 16601 ;;		On entry : 0/0
 16602 ;;		On exit  : 0/0
 16603 ;;		Unchanged: 0/0
 16604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16605 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16606 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16607 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16608 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16609 ;;Total ram usage:        8 bytes
 16610 ;; Hardware stack levels used:    1
 16611 ;; This function calls:
 16612 ;;		Nothing
 16613 ;; This function is called by:
 16614 ;;		_sprintf
 16615 ;; This function uses a non-reentrant model
 16616 ;;
 16617                           
 16618                           
 16619                           ;psect for function ___lwdiv
 16620  0A8D                     ___lwdiv:
 16621  0A8D                     i1l3998:	
 16622                           ;incstack = 0
 16623                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 16624                           
 16625  0A8D  01F5               	clrf	___lwdiv@quotient
 16626  0A8E  01F6               	clrf	___lwdiv@quotient+1
 16627  0A8F                     i1l4000:
 16628  0A8F  0870               	movf	___lwdiv@divisor,w
 16629  0A90  0471               	iorwf	___lwdiv@divisor+1,w
 16630  0A91  1903               	btfsc	3,2
 16631  0A92  2A94               	goto	u285_21
 16632  0A93  2A95               	goto	u285_20
 16633  0A94                     u285_21:
 16634  0A94  2AC4               	goto	i1l4020
 16635  0A95                     u285_20:
 16636  0A95                     i1l4002:
 16637  0A95  01F7               	clrf	___lwdiv@counter
 16638  0A96  0AF7               	incf	___lwdiv@counter,f
 16639  0A97  2AA1               	goto	i1l4008
 16640  0A98                     i1l4004:
 16641  0A98  3001               	movlw	1
 16642  0A99                     u286_25:
 16643  0A99  35F0               	lslf	___lwdiv@divisor,f
 16644  0A9A  0DF1               	rlf	___lwdiv@divisor+1,f
 16645  0A9B  0B89               	decfsz	9,f
 16646  0A9C  2A99               	goto	u286_25
 16647  0A9D                     i1l4006:
 16648  0A9D  3001               	movlw	1
 16649  0A9E  00F4               	movwf	??___lwdiv
 16650  0A9F  0874               	movf	??___lwdiv,w
 16651  0AA0  07F7               	addwf	___lwdiv@counter,f
 16652  0AA1                     i1l4008:
 16653  0AA1  1FF1               	btfss	___lwdiv@divisor+1,7
 16654  0AA2  2AA4               	goto	u287_21
 16655  0AA3  2AA5               	goto	u287_20
 16656  0AA4                     u287_21:
 16657  0AA4  2A98               	goto	i1l4004
 16658  0AA5                     u287_20:
 16659  0AA5                     i1l4010:
 16660  0AA5  3001               	movlw	1
 16661  0AA6                     u288_25:
 16662  0AA6  35F5               	lslf	___lwdiv@quotient,f
 16663  0AA7  0DF6               	rlf	___lwdiv@quotient+1,f
 16664  0AA8  0B89               	decfsz	9,f
 16665  0AA9  2AA6               	goto	u288_25
 16666  0AAA  0871               	movf	___lwdiv@divisor+1,w
 16667  0AAB  0273               	subwf	___lwdiv@dividend+1,w
 16668  0AAC  1D03               	skipz
 16669  0AAD  2AB0               	goto	u289_25
 16670  0AAE  0870               	movf	___lwdiv@divisor,w
 16671  0AAF  0272               	subwf	___lwdiv@dividend,w
 16672  0AB0                     u289_25:
 16673  0AB0  1C03               	skipc
 16674  0AB1  2AB3               	goto	u289_21
 16675  0AB2  2AB4               	goto	u289_20
 16676  0AB3                     u289_21:
 16677  0AB3  2AB9               	goto	i1l4016
 16678  0AB4                     u289_20:
 16679  0AB4                     i1l4012:
 16680  0AB4  0870               	movf	___lwdiv@divisor,w
 16681  0AB5  02F2               	subwf	___lwdiv@dividend,f
 16682  0AB6  0871               	movf	___lwdiv@divisor+1,w
 16683  0AB7  3BF3               	subwfb	___lwdiv@dividend+1,f
 16684  0AB8                     i1l4014:
 16685  0AB8  1475               	bsf	___lwdiv@quotient,0
 16686  0AB9                     i1l4016:
 16687  0AB9  3001               	movlw	1
 16688  0ABA                     u290_25:
 16689  0ABA  36F1               	lsrf	___lwdiv@divisor+1,f
 16690  0ABB  0CF0               	rrf	___lwdiv@divisor,f
 16691  0ABC  0B89               	decfsz	9,f
 16692  0ABD  2ABA               	goto	u290_25
 16693  0ABE                     i1l4018:
 16694  0ABE  3001               	movlw	1
 16695  0ABF  02F7               	subwf	___lwdiv@counter,f
 16696  0AC0  1D03               	btfss	3,2
 16697  0AC1  2AC3               	goto	u291_21
 16698  0AC2  2AC4               	goto	u291_20
 16699  0AC3                     u291_21:
 16700  0AC3  2AA5               	goto	i1l4010
 16701  0AC4                     u291_20:
 16702  0AC4                     i1l4020:
 16703  0AC4  0876               	movf	___lwdiv@quotient+1,w
 16704  0AC5  00F1               	movwf	?___lwdiv+1
 16705  0AC6  0875               	movf	___lwdiv@quotient,w
 16706  0AC7  00F0               	movwf	?___lwdiv
 16707  0AC8                     i1l1865:
 16708  0AC8  0008               	return
 16709  0AC9                     __end_of___lwdiv:
 16710                           
 16711                           	psect	text51
 16712  0A25                     __ptext51:	
 16713 ;; *************** function _differenceBetweenTimePeriod *****************
 16714 ;; Defined at:
 16715 ;;		line 226 in file "main.c"
 16716 ;; Parameters:    Size  Location     Type
 16717 ;;  start           3    0[COMMON] struct Time
 16718 ;;  stop            3    3[COMMON] struct Time
 16719 ;;  diff            1    6[COMMON] PTR struct Time
 16720 ;;		 -> menuLCD_ISR@diff(3), 
 16721 ;; Auto vars:     Size  Location     Type
 16722 ;;		None
 16723 ;; Return value:  Size  Location     Type
 16724 ;;                  1    wreg      void 
 16725 ;; Registers used:
 16726 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16727 ;; Tracked objects:
 16728 ;;		On entry : 0/0
 16729 ;;		On exit  : 0/0
 16730 ;;		Unchanged: 0/0
 16731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16732 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16734 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16735 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16736 ;;Total ram usage:        8 bytes
 16737 ;; Hardware stack levels used:    1
 16738 ;; This function calls:
 16739 ;;		Nothing
 16740 ;; This function is called by:
 16741 ;;		_menuLCD_ISR
 16742 ;; This function uses a non-reentrant model
 16743 ;;
 16744                           
 16745                           
 16746                           ;psect for function _differenceBetweenTimePeriod
 16747  0A25                     _differenceBetweenTimePeriod:
 16748  0A25                     i1l4162:	
 16749                           ;incstack = 0
 16750                           ; Regs used in _differenceBetweenTimePeriod: [wreg+fsr1l+fsr1h+status,2+status,0]
 16751                           
 16752                           
 16753                           ;main.c: 229: while (stop.s > start.s) {
 16754  0A25  2A2C               	goto	i1l4166
 16755  0A26                     i1l4164:
 16756                           
 16757                           ;main.c: 230: --start.m;
 16758  0A26  3001               	movlw	1
 16759  0A27  02F1               	subwf	differenceBetweenTimePeriod@start+1,f
 16760                           
 16761                           ;main.c: 231: start.s += 60;
 16762  0A28  303C               	movlw	60
 16763  0A29  00F7               	movwf	??_differenceBetweenTimePeriod
 16764  0A2A  0877               	movf	??_differenceBetweenTimePeriod,w
 16765  0A2B  07F2               	addwf	differenceBetweenTimePeriod@start+2,f
 16766  0A2C                     i1l4166:
 16767  0A2C  0875               	movf	differenceBetweenTimePeriod@stop+2,w
 16768  0A2D  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 16769  0A2E  1C03               	skipc
 16770  0A2F  2A31               	goto	u334_21
 16771  0A30  2A32               	goto	u334_20
 16772  0A31                     u334_21:
 16773  0A31  2A26               	goto	i1l4164
 16774  0A32                     u334_20:
 16775  0A32                     i1l4168:
 16776                           
 16777                           ;main.c: 232: };main.c: 233: diff->s = start.s - stop.s;
 16778  0A32  0875               	movf	differenceBetweenTimePeriod@stop+2,w
 16779  0A33  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 16780  0A34  00F7               	movwf	??_differenceBetweenTimePeriod
 16781  0A35  0876               	movf	differenceBetweenTimePeriod@diff,w
 16782  0A36  3E02               	addlw	2
 16783  0A37  0086               	movwf	6
 16784  0A38  0187               	clrf	7
 16785  0A39  0877               	movf	??_differenceBetweenTimePeriod,w
 16786  0A3A  0081               	movwf	1
 16787                           
 16788                           ;main.c: 234: while (stop.m > start.m) {
 16789  0A3B  2A42               	goto	i1l4172
 16790  0A3C                     i1l4170:
 16791                           
 16792                           ;main.c: 235: --start.h;
 16793  0A3C  3001               	movlw	1
 16794  0A3D  02F0               	subwf	differenceBetweenTimePeriod@start,f
 16795                           
 16796                           ;main.c: 236: start.m += 60;
 16797  0A3E  303C               	movlw	60
 16798  0A3F  00F7               	movwf	??_differenceBetweenTimePeriod
 16799  0A40  0877               	movf	??_differenceBetweenTimePeriod,w
 16800  0A41  07F1               	addwf	differenceBetweenTimePeriod@start+1,f
 16801  0A42                     i1l4172:
 16802  0A42  0874               	movf	differenceBetweenTimePeriod@stop+1,w
 16803  0A43  0271               	subwf	differenceBetweenTimePeriod@start+1,w
 16804  0A44  1C03               	skipc
 16805  0A45  2A47               	goto	u335_21
 16806  0A46  2A48               	goto	u335_20
 16807  0A47                     u335_21:
 16808  0A47  2A3C               	goto	i1l4170
 16809  0A48                     u335_20:
 16810  0A48                     i1l4174:
 16811                           
 16812                           ;main.c: 237: };main.c: 238: diff->m = start.m - stop.m;
 16813  0A48  0874               	movf	differenceBetweenTimePeriod@stop+1,w
 16814  0A49  0271               	subwf	differenceBetweenTimePeriod@start+1,w
 16815  0A4A  00F7               	movwf	??_differenceBetweenTimePeriod
 16816  0A4B  0A76               	incf	differenceBetweenTimePeriod@diff,w
 16817  0A4C  0086               	movwf	6
 16818  0A4D  0187               	clrf	7
 16819  0A4E  0877               	movf	??_differenceBetweenTimePeriod,w
 16820  0A4F  0081               	movwf	1
 16821                           
 16822                           ;main.c: 239: diff->h = start.h - stop.h;
 16823  0A50  0873               	movf	differenceBetweenTimePeriod@stop,w
 16824  0A51  0270               	subwf	differenceBetweenTimePeriod@start,w
 16825  0A52  00F7               	movwf	??_differenceBetweenTimePeriod
 16826  0A53  0876               	movf	differenceBetweenTimePeriod@diff,w
 16827  0A54  0086               	movwf	6
 16828  0A55  0187               	clrf	7
 16829  0A56  0877               	movf	??_differenceBetweenTimePeriod,w
 16830  0A57  0081               	movwf	1
 16831  0A58                     i1l1189:
 16832  0A58  0008               	return
 16833  0A59                     __end_of_differenceBetweenTimePeriod:
 16834                           
 16835                           	psect	text52
 16836  1717                     __ptext52:	
 16837 ;; *************** function _TMR2_StartTimer *****************
 16838 ;; Defined at:
 16839 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 16840 ;; Parameters:    Size  Location     Type
 16841 ;;		None
 16842 ;; Auto vars:     Size  Location     Type
 16843 ;;		None
 16844 ;; Return value:  Size  Location     Type
 16845 ;;                  1    wreg      void 
 16846 ;; Registers used:
 16847 ;;		status,2, status,0, pclath, cstack
 16848 ;; Tracked objects:
 16849 ;;		On entry : 0/0
 16850 ;;		On exit  : 0/0
 16851 ;;		Unchanged: 0/0
 16852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16857 ;;Total ram usage:        0 bytes
 16858 ;; Hardware stack levels used:    1
 16859 ;; Hardware stack levels required when called:    1
 16860 ;; This function calls:
 16861 ;;		_TMR2_Start
 16862 ;; This function is called by:
 16863 ;;		_menuLCD_ISR
 16864 ;; This function uses a non-reentrant model
 16865 ;;
 16866                           
 16867                           
 16868                           ;psect for function _TMR2_StartTimer
 16869  1717                     _TMR2_StartTimer:
 16870  1717                     i1l4098:	
 16871                           ;incstack = 0
 16872                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
 16873                           
 16874                           
 16875                           ;tmr2.c: 108: TMR2_Start();
 16876  1717  3197  2708  3197   	fcall	_TMR2_Start
 16877  171A                     i1l773:
 16878  171A  0008               	return
 16879  171B                     __end_of_TMR2_StartTimer:
 16880                           
 16881                           	psect	text53
 16882  1708                     __ptext53:	
 16883 ;; *************** function _TMR2_Start *****************
 16884 ;; Defined at:
 16885 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 16886 ;; Parameters:    Size  Location     Type
 16887 ;;		None
 16888 ;; Auto vars:     Size  Location     Type
 16889 ;;		None
 16890 ;; Return value:  Size  Location     Type
 16891 ;;                  1    wreg      void 
 16892 ;; Registers used:
 16893 ;;		None
 16894 ;; Tracked objects:
 16895 ;;		On entry : 0/0
 16896 ;;		On exit  : 0/0
 16897 ;;		Unchanged: 0/0
 16898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16903 ;;Total ram usage:        0 bytes
 16904 ;; Hardware stack levels used:    1
 16905 ;; This function calls:
 16906 ;;		Nothing
 16907 ;; This function is called by:
 16908 ;;		_TMR2_StartTimer
 16909 ;; This function uses a non-reentrant model
 16910 ;;
 16911                           
 16912                           
 16913                           ;psect for function _TMR2_Start
 16914  1708                     _TMR2_Start:
 16915  1708                     i1l3968:	
 16916                           ;incstack = 0
 16917                           ; Regs used in _TMR2_Start: []
 16918                           
 16919                           
 16920                           ;tmr2.c: 103: T2CONbits.TMR2ON = 1;
 16921  1708  0025               	movlb	5	; select bank5
 16922  1709  178E               	bsf	14,7	;volatile
 16923  170A                     i1l770:
 16924  170A  0008               	return
 16925  170B                     __end_of_TMR2_Start:
 16926                           
 16927                           	psect	text54
 16928  1705                     __ptext54:	
 16929 ;; *************** function _PWM_Output_D4_Enable *****************
 16930 ;; Defined at:
 16931 ;;		line 242 in file "main.c"
 16932 ;; Parameters:    Size  Location     Type
 16933 ;;		None
 16934 ;; Auto vars:     Size  Location     Type
 16935 ;;		None
 16936 ;; Return value:  Size  Location     Type
 16937 ;;                  1    wreg      void 
 16938 ;; Registers used:
 16939 ;;		None
 16940 ;; Tracked objects:
 16941 ;;		On entry : 0/0
 16942 ;;		On exit  : 0/0
 16943 ;;		Unchanged: 0/0
 16944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16949 ;;Total ram usage:        0 bytes
 16950 ;; Hardware stack levels used:    1
 16951 ;; This function calls:
 16952 ;;		Nothing
 16953 ;; This function is called by:
 16954 ;;		_menuLCD_ISR
 16955 ;; This function uses a non-reentrant model
 16956 ;;
 16957                           
 16958                           
 16959                           ;psect for function _PWM_Output_D4_Enable
 16960  1705                     _PWM_Output_D4_Enable:
 16961  1705                     i1l4176:	
 16962                           ;incstack = 0
 16963                           ; Regs used in _PWM_Output_D4_Enable: []
 16964                           
 16965                           
 16966                           ;main.c: 243: PWM6EN = 1;
 16967  1705  0027               	movlb	7	; select bank7
 16968  1706  178E               	bsf	14,7	;volatile
 16969  1707                     i1l1192:
 16970  1707  0008               	return
 16971  1708                     __end_of_PWM_Output_D4_Enable:
 16972                           
 16973                           	psect	text55
 16974  08B3                     __ptext55:	
 16975 ;; *************** function _LCDstr *****************
 16976 ;; Defined at:
 16977 ;;		line 206 in file "main.c"
 16978 ;; Parameters:    Size  Location     Type
 16979 ;;  p               2    9[COMMON] PTR unsigned char 
 16980 ;;		 -> STR_7(4), menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 16981 ;; Auto vars:     Size  Location     Type
 16982 ;;  c               1    0[BANK0 ] unsigned char 
 16983 ;; Return value:  Size  Location     Type
 16984 ;;                  1    wreg      void 
 16985 ;; Registers used:
 16986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16987 ;; Tracked objects:
 16988 ;;		On entry : 0/0
 16989 ;;		On exit  : 0/0
 16990 ;;		Unchanged: 0/0
 16991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16992 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16993 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16994 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16995 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16996 ;;Total ram usage:        6 bytes
 16997 ;; Hardware stack levels used:    1
 16998 ;; Hardware stack levels required when called:    3
 16999 ;; This function calls:
 17000 ;;		_LCDchar
 17001 ;; This function is called by:
 17002 ;;		_menuLCD_ISR
 17003 ;; This function uses a non-reentrant model
 17004 ;;
 17005                           
 17006                           
 17007                           ;psect for function _LCDstr
 17008  08B3                     _LCDstr:
 17009  08B3                     i1l4156:	
 17010                           ;incstack = 0
 17011                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17012                           
 17013                           
 17014                           ;main.c: 208: unsigned char c;;main.c: 210: while((c = *p++)) LCDchar(c);
 17015  08B3  28B8               	goto	i1l4160
 17016  08B4                     i1l4158:
 17017  08B4  0820               	movf	LCDstr@c,w
 17018  08B5  3197  275B  3188   	fcall	_LCDchar
 17019  08B8                     i1l4160:
 17020  08B8  087A               	movf	LCDstr@p+1,w
 17021  08B9  00FC               	movwf	??_LCDstr+1
 17022  08BA  0879               	movf	LCDstr@p,w
 17023  08BB  00FB               	movwf	??_LCDstr
 17024  08BC  0AF9               	incf	LCDstr@p,f
 17025  08BD  1903               	skipnz
 17026  08BE  0AFA               	incf	LCDstr@p+1,f
 17027  08BF  087B               	movf	??_LCDstr,w
 17028  08C0  0084               	movwf	4
 17029  08C1  087C               	movf	??_LCDstr+1,w
 17030  08C2  0085               	movwf	5
 17031  08C3  0800               	movf	0,w	;code access
 17032  08C4  00FD               	movwf	??_LCDstr+2
 17033  08C5  087D               	movf	??_LCDstr+2,w
 17034  08C6  0020               	movlb	0	; select bank0
 17035  08C7  00A0               	movwf	LCDstr@c
 17036  08C8  0820               	movf	LCDstr@c,w
 17037  08C9  1D03               	btfss	3,2
 17038  08CA  28CC               	goto	u333_21
 17039  08CB  28CD               	goto	u333_20
 17040  08CC                     u333_21:
 17041  08CC  28B4               	goto	i1l4158
 17042  08CD                     u333_20:
 17043  08CD                     i1l1176:
 17044  08CD  0008               	return
 17045  08CE                     __end_of_LCDstr:
 17046                           
 17047                           	psect	text56
 17048  175B                     __ptext56:	
 17049 ;; *************** function _LCDchar *****************
 17050 ;; Defined at:
 17051 ;;		line 201 in file "main.c"
 17052 ;; Parameters:    Size  Location     Type
 17053 ;;  c               1    wreg     unsigned char 
 17054 ;; Auto vars:     Size  Location     Type
 17055 ;;  c               1    8[COMMON] unsigned char 
 17056 ;; Return value:  Size  Location     Type
 17057 ;;                  1    wreg      void 
 17058 ;; Registers used:
 17059 ;;		wreg, status,2, status,0, pclath, cstack
 17060 ;; Tracked objects:
 17061 ;;		On entry : 0/0
 17062 ;;		On exit  : 0/0
 17063 ;;		Unchanged: 0/0
 17064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17068 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17069 ;;Total ram usage:        1 bytes
 17070 ;; Hardware stack levels used:    1
 17071 ;; Hardware stack levels required when called:    2
 17072 ;; This function calls:
 17073 ;;		i1_LCDsend2x4
 17074 ;; This function is called by:
 17075 ;;		_LCDstr
 17076 ;;		_menuLCD_ISR
 17077 ;; This function uses a non-reentrant model
 17078 ;;
 17079                           
 17080                           
 17081                           ;psect for function _LCDchar
 17082  175B                     _LCDchar:
 17083                           
 17084                           ;incstack = 0
 17085                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 17086                           ;LCDchar@c stored from wreg
 17087  175B  00F8               	movwf	LCDchar@c
 17088  175C                     i1l3970:
 17089                           
 17090                           ;main.c: 203: LCDsend2x4(c, 0x01);
 17091  175C  01F2               	clrf	i1LCDsend2x4@mode
 17092  175D  0AF2               	incf	i1LCDsend2x4@mode,f
 17093  175E  0878               	movf	LCDchar@c,w
 17094  175F  3187  273F  3197   	fcall	i1_LCDsend2x4
 17095  1762                     i1l1170:
 17096  1762  0008               	return
 17097  1763                     __end_of_LCDchar:
 17098                           
 17099                           	psect	text57
 17100  174D                     __ptext57:	
 17101 ;; *************** function _LCDcmd *****************
 17102 ;; Defined at:
 17103 ;;		line 196 in file "main.c"
 17104 ;; Parameters:    Size  Location     Type
 17105 ;;  c               1    wreg     unsigned char 
 17106 ;; Auto vars:     Size  Location     Type
 17107 ;;  c               1    8[COMMON] unsigned char 
 17108 ;; Return value:  Size  Location     Type
 17109 ;;                  1    wreg      void 
 17110 ;; Registers used:
 17111 ;;		wreg, status,2, status,0, pclath, cstack
 17112 ;; Tracked objects:
 17113 ;;		On entry : 0/0
 17114 ;;		On exit  : 0/0
 17115 ;;		Unchanged: 0/0
 17116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17120 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17121 ;;Total ram usage:        1 bytes
 17122 ;; Hardware stack levels used:    1
 17123 ;; Hardware stack levels required when called:    2
 17124 ;; This function calls:
 17125 ;;		i1_LCDsend2x4
 17126 ;; This function is called by:
 17127 ;;		_menuLCD_ISR
 17128 ;; This function uses a non-reentrant model
 17129 ;;
 17130                           
 17131                           
 17132                           ;psect for function _LCDcmd
 17133  174D                     _LCDcmd:
 17134                           
 17135                           ;incstack = 0
 17136                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 17137                           ;LCDcmd@c stored from wreg
 17138  174D  00F8               	movwf	LCDcmd@c
 17139  174E                     i1l4154:
 17140                           
 17141                           ;main.c: 198: LCDsend2x4(c, 0);
 17142  174E  01F2               	clrf	i1LCDsend2x4@mode
 17143  174F  0878               	movf	LCDcmd@c,w
 17144  1750  3187  273F  3197   	fcall	i1_LCDsend2x4
 17145  1753                     i1l1167:
 17146  1753  0008               	return
 17147  1754                     __end_of_LCDcmd:
 17148                           
 17149                           	psect	text58
 17150  073F                     __ptext58:	
 17151 ;; *************** function i1_LCDsend2x4 *****************
 17152 ;; Defined at:
 17153 ;;		line 150 in file "main.c"
 17154 ;; Parameters:    Size  Location     Type
 17155 ;;  c               1    wreg     unsigned char 
 17156 ;;  mode            1    2[COMMON] unsigned char 
 17157 ;; Auto vars:     Size  Location     Type
 17158 ;;  c               1    5[COMMON] unsigned char 
 17159 ;;  lc              1    7[COMMON] unsigned char 
 17160 ;;  hc              1    6[COMMON] unsigned char 
 17161 ;; Return value:  Size  Location     Type
 17162 ;;                  1    wreg      void 
 17163 ;; Registers used:
 17164 ;;		wreg, status,2, status,0, pclath, cstack
 17165 ;; Tracked objects:
 17166 ;;		On entry : 0/0
 17167 ;;		On exit  : 0/0
 17168 ;;		Unchanged: 0/0
 17169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17170 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17171 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17173 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17174 ;;Total ram usage:        6 bytes
 17175 ;; Hardware stack levels used:    1
 17176 ;; Hardware stack levels required when called:    1
 17177 ;; This function calls:
 17178 ;;		i1_WriteI2C
 17179 ;; This function is called by:
 17180 ;;		_LCDcmd
 17181 ;;		_LCDchar
 17182 ;; This function uses a non-reentrant model
 17183 ;;
 17184                           
 17185                           
 17186                           ;psect for function i1_LCDsend2x4
 17187  073F                     i1_LCDsend2x4:
 17188                           
 17189                           ;incstack = 0
 17190                           ; Regs used in i1_LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 17191                           ;i1LCDsend2x4@c stored from wreg
 17192  073F  00F5               	movwf	i1LCDsend2x4@c
 17193  0740                     i1l3922:
 17194                           
 17195                           ;main.c: 152: unsigned char hc;;main.c: 153: unsigned char lc;;main.c: 155: hc = c & 0xf
      +                          0;
 17196  0740  0875               	movf	i1LCDsend2x4@c,w
 17197  0741  39F0               	andlw	240
 17198  0742  00F3               	movwf	??i1_LCDsend2x4
 17199  0743  0873               	movf	??i1_LCDsend2x4,w
 17200  0744  00F6               	movwf	i1LCDsend2x4@hc
 17201  0745                     i1l3924:
 17202                           
 17203                           ;main.c: 156: lc = (c << 4) & 0xf0;
 17204  0745  0875               	movf	i1LCDsend2x4@c,w
 17205  0746  00F3               	movwf	??i1_LCDsend2x4
 17206  0747  3003               	movlw	3
 17207  0748                     u264_25:
 17208  0748  35F3               	lslf	??i1_LCDsend2x4,f
 17209  0749  3EFF               	addlw	-1
 17210  074A  1D03               	skipz
 17211  074B  2F48               	goto	u264_25
 17212  074C  3573               	lslf	??i1_LCDsend2x4,w
 17213  074D  39F0               	andlw	240
 17214  074E  00F4               	movwf	??i1_LCDsend2x4+1
 17215  074F  0874               	movf	??i1_LCDsend2x4+1,w
 17216  0750  00F7               	movwf	i1LCDsend2x4@lc
 17217  0751                     i1l3926:	
 17218                           ;main.c: 158: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17219                           
 17220  0751  0023               	movlb	3	; select bank3
 17221  0752  0C0F               	rrf	15,w	;volatile
 17222  0753  0C89               	rrf	9,f
 17223  0754  3901               	andlw	1
 17224  0755  00F3               	movwf	??i1_LCDsend2x4
 17225  0756  0811               	movf	17,w	;volatile
 17226  0757  391F               	andlw	31
 17227  0758  0473               	iorwf	??i1_LCDsend2x4,w
 17228  0759  1D03               	btfss	3,2
 17229  075A  2F5C               	goto	u265_21
 17230  075B  2F5D               	goto	u265_20
 17231  075C                     u265_21:
 17232  075C  2F51               	goto	i1l3926
 17233  075D                     u265_20:
 17234  075D                     i1l1130:
 17235                           
 17236                           ;main.c: 159: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 17237  075D  1411               	bsf	17,0	;volatile
 17238  075E                     i1l1131:
 17239  075E  1811               	btfsc	17,0	;volatile
 17240  075F  2F61               	goto	u266_21
 17241  0760  2F62               	goto	u266_20
 17242  0761                     u266_21:
 17243  0761  2F5E               	goto	i1l1131
 17244  0762                     u266_20:
 17245  0762                     i1l3928:
 17246  0762  0C0F               	rrf	15,w	;volatile
 17247  0763  0C89               	rrf	9,f
 17248  0764  3901               	andlw	1
 17249  0765  00F3               	movwf	??i1_LCDsend2x4
 17250  0766  0811               	movf	17,w	;volatile
 17251  0767  391F               	andlw	31
 17252  0768  0473               	iorwf	??i1_LCDsend2x4,w
 17253  0769  1D03               	btfss	3,2
 17254  076A  2F6C               	goto	u267_21
 17255  076B  2F6D               	goto	u267_20
 17256  076C                     u267_21:
 17257  076C  2F62               	goto	i1l3928
 17258  076D                     u267_20:
 17259  076D                     i1l3930:
 17260                           
 17261                           ;main.c: 160: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17262  076D  304E               	movlw	78
 17263  076E  318B  2308  3187   	fcall	i1_WriteI2C
 17264  0771                     i1l3932:
 17265  0771  0023               	movlb	3	; select bank3
 17266  0772  0C0F               	rrf	15,w	;volatile
 17267  0773  0C89               	rrf	9,f
 17268  0774  3901               	andlw	1
 17269  0775  00F3               	movwf	??i1_LCDsend2x4
 17270  0776  0811               	movf	17,w	;volatile
 17271  0777  391F               	andlw	31
 17272  0778  0473               	iorwf	??i1_LCDsend2x4,w
 17273  0779  1D03               	btfss	3,2
 17274  077A  2F7C               	goto	u268_21
 17275  077B  2F7D               	goto	u268_20
 17276  077C                     u268_21:
 17277  077C  2F71               	goto	i1l3932
 17278  077D                     u268_20:
 17279  077D                     i1l3934:
 17280                           
 17281                           ;main.c: 161: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 17282  077D  0876               	movf	i1LCDsend2x4@hc,w
 17283  077E  0472               	iorwf	i1LCDsend2x4@mode,w
 17284  077F  3808               	iorlw	8
 17285  0780  318B  2308  3187   	fcall	i1_WriteI2C
 17286  0783                     i1l3936:
 17287  0783  0023               	movlb	3	; select bank3
 17288  0784  0C0F               	rrf	15,w	;volatile
 17289  0785  0C89               	rrf	9,f
 17290  0786  3901               	andlw	1
 17291  0787  00F3               	movwf	??i1_LCDsend2x4
 17292  0788  0811               	movf	17,w	;volatile
 17293  0789  391F               	andlw	31
 17294  078A  0473               	iorwf	??i1_LCDsend2x4,w
 17295  078B  1D03               	btfss	3,2
 17296  078C  2F8E               	goto	u269_21
 17297  078D  2F8F               	goto	u269_20
 17298  078E                     u269_21:
 17299  078E  2F83               	goto	i1l3936
 17300  078F                     u269_20:
 17301  078F                     i1l3938:
 17302                           
 17303                           ;main.c: 162: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 17304  078F  0876               	movf	i1LCDsend2x4@hc,w
 17305  0790  0472               	iorwf	i1LCDsend2x4@mode,w
 17306  0791  380C               	iorlw	12
 17307  0792  318B  2308  3187   	fcall	i1_WriteI2C
 17308  0795                     i1l3940:
 17309  0795  0023               	movlb	3	; select bank3
 17310  0796  0C0F               	rrf	15,w	;volatile
 17311  0797  0C89               	rrf	9,f
 17312  0798  3901               	andlw	1
 17313  0799  00F3               	movwf	??i1_LCDsend2x4
 17314  079A  0811               	movf	17,w	;volatile
 17315  079B  391F               	andlw	31
 17316  079C  0473               	iorwf	??i1_LCDsend2x4,w
 17317  079D  1D03               	btfss	3,2
 17318  079E  2FA0               	goto	u270_21
 17319  079F  2FA1               	goto	u270_20
 17320  07A0                     u270_21:
 17321  07A0  2F95               	goto	i1l3940
 17322  07A1                     u270_20:
 17323  07A1                     i1l1145:
 17324  07A1                     i1l3942:	
 17325                           ;main.c: 163: _delay((unsigned long)((1)*(1000000/4000000.0)));
 17326                           
 17327                           
 17328                           ;main.c: 164: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 17329  07A1  0876               	movf	i1LCDsend2x4@hc,w
 17330  07A2  0472               	iorwf	i1LCDsend2x4@mode,w
 17331  07A3  3808               	iorlw	8
 17332  07A4  318B  2308  3187   	fcall	i1_WriteI2C
 17333  07A7                     i1l3944:
 17334  07A7  0023               	movlb	3	; select bank3
 17335  07A8  0C0F               	rrf	15,w	;volatile
 17336  07A9  0C89               	rrf	9,f
 17337  07AA  3901               	andlw	1
 17338  07AB  00F3               	movwf	??i1_LCDsend2x4
 17339  07AC  0811               	movf	17,w	;volatile
 17340  07AD  391F               	andlw	31
 17341  07AE  0473               	iorwf	??i1_LCDsend2x4,w
 17342  07AF  1D03               	btfss	3,2
 17343  07B0  2FB2               	goto	u271_21
 17344  07B1  2FB3               	goto	u271_20
 17345  07B2                     u271_21:
 17346  07B2  2FA7               	goto	i1l3944
 17347  07B3                     u271_20:
 17348  07B3                     i1l3946:
 17349                           
 17350                           ;main.c: 165: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 17351  07B3  0877               	movf	i1LCDsend2x4@lc,w
 17352  07B4  0472               	iorwf	i1LCDsend2x4@mode,w
 17353  07B5  3808               	iorlw	8
 17354  07B6  318B  2308  3187   	fcall	i1_WriteI2C
 17355  07B9                     i1l3948:
 17356  07B9  0023               	movlb	3	; select bank3
 17357  07BA  0C0F               	rrf	15,w	;volatile
 17358  07BB  0C89               	rrf	9,f
 17359  07BC  3901               	andlw	1
 17360  07BD  00F3               	movwf	??i1_LCDsend2x4
 17361  07BE  0811               	movf	17,w	;volatile
 17362  07BF  391F               	andlw	31
 17363  07C0  0473               	iorwf	??i1_LCDsend2x4,w
 17364  07C1  1D03               	btfss	3,2
 17365  07C2  2FC4               	goto	u272_21
 17366  07C3  2FC5               	goto	u272_20
 17367  07C4                     u272_21:
 17368  07C4  2FB9               	goto	i1l3948
 17369  07C5                     u272_20:
 17370  07C5                     i1l3950:
 17371                           
 17372                           ;main.c: 166: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 17373  07C5  0877               	movf	i1LCDsend2x4@lc,w
 17374  07C6  0472               	iorwf	i1LCDsend2x4@mode,w
 17375  07C7  380C               	iorlw	12
 17376  07C8  318B  2308  3187   	fcall	i1_WriteI2C
 17377  07CB                     i1l3952:
 17378  07CB  0023               	movlb	3	; select bank3
 17379  07CC  0C0F               	rrf	15,w	;volatile
 17380  07CD  0C89               	rrf	9,f
 17381  07CE  3901               	andlw	1
 17382  07CF  00F3               	movwf	??i1_LCDsend2x4
 17383  07D0  0811               	movf	17,w	;volatile
 17384  07D1  391F               	andlw	31
 17385  07D2  0473               	iorwf	??i1_LCDsend2x4,w
 17386  07D3  1D03               	btfss	3,2
 17387  07D4  2FD6               	goto	u273_21
 17388  07D5  2FD7               	goto	u273_20
 17389  07D6                     u273_21:
 17390  07D6  2FCB               	goto	i1l3952
 17391  07D7                     u273_20:
 17392  07D7                     i1l1154:
 17393  07D7                     i1l3954:	
 17394                           ;main.c: 167: _delay((unsigned long)((1)*(1000000/4000000.0)));
 17395                           
 17396                           
 17397                           ;main.c: 168: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 17398  07D7  0877               	movf	i1LCDsend2x4@lc,w
 17399  07D8  0472               	iorwf	i1LCDsend2x4@mode,w
 17400  07D9  3808               	iorlw	8
 17401  07DA  318B  2308  3187   	fcall	i1_WriteI2C
 17402  07DD                     i1l3956:
 17403  07DD  0023               	movlb	3	; select bank3
 17404  07DE  0C0F               	rrf	15,w	;volatile
 17405  07DF  0C89               	rrf	9,f
 17406  07E0  3901               	andlw	1
 17407  07E1  00F3               	movwf	??i1_LCDsend2x4
 17408  07E2  0811               	movf	17,w	;volatile
 17409  07E3  391F               	andlw	31
 17410  07E4  0473               	iorwf	??i1_LCDsend2x4,w
 17411  07E5  1D03               	btfss	3,2
 17412  07E6  2FE8               	goto	u274_21
 17413  07E7  2FE9               	goto	u274_20
 17414  07E8                     u274_21:
 17415  07E8  2FDD               	goto	i1l3956
 17416  07E9                     u274_20:
 17417  07E9                     i1l1157:
 17418                           
 17419                           ;main.c: 169: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 17420  07E9  1511               	bsf	17,2	;volatile
 17421  07EA                     i1l1158:
 17422  07EA  1911               	btfsc	17,2	;volatile
 17423  07EB  2FED               	goto	u275_21
 17424  07EC  2FEE               	goto	u275_20
 17425  07ED                     u275_21:
 17426  07ED  2FEA               	goto	i1l1158
 17427  07EE                     u275_20:
 17428  07EE                     i1l3958:
 17429                           
 17430                           ;main.c: 170: _delay((unsigned long)((50)*(1000000/4000000.0)));
 17431  07EE  3004               	movlw	4
 17432  07EF                     u516_27:
 17433  07EF  0B89               	decfsz	9,f
 17434  07F0  2FEF               	goto	u516_27
 17435  07F1                     i1l1161:
 17436  07F1  0008               	return
 17437  07F2                     __end_ofi1_LCDsend2x4:
 17438                           
 17439                           	psect	text59
 17440  0B08                     __ptext59:	
 17441 ;; *************** function i1_WriteI2C *****************
 17442 ;; Defined at:
 17443 ;;		line 47 in file "I2C/i2c.c"
 17444 ;; Parameters:    Size  Location     Type
 17445 ;;  data_out        1    wreg     unsigned char 
 17446 ;; Auto vars:     Size  Location     Type
 17447 ;;  data_out        1    1[COMMON] unsigned char 
 17448 ;; Return value:  Size  Location     Type
 17449 ;;                  1    wreg      char 
 17450 ;; Registers used:
 17451 ;;		wreg, status,2, status,0
 17452 ;; Tracked objects:
 17453 ;;		On entry : 0/0
 17454 ;;		On exit  : 0/0
 17455 ;;		Unchanged: 0/0
 17456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17458 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17459 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17460 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17461 ;;Total ram usage:        2 bytes
 17462 ;; Hardware stack levels used:    1
 17463 ;; This function calls:
 17464 ;;		Nothing
 17465 ;; This function is called by:
 17466 ;;		_tsttc
 17467 ;;		i1_LCDsend2x4
 17468 ;; This function uses a non-reentrant model
 17469 ;;
 17470                           
 17471                           
 17472                           ;psect for function i1_WriteI2C
 17473  0B08                     i1_WriteI2C:
 17474                           
 17475                           ;incstack = 0
 17476                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 17477                           ;i1WriteI2C@data_out stored from wreg
 17478  0B08  00F1               	movwf	i1WriteI2C@data_out
 17479  0B09                     i1l3892:
 17480                           
 17481                           ;i2c.c: 49: SSP1BUF = data_out;
 17482  0B09  0871               	movf	i1WriteI2C@data_out,w
 17483  0B0A  0023               	movlb	3	; select bank3
 17484  0B0B  008C               	movwf	12	;volatile
 17485  0B0C                     i1l3894:
 17486                           
 17487                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 17488  0B0C  1F90               	btfss	16,7	;volatile
 17489  0B0D  2B0F               	goto	u255_21
 17490  0B0E  2B10               	goto	u255_20
 17491  0B0F                     u255_21:
 17492  0B0F  2B11               	goto	i1l3900
 17493  0B10                     u255_20:
 17494  0B10  2B52               	goto	i1l30
 17495  0B11                     i1l3900:
 17496                           
 17497                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 17498  0B11  300F               	movlw	15
 17499  0B12  0510               	andwf	16,w	;volatile
 17500  0B13  00F0               	movwf	??i1_WriteI2C
 17501  0B14  3008               	movlw	8
 17502  0B15  0670               	xorwf	??i1_WriteI2C,w
 17503  0B16  1903               	btfsc	3,2
 17504  0B17  2B19               	goto	u256_21
 17505  0B18  2B1A               	goto	u256_20
 17506  0B19                     u256_21:
 17507  0B19  2B30               	goto	i1l3912
 17508  0B1A                     u256_20:
 17509  0B1A                     i1l3902:
 17510  0B1A  300F               	movlw	15
 17511  0B1B  0510               	andwf	16,w	;volatile
 17512  0B1C  00F0               	movwf	??i1_WriteI2C
 17513  0B1D  300B               	movlw	11
 17514  0B1E  0670               	xorwf	??i1_WriteI2C,w
 17515  0B1F  1903               	btfsc	3,2
 17516  0B20  2B22               	goto	u257_21
 17517  0B21  2B23               	goto	u257_20
 17518  0B22                     u257_21:
 17519  0B22  2B30               	goto	i1l3912
 17520  0B23                     u257_20:
 17521  0B23                     i1l3904:
 17522                           
 17523                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 17524  0B23  1610               	bsf	16,4	;volatile
 17525  0B24                     i1l33:	
 17526                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 17527                           
 17528  0B24  002E               	movlb	14	; select bank14
 17529  0B25  1C0F               	btfss	15,0	;volatile
 17530  0B26  2B28               	goto	u258_21
 17531  0B27  2B29               	goto	u258_20
 17532  0B28                     u258_21:
 17533  0B28  2B24               	goto	i1l33
 17534  0B29                     u258_20:
 17535  0B29                     i1l35:
 17536                           
 17537                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 17538  0B29  0023               	movlb	3	; select bank3
 17539  0B2A  190F               	btfsc	15,2	;volatile
 17540  0B2B  2B2D               	goto	u259_21
 17541  0B2C  2B2E               	goto	u259_20
 17542  0B2D                     u259_21:
 17543  0B2D  2B52               	goto	i1l30
 17544  0B2E                     u259_20:
 17545  0B2E                     i1l3906:
 17546  0B2E  080F               	movf	15,w	;volatile
 17547  0B2F  2B52               	goto	i1l30
 17548  0B30                     i1l3912:
 17549                           
 17550                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 17551  0B30  300F               	movlw	15
 17552  0B31  0510               	andwf	16,w	;volatile
 17553  0B32  00F0               	movwf	??i1_WriteI2C
 17554  0B33  3008               	movlw	8
 17555  0B34  0670               	xorwf	??i1_WriteI2C,w
 17556  0B35  1903               	btfsc	3,2
 17557  0B36  2B38               	goto	u260_21
 17558  0B37  2B39               	goto	u260_20
 17559  0B38                     u260_21:
 17560  0B38  2B42               	goto	i1l42
 17561  0B39                     u260_20:
 17562  0B39                     i1l3914:
 17563  0B39  300F               	movlw	15
 17564  0B3A  0510               	andwf	16,w	;volatile
 17565  0B3B  00F0               	movwf	??i1_WriteI2C
 17566  0B3C  300B               	movlw	11
 17567  0B3D  0670               	xorwf	??i1_WriteI2C,w
 17568  0B3E  1D03               	btfss	3,2
 17569  0B3F  2B41               	goto	u261_21
 17570  0B40  2B42               	goto	u261_20
 17571  0B41                     u261_21:
 17572  0B41  2B52               	goto	i1l30
 17573  0B42                     u261_20:
 17574  0B42                     i1l42:
 17575  0B42  180F               	btfsc	15,0	;volatile
 17576  0B43  2B45               	goto	u262_21
 17577  0B44  2B46               	goto	u262_20
 17578  0B45                     u262_21:
 17579  0B45  2B42               	goto	i1l42
 17580  0B46                     u262_20:
 17581  0B46                     i1l3916:
 17582  0B46  0C0F               	rrf	15,w	;volatile
 17583  0B47  0C89               	rrf	9,f
 17584  0B48  3901               	andlw	1
 17585  0B49  00F0               	movwf	??i1_WriteI2C
 17586  0B4A  0811               	movf	17,w	;volatile
 17587  0B4B  391F               	andlw	31
 17588  0B4C  0470               	iorwf	??i1_WriteI2C,w
 17589  0B4D  1D03               	btfss	3,2
 17590  0B4E  2B50               	goto	u263_21
 17591  0B4F  2B51               	goto	u263_20
 17592  0B50                     u263_21:
 17593  0B50  2B46               	goto	i1l3916
 17594  0B51                     u263_20:
 17595  0B51                     i1l47:
 17596                           
 17597                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 17598  0B51  0811               	movf	17,w	;volatile
 17599  0B52                     i1l30:
 17600  0B52  0008               	return
 17601  0B53                     __end_ofi1_WriteI2C:
 17602                           
 17603                           	psect	text60
 17604  17BA                     __ptext60:	
 17605 ;; *************** function _TMR3_WriteTimer *****************
 17606 ;; Defined at:
 17607 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 17608 ;; Parameters:    Size  Location     Type
 17609 ;;  timerVal        2    0[COMMON] unsigned int 
 17610 ;; Auto vars:     Size  Location     Type
 17611 ;;		None
 17612 ;; Return value:  Size  Location     Type
 17613 ;;                  1    wreg      void 
 17614 ;; Registers used:
 17615 ;;		wreg, status,2
 17616 ;; Tracked objects:
 17617 ;;		On entry : 0/0
 17618 ;;		On exit  : 0/0
 17619 ;;		Unchanged: 0/0
 17620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17621 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17624 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17625 ;;Total ram usage:        2 bytes
 17626 ;; Hardware stack levels used:    1
 17627 ;; This function calls:
 17628 ;;		Nothing
 17629 ;; This function is called by:
 17630 ;;		_TMR3_ISR
 17631 ;;		_TMR3_Reload
 17632 ;; This function uses a non-reentrant model
 17633 ;;
 17634                           
 17635                           
 17636                           ;psect for function _TMR3_WriteTimer
 17637  17BA                     _TMR3_WriteTimer:
 17638  17BA                     i1l4494:	
 17639                           ;incstack = 0
 17640                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 17641                           
 17642                           
 17643                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 17644  17BA  0024               	movlb	4	; select bank4
 17645  17BB  1D14               	btfss	20,2	;volatile
 17646  17BC  2FBE               	goto	u364_21
 17647  17BD  2FBF               	goto	u364_20
 17648  17BE                     u364_21:
 17649  17BE  2FC6               	goto	i1l4504
 17650  17BF                     u364_20:
 17651  17BF                     i1l4496:
 17652                           
 17653                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 17654  17BF  1014               	bcf	20,0	;volatile
 17655  17C0                     i1l4498:
 17656                           
 17657                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 17658  17C0  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 17659  17C1  0093               	movwf	19	;volatile
 17660  17C2                     i1l4500:
 17661                           
 17662                           ;tmr3.c: 136: TMR3L = timerVal;
 17663  17C2  0870               	movf	TMR3_WriteTimer@timerVal,w
 17664  17C3  0092               	movwf	18	;volatile
 17665  17C4                     i1l4502:
 17666                           
 17667                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 17668  17C4  1414               	bsf	20,0	;volatile
 17669                           
 17670                           ;tmr3.c: 140: }
 17671  17C5  2FCA               	goto	i1l477
 17672  17C6                     i1l4504:
 17673                           
 17674                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 17675  17C6  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 17676  17C7  0093               	movwf	19	;volatile
 17677  17C8                     i1l4506:
 17678                           
 17679                           ;tmr3.c: 145: TMR3L = timerVal;
 17680  17C8  0870               	movf	TMR3_WriteTimer@timerVal,w
 17681  17C9  0092               	movwf	18	;volatile
 17682  17CA                     i1l477:
 17683  17CA  0008               	return
 17684  17CB                     __end_of_TMR3_WriteTimer:
 17685                           
 17686                           	psect	text61
 17687  0824                     __ptext61:	
 17688 ;; *************** function _TMR1_ISR *****************
 17689 ;; Defined at:
 17690 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 17691 ;; Parameters:    Size  Location     Type
 17692 ;;		None
 17693 ;; Auto vars:     Size  Location     Type
 17694 ;;		None
 17695 ;; Return value:  Size  Location     Type
 17696 ;;                  1    wreg      void 
 17697 ;; Registers used:
 17698 ;;		wreg, status,2, status,0, pclath, cstack
 17699 ;; Tracked objects:
 17700 ;;		On entry : 0/0
 17701 ;;		On exit  : 0/0
 17702 ;;		Unchanged: 0/0
 17703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17708 ;;Total ram usage:        0 bytes
 17709 ;; Hardware stack levels used:    1
 17710 ;; Hardware stack levels required when called:    2
 17711 ;; This function calls:
 17712 ;;		Absolute function
 17713 ;;		_Clock_ISR
 17714 ;;		_TMR1_DefaultInterruptHandler
 17715 ;;		_TMR1_WriteTimer
 17716 ;; This function is called by:
 17717 ;;		_INTERRUPT_InterruptManager
 17718 ;; This function uses a non-reentrant model
 17719 ;;
 17720                           
 17721                           
 17722                           ;psect for function _TMR1_ISR
 17723  0824                     _TMR1_ISR:
 17724  0824                     i1l4884:	
 17725                           ;incstack = 0
 17726                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 17727                           
 17728                           
 17729                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 17730  0824  002E               	movlb	14	; select bank14
 17731  0825  1010               	bcf	16,0	;volatile
 17732  0826                     i1l4886:
 17733                           
 17734                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 17735  0826  0021               	movlb	1	; select bank1
 17736  0827  083C               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 17737  0828  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 17738  0829  083B               	movf	_timer1ReloadVal^(0+128),w	;volatile
 17739  082A  00F0               	movwf	TMR1_WriteTimer@timerVal
 17740  082B  3197  27A9  3188   	fcall	_TMR1_WriteTimer
 17741  082E                     i1l4888:
 17742                           
 17743                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 17744  082E  0021               	movlb	1	; select bank1
 17745  082F  0839               	movf	_TMR1_InterruptHandler^(0+128),w
 17746  0830  043A               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 17747  0831  1903               	btfsc	3,2
 17748  0832  2834               	goto	u436_21
 17749  0833  2835               	goto	u436_20
 17750  0834                     u436_21:
 17751  0834  283A               	goto	i1l426
 17752  0835                     u436_20:
 17753  0835                     i1l4890:
 17754                           
 17755                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 17756  0835  083A               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 17757  0836  008A               	movwf	10
 17758  0837  0839               	movf	_TMR1_InterruptHandler^(0+128),w
 17759  0838  000A               	callw
 17760  0839  3188               	pagesel	$
 17761  083A                     i1l426:
 17762  083A  0008               	return
 17763  083B                     __end_of_TMR1_ISR:
 17764                           
 17765                           	psect	text62
 17766  17A9                     __ptext62:	
 17767 ;; *************** function _TMR1_WriteTimer *****************
 17768 ;; Defined at:
 17769 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 17770 ;; Parameters:    Size  Location     Type
 17771 ;;  timerVal        2    0[COMMON] unsigned int 
 17772 ;; Auto vars:     Size  Location     Type
 17773 ;;		None
 17774 ;; Return value:  Size  Location     Type
 17775 ;;                  1    wreg      void 
 17776 ;; Registers used:
 17777 ;;		wreg, status,2
 17778 ;; Tracked objects:
 17779 ;;		On entry : 0/0
 17780 ;;		On exit  : 0/0
 17781 ;;		Unchanged: 0/0
 17782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17783 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17786 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17787 ;;Total ram usage:        2 bytes
 17788 ;; Hardware stack levels used:    1
 17789 ;; This function calls:
 17790 ;;		Nothing
 17791 ;; This function is called by:
 17792 ;;		_TMR1_ISR
 17793 ;;		_TMR1_Reload
 17794 ;; This function uses a non-reentrant model
 17795 ;;
 17796                           
 17797                           
 17798                           ;psect for function _TMR1_WriteTimer
 17799  17A9                     _TMR1_WriteTimer:
 17800  17A9                     i1l4480:	
 17801                           ;incstack = 0
 17802                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 17803                           
 17804                           
 17805                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 17806  17A9  0024               	movlb	4	; select bank4
 17807  17AA  1D0E               	btfss	14,2	;volatile
 17808  17AB  2FAD               	goto	u363_21
 17809  17AC  2FAE               	goto	u363_20
 17810  17AD                     u363_21:
 17811  17AD  2FB5               	goto	i1l4490
 17812  17AE                     u363_20:
 17813  17AE                     i1l4482:
 17814                           
 17815                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 17816  17AE  100E               	bcf	14,0	;volatile
 17817  17AF                     i1l4484:
 17818                           
 17819                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 17820  17AF  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17821  17B0  008D               	movwf	13	;volatile
 17822  17B1                     i1l4486:
 17823                           
 17824                           ;tmr1.c: 136: TMR1L = timerVal;
 17825  17B1  0870               	movf	TMR1_WriteTimer@timerVal,w
 17826  17B2  008C               	movwf	12	;volatile
 17827  17B3                     i1l4488:
 17828                           
 17829                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 17830  17B3  140E               	bsf	14,0	;volatile
 17831                           
 17832                           ;tmr1.c: 140: }
 17833  17B4  2FB9               	goto	i1l413
 17834  17B5                     i1l4490:
 17835                           
 17836                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 17837  17B5  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17838  17B6  008D               	movwf	13	;volatile
 17839  17B7                     i1l4492:
 17840                           
 17841                           ;tmr1.c: 145: TMR1L = timerVal;
 17842  17B7  0870               	movf	TMR1_WriteTimer@timerVal,w
 17843  17B8  008C               	movwf	12	;volatile
 17844  17B9                     i1l413:
 17845  17B9  0008               	return
 17846  17BA                     __end_of_TMR1_WriteTimer:
 17847                           
 17848                           	psect	text63
 17849  0DF2                     __ptext63:	
 17850 ;; *************** function _Clock_ISR *****************
 17851 ;; Defined at:
 17852 ;;		line 289 in file "main.c"
 17853 ;; Parameters:    Size  Location     Type
 17854 ;;		None
 17855 ;; Auto vars:     Size  Location     Type
 17856 ;;		None
 17857 ;; Return value:  Size  Location     Type
 17858 ;;                  1    wreg      void 
 17859 ;; Registers used:
 17860 ;;		wreg, status,2, status,0, pclath, cstack
 17861 ;; Tracked objects:
 17862 ;;		On entry : 0/0
 17863 ;;		On exit  : 0/0
 17864 ;;		Unchanged: 0/0
 17865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17868 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17869 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17870 ;;Total ram usage:        1 bytes
 17871 ;; Hardware stack levels used:    1
 17872 ;; Hardware stack levels required when called:    1
 17873 ;; This function calls:
 17874 ;;		i1_DATAEE_WriteByte
 17875 ;; This function is called by:
 17876 ;;		_main
 17877 ;;		_TMR1_ISR
 17878 ;; This function uses a non-reentrant model
 17879 ;;
 17880                           
 17881                           
 17882                           ;psect for function _Clock_ISR
 17883  0DF2                     _Clock_ISR:
 17884  0DF2                     i1l4580:	
 17885                           ;incstack = 0
 17886                           ; Regs used in _Clock_ISR: [wreg+status,2+status,0+pclath+cstack]
 17887                           
 17888                           
 17889                           ;main.c: 291: t.s++;
 17890  0DF2  3001               	movlw	1
 17891  0DF3  00FA               	movwf	??_Clock_ISR
 17892  0DF4  087A               	movf	??_Clock_ISR,w
 17893  0DF5  0020               	movlb	0	; select bank0
 17894  0DF6  07D9               	addwf	_t+2,f
 17895                           
 17896                           ;main.c: 293: if(t.s==60){
 17897  0DF7  303C               	movlw	60
 17898  0DF8  0659               	xorwf	_t+2,w
 17899  0DF9  1D03               	btfss	3,2
 17900  0DFA  2DFC               	goto	u385_21
 17901  0DFB  2DFD               	goto	u385_20
 17902  0DFC                     u385_21:
 17903  0DFC  2EAC               	goto	i1l4612
 17904  0DFD                     u385_20:
 17905  0DFD                     i1l4582:
 17906                           
 17907                           ;main.c: 294: t.m++;
 17908  0DFD  3001               	movlw	1
 17909  0DFE  00FA               	movwf	??_Clock_ISR
 17910  0DFF  087A               	movf	??_Clock_ISR,w
 17911  0E00  07D8               	addwf	_t+1,f
 17912  0E01                     i1l4584:
 17913                           
 17914                           ;main.c: 295: t.s=0;
 17915  0E01  01D9               	clrf	_t+2
 17916  0E02                     i1l4586:
 17917                           
 17918                           ;main.c: 298: DATAEE_WriteByte( 0x7000 + (1 * 8), NREG);
 17919  0E02  3008               	movlw	8
 17920  0E03  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17921  0E04  3070               	movlw	112
 17922  0E05  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17923  0E06  0021               	movlb	1	; select bank1
 17924  0E07  0847               	movf	_NREG^(0+128),w
 17925  0E08  00FA               	movwf	??_Clock_ISR
 17926  0E09  087A               	movf	??_Clock_ISR,w
 17927  0E0A  00F8               	movwf	i1DATAEE_WriteByte@bData
 17928  0E0B  3188  20CE  318D   	fcall	i1_DATAEE_WriteByte
 17929  0E0E                     i1l4588:
 17930                           
 17931                           ;main.c: 299: DATAEE_WriteByte( 0x7000 + (2 * 8), PMON);
 17932  0E0E  3010               	movlw	16
 17933  0E0F  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17934  0E10  3070               	movlw	112
 17935  0E11  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17936  0E12  0021               	movlb	1	; select bank1
 17937  0E13  0846               	movf	_PMON^(0+128),w
 17938  0E14  00FA               	movwf	??_Clock_ISR
 17939  0E15  087A               	movf	??_Clock_ISR,w
 17940  0E16  00F8               	movwf	i1DATAEE_WriteByte@bData
 17941  0E17  3188  20CE  318D   	fcall	i1_DATAEE_WriteByte
 17942  0E1A                     i1l4590:
 17943                           
 17944                           ;main.c: 300: DATAEE_WriteByte( 0x7000 + (3 * 8), TALA);
 17945  0E1A  3018               	movlw	24
 17946  0E1B  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17947  0E1C  3070               	movlw	112
 17948  0E1D  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17949  0E1E  0020               	movlb	0	; select bank0
 17950  0E1F  0866               	movf	_TALA,w
 17951  0E20  00FA               	movwf	??_Clock_ISR
 17952  0E21  087A               	movf	??_Clock_ISR,w
 17953  0E22  00F8               	movwf	i1DATAEE_WriteByte@bData
 17954  0E23  3188  20CE  318D   	fcall	i1_DATAEE_WriteByte
 17955  0E26                     i1l4592:
 17956                           
 17957                           ;main.c: 301: DATAEE_WriteByte( 0x7000 + (4 * 8), clkAlarm.alarmVal.h);
 17958  0E26  3020               	movlw	32
 17959  0E27  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17960  0E28  3070               	movlw	112
 17961  0E29  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17962  0E2A  0020               	movlb	0	; select bank0
 17963  0E2B  084D               	movf	_clkAlarm,w
 17964  0E2C  00FA               	movwf	??_Clock_ISR
 17965  0E2D  087A               	movf	??_Clock_ISR,w
 17966  0E2E  00F8               	movwf	i1DATAEE_WriteByte@bData
 17967  0E2F  3188  20CE  318D   	fcall	i1_DATAEE_WriteByte
 17968  0E32                     i1l4594:
 17969                           
 17970                           ;main.c: 302: DATAEE_WriteByte( 0x7000 + (5 * 8), clkAlarm.alarmVal.m);
 17971  0E32  3028               	movlw	40
 17972  0E33  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17973  0E34  3070               	movlw	112
 17974  0E35  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17975  0E36  0020               	movlb	0	; select bank0
 17976  0E37  084E               	movf	_clkAlarm+1,w
 17977  0E38  00FA               	movwf	??_Clock_ISR
 17978  0E39  087A               	movf	??_Clock_ISR,w
 17979  0E3A  00F8               	movwf	i1DATAEE_WriteByte@bData
 17980  0E3B  3188  20CE  318D   	fcall	i1_DATAEE_WriteByte
 17981  0E3E                     i1l4596:
 17982                           
 17983                           ;main.c: 303: DATAEE_WriteByte( 0x7000 + (6 * 8), clkAlarm.alarmVal.s);
 17984  0E3E  3030               	movlw	48
 17985  0E3F  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17986  0E40  3070               	movlw	112
 17987  0E41  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 17988  0E42  0020               	movlb	0	; select bank0
 17989  0E43  084F               	movf	_clkAlarm+2,w
 17990  0E44  00FA               	movwf	??_Clock_ISR
 17991  0E45  087A               	movf	??_Clock_ISR,w
 17992  0E46  00F8               	movwf	i1DATAEE_WriteByte@bData
 17993  0E47  3188  20CE  318D   	fcall	i1_DATAEE_WriteByte
 17994  0E4A                     i1l4598:
 17995                           
 17996                           ;main.c: 304: DATAEE_WriteByte( 0x7000 + (7 * 8), tempAlarm.alarmTemp);
 17997  0E4A  3038               	movlw	56
 17998  0E4B  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 17999  0E4C  3070               	movlw	112
 18000  0E4D  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 18001  0E4E  0020               	movlb	0	; select bank0
 18002  0E4F  0854               	movf	_tempAlarm,w
 18003  0E50  00FA               	movwf	??_Clock_ISR
 18004  0E51  087A               	movf	??_Clock_ISR,w
 18005  0E52  00F8               	movwf	i1DATAEE_WriteByte@bData
 18006  0E53  3188  20CE  318D   	fcall	i1_DATAEE_WriteByte
 18007  0E56                     i1l4600:
 18008                           
 18009                           ;main.c: 305: DATAEE_WriteByte( 0x7000 + (8 * 8), lumAlarm.alarmLum);
 18010  0E56  3040               	movlw	64
 18011  0E57  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 18012  0E58  3070               	movlw	112
 18013  0E59  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 18014  0E5A  0020               	movlb	0	; select bank0
 18015  0E5B  0851               	movf	_lumAlarm,w
 18016  0E5C  00FA               	movwf	??_Clock_ISR
 18017  0E5D  087A               	movf	??_Clock_ISR,w
 18018  0E5E  00F8               	movwf	i1DATAEE_WriteByte@bData
 18019  0E5F  3188  20CE  318D   	fcall	i1_DATAEE_WriteByte
 18020  0E62                     i1l4602:
 18021                           
 18022                           ;main.c: 306: DATAEE_WriteByte( 0x7000 + (9 * 8), ALAF);
 18023  0E62  3048               	movlw	72
 18024  0E63  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 18025  0E64  3070               	movlw	112
 18026  0E65  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 18027  0E66  0020               	movlb	0	; select bank0
 18028  0E67  0865               	movf	_ALAF,w
 18029  0E68  00FA               	movwf	??_Clock_ISR
 18030  0E69  087A               	movf	??_Clock_ISR,w
 18031  0E6A  00F8               	movwf	i1DATAEE_WriteByte@bData
 18032  0E6B  3188  20CE  318D   	fcall	i1_DATAEE_WriteByte
 18033  0E6E                     i1l4604:
 18034                           
 18035                           ;main.c: 307: DATAEE_WriteByte( 0x7000 + (10 * 8), t.h);
 18036  0E6E  3050               	movlw	80
 18037  0E6F  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 18038  0E70  3070               	movlw	112
 18039  0E71  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 18040  0E72  0020               	movlb	0	; select bank0
 18041  0E73  0857               	movf	_t,w
 18042  0E74  00FA               	movwf	??_Clock_ISR
 18043  0E75  087A               	movf	??_Clock_ISR,w
 18044  0E76  00F8               	movwf	i1DATAEE_WriteByte@bData
 18045  0E77  3188  20CE  318D   	fcall	i1_DATAEE_WriteByte
 18046  0E7A                     i1l4606:
 18047                           
 18048                           ;main.c: 308: DATAEE_WriteByte( 0x7000 + (11 * 8), t.m);
 18049  0E7A  3058               	movlw	88
 18050  0E7B  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 18051  0E7C  3070               	movlw	112
 18052  0E7D  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 18053  0E7E  0020               	movlb	0	; select bank0
 18054  0E7F  0858               	movf	_t+1,w
 18055  0E80  00FA               	movwf	??_Clock_ISR
 18056  0E81  087A               	movf	??_Clock_ISR,w
 18057  0E82  00F8               	movwf	i1DATAEE_WriteByte@bData
 18058  0E83  3188  20CE  318D   	fcall	i1_DATAEE_WriteByte
 18059  0E86                     i1l4608:
 18060                           
 18061                           ;main.c: 309: DATAEE_WriteByte( 0x7000 + (12 * 8), idx_RingBuffer);
 18062  0E86  3060               	movlw	96
 18063  0E87  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 18064  0E88  3070               	movlw	112
 18065  0E89  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 18066  0E8A  0021               	movlb	1	; select bank1
 18067  0E8B  0845               	movf	_idx_RingBuffer^(0+128),w
 18068  0E8C  00FA               	movwf	??_Clock_ISR
 18069  0E8D  087A               	movf	??_Clock_ISR,w
 18070  0E8E  00F8               	movwf	i1DATAEE_WriteByte@bData
 18071  0E8F  3188  20CE  318D   	fcall	i1_DATAEE_WriteByte
 18072  0E92                     i1l4610:
 18073                           
 18074                           ;main.c: 310: DATAEE_WriteByte( 0x7000 + (13 * 8), NREG + PMON + TALA + clkAlarm.alarmVa
      +                          l.h + clkAlarm.alarmVal.m + clkAlarm.alarmVal.s + tempAlarm.alarmTemp + lumAlarm.alarmLu
      +                          m + ALAF + t.h + t.m + idx_RingBuffer);
 18075  0E92  3068               	movlw	104
 18076  0E93  00F6               	movwf	i1DATAEE_WriteByte@bAdd
 18077  0E94  3070               	movlw	112
 18078  0E95  00F7               	movwf	i1DATAEE_WriteByte@bAdd+1
 18079  0E96  0020               	movlb	0	; select bank0
 18080  0E97  084E               	movf	_clkAlarm+1,w
 18081  0E98  074F               	addwf	_clkAlarm+2,w
 18082  0E99  0758               	addwf	_t+1,w
 18083  0E9A  074D               	addwf	_clkAlarm,w
 18084  0E9B  0754               	addwf	_tempAlarm,w
 18085  0E9C  0751               	addwf	_lumAlarm,w
 18086  0E9D  0757               	addwf	_t,w
 18087  0E9E  0021               	movlb	1	; select bank1
 18088  0E9F  0747               	addwf	_NREG^(0+128),w
 18089  0EA0  0746               	addwf	_PMON^(0+128),w
 18090  0EA1  0020               	movlb	0	; select bank0
 18091  0EA2  0766               	addwf	_TALA,w
 18092  0EA3  0765               	addwf	_ALAF,w
 18093  0EA4  0021               	movlb	1	; select bank1
 18094  0EA5  0745               	addwf	_idx_RingBuffer^(0+128),w
 18095  0EA6  00FA               	movwf	??_Clock_ISR
 18096  0EA7  087A               	movf	??_Clock_ISR,w
 18097  0EA8  00F8               	movwf	i1DATAEE_WriteByte@bData
 18098  0EA9  3188  20CE  318D   	fcall	i1_DATAEE_WriteByte
 18099  0EAC                     i1l4612:
 18100                           
 18101                           ;main.c: 311: };main.c: 312: if(t.m==60){
 18102  0EAC  303C               	movlw	60
 18103  0EAD  0020               	movlb	0	; select bank0
 18104  0EAE  0658               	xorwf	_t+1,w
 18105  0EAF  1D03               	btfss	3,2
 18106  0EB0  2EB2               	goto	u386_21
 18107  0EB1  2EB3               	goto	u386_20
 18108  0EB2                     u386_21:
 18109  0EB2  2EB8               	goto	i1l4618
 18110  0EB3                     u386_20:
 18111  0EB3                     i1l4614:
 18112                           
 18113                           ;main.c: 313: t.h++;
 18114  0EB3  3001               	movlw	1
 18115  0EB4  00FA               	movwf	??_Clock_ISR
 18116  0EB5  087A               	movf	??_Clock_ISR,w
 18117  0EB6  07D7               	addwf	_t,f
 18118  0EB7                     i1l4616:
 18119                           
 18120                           ;main.c: 314: t.m=0;
 18121  0EB7  01D8               	clrf	_t+1
 18122  0EB8                     i1l4618:
 18123                           
 18124                           ;main.c: 315: };main.c: 316: if(t.h==24){
 18125  0EB8  3018               	movlw	24
 18126  0EB9  0657               	xorwf	_t,w
 18127  0EBA  1D03               	btfss	3,2
 18128  0EBB  2EBD               	goto	u387_21
 18129  0EBC  2EBE               	goto	u387_20
 18130  0EBD                     u387_21:
 18131  0EBD  2EBF               	goto	i1l4622
 18132  0EBE                     u387_20:
 18133  0EBE                     i1l4620:
 18134                           
 18135                           ;main.c: 317: t.h=0;
 18136  0EBE  01D7               	clrf	_t
 18137  0EBF                     i1l4622:
 18138                           
 18139                           ;main.c: 318: };main.c: 321: if((ALAF == 'A') && t.s >= clkAlarm.alarmVal.s && t.m >= cl
      +                          kAlarm.alarmVal.m && t.h >= clkAlarm.alarmVal.h && editingClockAlarm == 0){
 18140  0EBF  3041               	movlw	65
 18141  0EC0  0665               	xorwf	_ALAF,w
 18142  0EC1  1D03               	btfss	3,2
 18143  0EC2  2EC4               	goto	u388_21
 18144  0EC3  2EC5               	goto	u388_20
 18145  0EC4                     u388_21:
 18146  0EC4  2EE7               	goto	i1l4636
 18147  0EC5                     u388_20:
 18148  0EC5                     i1l4624:
 18149  0EC5  084F               	movf	_clkAlarm+2,w
 18150  0EC6  0259               	subwf	_t+2,w
 18151  0EC7  1C03               	skipc
 18152  0EC8  2ECA               	goto	u389_21
 18153  0EC9  2ECB               	goto	u389_20
 18154  0ECA                     u389_21:
 18155  0ECA  2EE7               	goto	i1l4636
 18156  0ECB                     u389_20:
 18157  0ECB                     i1l4626:
 18158  0ECB  084E               	movf	_clkAlarm+1,w
 18159  0ECC  0258               	subwf	_t+1,w
 18160  0ECD  1C03               	skipc
 18161  0ECE  2ED0               	goto	u390_21
 18162  0ECF  2ED1               	goto	u390_20
 18163  0ED0                     u390_21:
 18164  0ED0  2EE7               	goto	i1l4636
 18165  0ED1                     u390_20:
 18166  0ED1                     i1l4628:
 18167  0ED1  084D               	movf	_clkAlarm,w
 18168  0ED2  0257               	subwf	_t,w
 18169  0ED3  1C03               	skipc
 18170  0ED4  2ED6               	goto	u391_21
 18171  0ED5  2ED7               	goto	u391_20
 18172  0ED6                     u391_21:
 18173  0ED6  2EE7               	goto	i1l4636
 18174  0ED7                     u391_20:
 18175  0ED7                     i1l4630:
 18176  0ED7  085C               	movf	_editingClockAlarm,w
 18177  0ED8  045D               	iorwf	_editingClockAlarm+1,w
 18178  0ED9  1D03               	btfss	3,2
 18179  0EDA  2EDC               	goto	u392_21
 18180  0EDB  2EDD               	goto	u392_20
 18181  0EDC                     u392_21:
 18182  0EDC  2EE7               	goto	i1l4636
 18183  0EDD                     u392_20:
 18184  0EDD                     i1l4632:
 18185                           
 18186                           ;main.c: 322: alarmPWMStart.h = 0xff;
 18187  0EDD  30FF               	movlw	255
 18188  0EDE  00FA               	movwf	??_Clock_ISR
 18189  0EDF  087A               	movf	??_Clock_ISR,w
 18190  0EE0  00E7               	movwf	_alarmPWMStart
 18191  0EE1                     i1l4634:
 18192                           
 18193                           ;main.c: 323: clkAlarm.trigger = 1;
 18194  0EE1  01D0               	clrf	_clkAlarm+3
 18195  0EE2  0AD0               	incf	_clkAlarm+3,f
 18196                           
 18197                           ;main.c: 324: clkAlarm.alarmVal.h = 25;
 18198  0EE3  3019               	movlw	25
 18199  0EE4  00FA               	movwf	??_Clock_ISR
 18200  0EE5  087A               	movf	??_Clock_ISR,w
 18201  0EE6  00CD               	movwf	_clkAlarm
 18202  0EE7                     i1l4636:
 18203  0EE7  1003               	clrc
 18204  0EE8  1F96               	btfss	22,7	;volatile
 18205  0EE9  1403               	setc
 18206  0EEA  1803               	btfsc	3,0
 18207  0EEB  2EED               	goto	u393_21
 18208  0EEC  2EF0               	goto	u393_20
 18209  0EED                     u393_21:
 18210  0EED  0020               	movlb	0	; select bank0
 18211  0EEE  1796               	bsf	22,7	;volatile
 18212  0EEF  2EF2               	goto	u394_24
 18213  0EF0                     u393_20:
 18214  0EF0  0020               	movlb	0	; select bank0
 18215  0EF1  1396               	bcf	22,7	;volatile
 18216  0EF2                     u394_24:
 18217  0EF2                     i1l1231:
 18218  0EF2  0008               	return
 18219  0EF3                     __end_of_Clock_ISR:
 18220                           
 18221                           	psect	text64
 18222  1704                     __ptext64:	
 18223 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 18224 ;; Defined at:
 18225 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 18226 ;; Parameters:    Size  Location     Type
 18227 ;;		None
 18228 ;; Auto vars:     Size  Location     Type
 18229 ;;		None
 18230 ;; Return value:  Size  Location     Type
 18231 ;;                  1    wreg      void 
 18232 ;; Registers used:
 18233 ;;		None
 18234 ;; Tracked objects:
 18235 ;;		On entry : 0/0
 18236 ;;		On exit  : 0/0
 18237 ;;		Unchanged: 0/0
 18238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18243 ;;Total ram usage:        0 bytes
 18244 ;; Hardware stack levels used:    1
 18245 ;; This function calls:
 18246 ;;		Nothing
 18247 ;; This function is called by:
 18248 ;;		_TMR1_Initialize
 18249 ;;		_TMR1_ISR
 18250 ;; This function uses a non-reentrant model
 18251 ;;
 18252                           
 18253                           
 18254                           ;psect for function _TMR1_DefaultInterruptHandler
 18255  1704                     _TMR1_DefaultInterruptHandler:
 18256  1704                     i1l432:	
 18257                           ;incstack = 0
 18258                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 18259                           
 18260  1704  0008               	return
 18261  1705                     __end_of_TMR1_DefaultInterruptHandler:
 18262                           
 18263                           	psect	text65
 18264  08CE                     __ptext65:	
 18265 ;; *************** function i1_DATAEE_WriteByte *****************
 18266 ;; Defined at:
 18267 ;;		line 180 in file "mcc_generated_files/memory.c"
 18268 ;; Parameters:    Size  Location     Type
 18269 ;;  bAdd            2    6[COMMON] unsigned int 
 18270 ;;  bData           1    8[COMMON] unsigned char 
 18271 ;; Auto vars:     Size  Location     Type
 18272 ;;  GIEBitValue     1    9[COMMON] unsigned char 
 18273 ;; Return value:  Size  Location     Type
 18274 ;;                  1    wreg      void 
 18275 ;; Registers used:
 18276 ;;		wreg, status,2, status,0
 18277 ;; Tracked objects:
 18278 ;;		On entry : 0/0
 18279 ;;		On exit  : 0/0
 18280 ;;		Unchanged: 0/0
 18281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18282 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18285 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18286 ;;Total ram usage:        4 bytes
 18287 ;; Hardware stack levels used:    1
 18288 ;; This function calls:
 18289 ;;		Nothing
 18290 ;; This function is called by:
 18291 ;;		_Clock_ISR
 18292 ;;		_monitoring_ISR
 18293 ;; This function uses a non-reentrant model
 18294 ;;
 18295                           
 18296                           
 18297                           ;psect for function i1_DATAEE_WriteByte
 18298  08CE                     i1_DATAEE_WriteByte:
 18299  08CE                     i1l4322:	
 18300                           ;incstack = 0
 18301                           ; Regs used in i1_DATAEE_WriteByte: [wreg+status,2+status,0]
 18302                           
 18303                           
 18304                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 18305  08CE  3000               	movlw	0
 18306  08CF  1B8B               	btfsc	11,7	;volatile
 18307  08D0  3001               	movlw	1
 18308  08D1  00F9               	movwf	i1DATAEE_WriteByte@GIEBitValue
 18309                           
 18310                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 18311  08D2  0877               	movf	i1DATAEE_WriteByte@bAdd+1,w
 18312  08D3  0030               	movlb	16	; select bank16
 18313  08D4  009B               	movwf	27	;volatile
 18314  08D5                     i1l4324:
 18315                           
 18316                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 18317  08D5  0876               	movf	i1DATAEE_WriteByte@bAdd,w
 18318  08D6  009A               	movwf	26	;volatile
 18319  08D7                     i1l4326:
 18320                           
 18321                           ;memory.c: 186: NVMDATL = bData;
 18322  08D7  0878               	movf	i1DATAEE_WriteByte@bData,w
 18323  08D8  009C               	movwf	28	;volatile
 18324  08D9                     i1l4328:
 18325                           
 18326                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 18327  08D9  171E               	bsf	30,6	;volsfr
 18328  08DA                     i1l4330:
 18329                           
 18330                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 18331  08DA  151E               	bsf	30,2	;volsfr
 18332  08DB                     i1l4332:
 18333                           
 18334                           ;memory.c: 189: INTCONbits.GIE = 0;
 18335  08DB  138B               	bcf	11,7	;volatile
 18336  08DC                     i1l4334:
 18337                           
 18338                           ;memory.c: 190: NVMCON2 = 0x55;
 18339  08DC  3055               	movlw	85
 18340  08DD  009F               	movwf	31	;volsfr
 18341  08DE                     i1l4336:
 18342                           
 18343                           ;memory.c: 191: NVMCON2 = 0xAA;
 18344  08DE  30AA               	movlw	170
 18345  08DF  009F               	movwf	31	;volsfr
 18346  08E0                     i1l4338:
 18347                           
 18348                           ;memory.c: 192: NVMCON1bits.WR = 1;
 18349  08E0  149E               	bsf	30,1	;volsfr
 18350  08E1                     i1l842:	
 18351                           ;memory.c: 195: {
 18352                           
 18353  08E1  189E               	btfsc	30,1	;volsfr
 18354  08E2  28E4               	goto	u362_21
 18355  08E3  28E5               	goto	u362_20
 18356  08E4                     u362_21:
 18357  08E4  28E1               	goto	i1l842
 18358  08E5                     u362_20:
 18359  08E5                     i1l844:
 18360                           
 18361                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 18362  08E5  111E               	bcf	30,2	;volsfr
 18363  08E6                     i1l4340:
 18364                           
 18365                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 18366  08E6  0C79               	rrf	i1DATAEE_WriteByte@GIEBitValue,w
 18367  08E7  1C03               	skipc
 18368  08E8  138B               	bcf	11,7	;volatile
 18369  08E9  1803               	skipnc
 18370  08EA  178B               	bsf	11,7	;volatile
 18371  08EB                     i1l845:
 18372  08EB  0008               	return
 18373  08EC                     __end_ofi1_DATAEE_WriteByte:
 18374                           
 18375                           	psect	text66
 18376  1723                     __ptext66:	
 18377 ;; *************** function _INT_ISR *****************
 18378 ;; Defined at:
 18379 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 18380 ;; Parameters:    Size  Location     Type
 18381 ;;		None
 18382 ;; Auto vars:     Size  Location     Type
 18383 ;;		None
 18384 ;; Return value:  Size  Location     Type
 18385 ;;                  1    wreg      void 
 18386 ;; Registers used:
 18387 ;;		wreg, status,2, status,0, pclath, cstack
 18388 ;; Tracked objects:
 18389 ;;		On entry : 0/0
 18390 ;;		On exit  : 0/0
 18391 ;;		Unchanged: 0/0
 18392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18397 ;;Total ram usage:        0 bytes
 18398 ;; Hardware stack levels used:    1
 18399 ;; Hardware stack levels required when called:    2
 18400 ;; This function calls:
 18401 ;;		_INT_CallBack
 18402 ;; This function is called by:
 18403 ;;		_INTERRUPT_InterruptManager
 18404 ;; This function uses a non-reentrant model
 18405 ;;
 18406                           
 18407                           
 18408                           ;psect for function _INT_ISR
 18409  1723                     _INT_ISR:
 18410  1723                     i1l4864:	
 18411                           ;incstack = 0
 18412                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 18413                           
 18414                           
 18415                           ;ext_int.c: 34: (PIR0bits.INTF = 0);
 18416  1723  002E               	movlb	14	; select bank14
 18417  1724  100C               	bcf	12,0	;volatile
 18418  1725                     i1l4866:
 18419                           
 18420                           ;ext_int.c: 37: INT_CallBack();
 18421  1725  3197  2780  3197   	fcall	_INT_CallBack
 18422  1728                     i1l861:
 18423  1728  0008               	return
 18424  1729                     __end_of_INT_ISR:
 18425                           
 18426                           	psect	text67
 18427  1780                     __ptext67:	
 18428 ;; *************** function _INT_CallBack *****************
 18429 ;; Defined at:
 18430 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 18431 ;; Parameters:    Size  Location     Type
 18432 ;;		None
 18433 ;; Auto vars:     Size  Location     Type
 18434 ;;		None
 18435 ;; Return value:  Size  Location     Type
 18436 ;;                  1    wreg      void 
 18437 ;; Registers used:
 18438 ;;		wreg, status,2, status,0, pclath, cstack
 18439 ;; Tracked objects:
 18440 ;;		On entry : 0/0
 18441 ;;		On exit  : 0/0
 18442 ;;		Unchanged: 0/0
 18443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18448 ;;Total ram usage:        0 bytes
 18449 ;; Hardware stack levels used:    1
 18450 ;; Hardware stack levels required when called:    1
 18451 ;; This function calls:
 18452 ;;		Absolute function
 18453 ;;		_INT_DefaultInterruptHandler
 18454 ;;		_S1_ISR
 18455 ;; This function is called by:
 18456 ;;		_INT_ISR
 18457 ;; This function uses a non-reentrant model
 18458 ;;
 18459                           
 18460                           
 18461                           ;psect for function _INT_CallBack
 18462  1780                     _INT_CallBack:
 18463  1780                     i1l4524:	
 18464                           ;incstack = 0
 18465                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 18466                           
 18467                           
 18468                           ;ext_int.c: 44: if(INT_InterruptHandler)
 18469  1780  0021               	movlb	1	; select bank1
 18470  1781  0831               	movf	_INT_InterruptHandler^(0+128),w
 18471  1782  0432               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
 18472  1783  1903               	btfsc	3,2
 18473  1784  2F86               	goto	u366_21
 18474  1785  2F87               	goto	u366_20
 18475  1786                     u366_21:
 18476  1786  2F8C               	goto	i1l865
 18477  1787                     u366_20:
 18478  1787                     i1l4526:
 18479                           
 18480                           ;ext_int.c: 45: {;ext_int.c: 46: INT_InterruptHandler();
 18481  1787  0832               	movf	(_INT_InterruptHandler+1)^(0+128),w
 18482  1788  008A               	movwf	10
 18483  1789  0831               	movf	_INT_InterruptHandler^(0+128),w
 18484  178A  000A               	callw
 18485  178B  3197               	pagesel	$
 18486  178C                     i1l865:
 18487  178C  0008               	return
 18488  178D                     __end_of_INT_CallBack:
 18489                           
 18490                           	psect	text68
 18491  1703                     __ptext68:	
 18492 ;; *************** function _INT_DefaultInterruptHandler *****************
 18493 ;; Defined at:
 18494 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 18495 ;; Parameters:    Size  Location     Type
 18496 ;;		None
 18497 ;; Auto vars:     Size  Location     Type
 18498 ;;		None
 18499 ;; Return value:  Size  Location     Type
 18500 ;;                  1    wreg      void 
 18501 ;; Registers used:
 18502 ;;		None
 18503 ;; Tracked objects:
 18504 ;;		On entry : 0/0
 18505 ;;		On exit  : 0/0
 18506 ;;		Unchanged: 0/0
 18507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18512 ;;Total ram usage:        0 bytes
 18513 ;; Hardware stack levels used:    1
 18514 ;; This function calls:
 18515 ;;		Nothing
 18516 ;; This function is called by:
 18517 ;;		_EXT_INT_Initialize
 18518 ;;		_INT_CallBack
 18519 ;; This function uses a non-reentrant model
 18520 ;;
 18521                           
 18522                           
 18523                           ;psect for function _INT_DefaultInterruptHandler
 18524  1703                     _INT_DefaultInterruptHandler:
 18525  1703                     i1l871:	
 18526                           ;incstack = 0
 18527                           ; Regs used in _INT_DefaultInterruptHandler: []
 18528                           
 18529  1703  0008               	return
 18530  1704                     __end_of_INT_DefaultInterruptHandler:
 18531                           
 18532                           	psect	text69
 18533  0B53                     __ptext69:	
 18534 ;; *************** function _S1_ISR *****************
 18535 ;; Defined at:
 18536 ;;		line 648 in file "main.c"
 18537 ;; Parameters:    Size  Location     Type
 18538 ;;		None
 18539 ;; Auto vars:     Size  Location     Type
 18540 ;;		None
 18541 ;; Return value:  Size  Location     Type
 18542 ;;                  1    wreg      void 
 18543 ;; Registers used:
 18544 ;;		wreg, status,2, status,0
 18545 ;; Tracked objects:
 18546 ;;		On entry : 0/0
 18547 ;;		On exit  : 0/0
 18548 ;;		Unchanged: 0/0
 18549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18552 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18553 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18554 ;;Total ram usage:        1 bytes
 18555 ;; Hardware stack levels used:    1
 18556 ;; This function calls:
 18557 ;;		Nothing
 18558 ;; This function is called by:
 18559 ;;		_main
 18560 ;;		_INT_CallBack
 18561 ;; This function uses a non-reentrant model
 18562 ;;
 18563                           
 18564                           
 18565                           ;psect for function _S1_ISR
 18566  0B53                     _S1_ISR:
 18567  0B53                     i1l4288:	
 18568                           ;incstack = 0
 18569                           ; Regs used in _S1_ISR: [wreg+status,2+status,0]
 18570                           
 18571                           
 18572                           ;main.c: 649: PIE0bits.INTE = 0;
 18573  0B53  002E               	movlb	14	; select bank14
 18574  0B54  1016               	bcf	22,0	;volatile
 18575  0B55                     i1l4290:
 18576                           
 18577                           ;main.c: 650: _delay((unsigned long)((200)*(1000000/4000.0)));
 18578  0B55  3041               	movlw	65
 18579  0B56  00F0               	movwf	??_S1_ISR
 18580  0B57  30EE               	movlw	238
 18581  0B58                     u517_27:
 18582  0B58  0B89               	decfsz	9,f
 18583  0B59  2B58               	goto	u517_27
 18584  0B5A  0BF0               	decfsz	??_S1_ISR,f
 18585  0B5B  2B58               	goto	u517_27
 18586  0B5C  3200               	nop2
 18587  0B5D                     i1l4292:
 18588                           
 18589                           ;main.c: 652: if(mode == 0 && (clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigger
      +                          )){
 18590  0B5D  0020               	movlb	0	; select bank0
 18591  0B5E  085A               	movf	_mode,w
 18592  0B5F  045B               	iorwf	_mode+1,w
 18593  0B60  1D03               	btfss	3,2
 18594  0B61  2B63               	goto	u354_21
 18595  0B62  2B64               	goto	u354_20
 18596  0B63                     u354_21:
 18597  0B63  2B77               	goto	i1l4302
 18598  0B64                     u354_20:
 18599  0B64                     i1l4294:
 18600  0B64  0850               	movf	_clkAlarm+3,w
 18601  0B65  1D03               	btfss	3,2
 18602  0B66  2B68               	goto	u355_21
 18603  0B67  2B69               	goto	u355_20
 18604  0B68                     u355_21:
 18605  0B68  2B73               	goto	i1l4300
 18606  0B69                     u355_20:
 18607  0B69                     i1l4296:
 18608  0B69  0855               	movf	_tempAlarm+1,w
 18609  0B6A  1D03               	btfss	3,2
 18610  0B6B  2B6D               	goto	u356_21
 18611  0B6C  2B6E               	goto	u356_20
 18612  0B6D                     u356_21:
 18613  0B6D  2B73               	goto	i1l4300
 18614  0B6E                     u356_20:
 18615  0B6E                     i1l4298:
 18616  0B6E  0852               	movf	_lumAlarm+1,w
 18617  0B6F  1903               	btfsc	3,2
 18618  0B70  2B72               	goto	u357_21
 18619  0B71  2B73               	goto	u357_20
 18620  0B72                     u357_21:
 18621  0B72  2B77               	goto	i1l4302
 18622  0B73                     u357_20:
 18623  0B73                     i1l4300:
 18624                           
 18625                           ;main.c: 653: clkAlarm.trigger = 0;
 18626  0B73  01D0               	clrf	_clkAlarm+3
 18627                           
 18628                           ;main.c: 654: tempAlarm.trigger = 0;
 18629  0B74  01D5               	clrf	_tempAlarm+1
 18630                           
 18631                           ;main.c: 655: lumAlarm.trigger = 0;
 18632  0B75  01D2               	clrf	_lumAlarm+1
 18633                           
 18634                           ;main.c: 656: } else{
 18635  0B76  2B9F               	goto	i1l4314
 18636  0B77                     i1l4302:
 18637                           
 18638                           ;main.c: 657: if(mode != 1){
 18639  0B77  035A               	decf	_mode,w
 18640  0B78  045B               	iorwf	_mode+1,w
 18641  0B79  1903               	btfsc	3,2
 18642  0B7A  2B7C               	goto	u358_21
 18643  0B7B  2B7D               	goto	u358_20
 18644  0B7C                     u358_21:
 18645  0B7C  2B81               	goto	i1l4306
 18646  0B7D                     u358_20:
 18647  0B7D                     i1l4304:
 18648                           
 18649                           ;main.c: 658: mode++;
 18650  0B7D  3001               	movlw	1
 18651  0B7E  07DA               	addwf	_mode,f
 18652  0B7F  3000               	movlw	0
 18653  0B80  3DDB               	addwfc	_mode+1,f
 18654  0B81                     i1l4306:
 18655                           
 18656                           ;main.c: 659: };main.c: 660: if(mode == 1){
 18657  0B81  035A               	decf	_mode,w
 18658  0B82  045B               	iorwf	_mode+1,w
 18659  0B83  1D03               	btfss	3,2
 18660  0B84  2B86               	goto	u359_21
 18661  0B85  2B87               	goto	u359_20
 18662  0B86                     u359_21:
 18663  0B86  2B9F               	goto	i1l4314
 18664  0B87                     u359_20:
 18665  0B87                     i1l4308:
 18666                           
 18667                           ;main.c: 661: editingClockAlarm++;
 18668  0B87  3001               	movlw	1
 18669  0B88  07DC               	addwf	_editingClockAlarm,f
 18670  0B89  3000               	movlw	0
 18671  0B8A  3DDD               	addwfc	_editingClockAlarm+1,f
 18672                           
 18673                           ;main.c: 662: if(editingClockAlarm > 3){
 18674  0B8B  085D               	movf	_editingClockAlarm+1,w
 18675  0B8C  3A80               	xorlw	128
 18676  0B8D  00F0               	movwf	??_S1_ISR
 18677  0B8E  3080               	movlw	128
 18678  0B8F  0270               	subwf	??_S1_ISR,w
 18679  0B90  1D03               	skipz
 18680  0B91  2B94               	goto	u360_25
 18681  0B92  3004               	movlw	4
 18682  0B93  025C               	subwf	_editingClockAlarm,w
 18683  0B94                     u360_25:
 18684  0B94  1C03               	skipc
 18685  0B95  2B97               	goto	u360_21
 18686  0B96  2B98               	goto	u360_20
 18687  0B97                     u360_21:
 18688  0B97  2B9F               	goto	i1l4314
 18689  0B98                     u360_20:
 18690  0B98                     i1l4310:
 18691                           
 18692                           ;main.c: 663: editingClockAlarm = 0;
 18693  0B98  0020               	movlb	0	; select bank0
 18694  0B99  01DC               	clrf	_editingClockAlarm
 18695  0B9A  01DD               	clrf	_editingClockAlarm+1
 18696  0B9B                     i1l4312:
 18697                           
 18698                           ;main.c: 664: mode++;
 18699  0B9B  3001               	movlw	1
 18700  0B9C  07DA               	addwf	_mode,f
 18701  0B9D  3000               	movlw	0
 18702  0B9E  3DDB               	addwfc	_mode+1,f
 18703  0B9F                     i1l4314:
 18704                           
 18705                           ;main.c: 665: };main.c: 666: };main.c: 667: };main.c: 668: (PIR0bits.INTF = 0);
 18706  0B9F  002E               	movlb	14	; select bank14
 18707  0BA0  100C               	bcf	12,0	;volatile
 18708  0BA1                     i1l4316:
 18709                           
 18710                           ;main.c: 669: PIE0bits.INTE = 1;
 18711  0BA1  1416               	bsf	22,0	;volatile
 18712  0BA2                     i1l1366:
 18713  0BA2  0008               	return
 18714  0BA3                     __end_of_S1_ISR:
 18715  007E                     btemp	set	126	;btemp
 18716  007E                     int$flags	set	126
 18717  007E                     wtemp0	set	126
 18718                           
 18719                           	psect	config
 18720                           
 18721                           ;Config register CONFIG1 @ 0x8007
 18722                           ;	External Oscillator mode selection bits
 18723                           ;	FEXTOSC = OFF, Oscillator not enabled
 18724                           ;	Power-up default value for COSC bits
 18725                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 18726                           ;	Clock Out Enable bit
 18727                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 18728                           ;	Clock Switch Enable bit
 18729                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 18730                           ;	Fail-Safe Clock Monitor Enable bit
 18731                           ;	FCMEN = ON, FSCM timer enabled
 18732  8007                     	org	32775
 18733  8007  3FEC               	dw	16364
 18734                           
 18735                           ;Config register CONFIG2 @ 0x8008
 18736                           ;	Master Clear Enable bit
 18737                           ;	MCLRE = ON, MCLR pin is Master Clear function
 18738                           ;	Power-up Timer Enable bit
 18739                           ;	PWRTE = OFF, PWRT disabled
 18740                           ;	Low-Power BOR enable bit
 18741                           ;	LPBOREN = OFF, ULPBOR disabled
 18742                           ;	Brown-out reset enable bits
 18743                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 18744                           ;	Brown-out Reset Voltage Selection
 18745                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 18746                           ;	Zero-cross detect disable
 18747                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 18748                           ;	Peripheral Pin Select one-way control
 18749                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 18750                           ;	Stack Overflow/Underflow Reset Enable bit
 18751                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 18752                           ;	Background Debugger
 18753                           ;	DEBUG = OFF, Background Debugger disabled
 18754  8008                     	org	32776
 18755  8008  3FFF               	dw	16383
 18756                           
 18757                           ;Config register CONFIG3 @ 0x8009
 18758                           ;	WDT Period Select bits
 18759                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 18760                           ;	WDT operating mode
 18761                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 18762                           ;	WDT Window Select bits
 18763                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 18764                           ;	WDT input clock selector
 18765                           ;	WDTCCS = SC, Software Control
 18766  8009                     	org	32777
 18767  8009  3F9F               	dw	16287
 18768                           
 18769                           ;Config register CONFIG4 @ 0x800A
 18770                           ;	UserNVM self-write protection bits
 18771                           ;	WRT = OFF, Write protection off
 18772                           ;	Scanner Enable bit
 18773                           ;	SCANE = available, Scanner module is available for use
 18774                           ;	Low Voltage Programming Enable bit
 18775                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 18776  800A                     	org	32778
 18777  800A  3FFF               	dw	16383
 18778                           
 18779                           ;Config register CONFIG5 @ 0x800B
 18780                           ;	UserNVM Program memory code protection bit
 18781                           ;	CP = OFF, Program Memory code protection disabled
 18782                           ;	DataNVM code protection bit
 18783                           ;	CPD = OFF, Data EEPROM code protection disabled
 18784  800B                     	org	32779
 18785  800B  3FFF               	dw	16383

Data Sizes:
    Strings     31
    Constant    10
    Data        7
    BSS         37
    Persistent  46
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     45      80
    BANK1            80     17      40
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    differenceBetweenTimePeriod@diff	PTR struct Time size(1) Largest target is 3
		 -> menuLCD_ISR@diff(BANK0[3]), 

    LCDstr@p	PTR unsigned char  size(2) Largest target is 8
		 -> STR_7(CODE[4]), menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S1_ISR(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> S1_ISR(), INT_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR5_ISR->_monitoring_ISR
    _monitoring_ISR->i1_DATAEE_WriteByte
    _tsttc->i1_WriteI2C
    _menuLCD_ISR->_LCDstr
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->i1_LCDsend2x4
    _LCDcmd->i1_LCDsend2x4
    i1_LCDsend2x4->i1_WriteI2C
    _TMR1_ISR->_Clock_ISR
    _Clock_ISR->i1_DATAEE_WriteByte
    i1_DATAEE_WriteByte->___wmul
    _INT_CallBack->_S1_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR3_ISR->_menuLCD_ISR
    _menuLCD_ISR->_sprintf

Critical Paths under _main in BANK1

    _main->_LCDinit
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    7783
                                              9 BANK1      8     8      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
            _INT_SetInterruptHandler
                            _LCDinit
                 _PWM6_LoadDutyValue
              _PWM_Output_D4_Disable
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                     _TMR2_StopTimer
           _TMR3_SetInterruptHandler
           _TMR5_SetInterruptHandler
                          _editClock
                            _editLum
                           _editTemp
                   _i2c1_driver_open
                       _toggleAlarms
 ---------------------------------------------------------------------------------
 (1) _toggleAlarms                                         1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _editTemp                                             1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editLum                                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editClock                                            1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StopTimer                                       0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (2) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     696
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0     174
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     174
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     174
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Output_D4_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     270
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     780
                                              8 BANK1      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend2x4                                           6     5      1     736
                                              2 BANK1      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK1      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     4     1      3    4017
                                              0 BANK1      4     1      3
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      2     0      2    1184
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0   10006
                            _INT_ISR
                           _TMR1_ISR
                           _TMR3_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR5_ISR                                             0     0      0    2511
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                     _monitoring_ISR *
 ---------------------------------------------------------------------------------
 (6) _monitoring_ISR                                       3     3      0    2271
                                             10 COMMON     3     3      0
           _ADCC_GetSingleConversion
                             ___wmul
                              _tsttc
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (7) _tsttc                                                2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (6) _TMR5_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR5_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0    6230
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
                        _menuLCD_ISR *
 ---------------------------------------------------------------------------------
 (6) _menuLCD_ISR                                         24    24      0    5990
                                             21 BANK0     24    24      0
                            _LCDchar
                             _LCDcmd
                             _LCDstr
               _PWM_Output_D4_Enable
                    _TMR2_StartTimer
        _differenceBetweenTimePeriod
                            _sprintf
               i1_PWM6_LoadDutyValue
            i1_PWM_Output_D4_Disable
                   i1_TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (7) i1_TMR2_StopTimer                                     0     0      0       0
                        i1_TMR2_Stop
 ---------------------------------------------------------------------------------
 (8) i1_TMR2_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM_Output_D4_Disable                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM6_LoadDutyValue                                 4     2      2     122
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             29    21      8    3411
                                              0 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    1156
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _differenceBetweenTimePeriod                          8     1      7     595
                                              0 COMMON     8     1      7
 ---------------------------------------------------------------------------------
 (7) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (8) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PWM_Output_D4_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LCDstr                                               6     4      2     755
                                              9 COMMON     5     3      2
                                              0 BANK0      1     1      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (8) _LCDchar                                              1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (7) _LCDcmd                                               1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (9) i1_LCDsend2x4                                         6     5      1     384
                                              2 COMMON     6     5      1
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) i1_WriteI2C                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _TMR3_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0    1265
                   Absolute function *
                          _Clock_ISR *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Clock_ISR                                            1     1      0    1025
                                             10 COMMON     1     1      0
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (7) i1_DATAEE_WriteByte                                   4     1      3    1025
                                              6 COMMON     4     1      3
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         0     0      0       0
                   Absolute function *
        _INT_DefaultInterruptHandler *
                             _S1_ISR *
 ---------------------------------------------------------------------------------
 (7) _S1_ISR                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _INT_SetInterruptHandler
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _PWM6_LoadDutyValue
   _PWM_Output_D4_Disable
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_StopTimer
     _TMR2_Stop
   _TMR3_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _editClock
   _editLum
   _editTemp
   _i2c1_driver_open
   _toggleAlarms

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _S1_ISR *
   _TMR1_ISR
     Absolute function(Fake) *
     _Clock_ISR *
       i1_DATAEE_WriteByte
         ___wmul (ARG)
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *
     _menuLCD_ISR *
       _LCDchar
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDcmd
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDstr
         _LCDchar
           i1_LCDsend2x4
             i1_WriteI2C
       _PWM_Output_D4_Enable
       _TMR2_StartTimer
         _TMR2_Start
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       i1_PWM6_LoadDutyValue
       i1_PWM_Output_D4_Disable
       i1_TMR2_StopTimer
         i1_TMR2_Stop
   _TMR5_ISR
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _monitoring_ISR *
       _ADCC_GetSingleConversion
       ___wmul
       _tsttc
         _ReadI2C
         i1_WriteI2C
       i1_DATAEE_WriteByte
         ___wmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     11      28       7       50.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      86      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      86      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Nov 09 20:03:09 2020

                                       _t 0057          __end_of_TMR5_SetInterruptHandler 1741  
                              i1_WriteI2C 0B08                                        l30 0CA7  
                                      l33 0C6F                                        l42 0C91  
                                      l35 0C74                                        l47 0CA5  
                     ___wmul@multiplicand 0072                         ??_TMR5_WriteTimer 0072  
             __size_of_PWM6_LoadDutyValue 0019                                       l124 0B07  
                                     l243 177F                                       l182 176A  
                                     l176 0986                                       l179 1773  
                                     l429 1734                                       l463 0948  
                                     l731 1799                                       l493 173A  
                                     l717 1740                                       l734 0898  
                                     l575 087F                                       l399 0929  
                                     l761 07FF                                       l842 099F  
                                     l844 09A3                                       l845 09AA  
                                     l687 0967                                       l848 17A8  
                                     l776 1716                                       l874 080D  
                                     l779 1722                                       l868 172E  
                                     _PR2 028D                           _timer1ReloadVal 00BB  
                 __size_of_PMD_Initialize 0008                           _TMR2_Initialize 07F2  
                                     wreg 0009                               ?_LCDsend2x4 00A2  
                         __end_of_LCDchar 1763                                      l1040 0BEF  
                                    l1041 0BF1                                      l1130 0D40  
                                    l1131 0D42                                      l1044 0BF5  
                                    l1028 0BB4                                      l1029 0BB6  
                                    l1312 0BF6                                      l1161 0DF1  
                                    l1145 0D92                                      l1154 0DD2  
                                    l1331 09D5                                      l1164 0D1D  
                                    l1340 09AE                                      l1157 0DE8  
                                    l1158 0DEA                                      l1328 0C4D  
                                    l1352 0A11                                      l1337 09F8  
                                    l1346 09D1                                      l1195 1713  
                         _timer3ReloadVal 006E                                      l4100 1729  
                                    l1356 0A24                                      l1349 09F9  
                                    l1381 045E                                      l5000 0CB1  
                                    l1385 0462                                      l4050 0C53  
                                    l5010 0CD1                                      l5002 0CB5  
                                    l1386 0465                                      l1387 0468  
                                    l4060 0C6D                                      l5020 0CF5  
                                    l5012 0CD9                                      l5004 0CBD  
                                    l5100 0A22                                      l4070 0C86  
                                    l4062 0C79                                      l5030 0D13  
                                    l5022 0CF9                                      l5014 0CDD  
                                    l5006 0CC1                                      l4072 0C96  
                                    l4056 0C58                                      l4048 0C50  
                                    l5024 0D01                                      l5016 0CE5  
                                    l5008 0CCD                                      l5032 1711  
                                    l4400 1794                                      l4080 1735  
                                    l5040 0C09                                      l5200 0401  
                                    l4058 0C62                                      l5026 0D07  
                                    l5018 0CE9                                      l4402 0869  
                                    l4410 092D                                      l5050 0C26  
                                    l5042 0C10                                      l5034 0BFB  
                                    l5210 0441                                      l5202 040E  
                                    l4068 0C7B                                      l5028 0D0D  
                                    l4404 087B                                      l4420 093C  
                                    l4412 092F                                      l5052 0C2D  
                                    l5044 0C17                                      l5036 0C01  
                                    l5060 0C44                                      l5220 0447  
                                    l5212 0443                                      l5204 041B  
                                    l4406 087D                                      l4350 0AD3  
                                    l4078 172F                                      l4430 07F6  
                                    l4422 093D                                      l4414 0931  
                                    l5062 0C4B                                      l5054 0C33  
                                    l5046 0C1D                                      l5038 0C07  
                                    l5070 09E5                                      l5230 0450  
                                    l5222 044A                                      l5214 0444  
                                    l5206 0428                                      l5150 0291  
                                    l4360 0ADE                                      l4352 0AD5  
                                    l4344 0AC9                                      l4432 07F9  
                                    l4424 0945                                      l4416 0933  
                                    l4408 092A                                      l4096 173B  
                                    l4440 094C                                      l5056 0C35  
                                    l5048 0C1F                                      l5080 09B2  
                                    l5072 09E6                                      l5064 09D2  
                                    l5232 0453                                      l5224 044C  
                                    l5216 0445                                      l5208 0435  
                                    l5160 02BC                                      l5152 0294  
                                    l4530 0BA5                                      l4370 0AF2  
                                    l4362 0AE0                                      l4354 0AD7  
                                    l4346 0ACF                                      l4434 07FA  
                                    l4426 07F2                                      l4418 093A  
                                    l4450 095B                                      l4442 094E  
                                    l4522 1714                                      l5058 0C3B  
                                    l5090 09D0                                      l5082 09B8  
                                    l5066 09D9                                      l5074 09EF  
                                    l5242 045F                                      l5234 0454  
                                    l5226 044D                                      l5218 0446  
                                    l5170 02CE                                      l5162 02C8  
                                    l5154 02B7                                      l4540 0BE0  
                                    l4532 0BBA                                      l4460 080B  
                                    l4380 0AFD                                      l4372 0AF4  
                                    l4364 0AE2                                      l4356 0AD9  
                                    l4348 0AD1                                      l4436 07FC  
                                    l4428 07F5                                      l4452 095C  
                                    l4444 0950                                      l5084 09BE  
                                    l5076 09F7                                      l5068 09DF  
                                    l5092 09FE                                      l5236 0457  
                                    l5244 046B                                      l5228 044F  
                                    l5172 02E6                                      l5164 02CA  
                                    l5180 0307                                      l5156 02B9  
                                    l5148 0287                                      l4534 0BC9  
                                    l4550 0D55                                      l4542 0D20  
                                    l4390 176B                                      l4382 0B00  
                                    l4374 0AF6                                      l4366 0AEE  
                                    l4358 0ADC                                      l4470 0914  
                                    l4462 090B                                      l4454 0964  
                                    l4446 0952                                      l4438 0949  
                                    l5086 09BF                                      l5078 09AB  
                                    l5094 0A04                                      l5270 0471  
                                    l5190 03C1                                      l5182 030D  
                                    l5174 02EA                                      l5158 02BB  
                                    l4536 0BCD                                      l4528 0BA5  
                                    l4560 0D83                                      l4552 0D59  
                                    l4544 0D25                                      l4456 0800  
                                    l4392 176E                                      l4384 0B02  
                                    l4376 0AF8                                      l4368 0AF0  
                                    l4472 091B                                      l4464 090E  
                                    l4448 0959                                      l5088 09C8  
                                    l5096 0A0B                                      l5192 03CD  
                                    l5184 0312                                      l5176 02F7  
                         __end_of_LCDinit 0D1E                                      l4538 0BDC  
                                    l4570 0DBD                                      l4562 0D92  
                                    l4554 0D68                                      l4546 0D31  
                                    l4458 0803                                      l4394 176F  
                                    l4386 0B04                                      l4378 0AFB  
                                    l4474 091D                                      l4466 0910  
                                    l5098 0A1A                                      l5194 03DA  
                                    l5186 03AA                                      l5178 0305  
                                    l4900 0993                                      l4572 0DC3  
                                    l4564 0D99                                      l4556 0D6E  
                                    l4548 0D46                                      l4396 1772  
                                    l4388 1763                                      l4476 091E  
                                    l4468 0912                                      l5196 03E7  
                                    l5188 03B6                                      l4910 099C  
                                    l4902 0997                                      l4574 0DD2  
                                    l4566 0DA8                                      l4558 0D7D  
                                    l4398 178D                                      l4478 0926  
                                    l5198 03F4                                      l4920 17A2  
                                    l4912 099E                                      l4904 0998  
                                    l4576 0DD9                                      l4568 0DAE  
                                    l4840 0974                                      l4832 0968  
                                    l4922 17A3                                      l4914 09A4  
                                    l4906 0999                                      l4578 0DEE  
                                    l4850 0983                                      l4842 0977  
                                    l4834 096B                                      l4924 17A4  
                                    l4916 179A                                      l4908 099A  
                                    l4844 097A                                      l4836 096E  
                                    l4852 1774                                      l4926 17A5  
                                    l4918 179E                                      l4846 097D  
                                    l4838 0971                                      l4854 1779  
                                    l4928 17A6                                      l4848 0980  
                                    l4856 177A                                      l4858 177C  
                                    l4892 0880                                      l4894 171F  
                                    l4896 0987                                      l4898 098F  
                                    l4998 0CA8                                      _ALAF 0065  
                         __end_of_LCDsend 0BF6                                      STR_1 1800  
                                    STR_2 1800                                      STR_3 1819  
                                    STR_4 1819                                      STR_5 1820  
                                    STR_6 1820                                      STR_7 1825  
                                    u3000 0C6D                                      u3001 0C6C  
                                    u3010 0C74                                      u3011 0C73  
                                    u3020 0C79                                      u3021 0C78  
                                    _LATA 0016                                      u3030 0C86  
                                    _LATB 0017                           __end_of_INT_ISR 1729  
                                    u3031 0C85                                      _LATC 0018  
                                    u3040 0C91                                      _LATD 0019  
                                    u3041 0C90                                      _LATE 001A  
                                    u3050 0C96                                      u3051 0C95  
                                    u3060 0CA5                                      u3061 0CA4  
                                    u5000 045D                                      u5001 045C  
                                    _T2PR 028D                                      u5017 0A15  
                                    u4330 1779                                      u5107 0CE2  
                                    u5027 09EA                                      u4331 1778  
                                    u3700 0BDC                                      u3701 0BDB  
                                    u5117 0CEA                                      u5037 09C3  
                                    u3710 0BEF                                      u3711 0BEE  
                                    u5127 0CF6                                      u5047 0C3F  
                                    u3720 0BF5                                      u3800 0DA8  
                                    u3721 0BF4                                      u3801 0DA7  
                                    u5137 0CFE                                      u5057 0CAC  
                                    u3810 0DBD                                      u3811 0DBC  
                                    u5147 0D1A                                      u5067 0CBA  
                                    u4380 09A3                                      u3820 0DD2  
                                    u3740 0D40                                      u4700 0C1D  
                                    _PMD0 0796                                      u4381 09A2  
                                    u5157 0DEF                                      u3821 0DD1  
                                    u3741 0D3F                                      u5077 0CC2  
                                    u4701 0C1C                                      _PMD1 0797  
                                    i1l30 0B52                                      i1l22 08AC  
                                    u3670 0BB4                                      u3830 0DE8  
                                    u3750 0D46                                      u4710 0C2D  
                                    _PMD2 0798                                      i1l23 08AD  
                                    u3671 0BB3                                      u3831 0DE7  
                                    u3751 0D45                                      u3735 0D28  
                                    u5087 0CCE                                      u4375 0891  
                                    u4711 0C2C                                      _PMD3 0799  
                                    u3680 0BBA                                      u3840 0DEE  
                                    u3760 0D55                                      u4720 0C33  
                                    u4800 09FE                                      _PMD4 079A  
                                    i1l33 0B24                                      u3681 0BB9  
                                    u3841 0DED                                      u3761 0D54  
                                    u5097 0CD6                                      u4721 0C32  
                                    u4801 09FD                                      _PMD5 079B  
                                    i1l42 0B42                                      i1l26 08B2  
                                    u3690 0BC9                                      u3770 0D68  
                                    u4730 0C4B                                      u4810 0A04  
                                    i1l35 0B29                                      u3691 0BC8  
                                    u3771 0D67                                      u4731 0C4A  
                                    u4811 0A03                                      u2980 0C57  
                                    u3780 0D7D                                      u4660 0BFB  
                                    u4740 09D9                                      u4820 0A22  
                                    u2981 0C56                                      u3781 0D7C  
                                    u4661 0BFA                                      u4741 09D8  
                                    u4821 0A21                                      u2990 0C62  
                                    u3790 0D92                                      u4670 0C01  
                                    u4750 09E5                                      i1l47 0B51  
                                    u2991 0C61                                      u3791 0D91  
                                    u4671 0C00                                      u4751 09E4  
                                    u4680 0C07                                      u4760 09F7  
                                    u4681 0C06                                      u4761 09F6  
                                    u4690 0C17                                      u4770 09B2  
                                    u4691 0C16                                      u4771 09B1  
                                    u4780 09BE                                      u4781 09BD  
                                    _TALA 0066                                      u4790 09D0  
                                    u4950 02C8                                      u4791 09CF  
                                    u4951 02C7                                      u4960 02F7  
                                    u4961 02F6                                      u4970 0305  
                                    u4971 0304                                      u4980 030D  
                                    u4981 030C                                      u4965 02F3  
                                    u4990 0312                                      u4991 0311  
                                    _NREG 00C7                                      _PMON 00C6  
                                    _TMR2 028C                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                             main@notInit 00AD                              ?_menuLCD_ISR 0070  
                                    _main 0287                                      _mode 005A  
                                    _temp 0063                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
     __end_of_INT_DefaultInterruptHandler 1704               _INT_DefaultInterruptHandler 1703  
                                    start 004C                           _timer5ReloadVal 00B5  
                         _TMR3_Initialize 092A           __end_of_INT_SetInterruptHandler 172F  
              ??_TMR1_SetInterruptHandler 00A2                           __end_of_ReadI2C 08B3  
               __size_of_DATAEE_WriteByte 0024            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 1774                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                __end_of_i2c1_driver_open 1780                                     ?_main 0070  
                                   _ADCLK 0098                                     _ADCNT 010C  
                                   _ADPCH 009E                                     _ADREF 009A  
                                   _ADPRE 009C                                     _ADRPT 010D  
                                   _T1CLK 0211                                     _T1CON 020E  
                                   _T3CLK 0217                                     _T2CON 028E  
                                   _T3CON 0214                                     _T5CLK 021D  
                                   _T2HLT 028F                                     _T5CON 021A  
                         __end_of___lwdiv 0AC9                                     _T2TMR 028C  
                                   _T2RST 0291                                     i1l413 17B9  
                                   i1l432 1704                           __end_of___lwmod 0A8D  
                                   i1l361 003B                                     i1l426 083A  
                                   i1l362 004A                                     i1l354 0013  
                                   i1l363 0044                                     i1l701 17DB  
                                   i1l357 0023                                     i1l359 002F  
                                   i1l720 0003                                     i1l368 004A  
                                   i1l490 0851                                     i1l714 0868  
                                   i1l477 17CA                                     i1l734 0823  
                                   i1l590 17FF                                     i1l496 0002  
                                   i1l842 08E1                                     i1l770 170A  
                                   i1l587 17F6                                     i1l844 08E5  
                                   i1l861 1728                                     i1l845 08EB  
                                   i1l773 171A                                     i1l871 1703  
                                   i1l776 1710                                     i1l952 0EFF  
                                   i1l865 178C                                     i1l953 0F00  
                                   i1l779 171E                                     i1l964 0F2F  
                                   i1l965 0F30                                     i1l949 0EF3  
                                   i1l990 0F87                                     i1l982 0F72  
                                   i1l983 0F73                                     i1l976 0F61  
                                   i1l985 0F77                                     i1l977 0F63  
                                   i1l989 0F86                                     _OSCEN 0891  
                                   _TMR1H 020D                                     _TMR1L 020C  
                                   _TMR3H 0213                                     _TMR3L 0212  
                                   _TMR5H 0219                                     _TMR5L 0218  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                                     _WPUC3 7A7B  
                                   _WPUC4 7A7C                           __end_of_editLum 09D2  
                         _PWM6_Initialize 178D         __size_of_TMR3_SetInterruptHandler 0006  
               ?_TMR3_SetInterruptHandler 00A0                  __end_ofi1_TMR2_StopTimer 171F  
                        __end_of_TMR1_ISR 083B                          __end_of_TMR3_ISR 0852  
                        __end_of_TMR5_ISR 0869                           _DATAEE_ReadByte 179A  
          ??_TMR3_DefaultInterruptHandler 0070                           __end_of_dpowers 1819  
                      __size_of_TMR2_Stop 0003                               ?_TMR2_Start 0070  
                         __end_of_isdigit 17EE                                     main@i 00AF  
                                   _tsttc 0EF3                   __end_of_TMR1_Initialize 092A  
                                   pclath 000A                            menuLCD_ISR@str 003B  
                                   status 0003                                     wtemp0 007E  
                         __end_of_sprintf 0621                    ??_PWM_Output_D4_Enable 0070  
                         _TMR2_StartTimer 1717                           _TMR1_WriteTimer 17A9  
                         _TMR5_Initialize 0949                           __initialization 004E  
                            ?i1_TMR2_Stop 0070                              __end_of_main 0484  
                             ?i1_WriteI2C 0070                       __size_of_LCDsend2x4 00D4  
                 __end_of_TMR2_Initialize 0800               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 00A9                  _TMR5_SetInterruptHandler 173B  
                      __size_of_Clock_ISR 0101                     _TMR3_InterruptHandler 00B7  
        differenceBetweenTimePeriod@start 0070                                 ??_LCDchar 0078  
                               ??_LCDinit 00A8                                 ??_LCDsend 00A2  
                               ??_INT_ISR 0071                __end_ofi1_DATAEE_WriteByte 08EC  
                                  _ADACCH 0091                                    _ADACCL 0090  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  _ADLTHH 010F                                    _ADLTHL 010E  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                                  _ADUTHL 0110                          __end_of_WriteI2C 0CA8  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                                    _T1GATE 0210  
                                  _T1GCON 020F                                    ?_tsttc 0070  
                                  _T3GATE 0216                                    _T3GCON 0215  
                                  _T5GATE 021C                                    _T5GCON 021B  
                                  _RA6PPS 0F16                                    i1l1001 0FB6  
                                  i1l1002 0FB7                                    _RC3PPS 0F23  
                                  i1l1020 0FFA                                    i1l1013 0FE8  
                                  i1l1014 0FEA                                    i1l1023 0FFF  
                                  i1l1130 075D                   TMR1_WriteTimer@timerVal 0070  
                                  i1l1131 075E                                    i1l1019 0FF9  
                                  _RC4PPS 0F24                                    i1l1231 0EF2  
                                  i1l1161 07F1                                    i1l1145 07A1  
                                  i1l1154 07D7                                    i1l1170 1762  
                                  i1l1251 0184                                    i1l1157 07E9  
                                  i1l1245 0198                                    i1l1309 073E  
                                  i1l1158 07EA                                    i1l2046 17ED  
                                  i1l1167 1753                                    i1l1176 08CD  
                                  i1l1192 1707                                    i1l4000 0A8F  
                                  i1l1248 0131                                    _ODCONA 0F3A  
                                  i1l4010 0AA5                                    i1l4002 0A95  
                                  _ODCONB 0F45                                    i1l1195 170D  
                                  i1l1267 024E                                    i1l1283 0286  
                                  i1l1259 01A7                                    _ODCONC 0F50  
                                  i1l4012 0AB4                                    i1l4004 0A98  
                                  i1l4020 0AC4                                    _ODCOND 0F5B  
                                  i1l1189 0A58                                    _ODCONE 0F66  
                                  i1l1366 0BA2                                    i1l4014 0AB8  
                                  i1l4006 0A9D                                    i1l4030 0A67  
                                  i1l4110 0F1F                                    i1l4102 0EF3  
                                  i1l4016 0AB9                                    i1l4008 0AA1  
                                  i1l4040 0A82                                    i1l4032 0A6B  
                                  i1l4024 0A59                                    i1l4200 04CF  
                                  i1l4120 0F4F                                    i1l4112 0F23  
                                  i1l4104 0F04                                    i1l4018 0ABE  
                                  i1l4034 0A6F                                    i1l4026 0A5F  
                                  i1l4042 0A88                                    i1l4210 0506  
                                  i1l4202 04DE                                    i1l1554 04A1  
                                  i1l4130 0F96                                    i1l4122 0F55  
                                  i1l4114 0F34                                    i1l4106 0F0F  
                                  i1l4300 0B73                                    i1l4036 0A79  
                                  i1l4028 0A62                                    i1l1572 0554  
                                  i1l4220 051E                                    i1l4212 050D  
                                  i1l4204 04E2                                    i1l4140 0FC6  
                                  i1l4132 0F9A                                    i1l4124 0F67  
                                  i1l4116 0F3F                                    i1l4108 0F13  
                                  i1l4310 0B98                                    i1l4302 0B77  
                                  i1l4038 0A7D                                    i1l4230 053A  
                                  i1l4214 0511                                    i1l4046 170E  
                                  i1l4150 0FFE                                    i1l4142 0FCA  
                                  i1l4134 0FA6                                    i1l4126 0F7B  
                                  i1l4118 0F43                                    i1l5110 000F  
                                  i1l4312 0B9B                                    i1l4304 0B7D  
                                  i1l4160 08B8                                    i1l4240 0568  
                                  i1l4232 0544                                    i1l4216 0515  
                                  i1l4208 04EE                                    i1l4320 171B  
                                  i1l4144 0FD6                                    i1l4136 0FAA  
                                  i1l4128 0F8B                                    i1l5120 002B  
                                  i1l5112 0017                                    i1l1593 08F6  
                                  i1l4306 0B81                                    i1l4314 0B9F  
                                  i1l4330 08DA                                    i1l4322 08CE  
                                  i1l4154 174E                                    i1l4170 0A3C  
                                  i1l4162 0A25                                    i1l4250 0580  
                                  i1l4242 056B                                    i1l4234 054A  
                                  i1l4226 0520                                    i1l4218 0519  
                                  i1l4090 17F5                                    i1l4082 17EF  
                                  i1l4146 0FDC                                    i1l4138 0FBB  
                                  i1l5130 0048                                    i1l5122 0033  
                                  i1l5114 001B                                    i1l5106 0006  
                                  i1l1595 090A                                    i1l4316 0BA1  
                                  i1l4308 0B87                                    i1l4340 08E6  
                                  i1l4332 08DB                                    i1l4324 08D5  
                                  i1l4500 17C2                                    i1l4156 08B3  
                                  i1l4172 0A42                                    i1l4164 0A26  
                                  i1l4260 05A2                                    i1l4252 0586  
                                  i1l4244 056F                                    i1l4236 0550  
                                  i1l4180 048B                                    i1l4092 17FB  
                                  i1l4084 17F2                                    i1l4148 0FEE  
                                  i1l5124 0037                                    i1l5116 001F  
                                  i1l5108 000B                   __end_of_TMR3_Initialize 0949  
                                  i1l1589 0620                                    i1l4334 08DC  
                                  i1l4326 08D7                                    i1l4502 17C4  
                                  i1l4158 08B4                                    i1l4174 0A48  
                                  i1l4166 0A2C                                    i1l4270 05C4  
                                  i1l4262 05A9                                    i1l4254 058D  
                                  i1l4246 0575                                    i1l4238 055F  
                                  i1l4182 0491                                    i1l4318 080E  
                                  i1l4342 170B                                    i1l4510 17D0  
                                  i1l4086 17F3                                    i1l5126 003F  
                                  i1l5118 0027                                    i1l4336 08DE  
                                  i1l4328 08D9                                    i1l4600 0E56  
                                  i1l4504 17C6                                    i1l4176 1705  
                                  i1l4168 0A32                                    i1l4280 05FF  
                                  i1l4264 05AD                                    i1l4256 0591  
                                  i1l4272 05C8                                    i1l4248 057C  
                                  i1l4192 04A6                                    i1l4184 0498  
                                  i1l4520 17D9                                    i1l4512 17D1  
                                  i1l4088 17F4                                    i1l1865 0AC8  
                                  i1l4290 0B55                                    i1l4338 08E0  
                                  i1l4610 0E92                                    i1l4602 0E62  
                                  i1l4506 17C8                                    i1l4098 1717  
                                  i1l4274 05CD                                    i1l4266 05B7  
                                  i1l4258 059C                                    i1l4194 04AF  
                                  i1l4186 049D                                    i1l4282 0608  
                                  i1l4178 0486                                    i1l4514 17D3  
                                  i1l1875 0A8C                                    i1l4292 0B5D  
                                  i1l4524 1780                                    i1l4620 0EBE  
                                  i1l4604 0E6E                                    i1l4612 0EAC  
                                  i1l3900 0B11                                    i1l4276 05F4  
                                  i1l4268 05BD                                    i1l4284 061C  
                                  i1l4196 04BB                                    i1l4188 04A2  
                                  i1l4700 0191                                    i1l4516 17D5  
                                  i1l4508 17CB                                    i1l4294 0B64  
                                  i1l4526 1787                                    i1l4630 0ED7  
                                  i1l4622 0EBF                                    i1l4614 0EB3  
                                  i1l4606 0E7A                                    i1l3902 0B1A  
                                  i1l4278 05FB                                    i1l4198 04BE  
                                  i1l4702 0194                                    i1l4518 17D7  
                                  i1l4296 0B69                                    i1l4288 0B53  
                                  i1l4632 0EDD                                    i1l4624 0EC5  
                                  i1l4616 0EB7                                    i1l4608 0E86  
                                  i1l4480 17A9                                    i1l3904 0B23  
                                  i1l3912 0B30                                    i1l4720 01D0  
                                  i1l4712 019E                                    i1l4640 0075  
                                  i1l4800 0711                                    i1l4298 0B6E  
                                  i1l4634 0EE1                                    i1l4626 0ECB  
                                  i1l4618 0EB8                                    i1l4482 17AE  
                                  i1l4490 17B5                                    i1l3914 0B39  
                                  i1l3906 0B2E                                    i1l3930 076D  
                                  i1l3922 0740                                    i1l4730 0200  
                                  i1l4722 01D7                                    i1l4714 01AB  
                                  i1l4650 00C2                                    i1l4642 0093  
                                  i1l4802 0716                                    i1l4810 0720  
                                  i1l4628 0ED1                                    i1l4636 0EE7  
                                  i1l4580 0DF2                                    i1l4492 17B7  
                                  i1l4484 17AF                                    i1l3916 0B46  
                                  i1l3940 0795                                    i1l3932 0771  
                                  i1l3924 0745                                    i1l4740 0220  
                                  i1l4732 0207                                    i1l4724 01DB  
                                  i1l4716 01B1                                    i1l4660 00E8  
                                  i1l4652 00CB                                    i1l4644 00B0  
                                  i1l4820 0732                                    i1l4812 0721  
                                  i1l4804 071A                                    i1l4590 0E1A  
                                  i1l4582 0DFD                                    i1l4486 17B1  
                                  i1l4494 17BA                                    i1l3950 07C5  
                                  i1l3942 07A1                                    i1l3934 077D  
                                  i1l3926 0751                                    i1l4750 023D  
                                  i1l4742 0226                                    i1l4734 020E  
                                  i1l4726 01E1                                    i1l4718 01C1  
                                  i1l4670 0110                                    i1l4662 00F1  
                                  i1l4654 00D1                                    i1l4646 00B4  
                                  i1l4638 006E                                    i1l4830 073D  
                                  i1l4822 0736                                    i1l4814 0722  
                                  i1l4806 071C                                    i1l4592 0E26  
                                  i1l4584 0E01                                    i1l4488 17B3  
                                  i1l4496 17BF                                    i1l3952 07CB  
                                  i1l3944 07A7                                    i1l3936 0783  
                                  i1l3928 0762                                    i1l4760 025B  
                                  i1l4752 0242                                    i1l4744 022B  
                                  i1l4736 0212                                    i1l4728 01F1  
                                  i1l4680 013D                                    i1l4672 0116  
                                  i1l4664 00F9                                    i1l4656 00DA  
                                  i1l4648 00BB                                    i1l3960 0899  
                                  i1l4824 0738                                    i1l4816 0728  
                                  i1l4808 071E                                    i1l4594 0E32  
                                  i1l4586 0E02                                    i1l4498 17C0  
                                  i1l3954 07D7                                    i1l3946 07B3  
                                  i1l3938 078F                                    i1l3970 175C  
                                  i1l4770 0276                                    i1l4762 0260  
                                  i1l4754 0249                                    i1l4746 0231  
                                  i1l4738 0219                                    i1l4690 0173  
                                  i1l4682 0150                                    i1l4674 011B  
                                  i1l4666 00FF                                    i1l4658 00E2  
                                  i1l3962 08A3                                    i1l4826 073A  
                                  i1l4818 072D                                    i1l4596 0E3E  
                                  i1l4588 0E0E                                    i1l3892 0B09  
                                  i1l3956 07DD                                    i1l3948 07B9  
                                  i1l3980 17EC                                    i1l3972 17DD  
                                  i1l4772 027B                                    i1l4764 0265  
                                  i1l4748 0236                                    i1l4756 024F  
                                  i1l4692 0179                                    i1l4684 0157  
                                  i1l4676 0120                                    i1l4668 0108  
                                  i1l3964 08B1                                    i1l4828 073C  
                                  i1l4780 0647                                    i1l4598 0E4A  
                                  i1l3894 0B0C                                    i1l3958 07EE  
                                  i1l3990 08FB                                    i1l3974 17DE  
                                  i1l4774 0282                                    i1l4766 026C  
                                  i1l4758 0256                                    i1l4694 017C  
                                  i1l4686 015F                                    i1l4678 0125  
                                  i1l4790 06F1                                    i1l4782 0654  
                                  i1l4870 0854                                    i1l4864 1723  
                                  i1l3968 1708                                    i1l3992 0900  
                                  i1l3984 08EC                                    i1l3976 17E4  
                                  i1l4768 0271                                    i1l4696 0189  
                                  i1l4688 0165                                    i1l4880 0845  
                                  u310_20 0F0F                                    i1l4792 06F9  
                                  i1l4784 06E5                                    i1l4776 0621  
                                  i1l4872 085C                                    u310_21 0F0E  
                                  i1l4866 1725                                    i1l4890 0835  
                                  i1l3994 0906                                    i1l3986 08EE  
                                  i1l3978 17EA                                    i1l4698 018B  
                                  i1l4882 084C                                    i1l4786 06EA  
                                  i1l4794 0700                                    i1l4778 063A  
                                  i1l4874 0863                                    i1l4884 0824  
                                  i1l3988 08F2                                    i1l4876 083B  
                                  i1l4796 0706                                    i1l4788 06F0  
                                  i1l4868 0852                                    _S1_ISR 0B53  
                                  i1l4886 0826                                    i1l3998 0A8D  
                                  i1l4878 083D                                    i1l4798 070C  
                                  i1l4888 082E                                    u311_20 0F1F  
                                  u311_21 0F1E                                    u400_20 0116  
                                  u320_20 0F7B                                    u312_20 0F2F  
                                  u400_21 0115                                    u320_21 0F7A  
                                  u312_21 0F2E                                    u401_20 011B  
                                  u321_20 0F86                                    u313_20 0F34  
                                  u401_21 011A                                    u321_21 0F85  
                                  u313_21 0F33                                    _LCDcmd 174D  
                                  u410_20 01E1                                    u402_20 0120  
                                  u330_20 0FEE                                    u322_20 0F8B  
                                  u314_20 0F3F                                    u410_21 01E0  
                                  u402_21 011F                                    u330_21 0FED  
                                  u322_21 0F8A                                    u314_21 0F3E  
                                  u411_20 020E                                    u403_20 0125  
                                  u307_20 17FB                                    u331_20 0FF9  
                                  u323_20 0F96                                    u315_20 0F4F  
                                  u411_21 020D                                    u403_21 0124  
                                  u307_21 17FA                                    u331_21 0FF8  
                                  u323_21 0F95                                    u315_21 0F4E  
                                  u260_20 0B39                                    u340_20 0539  
                                  u420_20 0271                                    u412_20 0220  
                                  u404_20 0157                                    u332_20 0FFE  
                                  u324_20 0FA6                                    u316_20 0F61  
                                  u308_20 0EFF                                    u260_21 0B38  
                                  u340_21 0538                                    u420_21 0270  
                                  u412_21 021F                                    u404_21 0156  
                                  u332_21 0FFD                                    u324_21 0FA5  
                                  u316_21 0F60                                    u308_21 0EFE  
                                  u340_25 0535                                    u261_20 0B42  
                                  u333_20 08CD                                    u341_20 0544  
                                  u421_20 0282                                    u413_20 0226  
                                  u405_20 015F                                    u325_20 0FB6  
                                  u317_20 0F67                                    u309_20 0F04  
                                  u261_21 0B41                                    u333_21 08CC  
                                  u341_21 0543                                    u421_21 0281  
                                  u413_21 0225                                    u405_21 015E  
                                  u325_21 0FB5                                    u317_21 0F66  
                                  u309_21 0F03                                    u262_20 0B46  
                                  u270_20 07A1                                    u334_20 0A32  
                                  u350_20 05B7                                    u342_20 054A  
                                  u414_20 0231                                    u406_20 0173  
                                  u326_20 0FBB                                    u318_20 0F72  
                                  u430_20 0728                                    u262_21 0B45  
                                  u270_21 07A0                                    u334_21 0A31  
                                  u350_21 05B6                                    u342_21 0549  
                                  u414_21 0230                                    u406_21 0172  
                                  u326_21 0FBA                                    u318_21 0F71  
                                  u430_21 0727                                    u406_25 016F  
                                  u422_25 0631                                    u263_20 0B51  
                                  u255_20 0B10                                    u271_20 07B3  
                                  u335_20 0A48                                    u351_20 05BD  
                                  u343_20 0550                                    u415_20 023D  
                                  u407_20 0189                                    u327_20 0FC6  
                                  u319_20 0F77                                    u431_20 072D  
                                  u423_20 0647                                    u263_21 0B50  
                                  u255_21 0B0F                                    u271_21 07B2  
                                  u335_21 0A47                                    u351_21 05BC  
                                  u343_21 054F                                    u415_21 023C  
                                  u407_21 0188                                    u327_21 0FC5  
                                  u319_21 0F76                                    u431_21 072C  
                                  u423_21 0646                                    u423_25 0643  
                                  u360_20 0B98                                    u256_20 0B1A  
                                  u272_20 07C5                                    u280_20 17EA  
                                  u352_20 0608                                    u344_20 055F  
                                  u336_20 0491                                    u416_20 0249  
                                  u408_20 019D                                    u328_20 0FD6  
                                  u432_20 0732                                    u424_20 0654  
                                  u360_21 0B97                                    u256_21 0B19  
                                  u272_21 07C4                                    u280_21 17E9  
                                  u352_21 0607                                    u344_21 055E  
                                  u336_21 0490                                    u416_21 0248  
                                  u408_21 019C                                    u328_21 0FD5  
                                  u432_21 0731                                    u424_21 0653  
                                  _INTPPS 0E90                                    u360_25 0B94  
                                  u264_25 0748                                    u344_25 055B  
                                  u424_25 0650                                    u257_20 0B23  
                                  u273_20 07D7                                    u265_20 075D  
                                  u281_20 08F2                                    u353_20 061C  
                                  u345_20 056F                                    u337_20 04BB  
                                  u417_20 0256                                    u409_20 01B1  
                                  u329_20 0FE8                                    u425_20 06F0  
                                  u257_21 0B22                                    u273_21 07D6  
                                  u265_21 075C                                    u281_21 08F1  
                                  u353_21 061B                                    u345_21 056E  
                                  u337_21 04BA                                    u417_21 0255  
                                  u409_21 01B0                                    u329_21 0FE7  
                                  u425_21 06EF                                    u361_25 081D  
                                  u354_20 0B64                                    u362_20 08E5  
                                  u258_20 0B29                                    u274_20 07E9  
                                  u266_20 0762                                    u346_20 0575  
                                  u338_20 04EE                                    u418_20 025B  
                                  u426_20 0706                                    u434_20 0863  
                                  u354_21 0B63                                    u362_21 08E4  
                                  u258_21 0B28                                    u274_21 07E8  
                                  u266_21 0761                                    u346_21 0574  
                                  u338_21 04ED                                    u418_21 025A  
                                  u426_21 0705                                    u434_21 0862  
                           main@corrupted 00AE                                    u290_25 0ABA  
                                  u282_25 08F7                                    u355_20 0B69  
                                  u363_20 17AE                                    u259_20 0B2E  
                                  u275_20 07EE                                    u267_20 076D  
                                  u291_20 0AC4                                    u347_20 0586  
                                  u339_20 0515                                    u419_20 026C  
                                  u435_20 084C                                    u427_20 070C  
                                  u355_21 0B68                                    u363_21 17AD  
                                  u259_21 0B2D                                    u275_21 07ED  
                                  u267_21 076C                                    u291_21 0AC3  
                                  u347_21 0585                                    u339_21 0514  
                                  u419_21 026B                                    u435_21 084B  
                                  u427_21 070B                                    u283_25 08FC  
                                  u356_20 0B6E                                    u436_20 0835  
                                  u364_20 17BF                                    u268_20 077D  
                                  u292_20 0A5F                                    u284_20 0906  
                                  u348_20 059B                                    u276_20 08A3  
                                  u428_20 0711                                    u356_21 0B6D  
                                  u436_21 0834                                    u364_21 17BE  
                                  u268_21 077C                                    u292_21 0A5E  
                                  u284_21 0905                                    u348_21 059A  
                                  u276_21 08A2                                    u428_21 0710  
                                  _LCDstr 08B3                                    u516_27 07EF  
                                  u357_20 0B73                                    u269_20 078F  
                                  u285_20 0A95                                    u349_20 05A2  
                                  u365_20 17D0                                    u277_20 08AC  
                                  u429_20 0716                                    u357_21 0B72  
                                  u269_21 078E                                    u285_21 0A94  
                                  u349_21 05A1                                    u365_21 17CF  
                                  u277_21 08AB                                    u429_21 0715  
                                  u293_25 0A63                                    u517_27 0B58  
                                  u358_20 0B7D                                    u366_20 1787  
                                  u390_20 0ED1                                    u294_20 0A6F  
                                  u278_20 08B1                                    u358_21 0B7C  
                                  u366_21 1786                                    u390_21 0ED0  
                                  u294_21 0A6E                                    u278_21 08B0  
                                  u286_25 0A99                                    u359_20 0B87  
                                  u391_20 0ED7                                    u287_20 0AA5  
                                  u295_20 0A79                                    u279_20 17E4  
                                  u359_21 0B86                                    u391_21 0ED6  
                                  u287_21 0AA4                                    u295_21 0A78  
                                  u279_21 17E3                                    u295_25 0A75  
                                  u392_20 0EDD                                    u392_21 0EDC  
                                  u288_25 0AA6                                    u296_25 0A7E  
                                  u393_20 0EF0                                    u385_20 0DFD  
                                  u289_20 0AB4                                    u297_20 0A88  
                                  u393_21 0EED                                    u385_21 0DFC  
                                  u289_21 0AB3                                    u297_21 0A87  
                                  u289_25 0AB0                                    u386_20 0EB3  
                                  u490_20 0033                                    u386_21 0EB2  
                                  u490_21 0032                                    u394_24 0EF2  
                                  u387_20 0EBE                                    u395_20 0075  
                                  u491_20 0037                                    u483_20 000B  
                                  u387_21 0EBD                                    u395_21 0074  
                                  u491_21 0036                                    u483_21 000A  
                                  u388_20 0EC5                                    u396_20 00C2  
                                  u492_20 003F                                    u484_20 000F  
                                  u388_21 0EC4                                    u396_21 00C1  
                                  u492_21 003E                                    u484_21 000E  
                                  _OSCFRQ 0893                                    u389_20 0ECB  
                                  u397_20 00D1                                    u493_20 0043  
                                  u485_20 0017                                    u389_21 0ECA  
                                  u397_21 00D0                                    u493_21 0042  
                                  u485_21 0016                                    u398_20 00E8  
                                  u494_20 0048                                    u486_20 001B  
                                  u398_21 00E7                                    u494_21 0047  
                                  u486_21 001A                                    u399_20 00FF  
                                  u487_20 001F                                    u399_21 00FE  
                                  u487_21 001E                                    u488_20 0027  
                                  u488_21 0026                                    u489_20 002B  
                                  u489_21 002A                                    _PWM6EN 1C77  
                               ??_ReadI2C 0070                                    _PWM_on 00C4  
                             LCDsend2x4@c 00A5                           _TMR3_WriteTimer 17BA  
                        __end_of_editTemp 09F9              __end_ofi1_PWM6_LoadDutyValue 0824  
    __end_of_TMR1_DefaultInterruptHandler 1705     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 1704                              _CCPTMRS1bits 021F  
                           ?i1_LCDsend2x4 0072                                    ___wmul 08EC  
                       __end_of_TMR2_Stop 1717                                 ??___lwdiv 0074  
                               ??___lwmod 007C                       __size_of_TMR2_Start 0003  
                 __end_of_PWM6_Initialize 179A                                 ??_editLum 00A0  
                           ?_INT_CallBack 0070                   __end_of_DATAEE_ReadByte 17A9  
                 __size_of_monitoring_ISR 011E                           _ADCC_Initialize 0869  
                          _PMD_Initialize 1763                                 ??_isdigit 0070  
                ?i1_PWM_Output_D4_Disable 0070                           menuLCD_ISR@diff 004A  
           i1DATAEE_WriteByte@GIEBitValue 0079         __size_of_ADCC_GetSingleConversion 0012  
        __size_of_INT_SetInterruptHandler 0006                 ?_ADCC_GetSingleConversion 0070  
                 __end_of_TMR2_StartTimer 171B   INT_SetInterruptHandler@InterruptHandler 00A0  
TMR5_SetInterruptHandler@InterruptHandler 00A0  TMR3_SetInterruptHandler@InterruptHandler 00A0  
TMR1_SetInterruptHandler@InterruptHandler 00A0                                 ??_sprintf 0028  
                 __end_of_TMR1_WriteTimer 17BA                   ??_PWM_Output_D4_Disable 00A0  
                     __size_ofi1_WriteI2C 004B                          ?_TMR1_Initialize 0070  
                 __end_of_TMR5_Initialize 0968                         _SYSTEM_Initialize 0968  
                 __end_of__initialization 006A                        ?_SYSTEM_Initialize 0070  
                       __end_of_Clock_ISR 0EF3                           _TMR5_WriteTimer 17CB  
                    __size_of_menuLCD_ISR 0219                            __pcstackCOMMON 0070  
                          ??i1_LCDsend2x4 0073                              __pidataBANK0 1754  
                     ??_SYSTEM_Initialize 00A2                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                                 ?_TMR3_ISR 0070  
                               ?_TMR5_ISR 0070                          _DATAEE_WriteByte 0987  
                            menuLCD_ISR@l 0047                        __size_of_editClock 0058  
         differenceBetweenTimePeriod@diff 0076                             __end_of_tsttc 1000  
                        ?_TMR2_Initialize 0070                            ??_INT_CallBack 0071  
         differenceBetweenTimePeriod@stop 0073                    __end_of_PMD_Initialize 176B  
             __size_of_EXT_INT_Initialize 000E                              ??_LCDsend2x4 00A3  
               __end_of_SYSTEM_Initialize 0987                              sprintf@width 0031  
                 __end_of_TMR3_WriteTimer 17CB                                   ??_tsttc 0072  
                              __pbssBANK0 004D                                __pbssBANK1 00BD  
                  i1DATAEE_WriteByte@bAdd 0076                                   ?_S1_ISR 0070  
                                 ?_LCDcmd 0070                          ?_TMR3_Initialize 0070  
                                 ?_LCDstr 0079                                   LCDcmd@c 0078  
                                 LCDstr@c 0020                                   LCDstr@p 0079  
                              __pmaintext 0287          __end_of_TMR3_SetInterruptHandler 173B  
                                 ?___wmul 0070                                ??_TMR1_ISR 007B  
                              ??_TMR3_ISR 007E                   __end_of_ADCC_Initialize 0880  
              __end_of_PWM6_LoadDutyValue 0899                                ??_TMR5_ISR 007D  
                              __pintentry 0004                                   _ADFLTRH 0115  
                                 _ADFLTRL 0114                      __size_ofi1_TMR2_Stop 0003  
                      __end_of_LCDsend2x4 0DF2                                   _ADPREVH 008F  
                                 _ADPREVL 008E                                 ?_WriteI2C 0070  
                        ?_PWM6_Initialize 0070                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112           __end_ofi1_PWM_Output_D4_Disable 170E  
                         ?_PMD_Initialize 0070                          ?_DATAEE_ReadByte 00A0  
                       ?_i2c1_driver_open 0070             i1PWM6_LoadDutyValue@dutyValue 0070  
                                 _LCDchar 175B                                   _LCDinit 0CA8  
                                 _LCDsend 0BA3                        ??_i2c1_driver_open 00A0  
                                 _INT_ISR 1723                                   _OSCCON1 088D  
                                 _OSCCON3 088F                                 ?_editTemp 0070  
                    i1_PWM6_LoadDutyValue 080E                                   _NVMADRH 081B  
                                 _NVMADRL 081A                                   _NVMDATH 081D  
                                 _OSCTUNE 0892                                   _NVMDATL 081C  
                                 _NVMCON2 081F                                   _PWM6DCH 038D  
                                 _PWM6DCL 038C                         ?i1_TMR2_StopTimer 0070  
                                 _PWM6CON 038E                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                                 _SSP1MSK 018E                              ??_TMR2_Start 0070  
                 __size_of_TMR2_StopTimer 0004                          ?_TMR2_StartTimer 0070  
                        ?_TMR1_WriteTimer 0070                        ??i1_TMR2_StopTimer 0070  
                 __end_of_TMR5_WriteTimer 17DC                              LCDsend2x4@hc 00A6  
                            LCDsend2x4@lc 00A7                         __end_of_editClock 0C4E  
                        ?_TMR5_Initialize 0070                           __size_of_S1_ISR 0050  
                         __size_of_LCDcmd 0007                      DATAEE_WriteByte@bAdd 00A0  
                      _i2c1_driver_i2cISR 00C0                           __size_of_LCDstr 001B  
                                 _ReadI2C 0899                ??_TMR5_SetInterruptHandler 00A2  
                            ??i1_WriteI2C 0070                           __size_of___wmul 001F  
                                 ___lwdiv 0A8D                                   ___lwmod 0A59  
                      __end_of_TMR2_Start 170B                                ??_WriteI2C 00A0  
                                 _editLum 09AB                                   __ptext1 09F9  
                                 __ptext2 1774                                   __ptext3 09D2  
                                 __ptext4 09AB                                   __ptext5 0BF6  
                                 __ptext6 171F                                   __ptext7 1714  
                                 __ptext8 0968                                   __ptext9 0949  
                          _monitoring_ISR 0621            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 020E                                   _dpowers 180F  
                   _OSCILLATOR_Initialize 176B                                 _T2CONbits 028E  
                                 _isdigit 17DC                                 _T3CONbits 0214  
       __size_of_TMR1_SetInterruptHandler 0006                     ?i1_PWM6_LoadDutyValue 0070  
                ??_PIN_MANAGER_Initialize 00A0                 ?_TMR1_SetInterruptHandler 00A0  
                               _T2HLTbits 028F                   _INT_SetInterruptHandler 1729  
                               _T5CONbits 021A                                ??_editTemp 00A0  
                    __end_ofi1_LCDsend2x4 07F2                __size_of_SYSTEM_Initialize 001F  
                                 _sprintf 0484                                   clrloop0 1742  
                    end_of_initialization 006A                          ?_TMR3_WriteTimer 0070  
                               _T2RSTbits 0291                        __end_ofi1_WriteI2C 0B53  
                                 init_ram 1747                                   initloop 1748  
                    __end_of_INT_CallBack 178D                            i1LCDsend2x4@hc 0076  
                          i1LCDsend2x4@lc 0077                        i1_DATAEE_WriteByte 08CE  
           __size_of_PWM_Output_D4_Enable 0003              ?_differenceBetweenTimePeriod 0070  
                     ?i1_DATAEE_WriteByte 0076                          ?_ADCC_Initialize 0070  
        __end_of_ADCC_GetSingleConversion 1800                    __end_of_monitoring_ISR 073F  
                               _PORTCbits 000E                                 _TMR2_Stop 1714  
                _TMR3_SetInterruptHandler 1735                     _TMR5_InterruptHandler 00B3  
                               _TRISCbits 0013                             ?_toggleAlarms 0070  
                    ??i1_DATAEE_WriteByte 0079                  __end_of_DATAEE_WriteByte 09AB  
                           _alarmPWMStart 0067                          ?_TMR5_WriteTimer 0070  
                 TMR5_WriteTimer@timerVal 0070            __size_of_PWM_Output_D4_Disable 0003  
           __end_of_PWM_Output_D4_Disable 1714                            __end_of_S1_ISR 0BA3  
                          __end_of_LCDcmd 1754                            __end_of_LCDstr 08CE  
        __size_ofi1_PWM_Output_D4_Disable 0003                            LCDsend2x4@mode 00A2  
                               _Clock_ISR 0DF2                            __end_of___wmul 090B  
                         ?_monitoring_ISR 0070                         __size_of_TMR1_ISR 0017  
                       __size_of_TMR3_ISR 0017                         __size_of_TMR5_ISR 0017  
                              ?_TMR2_Stop 0070                    ?_OSCILLATOR_Initialize 0070  
               ??_INT_SetInterruptHandler 00A2                           main@checkSumAux 00AC  
                  ??i1_PWM6_LoadDutyValue 0072                             menuLCD_ISR@tt 0043  
                     start_initialization 004E      __end_of_TMR5_DefaultInterruptHandler 0004  
   __size_of_TMR5_DefaultInterruptHandler 0001              _TMR5_DefaultInterruptHandler 0003  
                          ??_toggleAlarms 00A0           __size_of_PIN_MANAGER_Initialize 003F  
                          _TMR2_StopTimer 171F                          WriteI2C@data_out 00A1  
                                ??_S1_ISR 0070                                  ??_LCDcmd 0078  
                                ??_LCDstr 007B                             ??_menuLCD_ISR 0035  
                     DATAEE_ReadByte@bAdd 00A0              ?_INT_DefaultInterruptHandler 0070  
                __size_of_TMR1_Initialize 001F                          ??_PMD_Initialize 00A0  
                              ?_Clock_ISR 0070                                  ??___wmul 0074  
                             __pdataBANK0 0067                __end_of_EXT_INT_Initialize 080E  
                       _editingClockAlarm 005C                         __size_of_WriteI2C 005A  
                   __size_ofi1_LCDsend2x4 00B3                  _ADCC_GetSingleConversion 17EE  
                 i1DATAEE_WriteByte@bData 0078                    __end_of_TMR2_StopTimer 1723  
                                ?_LCDchar 0070                                  ?_LCDinit 0070  
                                ?_LCDsend 0070                                 ___latbits 0002  
                                ?_INT_ISR 0070                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                        _PWM6_LoadDutyValue 0880  
                __size_of_TMR2_Initialize 000E                              _isdigit$2972 0070  
                   __size_of_INT_CallBack 000D             ?_TMR5_DefaultInterruptHandler 0070  
    __size_of_differenceBetweenTimePeriod 0034                                  LCDchar@c 0078  
                       __size_of_editTemp 0027                                  LCDsend@c 00A3  
                     ?_PWM6_LoadDutyValue 00A0                               sprintf@flag 0030  
               __size_of_i2c1_driver_open 000C                               sprintf@prec 002D  
                                ?_ReadI2C 0070                                 __pnvBANK0 006E  
                               __pnvBANK1 00B1                                 _editClock 0BF6  
                        ___lwdiv@dividend 0072                    _PIN_MANAGER_Initialize 0AC9  
               __size_ofi1_TMR2_StopTimer 0004             ??_INT_DefaultInterruptHandler 0070  
                           ??i1_TMR2_Stop 0070                  __size_of_TMR3_Initialize 001F  
                     __end_of_menuLCD_ISR 0287          __end_of_TMR1_SetInterruptHandler 1735  
         ADCC_GetSingleConversion@channel 0073                              i1_LCDsend2x4 073F  
                               _dimingLed 005E                                  ?___lwdiv 0070  
                                ?___lwmod 0078               _i2c1_driver_busCollisionISR 00C2  
                    ??_PWM6_LoadDutyValue 00A2                                  ?_editLum 0070  
            ??_INTERRUPT_InterruptManager 007E                               ??_TMR2_Stop 00A0  
                            _INT_CallBack 1780                                  ?_isdigit 0070  
                         ?_TMR2_StopTimer 0070                  __size_of_PWM6_Initialize 000D  
                        ___lwdiv@quotient 0075                                  ?_sprintf 0020  
                                _T2CLKCON 0290                  __size_of_DATAEE_ReadByte 000F  
                          __size_of_tsttc 010D                   i1_PWM_Output_D4_Disable 170B  
                          ___wmul@product 0074                                  _LATAbits 0016  
                               clear_ram0 1741                                  _PIE0bits 0716  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR2_StartTimer 0004                             i1LCDsend2x4@c 0075  
                              ?_editClock 0070                                 _tempAlarm 0054  
                                _S1_Value 0064                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0048                                  _PIR0bits 070C  
                                _PIR3bits 070F                                  _PIR4bits 0710  
              ??_TMR3_SetInterruptHandler 00A2                  __size_of_TMR5_Initialize 001F  
                             ??_Clock_ISR 007A                      __end_of_toggleAlarms 0A25  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR1_ISR 0824                                  _TMR3_ISR 083B  
                                _TMR5_ISR 0852                                  _SSP1STAT 018F  
                       ??_TMR1_Initialize 00A2                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                     __end_ofi1_TMR2_Stop 1711                                _ADCON3bits 0096  
                       ___wmul@multiplier 0070                        i1WriteI2C@data_out 0071  
            __end_of_PWM_Output_D4_Enable 1708      __size_of_INT_DefaultInterruptHandler 0001  
       __size_of_TMR5_SetInterruptHandler 0006                          __size_of_LCDchar 0008  
               ?_TMR5_SetInterruptHandler 00A0                     DATAEE_WriteByte@bData 00A2  
                        __size_of_LCDinit 0076                          __size_of_LCDsend 0053  
                        __size_of_INT_ISR 0006                         ?_DATAEE_WriteByte 00A0  
                       ??_TMR2_Initialize 00A0                               _menuLCD_ISR 006E  
          ??_TMR5_DefaultInterruptHandler 0070                        ??_DATAEE_WriteByte 00A3  
                        __size_of_ReadI2C 001A                                _ADSTATbits 0097  
                __size_of_TMR3_WriteTimer 0011                          ??_monitoring_ISR 007A  
                 ??_OSCILLATOR_Initialize 00A0                          __size_of___lwdiv 003C  
                        __size_of___lwmod 0034                                  _WriteI2C 0C4E  
                       ??_TMR3_Initialize 00A2                  _TMR1_SetInterruptHandler 172F  
                        i1LCDsend2x4@mode 0072                          __size_of_editLum 0027  
                   _TMR1_InterruptHandler 00B9                                sprintf@val 002E  
                                _clkAlarm 004D                  __size_of_ADCC_Initialize 0017  
                        __size_of_isdigit 0012                                  _editTemp 09D2  
                         ___lwdiv@divisor 0070                           ___lwdiv@counter 0077  
                                __ptext10 173B                                  __ptext11 092A  
                                __ptext20 0800                                  __ptext12 1735  
                                __ptext21 1729                                  __ptext13 07F2  
                              _T1GCONbits 020F                                  __ptext30 179A  
                                __ptext22 0869                                  __ptext14 090B  
                                __ptext23 1711                                  __ptext15 172F  
                                __ptext40 0002                                  __ptext32 0852  
                                __ptext24 0880                                  __ptext16 178D  
                                __ptext41 006E                                  __ptext33 0003  
                                __ptext25 0CA8                                  __ptext17 1763  
                                __ptext50 0A8D                                  __ptext42 171B  
                                __ptext34 0621                                  __ptext26 0D1E  
                                __ptext18 0AC9                                  __ptext51 0A25  
                                __ptext43 170E                                  __ptext35 0EF3  
                                __ptext27 0BA3                                  __ptext19 176B  
                                __ptext60 17BA                                  __ptext52 1717  
                                __ptext44 170B                                  __ptext36 0899  
                                __ptext28 0C4E                                  __ptext61 0824  
                                __ptext53 1708                                  __ptext45 080E  
                                __ptext37 17EE                                  __ptext29 0987  
                                __ptext62 17A9                                  __ptext54 1705  
                                __ptext46 0484                                  __ptext38 17CB  
                                __ptext63 0DF2                                  __ptext55 08B3  
                                __ptext47 17DC                                  __ptext39 083B  
                                __ptext64 1704                                  __ptext56 175B  
                                __ptext48 08EC                                  __ptext65 08CE  
                                __ptext57 174D                                  __ptext49 0A59  
                                __ptext66 1723                                  __ptext58 073F  
                                __ptext67 1780                                  __ptext59 0B08  
                                __ptext68 1703                                  __ptext69 0B53  
                            _SSP1CON1bits 0190                              _SSP1CON2bits 0191  
               ??i1_PWM_Output_D4_Disable 0070               __size_ofi1_DATAEE_WriteByte 001E  
                        __size_of_sprintf 019D                                _T3GCONbits 0215  
             DATAEE_WriteByte@GIEBitValue 00A3                   TMR3_WriteTimer@timerVal 0070  
                        _i2c1_driver_open 1774                         ??_PWM6_Initialize 00A0  
                           __size_of_main 01FD                                _T5GCONbits 021B  
                                _lumAlarm 0051                         ??_DATAEE_ReadByte 00A2  
                                _lumLevel 0062                     _PWM_Output_D4_Disable 1711  
                             ??_editClock 00A0                          _editingTempAlarm 0061  
                        i1_TMR2_StopTimer 171B                  __size_of_TMR5_WriteTimer 0011  
                                _prevTemp 006C                                tsttc@value 0073  
                             i1_TMR2_Stop 170E                ??_ADCC_GetSingleConversion 0073  
                                int$flags 007E                         ??_TMR2_StartTimer 0070  
      __end_of_INTERRUPT_InterruptManager 004C                _INTERRUPT_InterruptManager 0004  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                       menuLCD_ISR@F12829 00BD      __end_of_TMR3_DefaultInterruptHandler 0003  
   __size_of_TMR3_DefaultInterruptHandler 0001              _TMR3_DefaultInterruptHandler 0002  
                       ??_TMR5_Initialize 00A2                                _INTCONbits 000B  
                             _NVMCON1bits 081E                              _prevLumLevel 006A  
           __size_ofi1_PWM6_LoadDutyValue 0016                      _INT_InterruptHandler 00B1  
                                isdigit@c 0071                                _LCDsend2x4 0D1E  
                      _EXT_INT_Initialize 0800                                  intlevel1 0000  
                               sprintf@ap 002C                                 sprintf@sp 0034  
                        ___lwmod@dividend 007A                   ?_PIN_MANAGER_Initialize 0070  
                   __size_of_toggleAlarms 002C                       ?_EXT_INT_Initialize 0070  
                         _editingLumAlarm 0060                      _PWM_Output_D4_Enable 1705  
     __end_of_differenceBetweenTimePeriod 0A59               _differenceBetweenTimePeriod 0A25  
                ?_INT_SetInterruptHandler 00A0                          ??_TMR2_StopTimer 00A0  
                       ??_TMR3_WriteTimer 0072                             __pstringtext1 180F  
                           __pstringtext2 1800                             __pstringtext3 1819  
                           __pstringtext4 1820                             __pstringtext5 1825  
                           __pstringtext6 0000                      ??_EXT_INT_Initialize 00A2  
           ??_differenceBetweenTimePeriod 0077                                  sprintf@c 0033  
                                sprintf@f 0020             ?_TMR3_DefaultInterruptHandler 0070  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                         ___lwmod@divisor 0078                           ___lwmod@counter 007D  
                          _idx_RingBuffer 00C5               PWM6_LoadDutyValue@dutyValue 00A0  
                            _toggleAlarms 09F9                                _TMR2_Start 1708  
          __end_of_PIN_MANAGER_Initialize 0B08                         ??_ADCC_Initialize 00A0  
                  ?_PWM_Output_D4_Disable 0070                     ?_PWM_Output_D4_Enable 0070  
                         _TMR1_Initialize 090B  
