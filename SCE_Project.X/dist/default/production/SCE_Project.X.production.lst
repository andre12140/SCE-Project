

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Oct 31 10:44:45 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text39,local,class=CODE,merge=1,delta=2,group=3
    63                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	text53,local,class=CODE,merge=1,delta=2
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	text55,local,class=CODE,merge=1,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	psect	text57,local,class=CODE,merge=1,delta=2
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    82                           	dabs	1,0x7E,2
    83  0000                     
    84                           ; Version 2.30
    85                           ; Generated 15/09/2020 GMT
    86                           ; 
    87                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution. Publication is not required when
   101                           ;        this file is used in an embedded application.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC16F18875 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000F                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0014                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001C                     	;# 
   147  001C                     	;# 
   148  001D                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  008C                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  008E                     	;# 
   157  008F                     	;# 
   158  0090                     	;# 
   159  0090                     	;# 
   160  0091                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0095                     	;# 
   164  0096                     	;# 
   165  0097                     	;# 
   166  0098                     	;# 
   167  0099                     	;# 
   168  009A                     	;# 
   169  009B                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010E                     	;# 
   177  010F                     	;# 
   178  0110                     	;# 
   179  0110                     	;# 
   180  0111                     	;# 
   181  0112                     	;# 
   182  0112                     	;# 
   183  0113                     	;# 
   184  0114                     	;# 
   185  0114                     	;# 
   186  0115                     	;# 
   187  0116                     	;# 
   188  0116                     	;# 
   189  0117                     	;# 
   190  0119                     	;# 
   191  0119                     	;# 
   192  0119                     	;# 
   193  011A                     	;# 
   194  011A                     	;# 
   195  011A                     	;# 
   196  011B                     	;# 
   197  011B                     	;# 
   198  011B                     	;# 
   199  011B                     	;# 
   200  011B                     	;# 
   201  011C                     	;# 
   202  011C                     	;# 
   203  011C                     	;# 
   204  011D                     	;# 
   205  011D                     	;# 
   206  011D                     	;# 
   207  011E                     	;# 
   208  011E                     	;# 
   209  011E                     	;# 
   210  011F                     	;# 
   211  011F                     	;# 
   212  011F                     	;# 
   213  011F                     	;# 
   214  011F                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  018E                     	;# 
   218  018F                     	;# 
   219  0190                     	;# 
   220  0191                     	;# 
   221  0192                     	;# 
   222  0196                     	;# 
   223  0197                     	;# 
   224  0198                     	;# 
   225  0199                     	;# 
   226  019A                     	;# 
   227  019B                     	;# 
   228  019C                     	;# 
   229  020C                     	;# 
   230  020C                     	;# 
   231  020D                     	;# 
   232  020E                     	;# 
   233  020F                     	;# 
   234  020F                     	;# 
   235  0210                     	;# 
   236  0210                     	;# 
   237  0211                     	;# 
   238  0211                     	;# 
   239  0212                     	;# 
   240  0212                     	;# 
   241  0213                     	;# 
   242  0214                     	;# 
   243  0215                     	;# 
   244  0215                     	;# 
   245  0216                     	;# 
   246  0216                     	;# 
   247  0217                     	;# 
   248  0217                     	;# 
   249  0218                     	;# 
   250  0218                     	;# 
   251  0219                     	;# 
   252  021A                     	;# 
   253  021B                     	;# 
   254  021B                     	;# 
   255  021C                     	;# 
   256  021C                     	;# 
   257  021D                     	;# 
   258  021D                     	;# 
   259  021E                     	;# 
   260  021F                     	;# 
   261  028C                     	;# 
   262  028C                     	;# 
   263  028D                     	;# 
   264  028D                     	;# 
   265  028E                     	;# 
   266  028F                     	;# 
   267  0290                     	;# 
   268  0290                     	;# 
   269  0291                     	;# 
   270  0292                     	;# 
   271  0292                     	;# 
   272  0293                     	;# 
   273  0293                     	;# 
   274  0294                     	;# 
   275  0295                     	;# 
   276  0296                     	;# 
   277  0296                     	;# 
   278  0297                     	;# 
   279  0298                     	;# 
   280  0298                     	;# 
   281  0299                     	;# 
   282  0299                     	;# 
   283  029A                     	;# 
   284  029B                     	;# 
   285  029C                     	;# 
   286  029C                     	;# 
   287  029D                     	;# 
   288  030C                     	;# 
   289  030C                     	;# 
   290  030D                     	;# 
   291  030E                     	;# 
   292  030F                     	;# 
   293  0310                     	;# 
   294  0310                     	;# 
   295  0311                     	;# 
   296  0312                     	;# 
   297  0313                     	;# 
   298  0314                     	;# 
   299  0314                     	;# 
   300  0315                     	;# 
   301  0316                     	;# 
   302  0317                     	;# 
   303  0318                     	;# 
   304  0318                     	;# 
   305  0319                     	;# 
   306  031A                     	;# 
   307  031B                     	;# 
   308  031C                     	;# 
   309  031C                     	;# 
   310  031D                     	;# 
   311  031E                     	;# 
   312  031F                     	;# 
   313  038C                     	;# 
   314  038C                     	;# 
   315  038D                     	;# 
   316  038E                     	;# 
   317  0390                     	;# 
   318  0390                     	;# 
   319  0391                     	;# 
   320  0392                     	;# 
   321  040C                     	;# 
   322  040D                     	;# 
   323  040E                     	;# 
   324  040F                     	;# 
   325  0410                     	;# 
   326  0411                     	;# 
   327  0416                     	;# 
   328  0416                     	;# 
   329  0417                     	;# 
   330  0418                     	;# 
   331  0418                     	;# 
   332  0419                     	;# 
   333  041A                     	;# 
   334  041A                     	;# 
   335  041B                     	;# 
   336  041C                     	;# 
   337  041C                     	;# 
   338  041D                     	;# 
   339  041E                     	;# 
   340  041F                     	;# 
   341  048C                     	;# 
   342  048C                     	;# 
   343  048D                     	;# 
   344  048E                     	;# 
   345  048F                     	;# 
   346  048F                     	;# 
   347  0490                     	;# 
   348  0491                     	;# 
   349  0492                     	;# 
   350  0492                     	;# 
   351  0493                     	;# 
   352  0494                     	;# 
   353  0495                     	;# 
   354  0495                     	;# 
   355  0496                     	;# 
   356  0497                     	;# 
   357  0498                     	;# 
   358  0499                     	;# 
   359  049A                     	;# 
   360  049B                     	;# 
   361  049C                     	;# 
   362  049D                     	;# 
   363  050C                     	;# 
   364  050C                     	;# 
   365  050D                     	;# 
   366  050E                     	;# 
   367  050F                     	;# 
   368  050F                     	;# 
   369  0510                     	;# 
   370  0511                     	;# 
   371  0512                     	;# 
   372  0512                     	;# 
   373  0513                     	;# 
   374  0514                     	;# 
   375  0515                     	;# 
   376  0515                     	;# 
   377  0516                     	;# 
   378  0517                     	;# 
   379  0518                     	;# 
   380  0519                     	;# 
   381  051A                     	;# 
   382  051B                     	;# 
   383  051C                     	;# 
   384  051D                     	;# 
   385  058C                     	;# 
   386  058C                     	;# 
   387  058D                     	;# 
   388  058E                     	;# 
   389  058F                     	;# 
   390  058F                     	;# 
   391  0590                     	;# 
   392  0591                     	;# 
   393  0592                     	;# 
   394  0593                     	;# 
   395  060C                     	;# 
   396  060D                     	;# 
   397  060E                     	;# 
   398  060F                     	;# 
   399  0610                     	;# 
   400  0611                     	;# 
   401  0612                     	;# 
   402  0613                     	;# 
   403  0614                     	;# 
   404  0616                     	;# 
   405  0617                     	;# 
   406  0618                     	;# 
   407  0619                     	;# 
   408  061A                     	;# 
   409  061B                     	;# 
   410  061C                     	;# 
   411  061D                     	;# 
   412  061E                     	;# 
   413  068C                     	;# 
   414  068D                     	;# 
   415  068E                     	;# 
   416  068F                     	;# 
   417  0690                     	;# 
   418  0691                     	;# 
   419  0692                     	;# 
   420  0693                     	;# 
   421  0694                     	;# 
   422  070C                     	;# 
   423  070D                     	;# 
   424  070E                     	;# 
   425  070F                     	;# 
   426  0710                     	;# 
   427  0711                     	;# 
   428  0712                     	;# 
   429  0713                     	;# 
   430  0714                     	;# 
   431  0716                     	;# 
   432  0717                     	;# 
   433  0718                     	;# 
   434  0719                     	;# 
   435  071A                     	;# 
   436  071B                     	;# 
   437  071C                     	;# 
   438  071D                     	;# 
   439  071E                     	;# 
   440  0796                     	;# 
   441  0797                     	;# 
   442  0798                     	;# 
   443  0799                     	;# 
   444  079A                     	;# 
   445  079B                     	;# 
   446  080C                     	;# 
   447  080D                     	;# 
   448  080E                     	;# 
   449  080F                     	;# 
   450  0810                     	;# 
   451  0811                     	;# 
   452  0812                     	;# 
   453  0813                     	;# 
   454  0814                     	;# 
   455  081A                     	;# 
   456  081B                     	;# 
   457  081C                     	;# 
   458  081D                     	;# 
   459  081E                     	;# 
   460  081F                     	;# 
   461  088C                     	;# 
   462  088D                     	;# 
   463  088E                     	;# 
   464  088F                     	;# 
   465  0890                     	;# 
   466  0891                     	;# 
   467  0892                     	;# 
   468  0893                     	;# 
   469  0895                     	;# 
   470  0896                     	;# 
   471  0897                     	;# 
   472  0898                     	;# 
   473  0899                     	;# 
   474  089A                     	;# 
   475  089B                     	;# 
   476  090C                     	;# 
   477  090E                     	;# 
   478  090F                     	;# 
   479  091F                     	;# 
   480  091F                     	;# 
   481  098F                     	;# 
   482  098F                     	;# 
   483  0990                     	;# 
   484  0991                     	;# 
   485  0992                     	;# 
   486  0993                     	;# 
   487  0994                     	;# 
   488  0995                     	;# 
   489  0996                     	;# 
   490  0997                     	;# 
   491  0E0F                     	;# 
   492  0E10                     	;# 
   493  0E11                     	;# 
   494  0E12                     	;# 
   495  0E13                     	;# 
   496  0E14                     	;# 
   497  0E15                     	;# 
   498  0E16                     	;# 
   499  0E17                     	;# 
   500  0E18                     	;# 
   501  0E19                     	;# 
   502  0E1A                     	;# 
   503  0E1B                     	;# 
   504  0E1C                     	;# 
   505  0E1D                     	;# 
   506  0E1E                     	;# 
   507  0E1F                     	;# 
   508  0E20                     	;# 
   509  0E21                     	;# 
   510  0E22                     	;# 
   511  0E23                     	;# 
   512  0E24                     	;# 
   513  0E25                     	;# 
   514  0E26                     	;# 
   515  0E27                     	;# 
   516  0E28                     	;# 
   517  0E29                     	;# 
   518  0E2A                     	;# 
   519  0E2B                     	;# 
   520  0E2C                     	;# 
   521  0E2D                     	;# 
   522  0E2E                     	;# 
   523  0E2F                     	;# 
   524  0E30                     	;# 
   525  0E31                     	;# 
   526  0E32                     	;# 
   527  0E33                     	;# 
   528  0E34                     	;# 
   529  0E35                     	;# 
   530  0E36                     	;# 
   531  0E37                     	;# 
   532  0E8F                     	;# 
   533  0E90                     	;# 
   534  0E91                     	;# 
   535  0E92                     	;# 
   536  0E93                     	;# 
   537  0E94                     	;# 
   538  0E95                     	;# 
   539  0E96                     	;# 
   540  0E97                     	;# 
   541  0E9C                     	;# 
   542  0E9D                     	;# 
   543  0E9E                     	;# 
   544  0EA1                     	;# 
   545  0EA2                     	;# 
   546  0EA3                     	;# 
   547  0EA4                     	;# 
   548  0EA5                     	;# 
   549  0EA9                     	;# 
   550  0EAA                     	;# 
   551  0EAB                     	;# 
   552  0EAC                     	;# 
   553  0EB1                     	;# 
   554  0EB2                     	;# 
   555  0EB3                     	;# 
   556  0EB8                     	;# 
   557  0EB9                     	;# 
   558  0EBA                     	;# 
   559  0EBB                     	;# 
   560  0EBC                     	;# 
   561  0EBD                     	;# 
   562  0EBE                     	;# 
   563  0EC3                     	;# 
   564  0EC5                     	;# 
   565  0EC6                     	;# 
   566  0EC7                     	;# 
   567  0EC8                     	;# 
   568  0EC9                     	;# 
   569  0ECA                     	;# 
   570  0ECB                     	;# 
   571  0ECC                     	;# 
   572  0F10                     	;# 
   573  0F11                     	;# 
   574  0F12                     	;# 
   575  0F13                     	;# 
   576  0F14                     	;# 
   577  0F15                     	;# 
   578  0F16                     	;# 
   579  0F17                     	;# 
   580  0F18                     	;# 
   581  0F19                     	;# 
   582  0F1A                     	;# 
   583  0F1B                     	;# 
   584  0F1C                     	;# 
   585  0F1D                     	;# 
   586  0F1E                     	;# 
   587  0F1F                     	;# 
   588  0F20                     	;# 
   589  0F21                     	;# 
   590  0F22                     	;# 
   591  0F23                     	;# 
   592  0F24                     	;# 
   593  0F25                     	;# 
   594  0F26                     	;# 
   595  0F27                     	;# 
   596  0F28                     	;# 
   597  0F29                     	;# 
   598  0F2A                     	;# 
   599  0F2B                     	;# 
   600  0F2C                     	;# 
   601  0F2D                     	;# 
   602  0F2E                     	;# 
   603  0F2F                     	;# 
   604  0F30                     	;# 
   605  0F31                     	;# 
   606  0F32                     	;# 
   607  0F38                     	;# 
   608  0F39                     	;# 
   609  0F3A                     	;# 
   610  0F3B                     	;# 
   611  0F3C                     	;# 
   612  0F3D                     	;# 
   613  0F3E                     	;# 
   614  0F3F                     	;# 
   615  0F40                     	;# 
   616  0F41                     	;# 
   617  0F43                     	;# 
   618  0F44                     	;# 
   619  0F45                     	;# 
   620  0F46                     	;# 
   621  0F47                     	;# 
   622  0F48                     	;# 
   623  0F49                     	;# 
   624  0F4A                     	;# 
   625  0F4B                     	;# 
   626  0F4C                     	;# 
   627  0F4E                     	;# 
   628  0F4F                     	;# 
   629  0F50                     	;# 
   630  0F51                     	;# 
   631  0F52                     	;# 
   632  0F53                     	;# 
   633  0F54                     	;# 
   634  0F55                     	;# 
   635  0F56                     	;# 
   636  0F57                     	;# 
   637  0F59                     	;# 
   638  0F5A                     	;# 
   639  0F5B                     	;# 
   640  0F5C                     	;# 
   641  0F5D                     	;# 
   642  0F61                     	;# 
   643  0F62                     	;# 
   644  0F64                     	;# 
   645  0F65                     	;# 
   646  0F66                     	;# 
   647  0F67                     	;# 
   648  0F68                     	;# 
   649  0F69                     	;# 
   650  0F6A                     	;# 
   651  0F6B                     	;# 
   652  0F6C                     	;# 
   653  0F6D                     	;# 
   654  0FE4                     	;# 
   655  0FE5                     	;# 
   656  0FE6                     	;# 
   657  0FE7                     	;# 
   658  0FE8                     	;# 
   659  0FE9                     	;# 
   660  0FEA                     	;# 
   661  0FEB                     	;# 
   662  0FED                     	;# 
   663  0FEE                     	;# 
   664  0FEF                     	;# 
   665  0000                     	;# 
   666  0001                     	;# 
   667  0002                     	;# 
   668  0003                     	;# 
   669  0004                     	;# 
   670  0005                     	;# 
   671  0006                     	;# 
   672  0007                     	;# 
   673  0008                     	;# 
   674  0009                     	;# 
   675  000A                     	;# 
   676  000B                     	;# 
   677  000C                     	;# 
   678  000D                     	;# 
   679  000E                     	;# 
   680  000F                     	;# 
   681  0010                     	;# 
   682  0011                     	;# 
   683  0012                     	;# 
   684  0013                     	;# 
   685  0014                     	;# 
   686  0015                     	;# 
   687  0016                     	;# 
   688  0017                     	;# 
   689  0018                     	;# 
   690  0019                     	;# 
   691  001A                     	;# 
   692  001C                     	;# 
   693  001C                     	;# 
   694  001D                     	;# 
   695  001D                     	;# 
   696  001E                     	;# 
   697  001F                     	;# 
   698  008C                     	;# 
   699  008C                     	;# 
   700  008D                     	;# 
   701  008E                     	;# 
   702  008E                     	;# 
   703  008F                     	;# 
   704  0090                     	;# 
   705  0090                     	;# 
   706  0091                     	;# 
   707  0093                     	;# 
   708  0094                     	;# 
   709  0095                     	;# 
   710  0096                     	;# 
   711  0097                     	;# 
   712  0098                     	;# 
   713  0099                     	;# 
   714  009A                     	;# 
   715  009B                     	;# 
   716  009C                     	;# 
   717  009D                     	;# 
   718  009E                     	;# 
   719  010C                     	;# 
   720  010D                     	;# 
   721  010E                     	;# 
   722  010E                     	;# 
   723  010F                     	;# 
   724  0110                     	;# 
   725  0110                     	;# 
   726  0111                     	;# 
   727  0112                     	;# 
   728  0112                     	;# 
   729  0113                     	;# 
   730  0114                     	;# 
   731  0114                     	;# 
   732  0115                     	;# 
   733  0116                     	;# 
   734  0116                     	;# 
   735  0117                     	;# 
   736  0119                     	;# 
   737  0119                     	;# 
   738  0119                     	;# 
   739  011A                     	;# 
   740  011A                     	;# 
   741  011A                     	;# 
   742  011B                     	;# 
   743  011B                     	;# 
   744  011B                     	;# 
   745  011B                     	;# 
   746  011B                     	;# 
   747  011C                     	;# 
   748  011C                     	;# 
   749  011C                     	;# 
   750  011D                     	;# 
   751  011D                     	;# 
   752  011D                     	;# 
   753  011E                     	;# 
   754  011E                     	;# 
   755  011E                     	;# 
   756  011F                     	;# 
   757  011F                     	;# 
   758  011F                     	;# 
   759  011F                     	;# 
   760  011F                     	;# 
   761  018C                     	;# 
   762  018D                     	;# 
   763  018E                     	;# 
   764  018F                     	;# 
   765  0190                     	;# 
   766  0191                     	;# 
   767  0192                     	;# 
   768  0196                     	;# 
   769  0197                     	;# 
   770  0198                     	;# 
   771  0199                     	;# 
   772  019A                     	;# 
   773  019B                     	;# 
   774  019C                     	;# 
   775  020C                     	;# 
   776  020C                     	;# 
   777  020D                     	;# 
   778  020E                     	;# 
   779  020F                     	;# 
   780  020F                     	;# 
   781  0210                     	;# 
   782  0210                     	;# 
   783  0211                     	;# 
   784  0211                     	;# 
   785  0212                     	;# 
   786  0212                     	;# 
   787  0213                     	;# 
   788  0214                     	;# 
   789  0215                     	;# 
   790  0215                     	;# 
   791  0216                     	;# 
   792  0216                     	;# 
   793  0217                     	;# 
   794  0217                     	;# 
   795  0218                     	;# 
   796  0218                     	;# 
   797  0219                     	;# 
   798  021A                     	;# 
   799  021B                     	;# 
   800  021B                     	;# 
   801  021C                     	;# 
   802  021C                     	;# 
   803  021D                     	;# 
   804  021D                     	;# 
   805  021E                     	;# 
   806  021F                     	;# 
   807  028C                     	;# 
   808  028C                     	;# 
   809  028D                     	;# 
   810  028D                     	;# 
   811  028E                     	;# 
   812  028F                     	;# 
   813  0290                     	;# 
   814  0290                     	;# 
   815  0291                     	;# 
   816  0292                     	;# 
   817  0292                     	;# 
   818  0293                     	;# 
   819  0293                     	;# 
   820  0294                     	;# 
   821  0295                     	;# 
   822  0296                     	;# 
   823  0296                     	;# 
   824  0297                     	;# 
   825  0298                     	;# 
   826  0298                     	;# 
   827  0299                     	;# 
   828  0299                     	;# 
   829  029A                     	;# 
   830  029B                     	;# 
   831  029C                     	;# 
   832  029C                     	;# 
   833  029D                     	;# 
   834  030C                     	;# 
   835  030C                     	;# 
   836  030D                     	;# 
   837  030E                     	;# 
   838  030F                     	;# 
   839  0310                     	;# 
   840  0310                     	;# 
   841  0311                     	;# 
   842  0312                     	;# 
   843  0313                     	;# 
   844  0314                     	;# 
   845  0314                     	;# 
   846  0315                     	;# 
   847  0316                     	;# 
   848  0317                     	;# 
   849  0318                     	;# 
   850  0318                     	;# 
   851  0319                     	;# 
   852  031A                     	;# 
   853  031B                     	;# 
   854  031C                     	;# 
   855  031C                     	;# 
   856  031D                     	;# 
   857  031E                     	;# 
   858  031F                     	;# 
   859  038C                     	;# 
   860  038C                     	;# 
   861  038D                     	;# 
   862  038E                     	;# 
   863  0390                     	;# 
   864  0390                     	;# 
   865  0391                     	;# 
   866  0392                     	;# 
   867  040C                     	;# 
   868  040D                     	;# 
   869  040E                     	;# 
   870  040F                     	;# 
   871  0410                     	;# 
   872  0411                     	;# 
   873  0416                     	;# 
   874  0416                     	;# 
   875  0417                     	;# 
   876  0418                     	;# 
   877  0418                     	;# 
   878  0419                     	;# 
   879  041A                     	;# 
   880  041A                     	;# 
   881  041B                     	;# 
   882  041C                     	;# 
   883  041C                     	;# 
   884  041D                     	;# 
   885  041E                     	;# 
   886  041F                     	;# 
   887  048C                     	;# 
   888  048C                     	;# 
   889  048D                     	;# 
   890  048E                     	;# 
   891  048F                     	;# 
   892  048F                     	;# 
   893  0490                     	;# 
   894  0491                     	;# 
   895  0492                     	;# 
   896  0492                     	;# 
   897  0493                     	;# 
   898  0494                     	;# 
   899  0495                     	;# 
   900  0495                     	;# 
   901  0496                     	;# 
   902  0497                     	;# 
   903  0498                     	;# 
   904  0499                     	;# 
   905  049A                     	;# 
   906  049B                     	;# 
   907  049C                     	;# 
   908  049D                     	;# 
   909  050C                     	;# 
   910  050C                     	;# 
   911  050D                     	;# 
   912  050E                     	;# 
   913  050F                     	;# 
   914  050F                     	;# 
   915  0510                     	;# 
   916  0511                     	;# 
   917  0512                     	;# 
   918  0512                     	;# 
   919  0513                     	;# 
   920  0514                     	;# 
   921  0515                     	;# 
   922  0515                     	;# 
   923  0516                     	;# 
   924  0517                     	;# 
   925  0518                     	;# 
   926  0519                     	;# 
   927  051A                     	;# 
   928  051B                     	;# 
   929  051C                     	;# 
   930  051D                     	;# 
   931  058C                     	;# 
   932  058C                     	;# 
   933  058D                     	;# 
   934  058E                     	;# 
   935  058F                     	;# 
   936  058F                     	;# 
   937  0590                     	;# 
   938  0591                     	;# 
   939  0592                     	;# 
   940  0593                     	;# 
   941  060C                     	;# 
   942  060D                     	;# 
   943  060E                     	;# 
   944  060F                     	;# 
   945  0610                     	;# 
   946  0611                     	;# 
   947  0612                     	;# 
   948  0613                     	;# 
   949  0614                     	;# 
   950  0616                     	;# 
   951  0617                     	;# 
   952  0618                     	;# 
   953  0619                     	;# 
   954  061A                     	;# 
   955  061B                     	;# 
   956  061C                     	;# 
   957  061D                     	;# 
   958  061E                     	;# 
   959  068C                     	;# 
   960  068D                     	;# 
   961  068E                     	;# 
   962  068F                     	;# 
   963  0690                     	;# 
   964  0691                     	;# 
   965  0692                     	;# 
   966  0693                     	;# 
   967  0694                     	;# 
   968  070C                     	;# 
   969  070D                     	;# 
   970  070E                     	;# 
   971  070F                     	;# 
   972  0710                     	;# 
   973  0711                     	;# 
   974  0712                     	;# 
   975  0713                     	;# 
   976  0714                     	;# 
   977  0716                     	;# 
   978  0717                     	;# 
   979  0718                     	;# 
   980  0719                     	;# 
   981  071A                     	;# 
   982  071B                     	;# 
   983  071C                     	;# 
   984  071D                     	;# 
   985  071E                     	;# 
   986  0796                     	;# 
   987  0797                     	;# 
   988  0798                     	;# 
   989  0799                     	;# 
   990  079A                     	;# 
   991  079B                     	;# 
   992  080C                     	;# 
   993  080D                     	;# 
   994  080E                     	;# 
   995  080F                     	;# 
   996  0810                     	;# 
   997  0811                     	;# 
   998  0812                     	;# 
   999  0813                     	;# 
  1000  0814                     	;# 
  1001  081A                     	;# 
  1002  081B                     	;# 
  1003  081C                     	;# 
  1004  081D                     	;# 
  1005  081E                     	;# 
  1006  081F                     	;# 
  1007  088C                     	;# 
  1008  088D                     	;# 
  1009  088E                     	;# 
  1010  088F                     	;# 
  1011  0890                     	;# 
  1012  0891                     	;# 
  1013  0892                     	;# 
  1014  0893                     	;# 
  1015  0895                     	;# 
  1016  0896                     	;# 
  1017  0897                     	;# 
  1018  0898                     	;# 
  1019  0899                     	;# 
  1020  089A                     	;# 
  1021  089B                     	;# 
  1022  090C                     	;# 
  1023  090E                     	;# 
  1024  090F                     	;# 
  1025  091F                     	;# 
  1026  091F                     	;# 
  1027  098F                     	;# 
  1028  098F                     	;# 
  1029  0990                     	;# 
  1030  0991                     	;# 
  1031  0992                     	;# 
  1032  0993                     	;# 
  1033  0994                     	;# 
  1034  0995                     	;# 
  1035  0996                     	;# 
  1036  0997                     	;# 
  1037  0E0F                     	;# 
  1038  0E10                     	;# 
  1039  0E11                     	;# 
  1040  0E12                     	;# 
  1041  0E13                     	;# 
  1042  0E14                     	;# 
  1043  0E15                     	;# 
  1044  0E16                     	;# 
  1045  0E17                     	;# 
  1046  0E18                     	;# 
  1047  0E19                     	;# 
  1048  0E1A                     	;# 
  1049  0E1B                     	;# 
  1050  0E1C                     	;# 
  1051  0E1D                     	;# 
  1052  0E1E                     	;# 
  1053  0E1F                     	;# 
  1054  0E20                     	;# 
  1055  0E21                     	;# 
  1056  0E22                     	;# 
  1057  0E23                     	;# 
  1058  0E24                     	;# 
  1059  0E25                     	;# 
  1060  0E26                     	;# 
  1061  0E27                     	;# 
  1062  0E28                     	;# 
  1063  0E29                     	;# 
  1064  0E2A                     	;# 
  1065  0E2B                     	;# 
  1066  0E2C                     	;# 
  1067  0E2D                     	;# 
  1068  0E2E                     	;# 
  1069  0E2F                     	;# 
  1070  0E30                     	;# 
  1071  0E31                     	;# 
  1072  0E32                     	;# 
  1073  0E33                     	;# 
  1074  0E34                     	;# 
  1075  0E35                     	;# 
  1076  0E36                     	;# 
  1077  0E37                     	;# 
  1078  0E8F                     	;# 
  1079  0E90                     	;# 
  1080  0E91                     	;# 
  1081  0E92                     	;# 
  1082  0E93                     	;# 
  1083  0E94                     	;# 
  1084  0E95                     	;# 
  1085  0E96                     	;# 
  1086  0E97                     	;# 
  1087  0E9C                     	;# 
  1088  0E9D                     	;# 
  1089  0E9E                     	;# 
  1090  0EA1                     	;# 
  1091  0EA2                     	;# 
  1092  0EA3                     	;# 
  1093  0EA4                     	;# 
  1094  0EA5                     	;# 
  1095  0EA9                     	;# 
  1096  0EAA                     	;# 
  1097  0EAB                     	;# 
  1098  0EAC                     	;# 
  1099  0EB1                     	;# 
  1100  0EB2                     	;# 
  1101  0EB3                     	;# 
  1102  0EB8                     	;# 
  1103  0EB9                     	;# 
  1104  0EBA                     	;# 
  1105  0EBB                     	;# 
  1106  0EBC                     	;# 
  1107  0EBD                     	;# 
  1108  0EBE                     	;# 
  1109  0EC3                     	;# 
  1110  0EC5                     	;# 
  1111  0EC6                     	;# 
  1112  0EC7                     	;# 
  1113  0EC8                     	;# 
  1114  0EC9                     	;# 
  1115  0ECA                     	;# 
  1116  0ECB                     	;# 
  1117  0ECC                     	;# 
  1118  0F10                     	;# 
  1119  0F11                     	;# 
  1120  0F12                     	;# 
  1121  0F13                     	;# 
  1122  0F14                     	;# 
  1123  0F15                     	;# 
  1124  0F16                     	;# 
  1125  0F17                     	;# 
  1126  0F18                     	;# 
  1127  0F19                     	;# 
  1128  0F1A                     	;# 
  1129  0F1B                     	;# 
  1130  0F1C                     	;# 
  1131  0F1D                     	;# 
  1132  0F1E                     	;# 
  1133  0F1F                     	;# 
  1134  0F20                     	;# 
  1135  0F21                     	;# 
  1136  0F22                     	;# 
  1137  0F23                     	;# 
  1138  0F24                     	;# 
  1139  0F25                     	;# 
  1140  0F26                     	;# 
  1141  0F27                     	;# 
  1142  0F28                     	;# 
  1143  0F29                     	;# 
  1144  0F2A                     	;# 
  1145  0F2B                     	;# 
  1146  0F2C                     	;# 
  1147  0F2D                     	;# 
  1148  0F2E                     	;# 
  1149  0F2F                     	;# 
  1150  0F30                     	;# 
  1151  0F31                     	;# 
  1152  0F32                     	;# 
  1153  0F38                     	;# 
  1154  0F39                     	;# 
  1155  0F3A                     	;# 
  1156  0F3B                     	;# 
  1157  0F3C                     	;# 
  1158  0F3D                     	;# 
  1159  0F3E                     	;# 
  1160  0F3F                     	;# 
  1161  0F40                     	;# 
  1162  0F41                     	;# 
  1163  0F43                     	;# 
  1164  0F44                     	;# 
  1165  0F45                     	;# 
  1166  0F46                     	;# 
  1167  0F47                     	;# 
  1168  0F48                     	;# 
  1169  0F49                     	;# 
  1170  0F4A                     	;# 
  1171  0F4B                     	;# 
  1172  0F4C                     	;# 
  1173  0F4E                     	;# 
  1174  0F4F                     	;# 
  1175  0F50                     	;# 
  1176  0F51                     	;# 
  1177  0F52                     	;# 
  1178  0F53                     	;# 
  1179  0F54                     	;# 
  1180  0F55                     	;# 
  1181  0F56                     	;# 
  1182  0F57                     	;# 
  1183  0F59                     	;# 
  1184  0F5A                     	;# 
  1185  0F5B                     	;# 
  1186  0F5C                     	;# 
  1187  0F5D                     	;# 
  1188  0F61                     	;# 
  1189  0F62                     	;# 
  1190  0F64                     	;# 
  1191  0F65                     	;# 
  1192  0F66                     	;# 
  1193  0F67                     	;# 
  1194  0F68                     	;# 
  1195  0F69                     	;# 
  1196  0F6A                     	;# 
  1197  0F6B                     	;# 
  1198  0F6C                     	;# 
  1199  0F6D                     	;# 
  1200  0FE4                     	;# 
  1201  0FE5                     	;# 
  1202  0FE6                     	;# 
  1203  0FE7                     	;# 
  1204  0FE8                     	;# 
  1205  0FE9                     	;# 
  1206  0FEA                     	;# 
  1207  0FEB                     	;# 
  1208  0FED                     	;# 
  1209  0FEE                     	;# 
  1210  0FEF                     	;# 
  1211  0000                     	;# 
  1212  0001                     	;# 
  1213  0002                     	;# 
  1214  0003                     	;# 
  1215  0004                     	;# 
  1216  0005                     	;# 
  1217  0006                     	;# 
  1218  0007                     	;# 
  1219  0008                     	;# 
  1220  0009                     	;# 
  1221  000A                     	;# 
  1222  000B                     	;# 
  1223  000C                     	;# 
  1224  000D                     	;# 
  1225  000E                     	;# 
  1226  000F                     	;# 
  1227  0010                     	;# 
  1228  0011                     	;# 
  1229  0012                     	;# 
  1230  0013                     	;# 
  1231  0014                     	;# 
  1232  0015                     	;# 
  1233  0016                     	;# 
  1234  0017                     	;# 
  1235  0018                     	;# 
  1236  0019                     	;# 
  1237  001A                     	;# 
  1238  001C                     	;# 
  1239  001C                     	;# 
  1240  001D                     	;# 
  1241  001D                     	;# 
  1242  001E                     	;# 
  1243  001F                     	;# 
  1244  008C                     	;# 
  1245  008C                     	;# 
  1246  008D                     	;# 
  1247  008E                     	;# 
  1248  008E                     	;# 
  1249  008F                     	;# 
  1250  0090                     	;# 
  1251  0090                     	;# 
  1252  0091                     	;# 
  1253  0093                     	;# 
  1254  0094                     	;# 
  1255  0095                     	;# 
  1256  0096                     	;# 
  1257  0097                     	;# 
  1258  0098                     	;# 
  1259  0099                     	;# 
  1260  009A                     	;# 
  1261  009B                     	;# 
  1262  009C                     	;# 
  1263  009D                     	;# 
  1264  009E                     	;# 
  1265  010C                     	;# 
  1266  010D                     	;# 
  1267  010E                     	;# 
  1268  010E                     	;# 
  1269  010F                     	;# 
  1270  0110                     	;# 
  1271  0110                     	;# 
  1272  0111                     	;# 
  1273  0112                     	;# 
  1274  0112                     	;# 
  1275  0113                     	;# 
  1276  0114                     	;# 
  1277  0114                     	;# 
  1278  0115                     	;# 
  1279  0116                     	;# 
  1280  0116                     	;# 
  1281  0117                     	;# 
  1282  0119                     	;# 
  1283  0119                     	;# 
  1284  0119                     	;# 
  1285  011A                     	;# 
  1286  011A                     	;# 
  1287  011A                     	;# 
  1288  011B                     	;# 
  1289  011B                     	;# 
  1290  011B                     	;# 
  1291  011B                     	;# 
  1292  011B                     	;# 
  1293  011C                     	;# 
  1294  011C                     	;# 
  1295  011C                     	;# 
  1296  011D                     	;# 
  1297  011D                     	;# 
  1298  011D                     	;# 
  1299  011E                     	;# 
  1300  011E                     	;# 
  1301  011E                     	;# 
  1302  011F                     	;# 
  1303  011F                     	;# 
  1304  011F                     	;# 
  1305  011F                     	;# 
  1306  011F                     	;# 
  1307  018C                     	;# 
  1308  018D                     	;# 
  1309  018E                     	;# 
  1310  018F                     	;# 
  1311  0190                     	;# 
  1312  0191                     	;# 
  1313  0192                     	;# 
  1314  0196                     	;# 
  1315  0197                     	;# 
  1316  0198                     	;# 
  1317  0199                     	;# 
  1318  019A                     	;# 
  1319  019B                     	;# 
  1320  019C                     	;# 
  1321  020C                     	;# 
  1322  020C                     	;# 
  1323  020D                     	;# 
  1324  020E                     	;# 
  1325  020F                     	;# 
  1326  020F                     	;# 
  1327  0210                     	;# 
  1328  0210                     	;# 
  1329  0211                     	;# 
  1330  0211                     	;# 
  1331  0212                     	;# 
  1332  0212                     	;# 
  1333  0213                     	;# 
  1334  0214                     	;# 
  1335  0215                     	;# 
  1336  0215                     	;# 
  1337  0216                     	;# 
  1338  0216                     	;# 
  1339  0217                     	;# 
  1340  0217                     	;# 
  1341  0218                     	;# 
  1342  0218                     	;# 
  1343  0219                     	;# 
  1344  021A                     	;# 
  1345  021B                     	;# 
  1346  021B                     	;# 
  1347  021C                     	;# 
  1348  021C                     	;# 
  1349  021D                     	;# 
  1350  021D                     	;# 
  1351  021E                     	;# 
  1352  021F                     	;# 
  1353  028C                     	;# 
  1354  028C                     	;# 
  1355  028D                     	;# 
  1356  028D                     	;# 
  1357  028E                     	;# 
  1358  028F                     	;# 
  1359  0290                     	;# 
  1360  0290                     	;# 
  1361  0291                     	;# 
  1362  0292                     	;# 
  1363  0292                     	;# 
  1364  0293                     	;# 
  1365  0293                     	;# 
  1366  0294                     	;# 
  1367  0295                     	;# 
  1368  0296                     	;# 
  1369  0296                     	;# 
  1370  0297                     	;# 
  1371  0298                     	;# 
  1372  0298                     	;# 
  1373  0299                     	;# 
  1374  0299                     	;# 
  1375  029A                     	;# 
  1376  029B                     	;# 
  1377  029C                     	;# 
  1378  029C                     	;# 
  1379  029D                     	;# 
  1380  030C                     	;# 
  1381  030C                     	;# 
  1382  030D                     	;# 
  1383  030E                     	;# 
  1384  030F                     	;# 
  1385  0310                     	;# 
  1386  0310                     	;# 
  1387  0311                     	;# 
  1388  0312                     	;# 
  1389  0313                     	;# 
  1390  0314                     	;# 
  1391  0314                     	;# 
  1392  0315                     	;# 
  1393  0316                     	;# 
  1394  0317                     	;# 
  1395  0318                     	;# 
  1396  0318                     	;# 
  1397  0319                     	;# 
  1398  031A                     	;# 
  1399  031B                     	;# 
  1400  031C                     	;# 
  1401  031C                     	;# 
  1402  031D                     	;# 
  1403  031E                     	;# 
  1404  031F                     	;# 
  1405  038C                     	;# 
  1406  038C                     	;# 
  1407  038D                     	;# 
  1408  038E                     	;# 
  1409  0390                     	;# 
  1410  0390                     	;# 
  1411  0391                     	;# 
  1412  0392                     	;# 
  1413  040C                     	;# 
  1414  040D                     	;# 
  1415  040E                     	;# 
  1416  040F                     	;# 
  1417  0410                     	;# 
  1418  0411                     	;# 
  1419  0416                     	;# 
  1420  0416                     	;# 
  1421  0417                     	;# 
  1422  0418                     	;# 
  1423  0418                     	;# 
  1424  0419                     	;# 
  1425  041A                     	;# 
  1426  041A                     	;# 
  1427  041B                     	;# 
  1428  041C                     	;# 
  1429  041C                     	;# 
  1430  041D                     	;# 
  1431  041E                     	;# 
  1432  041F                     	;# 
  1433  048C                     	;# 
  1434  048C                     	;# 
  1435  048D                     	;# 
  1436  048E                     	;# 
  1437  048F                     	;# 
  1438  048F                     	;# 
  1439  0490                     	;# 
  1440  0491                     	;# 
  1441  0492                     	;# 
  1442  0492                     	;# 
  1443  0493                     	;# 
  1444  0494                     	;# 
  1445  0495                     	;# 
  1446  0495                     	;# 
  1447  0496                     	;# 
  1448  0497                     	;# 
  1449  0498                     	;# 
  1450  0499                     	;# 
  1451  049A                     	;# 
  1452  049B                     	;# 
  1453  049C                     	;# 
  1454  049D                     	;# 
  1455  050C                     	;# 
  1456  050C                     	;# 
  1457  050D                     	;# 
  1458  050E                     	;# 
  1459  050F                     	;# 
  1460  050F                     	;# 
  1461  0510                     	;# 
  1462  0511                     	;# 
  1463  0512                     	;# 
  1464  0512                     	;# 
  1465  0513                     	;# 
  1466  0514                     	;# 
  1467  0515                     	;# 
  1468  0515                     	;# 
  1469  0516                     	;# 
  1470  0517                     	;# 
  1471  0518                     	;# 
  1472  0519                     	;# 
  1473  051A                     	;# 
  1474  051B                     	;# 
  1475  051C                     	;# 
  1476  051D                     	;# 
  1477  058C                     	;# 
  1478  058C                     	;# 
  1479  058D                     	;# 
  1480  058E                     	;# 
  1481  058F                     	;# 
  1482  058F                     	;# 
  1483  0590                     	;# 
  1484  0591                     	;# 
  1485  0592                     	;# 
  1486  0593                     	;# 
  1487  060C                     	;# 
  1488  060D                     	;# 
  1489  060E                     	;# 
  1490  060F                     	;# 
  1491  0610                     	;# 
  1492  0611                     	;# 
  1493  0612                     	;# 
  1494  0613                     	;# 
  1495  0614                     	;# 
  1496  0616                     	;# 
  1497  0617                     	;# 
  1498  0618                     	;# 
  1499  0619                     	;# 
  1500  061A                     	;# 
  1501  061B                     	;# 
  1502  061C                     	;# 
  1503  061D                     	;# 
  1504  061E                     	;# 
  1505  068C                     	;# 
  1506  068D                     	;# 
  1507  068E                     	;# 
  1508  068F                     	;# 
  1509  0690                     	;# 
  1510  0691                     	;# 
  1511  0692                     	;# 
  1512  0693                     	;# 
  1513  0694                     	;# 
  1514  070C                     	;# 
  1515  070D                     	;# 
  1516  070E                     	;# 
  1517  070F                     	;# 
  1518  0710                     	;# 
  1519  0711                     	;# 
  1520  0712                     	;# 
  1521  0713                     	;# 
  1522  0714                     	;# 
  1523  0716                     	;# 
  1524  0717                     	;# 
  1525  0718                     	;# 
  1526  0719                     	;# 
  1527  071A                     	;# 
  1528  071B                     	;# 
  1529  071C                     	;# 
  1530  071D                     	;# 
  1531  071E                     	;# 
  1532  0796                     	;# 
  1533  0797                     	;# 
  1534  0798                     	;# 
  1535  0799                     	;# 
  1536  079A                     	;# 
  1537  079B                     	;# 
  1538  080C                     	;# 
  1539  080D                     	;# 
  1540  080E                     	;# 
  1541  080F                     	;# 
  1542  0810                     	;# 
  1543  0811                     	;# 
  1544  0812                     	;# 
  1545  0813                     	;# 
  1546  0814                     	;# 
  1547  081A                     	;# 
  1548  081B                     	;# 
  1549  081C                     	;# 
  1550  081D                     	;# 
  1551  081E                     	;# 
  1552  081F                     	;# 
  1553  088C                     	;# 
  1554  088D                     	;# 
  1555  088E                     	;# 
  1556  088F                     	;# 
  1557  0890                     	;# 
  1558  0891                     	;# 
  1559  0892                     	;# 
  1560  0893                     	;# 
  1561  0895                     	;# 
  1562  0896                     	;# 
  1563  0897                     	;# 
  1564  0898                     	;# 
  1565  0899                     	;# 
  1566  089A                     	;# 
  1567  089B                     	;# 
  1568  090C                     	;# 
  1569  090E                     	;# 
  1570  090F                     	;# 
  1571  091F                     	;# 
  1572  091F                     	;# 
  1573  098F                     	;# 
  1574  098F                     	;# 
  1575  0990                     	;# 
  1576  0991                     	;# 
  1577  0992                     	;# 
  1578  0993                     	;# 
  1579  0994                     	;# 
  1580  0995                     	;# 
  1581  0996                     	;# 
  1582  0997                     	;# 
  1583  0E0F                     	;# 
  1584  0E10                     	;# 
  1585  0E11                     	;# 
  1586  0E12                     	;# 
  1587  0E13                     	;# 
  1588  0E14                     	;# 
  1589  0E15                     	;# 
  1590  0E16                     	;# 
  1591  0E17                     	;# 
  1592  0E18                     	;# 
  1593  0E19                     	;# 
  1594  0E1A                     	;# 
  1595  0E1B                     	;# 
  1596  0E1C                     	;# 
  1597  0E1D                     	;# 
  1598  0E1E                     	;# 
  1599  0E1F                     	;# 
  1600  0E20                     	;# 
  1601  0E21                     	;# 
  1602  0E22                     	;# 
  1603  0E23                     	;# 
  1604  0E24                     	;# 
  1605  0E25                     	;# 
  1606  0E26                     	;# 
  1607  0E27                     	;# 
  1608  0E28                     	;# 
  1609  0E29                     	;# 
  1610  0E2A                     	;# 
  1611  0E2B                     	;# 
  1612  0E2C                     	;# 
  1613  0E2D                     	;# 
  1614  0E2E                     	;# 
  1615  0E2F                     	;# 
  1616  0E30                     	;# 
  1617  0E31                     	;# 
  1618  0E32                     	;# 
  1619  0E33                     	;# 
  1620  0E34                     	;# 
  1621  0E35                     	;# 
  1622  0E36                     	;# 
  1623  0E37                     	;# 
  1624  0E8F                     	;# 
  1625  0E90                     	;# 
  1626  0E91                     	;# 
  1627  0E92                     	;# 
  1628  0E93                     	;# 
  1629  0E94                     	;# 
  1630  0E95                     	;# 
  1631  0E96                     	;# 
  1632  0E97                     	;# 
  1633  0E9C                     	;# 
  1634  0E9D                     	;# 
  1635  0E9E                     	;# 
  1636  0EA1                     	;# 
  1637  0EA2                     	;# 
  1638  0EA3                     	;# 
  1639  0EA4                     	;# 
  1640  0EA5                     	;# 
  1641  0EA9                     	;# 
  1642  0EAA                     	;# 
  1643  0EAB                     	;# 
  1644  0EAC                     	;# 
  1645  0EB1                     	;# 
  1646  0EB2                     	;# 
  1647  0EB3                     	;# 
  1648  0EB8                     	;# 
  1649  0EB9                     	;# 
  1650  0EBA                     	;# 
  1651  0EBB                     	;# 
  1652  0EBC                     	;# 
  1653  0EBD                     	;# 
  1654  0EBE                     	;# 
  1655  0EC3                     	;# 
  1656  0EC5                     	;# 
  1657  0EC6                     	;# 
  1658  0EC7                     	;# 
  1659  0EC8                     	;# 
  1660  0EC9                     	;# 
  1661  0ECA                     	;# 
  1662  0ECB                     	;# 
  1663  0ECC                     	;# 
  1664  0F10                     	;# 
  1665  0F11                     	;# 
  1666  0F12                     	;# 
  1667  0F13                     	;# 
  1668  0F14                     	;# 
  1669  0F15                     	;# 
  1670  0F16                     	;# 
  1671  0F17                     	;# 
  1672  0F18                     	;# 
  1673  0F19                     	;# 
  1674  0F1A                     	;# 
  1675  0F1B                     	;# 
  1676  0F1C                     	;# 
  1677  0F1D                     	;# 
  1678  0F1E                     	;# 
  1679  0F1F                     	;# 
  1680  0F20                     	;# 
  1681  0F21                     	;# 
  1682  0F22                     	;# 
  1683  0F23                     	;# 
  1684  0F24                     	;# 
  1685  0F25                     	;# 
  1686  0F26                     	;# 
  1687  0F27                     	;# 
  1688  0F28                     	;# 
  1689  0F29                     	;# 
  1690  0F2A                     	;# 
  1691  0F2B                     	;# 
  1692  0F2C                     	;# 
  1693  0F2D                     	;# 
  1694  0F2E                     	;# 
  1695  0F2F                     	;# 
  1696  0F30                     	;# 
  1697  0F31                     	;# 
  1698  0F32                     	;# 
  1699  0F38                     	;# 
  1700  0F39                     	;# 
  1701  0F3A                     	;# 
  1702  0F3B                     	;# 
  1703  0F3C                     	;# 
  1704  0F3D                     	;# 
  1705  0F3E                     	;# 
  1706  0F3F                     	;# 
  1707  0F40                     	;# 
  1708  0F41                     	;# 
  1709  0F43                     	;# 
  1710  0F44                     	;# 
  1711  0F45                     	;# 
  1712  0F46                     	;# 
  1713  0F47                     	;# 
  1714  0F48                     	;# 
  1715  0F49                     	;# 
  1716  0F4A                     	;# 
  1717  0F4B                     	;# 
  1718  0F4C                     	;# 
  1719  0F4E                     	;# 
  1720  0F4F                     	;# 
  1721  0F50                     	;# 
  1722  0F51                     	;# 
  1723  0F52                     	;# 
  1724  0F53                     	;# 
  1725  0F54                     	;# 
  1726  0F55                     	;# 
  1727  0F56                     	;# 
  1728  0F57                     	;# 
  1729  0F59                     	;# 
  1730  0F5A                     	;# 
  1731  0F5B                     	;# 
  1732  0F5C                     	;# 
  1733  0F5D                     	;# 
  1734  0F61                     	;# 
  1735  0F62                     	;# 
  1736  0F64                     	;# 
  1737  0F65                     	;# 
  1738  0F66                     	;# 
  1739  0F67                     	;# 
  1740  0F68                     	;# 
  1741  0F69                     	;# 
  1742  0F6A                     	;# 
  1743  0F6B                     	;# 
  1744  0F6C                     	;# 
  1745  0F6D                     	;# 
  1746  0FE4                     	;# 
  1747  0FE5                     	;# 
  1748  0FE6                     	;# 
  1749  0FE7                     	;# 
  1750  0FE8                     	;# 
  1751  0FE9                     	;# 
  1752  0FEA                     	;# 
  1753  0FEB                     	;# 
  1754  0FED                     	;# 
  1755  0FEE                     	;# 
  1756  0FEF                     	;# 
  1757  0000                     	;# 
  1758  0001                     	;# 
  1759  0002                     	;# 
  1760  0003                     	;# 
  1761  0004                     	;# 
  1762  0005                     	;# 
  1763  0006                     	;# 
  1764  0007                     	;# 
  1765  0008                     	;# 
  1766  0009                     	;# 
  1767  000A                     	;# 
  1768  000B                     	;# 
  1769  000C                     	;# 
  1770  000D                     	;# 
  1771  000E                     	;# 
  1772  000F                     	;# 
  1773  0010                     	;# 
  1774  0011                     	;# 
  1775  0012                     	;# 
  1776  0013                     	;# 
  1777  0014                     	;# 
  1778  0015                     	;# 
  1779  0016                     	;# 
  1780  0017                     	;# 
  1781  0018                     	;# 
  1782  0019                     	;# 
  1783  001A                     	;# 
  1784  001C                     	;# 
  1785  001C                     	;# 
  1786  001D                     	;# 
  1787  001D                     	;# 
  1788  001E                     	;# 
  1789  001F                     	;# 
  1790  008C                     	;# 
  1791  008C                     	;# 
  1792  008D                     	;# 
  1793  008E                     	;# 
  1794  008E                     	;# 
  1795  008F                     	;# 
  1796  0090                     	;# 
  1797  0090                     	;# 
  1798  0091                     	;# 
  1799  0093                     	;# 
  1800  0094                     	;# 
  1801  0095                     	;# 
  1802  0096                     	;# 
  1803  0097                     	;# 
  1804  0098                     	;# 
  1805  0099                     	;# 
  1806  009A                     	;# 
  1807  009B                     	;# 
  1808  009C                     	;# 
  1809  009D                     	;# 
  1810  009E                     	;# 
  1811  010C                     	;# 
  1812  010D                     	;# 
  1813  010E                     	;# 
  1814  010E                     	;# 
  1815  010F                     	;# 
  1816  0110                     	;# 
  1817  0110                     	;# 
  1818  0111                     	;# 
  1819  0112                     	;# 
  1820  0112                     	;# 
  1821  0113                     	;# 
  1822  0114                     	;# 
  1823  0114                     	;# 
  1824  0115                     	;# 
  1825  0116                     	;# 
  1826  0116                     	;# 
  1827  0117                     	;# 
  1828  0119                     	;# 
  1829  0119                     	;# 
  1830  0119                     	;# 
  1831  011A                     	;# 
  1832  011A                     	;# 
  1833  011A                     	;# 
  1834  011B                     	;# 
  1835  011B                     	;# 
  1836  011B                     	;# 
  1837  011B                     	;# 
  1838  011B                     	;# 
  1839  011C                     	;# 
  1840  011C                     	;# 
  1841  011C                     	;# 
  1842  011D                     	;# 
  1843  011D                     	;# 
  1844  011D                     	;# 
  1845  011E                     	;# 
  1846  011E                     	;# 
  1847  011E                     	;# 
  1848  011F                     	;# 
  1849  011F                     	;# 
  1850  011F                     	;# 
  1851  011F                     	;# 
  1852  011F                     	;# 
  1853  018C                     	;# 
  1854  018D                     	;# 
  1855  018E                     	;# 
  1856  018F                     	;# 
  1857  0190                     	;# 
  1858  0191                     	;# 
  1859  0192                     	;# 
  1860  0196                     	;# 
  1861  0197                     	;# 
  1862  0198                     	;# 
  1863  0199                     	;# 
  1864  019A                     	;# 
  1865  019B                     	;# 
  1866  019C                     	;# 
  1867  020C                     	;# 
  1868  020C                     	;# 
  1869  020D                     	;# 
  1870  020E                     	;# 
  1871  020F                     	;# 
  1872  020F                     	;# 
  1873  0210                     	;# 
  1874  0210                     	;# 
  1875  0211                     	;# 
  1876  0211                     	;# 
  1877  0212                     	;# 
  1878  0212                     	;# 
  1879  0213                     	;# 
  1880  0214                     	;# 
  1881  0215                     	;# 
  1882  0215                     	;# 
  1883  0216                     	;# 
  1884  0216                     	;# 
  1885  0217                     	;# 
  1886  0217                     	;# 
  1887  0218                     	;# 
  1888  0218                     	;# 
  1889  0219                     	;# 
  1890  021A                     	;# 
  1891  021B                     	;# 
  1892  021B                     	;# 
  1893  021C                     	;# 
  1894  021C                     	;# 
  1895  021D                     	;# 
  1896  021D                     	;# 
  1897  021E                     	;# 
  1898  021F                     	;# 
  1899  028C                     	;# 
  1900  028C                     	;# 
  1901  028D                     	;# 
  1902  028D                     	;# 
  1903  028E                     	;# 
  1904  028F                     	;# 
  1905  0290                     	;# 
  1906  0290                     	;# 
  1907  0291                     	;# 
  1908  0292                     	;# 
  1909  0292                     	;# 
  1910  0293                     	;# 
  1911  0293                     	;# 
  1912  0294                     	;# 
  1913  0295                     	;# 
  1914  0296                     	;# 
  1915  0296                     	;# 
  1916  0297                     	;# 
  1917  0298                     	;# 
  1918  0298                     	;# 
  1919  0299                     	;# 
  1920  0299                     	;# 
  1921  029A                     	;# 
  1922  029B                     	;# 
  1923  029C                     	;# 
  1924  029C                     	;# 
  1925  029D                     	;# 
  1926  030C                     	;# 
  1927  030C                     	;# 
  1928  030D                     	;# 
  1929  030E                     	;# 
  1930  030F                     	;# 
  1931  0310                     	;# 
  1932  0310                     	;# 
  1933  0311                     	;# 
  1934  0312                     	;# 
  1935  0313                     	;# 
  1936  0314                     	;# 
  1937  0314                     	;# 
  1938  0315                     	;# 
  1939  0316                     	;# 
  1940  0317                     	;# 
  1941  0318                     	;# 
  1942  0318                     	;# 
  1943  0319                     	;# 
  1944  031A                     	;# 
  1945  031B                     	;# 
  1946  031C                     	;# 
  1947  031C                     	;# 
  1948  031D                     	;# 
  1949  031E                     	;# 
  1950  031F                     	;# 
  1951  038C                     	;# 
  1952  038C                     	;# 
  1953  038D                     	;# 
  1954  038E                     	;# 
  1955  0390                     	;# 
  1956  0390                     	;# 
  1957  0391                     	;# 
  1958  0392                     	;# 
  1959  040C                     	;# 
  1960  040D                     	;# 
  1961  040E                     	;# 
  1962  040F                     	;# 
  1963  0410                     	;# 
  1964  0411                     	;# 
  1965  0416                     	;# 
  1966  0416                     	;# 
  1967  0417                     	;# 
  1968  0418                     	;# 
  1969  0418                     	;# 
  1970  0419                     	;# 
  1971  041A                     	;# 
  1972  041A                     	;# 
  1973  041B                     	;# 
  1974  041C                     	;# 
  1975  041C                     	;# 
  1976  041D                     	;# 
  1977  041E                     	;# 
  1978  041F                     	;# 
  1979  048C                     	;# 
  1980  048C                     	;# 
  1981  048D                     	;# 
  1982  048E                     	;# 
  1983  048F                     	;# 
  1984  048F                     	;# 
  1985  0490                     	;# 
  1986  0491                     	;# 
  1987  0492                     	;# 
  1988  0492                     	;# 
  1989  0493                     	;# 
  1990  0494                     	;# 
  1991  0495                     	;# 
  1992  0495                     	;# 
  1993  0496                     	;# 
  1994  0497                     	;# 
  1995  0498                     	;# 
  1996  0499                     	;# 
  1997  049A                     	;# 
  1998  049B                     	;# 
  1999  049C                     	;# 
  2000  049D                     	;# 
  2001  050C                     	;# 
  2002  050C                     	;# 
  2003  050D                     	;# 
  2004  050E                     	;# 
  2005  050F                     	;# 
  2006  050F                     	;# 
  2007  0510                     	;# 
  2008  0511                     	;# 
  2009  0512                     	;# 
  2010  0512                     	;# 
  2011  0513                     	;# 
  2012  0514                     	;# 
  2013  0515                     	;# 
  2014  0515                     	;# 
  2015  0516                     	;# 
  2016  0517                     	;# 
  2017  0518                     	;# 
  2018  0519                     	;# 
  2019  051A                     	;# 
  2020  051B                     	;# 
  2021  051C                     	;# 
  2022  051D                     	;# 
  2023  058C                     	;# 
  2024  058C                     	;# 
  2025  058D                     	;# 
  2026  058E                     	;# 
  2027  058F                     	;# 
  2028  058F                     	;# 
  2029  0590                     	;# 
  2030  0591                     	;# 
  2031  0592                     	;# 
  2032  0593                     	;# 
  2033  060C                     	;# 
  2034  060D                     	;# 
  2035  060E                     	;# 
  2036  060F                     	;# 
  2037  0610                     	;# 
  2038  0611                     	;# 
  2039  0612                     	;# 
  2040  0613                     	;# 
  2041  0614                     	;# 
  2042  0616                     	;# 
  2043  0617                     	;# 
  2044  0618                     	;# 
  2045  0619                     	;# 
  2046  061A                     	;# 
  2047  061B                     	;# 
  2048  061C                     	;# 
  2049  061D                     	;# 
  2050  061E                     	;# 
  2051  068C                     	;# 
  2052  068D                     	;# 
  2053  068E                     	;# 
  2054  068F                     	;# 
  2055  0690                     	;# 
  2056  0691                     	;# 
  2057  0692                     	;# 
  2058  0693                     	;# 
  2059  0694                     	;# 
  2060  070C                     	;# 
  2061  070D                     	;# 
  2062  070E                     	;# 
  2063  070F                     	;# 
  2064  0710                     	;# 
  2065  0711                     	;# 
  2066  0712                     	;# 
  2067  0713                     	;# 
  2068  0714                     	;# 
  2069  0716                     	;# 
  2070  0717                     	;# 
  2071  0718                     	;# 
  2072  0719                     	;# 
  2073  071A                     	;# 
  2074  071B                     	;# 
  2075  071C                     	;# 
  2076  071D                     	;# 
  2077  071E                     	;# 
  2078  0796                     	;# 
  2079  0797                     	;# 
  2080  0798                     	;# 
  2081  0799                     	;# 
  2082  079A                     	;# 
  2083  079B                     	;# 
  2084  080C                     	;# 
  2085  080D                     	;# 
  2086  080E                     	;# 
  2087  080F                     	;# 
  2088  0810                     	;# 
  2089  0811                     	;# 
  2090  0812                     	;# 
  2091  0813                     	;# 
  2092  0814                     	;# 
  2093  081A                     	;# 
  2094  081B                     	;# 
  2095  081C                     	;# 
  2096  081D                     	;# 
  2097  081E                     	;# 
  2098  081F                     	;# 
  2099  088C                     	;# 
  2100  088D                     	;# 
  2101  088E                     	;# 
  2102  088F                     	;# 
  2103  0890                     	;# 
  2104  0891                     	;# 
  2105  0892                     	;# 
  2106  0893                     	;# 
  2107  0895                     	;# 
  2108  0896                     	;# 
  2109  0897                     	;# 
  2110  0898                     	;# 
  2111  0899                     	;# 
  2112  089A                     	;# 
  2113  089B                     	;# 
  2114  090C                     	;# 
  2115  090E                     	;# 
  2116  090F                     	;# 
  2117  091F                     	;# 
  2118  091F                     	;# 
  2119  098F                     	;# 
  2120  098F                     	;# 
  2121  0990                     	;# 
  2122  0991                     	;# 
  2123  0992                     	;# 
  2124  0993                     	;# 
  2125  0994                     	;# 
  2126  0995                     	;# 
  2127  0996                     	;# 
  2128  0997                     	;# 
  2129  0E0F                     	;# 
  2130  0E10                     	;# 
  2131  0E11                     	;# 
  2132  0E12                     	;# 
  2133  0E13                     	;# 
  2134  0E14                     	;# 
  2135  0E15                     	;# 
  2136  0E16                     	;# 
  2137  0E17                     	;# 
  2138  0E18                     	;# 
  2139  0E19                     	;# 
  2140  0E1A                     	;# 
  2141  0E1B                     	;# 
  2142  0E1C                     	;# 
  2143  0E1D                     	;# 
  2144  0E1E                     	;# 
  2145  0E1F                     	;# 
  2146  0E20                     	;# 
  2147  0E21                     	;# 
  2148  0E22                     	;# 
  2149  0E23                     	;# 
  2150  0E24                     	;# 
  2151  0E25                     	;# 
  2152  0E26                     	;# 
  2153  0E27                     	;# 
  2154  0E28                     	;# 
  2155  0E29                     	;# 
  2156  0E2A                     	;# 
  2157  0E2B                     	;# 
  2158  0E2C                     	;# 
  2159  0E2D                     	;# 
  2160  0E2E                     	;# 
  2161  0E2F                     	;# 
  2162  0E30                     	;# 
  2163  0E31                     	;# 
  2164  0E32                     	;# 
  2165  0E33                     	;# 
  2166  0E34                     	;# 
  2167  0E35                     	;# 
  2168  0E36                     	;# 
  2169  0E37                     	;# 
  2170  0E8F                     	;# 
  2171  0E90                     	;# 
  2172  0E91                     	;# 
  2173  0E92                     	;# 
  2174  0E93                     	;# 
  2175  0E94                     	;# 
  2176  0E95                     	;# 
  2177  0E96                     	;# 
  2178  0E97                     	;# 
  2179  0E9C                     	;# 
  2180  0E9D                     	;# 
  2181  0E9E                     	;# 
  2182  0EA1                     	;# 
  2183  0EA2                     	;# 
  2184  0EA3                     	;# 
  2185  0EA4                     	;# 
  2186  0EA5                     	;# 
  2187  0EA9                     	;# 
  2188  0EAA                     	;# 
  2189  0EAB                     	;# 
  2190  0EAC                     	;# 
  2191  0EB1                     	;# 
  2192  0EB2                     	;# 
  2193  0EB3                     	;# 
  2194  0EB8                     	;# 
  2195  0EB9                     	;# 
  2196  0EBA                     	;# 
  2197  0EBB                     	;# 
  2198  0EBC                     	;# 
  2199  0EBD                     	;# 
  2200  0EBE                     	;# 
  2201  0EC3                     	;# 
  2202  0EC5                     	;# 
  2203  0EC6                     	;# 
  2204  0EC7                     	;# 
  2205  0EC8                     	;# 
  2206  0EC9                     	;# 
  2207  0ECA                     	;# 
  2208  0ECB                     	;# 
  2209  0ECC                     	;# 
  2210  0F10                     	;# 
  2211  0F11                     	;# 
  2212  0F12                     	;# 
  2213  0F13                     	;# 
  2214  0F14                     	;# 
  2215  0F15                     	;# 
  2216  0F16                     	;# 
  2217  0F17                     	;# 
  2218  0F18                     	;# 
  2219  0F19                     	;# 
  2220  0F1A                     	;# 
  2221  0F1B                     	;# 
  2222  0F1C                     	;# 
  2223  0F1D                     	;# 
  2224  0F1E                     	;# 
  2225  0F1F                     	;# 
  2226  0F20                     	;# 
  2227  0F21                     	;# 
  2228  0F22                     	;# 
  2229  0F23                     	;# 
  2230  0F24                     	;# 
  2231  0F25                     	;# 
  2232  0F26                     	;# 
  2233  0F27                     	;# 
  2234  0F28                     	;# 
  2235  0F29                     	;# 
  2236  0F2A                     	;# 
  2237  0F2B                     	;# 
  2238  0F2C                     	;# 
  2239  0F2D                     	;# 
  2240  0F2E                     	;# 
  2241  0F2F                     	;# 
  2242  0F30                     	;# 
  2243  0F31                     	;# 
  2244  0F32                     	;# 
  2245  0F38                     	;# 
  2246  0F39                     	;# 
  2247  0F3A                     	;# 
  2248  0F3B                     	;# 
  2249  0F3C                     	;# 
  2250  0F3D                     	;# 
  2251  0F3E                     	;# 
  2252  0F3F                     	;# 
  2253  0F40                     	;# 
  2254  0F41                     	;# 
  2255  0F43                     	;# 
  2256  0F44                     	;# 
  2257  0F45                     	;# 
  2258  0F46                     	;# 
  2259  0F47                     	;# 
  2260  0F48                     	;# 
  2261  0F49                     	;# 
  2262  0F4A                     	;# 
  2263  0F4B                     	;# 
  2264  0F4C                     	;# 
  2265  0F4E                     	;# 
  2266  0F4F                     	;# 
  2267  0F50                     	;# 
  2268  0F51                     	;# 
  2269  0F52                     	;# 
  2270  0F53                     	;# 
  2271  0F54                     	;# 
  2272  0F55                     	;# 
  2273  0F56                     	;# 
  2274  0F57                     	;# 
  2275  0F59                     	;# 
  2276  0F5A                     	;# 
  2277  0F5B                     	;# 
  2278  0F5C                     	;# 
  2279  0F5D                     	;# 
  2280  0F61                     	;# 
  2281  0F62                     	;# 
  2282  0F64                     	;# 
  2283  0F65                     	;# 
  2284  0F66                     	;# 
  2285  0F67                     	;# 
  2286  0F68                     	;# 
  2287  0F69                     	;# 
  2288  0F6A                     	;# 
  2289  0F6B                     	;# 
  2290  0F6C                     	;# 
  2291  0F6D                     	;# 
  2292  0FE4                     	;# 
  2293  0FE5                     	;# 
  2294  0FE6                     	;# 
  2295  0FE7                     	;# 
  2296  0FE8                     	;# 
  2297  0FE9                     	;# 
  2298  0FEA                     	;# 
  2299  0FEB                     	;# 
  2300  0FED                     	;# 
  2301  0FEE                     	;# 
  2302  0FEF                     	;# 
  2303  0000                     	;# 
  2304  0001                     	;# 
  2305  0002                     	;# 
  2306  0003                     	;# 
  2307  0004                     	;# 
  2308  0005                     	;# 
  2309  0006                     	;# 
  2310  0007                     	;# 
  2311  0008                     	;# 
  2312  0009                     	;# 
  2313  000A                     	;# 
  2314  000B                     	;# 
  2315  000C                     	;# 
  2316  000D                     	;# 
  2317  000E                     	;# 
  2318  000F                     	;# 
  2319  0010                     	;# 
  2320  0011                     	;# 
  2321  0012                     	;# 
  2322  0013                     	;# 
  2323  0014                     	;# 
  2324  0015                     	;# 
  2325  0016                     	;# 
  2326  0017                     	;# 
  2327  0018                     	;# 
  2328  0019                     	;# 
  2329  001A                     	;# 
  2330  001C                     	;# 
  2331  001C                     	;# 
  2332  001D                     	;# 
  2333  001D                     	;# 
  2334  001E                     	;# 
  2335  001F                     	;# 
  2336  008C                     	;# 
  2337  008C                     	;# 
  2338  008D                     	;# 
  2339  008E                     	;# 
  2340  008E                     	;# 
  2341  008F                     	;# 
  2342  0090                     	;# 
  2343  0090                     	;# 
  2344  0091                     	;# 
  2345  0093                     	;# 
  2346  0094                     	;# 
  2347  0095                     	;# 
  2348  0096                     	;# 
  2349  0097                     	;# 
  2350  0098                     	;# 
  2351  0099                     	;# 
  2352  009A                     	;# 
  2353  009B                     	;# 
  2354  009C                     	;# 
  2355  009D                     	;# 
  2356  009E                     	;# 
  2357  010C                     	;# 
  2358  010D                     	;# 
  2359  010E                     	;# 
  2360  010E                     	;# 
  2361  010F                     	;# 
  2362  0110                     	;# 
  2363  0110                     	;# 
  2364  0111                     	;# 
  2365  0112                     	;# 
  2366  0112                     	;# 
  2367  0113                     	;# 
  2368  0114                     	;# 
  2369  0114                     	;# 
  2370  0115                     	;# 
  2371  0116                     	;# 
  2372  0116                     	;# 
  2373  0117                     	;# 
  2374  0119                     	;# 
  2375  0119                     	;# 
  2376  0119                     	;# 
  2377  011A                     	;# 
  2378  011A                     	;# 
  2379  011A                     	;# 
  2380  011B                     	;# 
  2381  011B                     	;# 
  2382  011B                     	;# 
  2383  011B                     	;# 
  2384  011B                     	;# 
  2385  011C                     	;# 
  2386  011C                     	;# 
  2387  011C                     	;# 
  2388  011D                     	;# 
  2389  011D                     	;# 
  2390  011D                     	;# 
  2391  011E                     	;# 
  2392  011E                     	;# 
  2393  011E                     	;# 
  2394  011F                     	;# 
  2395  011F                     	;# 
  2396  011F                     	;# 
  2397  011F                     	;# 
  2398  011F                     	;# 
  2399  018C                     	;# 
  2400  018D                     	;# 
  2401  018E                     	;# 
  2402  018F                     	;# 
  2403  0190                     	;# 
  2404  0191                     	;# 
  2405  0192                     	;# 
  2406  0196                     	;# 
  2407  0197                     	;# 
  2408  0198                     	;# 
  2409  0199                     	;# 
  2410  019A                     	;# 
  2411  019B                     	;# 
  2412  019C                     	;# 
  2413  020C                     	;# 
  2414  020C                     	;# 
  2415  020D                     	;# 
  2416  020E                     	;# 
  2417  020F                     	;# 
  2418  020F                     	;# 
  2419  0210                     	;# 
  2420  0210                     	;# 
  2421  0211                     	;# 
  2422  0211                     	;# 
  2423  0212                     	;# 
  2424  0212                     	;# 
  2425  0213                     	;# 
  2426  0214                     	;# 
  2427  0215                     	;# 
  2428  0215                     	;# 
  2429  0216                     	;# 
  2430  0216                     	;# 
  2431  0217                     	;# 
  2432  0217                     	;# 
  2433  0218                     	;# 
  2434  0218                     	;# 
  2435  0219                     	;# 
  2436  021A                     	;# 
  2437  021B                     	;# 
  2438  021B                     	;# 
  2439  021C                     	;# 
  2440  021C                     	;# 
  2441  021D                     	;# 
  2442  021D                     	;# 
  2443  021E                     	;# 
  2444  021F                     	;# 
  2445  028C                     	;# 
  2446  028C                     	;# 
  2447  028D                     	;# 
  2448  028D                     	;# 
  2449  028E                     	;# 
  2450  028F                     	;# 
  2451  0290                     	;# 
  2452  0290                     	;# 
  2453  0291                     	;# 
  2454  0292                     	;# 
  2455  0292                     	;# 
  2456  0293                     	;# 
  2457  0293                     	;# 
  2458  0294                     	;# 
  2459  0295                     	;# 
  2460  0296                     	;# 
  2461  0296                     	;# 
  2462  0297                     	;# 
  2463  0298                     	;# 
  2464  0298                     	;# 
  2465  0299                     	;# 
  2466  0299                     	;# 
  2467  029A                     	;# 
  2468  029B                     	;# 
  2469  029C                     	;# 
  2470  029C                     	;# 
  2471  029D                     	;# 
  2472  030C                     	;# 
  2473  030C                     	;# 
  2474  030D                     	;# 
  2475  030E                     	;# 
  2476  030F                     	;# 
  2477  0310                     	;# 
  2478  0310                     	;# 
  2479  0311                     	;# 
  2480  0312                     	;# 
  2481  0313                     	;# 
  2482  0314                     	;# 
  2483  0314                     	;# 
  2484  0315                     	;# 
  2485  0316                     	;# 
  2486  0317                     	;# 
  2487  0318                     	;# 
  2488  0318                     	;# 
  2489  0319                     	;# 
  2490  031A                     	;# 
  2491  031B                     	;# 
  2492  031C                     	;# 
  2493  031C                     	;# 
  2494  031D                     	;# 
  2495  031E                     	;# 
  2496  031F                     	;# 
  2497  038C                     	;# 
  2498  038C                     	;# 
  2499  038D                     	;# 
  2500  038E                     	;# 
  2501  0390                     	;# 
  2502  0390                     	;# 
  2503  0391                     	;# 
  2504  0392                     	;# 
  2505  040C                     	;# 
  2506  040D                     	;# 
  2507  040E                     	;# 
  2508  040F                     	;# 
  2509  0410                     	;# 
  2510  0411                     	;# 
  2511  0416                     	;# 
  2512  0416                     	;# 
  2513  0417                     	;# 
  2514  0418                     	;# 
  2515  0418                     	;# 
  2516  0419                     	;# 
  2517  041A                     	;# 
  2518  041A                     	;# 
  2519  041B                     	;# 
  2520  041C                     	;# 
  2521  041C                     	;# 
  2522  041D                     	;# 
  2523  041E                     	;# 
  2524  041F                     	;# 
  2525  048C                     	;# 
  2526  048C                     	;# 
  2527  048D                     	;# 
  2528  048E                     	;# 
  2529  048F                     	;# 
  2530  048F                     	;# 
  2531  0490                     	;# 
  2532  0491                     	;# 
  2533  0492                     	;# 
  2534  0492                     	;# 
  2535  0493                     	;# 
  2536  0494                     	;# 
  2537  0495                     	;# 
  2538  0495                     	;# 
  2539  0496                     	;# 
  2540  0497                     	;# 
  2541  0498                     	;# 
  2542  0499                     	;# 
  2543  049A                     	;# 
  2544  049B                     	;# 
  2545  049C                     	;# 
  2546  049D                     	;# 
  2547  050C                     	;# 
  2548  050C                     	;# 
  2549  050D                     	;# 
  2550  050E                     	;# 
  2551  050F                     	;# 
  2552  050F                     	;# 
  2553  0510                     	;# 
  2554  0511                     	;# 
  2555  0512                     	;# 
  2556  0512                     	;# 
  2557  0513                     	;# 
  2558  0514                     	;# 
  2559  0515                     	;# 
  2560  0515                     	;# 
  2561  0516                     	;# 
  2562  0517                     	;# 
  2563  0518                     	;# 
  2564  0519                     	;# 
  2565  051A                     	;# 
  2566  051B                     	;# 
  2567  051C                     	;# 
  2568  051D                     	;# 
  2569  058C                     	;# 
  2570  058C                     	;# 
  2571  058D                     	;# 
  2572  058E                     	;# 
  2573  058F                     	;# 
  2574  058F                     	;# 
  2575  0590                     	;# 
  2576  0591                     	;# 
  2577  0592                     	;# 
  2578  0593                     	;# 
  2579  060C                     	;# 
  2580  060D                     	;# 
  2581  060E                     	;# 
  2582  060F                     	;# 
  2583  0610                     	;# 
  2584  0611                     	;# 
  2585  0612                     	;# 
  2586  0613                     	;# 
  2587  0614                     	;# 
  2588  0616                     	;# 
  2589  0617                     	;# 
  2590  0618                     	;# 
  2591  0619                     	;# 
  2592  061A                     	;# 
  2593  061B                     	;# 
  2594  061C                     	;# 
  2595  061D                     	;# 
  2596  061E                     	;# 
  2597  068C                     	;# 
  2598  068D                     	;# 
  2599  068E                     	;# 
  2600  068F                     	;# 
  2601  0690                     	;# 
  2602  0691                     	;# 
  2603  0692                     	;# 
  2604  0693                     	;# 
  2605  0694                     	;# 
  2606  070C                     	;# 
  2607  070D                     	;# 
  2608  070E                     	;# 
  2609  070F                     	;# 
  2610  0710                     	;# 
  2611  0711                     	;# 
  2612  0712                     	;# 
  2613  0713                     	;# 
  2614  0714                     	;# 
  2615  0716                     	;# 
  2616  0717                     	;# 
  2617  0718                     	;# 
  2618  0719                     	;# 
  2619  071A                     	;# 
  2620  071B                     	;# 
  2621  071C                     	;# 
  2622  071D                     	;# 
  2623  071E                     	;# 
  2624  0796                     	;# 
  2625  0797                     	;# 
  2626  0798                     	;# 
  2627  0799                     	;# 
  2628  079A                     	;# 
  2629  079B                     	;# 
  2630  080C                     	;# 
  2631  080D                     	;# 
  2632  080E                     	;# 
  2633  080F                     	;# 
  2634  0810                     	;# 
  2635  0811                     	;# 
  2636  0812                     	;# 
  2637  0813                     	;# 
  2638  0814                     	;# 
  2639  081A                     	;# 
  2640  081B                     	;# 
  2641  081C                     	;# 
  2642  081D                     	;# 
  2643  081E                     	;# 
  2644  081F                     	;# 
  2645  088C                     	;# 
  2646  088D                     	;# 
  2647  088E                     	;# 
  2648  088F                     	;# 
  2649  0890                     	;# 
  2650  0891                     	;# 
  2651  0892                     	;# 
  2652  0893                     	;# 
  2653  0895                     	;# 
  2654  0896                     	;# 
  2655  0897                     	;# 
  2656  0898                     	;# 
  2657  0899                     	;# 
  2658  089A                     	;# 
  2659  089B                     	;# 
  2660  090C                     	;# 
  2661  090E                     	;# 
  2662  090F                     	;# 
  2663  091F                     	;# 
  2664  091F                     	;# 
  2665  098F                     	;# 
  2666  098F                     	;# 
  2667  0990                     	;# 
  2668  0991                     	;# 
  2669  0992                     	;# 
  2670  0993                     	;# 
  2671  0994                     	;# 
  2672  0995                     	;# 
  2673  0996                     	;# 
  2674  0997                     	;# 
  2675  0E0F                     	;# 
  2676  0E10                     	;# 
  2677  0E11                     	;# 
  2678  0E12                     	;# 
  2679  0E13                     	;# 
  2680  0E14                     	;# 
  2681  0E15                     	;# 
  2682  0E16                     	;# 
  2683  0E17                     	;# 
  2684  0E18                     	;# 
  2685  0E19                     	;# 
  2686  0E1A                     	;# 
  2687  0E1B                     	;# 
  2688  0E1C                     	;# 
  2689  0E1D                     	;# 
  2690  0E1E                     	;# 
  2691  0E1F                     	;# 
  2692  0E20                     	;# 
  2693  0E21                     	;# 
  2694  0E22                     	;# 
  2695  0E23                     	;# 
  2696  0E24                     	;# 
  2697  0E25                     	;# 
  2698  0E26                     	;# 
  2699  0E27                     	;# 
  2700  0E28                     	;# 
  2701  0E29                     	;# 
  2702  0E2A                     	;# 
  2703  0E2B                     	;# 
  2704  0E2C                     	;# 
  2705  0E2D                     	;# 
  2706  0E2E                     	;# 
  2707  0E2F                     	;# 
  2708  0E30                     	;# 
  2709  0E31                     	;# 
  2710  0E32                     	;# 
  2711  0E33                     	;# 
  2712  0E34                     	;# 
  2713  0E35                     	;# 
  2714  0E36                     	;# 
  2715  0E37                     	;# 
  2716  0E8F                     	;# 
  2717  0E90                     	;# 
  2718  0E91                     	;# 
  2719  0E92                     	;# 
  2720  0E93                     	;# 
  2721  0E94                     	;# 
  2722  0E95                     	;# 
  2723  0E96                     	;# 
  2724  0E97                     	;# 
  2725  0E9C                     	;# 
  2726  0E9D                     	;# 
  2727  0E9E                     	;# 
  2728  0EA1                     	;# 
  2729  0EA2                     	;# 
  2730  0EA3                     	;# 
  2731  0EA4                     	;# 
  2732  0EA5                     	;# 
  2733  0EA9                     	;# 
  2734  0EAA                     	;# 
  2735  0EAB                     	;# 
  2736  0EAC                     	;# 
  2737  0EB1                     	;# 
  2738  0EB2                     	;# 
  2739  0EB3                     	;# 
  2740  0EB8                     	;# 
  2741  0EB9                     	;# 
  2742  0EBA                     	;# 
  2743  0EBB                     	;# 
  2744  0EBC                     	;# 
  2745  0EBD                     	;# 
  2746  0EBE                     	;# 
  2747  0EC3                     	;# 
  2748  0EC5                     	;# 
  2749  0EC6                     	;# 
  2750  0EC7                     	;# 
  2751  0EC8                     	;# 
  2752  0EC9                     	;# 
  2753  0ECA                     	;# 
  2754  0ECB                     	;# 
  2755  0ECC                     	;# 
  2756  0F10                     	;# 
  2757  0F11                     	;# 
  2758  0F12                     	;# 
  2759  0F13                     	;# 
  2760  0F14                     	;# 
  2761  0F15                     	;# 
  2762  0F16                     	;# 
  2763  0F17                     	;# 
  2764  0F18                     	;# 
  2765  0F19                     	;# 
  2766  0F1A                     	;# 
  2767  0F1B                     	;# 
  2768  0F1C                     	;# 
  2769  0F1D                     	;# 
  2770  0F1E                     	;# 
  2771  0F1F                     	;# 
  2772  0F20                     	;# 
  2773  0F21                     	;# 
  2774  0F22                     	;# 
  2775  0F23                     	;# 
  2776  0F24                     	;# 
  2777  0F25                     	;# 
  2778  0F26                     	;# 
  2779  0F27                     	;# 
  2780  0F28                     	;# 
  2781  0F29                     	;# 
  2782  0F2A                     	;# 
  2783  0F2B                     	;# 
  2784  0F2C                     	;# 
  2785  0F2D                     	;# 
  2786  0F2E                     	;# 
  2787  0F2F                     	;# 
  2788  0F30                     	;# 
  2789  0F31                     	;# 
  2790  0F32                     	;# 
  2791  0F38                     	;# 
  2792  0F39                     	;# 
  2793  0F3A                     	;# 
  2794  0F3B                     	;# 
  2795  0F3C                     	;# 
  2796  0F3D                     	;# 
  2797  0F3E                     	;# 
  2798  0F3F                     	;# 
  2799  0F40                     	;# 
  2800  0F41                     	;# 
  2801  0F43                     	;# 
  2802  0F44                     	;# 
  2803  0F45                     	;# 
  2804  0F46                     	;# 
  2805  0F47                     	;# 
  2806  0F48                     	;# 
  2807  0F49                     	;# 
  2808  0F4A                     	;# 
  2809  0F4B                     	;# 
  2810  0F4C                     	;# 
  2811  0F4E                     	;# 
  2812  0F4F                     	;# 
  2813  0F50                     	;# 
  2814  0F51                     	;# 
  2815  0F52                     	;# 
  2816  0F53                     	;# 
  2817  0F54                     	;# 
  2818  0F55                     	;# 
  2819  0F56                     	;# 
  2820  0F57                     	;# 
  2821  0F59                     	;# 
  2822  0F5A                     	;# 
  2823  0F5B                     	;# 
  2824  0F5C                     	;# 
  2825  0F5D                     	;# 
  2826  0F61                     	;# 
  2827  0F62                     	;# 
  2828  0F64                     	;# 
  2829  0F65                     	;# 
  2830  0F66                     	;# 
  2831  0F67                     	;# 
  2832  0F68                     	;# 
  2833  0F69                     	;# 
  2834  0F6A                     	;# 
  2835  0F6B                     	;# 
  2836  0F6C                     	;# 
  2837  0F6D                     	;# 
  2838  0FE4                     	;# 
  2839  0FE5                     	;# 
  2840  0FE6                     	;# 
  2841  0FE7                     	;# 
  2842  0FE8                     	;# 
  2843  0FE9                     	;# 
  2844  0FEA                     	;# 
  2845  0FEB                     	;# 
  2846  0FED                     	;# 
  2847  0FEE                     	;# 
  2848  0FEF                     	;# 
  2849  0000                     	;# 
  2850  0001                     	;# 
  2851  0002                     	;# 
  2852  0003                     	;# 
  2853  0004                     	;# 
  2854  0005                     	;# 
  2855  0006                     	;# 
  2856  0007                     	;# 
  2857  0008                     	;# 
  2858  0009                     	;# 
  2859  000A                     	;# 
  2860  000B                     	;# 
  2861  000C                     	;# 
  2862  000D                     	;# 
  2863  000E                     	;# 
  2864  000F                     	;# 
  2865  0010                     	;# 
  2866  0011                     	;# 
  2867  0012                     	;# 
  2868  0013                     	;# 
  2869  0014                     	;# 
  2870  0015                     	;# 
  2871  0016                     	;# 
  2872  0017                     	;# 
  2873  0018                     	;# 
  2874  0019                     	;# 
  2875  001A                     	;# 
  2876  001C                     	;# 
  2877  001C                     	;# 
  2878  001D                     	;# 
  2879  001D                     	;# 
  2880  001E                     	;# 
  2881  001F                     	;# 
  2882  008C                     	;# 
  2883  008C                     	;# 
  2884  008D                     	;# 
  2885  008E                     	;# 
  2886  008E                     	;# 
  2887  008F                     	;# 
  2888  0090                     	;# 
  2889  0090                     	;# 
  2890  0091                     	;# 
  2891  0093                     	;# 
  2892  0094                     	;# 
  2893  0095                     	;# 
  2894  0096                     	;# 
  2895  0097                     	;# 
  2896  0098                     	;# 
  2897  0099                     	;# 
  2898  009A                     	;# 
  2899  009B                     	;# 
  2900  009C                     	;# 
  2901  009D                     	;# 
  2902  009E                     	;# 
  2903  010C                     	;# 
  2904  010D                     	;# 
  2905  010E                     	;# 
  2906  010E                     	;# 
  2907  010F                     	;# 
  2908  0110                     	;# 
  2909  0110                     	;# 
  2910  0111                     	;# 
  2911  0112                     	;# 
  2912  0112                     	;# 
  2913  0113                     	;# 
  2914  0114                     	;# 
  2915  0114                     	;# 
  2916  0115                     	;# 
  2917  0116                     	;# 
  2918  0116                     	;# 
  2919  0117                     	;# 
  2920  0119                     	;# 
  2921  0119                     	;# 
  2922  0119                     	;# 
  2923  011A                     	;# 
  2924  011A                     	;# 
  2925  011A                     	;# 
  2926  011B                     	;# 
  2927  011B                     	;# 
  2928  011B                     	;# 
  2929  011B                     	;# 
  2930  011B                     	;# 
  2931  011C                     	;# 
  2932  011C                     	;# 
  2933  011C                     	;# 
  2934  011D                     	;# 
  2935  011D                     	;# 
  2936  011D                     	;# 
  2937  011E                     	;# 
  2938  011E                     	;# 
  2939  011E                     	;# 
  2940  011F                     	;# 
  2941  011F                     	;# 
  2942  011F                     	;# 
  2943  011F                     	;# 
  2944  011F                     	;# 
  2945  018C                     	;# 
  2946  018D                     	;# 
  2947  018E                     	;# 
  2948  018F                     	;# 
  2949  0190                     	;# 
  2950  0191                     	;# 
  2951  0192                     	;# 
  2952  0196                     	;# 
  2953  0197                     	;# 
  2954  0198                     	;# 
  2955  0199                     	;# 
  2956  019A                     	;# 
  2957  019B                     	;# 
  2958  019C                     	;# 
  2959  020C                     	;# 
  2960  020C                     	;# 
  2961  020D                     	;# 
  2962  020E                     	;# 
  2963  020F                     	;# 
  2964  020F                     	;# 
  2965  0210                     	;# 
  2966  0210                     	;# 
  2967  0211                     	;# 
  2968  0211                     	;# 
  2969  0212                     	;# 
  2970  0212                     	;# 
  2971  0213                     	;# 
  2972  0214                     	;# 
  2973  0215                     	;# 
  2974  0215                     	;# 
  2975  0216                     	;# 
  2976  0216                     	;# 
  2977  0217                     	;# 
  2978  0217                     	;# 
  2979  0218                     	;# 
  2980  0218                     	;# 
  2981  0219                     	;# 
  2982  021A                     	;# 
  2983  021B                     	;# 
  2984  021B                     	;# 
  2985  021C                     	;# 
  2986  021C                     	;# 
  2987  021D                     	;# 
  2988  021D                     	;# 
  2989  021E                     	;# 
  2990  021F                     	;# 
  2991  028C                     	;# 
  2992  028C                     	;# 
  2993  028D                     	;# 
  2994  028D                     	;# 
  2995  028E                     	;# 
  2996  028F                     	;# 
  2997  0290                     	;# 
  2998  0290                     	;# 
  2999  0291                     	;# 
  3000  0292                     	;# 
  3001  0292                     	;# 
  3002  0293                     	;# 
  3003  0293                     	;# 
  3004  0294                     	;# 
  3005  0295                     	;# 
  3006  0296                     	;# 
  3007  0296                     	;# 
  3008  0297                     	;# 
  3009  0298                     	;# 
  3010  0298                     	;# 
  3011  0299                     	;# 
  3012  0299                     	;# 
  3013  029A                     	;# 
  3014  029B                     	;# 
  3015  029C                     	;# 
  3016  029C                     	;# 
  3017  029D                     	;# 
  3018  030C                     	;# 
  3019  030C                     	;# 
  3020  030D                     	;# 
  3021  030E                     	;# 
  3022  030F                     	;# 
  3023  0310                     	;# 
  3024  0310                     	;# 
  3025  0311                     	;# 
  3026  0312                     	;# 
  3027  0313                     	;# 
  3028  0314                     	;# 
  3029  0314                     	;# 
  3030  0315                     	;# 
  3031  0316                     	;# 
  3032  0317                     	;# 
  3033  0318                     	;# 
  3034  0318                     	;# 
  3035  0319                     	;# 
  3036  031A                     	;# 
  3037  031B                     	;# 
  3038  031C                     	;# 
  3039  031C                     	;# 
  3040  031D                     	;# 
  3041  031E                     	;# 
  3042  031F                     	;# 
  3043  038C                     	;# 
  3044  038C                     	;# 
  3045  038D                     	;# 
  3046  038E                     	;# 
  3047  0390                     	;# 
  3048  0390                     	;# 
  3049  0391                     	;# 
  3050  0392                     	;# 
  3051  040C                     	;# 
  3052  040D                     	;# 
  3053  040E                     	;# 
  3054  040F                     	;# 
  3055  0410                     	;# 
  3056  0411                     	;# 
  3057  0416                     	;# 
  3058  0416                     	;# 
  3059  0417                     	;# 
  3060  0418                     	;# 
  3061  0418                     	;# 
  3062  0419                     	;# 
  3063  041A                     	;# 
  3064  041A                     	;# 
  3065  041B                     	;# 
  3066  041C                     	;# 
  3067  041C                     	;# 
  3068  041D                     	;# 
  3069  041E                     	;# 
  3070  041F                     	;# 
  3071  048C                     	;# 
  3072  048C                     	;# 
  3073  048D                     	;# 
  3074  048E                     	;# 
  3075  048F                     	;# 
  3076  048F                     	;# 
  3077  0490                     	;# 
  3078  0491                     	;# 
  3079  0492                     	;# 
  3080  0492                     	;# 
  3081  0493                     	;# 
  3082  0494                     	;# 
  3083  0495                     	;# 
  3084  0495                     	;# 
  3085  0496                     	;# 
  3086  0497                     	;# 
  3087  0498                     	;# 
  3088  0499                     	;# 
  3089  049A                     	;# 
  3090  049B                     	;# 
  3091  049C                     	;# 
  3092  049D                     	;# 
  3093  050C                     	;# 
  3094  050C                     	;# 
  3095  050D                     	;# 
  3096  050E                     	;# 
  3097  050F                     	;# 
  3098  050F                     	;# 
  3099  0510                     	;# 
  3100  0511                     	;# 
  3101  0512                     	;# 
  3102  0512                     	;# 
  3103  0513                     	;# 
  3104  0514                     	;# 
  3105  0515                     	;# 
  3106  0515                     	;# 
  3107  0516                     	;# 
  3108  0517                     	;# 
  3109  0518                     	;# 
  3110  0519                     	;# 
  3111  051A                     	;# 
  3112  051B                     	;# 
  3113  051C                     	;# 
  3114  051D                     	;# 
  3115  058C                     	;# 
  3116  058C                     	;# 
  3117  058D                     	;# 
  3118  058E                     	;# 
  3119  058F                     	;# 
  3120  058F                     	;# 
  3121  0590                     	;# 
  3122  0591                     	;# 
  3123  0592                     	;# 
  3124  0593                     	;# 
  3125  060C                     	;# 
  3126  060D                     	;# 
  3127  060E                     	;# 
  3128  060F                     	;# 
  3129  0610                     	;# 
  3130  0611                     	;# 
  3131  0612                     	;# 
  3132  0613                     	;# 
  3133  0614                     	;# 
  3134  0616                     	;# 
  3135  0617                     	;# 
  3136  0618                     	;# 
  3137  0619                     	;# 
  3138  061A                     	;# 
  3139  061B                     	;# 
  3140  061C                     	;# 
  3141  061D                     	;# 
  3142  061E                     	;# 
  3143  068C                     	;# 
  3144  068D                     	;# 
  3145  068E                     	;# 
  3146  068F                     	;# 
  3147  0690                     	;# 
  3148  0691                     	;# 
  3149  0692                     	;# 
  3150  0693                     	;# 
  3151  0694                     	;# 
  3152  070C                     	;# 
  3153  070D                     	;# 
  3154  070E                     	;# 
  3155  070F                     	;# 
  3156  0710                     	;# 
  3157  0711                     	;# 
  3158  0712                     	;# 
  3159  0713                     	;# 
  3160  0714                     	;# 
  3161  0716                     	;# 
  3162  0717                     	;# 
  3163  0718                     	;# 
  3164  0719                     	;# 
  3165  071A                     	;# 
  3166  071B                     	;# 
  3167  071C                     	;# 
  3168  071D                     	;# 
  3169  071E                     	;# 
  3170  0796                     	;# 
  3171  0797                     	;# 
  3172  0798                     	;# 
  3173  0799                     	;# 
  3174  079A                     	;# 
  3175  079B                     	;# 
  3176  080C                     	;# 
  3177  080D                     	;# 
  3178  080E                     	;# 
  3179  080F                     	;# 
  3180  0810                     	;# 
  3181  0811                     	;# 
  3182  0812                     	;# 
  3183  0813                     	;# 
  3184  0814                     	;# 
  3185  081A                     	;# 
  3186  081B                     	;# 
  3187  081C                     	;# 
  3188  081D                     	;# 
  3189  081E                     	;# 
  3190  081F                     	;# 
  3191  088C                     	;# 
  3192  088D                     	;# 
  3193  088E                     	;# 
  3194  088F                     	;# 
  3195  0890                     	;# 
  3196  0891                     	;# 
  3197  0892                     	;# 
  3198  0893                     	;# 
  3199  0895                     	;# 
  3200  0896                     	;# 
  3201  0897                     	;# 
  3202  0898                     	;# 
  3203  0899                     	;# 
  3204  089A                     	;# 
  3205  089B                     	;# 
  3206  090C                     	;# 
  3207  090E                     	;# 
  3208  090F                     	;# 
  3209  091F                     	;# 
  3210  091F                     	;# 
  3211  098F                     	;# 
  3212  098F                     	;# 
  3213  0990                     	;# 
  3214  0991                     	;# 
  3215  0992                     	;# 
  3216  0993                     	;# 
  3217  0994                     	;# 
  3218  0995                     	;# 
  3219  0996                     	;# 
  3220  0997                     	;# 
  3221  0E0F                     	;# 
  3222  0E10                     	;# 
  3223  0E11                     	;# 
  3224  0E12                     	;# 
  3225  0E13                     	;# 
  3226  0E14                     	;# 
  3227  0E15                     	;# 
  3228  0E16                     	;# 
  3229  0E17                     	;# 
  3230  0E18                     	;# 
  3231  0E19                     	;# 
  3232  0E1A                     	;# 
  3233  0E1B                     	;# 
  3234  0E1C                     	;# 
  3235  0E1D                     	;# 
  3236  0E1E                     	;# 
  3237  0E1F                     	;# 
  3238  0E20                     	;# 
  3239  0E21                     	;# 
  3240  0E22                     	;# 
  3241  0E23                     	;# 
  3242  0E24                     	;# 
  3243  0E25                     	;# 
  3244  0E26                     	;# 
  3245  0E27                     	;# 
  3246  0E28                     	;# 
  3247  0E29                     	;# 
  3248  0E2A                     	;# 
  3249  0E2B                     	;# 
  3250  0E2C                     	;# 
  3251  0E2D                     	;# 
  3252  0E2E                     	;# 
  3253  0E2F                     	;# 
  3254  0E30                     	;# 
  3255  0E31                     	;# 
  3256  0E32                     	;# 
  3257  0E33                     	;# 
  3258  0E34                     	;# 
  3259  0E35                     	;# 
  3260  0E36                     	;# 
  3261  0E37                     	;# 
  3262  0E8F                     	;# 
  3263  0E90                     	;# 
  3264  0E91                     	;# 
  3265  0E92                     	;# 
  3266  0E93                     	;# 
  3267  0E94                     	;# 
  3268  0E95                     	;# 
  3269  0E96                     	;# 
  3270  0E97                     	;# 
  3271  0E9C                     	;# 
  3272  0E9D                     	;# 
  3273  0E9E                     	;# 
  3274  0EA1                     	;# 
  3275  0EA2                     	;# 
  3276  0EA3                     	;# 
  3277  0EA4                     	;# 
  3278  0EA5                     	;# 
  3279  0EA9                     	;# 
  3280  0EAA                     	;# 
  3281  0EAB                     	;# 
  3282  0EAC                     	;# 
  3283  0EB1                     	;# 
  3284  0EB2                     	;# 
  3285  0EB3                     	;# 
  3286  0EB8                     	;# 
  3287  0EB9                     	;# 
  3288  0EBA                     	;# 
  3289  0EBB                     	;# 
  3290  0EBC                     	;# 
  3291  0EBD                     	;# 
  3292  0EBE                     	;# 
  3293  0EC3                     	;# 
  3294  0EC5                     	;# 
  3295  0EC6                     	;# 
  3296  0EC7                     	;# 
  3297  0EC8                     	;# 
  3298  0EC9                     	;# 
  3299  0ECA                     	;# 
  3300  0ECB                     	;# 
  3301  0ECC                     	;# 
  3302  0F10                     	;# 
  3303  0F11                     	;# 
  3304  0F12                     	;# 
  3305  0F13                     	;# 
  3306  0F14                     	;# 
  3307  0F15                     	;# 
  3308  0F16                     	;# 
  3309  0F17                     	;# 
  3310  0F18                     	;# 
  3311  0F19                     	;# 
  3312  0F1A                     	;# 
  3313  0F1B                     	;# 
  3314  0F1C                     	;# 
  3315  0F1D                     	;# 
  3316  0F1E                     	;# 
  3317  0F1F                     	;# 
  3318  0F20                     	;# 
  3319  0F21                     	;# 
  3320  0F22                     	;# 
  3321  0F23                     	;# 
  3322  0F24                     	;# 
  3323  0F25                     	;# 
  3324  0F26                     	;# 
  3325  0F27                     	;# 
  3326  0F28                     	;# 
  3327  0F29                     	;# 
  3328  0F2A                     	;# 
  3329  0F2B                     	;# 
  3330  0F2C                     	;# 
  3331  0F2D                     	;# 
  3332  0F2E                     	;# 
  3333  0F2F                     	;# 
  3334  0F30                     	;# 
  3335  0F31                     	;# 
  3336  0F32                     	;# 
  3337  0F38                     	;# 
  3338  0F39                     	;# 
  3339  0F3A                     	;# 
  3340  0F3B                     	;# 
  3341  0F3C                     	;# 
  3342  0F3D                     	;# 
  3343  0F3E                     	;# 
  3344  0F3F                     	;# 
  3345  0F40                     	;# 
  3346  0F41                     	;# 
  3347  0F43                     	;# 
  3348  0F44                     	;# 
  3349  0F45                     	;# 
  3350  0F46                     	;# 
  3351  0F47                     	;# 
  3352  0F48                     	;# 
  3353  0F49                     	;# 
  3354  0F4A                     	;# 
  3355  0F4B                     	;# 
  3356  0F4C                     	;# 
  3357  0F4E                     	;# 
  3358  0F4F                     	;# 
  3359  0F50                     	;# 
  3360  0F51                     	;# 
  3361  0F52                     	;# 
  3362  0F53                     	;# 
  3363  0F54                     	;# 
  3364  0F55                     	;# 
  3365  0F56                     	;# 
  3366  0F57                     	;# 
  3367  0F59                     	;# 
  3368  0F5A                     	;# 
  3369  0F5B                     	;# 
  3370  0F5C                     	;# 
  3371  0F5D                     	;# 
  3372  0F61                     	;# 
  3373  0F62                     	;# 
  3374  0F64                     	;# 
  3375  0F65                     	;# 
  3376  0F66                     	;# 
  3377  0F67                     	;# 
  3378  0F68                     	;# 
  3379  0F69                     	;# 
  3380  0F6A                     	;# 
  3381  0F6B                     	;# 
  3382  0F6C                     	;# 
  3383  0F6D                     	;# 
  3384  0FE4                     	;# 
  3385  0FE5                     	;# 
  3386  0FE6                     	;# 
  3387  0FE7                     	;# 
  3388  0FE8                     	;# 
  3389  0FE9                     	;# 
  3390  0FEA                     	;# 
  3391  0FEB                     	;# 
  3392  0FED                     	;# 
  3393  0FEE                     	;# 
  3394  0FEF                     	;# 
  3395  0000                     	;# 
  3396  0001                     	;# 
  3397  0002                     	;# 
  3398  0003                     	;# 
  3399  0004                     	;# 
  3400  0005                     	;# 
  3401  0006                     	;# 
  3402  0007                     	;# 
  3403  0008                     	;# 
  3404  0009                     	;# 
  3405  000A                     	;# 
  3406  000B                     	;# 
  3407  000C                     	;# 
  3408  000D                     	;# 
  3409  000E                     	;# 
  3410  000F                     	;# 
  3411  0010                     	;# 
  3412  0011                     	;# 
  3413  0012                     	;# 
  3414  0013                     	;# 
  3415  0014                     	;# 
  3416  0015                     	;# 
  3417  0016                     	;# 
  3418  0017                     	;# 
  3419  0018                     	;# 
  3420  0019                     	;# 
  3421  001A                     	;# 
  3422  001C                     	;# 
  3423  001C                     	;# 
  3424  001D                     	;# 
  3425  001D                     	;# 
  3426  001E                     	;# 
  3427  001F                     	;# 
  3428  008C                     	;# 
  3429  008C                     	;# 
  3430  008D                     	;# 
  3431  008E                     	;# 
  3432  008E                     	;# 
  3433  008F                     	;# 
  3434  0090                     	;# 
  3435  0090                     	;# 
  3436  0091                     	;# 
  3437  0093                     	;# 
  3438  0094                     	;# 
  3439  0095                     	;# 
  3440  0096                     	;# 
  3441  0097                     	;# 
  3442  0098                     	;# 
  3443  0099                     	;# 
  3444  009A                     	;# 
  3445  009B                     	;# 
  3446  009C                     	;# 
  3447  009D                     	;# 
  3448  009E                     	;# 
  3449  010C                     	;# 
  3450  010D                     	;# 
  3451  010E                     	;# 
  3452  010E                     	;# 
  3453  010F                     	;# 
  3454  0110                     	;# 
  3455  0110                     	;# 
  3456  0111                     	;# 
  3457  0112                     	;# 
  3458  0112                     	;# 
  3459  0113                     	;# 
  3460  0114                     	;# 
  3461  0114                     	;# 
  3462  0115                     	;# 
  3463  0116                     	;# 
  3464  0116                     	;# 
  3465  0117                     	;# 
  3466  0119                     	;# 
  3467  0119                     	;# 
  3468  0119                     	;# 
  3469  011A                     	;# 
  3470  011A                     	;# 
  3471  011A                     	;# 
  3472  011B                     	;# 
  3473  011B                     	;# 
  3474  011B                     	;# 
  3475  011B                     	;# 
  3476  011B                     	;# 
  3477  011C                     	;# 
  3478  011C                     	;# 
  3479  011C                     	;# 
  3480  011D                     	;# 
  3481  011D                     	;# 
  3482  011D                     	;# 
  3483  011E                     	;# 
  3484  011E                     	;# 
  3485  011E                     	;# 
  3486  011F                     	;# 
  3487  011F                     	;# 
  3488  011F                     	;# 
  3489  011F                     	;# 
  3490  011F                     	;# 
  3491  018C                     	;# 
  3492  018D                     	;# 
  3493  018E                     	;# 
  3494  018F                     	;# 
  3495  0190                     	;# 
  3496  0191                     	;# 
  3497  0192                     	;# 
  3498  0196                     	;# 
  3499  0197                     	;# 
  3500  0198                     	;# 
  3501  0199                     	;# 
  3502  019A                     	;# 
  3503  019B                     	;# 
  3504  019C                     	;# 
  3505  020C                     	;# 
  3506  020C                     	;# 
  3507  020D                     	;# 
  3508  020E                     	;# 
  3509  020F                     	;# 
  3510  020F                     	;# 
  3511  0210                     	;# 
  3512  0210                     	;# 
  3513  0211                     	;# 
  3514  0211                     	;# 
  3515  0212                     	;# 
  3516  0212                     	;# 
  3517  0213                     	;# 
  3518  0214                     	;# 
  3519  0215                     	;# 
  3520  0215                     	;# 
  3521  0216                     	;# 
  3522  0216                     	;# 
  3523  0217                     	;# 
  3524  0217                     	;# 
  3525  0218                     	;# 
  3526  0218                     	;# 
  3527  0219                     	;# 
  3528  021A                     	;# 
  3529  021B                     	;# 
  3530  021B                     	;# 
  3531  021C                     	;# 
  3532  021C                     	;# 
  3533  021D                     	;# 
  3534  021D                     	;# 
  3535  021E                     	;# 
  3536  021F                     	;# 
  3537  028C                     	;# 
  3538  028C                     	;# 
  3539  028D                     	;# 
  3540  028D                     	;# 
  3541  028E                     	;# 
  3542  028F                     	;# 
  3543  0290                     	;# 
  3544  0290                     	;# 
  3545  0291                     	;# 
  3546  0292                     	;# 
  3547  0292                     	;# 
  3548  0293                     	;# 
  3549  0293                     	;# 
  3550  0294                     	;# 
  3551  0295                     	;# 
  3552  0296                     	;# 
  3553  0296                     	;# 
  3554  0297                     	;# 
  3555  0298                     	;# 
  3556  0298                     	;# 
  3557  0299                     	;# 
  3558  0299                     	;# 
  3559  029A                     	;# 
  3560  029B                     	;# 
  3561  029C                     	;# 
  3562  029C                     	;# 
  3563  029D                     	;# 
  3564  030C                     	;# 
  3565  030C                     	;# 
  3566  030D                     	;# 
  3567  030E                     	;# 
  3568  030F                     	;# 
  3569  0310                     	;# 
  3570  0310                     	;# 
  3571  0311                     	;# 
  3572  0312                     	;# 
  3573  0313                     	;# 
  3574  0314                     	;# 
  3575  0314                     	;# 
  3576  0315                     	;# 
  3577  0316                     	;# 
  3578  0317                     	;# 
  3579  0318                     	;# 
  3580  0318                     	;# 
  3581  0319                     	;# 
  3582  031A                     	;# 
  3583  031B                     	;# 
  3584  031C                     	;# 
  3585  031C                     	;# 
  3586  031D                     	;# 
  3587  031E                     	;# 
  3588  031F                     	;# 
  3589  038C                     	;# 
  3590  038C                     	;# 
  3591  038D                     	;# 
  3592  038E                     	;# 
  3593  0390                     	;# 
  3594  0390                     	;# 
  3595  0391                     	;# 
  3596  0392                     	;# 
  3597  040C                     	;# 
  3598  040D                     	;# 
  3599  040E                     	;# 
  3600  040F                     	;# 
  3601  0410                     	;# 
  3602  0411                     	;# 
  3603  0416                     	;# 
  3604  0416                     	;# 
  3605  0417                     	;# 
  3606  0418                     	;# 
  3607  0418                     	;# 
  3608  0419                     	;# 
  3609  041A                     	;# 
  3610  041A                     	;# 
  3611  041B                     	;# 
  3612  041C                     	;# 
  3613  041C                     	;# 
  3614  041D                     	;# 
  3615  041E                     	;# 
  3616  041F                     	;# 
  3617  048C                     	;# 
  3618  048C                     	;# 
  3619  048D                     	;# 
  3620  048E                     	;# 
  3621  048F                     	;# 
  3622  048F                     	;# 
  3623  0490                     	;# 
  3624  0491                     	;# 
  3625  0492                     	;# 
  3626  0492                     	;# 
  3627  0493                     	;# 
  3628  0494                     	;# 
  3629  0495                     	;# 
  3630  0495                     	;# 
  3631  0496                     	;# 
  3632  0497                     	;# 
  3633  0498                     	;# 
  3634  0499                     	;# 
  3635  049A                     	;# 
  3636  049B                     	;# 
  3637  049C                     	;# 
  3638  049D                     	;# 
  3639  050C                     	;# 
  3640  050C                     	;# 
  3641  050D                     	;# 
  3642  050E                     	;# 
  3643  050F                     	;# 
  3644  050F                     	;# 
  3645  0510                     	;# 
  3646  0511                     	;# 
  3647  0512                     	;# 
  3648  0512                     	;# 
  3649  0513                     	;# 
  3650  0514                     	;# 
  3651  0515                     	;# 
  3652  0515                     	;# 
  3653  0516                     	;# 
  3654  0517                     	;# 
  3655  0518                     	;# 
  3656  0519                     	;# 
  3657  051A                     	;# 
  3658  051B                     	;# 
  3659  051C                     	;# 
  3660  051D                     	;# 
  3661  058C                     	;# 
  3662  058C                     	;# 
  3663  058D                     	;# 
  3664  058E                     	;# 
  3665  058F                     	;# 
  3666  058F                     	;# 
  3667  0590                     	;# 
  3668  0591                     	;# 
  3669  0592                     	;# 
  3670  0593                     	;# 
  3671  060C                     	;# 
  3672  060D                     	;# 
  3673  060E                     	;# 
  3674  060F                     	;# 
  3675  0610                     	;# 
  3676  0611                     	;# 
  3677  0612                     	;# 
  3678  0613                     	;# 
  3679  0614                     	;# 
  3680  0616                     	;# 
  3681  0617                     	;# 
  3682  0618                     	;# 
  3683  0619                     	;# 
  3684  061A                     	;# 
  3685  061B                     	;# 
  3686  061C                     	;# 
  3687  061D                     	;# 
  3688  061E                     	;# 
  3689  068C                     	;# 
  3690  068D                     	;# 
  3691  068E                     	;# 
  3692  068F                     	;# 
  3693  0690                     	;# 
  3694  0691                     	;# 
  3695  0692                     	;# 
  3696  0693                     	;# 
  3697  0694                     	;# 
  3698  070C                     	;# 
  3699  070D                     	;# 
  3700  070E                     	;# 
  3701  070F                     	;# 
  3702  0710                     	;# 
  3703  0711                     	;# 
  3704  0712                     	;# 
  3705  0713                     	;# 
  3706  0714                     	;# 
  3707  0716                     	;# 
  3708  0717                     	;# 
  3709  0718                     	;# 
  3710  0719                     	;# 
  3711  071A                     	;# 
  3712  071B                     	;# 
  3713  071C                     	;# 
  3714  071D                     	;# 
  3715  071E                     	;# 
  3716  0796                     	;# 
  3717  0797                     	;# 
  3718  0798                     	;# 
  3719  0799                     	;# 
  3720  079A                     	;# 
  3721  079B                     	;# 
  3722  080C                     	;# 
  3723  080D                     	;# 
  3724  080E                     	;# 
  3725  080F                     	;# 
  3726  0810                     	;# 
  3727  0811                     	;# 
  3728  0812                     	;# 
  3729  0813                     	;# 
  3730  0814                     	;# 
  3731  081A                     	;# 
  3732  081B                     	;# 
  3733  081C                     	;# 
  3734  081D                     	;# 
  3735  081E                     	;# 
  3736  081F                     	;# 
  3737  088C                     	;# 
  3738  088D                     	;# 
  3739  088E                     	;# 
  3740  088F                     	;# 
  3741  0890                     	;# 
  3742  0891                     	;# 
  3743  0892                     	;# 
  3744  0893                     	;# 
  3745  0895                     	;# 
  3746  0896                     	;# 
  3747  0897                     	;# 
  3748  0898                     	;# 
  3749  0899                     	;# 
  3750  089A                     	;# 
  3751  089B                     	;# 
  3752  090C                     	;# 
  3753  090E                     	;# 
  3754  090F                     	;# 
  3755  091F                     	;# 
  3756  091F                     	;# 
  3757  098F                     	;# 
  3758  098F                     	;# 
  3759  0990                     	;# 
  3760  0991                     	;# 
  3761  0992                     	;# 
  3762  0993                     	;# 
  3763  0994                     	;# 
  3764  0995                     	;# 
  3765  0996                     	;# 
  3766  0997                     	;# 
  3767  0E0F                     	;# 
  3768  0E10                     	;# 
  3769  0E11                     	;# 
  3770  0E12                     	;# 
  3771  0E13                     	;# 
  3772  0E14                     	;# 
  3773  0E15                     	;# 
  3774  0E16                     	;# 
  3775  0E17                     	;# 
  3776  0E18                     	;# 
  3777  0E19                     	;# 
  3778  0E1A                     	;# 
  3779  0E1B                     	;# 
  3780  0E1C                     	;# 
  3781  0E1D                     	;# 
  3782  0E1E                     	;# 
  3783  0E1F                     	;# 
  3784  0E20                     	;# 
  3785  0E21                     	;# 
  3786  0E22                     	;# 
  3787  0E23                     	;# 
  3788  0E24                     	;# 
  3789  0E25                     	;# 
  3790  0E26                     	;# 
  3791  0E27                     	;# 
  3792  0E28                     	;# 
  3793  0E29                     	;# 
  3794  0E2A                     	;# 
  3795  0E2B                     	;# 
  3796  0E2C                     	;# 
  3797  0E2D                     	;# 
  3798  0E2E                     	;# 
  3799  0E2F                     	;# 
  3800  0E30                     	;# 
  3801  0E31                     	;# 
  3802  0E32                     	;# 
  3803  0E33                     	;# 
  3804  0E34                     	;# 
  3805  0E35                     	;# 
  3806  0E36                     	;# 
  3807  0E37                     	;# 
  3808  0E8F                     	;# 
  3809  0E90                     	;# 
  3810  0E91                     	;# 
  3811  0E92                     	;# 
  3812  0E93                     	;# 
  3813  0E94                     	;# 
  3814  0E95                     	;# 
  3815  0E96                     	;# 
  3816  0E97                     	;# 
  3817  0E9C                     	;# 
  3818  0E9D                     	;# 
  3819  0E9E                     	;# 
  3820  0EA1                     	;# 
  3821  0EA2                     	;# 
  3822  0EA3                     	;# 
  3823  0EA4                     	;# 
  3824  0EA5                     	;# 
  3825  0EA9                     	;# 
  3826  0EAA                     	;# 
  3827  0EAB                     	;# 
  3828  0EAC                     	;# 
  3829  0EB1                     	;# 
  3830  0EB2                     	;# 
  3831  0EB3                     	;# 
  3832  0EB8                     	;# 
  3833  0EB9                     	;# 
  3834  0EBA                     	;# 
  3835  0EBB                     	;# 
  3836  0EBC                     	;# 
  3837  0EBD                     	;# 
  3838  0EBE                     	;# 
  3839  0EC3                     	;# 
  3840  0EC5                     	;# 
  3841  0EC6                     	;# 
  3842  0EC7                     	;# 
  3843  0EC8                     	;# 
  3844  0EC9                     	;# 
  3845  0ECA                     	;# 
  3846  0ECB                     	;# 
  3847  0ECC                     	;# 
  3848  0F10                     	;# 
  3849  0F11                     	;# 
  3850  0F12                     	;# 
  3851  0F13                     	;# 
  3852  0F14                     	;# 
  3853  0F15                     	;# 
  3854  0F16                     	;# 
  3855  0F17                     	;# 
  3856  0F18                     	;# 
  3857  0F19                     	;# 
  3858  0F1A                     	;# 
  3859  0F1B                     	;# 
  3860  0F1C                     	;# 
  3861  0F1D                     	;# 
  3862  0F1E                     	;# 
  3863  0F1F                     	;# 
  3864  0F20                     	;# 
  3865  0F21                     	;# 
  3866  0F22                     	;# 
  3867  0F23                     	;# 
  3868  0F24                     	;# 
  3869  0F25                     	;# 
  3870  0F26                     	;# 
  3871  0F27                     	;# 
  3872  0F28                     	;# 
  3873  0F29                     	;# 
  3874  0F2A                     	;# 
  3875  0F2B                     	;# 
  3876  0F2C                     	;# 
  3877  0F2D                     	;# 
  3878  0F2E                     	;# 
  3879  0F2F                     	;# 
  3880  0F30                     	;# 
  3881  0F31                     	;# 
  3882  0F32                     	;# 
  3883  0F38                     	;# 
  3884  0F39                     	;# 
  3885  0F3A                     	;# 
  3886  0F3B                     	;# 
  3887  0F3C                     	;# 
  3888  0F3D                     	;# 
  3889  0F3E                     	;# 
  3890  0F3F                     	;# 
  3891  0F40                     	;# 
  3892  0F41                     	;# 
  3893  0F43                     	;# 
  3894  0F44                     	;# 
  3895  0F45                     	;# 
  3896  0F46                     	;# 
  3897  0F47                     	;# 
  3898  0F48                     	;# 
  3899  0F49                     	;# 
  3900  0F4A                     	;# 
  3901  0F4B                     	;# 
  3902  0F4C                     	;# 
  3903  0F4E                     	;# 
  3904  0F4F                     	;# 
  3905  0F50                     	;# 
  3906  0F51                     	;# 
  3907  0F52                     	;# 
  3908  0F53                     	;# 
  3909  0F54                     	;# 
  3910  0F55                     	;# 
  3911  0F56                     	;# 
  3912  0F57                     	;# 
  3913  0F59                     	;# 
  3914  0F5A                     	;# 
  3915  0F5B                     	;# 
  3916  0F5C                     	;# 
  3917  0F5D                     	;# 
  3918  0F61                     	;# 
  3919  0F62                     	;# 
  3920  0F64                     	;# 
  3921  0F65                     	;# 
  3922  0F66                     	;# 
  3923  0F67                     	;# 
  3924  0F68                     	;# 
  3925  0F69                     	;# 
  3926  0F6A                     	;# 
  3927  0F6B                     	;# 
  3928  0F6C                     	;# 
  3929  0F6D                     	;# 
  3930  0FE4                     	;# 
  3931  0FE5                     	;# 
  3932  0FE6                     	;# 
  3933  0FE7                     	;# 
  3934  0FE8                     	;# 
  3935  0FE9                     	;# 
  3936  0FEA                     	;# 
  3937  0FEB                     	;# 
  3938  0FED                     	;# 
  3939  0FEE                     	;# 
  3940  0FEF                     	;# 
  3941  0000                     	;# 
  3942  0001                     	;# 
  3943  0002                     	;# 
  3944  0003                     	;# 
  3945  0004                     	;# 
  3946  0005                     	;# 
  3947  0006                     	;# 
  3948  0007                     	;# 
  3949  0008                     	;# 
  3950  0009                     	;# 
  3951  000A                     	;# 
  3952  000B                     	;# 
  3953  000C                     	;# 
  3954  000D                     	;# 
  3955  000E                     	;# 
  3956  000F                     	;# 
  3957  0010                     	;# 
  3958  0011                     	;# 
  3959  0012                     	;# 
  3960  0013                     	;# 
  3961  0014                     	;# 
  3962  0015                     	;# 
  3963  0016                     	;# 
  3964  0017                     	;# 
  3965  0018                     	;# 
  3966  0019                     	;# 
  3967  001A                     	;# 
  3968  001C                     	;# 
  3969  001C                     	;# 
  3970  001D                     	;# 
  3971  001D                     	;# 
  3972  001E                     	;# 
  3973  001F                     	;# 
  3974  008C                     	;# 
  3975  008C                     	;# 
  3976  008D                     	;# 
  3977  008E                     	;# 
  3978  008E                     	;# 
  3979  008F                     	;# 
  3980  0090                     	;# 
  3981  0090                     	;# 
  3982  0091                     	;# 
  3983  0093                     	;# 
  3984  0094                     	;# 
  3985  0095                     	;# 
  3986  0096                     	;# 
  3987  0097                     	;# 
  3988  0098                     	;# 
  3989  0099                     	;# 
  3990  009A                     	;# 
  3991  009B                     	;# 
  3992  009C                     	;# 
  3993  009D                     	;# 
  3994  009E                     	;# 
  3995  010C                     	;# 
  3996  010D                     	;# 
  3997  010E                     	;# 
  3998  010E                     	;# 
  3999  010F                     	;# 
  4000  0110                     	;# 
  4001  0110                     	;# 
  4002  0111                     	;# 
  4003  0112                     	;# 
  4004  0112                     	;# 
  4005  0113                     	;# 
  4006  0114                     	;# 
  4007  0114                     	;# 
  4008  0115                     	;# 
  4009  0116                     	;# 
  4010  0116                     	;# 
  4011  0117                     	;# 
  4012  0119                     	;# 
  4013  0119                     	;# 
  4014  0119                     	;# 
  4015  011A                     	;# 
  4016  011A                     	;# 
  4017  011A                     	;# 
  4018  011B                     	;# 
  4019  011B                     	;# 
  4020  011B                     	;# 
  4021  011B                     	;# 
  4022  011B                     	;# 
  4023  011C                     	;# 
  4024  011C                     	;# 
  4025  011C                     	;# 
  4026  011D                     	;# 
  4027  011D                     	;# 
  4028  011D                     	;# 
  4029  011E                     	;# 
  4030  011E                     	;# 
  4031  011E                     	;# 
  4032  011F                     	;# 
  4033  011F                     	;# 
  4034  011F                     	;# 
  4035  011F                     	;# 
  4036  011F                     	;# 
  4037  018C                     	;# 
  4038  018D                     	;# 
  4039  018E                     	;# 
  4040  018F                     	;# 
  4041  0190                     	;# 
  4042  0191                     	;# 
  4043  0192                     	;# 
  4044  0196                     	;# 
  4045  0197                     	;# 
  4046  0198                     	;# 
  4047  0199                     	;# 
  4048  019A                     	;# 
  4049  019B                     	;# 
  4050  019C                     	;# 
  4051  020C                     	;# 
  4052  020C                     	;# 
  4053  020D                     	;# 
  4054  020E                     	;# 
  4055  020F                     	;# 
  4056  020F                     	;# 
  4057  0210                     	;# 
  4058  0210                     	;# 
  4059  0211                     	;# 
  4060  0211                     	;# 
  4061  0212                     	;# 
  4062  0212                     	;# 
  4063  0213                     	;# 
  4064  0214                     	;# 
  4065  0215                     	;# 
  4066  0215                     	;# 
  4067  0216                     	;# 
  4068  0216                     	;# 
  4069  0217                     	;# 
  4070  0217                     	;# 
  4071  0218                     	;# 
  4072  0218                     	;# 
  4073  0219                     	;# 
  4074  021A                     	;# 
  4075  021B                     	;# 
  4076  021B                     	;# 
  4077  021C                     	;# 
  4078  021C                     	;# 
  4079  021D                     	;# 
  4080  021D                     	;# 
  4081  021E                     	;# 
  4082  021F                     	;# 
  4083  028C                     	;# 
  4084  028C                     	;# 
  4085  028D                     	;# 
  4086  028D                     	;# 
  4087  028E                     	;# 
  4088  028F                     	;# 
  4089  0290                     	;# 
  4090  0290                     	;# 
  4091  0291                     	;# 
  4092  0292                     	;# 
  4093  0292                     	;# 
  4094  0293                     	;# 
  4095  0293                     	;# 
  4096  0294                     	;# 
  4097  0295                     	;# 
  4098  0296                     	;# 
  4099  0296                     	;# 
  4100  0297                     	;# 
  4101  0298                     	;# 
  4102  0298                     	;# 
  4103  0299                     	;# 
  4104  0299                     	;# 
  4105  029A                     	;# 
  4106  029B                     	;# 
  4107  029C                     	;# 
  4108  029C                     	;# 
  4109  029D                     	;# 
  4110  030C                     	;# 
  4111  030C                     	;# 
  4112  030D                     	;# 
  4113  030E                     	;# 
  4114  030F                     	;# 
  4115  0310                     	;# 
  4116  0310                     	;# 
  4117  0311                     	;# 
  4118  0312                     	;# 
  4119  0313                     	;# 
  4120  0314                     	;# 
  4121  0314                     	;# 
  4122  0315                     	;# 
  4123  0316                     	;# 
  4124  0317                     	;# 
  4125  0318                     	;# 
  4126  0318                     	;# 
  4127  0319                     	;# 
  4128  031A                     	;# 
  4129  031B                     	;# 
  4130  031C                     	;# 
  4131  031C                     	;# 
  4132  031D                     	;# 
  4133  031E                     	;# 
  4134  031F                     	;# 
  4135  038C                     	;# 
  4136  038C                     	;# 
  4137  038D                     	;# 
  4138  038E                     	;# 
  4139  0390                     	;# 
  4140  0390                     	;# 
  4141  0391                     	;# 
  4142  0392                     	;# 
  4143  040C                     	;# 
  4144  040D                     	;# 
  4145  040E                     	;# 
  4146  040F                     	;# 
  4147  0410                     	;# 
  4148  0411                     	;# 
  4149  0416                     	;# 
  4150  0416                     	;# 
  4151  0417                     	;# 
  4152  0418                     	;# 
  4153  0418                     	;# 
  4154  0419                     	;# 
  4155  041A                     	;# 
  4156  041A                     	;# 
  4157  041B                     	;# 
  4158  041C                     	;# 
  4159  041C                     	;# 
  4160  041D                     	;# 
  4161  041E                     	;# 
  4162  041F                     	;# 
  4163  048C                     	;# 
  4164  048C                     	;# 
  4165  048D                     	;# 
  4166  048E                     	;# 
  4167  048F                     	;# 
  4168  048F                     	;# 
  4169  0490                     	;# 
  4170  0491                     	;# 
  4171  0492                     	;# 
  4172  0492                     	;# 
  4173  0493                     	;# 
  4174  0494                     	;# 
  4175  0495                     	;# 
  4176  0495                     	;# 
  4177  0496                     	;# 
  4178  0497                     	;# 
  4179  0498                     	;# 
  4180  0499                     	;# 
  4181  049A                     	;# 
  4182  049B                     	;# 
  4183  049C                     	;# 
  4184  049D                     	;# 
  4185  050C                     	;# 
  4186  050C                     	;# 
  4187  050D                     	;# 
  4188  050E                     	;# 
  4189  050F                     	;# 
  4190  050F                     	;# 
  4191  0510                     	;# 
  4192  0511                     	;# 
  4193  0512                     	;# 
  4194  0512                     	;# 
  4195  0513                     	;# 
  4196  0514                     	;# 
  4197  0515                     	;# 
  4198  0515                     	;# 
  4199  0516                     	;# 
  4200  0517                     	;# 
  4201  0518                     	;# 
  4202  0519                     	;# 
  4203  051A                     	;# 
  4204  051B                     	;# 
  4205  051C                     	;# 
  4206  051D                     	;# 
  4207  058C                     	;# 
  4208  058C                     	;# 
  4209  058D                     	;# 
  4210  058E                     	;# 
  4211  058F                     	;# 
  4212  058F                     	;# 
  4213  0590                     	;# 
  4214  0591                     	;# 
  4215  0592                     	;# 
  4216  0593                     	;# 
  4217  060C                     	;# 
  4218  060D                     	;# 
  4219  060E                     	;# 
  4220  060F                     	;# 
  4221  0610                     	;# 
  4222  0611                     	;# 
  4223  0612                     	;# 
  4224  0613                     	;# 
  4225  0614                     	;# 
  4226  0616                     	;# 
  4227  0617                     	;# 
  4228  0618                     	;# 
  4229  0619                     	;# 
  4230  061A                     	;# 
  4231  061B                     	;# 
  4232  061C                     	;# 
  4233  061D                     	;# 
  4234  061E                     	;# 
  4235  068C                     	;# 
  4236  068D                     	;# 
  4237  068E                     	;# 
  4238  068F                     	;# 
  4239  0690                     	;# 
  4240  0691                     	;# 
  4241  0692                     	;# 
  4242  0693                     	;# 
  4243  0694                     	;# 
  4244  070C                     	;# 
  4245  070D                     	;# 
  4246  070E                     	;# 
  4247  070F                     	;# 
  4248  0710                     	;# 
  4249  0711                     	;# 
  4250  0712                     	;# 
  4251  0713                     	;# 
  4252  0714                     	;# 
  4253  0716                     	;# 
  4254  0717                     	;# 
  4255  0718                     	;# 
  4256  0719                     	;# 
  4257  071A                     	;# 
  4258  071B                     	;# 
  4259  071C                     	;# 
  4260  071D                     	;# 
  4261  071E                     	;# 
  4262  0796                     	;# 
  4263  0797                     	;# 
  4264  0798                     	;# 
  4265  0799                     	;# 
  4266  079A                     	;# 
  4267  079B                     	;# 
  4268  080C                     	;# 
  4269  080D                     	;# 
  4270  080E                     	;# 
  4271  080F                     	;# 
  4272  0810                     	;# 
  4273  0811                     	;# 
  4274  0812                     	;# 
  4275  0813                     	;# 
  4276  0814                     	;# 
  4277  081A                     	;# 
  4278  081B                     	;# 
  4279  081C                     	;# 
  4280  081D                     	;# 
  4281  081E                     	;# 
  4282  081F                     	;# 
  4283  088C                     	;# 
  4284  088D                     	;# 
  4285  088E                     	;# 
  4286  088F                     	;# 
  4287  0890                     	;# 
  4288  0891                     	;# 
  4289  0892                     	;# 
  4290  0893                     	;# 
  4291  0895                     	;# 
  4292  0896                     	;# 
  4293  0897                     	;# 
  4294  0898                     	;# 
  4295  0899                     	;# 
  4296  089A                     	;# 
  4297  089B                     	;# 
  4298  090C                     	;# 
  4299  090E                     	;# 
  4300  090F                     	;# 
  4301  091F                     	;# 
  4302  091F                     	;# 
  4303  098F                     	;# 
  4304  098F                     	;# 
  4305  0990                     	;# 
  4306  0991                     	;# 
  4307  0992                     	;# 
  4308  0993                     	;# 
  4309  0994                     	;# 
  4310  0995                     	;# 
  4311  0996                     	;# 
  4312  0997                     	;# 
  4313  0E0F                     	;# 
  4314  0E10                     	;# 
  4315  0E11                     	;# 
  4316  0E12                     	;# 
  4317  0E13                     	;# 
  4318  0E14                     	;# 
  4319  0E15                     	;# 
  4320  0E16                     	;# 
  4321  0E17                     	;# 
  4322  0E18                     	;# 
  4323  0E19                     	;# 
  4324  0E1A                     	;# 
  4325  0E1B                     	;# 
  4326  0E1C                     	;# 
  4327  0E1D                     	;# 
  4328  0E1E                     	;# 
  4329  0E1F                     	;# 
  4330  0E20                     	;# 
  4331  0E21                     	;# 
  4332  0E22                     	;# 
  4333  0E23                     	;# 
  4334  0E24                     	;# 
  4335  0E25                     	;# 
  4336  0E26                     	;# 
  4337  0E27                     	;# 
  4338  0E28                     	;# 
  4339  0E29                     	;# 
  4340  0E2A                     	;# 
  4341  0E2B                     	;# 
  4342  0E2C                     	;# 
  4343  0E2D                     	;# 
  4344  0E2E                     	;# 
  4345  0E2F                     	;# 
  4346  0E30                     	;# 
  4347  0E31                     	;# 
  4348  0E32                     	;# 
  4349  0E33                     	;# 
  4350  0E34                     	;# 
  4351  0E35                     	;# 
  4352  0E36                     	;# 
  4353  0E37                     	;# 
  4354  0E8F                     	;# 
  4355  0E90                     	;# 
  4356  0E91                     	;# 
  4357  0E92                     	;# 
  4358  0E93                     	;# 
  4359  0E94                     	;# 
  4360  0E95                     	;# 
  4361  0E96                     	;# 
  4362  0E97                     	;# 
  4363  0E9C                     	;# 
  4364  0E9D                     	;# 
  4365  0E9E                     	;# 
  4366  0EA1                     	;# 
  4367  0EA2                     	;# 
  4368  0EA3                     	;# 
  4369  0EA4                     	;# 
  4370  0EA5                     	;# 
  4371  0EA9                     	;# 
  4372  0EAA                     	;# 
  4373  0EAB                     	;# 
  4374  0EAC                     	;# 
  4375  0EB1                     	;# 
  4376  0EB2                     	;# 
  4377  0EB3                     	;# 
  4378  0EB8                     	;# 
  4379  0EB9                     	;# 
  4380  0EBA                     	;# 
  4381  0EBB                     	;# 
  4382  0EBC                     	;# 
  4383  0EBD                     	;# 
  4384  0EBE                     	;# 
  4385  0EC3                     	;# 
  4386  0EC5                     	;# 
  4387  0EC6                     	;# 
  4388  0EC7                     	;# 
  4389  0EC8                     	;# 
  4390  0EC9                     	;# 
  4391  0ECA                     	;# 
  4392  0ECB                     	;# 
  4393  0ECC                     	;# 
  4394  0F10                     	;# 
  4395  0F11                     	;# 
  4396  0F12                     	;# 
  4397  0F13                     	;# 
  4398  0F14                     	;# 
  4399  0F15                     	;# 
  4400  0F16                     	;# 
  4401  0F17                     	;# 
  4402  0F18                     	;# 
  4403  0F19                     	;# 
  4404  0F1A                     	;# 
  4405  0F1B                     	;# 
  4406  0F1C                     	;# 
  4407  0F1D                     	;# 
  4408  0F1E                     	;# 
  4409  0F1F                     	;# 
  4410  0F20                     	;# 
  4411  0F21                     	;# 
  4412  0F22                     	;# 
  4413  0F23                     	;# 
  4414  0F24                     	;# 
  4415  0F25                     	;# 
  4416  0F26                     	;# 
  4417  0F27                     	;# 
  4418  0F28                     	;# 
  4419  0F29                     	;# 
  4420  0F2A                     	;# 
  4421  0F2B                     	;# 
  4422  0F2C                     	;# 
  4423  0F2D                     	;# 
  4424  0F2E                     	;# 
  4425  0F2F                     	;# 
  4426  0F30                     	;# 
  4427  0F31                     	;# 
  4428  0F32                     	;# 
  4429  0F38                     	;# 
  4430  0F39                     	;# 
  4431  0F3A                     	;# 
  4432  0F3B                     	;# 
  4433  0F3C                     	;# 
  4434  0F3D                     	;# 
  4435  0F3E                     	;# 
  4436  0F3F                     	;# 
  4437  0F40                     	;# 
  4438  0F41                     	;# 
  4439  0F43                     	;# 
  4440  0F44                     	;# 
  4441  0F45                     	;# 
  4442  0F46                     	;# 
  4443  0F47                     	;# 
  4444  0F48                     	;# 
  4445  0F49                     	;# 
  4446  0F4A                     	;# 
  4447  0F4B                     	;# 
  4448  0F4C                     	;# 
  4449  0F4E                     	;# 
  4450  0F4F                     	;# 
  4451  0F50                     	;# 
  4452  0F51                     	;# 
  4453  0F52                     	;# 
  4454  0F53                     	;# 
  4455  0F54                     	;# 
  4456  0F55                     	;# 
  4457  0F56                     	;# 
  4458  0F57                     	;# 
  4459  0F59                     	;# 
  4460  0F5A                     	;# 
  4461  0F5B                     	;# 
  4462  0F5C                     	;# 
  4463  0F5D                     	;# 
  4464  0F61                     	;# 
  4465  0F62                     	;# 
  4466  0F64                     	;# 
  4467  0F65                     	;# 
  4468  0F66                     	;# 
  4469  0F67                     	;# 
  4470  0F68                     	;# 
  4471  0F69                     	;# 
  4472  0F6A                     	;# 
  4473  0F6B                     	;# 
  4474  0F6C                     	;# 
  4475  0F6D                     	;# 
  4476  0FE4                     	;# 
  4477  0FE5                     	;# 
  4478  0FE6                     	;# 
  4479  0FE7                     	;# 
  4480  0FE8                     	;# 
  4481  0FE9                     	;# 
  4482  0FEA                     	;# 
  4483  0FEB                     	;# 
  4484  0FED                     	;# 
  4485  0FEE                     	;# 
  4486  0FEF                     	;# 
  4487  0000                     	;# 
  4488  0001                     	;# 
  4489  0002                     	;# 
  4490  0003                     	;# 
  4491  0004                     	;# 
  4492  0005                     	;# 
  4493  0006                     	;# 
  4494  0007                     	;# 
  4495  0008                     	;# 
  4496  0009                     	;# 
  4497  000A                     	;# 
  4498  000B                     	;# 
  4499  000C                     	;# 
  4500  000D                     	;# 
  4501  000E                     	;# 
  4502  000F                     	;# 
  4503  0010                     	;# 
  4504  0011                     	;# 
  4505  0012                     	;# 
  4506  0013                     	;# 
  4507  0014                     	;# 
  4508  0015                     	;# 
  4509  0016                     	;# 
  4510  0017                     	;# 
  4511  0018                     	;# 
  4512  0019                     	;# 
  4513  001A                     	;# 
  4514  001C                     	;# 
  4515  001C                     	;# 
  4516  001D                     	;# 
  4517  001D                     	;# 
  4518  001E                     	;# 
  4519  001F                     	;# 
  4520  008C                     	;# 
  4521  008C                     	;# 
  4522  008D                     	;# 
  4523  008E                     	;# 
  4524  008E                     	;# 
  4525  008F                     	;# 
  4526  0090                     	;# 
  4527  0090                     	;# 
  4528  0091                     	;# 
  4529  0093                     	;# 
  4530  0094                     	;# 
  4531  0095                     	;# 
  4532  0096                     	;# 
  4533  0097                     	;# 
  4534  0098                     	;# 
  4535  0099                     	;# 
  4536  009A                     	;# 
  4537  009B                     	;# 
  4538  009C                     	;# 
  4539  009D                     	;# 
  4540  009E                     	;# 
  4541  010C                     	;# 
  4542  010D                     	;# 
  4543  010E                     	;# 
  4544  010E                     	;# 
  4545  010F                     	;# 
  4546  0110                     	;# 
  4547  0110                     	;# 
  4548  0111                     	;# 
  4549  0112                     	;# 
  4550  0112                     	;# 
  4551  0113                     	;# 
  4552  0114                     	;# 
  4553  0114                     	;# 
  4554  0115                     	;# 
  4555  0116                     	;# 
  4556  0116                     	;# 
  4557  0117                     	;# 
  4558  0119                     	;# 
  4559  0119                     	;# 
  4560  0119                     	;# 
  4561  011A                     	;# 
  4562  011A                     	;# 
  4563  011A                     	;# 
  4564  011B                     	;# 
  4565  011B                     	;# 
  4566  011B                     	;# 
  4567  011B                     	;# 
  4568  011B                     	;# 
  4569  011C                     	;# 
  4570  011C                     	;# 
  4571  011C                     	;# 
  4572  011D                     	;# 
  4573  011D                     	;# 
  4574  011D                     	;# 
  4575  011E                     	;# 
  4576  011E                     	;# 
  4577  011E                     	;# 
  4578  011F                     	;# 
  4579  011F                     	;# 
  4580  011F                     	;# 
  4581  011F                     	;# 
  4582  011F                     	;# 
  4583  018C                     	;# 
  4584  018D                     	;# 
  4585  018E                     	;# 
  4586  018F                     	;# 
  4587  0190                     	;# 
  4588  0191                     	;# 
  4589  0192                     	;# 
  4590  0196                     	;# 
  4591  0197                     	;# 
  4592  0198                     	;# 
  4593  0199                     	;# 
  4594  019A                     	;# 
  4595  019B                     	;# 
  4596  019C                     	;# 
  4597  020C                     	;# 
  4598  020C                     	;# 
  4599  020D                     	;# 
  4600  020E                     	;# 
  4601  020F                     	;# 
  4602  020F                     	;# 
  4603  0210                     	;# 
  4604  0210                     	;# 
  4605  0211                     	;# 
  4606  0211                     	;# 
  4607  0212                     	;# 
  4608  0212                     	;# 
  4609  0213                     	;# 
  4610  0214                     	;# 
  4611  0215                     	;# 
  4612  0215                     	;# 
  4613  0216                     	;# 
  4614  0216                     	;# 
  4615  0217                     	;# 
  4616  0217                     	;# 
  4617  0218                     	;# 
  4618  0218                     	;# 
  4619  0219                     	;# 
  4620  021A                     	;# 
  4621  021B                     	;# 
  4622  021B                     	;# 
  4623  021C                     	;# 
  4624  021C                     	;# 
  4625  021D                     	;# 
  4626  021D                     	;# 
  4627  021E                     	;# 
  4628  021F                     	;# 
  4629  028C                     	;# 
  4630  028C                     	;# 
  4631  028D                     	;# 
  4632  028D                     	;# 
  4633  028E                     	;# 
  4634  028F                     	;# 
  4635  0290                     	;# 
  4636  0290                     	;# 
  4637  0291                     	;# 
  4638  0292                     	;# 
  4639  0292                     	;# 
  4640  0293                     	;# 
  4641  0293                     	;# 
  4642  0294                     	;# 
  4643  0295                     	;# 
  4644  0296                     	;# 
  4645  0296                     	;# 
  4646  0297                     	;# 
  4647  0298                     	;# 
  4648  0298                     	;# 
  4649  0299                     	;# 
  4650  0299                     	;# 
  4651  029A                     	;# 
  4652  029B                     	;# 
  4653  029C                     	;# 
  4654  029C                     	;# 
  4655  029D                     	;# 
  4656  030C                     	;# 
  4657  030C                     	;# 
  4658  030D                     	;# 
  4659  030E                     	;# 
  4660  030F                     	;# 
  4661  0310                     	;# 
  4662  0310                     	;# 
  4663  0311                     	;# 
  4664  0312                     	;# 
  4665  0313                     	;# 
  4666  0314                     	;# 
  4667  0314                     	;# 
  4668  0315                     	;# 
  4669  0316                     	;# 
  4670  0317                     	;# 
  4671  0318                     	;# 
  4672  0318                     	;# 
  4673  0319                     	;# 
  4674  031A                     	;# 
  4675  031B                     	;# 
  4676  031C                     	;# 
  4677  031C                     	;# 
  4678  031D                     	;# 
  4679  031E                     	;# 
  4680  031F                     	;# 
  4681  038C                     	;# 
  4682  038C                     	;# 
  4683  038D                     	;# 
  4684  038E                     	;# 
  4685  0390                     	;# 
  4686  0390                     	;# 
  4687  0391                     	;# 
  4688  0392                     	;# 
  4689  040C                     	;# 
  4690  040D                     	;# 
  4691  040E                     	;# 
  4692  040F                     	;# 
  4693  0410                     	;# 
  4694  0411                     	;# 
  4695  0416                     	;# 
  4696  0416                     	;# 
  4697  0417                     	;# 
  4698  0418                     	;# 
  4699  0418                     	;# 
  4700  0419                     	;# 
  4701  041A                     	;# 
  4702  041A                     	;# 
  4703  041B                     	;# 
  4704  041C                     	;# 
  4705  041C                     	;# 
  4706  041D                     	;# 
  4707  041E                     	;# 
  4708  041F                     	;# 
  4709  048C                     	;# 
  4710  048C                     	;# 
  4711  048D                     	;# 
  4712  048E                     	;# 
  4713  048F                     	;# 
  4714  048F                     	;# 
  4715  0490                     	;# 
  4716  0491                     	;# 
  4717  0492                     	;# 
  4718  0492                     	;# 
  4719  0493                     	;# 
  4720  0494                     	;# 
  4721  0495                     	;# 
  4722  0495                     	;# 
  4723  0496                     	;# 
  4724  0497                     	;# 
  4725  0498                     	;# 
  4726  0499                     	;# 
  4727  049A                     	;# 
  4728  049B                     	;# 
  4729  049C                     	;# 
  4730  049D                     	;# 
  4731  050C                     	;# 
  4732  050C                     	;# 
  4733  050D                     	;# 
  4734  050E                     	;# 
  4735  050F                     	;# 
  4736  050F                     	;# 
  4737  0510                     	;# 
  4738  0511                     	;# 
  4739  0512                     	;# 
  4740  0512                     	;# 
  4741  0513                     	;# 
  4742  0514                     	;# 
  4743  0515                     	;# 
  4744  0515                     	;# 
  4745  0516                     	;# 
  4746  0517                     	;# 
  4747  0518                     	;# 
  4748  0519                     	;# 
  4749  051A                     	;# 
  4750  051B                     	;# 
  4751  051C                     	;# 
  4752  051D                     	;# 
  4753  058C                     	;# 
  4754  058C                     	;# 
  4755  058D                     	;# 
  4756  058E                     	;# 
  4757  058F                     	;# 
  4758  058F                     	;# 
  4759  0590                     	;# 
  4760  0591                     	;# 
  4761  0592                     	;# 
  4762  0593                     	;# 
  4763  060C                     	;# 
  4764  060D                     	;# 
  4765  060E                     	;# 
  4766  060F                     	;# 
  4767  0610                     	;# 
  4768  0611                     	;# 
  4769  0612                     	;# 
  4770  0613                     	;# 
  4771  0614                     	;# 
  4772  0616                     	;# 
  4773  0617                     	;# 
  4774  0618                     	;# 
  4775  0619                     	;# 
  4776  061A                     	;# 
  4777  061B                     	;# 
  4778  061C                     	;# 
  4779  061D                     	;# 
  4780  061E                     	;# 
  4781  068C                     	;# 
  4782  068D                     	;# 
  4783  068E                     	;# 
  4784  068F                     	;# 
  4785  0690                     	;# 
  4786  0691                     	;# 
  4787  0692                     	;# 
  4788  0693                     	;# 
  4789  0694                     	;# 
  4790  070C                     	;# 
  4791  070D                     	;# 
  4792  070E                     	;# 
  4793  070F                     	;# 
  4794  0710                     	;# 
  4795  0711                     	;# 
  4796  0712                     	;# 
  4797  0713                     	;# 
  4798  0714                     	;# 
  4799  0716                     	;# 
  4800  0717                     	;# 
  4801  0718                     	;# 
  4802  0719                     	;# 
  4803  071A                     	;# 
  4804  071B                     	;# 
  4805  071C                     	;# 
  4806  071D                     	;# 
  4807  071E                     	;# 
  4808  0796                     	;# 
  4809  0797                     	;# 
  4810  0798                     	;# 
  4811  0799                     	;# 
  4812  079A                     	;# 
  4813  079B                     	;# 
  4814  080C                     	;# 
  4815  080D                     	;# 
  4816  080E                     	;# 
  4817  080F                     	;# 
  4818  0810                     	;# 
  4819  0811                     	;# 
  4820  0812                     	;# 
  4821  0813                     	;# 
  4822  0814                     	;# 
  4823  081A                     	;# 
  4824  081B                     	;# 
  4825  081C                     	;# 
  4826  081D                     	;# 
  4827  081E                     	;# 
  4828  081F                     	;# 
  4829  088C                     	;# 
  4830  088D                     	;# 
  4831  088E                     	;# 
  4832  088F                     	;# 
  4833  0890                     	;# 
  4834  0891                     	;# 
  4835  0892                     	;# 
  4836  0893                     	;# 
  4837  0895                     	;# 
  4838  0896                     	;# 
  4839  0897                     	;# 
  4840  0898                     	;# 
  4841  0899                     	;# 
  4842  089A                     	;# 
  4843  089B                     	;# 
  4844  090C                     	;# 
  4845  090E                     	;# 
  4846  090F                     	;# 
  4847  091F                     	;# 
  4848  091F                     	;# 
  4849  098F                     	;# 
  4850  098F                     	;# 
  4851  0990                     	;# 
  4852  0991                     	;# 
  4853  0992                     	;# 
  4854  0993                     	;# 
  4855  0994                     	;# 
  4856  0995                     	;# 
  4857  0996                     	;# 
  4858  0997                     	;# 
  4859  0E0F                     	;# 
  4860  0E10                     	;# 
  4861  0E11                     	;# 
  4862  0E12                     	;# 
  4863  0E13                     	;# 
  4864  0E14                     	;# 
  4865  0E15                     	;# 
  4866  0E16                     	;# 
  4867  0E17                     	;# 
  4868  0E18                     	;# 
  4869  0E19                     	;# 
  4870  0E1A                     	;# 
  4871  0E1B                     	;# 
  4872  0E1C                     	;# 
  4873  0E1D                     	;# 
  4874  0E1E                     	;# 
  4875  0E1F                     	;# 
  4876  0E20                     	;# 
  4877  0E21                     	;# 
  4878  0E22                     	;# 
  4879  0E23                     	;# 
  4880  0E24                     	;# 
  4881  0E25                     	;# 
  4882  0E26                     	;# 
  4883  0E27                     	;# 
  4884  0E28                     	;# 
  4885  0E29                     	;# 
  4886  0E2A                     	;# 
  4887  0E2B                     	;# 
  4888  0E2C                     	;# 
  4889  0E2D                     	;# 
  4890  0E2E                     	;# 
  4891  0E2F                     	;# 
  4892  0E30                     	;# 
  4893  0E31                     	;# 
  4894  0E32                     	;# 
  4895  0E33                     	;# 
  4896  0E34                     	;# 
  4897  0E35                     	;# 
  4898  0E36                     	;# 
  4899  0E37                     	;# 
  4900  0E8F                     	;# 
  4901  0E90                     	;# 
  4902  0E91                     	;# 
  4903  0E92                     	;# 
  4904  0E93                     	;# 
  4905  0E94                     	;# 
  4906  0E95                     	;# 
  4907  0E96                     	;# 
  4908  0E97                     	;# 
  4909  0E9C                     	;# 
  4910  0E9D                     	;# 
  4911  0E9E                     	;# 
  4912  0EA1                     	;# 
  4913  0EA2                     	;# 
  4914  0EA3                     	;# 
  4915  0EA4                     	;# 
  4916  0EA5                     	;# 
  4917  0EA9                     	;# 
  4918  0EAA                     	;# 
  4919  0EAB                     	;# 
  4920  0EAC                     	;# 
  4921  0EB1                     	;# 
  4922  0EB2                     	;# 
  4923  0EB3                     	;# 
  4924  0EB8                     	;# 
  4925  0EB9                     	;# 
  4926  0EBA                     	;# 
  4927  0EBB                     	;# 
  4928  0EBC                     	;# 
  4929  0EBD                     	;# 
  4930  0EBE                     	;# 
  4931  0EC3                     	;# 
  4932  0EC5                     	;# 
  4933  0EC6                     	;# 
  4934  0EC7                     	;# 
  4935  0EC8                     	;# 
  4936  0EC9                     	;# 
  4937  0ECA                     	;# 
  4938  0ECB                     	;# 
  4939  0ECC                     	;# 
  4940  0F10                     	;# 
  4941  0F11                     	;# 
  4942  0F12                     	;# 
  4943  0F13                     	;# 
  4944  0F14                     	;# 
  4945  0F15                     	;# 
  4946  0F16                     	;# 
  4947  0F17                     	;# 
  4948  0F18                     	;# 
  4949  0F19                     	;# 
  4950  0F1A                     	;# 
  4951  0F1B                     	;# 
  4952  0F1C                     	;# 
  4953  0F1D                     	;# 
  4954  0F1E                     	;# 
  4955  0F1F                     	;# 
  4956  0F20                     	;# 
  4957  0F21                     	;# 
  4958  0F22                     	;# 
  4959  0F23                     	;# 
  4960  0F24                     	;# 
  4961  0F25                     	;# 
  4962  0F26                     	;# 
  4963  0F27                     	;# 
  4964  0F28                     	;# 
  4965  0F29                     	;# 
  4966  0F2A                     	;# 
  4967  0F2B                     	;# 
  4968  0F2C                     	;# 
  4969  0F2D                     	;# 
  4970  0F2E                     	;# 
  4971  0F2F                     	;# 
  4972  0F30                     	;# 
  4973  0F31                     	;# 
  4974  0F32                     	;# 
  4975  0F38                     	;# 
  4976  0F39                     	;# 
  4977  0F3A                     	;# 
  4978  0F3B                     	;# 
  4979  0F3C                     	;# 
  4980  0F3D                     	;# 
  4981  0F3E                     	;# 
  4982  0F3F                     	;# 
  4983  0F40                     	;# 
  4984  0F41                     	;# 
  4985  0F43                     	;# 
  4986  0F44                     	;# 
  4987  0F45                     	;# 
  4988  0F46                     	;# 
  4989  0F47                     	;# 
  4990  0F48                     	;# 
  4991  0F49                     	;# 
  4992  0F4A                     	;# 
  4993  0F4B                     	;# 
  4994  0F4C                     	;# 
  4995  0F4E                     	;# 
  4996  0F4F                     	;# 
  4997  0F50                     	;# 
  4998  0F51                     	;# 
  4999  0F52                     	;# 
  5000  0F53                     	;# 
  5001  0F54                     	;# 
  5002  0F55                     	;# 
  5003  0F56                     	;# 
  5004  0F57                     	;# 
  5005  0F59                     	;# 
  5006  0F5A                     	;# 
  5007  0F5B                     	;# 
  5008  0F5C                     	;# 
  5009  0F5D                     	;# 
  5010  0F61                     	;# 
  5011  0F62                     	;# 
  5012  0F64                     	;# 
  5013  0F65                     	;# 
  5014  0F66                     	;# 
  5015  0F67                     	;# 
  5016  0F68                     	;# 
  5017  0F69                     	;# 
  5018  0F6A                     	;# 
  5019  0F6B                     	;# 
  5020  0F6C                     	;# 
  5021  0F6D                     	;# 
  5022  0FE4                     	;# 
  5023  0FE5                     	;# 
  5024  0FE6                     	;# 
  5025  0FE7                     	;# 
  5026  0FE8                     	;# 
  5027  0FE9                     	;# 
  5028  0FEA                     	;# 
  5029  0FEB                     	;# 
  5030  0FED                     	;# 
  5031  0FEE                     	;# 
  5032  0FEF                     	;# 
  5033  0000                     	;# 
  5034  0001                     	;# 
  5035  0002                     	;# 
  5036  0003                     	;# 
  5037  0004                     	;# 
  5038  0005                     	;# 
  5039  0006                     	;# 
  5040  0007                     	;# 
  5041  0008                     	;# 
  5042  0009                     	;# 
  5043  000A                     	;# 
  5044  000B                     	;# 
  5045  000C                     	;# 
  5046  000D                     	;# 
  5047  000E                     	;# 
  5048  000F                     	;# 
  5049  0010                     	;# 
  5050  0011                     	;# 
  5051  0012                     	;# 
  5052  0013                     	;# 
  5053  0014                     	;# 
  5054  0015                     	;# 
  5055  0016                     	;# 
  5056  0017                     	;# 
  5057  0018                     	;# 
  5058  0019                     	;# 
  5059  001A                     	;# 
  5060  001C                     	;# 
  5061  001C                     	;# 
  5062  001D                     	;# 
  5063  001D                     	;# 
  5064  001E                     	;# 
  5065  001F                     	;# 
  5066  008C                     	;# 
  5067  008C                     	;# 
  5068  008D                     	;# 
  5069  008E                     	;# 
  5070  008E                     	;# 
  5071  008F                     	;# 
  5072  0090                     	;# 
  5073  0090                     	;# 
  5074  0091                     	;# 
  5075  0093                     	;# 
  5076  0094                     	;# 
  5077  0095                     	;# 
  5078  0096                     	;# 
  5079  0097                     	;# 
  5080  0098                     	;# 
  5081  0099                     	;# 
  5082  009A                     	;# 
  5083  009B                     	;# 
  5084  009C                     	;# 
  5085  009D                     	;# 
  5086  009E                     	;# 
  5087  010C                     	;# 
  5088  010D                     	;# 
  5089  010E                     	;# 
  5090  010E                     	;# 
  5091  010F                     	;# 
  5092  0110                     	;# 
  5093  0110                     	;# 
  5094  0111                     	;# 
  5095  0112                     	;# 
  5096  0112                     	;# 
  5097  0113                     	;# 
  5098  0114                     	;# 
  5099  0114                     	;# 
  5100  0115                     	;# 
  5101  0116                     	;# 
  5102  0116                     	;# 
  5103  0117                     	;# 
  5104  0119                     	;# 
  5105  0119                     	;# 
  5106  0119                     	;# 
  5107  011A                     	;# 
  5108  011A                     	;# 
  5109  011A                     	;# 
  5110  011B                     	;# 
  5111  011B                     	;# 
  5112  011B                     	;# 
  5113  011B                     	;# 
  5114  011B                     	;# 
  5115  011C                     	;# 
  5116  011C                     	;# 
  5117  011C                     	;# 
  5118  011D                     	;# 
  5119  011D                     	;# 
  5120  011D                     	;# 
  5121  011E                     	;# 
  5122  011E                     	;# 
  5123  011E                     	;# 
  5124  011F                     	;# 
  5125  011F                     	;# 
  5126  011F                     	;# 
  5127  011F                     	;# 
  5128  011F                     	;# 
  5129  018C                     	;# 
  5130  018D                     	;# 
  5131  018E                     	;# 
  5132  018F                     	;# 
  5133  0190                     	;# 
  5134  0191                     	;# 
  5135  0192                     	;# 
  5136  0196                     	;# 
  5137  0197                     	;# 
  5138  0198                     	;# 
  5139  0199                     	;# 
  5140  019A                     	;# 
  5141  019B                     	;# 
  5142  019C                     	;# 
  5143  020C                     	;# 
  5144  020C                     	;# 
  5145  020D                     	;# 
  5146  020E                     	;# 
  5147  020F                     	;# 
  5148  020F                     	;# 
  5149  0210                     	;# 
  5150  0210                     	;# 
  5151  0211                     	;# 
  5152  0211                     	;# 
  5153  0212                     	;# 
  5154  0212                     	;# 
  5155  0213                     	;# 
  5156  0214                     	;# 
  5157  0215                     	;# 
  5158  0215                     	;# 
  5159  0216                     	;# 
  5160  0216                     	;# 
  5161  0217                     	;# 
  5162  0217                     	;# 
  5163  0218                     	;# 
  5164  0218                     	;# 
  5165  0219                     	;# 
  5166  021A                     	;# 
  5167  021B                     	;# 
  5168  021B                     	;# 
  5169  021C                     	;# 
  5170  021C                     	;# 
  5171  021D                     	;# 
  5172  021D                     	;# 
  5173  021E                     	;# 
  5174  021F                     	;# 
  5175  028C                     	;# 
  5176  028C                     	;# 
  5177  028D                     	;# 
  5178  028D                     	;# 
  5179  028E                     	;# 
  5180  028F                     	;# 
  5181  0290                     	;# 
  5182  0290                     	;# 
  5183  0291                     	;# 
  5184  0292                     	;# 
  5185  0292                     	;# 
  5186  0293                     	;# 
  5187  0293                     	;# 
  5188  0294                     	;# 
  5189  0295                     	;# 
  5190  0296                     	;# 
  5191  0296                     	;# 
  5192  0297                     	;# 
  5193  0298                     	;# 
  5194  0298                     	;# 
  5195  0299                     	;# 
  5196  0299                     	;# 
  5197  029A                     	;# 
  5198  029B                     	;# 
  5199  029C                     	;# 
  5200  029C                     	;# 
  5201  029D                     	;# 
  5202  030C                     	;# 
  5203  030C                     	;# 
  5204  030D                     	;# 
  5205  030E                     	;# 
  5206  030F                     	;# 
  5207  0310                     	;# 
  5208  0310                     	;# 
  5209  0311                     	;# 
  5210  0312                     	;# 
  5211  0313                     	;# 
  5212  0314                     	;# 
  5213  0314                     	;# 
  5214  0315                     	;# 
  5215  0316                     	;# 
  5216  0317                     	;# 
  5217  0318                     	;# 
  5218  0318                     	;# 
  5219  0319                     	;# 
  5220  031A                     	;# 
  5221  031B                     	;# 
  5222  031C                     	;# 
  5223  031C                     	;# 
  5224  031D                     	;# 
  5225  031E                     	;# 
  5226  031F                     	;# 
  5227  038C                     	;# 
  5228  038C                     	;# 
  5229  038D                     	;# 
  5230  038E                     	;# 
  5231  0390                     	;# 
  5232  0390                     	;# 
  5233  0391                     	;# 
  5234  0392                     	;# 
  5235  040C                     	;# 
  5236  040D                     	;# 
  5237  040E                     	;# 
  5238  040F                     	;# 
  5239  0410                     	;# 
  5240  0411                     	;# 
  5241  0416                     	;# 
  5242  0416                     	;# 
  5243  0417                     	;# 
  5244  0418                     	;# 
  5245  0418                     	;# 
  5246  0419                     	;# 
  5247  041A                     	;# 
  5248  041A                     	;# 
  5249  041B                     	;# 
  5250  041C                     	;# 
  5251  041C                     	;# 
  5252  041D                     	;# 
  5253  041E                     	;# 
  5254  041F                     	;# 
  5255  048C                     	;# 
  5256  048C                     	;# 
  5257  048D                     	;# 
  5258  048E                     	;# 
  5259  048F                     	;# 
  5260  048F                     	;# 
  5261  0490                     	;# 
  5262  0491                     	;# 
  5263  0492                     	;# 
  5264  0492                     	;# 
  5265  0493                     	;# 
  5266  0494                     	;# 
  5267  0495                     	;# 
  5268  0495                     	;# 
  5269  0496                     	;# 
  5270  0497                     	;# 
  5271  0498                     	;# 
  5272  0499                     	;# 
  5273  049A                     	;# 
  5274  049B                     	;# 
  5275  049C                     	;# 
  5276  049D                     	;# 
  5277  050C                     	;# 
  5278  050C                     	;# 
  5279  050D                     	;# 
  5280  050E                     	;# 
  5281  050F                     	;# 
  5282  050F                     	;# 
  5283  0510                     	;# 
  5284  0511                     	;# 
  5285  0512                     	;# 
  5286  0512                     	;# 
  5287  0513                     	;# 
  5288  0514                     	;# 
  5289  0515                     	;# 
  5290  0515                     	;# 
  5291  0516                     	;# 
  5292  0517                     	;# 
  5293  0518                     	;# 
  5294  0519                     	;# 
  5295  051A                     	;# 
  5296  051B                     	;# 
  5297  051C                     	;# 
  5298  051D                     	;# 
  5299  058C                     	;# 
  5300  058C                     	;# 
  5301  058D                     	;# 
  5302  058E                     	;# 
  5303  058F                     	;# 
  5304  058F                     	;# 
  5305  0590                     	;# 
  5306  0591                     	;# 
  5307  0592                     	;# 
  5308  0593                     	;# 
  5309  060C                     	;# 
  5310  060D                     	;# 
  5311  060E                     	;# 
  5312  060F                     	;# 
  5313  0610                     	;# 
  5314  0611                     	;# 
  5315  0612                     	;# 
  5316  0613                     	;# 
  5317  0614                     	;# 
  5318  0616                     	;# 
  5319  0617                     	;# 
  5320  0618                     	;# 
  5321  0619                     	;# 
  5322  061A                     	;# 
  5323  061B                     	;# 
  5324  061C                     	;# 
  5325  061D                     	;# 
  5326  061E                     	;# 
  5327  068C                     	;# 
  5328  068D                     	;# 
  5329  068E                     	;# 
  5330  068F                     	;# 
  5331  0690                     	;# 
  5332  0691                     	;# 
  5333  0692                     	;# 
  5334  0693                     	;# 
  5335  0694                     	;# 
  5336  070C                     	;# 
  5337  070D                     	;# 
  5338  070E                     	;# 
  5339  070F                     	;# 
  5340  0710                     	;# 
  5341  0711                     	;# 
  5342  0712                     	;# 
  5343  0713                     	;# 
  5344  0714                     	;# 
  5345  0716                     	;# 
  5346  0717                     	;# 
  5347  0718                     	;# 
  5348  0719                     	;# 
  5349  071A                     	;# 
  5350  071B                     	;# 
  5351  071C                     	;# 
  5352  071D                     	;# 
  5353  071E                     	;# 
  5354  0796                     	;# 
  5355  0797                     	;# 
  5356  0798                     	;# 
  5357  0799                     	;# 
  5358  079A                     	;# 
  5359  079B                     	;# 
  5360  080C                     	;# 
  5361  080D                     	;# 
  5362  080E                     	;# 
  5363  080F                     	;# 
  5364  0810                     	;# 
  5365  0811                     	;# 
  5366  0812                     	;# 
  5367  0813                     	;# 
  5368  0814                     	;# 
  5369  081A                     	;# 
  5370  081B                     	;# 
  5371  081C                     	;# 
  5372  081D                     	;# 
  5373  081E                     	;# 
  5374  081F                     	;# 
  5375  088C                     	;# 
  5376  088D                     	;# 
  5377  088E                     	;# 
  5378  088F                     	;# 
  5379  0890                     	;# 
  5380  0891                     	;# 
  5381  0892                     	;# 
  5382  0893                     	;# 
  5383  0895                     	;# 
  5384  0896                     	;# 
  5385  0897                     	;# 
  5386  0898                     	;# 
  5387  0899                     	;# 
  5388  089A                     	;# 
  5389  089B                     	;# 
  5390  090C                     	;# 
  5391  090E                     	;# 
  5392  090F                     	;# 
  5393  091F                     	;# 
  5394  091F                     	;# 
  5395  098F                     	;# 
  5396  098F                     	;# 
  5397  0990                     	;# 
  5398  0991                     	;# 
  5399  0992                     	;# 
  5400  0993                     	;# 
  5401  0994                     	;# 
  5402  0995                     	;# 
  5403  0996                     	;# 
  5404  0997                     	;# 
  5405  0E0F                     	;# 
  5406  0E10                     	;# 
  5407  0E11                     	;# 
  5408  0E12                     	;# 
  5409  0E13                     	;# 
  5410  0E14                     	;# 
  5411  0E15                     	;# 
  5412  0E16                     	;# 
  5413  0E17                     	;# 
  5414  0E18                     	;# 
  5415  0E19                     	;# 
  5416  0E1A                     	;# 
  5417  0E1B                     	;# 
  5418  0E1C                     	;# 
  5419  0E1D                     	;# 
  5420  0E1E                     	;# 
  5421  0E1F                     	;# 
  5422  0E20                     	;# 
  5423  0E21                     	;# 
  5424  0E22                     	;# 
  5425  0E23                     	;# 
  5426  0E24                     	;# 
  5427  0E25                     	;# 
  5428  0E26                     	;# 
  5429  0E27                     	;# 
  5430  0E28                     	;# 
  5431  0E29                     	;# 
  5432  0E2A                     	;# 
  5433  0E2B                     	;# 
  5434  0E2C                     	;# 
  5435  0E2D                     	;# 
  5436  0E2E                     	;# 
  5437  0E2F                     	;# 
  5438  0E30                     	;# 
  5439  0E31                     	;# 
  5440  0E32                     	;# 
  5441  0E33                     	;# 
  5442  0E34                     	;# 
  5443  0E35                     	;# 
  5444  0E36                     	;# 
  5445  0E37                     	;# 
  5446  0E8F                     	;# 
  5447  0E90                     	;# 
  5448  0E91                     	;# 
  5449  0E92                     	;# 
  5450  0E93                     	;# 
  5451  0E94                     	;# 
  5452  0E95                     	;# 
  5453  0E96                     	;# 
  5454  0E97                     	;# 
  5455  0E9C                     	;# 
  5456  0E9D                     	;# 
  5457  0E9E                     	;# 
  5458  0EA1                     	;# 
  5459  0EA2                     	;# 
  5460  0EA3                     	;# 
  5461  0EA4                     	;# 
  5462  0EA5                     	;# 
  5463  0EA9                     	;# 
  5464  0EAA                     	;# 
  5465  0EAB                     	;# 
  5466  0EAC                     	;# 
  5467  0EB1                     	;# 
  5468  0EB2                     	;# 
  5469  0EB3                     	;# 
  5470  0EB8                     	;# 
  5471  0EB9                     	;# 
  5472  0EBA                     	;# 
  5473  0EBB                     	;# 
  5474  0EBC                     	;# 
  5475  0EBD                     	;# 
  5476  0EBE                     	;# 
  5477  0EC3                     	;# 
  5478  0EC5                     	;# 
  5479  0EC6                     	;# 
  5480  0EC7                     	;# 
  5481  0EC8                     	;# 
  5482  0EC9                     	;# 
  5483  0ECA                     	;# 
  5484  0ECB                     	;# 
  5485  0ECC                     	;# 
  5486  0F10                     	;# 
  5487  0F11                     	;# 
  5488  0F12                     	;# 
  5489  0F13                     	;# 
  5490  0F14                     	;# 
  5491  0F15                     	;# 
  5492  0F16                     	;# 
  5493  0F17                     	;# 
  5494  0F18                     	;# 
  5495  0F19                     	;# 
  5496  0F1A                     	;# 
  5497  0F1B                     	;# 
  5498  0F1C                     	;# 
  5499  0F1D                     	;# 
  5500  0F1E                     	;# 
  5501  0F1F                     	;# 
  5502  0F20                     	;# 
  5503  0F21                     	;# 
  5504  0F22                     	;# 
  5505  0F23                     	;# 
  5506  0F24                     	;# 
  5507  0F25                     	;# 
  5508  0F26                     	;# 
  5509  0F27                     	;# 
  5510  0F28                     	;# 
  5511  0F29                     	;# 
  5512  0F2A                     	;# 
  5513  0F2B                     	;# 
  5514  0F2C                     	;# 
  5515  0F2D                     	;# 
  5516  0F2E                     	;# 
  5517  0F2F                     	;# 
  5518  0F30                     	;# 
  5519  0F31                     	;# 
  5520  0F32                     	;# 
  5521  0F38                     	;# 
  5522  0F39                     	;# 
  5523  0F3A                     	;# 
  5524  0F3B                     	;# 
  5525  0F3C                     	;# 
  5526  0F3D                     	;# 
  5527  0F3E                     	;# 
  5528  0F3F                     	;# 
  5529  0F40                     	;# 
  5530  0F41                     	;# 
  5531  0F43                     	;# 
  5532  0F44                     	;# 
  5533  0F45                     	;# 
  5534  0F46                     	;# 
  5535  0F47                     	;# 
  5536  0F48                     	;# 
  5537  0F49                     	;# 
  5538  0F4A                     	;# 
  5539  0F4B                     	;# 
  5540  0F4C                     	;# 
  5541  0F4E                     	;# 
  5542  0F4F                     	;# 
  5543  0F50                     	;# 
  5544  0F51                     	;# 
  5545  0F52                     	;# 
  5546  0F53                     	;# 
  5547  0F54                     	;# 
  5548  0F55                     	;# 
  5549  0F56                     	;# 
  5550  0F57                     	;# 
  5551  0F59                     	;# 
  5552  0F5A                     	;# 
  5553  0F5B                     	;# 
  5554  0F5C                     	;# 
  5555  0F5D                     	;# 
  5556  0F61                     	;# 
  5557  0F62                     	;# 
  5558  0F64                     	;# 
  5559  0F65                     	;# 
  5560  0F66                     	;# 
  5561  0F67                     	;# 
  5562  0F68                     	;# 
  5563  0F69                     	;# 
  5564  0F6A                     	;# 
  5565  0F6B                     	;# 
  5566  0F6C                     	;# 
  5567  0F6D                     	;# 
  5568  0FE4                     	;# 
  5569  0FE5                     	;# 
  5570  0FE6                     	;# 
  5571  0FE7                     	;# 
  5572  0FE8                     	;# 
  5573  0FE9                     	;# 
  5574  0FEA                     	;# 
  5575  0FEB                     	;# 
  5576  0FED                     	;# 
  5577  0FEE                     	;# 
  5578  0FEF                     	;# 
  5579  0000                     	;# 
  5580  0001                     	;# 
  5581  0002                     	;# 
  5582  0003                     	;# 
  5583  0004                     	;# 
  5584  0005                     	;# 
  5585  0006                     	;# 
  5586  0007                     	;# 
  5587  0008                     	;# 
  5588  0009                     	;# 
  5589  000A                     	;# 
  5590  000B                     	;# 
  5591  000C                     	;# 
  5592  000D                     	;# 
  5593  000E                     	;# 
  5594  000F                     	;# 
  5595  0010                     	;# 
  5596  0011                     	;# 
  5597  0012                     	;# 
  5598  0013                     	;# 
  5599  0014                     	;# 
  5600  0015                     	;# 
  5601  0016                     	;# 
  5602  0017                     	;# 
  5603  0018                     	;# 
  5604  0019                     	;# 
  5605  001A                     	;# 
  5606  001C                     	;# 
  5607  001C                     	;# 
  5608  001D                     	;# 
  5609  001D                     	;# 
  5610  001E                     	;# 
  5611  001F                     	;# 
  5612  008C                     	;# 
  5613  008C                     	;# 
  5614  008D                     	;# 
  5615  008E                     	;# 
  5616  008E                     	;# 
  5617  008F                     	;# 
  5618  0090                     	;# 
  5619  0090                     	;# 
  5620  0091                     	;# 
  5621  0093                     	;# 
  5622  0094                     	;# 
  5623  0095                     	;# 
  5624  0096                     	;# 
  5625  0097                     	;# 
  5626  0098                     	;# 
  5627  0099                     	;# 
  5628  009A                     	;# 
  5629  009B                     	;# 
  5630  009C                     	;# 
  5631  009D                     	;# 
  5632  009E                     	;# 
  5633  010C                     	;# 
  5634  010D                     	;# 
  5635  010E                     	;# 
  5636  010E                     	;# 
  5637  010F                     	;# 
  5638  0110                     	;# 
  5639  0110                     	;# 
  5640  0111                     	;# 
  5641  0112                     	;# 
  5642  0112                     	;# 
  5643  0113                     	;# 
  5644  0114                     	;# 
  5645  0114                     	;# 
  5646  0115                     	;# 
  5647  0116                     	;# 
  5648  0116                     	;# 
  5649  0117                     	;# 
  5650  0119                     	;# 
  5651  0119                     	;# 
  5652  0119                     	;# 
  5653  011A                     	;# 
  5654  011A                     	;# 
  5655  011A                     	;# 
  5656  011B                     	;# 
  5657  011B                     	;# 
  5658  011B                     	;# 
  5659  011B                     	;# 
  5660  011B                     	;# 
  5661  011C                     	;# 
  5662  011C                     	;# 
  5663  011C                     	;# 
  5664  011D                     	;# 
  5665  011D                     	;# 
  5666  011D                     	;# 
  5667  011E                     	;# 
  5668  011E                     	;# 
  5669  011E                     	;# 
  5670  011F                     	;# 
  5671  011F                     	;# 
  5672  011F                     	;# 
  5673  011F                     	;# 
  5674  011F                     	;# 
  5675  018C                     	;# 
  5676  018D                     	;# 
  5677  018E                     	;# 
  5678  018F                     	;# 
  5679  0190                     	;# 
  5680  0191                     	;# 
  5681  0192                     	;# 
  5682  0196                     	;# 
  5683  0197                     	;# 
  5684  0198                     	;# 
  5685  0199                     	;# 
  5686  019A                     	;# 
  5687  019B                     	;# 
  5688  019C                     	;# 
  5689  020C                     	;# 
  5690  020C                     	;# 
  5691  020D                     	;# 
  5692  020E                     	;# 
  5693  020F                     	;# 
  5694  020F                     	;# 
  5695  0210                     	;# 
  5696  0210                     	;# 
  5697  0211                     	;# 
  5698  0211                     	;# 
  5699  0212                     	;# 
  5700  0212                     	;# 
  5701  0213                     	;# 
  5702  0214                     	;# 
  5703  0215                     	;# 
  5704  0215                     	;# 
  5705  0216                     	;# 
  5706  0216                     	;# 
  5707  0217                     	;# 
  5708  0217                     	;# 
  5709  0218                     	;# 
  5710  0218                     	;# 
  5711  0219                     	;# 
  5712  021A                     	;# 
  5713  021B                     	;# 
  5714  021B                     	;# 
  5715  021C                     	;# 
  5716  021C                     	;# 
  5717  021D                     	;# 
  5718  021D                     	;# 
  5719  021E                     	;# 
  5720  021F                     	;# 
  5721  028C                     	;# 
  5722  028C                     	;# 
  5723  028D                     	;# 
  5724  028D                     	;# 
  5725  028E                     	;# 
  5726  028F                     	;# 
  5727  0290                     	;# 
  5728  0290                     	;# 
  5729  0291                     	;# 
  5730  0292                     	;# 
  5731  0292                     	;# 
  5732  0293                     	;# 
  5733  0293                     	;# 
  5734  0294                     	;# 
  5735  0295                     	;# 
  5736  0296                     	;# 
  5737  0296                     	;# 
  5738  0297                     	;# 
  5739  0298                     	;# 
  5740  0298                     	;# 
  5741  0299                     	;# 
  5742  0299                     	;# 
  5743  029A                     	;# 
  5744  029B                     	;# 
  5745  029C                     	;# 
  5746  029C                     	;# 
  5747  029D                     	;# 
  5748  030C                     	;# 
  5749  030C                     	;# 
  5750  030D                     	;# 
  5751  030E                     	;# 
  5752  030F                     	;# 
  5753  0310                     	;# 
  5754  0310                     	;# 
  5755  0311                     	;# 
  5756  0312                     	;# 
  5757  0313                     	;# 
  5758  0314                     	;# 
  5759  0314                     	;# 
  5760  0315                     	;# 
  5761  0316                     	;# 
  5762  0317                     	;# 
  5763  0318                     	;# 
  5764  0318                     	;# 
  5765  0319                     	;# 
  5766  031A                     	;# 
  5767  031B                     	;# 
  5768  031C                     	;# 
  5769  031C                     	;# 
  5770  031D                     	;# 
  5771  031E                     	;# 
  5772  031F                     	;# 
  5773  038C                     	;# 
  5774  038C                     	;# 
  5775  038D                     	;# 
  5776  038E                     	;# 
  5777  0390                     	;# 
  5778  0390                     	;# 
  5779  0391                     	;# 
  5780  0392                     	;# 
  5781  040C                     	;# 
  5782  040D                     	;# 
  5783  040E                     	;# 
  5784  040F                     	;# 
  5785  0410                     	;# 
  5786  0411                     	;# 
  5787  0416                     	;# 
  5788  0416                     	;# 
  5789  0417                     	;# 
  5790  0418                     	;# 
  5791  0418                     	;# 
  5792  0419                     	;# 
  5793  041A                     	;# 
  5794  041A                     	;# 
  5795  041B                     	;# 
  5796  041C                     	;# 
  5797  041C                     	;# 
  5798  041D                     	;# 
  5799  041E                     	;# 
  5800  041F                     	;# 
  5801  048C                     	;# 
  5802  048C                     	;# 
  5803  048D                     	;# 
  5804  048E                     	;# 
  5805  048F                     	;# 
  5806  048F                     	;# 
  5807  0490                     	;# 
  5808  0491                     	;# 
  5809  0492                     	;# 
  5810  0492                     	;# 
  5811  0493                     	;# 
  5812  0494                     	;# 
  5813  0495                     	;# 
  5814  0495                     	;# 
  5815  0496                     	;# 
  5816  0497                     	;# 
  5817  0498                     	;# 
  5818  0499                     	;# 
  5819  049A                     	;# 
  5820  049B                     	;# 
  5821  049C                     	;# 
  5822  049D                     	;# 
  5823  050C                     	;# 
  5824  050C                     	;# 
  5825  050D                     	;# 
  5826  050E                     	;# 
  5827  050F                     	;# 
  5828  050F                     	;# 
  5829  0510                     	;# 
  5830  0511                     	;# 
  5831  0512                     	;# 
  5832  0512                     	;# 
  5833  0513                     	;# 
  5834  0514                     	;# 
  5835  0515                     	;# 
  5836  0515                     	;# 
  5837  0516                     	;# 
  5838  0517                     	;# 
  5839  0518                     	;# 
  5840  0519                     	;# 
  5841  051A                     	;# 
  5842  051B                     	;# 
  5843  051C                     	;# 
  5844  051D                     	;# 
  5845  058C                     	;# 
  5846  058C                     	;# 
  5847  058D                     	;# 
  5848  058E                     	;# 
  5849  058F                     	;# 
  5850  058F                     	;# 
  5851  0590                     	;# 
  5852  0591                     	;# 
  5853  0592                     	;# 
  5854  0593                     	;# 
  5855  060C                     	;# 
  5856  060D                     	;# 
  5857  060E                     	;# 
  5858  060F                     	;# 
  5859  0610                     	;# 
  5860  0611                     	;# 
  5861  0612                     	;# 
  5862  0613                     	;# 
  5863  0614                     	;# 
  5864  0616                     	;# 
  5865  0617                     	;# 
  5866  0618                     	;# 
  5867  0619                     	;# 
  5868  061A                     	;# 
  5869  061B                     	;# 
  5870  061C                     	;# 
  5871  061D                     	;# 
  5872  061E                     	;# 
  5873  068C                     	;# 
  5874  068D                     	;# 
  5875  068E                     	;# 
  5876  068F                     	;# 
  5877  0690                     	;# 
  5878  0691                     	;# 
  5879  0692                     	;# 
  5880  0693                     	;# 
  5881  0694                     	;# 
  5882  070C                     	;# 
  5883  070D                     	;# 
  5884  070E                     	;# 
  5885  070F                     	;# 
  5886  0710                     	;# 
  5887  0711                     	;# 
  5888  0712                     	;# 
  5889  0713                     	;# 
  5890  0714                     	;# 
  5891  0716                     	;# 
  5892  0717                     	;# 
  5893  0718                     	;# 
  5894  0719                     	;# 
  5895  071A                     	;# 
  5896  071B                     	;# 
  5897  071C                     	;# 
  5898  071D                     	;# 
  5899  071E                     	;# 
  5900  0796                     	;# 
  5901  0797                     	;# 
  5902  0798                     	;# 
  5903  0799                     	;# 
  5904  079A                     	;# 
  5905  079B                     	;# 
  5906  080C                     	;# 
  5907  080D                     	;# 
  5908  080E                     	;# 
  5909  080F                     	;# 
  5910  0810                     	;# 
  5911  0811                     	;# 
  5912  0812                     	;# 
  5913  0813                     	;# 
  5914  0814                     	;# 
  5915  081A                     	;# 
  5916  081B                     	;# 
  5917  081C                     	;# 
  5918  081D                     	;# 
  5919  081E                     	;# 
  5920  081F                     	;# 
  5921  088C                     	;# 
  5922  088D                     	;# 
  5923  088E                     	;# 
  5924  088F                     	;# 
  5925  0890                     	;# 
  5926  0891                     	;# 
  5927  0892                     	;# 
  5928  0893                     	;# 
  5929  0895                     	;# 
  5930  0896                     	;# 
  5931  0897                     	;# 
  5932  0898                     	;# 
  5933  0899                     	;# 
  5934  089A                     	;# 
  5935  089B                     	;# 
  5936  090C                     	;# 
  5937  090E                     	;# 
  5938  090F                     	;# 
  5939  091F                     	;# 
  5940  091F                     	;# 
  5941  098F                     	;# 
  5942  098F                     	;# 
  5943  0990                     	;# 
  5944  0991                     	;# 
  5945  0992                     	;# 
  5946  0993                     	;# 
  5947  0994                     	;# 
  5948  0995                     	;# 
  5949  0996                     	;# 
  5950  0997                     	;# 
  5951  0E0F                     	;# 
  5952  0E10                     	;# 
  5953  0E11                     	;# 
  5954  0E12                     	;# 
  5955  0E13                     	;# 
  5956  0E14                     	;# 
  5957  0E15                     	;# 
  5958  0E16                     	;# 
  5959  0E17                     	;# 
  5960  0E18                     	;# 
  5961  0E19                     	;# 
  5962  0E1A                     	;# 
  5963  0E1B                     	;# 
  5964  0E1C                     	;# 
  5965  0E1D                     	;# 
  5966  0E1E                     	;# 
  5967  0E1F                     	;# 
  5968  0E20                     	;# 
  5969  0E21                     	;# 
  5970  0E22                     	;# 
  5971  0E23                     	;# 
  5972  0E24                     	;# 
  5973  0E25                     	;# 
  5974  0E26                     	;# 
  5975  0E27                     	;# 
  5976  0E28                     	;# 
  5977  0E29                     	;# 
  5978  0E2A                     	;# 
  5979  0E2B                     	;# 
  5980  0E2C                     	;# 
  5981  0E2D                     	;# 
  5982  0E2E                     	;# 
  5983  0E2F                     	;# 
  5984  0E30                     	;# 
  5985  0E31                     	;# 
  5986  0E32                     	;# 
  5987  0E33                     	;# 
  5988  0E34                     	;# 
  5989  0E35                     	;# 
  5990  0E36                     	;# 
  5991  0E37                     	;# 
  5992  0E8F                     	;# 
  5993  0E90                     	;# 
  5994  0E91                     	;# 
  5995  0E92                     	;# 
  5996  0E93                     	;# 
  5997  0E94                     	;# 
  5998  0E95                     	;# 
  5999  0E96                     	;# 
  6000  0E97                     	;# 
  6001  0E9C                     	;# 
  6002  0E9D                     	;# 
  6003  0E9E                     	;# 
  6004  0EA1                     	;# 
  6005  0EA2                     	;# 
  6006  0EA3                     	;# 
  6007  0EA4                     	;# 
  6008  0EA5                     	;# 
  6009  0EA9                     	;# 
  6010  0EAA                     	;# 
  6011  0EAB                     	;# 
  6012  0EAC                     	;# 
  6013  0EB1                     	;# 
  6014  0EB2                     	;# 
  6015  0EB3                     	;# 
  6016  0EB8                     	;# 
  6017  0EB9                     	;# 
  6018  0EBA                     	;# 
  6019  0EBB                     	;# 
  6020  0EBC                     	;# 
  6021  0EBD                     	;# 
  6022  0EBE                     	;# 
  6023  0EC3                     	;# 
  6024  0EC5                     	;# 
  6025  0EC6                     	;# 
  6026  0EC7                     	;# 
  6027  0EC8                     	;# 
  6028  0EC9                     	;# 
  6029  0ECA                     	;# 
  6030  0ECB                     	;# 
  6031  0ECC                     	;# 
  6032  0F10                     	;# 
  6033  0F11                     	;# 
  6034  0F12                     	;# 
  6035  0F13                     	;# 
  6036  0F14                     	;# 
  6037  0F15                     	;# 
  6038  0F16                     	;# 
  6039  0F17                     	;# 
  6040  0F18                     	;# 
  6041  0F19                     	;# 
  6042  0F1A                     	;# 
  6043  0F1B                     	;# 
  6044  0F1C                     	;# 
  6045  0F1D                     	;# 
  6046  0F1E                     	;# 
  6047  0F1F                     	;# 
  6048  0F20                     	;# 
  6049  0F21                     	;# 
  6050  0F22                     	;# 
  6051  0F23                     	;# 
  6052  0F24                     	;# 
  6053  0F25                     	;# 
  6054  0F26                     	;# 
  6055  0F27                     	;# 
  6056  0F28                     	;# 
  6057  0F29                     	;# 
  6058  0F2A                     	;# 
  6059  0F2B                     	;# 
  6060  0F2C                     	;# 
  6061  0F2D                     	;# 
  6062  0F2E                     	;# 
  6063  0F2F                     	;# 
  6064  0F30                     	;# 
  6065  0F31                     	;# 
  6066  0F32                     	;# 
  6067  0F38                     	;# 
  6068  0F39                     	;# 
  6069  0F3A                     	;# 
  6070  0F3B                     	;# 
  6071  0F3C                     	;# 
  6072  0F3D                     	;# 
  6073  0F3E                     	;# 
  6074  0F3F                     	;# 
  6075  0F40                     	;# 
  6076  0F41                     	;# 
  6077  0F43                     	;# 
  6078  0F44                     	;# 
  6079  0F45                     	;# 
  6080  0F46                     	;# 
  6081  0F47                     	;# 
  6082  0F48                     	;# 
  6083  0F49                     	;# 
  6084  0F4A                     	;# 
  6085  0F4B                     	;# 
  6086  0F4C                     	;# 
  6087  0F4E                     	;# 
  6088  0F4F                     	;# 
  6089  0F50                     	;# 
  6090  0F51                     	;# 
  6091  0F52                     	;# 
  6092  0F53                     	;# 
  6093  0F54                     	;# 
  6094  0F55                     	;# 
  6095  0F56                     	;# 
  6096  0F57                     	;# 
  6097  0F59                     	;# 
  6098  0F5A                     	;# 
  6099  0F5B                     	;# 
  6100  0F5C                     	;# 
  6101  0F5D                     	;# 
  6102  0F61                     	;# 
  6103  0F62                     	;# 
  6104  0F64                     	;# 
  6105  0F65                     	;# 
  6106  0F66                     	;# 
  6107  0F67                     	;# 
  6108  0F68                     	;# 
  6109  0F69                     	;# 
  6110  0F6A                     	;# 
  6111  0F6B                     	;# 
  6112  0F6C                     	;# 
  6113  0F6D                     	;# 
  6114  0FE4                     	;# 
  6115  0FE5                     	;# 
  6116  0FE6                     	;# 
  6117  0FE7                     	;# 
  6118  0FE8                     	;# 
  6119  0FE9                     	;# 
  6120  0FEA                     	;# 
  6121  0FEB                     	;# 
  6122  0FED                     	;# 
  6123  0FEE                     	;# 
  6124  0FEF                     	;# 
  6125  0000                     	;# 
  6126  0001                     	;# 
  6127  0002                     	;# 
  6128  0003                     	;# 
  6129  0004                     	;# 
  6130  0005                     	;# 
  6131  0006                     	;# 
  6132  0007                     	;# 
  6133  0008                     	;# 
  6134  0009                     	;# 
  6135  000A                     	;# 
  6136  000B                     	;# 
  6137  000C                     	;# 
  6138  000D                     	;# 
  6139  000E                     	;# 
  6140  000F                     	;# 
  6141  0010                     	;# 
  6142  0011                     	;# 
  6143  0012                     	;# 
  6144  0013                     	;# 
  6145  0014                     	;# 
  6146  0015                     	;# 
  6147  0016                     	;# 
  6148  0017                     	;# 
  6149  0018                     	;# 
  6150  0019                     	;# 
  6151  001A                     	;# 
  6152  001C                     	;# 
  6153  001C                     	;# 
  6154  001D                     	;# 
  6155  001D                     	;# 
  6156  001E                     	;# 
  6157  001F                     	;# 
  6158  008C                     	;# 
  6159  008C                     	;# 
  6160  008D                     	;# 
  6161  008E                     	;# 
  6162  008E                     	;# 
  6163  008F                     	;# 
  6164  0090                     	;# 
  6165  0090                     	;# 
  6166  0091                     	;# 
  6167  0093                     	;# 
  6168  0094                     	;# 
  6169  0095                     	;# 
  6170  0096                     	;# 
  6171  0097                     	;# 
  6172  0098                     	;# 
  6173  0099                     	;# 
  6174  009A                     	;# 
  6175  009B                     	;# 
  6176  009C                     	;# 
  6177  009D                     	;# 
  6178  009E                     	;# 
  6179  010C                     	;# 
  6180  010D                     	;# 
  6181  010E                     	;# 
  6182  010E                     	;# 
  6183  010F                     	;# 
  6184  0110                     	;# 
  6185  0110                     	;# 
  6186  0111                     	;# 
  6187  0112                     	;# 
  6188  0112                     	;# 
  6189  0113                     	;# 
  6190  0114                     	;# 
  6191  0114                     	;# 
  6192  0115                     	;# 
  6193  0116                     	;# 
  6194  0116                     	;# 
  6195  0117                     	;# 
  6196  0119                     	;# 
  6197  0119                     	;# 
  6198  0119                     	;# 
  6199  011A                     	;# 
  6200  011A                     	;# 
  6201  011A                     	;# 
  6202  011B                     	;# 
  6203  011B                     	;# 
  6204  011B                     	;# 
  6205  011B                     	;# 
  6206  011B                     	;# 
  6207  011C                     	;# 
  6208  011C                     	;# 
  6209  011C                     	;# 
  6210  011D                     	;# 
  6211  011D                     	;# 
  6212  011D                     	;# 
  6213  011E                     	;# 
  6214  011E                     	;# 
  6215  011E                     	;# 
  6216  011F                     	;# 
  6217  011F                     	;# 
  6218  011F                     	;# 
  6219  011F                     	;# 
  6220  011F                     	;# 
  6221  018C                     	;# 
  6222  018D                     	;# 
  6223  018E                     	;# 
  6224  018F                     	;# 
  6225  0190                     	;# 
  6226  0191                     	;# 
  6227  0192                     	;# 
  6228  0196                     	;# 
  6229  0197                     	;# 
  6230  0198                     	;# 
  6231  0199                     	;# 
  6232  019A                     	;# 
  6233  019B                     	;# 
  6234  019C                     	;# 
  6235  020C                     	;# 
  6236  020C                     	;# 
  6237  020D                     	;# 
  6238  020E                     	;# 
  6239  020F                     	;# 
  6240  020F                     	;# 
  6241  0210                     	;# 
  6242  0210                     	;# 
  6243  0211                     	;# 
  6244  0211                     	;# 
  6245  0212                     	;# 
  6246  0212                     	;# 
  6247  0213                     	;# 
  6248  0214                     	;# 
  6249  0215                     	;# 
  6250  0215                     	;# 
  6251  0216                     	;# 
  6252  0216                     	;# 
  6253  0217                     	;# 
  6254  0217                     	;# 
  6255  0218                     	;# 
  6256  0218                     	;# 
  6257  0219                     	;# 
  6258  021A                     	;# 
  6259  021B                     	;# 
  6260  021B                     	;# 
  6261  021C                     	;# 
  6262  021C                     	;# 
  6263  021D                     	;# 
  6264  021D                     	;# 
  6265  021E                     	;# 
  6266  021F                     	;# 
  6267  028C                     	;# 
  6268  028C                     	;# 
  6269  028D                     	;# 
  6270  028D                     	;# 
  6271  028E                     	;# 
  6272  028F                     	;# 
  6273  0290                     	;# 
  6274  0290                     	;# 
  6275  0291                     	;# 
  6276  0292                     	;# 
  6277  0292                     	;# 
  6278  0293                     	;# 
  6279  0293                     	;# 
  6280  0294                     	;# 
  6281  0295                     	;# 
  6282  0296                     	;# 
  6283  0296                     	;# 
  6284  0297                     	;# 
  6285  0298                     	;# 
  6286  0298                     	;# 
  6287  0299                     	;# 
  6288  0299                     	;# 
  6289  029A                     	;# 
  6290  029B                     	;# 
  6291  029C                     	;# 
  6292  029C                     	;# 
  6293  029D                     	;# 
  6294  030C                     	;# 
  6295  030C                     	;# 
  6296  030D                     	;# 
  6297  030E                     	;# 
  6298  030F                     	;# 
  6299  0310                     	;# 
  6300  0310                     	;# 
  6301  0311                     	;# 
  6302  0312                     	;# 
  6303  0313                     	;# 
  6304  0314                     	;# 
  6305  0314                     	;# 
  6306  0315                     	;# 
  6307  0316                     	;# 
  6308  0317                     	;# 
  6309  0318                     	;# 
  6310  0318                     	;# 
  6311  0319                     	;# 
  6312  031A                     	;# 
  6313  031B                     	;# 
  6314  031C                     	;# 
  6315  031C                     	;# 
  6316  031D                     	;# 
  6317  031E                     	;# 
  6318  031F                     	;# 
  6319  038C                     	;# 
  6320  038C                     	;# 
  6321  038D                     	;# 
  6322  038E                     	;# 
  6323  0390                     	;# 
  6324  0390                     	;# 
  6325  0391                     	;# 
  6326  0392                     	;# 
  6327  040C                     	;# 
  6328  040D                     	;# 
  6329  040E                     	;# 
  6330  040F                     	;# 
  6331  0410                     	;# 
  6332  0411                     	;# 
  6333  0416                     	;# 
  6334  0416                     	;# 
  6335  0417                     	;# 
  6336  0418                     	;# 
  6337  0418                     	;# 
  6338  0419                     	;# 
  6339  041A                     	;# 
  6340  041A                     	;# 
  6341  041B                     	;# 
  6342  041C                     	;# 
  6343  041C                     	;# 
  6344  041D                     	;# 
  6345  041E                     	;# 
  6346  041F                     	;# 
  6347  048C                     	;# 
  6348  048C                     	;# 
  6349  048D                     	;# 
  6350  048E                     	;# 
  6351  048F                     	;# 
  6352  048F                     	;# 
  6353  0490                     	;# 
  6354  0491                     	;# 
  6355  0492                     	;# 
  6356  0492                     	;# 
  6357  0493                     	;# 
  6358  0494                     	;# 
  6359  0495                     	;# 
  6360  0495                     	;# 
  6361  0496                     	;# 
  6362  0497                     	;# 
  6363  0498                     	;# 
  6364  0499                     	;# 
  6365  049A                     	;# 
  6366  049B                     	;# 
  6367  049C                     	;# 
  6368  049D                     	;# 
  6369  050C                     	;# 
  6370  050C                     	;# 
  6371  050D                     	;# 
  6372  050E                     	;# 
  6373  050F                     	;# 
  6374  050F                     	;# 
  6375  0510                     	;# 
  6376  0511                     	;# 
  6377  0512                     	;# 
  6378  0512                     	;# 
  6379  0513                     	;# 
  6380  0514                     	;# 
  6381  0515                     	;# 
  6382  0515                     	;# 
  6383  0516                     	;# 
  6384  0517                     	;# 
  6385  0518                     	;# 
  6386  0519                     	;# 
  6387  051A                     	;# 
  6388  051B                     	;# 
  6389  051C                     	;# 
  6390  051D                     	;# 
  6391  058C                     	;# 
  6392  058C                     	;# 
  6393  058D                     	;# 
  6394  058E                     	;# 
  6395  058F                     	;# 
  6396  058F                     	;# 
  6397  0590                     	;# 
  6398  0591                     	;# 
  6399  0592                     	;# 
  6400  0593                     	;# 
  6401  060C                     	;# 
  6402  060D                     	;# 
  6403  060E                     	;# 
  6404  060F                     	;# 
  6405  0610                     	;# 
  6406  0611                     	;# 
  6407  0612                     	;# 
  6408  0613                     	;# 
  6409  0614                     	;# 
  6410  0616                     	;# 
  6411  0617                     	;# 
  6412  0618                     	;# 
  6413  0619                     	;# 
  6414  061A                     	;# 
  6415  061B                     	;# 
  6416  061C                     	;# 
  6417  061D                     	;# 
  6418  061E                     	;# 
  6419  068C                     	;# 
  6420  068D                     	;# 
  6421  068E                     	;# 
  6422  068F                     	;# 
  6423  0690                     	;# 
  6424  0691                     	;# 
  6425  0692                     	;# 
  6426  0693                     	;# 
  6427  0694                     	;# 
  6428  070C                     	;# 
  6429  070D                     	;# 
  6430  070E                     	;# 
  6431  070F                     	;# 
  6432  0710                     	;# 
  6433  0711                     	;# 
  6434  0712                     	;# 
  6435  0713                     	;# 
  6436  0714                     	;# 
  6437  0716                     	;# 
  6438  0717                     	;# 
  6439  0718                     	;# 
  6440  0719                     	;# 
  6441  071A                     	;# 
  6442  071B                     	;# 
  6443  071C                     	;# 
  6444  071D                     	;# 
  6445  071E                     	;# 
  6446  0796                     	;# 
  6447  0797                     	;# 
  6448  0798                     	;# 
  6449  0799                     	;# 
  6450  079A                     	;# 
  6451  079B                     	;# 
  6452  080C                     	;# 
  6453  080D                     	;# 
  6454  080E                     	;# 
  6455  080F                     	;# 
  6456  0810                     	;# 
  6457  0811                     	;# 
  6458  0812                     	;# 
  6459  0813                     	;# 
  6460  0814                     	;# 
  6461  081A                     	;# 
  6462  081B                     	;# 
  6463  081C                     	;# 
  6464  081D                     	;# 
  6465  081E                     	;# 
  6466  081F                     	;# 
  6467  088C                     	;# 
  6468  088D                     	;# 
  6469  088E                     	;# 
  6470  088F                     	;# 
  6471  0890                     	;# 
  6472  0891                     	;# 
  6473  0892                     	;# 
  6474  0893                     	;# 
  6475  0895                     	;# 
  6476  0896                     	;# 
  6477  0897                     	;# 
  6478  0898                     	;# 
  6479  0899                     	;# 
  6480  089A                     	;# 
  6481  089B                     	;# 
  6482  090C                     	;# 
  6483  090E                     	;# 
  6484  090F                     	;# 
  6485  091F                     	;# 
  6486  091F                     	;# 
  6487  098F                     	;# 
  6488  098F                     	;# 
  6489  0990                     	;# 
  6490  0991                     	;# 
  6491  0992                     	;# 
  6492  0993                     	;# 
  6493  0994                     	;# 
  6494  0995                     	;# 
  6495  0996                     	;# 
  6496  0997                     	;# 
  6497  0E0F                     	;# 
  6498  0E10                     	;# 
  6499  0E11                     	;# 
  6500  0E12                     	;# 
  6501  0E13                     	;# 
  6502  0E14                     	;# 
  6503  0E15                     	;# 
  6504  0E16                     	;# 
  6505  0E17                     	;# 
  6506  0E18                     	;# 
  6507  0E19                     	;# 
  6508  0E1A                     	;# 
  6509  0E1B                     	;# 
  6510  0E1C                     	;# 
  6511  0E1D                     	;# 
  6512  0E1E                     	;# 
  6513  0E1F                     	;# 
  6514  0E20                     	;# 
  6515  0E21                     	;# 
  6516  0E22                     	;# 
  6517  0E23                     	;# 
  6518  0E24                     	;# 
  6519  0E25                     	;# 
  6520  0E26                     	;# 
  6521  0E27                     	;# 
  6522  0E28                     	;# 
  6523  0E29                     	;# 
  6524  0E2A                     	;# 
  6525  0E2B                     	;# 
  6526  0E2C                     	;# 
  6527  0E2D                     	;# 
  6528  0E2E                     	;# 
  6529  0E2F                     	;# 
  6530  0E30                     	;# 
  6531  0E31                     	;# 
  6532  0E32                     	;# 
  6533  0E33                     	;# 
  6534  0E34                     	;# 
  6535  0E35                     	;# 
  6536  0E36                     	;# 
  6537  0E37                     	;# 
  6538  0E8F                     	;# 
  6539  0E90                     	;# 
  6540  0E91                     	;# 
  6541  0E92                     	;# 
  6542  0E93                     	;# 
  6543  0E94                     	;# 
  6544  0E95                     	;# 
  6545  0E96                     	;# 
  6546  0E97                     	;# 
  6547  0E9C                     	;# 
  6548  0E9D                     	;# 
  6549  0E9E                     	;# 
  6550  0EA1                     	;# 
  6551  0EA2                     	;# 
  6552  0EA3                     	;# 
  6553  0EA4                     	;# 
  6554  0EA5                     	;# 
  6555  0EA9                     	;# 
  6556  0EAA                     	;# 
  6557  0EAB                     	;# 
  6558  0EAC                     	;# 
  6559  0EB1                     	;# 
  6560  0EB2                     	;# 
  6561  0EB3                     	;# 
  6562  0EB8                     	;# 
  6563  0EB9                     	;# 
  6564  0EBA                     	;# 
  6565  0EBB                     	;# 
  6566  0EBC                     	;# 
  6567  0EBD                     	;# 
  6568  0EBE                     	;# 
  6569  0EC3                     	;# 
  6570  0EC5                     	;# 
  6571  0EC6                     	;# 
  6572  0EC7                     	;# 
  6573  0EC8                     	;# 
  6574  0EC9                     	;# 
  6575  0ECA                     	;# 
  6576  0ECB                     	;# 
  6577  0ECC                     	;# 
  6578  0F10                     	;# 
  6579  0F11                     	;# 
  6580  0F12                     	;# 
  6581  0F13                     	;# 
  6582  0F14                     	;# 
  6583  0F15                     	;# 
  6584  0F16                     	;# 
  6585  0F17                     	;# 
  6586  0F18                     	;# 
  6587  0F19                     	;# 
  6588  0F1A                     	;# 
  6589  0F1B                     	;# 
  6590  0F1C                     	;# 
  6591  0F1D                     	;# 
  6592  0F1E                     	;# 
  6593  0F1F                     	;# 
  6594  0F20                     	;# 
  6595  0F21                     	;# 
  6596  0F22                     	;# 
  6597  0F23                     	;# 
  6598  0F24                     	;# 
  6599  0F25                     	;# 
  6600  0F26                     	;# 
  6601  0F27                     	;# 
  6602  0F28                     	;# 
  6603  0F29                     	;# 
  6604  0F2A                     	;# 
  6605  0F2B                     	;# 
  6606  0F2C                     	;# 
  6607  0F2D                     	;# 
  6608  0F2E                     	;# 
  6609  0F2F                     	;# 
  6610  0F30                     	;# 
  6611  0F31                     	;# 
  6612  0F32                     	;# 
  6613  0F38                     	;# 
  6614  0F39                     	;# 
  6615  0F3A                     	;# 
  6616  0F3B                     	;# 
  6617  0F3C                     	;# 
  6618  0F3D                     	;# 
  6619  0F3E                     	;# 
  6620  0F3F                     	;# 
  6621  0F40                     	;# 
  6622  0F41                     	;# 
  6623  0F43                     	;# 
  6624  0F44                     	;# 
  6625  0F45                     	;# 
  6626  0F46                     	;# 
  6627  0F47                     	;# 
  6628  0F48                     	;# 
  6629  0F49                     	;# 
  6630  0F4A                     	;# 
  6631  0F4B                     	;# 
  6632  0F4C                     	;# 
  6633  0F4E                     	;# 
  6634  0F4F                     	;# 
  6635  0F50                     	;# 
  6636  0F51                     	;# 
  6637  0F52                     	;# 
  6638  0F53                     	;# 
  6639  0F54                     	;# 
  6640  0F55                     	;# 
  6641  0F56                     	;# 
  6642  0F57                     	;# 
  6643  0F59                     	;# 
  6644  0F5A                     	;# 
  6645  0F5B                     	;# 
  6646  0F5C                     	;# 
  6647  0F5D                     	;# 
  6648  0F61                     	;# 
  6649  0F62                     	;# 
  6650  0F64                     	;# 
  6651  0F65                     	;# 
  6652  0F66                     	;# 
  6653  0F67                     	;# 
  6654  0F68                     	;# 
  6655  0F69                     	;# 
  6656  0F6A                     	;# 
  6657  0F6B                     	;# 
  6658  0F6C                     	;# 
  6659  0F6D                     	;# 
  6660  0FE4                     	;# 
  6661  0FE5                     	;# 
  6662  0FE6                     	;# 
  6663  0FE7                     	;# 
  6664  0FE8                     	;# 
  6665  0FE9                     	;# 
  6666  0FEA                     	;# 
  6667  0FEB                     	;# 
  6668  0FED                     	;# 
  6669  0FEE                     	;# 
  6670  0FEF                     	;# 
  6671  0000                     	;# 
  6672  0001                     	;# 
  6673  0002                     	;# 
  6674  0003                     	;# 
  6675  0004                     	;# 
  6676  0005                     	;# 
  6677  0006                     	;# 
  6678  0007                     	;# 
  6679  0008                     	;# 
  6680  0009                     	;# 
  6681  000A                     	;# 
  6682  000B                     	;# 
  6683  000C                     	;# 
  6684  000D                     	;# 
  6685  000E                     	;# 
  6686  000F                     	;# 
  6687  0010                     	;# 
  6688  0011                     	;# 
  6689  0012                     	;# 
  6690  0013                     	;# 
  6691  0014                     	;# 
  6692  0015                     	;# 
  6693  0016                     	;# 
  6694  0017                     	;# 
  6695  0018                     	;# 
  6696  0019                     	;# 
  6697  001A                     	;# 
  6698  001C                     	;# 
  6699  001C                     	;# 
  6700  001D                     	;# 
  6701  001D                     	;# 
  6702  001E                     	;# 
  6703  001F                     	;# 
  6704  008C                     	;# 
  6705  008C                     	;# 
  6706  008D                     	;# 
  6707  008E                     	;# 
  6708  008E                     	;# 
  6709  008F                     	;# 
  6710  0090                     	;# 
  6711  0090                     	;# 
  6712  0091                     	;# 
  6713  0093                     	;# 
  6714  0094                     	;# 
  6715  0095                     	;# 
  6716  0096                     	;# 
  6717  0097                     	;# 
  6718  0098                     	;# 
  6719  0099                     	;# 
  6720  009A                     	;# 
  6721  009B                     	;# 
  6722  009C                     	;# 
  6723  009D                     	;# 
  6724  009E                     	;# 
  6725  010C                     	;# 
  6726  010D                     	;# 
  6727  010E                     	;# 
  6728  010E                     	;# 
  6729  010F                     	;# 
  6730  0110                     	;# 
  6731  0110                     	;# 
  6732  0111                     	;# 
  6733  0112                     	;# 
  6734  0112                     	;# 
  6735  0113                     	;# 
  6736  0114                     	;# 
  6737  0114                     	;# 
  6738  0115                     	;# 
  6739  0116                     	;# 
  6740  0116                     	;# 
  6741  0117                     	;# 
  6742  0119                     	;# 
  6743  0119                     	;# 
  6744  0119                     	;# 
  6745  011A                     	;# 
  6746  011A                     	;# 
  6747  011A                     	;# 
  6748  011B                     	;# 
  6749  011B                     	;# 
  6750  011B                     	;# 
  6751  011B                     	;# 
  6752  011B                     	;# 
  6753  011C                     	;# 
  6754  011C                     	;# 
  6755  011C                     	;# 
  6756  011D                     	;# 
  6757  011D                     	;# 
  6758  011D                     	;# 
  6759  011E                     	;# 
  6760  011E                     	;# 
  6761  011E                     	;# 
  6762  011F                     	;# 
  6763  011F                     	;# 
  6764  011F                     	;# 
  6765  011F                     	;# 
  6766  011F                     	;# 
  6767  018C                     	;# 
  6768  018D                     	;# 
  6769  018E                     	;# 
  6770  018F                     	;# 
  6771  0190                     	;# 
  6772  0191                     	;# 
  6773  0192                     	;# 
  6774  0196                     	;# 
  6775  0197                     	;# 
  6776  0198                     	;# 
  6777  0199                     	;# 
  6778  019A                     	;# 
  6779  019B                     	;# 
  6780  019C                     	;# 
  6781  020C                     	;# 
  6782  020C                     	;# 
  6783  020D                     	;# 
  6784  020E                     	;# 
  6785  020F                     	;# 
  6786  020F                     	;# 
  6787  0210                     	;# 
  6788  0210                     	;# 
  6789  0211                     	;# 
  6790  0211                     	;# 
  6791  0212                     	;# 
  6792  0212                     	;# 
  6793  0213                     	;# 
  6794  0214                     	;# 
  6795  0215                     	;# 
  6796  0215                     	;# 
  6797  0216                     	;# 
  6798  0216                     	;# 
  6799  0217                     	;# 
  6800  0217                     	;# 
  6801  0218                     	;# 
  6802  0218                     	;# 
  6803  0219                     	;# 
  6804  021A                     	;# 
  6805  021B                     	;# 
  6806  021B                     	;# 
  6807  021C                     	;# 
  6808  021C                     	;# 
  6809  021D                     	;# 
  6810  021D                     	;# 
  6811  021E                     	;# 
  6812  021F                     	;# 
  6813  028C                     	;# 
  6814  028C                     	;# 
  6815  028D                     	;# 
  6816  028D                     	;# 
  6817  028E                     	;# 
  6818  028F                     	;# 
  6819  0290                     	;# 
  6820  0290                     	;# 
  6821  0291                     	;# 
  6822  0292                     	;# 
  6823  0292                     	;# 
  6824  0293                     	;# 
  6825  0293                     	;# 
  6826  0294                     	;# 
  6827  0295                     	;# 
  6828  0296                     	;# 
  6829  0296                     	;# 
  6830  0297                     	;# 
  6831  0298                     	;# 
  6832  0298                     	;# 
  6833  0299                     	;# 
  6834  0299                     	;# 
  6835  029A                     	;# 
  6836  029B                     	;# 
  6837  029C                     	;# 
  6838  029C                     	;# 
  6839  029D                     	;# 
  6840  030C                     	;# 
  6841  030C                     	;# 
  6842  030D                     	;# 
  6843  030E                     	;# 
  6844  030F                     	;# 
  6845  0310                     	;# 
  6846  0310                     	;# 
  6847  0311                     	;# 
  6848  0312                     	;# 
  6849  0313                     	;# 
  6850  0314                     	;# 
  6851  0314                     	;# 
  6852  0315                     	;# 
  6853  0316                     	;# 
  6854  0317                     	;# 
  6855  0318                     	;# 
  6856  0318                     	;# 
  6857  0319                     	;# 
  6858  031A                     	;# 
  6859  031B                     	;# 
  6860  031C                     	;# 
  6861  031C                     	;# 
  6862  031D                     	;# 
  6863  031E                     	;# 
  6864  031F                     	;# 
  6865  038C                     	;# 
  6866  038C                     	;# 
  6867  038D                     	;# 
  6868  038E                     	;# 
  6869  0390                     	;# 
  6870  0390                     	;# 
  6871  0391                     	;# 
  6872  0392                     	;# 
  6873  040C                     	;# 
  6874  040D                     	;# 
  6875  040E                     	;# 
  6876  040F                     	;# 
  6877  0410                     	;# 
  6878  0411                     	;# 
  6879  0416                     	;# 
  6880  0416                     	;# 
  6881  0417                     	;# 
  6882  0418                     	;# 
  6883  0418                     	;# 
  6884  0419                     	;# 
  6885  041A                     	;# 
  6886  041A                     	;# 
  6887  041B                     	;# 
  6888  041C                     	;# 
  6889  041C                     	;# 
  6890  041D                     	;# 
  6891  041E                     	;# 
  6892  041F                     	;# 
  6893  048C                     	;# 
  6894  048C                     	;# 
  6895  048D                     	;# 
  6896  048E                     	;# 
  6897  048F                     	;# 
  6898  048F                     	;# 
  6899  0490                     	;# 
  6900  0491                     	;# 
  6901  0492                     	;# 
  6902  0492                     	;# 
  6903  0493                     	;# 
  6904  0494                     	;# 
  6905  0495                     	;# 
  6906  0495                     	;# 
  6907  0496                     	;# 
  6908  0497                     	;# 
  6909  0498                     	;# 
  6910  0499                     	;# 
  6911  049A                     	;# 
  6912  049B                     	;# 
  6913  049C                     	;# 
  6914  049D                     	;# 
  6915  050C                     	;# 
  6916  050C                     	;# 
  6917  050D                     	;# 
  6918  050E                     	;# 
  6919  050F                     	;# 
  6920  050F                     	;# 
  6921  0510                     	;# 
  6922  0511                     	;# 
  6923  0512                     	;# 
  6924  0512                     	;# 
  6925  0513                     	;# 
  6926  0514                     	;# 
  6927  0515                     	;# 
  6928  0515                     	;# 
  6929  0516                     	;# 
  6930  0517                     	;# 
  6931  0518                     	;# 
  6932  0519                     	;# 
  6933  051A                     	;# 
  6934  051B                     	;# 
  6935  051C                     	;# 
  6936  051D                     	;# 
  6937  058C                     	;# 
  6938  058C                     	;# 
  6939  058D                     	;# 
  6940  058E                     	;# 
  6941  058F                     	;# 
  6942  058F                     	;# 
  6943  0590                     	;# 
  6944  0591                     	;# 
  6945  0592                     	;# 
  6946  0593                     	;# 
  6947  060C                     	;# 
  6948  060D                     	;# 
  6949  060E                     	;# 
  6950  060F                     	;# 
  6951  0610                     	;# 
  6952  0611                     	;# 
  6953  0612                     	;# 
  6954  0613                     	;# 
  6955  0614                     	;# 
  6956  0616                     	;# 
  6957  0617                     	;# 
  6958  0618                     	;# 
  6959  0619                     	;# 
  6960  061A                     	;# 
  6961  061B                     	;# 
  6962  061C                     	;# 
  6963  061D                     	;# 
  6964  061E                     	;# 
  6965  068C                     	;# 
  6966  068D                     	;# 
  6967  068E                     	;# 
  6968  068F                     	;# 
  6969  0690                     	;# 
  6970  0691                     	;# 
  6971  0692                     	;# 
  6972  0693                     	;# 
  6973  0694                     	;# 
  6974  070C                     	;# 
  6975  070D                     	;# 
  6976  070E                     	;# 
  6977  070F                     	;# 
  6978  0710                     	;# 
  6979  0711                     	;# 
  6980  0712                     	;# 
  6981  0713                     	;# 
  6982  0714                     	;# 
  6983  0716                     	;# 
  6984  0717                     	;# 
  6985  0718                     	;# 
  6986  0719                     	;# 
  6987  071A                     	;# 
  6988  071B                     	;# 
  6989  071C                     	;# 
  6990  071D                     	;# 
  6991  071E                     	;# 
  6992  0796                     	;# 
  6993  0797                     	;# 
  6994  0798                     	;# 
  6995  0799                     	;# 
  6996  079A                     	;# 
  6997  079B                     	;# 
  6998  080C                     	;# 
  6999  080D                     	;# 
  7000  080E                     	;# 
  7001  080F                     	;# 
  7002  0810                     	;# 
  7003  0811                     	;# 
  7004  0812                     	;# 
  7005  0813                     	;# 
  7006  0814                     	;# 
  7007  081A                     	;# 
  7008  081B                     	;# 
  7009  081C                     	;# 
  7010  081D                     	;# 
  7011  081E                     	;# 
  7012  081F                     	;# 
  7013  088C                     	;# 
  7014  088D                     	;# 
  7015  088E                     	;# 
  7016  088F                     	;# 
  7017  0890                     	;# 
  7018  0891                     	;# 
  7019  0892                     	;# 
  7020  0893                     	;# 
  7021  0895                     	;# 
  7022  0896                     	;# 
  7023  0897                     	;# 
  7024  0898                     	;# 
  7025  0899                     	;# 
  7026  089A                     	;# 
  7027  089B                     	;# 
  7028  090C                     	;# 
  7029  090E                     	;# 
  7030  090F                     	;# 
  7031  091F                     	;# 
  7032  091F                     	;# 
  7033  098F                     	;# 
  7034  098F                     	;# 
  7035  0990                     	;# 
  7036  0991                     	;# 
  7037  0992                     	;# 
  7038  0993                     	;# 
  7039  0994                     	;# 
  7040  0995                     	;# 
  7041  0996                     	;# 
  7042  0997                     	;# 
  7043  0E0F                     	;# 
  7044  0E10                     	;# 
  7045  0E11                     	;# 
  7046  0E12                     	;# 
  7047  0E13                     	;# 
  7048  0E14                     	;# 
  7049  0E15                     	;# 
  7050  0E16                     	;# 
  7051  0E17                     	;# 
  7052  0E18                     	;# 
  7053  0E19                     	;# 
  7054  0E1A                     	;# 
  7055  0E1B                     	;# 
  7056  0E1C                     	;# 
  7057  0E1D                     	;# 
  7058  0E1E                     	;# 
  7059  0E1F                     	;# 
  7060  0E20                     	;# 
  7061  0E21                     	;# 
  7062  0E22                     	;# 
  7063  0E23                     	;# 
  7064  0E24                     	;# 
  7065  0E25                     	;# 
  7066  0E26                     	;# 
  7067  0E27                     	;# 
  7068  0E28                     	;# 
  7069  0E29                     	;# 
  7070  0E2A                     	;# 
  7071  0E2B                     	;# 
  7072  0E2C                     	;# 
  7073  0E2D                     	;# 
  7074  0E2E                     	;# 
  7075  0E2F                     	;# 
  7076  0E30                     	;# 
  7077  0E31                     	;# 
  7078  0E32                     	;# 
  7079  0E33                     	;# 
  7080  0E34                     	;# 
  7081  0E35                     	;# 
  7082  0E36                     	;# 
  7083  0E37                     	;# 
  7084  0E8F                     	;# 
  7085  0E90                     	;# 
  7086  0E91                     	;# 
  7087  0E92                     	;# 
  7088  0E93                     	;# 
  7089  0E94                     	;# 
  7090  0E95                     	;# 
  7091  0E96                     	;# 
  7092  0E97                     	;# 
  7093  0E9C                     	;# 
  7094  0E9D                     	;# 
  7095  0E9E                     	;# 
  7096  0EA1                     	;# 
  7097  0EA2                     	;# 
  7098  0EA3                     	;# 
  7099  0EA4                     	;# 
  7100  0EA5                     	;# 
  7101  0EA9                     	;# 
  7102  0EAA                     	;# 
  7103  0EAB                     	;# 
  7104  0EAC                     	;# 
  7105  0EB1                     	;# 
  7106  0EB2                     	;# 
  7107  0EB3                     	;# 
  7108  0EB8                     	;# 
  7109  0EB9                     	;# 
  7110  0EBA                     	;# 
  7111  0EBB                     	;# 
  7112  0EBC                     	;# 
  7113  0EBD                     	;# 
  7114  0EBE                     	;# 
  7115  0EC3                     	;# 
  7116  0EC5                     	;# 
  7117  0EC6                     	;# 
  7118  0EC7                     	;# 
  7119  0EC8                     	;# 
  7120  0EC9                     	;# 
  7121  0ECA                     	;# 
  7122  0ECB                     	;# 
  7123  0ECC                     	;# 
  7124  0F10                     	;# 
  7125  0F11                     	;# 
  7126  0F12                     	;# 
  7127  0F13                     	;# 
  7128  0F14                     	;# 
  7129  0F15                     	;# 
  7130  0F16                     	;# 
  7131  0F17                     	;# 
  7132  0F18                     	;# 
  7133  0F19                     	;# 
  7134  0F1A                     	;# 
  7135  0F1B                     	;# 
  7136  0F1C                     	;# 
  7137  0F1D                     	;# 
  7138  0F1E                     	;# 
  7139  0F1F                     	;# 
  7140  0F20                     	;# 
  7141  0F21                     	;# 
  7142  0F22                     	;# 
  7143  0F23                     	;# 
  7144  0F24                     	;# 
  7145  0F25                     	;# 
  7146  0F26                     	;# 
  7147  0F27                     	;# 
  7148  0F28                     	;# 
  7149  0F29                     	;# 
  7150  0F2A                     	;# 
  7151  0F2B                     	;# 
  7152  0F2C                     	;# 
  7153  0F2D                     	;# 
  7154  0F2E                     	;# 
  7155  0F2F                     	;# 
  7156  0F30                     	;# 
  7157  0F31                     	;# 
  7158  0F32                     	;# 
  7159  0F38                     	;# 
  7160  0F39                     	;# 
  7161  0F3A                     	;# 
  7162  0F3B                     	;# 
  7163  0F3C                     	;# 
  7164  0F3D                     	;# 
  7165  0F3E                     	;# 
  7166  0F3F                     	;# 
  7167  0F40                     	;# 
  7168  0F41                     	;# 
  7169  0F43                     	;# 
  7170  0F44                     	;# 
  7171  0F45                     	;# 
  7172  0F46                     	;# 
  7173  0F47                     	;# 
  7174  0F48                     	;# 
  7175  0F49                     	;# 
  7176  0F4A                     	;# 
  7177  0F4B                     	;# 
  7178  0F4C                     	;# 
  7179  0F4E                     	;# 
  7180  0F4F                     	;# 
  7181  0F50                     	;# 
  7182  0F51                     	;# 
  7183  0F52                     	;# 
  7184  0F53                     	;# 
  7185  0F54                     	;# 
  7186  0F55                     	;# 
  7187  0F56                     	;# 
  7188  0F57                     	;# 
  7189  0F59                     	;# 
  7190  0F5A                     	;# 
  7191  0F5B                     	;# 
  7192  0F5C                     	;# 
  7193  0F5D                     	;# 
  7194  0F61                     	;# 
  7195  0F62                     	;# 
  7196  0F64                     	;# 
  7197  0F65                     	;# 
  7198  0F66                     	;# 
  7199  0F67                     	;# 
  7200  0F68                     	;# 
  7201  0F69                     	;# 
  7202  0F6A                     	;# 
  7203  0F6B                     	;# 
  7204  0F6C                     	;# 
  7205  0F6D                     	;# 
  7206  0FE4                     	;# 
  7207  0FE5                     	;# 
  7208  0FE6                     	;# 
  7209  0FE7                     	;# 
  7210  0FE8                     	;# 
  7211  0FE9                     	;# 
  7212  0FEA                     	;# 
  7213  0FEB                     	;# 
  7214  0FED                     	;# 
  7215  0FEE                     	;# 
  7216  0FEF                     	;# 
  7217                           
  7218                           	psect	idataBANK0
  7219  0B50                     __pidataBANK0:
  7220                           
  7221                           ;initializer for _clkAlarm
  7222  0B50  3401               	retlw	1
  7223  0B51  3400               	retlw	0
  7224  0B52  3400               	retlw	0
  7225  0B53  3400               	retlw	0
  7226  0B54  3400               	retlw	0
  7227  0B55  3400               	retlw	0
  7228  0B56  3400               	retlw	0
  7229                           
  7230                           ;initializer for _lumAlarm
  7231  0B57  3404               	retlw	4
  7232  0B58  3400               	retlw	0
  7233                           
  7234                           ;initializer for _tempAlarm
  7235  0B59  341C               	retlw	28
  7236  0B5A  3400               	retlw	0
  7237                           
  7238                           ;initializer for _alarmsEnable
  7239  0B5B  3401               	retlw	1
  7240                           
  7241                           	psect	idataBANK1
  7242  0B1E                     __pidataBANK1:
  7243                           
  7244                           ;initializer for _alarmPWMStart
  7245  0B1E  34FF               	retlw	255
  7246  0B1F  34FF               	retlw	255
  7247  0B20  34FF               	retlw	255
  7248  0B21  34FF               	retlw	255
  7249  0B22  34FF               	retlw	255
  7250  0B23  34FF               	retlw	255
  7251                           
  7252                           	psect	stringtext1
  7253  100F                     __pstringtext1:
  7254  100F                     _dpowers:
  7255  100F  3401               	retlw	1
  7256  1010  3400               	retlw	0
  7257  1011  340A               	retlw	10
  7258  1012  3400               	retlw	0
  7259  1013  3464               	retlw	100
  7260  1014  3400               	retlw	0
  7261  1015  34E8               	retlw	232
  7262  1016  3403               	retlw	3
  7263  1017  3410               	retlw	16
  7264  1018  3427               	retlw	39
  7265  1019                     __end_of_dpowers:
  7266                           
  7267                           	psect	nvBANK0
  7268  006D                     __pnvBANK0:
  7269  006D                     _timer3ReloadVal:
  7270  006D                     	ds	2
  7271                           
  7272                           	psect	nvBANK1
  7273  00A0                     __pnvBANK1:
  7274  00A0                     _TMR5_InterruptHandler:
  7275  00A0                     	ds	2
  7276  00A2                     _timer5ReloadVal:
  7277  00A2                     	ds	2
  7278  00A4                     _TMR3_InterruptHandler:
  7279  00A4                     	ds	2
  7280  00A6                     _TMR1_InterruptHandler:
  7281  00A6                     	ds	2
  7282  00A8                     _timer1ReloadVal:
  7283  00A8                     	ds	2
  7284  0013                     _TRISCbits	set	19
  7285  000E                     _PORTCbits	set	14
  7286  000D                     _PORTBbits	set	13
  7287  0016                     _LATAbits	set	22
  7288  000B                     _INTCONbits	set	11
  7289  0014                     _TRISD	set	20
  7290  0013                     _TRISC	set	19
  7291  0012                     _TRISB	set	18
  7292  0011                     _TRISA	set	17
  7293  0015                     _TRISE	set	21
  7294  0018                     _LATC	set	24
  7295  0017                     _LATB	set	23
  7296  0016                     _LATA	set	22
  7297  0019                     _LATD	set	25
  7298  001A                     _LATE	set	26
  7299  0094                     _ADCON1bits	set	148
  7300  008E                     _ADPREVL	set	142
  7301  008F                     _ADPREVH	set	143
  7302  0097                     _ADSTATbits	set	151
  7303  0090                     _ADACCL	set	144
  7304  0091                     _ADACCH	set	145
  7305  0095                     _ADCON2bits	set	149
  7306  009C                     _ADPRE	set	156
  7307  0096                     _ADCON3bits	set	150
  7308  008C                     _ADRESL	set	140
  7309  008D                     _ADRESH	set	141
  7310  0093                     _ADCON0bits	set	147
  7311  009D                     _ADACQ	set	157
  7312  0093                     _ADCON0	set	147
  7313  0098                     _ADCLK	set	152
  7314  0099                     _ADACT	set	153
  7315  009A                     _ADREF	set	154
  7316  0097                     _ADSTAT	set	151
  7317  0096                     _ADCON3	set	150
  7318  0095                     _ADCON2	set	149
  7319  0094                     _ADCON1	set	148
  7320  009B                     _ADCAP	set	155
  7321  009E                     _ADPCH	set	158
  7322  0116                     _ADERRL	set	278
  7323  0117                     _ADERRH	set	279
  7324  0114                     _ADFLTRL	set	276
  7325  0115                     _ADFLTRH	set	277
  7326  010C                     _ADCNT	set	268
  7327  010D                     _ADRPT	set	269
  7328  0113                     _ADSTPTH	set	275
  7329  0112                     _ADSTPTL	set	274
  7330  0111                     _ADUTHH	set	273
  7331  0110                     _ADUTHL	set	272
  7332  010F                     _ADLTHH	set	271
  7333  010E                     _ADLTHL	set	270
  7334  018E                     _SSP1MSK	set	398
  7335  018D                     _SSP1ADD	set	397
  7336  018F                     _SSP1STAT	set	399
  7337  0191                     _SSP1CON2	set	401
  7338  0190                     _SSP1CON1bits	set	400
  7339  018C                     _SSP1BUF	set	396
  7340  018F                     _SSP1STATbits	set	399
  7341  0191                     _SSP1CON2bits	set	401
  7342  0190                     _SSP1CON1	set	400
  7343  021F                     _CCPTMRS1bits	set	543
  7344  021B                     _T5GCONbits	set	539
  7345  021A                     _T5CONbits	set	538
  7346  021A                     _T5CON	set	538
  7347  0218                     _TMR5L	set	536
  7348  0219                     _TMR5H	set	537
  7349  021D                     _T5CLK	set	541
  7350  021C                     _T5GATE	set	540
  7351  021B                     _T5GCON	set	539
  7352  0215                     _T3GCONbits	set	533
  7353  0214                     _T3CONbits	set	532
  7354  0214                     _T3CON	set	532
  7355  0212                     _TMR3L	set	530
  7356  0213                     _TMR3H	set	531
  7357  0217                     _T3CLK	set	535
  7358  0216                     _T3GATE	set	534
  7359  0215                     _T3GCON	set	533
  7360  020F                     _T1GCONbits	set	527
  7361  020E                     _T1CONbits	set	526
  7362  020E                     _T1CON	set	526
  7363  020C                     _TMR1L	set	524
  7364  020D                     _TMR1H	set	525
  7365  0211                     _T1CLK	set	529
  7366  0210                     _T1GATE	set	528
  7367  020F                     _T1GCON	set	527
  7368  028D                     _PR2	set	653
  7369  028C                     _TMR2	set	652
  7370  028E                     _T2CONbits	set	654
  7371  0291                     _T2RSTbits	set	657
  7372  028F                     _T2HLTbits	set	655
  7373  028E                     _T2CON	set	654
  7374  028C                     _T2TMR	set	652
  7375  028D                     _T2PR	set	653
  7376  0291                     _T2RST	set	657
  7377  028F                     _T2HLT	set	655
  7378  0290                     _T2CLKCON	set	656
  7379  038C                     _PWM6DCL	set	908
  7380  038D                     _PWM6DCH	set	909
  7381  038E                     _PWM6CON	set	910
  7382  1C77                     _PWM6EN	set	7287
  7383  0710                     _PIR4bits	set	1808
  7384  071A                     _PIE4bits	set	1818
  7385  0719                     _PIE3bits	set	1817
  7386  070F                     _PIR3bits	set	1807
  7387  079B                     _PMD5	set	1947
  7388  079A                     _PMD4	set	1946
  7389  0799                     _PMD3	set	1945
  7390  0798                     _PMD2	set	1944
  7391  0797                     _PMD1	set	1943
  7392  0796                     _PMD0	set	1942
  7393  0892                     _OSCTUNE	set	2194
  7394  0893                     _OSCFRQ	set	2195
  7395  0891                     _OSCEN	set	2193
  7396  088F                     _OSCCON3	set	2191
  7397  088D                     _OSCCON1	set	2189
  7398  0EC6                     _SSP1DATPPS	set	3782
  7399  0EC5                     _SSP1CLKPPS	set	3781
  7400  0F16                     _RA6PPS	set	3862
  7401  0F24                     _RC4PPS	set	3876
  7402  0F23                     _RC3PPS	set	3875
  7403  0F67                     _SLRCONE	set	3943
  7404  0F5C                     _SLRCOND	set	3932
  7405  0F51                     _SLRCONC	set	3921
  7406  0F46                     _SLRCONB	set	3910
  7407  0F3B                     _SLRCONA	set	3899
  7408  0F5B                     _ODCOND	set	3931
  7409  0F50                     _ODCONC	set	3920
  7410  0F45                     _ODCONB	set	3909
  7411  0F3A                     _ODCONA	set	3898
  7412  0F66                     _ODCONE	set	3942
  7413  0F4F                     _WPUC	set	3919
  7414  0F39                     _WPUA	set	3897
  7415  0F44                     _WPUB	set	3908
  7416  0F65                     _WPUE	set	3941
  7417  0F5A                     _WPUD	set	3930
  7418  0F38                     _ANSELA	set	3896
  7419  0F64                     _ANSELE	set	3940
  7420  0F43                     _ANSELB	set	3907
  7421  0F4E                     _ANSELC	set	3918
  7422  0F59                     _ANSELD	set	3929
  7423  7A7C                     _WPUC4	set	31356
  7424  7A7B                     _WPUC3	set	31355
  7425                           
  7426                           	psect	stringtext2
  7427  1000                     __pstringtext2:
  7428  1000                     STR_1:
  7429  1000  3425               	retlw	37	;'%'
  7430  1001  3430               	retlw	48	;'0'
  7431  1002  3432               	retlw	50	;'2'
  7432  1003  3464               	retlw	100	;'d'
  7433  1004  343A               	retlw	58	;':'
  7434  1005  3425               	retlw	37	;'%'
  7435  1006  3430               	retlw	48	;'0'
  7436  1007  3432               	retlw	50	;'2'
  7437  1008  3464               	retlw	100	;'d'
  7438  1009  343A               	retlw	58	;':'
  7439  100A  3425               	retlw	37	;'%'
  7440  100B  3430               	retlw	48	;'0'
  7441  100C  3432               	retlw	50	;'2'
  7442  100D  3464               	retlw	100	;'d'
  7443  100E  3400               	retlw	0
  7444                           
  7445                           	psect	stringtext3
  7446  1019                     __pstringtext3:
  7447  1019                     STR_3:
  7448  1019  3425               	retlw	37	;'%'
  7449  101A  3430               	retlw	48	;'0'
  7450  101B  3432               	retlw	50	;'2'
  7451  101C  3464               	retlw	100	;'d'
  7452  101D  3420               	retlw	32	;' '
  7453  101E  3443               	retlw	67	;'C'
  7454  101F  3400               	retlw	0
  7455                           
  7456                           	psect	stringtext4
  7457  1020                     __pstringtext4:
  7458  1020                     STR_5:
  7459  1020  344C               	retlw	76	;'L'
  7460  1021  3420               	retlw	32	;' '
  7461  1022  3425               	retlw	37	;'%'
  7462  1023  3464               	retlw	100	;'d'
  7463  1024  3400               	retlw	0
  7464                           
  7465                           	psect	stringtext5
  7466  0000                     __pstringtext5:
  7467  1019                     
  7468                           	psect	cinit
  7469  0042                     start_initialization:	
  7470                           ; #config settings
  7471                           
  7472  0042                     __initialization:
  7473                           
  7474                           ; Initialize objects allocated to BANK0
  7475  0042  3050               	movlw	low __pidataBANK0
  7476  0043  0084               	movwf	4
  7477  0044  308B               	movlw	(high __pidataBANK0)| (0+128)
  7478  0045  0085               	movwf	5
  7479  0046  3061               	movlw	low __pdataBANK0
  7480  0047  0086               	movwf	6
  7481  0048  3000               	movlw	high __pdataBANK0
  7482  0049  0087               	movwf	7
  7483  004A  300C               	movlw	12
  7484  004B  318B  2318  3180   	fcall	init_ram
  7485                           
  7486                           ; Initialize objects allocated to BANK1
  7487  004E  301E               	movlw	low __pidataBANK1
  7488  004F  0084               	movwf	4
  7489  0050  308B               	movlw	(high __pidataBANK1)| (0+128)
  7490  0051  0085               	movwf	5
  7491  0052  30BA               	movlw	low __pdataBANK1
  7492  0053  0086               	movwf	6
  7493  0054  3000               	movlw	high __pdataBANK1
  7494  0055  0087               	movwf	7
  7495  0056  3006               	movlw	6
  7496  0057  318B  2318  3180   	fcall	init_ram
  7497                           
  7498                           ; Clear objects allocated to BANK0
  7499  005A  304C               	movlw	low __pbssBANK0
  7500  005B  0084               	movwf	4
  7501  005C  3000               	movlw	high __pbssBANK0
  7502  005D  0085               	movwf	5
  7503  005E  3015               	movlw	21
  7504  005F  318B  2312  3180   	fcall	clear_ram0
  7505                           
  7506                           ; Clear objects allocated to BANK1
  7507  0062  0021               	movlb	1	; select bank1
  7508  0063  01B4               	clrf	__pbssBANK1& (0+127)
  7509  0064  01B5               	clrf	(__pbssBANK1+1)& (0+127)
  7510  0065  01B6               	clrf	(__pbssBANK1+2)& (0+127)
  7511  0066  01B7               	clrf	(__pbssBANK1+3)& (0+127)
  7512  0067  01B8               	clrf	(__pbssBANK1+4)& (0+127)
  7513  0068  01B9               	clrf	(__pbssBANK1+5)& (0+127)
  7514  0069                     end_of_initialization:	
  7515                           ;End of C runtime variable initialization code
  7516                           
  7517  0069                     __end_of__initialization:
  7518  0069  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7519  006A  0020               	movlb	0
  7520  006B  3186  2EF9         	ljmp	_main	;jump to C main() function
  7521                           
  7522                           	psect	bssBANK0
  7523  004C                     __pbssBANK0:
  7524  004C                     _t:
  7525  004C                     	ds	6
  7526  0052                     _mode:
  7527  0052                     	ds	2
  7528  0054                     _editingClockAlarm:
  7529  0054                     	ds	2
  7530  0056                     _dimingLed:
  7531  0056                     	ds	2
  7532  0058                     _i2c1_driver_i2cISR:
  7533  0058                     	ds	2
  7534  005A                     _i2c1_driver_busCollisionISR:
  7535  005A                     	ds	2
  7536  005C                     _togglingAlarm:
  7537  005C                     	ds	1
  7538  005D                     _editingLumAlarm:
  7539  005D                     	ds	1
  7540  005E                     _editingTempAlarm:
  7541  005E                     	ds	1
  7542  005F                     _lumLevel:
  7543  005F                     	ds	1
  7544  0060                     _temp:
  7545  0060                     	ds	1
  7546                           
  7547                           	psect	dataBANK0
  7548  0061                     __pdataBANK0:
  7549  0061                     _clkAlarm:
  7550  0061                     	ds	7
  7551  0068                     _lumAlarm:
  7552  0068                     	ds	2
  7553  006A                     _tempAlarm:
  7554  006A                     	ds	2
  7555  006C                     _alarmsEnable:
  7556  006C                     	ds	1
  7557                           
  7558                           	psect	bssBANK1
  7559  00B4                     __pbssBANK1:
  7560  00B4                     menuLCD_ISR@F12791:
  7561  00B4                     	ds	6
  7562                           
  7563                           	psect	dataBANK1
  7564  00BA                     __pdataBANK1:
  7565  00BA                     _alarmPWMStart:
  7566  00BA                     	ds	6
  7567                           
  7568                           	psect	inittext
  7569  0B18                     init_ram:
  7570  0B18  00FE               	movwf	btemp
  7571  0B19                     initloop:
  7572  0B19  0012               	moviw fsr0++
  7573  0B1A  001E               	movwi fsr1++
  7574  0B1B  0BFE               	decfsz	btemp,f
  7575  0B1C  2B19               	goto	initloop
  7576  0B1D  3400               	retlw	0
  7577                           
  7578                           	psect	clrtext
  7579  0B12                     clear_ram0:	
  7580                           ;	Called with FSR0 containing the base address, and
  7581                           ;	WREG with the size to clear
  7582                           
  7583  0B12  0064               	clrwdt	;clear the watchdog before getting into this loop
  7584  0B13                     clrloop0:
  7585  0B13  0180               	clrf	0	;clear RAM location pointed to by FSR
  7586  0B14  3101               	addfsr 0,1
  7587  0B15  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7588  0B16  2B13               	goto	clrloop0	;have we reached the end yet?
  7589  0B17  3400               	retlw	0	;all done for this memory range, return
  7590                           
  7591                           	psect	cstackBANK1
  7592  00AA                     __pcstackBANK1:
  7593  00AA                     ??_PMD_Initialize:
  7594  00AA                     ??_OSCILLATOR_Initialize:	
  7595                           ; 1 bytes @ 0x0
  7596                           
  7597  00AA                     ??_PWM6_Initialize:	
  7598                           ; 1 bytes @ 0x0
  7599                           
  7600  00AA                     ??_ADCC_Initialize:	
  7601                           ; 1 bytes @ 0x0
  7602                           
  7603  00AA                     ??_TMR2_Initialize:	
  7604                           ; 1 bytes @ 0x0
  7605                           
  7606  00AA                     ?_TMR1_SetInterruptHandler:	
  7607                           ; 1 bytes @ 0x0
  7608                           
  7609  00AA                     ?_TMR3_SetInterruptHandler:	
  7610                           ; 1 bytes @ 0x0
  7611                           
  7612  00AA                     ?_TMR5_SetInterruptHandler:	
  7613                           ; 1 bytes @ 0x0
  7614                           
  7615  00AA                     ??_WriteI2C:	
  7616                           ; 1 bytes @ 0x0
  7617                           
  7618  00AA                     ??_PIN_MANAGER_Initialize:	
  7619                           ; 1 bytes @ 0x0
  7620                           
  7621  00AA                     ??_i2c1_driver_open:	
  7622                           ; 1 bytes @ 0x0
  7623                           
  7624  00AA                     ??_TMR2_Stop:	
  7625                           ; 1 bytes @ 0x0
  7626                           
  7627  00AA                     ??_TMR2_StopTimer:	
  7628                           ; 1 bytes @ 0x0
  7629                           
  7630  00AA                     ??_PWM_Output_D4_Disable:	
  7631                           ; 1 bytes @ 0x0
  7632                           
  7633  00AA                     ??_editClock:	
  7634                           ; 1 bytes @ 0x0
  7635                           
  7636  00AA                     ??_editTemp:	
  7637                           ; 1 bytes @ 0x0
  7638                           
  7639  00AA                     TMR1_SetInterruptHandler@InterruptHandler:	
  7640                           ; 1 bytes @ 0x0
  7641                           
  7642  00AA                     TMR3_SetInterruptHandler@InterruptHandler:	
  7643                           ; 2 bytes @ 0x0
  7644                           
  7645  00AA                     TMR5_SetInterruptHandler@InterruptHandler:	
  7646                           ; 2 bytes @ 0x0
  7647                           
  7648                           
  7649                           ; 2 bytes @ 0x0
  7650  00AA                     	ds	1
  7651  00AB                     WriteI2C@data_out:
  7652                           
  7653                           ; 1 bytes @ 0x1
  7654  00AB                     	ds	1
  7655  00AC                     ??_TMR3_Initialize:
  7656  00AC                     ??_TMR5_Initialize:	
  7657                           ; 1 bytes @ 0x2
  7658                           
  7659  00AC                     ??_TMR1_Initialize:	
  7660                           ; 1 bytes @ 0x2
  7661                           
  7662  00AC                     ??_TMR1_SetInterruptHandler:	
  7663                           ; 1 bytes @ 0x2
  7664                           
  7665  00AC                     ??_TMR3_SetInterruptHandler:	
  7666                           ; 1 bytes @ 0x2
  7667                           
  7668  00AC                     ??_TMR5_SetInterruptHandler:	
  7669                           ; 1 bytes @ 0x2
  7670                           
  7671  00AC                     ??_SYSTEM_Initialize:	
  7672                           ; 1 bytes @ 0x2
  7673                           
  7674  00AC                     ??_LCDsend:	
  7675                           ; 1 bytes @ 0x2
  7676                           
  7677  00AC                     ?_LCDsend2x4:	
  7678                           ; 1 bytes @ 0x2
  7679                           
  7680  00AC                     LCDsend2x4@mode:	
  7681                           ; 1 bytes @ 0x2
  7682                           
  7683                           
  7684                           ; 1 bytes @ 0x2
  7685  00AC                     	ds	1
  7686  00AD                     ??_LCDsend2x4:
  7687  00AD                     LCDsend@c:	
  7688                           ; 1 bytes @ 0x3
  7689                           
  7690                           
  7691                           ; 1 bytes @ 0x3
  7692  00AD                     	ds	2
  7693  00AF                     LCDsend2x4@c:
  7694                           
  7695                           ; 1 bytes @ 0x5
  7696  00AF                     	ds	1
  7697  00B0                     LCDsend2x4@hc:
  7698                           
  7699                           ; 1 bytes @ 0x6
  7700  00B0                     	ds	1
  7701  00B1                     LCDsend2x4@lc:
  7702                           
  7703                           ; 1 bytes @ 0x7
  7704  00B1                     	ds	1
  7705  00B2                     ??_LCDinit:
  7706                           
  7707                           ; 1 bytes @ 0x8
  7708  00B2                     	ds	1
  7709  00B3                     ??_main:
  7710                           
  7711                           ; 1 bytes @ 0x9
  7712  00B3                     	ds	1
  7713                           
  7714                           	psect	cstackCOMMON
  7715  0070                     __pcstackCOMMON:
  7716  0070                     ?_isdigit:
  7717  0070                     ?_i2c1_driver_open:	
  7718                           ; 1 bit 
  7719                           
  7720  0070                     ?_PMD_Initialize:	
  7721                           ; 1 bit 
  7722                           
  7723  0070                     ?_OSCILLATOR_Initialize:	
  7724                           ; 1 bytes @ 0x0
  7725                           
  7726  0070                     ?_PWM6_Initialize:	
  7727                           ; 1 bytes @ 0x0
  7728                           
  7729  0070                     ?_ADCC_Initialize:	
  7730                           ; 1 bytes @ 0x0
  7731                           
  7732  0070                     ?_TMR3_Initialize:	
  7733                           ; 1 bytes @ 0x0
  7734                           
  7735  0070                     ?_TMR2_Initialize:	
  7736                           ; 1 bytes @ 0x0
  7737                           
  7738  0070                     ?_TMR5_Initialize:	
  7739                           ; 1 bytes @ 0x0
  7740                           
  7741  0070                     ?_TMR1_Initialize:	
  7742                           ; 1 bytes @ 0x0
  7743                           
  7744  0070                     ?_TMR5_ISR:	
  7745                           ; 1 bytes @ 0x0
  7746                           
  7747  0070                     ?_TMR3_ISR:	
  7748                           ; 1 bytes @ 0x0
  7749                           
  7750  0070                     ?_TMR1_ISR:	
  7751                           ; 1 bytes @ 0x0
  7752                           
  7753  0070                     ?_TMR1_DefaultInterruptHandler:	
  7754                           ; 1 bytes @ 0x0
  7755                           
  7756  0070                     ??_TMR1_DefaultInterruptHandler:	
  7757                           ; 1 bytes @ 0x0
  7758                           
  7759  0070                     ?_TMR3_DefaultInterruptHandler:	
  7760                           ; 1 bytes @ 0x0
  7761                           
  7762  0070                     ??_TMR3_DefaultInterruptHandler:	
  7763                           ; 1 bytes @ 0x0
  7764                           
  7765  0070                     ?_TMR5_DefaultInterruptHandler:	
  7766                           ; 1 bytes @ 0x0
  7767                           
  7768  0070                     ??_TMR5_DefaultInterruptHandler:	
  7769                           ; 1 bytes @ 0x0
  7770                           
  7771  0070                     ??_isdigit:	
  7772                           ; 1 bytes @ 0x0
  7773                           
  7774  0070                     ?_ReadI2C:	
  7775                           ; 1 bytes @ 0x0
  7776                           
  7777  0070                     ??_ReadI2C:	
  7778                           ; 1 bytes @ 0x0
  7779                           
  7780  0070                     ?_WriteI2C:	
  7781                           ; 1 bytes @ 0x0
  7782                           
  7783  0070                     ?_PIN_MANAGER_Initialize:	
  7784                           ; 1 bytes @ 0x0
  7785                           
  7786  0070                     ?_SYSTEM_Initialize:	
  7787                           ; 1 bytes @ 0x0
  7788                           
  7789  0070                     ?_INTERRUPT_InterruptManager:	
  7790                           ; 1 bytes @ 0x0
  7791                           
  7792  0070                     ?_TMR1_WriteTimer:	
  7793                           ; 1 bytes @ 0x0
  7794                           
  7795  0070                     ?_TMR3_WriteTimer:	
  7796                           ; 1 bytes @ 0x0
  7797                           
  7798  0070                     ?_TMR5_WriteTimer:	
  7799                           ; 1 bytes @ 0x0
  7800                           
  7801  0070                     ?_PWM6_LoadDutyValue:	
  7802                           ; 1 bytes @ 0x0
  7803                           
  7804  0070                     ?_TMR2_Start:	
  7805                           ; 1 bytes @ 0x0
  7806                           
  7807  0070                     ??_TMR2_Start:	
  7808                           ; 1 bytes @ 0x0
  7809                           
  7810  0070                     ?_TMR2_StartTimer:	
  7811                           ; 1 bytes @ 0x0
  7812                           
  7813  0070                     ??_TMR2_StartTimer:	
  7814                           ; 1 bytes @ 0x0
  7815                           
  7816  0070                     ?_TMR2_Stop:	
  7817                           ; 1 bytes @ 0x0
  7818                           
  7819  0070                     ?_TMR2_StopTimer:	
  7820                           ; 1 bytes @ 0x0
  7821                           
  7822  0070                     ?_tsttc:	
  7823                           ; 1 bytes @ 0x0
  7824                           
  7825  0070                     ?_LCDsend:	
  7826                           ; 1 bytes @ 0x0
  7827                           
  7828  0070                     ?_LCDinit:	
  7829                           ; 1 bytes @ 0x0
  7830                           
  7831  0070                     ?_LCDcmd:	
  7832                           ; 1 bytes @ 0x0
  7833                           
  7834  0070                     ?_LCDchar:	
  7835                           ; 1 bytes @ 0x0
  7836                           
  7837  0070                     ?_LCDstr:	
  7838                           ; 1 bytes @ 0x0
  7839                           
  7840  0070                     ?_differenceBetweenTimePeriod:	
  7841                           ; 1 bytes @ 0x0
  7842                           
  7843  0070                     ?_PWM_Output_D4_Enable:	
  7844                           ; 1 bytes @ 0x0
  7845                           
  7846  0070                     ??_PWM_Output_D4_Enable:	
  7847                           ; 1 bytes @ 0x0
  7848                           
  7849  0070                     ?_PWM_Output_D4_Disable:	
  7850                           ; 1 bytes @ 0x0
  7851                           
  7852  0070                     ?_Clock_ISR:	
  7853                           ; 1 bytes @ 0x0
  7854                           
  7855  0070                     ??_Clock_ISR:	
  7856                           ; 1 bytes @ 0x0
  7857                           
  7858  0070                     ?_menuLCD_ISR:	
  7859                           ; 1 bytes @ 0x0
  7860                           
  7861  0070                     ?_monitoring_ISR:	
  7862                           ; 1 bytes @ 0x0
  7863                           
  7864  0070                     ?_editClock:	
  7865                           ; 1 bytes @ 0x0
  7866                           
  7867  0070                     ?_editTemp:	
  7868                           ; 1 bytes @ 0x0
  7869                           
  7870  0070                     ?_main:	
  7871                           ; 1 bytes @ 0x0
  7872                           
  7873  0070                     ?i1_WriteI2C:	
  7874                           ; 1 bytes @ 0x0
  7875                           
  7876  0070                     ??i1_WriteI2C:	
  7877                           ; 1 bytes @ 0x0
  7878                           
  7879  0070                     ?i1_TMR2_Stop:	
  7880                           ; 1 bytes @ 0x0
  7881                           
  7882  0070                     ??i1_TMR2_Stop:	
  7883                           ; 1 bytes @ 0x0
  7884                           
  7885  0070                     ?i1_TMR2_StopTimer:	
  7886                           ; 1 bytes @ 0x0
  7887                           
  7888  0070                     ??i1_TMR2_StopTimer:	
  7889                           ; 1 bytes @ 0x0
  7890                           
  7891  0070                     ?i1_PWM_Output_D4_Disable:	
  7892                           ; 1 bytes @ 0x0
  7893                           
  7894  0070                     ??i1_PWM_Output_D4_Disable:	
  7895                           ; 1 bytes @ 0x0
  7896                           
  7897  0070                     ?_ADCC_GetSingleConversion:	
  7898                           ; 1 bytes @ 0x0
  7899                           
  7900  0070                     ?___wmul:	
  7901                           ; 2 bytes @ 0x0
  7902                           
  7903  0070                     ?___lwdiv:	
  7904                           ; 2 bytes @ 0x0
  7905                           
  7906  0070                     _isdigit$2812:	
  7907                           ; 2 bytes @ 0x0
  7908                           
  7909  0070                     TMR1_WriteTimer@timerVal:	
  7910                           ; 1 bytes @ 0x0
  7911                           
  7912  0070                     TMR3_WriteTimer@timerVal:	
  7913                           ; 2 bytes @ 0x0
  7914                           
  7915  0070                     TMR5_WriteTimer@timerVal:	
  7916                           ; 2 bytes @ 0x0
  7917                           
  7918  0070                     PWM6_LoadDutyValue@dutyValue:	
  7919                           ; 2 bytes @ 0x0
  7920                           
  7921  0070                     ___wmul@multiplier:	
  7922                           ; 2 bytes @ 0x0
  7923                           
  7924  0070                     ___lwdiv@divisor:	
  7925                           ; 2 bytes @ 0x0
  7926                           
  7927  0070                     differenceBetweenTimePeriod@start:	
  7928                           ; 2 bytes @ 0x0
  7929                           
  7930                           
  7931                           ; 6 bytes @ 0x0
  7932  0070                     	ds	1
  7933  0071                     isdigit@c:
  7934  0071                     i1WriteI2C@data_out:	
  7935                           ; 1 bytes @ 0x1
  7936                           
  7937                           
  7938                           ; 1 bytes @ 0x1
  7939  0071                     	ds	1
  7940  0072                     ??_TMR1_ISR:
  7941  0072                     ??_TMR1_WriteTimer:	
  7942                           ; 1 bytes @ 0x2
  7943                           
  7944  0072                     ??_TMR3_WriteTimer:	
  7945                           ; 1 bytes @ 0x2
  7946                           
  7947  0072                     ??_TMR5_WriteTimer:	
  7948                           ; 1 bytes @ 0x2
  7949                           
  7950  0072                     ??_PWM6_LoadDutyValue:	
  7951                           ; 1 bytes @ 0x2
  7952                           
  7953  0072                     ??_tsttc:	
  7954                           ; 1 bytes @ 0x2
  7955                           
  7956  0072                     ?i1_LCDsend2x4:	
  7957                           ; 1 bytes @ 0x2
  7958                           
  7959  0072                     i1LCDsend2x4@mode:	
  7960                           ; 1 bytes @ 0x2
  7961                           
  7962  0072                     ___wmul@multiplicand:	
  7963                           ; 1 bytes @ 0x2
  7964                           
  7965  0072                     ___lwdiv@dividend:	
  7966                           ; 2 bytes @ 0x2
  7967                           
  7968                           
  7969                           ; 2 bytes @ 0x2
  7970  0072                     	ds	1
  7971  0073                     ??_ADCC_GetSingleConversion:
  7972  0073                     ??i1_LCDsend2x4:	
  7973                           ; 1 bytes @ 0x3
  7974                           
  7975  0073                     ADCC_GetSingleConversion@channel:	
  7976                           ; 1 bytes @ 0x3
  7977                           
  7978  0073                     tsttc@value:	
  7979                           ; 1 bytes @ 0x3
  7980                           
  7981                           
  7982                           ; 1 bytes @ 0x3
  7983  0073                     	ds	1
  7984  0074                     ??_monitoring_ISR:
  7985  0074                     ??___wmul:	
  7986                           ; 1 bytes @ 0x4
  7987                           
  7988  0074                     ??___lwdiv:	
  7989                           ; 1 bytes @ 0x4
  7990                           
  7991  0074                     ___wmul@product:	
  7992                           ; 1 bytes @ 0x4
  7993                           
  7994                           
  7995                           ; 2 bytes @ 0x4
  7996  0074                     	ds	1
  7997  0075                     i1LCDsend2x4@c:
  7998  0075                     ___lwdiv@quotient:	
  7999                           ; 1 bytes @ 0x5
  8000                           
  8001                           
  8002                           ; 2 bytes @ 0x5
  8003  0075                     	ds	1
  8004  0076                     i1LCDsend2x4@hc:
  8005  0076                     differenceBetweenTimePeriod@stop:	
  8006                           ; 1 bytes @ 0x6
  8007                           
  8008                           
  8009                           ; 6 bytes @ 0x6
  8010  0076                     	ds	1
  8011  0077                     ??_TMR5_ISR:
  8012  0077                     ___lwdiv@counter:	
  8013                           ; 1 bytes @ 0x7
  8014                           
  8015  0077                     i1LCDsend2x4@lc:	
  8016                           ; 1 bytes @ 0x7
  8017                           
  8018                           
  8019                           ; 1 bytes @ 0x7
  8020  0077                     	ds	1
  8021  0078                     ??_LCDcmd:
  8022  0078                     ??_LCDchar:	
  8023                           ; 1 bytes @ 0x8
  8024                           
  8025  0078                     ?___lwmod:	
  8026                           ; 1 bytes @ 0x8
  8027                           
  8028  0078                     LCDcmd@c:	
  8029                           ; 2 bytes @ 0x8
  8030                           
  8031  0078                     LCDchar@c:	
  8032                           ; 1 bytes @ 0x8
  8033                           
  8034  0078                     ___lwmod@divisor:	
  8035                           ; 1 bytes @ 0x8
  8036                           
  8037                           
  8038                           ; 2 bytes @ 0x8
  8039  0078                     	ds	1
  8040  0079                     ??_LCDstr:
  8041                           
  8042                           ; 1 bytes @ 0x9
  8043  0079                     	ds	1
  8044  007A                     LCDstr@c:
  8045  007A                     ___lwmod@dividend:	
  8046                           ; 1 bytes @ 0xA
  8047                           
  8048                           
  8049                           ; 2 bytes @ 0xA
  8050  007A                     	ds	1
  8051  007B                     LCDstr@p:
  8052                           
  8053                           ; 1 bytes @ 0xB
  8054  007B                     	ds	1
  8055  007C                     ??___lwmod:
  8056  007C                     differenceBetweenTimePeriod@diff:	
  8057                           ; 1 bytes @ 0xC
  8058                           
  8059                           
  8060                           ; 1 bytes @ 0xC
  8061  007C                     	ds	1
  8062  007D                     ___lwmod@counter:
  8063                           
  8064                           ; 1 bytes @ 0xD
  8065  007D                     	ds	1
  8066  007E                     ??_TMR3_ISR:
  8067  007E                     ??_INTERRUPT_InterruptManager:	
  8068                           ; 1 bytes @ 0xE
  8069                           
  8070                           
  8071                           	psect	cstackBANK0
  8072  0020                     __pcstackBANK0:	
  8073                           ; 1 bytes @ 0xE
  8074                           
  8075  0020                     ??_differenceBetweenTimePeriod:
  8076  0020                     ?_sprintf:	
  8077                           ; 1 bytes @ 0x0
  8078                           
  8079  0020                     sprintf@f:	
  8080                           ; 2 bytes @ 0x0
  8081                           
  8082                           
  8083                           ; 2 bytes @ 0x0
  8084  0020                     	ds	8
  8085  0028                     ??_sprintf:
  8086                           
  8087                           ; 1 bytes @ 0x8
  8088  0028                     	ds	4
  8089  002C                     sprintf@ap:
  8090                           
  8091                           ; 1 bytes @ 0xC
  8092  002C                     	ds	1
  8093  002D                     sprintf@prec:
  8094                           
  8095                           ; 1 bytes @ 0xD
  8096  002D                     	ds	1
  8097  002E                     sprintf@val:
  8098                           
  8099                           ; 2 bytes @ 0xE
  8100  002E                     	ds	2
  8101  0030                     sprintf@flag:
  8102                           
  8103                           ; 1 bytes @ 0x10
  8104  0030                     	ds	1
  8105  0031                     sprintf@width:
  8106                           
  8107                           ; 2 bytes @ 0x11
  8108  0031                     	ds	2
  8109  0033                     sprintf@c:
  8110                           
  8111                           ; 1 bytes @ 0x13
  8112  0033                     	ds	1
  8113  0034                     sprintf@sp:
  8114                           
  8115                           ; 1 bytes @ 0x14
  8116  0034                     	ds	1
  8117  0035                     ??_menuLCD_ISR:
  8118                           
  8119                           ; 1 bytes @ 0x15
  8120  0035                     	ds	2
  8121  0037                     menuLCD_ISR@str:
  8122                           
  8123                           ; 8 bytes @ 0x17
  8124  0037                     	ds	8
  8125  003F                     menuLCD_ISR@tt:
  8126                           
  8127                           ; 4 bytes @ 0x1F
  8128  003F                     	ds	4
  8129  0043                     menuLCD_ISR@l:
  8130                           
  8131                           ; 3 bytes @ 0x23
  8132  0043                     	ds	3
  8133  0046                     menuLCD_ISR@diff:
  8134                           
  8135                           ; 6 bytes @ 0x26
  8136  0046                     	ds	6
  8137                           
  8138                           	psect	maintext
  8139  06F9                     __pmaintext:	
  8140 ;;
  8141 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  8142 ;;
  8143 ;; *************** function _main *****************
  8144 ;; Defined at:
  8145 ;;		line 515 in file "main.c"
  8146 ;; Parameters:    Size  Location     Type
  8147 ;;		None
  8148 ;; Auto vars:     Size  Location     Type
  8149 ;;		None
  8150 ;; Return value:  Size  Location     Type
  8151 ;;                  1    wreg      void 
  8152 ;; Registers used:
  8153 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8154 ;; Tracked objects:
  8155 ;;		On entry : B1F/0
  8156 ;;		On exit  : 0/0
  8157 ;;		Unchanged: 0/0
  8158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8161 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8162 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8163 ;;Total ram usage:        1 bytes
  8164 ;; Hardware stack levels required when called:   10
  8165 ;; This function calls:
  8166 ;;		_LCDinit
  8167 ;;		_PWM_Output_D4_Disable
  8168 ;;		_SYSTEM_Initialize
  8169 ;;		_TMR1_SetInterruptHandler
  8170 ;;		_TMR2_StopTimer
  8171 ;;		_TMR3_SetInterruptHandler
  8172 ;;		_TMR5_SetInterruptHandler
  8173 ;;		_editClock
  8174 ;;		_editTemp
  8175 ;;		_i2c1_driver_open
  8176 ;; This function is called by:
  8177 ;;		Startup code after reset
  8178 ;; This function uses a non-reentrant model
  8179 ;;
  8180                           
  8181                           
  8182                           ;psect for function _main
  8183  06F9                     _main:
  8184  06F9                     l4382:	
  8185                           ;incstack = 0
  8186                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8187                           
  8188                           
  8189                           ;main.c: 518: SYSTEM_Initialize();
  8190  06F9  318C  2460  3186   	fcall	_SYSTEM_Initialize
  8191  06FC                     l4384:
  8192                           
  8193                           ;main.c: 520: TMR2_StopTimer();
  8194  06FC  318A  22FC  3186   	fcall	_TMR2_StopTimer
  8195  06FF                     l4386:
  8196                           
  8197                           ;main.c: 521: PWM_Output_D4_Disable();
  8198  06FF  318A  22EE  3186   	fcall	_PWM_Output_D4_Disable
  8199                           
  8200                           ;main.c: 523: TMR1_SetInterruptHandler(Clock_ISR);
  8201  0702  3078               	movlw	low _Clock_ISR
  8202  0703  0021               	movlb	1	; select bank1
  8203  0704  00AA               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  8204  0705  3007               	movlw	high _Clock_ISR
  8205  0706  00AB               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8206  0707  318B  2300  3186   	fcall	_TMR1_SetInterruptHandler
  8207                           
  8208                           ;main.c: 525: TMR3_SetInterruptHandler(menuLCD_ISR);
  8209  070A  306D               	movlw	low _menuLCD_ISR
  8210  070B  0021               	movlb	1	; select bank1
  8211  070C  00AA               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  8212  070D  3000               	movlw	high _menuLCD_ISR
  8213  070E  00AB               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8214  070F  318B  2306  3186   	fcall	_TMR3_SetInterruptHandler
  8215                           
  8216                           ;main.c: 527: TMR5_SetInterruptHandler(monitoring_ISR);
  8217  0712  30DE               	movlw	low _monitoring_ISR
  8218  0713  0021               	movlb	1	; select bank1
  8219  0714  00AA               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
  8220  0715  300D               	movlw	high _monitoring_ISR
  8221  0716  00AB               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8222  0717  318B  230C  3186   	fcall	_TMR5_SetInterruptHandler
  8223                           
  8224                           ;main.c: 529: i2c1_driver_open();
  8225  071A  318B  2344  3186   	fcall	_i2c1_driver_open
  8226  071D                     l4388:
  8227                           
  8228                           ;main.c: 530: TRISCbits.TRISC3 = 1;
  8229  071D  0020               	movlb	0	; select bank0
  8230  071E  1593               	bsf	19,3	;volatile
  8231  071F                     l4390:
  8232                           
  8233                           ;main.c: 531: TRISCbits.TRISC4 = 1;
  8234  071F  1613               	bsf	19,4	;volatile
  8235  0720                     l4392:
  8236                           
  8237                           ;main.c: 532: WPUC3 = 1;
  8238  0720  003E               	movlb	30	; select bank30
  8239  0721  15CF               	bsf	79,3	;volatile
  8240  0722                     l4394:
  8241                           
  8242                           ;main.c: 533: WPUC4 = 1;
  8243  0722  164F               	bsf	79,4	;volatile
  8244                           
  8245                           ;main.c: 534: LCDinit();
  8246  0723  318F  278A  3186   	fcall	_LCDinit
  8247  0726                     l4396:
  8248                           
  8249                           ;main.c: 537: (INTCONbits.GIE = 1);
  8250  0726  178B               	bsf	11,7	;volatile
  8251  0727                     l4398:
  8252                           
  8253                           ;main.c: 540: (INTCONbits.PEIE = 1);
  8254  0727  170B               	bsf	11,6	;volatile
  8255  0728                     l4400:
  8256                           
  8257                           ;main.c: 543: {;main.c: 544: if(PORTBbits.RB4 == 0){
  8258  0728  0020               	movlb	0	; select bank0
  8259  0729  1A0D               	btfsc	13,4	;volatile
  8260  072A  2F2C               	goto	u4331
  8261  072B  2F2D               	goto	u4330
  8262  072C                     u4331:
  8263  072C  2F60               	goto	l4420
  8264  072D                     u4330:
  8265  072D                     l4402:
  8266                           
  8267                           ;main.c: 545: _delay((unsigned long)((50)*(1000000/4000.0)));
  8268  072D  3011               	movlw	17
  8269  072E  0021               	movlb	1	; select bank1
  8270  072F  00B3               	movwf	??_main^(0+128)
  8271  0730  303A               	movlw	58
  8272  0731                     u4397:
  8273  0731  0B89               	decfsz	9,f
  8274  0732  2F31               	goto	u4397
  8275  0733  0BB3               	decfsz	??_main^(0+128),f
  8276  0734  2F31               	goto	u4397
  8277  0735  0000               	nop
  8278  0736                     l4404:
  8279                           
  8280                           ;main.c: 547: if(mode == 0 && (clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigger
      +                          )){
  8281  0736  0020               	movlb	0	; select bank0
  8282  0737  0852               	movf	_mode,w
  8283  0738  0453               	iorwf	_mode+1,w
  8284  0739  1D03               	btfss	3,2
  8285  073A  2F3C               	goto	u4341
  8286  073B  2F3D               	goto	u4340
  8287  073C                     u4341:
  8288  073C  2F50               	goto	l4414
  8289  073D                     u4340:
  8290  073D                     l4406:
  8291  073D  0867               	movf	_clkAlarm+6,w
  8292  073E  1D03               	btfss	3,2
  8293  073F  2F41               	goto	u4351
  8294  0740  2F42               	goto	u4350
  8295  0741                     u4351:
  8296  0741  2F4C               	goto	l4412
  8297  0742                     u4350:
  8298  0742                     l4408:
  8299  0742  086B               	movf	_tempAlarm+1,w
  8300  0743  1D03               	btfss	3,2
  8301  0744  2F46               	goto	u4361
  8302  0745  2F47               	goto	u4360
  8303  0746                     u4361:
  8304  0746  2F4C               	goto	l4412
  8305  0747                     u4360:
  8306  0747                     l4410:
  8307  0747  0869               	movf	_lumAlarm+1,w
  8308  0748  1903               	btfsc	3,2
  8309  0749  2F4B               	goto	u4371
  8310  074A  2F4C               	goto	u4370
  8311  074B                     u4371:
  8312  074B  2F50               	goto	l4414
  8313  074C                     u4370:
  8314  074C                     l4412:
  8315                           
  8316                           ;main.c: 548: clkAlarm.trigger = 0;
  8317  074C  01E7               	clrf	_clkAlarm+6
  8318                           
  8319                           ;main.c: 549: tempAlarm.trigger = 0;
  8320  074D  01EB               	clrf	_tempAlarm+1
  8321                           
  8322                           ;main.c: 550: lumAlarm.trigger = 0;
  8323  074E  01E9               	clrf	_lumAlarm+1
  8324                           
  8325                           ;main.c: 551: }
  8326  074F  2F54               	goto	l1226
  8327  0750                     l4414:
  8328                           
  8329                           ;main.c: 552: else{;main.c: 553: mode = 1;
  8330  0750  3001               	movlw	1
  8331  0751  00D2               	movwf	_mode
  8332  0752  3000               	movlw	0
  8333  0753  00D3               	movwf	_mode+1
  8334  0754                     l1226:
  8335  0754  1E0D               	btfss	13,4	;volatile
  8336  0755  2F57               	goto	u4381
  8337  0756  2F58               	goto	u4380
  8338  0757                     u4381:
  8339  0757  2F54               	goto	l1226
  8340  0758                     u4380:
  8341  0758  2F60               	goto	l4420
  8342  0759                     l4416:
  8343                           
  8344                           ;main.c: 561: editClock();
  8345  0759  3186  2666  3186   	fcall	_editClock
  8346  075C                     l1233:	
  8347                           ;main.c: 562: case 2:
  8348                           
  8349                           
  8350                           ;main.c: 563: editTemp();
  8351  075C  318D  252C  3186   	fcall	_editTemp
  8352  075F  2F28               	goto	l4400
  8353  0760                     l4420:
  8354                           
  8355                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8356                           ; Switch size 1, requested type "simple"
  8357                           ; Number of cases is 1, Range of values is 0 to 0
  8358                           ; switch strategies available:
  8359                           ; Name         Instructions Cycles
  8360                           ; simple_byte            4     3 (average)
  8361                           ; direct_byte            8     6 (fixed)
  8362                           ; jumptable            260     6 (fixed)
  8363                           ;	Chosen strategy is simple_byte
  8364  0760  0853               	movf	_mode+1,w
  8365  0761  3A00               	xorlw	0	; case 0
  8366  0762  1903               	skipnz
  8367  0763  2F65               	goto	l4446
  8368  0764  2F28               	goto	l4400
  8369  0765                     l4446:
  8370                           
  8371                           ; Switch size 1, requested type "simple"
  8372                           ; Number of cases is 5, Range of values is 0 to 4
  8373                           ; switch strategies available:
  8374                           ; Name         Instructions Cycles
  8375                           ; direct_byte           16     6 (fixed)
  8376                           ; simple_byte           16     9 (average)
  8377                           ; jumptable            260     6 (fixed)
  8378                           ;	Chosen strategy is simple_byte
  8379  0765  0852               	movf	_mode,w
  8380  0766  3A00               	xorlw	0	; case 0
  8381  0767  1903               	skipnz
  8382  0768  2F28               	goto	l4400
  8383  0769  3A01               	xorlw	1	; case 1
  8384  076A  1903               	skipnz
  8385  076B  2F59               	goto	l4416
  8386  076C  3A03               	xorlw	3	; case 2
  8387  076D  1903               	skipnz
  8388  076E  2F5C               	goto	l1233
  8389  076F  3A01               	xorlw	1	; case 3
  8390  0770  1903               	skipnz
  8391  0771  2F28               	goto	l4400
  8392  0772  3A07               	xorlw	7	; case 4
  8393  0773  1903               	skipnz
  8394  0774  2F28               	goto	l4400
  8395  0775  2F28               	goto	l4400
  8396  0776  3180  2840         	ljmp	start
  8397  0778                     __end_of_main:
  8398                           
  8399                           	psect	text1
  8400  0B44                     __ptext1:	
  8401 ;; *************** function _i2c1_driver_open *****************
  8402 ;; Defined at:
  8403 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;		None
  8406 ;; Auto vars:     Size  Location     Type
  8407 ;;		None
  8408 ;; Return value:  Size  Location     Type
  8409 ;;		None               void
  8410 ;; Registers used:
  8411 ;;		wreg, status,2
  8412 ;; Tracked objects:
  8413 ;;		On entry : 0/0
  8414 ;;		On exit  : 0/0
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8421 ;;Total ram usage:        0 bytes
  8422 ;; Hardware stack levels used:    1
  8423 ;; Hardware stack levels required when called:    7
  8424 ;; This function calls:
  8425 ;;		Nothing
  8426 ;; This function is called by:
  8427 ;;		_main
  8428 ;; This function uses a non-reentrant model
  8429 ;;
  8430                           
  8431                           
  8432                           ;psect for function _i2c1_driver_open
  8433  0B44                     _i2c1_driver_open:
  8434  0B44                     l4138:	
  8435                           ;incstack = 0
  8436                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  8437                           
  8438                           
  8439                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
  8440  0B44  0023               	movlb	3	; select bank3
  8441  0B45  1A90               	btfsc	16,5	;volatile
  8442  0B46  2B48               	goto	u3781
  8443  0B47  2B49               	goto	u3780
  8444  0B48                     u3781:
  8445  0B48  2B4F               	goto	l239
  8446  0B49                     u3780:
  8447  0B49                     l4140:
  8448                           
  8449                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
  8450  0B49  018F               	clrf	15	;volatile
  8451  0B4A                     l4142:
  8452                           
  8453                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
  8454  0B4A  3028               	movlw	40
  8455  0B4B  0090               	movwf	16	;volatile
  8456  0B4C                     l4144:
  8457                           
  8458                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
  8459  0B4C  0191               	clrf	17	;volatile
  8460                           
  8461                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
  8462  0B4D  3003               	movlw	3
  8463  0B4E  008D               	movwf	13	;volatile
  8464  0B4F                     l239:
  8465  0B4F  0008               	return
  8466  0B50                     __end_of_i2c1_driver_open:
  8467                           
  8468                           	psect	text2
  8469  0D2C                     __ptext2:	
  8470 ;; *************** function _editTemp *****************
  8471 ;; Defined at:
  8472 ;;		line 490 in file "main.c"
  8473 ;; Parameters:    Size  Location     Type
  8474 ;;		None
  8475 ;; Auto vars:     Size  Location     Type
  8476 ;;		None
  8477 ;; Return value:  Size  Location     Type
  8478 ;;                  1    wreg      void 
  8479 ;; Registers used:
  8480 ;;		wreg, status,2, status,0
  8481 ;; Tracked objects:
  8482 ;;		On entry : 0/0
  8483 ;;		On exit  : 0/0
  8484 ;;		Unchanged: 0/0
  8485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8488 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8489 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8490 ;;Total ram usage:        1 bytes
  8491 ;; Hardware stack levels used:    1
  8492 ;; Hardware stack levels required when called:    7
  8493 ;; This function calls:
  8494 ;;		Nothing
  8495 ;; This function is called by:
  8496 ;;		_main
  8497 ;; This function uses a non-reentrant model
  8498 ;;
  8499                           
  8500                           
  8501                           ;psect for function _editTemp
  8502  0D2C                     _editTemp:
  8503  0D2C                     l4320:	
  8504                           ;incstack = 0
  8505                           ; Regs used in _editTemp: [wreg+status,2+status,0]
  8506                           
  8507                           
  8508                           ;main.c: 491: editingTempAlarm = 1;
  8509  0D2C  0020               	movlb	0	; select bank0
  8510  0D2D  01DE               	clrf	_editingTempAlarm
  8511  0D2E  0ADE               	incf	_editingTempAlarm,f
  8512  0D2F                     l4322:
  8513                           
  8514                           ;main.c: 493: tempAlarm.alarmTemp = 0;
  8515  0D2F  01EA               	clrf	_tempAlarm
  8516  0D30                     l4324:
  8517                           
  8518                           ;main.c: 496: if(PORTBbits.RB4 == 0){
  8519  0D30  0020               	movlb	0	; select bank0
  8520  0D31  1A0D               	btfsc	13,4	;volatile
  8521  0D32  2D34               	goto	u4191
  8522  0D33  2D35               	goto	u4190
  8523  0D34                     u4191:
  8524  0D34  2D49               	goto	l1207
  8525  0D35                     u4190:
  8526  0D35                     l4326:
  8527                           
  8528                           ;main.c: 497: _delay((unsigned long)((50)*(1000000/4000.0)));
  8529  0D35  3011               	movlw	17
  8530  0D36  0021               	movlb	1	; select bank1
  8531  0D37  00AA               	movwf	??_editTemp^(0+128)
  8532  0D38  303A               	movlw	58
  8533  0D39                     u4407:
  8534  0D39  0B89               	decfsz	9,f
  8535  0D3A  2D39               	goto	u4407
  8536  0D3B  0BAA               	decfsz	??_editTemp^(0+128),f
  8537  0D3C  2D39               	goto	u4407
  8538  0D3D  0000               	nop
  8539  0D3E                     l4328:
  8540                           
  8541                           ;main.c: 498: editingTempAlarm = 0;
  8542  0D3E  0020               	movlb	0	; select bank0
  8543  0D3F  01DE               	clrf	_editingTempAlarm
  8544  0D40                     l4330:
  8545                           
  8546                           ;main.c: 499: mode++;
  8547  0D40  3001               	movlw	1
  8548  0D41  07D2               	addwf	_mode,f
  8549  0D42  3000               	movlw	0
  8550  0D43  3DD3               	addwfc	_mode+1,f
  8551  0D44                     l1208:	
  8552                           ;main.c: 500: while(PORTBbits.RB4==0){};
  8553                           
  8554  0D44  1E0D               	btfss	13,4	;volatile
  8555  0D45  2D47               	goto	u4201
  8556  0D46  2D48               	goto	u4200
  8557  0D47                     u4201:
  8558  0D47  2D44               	goto	l1208
  8559  0D48                     u4200:
  8560  0D48  2D64               	goto	l1215
  8561  0D49                     l1207:
  8562                           
  8563                           ;main.c: 502: };main.c: 504: if(PORTCbits.RC5 == 0){
  8564  0D49  1A8E               	btfsc	14,5	;volatile
  8565  0D4A  2D4C               	goto	u4211
  8566  0D4B  2D4D               	goto	u4210
  8567  0D4C                     u4211:
  8568  0D4C  2D30               	goto	l4324
  8569  0D4D                     u4210:
  8570  0D4D                     l4332:
  8571                           
  8572                           ;main.c: 505: tempAlarm.alarmTemp++;
  8573  0D4D  3001               	movlw	1
  8574  0D4E  0021               	movlb	1	; select bank1
  8575  0D4F  00AA               	movwf	??_editTemp^(0+128)
  8576  0D50  082A               	movf	??_editTemp^(0+128),w
  8577  0D51  0020               	movlb	0	; select bank0
  8578  0D52  07EA               	addwf	_tempAlarm,f
  8579  0D53                     l4334:
  8580                           
  8581                           ;main.c: 506: if(tempAlarm.alarmTemp > 50){
  8582  0D53  3033               	movlw	51
  8583  0D54  026A               	subwf	_tempAlarm,w
  8584  0D55  1C03               	skipc
  8585  0D56  2D58               	goto	u4221
  8586  0D57  2D59               	goto	u4220
  8587  0D58                     u4221:
  8588  0D58  2D5A               	goto	l4338
  8589  0D59                     u4220:
  8590  0D59                     l4336:
  8591                           
  8592                           ;main.c: 507: tempAlarm.alarmTemp = 0;
  8593  0D59  01EA               	clrf	_tempAlarm
  8594  0D5A                     l4338:
  8595                           
  8596                           ;main.c: 508: };main.c: 509: _delay((unsigned long)((50)*(1000000/4000.0)));
  8597  0D5A  3011               	movlw	17
  8598  0D5B  0021               	movlb	1	; select bank1
  8599  0D5C  00AA               	movwf	??_editTemp^(0+128)
  8600  0D5D  303A               	movlw	58
  8601  0D5E                     u4417:
  8602  0D5E  0B89               	decfsz	9,f
  8603  0D5F  2D5E               	goto	u4417
  8604  0D60  0BAA               	decfsz	??_editTemp^(0+128),f
  8605  0D61  2D5E               	goto	u4417
  8606  0D62  0000               	nop
  8607  0D63  2D30               	goto	l4324
  8608  0D64                     l1215:
  8609  0D64  0008               	return
  8610  0D65                     __end_of_editTemp:
  8611                           
  8612                           	psect	text3
  8613  0666                     __ptext3:	
  8614 ;; *************** function _editClock *****************
  8615 ;; Defined at:
  8616 ;;		line 446 in file "main.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;		None
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;		None
  8621 ;; Return value:  Size  Location     Type
  8622 ;;                  1    wreg      void 
  8623 ;; Registers used:
  8624 ;;		wreg, status,2, status,0
  8625 ;; Tracked objects:
  8626 ;;		On entry : 0/0
  8627 ;;		On exit  : 0/0
  8628 ;;		Unchanged: 0/0
  8629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8632 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8633 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8634 ;;Total ram usage:        1 bytes
  8635 ;; Hardware stack levels used:    1
  8636 ;; Hardware stack levels required when called:    7
  8637 ;; This function calls:
  8638 ;;		Nothing
  8639 ;; This function is called by:
  8640 ;;		_main
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644                           
  8645                           ;psect for function _editClock
  8646  0666                     _editClock:
  8647  0666                     l4278:	
  8648                           ;incstack = 0
  8649                           ; Regs used in _editClock: [wreg+status,2+status,0]
  8650                           
  8651                           
  8652                           ;main.c: 448: editingClockAlarm = 1;
  8653  0666  3001               	movlw	1
  8654  0667  0020               	movlb	0	; select bank0
  8655  0668  00D4               	movwf	_editingClockAlarm
  8656  0669  3000               	movlw	0
  8657  066A  00D5               	movwf	_editingClockAlarm+1
  8658  066B                     l4280:
  8659                           
  8660                           ;main.c: 449: clkAlarm.alarmVal.h = 0;
  8661  066B  01E1               	clrf	_clkAlarm
  8662  066C  01E2               	clrf	_clkAlarm+1
  8663  066D                     l4282:
  8664                           
  8665                           ;main.c: 450: clkAlarm.alarmVal.m = 0;
  8666  066D  01E3               	clrf	_clkAlarm+2
  8667  066E  01E4               	clrf	_clkAlarm+3
  8668  066F                     l4284:
  8669                           
  8670                           ;main.c: 451: clkAlarm.alarmVal.s = 0;
  8671  066F  01E5               	clrf	_clkAlarm+4
  8672  0670  01E6               	clrf	_clkAlarm+5
  8673  0671                     l4286:
  8674                           
  8675                           ;main.c: 454: if(PORTBbits.RB4 == 0){
  8676  0671  0020               	movlb	0	; select bank0
  8677  0672  1A0D               	btfsc	13,4	;volatile
  8678  0673  2E75               	goto	u4091
  8679  0674  2E76               	goto	u4090
  8680  0675                     u4091:
  8681  0675  2E9F               	goto	l1184
  8682  0676                     u4090:
  8683  0676                     l4288:
  8684                           
  8685                           ;main.c: 455: _delay((unsigned long)((50)*(1000000/4000.0)));
  8686  0676  3011               	movlw	17
  8687  0677  0021               	movlb	1	; select bank1
  8688  0678  00AA               	movwf	??_editClock^(0+128)
  8689  0679  303A               	movlw	58
  8690  067A                     u4427:
  8691  067A  0B89               	decfsz	9,f
  8692  067B  2E7A               	goto	u4427
  8693  067C  0BAA               	decfsz	??_editClock^(0+128),f
  8694  067D  2E7A               	goto	u4427
  8695  067E  0000               	nop
  8696                           
  8697                           ;main.c: 456: editingClockAlarm++;
  8698  067F  3001               	movlw	1
  8699  0680  0020               	movlb	0	; select bank0
  8700  0681  07D4               	addwf	_editingClockAlarm,f
  8701  0682  3000               	movlw	0
  8702  0683  3DD5               	addwfc	_editingClockAlarm+1,f
  8703  0684                     l1185:	
  8704                           ;main.c: 457: while(PORTBbits.RB4==0){};
  8705                           
  8706  0684  1E0D               	btfss	13,4	;volatile
  8707  0685  2E87               	goto	u4101
  8708  0686  2E88               	goto	u4100
  8709  0687                     u4101:
  8710  0687  2E84               	goto	l1185
  8711  0688                     u4100:
  8712  0688                     l4290:
  8713                           
  8714                           ;main.c: 458: if(editingClockAlarm > 3){
  8715  0688  0855               	movf	_editingClockAlarm+1,w
  8716  0689  3A80               	xorlw	128
  8717  068A  0021               	movlb	1	; select bank1
  8718  068B  00AA               	movwf	??_editClock^(0+128)
  8719  068C  3080               	movlw	128
  8720  068D  022A               	subwf	??_editClock^(0+128),w
  8721  068E  1D03               	skipz
  8722  068F  2E93               	goto	u4115
  8723  0690  3004               	movlw	4
  8724  0691  0020               	movlb	0	; select bank0
  8725  0692  0254               	subwf	_editingClockAlarm,w
  8726  0693                     u4115:
  8727  0693  1C03               	skipc
  8728  0694  2E96               	goto	u4111
  8729  0695  2E97               	goto	u4110
  8730  0696                     u4111:
  8731  0696  2E9F               	goto	l1184
  8732  0697                     u4110:
  8733  0697                     l4292:
  8734                           
  8735                           ;main.c: 459: editingClockAlarm = 0;
  8736  0697  0020               	movlb	0	; select bank0
  8737  0698  01D4               	clrf	_editingClockAlarm
  8738  0699  01D5               	clrf	_editingClockAlarm+1
  8739  069A                     l4294:
  8740                           
  8741                           ;main.c: 460: mode++;
  8742  069A  3001               	movlw	1
  8743  069B  07D2               	addwf	_mode,f
  8744  069C  3000               	movlw	0
  8745  069D  3DD3               	addwfc	_mode+1,f
  8746                           
  8747                           ;main.c: 461: break;
  8748  069E  2EF8               	goto	l1203
  8749  069F                     l1184:
  8750                           
  8751                           ;main.c: 462: };main.c: 463: };main.c: 465: if(PORTCbits.RC5 == 0){
  8752  069F  0020               	movlb	0	; select bank0
  8753  06A0  1A8E               	btfsc	14,5	;volatile
  8754  06A1  2EA3               	goto	u4121
  8755  06A2  2EA4               	goto	u4120
  8756  06A3                     u4121:
  8757  06A3  2E71               	goto	l4286
  8758  06A4                     u4120:
  8759  06A4                     l4296:
  8760                           
  8761                           ;main.c: 466: if(editingClockAlarm == 1){
  8762  06A4  0354               	decf	_editingClockAlarm,w
  8763  06A5  0455               	iorwf	_editingClockAlarm+1,w
  8764  06A6  1D03               	btfss	3,2
  8765  06A7  2EA9               	goto	u4131
  8766  06A8  2EAA               	goto	u4130
  8767  06A9                     u4131:
  8768  06A9  2EC3               	goto	l4304
  8769  06AA                     u4130:
  8770  06AA                     l4298:
  8771                           
  8772                           ;main.c: 467: if(clkAlarm.alarmVal.h >= 23){
  8773  06AA  0862               	movf	_clkAlarm+1,w
  8774  06AB  3A80               	xorlw	128
  8775  06AC  0021               	movlb	1	; select bank1
  8776  06AD  00AA               	movwf	??_editClock^(0+128)
  8777  06AE  3080               	movlw	128
  8778  06AF  022A               	subwf	??_editClock^(0+128),w
  8779  06B0  1D03               	skipz
  8780  06B1  2EB5               	goto	u4145
  8781  06B2  3017               	movlw	23
  8782  06B3  0020               	movlb	0	; select bank0
  8783  06B4  0261               	subwf	_clkAlarm,w
  8784  06B5                     u4145:
  8785  06B5  1C03               	skipc
  8786  06B6  2EB8               	goto	u4141
  8787  06B7  2EB9               	goto	u4140
  8788  06B8                     u4141:
  8789  06B8  2EBD               	goto	l4302
  8790  06B9                     u4140:
  8791  06B9                     l4300:
  8792                           
  8793                           ;main.c: 468: clkAlarm.alarmVal.h = 0;
  8794  06B9  0020               	movlb	0	; select bank0
  8795  06BA  01E1               	clrf	_clkAlarm
  8796  06BB  01E2               	clrf	_clkAlarm+1
  8797                           
  8798                           ;main.c: 469: } else{
  8799  06BC  2EEE               	goto	l1194
  8800  06BD                     l4302:
  8801                           
  8802                           ;main.c: 470: clkAlarm.alarmVal.h++;
  8803  06BD  3001               	movlw	1
  8804  06BE  0020               	movlb	0	; select bank0
  8805  06BF  07E1               	addwf	_clkAlarm,f
  8806  06C0  3000               	movlw	0
  8807  06C1  3DE2               	addwfc	_clkAlarm+1,f
  8808  06C2  2EEE               	goto	l1194
  8809  06C3                     l4304:
  8810  06C3  3002               	movlw	2
  8811  06C4  0654               	xorwf	_editingClockAlarm,w
  8812  06C5  0455               	iorwf	_editingClockAlarm+1,w
  8813  06C6  1D03               	btfss	3,2
  8814  06C7  2EC9               	goto	u4151
  8815  06C8  2ECA               	goto	u4150
  8816  06C9                     u4151:
  8817  06C9  2ED9               	goto	l4312
  8818  06CA                     u4150:
  8819  06CA                     l4306:
  8820                           
  8821                           ;main.c: 473: if(clkAlarm.alarmVal.m == 59){
  8822  06CA  303B               	movlw	59
  8823  06CB  0663               	xorwf	_clkAlarm+2,w
  8824  06CC  0464               	iorwf	_clkAlarm+3,w
  8825  06CD  1D03               	btfss	3,2
  8826  06CE  2ED0               	goto	u4161
  8827  06CF  2ED1               	goto	u4160
  8828  06D0                     u4161:
  8829  06D0  2ED4               	goto	l4310
  8830  06D1                     u4160:
  8831  06D1                     l4308:
  8832                           
  8833                           ;main.c: 474: clkAlarm.alarmVal.m = 0;
  8834  06D1  01E3               	clrf	_clkAlarm+2
  8835  06D2  01E4               	clrf	_clkAlarm+3
  8836                           
  8837                           ;main.c: 475: } else{
  8838  06D3  2EEE               	goto	l1194
  8839  06D4                     l4310:
  8840                           
  8841                           ;main.c: 476: clkAlarm.alarmVal.m++;
  8842  06D4  3001               	movlw	1
  8843  06D5  07E3               	addwf	_clkAlarm+2,f
  8844  06D6  3000               	movlw	0
  8845  06D7  3DE4               	addwfc	_clkAlarm+3,f
  8846  06D8  2EEE               	goto	l1194
  8847  06D9                     l4312:
  8848  06D9  3003               	movlw	3
  8849  06DA  0654               	xorwf	_editingClockAlarm,w
  8850  06DB  0455               	iorwf	_editingClockAlarm+1,w
  8851  06DC  1D03               	btfss	3,2
  8852  06DD  2EDF               	goto	u4171
  8853  06DE  2EE0               	goto	u4170
  8854  06DF                     u4171:
  8855  06DF  2EEE               	goto	l1194
  8856  06E0                     u4170:
  8857  06E0                     l4314:
  8858                           
  8859                           ;main.c: 479: if(clkAlarm.alarmVal.s == 59){
  8860  06E0  303B               	movlw	59
  8861  06E1  0665               	xorwf	_clkAlarm+4,w
  8862  06E2  0466               	iorwf	_clkAlarm+5,w
  8863  06E3  1D03               	btfss	3,2
  8864  06E4  2EE6               	goto	u4181
  8865  06E5  2EE7               	goto	u4180
  8866  06E6                     u4181:
  8867  06E6  2EEA               	goto	l4318
  8868  06E7                     u4180:
  8869  06E7                     l4316:
  8870                           
  8871                           ;main.c: 480: clkAlarm.alarmVal.s = 0;
  8872  06E7  01E5               	clrf	_clkAlarm+4
  8873  06E8  01E6               	clrf	_clkAlarm+5
  8874                           
  8875                           ;main.c: 481: } else{
  8876  06E9  2EEE               	goto	l1194
  8877  06EA                     l4318:
  8878                           
  8879                           ;main.c: 482: clkAlarm.alarmVal.s++;
  8880  06EA  3001               	movlw	1
  8881  06EB  07E5               	addwf	_clkAlarm+4,f
  8882  06EC  3000               	movlw	0
  8883  06ED  3DE6               	addwfc	_clkAlarm+5,f
  8884  06EE                     l1194:
  8885                           
  8886                           ;main.c: 483: };main.c: 484: };main.c: 485: _delay((unsigned long)((50)*(1000000/4000.0)
      +                          ));
  8887  06EE  3011               	movlw	17
  8888  06EF  0021               	movlb	1	; select bank1
  8889  06F0  00AA               	movwf	??_editClock^(0+128)
  8890  06F1  303A               	movlw	58
  8891  06F2                     u4437:
  8892  06F2  0B89               	decfsz	9,f
  8893  06F3  2EF2               	goto	u4437
  8894  06F4  0BAA               	decfsz	??_editClock^(0+128),f
  8895  06F5  2EF2               	goto	u4437
  8896  06F6  0000               	nop
  8897  06F7  2E71               	goto	l4286
  8898  06F8                     l1203:
  8899  06F8  0008               	return
  8900  06F9                     __end_of_editClock:
  8901                           
  8902                           	psect	text4
  8903  0AFC                     __ptext4:	
  8904 ;; *************** function _TMR2_StopTimer *****************
  8905 ;; Defined at:
  8906 ;;		line 117 in file "mcc_generated_files/tmr2.c"
  8907 ;; Parameters:    Size  Location     Type
  8908 ;;		None
  8909 ;; Auto vars:     Size  Location     Type
  8910 ;;		None
  8911 ;; Return value:  Size  Location     Type
  8912 ;;                  1    wreg      void 
  8913 ;; Registers used:
  8914 ;;		status,2, status,0, pclath, cstack
  8915 ;; Tracked objects:
  8916 ;;		On entry : 0/0
  8917 ;;		On exit  : 0/0
  8918 ;;		Unchanged: 0/0
  8919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8924 ;;Total ram usage:        0 bytes
  8925 ;; Hardware stack levels used:    1
  8926 ;; Hardware stack levels required when called:    8
  8927 ;; This function calls:
  8928 ;;		_TMR2_Stop
  8929 ;; This function is called by:
  8930 ;;		_main
  8931 ;; This function uses a non-reentrant model
  8932 ;;
  8933                           
  8934                           
  8935                           ;psect for function _TMR2_StopTimer
  8936  0AFC                     _TMR2_StopTimer:
  8937  0AFC                     l4174:	
  8938                           ;incstack = 0
  8939                           ; Regs used in _TMR2_StopTimer: [status,2+status,0+pclath+cstack]
  8940                           
  8941                           
  8942                           ;tmr2.c: 119: TMR2_Stop();
  8943  0AFC  318A  22F1  318A   	fcall	_TMR2_Stop
  8944  0AFF                     l767:
  8945  0AFF  0008               	return
  8946  0B00                     __end_of_TMR2_StopTimer:
  8947                           
  8948                           	psect	text5
  8949  0AF1                     __ptext5:	
  8950 ;; *************** function _TMR2_Stop *****************
  8951 ;; Defined at:
  8952 ;;		line 111 in file "mcc_generated_files/tmr2.c"
  8953 ;; Parameters:    Size  Location     Type
  8954 ;;		None
  8955 ;; Auto vars:     Size  Location     Type
  8956 ;;		None
  8957 ;; Return value:  Size  Location     Type
  8958 ;;                  1    wreg      void 
  8959 ;; Registers used:
  8960 ;;		None
  8961 ;; Tracked objects:
  8962 ;;		On entry : 0/0
  8963 ;;		On exit  : 0/0
  8964 ;;		Unchanged: 0/0
  8965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8970 ;;Total ram usage:        0 bytes
  8971 ;; Hardware stack levels used:    1
  8972 ;; Hardware stack levels required when called:    7
  8973 ;; This function calls:
  8974 ;;		Nothing
  8975 ;; This function is called by:
  8976 ;;		_TMR2_StopTimer
  8977 ;; This function uses a non-reentrant model
  8978 ;;
  8979                           
  8980                           
  8981                           ;psect for function _TMR2_Stop
  8982  0AF1                     _TMR2_Stop:
  8983  0AF1                     l3910:	
  8984                           ;incstack = 0
  8985                           ; Regs used in _TMR2_Stop: []
  8986                           
  8987                           
  8988                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
  8989  0AF1  0025               	movlb	5	; select bank5
  8990  0AF2  138E               	bcf	14,7	;volatile
  8991  0AF3                     l764:
  8992  0AF3  0008               	return
  8993  0AF4                     __end_of_TMR2_Stop:
  8994                           
  8995                           	psect	text6
  8996  0C60                     __ptext6:	
  8997 ;; *************** function _SYSTEM_Initialize *****************
  8998 ;; Defined at:
  8999 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9000 ;; Parameters:    Size  Location     Type
  9001 ;;		None
  9002 ;; Auto vars:     Size  Location     Type
  9003 ;;		None
  9004 ;; Return value:  Size  Location     Type
  9005 ;;                  1    wreg      void 
  9006 ;; Registers used:
  9007 ;;		wreg, status,2, status,0, pclath, cstack
  9008 ;; Tracked objects:
  9009 ;;		On entry : 0/0
  9010 ;;		On exit  : 0/0
  9011 ;;		Unchanged: 0/0
  9012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9017 ;;Total ram usage:        0 bytes
  9018 ;; Hardware stack levels used:    1
  9019 ;; Hardware stack levels required when called:    9
  9020 ;; This function calls:
  9021 ;;		_ADCC_Initialize
  9022 ;;		_OSCILLATOR_Initialize
  9023 ;;		_PIN_MANAGER_Initialize
  9024 ;;		_PMD_Initialize
  9025 ;;		_PWM6_Initialize
  9026 ;;		_TMR1_Initialize
  9027 ;;		_TMR2_Initialize
  9028 ;;		_TMR3_Initialize
  9029 ;;		_TMR5_Initialize
  9030 ;; This function is called by:
  9031 ;;		_main
  9032 ;; This function uses a non-reentrant model
  9033 ;;
  9034                           
  9035                           
  9036                           ;psect for function _SYSTEM_Initialize
  9037  0C60                     _SYSTEM_Initialize:
  9038  0C60                     l4120:	
  9039                           ;incstack = 0
  9040                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9041                           
  9042                           
  9043                           ;mcc.c: 52: PMD_Initialize();
  9044  0C60  318B  2333  318C   	fcall	_PMD_Initialize
  9045  0C63                     l4122:
  9046                           
  9047                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  9048  0C63  318D  25A1  318C   	fcall	_PIN_MANAGER_Initialize
  9049  0C66                     l4124:
  9050                           
  9051                           ;mcc.c: 54: OSCILLATOR_Initialize();
  9052  0C66  318B  233B  318C   	fcall	_OSCILLATOR_Initialize
  9053  0C69                     l4126:
  9054                           
  9055                           ;mcc.c: 55: PWM6_Initialize();
  9056  0C69  318B  235C  318C   	fcall	_PWM6_Initialize
  9057  0C6C                     l4128:
  9058                           
  9059                           ;mcc.c: 56: ADCC_Initialize();
  9060  0C6C  318C  242F  318C   	fcall	_ADCC_Initialize
  9061  0C6F                     l4130:
  9062                           
  9063                           ;mcc.c: 57: TMR3_Initialize();
  9064  0C6F  318C  24BA  318C   	fcall	_TMR3_Initialize
  9065  0C72                     l4132:
  9066                           
  9067                           ;mcc.c: 58: TMR2_Initialize();
  9068  0C72  3187  27F1  318C   	fcall	_TMR2_Initialize
  9069  0C75                     l4134:
  9070                           
  9071                           ;mcc.c: 59: TMR5_Initialize();
  9072  0C75  318C  24D9  318C   	fcall	_TMR5_Initialize
  9073  0C78                     l4136:
  9074                           
  9075                           ;mcc.c: 60: TMR1_Initialize();
  9076  0C78  318C  249B  318C   	fcall	_TMR1_Initialize
  9077  0C7B                     l172:
  9078  0C7B  0008               	return
  9079  0C7C                     __end_of_SYSTEM_Initialize:
  9080                           
  9081                           	psect	text7
  9082  0CD9                     __ptext7:	
  9083 ;; *************** function _TMR5_Initialize *****************
  9084 ;; Defined at:
  9085 ;;		line 64 in file "mcc_generated_files/tmr5.c"
  9086 ;; Parameters:    Size  Location     Type
  9087 ;;		None
  9088 ;; Auto vars:     Size  Location     Type
  9089 ;;		None
  9090 ;; Return value:  Size  Location     Type
  9091 ;;                  1    wreg      void 
  9092 ;; Registers used:
  9093 ;;		wreg, status,2, status,0, pclath, cstack
  9094 ;; Tracked objects:
  9095 ;;		On entry : 0/0
  9096 ;;		On exit  : 0/0
  9097 ;;		Unchanged: 0/0
  9098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9103 ;;Total ram usage:        0 bytes
  9104 ;; Hardware stack levels used:    1
  9105 ;; Hardware stack levels required when called:    8
  9106 ;; This function calls:
  9107 ;;		_TMR5_SetInterruptHandler
  9108 ;; This function is called by:
  9109 ;;		_SYSTEM_Initialize
  9110 ;; This function uses a non-reentrant model
  9111 ;;
  9112                           
  9113                           
  9114                           ;psect for function _TMR5_Initialize
  9115  0CD9                     _TMR5_Initialize:
  9116  0CD9                     l3832:	
  9117                           ;incstack = 0
  9118                           ; Regs used in _TMR5_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9119                           
  9120                           
  9121                           ;tmr5.c: 69: T5GCON = 0x00;
  9122  0CD9  0024               	movlb	4	; select bank4
  9123  0CDA  019B               	clrf	27	;volatile
  9124                           
  9125                           ;tmr5.c: 72: T5GATE = 0x00;
  9126  0CDB  019C               	clrf	28	;volatile
  9127  0CDC                     l3834:
  9128                           
  9129                           ;tmr5.c: 75: T5CLK = 0x04;
  9130  0CDC  3004               	movlw	4
  9131  0CDD  009D               	movwf	29	;volatile
  9132  0CDE                     l3836:
  9133                           
  9134                           ;tmr5.c: 79: TMR5H = 0x4A;
  9135  0CDE  304A               	movlw	74
  9136  0CDF  0099               	movwf	25	;volatile
  9137  0CE0                     l3838:
  9138                           
  9139                           ;tmr5.c: 82: TMR5L = 0x5C;
  9140  0CE0  305C               	movlw	92
  9141  0CE1  0098               	movwf	24	;volatile
  9142  0CE2                     l3840:
  9143                           
  9144                           ;tmr5.c: 85: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  9145  0CE2  0819               	movf	25,w	;volatile
  9146  0CE3  0021               	movlb	1	; select bank1
  9147  0CE4  00A3               	movwf	(_timer5ReloadVal+1)^(0+128)	;volatile
  9148  0CE5  0024               	movlb	4	; select bank4
  9149  0CE6  0818               	movf	24,w	;volatile
  9150  0CE7  0021               	movlb	1	; select bank1
  9151  0CE8  00A2               	movwf	_timer5ReloadVal^(0+128)	;volatile
  9152  0CE9                     l3842:
  9153                           
  9154                           ;tmr5.c: 88: PIR4bits.TMR5IF = 0;
  9155  0CE9  002E               	movlb	14	; select bank14
  9156  0CEA  1210               	bcf	16,4	;volatile
  9157  0CEB                     l3844:
  9158                           
  9159                           ;tmr5.c: 91: PIE4bits.TMR5IE = 1;
  9160  0CEB  161A               	bsf	26,4	;volatile
  9161  0CEC                     l3846:
  9162                           
  9163                           ;tmr5.c: 94: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
  9164  0CEC  30FF               	movlw	low _TMR5_DefaultInterruptHandler
  9165  0CED  0021               	movlb	1	; select bank1
  9166  0CEE  00AA               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
  9167  0CEF  3007               	movlw	high _TMR5_DefaultInterruptHandler
  9168  0CF0  00AB               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9169  0CF1  318B  230C  318C   	fcall	_TMR5_SetInterruptHandler
  9170  0CF4                     l3848:
  9171                           
  9172                           ;tmr5.c: 97: T5CON = 0x11;
  9173  0CF4  3011               	movlw	17
  9174  0CF5  0024               	movlb	4	; select bank4
  9175  0CF6  009A               	movwf	26	;volatile
  9176  0CF7                     l675:
  9177  0CF7  0008               	return
  9178  0CF8                     __end_of_TMR5_Initialize:
  9179                           
  9180                           	psect	text8
  9181  0B0C                     __ptext8:	
  9182 ;; *************** function _TMR5_SetInterruptHandler *****************
  9183 ;; Defined at:
  9184 ;;		line 179 in file "mcc_generated_files/tmr5.c"
  9185 ;; Parameters:    Size  Location     Type
  9186 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  9187 ;;		 -> monitoring_ISR(1), TMR5_DefaultInterruptHandler(1), 
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;		None
  9190 ;; Return value:  Size  Location     Type
  9191 ;;                  1    wreg      void 
  9192 ;; Registers used:
  9193 ;;		wreg
  9194 ;; Tracked objects:
  9195 ;;		On entry : 0/0
  9196 ;;		On exit  : 0/0
  9197 ;;		Unchanged: 0/0
  9198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9199 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9202 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9203 ;;Total ram usage:        2 bytes
  9204 ;; Hardware stack levels used:    1
  9205 ;; Hardware stack levels required when called:    7
  9206 ;; This function calls:
  9207 ;;		Nothing
  9208 ;; This function is called by:
  9209 ;;		_TMR5_Initialize
  9210 ;;		_main
  9211 ;; This function uses a non-reentrant model
  9212 ;;
  9213                           
  9214                           
  9215                           ;psect for function _TMR5_SetInterruptHandler
  9216  0B0C                     _TMR5_SetInterruptHandler:
  9217  0B0C                     l3546:	
  9218                           ;incstack = 0
  9219                           ; Regs used in _TMR5_SetInterruptHandler: [wreg]
  9220                           
  9221                           
  9222                           ;tmr5.c: 180: TMR5_InterruptHandler = InterruptHandler;
  9223  0B0C  0021               	movlb	1	; select bank1
  9224  0B0D  082B               	movf	(TMR5_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  9225  0B0E  00A1               	movwf	(_TMR5_InterruptHandler+1)^(0+128)
  9226  0B0F  082A               	movf	TMR5_SetInterruptHandler@InterruptHandler^(0+128),w
  9227  0B10  00A0               	movwf	_TMR5_InterruptHandler^(0+128)
  9228  0B11                     l705:
  9229  0B11  0008               	return
  9230  0B12                     __end_of_TMR5_SetInterruptHandler:
  9231                           
  9232                           	psect	text9
  9233  0CBA                     __ptext9:	
  9234 ;; *************** function _TMR3_Initialize *****************
  9235 ;; Defined at:
  9236 ;;		line 64 in file "mcc_generated_files/tmr3.c"
  9237 ;; Parameters:    Size  Location     Type
  9238 ;;		None
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;		None
  9241 ;; Return value:  Size  Location     Type
  9242 ;;                  1    wreg      void 
  9243 ;; Registers used:
  9244 ;;		wreg, status,2, status,0, pclath, cstack
  9245 ;; Tracked objects:
  9246 ;;		On entry : 0/0
  9247 ;;		On exit  : 0/0
  9248 ;;		Unchanged: 0/0
  9249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9254 ;;Total ram usage:        0 bytes
  9255 ;; Hardware stack levels used:    1
  9256 ;; Hardware stack levels required when called:    8
  9257 ;; This function calls:
  9258 ;;		_TMR3_SetInterruptHandler
  9259 ;; This function is called by:
  9260 ;;		_SYSTEM_Initialize
  9261 ;; This function uses a non-reentrant model
  9262 ;;
  9263                           
  9264                           
  9265                           ;psect for function _TMR3_Initialize
  9266  0CBA                     _TMR3_Initialize:
  9267  0CBA                     l3802:	
  9268                           ;incstack = 0
  9269                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9270                           
  9271                           
  9272                           ;tmr3.c: 69: T3GCON = 0x00;
  9273  0CBA  0024               	movlb	4	; select bank4
  9274  0CBB  0195               	clrf	21	;volatile
  9275                           
  9276                           ;tmr3.c: 72: T3GATE = 0x00;
  9277  0CBC  0196               	clrf	22	;volatile
  9278  0CBD                     l3804:
  9279                           
  9280                           ;tmr3.c: 75: T3CLK = 0x04;
  9281  0CBD  3004               	movlw	4
  9282  0CBE  0097               	movwf	23	;volatile
  9283  0CBF                     l3806:
  9284                           
  9285                           ;tmr3.c: 78: TMR3H = 0xE7;
  9286  0CBF  30E7               	movlw	231
  9287  0CC0  0093               	movwf	19	;volatile
  9288  0CC1                     l3808:
  9289                           
  9290                           ;tmr3.c: 81: TMR3L = 0xC8;
  9291  0CC1  30C8               	movlw	200
  9292  0CC2  0092               	movwf	18	;volatile
  9293  0CC3                     l3810:
  9294                           
  9295                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  9296  0CC3  0813               	movf	19,w	;volatile
  9297  0CC4  0020               	movlb	0	; select bank0
  9298  0CC5  00EE               	movwf	_timer3ReloadVal+1	;volatile
  9299  0CC6  0024               	movlb	4	; select bank4
  9300  0CC7  0812               	movf	18,w	;volatile
  9301  0CC8  0020               	movlb	0	; select bank0
  9302  0CC9  00ED               	movwf	_timer3ReloadVal	;volatile
  9303  0CCA                     l3812:
  9304                           
  9305                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
  9306  0CCA  002E               	movlb	14	; select bank14
  9307  0CCB  1110               	bcf	16,2	;volatile
  9308  0CCC                     l3814:
  9309                           
  9310                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
  9311  0CCC  151A               	bsf	26,2	;volatile
  9312  0CCD                     l3816:
  9313                           
  9314                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  9315  0CCD  3003               	movlw	low _TMR3_DefaultInterruptHandler
  9316  0CCE  0021               	movlb	1	; select bank1
  9317  0CCF  00AA               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  9318  0CD0  3000               	movlw	high _TMR3_DefaultInterruptHandler
  9319  0CD1  00AB               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9320  0CD2  318B  2306  318C   	fcall	_TMR3_SetInterruptHandler
  9321  0CD5                     l3818:
  9322                           
  9323                           ;tmr3.c: 96: T3CON = 0x01;
  9324  0CD5  3001               	movlw	1
  9325  0CD6  0024               	movlb	4	; select bank4
  9326  0CD7  0094               	movwf	20	;volatile
  9327  0CD8                     l451:
  9328  0CD8  0008               	return
  9329  0CD9                     __end_of_TMR3_Initialize:
  9330                           
  9331                           	psect	text10
  9332  0B06                     __ptext10:	
  9333 ;; *************** function _TMR3_SetInterruptHandler *****************
  9334 ;; Defined at:
  9335 ;;		line 178 in file "mcc_generated_files/tmr3.c"
  9336 ;; Parameters:    Size  Location     Type
  9337 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  9338 ;;		 -> menuLCD_ISR(1), TMR3_DefaultInterruptHandler(1), 
  9339 ;; Auto vars:     Size  Location     Type
  9340 ;;		None
  9341 ;; Return value:  Size  Location     Type
  9342 ;;                  1    wreg      void 
  9343 ;; Registers used:
  9344 ;;		wreg
  9345 ;; Tracked objects:
  9346 ;;		On entry : 0/0
  9347 ;;		On exit  : 0/0
  9348 ;;		Unchanged: 0/0
  9349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9350 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9353 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9354 ;;Total ram usage:        2 bytes
  9355 ;; Hardware stack levels used:    1
  9356 ;; Hardware stack levels required when called:    7
  9357 ;; This function calls:
  9358 ;;		Nothing
  9359 ;; This function is called by:
  9360 ;;		_TMR3_Initialize
  9361 ;;		_main
  9362 ;; This function uses a non-reentrant model
  9363 ;;
  9364                           
  9365                           
  9366                           ;psect for function _TMR3_SetInterruptHandler
  9367  0B06                     _TMR3_SetInterruptHandler:
  9368  0B06                     l3530:	
  9369                           ;incstack = 0
  9370                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
  9371                           
  9372                           
  9373                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
  9374  0B06  0021               	movlb	1	; select bank1
  9375  0B07  082B               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  9376  0B08  00A5               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
  9377  0B09  082A               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
  9378  0B0A  00A4               	movwf	_TMR3_InterruptHandler^(0+128)
  9379  0B0B                     l481:
  9380  0B0B  0008               	return
  9381  0B0C                     __end_of_TMR3_SetInterruptHandler:
  9382                           
  9383                           	psect	text11
  9384  07F1                     __ptext11:	
  9385 ;; *************** function _TMR2_Initialize *****************
  9386 ;; Defined at:
  9387 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  9388 ;; Parameters:    Size  Location     Type
  9389 ;;		None
  9390 ;; Auto vars:     Size  Location     Type
  9391 ;;		None
  9392 ;; Return value:  Size  Location     Type
  9393 ;;                  1    wreg      void 
  9394 ;; Registers used:
  9395 ;;		wreg, status,2
  9396 ;; Tracked objects:
  9397 ;;		On entry : 0/0
  9398 ;;		On exit  : 0/0
  9399 ;;		Unchanged: 0/0
  9400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9405 ;;Total ram usage:        0 bytes
  9406 ;; Hardware stack levels used:    1
  9407 ;; Hardware stack levels required when called:    7
  9408 ;; This function calls:
  9409 ;;		Nothing
  9410 ;; This function is called by:
  9411 ;;		_SYSTEM_Initialize
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415                           
  9416                           ;psect for function _TMR2_Initialize
  9417  07F1                     _TMR2_Initialize:
  9418  07F1                     l3820:	
  9419                           ;incstack = 0
  9420                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9421                           
  9422                           
  9423                           ;tmr2.c: 67: T2CLKCON = 0x01;
  9424  07F1  3001               	movlw	1
  9425  07F2  0025               	movlb	5	; select bank5
  9426  07F3  0090               	movwf	16	;volatile
  9427  07F4                     l3822:
  9428                           
  9429                           ;tmr2.c: 70: T2HLT = 0x00;
  9430  07F4  018F               	clrf	15	;volatile
  9431  07F5                     l3824:
  9432                           
  9433                           ;tmr2.c: 73: T2RST = 0x00;
  9434  07F5  0191               	clrf	17	;volatile
  9435                           
  9436                           ;tmr2.c: 76: T2PR = 0xFF;
  9437  07F6  30FF               	movlw	255
  9438  07F7  008D               	movwf	13	;volatile
  9439  07F8                     l3826:
  9440                           
  9441                           ;tmr2.c: 79: T2TMR = 0x00;
  9442  07F8  018C               	clrf	12	;volatile
  9443  07F9                     l3828:
  9444                           
  9445                           ;tmr2.c: 82: PIR4bits.TMR2IF = 0;
  9446  07F9  002E               	movlb	14	; select bank14
  9447  07FA  1090               	bcf	16,1	;volatile
  9448  07FB                     l3830:
  9449                           
  9450                           ;tmr2.c: 85: T2CON = 0x80;
  9451  07FB  3080               	movlw	128
  9452  07FC  0025               	movlb	5	; select bank5
  9453  07FD  008E               	movwf	14	;volatile
  9454  07FE                     l749:
  9455  07FE  0008               	return
  9456  07FF                     __end_of_TMR2_Initialize:
  9457                           
  9458                           	psect	text12
  9459  0C9B                     __ptext12:	
  9460 ;; *************** function _TMR1_Initialize *****************
  9461 ;; Defined at:
  9462 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  9463 ;; Parameters:    Size  Location     Type
  9464 ;;		None
  9465 ;; Auto vars:     Size  Location     Type
  9466 ;;		None
  9467 ;; Return value:  Size  Location     Type
  9468 ;;                  1    wreg      void 
  9469 ;; Registers used:
  9470 ;;		wreg, status,2, status,0, pclath, cstack
  9471 ;; Tracked objects:
  9472 ;;		On entry : 0/0
  9473 ;;		On exit  : 0/0
  9474 ;;		Unchanged: 0/0
  9475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9480 ;;Total ram usage:        0 bytes
  9481 ;; Hardware stack levels used:    1
  9482 ;; Hardware stack levels required when called:    8
  9483 ;; This function calls:
  9484 ;;		_TMR1_SetInterruptHandler
  9485 ;; This function is called by:
  9486 ;;		_SYSTEM_Initialize
  9487 ;; This function uses a non-reentrant model
  9488 ;;
  9489                           
  9490                           
  9491                           ;psect for function _TMR1_Initialize
  9492  0C9B                     _TMR1_Initialize:
  9493  0C9B                     l3850:	
  9494                           ;incstack = 0
  9495                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9496                           
  9497                           
  9498                           ;tmr1.c: 69: T1GCON = 0x00;
  9499  0C9B  0024               	movlb	4	; select bank4
  9500  0C9C  018F               	clrf	15	;volatile
  9501                           
  9502                           ;tmr1.c: 72: T1GATE = 0x00;
  9503  0C9D  0190               	clrf	16	;volatile
  9504  0C9E                     l3852:
  9505                           
  9506                           ;tmr1.c: 75: T1CLK = 0x04;
  9507  0C9E  3004               	movlw	4
  9508  0C9F  0091               	movwf	17	;volatile
  9509  0CA0                     l3854:
  9510                           
  9511                           ;tmr1.c: 78: TMR1H = 0x86;
  9512  0CA0  3086               	movlw	134
  9513  0CA1  008D               	movwf	13	;volatile
  9514  0CA2                     l3856:
  9515                           
  9516                           ;tmr1.c: 81: TMR1L = 0xE8;
  9517  0CA2  30E8               	movlw	232
  9518  0CA3  008C               	movwf	12	;volatile
  9519  0CA4                     l3858:
  9520                           
  9521                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  9522  0CA4  080D               	movf	13,w	;volatile
  9523  0CA5  0021               	movlb	1	; select bank1
  9524  0CA6  00A9               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  9525  0CA7  0024               	movlb	4	; select bank4
  9526  0CA8  080C               	movf	12,w	;volatile
  9527  0CA9  0021               	movlb	1	; select bank1
  9528  0CAA  00A8               	movwf	_timer1ReloadVal^(0+128)	;volatile
  9529  0CAB                     l3860:
  9530                           
  9531                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
  9532  0CAB  002E               	movlb	14	; select bank14
  9533  0CAC  1010               	bcf	16,0	;volatile
  9534  0CAD                     l3862:
  9535                           
  9536                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
  9537  0CAD  141A               	bsf	26,0	;volatile
  9538  0CAE                     l3864:
  9539                           
  9540                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  9541  0CAE  3002               	movlw	low _TMR1_DefaultInterruptHandler
  9542  0CAF  0021               	movlb	1	; select bank1
  9543  0CB0  00AA               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  9544  0CB1  3000               	movlw	high _TMR1_DefaultInterruptHandler
  9545  0CB2  00AB               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9546  0CB3  318B  2300  318C   	fcall	_TMR1_SetInterruptHandler
  9547  0CB6                     l3866:
  9548                           
  9549                           ;tmr1.c: 96: T1CON = 0x01;
  9550  0CB6  3001               	movlw	1
  9551  0CB7  0024               	movlb	4	; select bank4
  9552  0CB8  008E               	movwf	14	;volatile
  9553  0CB9                     l387:
  9554  0CB9  0008               	return
  9555  0CBA                     __end_of_TMR1_Initialize:
  9556                           
  9557                           	psect	text13
  9558  0B00                     __ptext13:	
  9559 ;; *************** function _TMR1_SetInterruptHandler *****************
  9560 ;; Defined at:
  9561 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  9562 ;; Parameters:    Size  Location     Type
  9563 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  9564 ;;		 -> Clock_ISR(1), TMR1_DefaultInterruptHandler(1), 
  9565 ;; Auto vars:     Size  Location     Type
  9566 ;;		None
  9567 ;; Return value:  Size  Location     Type
  9568 ;;                  1    wreg      void 
  9569 ;; Registers used:
  9570 ;;		wreg
  9571 ;; Tracked objects:
  9572 ;;		On entry : 0/0
  9573 ;;		On exit  : 0/0
  9574 ;;		Unchanged: 0/0
  9575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9576 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9579 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9580 ;;Total ram usage:        2 bytes
  9581 ;; Hardware stack levels used:    1
  9582 ;; Hardware stack levels required when called:    7
  9583 ;; This function calls:
  9584 ;;		Nothing
  9585 ;; This function is called by:
  9586 ;;		_TMR1_Initialize
  9587 ;;		_main
  9588 ;; This function uses a non-reentrant model
  9589 ;;
  9590                           
  9591                           
  9592                           ;psect for function _TMR1_SetInterruptHandler
  9593  0B00                     _TMR1_SetInterruptHandler:
  9594  0B00                     l3528:	
  9595                           ;incstack = 0
  9596                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  9597                           
  9598                           
  9599                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
  9600  0B00  0021               	movlb	1	; select bank1
  9601  0B01  082B               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  9602  0B02  00A7               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  9603  0B03  082A               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
  9604  0B04  00A6               	movwf	_TMR1_InterruptHandler^(0+128)
  9605  0B05                     l417:
  9606  0B05  0008               	return
  9607  0B06                     __end_of_TMR1_SetInterruptHandler:
  9608                           
  9609                           	psect	text14
  9610  0B5C                     __ptext14:	
  9611 ;; *************** function _PWM6_Initialize *****************
  9612 ;; Defined at:
  9613 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  9614 ;; Parameters:    Size  Location     Type
  9615 ;;		None
  9616 ;; Auto vars:     Size  Location     Type
  9617 ;;		None
  9618 ;; Return value:  Size  Location     Type
  9619 ;;                  1    wreg      void 
  9620 ;; Registers used:
  9621 ;;		wreg, status,2, status,0
  9622 ;; Tracked objects:
  9623 ;;		On entry : 0/0
  9624 ;;		On exit  : 0/0
  9625 ;;		Unchanged: 0/0
  9626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9631 ;;Total ram usage:        0 bytes
  9632 ;; Hardware stack levels used:    1
  9633 ;; Hardware stack levels required when called:    7
  9634 ;; This function calls:
  9635 ;;		Nothing
  9636 ;; This function is called by:
  9637 ;;		_SYSTEM_Initialize
  9638 ;; This function uses a non-reentrant model
  9639 ;;
  9640                           
  9641                           
  9642                           ;psect for function _PWM6_Initialize
  9643  0B5C                     _PWM6_Initialize:
  9644  0B5C                     l3792:	
  9645                           ;incstack = 0
  9646                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  9647                           
  9648                           
  9649                           ;pwm6.c: 62: PWM6CON = 0x80;
  9650  0B5C  3080               	movlw	128
  9651  0B5D  0027               	movlb	7	; select bank7
  9652  0B5E  008E               	movwf	14	;volatile
  9653                           
  9654                           ;pwm6.c: 65: PWM6DCH = 0xFF;
  9655  0B5F  30FF               	movlw	255
  9656  0B60  008D               	movwf	13	;volatile
  9657                           
  9658                           ;pwm6.c: 68: PWM6DCL = 0xC0;
  9659  0B61  30C0               	movlw	192
  9660  0B62  008C               	movwf	12	;volatile
  9661  0B63                     l3794:
  9662                           
  9663                           ;pwm6.c: 71: CCPTMRS1bits.P6TSEL = 1;
  9664  0B63  0024               	movlb	4	; select bank4
  9665  0B64  081F               	movf	31,w	;volatile
  9666  0B65  39F3               	andlw	-13
  9667  0B66  3804               	iorlw	4
  9668  0B67  009F               	movwf	31	;volatile
  9669  0B68                     l719:
  9670  0B68  0008               	return
  9671  0B69                     __end_of_PWM6_Initialize:
  9672                           
  9673                           	psect	text15
  9674  0B33                     __ptext15:	
  9675 ;; *************** function _PMD_Initialize *****************
  9676 ;; Defined at:
  9677 ;;		line 77 in file "mcc_generated_files/mcc.c"
  9678 ;; Parameters:    Size  Location     Type
  9679 ;;		None
  9680 ;; Auto vars:     Size  Location     Type
  9681 ;;		None
  9682 ;; Return value:  Size  Location     Type
  9683 ;;                  1    wreg      void 
  9684 ;; Registers used:
  9685 ;;		status,2
  9686 ;; Tracked objects:
  9687 ;;		On entry : 0/0
  9688 ;;		On exit  : 0/0
  9689 ;;		Unchanged: 0/0
  9690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9695 ;;Total ram usage:        0 bytes
  9696 ;; Hardware stack levels used:    1
  9697 ;; Hardware stack levels required when called:    7
  9698 ;; This function calls:
  9699 ;;		Nothing
  9700 ;; This function is called by:
  9701 ;;		_SYSTEM_Initialize
  9702 ;; This function uses a non-reentrant model
  9703 ;;
  9704                           
  9705                           
  9706                           ;psect for function _PMD_Initialize
  9707  0B33                     _PMD_Initialize:
  9708  0B33                     l3782:	
  9709                           ;incstack = 0
  9710                           ; Regs used in _PMD_Initialize: [status,2]
  9711                           
  9712                           
  9713                           ;mcc.c: 80: PMD0 = 0x00;
  9714  0B33  002F               	movlb	15	; select bank15
  9715  0B34  0196               	clrf	22	;volatile
  9716                           
  9717                           ;mcc.c: 82: PMD1 = 0x00;
  9718  0B35  0197               	clrf	23	;volatile
  9719                           
  9720                           ;mcc.c: 84: PMD2 = 0x00;
  9721  0B36  0198               	clrf	24	;volatile
  9722                           
  9723                           ;mcc.c: 86: PMD3 = 0x00;
  9724  0B37  0199               	clrf	25	;volatile
  9725                           
  9726                           ;mcc.c: 88: PMD4 = 0x00;
  9727  0B38  019A               	clrf	26	;volatile
  9728                           
  9729                           ;mcc.c: 90: PMD5 = 0x00;
  9730  0B39  019B               	clrf	27	;volatile
  9731  0B3A                     l178:
  9732  0B3A  0008               	return
  9733  0B3B                     __end_of_PMD_Initialize:
  9734                           
  9735                           	psect	text16
  9736  0DA1                     __ptext16:	
  9737 ;; *************** function _PIN_MANAGER_Initialize *****************
  9738 ;; Defined at:
  9739 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  9740 ;; Parameters:    Size  Location     Type
  9741 ;;		None
  9742 ;; Auto vars:     Size  Location     Type
  9743 ;;		None
  9744 ;; Return value:  Size  Location     Type
  9745 ;;                  1    wreg      void 
  9746 ;; Registers used:
  9747 ;;		wreg, status,2
  9748 ;; Tracked objects:
  9749 ;;		On entry : 0/0
  9750 ;;		On exit  : 0/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9757 ;;Total ram usage:        0 bytes
  9758 ;; Hardware stack levels used:    1
  9759 ;; Hardware stack levels required when called:    7
  9760 ;; This function calls:
  9761 ;;		Nothing
  9762 ;; This function is called by:
  9763 ;;		_SYSTEM_Initialize
  9764 ;; This function uses a non-reentrant model
  9765 ;;
  9766                           
  9767                           
  9768                           ;psect for function _PIN_MANAGER_Initialize
  9769  0DA1                     _PIN_MANAGER_Initialize:
  9770  0DA1                     l3740:	
  9771                           ;incstack = 0
  9772                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9773                           
  9774                           
  9775                           ;pin_manager.c: 62: LATE = 0x00;
  9776  0DA1  0020               	movlb	0	; select bank0
  9777  0DA2  019A               	clrf	26	;volatile
  9778                           
  9779                           ;pin_manager.c: 63: LATD = 0x00;
  9780  0DA3  0199               	clrf	25	;volatile
  9781                           
  9782                           ;pin_manager.c: 64: LATA = 0x00;
  9783  0DA4  0196               	clrf	22	;volatile
  9784                           
  9785                           ;pin_manager.c: 65: LATB = 0x00;
  9786  0DA5  0197               	clrf	23	;volatile
  9787                           
  9788                           ;pin_manager.c: 66: LATC = 0x00;
  9789  0DA6  0198               	clrf	24	;volatile
  9790  0DA7                     l3742:
  9791                           
  9792                           ;pin_manager.c: 71: TRISE = 0x07;
  9793  0DA7  3007               	movlw	7
  9794  0DA8  0095               	movwf	21	;volatile
  9795  0DA9                     l3744:
  9796                           
  9797                           ;pin_manager.c: 72: TRISA = 0x0F;
  9798  0DA9  300F               	movlw	15
  9799  0DAA  0091               	movwf	17	;volatile
  9800  0DAB                     l3746:
  9801                           
  9802                           ;pin_manager.c: 73: TRISB = 0xFF;
  9803  0DAB  30FF               	movlw	255
  9804  0DAC  0092               	movwf	18	;volatile
  9805  0DAD                     l3748:
  9806                           
  9807                           ;pin_manager.c: 74: TRISC = 0xFF;
  9808  0DAD  30FF               	movlw	255
  9809  0DAE  0093               	movwf	19	;volatile
  9810  0DAF                     l3750:
  9811                           
  9812                           ;pin_manager.c: 75: TRISD = 0xFF;
  9813  0DAF  30FF               	movlw	255
  9814  0DB0  0094               	movwf	20	;volatile
  9815  0DB1                     l3752:
  9816                           
  9817                           ;pin_manager.c: 80: ANSELD = 0xFF;
  9818  0DB1  30FF               	movlw	255
  9819  0DB2  003E               	movlb	30	; select bank30
  9820  0DB3  00D9               	movwf	89	;volatile
  9821  0DB4                     l3754:
  9822                           
  9823                           ;pin_manager.c: 81: ANSELC = 0xC7;
  9824  0DB4  30C7               	movlw	199
  9825  0DB5  00CE               	movwf	78	;volatile
  9826  0DB6                     l3756:
  9827                           
  9828                           ;pin_manager.c: 82: ANSELB = 0xEF;
  9829  0DB6  30EF               	movlw	239
  9830  0DB7  00C3               	movwf	67	;volatile
  9831  0DB8                     l3758:
  9832                           
  9833                           ;pin_manager.c: 83: ANSELE = 0x07;
  9834  0DB8  3007               	movlw	7
  9835  0DB9  00E4               	movwf	100	;volatile
  9836  0DBA                     l3760:
  9837                           
  9838                           ;pin_manager.c: 84: ANSELA = 0x4F;
  9839  0DBA  304F               	movlw	79
  9840  0DBB  00B8               	movwf	56	;volatile
  9841                           
  9842                           ;pin_manager.c: 89: WPUD = 0x00;
  9843  0DBC  01DA               	clrf	90	;volatile
  9844                           
  9845                           ;pin_manager.c: 90: WPUE = 0x00;
  9846  0DBD  01E5               	clrf	101	;volatile
  9847                           
  9848                           ;pin_manager.c: 91: WPUB = 0x00;
  9849  0DBE  01C4               	clrf	68	;volatile
  9850                           
  9851                           ;pin_manager.c: 92: WPUA = 0x00;
  9852  0DBF  01B9               	clrf	57	;volatile
  9853                           
  9854                           ;pin_manager.c: 93: WPUC = 0x00;
  9855  0DC0  01CF               	clrf	79	;volatile
  9856                           
  9857                           ;pin_manager.c: 98: ODCONE = 0x00;
  9858  0DC1  01E6               	clrf	102	;volatile
  9859                           
  9860                           ;pin_manager.c: 99: ODCONA = 0x00;
  9861  0DC2  01BA               	clrf	58	;volatile
  9862                           
  9863                           ;pin_manager.c: 100: ODCONB = 0x00;
  9864  0DC3  01C5               	clrf	69	;volatile
  9865                           
  9866                           ;pin_manager.c: 101: ODCONC = 0x00;
  9867  0DC4  01D0               	clrf	80	;volatile
  9868                           
  9869                           ;pin_manager.c: 102: ODCOND = 0x00;
  9870  0DC5  01DB               	clrf	91	;volatile
  9871  0DC6                     l3762:
  9872                           
  9873                           ;pin_manager.c: 107: SLRCONA = 0xFF;
  9874  0DC6  30FF               	movlw	255
  9875  0DC7  00BB               	movwf	59	;volatile
  9876  0DC8                     l3764:
  9877                           
  9878                           ;pin_manager.c: 108: SLRCONB = 0xFF;
  9879  0DC8  30FF               	movlw	255
  9880  0DC9  00C6               	movwf	70	;volatile
  9881  0DCA                     l3766:
  9882                           
  9883                           ;pin_manager.c: 109: SLRCONC = 0xFF;
  9884  0DCA  30FF               	movlw	255
  9885  0DCB  00D1               	movwf	81	;volatile
  9886  0DCC                     l3768:
  9887                           
  9888                           ;pin_manager.c: 110: SLRCOND = 0xFF;
  9889  0DCC  30FF               	movlw	255
  9890  0DCD  00DC               	movwf	92	;volatile
  9891  0DCE                     l3770:
  9892                           
  9893                           ;pin_manager.c: 111: SLRCONE = 0x07;
  9894  0DCE  3007               	movlw	7
  9895  0DCF  00E7               	movwf	103	;volatile
  9896  0DD0                     l3772:
  9897                           
  9898                           ;pin_manager.c: 120: SSP1CLKPPS = 0x13;
  9899  0DD0  3013               	movlw	19
  9900  0DD1  003D               	movlb	29	; select bank29
  9901  0DD2  00C5               	movwf	69	;volatile
  9902  0DD3                     l3774:
  9903                           
  9904                           ;pin_manager.c: 121: RC3PPS = 0x14;
  9905  0DD3  3014               	movlw	20
  9906  0DD4  003E               	movlb	30	; select bank30
  9907  0DD5  00A3               	movwf	35	;volatile
  9908  0DD6                     l3776:
  9909                           
  9910                           ;pin_manager.c: 122: RC4PPS = 0x15;
  9911  0DD6  3015               	movlw	21
  9912  0DD7  00A4               	movwf	36	;volatile
  9913  0DD8                     l3778:
  9914                           
  9915                           ;pin_manager.c: 123: RA6PPS = 0x0E;
  9916  0DD8  300E               	movlw	14
  9917  0DD9  0096               	movwf	22	;volatile
  9918  0DDA                     l3780:
  9919                           
  9920                           ;pin_manager.c: 124: SSP1DATPPS = 0x14;
  9921  0DDA  3014               	movlw	20
  9922  0DDB  003D               	movlb	29	; select bank29
  9923  0DDC  00C6               	movwf	70	;volatile
  9924  0DDD                     l122:
  9925  0DDD  0008               	return
  9926  0DDE                     __end_of_PIN_MANAGER_Initialize:
  9927                           
  9928                           	psect	text17
  9929  0B3B                     __ptext17:	
  9930 ;; *************** function _OSCILLATOR_Initialize *****************
  9931 ;; Defined at:
  9932 ;;		line 63 in file "mcc_generated_files/mcc.c"
  9933 ;; Parameters:    Size  Location     Type
  9934 ;;		None
  9935 ;; Auto vars:     Size  Location     Type
  9936 ;;		None
  9937 ;; Return value:  Size  Location     Type
  9938 ;;                  1    wreg      void 
  9939 ;; Registers used:
  9940 ;;		wreg, status,2
  9941 ;; Tracked objects:
  9942 ;;		On entry : 0/0
  9943 ;;		On exit  : 0/0
  9944 ;;		Unchanged: 0/0
  9945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9950 ;;Total ram usage:        0 bytes
  9951 ;; Hardware stack levels used:    1
  9952 ;; Hardware stack levels required when called:    7
  9953 ;; This function calls:
  9954 ;;		Nothing
  9955 ;; This function is called by:
  9956 ;;		_SYSTEM_Initialize
  9957 ;; This function uses a non-reentrant model
  9958 ;;
  9959                           
  9960                           
  9961                           ;psect for function _OSCILLATOR_Initialize
  9962  0B3B                     _OSCILLATOR_Initialize:
  9963  0B3B                     l3784:	
  9964                           ;incstack = 0
  9965                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9966                           
  9967                           
  9968                           ;mcc.c: 66: OSCCON1 = 0x62;
  9969  0B3B  3062               	movlw	98
  9970  0B3C  0031               	movlb	17	; select bank17
  9971  0B3D  008D               	movwf	13	;volatile
  9972  0B3E                     l3786:
  9973                           
  9974                           ;mcc.c: 68: OSCCON3 = 0x00;
  9975  0B3E  018F               	clrf	15	;volatile
  9976  0B3F                     l3788:
  9977                           
  9978                           ;mcc.c: 70: OSCEN = 0x00;
  9979  0B3F  0191               	clrf	17	;volatile
  9980                           
  9981                           ;mcc.c: 72: OSCFRQ = 0x02;
  9982  0B40  3002               	movlw	2
  9983  0B41  0093               	movwf	19	;volatile
  9984  0B42                     l3790:
  9985                           
  9986                           ;mcc.c: 74: OSCTUNE = 0x00;
  9987  0B42  0192               	clrf	18	;volatile
  9988  0B43                     l175:
  9989  0B43  0008               	return
  9990  0B44                     __end_of_OSCILLATOR_Initialize:
  9991                           
  9992                           	psect	text18
  9993  0C2F                     __ptext18:	
  9994 ;; *************** function _ADCC_Initialize *****************
  9995 ;; Defined at:
  9996 ;;		line 63 in file "mcc_generated_files/adcc.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;		None
  9999 ;; Auto vars:     Size  Location     Type
 10000 ;;		None
 10001 ;; Return value:  Size  Location     Type
 10002 ;;                  1    wreg      void 
 10003 ;; Registers used:
 10004 ;;		wreg, status,2
 10005 ;; Tracked objects:
 10006 ;;		On entry : 0/0
 10007 ;;		On exit  : 0/0
 10008 ;;		Unchanged: 0/0
 10009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10014 ;;Total ram usage:        0 bytes
 10015 ;; Hardware stack levels used:    1
 10016 ;; Hardware stack levels required when called:    7
 10017 ;; This function calls:
 10018 ;;		Nothing
 10019 ;; This function is called by:
 10020 ;;		_SYSTEM_Initialize
 10021 ;; This function uses a non-reentrant model
 10022 ;;
 10023                           
 10024                           
 10025                           ;psect for function _ADCC_Initialize
 10026  0C2F                     _ADCC_Initialize:
 10027  0C2F                     l3796:	
 10028                           ;incstack = 0
 10029                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10030                           
 10031                           
 10032                           ;adcc.c: 67: ADLTHL = 0x00;
 10033  0C2F  0022               	movlb	2	; select bank2
 10034  0C30  018E               	clrf	14	;volatile
 10035                           
 10036                           ;adcc.c: 69: ADLTHH = 0x00;
 10037  0C31  018F               	clrf	15	;volatile
 10038                           
 10039                           ;adcc.c: 71: ADUTHL = 0x00;
 10040  0C32  0190               	clrf	16	;volatile
 10041                           
 10042                           ;adcc.c: 73: ADUTHH = 0x00;
 10043  0C33  0191               	clrf	17	;volatile
 10044                           
 10045                           ;adcc.c: 75: ADSTPTL = 0x00;
 10046  0C34  0192               	clrf	18	;volatile
 10047                           
 10048                           ;adcc.c: 77: ADSTPTH = 0x00;
 10049  0C35  0193               	clrf	19	;volatile
 10050                           
 10051                           ;adcc.c: 79: ADRPT = 0x00;
 10052  0C36  018D               	clrf	13	;volatile
 10053                           
 10054                           ;adcc.c: 81: ADPCH = 0x00;
 10055  0C37  0021               	movlb	1	; select bank1
 10056  0C38  019E               	clrf	30	;volatile
 10057                           
 10058                           ;adcc.c: 83: ADCAP = 0x00;
 10059  0C39  019B               	clrf	27	;volatile
 10060                           
 10061                           ;adcc.c: 85: ADCON1 = 0x00;
 10062  0C3A  0194               	clrf	20	;volatile
 10063                           
 10064                           ;adcc.c: 87: ADCON2 = 0x00;
 10065  0C3B  0195               	clrf	21	;volatile
 10066                           
 10067                           ;adcc.c: 89: ADCON3 = 0x00;
 10068  0C3C  0196               	clrf	22	;volatile
 10069                           
 10070                           ;adcc.c: 91: ADSTAT = 0x00;
 10071  0C3D  0197               	clrf	23	;volatile
 10072                           
 10073                           ;adcc.c: 93: ADREF = 0x00;
 10074  0C3E  019A               	clrf	26	;volatile
 10075                           
 10076                           ;adcc.c: 95: ADACT = 0x00;
 10077  0C3F  0199               	clrf	25	;volatile
 10078                           
 10079                           ;adcc.c: 97: ADCLK = 0x00;
 10080  0C40  0198               	clrf	24	;volatile
 10081  0C41                     l3798:
 10082                           
 10083                           ;adcc.c: 99: ADCON0 = 0x80;
 10084  0C41  3080               	movlw	128
 10085  0C42  0093               	movwf	19	;volatile
 10086  0C43                     l3800:
 10087                           
 10088                           ;adcc.c: 101: ADACQ = 0xFF;
 10089  0C43  30FF               	movlw	255
 10090  0C44  009D               	movwf	29	;volatile
 10091  0C45                     l563:
 10092  0C45  0008               	return
 10093  0C46                     __end_of_ADCC_Initialize:
 10094                           
 10095                           	psect	text19
 10096  0AEE                     __ptext19:	
 10097 ;; *************** function _PWM_Output_D4_Disable *****************
 10098 ;; Defined at:
 10099 ;;		line 228 in file "main.c"
 10100 ;; Parameters:    Size  Location     Type
 10101 ;;		None
 10102 ;; Auto vars:     Size  Location     Type
 10103 ;;		None
 10104 ;; Return value:  Size  Location     Type
 10105 ;;                  1    wreg      void 
 10106 ;; Registers used:
 10107 ;;		None
 10108 ;; Tracked objects:
 10109 ;;		On entry : 0/0
 10110 ;;		On exit  : 0/0
 10111 ;;		Unchanged: 0/0
 10112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10117 ;;Total ram usage:        0 bytes
 10118 ;; Hardware stack levels used:    1
 10119 ;; Hardware stack levels required when called:    7
 10120 ;; This function calls:
 10121 ;;		Nothing
 10122 ;; This function is called by:
 10123 ;;		_main
 10124 ;; This function uses a non-reentrant model
 10125 ;;
 10126                           
 10127                           
 10128                           ;psect for function _PWM_Output_D4_Disable
 10129  0AEE                     _PWM_Output_D4_Disable:
 10130  0AEE                     l4276:	
 10131                           ;incstack = 0
 10132                           ; Regs used in _PWM_Output_D4_Disable: []
 10133                           
 10134                           
 10135                           ;main.c: 229: PWM6EN = 0;
 10136  0AEE  0027               	movlb	7	; select bank7
 10137  0AEF  138E               	bcf	14,7	;volatile
 10138  0AF0                     l1090:
 10139  0AF0  0008               	return
 10140  0AF1                     __end_of_PWM_Output_D4_Disable:
 10141                           
 10142                           	psect	text20
 10143  0F8A                     __ptext20:	
 10144 ;; *************** function _LCDinit *****************
 10145 ;; Defined at:
 10146 ;;		line 155 in file "main.c"
 10147 ;; Parameters:    Size  Location     Type
 10148 ;;		None
 10149 ;; Auto vars:     Size  Location     Type
 10150 ;;		None
 10151 ;; Return value:  Size  Location     Type
 10152 ;;                  1    wreg      void 
 10153 ;; Registers used:
 10154 ;;		wreg, status,2, status,0, pclath, cstack
 10155 ;; Tracked objects:
 10156 ;;		On entry : 0/0
 10157 ;;		On exit  : 0/0
 10158 ;;		Unchanged: 0/0
 10159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10162 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10163 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10164 ;;Total ram usage:        1 bytes
 10165 ;; Hardware stack levels used:    1
 10166 ;; Hardware stack levels required when called:    9
 10167 ;; This function calls:
 10168 ;;		_LCDsend
 10169 ;;		_LCDsend2x4
 10170 ;; This function is called by:
 10171 ;;		_main
 10172 ;; This function uses a non-reentrant model
 10173 ;;
 10174                           
 10175                           
 10176                           ;psect for function _LCDinit
 10177  0F8A                     _LCDinit:
 10178  0F8A                     l4242:	
 10179                           ;incstack = 0
 10180                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 10181                           
 10182                           
 10183                           ;main.c: 157: _delay((unsigned long)((50)*(1000000/4000.0)));
 10184  0F8A  3011               	movlw	17
 10185  0F8B  0021               	movlb	1	; select bank1
 10186  0F8C  00B2               	movwf	??_LCDinit^(0+128)
 10187  0F8D  303A               	movlw	58
 10188  0F8E                     u4447:
 10189  0F8E  0B89               	decfsz	9,f
 10190  0F8F  2F8E               	goto	u4447
 10191  0F90  0BB2               	decfsz	??_LCDinit^(0+128),f
 10192  0F91  2F8E               	goto	u4447
 10193  0F92  0000               	nop
 10194  0F93                     l4244:
 10195                           
 10196                           ;main.c: 158: LCDsend(0x30);
 10197  0F93  3030               	movlw	48
 10198  0F94  318E  266F  318F   	fcall	_LCDsend
 10199  0F97                     l4246:
 10200                           
 10201                           ;main.c: 159: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 10202  0F97  3034               	movlw	52
 10203  0F98  318E  266F  318F   	fcall	_LCDsend
 10204  0F9B  3029               	movlw	41
 10205  0F9C                     u4457:
 10206  0F9C  0B89               	decfsz	9,f
 10207  0F9D  2F9C               	goto	u4457
 10208  0F9E  3200               	nop2
 10209  0F9F                     l4248:
 10210  0F9F  3030               	movlw	48
 10211  0FA0  318E  266F  318F   	fcall	_LCDsend
 10212  0FA3                     l4250:
 10213                           
 10214                           ;main.c: 160: _delay((unsigned long)((5)*(1000000/4000.0)));
 10215  0FA3  30FA               	movlw	250
 10216  0FA4                     u4467:
 10217  0FA4  3200               	nop2
 10218  0FA5  0B89               	decfsz	9,f
 10219  0FA6  2FA4               	goto	u4467
 10220                           
 10221                           ;main.c: 161: LCDsend(0x30);
 10222  0FA7  3030               	movlw	48
 10223  0FA8  318E  266F  318F   	fcall	_LCDsend
 10224                           
 10225                           ;main.c: 162: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 10226  0FAB  3034               	movlw	52
 10227  0FAC  318E  266F  318F   	fcall	_LCDsend
 10228  0FAF                     l4252:
 10229  0FAF  3029               	movlw	41
 10230  0FB0                     u4477:
 10231  0FB0  0B89               	decfsz	9,f
 10232  0FB1  2FB0               	goto	u4477
 10233  0FB2  3200               	nop2
 10234  0FB3                     l4254:
 10235  0FB3  3030               	movlw	48
 10236  0FB4  318E  266F  318F   	fcall	_LCDsend
 10237                           
 10238                           ;main.c: 163: _delay((unsigned long)((100)*(1000000/4000000.0)));
 10239  0FB7  3008               	movlw	8
 10240  0FB8                     u4487:
 10241  0FB8  0B89               	decfsz	9,f
 10242  0FB9  2FB8               	goto	u4487
 10243  0FBA  0000               	nop
 10244  0FBB                     l4256:
 10245                           
 10246                           ;main.c: 164: LCDsend(0x30);
 10247  0FBB  3030               	movlw	48
 10248  0FBC  318E  266F  318F   	fcall	_LCDsend
 10249  0FBF                     l4258:
 10250                           
 10251                           ;main.c: 165: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 10252  0FBF  3034               	movlw	52
 10253  0FC0  318E  266F  318F   	fcall	_LCDsend
 10254  0FC3  3029               	movlw	41
 10255  0FC4                     u4497:
 10256  0FC4  0B89               	decfsz	9,f
 10257  0FC5  2FC4               	goto	u4497
 10258  0FC6  3200               	nop2
 10259  0FC7                     l4260:
 10260  0FC7  3030               	movlw	48
 10261  0FC8  318E  266F  318F   	fcall	_LCDsend
 10262  0FCB                     l4262:
 10263                           
 10264                           ;main.c: 166: _delay((unsigned long)((100)*(1000000/4000000.0)));
 10265  0FCB  3008               	movlw	8
 10266  0FCC                     u4507:
 10267  0FCC  0B89               	decfsz	9,f
 10268  0FCD  2FCC               	goto	u4507
 10269  0FCE  0000               	nop
 10270                           
 10271                           ;main.c: 167: LCDsend(0x20);
 10272  0FCF  3020               	movlw	32
 10273  0FD0  318E  266F  318F   	fcall	_LCDsend
 10274                           
 10275                           ;main.c: 168: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
 10276  0FD3  3024               	movlw	36
 10277  0FD4  318E  266F  318F   	fcall	_LCDsend
 10278  0FD7                     l4264:
 10279  0FD7  3029               	movlw	41
 10280  0FD8                     u4517:
 10281  0FD8  0B89               	decfsz	9,f
 10282  0FD9  2FD8               	goto	u4517
 10283  0FDA  3200               	nop2
 10284  0FDB                     l4266:
 10285  0FDB  3020               	movlw	32
 10286  0FDC  318E  266F  318F   	fcall	_LCDsend
 10287                           
 10288                           ;main.c: 169: _delay((unsigned long)((5)*(1000000/4000.0)));
 10289  0FDF  30FA               	movlw	250
 10290  0FE0                     u4527:
 10291  0FE0  3200               	nop2
 10292  0FE1  0B89               	decfsz	9,f
 10293  0FE2  2FE0               	goto	u4527
 10294  0FE3                     l4268:
 10295                           
 10296                           ;main.c: 171: LCDsend2x4(0x28, 0);
 10297  0FE3  0021               	movlb	1	; select bank1
 10298  0FE4  01AC               	clrf	LCDsend2x4@mode^(0+128)
 10299  0FE5  3028               	movlw	40
 10300  0FE6  3184  24DF  318F   	fcall	_LCDsend2x4
 10301  0FE9                     l4270:
 10302                           
 10303                           ;main.c: 172: LCDsend2x4(0x06, 0);
 10304  0FE9  0021               	movlb	1	; select bank1
 10305  0FEA  01AC               	clrf	LCDsend2x4@mode^(0+128)
 10306  0FEB  3006               	movlw	6
 10307  0FEC  3184  24DF  318F   	fcall	_LCDsend2x4
 10308  0FEF                     l4272:
 10309                           
 10310                           ;main.c: 173: LCDsend2x4(0x0f, 0);
 10311  0FEF  0021               	movlb	1	; select bank1
 10312  0FF0  01AC               	clrf	LCDsend2x4@mode^(0+128)
 10313  0FF1  300F               	movlw	15
 10314  0FF2  3184  24DF  318F   	fcall	_LCDsend2x4
 10315  0FF5                     l4274:
 10316                           
 10317                           ;main.c: 174: LCDsend2x4(0x01, 0);
 10318  0FF5  0021               	movlb	1	; select bank1
 10319  0FF6  01AC               	clrf	LCDsend2x4@mode^(0+128)
 10320  0FF7  3001               	movlw	1
 10321  0FF8  3184  24DF  318F   	fcall	_LCDsend2x4
 10322                           
 10323                           ;main.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
 10324  0FFB  30A6               	movlw	166
 10325  0FFC                     u4537:
 10326  0FFC  0B89               	decfsz	9,f
 10327  0FFD  2FFC               	goto	u4537
 10328  0FFE  3200               	nop2
 10329  0FFF                     l1059:
 10330  0FFF  0008               	return
 10331  1000                     __end_of_LCDinit:
 10332                           
 10333                           	psect	text21
 10334  04DF                     __ptext21:	
 10335 ;; *************** function _LCDsend2x4 *****************
 10336 ;; Defined at:
 10337 ;;		line 132 in file "main.c"
 10338 ;; Parameters:    Size  Location     Type
 10339 ;;  c               1    wreg     unsigned char 
 10340 ;;  mode            1    2[BANK1 ] unsigned char 
 10341 ;; Auto vars:     Size  Location     Type
 10342 ;;  c               1    5[BANK1 ] unsigned char 
 10343 ;;  lc              1    7[BANK1 ] unsigned char 
 10344 ;;  hc              1    6[BANK1 ] unsigned char 
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  1    wreg      void 
 10347 ;; Registers used:
 10348 ;;		wreg, status,2, status,0, pclath, cstack
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10354 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10355 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10356 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10357 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10358 ;;Total ram usage:        6 bytes
 10359 ;; Hardware stack levels used:    1
 10360 ;; Hardware stack levels required when called:    8
 10361 ;; This function calls:
 10362 ;;		_WriteI2C
 10363 ;; This function is called by:
 10364 ;;		_LCDinit
 10365 ;; This function uses a non-reentrant model
 10366 ;;
 10367                           
 10368                           
 10369                           ;psect for function _LCDsend2x4
 10370  04DF                     _LCDsend2x4:
 10371                           
 10372                           ;incstack = 0
 10373                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 10374                           ;LCDsend2x4@c stored from wreg
 10375  04DF  0021               	movlb	1	; select bank1
 10376  04E0  00AF               	movwf	LCDsend2x4@c^(0+128)
 10377  04E1                     l3926:
 10378                           
 10379                           ;main.c: 134: unsigned char hc;;main.c: 135: unsigned char lc;;main.c: 137: hc = c & 0xf
      +                          0;
 10380  04E1  082F               	movf	LCDsend2x4@c^(0+128),w
 10381  04E2  39F0               	andlw	240
 10382  04E3  00AD               	movwf	??_LCDsend2x4^(0+128)
 10383  04E4  082D               	movf	??_LCDsend2x4^(0+128),w
 10384  04E5  00B0               	movwf	LCDsend2x4@hc^(0+128)
 10385  04E6                     l3928:
 10386                           
 10387                           ;main.c: 138: lc = (c << 4) & 0xf0;
 10388  04E6  082F               	movf	LCDsend2x4@c^(0+128),w
 10389  04E7  00AD               	movwf	??_LCDsend2x4^(0+128)
 10390  04E8  3003               	movlw	3
 10391  04E9                     u3315:
 10392  04E9  35AD               	lslf	??_LCDsend2x4^(0+128),f
 10393  04EA  3EFF               	addlw	-1
 10394  04EB  1D03               	skipz
 10395  04EC  2CE9               	goto	u3315
 10396  04ED  352D               	lslf	??_LCDsend2x4^(0+128),w
 10397  04EE  39F0               	andlw	240
 10398  04EF  00AE               	movwf	(??_LCDsend2x4+1)^(0+128)
 10399  04F0  082E               	movf	(??_LCDsend2x4+1)^(0+128),w
 10400  04F1  00B1               	movwf	LCDsend2x4@lc^(0+128)
 10401  04F2                     l3930:	
 10402                           ;main.c: 140: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10403                           
 10404  04F2  0023               	movlb	3	; select bank3
 10405  04F3  0C0F               	rrf	15,w	;volatile
 10406  04F4  0C89               	rrf	9,f
 10407  04F5  3901               	andlw	1
 10408  04F6  0021               	movlb	1	; select bank1
 10409  04F7  00AD               	movwf	??_LCDsend2x4^(0+128)
 10410  04F8  0023               	movlb	3	; select bank3
 10411  04F9  0811               	movf	17,w	;volatile
 10412  04FA  391F               	andlw	31
 10413  04FB  0021               	movlb	1	; select bank1
 10414  04FC  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10415  04FD  1D03               	btfss	3,2
 10416  04FE  2D00               	goto	u3321
 10417  04FF  2D01               	goto	u3320
 10418  0500                     u3321:
 10419  0500  2CF2               	goto	l3930
 10420  0501                     u3320:
 10421  0501                     l1025:
 10422                           
 10423                           ;main.c: 141: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 10424  0501  0023               	movlb	3	; select bank3
 10425  0502  1411               	bsf	17,0	;volatile
 10426  0503                     l1026:
 10427  0503  1811               	btfsc	17,0	;volatile
 10428  0504  2D06               	goto	u3331
 10429  0505  2D07               	goto	u3330
 10430  0506                     u3331:
 10431  0506  2D03               	goto	l1026
 10432  0507                     u3330:
 10433  0507                     l3932:
 10434  0507  0023               	movlb	3	; select bank3
 10435  0508  0C0F               	rrf	15,w	;volatile
 10436  0509  0C89               	rrf	9,f
 10437  050A  3901               	andlw	1
 10438  050B  0021               	movlb	1	; select bank1
 10439  050C  00AD               	movwf	??_LCDsend2x4^(0+128)
 10440  050D  0023               	movlb	3	; select bank3
 10441  050E  0811               	movf	17,w	;volatile
 10442  050F  391F               	andlw	31
 10443  0510  0021               	movlb	1	; select bank1
 10444  0511  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10445  0512  1D03               	btfss	3,2
 10446  0513  2D15               	goto	u3341
 10447  0514  2D16               	goto	u3340
 10448  0515                     u3341:
 10449  0515  2D07               	goto	l3932
 10450  0516                     u3340:
 10451  0516                     l3934:
 10452                           
 10453                           ;main.c: 142: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10454  0516  304E               	movlw	78
 10455  0517  318E  26C2  3184   	fcall	_WriteI2C
 10456  051A                     l3936:
 10457  051A  0023               	movlb	3	; select bank3
 10458  051B  0C0F               	rrf	15,w	;volatile
 10459  051C  0C89               	rrf	9,f
 10460  051D  3901               	andlw	1
 10461  051E  0021               	movlb	1	; select bank1
 10462  051F  00AD               	movwf	??_LCDsend2x4^(0+128)
 10463  0520  0023               	movlb	3	; select bank3
 10464  0521  0811               	movf	17,w	;volatile
 10465  0522  391F               	andlw	31
 10466  0523  0021               	movlb	1	; select bank1
 10467  0524  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10468  0525  1D03               	btfss	3,2
 10469  0526  2D28               	goto	u3351
 10470  0527  2D29               	goto	u3350
 10471  0528                     u3351:
 10472  0528  2D1A               	goto	l3936
 10473  0529                     u3350:
 10474  0529                     l3938:
 10475                           
 10476                           ;main.c: 143: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10477  0529  0830               	movf	LCDsend2x4@hc^(0+128),w
 10478  052A  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 10479  052B  3808               	iorlw	8
 10480  052C  318E  26C2  3184   	fcall	_WriteI2C
 10481  052F                     l3940:
 10482  052F  0023               	movlb	3	; select bank3
 10483  0530  0C0F               	rrf	15,w	;volatile
 10484  0531  0C89               	rrf	9,f
 10485  0532  3901               	andlw	1
 10486  0533  0021               	movlb	1	; select bank1
 10487  0534  00AD               	movwf	??_LCDsend2x4^(0+128)
 10488  0535  0023               	movlb	3	; select bank3
 10489  0536  0811               	movf	17,w	;volatile
 10490  0537  391F               	andlw	31
 10491  0538  0021               	movlb	1	; select bank1
 10492  0539  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10493  053A  1D03               	btfss	3,2
 10494  053B  2D3D               	goto	u3361
 10495  053C  2D3E               	goto	u3360
 10496  053D                     u3361:
 10497  053D  2D2F               	goto	l3940
 10498  053E                     u3360:
 10499  053E                     l3942:
 10500                           
 10501                           ;main.c: 144: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 10502  053E  0830               	movf	LCDsend2x4@hc^(0+128),w
 10503  053F  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 10504  0540  380C               	iorlw	12
 10505  0541  318E  26C2  3184   	fcall	_WriteI2C
 10506  0544                     l3944:
 10507  0544  0023               	movlb	3	; select bank3
 10508  0545  0C0F               	rrf	15,w	;volatile
 10509  0546  0C89               	rrf	9,f
 10510  0547  3901               	andlw	1
 10511  0548  0021               	movlb	1	; select bank1
 10512  0549  00AD               	movwf	??_LCDsend2x4^(0+128)
 10513  054A  0023               	movlb	3	; select bank3
 10514  054B  0811               	movf	17,w	;volatile
 10515  054C  391F               	andlw	31
 10516  054D  0021               	movlb	1	; select bank1
 10517  054E  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10518  054F  1D03               	btfss	3,2
 10519  0550  2D52               	goto	u3371
 10520  0551  2D53               	goto	u3370
 10521  0552                     u3371:
 10522  0552  2D44               	goto	l3944
 10523  0553                     u3370:
 10524  0553                     l1040:
 10525  0553                     l3946:	
 10526                           ;main.c: 145: _delay((unsigned long)((1)*(1000000/4000000.0)));
 10527                           
 10528                           
 10529                           ;main.c: 146: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10530  0553  0021               	movlb	1	; select bank1
 10531  0554  0830               	movf	LCDsend2x4@hc^(0+128),w
 10532  0555  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 10533  0556  3808               	iorlw	8
 10534  0557  318E  26C2  3184   	fcall	_WriteI2C
 10535  055A                     l3948:
 10536  055A  0023               	movlb	3	; select bank3
 10537  055B  0C0F               	rrf	15,w	;volatile
 10538  055C  0C89               	rrf	9,f
 10539  055D  3901               	andlw	1
 10540  055E  0021               	movlb	1	; select bank1
 10541  055F  00AD               	movwf	??_LCDsend2x4^(0+128)
 10542  0560  0023               	movlb	3	; select bank3
 10543  0561  0811               	movf	17,w	;volatile
 10544  0562  391F               	andlw	31
 10545  0563  0021               	movlb	1	; select bank1
 10546  0564  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10547  0565  1D03               	btfss	3,2
 10548  0566  2D68               	goto	u3381
 10549  0567  2D69               	goto	u3380
 10550  0568                     u3381:
 10551  0568  2D5A               	goto	l3948
 10552  0569                     u3380:
 10553  0569                     l3950:
 10554                           
 10555                           ;main.c: 147: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10556  0569  0831               	movf	LCDsend2x4@lc^(0+128),w
 10557  056A  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 10558  056B  3808               	iorlw	8
 10559  056C  318E  26C2  3184   	fcall	_WriteI2C
 10560  056F                     l3952:
 10561  056F  0023               	movlb	3	; select bank3
 10562  0570  0C0F               	rrf	15,w	;volatile
 10563  0571  0C89               	rrf	9,f
 10564  0572  3901               	andlw	1
 10565  0573  0021               	movlb	1	; select bank1
 10566  0574  00AD               	movwf	??_LCDsend2x4^(0+128)
 10567  0575  0023               	movlb	3	; select bank3
 10568  0576  0811               	movf	17,w	;volatile
 10569  0577  391F               	andlw	31
 10570  0578  0021               	movlb	1	; select bank1
 10571  0579  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10572  057A  1D03               	btfss	3,2
 10573  057B  2D7D               	goto	u3391
 10574  057C  2D7E               	goto	u3390
 10575  057D                     u3391:
 10576  057D  2D6F               	goto	l3952
 10577  057E                     u3390:
 10578  057E                     l3954:
 10579                           
 10580                           ;main.c: 148: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 10581  057E  0831               	movf	LCDsend2x4@lc^(0+128),w
 10582  057F  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 10583  0580  380C               	iorlw	12
 10584  0581  318E  26C2  3184   	fcall	_WriteI2C
 10585  0584                     l3956:
 10586  0584  0023               	movlb	3	; select bank3
 10587  0585  0C0F               	rrf	15,w	;volatile
 10588  0586  0C89               	rrf	9,f
 10589  0587  3901               	andlw	1
 10590  0588  0021               	movlb	1	; select bank1
 10591  0589  00AD               	movwf	??_LCDsend2x4^(0+128)
 10592  058A  0023               	movlb	3	; select bank3
 10593  058B  0811               	movf	17,w	;volatile
 10594  058C  391F               	andlw	31
 10595  058D  0021               	movlb	1	; select bank1
 10596  058E  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10597  058F  1D03               	btfss	3,2
 10598  0590  2D92               	goto	u3401
 10599  0591  2D93               	goto	u3400
 10600  0592                     u3401:
 10601  0592  2D84               	goto	l3956
 10602  0593                     u3400:
 10603  0593                     l1049:
 10604  0593                     l3958:	
 10605                           ;main.c: 149: _delay((unsigned long)((1)*(1000000/4000000.0)));
 10606                           
 10607                           
 10608                           ;main.c: 150: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10609  0593  0021               	movlb	1	; select bank1
 10610  0594  0831               	movf	LCDsend2x4@lc^(0+128),w
 10611  0595  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 10612  0596  3808               	iorlw	8
 10613  0597  318E  26C2  3184   	fcall	_WriteI2C
 10614  059A                     l3960:
 10615  059A  0023               	movlb	3	; select bank3
 10616  059B  0C0F               	rrf	15,w	;volatile
 10617  059C  0C89               	rrf	9,f
 10618  059D  3901               	andlw	1
 10619  059E  0021               	movlb	1	; select bank1
 10620  059F  00AD               	movwf	??_LCDsend2x4^(0+128)
 10621  05A0  0023               	movlb	3	; select bank3
 10622  05A1  0811               	movf	17,w	;volatile
 10623  05A2  391F               	andlw	31
 10624  05A3  0021               	movlb	1	; select bank1
 10625  05A4  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10626  05A5  1D03               	btfss	3,2
 10627  05A6  2DA8               	goto	u3411
 10628  05A7  2DA9               	goto	u3410
 10629  05A8                     u3411:
 10630  05A8  2D9A               	goto	l3960
 10631  05A9                     u3410:
 10632  05A9                     l1052:
 10633                           
 10634                           ;main.c: 151: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 10635  05A9  0023               	movlb	3	; select bank3
 10636  05AA  1511               	bsf	17,2	;volatile
 10637  05AB                     l1053:
 10638  05AB  1911               	btfsc	17,2	;volatile
 10639  05AC  2DAE               	goto	u3421
 10640  05AD  2DAF               	goto	u3420
 10641  05AE                     u3421:
 10642  05AE  2DAB               	goto	l1053
 10643  05AF                     u3420:
 10644  05AF                     l3962:
 10645                           
 10646                           ;main.c: 152: _delay((unsigned long)((50)*(1000000/4000000.0)));
 10647  05AF  3004               	movlw	4
 10648  05B0                     u4547:
 10649  05B0  0B89               	decfsz	9,f
 10650  05B1  2DB0               	goto	u4547
 10651  05B2                     l1056:
 10652  05B2  0008               	return
 10653  05B3                     __end_of_LCDsend2x4:
 10654                           
 10655                           	psect	text22
 10656  0E6F                     __ptext22:	
 10657 ;; *************** function _LCDsend *****************
 10658 ;; Defined at:
 10659 ;;		line 93 in file "main.c"
 10660 ;; Parameters:    Size  Location     Type
 10661 ;;  c               1    wreg     unsigned char 
 10662 ;; Auto vars:     Size  Location     Type
 10663 ;;  c               1    3[BANK1 ] unsigned char 
 10664 ;; Return value:  Size  Location     Type
 10665 ;;                  1    wreg      void 
 10666 ;; Registers used:
 10667 ;;		wreg, status,2, status,0, pclath, cstack
 10668 ;; Tracked objects:
 10669 ;;		On entry : 0/0
 10670 ;;		On exit  : 0/0
 10671 ;;		Unchanged: 0/0
 10672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10674 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10675 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10676 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10677 ;;Total ram usage:        2 bytes
 10678 ;; Hardware stack levels used:    1
 10679 ;; Hardware stack levels required when called:    8
 10680 ;; This function calls:
 10681 ;;		_WriteI2C
 10682 ;; This function is called by:
 10683 ;;		_LCDinit
 10684 ;; This function uses a non-reentrant model
 10685 ;;
 10686                           
 10687                           
 10688                           ;psect for function _LCDsend
 10689  0E6F                     _LCDsend:
 10690                           
 10691                           ;incstack = 0
 10692                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 10693                           ;LCDsend@c stored from wreg
 10694  0E6F  0021               	movlb	1	; select bank1
 10695  0E70  00AD               	movwf	LCDsend@c^(0+128)
 10696  0E71                     l3912:
 10697  0E71                     l3914:	
 10698                           ;main.c: 95: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10699                           
 10700  0E71  0023               	movlb	3	; select bank3
 10701  0E72  0C0F               	rrf	15,w	;volatile
 10702  0E73  0C89               	rrf	9,f
 10703  0E74  3901               	andlw	1
 10704  0E75  0021               	movlb	1	; select bank1
 10705  0E76  00AC               	movwf	??_LCDsend^(0+128)
 10706  0E77  0023               	movlb	3	; select bank3
 10707  0E78  0811               	movf	17,w	;volatile
 10708  0E79  391F               	andlw	31
 10709  0E7A  0021               	movlb	1	; select bank1
 10710  0E7B  042C               	iorwf	??_LCDsend^(0+128),w
 10711  0E7C  1D03               	btfss	3,2
 10712  0E7D  2E7F               	goto	u3251
 10713  0E7E  2E80               	goto	u3250
 10714  0E7F                     u3251:
 10715  0E7F  2E71               	goto	l3914
 10716  0E80                     u3250:
 10717  0E80                     l923:
 10718                           
 10719                           ;main.c: 96: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 10720  0E80  0023               	movlb	3	; select bank3
 10721  0E81  1411               	bsf	17,0	;volatile
 10722  0E82                     l924:
 10723  0E82  1811               	btfsc	17,0	;volatile
 10724  0E83  2E85               	goto	u3261
 10725  0E84  2E86               	goto	u3260
 10726  0E85                     u3261:
 10727  0E85  2E82               	goto	l924
 10728  0E86                     u3260:
 10729  0E86                     l3916:
 10730  0E86  0023               	movlb	3	; select bank3
 10731  0E87  0C0F               	rrf	15,w	;volatile
 10732  0E88  0C89               	rrf	9,f
 10733  0E89  3901               	andlw	1
 10734  0E8A  0021               	movlb	1	; select bank1
 10735  0E8B  00AC               	movwf	??_LCDsend^(0+128)
 10736  0E8C  0023               	movlb	3	; select bank3
 10737  0E8D  0811               	movf	17,w	;volatile
 10738  0E8E  391F               	andlw	31
 10739  0E8F  0021               	movlb	1	; select bank1
 10740  0E90  042C               	iorwf	??_LCDsend^(0+128),w
 10741  0E91  1D03               	btfss	3,2
 10742  0E92  2E94               	goto	u3271
 10743  0E93  2E95               	goto	u3270
 10744  0E94                     u3271:
 10745  0E94  2E86               	goto	l3916
 10746  0E95                     u3270:
 10747  0E95                     l3918:
 10748                           
 10749                           ;main.c: 97: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10750  0E95  304E               	movlw	78
 10751  0E96  318E  26C2  318E   	fcall	_WriteI2C
 10752  0E99                     l3920:
 10753  0E99  0023               	movlb	3	; select bank3
 10754  0E9A  0C0F               	rrf	15,w	;volatile
 10755  0E9B  0C89               	rrf	9,f
 10756  0E9C  3901               	andlw	1
 10757  0E9D  0021               	movlb	1	; select bank1
 10758  0E9E  00AC               	movwf	??_LCDsend^(0+128)
 10759  0E9F  0023               	movlb	3	; select bank3
 10760  0EA0  0811               	movf	17,w	;volatile
 10761  0EA1  391F               	andlw	31
 10762  0EA2  0021               	movlb	1	; select bank1
 10763  0EA3  042C               	iorwf	??_LCDsend^(0+128),w
 10764  0EA4  1D03               	btfss	3,2
 10765  0EA5  2EA7               	goto	u3281
 10766  0EA6  2EA8               	goto	u3280
 10767  0EA7                     u3281:
 10768  0EA7  2E99               	goto	l3920
 10769  0EA8                     u3280:
 10770  0EA8                     l3922:
 10771                           
 10772                           ;main.c: 98: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10773  0EA8  082D               	movf	LCDsend@c^(0+128),w
 10774  0EA9  318E  26C2  318E   	fcall	_WriteI2C
 10775  0EAC                     l3924:
 10776  0EAC  0023               	movlb	3	; select bank3
 10777  0EAD  0C0F               	rrf	15,w	;volatile
 10778  0EAE  0C89               	rrf	9,f
 10779  0EAF  3901               	andlw	1
 10780  0EB0  0021               	movlb	1	; select bank1
 10781  0EB1  00AC               	movwf	??_LCDsend^(0+128)
 10782  0EB2  0023               	movlb	3	; select bank3
 10783  0EB3  0811               	movf	17,w	;volatile
 10784  0EB4  391F               	andlw	31
 10785  0EB5  0021               	movlb	1	; select bank1
 10786  0EB6  042C               	iorwf	??_LCDsend^(0+128),w
 10787  0EB7  1D03               	btfss	3,2
 10788  0EB8  2EBA               	goto	u3291
 10789  0EB9  2EBB               	goto	u3290
 10790  0EBA                     u3291:
 10791  0EBA  2EAC               	goto	l3924
 10792  0EBB                     u3290:
 10793  0EBB                     l935:
 10794                           
 10795                           ;main.c: 99: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 10796  0EBB  0023               	movlb	3	; select bank3
 10797  0EBC  1511               	bsf	17,2	;volatile
 10798  0EBD                     l936:
 10799  0EBD  1911               	btfsc	17,2	;volatile
 10800  0EBE  2EC0               	goto	u3301
 10801  0EBF  2EC1               	goto	u3300
 10802  0EC0                     u3301:
 10803  0EC0  2EBD               	goto	l936
 10804  0EC1                     u3300:
 10805  0EC1                     l939:
 10806  0EC1  0008               	return
 10807  0EC2                     __end_of_LCDsend:
 10808                           
 10809                           	psect	text23
 10810  0EC2                     __ptext23:	
 10811 ;; *************** function _WriteI2C *****************
 10812 ;; Defined at:
 10813 ;;		line 47 in file "I2C/i2c.c"
 10814 ;; Parameters:    Size  Location     Type
 10815 ;;  data_out        1    wreg     unsigned char 
 10816 ;; Auto vars:     Size  Location     Type
 10817 ;;  data_out        1    1[BANK1 ] unsigned char 
 10818 ;; Return value:  Size  Location     Type
 10819 ;;                  1    wreg      char 
 10820 ;; Registers used:
 10821 ;;		wreg, status,2, status,0
 10822 ;; Tracked objects:
 10823 ;;		On entry : 0/0
 10824 ;;		On exit  : 0/0
 10825 ;;		Unchanged: 0/0
 10826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10828 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10829 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10830 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10831 ;;Total ram usage:        2 bytes
 10832 ;; Hardware stack levels used:    1
 10833 ;; Hardware stack levels required when called:    7
 10834 ;; This function calls:
 10835 ;;		Nothing
 10836 ;; This function is called by:
 10837 ;;		_LCDsend
 10838 ;;		_LCDsend2x4
 10839 ;;		_LCDrecv
 10840 ;; This function uses a non-reentrant model
 10841 ;;
 10842                           
 10843                           
 10844                           ;psect for function _WriteI2C
 10845  0EC2                     _WriteI2C:
 10846                           
 10847                           ;incstack = 0
 10848                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 10849                           ;WriteI2C@data_out stored from wreg
 10850  0EC2  0021               	movlb	1	; select bank1
 10851  0EC3  00AB               	movwf	WriteI2C@data_out^(0+128)
 10852  0EC4                     l3498:
 10853                           
 10854                           ;i2c.c: 49: SSP1BUF = data_out;
 10855  0EC4  082B               	movf	WriteI2C@data_out^(0+128),w
 10856  0EC5  0023               	movlb	3	; select bank3
 10857  0EC6  008C               	movwf	12	;volatile
 10858  0EC7                     l3500:
 10859                           
 10860                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 10861  0EC7  1F90               	btfss	16,7	;volatile
 10862  0EC8  2ECA               	goto	u2651
 10863  0EC9  2ECB               	goto	u2650
 10864  0ECA                     u2651:
 10865  0ECA  2ECC               	goto	l3506
 10866  0ECB                     u2650:
 10867  0ECB  2F1B               	goto	l30
 10868  0ECC                     l3506:
 10869                           
 10870                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 10871  0ECC  300F               	movlw	15
 10872  0ECD  0510               	andwf	16,w	;volatile
 10873  0ECE  0021               	movlb	1	; select bank1
 10874  0ECF  00AA               	movwf	??_WriteI2C^(0+128)
 10875  0ED0  3008               	movlw	8
 10876  0ED1  062A               	xorwf	??_WriteI2C^(0+128),w
 10877  0ED2  1903               	btfsc	3,2
 10878  0ED3  2ED5               	goto	u2661
 10879  0ED4  2ED6               	goto	u2660
 10880  0ED5                     u2661:
 10881  0ED5  2EEF               	goto	l3518
 10882  0ED6                     u2660:
 10883  0ED6                     l3508:
 10884  0ED6  300F               	movlw	15
 10885  0ED7  0023               	movlb	3	; select bank3
 10886  0ED8  0510               	andwf	16,w	;volatile
 10887  0ED9  0021               	movlb	1	; select bank1
 10888  0EDA  00AA               	movwf	??_WriteI2C^(0+128)
 10889  0EDB  300B               	movlw	11
 10890  0EDC  062A               	xorwf	??_WriteI2C^(0+128),w
 10891  0EDD  1903               	btfsc	3,2
 10892  0EDE  2EE0               	goto	u2671
 10893  0EDF  2EE1               	goto	u2670
 10894  0EE0                     u2671:
 10895  0EE0  2EEF               	goto	l3518
 10896  0EE1                     u2670:
 10897  0EE1                     l3510:
 10898                           
 10899                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 10900  0EE1  0023               	movlb	3	; select bank3
 10901  0EE2  1610               	bsf	16,4	;volatile
 10902  0EE3                     l33:	
 10903                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 10904                           
 10905  0EE3  002E               	movlb	14	; select bank14
 10906  0EE4  1C0F               	btfss	15,0	;volatile
 10907  0EE5  2EE7               	goto	u2681
 10908  0EE6  2EE8               	goto	u2680
 10909  0EE7                     u2681:
 10910  0EE7  2EE3               	goto	l33
 10911  0EE8                     u2680:
 10912  0EE8                     l35:
 10913                           
 10914                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 10915  0EE8  0023               	movlb	3	; select bank3
 10916  0EE9  190F               	btfsc	15,2	;volatile
 10917  0EEA  2EEC               	goto	u2691
 10918  0EEB  2EED               	goto	u2690
 10919  0EEC                     u2691:
 10920  0EEC  2F1B               	goto	l30
 10921  0EED                     u2690:
 10922  0EED                     l3512:
 10923  0EED  080F               	movf	15,w	;volatile
 10924  0EEE  2F1B               	goto	l30
 10925  0EEF                     l3518:
 10926                           
 10927                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 10928  0EEF  300F               	movlw	15
 10929  0EF0  0023               	movlb	3	; select bank3
 10930  0EF1  0510               	andwf	16,w	;volatile
 10931  0EF2  0021               	movlb	1	; select bank1
 10932  0EF3  00AA               	movwf	??_WriteI2C^(0+128)
 10933  0EF4  3008               	movlw	8
 10934  0EF5  062A               	xorwf	??_WriteI2C^(0+128),w
 10935  0EF6  1903               	btfsc	3,2
 10936  0EF7  2EF9               	goto	u2701
 10937  0EF8  2EFA               	goto	u2700
 10938  0EF9                     u2701:
 10939  0EF9  2F05               	goto	l42
 10940  0EFA                     u2700:
 10941  0EFA                     l3520:
 10942  0EFA  300F               	movlw	15
 10943  0EFB  0023               	movlb	3	; select bank3
 10944  0EFC  0510               	andwf	16,w	;volatile
 10945  0EFD  0021               	movlb	1	; select bank1
 10946  0EFE  00AA               	movwf	??_WriteI2C^(0+128)
 10947  0EFF  300B               	movlw	11
 10948  0F00  062A               	xorwf	??_WriteI2C^(0+128),w
 10949  0F01  1D03               	btfss	3,2
 10950  0F02  2F04               	goto	u2711
 10951  0F03  2F05               	goto	u2710
 10952  0F04                     u2711:
 10953  0F04  2F1B               	goto	l30
 10954  0F05                     u2710:
 10955  0F05                     l42:
 10956  0F05  0023               	movlb	3	; select bank3
 10957  0F06  180F               	btfsc	15,0	;volatile
 10958  0F07  2F09               	goto	u2721
 10959  0F08  2F0A               	goto	u2720
 10960  0F09                     u2721:
 10961  0F09  2F05               	goto	l42
 10962  0F0A                     u2720:
 10963  0F0A                     l3522:
 10964  0F0A  0023               	movlb	3	; select bank3
 10965  0F0B  0C0F               	rrf	15,w	;volatile
 10966  0F0C  0C89               	rrf	9,f
 10967  0F0D  3901               	andlw	1
 10968  0F0E  0021               	movlb	1	; select bank1
 10969  0F0F  00AA               	movwf	??_WriteI2C^(0+128)
 10970  0F10  0023               	movlb	3	; select bank3
 10971  0F11  0811               	movf	17,w	;volatile
 10972  0F12  391F               	andlw	31
 10973  0F13  0021               	movlb	1	; select bank1
 10974  0F14  042A               	iorwf	??_WriteI2C^(0+128),w
 10975  0F15  1D03               	btfss	3,2
 10976  0F16  2F18               	goto	u2731
 10977  0F17  2F19               	goto	u2730
 10978  0F18                     u2731:
 10979  0F18  2F0A               	goto	l3522
 10980  0F19                     u2730:
 10981  0F19                     l47:
 10982                           
 10983                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 10984  0F19  0023               	movlb	3	; select bank3
 10985  0F1A  0811               	movf	17,w	;volatile
 10986  0F1B                     l30:
 10987  0F1B  0008               	return
 10988  0F1C                     __end_of_WriteI2C:
 10989                           
 10990                           	psect	intentry
 10991  0004                     __pintentry:	
 10992 ;; *************** function _INTERRUPT_InterruptManager *****************
 10993 ;; Defined at:
 10994 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10995 ;; Parameters:    Size  Location     Type
 10996 ;;		None
 10997 ;; Auto vars:     Size  Location     Type
 10998 ;;		None
 10999 ;; Return value:  Size  Location     Type
 11000 ;;                  1    wreg      void 
 11001 ;; Registers used:
 11002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11003 ;; Tracked objects:
 11004 ;;		On entry : 0/0
 11005 ;;		On exit  : 0/0
 11006 ;;		Unchanged: 0/0
 11007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11012 ;;Total ram usage:        0 bytes
 11013 ;; Hardware stack levels used:    1
 11014 ;; Hardware stack levels required when called:    6
 11015 ;; This function calls:
 11016 ;;		_TMR1_ISR
 11017 ;;		_TMR3_ISR
 11018 ;;		_TMR5_ISR
 11019 ;; This function is called by:
 11020 ;;		Interrupt level 1
 11021 ;; This function uses a non-reentrant model
 11022 ;;
 11023                           
 11024  0004                     _INTERRUPT_InterruptManager:
 11025                           
 11026                           ;incstack = 0
 11027  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11028                           
 11029                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11030  0005  3180               	pagesel	$
 11031  0006                     i1l4344:
 11032                           
 11033                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
 11034  0006  1F0B               	btfss	11,6	;volatile
 11035  0007  2809               	goto	u423_21
 11036  0008  280A               	goto	u423_20
 11037  0009                     u423_21:
 11038  0009  283E               	goto	i1l356
 11039  000A                     u423_20:
 11040  000A                     i1l4346:
 11041                           
 11042                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE4bits.TMR5IE == 1 && PIR4bits
      +                          .TMR5IF == 1)
 11043  000A  002E               	movlb	14	; select bank14
 11044  000B  1E1A               	btfss	26,4	;volatile
 11045  000C  280E               	goto	u424_21
 11046  000D  280F               	goto	u424_20
 11047  000E                     u424_21:
 11048  000E  2817               	goto	i1l345
 11049  000F                     u424_20:
 11050  000F                     i1l4348:
 11051  000F  1E10               	btfss	16,4	;volatile
 11052  0010  2812               	goto	u425_21
 11053  0011  2813               	goto	u425_20
 11054  0012                     u425_21:
 11055  0012  2817               	goto	i1l345
 11056  0013                     u425_20:
 11057  0013                     i1l4350:
 11058                           
 11059                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: TMR5_ISR();
 11060  0013  318C  2418  3180   	fcall	_TMR5_ISR
 11061                           
 11062                           ;interrupt_manager.c: 60: }
 11063  0016  283E               	goto	i1l356
 11064  0017                     i1l345:
 11065                           
 11066                           ;interrupt_manager.c: 61: else if(PIE4bits.TMR3IE == 1 && PIR4bits.TMR3IF == 1)
 11067  0017  1D1A               	btfss	26,2	;volatile
 11068  0018  281A               	goto	u426_21
 11069  0019  281B               	goto	u426_20
 11070  001A                     u426_21:
 11071  001A  2823               	goto	i1l347
 11072  001B                     u426_20:
 11073  001B                     i1l4352:
 11074  001B  1D10               	btfss	16,2	;volatile
 11075  001C  281E               	goto	u427_21
 11076  001D  281F               	goto	u427_20
 11077  001E                     u427_21:
 11078  001E  2823               	goto	i1l347
 11079  001F                     u427_20:
 11080  001F                     i1l4354:
 11081                           
 11082                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR3_ISR();
 11083  001F  318C  2401  3180   	fcall	_TMR3_ISR
 11084                           
 11085                           ;interrupt_manager.c: 64: }
 11086  0022  283E               	goto	i1l356
 11087  0023                     i1l347:
 11088                           
 11089                           ;interrupt_manager.c: 65: else if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 11090  0023  1C1A               	btfss	26,0	;volatile
 11091  0024  2826               	goto	u428_21
 11092  0025  2827               	goto	u428_20
 11093  0026                     u428_21:
 11094  0026  282F               	goto	i1l349
 11095  0027                     u428_20:
 11096  0027                     i1l4356:
 11097  0027  1C10               	btfss	16,0	;volatile
 11098  0028  282A               	goto	u429_21
 11099  0029  282B               	goto	u429_20
 11100  002A                     u429_21:
 11101  002A  282F               	goto	i1l349
 11102  002B                     u429_20:
 11103  002B                     i1l4358:
 11104                           
 11105                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: TMR1_ISR();
 11106  002B  318B  23EA  3180   	fcall	_TMR1_ISR
 11107                           
 11108                           ;interrupt_manager.c: 68: }
 11109  002E  283E               	goto	i1l356
 11110  002F                     i1l349:
 11111                           
 11112                           ;interrupt_manager.c: 69: else if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 11113  002F  1C99               	btfss	25,1	;volatile
 11114  0030  2832               	goto	u430_21
 11115  0031  2833               	goto	u430_20
 11116  0032                     u430_21:
 11117  0032  2838               	goto	i1l351
 11118  0033                     u430_20:
 11119  0033                     i1l4360:
 11120                           
 11121                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: i2c1_driver_busCollisionISR();
 11122  0033  1C8F               	btfss	15,1	;volatile
 11123  0034  2836               	goto	u431_21
 11124  0035  2837               	goto	u431_20
 11125  0036                     u431_21:
 11126  0036  2838               	goto	i1l351
 11127  0037                     u431_20:
 11128  0037  283E               	goto	i1l356
 11129  0038                     i1l351:
 11130                           
 11131                           ;interrupt_manager.c: 73: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 11132  0038  1C19               	btfss	25,0	;volatile
 11133  0039  283B               	goto	u432_21
 11134  003A  283C               	goto	u432_20
 11135  003B                     u432_21:
 11136  003B  283E               	goto	i1l350
 11137  003C                     u432_20:
 11138  003C                     i1l4364:
 11139                           
 11140                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: i2c1_driver_i2cISR();
 11141  003C  080F               	movf	15,w	;volatile
 11142  003D  283E               	goto	i1l356
 11143  003E                     i1l350:
 11144  003E                     i1l356:
 11145  003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11146  003F  0009               	retfie
 11147  0040                     __end_of_INTERRUPT_InterruptManager:
 11148                           
 11149                           	psect	text25
 11150  0C18                     __ptext25:	
 11151 ;; *************** function _TMR5_ISR *****************
 11152 ;; Defined at:
 11153 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 11154 ;; Parameters:    Size  Location     Type
 11155 ;;		None
 11156 ;; Auto vars:     Size  Location     Type
 11157 ;;		None
 11158 ;; Return value:  Size  Location     Type
 11159 ;;                  1    wreg      void 
 11160 ;; Registers used:
 11161 ;;		wreg, status,2, status,0, pclath, cstack
 11162 ;; Tracked objects:
 11163 ;;		On entry : 0/0
 11164 ;;		On exit  : 0/0
 11165 ;;		Unchanged: 0/0
 11166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11171 ;;Total ram usage:        0 bytes
 11172 ;; Hardware stack levels used:    1
 11173 ;; Hardware stack levels required when called:    3
 11174 ;; This function calls:
 11175 ;;		Absolute function
 11176 ;;		_TMR5_DefaultInterruptHandler
 11177 ;;		_TMR5_WriteTimer
 11178 ;;		_monitoring_ISR
 11179 ;; This function is called by:
 11180 ;;		_INTERRUPT_InterruptManager
 11181 ;; This function uses a non-reentrant model
 11182 ;;
 11183                           
 11184                           
 11185                           ;psect for function _TMR5_ISR
 11186  0C18                     _TMR5_ISR:
 11187  0C18                     i1l4150:	
 11188                           ;incstack = 0
 11189                           ; Regs used in _TMR5_ISR: [wreg+status,2+status,0+pclath+cstack]
 11190                           
 11191                           
 11192                           ;tmr5.c: 169: PIR4bits.TMR5IF = 0;
 11193  0C18  002E               	movlb	14	; select bank14
 11194  0C19  1210               	bcf	16,4	;volatile
 11195  0C1A                     i1l4152:
 11196                           
 11197                           ;tmr5.c: 170: TMR5_WriteTimer(timer5ReloadVal);
 11198  0C1A  0021               	movlb	1	; select bank1
 11199  0C1B  0823               	movf	(_timer5ReloadVal+1)^(0+128),w	;volatile
 11200  0C1C  00F1               	movwf	TMR5_WriteTimer@timerVal+1
 11201  0C1D  0822               	movf	_timer5ReloadVal^(0+128),w	;volatile
 11202  0C1E  00F0               	movwf	TMR5_WriteTimer@timerVal
 11203  0C1F  318B  238B  318C   	fcall	_TMR5_WriteTimer
 11204  0C22                     i1l4154:
 11205                           
 11206                           ;tmr5.c: 172: if(TMR5_InterruptHandler)
 11207  0C22  0021               	movlb	1	; select bank1
 11208  0C23  0820               	movf	_TMR5_InterruptHandler^(0+128),w
 11209  0C24  0421               	iorwf	(_TMR5_InterruptHandler+1)^(0+128),w
 11210  0C25  1903               	btfsc	3,2
 11211  0C26  2C28               	goto	u379_21
 11212  0C27  2C29               	goto	u379_20
 11213  0C28                     u379_21:
 11214  0C28  2C2E               	goto	i1l702
 11215  0C29                     u379_20:
 11216  0C29                     i1l4156:
 11217                           
 11218                           ;tmr5.c: 173: {;tmr5.c: 174: TMR5_InterruptHandler();
 11219  0C29  0821               	movf	(_TMR5_InterruptHandler+1)^(0+128),w
 11220  0C2A  008A               	movwf	10
 11221  0C2B  0820               	movf	_TMR5_InterruptHandler^(0+128),w
 11222  0C2C  000A               	callw
 11223  0C2D  318C               	pagesel	$
 11224  0C2E                     i1l702:
 11225  0C2E  0008               	return
 11226  0C2F                     __end_of_TMR5_ISR:
 11227                           
 11228                           	psect	text26
 11229  07FF                     __ptext26:	
 11230 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 11231 ;; Defined at:
 11232 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 11233 ;; Parameters:    Size  Location     Type
 11234 ;;		None
 11235 ;; Auto vars:     Size  Location     Type
 11236 ;;		None
 11237 ;; Return value:  Size  Location     Type
 11238 ;;                  1    wreg      void 
 11239 ;; Registers used:
 11240 ;;		None
 11241 ;; Tracked objects:
 11242 ;;		On entry : 0/0
 11243 ;;		On exit  : 0/0
 11244 ;;		Unchanged: 0/0
 11245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11250 ;;Total ram usage:        0 bytes
 11251 ;; Hardware stack levels used:    1
 11252 ;; This function calls:
 11253 ;;		Nothing
 11254 ;; This function is called by:
 11255 ;;		_TMR5_Initialize
 11256 ;;		_TMR5_ISR
 11257 ;; This function uses a non-reentrant model
 11258 ;;
 11259                           
 11260                           
 11261                           ;psect for function _TMR5_DefaultInterruptHandler
 11262  07FF                     _TMR5_DefaultInterruptHandler:
 11263  07FF                     i1l708:	
 11264                           ;incstack = 0
 11265                           ; Regs used in _TMR5_DefaultInterruptHandler: []
 11266                           
 11267  07FF  0008               	return
 11268  0800                     __end_of_TMR5_DefaultInterruptHandler:
 11269                           
 11270                           	psect	text27
 11271  0DDE                     __ptext27:	
 11272 ;; *************** function _monitoring_ISR *****************
 11273 ;; Defined at:
 11274 ;;		line 417 in file "main.c"
 11275 ;; Parameters:    Size  Location     Type
 11276 ;;		None
 11277 ;; Auto vars:     Size  Location     Type
 11278 ;;		None
 11279 ;; Return value:  Size  Location     Type
 11280 ;;                  1    wreg      void 
 11281 ;; Registers used:
 11282 ;;		wreg, status,2, status,0, pclath, cstack
 11283 ;; Tracked objects:
 11284 ;;		On entry : 0/0
 11285 ;;		On exit  : 0/0
 11286 ;;		Unchanged: 0/0
 11287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11290 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11291 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11292 ;;Total ram usage:        3 bytes
 11293 ;; Hardware stack levels used:    1
 11294 ;; Hardware stack levels required when called:    2
 11295 ;; This function calls:
 11296 ;;		_ADCC_GetSingleConversion
 11297 ;;		_tsttc
 11298 ;; This function is called by:
 11299 ;;		_main
 11300 ;;		_TMR5_ISR
 11301 ;; This function uses a non-reentrant model
 11302 ;;
 11303                           
 11304                           
 11305                           ;psect for function _monitoring_ISR
 11306  0DDE                     _monitoring_ISR:
 11307  0DDE                     i1l4098:	
 11308                           ;incstack = 0
 11309                           ; Regs used in _monitoring_ISR: [wreg+status,2+status,0+pclath+cstack]
 11310                           
 11311                           
 11312                           ;main.c: 418: temp = tsttc();
 11313  0DDE  3183  23D2  318D   	fcall	_tsttc
 11314  0DE1  00F4               	movwf	??_monitoring_ISR
 11315  0DE2  0874               	movf	??_monitoring_ISR,w
 11316  0DE3  0020               	movlb	0	; select bank0
 11317  0DE4  00E0               	movwf	_temp
 11318                           
 11319                           ;main.c: 420: lumLevel = ADCC_GetSingleConversion(channel_ANA0) >> 13;
 11320  0DE5  3000               	movlw	0
 11321  0DE6  318B  23AE  318D   	fcall	_ADCC_GetSingleConversion
 11322  0DE9  0870               	movf	?_ADCC_GetSingleConversion,w
 11323  0DEA  00F4               	movwf	??_monitoring_ISR
 11324  0DEB  0871               	movf	?_ADCC_GetSingleConversion+1,w
 11325  0DEC  00F5               	movwf	??_monitoring_ISR+1
 11326  0DED  300D               	movlw	13
 11327  0DEE                     u373_25:
 11328  0DEE  36F5               	lsrf	??_monitoring_ISR+1,f
 11329  0DEF  0CF4               	rrf	??_monitoring_ISR,f
 11330  0DF0  0B89               	decfsz	9,f
 11331  0DF1  2DEE               	goto	u373_25
 11332  0DF2  0874               	movf	??_monitoring_ISR,w
 11333  0DF3  00F6               	movwf	??_monitoring_ISR+2
 11334  0DF4  0876               	movf	??_monitoring_ISR+2,w
 11335  0DF5  0020               	movlb	0	; select bank0
 11336  0DF6  00DF               	movwf	_lumLevel
 11337  0DF7                     i1l4100:
 11338                           
 11339                           ;main.c: 423: if((lumAlarm.alarmLum > lumLevel) && (editingLumAlarm == 0)){
 11340  0DF7  0868               	movf	_lumAlarm,w
 11341  0DF8  025F               	subwf	_lumLevel,w
 11342  0DF9  1803               	skipnc
 11343  0DFA  2DFC               	goto	u374_21
 11344  0DFB  2DFD               	goto	u374_20
 11345  0DFC                     u374_21:
 11346  0DFC  2E0C               	goto	i1l1172
 11347  0DFD                     u374_20:
 11348  0DFD                     i1l4102:
 11349  0DFD  085D               	movf	_editingLumAlarm,w
 11350  0DFE  1D03               	btfss	3,2
 11351  0DFF  2E01               	goto	u375_21
 11352  0E00  2E02               	goto	u375_20
 11353  0E01                     u375_21:
 11354  0E01  2E0C               	goto	i1l1172
 11355  0E02                     u375_20:
 11356  0E02                     i1l4104:
 11357                           
 11358                           ;main.c: 424: alarmPWMStart.h = -1;
 11359  0E02  30FF               	movlw	255
 11360  0E03  0021               	movlb	1	; select bank1
 11361  0E04  00BA               	movwf	_alarmPWMStart^(0+128)
 11362  0E05  30FF               	movlw	255
 11363  0E06  00BB               	movwf	(_alarmPWMStart^(0+128)+1)
 11364  0E07                     i1l4106:
 11365                           
 11366                           ;main.c: 425: lumAlarm.trigger = 1;
 11367  0E07  0020               	movlb	0	; select bank0
 11368  0E08  01E9               	clrf	_lumAlarm+1
 11369  0E09  0AE9               	incf	_lumAlarm+1,f
 11370  0E0A                     i1l4108:
 11371  0E0A  1616               	bsf	22,4	;volatile
 11372  0E0B  2E0D               	goto	i1l4110
 11373  0E0C                     i1l1172:	
 11374                           ;main.c: 428: do { LATAbits.LATA4 = 0; } while(0);
 11375                           
 11376  0E0C  1216               	bcf	22,4	;volatile
 11377  0E0D                     i1l4110:
 11378                           
 11379                           ;main.c: 429: };main.c: 432: if((tempAlarm.alarmTemp < temp) && (editingTempAlarm == 0))
      +                          {
 11380  0E0D  0860               	movf	_temp,w
 11381  0E0E  026A               	subwf	_tempAlarm,w
 11382  0E0F  1803               	skipnc
 11383  0E10  2E12               	goto	u376_21
 11384  0E11  2E13               	goto	u376_20
 11385  0E12                     u376_21:
 11386  0E12  2E22               	goto	i1l1178
 11387  0E13                     u376_20:
 11388  0E13                     i1l4112:
 11389  0E13  085E               	movf	_editingTempAlarm,w
 11390  0E14  1D03               	btfss	3,2
 11391  0E15  2E17               	goto	u377_21
 11392  0E16  2E18               	goto	u377_20
 11393  0E17                     u377_21:
 11394  0E17  2E22               	goto	i1l1178
 11395  0E18                     u377_20:
 11396  0E18                     i1l4114:
 11397                           
 11398                           ;main.c: 433: alarmPWMStart.h = -1;
 11399  0E18  30FF               	movlw	255
 11400  0E19  0021               	movlb	1	; select bank1
 11401  0E1A  00BA               	movwf	_alarmPWMStart^(0+128)
 11402  0E1B  30FF               	movlw	255
 11403  0E1C  00BB               	movwf	(_alarmPWMStart^(0+128)+1)
 11404  0E1D                     i1l4116:
 11405                           
 11406                           ;main.c: 434: tempAlarm.trigger = 1;
 11407  0E1D  0020               	movlb	0	; select bank0
 11408  0E1E  01EB               	clrf	_tempAlarm+1
 11409  0E1F  0AEB               	incf	_tempAlarm+1,f
 11410  0E20                     i1l4118:
 11411  0E20  1696               	bsf	22,5	;volatile
 11412  0E21  2E23               	goto	i1l1180
 11413  0E22                     i1l1178:	
 11414                           ;main.c: 437: do { LATAbits.LATA5 = 0; } while(0);
 11415                           
 11416  0E22  1296               	bcf	22,5	;volatile
 11417  0E23                     i1l1180:
 11418  0E23  0008               	return
 11419  0E24                     __end_of_monitoring_ISR:
 11420                           
 11421                           	psect	text28
 11422  03D2                     __ptext28:	
 11423 ;; *************** function _tsttc *****************
 11424 ;; Defined at:
 11425 ;;		line 58 in file "main.c"
 11426 ;; Parameters:    Size  Location     Type
 11427 ;;		None
 11428 ;; Auto vars:     Size  Location     Type
 11429 ;;  value           1    3[COMMON] unsigned char 
 11430 ;; Return value:  Size  Location     Type
 11431 ;;                  1    wreg      unsigned char 
 11432 ;; Registers used:
 11433 ;;		wreg, status,2, status,0, pclath, cstack
 11434 ;; Tracked objects:
 11435 ;;		On entry : 0/0
 11436 ;;		On exit  : 0/0
 11437 ;;		Unchanged: 0/0
 11438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11441 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11442 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11443 ;;Total ram usage:        2 bytes
 11444 ;; Hardware stack levels used:    1
 11445 ;; Hardware stack levels required when called:    1
 11446 ;; This function calls:
 11447 ;;		_ReadI2C
 11448 ;;		i1_WriteI2C
 11449 ;; This function is called by:
 11450 ;;		_monitoring_ISR
 11451 ;; This function uses a non-reentrant model
 11452 ;;
 11453                           
 11454                           
 11455                           ;psect for function _tsttc
 11456  03D2                     _tsttc:
 11457  03D2                     i1l844:	
 11458                           ;incstack = 0
 11459                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 11460                           ;main.c: 60: unsigned char value;;main.c: 61: do{
 11461                           
 11462  03D2                     i1l3552:	
 11463                           ;main.c: 62: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11464                           
 11465  03D2  0023               	movlb	3	; select bank3
 11466  03D3  0C0F               	rrf	15,w	;volatile
 11467  03D4  0C89               	rrf	9,f
 11468  03D5  3901               	andlw	1
 11469  03D6  00F2               	movwf	??_tsttc
 11470  03D7  0811               	movf	17,w	;volatile
 11471  03D8  391F               	andlw	31
 11472  03D9  0472               	iorwf	??_tsttc,w
 11473  03DA  1D03               	btfss	3,2
 11474  03DB  2BDD               	goto	u276_21
 11475  03DC  2BDE               	goto	u276_20
 11476  03DD                     u276_21:
 11477  03DD  2BD2               	goto	i1l3552
 11478  03DE                     u276_20:
 11479  03DE                     i1l847:
 11480                           
 11481                           ;main.c: 63: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 11482  03DE  1411               	bsf	17,0	;volatile
 11483  03DF                     i1l848:
 11484  03DF  1811               	btfsc	17,0	;volatile
 11485  03E0  2BE2               	goto	u277_21
 11486  03E1  2BE3               	goto	u277_20
 11487  03E2                     u277_21:
 11488  03E2  2BDF               	goto	i1l848
 11489  03E3                     u277_20:
 11490  03E3                     i1l3554:
 11491  03E3  0C0F               	rrf	15,w	;volatile
 11492  03E4  0C89               	rrf	9,f
 11493  03E5  3901               	andlw	1
 11494  03E6  00F2               	movwf	??_tsttc
 11495  03E7  0811               	movf	17,w	;volatile
 11496  03E8  391F               	andlw	31
 11497  03E9  0472               	iorwf	??_tsttc,w
 11498  03EA  1D03               	btfss	3,2
 11499  03EB  2BED               	goto	u278_21
 11500  03EC  2BEE               	goto	u278_20
 11501  03ED                     u278_21:
 11502  03ED  2BE3               	goto	i1l3554
 11503  03EE                     u278_20:
 11504  03EE                     i1l3556:
 11505                           
 11506                           ;main.c: 65: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11507  03EE  309A               	movlw	154
 11508  03EF  318E  2624  3183   	fcall	i1_WriteI2C
 11509  03F2                     i1l3558:
 11510  03F2  0023               	movlb	3	; select bank3
 11511  03F3  0C0F               	rrf	15,w	;volatile
 11512  03F4  0C89               	rrf	9,f
 11513  03F5  3901               	andlw	1
 11514  03F6  00F2               	movwf	??_tsttc
 11515  03F7  0811               	movf	17,w	;volatile
 11516  03F8  391F               	andlw	31
 11517  03F9  0472               	iorwf	??_tsttc,w
 11518  03FA  1D03               	btfss	3,2
 11519  03FB  2BFD               	goto	u279_21
 11520  03FC  2BFE               	goto	u279_20
 11521  03FD                     u279_21:
 11522  03FD  2BF2               	goto	i1l3558
 11523  03FE                     u279_20:
 11524  03FE                     i1l3560:
 11525                           
 11526                           ;main.c: 66: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11527  03FE  3001               	movlw	1
 11528  03FF  318E  2624  3183   	fcall	i1_WriteI2C
 11529  0402                     i1l3562:
 11530  0402  0023               	movlb	3	; select bank3
 11531  0403  0C0F               	rrf	15,w	;volatile
 11532  0404  0C89               	rrf	9,f
 11533  0405  3901               	andlw	1
 11534  0406  00F2               	movwf	??_tsttc
 11535  0407  0811               	movf	17,w	;volatile
 11536  0408  391F               	andlw	31
 11537  0409  0472               	iorwf	??_tsttc,w
 11538  040A  1D03               	btfss	3,2
 11539  040B  2C0D               	goto	u280_21
 11540  040C  2C0E               	goto	u280_20
 11541  040D                     u280_21:
 11542  040D  2C02               	goto	i1l3562
 11543  040E                     u280_20:
 11544  040E                     i1l859:
 11545                           
 11546                           ;main.c: 67: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 11547  040E  1491               	bsf	17,1	;volatile
 11548  040F                     i1l860:
 11549  040F  1891               	btfsc	17,1	;volatile
 11550  0410  2C12               	goto	u281_21
 11551  0411  2C13               	goto	u281_20
 11552  0412                     u281_21:
 11553  0412  2C0F               	goto	i1l860
 11554  0413                     u281_20:
 11555  0413                     i1l3564:
 11556  0413  0C0F               	rrf	15,w	;volatile
 11557  0414  0C89               	rrf	9,f
 11558  0415  3901               	andlw	1
 11559  0416  00F2               	movwf	??_tsttc
 11560  0417  0811               	movf	17,w	;volatile
 11561  0418  391F               	andlw	31
 11562  0419  0472               	iorwf	??_tsttc,w
 11563  041A  1D03               	btfss	3,2
 11564  041B  2C1D               	goto	u282_21
 11565  041C  2C1E               	goto	u282_20
 11566  041D                     u282_21:
 11567  041D  2C13               	goto	i1l3564
 11568  041E                     u282_20:
 11569  041E                     i1l3566:
 11570                           
 11571                           ;main.c: 68: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11572  041E  309B               	movlw	155
 11573  041F  318E  2624  3183   	fcall	i1_WriteI2C
 11574  0422                     i1l3568:
 11575  0422  0023               	movlb	3	; select bank3
 11576  0423  0C0F               	rrf	15,w	;volatile
 11577  0424  0C89               	rrf	9,f
 11578  0425  3901               	andlw	1
 11579  0426  00F2               	movwf	??_tsttc
 11580  0427  0811               	movf	17,w	;volatile
 11581  0428  391F               	andlw	31
 11582  0429  0472               	iorwf	??_tsttc,w
 11583  042A  1D03               	btfss	3,2
 11584  042B  2C2D               	goto	u283_21
 11585  042C  2C2E               	goto	u283_20
 11586  042D                     u283_21:
 11587  042D  2C22               	goto	i1l3568
 11588  042E                     u283_20:
 11589  042E                     i1l3570:
 11590                           
 11591                           ;main.c: 69: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11592  042E  318C  2446  3183   	fcall	_ReadI2C
 11593  0431  00F2               	movwf	??_tsttc
 11594  0432  0872               	movf	??_tsttc,w
 11595  0433  00F3               	movwf	tsttc@value
 11596  0434                     i1l3572:
 11597  0434  0023               	movlb	3	; select bank3
 11598  0435  0C0F               	rrf	15,w	;volatile
 11599  0436  0C89               	rrf	9,f
 11600  0437  3901               	andlw	1
 11601  0438  00F2               	movwf	??_tsttc
 11602  0439  0811               	movf	17,w	;volatile
 11603  043A  391F               	andlw	31
 11604  043B  0472               	iorwf	??_tsttc,w
 11605  043C  1D03               	btfss	3,2
 11606  043D  2C3F               	goto	u284_21
 11607  043E  2C40               	goto	u284_20
 11608  043F                     u284_21:
 11609  043F  2C34               	goto	i1l3572
 11610  0440                     u284_20:
 11611  0440                     i1l871:
 11612                           
 11613                           ;main.c: 70: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11614  0440  1691               	bsf	17,5	;volatile
 11615  0441  1611               	bsf	17,4	;volatile
 11616  0442                     i1l872:
 11617  0442  1A11               	btfsc	17,4	;volatile
 11618  0443  2C45               	goto	u285_21
 11619  0444  2C46               	goto	u285_20
 11620  0445                     u285_21:
 11621  0445  2C42               	goto	i1l872
 11622  0446                     u285_20:
 11623  0446                     i1l3574:
 11624  0446  0C0F               	rrf	15,w	;volatile
 11625  0447  0C89               	rrf	9,f
 11626  0448  3901               	andlw	1
 11627  0449  00F2               	movwf	??_tsttc
 11628  044A  0811               	movf	17,w	;volatile
 11629  044B  391F               	andlw	31
 11630  044C  0472               	iorwf	??_tsttc,w
 11631  044D  1D03               	btfss	3,2
 11632  044E  2C50               	goto	u286_21
 11633  044F  2C51               	goto	u286_20
 11634  0450                     u286_21:
 11635  0450  2C46               	goto	i1l3574
 11636  0451                     u286_20:
 11637  0451                     i1l877:
 11638                           
 11639                           ;main.c: 71: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11640  0451  1511               	bsf	17,2	;volatile
 11641  0452                     i1l878:
 11642  0452  1911               	btfsc	17,2	;volatile
 11643  0453  2C55               	goto	u287_21
 11644  0454  2C56               	goto	u287_20
 11645  0455                     u287_21:
 11646  0455  2C52               	goto	i1l878
 11647  0456                     u287_20:
 11648  0456                     i1l880:
 11649                           
 11650                           ;main.c: 72: } while (!(value & 0x40));
 11651  0456  1F73               	btfss	tsttc@value,6
 11652  0457  2C59               	goto	u288_21
 11653  0458  2C5A               	goto	u288_20
 11654  0459                     u288_21:
 11655  0459  2BD2               	goto	i1l844
 11656  045A                     u288_20:
 11657  045A                     i1l3576:
 11658  045A  0C0F               	rrf	15,w	;volatile
 11659  045B  0C89               	rrf	9,f
 11660  045C  3901               	andlw	1
 11661  045D  00F2               	movwf	??_tsttc
 11662  045E  0811               	movf	17,w	;volatile
 11663  045F  391F               	andlw	31
 11664  0460  0472               	iorwf	??_tsttc,w
 11665  0461  1D03               	btfss	3,2
 11666  0462  2C64               	goto	u289_21
 11667  0463  2C65               	goto	u289_20
 11668  0464                     u289_21:
 11669  0464  2C5A               	goto	i1l3576
 11670  0465                     u289_20:
 11671  0465                     i1l884:
 11672                           
 11673                           ;main.c: 75: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 11674  0465  1411               	bsf	17,0	;volatile
 11675  0466                     i1l885:
 11676  0466  1811               	btfsc	17,0	;volatile
 11677  0467  2C69               	goto	u290_21
 11678  0468  2C6A               	goto	u290_20
 11679  0469                     u290_21:
 11680  0469  2C66               	goto	i1l885
 11681  046A                     u290_20:
 11682  046A                     i1l3578:
 11683  046A  0C0F               	rrf	15,w	;volatile
 11684  046B  0C89               	rrf	9,f
 11685  046C  3901               	andlw	1
 11686  046D  00F2               	movwf	??_tsttc
 11687  046E  0811               	movf	17,w	;volatile
 11688  046F  391F               	andlw	31
 11689  0470  0472               	iorwf	??_tsttc,w
 11690  0471  1D03               	btfss	3,2
 11691  0472  2C74               	goto	u291_21
 11692  0473  2C75               	goto	u291_20
 11693  0474                     u291_21:
 11694  0474  2C6A               	goto	i1l3578
 11695  0475                     u291_20:
 11696  0475                     i1l3580:
 11697                           
 11698                           ;main.c: 76: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11699  0475  309A               	movlw	154
 11700  0476  318E  2624  3183   	fcall	i1_WriteI2C
 11701  0479                     i1l3582:
 11702  0479  0023               	movlb	3	; select bank3
 11703  047A  0C0F               	rrf	15,w	;volatile
 11704  047B  0C89               	rrf	9,f
 11705  047C  3901               	andlw	1
 11706  047D  00F2               	movwf	??_tsttc
 11707  047E  0811               	movf	17,w	;volatile
 11708  047F  391F               	andlw	31
 11709  0480  0472               	iorwf	??_tsttc,w
 11710  0481  1D03               	btfss	3,2
 11711  0482  2C84               	goto	u292_21
 11712  0483  2C85               	goto	u292_20
 11713  0484                     u292_21:
 11714  0484  2C79               	goto	i1l3582
 11715  0485                     u292_20:
 11716  0485                     i1l3584:
 11717                           
 11718                           ;main.c: 77: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11719  0485  3000               	movlw	0
 11720  0486  318E  2624  3183   	fcall	i1_WriteI2C
 11721  0489                     i1l3586:
 11722  0489  0023               	movlb	3	; select bank3
 11723  048A  0C0F               	rrf	15,w	;volatile
 11724  048B  0C89               	rrf	9,f
 11725  048C  3901               	andlw	1
 11726  048D  00F2               	movwf	??_tsttc
 11727  048E  0811               	movf	17,w	;volatile
 11728  048F  391F               	andlw	31
 11729  0490  0472               	iorwf	??_tsttc,w
 11730  0491  1D03               	btfss	3,2
 11731  0492  2C94               	goto	u293_21
 11732  0493  2C95               	goto	u293_20
 11733  0494                     u293_21:
 11734  0494  2C89               	goto	i1l3586
 11735  0495                     u293_20:
 11736  0495                     i1l896:
 11737                           
 11738                           ;main.c: 78: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 11739  0495  1491               	bsf	17,1	;volatile
 11740  0496                     i1l897:
 11741  0496  1891               	btfsc	17,1	;volatile
 11742  0497  2C99               	goto	u294_21
 11743  0498  2C9A               	goto	u294_20
 11744  0499                     u294_21:
 11745  0499  2C96               	goto	i1l897
 11746  049A                     u294_20:
 11747  049A                     i1l3588:
 11748  049A  0C0F               	rrf	15,w	;volatile
 11749  049B  0C89               	rrf	9,f
 11750  049C  3901               	andlw	1
 11751  049D  00F2               	movwf	??_tsttc
 11752  049E  0811               	movf	17,w	;volatile
 11753  049F  391F               	andlw	31
 11754  04A0  0472               	iorwf	??_tsttc,w
 11755  04A1  1D03               	btfss	3,2
 11756  04A2  2CA4               	goto	u295_21
 11757  04A3  2CA5               	goto	u295_20
 11758  04A4                     u295_21:
 11759  04A4  2C9A               	goto	i1l3588
 11760  04A5                     u295_20:
 11761  04A5                     i1l3590:
 11762                           
 11763                           ;main.c: 79: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11764  04A5  309B               	movlw	155
 11765  04A6  318E  2624  3183   	fcall	i1_WriteI2C
 11766  04A9                     i1l3592:
 11767  04A9  0023               	movlb	3	; select bank3
 11768  04AA  0C0F               	rrf	15,w	;volatile
 11769  04AB  0C89               	rrf	9,f
 11770  04AC  3901               	andlw	1
 11771  04AD  00F2               	movwf	??_tsttc
 11772  04AE  0811               	movf	17,w	;volatile
 11773  04AF  391F               	andlw	31
 11774  04B0  0472               	iorwf	??_tsttc,w
 11775  04B1  1D03               	btfss	3,2
 11776  04B2  2CB4               	goto	u296_21
 11777  04B3  2CB5               	goto	u296_20
 11778  04B4                     u296_21:
 11779  04B4  2CA9               	goto	i1l3592
 11780  04B5                     u296_20:
 11781  04B5                     i1l3594:
 11782                           
 11783                           ;main.c: 80: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11784  04B5  318C  2446  3183   	fcall	_ReadI2C
 11785  04B8  00F2               	movwf	??_tsttc
 11786  04B9  0872               	movf	??_tsttc,w
 11787  04BA  00F3               	movwf	tsttc@value
 11788  04BB                     i1l3596:
 11789  04BB  0023               	movlb	3	; select bank3
 11790  04BC  0C0F               	rrf	15,w	;volatile
 11791  04BD  0C89               	rrf	9,f
 11792  04BE  3901               	andlw	1
 11793  04BF  00F2               	movwf	??_tsttc
 11794  04C0  0811               	movf	17,w	;volatile
 11795  04C1  391F               	andlw	31
 11796  04C2  0472               	iorwf	??_tsttc,w
 11797  04C3  1D03               	btfss	3,2
 11798  04C4  2CC6               	goto	u297_21
 11799  04C5  2CC7               	goto	u297_20
 11800  04C6                     u297_21:
 11801  04C6  2CBB               	goto	i1l3596
 11802  04C7                     u297_20:
 11803  04C7                     i1l908:
 11804                           
 11805                           ;main.c: 81: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11806  04C7  1691               	bsf	17,5	;volatile
 11807  04C8  1611               	bsf	17,4	;volatile
 11808  04C9                     i1l909:
 11809  04C9  1A11               	btfsc	17,4	;volatile
 11810  04CA  2CCC               	goto	u298_21
 11811  04CB  2CCD               	goto	u298_20
 11812  04CC                     u298_21:
 11813  04CC  2CC9               	goto	i1l909
 11814  04CD                     u298_20:
 11815  04CD                     i1l3598:
 11816  04CD  0C0F               	rrf	15,w	;volatile
 11817  04CE  0C89               	rrf	9,f
 11818  04CF  3901               	andlw	1
 11819  04D0  00F2               	movwf	??_tsttc
 11820  04D1  0811               	movf	17,w	;volatile
 11821  04D2  391F               	andlw	31
 11822  04D3  0472               	iorwf	??_tsttc,w
 11823  04D4  1D03               	btfss	3,2
 11824  04D5  2CD7               	goto	u299_21
 11825  04D6  2CD8               	goto	u299_20
 11826  04D7                     u299_21:
 11827  04D7  2CCD               	goto	i1l3598
 11828  04D8                     u299_20:
 11829  04D8                     i1l914:
 11830                           
 11831                           ;main.c: 82: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11832  04D8  1511               	bsf	17,2	;volatile
 11833  04D9                     i1l915:
 11834  04D9  1911               	btfsc	17,2	;volatile
 11835  04DA  2CDC               	goto	u300_21
 11836  04DB  2CDD               	goto	u300_20
 11837  04DC                     u300_21:
 11838  04DC  2CD9               	goto	i1l915
 11839  04DD                     u300_20:
 11840  04DD                     i1l3600:
 11841                           
 11842                           ;main.c: 84: return value;
 11843  04DD  0873               	movf	tsttc@value,w
 11844  04DE                     i1l918:
 11845  04DE  0008               	return
 11846  04DF                     __end_of_tsttc:
 11847                           
 11848                           	psect	text29
 11849  0C46                     __ptext29:	
 11850 ;; *************** function _ReadI2C *****************
 11851 ;; Defined at:
 11852 ;;		line 32 in file "I2C/i2c.c"
 11853 ;; Parameters:    Size  Location     Type
 11854 ;;		None
 11855 ;; Auto vars:     Size  Location     Type
 11856 ;;		None
 11857 ;; Return value:  Size  Location     Type
 11858 ;;                  1    wreg      unsigned char 
 11859 ;; Registers used:
 11860 ;;		wreg, status,2, status,0
 11861 ;; Tracked objects:
 11862 ;;		On entry : 0/0
 11863 ;;		On exit  : 0/0
 11864 ;;		Unchanged: 0/0
 11865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11868 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11869 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11870 ;;Total ram usage:        1 bytes
 11871 ;; Hardware stack levels used:    1
 11872 ;; This function calls:
 11873 ;;		Nothing
 11874 ;; This function is called by:
 11875 ;;		_tsttc
 11876 ;;		_LCDrecv
 11877 ;; This function uses a non-reentrant model
 11878 ;;
 11879                           
 11880                           
 11881                           ;psect for function _ReadI2C
 11882  0C46                     _ReadI2C:
 11883  0C46                     i1l3410:	
 11884                           ;incstack = 0
 11885                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 11886                           
 11887                           
 11888                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 11889  0C46  300F               	movlw	15
 11890  0C47  0023               	movlb	3	; select bank3
 11891  0C48  0510               	andwf	16,w	;volatile
 11892  0C49  00F0               	movwf	??_ReadI2C
 11893  0C4A  3008               	movlw	8
 11894  0C4B  0670               	xorwf	??_ReadI2C,w
 11895  0C4C  1903               	btfsc	3,2
 11896  0C4D  2C4F               	goto	u243_21
 11897  0C4E  2C50               	goto	u243_20
 11898  0C4F                     u243_21:
 11899  0C4F  2C59               	goto	i1l22
 11900  0C50                     u243_20:
 11901  0C50                     i1l3412:
 11902  0C50  300F               	movlw	15
 11903  0C51  0510               	andwf	16,w	;volatile
 11904  0C52  00F0               	movwf	??_ReadI2C
 11905  0C53  300B               	movlw	11
 11906  0C54  0670               	xorwf	??_ReadI2C,w
 11907  0C55  1D03               	btfss	3,2
 11908  0C56  2C58               	goto	u244_21
 11909  0C57  2C59               	goto	u244_20
 11910  0C58                     u244_21:
 11911  0C58  2C5A               	goto	i1l23
 11912  0C59                     u244_20:
 11913  0C59                     i1l22:
 11914                           
 11915                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
 11916  0C59  1591               	bsf	17,3	;volatile
 11917  0C5A                     i1l23:
 11918  0C5A  1C0F               	btfss	15,0	;volatile
 11919  0C5B  2C5D               	goto	u245_21
 11920  0C5C  2C5E               	goto	u245_20
 11921  0C5D                     u245_21:
 11922  0C5D  2C5A               	goto	i1l23
 11923  0C5E                     u245_20:
 11924  0C5E                     i1l3414:
 11925                           
 11926                           ;i2c.c: 37: return ( SSP1BUF );
 11927  0C5E  080C               	movf	12,w	;volatile
 11928  0C5F                     i1l26:
 11929  0C5F  0008               	return
 11930  0C60                     __end_of_ReadI2C:
 11931                           
 11932                           	psect	text30
 11933  0BAE                     __ptext30:	
 11934 ;; *************** function _ADCC_GetSingleConversion *****************
 11935 ;; Defined at:
 11936 ;;		line 130 in file "mcc_generated_files/adcc.c"
 11937 ;; Parameters:    Size  Location     Type
 11938 ;;  channel         1    wreg     enum E12086
 11939 ;; Auto vars:     Size  Location     Type
 11940 ;;  channel         1    3[COMMON] enum E12086
 11941 ;; Return value:  Size  Location     Type
 11942 ;;                  2    0[COMMON] unsigned int 
 11943 ;; Registers used:
 11944 ;;		wreg
 11945 ;; Tracked objects:
 11946 ;;		On entry : 0/0
 11947 ;;		On exit  : 0/0
 11948 ;;		Unchanged: 0/0
 11949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11950 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11953 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11954 ;;Total ram usage:        4 bytes
 11955 ;; Hardware stack levels used:    1
 11956 ;; This function calls:
 11957 ;;		Nothing
 11958 ;; This function is called by:
 11959 ;;		_monitoring_ISR
 11960 ;; This function uses a non-reentrant model
 11961 ;;
 11962                           
 11963                           
 11964                           ;psect for function _ADCC_GetSingleConversion
 11965  0BAE                     _ADCC_GetSingleConversion:
 11966                           
 11967                           ;incstack = 0
 11968                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 11969                           ;ADCC_GetSingleConversion@channel stored from wreg
 11970  0BAE  00F3               	movwf	ADCC_GetSingleConversion@channel
 11971  0BAF                     i1l3532:
 11972                           
 11973                           ;adcc.c: 133: ADPCH = channel;
 11974  0BAF  0873               	movf	ADCC_GetSingleConversion@channel,w
 11975  0BB0  0021               	movlb	1	; select bank1
 11976  0BB1  009E               	movwf	30	;volatile
 11977  0BB2                     i1l3534:
 11978                           
 11979                           ;adcc.c: 136: ADCON0bits.ADON = 1;
 11980  0BB2  1793               	bsf	19,7	;volatile
 11981  0BB3                     i1l3536:
 11982                           
 11983                           ;adcc.c: 139: ADCON0bits.ADCONT = 0;
 11984  0BB3  1313               	bcf	19,6	;volatile
 11985  0BB4                     i1l3538:
 11986                           
 11987                           ;adcc.c: 142: ADCON0bits.ADGO = 1;
 11988  0BB4  1413               	bsf	19,0	;volatile
 11989  0BB5                     i1l3540:
 11990                           
 11991                           ;adcc.c: 145: __nop();
 11992  0BB5  0000               	nop
 11993  0BB6                     i1l575:	
 11994                           ;adcc.c: 149: {
 11995                           
 11996  0BB6  0021               	movlb	1	; select bank1
 11997  0BB7  1813               	btfsc	19,0	;volatile
 11998  0BB8  2BBA               	goto	u274_21
 11999  0BB9  2BBB               	goto	u274_20
 12000  0BBA                     u274_21:
 12001  0BBA  2BB6               	goto	i1l575
 12002  0BBB                     u274_20:
 12003  0BBB                     i1l3542:
 12004                           
 12005                           ;adcc.c: 150: };adcc.c: 154: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 12006  0BBB  080D               	movf	13,w	;volatile
 12007  0BBC  00F1               	movwf	?_ADCC_GetSingleConversion+1
 12008  0BBD  080C               	movf	12,w	;volatile
 12009  0BBE  00F0               	movwf	?_ADCC_GetSingleConversion
 12010  0BBF                     i1l578:
 12011  0BBF  0008               	return
 12012  0BC0                     __end_of_ADCC_GetSingleConversion:
 12013                           
 12014                           	psect	text31
 12015  0B8B                     __ptext31:	
 12016 ;; *************** function _TMR5_WriteTimer *****************
 12017 ;; Defined at:
 12018 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 12019 ;; Parameters:    Size  Location     Type
 12020 ;;  timerVal        2    0[COMMON] unsigned int 
 12021 ;; Auto vars:     Size  Location     Type
 12022 ;;		None
 12023 ;; Return value:  Size  Location     Type
 12024 ;;                  1    wreg      void 
 12025 ;; Registers used:
 12026 ;;		wreg, status,2
 12027 ;; Tracked objects:
 12028 ;;		On entry : 0/0
 12029 ;;		On exit  : 0/0
 12030 ;;		Unchanged: 0/0
 12031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12032 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12035 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12036 ;;Total ram usage:        2 bytes
 12037 ;; Hardware stack levels used:    1
 12038 ;; This function calls:
 12039 ;;		Nothing
 12040 ;; This function is called by:
 12041 ;;		_TMR5_ISR
 12042 ;;		_TMR5_Reload
 12043 ;; This function uses a non-reentrant model
 12044 ;;
 12045                           
 12046                           
 12047                           ;psect for function _TMR5_WriteTimer
 12048  0B8B                     _TMR5_WriteTimer:
 12049  0B8B                     i1l3896:	
 12050                           ;incstack = 0
 12051                           ; Regs used in _TMR5_WriteTimer: [wreg+status,2]
 12052                           
 12053                           
 12054                           ;tmr5.c: 130: if (T5CONbits.nT5SYNC == 1)
 12055  0B8B  0024               	movlb	4	; select bank4
 12056  0B8C  1D1A               	btfss	26,2	;volatile
 12057  0B8D  2B8F               	goto	u324_21
 12058  0B8E  2B90               	goto	u324_20
 12059  0B8F                     u324_21:
 12060  0B8F  2B97               	goto	i1l3906
 12061  0B90                     u324_20:
 12062  0B90                     i1l3898:
 12063                           
 12064                           ;tmr5.c: 131: {;tmr5.c: 133: T5CONbits.TMR5ON = 0;
 12065  0B90  101A               	bcf	26,0	;volatile
 12066  0B91                     i1l3900:
 12067                           
 12068                           ;tmr5.c: 136: TMR5H = (timerVal >> 8);
 12069  0B91  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 12070  0B92  0099               	movwf	25	;volatile
 12071  0B93                     i1l3902:
 12072                           
 12073                           ;tmr5.c: 137: TMR5L = timerVal;
 12074  0B93  0870               	movf	TMR5_WriteTimer@timerVal,w
 12075  0B94  0098               	movwf	24	;volatile
 12076  0B95                     i1l3904:
 12077                           
 12078                           ;tmr5.c: 140: T5CONbits.TMR5ON =1;
 12079  0B95  141A               	bsf	26,0	;volatile
 12080                           
 12081                           ;tmr5.c: 141: }
 12082  0B96  2B9B               	goto	i1l689
 12083  0B97                     i1l3906:
 12084                           
 12085                           ;tmr5.c: 142: else;tmr5.c: 143: {;tmr5.c: 145: TMR5H = (timerVal >> 8);
 12086  0B97  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 12087  0B98  0099               	movwf	25	;volatile
 12088  0B99                     i1l3908:
 12089                           
 12090                           ;tmr5.c: 146: TMR5L = timerVal;
 12091  0B99  0870               	movf	TMR5_WriteTimer@timerVal,w
 12092  0B9A  0098               	movwf	24	;volatile
 12093  0B9B                     i1l689:
 12094  0B9B  0008               	return
 12095  0B9C                     __end_of_TMR5_WriteTimer:
 12096                           
 12097                           	psect	text32
 12098  0C01                     __ptext32:	
 12099 ;; *************** function _TMR3_ISR *****************
 12100 ;; Defined at:
 12101 ;;		line 164 in file "mcc_generated_files/tmr3.c"
 12102 ;; Parameters:    Size  Location     Type
 12103 ;;		None
 12104 ;; Auto vars:     Size  Location     Type
 12105 ;;		None
 12106 ;; Return value:  Size  Location     Type
 12107 ;;                  1    wreg      void 
 12108 ;; Registers used:
 12109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12110 ;; Tracked objects:
 12111 ;;		On entry : 0/0
 12112 ;;		On exit  : 0/0
 12113 ;;		Unchanged: 0/0
 12114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12119 ;;Total ram usage:        0 bytes
 12120 ;; Hardware stack levels used:    1
 12121 ;; Hardware stack levels required when called:    5
 12122 ;; This function calls:
 12123 ;;		Absolute function
 12124 ;;		_TMR3_DefaultInterruptHandler
 12125 ;;		_TMR3_WriteTimer
 12126 ;;		_menuLCD_ISR
 12127 ;; This function is called by:
 12128 ;;		_INTERRUPT_InterruptManager
 12129 ;; This function uses a non-reentrant model
 12130 ;;
 12131                           
 12132                           
 12133                           ;psect for function _TMR3_ISR
 12134  0C01                     _TMR3_ISR:
 12135  0C01                     i1l4158:	
 12136                           ;incstack = 0
 12137                           ; Regs used in _TMR3_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12138                           
 12139                           
 12140                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
 12141  0C01  002E               	movlb	14	; select bank14
 12142  0C02  1110               	bcf	16,2	;volatile
 12143  0C03                     i1l4160:
 12144                           
 12145                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
 12146  0C03  0020               	movlb	0	; select bank0
 12147  0C04  086E               	movf	_timer3ReloadVal+1,w	;volatile
 12148  0C05  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 12149  0C06  086D               	movf	_timer3ReloadVal,w	;volatile
 12150  0C07  00F0               	movwf	TMR3_WriteTimer@timerVal
 12151  0C08  318B  237A  318C   	fcall	_TMR3_WriteTimer
 12152  0C0B                     i1l4162:
 12153                           
 12154                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
 12155  0C0B  0021               	movlb	1	; select bank1
 12156  0C0C  0824               	movf	_TMR3_InterruptHandler^(0+128),w
 12157  0C0D  0425               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 12158  0C0E  1903               	btfsc	3,2
 12159  0C0F  2C11               	goto	u380_21
 12160  0C10  2C12               	goto	u380_20
 12161  0C11                     u380_21:
 12162  0C11  2C17               	goto	i1l478
 12163  0C12                     u380_20:
 12164  0C12                     i1l4164:
 12165                           
 12166                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
 12167  0C12  0825               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 12168  0C13  008A               	movwf	10
 12169  0C14  0824               	movf	_TMR3_InterruptHandler^(0+128),w
 12170  0C15  000A               	callw
 12171  0C16  318C               	pagesel	$
 12172  0C17                     i1l478:
 12173  0C17  0008               	return
 12174  0C18                     __end_of_TMR3_ISR:
 12175                           
 12176                           	psect	text33
 12177  0003                     __ptext33:	
 12178 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 12179 ;; Defined at:
 12180 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 12181 ;; Parameters:    Size  Location     Type
 12182 ;;		None
 12183 ;; Auto vars:     Size  Location     Type
 12184 ;;		None
 12185 ;; Return value:  Size  Location     Type
 12186 ;;                  1    wreg      void 
 12187 ;; Registers used:
 12188 ;;		None
 12189 ;; Tracked objects:
 12190 ;;		On entry : 0/0
 12191 ;;		On exit  : 0/0
 12192 ;;		Unchanged: 0/0
 12193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12198 ;;Total ram usage:        0 bytes
 12199 ;; Hardware stack levels used:    1
 12200 ;; This function calls:
 12201 ;;		Nothing
 12202 ;; This function is called by:
 12203 ;;		_TMR3_Initialize
 12204 ;;		_TMR3_ISR
 12205 ;; This function uses a non-reentrant model
 12206 ;;
 12207                           
 12208                           
 12209                           ;psect for function _TMR3_DefaultInterruptHandler
 12210  0003                     _TMR3_DefaultInterruptHandler:
 12211  0003                     i1l484:	
 12212                           ;incstack = 0
 12213                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 12214                           
 12215  0003  0008               	return
 12216  0004                     __end_of_TMR3_DefaultInterruptHandler:
 12217                           
 12218                           	psect	text34
 12219  006D                     __ptext34:	
 12220 ;; *************** function _menuLCD_ISR *****************
 12221 ;; Defined at:
 12222 ;;		line 316 in file "main.c"
 12223 ;; Parameters:    Size  Location     Type
 12224 ;;		None
 12225 ;; Auto vars:     Size  Location     Type
 12226 ;;  diff            6   38[BANK0 ] struct Time
 12227 ;;  str             8   23[BANK0 ] unsigned char [8]
 12228 ;;  tt              4   31[BANK0 ] unsigned char [4]
 12229 ;;  l               3   35[BANK0 ] unsigned char [3]
 12230 ;; Return value:  Size  Location     Type
 12231 ;;                  1    wreg      void 
 12232 ;; Registers used:
 12233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12234 ;; Tracked objects:
 12235 ;;		On entry : 0/0
 12236 ;;		On exit  : 0/0
 12237 ;;		Unchanged: 0/0
 12238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12240 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12241 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12242 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12243 ;;Total ram usage:       23 bytes
 12244 ;; Hardware stack levels used:    1
 12245 ;; Hardware stack levels required when called:    4
 12246 ;; This function calls:
 12247 ;;		_LCDchar
 12248 ;;		_LCDcmd
 12249 ;;		_LCDstr
 12250 ;;		_PWM6_LoadDutyValue
 12251 ;;		_PWM_Output_D4_Enable
 12252 ;;		_TMR2_StartTimer
 12253 ;;		_differenceBetweenTimePeriod
 12254 ;;		_sprintf
 12255 ;;		i1_PWM_Output_D4_Disable
 12256 ;;		i1_TMR2_StopTimer
 12257 ;; This function is called by:
 12258 ;;		_main
 12259 ;;		_TMR3_ISR
 12260 ;; This function uses a non-reentrant model
 12261 ;;
 12262                           
 12263                           
 12264                           ;psect for function _menuLCD_ISR
 12265  006D                     _menuLCD_ISR:
 12266  006D                     i1l3998:	
 12267                           ;incstack = 0
 12268                           ; Regs used in _menuLCD_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12269                           
 12270                           
 12271                           ;main.c: 317: char str[8];;main.c: 318: if(editingClockAlarm){
 12272  006D  0020               	movlb	0	; select bank0
 12273  006E  0854               	movf	_editingClockAlarm,w
 12274  006F  0455               	iorwf	_editingClockAlarm+1,w
 12275  0070  1903               	btfsc	3,2
 12276  0071  2873               	goto	u353_21
 12277  0072  2874               	goto	u353_20
 12278  0073                     u353_21:
 12279  0073  2889               	goto	i1l4002
 12280  0074                     u353_20:
 12281  0074                     i1l4000:
 12282                           
 12283                           ;main.c: 319: sprintf(str, "%02d:%02d:%02d", clkAlarm.alarmVal.h,clkAlarm.alarmVal.m,clk
      +                          Alarm.alarmVal.s);
 12284  0074  3000               	movlw	low (STR_1| (0+32768))
 12285  0075  00A0               	movwf	sprintf@f
 12286  0076  3090               	movlw	high (STR_1| (0+32768))
 12287  0077  00A1               	movwf	sprintf@f+1
 12288  0078  0862               	movf	_clkAlarm+1,w
 12289  0079  00A3               	movwf	?_sprintf+3
 12290  007A  0861               	movf	_clkAlarm,w
 12291  007B  00A2               	movwf	?_sprintf+2
 12292  007C  0864               	movf	_clkAlarm+3,w
 12293  007D  00A5               	movwf	?_sprintf+5
 12294  007E  0863               	movf	_clkAlarm+2,w
 12295  007F  00A4               	movwf	?_sprintf+4
 12296  0080  0866               	movf	_clkAlarm+5,w
 12297  0081  00A7               	movwf	?_sprintf+7
 12298  0082  0865               	movf	_clkAlarm+4,w
 12299  0083  00A6               	movwf	?_sprintf+6
 12300  0084  3037               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 12301  0085  3182  2235  3180   	fcall	_sprintf
 12302                           
 12303                           ;main.c: 320: } else {
 12304  0088  289D               	goto	i1l4004
 12305  0089                     i1l4002:
 12306                           
 12307                           ;main.c: 321: sprintf(str, "%02d:%02d:%02d", t.h,t.m,t.s);
 12308  0089  3000               	movlw	low (STR_1| (0+32768))
 12309  008A  00A0               	movwf	sprintf@f
 12310  008B  3090               	movlw	high (STR_1| (0+32768))
 12311  008C  00A1               	movwf	sprintf@f+1
 12312  008D  084D               	movf	_t+1,w
 12313  008E  00A3               	movwf	?_sprintf+3
 12314  008F  084C               	movf	_t,w
 12315  0090  00A2               	movwf	?_sprintf+2
 12316  0091  084F               	movf	_t+3,w
 12317  0092  00A5               	movwf	?_sprintf+5
 12318  0093  084E               	movf	_t+2,w
 12319  0094  00A4               	movwf	?_sprintf+4
 12320  0095  0851               	movf	_t+5,w
 12321  0096  00A7               	movwf	?_sprintf+7
 12322  0097  0850               	movf	_t+4,w
 12323  0098  00A6               	movwf	?_sprintf+6
 12324  0099  3037               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 12325  009A  3182  2235  3180   	fcall	_sprintf
 12326  009D                     i1l4004:
 12327                           
 12328                           ;main.c: 322: };main.c: 323: LCDcmd(0x80);
 12329  009D  3080               	movlw	128
 12330  009E  318B  2324  3180   	fcall	_LCDcmd
 12331  00A1                     i1l4006:
 12332                           
 12333                           ;main.c: 324: LCDstr(str);
 12334  00A1  3037               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 12335  00A2  318B  23C0  3180   	fcall	_LCDstr
 12336  00A5                     i1l4008:
 12337                           
 12338                           ;main.c: 327: if(alarmsEnable){
 12339  00A5  0020               	movlb	0	; select bank0
 12340  00A6  086C               	movf	_alarmsEnable,w
 12341  00A7  1903               	btfsc	3,2
 12342  00A8  28AA               	goto	u354_21
 12343  00A9  28AB               	goto	u354_20
 12344  00AA                     u354_21:
 12345  00AA  29B1               	goto	i1l4064
 12346  00AB                     u354_20:
 12347  00AB                     i1l4010:
 12348                           
 12349                           ;main.c: 328: LCDcmd(0x8F);
 12350  00AB  308F               	movlw	143
 12351  00AC  318B  2324  3180   	fcall	_LCDcmd
 12352                           
 12353                           ;main.c: 329: LCDchar('A');
 12354  00AF  3041               	movlw	65
 12355  00B0  318B  232B  3180   	fcall	_LCDchar
 12356  00B3                     i1l4012:
 12357                           
 12358                           ;main.c: 332: if(clkAlarm.trigger == 1){
 12359  00B3  0020               	movlb	0	; select bank0
 12360  00B4  0367               	decf	_clkAlarm+6,w
 12361  00B5  1D03               	btfss	3,2
 12362  00B6  28B8               	goto	u355_21
 12363  00B7  28B9               	goto	u355_20
 12364  00B8                     u355_21:
 12365  00B8  28C2               	goto	i1l4016
 12366  00B9                     u355_20:
 12367  00B9                     i1l4014:
 12368                           
 12369                           ;main.c: 333: LCDcmd(0x8B);
 12370  00B9  308B               	movlw	139
 12371  00BA  318B  2324  3180   	fcall	_LCDcmd
 12372                           
 12373                           ;main.c: 334: LCDchar('C');
 12374  00BD  3043               	movlw	67
 12375  00BE  318B  232B  3180   	fcall	_LCDchar
 12376                           
 12377                           ;main.c: 335: } else{
 12378  00C1  28CA               	goto	i1l4018
 12379  00C2                     i1l4016:
 12380                           
 12381                           ;main.c: 336: LCDcmd(0x8B);
 12382  00C2  308B               	movlw	139
 12383  00C3  318B  2324  3180   	fcall	_LCDcmd
 12384                           
 12385                           ;main.c: 337: LCDchar(' ');
 12386  00C6  3020               	movlw	32
 12387  00C7  318B  232B  3180   	fcall	_LCDchar
 12388  00CA                     i1l4018:
 12389                           
 12390                           ;main.c: 338: };main.c: 341: if(tempAlarm.trigger == 1){
 12391  00CA  0020               	movlb	0	; select bank0
 12392  00CB  036B               	decf	_tempAlarm+1,w
 12393  00CC  1D03               	btfss	3,2
 12394  00CD  28CF               	goto	u356_21
 12395  00CE  28D0               	goto	u356_20
 12396  00CF                     u356_21:
 12397  00CF  28D9               	goto	i1l4022
 12398  00D0                     u356_20:
 12399  00D0                     i1l4020:
 12400                           
 12401                           ;main.c: 342: LCDcmd(0x8C);
 12402  00D0  308C               	movlw	140
 12403  00D1  318B  2324  3180   	fcall	_LCDcmd
 12404                           
 12405                           ;main.c: 343: LCDchar('T');
 12406  00D4  3054               	movlw	84
 12407  00D5  318B  232B  3180   	fcall	_LCDchar
 12408                           
 12409                           ;main.c: 344: } else{
 12410  00D8  28E1               	goto	i1l4024
 12411  00D9                     i1l4022:
 12412                           
 12413                           ;main.c: 345: LCDcmd(0x8C);
 12414  00D9  308C               	movlw	140
 12415  00DA  318B  2324  3180   	fcall	_LCDcmd
 12416                           
 12417                           ;main.c: 346: LCDchar(' ');
 12418  00DD  3020               	movlw	32
 12419  00DE  318B  232B  3180   	fcall	_LCDchar
 12420  00E1                     i1l4024:
 12421                           
 12422                           ;main.c: 347: };main.c: 350: if(lumAlarm.trigger == 1){
 12423  00E1  0020               	movlb	0	; select bank0
 12424  00E2  0369               	decf	_lumAlarm+1,w
 12425  00E3  1D03               	btfss	3,2
 12426  00E4  28E6               	goto	u357_21
 12427  00E5  28E7               	goto	u357_20
 12428  00E6                     u357_21:
 12429  00E6  28F0               	goto	i1l4028
 12430  00E7                     u357_20:
 12431  00E7                     i1l4026:
 12432                           
 12433                           ;main.c: 351: LCDcmd(0x8D);
 12434  00E7  308D               	movlw	141
 12435  00E8  318B  2324  3180   	fcall	_LCDcmd
 12436                           
 12437                           ;main.c: 352: LCDchar('L');
 12438  00EB  304C               	movlw	76
 12439  00EC  318B  232B  3180   	fcall	_LCDchar
 12440                           
 12441                           ;main.c: 353: } else{
 12442  00EF  28F8               	goto	i1l4030
 12443  00F0                     i1l4028:
 12444                           
 12445                           ;main.c: 354: LCDcmd(0x8D);
 12446  00F0  308D               	movlw	141
 12447  00F1  318B  2324  3180   	fcall	_LCDcmd
 12448                           
 12449                           ;main.c: 355: LCDchar(' ');
 12450  00F4  3020               	movlw	32
 12451  00F5  318B  232B  3180   	fcall	_LCDchar
 12452  00F8                     i1l4030:
 12453                           
 12454                           ;main.c: 356: };main.c: 357: if(clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigge
      +                          r){
 12455  00F8  0020               	movlb	0	; select bank0
 12456  00F9  0867               	movf	_clkAlarm+6,w
 12457  00FA  1D03               	btfss	3,2
 12458  00FB  28FD               	goto	u358_21
 12459  00FC  28FE               	goto	u358_20
 12460  00FD                     u358_21:
 12461  00FD  2908               	goto	i1l4036
 12462  00FE                     u358_20:
 12463  00FE                     i1l4032:
 12464  00FE  086B               	movf	_tempAlarm+1,w
 12465  00FF  1D03               	btfss	3,2
 12466  0100  2902               	goto	u359_21
 12467  0101  2903               	goto	u359_20
 12468  0102                     u359_21:
 12469  0102  2908               	goto	i1l4036
 12470  0103                     u359_20:
 12471  0103                     i1l4034:
 12472  0103  0869               	movf	_lumAlarm+1,w
 12473  0104  1903               	btfsc	3,2
 12474  0105  2907               	goto	u360_21
 12475  0106  2908               	goto	u360_20
 12476  0107                     u360_21:
 12477  0107  29B9               	goto	i1l1154
 12478  0108                     u360_20:
 12479  0108                     i1l4036:
 12480                           
 12481                           ;main.c: 358: if(alarmPWMStart.h == -1){
 12482  0108  0021               	movlb	1	; select bank1
 12483  0109  0A3A               	incf	_alarmPWMStart^(0+128),w
 12484  010A  1D03               	skipz
 12485  010B  2910               	goto	u361_21
 12486  010C  0A3B               	incf	(_alarmPWMStart+1)^(0+128),w
 12487  010D  1D03               	btfss	3,2
 12488  010E  2910               	goto	u361_21
 12489  010F  2911               	goto	u361_20
 12490  0110                     u361_21:
 12491  0110  2929               	goto	i1l4040
 12492  0111                     u361_20:
 12493  0111                     i1l4038:
 12494                           
 12495                           ;main.c: 359: alarmPWMStart.h = t.h;
 12496  0111  0020               	movlb	0	; select bank0
 12497  0112  084D               	movf	_t+1,w
 12498  0113  0021               	movlb	1	; select bank1
 12499  0114  00BB               	movwf	(_alarmPWMStart+1)^(0+128)
 12500  0115  0020               	movlb	0	; select bank0
 12501  0116  084C               	movf	_t,w
 12502  0117  0021               	movlb	1	; select bank1
 12503  0118  00BA               	movwf	_alarmPWMStart^(0+128)
 12504                           
 12505                           ;main.c: 360: alarmPWMStart.m = t.m;
 12506  0119  0020               	movlb	0	; select bank0
 12507  011A  084F               	movf	_t+3,w
 12508  011B  0021               	movlb	1	; select bank1
 12509  011C  00BD               	movwf	((_alarmPWMStart+1)^(0+128)+2)
 12510  011D  0020               	movlb	0	; select bank0
 12511  011E  084E               	movf	_t+2,w
 12512  011F  0021               	movlb	1	; select bank1
 12513  0120  00BC               	movwf	(_alarmPWMStart^(0+128)+2)
 12514                           
 12515                           ;main.c: 361: alarmPWMStart.s = t.s;
 12516  0121  0020               	movlb	0	; select bank0
 12517  0122  0851               	movf	_t+5,w
 12518  0123  0021               	movlb	1	; select bank1
 12519  0124  00BF               	movwf	((_alarmPWMStart+1)^(0+128)+4)
 12520  0125  0020               	movlb	0	; select bank0
 12521  0126  0850               	movf	_t+4,w
 12522  0127  0021               	movlb	1	; select bank1
 12523  0128  00BE               	movwf	(_alarmPWMStart^(0+128)+4)
 12524  0129                     i1l4040:
 12525                           
 12526                           ;main.c: 362: };main.c: 363: struct Time diff = {0,0,0};
 12527  0129  30B4               	movlw	low menuLCD_ISR@F12791
 12528  012A  0086               	movwf	6
 12529  012B  3000               	movlw	high menuLCD_ISR@F12791
 12530  012C  0087               	movwf	7
 12531  012D  3046               	movlw	low menuLCD_ISR@diff
 12532  012E  0084               	movwf	4
 12533  012F  3000               	movlw	high menuLCD_ISR@diff
 12534  0130  0085               	movwf	5
 12535  0131  3006               	movlw	6
 12536  0132  0020               	movlb	0	; select bank0
 12537  0133  00B5               	movwf	??_menuLCD_ISR
 12538  0134                     u362_20:
 12539  0134  0016               	moviw fsr1++
 12540  0135  001A               	movwi fsr0++
 12541  0136  0BB5               	decfsz	??_menuLCD_ISR,f
 12542  0137  2934               	goto	u362_20
 12543  0138                     i1l4042:
 12544                           
 12545                           ;main.c: 364: differenceBetweenTimePeriod( t, alarmPWMStart, &diff);
 12546  0138  304C               	movlw	low _t
 12547  0139  0086               	movwf	6
 12548  013A  3000               	movlw	high _t
 12549  013B  0087               	movwf	7
 12550  013C  3070               	movlw	low differenceBetweenTimePeriod@start
 12551  013D  0084               	movwf	4
 12552  013E  3000               	movlw	high differenceBetweenTimePeriod@start
 12553  013F  0085               	movwf	5
 12554  0140  3F40               	moviw [0]fsr1
 12555  0141  3F80               	movwi [0]fsr0
 12556  0142  3F41               	moviw [1]fsr1
 12557  0143  3F81               	movwi [1]fsr0
 12558  0144  3F42               	moviw [2]fsr1
 12559  0145  3F82               	movwi [2]fsr0
 12560  0146  3F43               	moviw [3]fsr1
 12561  0147  3F83               	movwi [3]fsr0
 12562  0148  3F44               	moviw [4]fsr1
 12563  0149  3F84               	movwi [4]fsr0
 12564  014A  3F45               	moviw [5]fsr1
 12565  014B  3F85               	movwi [5]fsr0
 12566  014C  30BA               	movlw	low _alarmPWMStart
 12567  014D  0086               	movwf	6
 12568  014E  3000               	movlw	high _alarmPWMStart
 12569  014F  0087               	movwf	7
 12570  0150  3076               	movlw	low differenceBetweenTimePeriod@stop
 12571  0151  0084               	movwf	4
 12572  0152  3000               	movlw	high differenceBetweenTimePeriod@stop
 12573  0153  0085               	movwf	5
 12574  0154  3F40               	moviw [0]fsr1
 12575  0155  3F80               	movwi [0]fsr0
 12576  0156  3F41               	moviw [1]fsr1
 12577  0157  3F81               	movwi [1]fsr0
 12578  0158  3F42               	moviw [2]fsr1
 12579  0159  3F82               	movwi [2]fsr0
 12580  015A  3F43               	moviw [3]fsr1
 12581  015B  3F83               	movwi [3]fsr0
 12582  015C  3F44               	moviw [4]fsr1
 12583  015D  3F84               	movwi [4]fsr0
 12584  015E  3F45               	moviw [5]fsr1
 12585  015F  3F85               	movwi [5]fsr0
 12586  0160  3046               	movlw	(low (menuLCD_ISR@diff| 0))& (0+255)
 12587  0161  00B5               	movwf	??_menuLCD_ISR
 12588  0162  0835               	movf	??_menuLCD_ISR,w
 12589  0163  00FC               	movwf	differenceBetweenTimePeriod@diff
 12590  0164  318F  271C  3180   	fcall	_differenceBetweenTimePeriod
 12591  0167                     i1l4044:
 12592                           
 12593                           ;main.c: 367: if(diff.s <= 5){
 12594  0167  0020               	movlb	0	; select bank0
 12595  0168  084B               	movf	menuLCD_ISR@diff+5,w
 12596  0169  3A80               	xorlw	128
 12597  016A  00B5               	movwf	??_menuLCD_ISR
 12598  016B  3080               	movlw	128
 12599  016C  0235               	subwf	??_menuLCD_ISR,w
 12600  016D  1D03               	skipz
 12601  016E  2971               	goto	u363_25
 12602  016F  3006               	movlw	6
 12603  0170  024A               	subwf	menuLCD_ISR@diff+4,w
 12604  0171                     u363_25:
 12605  0171  1803               	skipnc
 12606  0172  2974               	goto	u363_21
 12607  0173  2975               	goto	u363_20
 12608  0174                     u363_21:
 12609  0174  299F               	goto	i1l1148
 12610  0175                     u363_20:
 12611  0175                     i1l4046:
 12612                           
 12613                           ;main.c: 368: if(PWM6EN==0){
 12614  0175  0027               	movlb	7	; select bank7
 12615  0176  1B8E               	btfsc	14,7	;volatile
 12616  0177  2979               	goto	u364_21
 12617  0178  297A               	goto	u364_20
 12618  0179                     u364_21:
 12619  0179  2980               	goto	i1l4050
 12620  017A                     u364_20:
 12621  017A                     i1l4048:
 12622                           
 12623                           ;main.c: 369: TMR2_StartTimer();
 12624  017A  318A  22F4  3180   	fcall	_TMR2_StartTimer
 12625                           
 12626                           ;main.c: 370: PWM_Output_D4_Enable();
 12627  017D  318A  22E2  3180   	fcall	_PWM_Output_D4_Enable
 12628  0180                     i1l4050:
 12629                           
 12630                           ;main.c: 371: };main.c: 372: if(dimingLed <= 1023){
 12631  0180  0020               	movlb	0	; select bank0
 12632  0181  0857               	movf	_dimingLed+1,w
 12633  0182  3A80               	xorlw	128
 12634  0183  00B5               	movwf	??_menuLCD_ISR
 12635  0184  3084               	movlw	132
 12636  0185  0235               	subwf	??_menuLCD_ISR,w
 12637  0186  1D03               	skipz
 12638  0187  298A               	goto	u365_25
 12639  0188  3000               	movlw	0
 12640  0189  0256               	subwf	_dimingLed,w
 12641  018A                     u365_25:
 12642  018A  1803               	skipnc
 12643  018B  298D               	goto	u365_21
 12644  018C  298E               	goto	u365_20
 12645  018D                     u365_21:
 12646  018D  2994               	goto	i1l4054
 12647  018E                     u365_20:
 12648  018E                     i1l4052:
 12649                           
 12650                           ;main.c: 373: dimingLed += 200;
 12651  018E  30C8               	movlw	200
 12652  018F  0020               	movlb	0	; select bank0
 12653  0190  07D6               	addwf	_dimingLed,f
 12654  0191  3000               	movlw	0
 12655  0192  3DD7               	addwfc	_dimingLed+1,f
 12656                           
 12657                           ;main.c: 374: } else{
 12658  0193  2997               	goto	i1l4056
 12659  0194                     i1l4054:
 12660                           
 12661                           ;main.c: 375: dimingLed = 0;
 12662  0194  0020               	movlb	0	; select bank0
 12663  0195  01D6               	clrf	_dimingLed
 12664  0196  01D7               	clrf	_dimingLed+1
 12665  0197                     i1l4056:
 12666                           
 12667                           ;main.c: 376: };main.c: 377: PWM6_LoadDutyValue(dimingLed);
 12668  0197  0857               	movf	_dimingLed+1,w
 12669  0198  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12670  0199  0856               	movf	_dimingLed,w
 12671  019A  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
 12672  019B  318B  23D4  3180   	fcall	_PWM6_LoadDutyValue
 12673                           
 12674                           ;main.c: 378: } else if(PWM6EN==1){
 12675  019E  29B9               	goto	i1l1154
 12676  019F                     i1l1148:
 12677  019F  0027               	movlb	7	; select bank7
 12678  01A0  1F8E               	btfss	14,7	;volatile
 12679  01A1  29A3               	goto	u366_21
 12680  01A2  29A4               	goto	u366_20
 12681  01A3                     u366_21:
 12682  01A3  29B9               	goto	i1l1154
 12683  01A4                     u366_20:
 12684  01A4                     i1l4058:
 12685                           
 12686                           ;main.c: 379: PWM6_LoadDutyValue(0);
 12687  01A4  3000               	movlw	0
 12688  01A5  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
 12689  01A6  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 12690  01A7  318B  23D4  3180   	fcall	_PWM6_LoadDutyValue
 12691  01AA                     i1l4060:
 12692                           
 12693                           ;main.c: 380: TMR2_StopTimer();
 12694  01AA  318A  22F8  3180   	fcall	i1_TMR2_StopTimer
 12695  01AD                     i1l4062:
 12696                           
 12697                           ;main.c: 381: PWM_Output_D4_Disable();
 12698  01AD  318A  22E8  3180   	fcall	i1_PWM_Output_D4_Disable
 12699  01B0  29B9               	goto	i1l1154
 12700  01B1                     i1l4064:
 12701                           
 12702                           ;main.c: 385: LCDcmd(0x8F);
 12703  01B1  308F               	movlw	143
 12704  01B2  318B  2324  3180   	fcall	_LCDcmd
 12705                           
 12706                           ;main.c: 386: LCDchar('a');
 12707  01B5  3061               	movlw	97
 12708  01B6  318B  232B  3180   	fcall	_LCDchar
 12709  01B9                     i1l1154:
 12710                           
 12711                           ;main.c: 387: };main.c: 389: LCDcmd(0xc0);
 12712  01B9  30C0               	movlw	192
 12713  01BA  318B  2324  3180   	fcall	_LCDcmd
 12714  01BD                     i1l4066:
 12715                           
 12716                           ;main.c: 390: char tt[4];;main.c: 391: if(editingTempAlarm){
 12717  01BD  0020               	movlb	0	; select bank0
 12718  01BE  085E               	movf	_editingTempAlarm,w
 12719  01BF  1903               	btfsc	3,2
 12720  01C0  29C2               	goto	u367_21
 12721  01C1  29C3               	goto	u367_20
 12722  01C2                     u367_21:
 12723  01C2  29D3               	goto	i1l4070
 12724  01C3                     u367_20:
 12725  01C3                     i1l4068:
 12726                           
 12727                           ;main.c: 392: sprintf(tt, "%02d C", tempAlarm.alarmTemp);
 12728  01C3  3019               	movlw	low (STR_3| (0+32768))
 12729  01C4  00A0               	movwf	sprintf@f
 12730  01C5  3090               	movlw	high (STR_3| (0+32768))
 12731  01C6  00A1               	movwf	sprintf@f+1
 12732  01C7  086A               	movf	_tempAlarm,w
 12733  01C8  00B5               	movwf	??_menuLCD_ISR
 12734  01C9  01B6               	clrf	??_menuLCD_ISR+1
 12735  01CA  0835               	movf	??_menuLCD_ISR,w
 12736  01CB  00A2               	movwf	?_sprintf+2
 12737  01CC  0836               	movf	??_menuLCD_ISR+1,w
 12738  01CD  00A3               	movwf	?_sprintf+3
 12739  01CE  303F               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 12740  01CF  3182  2235  3180   	fcall	_sprintf
 12741                           
 12742                           ;main.c: 393: } else{
 12743  01D2  29E2               	goto	i1l4072
 12744  01D3                     i1l4070:
 12745                           
 12746                           ;main.c: 394: sprintf(tt, "%02d C", temp);
 12747  01D3  3019               	movlw	low (STR_3| (0+32768))
 12748  01D4  00A0               	movwf	sprintf@f
 12749  01D5  3090               	movlw	high (STR_3| (0+32768))
 12750  01D6  00A1               	movwf	sprintf@f+1
 12751  01D7  0860               	movf	_temp,w
 12752  01D8  00B5               	movwf	??_menuLCD_ISR
 12753  01D9  01B6               	clrf	??_menuLCD_ISR+1
 12754  01DA  0835               	movf	??_menuLCD_ISR,w
 12755  01DB  00A2               	movwf	?_sprintf+2
 12756  01DC  0836               	movf	??_menuLCD_ISR+1,w
 12757  01DD  00A3               	movwf	?_sprintf+3
 12758  01DE  303F               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 12759  01DF  3182  2235  3180   	fcall	_sprintf
 12760  01E2                     i1l4072:
 12761                           
 12762                           ;main.c: 395: };main.c: 396: LCDstr(tt);
 12763  01E2  303F               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 12764  01E3  318B  23C0  3180   	fcall	_LCDstr
 12765  01E6                     i1l4074:
 12766                           
 12767                           ;main.c: 398: LCDcmd(0xcd);
 12768  01E6  30CD               	movlw	205
 12769  01E7  318B  2324  3180   	fcall	_LCDcmd
 12770  01EA                     i1l4076:
 12771                           
 12772                           ;main.c: 399: char l[3];;main.c: 400: sprintf(l, "L %d", lumLevel);
 12773  01EA  3020               	movlw	low (STR_5| (0+32768))
 12774  01EB  0020               	movlb	0	; select bank0
 12775  01EC  00A0               	movwf	sprintf@f
 12776  01ED  3090               	movlw	high (STR_5| (0+32768))
 12777  01EE  00A1               	movwf	sprintf@f+1
 12778  01EF  085F               	movf	_lumLevel,w
 12779  01F0  00B5               	movwf	??_menuLCD_ISR
 12780  01F1  01B6               	clrf	??_menuLCD_ISR+1
 12781  01F2  0835               	movf	??_menuLCD_ISR,w
 12782  01F3  00A2               	movwf	?_sprintf+2
 12783  01F4  0836               	movf	??_menuLCD_ISR+1,w
 12784  01F5  00A3               	movwf	?_sprintf+3
 12785  01F6  3043               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 12786  01F7  3182  2235  3180   	fcall	_sprintf
 12787  01FA                     i1l4078:
 12788                           
 12789                           ;main.c: 401: LCDstr(l);
 12790  01FA  3043               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 12791  01FB  318B  23C0  3180   	fcall	_LCDstr
 12792  01FE                     i1l4080:
 12793                           
 12794                           ;main.c: 403: if(mode == 1){
 12795  01FE  0020               	movlb	0	; select bank0
 12796  01FF  0352               	decf	_mode,w
 12797  0200  0453               	iorwf	_mode+1,w
 12798  0201  1D03               	btfss	3,2
 12799  0202  2A04               	goto	u368_21
 12800  0203  2A05               	goto	u368_20
 12801  0204                     u368_21:
 12802  0204  2A29               	goto	i1l4094
 12803  0205                     u368_20:
 12804  0205                     i1l4082:
 12805                           
 12806                           ;main.c: 404: if(editingClockAlarm == 1){
 12807  0205  0354               	decf	_editingClockAlarm,w
 12808  0206  0455               	iorwf	_editingClockAlarm+1,w
 12809  0207  1D03               	btfss	3,2
 12810  0208  2A0A               	goto	u369_21
 12811  0209  2A0B               	goto	u369_20
 12812  020A                     u369_21:
 12813  020A  2A10               	goto	i1l4086
 12814  020B                     u369_20:
 12815  020B                     i1l4084:
 12816                           
 12817                           ;main.c: 405: LCDcmd(0x81);
 12818  020B  3081               	movlw	129
 12819  020C  318B  2324  3180   	fcall	_LCDcmd
 12820                           
 12821                           ;main.c: 406: } else if(editingClockAlarm == 2){
 12822  020F  2A34               	goto	i1l1165
 12823  0210                     i1l4086:
 12824  0210  3002               	movlw	2
 12825  0211  0654               	xorwf	_editingClockAlarm,w
 12826  0212  0455               	iorwf	_editingClockAlarm+1,w
 12827  0213  1D03               	btfss	3,2
 12828  0214  2A16               	goto	u370_21
 12829  0215  2A17               	goto	u370_20
 12830  0216                     u370_21:
 12831  0216  2A1C               	goto	i1l4090
 12832  0217                     u370_20:
 12833  0217                     i1l4088:
 12834                           
 12835                           ;main.c: 407: LCDcmd(0x84);
 12836  0217  3084               	movlw	132
 12837  0218  318B  2324  3180   	fcall	_LCDcmd
 12838                           
 12839                           ;main.c: 408: } else if(editingClockAlarm == 3){
 12840  021B  2A34               	goto	i1l1165
 12841  021C                     i1l4090:
 12842  021C  3003               	movlw	3
 12843  021D  0654               	xorwf	_editingClockAlarm,w
 12844  021E  0455               	iorwf	_editingClockAlarm+1,w
 12845  021F  1D03               	btfss	3,2
 12846  0220  2A22               	goto	u371_21
 12847  0221  2A23               	goto	u371_20
 12848  0222                     u371_21:
 12849  0222  2A28               	goto	i1l1159
 12850  0223                     u371_20:
 12851  0223                     i1l4092:
 12852                           
 12853                           ;main.c: 409: LCDcmd(0x87);
 12854  0223  3087               	movlw	135
 12855  0224  318B  2324  3180   	fcall	_LCDcmd
 12856  0227  2A34               	goto	i1l1165
 12857  0228                     i1l1159:
 12858                           
 12859                           ;main.c: 410: };main.c: 411: } else if(mode == 2){
 12860  0228  2A34               	goto	i1l1165
 12861  0229                     i1l4094:
 12862  0229  3002               	movlw	2
 12863  022A  0652               	xorwf	_mode,w
 12864  022B  0453               	iorwf	_mode+1,w
 12865  022C  1D03               	btfss	3,2
 12866  022D  2A2F               	goto	u372_21
 12867  022E  2A30               	goto	u372_20
 12868  022F                     u372_21:
 12869  022F  2A34               	goto	i1l1165
 12870  0230                     u372_20:
 12871  0230                     i1l4096:
 12872                           
 12873                           ;main.c: 412: LCDcmd(0xc1);
 12874  0230  30C1               	movlw	193
 12875  0231  318B  2324  3180   	fcall	_LCDcmd
 12876  0234                     i1l1165:
 12877  0234  0008               	return
 12878  0235                     __end_of_menuLCD_ISR:
 12879                           
 12880                           	psect	text35
 12881  0AF8                     __ptext35:	
 12882 ;; *************** function i1_TMR2_StopTimer *****************
 12883 ;; Defined at:
 12884 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 12885 ;; Parameters:    Size  Location     Type
 12886 ;;		None
 12887 ;; Auto vars:     Size  Location     Type
 12888 ;;		None
 12889 ;; Return value:  Size  Location     Type
 12890 ;;                  1    wreg      void 
 12891 ;; Registers used:
 12892 ;;		status,2, status,0, pclath, cstack
 12893 ;; Tracked objects:
 12894 ;;		On entry : 0/0
 12895 ;;		On exit  : 0/0
 12896 ;;		Unchanged: 0/0
 12897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12902 ;;Total ram usage:        0 bytes
 12903 ;; Hardware stack levels used:    1
 12904 ;; Hardware stack levels required when called:    1
 12905 ;; This function calls:
 12906 ;;		i1_TMR2_Stop
 12907 ;; This function is called by:
 12908 ;;		_menuLCD_ISR
 12909 ;; This function uses a non-reentrant model
 12910 ;;
 12911                           
 12912                           
 12913                           ;psect for function i1_TMR2_StopTimer
 12914  0AF8                     i1_TMR2_StopTimer:
 12915  0AF8                     i1l3736:	
 12916                           ;incstack = 0
 12917                           ; Regs used in i1_TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 12918                           
 12919                           
 12920                           ;tmr2.c: 119: TMR2_Stop();
 12921  0AF8  318A  22EB  318A   	fcall	i1_TMR2_Stop
 12922  0AFB                     i1l767:
 12923  0AFB  0008               	return
 12924  0AFC                     __end_ofi1_TMR2_StopTimer:
 12925                           
 12926                           	psect	text36
 12927  0AEB                     __ptext36:	
 12928 ;; *************** function i1_TMR2_Stop *****************
 12929 ;; Defined at:
 12930 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 12931 ;; Parameters:    Size  Location     Type
 12932 ;;		None
 12933 ;; Auto vars:     Size  Location     Type
 12934 ;;		None
 12935 ;; Return value:  Size  Location     Type
 12936 ;;                  1    wreg      void 
 12937 ;; Registers used:
 12938 ;;		None
 12939 ;; Tracked objects:
 12940 ;;		On entry : 0/0
 12941 ;;		On exit  : 0/0
 12942 ;;		Unchanged: 0/0
 12943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12948 ;;Total ram usage:        0 bytes
 12949 ;; Hardware stack levels used:    1
 12950 ;; This function calls:
 12951 ;;		Nothing
 12952 ;; This function is called by:
 12953 ;;		i1_TMR2_StopTimer
 12954 ;; This function uses a non-reentrant model
 12955 ;;
 12956                           
 12957                           
 12958                           ;psect for function i1_TMR2_Stop
 12959  0AEB                     i1_TMR2_Stop:
 12960  0AEB                     i1l3496:	
 12961                           ;incstack = 0
 12962                           ; Regs used in i1_TMR2_Stop: []
 12963                           
 12964                           
 12965                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 12966  0AEB  0025               	movlb	5	; select bank5
 12967  0AEC  138E               	bcf	14,7	;volatile
 12968  0AED                     i1l764:
 12969  0AED  0008               	return
 12970  0AEE                     __end_ofi1_TMR2_Stop:
 12971                           
 12972                           	psect	text37
 12973  0AE8                     __ptext37:	
 12974 ;; *************** function i1_PWM_Output_D4_Disable *****************
 12975 ;; Defined at:
 12976 ;;		line 228 in file "main.c"
 12977 ;; Parameters:    Size  Location     Type
 12978 ;;		None
 12979 ;; Auto vars:     Size  Location     Type
 12980 ;;		None
 12981 ;; Return value:  Size  Location     Type
 12982 ;;                  1    wreg      void 
 12983 ;; Registers used:
 12984 ;;		None
 12985 ;; Tracked objects:
 12986 ;;		On entry : 0/0
 12987 ;;		On exit  : 0/0
 12988 ;;		Unchanged: 0/0
 12989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12994 ;;Total ram usage:        0 bytes
 12995 ;; Hardware stack levels used:    1
 12996 ;; This function calls:
 12997 ;;		Nothing
 12998 ;; This function is called by:
 12999 ;;		_menuLCD_ISR
 13000 ;; This function uses a non-reentrant model
 13001 ;;
 13002                           
 13003                           
 13004                           ;psect for function i1_PWM_Output_D4_Disable
 13005  0AE8                     i1_PWM_Output_D4_Disable:
 13006  0AE8                     i1l3738:	
 13007                           ;incstack = 0
 13008                           ; Regs used in i1_PWM_Output_D4_Disable: []
 13009                           
 13010                           
 13011                           ;main.c: 229: PWM6EN = 0;
 13012  0AE8  0027               	movlb	7	; select bank7
 13013  0AE9  138E               	bcf	14,7	;volatile
 13014  0AEA                     i1l1090:
 13015  0AEA  0008               	return
 13016  0AEB                     __end_ofi1_PWM_Output_D4_Disable:
 13017                           
 13018                           	psect	text38
 13019  0235                     __ptext38:	
 13020 ;; *************** function _sprintf *****************
 13021 ;; Defined at:
 13022 ;;		line 505 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
 13023 ;; Parameters:    Size  Location     Type
 13024 ;;  sp              1    wreg     PTR unsigned char 
 13025 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 13026 ;;  f               2    0[BANK0 ] PTR const unsigned char 
 13027 ;;		 -> STR_5(5), STR_4(7), STR_3(7), STR_2(15), 
 13028 ;;		 -> STR_1(15), 
 13029 ;; Auto vars:     Size  Location     Type
 13030 ;;  sp              1   20[BANK0 ] PTR unsigned char 
 13031 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 13032 ;;  tmpval          4    0        struct .
 13033 ;;  width           2   17[BANK0 ] int 
 13034 ;;  val             2   14[BANK0 ] unsigned int 
 13035 ;;  cp              2    0        PTR const unsigned char 
 13036 ;;  len             2    0        unsigned int 
 13037 ;;  c               1   19[BANK0 ] unsigned char 
 13038 ;;  flag            1   16[BANK0 ] unsigned char 
 13039 ;;  prec            1   13[BANK0 ] char 
 13040 ;;  ap              1   12[BANK0 ] PTR void [1]
 13041 ;;		 -> ?_sprintf(2), 
 13042 ;; Return value:  Size  Location     Type
 13043 ;;                  2    0[BANK0 ] int 
 13044 ;; Registers used:
 13045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13046 ;; Tracked objects:
 13047 ;;		On entry : 0/0
 13048 ;;		On exit  : 0/0
 13049 ;;		Unchanged: 0/0
 13050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13051 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13052 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13053 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13054 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13055 ;;Total ram usage:       21 bytes
 13056 ;; Hardware stack levels used:    1
 13057 ;; Hardware stack levels required when called:    1
 13058 ;; This function calls:
 13059 ;;		___lwdiv
 13060 ;;		___lwmod
 13061 ;;		___wmul
 13062 ;;		_isdigit
 13063 ;; This function is called by:
 13064 ;;		_menuLCD_ISR
 13065 ;; This function uses a non-reentrant model
 13066 ;;
 13067                           
 13068                           
 13069                           ;psect for function _sprintf
 13070  0235                     _sprintf:
 13071                           
 13072                           ;incstack = 0
 13073                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13074                           ;sprintf@sp stored from wreg
 13075  0235  0020               	movlb	0	; select bank0
 13076  0236  00B4               	movwf	sprintf@sp
 13077  0237                     i1l3626:
 13078                           
 13079                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 13080  0237  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 13081  0238  00A8               	movwf	??_sprintf
 13082  0239  0828               	movf	??_sprintf,w
 13083  023A  00AC               	movwf	sprintf@ap
 13084                           
 13085                           ;doprnt.c: 553: while((c = *f++)) {
 13086  023B  2BB9               	goto	i1l3730
 13087  023C                     i1l3628:
 13088                           
 13089                           ;doprnt.c: 555: if(c != '%')
 13090  023C  3025               	movlw	37
 13091  023D  0633               	xorwf	sprintf@c,w
 13092  023E  1903               	btfsc	3,2
 13093  023F  2A41               	goto	u304_21
 13094  0240  2A42               	goto	u304_20
 13095  0241                     u304_21:
 13096  0241  2A4E               	goto	i1l3634
 13097  0242                     u304_20:
 13098  0242                     i1l3630:
 13099                           
 13100                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 13101  0242  0833               	movf	sprintf@c,w
 13102  0243  00A8               	movwf	??_sprintf
 13103  0244  0834               	movf	sprintf@sp,w
 13104  0245  0086               	movwf	6
 13105  0246  0187               	clrf	7
 13106  0247  0828               	movf	??_sprintf,w
 13107  0248  0081               	movwf	1
 13108  0249                     i1l3632:
 13109  0249  3001               	movlw	1
 13110  024A  00A8               	movwf	??_sprintf
 13111  024B  0828               	movf	??_sprintf,w
 13112  024C  07B4               	addwf	sprintf@sp,f
 13113                           
 13114                           ;doprnt.c: 559: continue;
 13115  024D  2BB9               	goto	i1l3730
 13116  024E                     i1l3634:
 13117                           
 13118                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 13119  024E  01B1               	clrf	sprintf@width
 13120  024F  01B2               	clrf	sprintf@width+1
 13121                           
 13122                           ;doprnt.c: 565: flag = 0;
 13123  0250  01B0               	clrf	sprintf@flag
 13124  0251  2A57               	goto	i1l3640
 13125  0252                     i1l1402:	
 13126                           ;doprnt.c: 596: case '0':
 13127                           
 13128                           
 13129                           ;doprnt.c: 597: flag |= 0x04;
 13130  0252  1530               	bsf	sprintf@flag,2
 13131  0253                     i1l3636:
 13132                           
 13133                           ;doprnt.c: 598: f++;
 13134  0253  3001               	movlw	1
 13135  0254  07A0               	addwf	sprintf@f,f
 13136  0255  3000               	movlw	0
 13137  0256  3DA1               	addwfc	sprintf@f+1,f
 13138  0257                     i1l3640:	
 13139                           ;doprnt.c: 599: continue;
 13140                           
 13141  0257  0820               	movf	sprintf@f,w
 13142  0258  0084               	movwf	4
 13143  0259  0821               	movf	sprintf@f+1,w
 13144  025A  0085               	movwf	5
 13145  025B  0800               	movf	0,w	;code access
 13146                           
 13147                           ; Switch size 1, requested type "simple"
 13148                           ; Number of cases is 1, Range of values is 48 to 48
 13149                           ; switch strategies available:
 13150                           ; Name         Instructions Cycles
 13151                           ; simple_byte            4     3 (average)
 13152                           ; direct_byte           11     9 (fixed)
 13153                           ; jumptable            263     9 (fixed)
 13154                           ;	Chosen strategy is simple_byte
 13155  025C  3A30               	xorlw	48	; case 48
 13156  025D  1903               	skipnz
 13157  025E  2A52               	goto	i1l1402
 13158  025F  2A60               	goto	i1l3642
 13159  0260                     i1l3642:
 13160                           
 13161                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 13162  0260  0820               	movf	sprintf@f,w
 13163  0261  0084               	movwf	4
 13164  0262  0821               	movf	sprintf@f+1,w
 13165  0263  0085               	movwf	5
 13166  0264  0800               	movf	0,w	;code access
 13167  0265  318B  239C  3182   	fcall	_isdigit
 13168  0268  1C03               	btfss	3,0
 13169  0269  2A6B               	goto	u305_21
 13170  026A  2A6C               	goto	u305_20
 13171  026B                     u305_21:
 13172  026B  2A9F               	goto	i1l3656
 13173  026C                     u305_20:
 13174  026C                     i1l3644:
 13175                           
 13176                           ;doprnt.c: 615: width = 0;
 13177  026C  0020               	movlb	0	; select bank0
 13178  026D  01B1               	clrf	sprintf@width
 13179  026E  01B2               	clrf	sprintf@width+1
 13180  026F                     i1l3646:
 13181                           
 13182                           ;doprnt.c: 617: width *= 10;
 13183  026F  300A               	movlw	10
 13184  0270  00F0               	movwf	___wmul@multiplier
 13185  0271  3000               	movlw	0
 13186  0272  00F1               	movwf	___wmul@multiplier+1
 13187  0273  0020               	movlb	0	; select bank0
 13188  0274  0832               	movf	sprintf@width+1,w
 13189  0275  00F3               	movwf	___wmul@multiplicand+1
 13190  0276  0831               	movf	sprintf@width,w
 13191  0277  00F2               	movwf	___wmul@multiplicand
 13192  0278  318C  247C  3182   	fcall	___wmul
 13193  027B  0871               	movf	?___wmul+1,w
 13194  027C  0020               	movlb	0	; select bank0
 13195  027D  00B2               	movwf	sprintf@width+1
 13196  027E  0870               	movf	?___wmul,w
 13197  027F  00B1               	movwf	sprintf@width
 13198  0280                     i1l3648:
 13199                           
 13200                           ;doprnt.c: 618: width += *f++ - '0';
 13201  0280  0820               	movf	sprintf@f,w
 13202  0281  0084               	movwf	4
 13203  0282  0821               	movf	sprintf@f+1,w
 13204  0283  0085               	movwf	5
 13205  0284  0800               	movf	0,w	;code access
 13206  0285  3ED0               	addlw	208
 13207  0286  00A8               	movwf	??_sprintf
 13208  0287  30FF               	movlw	255
 13209  0288  1803               	skipnc
 13210  0289  3000               	movlw	0
 13211  028A  00A9               	movwf	??_sprintf+1
 13212  028B  0828               	movf	??_sprintf,w
 13213  028C  07B1               	addwf	sprintf@width,f
 13214  028D  0829               	movf	??_sprintf+1,w
 13215  028E  3DB2               	addwfc	sprintf@width+1,f
 13216  028F                     i1l3650:
 13217  028F  3001               	movlw	1
 13218  0290  07A0               	addwf	sprintf@f,f
 13219  0291  3000               	movlw	0
 13220  0292  3DA1               	addwfc	sprintf@f+1,f
 13221  0293                     i1l3652:
 13222                           
 13223                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 13224  0293  0820               	movf	sprintf@f,w
 13225  0294  0084               	movwf	4
 13226  0295  0821               	movf	sprintf@f+1,w
 13227  0296  0085               	movwf	5
 13228  0297  0800               	movf	0,w	;code access
 13229  0298  318B  239C  3182   	fcall	_isdigit
 13230  029B  1803               	btfsc	3,0
 13231  029C  2A9E               	goto	u306_21
 13232  029D  2A9F               	goto	u306_20
 13233  029E                     u306_21:
 13234  029E  2A6F               	goto	i1l3646
 13235  029F                     u306_20:
 13236  029F                     i1l3656:
 13237  029F  0020               	movlb	0	; select bank0
 13238  02A0  0821               	movf	sprintf@f+1,w
 13239  02A1  00A9               	movwf	??_sprintf+1
 13240  02A2  0820               	movf	sprintf@f,w
 13241  02A3  00A8               	movwf	??_sprintf
 13242  02A4  0AA0               	incf	sprintf@f,f
 13243  02A5  1903               	skipnz
 13244  02A6  0AA1               	incf	sprintf@f+1,f
 13245  02A7  0828               	movf	??_sprintf,w
 13246  02A8  0084               	movwf	4
 13247  02A9  0829               	movf	??_sprintf+1,w
 13248  02AA  0085               	movwf	5
 13249  02AB  0800               	movf	0,w	;code access
 13250  02AC  00B3               	movwf	sprintf@c
 13251                           
 13252                           ; Switch size 1, requested type "simple"
 13253                           ; Number of cases is 3, Range of values is 0 to 105
 13254                           ; switch strategies available:
 13255                           ; Name         Instructions Cycles
 13256                           ; simple_byte           10     6 (average)
 13257                           ; direct_byte          218     6 (fixed)
 13258                           ; jumptable            260     6 (fixed)
 13259                           ;	Chosen strategy is simple_byte
 13260  02AD  3A00               	xorlw	0	; case 0
 13261  02AE  1903               	skipnz
 13262  02AF  2BCD               	goto	i1l3732
 13263  02B0  3A64               	xorlw	100	; case 100
 13264  02B1  1903               	skipnz
 13265  02B2  2AB7               	goto	i1l3658
 13266  02B3  3A0D               	xorlw	13	; case 105
 13267  02B4  1903               	skipnz
 13268  02B5  2AB7               	goto	i1l3658
 13269  02B6  2BB9               	goto	i1l3730
 13270  02B7                     i1l3658:
 13271                           
 13272                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 13273  02B7  082C               	movf	sprintf@ap,w
 13274  02B8  0086               	movwf	6
 13275  02B9  0187               	clrf	7
 13276  02BA  3F40               	moviw [0]fsr1
 13277  02BB  00AE               	movwf	sprintf@val
 13278  02BC  3F41               	moviw [1]fsr1
 13279  02BD  00AF               	movwf	sprintf@val+1
 13280  02BE                     i1l3660:
 13281  02BE  3002               	movlw	2
 13282  02BF  00A8               	movwf	??_sprintf
 13283  02C0  0828               	movf	??_sprintf,w
 13284  02C1  07AC               	addwf	sprintf@ap,f
 13285  02C2                     i1l3662:
 13286                           
 13287                           ;doprnt.c: 1287: if((int)val < 0) {
 13288  02C2  1FAF               	btfss	sprintf@val+1,7
 13289  02C3  2AC5               	goto	u307_21
 13290  02C4  2AC6               	goto	u307_20
 13291  02C5                     u307_21:
 13292  02C5  2ACF               	goto	i1l3668
 13293  02C6                     u307_20:
 13294  02C6                     i1l3664:
 13295                           
 13296                           ;doprnt.c: 1288: flag |= 0x03;
 13297  02C6  3003               	movlw	3
 13298  02C7  00A8               	movwf	??_sprintf
 13299  02C8  0828               	movf	??_sprintf,w
 13300  02C9  04B0               	iorwf	sprintf@flag,f
 13301  02CA                     i1l3666:
 13302                           
 13303                           ;doprnt.c: 1289: val = -val;
 13304  02CA  09AE               	comf	sprintf@val,f
 13305  02CB  09AF               	comf	sprintf@val+1,f
 13306  02CC  0AAE               	incf	sprintf@val,f
 13307  02CD  1903               	skipnz
 13308  02CE  0AAF               	incf	sprintf@val+1,f
 13309  02CF                     i1l3668:
 13310                           
 13311                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 13312  02CF  01B3               	clrf	sprintf@c
 13313  02D0  0AB3               	incf	sprintf@c,f
 13314  02D1                     i1l3674:
 13315                           
 13316                           ;doprnt.c: 1332: if(val < dpowers[c])
 13317  02D1  0833               	movf	sprintf@c,w
 13318  02D2  00A8               	movwf	??_sprintf
 13319  02D3  01A9               	clrf	??_sprintf+1
 13320  02D4  35A8               	lslf	??_sprintf,f
 13321  02D5  0DA9               	rlf	??_sprintf+1,f
 13322  02D6  300F               	movlw	low (_dpowers| (0+32768))
 13323  02D7  0728               	addwf	??_sprintf,w
 13324  02D8  0084               	movwf	4
 13325  02D9  3090               	movlw	high (_dpowers| (0+32768))
 13326  02DA  3D29               	addwfc	??_sprintf+1,w
 13327  02DB  0085               	movwf	5
 13328  02DC  3F00               	moviw [0]fsr0
 13329  02DD  00AA               	movwf	??_sprintf+2
 13330  02DE  3F01               	moviw [1]fsr0
 13331  02DF  00AB               	movwf	??_sprintf+3
 13332  02E0  082B               	movf	??_sprintf+3,w
 13333  02E1  022F               	subwf	sprintf@val+1,w
 13334  02E2  1D03               	skipz
 13335  02E3  2AE6               	goto	u308_25
 13336  02E4  082A               	movf	??_sprintf+2,w
 13337  02E5  022E               	subwf	sprintf@val,w
 13338  02E6                     u308_25:
 13339  02E6  1803               	skipnc
 13340  02E7  2AE9               	goto	u308_21
 13341  02E8  2AEA               	goto	u308_20
 13342  02E9                     u308_21:
 13343  02E9  2AEB               	goto	i1l3678
 13344  02EA                     u308_20:
 13345  02EA  2AF5               	goto	i1l3680
 13346  02EB                     i1l3678:
 13347  02EB  3001               	movlw	1
 13348  02EC  00A8               	movwf	??_sprintf
 13349  02ED  0828               	movf	??_sprintf,w
 13350  02EE  07B3               	addwf	sprintf@c,f
 13351  02EF  3005               	movlw	5
 13352  02F0  0633               	xorwf	sprintf@c,w
 13353  02F1  1D03               	btfss	3,2
 13354  02F2  2AF4               	goto	u309_21
 13355  02F3  2AF5               	goto	u309_20
 13356  02F4                     u309_21:
 13357  02F4  2AD1               	goto	i1l3674
 13358  02F5                     u309_20:
 13359  02F5                     i1l3680:
 13360                           
 13361                           ;doprnt.c: 1371: if(width && flag & 0x03)
 13362  02F5  0831               	movf	sprintf@width,w
 13363  02F6  0432               	iorwf	sprintf@width+1,w
 13364  02F7  1903               	btfsc	3,2
 13365  02F8  2AFA               	goto	u310_21
 13366  02F9  2AFB               	goto	u310_20
 13367  02FA                     u310_21:
 13368  02FA  2B05               	goto	i1l1420
 13369  02FB                     u310_20:
 13370  02FB                     i1l3682:
 13371  02FB  0830               	movf	sprintf@flag,w
 13372  02FC  3903               	andlw	3
 13373  02FD  1903               	btfsc	3,2
 13374  02FE  2B00               	goto	u311_21
 13375  02FF  2B01               	goto	u311_20
 13376  0300                     u311_21:
 13377  0300  2B05               	goto	i1l1420
 13378  0301                     u311_20:
 13379  0301                     i1l3684:
 13380                           
 13381                           ;doprnt.c: 1372: width--;
 13382  0301  30FF               	movlw	255
 13383  0302  07B1               	addwf	sprintf@width,f
 13384  0303  30FF               	movlw	255
 13385  0304  3DB2               	addwfc	sprintf@width+1,f
 13386  0305                     i1l1420:
 13387                           
 13388                           ;doprnt.c: 1407: if(width > c)
 13389  0305  0832               	movf	sprintf@width+1,w
 13390  0306  3A80               	xorlw	128
 13391  0307  3C80               	sublw	128
 13392  0308  1D03               	skipz
 13393  0309  2B0C               	goto	u312_25
 13394  030A  0831               	movf	sprintf@width,w
 13395  030B  0233               	subwf	sprintf@c,w
 13396  030C                     u312_25:
 13397  030C  1803               	skipnc
 13398  030D  2B0F               	goto	u312_21
 13399  030E  2B10               	goto	u312_20
 13400  030F                     u312_21:
 13401  030F  2B19               	goto	i1l3688
 13402  0310                     u312_20:
 13403  0310                     i1l3686:
 13404                           
 13405                           ;doprnt.c: 1408: width -= c;
 13406  0310  0020               	movlb	0	; select bank0
 13407  0311  0833               	movf	sprintf@c,w
 13408  0312  00A8               	movwf	??_sprintf
 13409  0313  01A9               	clrf	??_sprintf+1
 13410  0314  0828               	movf	??_sprintf,w
 13411  0315  02B1               	subwf	sprintf@width,f
 13412  0316  0829               	movf	??_sprintf+1,w
 13413  0317  3BB2               	subwfb	sprintf@width+1,f
 13414  0318  2B1C               	goto	i1l3690
 13415  0319                     i1l3688:
 13416                           
 13417                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 13418  0319  0020               	movlb	0	; select bank0
 13419  031A  01B1               	clrf	sprintf@width
 13420  031B  01B2               	clrf	sprintf@width+1
 13421  031C                     i1l3690:
 13422                           
 13423                           ;doprnt.c: 1413: if(flag & 0x04) {
 13424  031C  1D30               	btfss	sprintf@flag,2
 13425  031D  2B1F               	goto	u313_21
 13426  031E  2B20               	goto	u313_20
 13427  031F                     u313_21:
 13428  031F  2B4D               	goto	i1l3706
 13429  0320                     u313_20:
 13430  0320                     i1l3692:
 13431                           
 13432                           ;doprnt.c: 1418: if(flag & 0x03)
 13433  0320  0830               	movf	sprintf@flag,w
 13434  0321  3903               	andlw	3
 13435  0322  1903               	btfsc	3,2
 13436  0323  2B25               	goto	u314_21
 13437  0324  2B26               	goto	u314_20
 13438  0325                     u314_21:
 13439  0325  2B31               	goto	i1l3698
 13440  0326                     u314_20:
 13441  0326                     i1l3694:
 13442                           
 13443                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 13444  0326  302D               	movlw	45
 13445  0327  00A8               	movwf	??_sprintf
 13446  0328  0834               	movf	sprintf@sp,w
 13447  0329  0086               	movwf	6
 13448  032A  0187               	clrf	7
 13449  032B  0828               	movf	??_sprintf,w
 13450  032C  0081               	movwf	1
 13451  032D                     i1l3696:
 13452  032D  3001               	movlw	1
 13453  032E  00A8               	movwf	??_sprintf
 13454  032F  0828               	movf	??_sprintf,w
 13455  0330  07B4               	addwf	sprintf@sp,f
 13456  0331                     i1l3698:
 13457                           
 13458                           ;doprnt.c: 1441: if(width)
 13459  0331  0831               	movf	sprintf@width,w
 13460  0332  0432               	iorwf	sprintf@width+1,w
 13461  0333  1903               	btfsc	3,2
 13462  0334  2B36               	goto	u315_21
 13463  0335  2B37               	goto	u315_20
 13464  0336                     u315_21:
 13465  0336  2B79               	goto	i1l3720
 13466  0337                     u315_20:
 13467  0337                     i1l3700:
 13468                           
 13469                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 13470  0337  3030               	movlw	48
 13471  0338  00A8               	movwf	??_sprintf
 13472  0339  0834               	movf	sprintf@sp,w
 13473  033A  0086               	movwf	6
 13474  033B  0187               	clrf	7
 13475  033C  0828               	movf	??_sprintf,w
 13476  033D  0081               	movwf	1
 13477  033E                     i1l3702:
 13478  033E  3001               	movlw	1
 13479  033F  00A8               	movwf	??_sprintf
 13480  0340  0828               	movf	??_sprintf,w
 13481  0341  07B4               	addwf	sprintf@sp,f
 13482  0342                     i1l3704:
 13483                           
 13484                           ;doprnt.c: 1444: while(--width);
 13485  0342  30FF               	movlw	255
 13486  0343  07B1               	addwf	sprintf@width,f
 13487  0344  30FF               	movlw	255
 13488  0345  3DB2               	addwfc	sprintf@width+1,f
 13489  0346  0831               	movf	sprintf@width,w
 13490  0347  0432               	iorwf	sprintf@width+1,w
 13491  0348  1D03               	btfss	3,2
 13492  0349  2B4B               	goto	u316_21
 13493  034A  2B4C               	goto	u316_20
 13494  034B                     u316_21:
 13495  034B  2B37               	goto	i1l3700
 13496  034C                     u316_20:
 13497  034C  2B79               	goto	i1l3720
 13498  034D                     i1l3706:
 13499                           
 13500                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 13501  034D  0831               	movf	sprintf@width,w
 13502  034E  0432               	iorwf	sprintf@width+1,w
 13503  034F  1903               	btfsc	3,2
 13504  0350  2B52               	goto	u317_21
 13505  0351  2B53               	goto	u317_20
 13506  0352                     u317_21:
 13507  0352  2B68               	goto	i1l3714
 13508  0353                     u317_20:
 13509  0353                     i1l3708:
 13510                           
 13511                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 13512  0353  3020               	movlw	32
 13513  0354  00A8               	movwf	??_sprintf
 13514  0355  0834               	movf	sprintf@sp,w
 13515  0356  0086               	movwf	6
 13516  0357  0187               	clrf	7
 13517  0358  0828               	movf	??_sprintf,w
 13518  0359  0081               	movwf	1
 13519  035A                     i1l3710:
 13520  035A  3001               	movlw	1
 13521  035B  00A8               	movwf	??_sprintf
 13522  035C  0828               	movf	??_sprintf,w
 13523  035D  07B4               	addwf	sprintf@sp,f
 13524  035E                     i1l3712:
 13525                           
 13526                           ;doprnt.c: 1457: while(--width);
 13527  035E  30FF               	movlw	255
 13528  035F  07B1               	addwf	sprintf@width,f
 13529  0360  30FF               	movlw	255
 13530  0361  3DB2               	addwfc	sprintf@width+1,f
 13531  0362  0831               	movf	sprintf@width,w
 13532  0363  0432               	iorwf	sprintf@width+1,w
 13533  0364  1D03               	btfss	3,2
 13534  0365  2B67               	goto	u318_21
 13535  0366  2B68               	goto	u318_20
 13536  0367                     u318_21:
 13537  0367  2B53               	goto	i1l3708
 13538  0368                     u318_20:
 13539  0368                     i1l3714:
 13540                           
 13541                           ;doprnt.c: 1464: if(flag & 0x03)
 13542  0368  0830               	movf	sprintf@flag,w
 13543  0369  3903               	andlw	3
 13544  036A  1903               	btfsc	3,2
 13545  036B  2B6D               	goto	u319_21
 13546  036C  2B6E               	goto	u319_20
 13547  036D                     u319_21:
 13548  036D  2B79               	goto	i1l3720
 13549  036E                     u319_20:
 13550  036E                     i1l3716:
 13551                           
 13552                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 13553  036E  302D               	movlw	45
 13554  036F  00A8               	movwf	??_sprintf
 13555  0370  0834               	movf	sprintf@sp,w
 13556  0371  0086               	movwf	6
 13557  0372  0187               	clrf	7
 13558  0373  0828               	movf	??_sprintf,w
 13559  0374  0081               	movwf	1
 13560  0375                     i1l3718:
 13561  0375  3001               	movlw	1
 13562  0376  00A8               	movwf	??_sprintf
 13563  0377  0828               	movf	??_sprintf,w
 13564  0378  07B4               	addwf	sprintf@sp,f
 13565  0379                     i1l3720:
 13566                           
 13567                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 13568  0379  0833               	movf	sprintf@c,w
 13569  037A  00A8               	movwf	??_sprintf
 13570  037B  0828               	movf	??_sprintf,w
 13571  037C  00AD               	movwf	sprintf@prec
 13572                           
 13573                           ;doprnt.c: 1500: while(prec--) {
 13574  037D  2BB0               	goto	i1l3728
 13575  037E                     i1l3722:
 13576                           
 13577                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 13578  037E  300A               	movlw	10
 13579  037F  00F8               	movwf	___lwmod@divisor
 13580  0380  3000               	movlw	0
 13581  0381  00F9               	movwf	___lwmod@divisor+1
 13582  0382  082D               	movf	sprintf@prec,w
 13583  0383  00A8               	movwf	??_sprintf
 13584  0384  01A9               	clrf	??_sprintf+1
 13585  0385  35A8               	lslf	??_sprintf,f
 13586  0386  0DA9               	rlf	??_sprintf+1,f
 13587  0387  300F               	movlw	low (_dpowers| (0+32768))
 13588  0388  0728               	addwf	??_sprintf,w
 13589  0389  0084               	movwf	4
 13590  038A  3090               	movlw	high (_dpowers| (0+32768))
 13591  038B  3D29               	addwfc	??_sprintf+1,w
 13592  038C  0085               	movwf	5
 13593  038D  3F00               	moviw [0]fsr0
 13594  038E  00F0               	movwf	___lwdiv@divisor
 13595  038F  3F01               	moviw [1]fsr0
 13596  0390  00F1               	movwf	___lwdiv@divisor+1
 13597  0391  082F               	movf	sprintf@val+1,w
 13598  0392  00F3               	movwf	___lwdiv@dividend+1
 13599  0393  082E               	movf	sprintf@val,w
 13600  0394  00F2               	movwf	___lwdiv@dividend
 13601  0395  318D  2565  3182   	fcall	___lwdiv
 13602  0398  0871               	movf	?___lwdiv+1,w
 13603  0399  00FB               	movwf	___lwmod@dividend+1
 13604  039A  0870               	movf	?___lwdiv,w
 13605  039B  00FA               	movwf	___lwmod@dividend
 13606  039C  318C  24F8  3182   	fcall	___lwmod
 13607  039F  0878               	movf	?___lwmod,w
 13608  03A0  3E30               	addlw	48
 13609  03A1  0020               	movlb	0	; select bank0
 13610  03A2  00AA               	movwf	??_sprintf+2
 13611  03A3  082A               	movf	??_sprintf+2,w
 13612  03A4  00B3               	movwf	sprintf@c
 13613  03A5                     i1l3724:
 13614                           
 13615                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 13616  03A5  0833               	movf	sprintf@c,w
 13617  03A6  00A8               	movwf	??_sprintf
 13618  03A7  0834               	movf	sprintf@sp,w
 13619  03A8  0086               	movwf	6
 13620  03A9  0187               	clrf	7
 13621  03AA  0828               	movf	??_sprintf,w
 13622  03AB  0081               	movwf	1
 13623  03AC                     i1l3726:
 13624  03AC  3001               	movlw	1
 13625  03AD  00A8               	movwf	??_sprintf
 13626  03AE  0828               	movf	??_sprintf,w
 13627  03AF  07B4               	addwf	sprintf@sp,f
 13628  03B0                     i1l3728:
 13629  03B0  30FF               	movlw	255
 13630  03B1  00A8               	movwf	??_sprintf
 13631  03B2  0828               	movf	??_sprintf,w
 13632  03B3  07AD               	addwf	sprintf@prec,f
 13633  03B4  0A2D               	incf	sprintf@prec,w
 13634  03B5  1D03               	btfss	3,2
 13635  03B6  2BB8               	goto	u320_21
 13636  03B7  2BB9               	goto	u320_20
 13637  03B8                     u320_21:
 13638  03B8  2B7E               	goto	i1l3722
 13639  03B9                     u320_20:
 13640  03B9                     i1l3730:
 13641  03B9  0821               	movf	sprintf@f+1,w
 13642  03BA  00A9               	movwf	??_sprintf+1
 13643  03BB  0820               	movf	sprintf@f,w
 13644  03BC  00A8               	movwf	??_sprintf
 13645  03BD  0AA0               	incf	sprintf@f,f
 13646  03BE  1903               	skipnz
 13647  03BF  0AA1               	incf	sprintf@f+1,f
 13648  03C0  0828               	movf	??_sprintf,w
 13649  03C1  0084               	movwf	4
 13650  03C2  0829               	movf	??_sprintf+1,w
 13651  03C3  0085               	movwf	5
 13652  03C4  0800               	movf	0,w	;code access
 13653  03C5  00AA               	movwf	??_sprintf+2
 13654  03C6  082A               	movf	??_sprintf+2,w
 13655  03C7  00B3               	movwf	sprintf@c
 13656  03C8  0833               	movf	sprintf@c,w
 13657  03C9  1D03               	btfss	3,2
 13658  03CA  2BCC               	goto	u321_21
 13659  03CB  2BCD               	goto	u321_20
 13660  03CC                     u321_21:
 13661  03CC  2A3C               	goto	i1l3628
 13662  03CD                     u321_20:
 13663  03CD                     i1l3732:
 13664                           
 13665                           ;doprnt.c: 1564: *sp = 0;
 13666  03CD  0834               	movf	sprintf@sp,w
 13667  03CE  0086               	movwf	6
 13668  03CF  0187               	clrf	7
 13669  03D0  0181               	clrf	1
 13670  03D1                     i1l1437:
 13671  03D1  0008               	return
 13672  03D2                     __end_of_sprintf:
 13673                           
 13674                           	psect	text39
 13675  0B9C                     __ptext39:	
 13676 ;; *************** function _isdigit *****************
 13677 ;; Defined at:
 13678 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 13679 ;; Parameters:    Size  Location     Type
 13680 ;;  c               1    wreg     unsigned char 
 13681 ;; Auto vars:     Size  Location     Type
 13682 ;;  c               1    1[COMMON] unsigned char 
 13683 ;; Return value:  Size  Location     Type
 13684 ;;		None               void
 13685 ;; Registers used:
 13686 ;;		wreg, status,2, status,0
 13687 ;; Tracked objects:
 13688 ;;		On entry : 0/0
 13689 ;;		On exit  : 0/0
 13690 ;;		Unchanged: 0/0
 13691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13693 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13695 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13696 ;;Total ram usage:        2 bytes
 13697 ;; Hardware stack levels used:    1
 13698 ;; This function calls:
 13699 ;;		Nothing
 13700 ;; This function is called by:
 13701 ;;		_sprintf
 13702 ;; This function uses a non-reentrant model
 13703 ;;
 13704                           
 13705                           
 13706                           ;psect for function _isdigit
 13707  0B9C                     _isdigit:
 13708                           
 13709                           ;incstack = 0
 13710                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 13711                           ;isdigit@c stored from wreg
 13712  0B9C  00F1               	movwf	isdigit@c
 13713  0B9D                     i1l3422:
 13714  0B9D  01F0               	clrf	_isdigit$2812
 13715  0B9E                     i1l3424:
 13716  0B9E  303A               	movlw	58
 13717  0B9F  0271               	subwf	isdigit@c,w
 13718  0BA0  1803               	skipnc
 13719  0BA1  2BA3               	goto	u246_21
 13720  0BA2  2BA4               	goto	u246_20
 13721  0BA3                     u246_21:
 13722  0BA3  2BAC               	goto	i1l3430
 13723  0BA4                     u246_20:
 13724  0BA4                     i1l3426:
 13725  0BA4  3030               	movlw	48
 13726  0BA5  0271               	subwf	isdigit@c,w
 13727  0BA6  1C03               	skipc
 13728  0BA7  2BA9               	goto	u247_21
 13729  0BA8  2BAA               	goto	u247_20
 13730  0BA9                     u247_21:
 13731  0BA9  2BAC               	goto	i1l3430
 13732  0BAA                     u247_20:
 13733  0BAA                     i1l3428:
 13734  0BAA  01F0               	clrf	_isdigit$2812
 13735  0BAB  0AF0               	incf	_isdigit$2812,f
 13736  0BAC                     i1l3430:
 13737  0BAC  0C70               	rrf	_isdigit$2812,w
 13738  0BAD                     i1l1894:
 13739  0BAD  0008               	return
 13740  0BAE                     __end_of_isdigit:
 13741                           
 13742                           	psect	text40
 13743  0C7C                     __ptext40:	
 13744 ;; *************** function ___wmul *****************
 13745 ;; Defined at:
 13746 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 13747 ;; Parameters:    Size  Location     Type
 13748 ;;  multiplier      2    0[COMMON] unsigned int 
 13749 ;;  multiplicand    2    2[COMMON] unsigned int 
 13750 ;; Auto vars:     Size  Location     Type
 13751 ;;  product         2    4[COMMON] unsigned int 
 13752 ;; Return value:  Size  Location     Type
 13753 ;;                  2    0[COMMON] unsigned int 
 13754 ;; Registers used:
 13755 ;;		wreg, status,2, status,0
 13756 ;; Tracked objects:
 13757 ;;		On entry : 0/0
 13758 ;;		On exit  : 0/0
 13759 ;;		Unchanged: 0/0
 13760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13761 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13762 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13764 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13765 ;;Total ram usage:        6 bytes
 13766 ;; Hardware stack levels used:    1
 13767 ;; This function calls:
 13768 ;;		Nothing
 13769 ;; This function is called by:
 13770 ;;		_sprintf
 13771 ;;		_map
 13772 ;; This function uses a non-reentrant model
 13773 ;;
 13774                           
 13775                           
 13776                           ;psect for function ___wmul
 13777  0C7C                     ___wmul:
 13778  0C7C                     i1l3434:	
 13779                           ;incstack = 0
 13780                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13781                           
 13782  0C7C  01F4               	clrf	___wmul@product
 13783  0C7D  01F5               	clrf	___wmul@product+1
 13784  0C7E                     i1l3436:
 13785  0C7E  1C70               	btfss	___wmul@multiplier,0
 13786  0C7F  2C81               	goto	u248_21
 13787  0C80  2C82               	goto	u248_20
 13788  0C81                     u248_21:
 13789  0C81  2C86               	goto	i1l1441
 13790  0C82                     u248_20:
 13791  0C82                     i1l3438:
 13792  0C82  0872               	movf	___wmul@multiplicand,w
 13793  0C83  07F4               	addwf	___wmul@product,f
 13794  0C84  0873               	movf	___wmul@multiplicand+1,w
 13795  0C85  3DF5               	addwfc	___wmul@product+1,f
 13796  0C86                     i1l1441:
 13797  0C86  3001               	movlw	1
 13798  0C87                     u249_25:
 13799  0C87  35F2               	lslf	___wmul@multiplicand,f
 13800  0C88  0DF3               	rlf	___wmul@multiplicand+1,f
 13801  0C89  0B89               	decfsz	9,f
 13802  0C8A  2C87               	goto	u249_25
 13803  0C8B                     i1l3440:
 13804  0C8B  3001               	movlw	1
 13805  0C8C                     u250_25:
 13806  0C8C  36F1               	lsrf	___wmul@multiplier+1,f
 13807  0C8D  0CF0               	rrf	___wmul@multiplier,f
 13808  0C8E  0B89               	decfsz	9,f
 13809  0C8F  2C8C               	goto	u250_25
 13810  0C90                     i1l3442:
 13811  0C90  0870               	movf	___wmul@multiplier,w
 13812  0C91  0471               	iorwf	___wmul@multiplier+1,w
 13813  0C92  1D03               	btfss	3,2
 13814  0C93  2C95               	goto	u251_21
 13815  0C94  2C96               	goto	u251_20
 13816  0C95                     u251_21:
 13817  0C95  2C7E               	goto	i1l3436
 13818  0C96                     u251_20:
 13819  0C96                     i1l3444:
 13820  0C96  0875               	movf	___wmul@product+1,w
 13821  0C97  00F1               	movwf	?___wmul+1
 13822  0C98  0874               	movf	___wmul@product,w
 13823  0C99  00F0               	movwf	?___wmul
 13824  0C9A                     i1l1443:
 13825  0C9A  0008               	return
 13826  0C9B                     __end_of___wmul:
 13827                           
 13828                           	psect	text41
 13829  0CF8                     __ptext41:	
 13830 ;; *************** function ___lwmod *****************
 13831 ;; Defined at:
 13832 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 13833 ;; Parameters:    Size  Location     Type
 13834 ;;  divisor         2    8[COMMON] unsigned int 
 13835 ;;  dividend        2   10[COMMON] unsigned int 
 13836 ;; Auto vars:     Size  Location     Type
 13837 ;;  counter         1   13[COMMON] unsigned char 
 13838 ;; Return value:  Size  Location     Type
 13839 ;;                  2    8[COMMON] unsigned int 
 13840 ;; Registers used:
 13841 ;;		wreg, status,2, status,0
 13842 ;; Tracked objects:
 13843 ;;		On entry : 0/0
 13844 ;;		On exit  : 0/0
 13845 ;;		Unchanged: 0/0
 13846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13847 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13848 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13849 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13850 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13851 ;;Total ram usage:        6 bytes
 13852 ;; Hardware stack levels used:    1
 13853 ;; This function calls:
 13854 ;;		Nothing
 13855 ;; This function is called by:
 13856 ;;		_sprintf
 13857 ;; This function uses a non-reentrant model
 13858 ;;
 13859                           
 13860                           
 13861                           ;psect for function ___lwmod
 13862  0CF8                     ___lwmod:
 13863  0CF8                     i1l3474:	
 13864                           ;incstack = 0
 13865                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13866                           
 13867  0CF8  0878               	movf	___lwmod@divisor,w
 13868  0CF9  0479               	iorwf	___lwmod@divisor+1,w
 13869  0CFA  1903               	btfsc	3,2
 13870  0CFB  2CFD               	goto	u259_21
 13871  0CFC  2CFE               	goto	u259_20
 13872  0CFD                     u259_21:
 13873  0CFD  2D27               	goto	i1l3492
 13874  0CFE                     u259_20:
 13875  0CFE                     i1l3476:
 13876  0CFE  01FD               	clrf	___lwmod@counter
 13877  0CFF  0AFD               	incf	___lwmod@counter,f
 13878  0D00  2D0A               	goto	i1l3482
 13879  0D01                     i1l3478:
 13880  0D01  3001               	movlw	1
 13881  0D02                     u260_25:
 13882  0D02  35F8               	lslf	___lwmod@divisor,f
 13883  0D03  0DF9               	rlf	___lwmod@divisor+1,f
 13884  0D04  0B89               	decfsz	9,f
 13885  0D05  2D02               	goto	u260_25
 13886  0D06                     i1l3480:
 13887  0D06  3001               	movlw	1
 13888  0D07  00FC               	movwf	??___lwmod
 13889  0D08  087C               	movf	??___lwmod,w
 13890  0D09  07FD               	addwf	___lwmod@counter,f
 13891  0D0A                     i1l3482:
 13892  0D0A  1FF9               	btfss	___lwmod@divisor+1,7
 13893  0D0B  2D0D               	goto	u261_21
 13894  0D0C  2D0E               	goto	u261_20
 13895  0D0D                     u261_21:
 13896  0D0D  2D01               	goto	i1l3478
 13897  0D0E                     u261_20:
 13898  0D0E                     i1l3484:
 13899  0D0E  0879               	movf	___lwmod@divisor+1,w
 13900  0D0F  027B               	subwf	___lwmod@dividend+1,w
 13901  0D10  1D03               	skipz
 13902  0D11  2D14               	goto	u262_25
 13903  0D12  0878               	movf	___lwmod@divisor,w
 13904  0D13  027A               	subwf	___lwmod@dividend,w
 13905  0D14                     u262_25:
 13906  0D14  1C03               	skipc
 13907  0D15  2D17               	goto	u262_21
 13908  0D16  2D18               	goto	u262_20
 13909  0D17                     u262_21:
 13910  0D17  2D1C               	goto	i1l3488
 13911  0D18                     u262_20:
 13912  0D18                     i1l3486:
 13913  0D18  0878               	movf	___lwmod@divisor,w
 13914  0D19  02FA               	subwf	___lwmod@dividend,f
 13915  0D1A  0879               	movf	___lwmod@divisor+1,w
 13916  0D1B  3BFB               	subwfb	___lwmod@dividend+1,f
 13917  0D1C                     i1l3488:
 13918  0D1C  3001               	movlw	1
 13919  0D1D                     u263_25:
 13920  0D1D  36F9               	lsrf	___lwmod@divisor+1,f
 13921  0D1E  0CF8               	rrf	___lwmod@divisor,f
 13922  0D1F  0B89               	decfsz	9,f
 13923  0D20  2D1D               	goto	u263_25
 13924  0D21                     i1l3490:
 13925  0D21  3001               	movlw	1
 13926  0D22  02FD               	subwf	___lwmod@counter,f
 13927  0D23  1D03               	btfss	3,2
 13928  0D24  2D26               	goto	u264_21
 13929  0D25  2D27               	goto	u264_20
 13930  0D26                     u264_21:
 13931  0D26  2D0E               	goto	i1l3484
 13932  0D27                     u264_20:
 13933  0D27                     i1l3492:
 13934  0D27  087B               	movf	___lwmod@dividend+1,w
 13935  0D28  00F9               	movwf	?___lwmod+1
 13936  0D29  087A               	movf	___lwmod@dividend,w
 13937  0D2A  00F8               	movwf	?___lwmod
 13938  0D2B                     i1l1723:
 13939  0D2B  0008               	return
 13940  0D2C                     __end_of___lwmod:
 13941                           
 13942                           	psect	text42
 13943  0D65                     __ptext42:	
 13944 ;; *************** function ___lwdiv *****************
 13945 ;; Defined at:
 13946 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 13947 ;; Parameters:    Size  Location     Type
 13948 ;;  divisor         2    0[COMMON] unsigned int 
 13949 ;;  dividend        2    2[COMMON] unsigned int 
 13950 ;; Auto vars:     Size  Location     Type
 13951 ;;  quotient        2    5[COMMON] unsigned int 
 13952 ;;  counter         1    7[COMMON] unsigned char 
 13953 ;; Return value:  Size  Location     Type
 13954 ;;                  2    0[COMMON] unsigned int 
 13955 ;; Registers used:
 13956 ;;		wreg, status,2, status,0
 13957 ;; Tracked objects:
 13958 ;;		On entry : 0/0
 13959 ;;		On exit  : 0/0
 13960 ;;		Unchanged: 0/0
 13961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13963 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13964 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13965 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13966 ;;Total ram usage:        8 bytes
 13967 ;; Hardware stack levels used:    1
 13968 ;; This function calls:
 13969 ;;		Nothing
 13970 ;; This function is called by:
 13971 ;;		_sprintf
 13972 ;; This function uses a non-reentrant model
 13973 ;;
 13974                           
 13975                           
 13976                           ;psect for function ___lwdiv
 13977  0D65                     ___lwdiv:
 13978  0D65                     i1l3448:	
 13979                           ;incstack = 0
 13980                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 13981                           
 13982  0D65  01F5               	clrf	___lwdiv@quotient
 13983  0D66  01F6               	clrf	___lwdiv@quotient+1
 13984  0D67                     i1l3450:
 13985  0D67  0870               	movf	___lwdiv@divisor,w
 13986  0D68  0471               	iorwf	___lwdiv@divisor+1,w
 13987  0D69  1903               	btfsc	3,2
 13988  0D6A  2D6C               	goto	u252_21
 13989  0D6B  2D6D               	goto	u252_20
 13990  0D6C                     u252_21:
 13991  0D6C  2D9C               	goto	i1l3470
 13992  0D6D                     u252_20:
 13993  0D6D                     i1l3452:
 13994  0D6D  01F7               	clrf	___lwdiv@counter
 13995  0D6E  0AF7               	incf	___lwdiv@counter,f
 13996  0D6F  2D79               	goto	i1l3458
 13997  0D70                     i1l3454:
 13998  0D70  3001               	movlw	1
 13999  0D71                     u253_25:
 14000  0D71  35F0               	lslf	___lwdiv@divisor,f
 14001  0D72  0DF1               	rlf	___lwdiv@divisor+1,f
 14002  0D73  0B89               	decfsz	9,f
 14003  0D74  2D71               	goto	u253_25
 14004  0D75                     i1l3456:
 14005  0D75  3001               	movlw	1
 14006  0D76  00F4               	movwf	??___lwdiv
 14007  0D77  0874               	movf	??___lwdiv,w
 14008  0D78  07F7               	addwf	___lwdiv@counter,f
 14009  0D79                     i1l3458:
 14010  0D79  1FF1               	btfss	___lwdiv@divisor+1,7
 14011  0D7A  2D7C               	goto	u254_21
 14012  0D7B  2D7D               	goto	u254_20
 14013  0D7C                     u254_21:
 14014  0D7C  2D70               	goto	i1l3454
 14015  0D7D                     u254_20:
 14016  0D7D                     i1l3460:
 14017  0D7D  3001               	movlw	1
 14018  0D7E                     u255_25:
 14019  0D7E  35F5               	lslf	___lwdiv@quotient,f
 14020  0D7F  0DF6               	rlf	___lwdiv@quotient+1,f
 14021  0D80  0B89               	decfsz	9,f
 14022  0D81  2D7E               	goto	u255_25
 14023  0D82  0871               	movf	___lwdiv@divisor+1,w
 14024  0D83  0273               	subwf	___lwdiv@dividend+1,w
 14025  0D84  1D03               	skipz
 14026  0D85  2D88               	goto	u256_25
 14027  0D86  0870               	movf	___lwdiv@divisor,w
 14028  0D87  0272               	subwf	___lwdiv@dividend,w
 14029  0D88                     u256_25:
 14030  0D88  1C03               	skipc
 14031  0D89  2D8B               	goto	u256_21
 14032  0D8A  2D8C               	goto	u256_20
 14033  0D8B                     u256_21:
 14034  0D8B  2D91               	goto	i1l3466
 14035  0D8C                     u256_20:
 14036  0D8C                     i1l3462:
 14037  0D8C  0870               	movf	___lwdiv@divisor,w
 14038  0D8D  02F2               	subwf	___lwdiv@dividend,f
 14039  0D8E  0871               	movf	___lwdiv@divisor+1,w
 14040  0D8F  3BF3               	subwfb	___lwdiv@dividend+1,f
 14041  0D90                     i1l3464:
 14042  0D90  1475               	bsf	___lwdiv@quotient,0
 14043  0D91                     i1l3466:
 14044  0D91  3001               	movlw	1
 14045  0D92                     u257_25:
 14046  0D92  36F1               	lsrf	___lwdiv@divisor+1,f
 14047  0D93  0CF0               	rrf	___lwdiv@divisor,f
 14048  0D94  0B89               	decfsz	9,f
 14049  0D95  2D92               	goto	u257_25
 14050  0D96                     i1l3468:
 14051  0D96  3001               	movlw	1
 14052  0D97  02F7               	subwf	___lwdiv@counter,f
 14053  0D98  1D03               	btfss	3,2
 14054  0D99  2D9B               	goto	u258_21
 14055  0D9A  2D9C               	goto	u258_20
 14056  0D9B                     u258_21:
 14057  0D9B  2D7D               	goto	i1l3460
 14058  0D9C                     u258_20:
 14059  0D9C                     i1l3470:
 14060  0D9C  0876               	movf	___lwdiv@quotient+1,w
 14061  0D9D  00F1               	movwf	?___lwdiv+1
 14062  0D9E  0875               	movf	___lwdiv@quotient,w
 14063  0D9F  00F0               	movwf	?___lwdiv
 14064  0DA0                     i1l1713:
 14065  0DA0  0008               	return
 14066  0DA1                     __end_of___lwdiv:
 14067                           
 14068                           	psect	text43
 14069  0F1C                     __ptext43:	
 14070 ;; *************** function _differenceBetweenTimePeriod *****************
 14071 ;; Defined at:
 14072 ;;		line 208 in file "main.c"
 14073 ;; Parameters:    Size  Location     Type
 14074 ;;  start           6    0[COMMON] struct Time
 14075 ;;  stop            6    6[COMMON] struct Time
 14076 ;;  diff            1   12[COMMON] PTR struct Time
 14077 ;;		 -> menuLCD_ISR@diff(6), 
 14078 ;; Auto vars:     Size  Location     Type
 14079 ;;		None
 14080 ;; Return value:  Size  Location     Type
 14081 ;;                  1    wreg      void 
 14082 ;; Registers used:
 14083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 14084 ;; Tracked objects:
 14085 ;;		On entry : 0/0
 14086 ;;		On exit  : 0/0
 14087 ;;		Unchanged: 0/0
 14088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14089 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14091 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14092 ;;      Totals:        13       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14093 ;;Total ram usage:       15 bytes
 14094 ;; Hardware stack levels used:    1
 14095 ;; This function calls:
 14096 ;;		Nothing
 14097 ;; This function is called by:
 14098 ;;		_menuLCD_ISR
 14099 ;; This function uses a non-reentrant model
 14100 ;;
 14101                           
 14102                           
 14103                           ;psect for function _differenceBetweenTimePeriod
 14104  0F1C                     _differenceBetweenTimePeriod:
 14105  0F1C                     i1l3612:	
 14106                           ;incstack = 0
 14107                           ; Regs used in _differenceBetweenTimePeriod: [wreg-fsr1h+status,2+status,0]
 14108                           
 14109                           
 14110                           ;main.c: 211: while (stop.s > start.s) {
 14111  0F1C  2F25               	goto	i1l1078
 14112  0F1D                     i1l3614:
 14113                           
 14114                           ;main.c: 212: --start.m;
 14115  0F1D  30FF               	movlw	255
 14116  0F1E  07F2               	addwf	differenceBetweenTimePeriod@start+2,f
 14117  0F1F  30FF               	movlw	255
 14118  0F20  3DF3               	addwfc	differenceBetweenTimePeriod@start+3,f
 14119                           
 14120                           ;main.c: 213: start.s += 60;
 14121  0F21  303C               	movlw	60
 14122  0F22  07F4               	addwf	differenceBetweenTimePeriod@start+4,f
 14123  0F23  3000               	movlw	0
 14124  0F24  3DF5               	addwfc	differenceBetweenTimePeriod@start+5,f
 14125  0F25                     i1l1078:
 14126  0F25  0875               	movf	differenceBetweenTimePeriod@start+5,w
 14127  0F26  3A80               	xorlw	128
 14128  0F27  0020               	movlb	0	; select bank0
 14129  0F28  00A0               	movwf	??_differenceBetweenTimePeriod
 14130  0F29  087B               	movf	differenceBetweenTimePeriod@stop+5,w
 14131  0F2A  3A80               	xorlw	128
 14132  0F2B  0220               	subwf	??_differenceBetweenTimePeriod,w
 14133  0F2C  1D03               	skipz
 14134  0F2D  2F30               	goto	u302_25
 14135  0F2E  087A               	movf	differenceBetweenTimePeriod@stop+4,w
 14136  0F2F  0274               	subwf	differenceBetweenTimePeriod@start+4,w
 14137  0F30                     u302_25:
 14138  0F30  1C03               	skipc
 14139  0F31  2F33               	goto	u302_21
 14140  0F32  2F34               	goto	u302_20
 14141  0F33                     u302_21:
 14142  0F33  2F1D               	goto	i1l3614
 14143  0F34                     u302_20:
 14144  0F34                     i1l3616:
 14145                           
 14146                           ;main.c: 214: };main.c: 215: diff->s = start.s - stop.s;
 14147  0F34  3004               	movlw	4
 14148  0F35  3E76               	addlw	(low (differenceBetweenTimePeriod@stop| 0))& (0+255)
 14149  0F36  0086               	movwf	6
 14150  0F37  0187               	clrf	7
 14151  0F38  3004               	movlw	4
 14152  0F39  3E70               	addlw	(low (differenceBetweenTimePeriod@start| 0))& (0+255)
 14153  0F3A  0084               	movwf	4
 14154  0F3B  0185               	clrf	5
 14155  0F3C  3F40               	moviw [0]fsr1
 14156  0F3D  0200               	subwf	0,w
 14157  0F3E  0020               	movlb	0	; select bank0
 14158  0F3F  00A0               	movwf	??_differenceBetweenTimePeriod
 14159  0F40  3101               	addfsr 0,1
 14160  0F41  3F41               	moviw [1]fsr1
 14161  0F42  3B00               	subwfb	0,w
 14162  0F43  00A1               	movwf	??_differenceBetweenTimePeriod+1
 14163  0F44  087C               	movf	differenceBetweenTimePeriod@diff,w
 14164  0F45  3E04               	addlw	4
 14165  0F46  0086               	movwf	6
 14166  0F47  0187               	clrf	7
 14167  0F48  0820               	movf	??_differenceBetweenTimePeriod,w
 14168  0F49  3FC0               	movwi [0]fsr1
 14169  0F4A  0821               	movf	??_differenceBetweenTimePeriod+1,w
 14170  0F4B  3FC1               	movwi [1]fsr1
 14171                           
 14172                           ;main.c: 216: while (stop.m > start.m) {
 14173  0F4C  2F55               	goto	i1l1081
 14174  0F4D                     i1l3618:
 14175                           
 14176                           ;main.c: 217: --start.h;
 14177  0F4D  30FF               	movlw	255
 14178  0F4E  07F0               	addwf	differenceBetweenTimePeriod@start,f
 14179  0F4F  30FF               	movlw	255
 14180  0F50  3DF1               	addwfc	differenceBetweenTimePeriod@start+1,f
 14181                           
 14182                           ;main.c: 218: start.m += 60;
 14183  0F51  303C               	movlw	60
 14184  0F52  07F2               	addwf	differenceBetweenTimePeriod@start+2,f
 14185  0F53  3000               	movlw	0
 14186  0F54  3DF3               	addwfc	differenceBetweenTimePeriod@start+3,f
 14187  0F55                     i1l1081:
 14188  0F55  0873               	movf	differenceBetweenTimePeriod@start+3,w
 14189  0F56  3A80               	xorlw	128
 14190  0F57  0020               	movlb	0	; select bank0
 14191  0F58  00A0               	movwf	??_differenceBetweenTimePeriod
 14192  0F59  0879               	movf	differenceBetweenTimePeriod@stop+3,w
 14193  0F5A  3A80               	xorlw	128
 14194  0F5B  0220               	subwf	??_differenceBetweenTimePeriod,w
 14195  0F5C  1D03               	skipz
 14196  0F5D  2F60               	goto	u303_25
 14197  0F5E  0878               	movf	differenceBetweenTimePeriod@stop+2,w
 14198  0F5F  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 14199  0F60                     u303_25:
 14200  0F60  1C03               	skipc
 14201  0F61  2F63               	goto	u303_21
 14202  0F62  2F64               	goto	u303_20
 14203  0F63                     u303_21:
 14204  0F63  2F4D               	goto	i1l3618
 14205  0F64                     u303_20:
 14206  0F64                     i1l3620:
 14207                           
 14208                           ;main.c: 219: };main.c: 220: diff->m = start.m - stop.m;
 14209  0F64  3002               	movlw	2
 14210  0F65  3E76               	addlw	(low (differenceBetweenTimePeriod@stop| 0))& (0+255)
 14211  0F66  0086               	movwf	6
 14212  0F67  0187               	clrf	7
 14213  0F68  3002               	movlw	2
 14214  0F69  3E70               	addlw	(low (differenceBetweenTimePeriod@start| 0))& (0+255)
 14215  0F6A  0084               	movwf	4
 14216  0F6B  0185               	clrf	5
 14217  0F6C  3F40               	moviw [0]fsr1
 14218  0F6D  0200               	subwf	0,w
 14219  0F6E  0020               	movlb	0	; select bank0
 14220  0F6F  00A0               	movwf	??_differenceBetweenTimePeriod
 14221  0F70  3101               	addfsr 0,1
 14222  0F71  3F41               	moviw [1]fsr1
 14223  0F72  3B00               	subwfb	0,w
 14224  0F73  00A1               	movwf	??_differenceBetweenTimePeriod+1
 14225  0F74  087C               	movf	differenceBetweenTimePeriod@diff,w
 14226  0F75  3E02               	addlw	2
 14227  0F76  0086               	movwf	6
 14228  0F77  0187               	clrf	7
 14229  0F78  0820               	movf	??_differenceBetweenTimePeriod,w
 14230  0F79  3FC0               	movwi [0]fsr1
 14231  0F7A  0821               	movf	??_differenceBetweenTimePeriod+1,w
 14232  0F7B  3FC1               	movwi [1]fsr1
 14233  0F7C                     i1l3622:
 14234                           
 14235                           ;main.c: 221: diff->h = start.h - stop.h;
 14236  0F7C  0876               	movf	differenceBetweenTimePeriod@stop,w
 14237  0F7D  0270               	subwf	differenceBetweenTimePeriod@start,w
 14238  0F7E  00A0               	movwf	??_differenceBetweenTimePeriod
 14239  0F7F  0877               	movf	differenceBetweenTimePeriod@stop+1,w
 14240  0F80  3B71               	subwfb	differenceBetweenTimePeriod@start+1,w
 14241  0F81  00A1               	movwf	??_differenceBetweenTimePeriod+1
 14242  0F82  087C               	movf	differenceBetweenTimePeriod@diff,w
 14243  0F83  0086               	movwf	6
 14244  0F84  0187               	clrf	7
 14245  0F85  0820               	movf	??_differenceBetweenTimePeriod,w
 14246  0F86  3FC0               	movwi [0]fsr1
 14247  0F87  0821               	movf	??_differenceBetweenTimePeriod+1,w
 14248  0F88  3FC1               	movwi [1]fsr1
 14249  0F89                     i1l1084:
 14250  0F89  0008               	return
 14251  0F8A                     __end_of_differenceBetweenTimePeriod:
 14252                           
 14253                           	psect	text44
 14254  0AF4                     __ptext44:	
 14255 ;; *************** function _TMR2_StartTimer *****************
 14256 ;; Defined at:
 14257 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 14258 ;; Parameters:    Size  Location     Type
 14259 ;;		None
 14260 ;; Auto vars:     Size  Location     Type
 14261 ;;		None
 14262 ;; Return value:  Size  Location     Type
 14263 ;;                  1    wreg      void 
 14264 ;; Registers used:
 14265 ;;		status,2, status,0, pclath, cstack
 14266 ;; Tracked objects:
 14267 ;;		On entry : 0/0
 14268 ;;		On exit  : 0/0
 14269 ;;		Unchanged: 0/0
 14270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14275 ;;Total ram usage:        0 bytes
 14276 ;; Hardware stack levels used:    1
 14277 ;; Hardware stack levels required when called:    1
 14278 ;; This function calls:
 14279 ;;		_TMR2_Start
 14280 ;; This function is called by:
 14281 ;;		_menuLCD_ISR
 14282 ;; This function uses a non-reentrant model
 14283 ;;
 14284                           
 14285                           
 14286                           ;psect for function _TMR2_StartTimer
 14287  0AF4                     _TMR2_StartTimer:
 14288  0AF4                     i1l3550:	
 14289                           ;incstack = 0
 14290                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
 14291                           
 14292                           
 14293                           ;tmr2.c: 108: TMR2_Start();
 14294  0AF4  318A  22E5  318A   	fcall	_TMR2_Start
 14295  0AF7                     i1l761:
 14296  0AF7  0008               	return
 14297  0AF8                     __end_of_TMR2_StartTimer:
 14298                           
 14299                           	psect	text45
 14300  0AE5                     __ptext45:	
 14301 ;; *************** function _TMR2_Start *****************
 14302 ;; Defined at:
 14303 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 14304 ;; Parameters:    Size  Location     Type
 14305 ;;		None
 14306 ;; Auto vars:     Size  Location     Type
 14307 ;;		None
 14308 ;; Return value:  Size  Location     Type
 14309 ;;                  1    wreg      void 
 14310 ;; Registers used:
 14311 ;;		None
 14312 ;; Tracked objects:
 14313 ;;		On entry : 0/0
 14314 ;;		On exit  : 0/0
 14315 ;;		Unchanged: 0/0
 14316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14321 ;;Total ram usage:        0 bytes
 14322 ;; Hardware stack levels used:    1
 14323 ;; This function calls:
 14324 ;;		Nothing
 14325 ;; This function is called by:
 14326 ;;		_TMR2_StartTimer
 14327 ;; This function uses a non-reentrant model
 14328 ;;
 14329                           
 14330                           
 14331                           ;psect for function _TMR2_Start
 14332  0AE5                     _TMR2_Start:
 14333  0AE5                     i1l3418:	
 14334                           ;incstack = 0
 14335                           ; Regs used in _TMR2_Start: []
 14336                           
 14337                           
 14338                           ;tmr2.c: 103: T2CONbits.TMR2ON = 1;
 14339  0AE5  0025               	movlb	5	; select bank5
 14340  0AE6  178E               	bsf	14,7	;volatile
 14341  0AE7                     i1l758:
 14342  0AE7  0008               	return
 14343  0AE8                     __end_of_TMR2_Start:
 14344                           
 14345                           	psect	text46
 14346  0AE2                     __ptext46:	
 14347 ;; *************** function _PWM_Output_D4_Enable *****************
 14348 ;; Defined at:
 14349 ;;		line 224 in file "main.c"
 14350 ;; Parameters:    Size  Location     Type
 14351 ;;		None
 14352 ;; Auto vars:     Size  Location     Type
 14353 ;;		None
 14354 ;; Return value:  Size  Location     Type
 14355 ;;                  1    wreg      void 
 14356 ;; Registers used:
 14357 ;;		None
 14358 ;; Tracked objects:
 14359 ;;		On entry : 0/0
 14360 ;;		On exit  : 0/0
 14361 ;;		Unchanged: 0/0
 14362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14367 ;;Total ram usage:        0 bytes
 14368 ;; Hardware stack levels used:    1
 14369 ;; This function calls:
 14370 ;;		Nothing
 14371 ;; This function is called by:
 14372 ;;		_menuLCD_ISR
 14373 ;; This function uses a non-reentrant model
 14374 ;;
 14375                           
 14376                           
 14377                           ;psect for function _PWM_Output_D4_Enable
 14378  0AE2                     _PWM_Output_D4_Enable:
 14379  0AE2                     i1l3624:	
 14380                           ;incstack = 0
 14381                           ; Regs used in _PWM_Output_D4_Enable: []
 14382                           
 14383                           
 14384                           ;main.c: 225: PWM6EN = 1;
 14385  0AE2  0027               	movlb	7	; select bank7
 14386  0AE3  178E               	bsf	14,7	;volatile
 14387  0AE4                     i1l1087:
 14388  0AE4  0008               	return
 14389  0AE5                     __end_of_PWM_Output_D4_Enable:
 14390                           
 14391                           	psect	text47
 14392  0BD4                     __ptext47:	
 14393 ;; *************** function _PWM6_LoadDutyValue *****************
 14394 ;; Defined at:
 14395 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 14396 ;; Parameters:    Size  Location     Type
 14397 ;;  dutyValue       2    0[COMMON] unsigned int 
 14398 ;; Auto vars:     Size  Location     Type
 14399 ;;		None
 14400 ;; Return value:  Size  Location     Type
 14401 ;;                  1    wreg      void 
 14402 ;; Registers used:
 14403 ;;		wreg, status,2, status,0
 14404 ;; Tracked objects:
 14405 ;;		On entry : 0/0
 14406 ;;		On exit  : 0/0
 14407 ;;		Unchanged: 0/0
 14408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14409 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14411 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14412 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14413 ;;Total ram usage:        4 bytes
 14414 ;; Hardware stack levels used:    1
 14415 ;; This function calls:
 14416 ;;		Nothing
 14417 ;; This function is called by:
 14418 ;;		_menuLCD_ISR
 14419 ;; This function uses a non-reentrant model
 14420 ;;
 14421                           
 14422                           
 14423                           ;psect for function _PWM6_LoadDutyValue
 14424  0BD4                     _PWM6_LoadDutyValue:
 14425  0BD4                     i1l3548:	
 14426                           ;incstack = 0
 14427                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 14428                           
 14429                           
 14430                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 14431  0BD4  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 14432  0BD5  00F3               	movwf	??_PWM6_LoadDutyValue+1
 14433  0BD6  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 14434  0BD7  00F2               	movwf	??_PWM6_LoadDutyValue
 14435  0BD8  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 14436  0BD9  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 14437  0BDA  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 14438  0BDB  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 14439  0BDC  0872               	movf	??_PWM6_LoadDutyValue,w
 14440  0BDD  0027               	movlb	7	; select bank7
 14441  0BDE  008D               	movwf	13	;volatile
 14442                           
 14443                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 14444  0BDF  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 14445  0BE0  3903               	andlw	3
 14446  0BE1  00F2               	movwf	??_PWM6_LoadDutyValue
 14447  0BE2  3005               	movlw	5
 14448  0BE3                     u275_25:
 14449  0BE3  35F2               	lslf	??_PWM6_LoadDutyValue,f
 14450  0BE4  3EFF               	addlw	-1
 14451  0BE5  1D03               	skipz
 14452  0BE6  2BE3               	goto	u275_25
 14453  0BE7  3572               	lslf	??_PWM6_LoadDutyValue,w
 14454  0BE8  008C               	movwf	12	;volatile
 14455  0BE9                     i1l722:
 14456  0BE9  0008               	return
 14457  0BEA                     __end_of_PWM6_LoadDutyValue:
 14458                           
 14459                           	psect	text48
 14460  0BC0                     __ptext48:	
 14461 ;; *************** function _LCDstr *****************
 14462 ;; Defined at:
 14463 ;;		line 188 in file "main.c"
 14464 ;; Parameters:    Size  Location     Type
 14465 ;;  p               1    wreg     PTR unsigned char 
 14466 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 14467 ;; Auto vars:     Size  Location     Type
 14468 ;;  p               1   11[COMMON] PTR unsigned char 
 14469 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 14470 ;;  c               1   10[COMMON] unsigned char 
 14471 ;; Return value:  Size  Location     Type
 14472 ;;                  1    wreg      void 
 14473 ;; Registers used:
 14474 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14475 ;; Tracked objects:
 14476 ;;		On entry : 0/0
 14477 ;;		On exit  : 0/0
 14478 ;;		Unchanged: 0/0
 14479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14481 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14482 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14483 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14484 ;;Total ram usage:        3 bytes
 14485 ;; Hardware stack levels used:    1
 14486 ;; Hardware stack levels required when called:    3
 14487 ;; This function calls:
 14488 ;;		_LCDchar
 14489 ;; This function is called by:
 14490 ;;		_menuLCD_ISR
 14491 ;; This function uses a non-reentrant model
 14492 ;;
 14493                           
 14494                           
 14495                           ;psect for function _LCDstr
 14496  0BC0                     _LCDstr:
 14497                           
 14498                           ;incstack = 0
 14499                           ; Regs used in _LCDstr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14500                           ;LCDstr@p stored from wreg
 14501  0BC0  00FB               	movwf	LCDstr@p
 14502  0BC1                     i1l3606:
 14503                           
 14504                           ;main.c: 190: unsigned char c;;main.c: 192: while((c = *p++)) LCDchar(c);
 14505  0BC1  2BC6               	goto	i1l3610
 14506  0BC2                     i1l3608:
 14507  0BC2  087A               	movf	LCDstr@c,w
 14508  0BC3  318B  232B  318B   	fcall	_LCDchar
 14509  0BC6                     i1l3610:
 14510  0BC6  087B               	movf	LCDstr@p,w
 14511  0BC7  0086               	movwf	6
 14512  0BC8  0187               	clrf	7
 14513  0BC9  0AFB               	incf	LCDstr@p,f
 14514  0BCA  0801               	movf	1,w
 14515  0BCB  00F9               	movwf	??_LCDstr
 14516  0BCC  0879               	movf	??_LCDstr,w
 14517  0BCD  00FA               	movwf	LCDstr@c
 14518  0BCE  087A               	movf	LCDstr@c,w
 14519  0BCF  1D03               	btfss	3,2
 14520  0BD0  2BD2               	goto	u301_21
 14521  0BD1  2BD3               	goto	u301_20
 14522  0BD2                     u301_21:
 14523  0BD2  2BC2               	goto	i1l3608
 14524  0BD3                     u301_20:
 14525  0BD3                     i1l1071:
 14526  0BD3  0008               	return
 14527  0BD4                     __end_of_LCDstr:
 14528                           
 14529                           	psect	text49
 14530  0B2B                     __ptext49:	
 14531 ;; *************** function _LCDchar *****************
 14532 ;; Defined at:
 14533 ;;		line 183 in file "main.c"
 14534 ;; Parameters:    Size  Location     Type
 14535 ;;  c               1    wreg     unsigned char 
 14536 ;; Auto vars:     Size  Location     Type
 14537 ;;  c               1    8[COMMON] unsigned char 
 14538 ;; Return value:  Size  Location     Type
 14539 ;;                  1    wreg      void 
 14540 ;; Registers used:
 14541 ;;		wreg, status,2, status,0, pclath, cstack
 14542 ;; Tracked objects:
 14543 ;;		On entry : 0/0
 14544 ;;		On exit  : 0/0
 14545 ;;		Unchanged: 0/0
 14546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14548 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14550 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14551 ;;Total ram usage:        1 bytes
 14552 ;; Hardware stack levels used:    1
 14553 ;; Hardware stack levels required when called:    2
 14554 ;; This function calls:
 14555 ;;		i1_LCDsend2x4
 14556 ;; This function is called by:
 14557 ;;		_LCDstr
 14558 ;;		_menuLCD_ISR
 14559 ;; This function uses a non-reentrant model
 14560 ;;
 14561                           
 14562                           
 14563                           ;psect for function _LCDchar
 14564  0B2B                     _LCDchar:
 14565                           
 14566                           ;incstack = 0
 14567                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 14568                           ;LCDchar@c stored from wreg
 14569  0B2B  00F8               	movwf	LCDchar@c
 14570  0B2C                     i1l3420:
 14571                           
 14572                           ;main.c: 185: LCDsend2x4(c, 0x01);
 14573  0B2C  01F2               	clrf	i1LCDsend2x4@mode
 14574  0B2D  0AF2               	incf	i1LCDsend2x4@mode,f
 14575  0B2E  0878               	movf	LCDchar@c,w
 14576  0B2F  3185  25B3  318B   	fcall	i1_LCDsend2x4
 14577  0B32                     i1l1065:
 14578  0B32  0008               	return
 14579  0B33                     __end_of_LCDchar:
 14580                           
 14581                           	psect	text50
 14582  0B24                     __ptext50:	
 14583 ;; *************** function _LCDcmd *****************
 14584 ;; Defined at:
 14585 ;;		line 178 in file "main.c"
 14586 ;; Parameters:    Size  Location     Type
 14587 ;;  c               1    wreg     unsigned char 
 14588 ;; Auto vars:     Size  Location     Type
 14589 ;;  c               1    8[COMMON] unsigned char 
 14590 ;; Return value:  Size  Location     Type
 14591 ;;                  1    wreg      void 
 14592 ;; Registers used:
 14593 ;;		wreg, status,2, status,0, pclath, cstack
 14594 ;; Tracked objects:
 14595 ;;		On entry : 0/0
 14596 ;;		On exit  : 0/0
 14597 ;;		Unchanged: 0/0
 14598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14602 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14603 ;;Total ram usage:        1 bytes
 14604 ;; Hardware stack levels used:    1
 14605 ;; Hardware stack levels required when called:    2
 14606 ;; This function calls:
 14607 ;;		i1_LCDsend2x4
 14608 ;; This function is called by:
 14609 ;;		_menuLCD_ISR
 14610 ;; This function uses a non-reentrant model
 14611 ;;
 14612                           
 14613                           
 14614                           ;psect for function _LCDcmd
 14615  0B24                     _LCDcmd:
 14616                           
 14617                           ;incstack = 0
 14618                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 14619                           ;LCDcmd@c stored from wreg
 14620  0B24  00F8               	movwf	LCDcmd@c
 14621  0B25                     i1l3604:
 14622                           
 14623                           ;main.c: 180: LCDsend2x4(c, 0);
 14624  0B25  01F2               	clrf	i1LCDsend2x4@mode
 14625  0B26  0878               	movf	LCDcmd@c,w
 14626  0B27  3185  25B3  318B   	fcall	i1_LCDsend2x4
 14627  0B2A                     i1l1062:
 14628  0B2A  0008               	return
 14629  0B2B                     __end_of_LCDcmd:
 14630                           
 14631                           	psect	text51
 14632  05B3                     __ptext51:	
 14633 ;; *************** function i1_LCDsend2x4 *****************
 14634 ;; Defined at:
 14635 ;;		line 132 in file "main.c"
 14636 ;; Parameters:    Size  Location     Type
 14637 ;;  c               1    wreg     unsigned char 
 14638 ;;  mode            1    2[COMMON] unsigned char 
 14639 ;; Auto vars:     Size  Location     Type
 14640 ;;  c               1    5[COMMON] unsigned char 
 14641 ;;  lc              1    7[COMMON] unsigned char 
 14642 ;;  hc              1    6[COMMON] unsigned char 
 14643 ;; Return value:  Size  Location     Type
 14644 ;;                  1    wreg      void 
 14645 ;; Registers used:
 14646 ;;		wreg, status,2, status,0, pclath, cstack
 14647 ;; Tracked objects:
 14648 ;;		On entry : 0/0
 14649 ;;		On exit  : 0/0
 14650 ;;		Unchanged: 0/0
 14651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14652 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14653 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14654 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14655 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14656 ;;Total ram usage:        6 bytes
 14657 ;; Hardware stack levels used:    1
 14658 ;; Hardware stack levels required when called:    1
 14659 ;; This function calls:
 14660 ;;		i1_WriteI2C
 14661 ;; This function is called by:
 14662 ;;		_LCDcmd
 14663 ;;		_LCDchar
 14664 ;; This function uses a non-reentrant model
 14665 ;;
 14666                           
 14667                           
 14668                           ;psect for function i1_LCDsend2x4
 14669  05B3                     i1_LCDsend2x4:
 14670                           
 14671                           ;incstack = 0
 14672                           ; Regs used in i1_LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 14673                           ;i1LCDsend2x4@c stored from wreg
 14674  05B3  00F5               	movwf	i1LCDsend2x4@c
 14675  05B4                     i1l3372:
 14676                           
 14677                           ;main.c: 134: unsigned char hc;;main.c: 135: unsigned char lc;;main.c: 137: hc = c & 0xf
      +                          0;
 14678  05B4  0875               	movf	i1LCDsend2x4@c,w
 14679  05B5  39F0               	andlw	240
 14680  05B6  00F3               	movwf	??i1_LCDsend2x4
 14681  05B7  0873               	movf	??i1_LCDsend2x4,w
 14682  05B8  00F6               	movwf	i1LCDsend2x4@hc
 14683  05B9                     i1l3374:
 14684                           
 14685                           ;main.c: 138: lc = (c << 4) & 0xf0;
 14686  05B9  0875               	movf	i1LCDsend2x4@c,w
 14687  05BA  00F3               	movwf	??i1_LCDsend2x4
 14688  05BB  3003               	movlw	3
 14689  05BC                     u231_25:
 14690  05BC  35F3               	lslf	??i1_LCDsend2x4,f
 14691  05BD  3EFF               	addlw	-1
 14692  05BE  1D03               	skipz
 14693  05BF  2DBC               	goto	u231_25
 14694  05C0  3573               	lslf	??i1_LCDsend2x4,w
 14695  05C1  39F0               	andlw	240
 14696  05C2  00F4               	movwf	??i1_LCDsend2x4+1
 14697  05C3  0874               	movf	??i1_LCDsend2x4+1,w
 14698  05C4  00F7               	movwf	i1LCDsend2x4@lc
 14699  05C5                     i1l3376:	
 14700                           ;main.c: 140: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14701                           
 14702  05C5  0023               	movlb	3	; select bank3
 14703  05C6  0C0F               	rrf	15,w	;volatile
 14704  05C7  0C89               	rrf	9,f
 14705  05C8  3901               	andlw	1
 14706  05C9  00F3               	movwf	??i1_LCDsend2x4
 14707  05CA  0811               	movf	17,w	;volatile
 14708  05CB  391F               	andlw	31
 14709  05CC  0473               	iorwf	??i1_LCDsend2x4,w
 14710  05CD  1D03               	btfss	3,2
 14711  05CE  2DD0               	goto	u232_21
 14712  05CF  2DD1               	goto	u232_20
 14713  05D0                     u232_21:
 14714  05D0  2DC5               	goto	i1l3376
 14715  05D1                     u232_20:
 14716  05D1                     i1l1025:
 14717                           
 14718                           ;main.c: 141: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 14719  05D1  1411               	bsf	17,0	;volatile
 14720  05D2                     i1l1026:
 14721  05D2  1811               	btfsc	17,0	;volatile
 14722  05D3  2DD5               	goto	u233_21
 14723  05D4  2DD6               	goto	u233_20
 14724  05D5                     u233_21:
 14725  05D5  2DD2               	goto	i1l1026
 14726  05D6                     u233_20:
 14727  05D6                     i1l3378:
 14728  05D6  0C0F               	rrf	15,w	;volatile
 14729  05D7  0C89               	rrf	9,f
 14730  05D8  3901               	andlw	1
 14731  05D9  00F3               	movwf	??i1_LCDsend2x4
 14732  05DA  0811               	movf	17,w	;volatile
 14733  05DB  391F               	andlw	31
 14734  05DC  0473               	iorwf	??i1_LCDsend2x4,w
 14735  05DD  1D03               	btfss	3,2
 14736  05DE  2DE0               	goto	u234_21
 14737  05DF  2DE1               	goto	u234_20
 14738  05E0                     u234_21:
 14739  05E0  2DD6               	goto	i1l3378
 14740  05E1                     u234_20:
 14741  05E1                     i1l3380:
 14742                           
 14743                           ;main.c: 142: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14744  05E1  304E               	movlw	78
 14745  05E2  318E  2624  3185   	fcall	i1_WriteI2C
 14746  05E5                     i1l3382:
 14747  05E5  0023               	movlb	3	; select bank3
 14748  05E6  0C0F               	rrf	15,w	;volatile
 14749  05E7  0C89               	rrf	9,f
 14750  05E8  3901               	andlw	1
 14751  05E9  00F3               	movwf	??i1_LCDsend2x4
 14752  05EA  0811               	movf	17,w	;volatile
 14753  05EB  391F               	andlw	31
 14754  05EC  0473               	iorwf	??i1_LCDsend2x4,w
 14755  05ED  1D03               	btfss	3,2
 14756  05EE  2DF0               	goto	u235_21
 14757  05EF  2DF1               	goto	u235_20
 14758  05F0                     u235_21:
 14759  05F0  2DE5               	goto	i1l3382
 14760  05F1                     u235_20:
 14761  05F1                     i1l3384:
 14762                           
 14763                           ;main.c: 143: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14764  05F1  0876               	movf	i1LCDsend2x4@hc,w
 14765  05F2  0472               	iorwf	i1LCDsend2x4@mode,w
 14766  05F3  3808               	iorlw	8
 14767  05F4  318E  2624  3185   	fcall	i1_WriteI2C
 14768  05F7                     i1l3386:
 14769  05F7  0023               	movlb	3	; select bank3
 14770  05F8  0C0F               	rrf	15,w	;volatile
 14771  05F9  0C89               	rrf	9,f
 14772  05FA  3901               	andlw	1
 14773  05FB  00F3               	movwf	??i1_LCDsend2x4
 14774  05FC  0811               	movf	17,w	;volatile
 14775  05FD  391F               	andlw	31
 14776  05FE  0473               	iorwf	??i1_LCDsend2x4,w
 14777  05FF  1D03               	btfss	3,2
 14778  0600  2E02               	goto	u236_21
 14779  0601  2E03               	goto	u236_20
 14780  0602                     u236_21:
 14781  0602  2DF7               	goto	i1l3386
 14782  0603                     u236_20:
 14783  0603                     i1l3388:
 14784                           
 14785                           ;main.c: 144: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 14786  0603  0876               	movf	i1LCDsend2x4@hc,w
 14787  0604  0472               	iorwf	i1LCDsend2x4@mode,w
 14788  0605  380C               	iorlw	12
 14789  0606  318E  2624  3185   	fcall	i1_WriteI2C
 14790  0609                     i1l3390:
 14791  0609  0023               	movlb	3	; select bank3
 14792  060A  0C0F               	rrf	15,w	;volatile
 14793  060B  0C89               	rrf	9,f
 14794  060C  3901               	andlw	1
 14795  060D  00F3               	movwf	??i1_LCDsend2x4
 14796  060E  0811               	movf	17,w	;volatile
 14797  060F  391F               	andlw	31
 14798  0610  0473               	iorwf	??i1_LCDsend2x4,w
 14799  0611  1D03               	btfss	3,2
 14800  0612  2E14               	goto	u237_21
 14801  0613  2E15               	goto	u237_20
 14802  0614                     u237_21:
 14803  0614  2E09               	goto	i1l3390
 14804  0615                     u237_20:
 14805  0615                     i1l1040:
 14806  0615                     i1l3392:	
 14807                           ;main.c: 145: _delay((unsigned long)((1)*(1000000/4000000.0)));
 14808                           
 14809                           
 14810                           ;main.c: 146: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14811  0615  0876               	movf	i1LCDsend2x4@hc,w
 14812  0616  0472               	iorwf	i1LCDsend2x4@mode,w
 14813  0617  3808               	iorlw	8
 14814  0618  318E  2624  3185   	fcall	i1_WriteI2C
 14815  061B                     i1l3394:
 14816  061B  0023               	movlb	3	; select bank3
 14817  061C  0C0F               	rrf	15,w	;volatile
 14818  061D  0C89               	rrf	9,f
 14819  061E  3901               	andlw	1
 14820  061F  00F3               	movwf	??i1_LCDsend2x4
 14821  0620  0811               	movf	17,w	;volatile
 14822  0621  391F               	andlw	31
 14823  0622  0473               	iorwf	??i1_LCDsend2x4,w
 14824  0623  1D03               	btfss	3,2
 14825  0624  2E26               	goto	u238_21
 14826  0625  2E27               	goto	u238_20
 14827  0626                     u238_21:
 14828  0626  2E1B               	goto	i1l3394
 14829  0627                     u238_20:
 14830  0627                     i1l3396:
 14831                           
 14832                           ;main.c: 147: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14833  0627  0877               	movf	i1LCDsend2x4@lc,w
 14834  0628  0472               	iorwf	i1LCDsend2x4@mode,w
 14835  0629  3808               	iorlw	8
 14836  062A  318E  2624  3185   	fcall	i1_WriteI2C
 14837  062D                     i1l3398:
 14838  062D  0023               	movlb	3	; select bank3
 14839  062E  0C0F               	rrf	15,w	;volatile
 14840  062F  0C89               	rrf	9,f
 14841  0630  3901               	andlw	1
 14842  0631  00F3               	movwf	??i1_LCDsend2x4
 14843  0632  0811               	movf	17,w	;volatile
 14844  0633  391F               	andlw	31
 14845  0634  0473               	iorwf	??i1_LCDsend2x4,w
 14846  0635  1D03               	btfss	3,2
 14847  0636  2E38               	goto	u239_21
 14848  0637  2E39               	goto	u239_20
 14849  0638                     u239_21:
 14850  0638  2E2D               	goto	i1l3398
 14851  0639                     u239_20:
 14852  0639                     i1l3400:
 14853                           
 14854                           ;main.c: 148: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 14855  0639  0877               	movf	i1LCDsend2x4@lc,w
 14856  063A  0472               	iorwf	i1LCDsend2x4@mode,w
 14857  063B  380C               	iorlw	12
 14858  063C  318E  2624  3185   	fcall	i1_WriteI2C
 14859  063F                     i1l3402:
 14860  063F  0023               	movlb	3	; select bank3
 14861  0640  0C0F               	rrf	15,w	;volatile
 14862  0641  0C89               	rrf	9,f
 14863  0642  3901               	andlw	1
 14864  0643  00F3               	movwf	??i1_LCDsend2x4
 14865  0644  0811               	movf	17,w	;volatile
 14866  0645  391F               	andlw	31
 14867  0646  0473               	iorwf	??i1_LCDsend2x4,w
 14868  0647  1D03               	btfss	3,2
 14869  0648  2E4A               	goto	u240_21
 14870  0649  2E4B               	goto	u240_20
 14871  064A                     u240_21:
 14872  064A  2E3F               	goto	i1l3402
 14873  064B                     u240_20:
 14874  064B                     i1l1049:
 14875  064B                     i1l3404:	
 14876                           ;main.c: 149: _delay((unsigned long)((1)*(1000000/4000000.0)));
 14877                           
 14878                           
 14879                           ;main.c: 150: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 14880  064B  0877               	movf	i1LCDsend2x4@lc,w
 14881  064C  0472               	iorwf	i1LCDsend2x4@mode,w
 14882  064D  3808               	iorlw	8
 14883  064E  318E  2624  3185   	fcall	i1_WriteI2C
 14884  0651                     i1l3406:
 14885  0651  0023               	movlb	3	; select bank3
 14886  0652  0C0F               	rrf	15,w	;volatile
 14887  0653  0C89               	rrf	9,f
 14888  0654  3901               	andlw	1
 14889  0655  00F3               	movwf	??i1_LCDsend2x4
 14890  0656  0811               	movf	17,w	;volatile
 14891  0657  391F               	andlw	31
 14892  0658  0473               	iorwf	??i1_LCDsend2x4,w
 14893  0659  1D03               	btfss	3,2
 14894  065A  2E5C               	goto	u241_21
 14895  065B  2E5D               	goto	u241_20
 14896  065C                     u241_21:
 14897  065C  2E51               	goto	i1l3406
 14898  065D                     u241_20:
 14899  065D                     i1l1052:
 14900                           
 14901                           ;main.c: 151: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 14902  065D  1511               	bsf	17,2	;volatile
 14903  065E                     i1l1053:
 14904  065E  1911               	btfsc	17,2	;volatile
 14905  065F  2E61               	goto	u242_21
 14906  0660  2E62               	goto	u242_20
 14907  0661                     u242_21:
 14908  0661  2E5E               	goto	i1l1053
 14909  0662                     u242_20:
 14910  0662                     i1l3408:
 14911                           
 14912                           ;main.c: 152: _delay((unsigned long)((50)*(1000000/4000000.0)));
 14913  0662  3004               	movlw	4
 14914  0663                     u455_27:
 14915  0663  0B89               	decfsz	9,f
 14916  0664  2E63               	goto	u455_27
 14917  0665                     i1l1056:
 14918  0665  0008               	return
 14919  0666                     __end_ofi1_LCDsend2x4:
 14920                           
 14921                           	psect	text52
 14922  0E24                     __ptext52:	
 14923 ;; *************** function i1_WriteI2C *****************
 14924 ;; Defined at:
 14925 ;;		line 47 in file "I2C/i2c.c"
 14926 ;; Parameters:    Size  Location     Type
 14927 ;;  data_out        1    wreg     unsigned char 
 14928 ;; Auto vars:     Size  Location     Type
 14929 ;;  data_out        1    1[COMMON] unsigned char 
 14930 ;; Return value:  Size  Location     Type
 14931 ;;                  1    wreg      char 
 14932 ;; Registers used:
 14933 ;;		wreg, status,2, status,0
 14934 ;; Tracked objects:
 14935 ;;		On entry : 0/0
 14936 ;;		On exit  : 0/0
 14937 ;;		Unchanged: 0/0
 14938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14940 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14941 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14942 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14943 ;;Total ram usage:        2 bytes
 14944 ;; Hardware stack levels used:    1
 14945 ;; This function calls:
 14946 ;;		Nothing
 14947 ;; This function is called by:
 14948 ;;		_tsttc
 14949 ;;		i1_LCDsend2x4
 14950 ;; This function uses a non-reentrant model
 14951 ;;
 14952                           
 14953                           
 14954                           ;psect for function i1_WriteI2C
 14955  0E24                     i1_WriteI2C:
 14956                           
 14957                           ;incstack = 0
 14958                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 14959                           ;i1WriteI2C@data_out stored from wreg
 14960  0E24  00F1               	movwf	i1WriteI2C@data_out
 14961  0E25                     i1l3342:
 14962                           
 14963                           ;i2c.c: 49: SSP1BUF = data_out;
 14964  0E25  0871               	movf	i1WriteI2C@data_out,w
 14965  0E26  0023               	movlb	3	; select bank3
 14966  0E27  008C               	movwf	12	;volatile
 14967  0E28                     i1l3344:
 14968                           
 14969                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 14970  0E28  1F90               	btfss	16,7	;volatile
 14971  0E29  2E2B               	goto	u222_21
 14972  0E2A  2E2C               	goto	u222_20
 14973  0E2B                     u222_21:
 14974  0E2B  2E2D               	goto	i1l3350
 14975  0E2C                     u222_20:
 14976  0E2C  2E6E               	goto	i1l30
 14977  0E2D                     i1l3350:
 14978                           
 14979                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 14980  0E2D  300F               	movlw	15
 14981  0E2E  0510               	andwf	16,w	;volatile
 14982  0E2F  00F0               	movwf	??i1_WriteI2C
 14983  0E30  3008               	movlw	8
 14984  0E31  0670               	xorwf	??i1_WriteI2C,w
 14985  0E32  1903               	btfsc	3,2
 14986  0E33  2E35               	goto	u223_21
 14987  0E34  2E36               	goto	u223_20
 14988  0E35                     u223_21:
 14989  0E35  2E4C               	goto	i1l3362
 14990  0E36                     u223_20:
 14991  0E36                     i1l3352:
 14992  0E36  300F               	movlw	15
 14993  0E37  0510               	andwf	16,w	;volatile
 14994  0E38  00F0               	movwf	??i1_WriteI2C
 14995  0E39  300B               	movlw	11
 14996  0E3A  0670               	xorwf	??i1_WriteI2C,w
 14997  0E3B  1903               	btfsc	3,2
 14998  0E3C  2E3E               	goto	u224_21
 14999  0E3D  2E3F               	goto	u224_20
 15000  0E3E                     u224_21:
 15001  0E3E  2E4C               	goto	i1l3362
 15002  0E3F                     u224_20:
 15003  0E3F                     i1l3354:
 15004                           
 15005                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 15006  0E3F  1610               	bsf	16,4	;volatile
 15007  0E40                     i1l33:	
 15008                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 15009                           
 15010  0E40  002E               	movlb	14	; select bank14
 15011  0E41  1C0F               	btfss	15,0	;volatile
 15012  0E42  2E44               	goto	u225_21
 15013  0E43  2E45               	goto	u225_20
 15014  0E44                     u225_21:
 15015  0E44  2E40               	goto	i1l33
 15016  0E45                     u225_20:
 15017  0E45                     i1l35:
 15018                           
 15019                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 15020  0E45  0023               	movlb	3	; select bank3
 15021  0E46  190F               	btfsc	15,2	;volatile
 15022  0E47  2E49               	goto	u226_21
 15023  0E48  2E4A               	goto	u226_20
 15024  0E49                     u226_21:
 15025  0E49  2E6E               	goto	i1l30
 15026  0E4A                     u226_20:
 15027  0E4A                     i1l3356:
 15028  0E4A  080F               	movf	15,w	;volatile
 15029  0E4B  2E6E               	goto	i1l30
 15030  0E4C                     i1l3362:
 15031                           
 15032                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 15033  0E4C  300F               	movlw	15
 15034  0E4D  0510               	andwf	16,w	;volatile
 15035  0E4E  00F0               	movwf	??i1_WriteI2C
 15036  0E4F  3008               	movlw	8
 15037  0E50  0670               	xorwf	??i1_WriteI2C,w
 15038  0E51  1903               	btfsc	3,2
 15039  0E52  2E54               	goto	u227_21
 15040  0E53  2E55               	goto	u227_20
 15041  0E54                     u227_21:
 15042  0E54  2E5E               	goto	i1l42
 15043  0E55                     u227_20:
 15044  0E55                     i1l3364:
 15045  0E55  300F               	movlw	15
 15046  0E56  0510               	andwf	16,w	;volatile
 15047  0E57  00F0               	movwf	??i1_WriteI2C
 15048  0E58  300B               	movlw	11
 15049  0E59  0670               	xorwf	??i1_WriteI2C,w
 15050  0E5A  1D03               	btfss	3,2
 15051  0E5B  2E5D               	goto	u228_21
 15052  0E5C  2E5E               	goto	u228_20
 15053  0E5D                     u228_21:
 15054  0E5D  2E6E               	goto	i1l30
 15055  0E5E                     u228_20:
 15056  0E5E                     i1l42:
 15057  0E5E  180F               	btfsc	15,0	;volatile
 15058  0E5F  2E61               	goto	u229_21
 15059  0E60  2E62               	goto	u229_20
 15060  0E61                     u229_21:
 15061  0E61  2E5E               	goto	i1l42
 15062  0E62                     u229_20:
 15063  0E62                     i1l3366:
 15064  0E62  0C0F               	rrf	15,w	;volatile
 15065  0E63  0C89               	rrf	9,f
 15066  0E64  3901               	andlw	1
 15067  0E65  00F0               	movwf	??i1_WriteI2C
 15068  0E66  0811               	movf	17,w	;volatile
 15069  0E67  391F               	andlw	31
 15070  0E68  0470               	iorwf	??i1_WriteI2C,w
 15071  0E69  1D03               	btfss	3,2
 15072  0E6A  2E6C               	goto	u230_21
 15073  0E6B  2E6D               	goto	u230_20
 15074  0E6C                     u230_21:
 15075  0E6C  2E62               	goto	i1l3366
 15076  0E6D                     u230_20:
 15077  0E6D                     i1l47:
 15078                           
 15079                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 15080  0E6D  0811               	movf	17,w	;volatile
 15081  0E6E                     i1l30:
 15082  0E6E  0008               	return
 15083  0E6F                     __end_ofi1_WriteI2C:
 15084                           
 15085                           	psect	text53
 15086  0B7A                     __ptext53:	
 15087 ;; *************** function _TMR3_WriteTimer *****************
 15088 ;; Defined at:
 15089 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 15090 ;; Parameters:    Size  Location     Type
 15091 ;;  timerVal        2    0[COMMON] unsigned int 
 15092 ;; Auto vars:     Size  Location     Type
 15093 ;;		None
 15094 ;; Return value:  Size  Location     Type
 15095 ;;                  1    wreg      void 
 15096 ;; Registers used:
 15097 ;;		wreg, status,2
 15098 ;; Tracked objects:
 15099 ;;		On entry : 0/0
 15100 ;;		On exit  : 0/0
 15101 ;;		Unchanged: 0/0
 15102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15103 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15106 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15107 ;;Total ram usage:        2 bytes
 15108 ;; Hardware stack levels used:    1
 15109 ;; This function calls:
 15110 ;;		Nothing
 15111 ;; This function is called by:
 15112 ;;		_TMR3_ISR
 15113 ;;		_TMR3_Reload
 15114 ;; This function uses a non-reentrant model
 15115 ;;
 15116                           
 15117                           
 15118                           ;psect for function _TMR3_WriteTimer
 15119  0B7A                     _TMR3_WriteTimer:
 15120  0B7A                     i1l3882:	
 15121                           ;incstack = 0
 15122                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 15123                           
 15124                           
 15125                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 15126  0B7A  0024               	movlb	4	; select bank4
 15127  0B7B  1D14               	btfss	20,2	;volatile
 15128  0B7C  2B7E               	goto	u323_21
 15129  0B7D  2B7F               	goto	u323_20
 15130  0B7E                     u323_21:
 15131  0B7E  2B86               	goto	i1l3892
 15132  0B7F                     u323_20:
 15133  0B7F                     i1l3884:
 15134                           
 15135                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 15136  0B7F  1014               	bcf	20,0	;volatile
 15137  0B80                     i1l3886:
 15138                           
 15139                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 15140  0B80  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 15141  0B81  0093               	movwf	19	;volatile
 15142  0B82                     i1l3888:
 15143                           
 15144                           ;tmr3.c: 136: TMR3L = timerVal;
 15145  0B82  0870               	movf	TMR3_WriteTimer@timerVal,w
 15146  0B83  0092               	movwf	18	;volatile
 15147  0B84                     i1l3890:
 15148                           
 15149                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 15150  0B84  1414               	bsf	20,0	;volatile
 15151                           
 15152                           ;tmr3.c: 140: }
 15153  0B85  2B8A               	goto	i1l465
 15154  0B86                     i1l3892:
 15155                           
 15156                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 15157  0B86  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 15158  0B87  0093               	movwf	19	;volatile
 15159  0B88                     i1l3894:
 15160                           
 15161                           ;tmr3.c: 145: TMR3L = timerVal;
 15162  0B88  0870               	movf	TMR3_WriteTimer@timerVal,w
 15163  0B89  0092               	movwf	18	;volatile
 15164  0B8A                     i1l465:
 15165  0B8A  0008               	return
 15166  0B8B                     __end_of_TMR3_WriteTimer:
 15167                           
 15168                           	psect	text54
 15169  0BEA                     __ptext54:	
 15170 ;; *************** function _TMR1_ISR *****************
 15171 ;; Defined at:
 15172 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 15173 ;; Parameters:    Size  Location     Type
 15174 ;;		None
 15175 ;; Auto vars:     Size  Location     Type
 15176 ;;		None
 15177 ;; Return value:  Size  Location     Type
 15178 ;;                  1    wreg      void 
 15179 ;; Registers used:
 15180 ;;		wreg, status,2, status,0, pclath, cstack
 15181 ;; Tracked objects:
 15182 ;;		On entry : 0/0
 15183 ;;		On exit  : 0/0
 15184 ;;		Unchanged: 0/0
 15185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15190 ;;Total ram usage:        0 bytes
 15191 ;; Hardware stack levels used:    1
 15192 ;; Hardware stack levels required when called:    1
 15193 ;; This function calls:
 15194 ;;		Absolute function
 15195 ;;		_Clock_ISR
 15196 ;;		_TMR1_DefaultInterruptHandler
 15197 ;;		_TMR1_WriteTimer
 15198 ;; This function is called by:
 15199 ;;		_INTERRUPT_InterruptManager
 15200 ;; This function uses a non-reentrant model
 15201 ;;
 15202                           
 15203                           
 15204                           ;psect for function _TMR1_ISR
 15205  0BEA                     _TMR1_ISR:
 15206  0BEA                     i1l4166:	
 15207                           ;incstack = 0
 15208                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 15209                           
 15210                           
 15211                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 15212  0BEA  002E               	movlb	14	; select bank14
 15213  0BEB  1010               	bcf	16,0	;volatile
 15214  0BEC                     i1l4168:
 15215                           
 15216                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 15217  0BEC  0021               	movlb	1	; select bank1
 15218  0BED  0829               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 15219  0BEE  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 15220  0BEF  0828               	movf	_timer1ReloadVal^(0+128),w	;volatile
 15221  0BF0  00F0               	movwf	TMR1_WriteTimer@timerVal
 15222  0BF1  318B  2369  318B   	fcall	_TMR1_WriteTimer
 15223  0BF4                     i1l4170:
 15224                           
 15225                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 15226  0BF4  0021               	movlb	1	; select bank1
 15227  0BF5  0826               	movf	_TMR1_InterruptHandler^(0+128),w
 15228  0BF6  0427               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 15229  0BF7  1903               	btfsc	3,2
 15230  0BF8  2BFA               	goto	u381_21
 15231  0BF9  2BFB               	goto	u381_20
 15232  0BFA                     u381_21:
 15233  0BFA  2C00               	goto	i1l414
 15234  0BFB                     u381_20:
 15235  0BFB                     i1l4172:
 15236                           
 15237                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 15238  0BFB  0827               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 15239  0BFC  008A               	movwf	10
 15240  0BFD  0826               	movf	_TMR1_InterruptHandler^(0+128),w
 15241  0BFE  000A               	callw
 15242  0BFF  318B               	pagesel	$
 15243  0C00                     i1l414:
 15244  0C00  0008               	return
 15245  0C01                     __end_of_TMR1_ISR:
 15246                           
 15247                           	psect	text55
 15248  0B69                     __ptext55:	
 15249 ;; *************** function _TMR1_WriteTimer *****************
 15250 ;; Defined at:
 15251 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 15252 ;; Parameters:    Size  Location     Type
 15253 ;;  timerVal        2    0[COMMON] unsigned int 
 15254 ;; Auto vars:     Size  Location     Type
 15255 ;;		None
 15256 ;; Return value:  Size  Location     Type
 15257 ;;                  1    wreg      void 
 15258 ;; Registers used:
 15259 ;;		wreg, status,2
 15260 ;; Tracked objects:
 15261 ;;		On entry : 0/0
 15262 ;;		On exit  : 0/0
 15263 ;;		Unchanged: 0/0
 15264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15265 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15268 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15269 ;;Total ram usage:        2 bytes
 15270 ;; Hardware stack levels used:    1
 15271 ;; This function calls:
 15272 ;;		Nothing
 15273 ;; This function is called by:
 15274 ;;		_TMR1_ISR
 15275 ;;		_TMR1_Reload
 15276 ;; This function uses a non-reentrant model
 15277 ;;
 15278                           
 15279                           
 15280                           ;psect for function _TMR1_WriteTimer
 15281  0B69                     _TMR1_WriteTimer:
 15282  0B69                     i1l3868:	
 15283                           ;incstack = 0
 15284                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 15285                           
 15286                           
 15287                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 15288  0B69  0024               	movlb	4	; select bank4
 15289  0B6A  1D0E               	btfss	14,2	;volatile
 15290  0B6B  2B6D               	goto	u322_21
 15291  0B6C  2B6E               	goto	u322_20
 15292  0B6D                     u322_21:
 15293  0B6D  2B75               	goto	i1l3878
 15294  0B6E                     u322_20:
 15295  0B6E                     i1l3870:
 15296                           
 15297                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 15298  0B6E  100E               	bcf	14,0	;volatile
 15299  0B6F                     i1l3872:
 15300                           
 15301                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 15302  0B6F  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15303  0B70  008D               	movwf	13	;volatile
 15304  0B71                     i1l3874:
 15305                           
 15306                           ;tmr1.c: 136: TMR1L = timerVal;
 15307  0B71  0870               	movf	TMR1_WriteTimer@timerVal,w
 15308  0B72  008C               	movwf	12	;volatile
 15309  0B73                     i1l3876:
 15310                           
 15311                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 15312  0B73  140E               	bsf	14,0	;volatile
 15313                           
 15314                           ;tmr1.c: 140: }
 15315  0B74  2B79               	goto	i1l401
 15316  0B75                     i1l3878:
 15317                           
 15318                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 15319  0B75  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15320  0B76  008D               	movwf	13	;volatile
 15321  0B77                     i1l3880:
 15322                           
 15323                           ;tmr1.c: 145: TMR1L = timerVal;
 15324  0B77  0870               	movf	TMR1_WriteTimer@timerVal,w
 15325  0B78  008C               	movwf	12	;volatile
 15326  0B79                     i1l401:
 15327  0B79  0008               	return
 15328  0B7A                     __end_of_TMR1_WriteTimer:
 15329                           
 15330                           	psect	text56
 15331  0778                     __ptext56:	
 15332 ;; *************** function _Clock_ISR *****************
 15333 ;; Defined at:
 15334 ;;		line 287 in file "main.c"
 15335 ;; Parameters:    Size  Location     Type
 15336 ;;		None
 15337 ;; Auto vars:     Size  Location     Type
 15338 ;;		None
 15339 ;; Return value:  Size  Location     Type
 15340 ;;                  1    wreg      void 
 15341 ;; Registers used:
 15342 ;;		wreg, status,2, status,0
 15343 ;; Tracked objects:
 15344 ;;		On entry : 0/0
 15345 ;;		On exit  : 0/0
 15346 ;;		Unchanged: 0/0
 15347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15350 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15351 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15352 ;;Total ram usage:        1 bytes
 15353 ;; Hardware stack levels used:    1
 15354 ;; This function calls:
 15355 ;;		Nothing
 15356 ;; This function is called by:
 15357 ;;		_main
 15358 ;;		_TMR1_ISR
 15359 ;; This function uses a non-reentrant model
 15360 ;;
 15361                           
 15362                           
 15363                           ;psect for function _Clock_ISR
 15364  0778                     _Clock_ISR:
 15365  0778                     i1l3964:	
 15366                           ;incstack = 0
 15367                           ; Regs used in _Clock_ISR: [wreg+status,2+status,0]
 15368                           
 15369                           
 15370                           ;main.c: 289: t.s++;
 15371  0778  3001               	movlw	1
 15372  0779  0020               	movlb	0	; select bank0
 15373  077A  07D0               	addwf	_t+4,f
 15374  077B  3000               	movlw	0
 15375  077C  3DD1               	addwfc	_t+5,f
 15376  077D                     i1l3966:
 15377                           
 15378                           ;main.c: 291: if(t.s==60){
 15379  077D  303C               	movlw	60
 15380  077E  0650               	xorwf	_t+4,w
 15381  077F  0451               	iorwf	_t+5,w
 15382  0780  1D03               	btfss	3,2
 15383  0781  2F83               	goto	u343_21
 15384  0782  2F84               	goto	u343_20
 15385  0783                     u343_21:
 15386  0783  2F8A               	goto	i1l3972
 15387  0784                     u343_20:
 15388  0784                     i1l3968:
 15389                           
 15390                           ;main.c: 292: t.m++;
 15391  0784  3001               	movlw	1
 15392  0785  07CE               	addwf	_t+2,f
 15393  0786  3000               	movlw	0
 15394  0787  3DCF               	addwfc	_t+3,f
 15395  0788                     i1l3970:
 15396                           
 15397                           ;main.c: 293: t.s=0;
 15398  0788  01D0               	clrf	_t+4
 15399  0789  01D1               	clrf	_t+5
 15400  078A                     i1l3972:
 15401                           
 15402                           ;main.c: 294: };main.c: 295: if(t.m==60){
 15403  078A  303C               	movlw	60
 15404  078B  064E               	xorwf	_t+2,w
 15405  078C  044F               	iorwf	_t+3,w
 15406  078D  1D03               	btfss	3,2
 15407  078E  2F90               	goto	u344_21
 15408  078F  2F91               	goto	u344_20
 15409  0790                     u344_21:
 15410  0790  2F97               	goto	i1l3978
 15411  0791                     u344_20:
 15412  0791                     i1l3974:
 15413                           
 15414                           ;main.c: 297: t.h++;
 15415  0791  3001               	movlw	1
 15416  0792  07CC               	addwf	_t,f
 15417  0793  3000               	movlw	0
 15418  0794  3DCD               	addwfc	_t+1,f
 15419  0795                     i1l3976:
 15420                           
 15421                           ;main.c: 298: t.m=0;
 15422  0795  01CE               	clrf	_t+2
 15423  0796  01CF               	clrf	_t+3
 15424  0797                     i1l3978:
 15425                           
 15426                           ;main.c: 299: };main.c: 300: if(t.h==24){
 15427  0797  3018               	movlw	24
 15428  0798  064C               	xorwf	_t,w
 15429  0799  044D               	iorwf	_t+1,w
 15430  079A  1D03               	btfss	3,2
 15431  079B  2F9D               	goto	u345_21
 15432  079C  2F9E               	goto	u345_20
 15433  079D                     u345_21:
 15434  079D  2FA0               	goto	i1l3982
 15435  079E                     u345_20:
 15436  079E                     i1l3980:
 15437                           
 15438                           ;main.c: 301: t.h=0;
 15439  079E  01CC               	clrf	_t
 15440  079F  01CD               	clrf	_t+1
 15441  07A0                     i1l3982:
 15442                           
 15443                           ;main.c: 302: };main.c: 305: if(alarmsEnable == 1 && t.s >= clkAlarm.alarmVal.s && t.m >
      +                          = clkAlarm.alarmVal.m && t.h >= clkAlarm.alarmVal.h && editingClockAlarm == 0){
 15444  07A0  036C               	decf	_alarmsEnable,w
 15445  07A1  1D03               	btfss	3,2
 15446  07A2  2FA4               	goto	u346_21
 15447  07A3  2FA5               	goto	u346_20
 15448  07A4                     u346_21:
 15449  07A4  2FE4               	goto	i1l3996
 15450  07A5                     u346_20:
 15451  07A5                     i1l3984:
 15452  07A5  0851               	movf	_t+5,w
 15453  07A6  3A80               	xorlw	128
 15454  07A7  00F0               	movwf	??_Clock_ISR
 15455  07A8  0866               	movf	_clkAlarm+5,w
 15456  07A9  3A80               	xorlw	128
 15457  07AA  0270               	subwf	??_Clock_ISR,w
 15458  07AB  1D03               	skipz
 15459  07AC  2FAF               	goto	u347_25
 15460  07AD  0865               	movf	_clkAlarm+4,w
 15461  07AE  0250               	subwf	_t+4,w
 15462  07AF                     u347_25:
 15463  07AF  1C03               	skipc
 15464  07B0  2FB2               	goto	u347_21
 15465  07B1  2FB3               	goto	u347_20
 15466  07B2                     u347_21:
 15467  07B2  2FE4               	goto	i1l3996
 15468  07B3                     u347_20:
 15469  07B3                     i1l3986:
 15470  07B3  0020               	movlb	0	; select bank0
 15471  07B4  084F               	movf	_t+3,w
 15472  07B5  3A80               	xorlw	128
 15473  07B6  00F0               	movwf	??_Clock_ISR
 15474  07B7  0864               	movf	_clkAlarm+3,w
 15475  07B8  3A80               	xorlw	128
 15476  07B9  0270               	subwf	??_Clock_ISR,w
 15477  07BA  1D03               	skipz
 15478  07BB  2FBE               	goto	u348_25
 15479  07BC  0863               	movf	_clkAlarm+2,w
 15480  07BD  024E               	subwf	_t+2,w
 15481  07BE                     u348_25:
 15482  07BE  1C03               	skipc
 15483  07BF  2FC1               	goto	u348_21
 15484  07C0  2FC2               	goto	u348_20
 15485  07C1                     u348_21:
 15486  07C1  2FE4               	goto	i1l3996
 15487  07C2                     u348_20:
 15488  07C2                     i1l3988:
 15489  07C2  0020               	movlb	0	; select bank0
 15490  07C3  084D               	movf	_t+1,w
 15491  07C4  3A80               	xorlw	128
 15492  07C5  00F0               	movwf	??_Clock_ISR
 15493  07C6  0862               	movf	_clkAlarm+1,w
 15494  07C7  3A80               	xorlw	128
 15495  07C8  0270               	subwf	??_Clock_ISR,w
 15496  07C9  1D03               	skipz
 15497  07CA  2FCD               	goto	u349_25
 15498  07CB  0861               	movf	_clkAlarm,w
 15499  07CC  024C               	subwf	_t,w
 15500  07CD                     u349_25:
 15501  07CD  1C03               	skipc
 15502  07CE  2FD0               	goto	u349_21
 15503  07CF  2FD1               	goto	u349_20
 15504  07D0                     u349_21:
 15505  07D0  2FE4               	goto	i1l3996
 15506  07D1                     u349_20:
 15507  07D1                     i1l3990:
 15508  07D1  0020               	movlb	0	; select bank0
 15509  07D2  0854               	movf	_editingClockAlarm,w
 15510  07D3  0455               	iorwf	_editingClockAlarm+1,w
 15511  07D4  1D03               	btfss	3,2
 15512  07D5  2FD7               	goto	u350_21
 15513  07D6  2FD8               	goto	u350_20
 15514  07D7                     u350_21:
 15515  07D7  2FE4               	goto	i1l3996
 15516  07D8                     u350_20:
 15517  07D8                     i1l3992:
 15518                           
 15519                           ;main.c: 306: alarmPWMStart.h = -1;
 15520  07D8  30FF               	movlw	255
 15521  07D9  0021               	movlb	1	; select bank1
 15522  07DA  00BA               	movwf	_alarmPWMStart^(0+128)
 15523  07DB  30FF               	movlw	255
 15524  07DC  00BB               	movwf	(_alarmPWMStart^(0+128)+1)
 15525  07DD                     i1l3994:
 15526                           
 15527                           ;main.c: 307: clkAlarm.trigger = 1;
 15528  07DD  0020               	movlb	0	; select bank0
 15529  07DE  01E7               	clrf	_clkAlarm+6
 15530  07DF  0AE7               	incf	_clkAlarm+6,f
 15531                           
 15532                           ;main.c: 308: clkAlarm.alarmVal.h = 25;
 15533  07E0  3019               	movlw	25
 15534  07E1  00E1               	movwf	_clkAlarm
 15535  07E2  3000               	movlw	0
 15536  07E3  00E2               	movwf	_clkAlarm+1
 15537  07E4                     i1l3996:
 15538  07E4  1003               	clrc
 15539  07E5  0020               	movlb	0	; select bank0
 15540  07E6  1F96               	btfss	22,7	;volatile
 15541  07E7  1403               	setc
 15542  07E8  1803               	btfsc	3,0
 15543  07E9  2FEB               	goto	u351_21
 15544  07EA  2FEE               	goto	u351_20
 15545  07EB                     u351_21:
 15546  07EB  0020               	movlb	0	; select bank0
 15547  07EC  1796               	bsf	22,7	;volatile
 15548  07ED  2FF0               	goto	u352_24
 15549  07EE                     u351_20:
 15550  07EE  0020               	movlb	0	; select bank0
 15551  07EF  1396               	bcf	22,7	;volatile
 15552  07F0                     u352_24:
 15553  07F0                     i1l1130:
 15554  07F0  0008               	return
 15555  07F1                     __end_of_Clock_ISR:
 15556                           
 15557                           	psect	text57
 15558  0002                     __ptext57:	
 15559 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 15560 ;; Defined at:
 15561 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 15562 ;; Parameters:    Size  Location     Type
 15563 ;;		None
 15564 ;; Auto vars:     Size  Location     Type
 15565 ;;		None
 15566 ;; Return value:  Size  Location     Type
 15567 ;;                  1    wreg      void 
 15568 ;; Registers used:
 15569 ;;		None
 15570 ;; Tracked objects:
 15571 ;;		On entry : 0/0
 15572 ;;		On exit  : 0/0
 15573 ;;		Unchanged: 0/0
 15574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15579 ;;Total ram usage:        0 bytes
 15580 ;; Hardware stack levels used:    1
 15581 ;; This function calls:
 15582 ;;		Nothing
 15583 ;; This function is called by:
 15584 ;;		_TMR1_Initialize
 15585 ;;		_TMR1_ISR
 15586 ;; This function uses a non-reentrant model
 15587 ;;
 15588                           
 15589                           
 15590                           ;psect for function _TMR1_DefaultInterruptHandler
 15591  0002                     _TMR1_DefaultInterruptHandler:
 15592  0002                     i1l420:	
 15593                           ;incstack = 0
 15594                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 15595                           
 15596  0002  0008               	return
 15597  0003                     __end_of_TMR1_DefaultInterruptHandler:
 15598  007E                     btemp	set	126	;btemp
 15599  007E                     int$flags	set	126
 15600  007E                     wtemp0	set	126
 15601                           
 15602                           	psect	config
 15603                           
 15604                           ;Config register CONFIG1 @ 0x8007
 15605                           ;	External Oscillator mode selection bits
 15606                           ;	FEXTOSC = OFF, Oscillator not enabled
 15607                           ;	Power-up default value for COSC bits
 15608                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 15609                           ;	Clock Out Enable bit
 15610                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 15611                           ;	Clock Switch Enable bit
 15612                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 15613                           ;	Fail-Safe Clock Monitor Enable bit
 15614                           ;	FCMEN = ON, FSCM timer enabled
 15615  8007                     	org	32775
 15616  8007  3FEC               	dw	16364
 15617                           
 15618                           ;Config register CONFIG2 @ 0x8008
 15619                           ;	Master Clear Enable bit
 15620                           ;	MCLRE = ON, MCLR pin is Master Clear function
 15621                           ;	Power-up Timer Enable bit
 15622                           ;	PWRTE = OFF, PWRT disabled
 15623                           ;	Low-Power BOR enable bit
 15624                           ;	LPBOREN = OFF, ULPBOR disabled
 15625                           ;	Brown-out reset enable bits
 15626                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 15627                           ;	Brown-out Reset Voltage Selection
 15628                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 15629                           ;	Zero-cross detect disable
 15630                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 15631                           ;	Peripheral Pin Select one-way control
 15632                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 15633                           ;	Stack Overflow/Underflow Reset Enable bit
 15634                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 15635                           ;	Background Debugger
 15636                           ;	DEBUG = OFF, Background Debugger disabled
 15637  8008                     	org	32776
 15638  8008  3FFF               	dw	16383
 15639                           
 15640                           ;Config register CONFIG3 @ 0x8009
 15641                           ;	WDT Period Select bits
 15642                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 15643                           ;	WDT operating mode
 15644                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 15645                           ;	WDT Window Select bits
 15646                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 15647                           ;	WDT input clock selector
 15648                           ;	WDTCCS = SC, Software Control
 15649  8009                     	org	32777
 15650  8009  3F9F               	dw	16287
 15651                           
 15652                           ;Config register CONFIG4 @ 0x800A
 15653                           ;	UserNVM self-write protection bits
 15654                           ;	WRT = OFF, Write protection off
 15655                           ;	Scanner Enable bit
 15656                           ;	SCANE = available, Scanner module is available for use
 15657                           ;	Low Voltage Programming Enable bit
 15658                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 15659  800A                     	org	32778
 15660  800A  3FFF               	dw	16383
 15661                           
 15662                           ;Config register CONFIG5 @ 0x800B
 15663                           ;	UserNVM Program memory code protection bit
 15664                           ;	CP = OFF, Program Memory code protection disabled
 15665                           ;	DataNVM code protection bit
 15666                           ;	CPD = OFF, Data EEPROM code protection disabled
 15667  800B                     	org	32779
 15668  800B  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    10
    Data        18
    BSS         27
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     44      79
    BANK1            80     10      32
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[15]), 
		 -> STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    differenceBetweenTimePeriod@diff	PTR struct Time size(1) Largest target is 6
		 -> menuLCD_ISR@diff(BANK0[6]), 

    LCDstr@p	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR5_ISR->_monitoring_ISR
    _monitoring_ISR->_ADCC_GetSingleConversion
    _monitoring_ISR->_tsttc
    _tsttc->i1_WriteI2C
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->i1_LCDsend2x4
    _LCDcmd->i1_LCDsend2x4
    i1_LCDsend2x4->i1_WriteI2C
    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR3_ISR->_menuLCD_ISR
    _menuLCD_ISR->_sprintf

Critical Paths under _main in BANK1

    _main->_LCDinit
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1824
                                              9 BANK1      1     1      0
                            _LCDinit
              _PWM_Output_D4_Disable
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                     _TMR2_StopTimer
           _TMR3_SetInterruptHandler
           _TMR5_SetInterruptHandler
                          _editClock
                           _editTemp
                   _i2c1_driver_open
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _editTemp                                             1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editClock                                            1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StopTimer                                       0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (2) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     522
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0     174
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     174
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Output_D4_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     780
                                              8 BANK1      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend2x4                                           6     5      1     736
                                              2 BANK1      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK1      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    5778
                           _TMR1_ISR
                           _TMR3_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR5_ISR                                             0     0      0     330
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                     _monitoring_ISR *
 ---------------------------------------------------------------------------------
 (6) _monitoring_ISR                                       3     3      0      90
                                              4 COMMON     3     3      0
           _ADCC_GetSingleConversion
                              _tsttc
 ---------------------------------------------------------------------------------
 (7) _tsttc                                                2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (6) _TMR5_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR5_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0    5208
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
                        _menuLCD_ISR *
 ---------------------------------------------------------------------------------
 (6) _menuLCD_ISR                                         23    23      0    4968
                                             21 BANK0     23    23      0
                            _LCDchar
                             _LCDcmd
                             _LCDstr
                 _PWM6_LoadDutyValue
               _PWM_Output_D4_Enable
                    _TMR2_StartTimer
        _differenceBetweenTimePeriod
                            _sprintf
            i1_PWM_Output_D4_Disable
                   i1_TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (7) i1_TMR2_StopTimer                                     0     0      0       0
                        i1_TMR2_Stop
 ---------------------------------------------------------------------------------
 (8) i1_TMR2_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM_Output_D4_Disable                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             29    21      8    2542
                                              0 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _differenceBetweenTimePeriod                         15     2     13     595
                                              0 COMMON    13     0     13
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (8) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PWM_Output_D4_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PWM6_LoadDutyValue                                   4     2      2     196
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _LCDstr                                               3     3      0     550
                                              9 COMMON     3     3      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (8) _LCDchar                                              1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (7) _LCDcmd                                               1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (9) i1_LCDsend2x4                                         6     5      1     384
                                              2 COMMON     6     5      1
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) i1_WriteI2C                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _TMR3_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
                          _Clock_ISR *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Clock_ISR                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _PWM_Output_D4_Disable
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_StopTimer
     _TMR2_Stop
   _TMR3_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _editClock
   _editTemp
   _i2c1_driver_open

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _Clock_ISR *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *
     _menuLCD_ISR *
       _LCDchar
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDcmd
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDstr
         _LCDchar
           i1_LCDsend2x4
             i1_WriteI2C
       _PWM6_LoadDutyValue
       _PWM_Output_D4_Enable
       _TMR2_StartTimer
         _TMR2_Start
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       i1_PWM_Output_D4_Disable
       i1_TMR2_StopTimer
         i1_TMR2_Stop
   _TMR5_ISR
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _monitoring_ISR *
       _ADCC_GetSingleConversion
       _tsttc
         _ReadI2C
         i1_WriteI2C

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2C      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      A      20       7       40.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      7D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      7D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Oct 31 10:44:45 2020

                                       _t 004C          __end_of_TMR5_SetInterruptHandler 0B12  
                              i1_WriteI2C 0E24                                        l30 0F1B  
                                      l33 0EE3                                        l42 0F05  
                                      l35 0EE8                                        l47 0F19  
                     ___wmul@multiplicand 0072                         ??_TMR5_WriteTimer 0072  
             __size_of_PWM6_LoadDutyValue 0016                                       l122 0DDD  
                                     l172 0C7B                                       l175 0B43  
                                     l239 0B4F                                       l417 0B05  
                                     l178 0B3A                                       l451 0CD8  
                                     l481 0B0B                                       l705 0B11  
                                     l563 0C45                                       l387 0CB9  
                                     l719 0B68                                       l923 0E80  
                                     l675 0CF7                                       l924 0E82  
                                     l764 0AF3                                       l749 07FE  
                                     l935 0EBB                                       l767 0AFF  
                                     l936 0EBD                                       l939 0EC1  
                                     _PR2 028D                           _timer1ReloadVal 00A8  
                 __size_of_PMD_Initialize 0008                           _TMR2_Initialize 07F1  
                                     wreg 0009                               ?_LCDsend2x4 00AC  
                         __end_of_LCDchar 0B33                                      l1040 0553  
                                    l1025 0501                                      l1026 0503  
                                    l1203 06F8                                      l1052 05A9  
                                    l1053 05AB                                      l1215 0D64  
                                    l1207 0D49                                      l1056 05B2  
                                    l1208 0D44                                      l1049 0593  
                                    l1233 075C                                      l1090 0AF0  
                                    l1226 0754                                      l1059 0FFF  
                                    l1184 069F                                      l1185 0684  
                                    l1194 06EE                           _timer3ReloadVal 006D  
                                    l4120 0C60                                      l4130 0C6F  
                                    l4122 0C63                                      l3500 0EC7  
                                    l4132 0C72                                      l4124 0C66  
                                    l4300 06B9                                      l4140 0B49  
                                    l3510 0EE1                                      l4134 0C75  
                                    l4126 0C69                                      l4310 06D4  
                                    l4302 06BD                                      l4142 0B4A  
                                    l3520 0EFA                                      l3512 0EED  
                                    l4136 0C78                                      l4128 0C6C  
                                    l4312 06D9                                      l4304 06C3  
                                    l4320 0D2C                                      l4144 0B4C  
                                    l4400 0728                                      l3522 0F0A  
                                    l3506 0ECC                                      l4250 0FA3  
                                    l4242 0F8A                                      l3530 0B06  
                                    l4314 06E0                                      l4306 06CA  
                                    l4330 0D40                                      l4322 0D2F  
                                    l4138 0B44                                      l4410 0747  
                                    l4402 072D                                      l3508 0ED6  
                                    l4260 0FC7                                      l4252 0FAF  
                                    l4244 0F93                                      l4316 06E7  
                                    l4308 06D1                                      l4332 0D4D  
                                    l4324 0D30                                      l4412 074C  
                                    l4404 0736                                      l4420 0760  
                                    l3518 0EEF                                      l4270 0FE9  
                                    l4262 0FCB                                      l4254 0FB3  
                                    l4246 0F97                                      l4174 0AFC  
                                    l4318 06EA                                      l4334 0D53  
                                    l4326 0D35                                      l4406 073D  
                                    l4414 0750                                      l4272 0FEF  
                                    l4264 0FD7                                      l4256 0FBB  
                                    l4248 0F9F                                      l3800 0C43  
                                    l3528 0B00                                      l4280 066B  
                                    l4336 0D59                                      l4328 0D3E  
                                    l4416 0759                                      l4408 0742  
                                    l4274 0FF5                                      l4266 0FDB  
                                    l4258 0FBF                                      l3810 0CC3  
                                    l3802 0CBA                                      l3546 0B0C  
                                    l4290 0688                                      l4282 066D  
                                    l4338 0D5A                                      l4268 0FE3  
                                    l4276 0AEE                                      l3740 0DA1  
                                    l3820 07F1                                      l3812 0CCA  
                                    l3804 0CBD                                      l4292 0697  
                                    l4284 066F                                      l3750 0DAF  
                                    l3742 0DA7                                      l3830 07FB  
                                    l3822 07F4                                      l3814 0CCC  
                                    l3806 0CBF                                      l3910 0AF1  
                                    l4294 069A                                      l4286 0671  
                                    l4278 0666                                      l4446 0765  
                                    l4390 071F                                      l4382 06F9  
                                    l3920 0E99                                      l3912 0E71  
                                    l3760 0DBA                                      l3752 0DB1  
                                    l3744 0DA9                                      l3824 07F5  
                                    l3816 0CCD                                      l3808 0CC1  
                                    l3840 0CE2                                      l3832 0CD9  
                                    l4296 06A4                                      l4288 0676  
                                    l4392 0720                                      l4384 06FC  
                         __end_of_LCDinit 1000                                      l3498 0EC4  
                                    l3922 0EA8                                      l3914 0E71  
                                    l3930 04F2                                      l3770 0DCE  
                                    l3762 0DC6                                      l3754 0DB4  
                                    l3746 0DAB                                      l3850 0C9B  
                                    l3826 07F8                                      l3818 0CD5  
                                    l3842 0CE9                                      l3834 0CDC  
                                    l4298 06AA                                      l4394 0722  
                                    l4386 06FF                                      l3924 0EAC  
                                    l3916 0E86                                      l3940 052F  
                                    l3932 0507                                      l3780 0DDA  
                                    l3772 0DD0                                      l3764 0DC8  
                                    l3756 0DB6                                      l3748 0DAD  
                                    l3860 0CAB                                      l3852 0C9E  
                                    l3828 07F9                                      l3844 0CEB  
                                    l3836 0CDE                                      l4396 0726  
                                    l4388 071D                                      l3918 0E95  
                                    l3950 0569                                      l3942 053E  
                                    l3934 0516                                      l3926 04E1  
                                    l3790 0B42                                      l3774 0DD3  
                                    l3766 0DCA                                      l3758 0DB8  
                                    l3782 0B33                                      l3862 0CAD  
                                    l3854 0CA0                                      l3846 0CEC  
                                    l3838 0CE0                                      l4398 0727  
                                    l3960 059A                                      l3952 056F  
                                    l3944 0544                                      l3936 051A  
                                    l3928 04E6                                      l3784 0B3B  
                                    l3776 0DD6                                      l3768 0DCC  
                                    l3792 0B5C                                      l3864 0CAE  
                                    l3856 0CA2                                      l3848 0CF4  
                                    l3962 05AF                                      l3954 057E  
                                    l3946 0553                                      l3938 0529  
                                    l3786 0B3E                                      l3778 0DD8  
                                    l3794 0B63                                      l3866 0CB6  
                                    l3858 0CA4                                      l3956 0584  
                                    l3948 055A                                      l3796 0C2F  
                                    l3788 0B3F                                      l3958 0593  
                                    l3798 0C41                           __end_of_LCDsend 0EC2  
                                    STR_1 1000                                      STR_2 1000  
                                    STR_3 1019                                      STR_4 1019  
                                    STR_5 1020                                      _LATA 0016  
                                    _LATB 0017                                      _LATC 0018  
                                    _LATD 0019                                      _LATE 001A  
                                    u3300 0EC1                                      u4100 0688  
                                    u3301 0EC0                                      u4101 0687  
                                    u4110 0697                                      u4111 0696  
                                    u3400 0593                                      u3320 0501  
                                    u4120 06A4                                      u4200 0D48  
                                    u3401 0592                                      u3321 0500  
                                    u4121 06A3                                      u4201 0D47  
                                    u3250 0E80                                      u3410 05A9  
                                    u3330 0507                                      u4130 06AA  
                                    u4210 0D4D                                      _T2PR 028D  
                                    u3251 0E7F                                      u3411 05A8  
                                    u3331 0506                                      u3315 04E9  
                                    u4131 06A9                                      u4115 0693  
                                    u4211 0D4C                                      u2700 0EFA  
                                    u3260 0E86                                      u3420 05AF  
                                    u3340 0516                                      u4140 06B9  
                                    u4220 0D59                                      u2701 0EF9  
                                    u3261 0E85                                      u3421 05AE  
                                    u3341 0515                                      u4141 06B8  
                                    u4221 0D58                                      u2710 0F05  
                                    u3270 0E95                                      u3350 0529  
                                    u4150 06CA                                      u2711 0F04  
                                    u3271 0E94                                      u3351 0528  
                                    u4151 06C9                                      u2720 0F0A  
                                    u3280 0EA8                                      u3360 053E  
                                    u4160 06D1                                      u2721 0F09  
                                    u3281 0EA7                                      u3361 053D  
                                    u4161 06D0                                      u4145 06B5  
                                    u2730 0F19                                      u2650 0ECB  
                                    u3290 0EBB                                      u3370 0553  
                                    u4170 06E0                                      u4090 0676  
                                    u4330 072D                                      u2731 0F18  
                                    u2651 0ECA                                      u3291 0EBA  
                                    u3371 0552                                      u4171 06DF  
                                    u4091 0675                                      u4331 072C  
                                    u2660 0ED6                                      u3380 0569  
                                    u4180 06E7                                      u4340 073D  
                                    u2661 0ED5                                      u3381 0568  
                                    u4181 06E6                                      u4341 073C  
                                    u2670 0EE1                                      u3390 057E  
                                    u4190 0D35                                      u4350 0742  
                                    u2671 0EE0                                      u3391 057D  
                                    u4407 0D39                                      u4191 0D34  
                                    u4351 0741                                      u2680 0EE8  
                                    u4360 0747                                      u2681 0EE7  
                                    u4417 0D5E                                      u4361 0746  
                                    u2690 0EED                                      u4370 074C  
                                    u2691 0EEC                                      u4507 0FCC  
                                    u4427 067A                                      u4371 074B  
                                    u4380 0758                                      _PMD0 0796  
                                    u4517 0FD8                                      u4437 06F2  
                                    u4381 0757                                      _PMD1 0797  
                                    i1l30 0E6E                                      i1l22 0C59  
                                    _PMD2 0798                                      i1l23 0C5A  
                                    u4527 0FE0                                      u4447 0F8E  
                                    _PMD3 0799                                      _PMD4 079A  
                                    i1l33 0E40                                      u4537 0FFC  
                                    u4457 0F9C                                      _PMD5 079B  
                                    i1l42 0E5E                                      i1l26 0C5F  
                                    i1l35 0E45                                      u4547 05B0  
                                    u4467 0FA4                                      u3780 0B49  
                                    u4477 0FB0                                      u3781 0B48  
                                    u4397 0731                                      i1l47 0E6D  
                                    u4487 0FB8                                      u4497 0FC4  
                                    _TMR2 028C                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                            ?_menuLCD_ISR 0070                                      _main 06F9  
                                    _mode 0052                                      _temp 0060  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                                      start 0040  
                         _timer5ReloadVal 00A2                           _TMR3_Initialize 0CBA  
              ??_TMR1_SetInterruptHandler 00AC                           __end_of_ReadI2C 0C60  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 0B44  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                  __end_of_i2c1_driver_open 0B50  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                                     _ADPRE 009C  
                                   _ADRPT 010D                                     _T1CLK 0211  
                                   _T1CON 020E                                     _T3CLK 0217  
                                   _T2CON 028E                                     _T3CON 0214  
                                   _T5CLK 021D                                     _T2HLT 028F  
                                   _T5CON 021A                           __end_of___lwdiv 0DA1  
                                   _T2TMR 028C                                     i1l401 0B79  
                                   _T2RST 0291                                     i1l420 0002  
                                   i1l414 0C00                                     i1l350 003E  
                                   i1l351 0038                           __end_of___lwmod 0D2C  
                                   i1l345 0017                                     i1l347 0023  
                                   i1l356 003E                                     i1l349 002F  
                                   i1l702 0C2E                                     i1l465 0B8A  
                                   i1l722 0BE9                                     i1l484 0003  
                                   i1l708 07FF                                     i1l478 0C17  
                                   i1l575 0BB6                                     i1l761 0AF7  
                                   i1l578 0BBF                                     i1l914 04D8  
                                   i1l915 04D9                                     i1l764 0AED  
                                   i1l908 04C7                                     i1l860 040F  
                                   i1l844 03D2                                     i1l909 04C9  
                                   i1l758 0AE7                                     i1l918 04DE  
                                   i1l767 0AFB                                     i1l871 0440  
                                   i1l847 03DE                                     i1l880 0456  
                                   i1l872 0442                                     i1l848 03DF  
                                   i1l689 0B9B                                     i1l859 040E  
                                   i1l884 0465                                     i1l885 0466  
                                   i1l877 0451                                     i1l878 0452  
                                   i1l896 0495                                     i1l897 0496  
                                   _OSCEN 0891                                     _TMR1H 020D  
                                   _TMR1L 020C                                     _TMR3H 0213  
                                   _TMR3L 0212                                     _TMR5H 0219  
                                   _TMR5L 0218                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
                         _PWM6_Initialize 0B5C         __size_of_TMR3_SetInterruptHandler 0006  
               ?_TMR3_SetInterruptHandler 00AA                  __end_ofi1_TMR2_StopTimer 0AFC  
                        __end_of_TMR1_ISR 0C01                          __end_of_TMR3_ISR 0C18  
                        __end_of_TMR5_ISR 0C2F            ??_TMR3_DefaultInterruptHandler 0070  
                         __end_of_dpowers 1019                        __size_of_TMR2_Stop 0003  
                             ?_TMR2_Start 0070                           __end_of_isdigit 0BAE  
                                   _tsttc 03D2                   __end_of_TMR1_Initialize 0CBA  
                                   pclath 000A                            menuLCD_ISR@str 0037  
                                   status 0003                                     wtemp0 007E  
                         __end_of_sprintf 03D2                    ??_PWM_Output_D4_Enable 0070  
                         _TMR2_StartTimer 0AF4                           _TMR1_WriteTimer 0B69  
                         _TMR5_Initialize 0CD9                           __initialization 0042  
                            ?i1_TMR2_Stop 0070                              __end_of_main 0778  
                             ?i1_WriteI2C 0070                       __size_of_LCDsend2x4 00D4  
                 __end_of_TMR2_Initialize 07FF               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 00B3                  _TMR5_SetInterruptHandler 0B0C  
                      __size_of_Clock_ISR 0079                     _TMR3_InterruptHandler 00A4  
        differenceBetweenTimePeriod@start 0070                                 ??_LCDchar 0078  
                               ??_LCDinit 00B2                                 ??_LCDsend 00AC  
                                  _ADACCH 0091                                    _ADACCL 0090  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  _ADLTHH 010F                                    _ADLTHL 010E  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                                  _ADUTHL 0110                          __end_of_WriteI2C 0F1C  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                                    _T1GATE 0210  
                                  _T1GCON 020F                                    ?_tsttc 0070  
                                  _T3GATE 0216                                    _T3GCON 0215  
                                  _T5GATE 021C                                    _T5GCON 021B  
                                  _RA6PPS 0F16                                    _RC3PPS 0F23  
                                  i1l1040 0615                                    i1l1025 05D1  
                                  i1l1130 07F0                                    i1l1026 05D2  
                 TMR1_WriteTimer@timerVal 0070                                    _RC4PPS 0F24  
                                  i1l1052 065D                                    i1l1053 065E  
                                  i1l1062 0B2A                                    i1l1071 0BD3  
                                  i1l1056 0665                                    i1l1049 064B  
                                  i1l1065 0B32                                    i1l1081 0F55  
                                  i1l1402 0252                                    i1l1090 0AEA  
                                  i1l1154 01B9                                    i1l1084 0F89  
                                  i1l1420 0305                                    i1l1148 019F  
                                  i1l1180 0E23                                    i1l1172 0E0C  
                                  i1l1165 0234                                    i1l1078 0F25  
                                  i1l1087 0AE4                                    i1l1159 0228  
                                  i1l4000 0074                                    i1l1441 0C86  
                                  _ODCONA 0F3A                                    i1l4010 00AB  
                                  i1l4002 0089                                    i1l1178 0E22  
                                  _ODCONB 0F45                                    i1l1443 0C9A  
                                  _ODCONC 0F50                                    i1l4020 00D0  
                                  i1l4012 00B3                                    i1l4004 009D  
                                  i1l4100 0DF7                                    _ODCOND 0F5B  
                                  i1l1437 03D1                                    _ODCONE 0F66  
                                  i1l4030 00F8                                    i1l4022 00D9  
                                  i1l4014 00B9                                    i1l4006 00A1  
                                  i1l4110 0E0D                                    i1l4102 0DFD  
                                  i1l3400 0639                                    i1l4040 0129  
                                  i1l4032 00FE                                    i1l4024 00E1  
                                  i1l4016 00C2                                    i1l4008 00A5  
                                  i1l4112 0E13                                    i1l4104 0E02  
                                  i1l1713 0DA0                                    i1l3402 063F  
                                  i1l4050 0180                                    i1l4042 0138  
                                  i1l4034 0103                                    i1l4026 00E7  
                                  i1l4018 00CA                                    i1l3410 0C46  
                                  i1l4114 0E18                                    i1l4106 0E07  
                                  i1l1723 0D2B                                    i1l3404 064B  
                                  i1l3420 0B2C                                    i1l4060 01AA  
                                  i1l4052 018E                                    i1l4044 0167  
                                  i1l4036 0108                                    i1l4028 00F0  
                                  i1l3412 0C50                                    i1l4116 0E1D  
                                  i1l4108 0E0A                                    i1l3350 0E2D  
                                  i1l3342 0E25                                    i1l3406 0651  
                                  i1l3430 0BAC                                    i1l3422 0B9D  
                                  i1l4070 01D3                                    i1l4062 01AD  
                                  i1l4054 0194                                    i1l4046 0175  
                                  i1l4038 0111                                    i1l3414 0C5E  
                                  i1l4118 0E20                                    i1l4150 0C18  
                                  i1l3352 0E36                                    i1l3344 0E28  
                                  i1l3408 0662                                    i1l3440 0C8B  
                                  i1l3424 0B9E                                    i1l4080 01FE  
                                  i1l4072 01E2                                    i1l4056 0197  
                                  i1l4048 017A                                    i1l4064 01B1  
                                  i1l4160 0C03                                    i1l3600 04DD  
                                  i1l4152 0C1A                                    i1l4170 0BF4  
                                  i1l3354 0E3F                                    i1l3362 0E4C  
                                  i1l3610 0BC6                                    i1l3418 0AE5  
                                  i1l3450 0D67                                    i1l3442 0C90  
                                  i1l3434 0C7C                                    i1l3426 0BA4  
                                  i1l4090 021C                                    i1l4082 0205  
                                  i1l4074 01E6                                    i1l4066 01BD  
                                  i1l4058 01A4                                    i1l4162 0C0B  
                                  i1l4154 0C22                                    i1l4172 0BFB  
                                  i1l3364 0E55                                    i1l3356 0E4A  
                                  i1l3380 05E1                                    i1l3372 05B4  
                                  i1l3604 0B25                                    i1l3620 0F64  
                                  i1l3612 0F1C                                    i1l3460 0D7D  
                                  i1l3452 0D6D                                    i1l3444 0C96  
                                  i1l3436 0C7E                                    i1l3428 0BAA  
                                  i1l3700 0337                                    i1l4092 0223  
                                  i1l4084 020B                                    i1l4076 01EA  
                                  i1l4068 01C3                                    i1l4164 0C12  
                                  i1l3540 0BB5                                    i1l3532 0BAF  
                                  i1l4156 0C29                   __end_of_TMR3_Initialize 0CD9  
                                  i1l4166 0BEA                                    i1l3366 0E62  
                                  i1l3390 0609                                    i1l3382 05E5  
                                  i1l3374 05B9                                    i1l3606 0BC1  
                                  i1l3550 0AF4                                    i1l3622 0F7C  
                                  i1l3614 0F1D                                    i1l3462 0D8C  
                                  i1l3454 0D70                                    i1l3470 0D9C  
                                  i1l3438 0C82                                    i1l3710 035A  
                                  i1l3702 033E                                    i1l3630 0242  
                                  i1l4086 0210                                    i1l4094 0229  
                                  i1l4078 01FA                                    i1l4158 0C01  
                                  i1l3542 0BBB                                    i1l3534 0BB2  
                                  i1l4350 0013                                    i1l4168 0BEC  
                                  i1l3392 0615                                    i1l3384 05F1  
                                  i1l3376 05C5                                    i1l3608 0BC2  
                                  i1l3624 0AE2                                    i1l3616 0F34  
                                  i1l3464 0D90                                    i1l3456 0D75  
                                  i1l3448 0D65                                    i1l3480 0D06  
                                  i1l3712 035E                                    i1l3704 0342  
                                  i1l3720 0379                                    i1l3640 0257  
                                  i1l3632 0249                                    i1l4096 0230  
                                  i1l4088 0217                                    i1l3536 0BB3  
                                  i1l3560 03FE                                    i1l3552 03D2  
                                  i1l4360 0033                                    i1l4352 001B  
                                  i1l4344 0006                                    i1l3394 061B  
                                  i1l3386 05F7                                    i1l3378 05D6  
                                  i1l3618 0F4D                                    i1l3466 0D91  
                                  i1l3458 0D79                                    i1l3490 0D21  
                                  i1l3482 0D0A                                    i1l3474 0CF8  
                                  i1l3722 037E                                    i1l3714 0368  
                                  i1l3706 034D                                    i1l3650 028F  
                                  i1l3642 0260                                    i1l3634 024E  
                                  i1l3730 03B9                                    i1l3626 0237  
                                  i1l3538 0BB4                                    i1l3570 042E  
                                  i1l3562 0402                                    i1l3554 03E3  
                                  i1l4098 0DDE                                    i1l4354 001F  
                                  i1l4346 000A                                    i1l3396 0627  
                                  i1l3388 0603                                    i1l3548 0BD4  
                                  i1l3468 0D96                                    i1l3484 0D0E  
                                  i1l3476 0CFE                                    i1l3492 0D27  
                                  i1l3724 03A5                                    i1l3716 036E  
                                  i1l3708 0353                                    i1l3660 02BE  
                                  i1l3732 03CD                                    i1l3652 0293  
                                  i1l3644 026C                                    i1l3636 0253  
                                  i1l3628 023C                                    i1l3900 0B91  
                                  i1l3580 0475                                    i1l3572 0434  
                                  i1l3564 0413                                    i1l3556 03EE  
                                  i1l4364 003C                                    i1l4356 0027  
                                  i1l4348 000F                                    i1l3398 062D  
                                  i1l3486 0D18                                    i1l3478 0D01  
                                  i1l1894 0BAD                                    i1l3726 03AC  
                                  i1l3718 0375                                    i1l3662 02C2  
                                  i1l3646 026F                                    i1l3902 0B93  
                                  i1l3590 04A5                                    i1l3582 0479  
                                  i1l3574 0446                                    i1l3566 041E  
                                  i1l3558 03F2                                    i1l4358 002B  
                                  i1l3488 0D1C                                    i1l3728 03B0  
                                  i1l3680 02F5                                    i1l3664 02C6  
                                  i1l3648 0280                                    i1l3656 029F  
                                  i1l3496 0AEB                                    i1l3736 0AF8  
                                  i1l3904 0B95                                    u300_20 04DD  
                                  i1l3592 04A9                                    i1l3584 0485  
                                  i1l3576 045A                                    i1l3568 0422  
                                  u300_21 04DC                                    i1l3690 031C  
                                  i1l3682 02FB                                    i1l3674 02D1  
                                  i1l3666 02CA                                    i1l3658 02B7  
                                  i1l3738 0AE8                                    i1l3906 0B97  
                                  i1l3594 04B5                                    i1l3586 0489  
                                  i1l3578 046A                                    i1l3692 0320  
                                  i1l3684 0301                                    i1l3668 02CF  
                                  i1l3908 0B99                                    i1l3596 04BB  
                                  i1l3588 049A                                    i1l3870 0B6E  
                                  i1l3694 0326                                    i1l3686 0310  
                                  i1l3678 02EB                                    i1l3598 04CD  
                                  i1l3880 0B77                                    i1l3872 0B6F  
                                  u301_20 0BD3                                    i1l3696 032D  
                                  i1l3688 0319                                    u301_21 0BD2  
                                  i1l3970 0788                                    i1l3874 0B71  
                                  i1l3890 0B84                                    i1l3882 0B7A  
                                  i1l3698 0331                                    i1l3980 079E  
                                  i1l3972 078A                                    i1l3964 0778  
                                  i1l3876 0B73                                    i1l3868 0B69  
                                  i1l3884 0B7F                                    i1l3892 0B86  
                                  i1l3990 07D1                                    i1l3982 07A0  
                                  i1l3974 0791                                    i1l3966 077D  
                                  i1l3878 0B75                                    i1l3894 0B88  
                                  i1l3886 0B80                                    i1l3992 07D8  
                                  i1l3984 07A5                                    i1l3976 0795  
                                  i1l3968 0784                                    i1l3888 0B82  
                                  u230_20 0E6D                                    u222_20 0E2C  
                                  u302_20 0F34                                    u310_20 02FB  
                                  i1l3896 0B8B                                    u230_21 0E6C  
                                  u222_21 0E2B                                    u302_21 0F33  
                                  u310_21 02FA                                    i1l3994 07DD  
                                  i1l3986 07B3                                    i1l3978 0797  
                                  i1l3898 0B90                                    i1l3988 07C2  
                                  i1l3996 07E4                                    u302_25 0F30  
                                  i1l3998 006D                                    u223_20 0E36  
                                  u303_20 0F64                                    u311_20 0301  
                                  u223_21 0E35                                    u303_21 0F63  
                                  u311_21 0300                                    u231_25 05BC  
                                  u303_25 0F60                                    u224_20 0E3F  
                                  u240_20 064B                                    u232_20 05D1  
                                  u320_20 03B9                                    u312_20 0310  
                                  u304_20 0242                                    u224_21 0E3E  
                                  u240_21 064A                                    u232_21 05D0  
                                  u320_21 03B8                                    u312_21 030F  
                                  u304_21 0241                                    u312_25 030C  
                                  u225_20 0E45                                    u241_20 065D  
                                  u233_20 05D6                                    u321_20 03CD  
                                  u313_20 0320                                    u305_20 026C  
                                  u225_21 0E44                                    u241_21 065C  
                                  u233_21 05D5                                    u321_21 03CC  
                                  u313_21 031F                                    u305_21 026B  
                                  _LCDcmd 0B24                                    u322_20 0B6E  
                                  u226_20 0E4A                                    u242_20 0662  
                                  u234_20 05E1                                    u314_20 0326  
                                  u306_20 029F                                    u322_21 0B6D  
                                  u226_21 0E49                                    u242_21 0661  
                                  u234_21 05E0                                    u314_21 0325  
                                  u306_21 029E                                    u250_25 0C8C  
                                  u323_20 0B7F                                    u227_20 0E55  
                                  u235_20 05F1                                    u251_20 0C96  
                                  u315_20 0337                                    u307_20 02C6  
                                  u243_20 0C50                                    u323_21 0B7E  
                                  u227_21 0E54                                    u235_21 05F0  
                                  u251_21 0C95                                    u315_21 0336  
                                  u307_21 02C5                                    u243_21 0C4F  
                                  u228_20 0E5E                                    u236_20 0603  
                                  u252_20 0D6D                                    u316_20 034C  
                                  u308_20 02EA                                    u324_20 0B90  
                                  u244_20 0C59                                    u228_21 0E5D  
                                  u236_21 0602                                    u252_21 0D6C  
                                  u316_21 034B                                    u308_21 02E9  
                                  u324_21 0B8F                                    u244_21 0C58  
                                  u260_25 0D02                                    u308_25 02E6  
                                  u229_20 0E62                                    u237_20 0615  
                                  u261_20 0D0E                                    u317_20 0353  
                                  u309_20 02F5                                    u245_20 0C5E  
                                  u229_21 0E61                                    u237_21 0614  
                                  u261_21 0D0D                                    u317_21 0352  
                                  u309_21 02F4                                    u245_21 0C5D  
                                  u253_25 0D71                                    u350_20 07D8  
                                  u238_20 0627                                    u254_20 0D7D  
                                  u262_20 0D18                                    u246_20 0BA4  
                                  u318_20 0368                                    u430_20 0033  
                                  u350_21 07D7                                    u238_21 0626  
                                  u254_21 0D7C                                    u262_21 0D17  
                                  u246_21 0BA3                                    u318_21 0367  
                                  u430_21 0032                                    u262_25 0D14  
                                  u351_20 07EE                                    u343_20 0784  
                                  u239_20 0639                                    u247_20 0BAA  
                                  u319_20 036E                                    u431_20 0037  
                                  u423_20 000A                                    u351_21 07EB  
                                  u343_21 0783                                    u239_21 0638  
                                  u247_21 0BA9                                    u319_21 036D  
                                  u431_21 0036                                    u423_21 0009  
                                  u255_25 0D7E                                    u263_25 0D1D  
                                  u344_20 0791                                    u256_20 0D8C  
                                  u264_20 0D27                                    u248_20 0C82  
                                  u360_20 0108                                    u280_20 040E  
                                  u432_20 003C                                    u424_20 000F  
                                  u344_21 0790                                    u256_21 0D8B  
                                  u264_21 0D26                                    u248_21 0C81  
                                  u360_21 0107                                    u280_21 040D  
                                  u432_21 003B                                    u424_21 000E  
                                  u352_24 07F0                                    u256_25 0D88  
                                  u345_20 079E                                    u361_20 0111  
                                  u353_20 0074                                    u281_20 0413  
                                  u425_20 0013                                    u345_21 079D  
                                  u361_21 0110                                    u353_21 0073  
                                  u281_21 0412                                    u425_21 0012  
                                  u257_25 0D92                                    u249_25 0C87  
                                  u346_20 07A5                                    u258_20 0D9C  
                                  u370_20 0217                                    u362_20 0134  
                                  u354_20 00AB                                    u274_20 0BBB  
                                  u290_20 046A                                    u282_20 041E  
                                  u426_20 001B                                    u346_21 07A4  
                                  u258_21 0D9B                                    u370_21 0216  
                                  u354_21 00AA                                    u274_21 0BBA  
                                  u290_21 0469                                    u282_21 041D  
                                  u426_21 001A                                    u347_20 07B3  
                                  u259_20 0CFE                                    u371_20 0223  
                                  u363_20 0175                                    u355_20 00B9  
                                  u291_20 0475                                    u283_20 042E  
                                  u427_20 001F                                    u347_21 07B2  
                                  u259_21 0CFD                                    u371_21 0222  
                                  u363_21 0174                                    u355_21 00B8  
                                  u291_21 0474                                    u283_21 042D  
                                  u427_21 001E                                    u347_25 07AF  
                                  u275_25 0BE3                                    u363_25 0171  
                                  u348_20 07C2                                    u372_20 0230  
                                  u364_20 017A                                    u356_20 00D0  
                                  u380_20 0C12                                    u292_20 0485  
                                  u284_20 0440                                    u276_20 03DE  
                                  u428_20 0027                                    u348_21 07C1  
                                  u372_21 022F                                    u364_21 0179  
                                  u356_21 00CF                                    u380_21 0C11  
                                  u292_21 0484                                    u284_21 043F  
                                  u276_21 03DD                                    u428_21 0026  
                                  u348_25 07BE                                    _LCDstr 0BC0  
                                  u349_20 07D1                                    u381_20 0BFB  
                                  u365_20 018E                                    u357_20 00E7  
                                  u293_20 0495                                    u285_20 0446  
                                  u277_20 03E3                                    u429_20 002B  
                                  u349_21 07D0                                    u381_21 0BFA  
                                  u365_21 018D                                    u357_21 00E6  
                                  u293_21 0494                                    u285_21 0445  
                                  u277_21 03E2                                    u429_21 002A  
                                  u349_25 07CD                                    u365_25 018A  
                                  u373_25 0DEE                                    u366_20 01A4  
                                  u358_20 00FE                                    u294_20 049A  
                                  u286_20 0451                                    u278_20 03EE  
                                  u374_20 0DFD                                    u366_21 01A3  
                                  u358_21 00FD                                    u294_21 0499  
                                  u286_21 0450                                    u278_21 03ED  
                                  u374_21 0DFC                                    u367_20 01C3  
                                  u359_20 0103                                    u295_20 04A5  
                                  u287_20 0456                                    u279_20 03FE  
                                  u375_20 0E02                                    u367_21 01C2  
                                  u359_21 0102                                    u295_21 04A4  
                                  u287_21 0455                                    u279_21 03FD  
                                  u375_21 0E01                                    u455_27 0663  
                                  u368_20 0205                                    u296_20 04B5  
                                  u288_20 045A                                    u376_20 0E13  
                                  u368_21 0204                                    u296_21 04B4  
                                  u288_21 0459                                    u376_21 0E12  
                                  u369_20 020B                                    u297_20 04C7  
                                  u289_20 0465                                    u377_20 0E18  
                                  u369_21 020A                                    u297_21 04C6  
                                  u289_21 0464                                    u377_21 0E17  
                                  u298_20 04CD                                    u298_21 04CC  
                                  u299_20 04D8                                    u379_20 0C29  
                                  u299_21 04D7                                    u379_21 0C28  
                                  _OSCFRQ 0893                                    _PWM6EN 1C77  
                               ??_ReadI2C 0070                               LCDsend2x4@c 00AF  
                         _TMR3_WriteTimer 0B7A                          __end_of_editTemp 0D65  
    __end_of_TMR1_DefaultInterruptHandler 0003     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0002                              _CCPTMRS1bits 021F  
                           ?i1_LCDsend2x4 0072                                    ___wmul 0C7C  
                       __end_of_TMR2_Stop 0AF4                                 ??___lwdiv 0074  
                               ??___lwmod 007C                       __size_of_TMR2_Start 0003  
                 __end_of_PWM6_Initialize 0B69                   __size_of_monitoring_ISR 0046  
                         _ADCC_Initialize 0C2F                            _PMD_Initialize 0B33  
                               ??_isdigit 0070                  ?i1_PWM_Output_D4_Disable 0070  
                         menuLCD_ISR@diff 0046         __size_of_ADCC_GetSingleConversion 0012  
               ?_ADCC_GetSingleConversion 0070                   __end_of_TMR2_StartTimer 0AF8  
TMR5_SetInterruptHandler@InterruptHandler 00AA  TMR3_SetInterruptHandler@InterruptHandler 00AA  
TMR1_SetInterruptHandler@InterruptHandler 00AA                                 ??_sprintf 0028  
                 __end_of_TMR1_WriteTimer 0B7A                   ??_PWM_Output_D4_Disable 00AA  
                     __size_ofi1_WriteI2C 004B                          ?_TMR1_Initialize 0070  
                 __end_of_TMR5_Initialize 0CF8                         _SYSTEM_Initialize 0C60  
                 __end_of__initialization 0069                        ?_SYSTEM_Initialize 0070  
                       __end_of_Clock_ISR 07F1                           _TMR5_WriteTimer 0B8B  
                    __size_of_menuLCD_ISR 01C8                            __pcstackCOMMON 0070  
                          ??i1_LCDsend2x4 0073                              __pidataBANK0 0B50  
                            __pidataBANK1 0B1E                       ??_SYSTEM_Initialize 00AC  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                               ?_TMR3_ISR 0070                                 ?_TMR5_ISR 0070  
                            menuLCD_ISR@l 0043                        __size_of_editClock 0093  
         differenceBetweenTimePeriod@diff 007C                             __end_of_tsttc 04DF  
                        ?_TMR2_Initialize 0070           differenceBetweenTimePeriod@stop 0076  
                  __end_of_PMD_Initialize 0B3B                              _alarmsEnable 006C  
                            ??_LCDsend2x4 00AD                 __end_of_SYSTEM_Initialize 0C7C  
                            sprintf@width 0031                   __end_of_TMR3_WriteTimer 0B8B  
                                 ??_tsttc 0072                                __pbssBANK0 004C  
                              __pbssBANK1 00B4                                   ?_LCDcmd 0070  
                        ?_TMR3_Initialize 0070                                   ?_LCDstr 0070  
                                 LCDcmd@c 0078                                   LCDstr@c 007A  
                                 LCDstr@p 007B                                __pmaintext 06F9  
        __end_of_TMR3_SetInterruptHandler 0B0C                                   ?___wmul 0070  
                              ??_TMR1_ISR 0072                                ??_TMR3_ISR 007E  
                 __end_of_ADCC_Initialize 0C46                __end_of_PWM6_LoadDutyValue 0BEA  
                              ??_TMR5_ISR 0077                                __pintentry 0004  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                    __size_ofi1_TMR2_Stop 0003                        __end_of_LCDsend2x4 05B3  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                               ?_WriteI2C 0070                          ?_PWM6_Initialize 0070  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
         __end_ofi1_PWM_Output_D4_Disable 0AEB                           ?_PMD_Initialize 0070  
                       ?_i2c1_driver_open 0070                                   _LCDchar 0B2B  
                                 _LCDinit 0F8A                                   _LCDsend 0E6F  
                      ??_i2c1_driver_open 00AA                                   _OSCCON1 088D  
                                 _OSCCON3 088F                                 ?_editTemp 0070  
                                 _OSCTUNE 0892                                   _PWM6DCH 038D  
                                 _PWM6DCL 038C                         ?i1_TMR2_StopTimer 0070  
                                 _PWM6CON 038E                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                                 _SSP1MSK 018E                              ??_TMR2_Start 0070  
                 __size_of_TMR2_StopTimer 0004                          ?_TMR2_StartTimer 0070  
                        ?_TMR1_WriteTimer 0070                        ??i1_TMR2_StopTimer 0070  
                 __end_of_TMR5_WriteTimer 0B9C                              LCDsend2x4@hc 00B0  
                            LCDsend2x4@lc 00B1                         __end_of_editClock 06F9  
                        ?_TMR5_Initialize 0070                           __size_of_LCDcmd 0007  
                      _i2c1_driver_i2cISR 0058                           __size_of_LCDstr 0014  
                                 _ReadI2C 0C46                ??_TMR5_SetInterruptHandler 00AC  
                            ??i1_WriteI2C 0070                           __size_of___wmul 001F  
                                 ___lwdiv 0D65                                   ___lwmod 0CF8  
                      __end_of_TMR2_Start 0AE8                                ??_WriteI2C 00AA  
                                 __ptext1 0B44                                   __ptext2 0D2C  
                                 __ptext3 0666                                   __ptext4 0AFC  
                                 __ptext5 0AF1                                   __ptext6 0C60  
                                 __ptext7 0CD9                                   __ptext8 0B0C  
                                 __ptext9 0CBA                            _monitoring_ISR 0DDE  
          ??_TMR1_DefaultInterruptHandler 0070                                 _T1CONbits 020E  
                                 _dpowers 100F                     _OSCILLATOR_Initialize 0B3B  
                               _T2CONbits 028E                                   _isdigit 0B9C  
                               _T3CONbits 0214         __size_of_TMR1_SetInterruptHandler 0006  
                ??_PIN_MANAGER_Initialize 00AA                 ?_TMR1_SetInterruptHandler 00AA  
                               _T2HLTbits 028F                                 _T5CONbits 021A  
                              ??_editTemp 00AA                      __end_ofi1_LCDsend2x4 0666  
              __size_of_SYSTEM_Initialize 001C                                   _sprintf 0235  
                                 clrloop0 0B13                      end_of_initialization 0069  
                        ?_TMR3_WriteTimer 0070                                 _T2RSTbits 0291  
                      __end_ofi1_WriteI2C 0E6F                                   init_ram 0B18  
                                 initloop 0B19                            i1LCDsend2x4@hc 0076  
                          i1LCDsend2x4@lc 0077             __size_of_PWM_Output_D4_Enable 0003  
            ?_differenceBetweenTimePeriod 0070                          ?_ADCC_Initialize 0070  
        __end_of_ADCC_GetSingleConversion 0BC0                    __end_of_monitoring_ISR 0E24  
                               _PORTBbits 000D                                 _PORTCbits 000E  
                               _TMR2_Stop 0AF1                  _TMR3_SetInterruptHandler 0B06  
                   _TMR5_InterruptHandler 00A0                                 _TRISCbits 0013  
                           _alarmPWMStart 00BA                          ?_TMR5_WriteTimer 0070  
                 TMR5_WriteTimer@timerVal 0070            __size_of_PWM_Output_D4_Disable 0003  
           __end_of_PWM_Output_D4_Disable 0AF1                            __end_of_LCDcmd 0B2B  
                          __end_of_LCDstr 0BD4          __size_ofi1_PWM_Output_D4_Disable 0003  
                          LCDsend2x4@mode 00AC                                 _Clock_ISR 0778  
                          __end_of___wmul 0C9B                           ?_monitoring_ISR 0070  
                       __size_of_TMR1_ISR 0017                         __size_of_TMR3_ISR 0017  
                       __size_of_TMR5_ISR 0017                                ?_TMR2_Stop 0070  
                  ?_OSCILLATOR_Initialize 0070                             menuLCD_ISR@tt 003F  
                     start_initialization 0042      __end_of_TMR5_DefaultInterruptHandler 0800  
   __size_of_TMR5_DefaultInterruptHandler 0001              _TMR5_DefaultInterruptHandler 07FF  
         __size_of_PIN_MANAGER_Initialize 003D                            _TMR2_StopTimer 0AFC  
                        WriteI2C@data_out 00AB                                  ??_LCDcmd 0078  
                                ??_LCDstr 0079                             ??_menuLCD_ISR 0035  
                __size_of_TMR1_Initialize 001F                          ??_PMD_Initialize 00AA  
                              ?_Clock_ISR 0070                                  ??___wmul 0074  
                             __pdataBANK0 0061                               __pdataBANK1 00BA  
                       _editingClockAlarm 0054                         __size_of_WriteI2C 005A  
                   __size_ofi1_LCDsend2x4 00B3                  _ADCC_GetSingleConversion 0BAE  
                  __end_of_TMR2_StopTimer 0B00                                  ?_LCDchar 0070  
                                ?_LCDinit 0070                                  ?_LCDsend 0070  
                               ___latbits 0002                             __pcstackBANK0 0020  
                           __pcstackBANK1 00AA                        _PWM6_LoadDutyValue 0BD4  
                __size_of_TMR2_Initialize 000E                              _isdigit$2812 0070  
           ?_TMR5_DefaultInterruptHandler 0070      __size_of_differenceBetweenTimePeriod 006E  
                                LCDchar@c 0078                         __size_of_editTemp 0039  
                                LCDsend@c 00AD                       ?_PWM6_LoadDutyValue 0070  
                             sprintf@flag 0030                 __size_of_i2c1_driver_open 000C  
                             sprintf@prec 002D                                  ?_ReadI2C 0070  
                               __pnvBANK0 006D                                 __pnvBANK1 00A0  
                               _editClock 0666                          ___lwdiv@dividend 0072  
                  _PIN_MANAGER_Initialize 0DA1                 __size_ofi1_TMR2_StopTimer 0004  
                           ??i1_TMR2_Stop 0070                  __size_of_TMR3_Initialize 001F  
                     __end_of_menuLCD_ISR 0235          __end_of_TMR1_SetInterruptHandler 0B06  
         ADCC_GetSingleConversion@channel 0073                              i1_LCDsend2x4 05B3  
                               _dimingLed 0056                                  ?___lwdiv 0070  
                                ?___lwmod 0078               _i2c1_driver_busCollisionISR 005A  
                    ??_PWM6_LoadDutyValue 0072              ??_INTERRUPT_InterruptManager 007E  
                             ??_TMR2_Stop 00AA                                  ?_isdigit 0070  
                         ?_TMR2_StopTimer 0070                  __size_of_PWM6_Initialize 000D  
                        ___lwdiv@quotient 0075                                  ?_sprintf 0020  
                                _T2CLKCON 0290                            __size_of_tsttc 010D  
                 i1_PWM_Output_D4_Disable 0AE8                            ___wmul@product 0074  
                                _LATAbits 0016                                 clear_ram0 0B12  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR2_StartTimer 0004                             i1LCDsend2x4@c 0075  
                              ?_editClock 0070                                 _tempAlarm 006A  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 003C  
                                _PIR3bits 070F                                  _PIR4bits 0710  
              ??_TMR3_SetInterruptHandler 00AC                  __size_of_TMR5_Initialize 001F  
                             ??_Clock_ISR 0070                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR1_ISR 0BEA  
                                _TMR3_ISR 0C01                                  _TMR5_ISR 0C18  
                                _SSP1STAT 018F                         ??_TMR1_Initialize 00AC  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                       __end_ofi1_TMR2_Stop 0AEE  
                              _ADCON3bits 0096                         ___wmul@multiplier 0070  
                      i1WriteI2C@data_out 0071              __end_of_PWM_Output_D4_Enable 0AE5  
       __size_of_TMR5_SetInterruptHandler 0006                          __size_of_LCDchar 0008  
               ?_TMR5_SetInterruptHandler 00AA                          __size_of_LCDinit 0076  
                        __size_of_LCDsend 0053                         ??_TMR2_Initialize 00AA  
                             _menuLCD_ISR 006D            ??_TMR5_DefaultInterruptHandler 0070  
                        __size_of_ReadI2C 001A                                _ADSTATbits 0097  
                __size_of_TMR3_WriteTimer 0011                          ??_monitoring_ISR 0074  
                 ??_OSCILLATOR_Initialize 00AA                          __size_of___lwdiv 003C  
                        __size_of___lwmod 0034                                  _WriteI2C 0EC2  
                       ??_TMR3_Initialize 00AC                  _TMR1_SetInterruptHandler 0B00  
                        i1LCDsend2x4@mode 0072                     _TMR1_InterruptHandler 00A6  
                              sprintf@val 002E                                  _clkAlarm 0061  
                __size_of_ADCC_Initialize 0017                          __size_of_isdigit 0012  
                                _editTemp 0D2C                           ___lwdiv@divisor 0070  
                         ___lwdiv@counter 0077                                  __ptext10 0B06  
                                __ptext11 07F1                                  __ptext20 0F8A  
                                __ptext12 0C9B                                  __ptext21 04DF  
                                __ptext13 0B00                                _T1GCONbits 020F  
                                __ptext30 0BAE                                  __ptext22 0E6F  
                                __ptext14 0B5C                                  __ptext31 0B8B  
                                __ptext23 0EC2                                  __ptext15 0B33  
                                __ptext40 0C7C                                  __ptext32 0C01  
                                __ptext16 0DA1                                  __ptext41 0CF8  
                                __ptext33 0003                                  __ptext25 0C18  
                                __ptext17 0B3B                                  __ptext50 0B24  
                                __ptext42 0D65                                  __ptext34 006D  
                                __ptext26 07FF                                  __ptext18 0C2F  
                                __ptext51 05B3                                  __ptext43 0F1C  
                                __ptext35 0AF8                                  __ptext27 0DDE  
                                __ptext19 0AEE                                  __ptext52 0E24  
                                __ptext44 0AF4                                  __ptext36 0AEB  
                                __ptext28 03D2                                  __ptext53 0B7A  
                                __ptext45 0AE5                                  __ptext37 0AE8  
                                __ptext29 0C46                                  __ptext54 0BEA  
                                __ptext46 0AE2                                  __ptext38 0235  
                                __ptext55 0B69                                  __ptext47 0BD4  
                                __ptext39 0B9C                                  __ptext56 0778  
                                __ptext48 0BC0                                  __ptext57 0002  
                                __ptext49 0B2B                              _SSP1CON1bits 0190  
                            _SSP1CON2bits 0191                 ??i1_PWM_Output_D4_Disable 0070  
                        __size_of_sprintf 019D                                _T3GCONbits 0215  
                 TMR3_WriteTimer@timerVal 0070                          _i2c1_driver_open 0B44  
                       ??_PWM6_Initialize 00AA                             __size_of_main 007F  
                              _T5GCONbits 021B                                  _lumAlarm 0068  
                                _lumLevel 005F                     _PWM_Output_D4_Disable 0AEE  
                             ??_editClock 00AA                          _editingTempAlarm 005E  
                        i1_TMR2_StopTimer 0AF8                  __size_of_TMR5_WriteTimer 0011  
                              tsttc@value 0073                               i1_TMR2_Stop 0AEB  
              ??_ADCC_GetSingleConversion 0073                                  int$flags 007E  
                       ??_TMR2_StartTimer 0070        __end_of_INTERRUPT_InterruptManager 0040  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                         menuLCD_ISR@F12791 00B4  
    __end_of_TMR3_DefaultInterruptHandler 0004     __size_of_TMR3_DefaultInterruptHandler 0001  
            _TMR3_DefaultInterruptHandler 0003                         ??_TMR5_Initialize 00AC  
                              _INTCONbits 000B                                  isdigit@c 0071  
                              _LCDsend2x4 04DF                                  intlevel1 0000  
                               sprintf@ap 002C                                 sprintf@sp 0034  
                        ___lwmod@dividend 007A                   ?_PIN_MANAGER_Initialize 0070  
                         _editingLumAlarm 005D                      _PWM_Output_D4_Enable 0AE2  
     __end_of_differenceBetweenTimePeriod 0F8A               _differenceBetweenTimePeriod 0F1C  
                        ??_TMR2_StopTimer 00AA                         ??_TMR3_WriteTimer 0072  
                           __pstringtext1 100F                             __pstringtext2 1000  
                           __pstringtext3 1019                             __pstringtext4 1020  
                           __pstringtext5 0000             ??_differenceBetweenTimePeriod 0020  
                                sprintf@c 0033                                  sprintf@f 0020  
           ?_TMR3_DefaultInterruptHandler 0070                                _SSP1DATPPS 0EC6  
                              _SSP1CLKPPS 0EC5                           ___lwmod@divisor 0078  
                         ___lwmod@counter 007D               PWM6_LoadDutyValue@dutyValue 0070  
                              _TMR2_Start 0AE5            __end_of_PIN_MANAGER_Initialize 0DDE  
                       ??_ADCC_Initialize 00AA                             _togglingAlarm 005C  
                  ?_PWM_Output_D4_Disable 0070                     ?_PWM_Output_D4_Enable 0070  
                         _TMR1_Initialize 0C9B  
