

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Oct 31 11:43:23 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2
    61                           	psect	text38,local,class=CODE,merge=1,delta=2
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text43,local,class=CODE,merge=1,delta=2,group=3
    67                           	psect	text44,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	text53,local,class=CODE,merge=1,delta=2
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	text55,local,class=CODE,merge=1,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	psect	text57,local,class=CODE,merge=1,delta=2
    81                           	psect	text58,local,class=CODE,merge=1,delta=2
    82                           	psect	text59,local,class=CODE,merge=1,delta=2
    83                           	psect	text60,local,class=CODE,merge=1,delta=2
    84                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    85                           	dabs	1,0x7E,2
    86  0000                     
    87                           ; Version 2.30
    88                           ; Generated 15/09/2020 GMT
    89                           ; 
    90                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution. Publication is not required when
   104                           ;        this file is used in an embedded application.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC16F18875 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  0007                     	;# 
   130  0008                     	;# 
   131  0009                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000D                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0014                     	;# 
   143  0015                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001C                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001D                     	;# 
   153  001E                     	;# 
   154  001F                     	;# 
   155  008C                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  008E                     	;# 
   160  008F                     	;# 
   161  0090                     	;# 
   162  0090                     	;# 
   163  0091                     	;# 
   164  0093                     	;# 
   165  0094                     	;# 
   166  0095                     	;# 
   167  0096                     	;# 
   168  0097                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009A                     	;# 
   172  009B                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  010C                     	;# 
   177  010D                     	;# 
   178  010E                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  0110                     	;# 
   182  0110                     	;# 
   183  0111                     	;# 
   184  0112                     	;# 
   185  0112                     	;# 
   186  0113                     	;# 
   187  0114                     	;# 
   188  0114                     	;# 
   189  0115                     	;# 
   190  0116                     	;# 
   191  0116                     	;# 
   192  0117                     	;# 
   193  0119                     	;# 
   194  0119                     	;# 
   195  0119                     	;# 
   196  011A                     	;# 
   197  011A                     	;# 
   198  011A                     	;# 
   199  011B                     	;# 
   200  011B                     	;# 
   201  011B                     	;# 
   202  011B                     	;# 
   203  011B                     	;# 
   204  011C                     	;# 
   205  011C                     	;# 
   206  011C                     	;# 
   207  011D                     	;# 
   208  011D                     	;# 
   209  011D                     	;# 
   210  011E                     	;# 
   211  011E                     	;# 
   212  011E                     	;# 
   213  011F                     	;# 
   214  011F                     	;# 
   215  011F                     	;# 
   216  011F                     	;# 
   217  011F                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  018E                     	;# 
   221  018F                     	;# 
   222  0190                     	;# 
   223  0191                     	;# 
   224  0192                     	;# 
   225  0196                     	;# 
   226  0197                     	;# 
   227  0198                     	;# 
   228  0199                     	;# 
   229  019A                     	;# 
   230  019B                     	;# 
   231  019C                     	;# 
   232  020C                     	;# 
   233  020C                     	;# 
   234  020D                     	;# 
   235  020E                     	;# 
   236  020F                     	;# 
   237  020F                     	;# 
   238  0210                     	;# 
   239  0210                     	;# 
   240  0211                     	;# 
   241  0211                     	;# 
   242  0212                     	;# 
   243  0212                     	;# 
   244  0213                     	;# 
   245  0214                     	;# 
   246  0215                     	;# 
   247  0215                     	;# 
   248  0216                     	;# 
   249  0216                     	;# 
   250  0217                     	;# 
   251  0217                     	;# 
   252  0218                     	;# 
   253  0218                     	;# 
   254  0219                     	;# 
   255  021A                     	;# 
   256  021B                     	;# 
   257  021B                     	;# 
   258  021C                     	;# 
   259  021C                     	;# 
   260  021D                     	;# 
   261  021D                     	;# 
   262  021E                     	;# 
   263  021F                     	;# 
   264  028C                     	;# 
   265  028C                     	;# 
   266  028D                     	;# 
   267  028D                     	;# 
   268  028E                     	;# 
   269  028F                     	;# 
   270  0290                     	;# 
   271  0290                     	;# 
   272  0291                     	;# 
   273  0292                     	;# 
   274  0292                     	;# 
   275  0293                     	;# 
   276  0293                     	;# 
   277  0294                     	;# 
   278  0295                     	;# 
   279  0296                     	;# 
   280  0296                     	;# 
   281  0297                     	;# 
   282  0298                     	;# 
   283  0298                     	;# 
   284  0299                     	;# 
   285  0299                     	;# 
   286  029A                     	;# 
   287  029B                     	;# 
   288  029C                     	;# 
   289  029C                     	;# 
   290  029D                     	;# 
   291  030C                     	;# 
   292  030C                     	;# 
   293  030D                     	;# 
   294  030E                     	;# 
   295  030F                     	;# 
   296  0310                     	;# 
   297  0310                     	;# 
   298  0311                     	;# 
   299  0312                     	;# 
   300  0313                     	;# 
   301  0314                     	;# 
   302  0314                     	;# 
   303  0315                     	;# 
   304  0316                     	;# 
   305  0317                     	;# 
   306  0318                     	;# 
   307  0318                     	;# 
   308  0319                     	;# 
   309  031A                     	;# 
   310  031B                     	;# 
   311  031C                     	;# 
   312  031C                     	;# 
   313  031D                     	;# 
   314  031E                     	;# 
   315  031F                     	;# 
   316  038C                     	;# 
   317  038C                     	;# 
   318  038D                     	;# 
   319  038E                     	;# 
   320  0390                     	;# 
   321  0390                     	;# 
   322  0391                     	;# 
   323  0392                     	;# 
   324  040C                     	;# 
   325  040D                     	;# 
   326  040E                     	;# 
   327  040F                     	;# 
   328  0410                     	;# 
   329  0411                     	;# 
   330  0416                     	;# 
   331  0416                     	;# 
   332  0417                     	;# 
   333  0418                     	;# 
   334  0418                     	;# 
   335  0419                     	;# 
   336  041A                     	;# 
   337  041A                     	;# 
   338  041B                     	;# 
   339  041C                     	;# 
   340  041C                     	;# 
   341  041D                     	;# 
   342  041E                     	;# 
   343  041F                     	;# 
   344  048C                     	;# 
   345  048C                     	;# 
   346  048D                     	;# 
   347  048E                     	;# 
   348  048F                     	;# 
   349  048F                     	;# 
   350  0490                     	;# 
   351  0491                     	;# 
   352  0492                     	;# 
   353  0492                     	;# 
   354  0493                     	;# 
   355  0494                     	;# 
   356  0495                     	;# 
   357  0495                     	;# 
   358  0496                     	;# 
   359  0497                     	;# 
   360  0498                     	;# 
   361  0499                     	;# 
   362  049A                     	;# 
   363  049B                     	;# 
   364  049C                     	;# 
   365  049D                     	;# 
   366  050C                     	;# 
   367  050C                     	;# 
   368  050D                     	;# 
   369  050E                     	;# 
   370  050F                     	;# 
   371  050F                     	;# 
   372  0510                     	;# 
   373  0511                     	;# 
   374  0512                     	;# 
   375  0512                     	;# 
   376  0513                     	;# 
   377  0514                     	;# 
   378  0515                     	;# 
   379  0515                     	;# 
   380  0516                     	;# 
   381  0517                     	;# 
   382  0518                     	;# 
   383  0519                     	;# 
   384  051A                     	;# 
   385  051B                     	;# 
   386  051C                     	;# 
   387  051D                     	;# 
   388  058C                     	;# 
   389  058C                     	;# 
   390  058D                     	;# 
   391  058E                     	;# 
   392  058F                     	;# 
   393  058F                     	;# 
   394  0590                     	;# 
   395  0591                     	;# 
   396  0592                     	;# 
   397  0593                     	;# 
   398  060C                     	;# 
   399  060D                     	;# 
   400  060E                     	;# 
   401  060F                     	;# 
   402  0610                     	;# 
   403  0611                     	;# 
   404  0612                     	;# 
   405  0613                     	;# 
   406  0614                     	;# 
   407  0616                     	;# 
   408  0617                     	;# 
   409  0618                     	;# 
   410  0619                     	;# 
   411  061A                     	;# 
   412  061B                     	;# 
   413  061C                     	;# 
   414  061D                     	;# 
   415  061E                     	;# 
   416  068C                     	;# 
   417  068D                     	;# 
   418  068E                     	;# 
   419  068F                     	;# 
   420  0690                     	;# 
   421  0691                     	;# 
   422  0692                     	;# 
   423  0693                     	;# 
   424  0694                     	;# 
   425  070C                     	;# 
   426  070D                     	;# 
   427  070E                     	;# 
   428  070F                     	;# 
   429  0710                     	;# 
   430  0711                     	;# 
   431  0712                     	;# 
   432  0713                     	;# 
   433  0714                     	;# 
   434  0716                     	;# 
   435  0717                     	;# 
   436  0718                     	;# 
   437  0719                     	;# 
   438  071A                     	;# 
   439  071B                     	;# 
   440  071C                     	;# 
   441  071D                     	;# 
   442  071E                     	;# 
   443  0796                     	;# 
   444  0797                     	;# 
   445  0798                     	;# 
   446  0799                     	;# 
   447  079A                     	;# 
   448  079B                     	;# 
   449  080C                     	;# 
   450  080D                     	;# 
   451  080E                     	;# 
   452  080F                     	;# 
   453  0810                     	;# 
   454  0811                     	;# 
   455  0812                     	;# 
   456  0813                     	;# 
   457  0814                     	;# 
   458  081A                     	;# 
   459  081B                     	;# 
   460  081C                     	;# 
   461  081D                     	;# 
   462  081E                     	;# 
   463  081F                     	;# 
   464  088C                     	;# 
   465  088D                     	;# 
   466  088E                     	;# 
   467  088F                     	;# 
   468  0890                     	;# 
   469  0891                     	;# 
   470  0892                     	;# 
   471  0893                     	;# 
   472  0895                     	;# 
   473  0896                     	;# 
   474  0897                     	;# 
   475  0898                     	;# 
   476  0899                     	;# 
   477  089A                     	;# 
   478  089B                     	;# 
   479  090C                     	;# 
   480  090E                     	;# 
   481  090F                     	;# 
   482  091F                     	;# 
   483  091F                     	;# 
   484  098F                     	;# 
   485  098F                     	;# 
   486  0990                     	;# 
   487  0991                     	;# 
   488  0992                     	;# 
   489  0993                     	;# 
   490  0994                     	;# 
   491  0995                     	;# 
   492  0996                     	;# 
   493  0997                     	;# 
   494  0E0F                     	;# 
   495  0E10                     	;# 
   496  0E11                     	;# 
   497  0E12                     	;# 
   498  0E13                     	;# 
   499  0E14                     	;# 
   500  0E15                     	;# 
   501  0E16                     	;# 
   502  0E17                     	;# 
   503  0E18                     	;# 
   504  0E19                     	;# 
   505  0E1A                     	;# 
   506  0E1B                     	;# 
   507  0E1C                     	;# 
   508  0E1D                     	;# 
   509  0E1E                     	;# 
   510  0E1F                     	;# 
   511  0E20                     	;# 
   512  0E21                     	;# 
   513  0E22                     	;# 
   514  0E23                     	;# 
   515  0E24                     	;# 
   516  0E25                     	;# 
   517  0E26                     	;# 
   518  0E27                     	;# 
   519  0E28                     	;# 
   520  0E29                     	;# 
   521  0E2A                     	;# 
   522  0E2B                     	;# 
   523  0E2C                     	;# 
   524  0E2D                     	;# 
   525  0E2E                     	;# 
   526  0E2F                     	;# 
   527  0E30                     	;# 
   528  0E31                     	;# 
   529  0E32                     	;# 
   530  0E33                     	;# 
   531  0E34                     	;# 
   532  0E35                     	;# 
   533  0E36                     	;# 
   534  0E37                     	;# 
   535  0E8F                     	;# 
   536  0E90                     	;# 
   537  0E91                     	;# 
   538  0E92                     	;# 
   539  0E93                     	;# 
   540  0E94                     	;# 
   541  0E95                     	;# 
   542  0E96                     	;# 
   543  0E97                     	;# 
   544  0E9C                     	;# 
   545  0E9D                     	;# 
   546  0E9E                     	;# 
   547  0EA1                     	;# 
   548  0EA2                     	;# 
   549  0EA3                     	;# 
   550  0EA4                     	;# 
   551  0EA5                     	;# 
   552  0EA9                     	;# 
   553  0EAA                     	;# 
   554  0EAB                     	;# 
   555  0EAC                     	;# 
   556  0EB1                     	;# 
   557  0EB2                     	;# 
   558  0EB3                     	;# 
   559  0EB8                     	;# 
   560  0EB9                     	;# 
   561  0EBA                     	;# 
   562  0EBB                     	;# 
   563  0EBC                     	;# 
   564  0EBD                     	;# 
   565  0EBE                     	;# 
   566  0EC3                     	;# 
   567  0EC5                     	;# 
   568  0EC6                     	;# 
   569  0EC7                     	;# 
   570  0EC8                     	;# 
   571  0EC9                     	;# 
   572  0ECA                     	;# 
   573  0ECB                     	;# 
   574  0ECC                     	;# 
   575  0F10                     	;# 
   576  0F11                     	;# 
   577  0F12                     	;# 
   578  0F13                     	;# 
   579  0F14                     	;# 
   580  0F15                     	;# 
   581  0F16                     	;# 
   582  0F17                     	;# 
   583  0F18                     	;# 
   584  0F19                     	;# 
   585  0F1A                     	;# 
   586  0F1B                     	;# 
   587  0F1C                     	;# 
   588  0F1D                     	;# 
   589  0F1E                     	;# 
   590  0F1F                     	;# 
   591  0F20                     	;# 
   592  0F21                     	;# 
   593  0F22                     	;# 
   594  0F23                     	;# 
   595  0F24                     	;# 
   596  0F25                     	;# 
   597  0F26                     	;# 
   598  0F27                     	;# 
   599  0F28                     	;# 
   600  0F29                     	;# 
   601  0F2A                     	;# 
   602  0F2B                     	;# 
   603  0F2C                     	;# 
   604  0F2D                     	;# 
   605  0F2E                     	;# 
   606  0F2F                     	;# 
   607  0F30                     	;# 
   608  0F31                     	;# 
   609  0F32                     	;# 
   610  0F38                     	;# 
   611  0F39                     	;# 
   612  0F3A                     	;# 
   613  0F3B                     	;# 
   614  0F3C                     	;# 
   615  0F3D                     	;# 
   616  0F3E                     	;# 
   617  0F3F                     	;# 
   618  0F40                     	;# 
   619  0F41                     	;# 
   620  0F43                     	;# 
   621  0F44                     	;# 
   622  0F45                     	;# 
   623  0F46                     	;# 
   624  0F47                     	;# 
   625  0F48                     	;# 
   626  0F49                     	;# 
   627  0F4A                     	;# 
   628  0F4B                     	;# 
   629  0F4C                     	;# 
   630  0F4E                     	;# 
   631  0F4F                     	;# 
   632  0F50                     	;# 
   633  0F51                     	;# 
   634  0F52                     	;# 
   635  0F53                     	;# 
   636  0F54                     	;# 
   637  0F55                     	;# 
   638  0F56                     	;# 
   639  0F57                     	;# 
   640  0F59                     	;# 
   641  0F5A                     	;# 
   642  0F5B                     	;# 
   643  0F5C                     	;# 
   644  0F5D                     	;# 
   645  0F61                     	;# 
   646  0F62                     	;# 
   647  0F64                     	;# 
   648  0F65                     	;# 
   649  0F66                     	;# 
   650  0F67                     	;# 
   651  0F68                     	;# 
   652  0F69                     	;# 
   653  0F6A                     	;# 
   654  0F6B                     	;# 
   655  0F6C                     	;# 
   656  0F6D                     	;# 
   657  0FE4                     	;# 
   658  0FE5                     	;# 
   659  0FE6                     	;# 
   660  0FE7                     	;# 
   661  0FE8                     	;# 
   662  0FE9                     	;# 
   663  0FEA                     	;# 
   664  0FEB                     	;# 
   665  0FED                     	;# 
   666  0FEE                     	;# 
   667  0FEF                     	;# 
   668  0000                     	;# 
   669  0001                     	;# 
   670  0002                     	;# 
   671  0003                     	;# 
   672  0004                     	;# 
   673  0005                     	;# 
   674  0006                     	;# 
   675  0007                     	;# 
   676  0008                     	;# 
   677  0009                     	;# 
   678  000A                     	;# 
   679  000B                     	;# 
   680  000C                     	;# 
   681  000D                     	;# 
   682  000E                     	;# 
   683  000F                     	;# 
   684  0010                     	;# 
   685  0011                     	;# 
   686  0012                     	;# 
   687  0013                     	;# 
   688  0014                     	;# 
   689  0015                     	;# 
   690  0016                     	;# 
   691  0017                     	;# 
   692  0018                     	;# 
   693  0019                     	;# 
   694  001A                     	;# 
   695  001C                     	;# 
   696  001C                     	;# 
   697  001D                     	;# 
   698  001D                     	;# 
   699  001E                     	;# 
   700  001F                     	;# 
   701  008C                     	;# 
   702  008C                     	;# 
   703  008D                     	;# 
   704  008E                     	;# 
   705  008E                     	;# 
   706  008F                     	;# 
   707  0090                     	;# 
   708  0090                     	;# 
   709  0091                     	;# 
   710  0093                     	;# 
   711  0094                     	;# 
   712  0095                     	;# 
   713  0096                     	;# 
   714  0097                     	;# 
   715  0098                     	;# 
   716  0099                     	;# 
   717  009A                     	;# 
   718  009B                     	;# 
   719  009C                     	;# 
   720  009D                     	;# 
   721  009E                     	;# 
   722  010C                     	;# 
   723  010D                     	;# 
   724  010E                     	;# 
   725  010E                     	;# 
   726  010F                     	;# 
   727  0110                     	;# 
   728  0110                     	;# 
   729  0111                     	;# 
   730  0112                     	;# 
   731  0112                     	;# 
   732  0113                     	;# 
   733  0114                     	;# 
   734  0114                     	;# 
   735  0115                     	;# 
   736  0116                     	;# 
   737  0116                     	;# 
   738  0117                     	;# 
   739  0119                     	;# 
   740  0119                     	;# 
   741  0119                     	;# 
   742  011A                     	;# 
   743  011A                     	;# 
   744  011A                     	;# 
   745  011B                     	;# 
   746  011B                     	;# 
   747  011B                     	;# 
   748  011B                     	;# 
   749  011B                     	;# 
   750  011C                     	;# 
   751  011C                     	;# 
   752  011C                     	;# 
   753  011D                     	;# 
   754  011D                     	;# 
   755  011D                     	;# 
   756  011E                     	;# 
   757  011E                     	;# 
   758  011E                     	;# 
   759  011F                     	;# 
   760  011F                     	;# 
   761  011F                     	;# 
   762  011F                     	;# 
   763  011F                     	;# 
   764  018C                     	;# 
   765  018D                     	;# 
   766  018E                     	;# 
   767  018F                     	;# 
   768  0190                     	;# 
   769  0191                     	;# 
   770  0192                     	;# 
   771  0196                     	;# 
   772  0197                     	;# 
   773  0198                     	;# 
   774  0199                     	;# 
   775  019A                     	;# 
   776  019B                     	;# 
   777  019C                     	;# 
   778  020C                     	;# 
   779  020C                     	;# 
   780  020D                     	;# 
   781  020E                     	;# 
   782  020F                     	;# 
   783  020F                     	;# 
   784  0210                     	;# 
   785  0210                     	;# 
   786  0211                     	;# 
   787  0211                     	;# 
   788  0212                     	;# 
   789  0212                     	;# 
   790  0213                     	;# 
   791  0214                     	;# 
   792  0215                     	;# 
   793  0215                     	;# 
   794  0216                     	;# 
   795  0216                     	;# 
   796  0217                     	;# 
   797  0217                     	;# 
   798  0218                     	;# 
   799  0218                     	;# 
   800  0219                     	;# 
   801  021A                     	;# 
   802  021B                     	;# 
   803  021B                     	;# 
   804  021C                     	;# 
   805  021C                     	;# 
   806  021D                     	;# 
   807  021D                     	;# 
   808  021E                     	;# 
   809  021F                     	;# 
   810  028C                     	;# 
   811  028C                     	;# 
   812  028D                     	;# 
   813  028D                     	;# 
   814  028E                     	;# 
   815  028F                     	;# 
   816  0290                     	;# 
   817  0290                     	;# 
   818  0291                     	;# 
   819  0292                     	;# 
   820  0292                     	;# 
   821  0293                     	;# 
   822  0293                     	;# 
   823  0294                     	;# 
   824  0295                     	;# 
   825  0296                     	;# 
   826  0296                     	;# 
   827  0297                     	;# 
   828  0298                     	;# 
   829  0298                     	;# 
   830  0299                     	;# 
   831  0299                     	;# 
   832  029A                     	;# 
   833  029B                     	;# 
   834  029C                     	;# 
   835  029C                     	;# 
   836  029D                     	;# 
   837  030C                     	;# 
   838  030C                     	;# 
   839  030D                     	;# 
   840  030E                     	;# 
   841  030F                     	;# 
   842  0310                     	;# 
   843  0310                     	;# 
   844  0311                     	;# 
   845  0312                     	;# 
   846  0313                     	;# 
   847  0314                     	;# 
   848  0314                     	;# 
   849  0315                     	;# 
   850  0316                     	;# 
   851  0317                     	;# 
   852  0318                     	;# 
   853  0318                     	;# 
   854  0319                     	;# 
   855  031A                     	;# 
   856  031B                     	;# 
   857  031C                     	;# 
   858  031C                     	;# 
   859  031D                     	;# 
   860  031E                     	;# 
   861  031F                     	;# 
   862  038C                     	;# 
   863  038C                     	;# 
   864  038D                     	;# 
   865  038E                     	;# 
   866  0390                     	;# 
   867  0390                     	;# 
   868  0391                     	;# 
   869  0392                     	;# 
   870  040C                     	;# 
   871  040D                     	;# 
   872  040E                     	;# 
   873  040F                     	;# 
   874  0410                     	;# 
   875  0411                     	;# 
   876  0416                     	;# 
   877  0416                     	;# 
   878  0417                     	;# 
   879  0418                     	;# 
   880  0418                     	;# 
   881  0419                     	;# 
   882  041A                     	;# 
   883  041A                     	;# 
   884  041B                     	;# 
   885  041C                     	;# 
   886  041C                     	;# 
   887  041D                     	;# 
   888  041E                     	;# 
   889  041F                     	;# 
   890  048C                     	;# 
   891  048C                     	;# 
   892  048D                     	;# 
   893  048E                     	;# 
   894  048F                     	;# 
   895  048F                     	;# 
   896  0490                     	;# 
   897  0491                     	;# 
   898  0492                     	;# 
   899  0492                     	;# 
   900  0493                     	;# 
   901  0494                     	;# 
   902  0495                     	;# 
   903  0495                     	;# 
   904  0496                     	;# 
   905  0497                     	;# 
   906  0498                     	;# 
   907  0499                     	;# 
   908  049A                     	;# 
   909  049B                     	;# 
   910  049C                     	;# 
   911  049D                     	;# 
   912  050C                     	;# 
   913  050C                     	;# 
   914  050D                     	;# 
   915  050E                     	;# 
   916  050F                     	;# 
   917  050F                     	;# 
   918  0510                     	;# 
   919  0511                     	;# 
   920  0512                     	;# 
   921  0512                     	;# 
   922  0513                     	;# 
   923  0514                     	;# 
   924  0515                     	;# 
   925  0515                     	;# 
   926  0516                     	;# 
   927  0517                     	;# 
   928  0518                     	;# 
   929  0519                     	;# 
   930  051A                     	;# 
   931  051B                     	;# 
   932  051C                     	;# 
   933  051D                     	;# 
   934  058C                     	;# 
   935  058C                     	;# 
   936  058D                     	;# 
   937  058E                     	;# 
   938  058F                     	;# 
   939  058F                     	;# 
   940  0590                     	;# 
   941  0591                     	;# 
   942  0592                     	;# 
   943  0593                     	;# 
   944  060C                     	;# 
   945  060D                     	;# 
   946  060E                     	;# 
   947  060F                     	;# 
   948  0610                     	;# 
   949  0611                     	;# 
   950  0612                     	;# 
   951  0613                     	;# 
   952  0614                     	;# 
   953  0616                     	;# 
   954  0617                     	;# 
   955  0618                     	;# 
   956  0619                     	;# 
   957  061A                     	;# 
   958  061B                     	;# 
   959  061C                     	;# 
   960  061D                     	;# 
   961  061E                     	;# 
   962  068C                     	;# 
   963  068D                     	;# 
   964  068E                     	;# 
   965  068F                     	;# 
   966  0690                     	;# 
   967  0691                     	;# 
   968  0692                     	;# 
   969  0693                     	;# 
   970  0694                     	;# 
   971  070C                     	;# 
   972  070D                     	;# 
   973  070E                     	;# 
   974  070F                     	;# 
   975  0710                     	;# 
   976  0711                     	;# 
   977  0712                     	;# 
   978  0713                     	;# 
   979  0714                     	;# 
   980  0716                     	;# 
   981  0717                     	;# 
   982  0718                     	;# 
   983  0719                     	;# 
   984  071A                     	;# 
   985  071B                     	;# 
   986  071C                     	;# 
   987  071D                     	;# 
   988  071E                     	;# 
   989  0796                     	;# 
   990  0797                     	;# 
   991  0798                     	;# 
   992  0799                     	;# 
   993  079A                     	;# 
   994  079B                     	;# 
   995  080C                     	;# 
   996  080D                     	;# 
   997  080E                     	;# 
   998  080F                     	;# 
   999  0810                     	;# 
  1000  0811                     	;# 
  1001  0812                     	;# 
  1002  0813                     	;# 
  1003  0814                     	;# 
  1004  081A                     	;# 
  1005  081B                     	;# 
  1006  081C                     	;# 
  1007  081D                     	;# 
  1008  081E                     	;# 
  1009  081F                     	;# 
  1010  088C                     	;# 
  1011  088D                     	;# 
  1012  088E                     	;# 
  1013  088F                     	;# 
  1014  0890                     	;# 
  1015  0891                     	;# 
  1016  0892                     	;# 
  1017  0893                     	;# 
  1018  0895                     	;# 
  1019  0896                     	;# 
  1020  0897                     	;# 
  1021  0898                     	;# 
  1022  0899                     	;# 
  1023  089A                     	;# 
  1024  089B                     	;# 
  1025  090C                     	;# 
  1026  090E                     	;# 
  1027  090F                     	;# 
  1028  091F                     	;# 
  1029  091F                     	;# 
  1030  098F                     	;# 
  1031  098F                     	;# 
  1032  0990                     	;# 
  1033  0991                     	;# 
  1034  0992                     	;# 
  1035  0993                     	;# 
  1036  0994                     	;# 
  1037  0995                     	;# 
  1038  0996                     	;# 
  1039  0997                     	;# 
  1040  0E0F                     	;# 
  1041  0E10                     	;# 
  1042  0E11                     	;# 
  1043  0E12                     	;# 
  1044  0E13                     	;# 
  1045  0E14                     	;# 
  1046  0E15                     	;# 
  1047  0E16                     	;# 
  1048  0E17                     	;# 
  1049  0E18                     	;# 
  1050  0E19                     	;# 
  1051  0E1A                     	;# 
  1052  0E1B                     	;# 
  1053  0E1C                     	;# 
  1054  0E1D                     	;# 
  1055  0E1E                     	;# 
  1056  0E1F                     	;# 
  1057  0E20                     	;# 
  1058  0E21                     	;# 
  1059  0E22                     	;# 
  1060  0E23                     	;# 
  1061  0E24                     	;# 
  1062  0E25                     	;# 
  1063  0E26                     	;# 
  1064  0E27                     	;# 
  1065  0E28                     	;# 
  1066  0E29                     	;# 
  1067  0E2A                     	;# 
  1068  0E2B                     	;# 
  1069  0E2C                     	;# 
  1070  0E2D                     	;# 
  1071  0E2E                     	;# 
  1072  0E2F                     	;# 
  1073  0E30                     	;# 
  1074  0E31                     	;# 
  1075  0E32                     	;# 
  1076  0E33                     	;# 
  1077  0E34                     	;# 
  1078  0E35                     	;# 
  1079  0E36                     	;# 
  1080  0E37                     	;# 
  1081  0E8F                     	;# 
  1082  0E90                     	;# 
  1083  0E91                     	;# 
  1084  0E92                     	;# 
  1085  0E93                     	;# 
  1086  0E94                     	;# 
  1087  0E95                     	;# 
  1088  0E96                     	;# 
  1089  0E97                     	;# 
  1090  0E9C                     	;# 
  1091  0E9D                     	;# 
  1092  0E9E                     	;# 
  1093  0EA1                     	;# 
  1094  0EA2                     	;# 
  1095  0EA3                     	;# 
  1096  0EA4                     	;# 
  1097  0EA5                     	;# 
  1098  0EA9                     	;# 
  1099  0EAA                     	;# 
  1100  0EAB                     	;# 
  1101  0EAC                     	;# 
  1102  0EB1                     	;# 
  1103  0EB2                     	;# 
  1104  0EB3                     	;# 
  1105  0EB8                     	;# 
  1106  0EB9                     	;# 
  1107  0EBA                     	;# 
  1108  0EBB                     	;# 
  1109  0EBC                     	;# 
  1110  0EBD                     	;# 
  1111  0EBE                     	;# 
  1112  0EC3                     	;# 
  1113  0EC5                     	;# 
  1114  0EC6                     	;# 
  1115  0EC7                     	;# 
  1116  0EC8                     	;# 
  1117  0EC9                     	;# 
  1118  0ECA                     	;# 
  1119  0ECB                     	;# 
  1120  0ECC                     	;# 
  1121  0F10                     	;# 
  1122  0F11                     	;# 
  1123  0F12                     	;# 
  1124  0F13                     	;# 
  1125  0F14                     	;# 
  1126  0F15                     	;# 
  1127  0F16                     	;# 
  1128  0F17                     	;# 
  1129  0F18                     	;# 
  1130  0F19                     	;# 
  1131  0F1A                     	;# 
  1132  0F1B                     	;# 
  1133  0F1C                     	;# 
  1134  0F1D                     	;# 
  1135  0F1E                     	;# 
  1136  0F1F                     	;# 
  1137  0F20                     	;# 
  1138  0F21                     	;# 
  1139  0F22                     	;# 
  1140  0F23                     	;# 
  1141  0F24                     	;# 
  1142  0F25                     	;# 
  1143  0F26                     	;# 
  1144  0F27                     	;# 
  1145  0F28                     	;# 
  1146  0F29                     	;# 
  1147  0F2A                     	;# 
  1148  0F2B                     	;# 
  1149  0F2C                     	;# 
  1150  0F2D                     	;# 
  1151  0F2E                     	;# 
  1152  0F2F                     	;# 
  1153  0F30                     	;# 
  1154  0F31                     	;# 
  1155  0F32                     	;# 
  1156  0F38                     	;# 
  1157  0F39                     	;# 
  1158  0F3A                     	;# 
  1159  0F3B                     	;# 
  1160  0F3C                     	;# 
  1161  0F3D                     	;# 
  1162  0F3E                     	;# 
  1163  0F3F                     	;# 
  1164  0F40                     	;# 
  1165  0F41                     	;# 
  1166  0F43                     	;# 
  1167  0F44                     	;# 
  1168  0F45                     	;# 
  1169  0F46                     	;# 
  1170  0F47                     	;# 
  1171  0F48                     	;# 
  1172  0F49                     	;# 
  1173  0F4A                     	;# 
  1174  0F4B                     	;# 
  1175  0F4C                     	;# 
  1176  0F4E                     	;# 
  1177  0F4F                     	;# 
  1178  0F50                     	;# 
  1179  0F51                     	;# 
  1180  0F52                     	;# 
  1181  0F53                     	;# 
  1182  0F54                     	;# 
  1183  0F55                     	;# 
  1184  0F56                     	;# 
  1185  0F57                     	;# 
  1186  0F59                     	;# 
  1187  0F5A                     	;# 
  1188  0F5B                     	;# 
  1189  0F5C                     	;# 
  1190  0F5D                     	;# 
  1191  0F61                     	;# 
  1192  0F62                     	;# 
  1193  0F64                     	;# 
  1194  0F65                     	;# 
  1195  0F66                     	;# 
  1196  0F67                     	;# 
  1197  0F68                     	;# 
  1198  0F69                     	;# 
  1199  0F6A                     	;# 
  1200  0F6B                     	;# 
  1201  0F6C                     	;# 
  1202  0F6D                     	;# 
  1203  0FE4                     	;# 
  1204  0FE5                     	;# 
  1205  0FE6                     	;# 
  1206  0FE7                     	;# 
  1207  0FE8                     	;# 
  1208  0FE9                     	;# 
  1209  0FEA                     	;# 
  1210  0FEB                     	;# 
  1211  0FED                     	;# 
  1212  0FEE                     	;# 
  1213  0FEF                     	;# 
  1214  0000                     	;# 
  1215  0001                     	;# 
  1216  0002                     	;# 
  1217  0003                     	;# 
  1218  0004                     	;# 
  1219  0005                     	;# 
  1220  0006                     	;# 
  1221  0007                     	;# 
  1222  0008                     	;# 
  1223  0009                     	;# 
  1224  000A                     	;# 
  1225  000B                     	;# 
  1226  000C                     	;# 
  1227  000D                     	;# 
  1228  000E                     	;# 
  1229  000F                     	;# 
  1230  0010                     	;# 
  1231  0011                     	;# 
  1232  0012                     	;# 
  1233  0013                     	;# 
  1234  0014                     	;# 
  1235  0015                     	;# 
  1236  0016                     	;# 
  1237  0017                     	;# 
  1238  0018                     	;# 
  1239  0019                     	;# 
  1240  001A                     	;# 
  1241  001C                     	;# 
  1242  001C                     	;# 
  1243  001D                     	;# 
  1244  001D                     	;# 
  1245  001E                     	;# 
  1246  001F                     	;# 
  1247  008C                     	;# 
  1248  008C                     	;# 
  1249  008D                     	;# 
  1250  008E                     	;# 
  1251  008E                     	;# 
  1252  008F                     	;# 
  1253  0090                     	;# 
  1254  0090                     	;# 
  1255  0091                     	;# 
  1256  0093                     	;# 
  1257  0094                     	;# 
  1258  0095                     	;# 
  1259  0096                     	;# 
  1260  0097                     	;# 
  1261  0098                     	;# 
  1262  0099                     	;# 
  1263  009A                     	;# 
  1264  009B                     	;# 
  1265  009C                     	;# 
  1266  009D                     	;# 
  1267  009E                     	;# 
  1268  010C                     	;# 
  1269  010D                     	;# 
  1270  010E                     	;# 
  1271  010E                     	;# 
  1272  010F                     	;# 
  1273  0110                     	;# 
  1274  0110                     	;# 
  1275  0111                     	;# 
  1276  0112                     	;# 
  1277  0112                     	;# 
  1278  0113                     	;# 
  1279  0114                     	;# 
  1280  0114                     	;# 
  1281  0115                     	;# 
  1282  0116                     	;# 
  1283  0116                     	;# 
  1284  0117                     	;# 
  1285  0119                     	;# 
  1286  0119                     	;# 
  1287  0119                     	;# 
  1288  011A                     	;# 
  1289  011A                     	;# 
  1290  011A                     	;# 
  1291  011B                     	;# 
  1292  011B                     	;# 
  1293  011B                     	;# 
  1294  011B                     	;# 
  1295  011B                     	;# 
  1296  011C                     	;# 
  1297  011C                     	;# 
  1298  011C                     	;# 
  1299  011D                     	;# 
  1300  011D                     	;# 
  1301  011D                     	;# 
  1302  011E                     	;# 
  1303  011E                     	;# 
  1304  011E                     	;# 
  1305  011F                     	;# 
  1306  011F                     	;# 
  1307  011F                     	;# 
  1308  011F                     	;# 
  1309  011F                     	;# 
  1310  018C                     	;# 
  1311  018D                     	;# 
  1312  018E                     	;# 
  1313  018F                     	;# 
  1314  0190                     	;# 
  1315  0191                     	;# 
  1316  0192                     	;# 
  1317  0196                     	;# 
  1318  0197                     	;# 
  1319  0198                     	;# 
  1320  0199                     	;# 
  1321  019A                     	;# 
  1322  019B                     	;# 
  1323  019C                     	;# 
  1324  020C                     	;# 
  1325  020C                     	;# 
  1326  020D                     	;# 
  1327  020E                     	;# 
  1328  020F                     	;# 
  1329  020F                     	;# 
  1330  0210                     	;# 
  1331  0210                     	;# 
  1332  0211                     	;# 
  1333  0211                     	;# 
  1334  0212                     	;# 
  1335  0212                     	;# 
  1336  0213                     	;# 
  1337  0214                     	;# 
  1338  0215                     	;# 
  1339  0215                     	;# 
  1340  0216                     	;# 
  1341  0216                     	;# 
  1342  0217                     	;# 
  1343  0217                     	;# 
  1344  0218                     	;# 
  1345  0218                     	;# 
  1346  0219                     	;# 
  1347  021A                     	;# 
  1348  021B                     	;# 
  1349  021B                     	;# 
  1350  021C                     	;# 
  1351  021C                     	;# 
  1352  021D                     	;# 
  1353  021D                     	;# 
  1354  021E                     	;# 
  1355  021F                     	;# 
  1356  028C                     	;# 
  1357  028C                     	;# 
  1358  028D                     	;# 
  1359  028D                     	;# 
  1360  028E                     	;# 
  1361  028F                     	;# 
  1362  0290                     	;# 
  1363  0290                     	;# 
  1364  0291                     	;# 
  1365  0292                     	;# 
  1366  0292                     	;# 
  1367  0293                     	;# 
  1368  0293                     	;# 
  1369  0294                     	;# 
  1370  0295                     	;# 
  1371  0296                     	;# 
  1372  0296                     	;# 
  1373  0297                     	;# 
  1374  0298                     	;# 
  1375  0298                     	;# 
  1376  0299                     	;# 
  1377  0299                     	;# 
  1378  029A                     	;# 
  1379  029B                     	;# 
  1380  029C                     	;# 
  1381  029C                     	;# 
  1382  029D                     	;# 
  1383  030C                     	;# 
  1384  030C                     	;# 
  1385  030D                     	;# 
  1386  030E                     	;# 
  1387  030F                     	;# 
  1388  0310                     	;# 
  1389  0310                     	;# 
  1390  0311                     	;# 
  1391  0312                     	;# 
  1392  0313                     	;# 
  1393  0314                     	;# 
  1394  0314                     	;# 
  1395  0315                     	;# 
  1396  0316                     	;# 
  1397  0317                     	;# 
  1398  0318                     	;# 
  1399  0318                     	;# 
  1400  0319                     	;# 
  1401  031A                     	;# 
  1402  031B                     	;# 
  1403  031C                     	;# 
  1404  031C                     	;# 
  1405  031D                     	;# 
  1406  031E                     	;# 
  1407  031F                     	;# 
  1408  038C                     	;# 
  1409  038C                     	;# 
  1410  038D                     	;# 
  1411  038E                     	;# 
  1412  0390                     	;# 
  1413  0390                     	;# 
  1414  0391                     	;# 
  1415  0392                     	;# 
  1416  040C                     	;# 
  1417  040D                     	;# 
  1418  040E                     	;# 
  1419  040F                     	;# 
  1420  0410                     	;# 
  1421  0411                     	;# 
  1422  0416                     	;# 
  1423  0416                     	;# 
  1424  0417                     	;# 
  1425  0418                     	;# 
  1426  0418                     	;# 
  1427  0419                     	;# 
  1428  041A                     	;# 
  1429  041A                     	;# 
  1430  041B                     	;# 
  1431  041C                     	;# 
  1432  041C                     	;# 
  1433  041D                     	;# 
  1434  041E                     	;# 
  1435  041F                     	;# 
  1436  048C                     	;# 
  1437  048C                     	;# 
  1438  048D                     	;# 
  1439  048E                     	;# 
  1440  048F                     	;# 
  1441  048F                     	;# 
  1442  0490                     	;# 
  1443  0491                     	;# 
  1444  0492                     	;# 
  1445  0492                     	;# 
  1446  0493                     	;# 
  1447  0494                     	;# 
  1448  0495                     	;# 
  1449  0495                     	;# 
  1450  0496                     	;# 
  1451  0497                     	;# 
  1452  0498                     	;# 
  1453  0499                     	;# 
  1454  049A                     	;# 
  1455  049B                     	;# 
  1456  049C                     	;# 
  1457  049D                     	;# 
  1458  050C                     	;# 
  1459  050C                     	;# 
  1460  050D                     	;# 
  1461  050E                     	;# 
  1462  050F                     	;# 
  1463  050F                     	;# 
  1464  0510                     	;# 
  1465  0511                     	;# 
  1466  0512                     	;# 
  1467  0512                     	;# 
  1468  0513                     	;# 
  1469  0514                     	;# 
  1470  0515                     	;# 
  1471  0515                     	;# 
  1472  0516                     	;# 
  1473  0517                     	;# 
  1474  0518                     	;# 
  1475  0519                     	;# 
  1476  051A                     	;# 
  1477  051B                     	;# 
  1478  051C                     	;# 
  1479  051D                     	;# 
  1480  058C                     	;# 
  1481  058C                     	;# 
  1482  058D                     	;# 
  1483  058E                     	;# 
  1484  058F                     	;# 
  1485  058F                     	;# 
  1486  0590                     	;# 
  1487  0591                     	;# 
  1488  0592                     	;# 
  1489  0593                     	;# 
  1490  060C                     	;# 
  1491  060D                     	;# 
  1492  060E                     	;# 
  1493  060F                     	;# 
  1494  0610                     	;# 
  1495  0611                     	;# 
  1496  0612                     	;# 
  1497  0613                     	;# 
  1498  0614                     	;# 
  1499  0616                     	;# 
  1500  0617                     	;# 
  1501  0618                     	;# 
  1502  0619                     	;# 
  1503  061A                     	;# 
  1504  061B                     	;# 
  1505  061C                     	;# 
  1506  061D                     	;# 
  1507  061E                     	;# 
  1508  068C                     	;# 
  1509  068D                     	;# 
  1510  068E                     	;# 
  1511  068F                     	;# 
  1512  0690                     	;# 
  1513  0691                     	;# 
  1514  0692                     	;# 
  1515  0693                     	;# 
  1516  0694                     	;# 
  1517  070C                     	;# 
  1518  070D                     	;# 
  1519  070E                     	;# 
  1520  070F                     	;# 
  1521  0710                     	;# 
  1522  0711                     	;# 
  1523  0712                     	;# 
  1524  0713                     	;# 
  1525  0714                     	;# 
  1526  0716                     	;# 
  1527  0717                     	;# 
  1528  0718                     	;# 
  1529  0719                     	;# 
  1530  071A                     	;# 
  1531  071B                     	;# 
  1532  071C                     	;# 
  1533  071D                     	;# 
  1534  071E                     	;# 
  1535  0796                     	;# 
  1536  0797                     	;# 
  1537  0798                     	;# 
  1538  0799                     	;# 
  1539  079A                     	;# 
  1540  079B                     	;# 
  1541  080C                     	;# 
  1542  080D                     	;# 
  1543  080E                     	;# 
  1544  080F                     	;# 
  1545  0810                     	;# 
  1546  0811                     	;# 
  1547  0812                     	;# 
  1548  0813                     	;# 
  1549  0814                     	;# 
  1550  081A                     	;# 
  1551  081B                     	;# 
  1552  081C                     	;# 
  1553  081D                     	;# 
  1554  081E                     	;# 
  1555  081F                     	;# 
  1556  088C                     	;# 
  1557  088D                     	;# 
  1558  088E                     	;# 
  1559  088F                     	;# 
  1560  0890                     	;# 
  1561  0891                     	;# 
  1562  0892                     	;# 
  1563  0893                     	;# 
  1564  0895                     	;# 
  1565  0896                     	;# 
  1566  0897                     	;# 
  1567  0898                     	;# 
  1568  0899                     	;# 
  1569  089A                     	;# 
  1570  089B                     	;# 
  1571  090C                     	;# 
  1572  090E                     	;# 
  1573  090F                     	;# 
  1574  091F                     	;# 
  1575  091F                     	;# 
  1576  098F                     	;# 
  1577  098F                     	;# 
  1578  0990                     	;# 
  1579  0991                     	;# 
  1580  0992                     	;# 
  1581  0993                     	;# 
  1582  0994                     	;# 
  1583  0995                     	;# 
  1584  0996                     	;# 
  1585  0997                     	;# 
  1586  0E0F                     	;# 
  1587  0E10                     	;# 
  1588  0E11                     	;# 
  1589  0E12                     	;# 
  1590  0E13                     	;# 
  1591  0E14                     	;# 
  1592  0E15                     	;# 
  1593  0E16                     	;# 
  1594  0E17                     	;# 
  1595  0E18                     	;# 
  1596  0E19                     	;# 
  1597  0E1A                     	;# 
  1598  0E1B                     	;# 
  1599  0E1C                     	;# 
  1600  0E1D                     	;# 
  1601  0E1E                     	;# 
  1602  0E1F                     	;# 
  1603  0E20                     	;# 
  1604  0E21                     	;# 
  1605  0E22                     	;# 
  1606  0E23                     	;# 
  1607  0E24                     	;# 
  1608  0E25                     	;# 
  1609  0E26                     	;# 
  1610  0E27                     	;# 
  1611  0E28                     	;# 
  1612  0E29                     	;# 
  1613  0E2A                     	;# 
  1614  0E2B                     	;# 
  1615  0E2C                     	;# 
  1616  0E2D                     	;# 
  1617  0E2E                     	;# 
  1618  0E2F                     	;# 
  1619  0E30                     	;# 
  1620  0E31                     	;# 
  1621  0E32                     	;# 
  1622  0E33                     	;# 
  1623  0E34                     	;# 
  1624  0E35                     	;# 
  1625  0E36                     	;# 
  1626  0E37                     	;# 
  1627  0E8F                     	;# 
  1628  0E90                     	;# 
  1629  0E91                     	;# 
  1630  0E92                     	;# 
  1631  0E93                     	;# 
  1632  0E94                     	;# 
  1633  0E95                     	;# 
  1634  0E96                     	;# 
  1635  0E97                     	;# 
  1636  0E9C                     	;# 
  1637  0E9D                     	;# 
  1638  0E9E                     	;# 
  1639  0EA1                     	;# 
  1640  0EA2                     	;# 
  1641  0EA3                     	;# 
  1642  0EA4                     	;# 
  1643  0EA5                     	;# 
  1644  0EA9                     	;# 
  1645  0EAA                     	;# 
  1646  0EAB                     	;# 
  1647  0EAC                     	;# 
  1648  0EB1                     	;# 
  1649  0EB2                     	;# 
  1650  0EB3                     	;# 
  1651  0EB8                     	;# 
  1652  0EB9                     	;# 
  1653  0EBA                     	;# 
  1654  0EBB                     	;# 
  1655  0EBC                     	;# 
  1656  0EBD                     	;# 
  1657  0EBE                     	;# 
  1658  0EC3                     	;# 
  1659  0EC5                     	;# 
  1660  0EC6                     	;# 
  1661  0EC7                     	;# 
  1662  0EC8                     	;# 
  1663  0EC9                     	;# 
  1664  0ECA                     	;# 
  1665  0ECB                     	;# 
  1666  0ECC                     	;# 
  1667  0F10                     	;# 
  1668  0F11                     	;# 
  1669  0F12                     	;# 
  1670  0F13                     	;# 
  1671  0F14                     	;# 
  1672  0F15                     	;# 
  1673  0F16                     	;# 
  1674  0F17                     	;# 
  1675  0F18                     	;# 
  1676  0F19                     	;# 
  1677  0F1A                     	;# 
  1678  0F1B                     	;# 
  1679  0F1C                     	;# 
  1680  0F1D                     	;# 
  1681  0F1E                     	;# 
  1682  0F1F                     	;# 
  1683  0F20                     	;# 
  1684  0F21                     	;# 
  1685  0F22                     	;# 
  1686  0F23                     	;# 
  1687  0F24                     	;# 
  1688  0F25                     	;# 
  1689  0F26                     	;# 
  1690  0F27                     	;# 
  1691  0F28                     	;# 
  1692  0F29                     	;# 
  1693  0F2A                     	;# 
  1694  0F2B                     	;# 
  1695  0F2C                     	;# 
  1696  0F2D                     	;# 
  1697  0F2E                     	;# 
  1698  0F2F                     	;# 
  1699  0F30                     	;# 
  1700  0F31                     	;# 
  1701  0F32                     	;# 
  1702  0F38                     	;# 
  1703  0F39                     	;# 
  1704  0F3A                     	;# 
  1705  0F3B                     	;# 
  1706  0F3C                     	;# 
  1707  0F3D                     	;# 
  1708  0F3E                     	;# 
  1709  0F3F                     	;# 
  1710  0F40                     	;# 
  1711  0F41                     	;# 
  1712  0F43                     	;# 
  1713  0F44                     	;# 
  1714  0F45                     	;# 
  1715  0F46                     	;# 
  1716  0F47                     	;# 
  1717  0F48                     	;# 
  1718  0F49                     	;# 
  1719  0F4A                     	;# 
  1720  0F4B                     	;# 
  1721  0F4C                     	;# 
  1722  0F4E                     	;# 
  1723  0F4F                     	;# 
  1724  0F50                     	;# 
  1725  0F51                     	;# 
  1726  0F52                     	;# 
  1727  0F53                     	;# 
  1728  0F54                     	;# 
  1729  0F55                     	;# 
  1730  0F56                     	;# 
  1731  0F57                     	;# 
  1732  0F59                     	;# 
  1733  0F5A                     	;# 
  1734  0F5B                     	;# 
  1735  0F5C                     	;# 
  1736  0F5D                     	;# 
  1737  0F61                     	;# 
  1738  0F62                     	;# 
  1739  0F64                     	;# 
  1740  0F65                     	;# 
  1741  0F66                     	;# 
  1742  0F67                     	;# 
  1743  0F68                     	;# 
  1744  0F69                     	;# 
  1745  0F6A                     	;# 
  1746  0F6B                     	;# 
  1747  0F6C                     	;# 
  1748  0F6D                     	;# 
  1749  0FE4                     	;# 
  1750  0FE5                     	;# 
  1751  0FE6                     	;# 
  1752  0FE7                     	;# 
  1753  0FE8                     	;# 
  1754  0FE9                     	;# 
  1755  0FEA                     	;# 
  1756  0FEB                     	;# 
  1757  0FED                     	;# 
  1758  0FEE                     	;# 
  1759  0FEF                     	;# 
  1760  0000                     	;# 
  1761  0001                     	;# 
  1762  0002                     	;# 
  1763  0003                     	;# 
  1764  0004                     	;# 
  1765  0005                     	;# 
  1766  0006                     	;# 
  1767  0007                     	;# 
  1768  0008                     	;# 
  1769  0009                     	;# 
  1770  000A                     	;# 
  1771  000B                     	;# 
  1772  000C                     	;# 
  1773  000D                     	;# 
  1774  000E                     	;# 
  1775  000F                     	;# 
  1776  0010                     	;# 
  1777  0011                     	;# 
  1778  0012                     	;# 
  1779  0013                     	;# 
  1780  0014                     	;# 
  1781  0015                     	;# 
  1782  0016                     	;# 
  1783  0017                     	;# 
  1784  0018                     	;# 
  1785  0019                     	;# 
  1786  001A                     	;# 
  1787  001C                     	;# 
  1788  001C                     	;# 
  1789  001D                     	;# 
  1790  001D                     	;# 
  1791  001E                     	;# 
  1792  001F                     	;# 
  1793  008C                     	;# 
  1794  008C                     	;# 
  1795  008D                     	;# 
  1796  008E                     	;# 
  1797  008E                     	;# 
  1798  008F                     	;# 
  1799  0090                     	;# 
  1800  0090                     	;# 
  1801  0091                     	;# 
  1802  0093                     	;# 
  1803  0094                     	;# 
  1804  0095                     	;# 
  1805  0096                     	;# 
  1806  0097                     	;# 
  1807  0098                     	;# 
  1808  0099                     	;# 
  1809  009A                     	;# 
  1810  009B                     	;# 
  1811  009C                     	;# 
  1812  009D                     	;# 
  1813  009E                     	;# 
  1814  010C                     	;# 
  1815  010D                     	;# 
  1816  010E                     	;# 
  1817  010E                     	;# 
  1818  010F                     	;# 
  1819  0110                     	;# 
  1820  0110                     	;# 
  1821  0111                     	;# 
  1822  0112                     	;# 
  1823  0112                     	;# 
  1824  0113                     	;# 
  1825  0114                     	;# 
  1826  0114                     	;# 
  1827  0115                     	;# 
  1828  0116                     	;# 
  1829  0116                     	;# 
  1830  0117                     	;# 
  1831  0119                     	;# 
  1832  0119                     	;# 
  1833  0119                     	;# 
  1834  011A                     	;# 
  1835  011A                     	;# 
  1836  011A                     	;# 
  1837  011B                     	;# 
  1838  011B                     	;# 
  1839  011B                     	;# 
  1840  011B                     	;# 
  1841  011B                     	;# 
  1842  011C                     	;# 
  1843  011C                     	;# 
  1844  011C                     	;# 
  1845  011D                     	;# 
  1846  011D                     	;# 
  1847  011D                     	;# 
  1848  011E                     	;# 
  1849  011E                     	;# 
  1850  011E                     	;# 
  1851  011F                     	;# 
  1852  011F                     	;# 
  1853  011F                     	;# 
  1854  011F                     	;# 
  1855  011F                     	;# 
  1856  018C                     	;# 
  1857  018D                     	;# 
  1858  018E                     	;# 
  1859  018F                     	;# 
  1860  0190                     	;# 
  1861  0191                     	;# 
  1862  0192                     	;# 
  1863  0196                     	;# 
  1864  0197                     	;# 
  1865  0198                     	;# 
  1866  0199                     	;# 
  1867  019A                     	;# 
  1868  019B                     	;# 
  1869  019C                     	;# 
  1870  020C                     	;# 
  1871  020C                     	;# 
  1872  020D                     	;# 
  1873  020E                     	;# 
  1874  020F                     	;# 
  1875  020F                     	;# 
  1876  0210                     	;# 
  1877  0210                     	;# 
  1878  0211                     	;# 
  1879  0211                     	;# 
  1880  0212                     	;# 
  1881  0212                     	;# 
  1882  0213                     	;# 
  1883  0214                     	;# 
  1884  0215                     	;# 
  1885  0215                     	;# 
  1886  0216                     	;# 
  1887  0216                     	;# 
  1888  0217                     	;# 
  1889  0217                     	;# 
  1890  0218                     	;# 
  1891  0218                     	;# 
  1892  0219                     	;# 
  1893  021A                     	;# 
  1894  021B                     	;# 
  1895  021B                     	;# 
  1896  021C                     	;# 
  1897  021C                     	;# 
  1898  021D                     	;# 
  1899  021D                     	;# 
  1900  021E                     	;# 
  1901  021F                     	;# 
  1902  028C                     	;# 
  1903  028C                     	;# 
  1904  028D                     	;# 
  1905  028D                     	;# 
  1906  028E                     	;# 
  1907  028F                     	;# 
  1908  0290                     	;# 
  1909  0290                     	;# 
  1910  0291                     	;# 
  1911  0292                     	;# 
  1912  0292                     	;# 
  1913  0293                     	;# 
  1914  0293                     	;# 
  1915  0294                     	;# 
  1916  0295                     	;# 
  1917  0296                     	;# 
  1918  0296                     	;# 
  1919  0297                     	;# 
  1920  0298                     	;# 
  1921  0298                     	;# 
  1922  0299                     	;# 
  1923  0299                     	;# 
  1924  029A                     	;# 
  1925  029B                     	;# 
  1926  029C                     	;# 
  1927  029C                     	;# 
  1928  029D                     	;# 
  1929  030C                     	;# 
  1930  030C                     	;# 
  1931  030D                     	;# 
  1932  030E                     	;# 
  1933  030F                     	;# 
  1934  0310                     	;# 
  1935  0310                     	;# 
  1936  0311                     	;# 
  1937  0312                     	;# 
  1938  0313                     	;# 
  1939  0314                     	;# 
  1940  0314                     	;# 
  1941  0315                     	;# 
  1942  0316                     	;# 
  1943  0317                     	;# 
  1944  0318                     	;# 
  1945  0318                     	;# 
  1946  0319                     	;# 
  1947  031A                     	;# 
  1948  031B                     	;# 
  1949  031C                     	;# 
  1950  031C                     	;# 
  1951  031D                     	;# 
  1952  031E                     	;# 
  1953  031F                     	;# 
  1954  038C                     	;# 
  1955  038C                     	;# 
  1956  038D                     	;# 
  1957  038E                     	;# 
  1958  0390                     	;# 
  1959  0390                     	;# 
  1960  0391                     	;# 
  1961  0392                     	;# 
  1962  040C                     	;# 
  1963  040D                     	;# 
  1964  040E                     	;# 
  1965  040F                     	;# 
  1966  0410                     	;# 
  1967  0411                     	;# 
  1968  0416                     	;# 
  1969  0416                     	;# 
  1970  0417                     	;# 
  1971  0418                     	;# 
  1972  0418                     	;# 
  1973  0419                     	;# 
  1974  041A                     	;# 
  1975  041A                     	;# 
  1976  041B                     	;# 
  1977  041C                     	;# 
  1978  041C                     	;# 
  1979  041D                     	;# 
  1980  041E                     	;# 
  1981  041F                     	;# 
  1982  048C                     	;# 
  1983  048C                     	;# 
  1984  048D                     	;# 
  1985  048E                     	;# 
  1986  048F                     	;# 
  1987  048F                     	;# 
  1988  0490                     	;# 
  1989  0491                     	;# 
  1990  0492                     	;# 
  1991  0492                     	;# 
  1992  0493                     	;# 
  1993  0494                     	;# 
  1994  0495                     	;# 
  1995  0495                     	;# 
  1996  0496                     	;# 
  1997  0497                     	;# 
  1998  0498                     	;# 
  1999  0499                     	;# 
  2000  049A                     	;# 
  2001  049B                     	;# 
  2002  049C                     	;# 
  2003  049D                     	;# 
  2004  050C                     	;# 
  2005  050C                     	;# 
  2006  050D                     	;# 
  2007  050E                     	;# 
  2008  050F                     	;# 
  2009  050F                     	;# 
  2010  0510                     	;# 
  2011  0511                     	;# 
  2012  0512                     	;# 
  2013  0512                     	;# 
  2014  0513                     	;# 
  2015  0514                     	;# 
  2016  0515                     	;# 
  2017  0515                     	;# 
  2018  0516                     	;# 
  2019  0517                     	;# 
  2020  0518                     	;# 
  2021  0519                     	;# 
  2022  051A                     	;# 
  2023  051B                     	;# 
  2024  051C                     	;# 
  2025  051D                     	;# 
  2026  058C                     	;# 
  2027  058C                     	;# 
  2028  058D                     	;# 
  2029  058E                     	;# 
  2030  058F                     	;# 
  2031  058F                     	;# 
  2032  0590                     	;# 
  2033  0591                     	;# 
  2034  0592                     	;# 
  2035  0593                     	;# 
  2036  060C                     	;# 
  2037  060D                     	;# 
  2038  060E                     	;# 
  2039  060F                     	;# 
  2040  0610                     	;# 
  2041  0611                     	;# 
  2042  0612                     	;# 
  2043  0613                     	;# 
  2044  0614                     	;# 
  2045  0616                     	;# 
  2046  0617                     	;# 
  2047  0618                     	;# 
  2048  0619                     	;# 
  2049  061A                     	;# 
  2050  061B                     	;# 
  2051  061C                     	;# 
  2052  061D                     	;# 
  2053  061E                     	;# 
  2054  068C                     	;# 
  2055  068D                     	;# 
  2056  068E                     	;# 
  2057  068F                     	;# 
  2058  0690                     	;# 
  2059  0691                     	;# 
  2060  0692                     	;# 
  2061  0693                     	;# 
  2062  0694                     	;# 
  2063  070C                     	;# 
  2064  070D                     	;# 
  2065  070E                     	;# 
  2066  070F                     	;# 
  2067  0710                     	;# 
  2068  0711                     	;# 
  2069  0712                     	;# 
  2070  0713                     	;# 
  2071  0714                     	;# 
  2072  0716                     	;# 
  2073  0717                     	;# 
  2074  0718                     	;# 
  2075  0719                     	;# 
  2076  071A                     	;# 
  2077  071B                     	;# 
  2078  071C                     	;# 
  2079  071D                     	;# 
  2080  071E                     	;# 
  2081  0796                     	;# 
  2082  0797                     	;# 
  2083  0798                     	;# 
  2084  0799                     	;# 
  2085  079A                     	;# 
  2086  079B                     	;# 
  2087  080C                     	;# 
  2088  080D                     	;# 
  2089  080E                     	;# 
  2090  080F                     	;# 
  2091  0810                     	;# 
  2092  0811                     	;# 
  2093  0812                     	;# 
  2094  0813                     	;# 
  2095  0814                     	;# 
  2096  081A                     	;# 
  2097  081B                     	;# 
  2098  081C                     	;# 
  2099  081D                     	;# 
  2100  081E                     	;# 
  2101  081F                     	;# 
  2102  088C                     	;# 
  2103  088D                     	;# 
  2104  088E                     	;# 
  2105  088F                     	;# 
  2106  0890                     	;# 
  2107  0891                     	;# 
  2108  0892                     	;# 
  2109  0893                     	;# 
  2110  0895                     	;# 
  2111  0896                     	;# 
  2112  0897                     	;# 
  2113  0898                     	;# 
  2114  0899                     	;# 
  2115  089A                     	;# 
  2116  089B                     	;# 
  2117  090C                     	;# 
  2118  090E                     	;# 
  2119  090F                     	;# 
  2120  091F                     	;# 
  2121  091F                     	;# 
  2122  098F                     	;# 
  2123  098F                     	;# 
  2124  0990                     	;# 
  2125  0991                     	;# 
  2126  0992                     	;# 
  2127  0993                     	;# 
  2128  0994                     	;# 
  2129  0995                     	;# 
  2130  0996                     	;# 
  2131  0997                     	;# 
  2132  0E0F                     	;# 
  2133  0E10                     	;# 
  2134  0E11                     	;# 
  2135  0E12                     	;# 
  2136  0E13                     	;# 
  2137  0E14                     	;# 
  2138  0E15                     	;# 
  2139  0E16                     	;# 
  2140  0E17                     	;# 
  2141  0E18                     	;# 
  2142  0E19                     	;# 
  2143  0E1A                     	;# 
  2144  0E1B                     	;# 
  2145  0E1C                     	;# 
  2146  0E1D                     	;# 
  2147  0E1E                     	;# 
  2148  0E1F                     	;# 
  2149  0E20                     	;# 
  2150  0E21                     	;# 
  2151  0E22                     	;# 
  2152  0E23                     	;# 
  2153  0E24                     	;# 
  2154  0E25                     	;# 
  2155  0E26                     	;# 
  2156  0E27                     	;# 
  2157  0E28                     	;# 
  2158  0E29                     	;# 
  2159  0E2A                     	;# 
  2160  0E2B                     	;# 
  2161  0E2C                     	;# 
  2162  0E2D                     	;# 
  2163  0E2E                     	;# 
  2164  0E2F                     	;# 
  2165  0E30                     	;# 
  2166  0E31                     	;# 
  2167  0E32                     	;# 
  2168  0E33                     	;# 
  2169  0E34                     	;# 
  2170  0E35                     	;# 
  2171  0E36                     	;# 
  2172  0E37                     	;# 
  2173  0E8F                     	;# 
  2174  0E90                     	;# 
  2175  0E91                     	;# 
  2176  0E92                     	;# 
  2177  0E93                     	;# 
  2178  0E94                     	;# 
  2179  0E95                     	;# 
  2180  0E96                     	;# 
  2181  0E97                     	;# 
  2182  0E9C                     	;# 
  2183  0E9D                     	;# 
  2184  0E9E                     	;# 
  2185  0EA1                     	;# 
  2186  0EA2                     	;# 
  2187  0EA3                     	;# 
  2188  0EA4                     	;# 
  2189  0EA5                     	;# 
  2190  0EA9                     	;# 
  2191  0EAA                     	;# 
  2192  0EAB                     	;# 
  2193  0EAC                     	;# 
  2194  0EB1                     	;# 
  2195  0EB2                     	;# 
  2196  0EB3                     	;# 
  2197  0EB8                     	;# 
  2198  0EB9                     	;# 
  2199  0EBA                     	;# 
  2200  0EBB                     	;# 
  2201  0EBC                     	;# 
  2202  0EBD                     	;# 
  2203  0EBE                     	;# 
  2204  0EC3                     	;# 
  2205  0EC5                     	;# 
  2206  0EC6                     	;# 
  2207  0EC7                     	;# 
  2208  0EC8                     	;# 
  2209  0EC9                     	;# 
  2210  0ECA                     	;# 
  2211  0ECB                     	;# 
  2212  0ECC                     	;# 
  2213  0F10                     	;# 
  2214  0F11                     	;# 
  2215  0F12                     	;# 
  2216  0F13                     	;# 
  2217  0F14                     	;# 
  2218  0F15                     	;# 
  2219  0F16                     	;# 
  2220  0F17                     	;# 
  2221  0F18                     	;# 
  2222  0F19                     	;# 
  2223  0F1A                     	;# 
  2224  0F1B                     	;# 
  2225  0F1C                     	;# 
  2226  0F1D                     	;# 
  2227  0F1E                     	;# 
  2228  0F1F                     	;# 
  2229  0F20                     	;# 
  2230  0F21                     	;# 
  2231  0F22                     	;# 
  2232  0F23                     	;# 
  2233  0F24                     	;# 
  2234  0F25                     	;# 
  2235  0F26                     	;# 
  2236  0F27                     	;# 
  2237  0F28                     	;# 
  2238  0F29                     	;# 
  2239  0F2A                     	;# 
  2240  0F2B                     	;# 
  2241  0F2C                     	;# 
  2242  0F2D                     	;# 
  2243  0F2E                     	;# 
  2244  0F2F                     	;# 
  2245  0F30                     	;# 
  2246  0F31                     	;# 
  2247  0F32                     	;# 
  2248  0F38                     	;# 
  2249  0F39                     	;# 
  2250  0F3A                     	;# 
  2251  0F3B                     	;# 
  2252  0F3C                     	;# 
  2253  0F3D                     	;# 
  2254  0F3E                     	;# 
  2255  0F3F                     	;# 
  2256  0F40                     	;# 
  2257  0F41                     	;# 
  2258  0F43                     	;# 
  2259  0F44                     	;# 
  2260  0F45                     	;# 
  2261  0F46                     	;# 
  2262  0F47                     	;# 
  2263  0F48                     	;# 
  2264  0F49                     	;# 
  2265  0F4A                     	;# 
  2266  0F4B                     	;# 
  2267  0F4C                     	;# 
  2268  0F4E                     	;# 
  2269  0F4F                     	;# 
  2270  0F50                     	;# 
  2271  0F51                     	;# 
  2272  0F52                     	;# 
  2273  0F53                     	;# 
  2274  0F54                     	;# 
  2275  0F55                     	;# 
  2276  0F56                     	;# 
  2277  0F57                     	;# 
  2278  0F59                     	;# 
  2279  0F5A                     	;# 
  2280  0F5B                     	;# 
  2281  0F5C                     	;# 
  2282  0F5D                     	;# 
  2283  0F61                     	;# 
  2284  0F62                     	;# 
  2285  0F64                     	;# 
  2286  0F65                     	;# 
  2287  0F66                     	;# 
  2288  0F67                     	;# 
  2289  0F68                     	;# 
  2290  0F69                     	;# 
  2291  0F6A                     	;# 
  2292  0F6B                     	;# 
  2293  0F6C                     	;# 
  2294  0F6D                     	;# 
  2295  0FE4                     	;# 
  2296  0FE5                     	;# 
  2297  0FE6                     	;# 
  2298  0FE7                     	;# 
  2299  0FE8                     	;# 
  2300  0FE9                     	;# 
  2301  0FEA                     	;# 
  2302  0FEB                     	;# 
  2303  0FED                     	;# 
  2304  0FEE                     	;# 
  2305  0FEF                     	;# 
  2306  0000                     	;# 
  2307  0001                     	;# 
  2308  0002                     	;# 
  2309  0003                     	;# 
  2310  0004                     	;# 
  2311  0005                     	;# 
  2312  0006                     	;# 
  2313  0007                     	;# 
  2314  0008                     	;# 
  2315  0009                     	;# 
  2316  000A                     	;# 
  2317  000B                     	;# 
  2318  000C                     	;# 
  2319  000D                     	;# 
  2320  000E                     	;# 
  2321  000F                     	;# 
  2322  0010                     	;# 
  2323  0011                     	;# 
  2324  0012                     	;# 
  2325  0013                     	;# 
  2326  0014                     	;# 
  2327  0015                     	;# 
  2328  0016                     	;# 
  2329  0017                     	;# 
  2330  0018                     	;# 
  2331  0019                     	;# 
  2332  001A                     	;# 
  2333  001C                     	;# 
  2334  001C                     	;# 
  2335  001D                     	;# 
  2336  001D                     	;# 
  2337  001E                     	;# 
  2338  001F                     	;# 
  2339  008C                     	;# 
  2340  008C                     	;# 
  2341  008D                     	;# 
  2342  008E                     	;# 
  2343  008E                     	;# 
  2344  008F                     	;# 
  2345  0090                     	;# 
  2346  0090                     	;# 
  2347  0091                     	;# 
  2348  0093                     	;# 
  2349  0094                     	;# 
  2350  0095                     	;# 
  2351  0096                     	;# 
  2352  0097                     	;# 
  2353  0098                     	;# 
  2354  0099                     	;# 
  2355  009A                     	;# 
  2356  009B                     	;# 
  2357  009C                     	;# 
  2358  009D                     	;# 
  2359  009E                     	;# 
  2360  010C                     	;# 
  2361  010D                     	;# 
  2362  010E                     	;# 
  2363  010E                     	;# 
  2364  010F                     	;# 
  2365  0110                     	;# 
  2366  0110                     	;# 
  2367  0111                     	;# 
  2368  0112                     	;# 
  2369  0112                     	;# 
  2370  0113                     	;# 
  2371  0114                     	;# 
  2372  0114                     	;# 
  2373  0115                     	;# 
  2374  0116                     	;# 
  2375  0116                     	;# 
  2376  0117                     	;# 
  2377  0119                     	;# 
  2378  0119                     	;# 
  2379  0119                     	;# 
  2380  011A                     	;# 
  2381  011A                     	;# 
  2382  011A                     	;# 
  2383  011B                     	;# 
  2384  011B                     	;# 
  2385  011B                     	;# 
  2386  011B                     	;# 
  2387  011B                     	;# 
  2388  011C                     	;# 
  2389  011C                     	;# 
  2390  011C                     	;# 
  2391  011D                     	;# 
  2392  011D                     	;# 
  2393  011D                     	;# 
  2394  011E                     	;# 
  2395  011E                     	;# 
  2396  011E                     	;# 
  2397  011F                     	;# 
  2398  011F                     	;# 
  2399  011F                     	;# 
  2400  011F                     	;# 
  2401  011F                     	;# 
  2402  018C                     	;# 
  2403  018D                     	;# 
  2404  018E                     	;# 
  2405  018F                     	;# 
  2406  0190                     	;# 
  2407  0191                     	;# 
  2408  0192                     	;# 
  2409  0196                     	;# 
  2410  0197                     	;# 
  2411  0198                     	;# 
  2412  0199                     	;# 
  2413  019A                     	;# 
  2414  019B                     	;# 
  2415  019C                     	;# 
  2416  020C                     	;# 
  2417  020C                     	;# 
  2418  020D                     	;# 
  2419  020E                     	;# 
  2420  020F                     	;# 
  2421  020F                     	;# 
  2422  0210                     	;# 
  2423  0210                     	;# 
  2424  0211                     	;# 
  2425  0211                     	;# 
  2426  0212                     	;# 
  2427  0212                     	;# 
  2428  0213                     	;# 
  2429  0214                     	;# 
  2430  0215                     	;# 
  2431  0215                     	;# 
  2432  0216                     	;# 
  2433  0216                     	;# 
  2434  0217                     	;# 
  2435  0217                     	;# 
  2436  0218                     	;# 
  2437  0218                     	;# 
  2438  0219                     	;# 
  2439  021A                     	;# 
  2440  021B                     	;# 
  2441  021B                     	;# 
  2442  021C                     	;# 
  2443  021C                     	;# 
  2444  021D                     	;# 
  2445  021D                     	;# 
  2446  021E                     	;# 
  2447  021F                     	;# 
  2448  028C                     	;# 
  2449  028C                     	;# 
  2450  028D                     	;# 
  2451  028D                     	;# 
  2452  028E                     	;# 
  2453  028F                     	;# 
  2454  0290                     	;# 
  2455  0290                     	;# 
  2456  0291                     	;# 
  2457  0292                     	;# 
  2458  0292                     	;# 
  2459  0293                     	;# 
  2460  0293                     	;# 
  2461  0294                     	;# 
  2462  0295                     	;# 
  2463  0296                     	;# 
  2464  0296                     	;# 
  2465  0297                     	;# 
  2466  0298                     	;# 
  2467  0298                     	;# 
  2468  0299                     	;# 
  2469  0299                     	;# 
  2470  029A                     	;# 
  2471  029B                     	;# 
  2472  029C                     	;# 
  2473  029C                     	;# 
  2474  029D                     	;# 
  2475  030C                     	;# 
  2476  030C                     	;# 
  2477  030D                     	;# 
  2478  030E                     	;# 
  2479  030F                     	;# 
  2480  0310                     	;# 
  2481  0310                     	;# 
  2482  0311                     	;# 
  2483  0312                     	;# 
  2484  0313                     	;# 
  2485  0314                     	;# 
  2486  0314                     	;# 
  2487  0315                     	;# 
  2488  0316                     	;# 
  2489  0317                     	;# 
  2490  0318                     	;# 
  2491  0318                     	;# 
  2492  0319                     	;# 
  2493  031A                     	;# 
  2494  031B                     	;# 
  2495  031C                     	;# 
  2496  031C                     	;# 
  2497  031D                     	;# 
  2498  031E                     	;# 
  2499  031F                     	;# 
  2500  038C                     	;# 
  2501  038C                     	;# 
  2502  038D                     	;# 
  2503  038E                     	;# 
  2504  0390                     	;# 
  2505  0390                     	;# 
  2506  0391                     	;# 
  2507  0392                     	;# 
  2508  040C                     	;# 
  2509  040D                     	;# 
  2510  040E                     	;# 
  2511  040F                     	;# 
  2512  0410                     	;# 
  2513  0411                     	;# 
  2514  0416                     	;# 
  2515  0416                     	;# 
  2516  0417                     	;# 
  2517  0418                     	;# 
  2518  0418                     	;# 
  2519  0419                     	;# 
  2520  041A                     	;# 
  2521  041A                     	;# 
  2522  041B                     	;# 
  2523  041C                     	;# 
  2524  041C                     	;# 
  2525  041D                     	;# 
  2526  041E                     	;# 
  2527  041F                     	;# 
  2528  048C                     	;# 
  2529  048C                     	;# 
  2530  048D                     	;# 
  2531  048E                     	;# 
  2532  048F                     	;# 
  2533  048F                     	;# 
  2534  0490                     	;# 
  2535  0491                     	;# 
  2536  0492                     	;# 
  2537  0492                     	;# 
  2538  0493                     	;# 
  2539  0494                     	;# 
  2540  0495                     	;# 
  2541  0495                     	;# 
  2542  0496                     	;# 
  2543  0497                     	;# 
  2544  0498                     	;# 
  2545  0499                     	;# 
  2546  049A                     	;# 
  2547  049B                     	;# 
  2548  049C                     	;# 
  2549  049D                     	;# 
  2550  050C                     	;# 
  2551  050C                     	;# 
  2552  050D                     	;# 
  2553  050E                     	;# 
  2554  050F                     	;# 
  2555  050F                     	;# 
  2556  0510                     	;# 
  2557  0511                     	;# 
  2558  0512                     	;# 
  2559  0512                     	;# 
  2560  0513                     	;# 
  2561  0514                     	;# 
  2562  0515                     	;# 
  2563  0515                     	;# 
  2564  0516                     	;# 
  2565  0517                     	;# 
  2566  0518                     	;# 
  2567  0519                     	;# 
  2568  051A                     	;# 
  2569  051B                     	;# 
  2570  051C                     	;# 
  2571  051D                     	;# 
  2572  058C                     	;# 
  2573  058C                     	;# 
  2574  058D                     	;# 
  2575  058E                     	;# 
  2576  058F                     	;# 
  2577  058F                     	;# 
  2578  0590                     	;# 
  2579  0591                     	;# 
  2580  0592                     	;# 
  2581  0593                     	;# 
  2582  060C                     	;# 
  2583  060D                     	;# 
  2584  060E                     	;# 
  2585  060F                     	;# 
  2586  0610                     	;# 
  2587  0611                     	;# 
  2588  0612                     	;# 
  2589  0613                     	;# 
  2590  0614                     	;# 
  2591  0616                     	;# 
  2592  0617                     	;# 
  2593  0618                     	;# 
  2594  0619                     	;# 
  2595  061A                     	;# 
  2596  061B                     	;# 
  2597  061C                     	;# 
  2598  061D                     	;# 
  2599  061E                     	;# 
  2600  068C                     	;# 
  2601  068D                     	;# 
  2602  068E                     	;# 
  2603  068F                     	;# 
  2604  0690                     	;# 
  2605  0691                     	;# 
  2606  0692                     	;# 
  2607  0693                     	;# 
  2608  0694                     	;# 
  2609  070C                     	;# 
  2610  070D                     	;# 
  2611  070E                     	;# 
  2612  070F                     	;# 
  2613  0710                     	;# 
  2614  0711                     	;# 
  2615  0712                     	;# 
  2616  0713                     	;# 
  2617  0714                     	;# 
  2618  0716                     	;# 
  2619  0717                     	;# 
  2620  0718                     	;# 
  2621  0719                     	;# 
  2622  071A                     	;# 
  2623  071B                     	;# 
  2624  071C                     	;# 
  2625  071D                     	;# 
  2626  071E                     	;# 
  2627  0796                     	;# 
  2628  0797                     	;# 
  2629  0798                     	;# 
  2630  0799                     	;# 
  2631  079A                     	;# 
  2632  079B                     	;# 
  2633  080C                     	;# 
  2634  080D                     	;# 
  2635  080E                     	;# 
  2636  080F                     	;# 
  2637  0810                     	;# 
  2638  0811                     	;# 
  2639  0812                     	;# 
  2640  0813                     	;# 
  2641  0814                     	;# 
  2642  081A                     	;# 
  2643  081B                     	;# 
  2644  081C                     	;# 
  2645  081D                     	;# 
  2646  081E                     	;# 
  2647  081F                     	;# 
  2648  088C                     	;# 
  2649  088D                     	;# 
  2650  088E                     	;# 
  2651  088F                     	;# 
  2652  0890                     	;# 
  2653  0891                     	;# 
  2654  0892                     	;# 
  2655  0893                     	;# 
  2656  0895                     	;# 
  2657  0896                     	;# 
  2658  0897                     	;# 
  2659  0898                     	;# 
  2660  0899                     	;# 
  2661  089A                     	;# 
  2662  089B                     	;# 
  2663  090C                     	;# 
  2664  090E                     	;# 
  2665  090F                     	;# 
  2666  091F                     	;# 
  2667  091F                     	;# 
  2668  098F                     	;# 
  2669  098F                     	;# 
  2670  0990                     	;# 
  2671  0991                     	;# 
  2672  0992                     	;# 
  2673  0993                     	;# 
  2674  0994                     	;# 
  2675  0995                     	;# 
  2676  0996                     	;# 
  2677  0997                     	;# 
  2678  0E0F                     	;# 
  2679  0E10                     	;# 
  2680  0E11                     	;# 
  2681  0E12                     	;# 
  2682  0E13                     	;# 
  2683  0E14                     	;# 
  2684  0E15                     	;# 
  2685  0E16                     	;# 
  2686  0E17                     	;# 
  2687  0E18                     	;# 
  2688  0E19                     	;# 
  2689  0E1A                     	;# 
  2690  0E1B                     	;# 
  2691  0E1C                     	;# 
  2692  0E1D                     	;# 
  2693  0E1E                     	;# 
  2694  0E1F                     	;# 
  2695  0E20                     	;# 
  2696  0E21                     	;# 
  2697  0E22                     	;# 
  2698  0E23                     	;# 
  2699  0E24                     	;# 
  2700  0E25                     	;# 
  2701  0E26                     	;# 
  2702  0E27                     	;# 
  2703  0E28                     	;# 
  2704  0E29                     	;# 
  2705  0E2A                     	;# 
  2706  0E2B                     	;# 
  2707  0E2C                     	;# 
  2708  0E2D                     	;# 
  2709  0E2E                     	;# 
  2710  0E2F                     	;# 
  2711  0E30                     	;# 
  2712  0E31                     	;# 
  2713  0E32                     	;# 
  2714  0E33                     	;# 
  2715  0E34                     	;# 
  2716  0E35                     	;# 
  2717  0E36                     	;# 
  2718  0E37                     	;# 
  2719  0E8F                     	;# 
  2720  0E90                     	;# 
  2721  0E91                     	;# 
  2722  0E92                     	;# 
  2723  0E93                     	;# 
  2724  0E94                     	;# 
  2725  0E95                     	;# 
  2726  0E96                     	;# 
  2727  0E97                     	;# 
  2728  0E9C                     	;# 
  2729  0E9D                     	;# 
  2730  0E9E                     	;# 
  2731  0EA1                     	;# 
  2732  0EA2                     	;# 
  2733  0EA3                     	;# 
  2734  0EA4                     	;# 
  2735  0EA5                     	;# 
  2736  0EA9                     	;# 
  2737  0EAA                     	;# 
  2738  0EAB                     	;# 
  2739  0EAC                     	;# 
  2740  0EB1                     	;# 
  2741  0EB2                     	;# 
  2742  0EB3                     	;# 
  2743  0EB8                     	;# 
  2744  0EB9                     	;# 
  2745  0EBA                     	;# 
  2746  0EBB                     	;# 
  2747  0EBC                     	;# 
  2748  0EBD                     	;# 
  2749  0EBE                     	;# 
  2750  0EC3                     	;# 
  2751  0EC5                     	;# 
  2752  0EC6                     	;# 
  2753  0EC7                     	;# 
  2754  0EC8                     	;# 
  2755  0EC9                     	;# 
  2756  0ECA                     	;# 
  2757  0ECB                     	;# 
  2758  0ECC                     	;# 
  2759  0F10                     	;# 
  2760  0F11                     	;# 
  2761  0F12                     	;# 
  2762  0F13                     	;# 
  2763  0F14                     	;# 
  2764  0F15                     	;# 
  2765  0F16                     	;# 
  2766  0F17                     	;# 
  2767  0F18                     	;# 
  2768  0F19                     	;# 
  2769  0F1A                     	;# 
  2770  0F1B                     	;# 
  2771  0F1C                     	;# 
  2772  0F1D                     	;# 
  2773  0F1E                     	;# 
  2774  0F1F                     	;# 
  2775  0F20                     	;# 
  2776  0F21                     	;# 
  2777  0F22                     	;# 
  2778  0F23                     	;# 
  2779  0F24                     	;# 
  2780  0F25                     	;# 
  2781  0F26                     	;# 
  2782  0F27                     	;# 
  2783  0F28                     	;# 
  2784  0F29                     	;# 
  2785  0F2A                     	;# 
  2786  0F2B                     	;# 
  2787  0F2C                     	;# 
  2788  0F2D                     	;# 
  2789  0F2E                     	;# 
  2790  0F2F                     	;# 
  2791  0F30                     	;# 
  2792  0F31                     	;# 
  2793  0F32                     	;# 
  2794  0F38                     	;# 
  2795  0F39                     	;# 
  2796  0F3A                     	;# 
  2797  0F3B                     	;# 
  2798  0F3C                     	;# 
  2799  0F3D                     	;# 
  2800  0F3E                     	;# 
  2801  0F3F                     	;# 
  2802  0F40                     	;# 
  2803  0F41                     	;# 
  2804  0F43                     	;# 
  2805  0F44                     	;# 
  2806  0F45                     	;# 
  2807  0F46                     	;# 
  2808  0F47                     	;# 
  2809  0F48                     	;# 
  2810  0F49                     	;# 
  2811  0F4A                     	;# 
  2812  0F4B                     	;# 
  2813  0F4C                     	;# 
  2814  0F4E                     	;# 
  2815  0F4F                     	;# 
  2816  0F50                     	;# 
  2817  0F51                     	;# 
  2818  0F52                     	;# 
  2819  0F53                     	;# 
  2820  0F54                     	;# 
  2821  0F55                     	;# 
  2822  0F56                     	;# 
  2823  0F57                     	;# 
  2824  0F59                     	;# 
  2825  0F5A                     	;# 
  2826  0F5B                     	;# 
  2827  0F5C                     	;# 
  2828  0F5D                     	;# 
  2829  0F61                     	;# 
  2830  0F62                     	;# 
  2831  0F64                     	;# 
  2832  0F65                     	;# 
  2833  0F66                     	;# 
  2834  0F67                     	;# 
  2835  0F68                     	;# 
  2836  0F69                     	;# 
  2837  0F6A                     	;# 
  2838  0F6B                     	;# 
  2839  0F6C                     	;# 
  2840  0F6D                     	;# 
  2841  0FE4                     	;# 
  2842  0FE5                     	;# 
  2843  0FE6                     	;# 
  2844  0FE7                     	;# 
  2845  0FE8                     	;# 
  2846  0FE9                     	;# 
  2847  0FEA                     	;# 
  2848  0FEB                     	;# 
  2849  0FED                     	;# 
  2850  0FEE                     	;# 
  2851  0FEF                     	;# 
  2852  0000                     	;# 
  2853  0001                     	;# 
  2854  0002                     	;# 
  2855  0003                     	;# 
  2856  0004                     	;# 
  2857  0005                     	;# 
  2858  0006                     	;# 
  2859  0007                     	;# 
  2860  0008                     	;# 
  2861  0009                     	;# 
  2862  000A                     	;# 
  2863  000B                     	;# 
  2864  000C                     	;# 
  2865  000D                     	;# 
  2866  000E                     	;# 
  2867  000F                     	;# 
  2868  0010                     	;# 
  2869  0011                     	;# 
  2870  0012                     	;# 
  2871  0013                     	;# 
  2872  0014                     	;# 
  2873  0015                     	;# 
  2874  0016                     	;# 
  2875  0017                     	;# 
  2876  0018                     	;# 
  2877  0019                     	;# 
  2878  001A                     	;# 
  2879  001C                     	;# 
  2880  001C                     	;# 
  2881  001D                     	;# 
  2882  001D                     	;# 
  2883  001E                     	;# 
  2884  001F                     	;# 
  2885  008C                     	;# 
  2886  008C                     	;# 
  2887  008D                     	;# 
  2888  008E                     	;# 
  2889  008E                     	;# 
  2890  008F                     	;# 
  2891  0090                     	;# 
  2892  0090                     	;# 
  2893  0091                     	;# 
  2894  0093                     	;# 
  2895  0094                     	;# 
  2896  0095                     	;# 
  2897  0096                     	;# 
  2898  0097                     	;# 
  2899  0098                     	;# 
  2900  0099                     	;# 
  2901  009A                     	;# 
  2902  009B                     	;# 
  2903  009C                     	;# 
  2904  009D                     	;# 
  2905  009E                     	;# 
  2906  010C                     	;# 
  2907  010D                     	;# 
  2908  010E                     	;# 
  2909  010E                     	;# 
  2910  010F                     	;# 
  2911  0110                     	;# 
  2912  0110                     	;# 
  2913  0111                     	;# 
  2914  0112                     	;# 
  2915  0112                     	;# 
  2916  0113                     	;# 
  2917  0114                     	;# 
  2918  0114                     	;# 
  2919  0115                     	;# 
  2920  0116                     	;# 
  2921  0116                     	;# 
  2922  0117                     	;# 
  2923  0119                     	;# 
  2924  0119                     	;# 
  2925  0119                     	;# 
  2926  011A                     	;# 
  2927  011A                     	;# 
  2928  011A                     	;# 
  2929  011B                     	;# 
  2930  011B                     	;# 
  2931  011B                     	;# 
  2932  011B                     	;# 
  2933  011B                     	;# 
  2934  011C                     	;# 
  2935  011C                     	;# 
  2936  011C                     	;# 
  2937  011D                     	;# 
  2938  011D                     	;# 
  2939  011D                     	;# 
  2940  011E                     	;# 
  2941  011E                     	;# 
  2942  011E                     	;# 
  2943  011F                     	;# 
  2944  011F                     	;# 
  2945  011F                     	;# 
  2946  011F                     	;# 
  2947  011F                     	;# 
  2948  018C                     	;# 
  2949  018D                     	;# 
  2950  018E                     	;# 
  2951  018F                     	;# 
  2952  0190                     	;# 
  2953  0191                     	;# 
  2954  0192                     	;# 
  2955  0196                     	;# 
  2956  0197                     	;# 
  2957  0198                     	;# 
  2958  0199                     	;# 
  2959  019A                     	;# 
  2960  019B                     	;# 
  2961  019C                     	;# 
  2962  020C                     	;# 
  2963  020C                     	;# 
  2964  020D                     	;# 
  2965  020E                     	;# 
  2966  020F                     	;# 
  2967  020F                     	;# 
  2968  0210                     	;# 
  2969  0210                     	;# 
  2970  0211                     	;# 
  2971  0211                     	;# 
  2972  0212                     	;# 
  2973  0212                     	;# 
  2974  0213                     	;# 
  2975  0214                     	;# 
  2976  0215                     	;# 
  2977  0215                     	;# 
  2978  0216                     	;# 
  2979  0216                     	;# 
  2980  0217                     	;# 
  2981  0217                     	;# 
  2982  0218                     	;# 
  2983  0218                     	;# 
  2984  0219                     	;# 
  2985  021A                     	;# 
  2986  021B                     	;# 
  2987  021B                     	;# 
  2988  021C                     	;# 
  2989  021C                     	;# 
  2990  021D                     	;# 
  2991  021D                     	;# 
  2992  021E                     	;# 
  2993  021F                     	;# 
  2994  028C                     	;# 
  2995  028C                     	;# 
  2996  028D                     	;# 
  2997  028D                     	;# 
  2998  028E                     	;# 
  2999  028F                     	;# 
  3000  0290                     	;# 
  3001  0290                     	;# 
  3002  0291                     	;# 
  3003  0292                     	;# 
  3004  0292                     	;# 
  3005  0293                     	;# 
  3006  0293                     	;# 
  3007  0294                     	;# 
  3008  0295                     	;# 
  3009  0296                     	;# 
  3010  0296                     	;# 
  3011  0297                     	;# 
  3012  0298                     	;# 
  3013  0298                     	;# 
  3014  0299                     	;# 
  3015  0299                     	;# 
  3016  029A                     	;# 
  3017  029B                     	;# 
  3018  029C                     	;# 
  3019  029C                     	;# 
  3020  029D                     	;# 
  3021  030C                     	;# 
  3022  030C                     	;# 
  3023  030D                     	;# 
  3024  030E                     	;# 
  3025  030F                     	;# 
  3026  0310                     	;# 
  3027  0310                     	;# 
  3028  0311                     	;# 
  3029  0312                     	;# 
  3030  0313                     	;# 
  3031  0314                     	;# 
  3032  0314                     	;# 
  3033  0315                     	;# 
  3034  0316                     	;# 
  3035  0317                     	;# 
  3036  0318                     	;# 
  3037  0318                     	;# 
  3038  0319                     	;# 
  3039  031A                     	;# 
  3040  031B                     	;# 
  3041  031C                     	;# 
  3042  031C                     	;# 
  3043  031D                     	;# 
  3044  031E                     	;# 
  3045  031F                     	;# 
  3046  038C                     	;# 
  3047  038C                     	;# 
  3048  038D                     	;# 
  3049  038E                     	;# 
  3050  0390                     	;# 
  3051  0390                     	;# 
  3052  0391                     	;# 
  3053  0392                     	;# 
  3054  040C                     	;# 
  3055  040D                     	;# 
  3056  040E                     	;# 
  3057  040F                     	;# 
  3058  0410                     	;# 
  3059  0411                     	;# 
  3060  0416                     	;# 
  3061  0416                     	;# 
  3062  0417                     	;# 
  3063  0418                     	;# 
  3064  0418                     	;# 
  3065  0419                     	;# 
  3066  041A                     	;# 
  3067  041A                     	;# 
  3068  041B                     	;# 
  3069  041C                     	;# 
  3070  041C                     	;# 
  3071  041D                     	;# 
  3072  041E                     	;# 
  3073  041F                     	;# 
  3074  048C                     	;# 
  3075  048C                     	;# 
  3076  048D                     	;# 
  3077  048E                     	;# 
  3078  048F                     	;# 
  3079  048F                     	;# 
  3080  0490                     	;# 
  3081  0491                     	;# 
  3082  0492                     	;# 
  3083  0492                     	;# 
  3084  0493                     	;# 
  3085  0494                     	;# 
  3086  0495                     	;# 
  3087  0495                     	;# 
  3088  0496                     	;# 
  3089  0497                     	;# 
  3090  0498                     	;# 
  3091  0499                     	;# 
  3092  049A                     	;# 
  3093  049B                     	;# 
  3094  049C                     	;# 
  3095  049D                     	;# 
  3096  050C                     	;# 
  3097  050C                     	;# 
  3098  050D                     	;# 
  3099  050E                     	;# 
  3100  050F                     	;# 
  3101  050F                     	;# 
  3102  0510                     	;# 
  3103  0511                     	;# 
  3104  0512                     	;# 
  3105  0512                     	;# 
  3106  0513                     	;# 
  3107  0514                     	;# 
  3108  0515                     	;# 
  3109  0515                     	;# 
  3110  0516                     	;# 
  3111  0517                     	;# 
  3112  0518                     	;# 
  3113  0519                     	;# 
  3114  051A                     	;# 
  3115  051B                     	;# 
  3116  051C                     	;# 
  3117  051D                     	;# 
  3118  058C                     	;# 
  3119  058C                     	;# 
  3120  058D                     	;# 
  3121  058E                     	;# 
  3122  058F                     	;# 
  3123  058F                     	;# 
  3124  0590                     	;# 
  3125  0591                     	;# 
  3126  0592                     	;# 
  3127  0593                     	;# 
  3128  060C                     	;# 
  3129  060D                     	;# 
  3130  060E                     	;# 
  3131  060F                     	;# 
  3132  0610                     	;# 
  3133  0611                     	;# 
  3134  0612                     	;# 
  3135  0613                     	;# 
  3136  0614                     	;# 
  3137  0616                     	;# 
  3138  0617                     	;# 
  3139  0618                     	;# 
  3140  0619                     	;# 
  3141  061A                     	;# 
  3142  061B                     	;# 
  3143  061C                     	;# 
  3144  061D                     	;# 
  3145  061E                     	;# 
  3146  068C                     	;# 
  3147  068D                     	;# 
  3148  068E                     	;# 
  3149  068F                     	;# 
  3150  0690                     	;# 
  3151  0691                     	;# 
  3152  0692                     	;# 
  3153  0693                     	;# 
  3154  0694                     	;# 
  3155  070C                     	;# 
  3156  070D                     	;# 
  3157  070E                     	;# 
  3158  070F                     	;# 
  3159  0710                     	;# 
  3160  0711                     	;# 
  3161  0712                     	;# 
  3162  0713                     	;# 
  3163  0714                     	;# 
  3164  0716                     	;# 
  3165  0717                     	;# 
  3166  0718                     	;# 
  3167  0719                     	;# 
  3168  071A                     	;# 
  3169  071B                     	;# 
  3170  071C                     	;# 
  3171  071D                     	;# 
  3172  071E                     	;# 
  3173  0796                     	;# 
  3174  0797                     	;# 
  3175  0798                     	;# 
  3176  0799                     	;# 
  3177  079A                     	;# 
  3178  079B                     	;# 
  3179  080C                     	;# 
  3180  080D                     	;# 
  3181  080E                     	;# 
  3182  080F                     	;# 
  3183  0810                     	;# 
  3184  0811                     	;# 
  3185  0812                     	;# 
  3186  0813                     	;# 
  3187  0814                     	;# 
  3188  081A                     	;# 
  3189  081B                     	;# 
  3190  081C                     	;# 
  3191  081D                     	;# 
  3192  081E                     	;# 
  3193  081F                     	;# 
  3194  088C                     	;# 
  3195  088D                     	;# 
  3196  088E                     	;# 
  3197  088F                     	;# 
  3198  0890                     	;# 
  3199  0891                     	;# 
  3200  0892                     	;# 
  3201  0893                     	;# 
  3202  0895                     	;# 
  3203  0896                     	;# 
  3204  0897                     	;# 
  3205  0898                     	;# 
  3206  0899                     	;# 
  3207  089A                     	;# 
  3208  089B                     	;# 
  3209  090C                     	;# 
  3210  090E                     	;# 
  3211  090F                     	;# 
  3212  091F                     	;# 
  3213  091F                     	;# 
  3214  098F                     	;# 
  3215  098F                     	;# 
  3216  0990                     	;# 
  3217  0991                     	;# 
  3218  0992                     	;# 
  3219  0993                     	;# 
  3220  0994                     	;# 
  3221  0995                     	;# 
  3222  0996                     	;# 
  3223  0997                     	;# 
  3224  0E0F                     	;# 
  3225  0E10                     	;# 
  3226  0E11                     	;# 
  3227  0E12                     	;# 
  3228  0E13                     	;# 
  3229  0E14                     	;# 
  3230  0E15                     	;# 
  3231  0E16                     	;# 
  3232  0E17                     	;# 
  3233  0E18                     	;# 
  3234  0E19                     	;# 
  3235  0E1A                     	;# 
  3236  0E1B                     	;# 
  3237  0E1C                     	;# 
  3238  0E1D                     	;# 
  3239  0E1E                     	;# 
  3240  0E1F                     	;# 
  3241  0E20                     	;# 
  3242  0E21                     	;# 
  3243  0E22                     	;# 
  3244  0E23                     	;# 
  3245  0E24                     	;# 
  3246  0E25                     	;# 
  3247  0E26                     	;# 
  3248  0E27                     	;# 
  3249  0E28                     	;# 
  3250  0E29                     	;# 
  3251  0E2A                     	;# 
  3252  0E2B                     	;# 
  3253  0E2C                     	;# 
  3254  0E2D                     	;# 
  3255  0E2E                     	;# 
  3256  0E2F                     	;# 
  3257  0E30                     	;# 
  3258  0E31                     	;# 
  3259  0E32                     	;# 
  3260  0E33                     	;# 
  3261  0E34                     	;# 
  3262  0E35                     	;# 
  3263  0E36                     	;# 
  3264  0E37                     	;# 
  3265  0E8F                     	;# 
  3266  0E90                     	;# 
  3267  0E91                     	;# 
  3268  0E92                     	;# 
  3269  0E93                     	;# 
  3270  0E94                     	;# 
  3271  0E95                     	;# 
  3272  0E96                     	;# 
  3273  0E97                     	;# 
  3274  0E9C                     	;# 
  3275  0E9D                     	;# 
  3276  0E9E                     	;# 
  3277  0EA1                     	;# 
  3278  0EA2                     	;# 
  3279  0EA3                     	;# 
  3280  0EA4                     	;# 
  3281  0EA5                     	;# 
  3282  0EA9                     	;# 
  3283  0EAA                     	;# 
  3284  0EAB                     	;# 
  3285  0EAC                     	;# 
  3286  0EB1                     	;# 
  3287  0EB2                     	;# 
  3288  0EB3                     	;# 
  3289  0EB8                     	;# 
  3290  0EB9                     	;# 
  3291  0EBA                     	;# 
  3292  0EBB                     	;# 
  3293  0EBC                     	;# 
  3294  0EBD                     	;# 
  3295  0EBE                     	;# 
  3296  0EC3                     	;# 
  3297  0EC5                     	;# 
  3298  0EC6                     	;# 
  3299  0EC7                     	;# 
  3300  0EC8                     	;# 
  3301  0EC9                     	;# 
  3302  0ECA                     	;# 
  3303  0ECB                     	;# 
  3304  0ECC                     	;# 
  3305  0F10                     	;# 
  3306  0F11                     	;# 
  3307  0F12                     	;# 
  3308  0F13                     	;# 
  3309  0F14                     	;# 
  3310  0F15                     	;# 
  3311  0F16                     	;# 
  3312  0F17                     	;# 
  3313  0F18                     	;# 
  3314  0F19                     	;# 
  3315  0F1A                     	;# 
  3316  0F1B                     	;# 
  3317  0F1C                     	;# 
  3318  0F1D                     	;# 
  3319  0F1E                     	;# 
  3320  0F1F                     	;# 
  3321  0F20                     	;# 
  3322  0F21                     	;# 
  3323  0F22                     	;# 
  3324  0F23                     	;# 
  3325  0F24                     	;# 
  3326  0F25                     	;# 
  3327  0F26                     	;# 
  3328  0F27                     	;# 
  3329  0F28                     	;# 
  3330  0F29                     	;# 
  3331  0F2A                     	;# 
  3332  0F2B                     	;# 
  3333  0F2C                     	;# 
  3334  0F2D                     	;# 
  3335  0F2E                     	;# 
  3336  0F2F                     	;# 
  3337  0F30                     	;# 
  3338  0F31                     	;# 
  3339  0F32                     	;# 
  3340  0F38                     	;# 
  3341  0F39                     	;# 
  3342  0F3A                     	;# 
  3343  0F3B                     	;# 
  3344  0F3C                     	;# 
  3345  0F3D                     	;# 
  3346  0F3E                     	;# 
  3347  0F3F                     	;# 
  3348  0F40                     	;# 
  3349  0F41                     	;# 
  3350  0F43                     	;# 
  3351  0F44                     	;# 
  3352  0F45                     	;# 
  3353  0F46                     	;# 
  3354  0F47                     	;# 
  3355  0F48                     	;# 
  3356  0F49                     	;# 
  3357  0F4A                     	;# 
  3358  0F4B                     	;# 
  3359  0F4C                     	;# 
  3360  0F4E                     	;# 
  3361  0F4F                     	;# 
  3362  0F50                     	;# 
  3363  0F51                     	;# 
  3364  0F52                     	;# 
  3365  0F53                     	;# 
  3366  0F54                     	;# 
  3367  0F55                     	;# 
  3368  0F56                     	;# 
  3369  0F57                     	;# 
  3370  0F59                     	;# 
  3371  0F5A                     	;# 
  3372  0F5B                     	;# 
  3373  0F5C                     	;# 
  3374  0F5D                     	;# 
  3375  0F61                     	;# 
  3376  0F62                     	;# 
  3377  0F64                     	;# 
  3378  0F65                     	;# 
  3379  0F66                     	;# 
  3380  0F67                     	;# 
  3381  0F68                     	;# 
  3382  0F69                     	;# 
  3383  0F6A                     	;# 
  3384  0F6B                     	;# 
  3385  0F6C                     	;# 
  3386  0F6D                     	;# 
  3387  0FE4                     	;# 
  3388  0FE5                     	;# 
  3389  0FE6                     	;# 
  3390  0FE7                     	;# 
  3391  0FE8                     	;# 
  3392  0FE9                     	;# 
  3393  0FEA                     	;# 
  3394  0FEB                     	;# 
  3395  0FED                     	;# 
  3396  0FEE                     	;# 
  3397  0FEF                     	;# 
  3398  0000                     	;# 
  3399  0001                     	;# 
  3400  0002                     	;# 
  3401  0003                     	;# 
  3402  0004                     	;# 
  3403  0005                     	;# 
  3404  0006                     	;# 
  3405  0007                     	;# 
  3406  0008                     	;# 
  3407  0009                     	;# 
  3408  000A                     	;# 
  3409  000B                     	;# 
  3410  000C                     	;# 
  3411  000D                     	;# 
  3412  000E                     	;# 
  3413  000F                     	;# 
  3414  0010                     	;# 
  3415  0011                     	;# 
  3416  0012                     	;# 
  3417  0013                     	;# 
  3418  0014                     	;# 
  3419  0015                     	;# 
  3420  0016                     	;# 
  3421  0017                     	;# 
  3422  0018                     	;# 
  3423  0019                     	;# 
  3424  001A                     	;# 
  3425  001C                     	;# 
  3426  001C                     	;# 
  3427  001D                     	;# 
  3428  001D                     	;# 
  3429  001E                     	;# 
  3430  001F                     	;# 
  3431  008C                     	;# 
  3432  008C                     	;# 
  3433  008D                     	;# 
  3434  008E                     	;# 
  3435  008E                     	;# 
  3436  008F                     	;# 
  3437  0090                     	;# 
  3438  0090                     	;# 
  3439  0091                     	;# 
  3440  0093                     	;# 
  3441  0094                     	;# 
  3442  0095                     	;# 
  3443  0096                     	;# 
  3444  0097                     	;# 
  3445  0098                     	;# 
  3446  0099                     	;# 
  3447  009A                     	;# 
  3448  009B                     	;# 
  3449  009C                     	;# 
  3450  009D                     	;# 
  3451  009E                     	;# 
  3452  010C                     	;# 
  3453  010D                     	;# 
  3454  010E                     	;# 
  3455  010E                     	;# 
  3456  010F                     	;# 
  3457  0110                     	;# 
  3458  0110                     	;# 
  3459  0111                     	;# 
  3460  0112                     	;# 
  3461  0112                     	;# 
  3462  0113                     	;# 
  3463  0114                     	;# 
  3464  0114                     	;# 
  3465  0115                     	;# 
  3466  0116                     	;# 
  3467  0116                     	;# 
  3468  0117                     	;# 
  3469  0119                     	;# 
  3470  0119                     	;# 
  3471  0119                     	;# 
  3472  011A                     	;# 
  3473  011A                     	;# 
  3474  011A                     	;# 
  3475  011B                     	;# 
  3476  011B                     	;# 
  3477  011B                     	;# 
  3478  011B                     	;# 
  3479  011B                     	;# 
  3480  011C                     	;# 
  3481  011C                     	;# 
  3482  011C                     	;# 
  3483  011D                     	;# 
  3484  011D                     	;# 
  3485  011D                     	;# 
  3486  011E                     	;# 
  3487  011E                     	;# 
  3488  011E                     	;# 
  3489  011F                     	;# 
  3490  011F                     	;# 
  3491  011F                     	;# 
  3492  011F                     	;# 
  3493  011F                     	;# 
  3494  018C                     	;# 
  3495  018D                     	;# 
  3496  018E                     	;# 
  3497  018F                     	;# 
  3498  0190                     	;# 
  3499  0191                     	;# 
  3500  0192                     	;# 
  3501  0196                     	;# 
  3502  0197                     	;# 
  3503  0198                     	;# 
  3504  0199                     	;# 
  3505  019A                     	;# 
  3506  019B                     	;# 
  3507  019C                     	;# 
  3508  020C                     	;# 
  3509  020C                     	;# 
  3510  020D                     	;# 
  3511  020E                     	;# 
  3512  020F                     	;# 
  3513  020F                     	;# 
  3514  0210                     	;# 
  3515  0210                     	;# 
  3516  0211                     	;# 
  3517  0211                     	;# 
  3518  0212                     	;# 
  3519  0212                     	;# 
  3520  0213                     	;# 
  3521  0214                     	;# 
  3522  0215                     	;# 
  3523  0215                     	;# 
  3524  0216                     	;# 
  3525  0216                     	;# 
  3526  0217                     	;# 
  3527  0217                     	;# 
  3528  0218                     	;# 
  3529  0218                     	;# 
  3530  0219                     	;# 
  3531  021A                     	;# 
  3532  021B                     	;# 
  3533  021B                     	;# 
  3534  021C                     	;# 
  3535  021C                     	;# 
  3536  021D                     	;# 
  3537  021D                     	;# 
  3538  021E                     	;# 
  3539  021F                     	;# 
  3540  028C                     	;# 
  3541  028C                     	;# 
  3542  028D                     	;# 
  3543  028D                     	;# 
  3544  028E                     	;# 
  3545  028F                     	;# 
  3546  0290                     	;# 
  3547  0290                     	;# 
  3548  0291                     	;# 
  3549  0292                     	;# 
  3550  0292                     	;# 
  3551  0293                     	;# 
  3552  0293                     	;# 
  3553  0294                     	;# 
  3554  0295                     	;# 
  3555  0296                     	;# 
  3556  0296                     	;# 
  3557  0297                     	;# 
  3558  0298                     	;# 
  3559  0298                     	;# 
  3560  0299                     	;# 
  3561  0299                     	;# 
  3562  029A                     	;# 
  3563  029B                     	;# 
  3564  029C                     	;# 
  3565  029C                     	;# 
  3566  029D                     	;# 
  3567  030C                     	;# 
  3568  030C                     	;# 
  3569  030D                     	;# 
  3570  030E                     	;# 
  3571  030F                     	;# 
  3572  0310                     	;# 
  3573  0310                     	;# 
  3574  0311                     	;# 
  3575  0312                     	;# 
  3576  0313                     	;# 
  3577  0314                     	;# 
  3578  0314                     	;# 
  3579  0315                     	;# 
  3580  0316                     	;# 
  3581  0317                     	;# 
  3582  0318                     	;# 
  3583  0318                     	;# 
  3584  0319                     	;# 
  3585  031A                     	;# 
  3586  031B                     	;# 
  3587  031C                     	;# 
  3588  031C                     	;# 
  3589  031D                     	;# 
  3590  031E                     	;# 
  3591  031F                     	;# 
  3592  038C                     	;# 
  3593  038C                     	;# 
  3594  038D                     	;# 
  3595  038E                     	;# 
  3596  0390                     	;# 
  3597  0390                     	;# 
  3598  0391                     	;# 
  3599  0392                     	;# 
  3600  040C                     	;# 
  3601  040D                     	;# 
  3602  040E                     	;# 
  3603  040F                     	;# 
  3604  0410                     	;# 
  3605  0411                     	;# 
  3606  0416                     	;# 
  3607  0416                     	;# 
  3608  0417                     	;# 
  3609  0418                     	;# 
  3610  0418                     	;# 
  3611  0419                     	;# 
  3612  041A                     	;# 
  3613  041A                     	;# 
  3614  041B                     	;# 
  3615  041C                     	;# 
  3616  041C                     	;# 
  3617  041D                     	;# 
  3618  041E                     	;# 
  3619  041F                     	;# 
  3620  048C                     	;# 
  3621  048C                     	;# 
  3622  048D                     	;# 
  3623  048E                     	;# 
  3624  048F                     	;# 
  3625  048F                     	;# 
  3626  0490                     	;# 
  3627  0491                     	;# 
  3628  0492                     	;# 
  3629  0492                     	;# 
  3630  0493                     	;# 
  3631  0494                     	;# 
  3632  0495                     	;# 
  3633  0495                     	;# 
  3634  0496                     	;# 
  3635  0497                     	;# 
  3636  0498                     	;# 
  3637  0499                     	;# 
  3638  049A                     	;# 
  3639  049B                     	;# 
  3640  049C                     	;# 
  3641  049D                     	;# 
  3642  050C                     	;# 
  3643  050C                     	;# 
  3644  050D                     	;# 
  3645  050E                     	;# 
  3646  050F                     	;# 
  3647  050F                     	;# 
  3648  0510                     	;# 
  3649  0511                     	;# 
  3650  0512                     	;# 
  3651  0512                     	;# 
  3652  0513                     	;# 
  3653  0514                     	;# 
  3654  0515                     	;# 
  3655  0515                     	;# 
  3656  0516                     	;# 
  3657  0517                     	;# 
  3658  0518                     	;# 
  3659  0519                     	;# 
  3660  051A                     	;# 
  3661  051B                     	;# 
  3662  051C                     	;# 
  3663  051D                     	;# 
  3664  058C                     	;# 
  3665  058C                     	;# 
  3666  058D                     	;# 
  3667  058E                     	;# 
  3668  058F                     	;# 
  3669  058F                     	;# 
  3670  0590                     	;# 
  3671  0591                     	;# 
  3672  0592                     	;# 
  3673  0593                     	;# 
  3674  060C                     	;# 
  3675  060D                     	;# 
  3676  060E                     	;# 
  3677  060F                     	;# 
  3678  0610                     	;# 
  3679  0611                     	;# 
  3680  0612                     	;# 
  3681  0613                     	;# 
  3682  0614                     	;# 
  3683  0616                     	;# 
  3684  0617                     	;# 
  3685  0618                     	;# 
  3686  0619                     	;# 
  3687  061A                     	;# 
  3688  061B                     	;# 
  3689  061C                     	;# 
  3690  061D                     	;# 
  3691  061E                     	;# 
  3692  068C                     	;# 
  3693  068D                     	;# 
  3694  068E                     	;# 
  3695  068F                     	;# 
  3696  0690                     	;# 
  3697  0691                     	;# 
  3698  0692                     	;# 
  3699  0693                     	;# 
  3700  0694                     	;# 
  3701  070C                     	;# 
  3702  070D                     	;# 
  3703  070E                     	;# 
  3704  070F                     	;# 
  3705  0710                     	;# 
  3706  0711                     	;# 
  3707  0712                     	;# 
  3708  0713                     	;# 
  3709  0714                     	;# 
  3710  0716                     	;# 
  3711  0717                     	;# 
  3712  0718                     	;# 
  3713  0719                     	;# 
  3714  071A                     	;# 
  3715  071B                     	;# 
  3716  071C                     	;# 
  3717  071D                     	;# 
  3718  071E                     	;# 
  3719  0796                     	;# 
  3720  0797                     	;# 
  3721  0798                     	;# 
  3722  0799                     	;# 
  3723  079A                     	;# 
  3724  079B                     	;# 
  3725  080C                     	;# 
  3726  080D                     	;# 
  3727  080E                     	;# 
  3728  080F                     	;# 
  3729  0810                     	;# 
  3730  0811                     	;# 
  3731  0812                     	;# 
  3732  0813                     	;# 
  3733  0814                     	;# 
  3734  081A                     	;# 
  3735  081B                     	;# 
  3736  081C                     	;# 
  3737  081D                     	;# 
  3738  081E                     	;# 
  3739  081F                     	;# 
  3740  088C                     	;# 
  3741  088D                     	;# 
  3742  088E                     	;# 
  3743  088F                     	;# 
  3744  0890                     	;# 
  3745  0891                     	;# 
  3746  0892                     	;# 
  3747  0893                     	;# 
  3748  0895                     	;# 
  3749  0896                     	;# 
  3750  0897                     	;# 
  3751  0898                     	;# 
  3752  0899                     	;# 
  3753  089A                     	;# 
  3754  089B                     	;# 
  3755  090C                     	;# 
  3756  090E                     	;# 
  3757  090F                     	;# 
  3758  091F                     	;# 
  3759  091F                     	;# 
  3760  098F                     	;# 
  3761  098F                     	;# 
  3762  0990                     	;# 
  3763  0991                     	;# 
  3764  0992                     	;# 
  3765  0993                     	;# 
  3766  0994                     	;# 
  3767  0995                     	;# 
  3768  0996                     	;# 
  3769  0997                     	;# 
  3770  0E0F                     	;# 
  3771  0E10                     	;# 
  3772  0E11                     	;# 
  3773  0E12                     	;# 
  3774  0E13                     	;# 
  3775  0E14                     	;# 
  3776  0E15                     	;# 
  3777  0E16                     	;# 
  3778  0E17                     	;# 
  3779  0E18                     	;# 
  3780  0E19                     	;# 
  3781  0E1A                     	;# 
  3782  0E1B                     	;# 
  3783  0E1C                     	;# 
  3784  0E1D                     	;# 
  3785  0E1E                     	;# 
  3786  0E1F                     	;# 
  3787  0E20                     	;# 
  3788  0E21                     	;# 
  3789  0E22                     	;# 
  3790  0E23                     	;# 
  3791  0E24                     	;# 
  3792  0E25                     	;# 
  3793  0E26                     	;# 
  3794  0E27                     	;# 
  3795  0E28                     	;# 
  3796  0E29                     	;# 
  3797  0E2A                     	;# 
  3798  0E2B                     	;# 
  3799  0E2C                     	;# 
  3800  0E2D                     	;# 
  3801  0E2E                     	;# 
  3802  0E2F                     	;# 
  3803  0E30                     	;# 
  3804  0E31                     	;# 
  3805  0E32                     	;# 
  3806  0E33                     	;# 
  3807  0E34                     	;# 
  3808  0E35                     	;# 
  3809  0E36                     	;# 
  3810  0E37                     	;# 
  3811  0E8F                     	;# 
  3812  0E90                     	;# 
  3813  0E91                     	;# 
  3814  0E92                     	;# 
  3815  0E93                     	;# 
  3816  0E94                     	;# 
  3817  0E95                     	;# 
  3818  0E96                     	;# 
  3819  0E97                     	;# 
  3820  0E9C                     	;# 
  3821  0E9D                     	;# 
  3822  0E9E                     	;# 
  3823  0EA1                     	;# 
  3824  0EA2                     	;# 
  3825  0EA3                     	;# 
  3826  0EA4                     	;# 
  3827  0EA5                     	;# 
  3828  0EA9                     	;# 
  3829  0EAA                     	;# 
  3830  0EAB                     	;# 
  3831  0EAC                     	;# 
  3832  0EB1                     	;# 
  3833  0EB2                     	;# 
  3834  0EB3                     	;# 
  3835  0EB8                     	;# 
  3836  0EB9                     	;# 
  3837  0EBA                     	;# 
  3838  0EBB                     	;# 
  3839  0EBC                     	;# 
  3840  0EBD                     	;# 
  3841  0EBE                     	;# 
  3842  0EC3                     	;# 
  3843  0EC5                     	;# 
  3844  0EC6                     	;# 
  3845  0EC7                     	;# 
  3846  0EC8                     	;# 
  3847  0EC9                     	;# 
  3848  0ECA                     	;# 
  3849  0ECB                     	;# 
  3850  0ECC                     	;# 
  3851  0F10                     	;# 
  3852  0F11                     	;# 
  3853  0F12                     	;# 
  3854  0F13                     	;# 
  3855  0F14                     	;# 
  3856  0F15                     	;# 
  3857  0F16                     	;# 
  3858  0F17                     	;# 
  3859  0F18                     	;# 
  3860  0F19                     	;# 
  3861  0F1A                     	;# 
  3862  0F1B                     	;# 
  3863  0F1C                     	;# 
  3864  0F1D                     	;# 
  3865  0F1E                     	;# 
  3866  0F1F                     	;# 
  3867  0F20                     	;# 
  3868  0F21                     	;# 
  3869  0F22                     	;# 
  3870  0F23                     	;# 
  3871  0F24                     	;# 
  3872  0F25                     	;# 
  3873  0F26                     	;# 
  3874  0F27                     	;# 
  3875  0F28                     	;# 
  3876  0F29                     	;# 
  3877  0F2A                     	;# 
  3878  0F2B                     	;# 
  3879  0F2C                     	;# 
  3880  0F2D                     	;# 
  3881  0F2E                     	;# 
  3882  0F2F                     	;# 
  3883  0F30                     	;# 
  3884  0F31                     	;# 
  3885  0F32                     	;# 
  3886  0F38                     	;# 
  3887  0F39                     	;# 
  3888  0F3A                     	;# 
  3889  0F3B                     	;# 
  3890  0F3C                     	;# 
  3891  0F3D                     	;# 
  3892  0F3E                     	;# 
  3893  0F3F                     	;# 
  3894  0F40                     	;# 
  3895  0F41                     	;# 
  3896  0F43                     	;# 
  3897  0F44                     	;# 
  3898  0F45                     	;# 
  3899  0F46                     	;# 
  3900  0F47                     	;# 
  3901  0F48                     	;# 
  3902  0F49                     	;# 
  3903  0F4A                     	;# 
  3904  0F4B                     	;# 
  3905  0F4C                     	;# 
  3906  0F4E                     	;# 
  3907  0F4F                     	;# 
  3908  0F50                     	;# 
  3909  0F51                     	;# 
  3910  0F52                     	;# 
  3911  0F53                     	;# 
  3912  0F54                     	;# 
  3913  0F55                     	;# 
  3914  0F56                     	;# 
  3915  0F57                     	;# 
  3916  0F59                     	;# 
  3917  0F5A                     	;# 
  3918  0F5B                     	;# 
  3919  0F5C                     	;# 
  3920  0F5D                     	;# 
  3921  0F61                     	;# 
  3922  0F62                     	;# 
  3923  0F64                     	;# 
  3924  0F65                     	;# 
  3925  0F66                     	;# 
  3926  0F67                     	;# 
  3927  0F68                     	;# 
  3928  0F69                     	;# 
  3929  0F6A                     	;# 
  3930  0F6B                     	;# 
  3931  0F6C                     	;# 
  3932  0F6D                     	;# 
  3933  0FE4                     	;# 
  3934  0FE5                     	;# 
  3935  0FE6                     	;# 
  3936  0FE7                     	;# 
  3937  0FE8                     	;# 
  3938  0FE9                     	;# 
  3939  0FEA                     	;# 
  3940  0FEB                     	;# 
  3941  0FED                     	;# 
  3942  0FEE                     	;# 
  3943  0FEF                     	;# 
  3944  0000                     	;# 
  3945  0001                     	;# 
  3946  0002                     	;# 
  3947  0003                     	;# 
  3948  0004                     	;# 
  3949  0005                     	;# 
  3950  0006                     	;# 
  3951  0007                     	;# 
  3952  0008                     	;# 
  3953  0009                     	;# 
  3954  000A                     	;# 
  3955  000B                     	;# 
  3956  000C                     	;# 
  3957  000D                     	;# 
  3958  000E                     	;# 
  3959  000F                     	;# 
  3960  0010                     	;# 
  3961  0011                     	;# 
  3962  0012                     	;# 
  3963  0013                     	;# 
  3964  0014                     	;# 
  3965  0015                     	;# 
  3966  0016                     	;# 
  3967  0017                     	;# 
  3968  0018                     	;# 
  3969  0019                     	;# 
  3970  001A                     	;# 
  3971  001C                     	;# 
  3972  001C                     	;# 
  3973  001D                     	;# 
  3974  001D                     	;# 
  3975  001E                     	;# 
  3976  001F                     	;# 
  3977  008C                     	;# 
  3978  008C                     	;# 
  3979  008D                     	;# 
  3980  008E                     	;# 
  3981  008E                     	;# 
  3982  008F                     	;# 
  3983  0090                     	;# 
  3984  0090                     	;# 
  3985  0091                     	;# 
  3986  0093                     	;# 
  3987  0094                     	;# 
  3988  0095                     	;# 
  3989  0096                     	;# 
  3990  0097                     	;# 
  3991  0098                     	;# 
  3992  0099                     	;# 
  3993  009A                     	;# 
  3994  009B                     	;# 
  3995  009C                     	;# 
  3996  009D                     	;# 
  3997  009E                     	;# 
  3998  010C                     	;# 
  3999  010D                     	;# 
  4000  010E                     	;# 
  4001  010E                     	;# 
  4002  010F                     	;# 
  4003  0110                     	;# 
  4004  0110                     	;# 
  4005  0111                     	;# 
  4006  0112                     	;# 
  4007  0112                     	;# 
  4008  0113                     	;# 
  4009  0114                     	;# 
  4010  0114                     	;# 
  4011  0115                     	;# 
  4012  0116                     	;# 
  4013  0116                     	;# 
  4014  0117                     	;# 
  4015  0119                     	;# 
  4016  0119                     	;# 
  4017  0119                     	;# 
  4018  011A                     	;# 
  4019  011A                     	;# 
  4020  011A                     	;# 
  4021  011B                     	;# 
  4022  011B                     	;# 
  4023  011B                     	;# 
  4024  011B                     	;# 
  4025  011B                     	;# 
  4026  011C                     	;# 
  4027  011C                     	;# 
  4028  011C                     	;# 
  4029  011D                     	;# 
  4030  011D                     	;# 
  4031  011D                     	;# 
  4032  011E                     	;# 
  4033  011E                     	;# 
  4034  011E                     	;# 
  4035  011F                     	;# 
  4036  011F                     	;# 
  4037  011F                     	;# 
  4038  011F                     	;# 
  4039  011F                     	;# 
  4040  018C                     	;# 
  4041  018D                     	;# 
  4042  018E                     	;# 
  4043  018F                     	;# 
  4044  0190                     	;# 
  4045  0191                     	;# 
  4046  0192                     	;# 
  4047  0196                     	;# 
  4048  0197                     	;# 
  4049  0198                     	;# 
  4050  0199                     	;# 
  4051  019A                     	;# 
  4052  019B                     	;# 
  4053  019C                     	;# 
  4054  020C                     	;# 
  4055  020C                     	;# 
  4056  020D                     	;# 
  4057  020E                     	;# 
  4058  020F                     	;# 
  4059  020F                     	;# 
  4060  0210                     	;# 
  4061  0210                     	;# 
  4062  0211                     	;# 
  4063  0211                     	;# 
  4064  0212                     	;# 
  4065  0212                     	;# 
  4066  0213                     	;# 
  4067  0214                     	;# 
  4068  0215                     	;# 
  4069  0215                     	;# 
  4070  0216                     	;# 
  4071  0216                     	;# 
  4072  0217                     	;# 
  4073  0217                     	;# 
  4074  0218                     	;# 
  4075  0218                     	;# 
  4076  0219                     	;# 
  4077  021A                     	;# 
  4078  021B                     	;# 
  4079  021B                     	;# 
  4080  021C                     	;# 
  4081  021C                     	;# 
  4082  021D                     	;# 
  4083  021D                     	;# 
  4084  021E                     	;# 
  4085  021F                     	;# 
  4086  028C                     	;# 
  4087  028C                     	;# 
  4088  028D                     	;# 
  4089  028D                     	;# 
  4090  028E                     	;# 
  4091  028F                     	;# 
  4092  0290                     	;# 
  4093  0290                     	;# 
  4094  0291                     	;# 
  4095  0292                     	;# 
  4096  0292                     	;# 
  4097  0293                     	;# 
  4098  0293                     	;# 
  4099  0294                     	;# 
  4100  0295                     	;# 
  4101  0296                     	;# 
  4102  0296                     	;# 
  4103  0297                     	;# 
  4104  0298                     	;# 
  4105  0298                     	;# 
  4106  0299                     	;# 
  4107  0299                     	;# 
  4108  029A                     	;# 
  4109  029B                     	;# 
  4110  029C                     	;# 
  4111  029C                     	;# 
  4112  029D                     	;# 
  4113  030C                     	;# 
  4114  030C                     	;# 
  4115  030D                     	;# 
  4116  030E                     	;# 
  4117  030F                     	;# 
  4118  0310                     	;# 
  4119  0310                     	;# 
  4120  0311                     	;# 
  4121  0312                     	;# 
  4122  0313                     	;# 
  4123  0314                     	;# 
  4124  0314                     	;# 
  4125  0315                     	;# 
  4126  0316                     	;# 
  4127  0317                     	;# 
  4128  0318                     	;# 
  4129  0318                     	;# 
  4130  0319                     	;# 
  4131  031A                     	;# 
  4132  031B                     	;# 
  4133  031C                     	;# 
  4134  031C                     	;# 
  4135  031D                     	;# 
  4136  031E                     	;# 
  4137  031F                     	;# 
  4138  038C                     	;# 
  4139  038C                     	;# 
  4140  038D                     	;# 
  4141  038E                     	;# 
  4142  0390                     	;# 
  4143  0390                     	;# 
  4144  0391                     	;# 
  4145  0392                     	;# 
  4146  040C                     	;# 
  4147  040D                     	;# 
  4148  040E                     	;# 
  4149  040F                     	;# 
  4150  0410                     	;# 
  4151  0411                     	;# 
  4152  0416                     	;# 
  4153  0416                     	;# 
  4154  0417                     	;# 
  4155  0418                     	;# 
  4156  0418                     	;# 
  4157  0419                     	;# 
  4158  041A                     	;# 
  4159  041A                     	;# 
  4160  041B                     	;# 
  4161  041C                     	;# 
  4162  041C                     	;# 
  4163  041D                     	;# 
  4164  041E                     	;# 
  4165  041F                     	;# 
  4166  048C                     	;# 
  4167  048C                     	;# 
  4168  048D                     	;# 
  4169  048E                     	;# 
  4170  048F                     	;# 
  4171  048F                     	;# 
  4172  0490                     	;# 
  4173  0491                     	;# 
  4174  0492                     	;# 
  4175  0492                     	;# 
  4176  0493                     	;# 
  4177  0494                     	;# 
  4178  0495                     	;# 
  4179  0495                     	;# 
  4180  0496                     	;# 
  4181  0497                     	;# 
  4182  0498                     	;# 
  4183  0499                     	;# 
  4184  049A                     	;# 
  4185  049B                     	;# 
  4186  049C                     	;# 
  4187  049D                     	;# 
  4188  050C                     	;# 
  4189  050C                     	;# 
  4190  050D                     	;# 
  4191  050E                     	;# 
  4192  050F                     	;# 
  4193  050F                     	;# 
  4194  0510                     	;# 
  4195  0511                     	;# 
  4196  0512                     	;# 
  4197  0512                     	;# 
  4198  0513                     	;# 
  4199  0514                     	;# 
  4200  0515                     	;# 
  4201  0515                     	;# 
  4202  0516                     	;# 
  4203  0517                     	;# 
  4204  0518                     	;# 
  4205  0519                     	;# 
  4206  051A                     	;# 
  4207  051B                     	;# 
  4208  051C                     	;# 
  4209  051D                     	;# 
  4210  058C                     	;# 
  4211  058C                     	;# 
  4212  058D                     	;# 
  4213  058E                     	;# 
  4214  058F                     	;# 
  4215  058F                     	;# 
  4216  0590                     	;# 
  4217  0591                     	;# 
  4218  0592                     	;# 
  4219  0593                     	;# 
  4220  060C                     	;# 
  4221  060D                     	;# 
  4222  060E                     	;# 
  4223  060F                     	;# 
  4224  0610                     	;# 
  4225  0611                     	;# 
  4226  0612                     	;# 
  4227  0613                     	;# 
  4228  0614                     	;# 
  4229  0616                     	;# 
  4230  0617                     	;# 
  4231  0618                     	;# 
  4232  0619                     	;# 
  4233  061A                     	;# 
  4234  061B                     	;# 
  4235  061C                     	;# 
  4236  061D                     	;# 
  4237  061E                     	;# 
  4238  068C                     	;# 
  4239  068D                     	;# 
  4240  068E                     	;# 
  4241  068F                     	;# 
  4242  0690                     	;# 
  4243  0691                     	;# 
  4244  0692                     	;# 
  4245  0693                     	;# 
  4246  0694                     	;# 
  4247  070C                     	;# 
  4248  070D                     	;# 
  4249  070E                     	;# 
  4250  070F                     	;# 
  4251  0710                     	;# 
  4252  0711                     	;# 
  4253  0712                     	;# 
  4254  0713                     	;# 
  4255  0714                     	;# 
  4256  0716                     	;# 
  4257  0717                     	;# 
  4258  0718                     	;# 
  4259  0719                     	;# 
  4260  071A                     	;# 
  4261  071B                     	;# 
  4262  071C                     	;# 
  4263  071D                     	;# 
  4264  071E                     	;# 
  4265  0796                     	;# 
  4266  0797                     	;# 
  4267  0798                     	;# 
  4268  0799                     	;# 
  4269  079A                     	;# 
  4270  079B                     	;# 
  4271  080C                     	;# 
  4272  080D                     	;# 
  4273  080E                     	;# 
  4274  080F                     	;# 
  4275  0810                     	;# 
  4276  0811                     	;# 
  4277  0812                     	;# 
  4278  0813                     	;# 
  4279  0814                     	;# 
  4280  081A                     	;# 
  4281  081B                     	;# 
  4282  081C                     	;# 
  4283  081D                     	;# 
  4284  081E                     	;# 
  4285  081F                     	;# 
  4286  088C                     	;# 
  4287  088D                     	;# 
  4288  088E                     	;# 
  4289  088F                     	;# 
  4290  0890                     	;# 
  4291  0891                     	;# 
  4292  0892                     	;# 
  4293  0893                     	;# 
  4294  0895                     	;# 
  4295  0896                     	;# 
  4296  0897                     	;# 
  4297  0898                     	;# 
  4298  0899                     	;# 
  4299  089A                     	;# 
  4300  089B                     	;# 
  4301  090C                     	;# 
  4302  090E                     	;# 
  4303  090F                     	;# 
  4304  091F                     	;# 
  4305  091F                     	;# 
  4306  098F                     	;# 
  4307  098F                     	;# 
  4308  0990                     	;# 
  4309  0991                     	;# 
  4310  0992                     	;# 
  4311  0993                     	;# 
  4312  0994                     	;# 
  4313  0995                     	;# 
  4314  0996                     	;# 
  4315  0997                     	;# 
  4316  0E0F                     	;# 
  4317  0E10                     	;# 
  4318  0E11                     	;# 
  4319  0E12                     	;# 
  4320  0E13                     	;# 
  4321  0E14                     	;# 
  4322  0E15                     	;# 
  4323  0E16                     	;# 
  4324  0E17                     	;# 
  4325  0E18                     	;# 
  4326  0E19                     	;# 
  4327  0E1A                     	;# 
  4328  0E1B                     	;# 
  4329  0E1C                     	;# 
  4330  0E1D                     	;# 
  4331  0E1E                     	;# 
  4332  0E1F                     	;# 
  4333  0E20                     	;# 
  4334  0E21                     	;# 
  4335  0E22                     	;# 
  4336  0E23                     	;# 
  4337  0E24                     	;# 
  4338  0E25                     	;# 
  4339  0E26                     	;# 
  4340  0E27                     	;# 
  4341  0E28                     	;# 
  4342  0E29                     	;# 
  4343  0E2A                     	;# 
  4344  0E2B                     	;# 
  4345  0E2C                     	;# 
  4346  0E2D                     	;# 
  4347  0E2E                     	;# 
  4348  0E2F                     	;# 
  4349  0E30                     	;# 
  4350  0E31                     	;# 
  4351  0E32                     	;# 
  4352  0E33                     	;# 
  4353  0E34                     	;# 
  4354  0E35                     	;# 
  4355  0E36                     	;# 
  4356  0E37                     	;# 
  4357  0E8F                     	;# 
  4358  0E90                     	;# 
  4359  0E91                     	;# 
  4360  0E92                     	;# 
  4361  0E93                     	;# 
  4362  0E94                     	;# 
  4363  0E95                     	;# 
  4364  0E96                     	;# 
  4365  0E97                     	;# 
  4366  0E9C                     	;# 
  4367  0E9D                     	;# 
  4368  0E9E                     	;# 
  4369  0EA1                     	;# 
  4370  0EA2                     	;# 
  4371  0EA3                     	;# 
  4372  0EA4                     	;# 
  4373  0EA5                     	;# 
  4374  0EA9                     	;# 
  4375  0EAA                     	;# 
  4376  0EAB                     	;# 
  4377  0EAC                     	;# 
  4378  0EB1                     	;# 
  4379  0EB2                     	;# 
  4380  0EB3                     	;# 
  4381  0EB8                     	;# 
  4382  0EB9                     	;# 
  4383  0EBA                     	;# 
  4384  0EBB                     	;# 
  4385  0EBC                     	;# 
  4386  0EBD                     	;# 
  4387  0EBE                     	;# 
  4388  0EC3                     	;# 
  4389  0EC5                     	;# 
  4390  0EC6                     	;# 
  4391  0EC7                     	;# 
  4392  0EC8                     	;# 
  4393  0EC9                     	;# 
  4394  0ECA                     	;# 
  4395  0ECB                     	;# 
  4396  0ECC                     	;# 
  4397  0F10                     	;# 
  4398  0F11                     	;# 
  4399  0F12                     	;# 
  4400  0F13                     	;# 
  4401  0F14                     	;# 
  4402  0F15                     	;# 
  4403  0F16                     	;# 
  4404  0F17                     	;# 
  4405  0F18                     	;# 
  4406  0F19                     	;# 
  4407  0F1A                     	;# 
  4408  0F1B                     	;# 
  4409  0F1C                     	;# 
  4410  0F1D                     	;# 
  4411  0F1E                     	;# 
  4412  0F1F                     	;# 
  4413  0F20                     	;# 
  4414  0F21                     	;# 
  4415  0F22                     	;# 
  4416  0F23                     	;# 
  4417  0F24                     	;# 
  4418  0F25                     	;# 
  4419  0F26                     	;# 
  4420  0F27                     	;# 
  4421  0F28                     	;# 
  4422  0F29                     	;# 
  4423  0F2A                     	;# 
  4424  0F2B                     	;# 
  4425  0F2C                     	;# 
  4426  0F2D                     	;# 
  4427  0F2E                     	;# 
  4428  0F2F                     	;# 
  4429  0F30                     	;# 
  4430  0F31                     	;# 
  4431  0F32                     	;# 
  4432  0F38                     	;# 
  4433  0F39                     	;# 
  4434  0F3A                     	;# 
  4435  0F3B                     	;# 
  4436  0F3C                     	;# 
  4437  0F3D                     	;# 
  4438  0F3E                     	;# 
  4439  0F3F                     	;# 
  4440  0F40                     	;# 
  4441  0F41                     	;# 
  4442  0F43                     	;# 
  4443  0F44                     	;# 
  4444  0F45                     	;# 
  4445  0F46                     	;# 
  4446  0F47                     	;# 
  4447  0F48                     	;# 
  4448  0F49                     	;# 
  4449  0F4A                     	;# 
  4450  0F4B                     	;# 
  4451  0F4C                     	;# 
  4452  0F4E                     	;# 
  4453  0F4F                     	;# 
  4454  0F50                     	;# 
  4455  0F51                     	;# 
  4456  0F52                     	;# 
  4457  0F53                     	;# 
  4458  0F54                     	;# 
  4459  0F55                     	;# 
  4460  0F56                     	;# 
  4461  0F57                     	;# 
  4462  0F59                     	;# 
  4463  0F5A                     	;# 
  4464  0F5B                     	;# 
  4465  0F5C                     	;# 
  4466  0F5D                     	;# 
  4467  0F61                     	;# 
  4468  0F62                     	;# 
  4469  0F64                     	;# 
  4470  0F65                     	;# 
  4471  0F66                     	;# 
  4472  0F67                     	;# 
  4473  0F68                     	;# 
  4474  0F69                     	;# 
  4475  0F6A                     	;# 
  4476  0F6B                     	;# 
  4477  0F6C                     	;# 
  4478  0F6D                     	;# 
  4479  0FE4                     	;# 
  4480  0FE5                     	;# 
  4481  0FE6                     	;# 
  4482  0FE7                     	;# 
  4483  0FE8                     	;# 
  4484  0FE9                     	;# 
  4485  0FEA                     	;# 
  4486  0FEB                     	;# 
  4487  0FED                     	;# 
  4488  0FEE                     	;# 
  4489  0FEF                     	;# 
  4490  0000                     	;# 
  4491  0001                     	;# 
  4492  0002                     	;# 
  4493  0003                     	;# 
  4494  0004                     	;# 
  4495  0005                     	;# 
  4496  0006                     	;# 
  4497  0007                     	;# 
  4498  0008                     	;# 
  4499  0009                     	;# 
  4500  000A                     	;# 
  4501  000B                     	;# 
  4502  000C                     	;# 
  4503  000D                     	;# 
  4504  000E                     	;# 
  4505  000F                     	;# 
  4506  0010                     	;# 
  4507  0011                     	;# 
  4508  0012                     	;# 
  4509  0013                     	;# 
  4510  0014                     	;# 
  4511  0015                     	;# 
  4512  0016                     	;# 
  4513  0017                     	;# 
  4514  0018                     	;# 
  4515  0019                     	;# 
  4516  001A                     	;# 
  4517  001C                     	;# 
  4518  001C                     	;# 
  4519  001D                     	;# 
  4520  001D                     	;# 
  4521  001E                     	;# 
  4522  001F                     	;# 
  4523  008C                     	;# 
  4524  008C                     	;# 
  4525  008D                     	;# 
  4526  008E                     	;# 
  4527  008E                     	;# 
  4528  008F                     	;# 
  4529  0090                     	;# 
  4530  0090                     	;# 
  4531  0091                     	;# 
  4532  0093                     	;# 
  4533  0094                     	;# 
  4534  0095                     	;# 
  4535  0096                     	;# 
  4536  0097                     	;# 
  4537  0098                     	;# 
  4538  0099                     	;# 
  4539  009A                     	;# 
  4540  009B                     	;# 
  4541  009C                     	;# 
  4542  009D                     	;# 
  4543  009E                     	;# 
  4544  010C                     	;# 
  4545  010D                     	;# 
  4546  010E                     	;# 
  4547  010E                     	;# 
  4548  010F                     	;# 
  4549  0110                     	;# 
  4550  0110                     	;# 
  4551  0111                     	;# 
  4552  0112                     	;# 
  4553  0112                     	;# 
  4554  0113                     	;# 
  4555  0114                     	;# 
  4556  0114                     	;# 
  4557  0115                     	;# 
  4558  0116                     	;# 
  4559  0116                     	;# 
  4560  0117                     	;# 
  4561  0119                     	;# 
  4562  0119                     	;# 
  4563  0119                     	;# 
  4564  011A                     	;# 
  4565  011A                     	;# 
  4566  011A                     	;# 
  4567  011B                     	;# 
  4568  011B                     	;# 
  4569  011B                     	;# 
  4570  011B                     	;# 
  4571  011B                     	;# 
  4572  011C                     	;# 
  4573  011C                     	;# 
  4574  011C                     	;# 
  4575  011D                     	;# 
  4576  011D                     	;# 
  4577  011D                     	;# 
  4578  011E                     	;# 
  4579  011E                     	;# 
  4580  011E                     	;# 
  4581  011F                     	;# 
  4582  011F                     	;# 
  4583  011F                     	;# 
  4584  011F                     	;# 
  4585  011F                     	;# 
  4586  018C                     	;# 
  4587  018D                     	;# 
  4588  018E                     	;# 
  4589  018F                     	;# 
  4590  0190                     	;# 
  4591  0191                     	;# 
  4592  0192                     	;# 
  4593  0196                     	;# 
  4594  0197                     	;# 
  4595  0198                     	;# 
  4596  0199                     	;# 
  4597  019A                     	;# 
  4598  019B                     	;# 
  4599  019C                     	;# 
  4600  020C                     	;# 
  4601  020C                     	;# 
  4602  020D                     	;# 
  4603  020E                     	;# 
  4604  020F                     	;# 
  4605  020F                     	;# 
  4606  0210                     	;# 
  4607  0210                     	;# 
  4608  0211                     	;# 
  4609  0211                     	;# 
  4610  0212                     	;# 
  4611  0212                     	;# 
  4612  0213                     	;# 
  4613  0214                     	;# 
  4614  0215                     	;# 
  4615  0215                     	;# 
  4616  0216                     	;# 
  4617  0216                     	;# 
  4618  0217                     	;# 
  4619  0217                     	;# 
  4620  0218                     	;# 
  4621  0218                     	;# 
  4622  0219                     	;# 
  4623  021A                     	;# 
  4624  021B                     	;# 
  4625  021B                     	;# 
  4626  021C                     	;# 
  4627  021C                     	;# 
  4628  021D                     	;# 
  4629  021D                     	;# 
  4630  021E                     	;# 
  4631  021F                     	;# 
  4632  028C                     	;# 
  4633  028C                     	;# 
  4634  028D                     	;# 
  4635  028D                     	;# 
  4636  028E                     	;# 
  4637  028F                     	;# 
  4638  0290                     	;# 
  4639  0290                     	;# 
  4640  0291                     	;# 
  4641  0292                     	;# 
  4642  0292                     	;# 
  4643  0293                     	;# 
  4644  0293                     	;# 
  4645  0294                     	;# 
  4646  0295                     	;# 
  4647  0296                     	;# 
  4648  0296                     	;# 
  4649  0297                     	;# 
  4650  0298                     	;# 
  4651  0298                     	;# 
  4652  0299                     	;# 
  4653  0299                     	;# 
  4654  029A                     	;# 
  4655  029B                     	;# 
  4656  029C                     	;# 
  4657  029C                     	;# 
  4658  029D                     	;# 
  4659  030C                     	;# 
  4660  030C                     	;# 
  4661  030D                     	;# 
  4662  030E                     	;# 
  4663  030F                     	;# 
  4664  0310                     	;# 
  4665  0310                     	;# 
  4666  0311                     	;# 
  4667  0312                     	;# 
  4668  0313                     	;# 
  4669  0314                     	;# 
  4670  0314                     	;# 
  4671  0315                     	;# 
  4672  0316                     	;# 
  4673  0317                     	;# 
  4674  0318                     	;# 
  4675  0318                     	;# 
  4676  0319                     	;# 
  4677  031A                     	;# 
  4678  031B                     	;# 
  4679  031C                     	;# 
  4680  031C                     	;# 
  4681  031D                     	;# 
  4682  031E                     	;# 
  4683  031F                     	;# 
  4684  038C                     	;# 
  4685  038C                     	;# 
  4686  038D                     	;# 
  4687  038E                     	;# 
  4688  0390                     	;# 
  4689  0390                     	;# 
  4690  0391                     	;# 
  4691  0392                     	;# 
  4692  040C                     	;# 
  4693  040D                     	;# 
  4694  040E                     	;# 
  4695  040F                     	;# 
  4696  0410                     	;# 
  4697  0411                     	;# 
  4698  0416                     	;# 
  4699  0416                     	;# 
  4700  0417                     	;# 
  4701  0418                     	;# 
  4702  0418                     	;# 
  4703  0419                     	;# 
  4704  041A                     	;# 
  4705  041A                     	;# 
  4706  041B                     	;# 
  4707  041C                     	;# 
  4708  041C                     	;# 
  4709  041D                     	;# 
  4710  041E                     	;# 
  4711  041F                     	;# 
  4712  048C                     	;# 
  4713  048C                     	;# 
  4714  048D                     	;# 
  4715  048E                     	;# 
  4716  048F                     	;# 
  4717  048F                     	;# 
  4718  0490                     	;# 
  4719  0491                     	;# 
  4720  0492                     	;# 
  4721  0492                     	;# 
  4722  0493                     	;# 
  4723  0494                     	;# 
  4724  0495                     	;# 
  4725  0495                     	;# 
  4726  0496                     	;# 
  4727  0497                     	;# 
  4728  0498                     	;# 
  4729  0499                     	;# 
  4730  049A                     	;# 
  4731  049B                     	;# 
  4732  049C                     	;# 
  4733  049D                     	;# 
  4734  050C                     	;# 
  4735  050C                     	;# 
  4736  050D                     	;# 
  4737  050E                     	;# 
  4738  050F                     	;# 
  4739  050F                     	;# 
  4740  0510                     	;# 
  4741  0511                     	;# 
  4742  0512                     	;# 
  4743  0512                     	;# 
  4744  0513                     	;# 
  4745  0514                     	;# 
  4746  0515                     	;# 
  4747  0515                     	;# 
  4748  0516                     	;# 
  4749  0517                     	;# 
  4750  0518                     	;# 
  4751  0519                     	;# 
  4752  051A                     	;# 
  4753  051B                     	;# 
  4754  051C                     	;# 
  4755  051D                     	;# 
  4756  058C                     	;# 
  4757  058C                     	;# 
  4758  058D                     	;# 
  4759  058E                     	;# 
  4760  058F                     	;# 
  4761  058F                     	;# 
  4762  0590                     	;# 
  4763  0591                     	;# 
  4764  0592                     	;# 
  4765  0593                     	;# 
  4766  060C                     	;# 
  4767  060D                     	;# 
  4768  060E                     	;# 
  4769  060F                     	;# 
  4770  0610                     	;# 
  4771  0611                     	;# 
  4772  0612                     	;# 
  4773  0613                     	;# 
  4774  0614                     	;# 
  4775  0616                     	;# 
  4776  0617                     	;# 
  4777  0618                     	;# 
  4778  0619                     	;# 
  4779  061A                     	;# 
  4780  061B                     	;# 
  4781  061C                     	;# 
  4782  061D                     	;# 
  4783  061E                     	;# 
  4784  068C                     	;# 
  4785  068D                     	;# 
  4786  068E                     	;# 
  4787  068F                     	;# 
  4788  0690                     	;# 
  4789  0691                     	;# 
  4790  0692                     	;# 
  4791  0693                     	;# 
  4792  0694                     	;# 
  4793  070C                     	;# 
  4794  070D                     	;# 
  4795  070E                     	;# 
  4796  070F                     	;# 
  4797  0710                     	;# 
  4798  0711                     	;# 
  4799  0712                     	;# 
  4800  0713                     	;# 
  4801  0714                     	;# 
  4802  0716                     	;# 
  4803  0717                     	;# 
  4804  0718                     	;# 
  4805  0719                     	;# 
  4806  071A                     	;# 
  4807  071B                     	;# 
  4808  071C                     	;# 
  4809  071D                     	;# 
  4810  071E                     	;# 
  4811  0796                     	;# 
  4812  0797                     	;# 
  4813  0798                     	;# 
  4814  0799                     	;# 
  4815  079A                     	;# 
  4816  079B                     	;# 
  4817  080C                     	;# 
  4818  080D                     	;# 
  4819  080E                     	;# 
  4820  080F                     	;# 
  4821  0810                     	;# 
  4822  0811                     	;# 
  4823  0812                     	;# 
  4824  0813                     	;# 
  4825  0814                     	;# 
  4826  081A                     	;# 
  4827  081B                     	;# 
  4828  081C                     	;# 
  4829  081D                     	;# 
  4830  081E                     	;# 
  4831  081F                     	;# 
  4832  088C                     	;# 
  4833  088D                     	;# 
  4834  088E                     	;# 
  4835  088F                     	;# 
  4836  0890                     	;# 
  4837  0891                     	;# 
  4838  0892                     	;# 
  4839  0893                     	;# 
  4840  0895                     	;# 
  4841  0896                     	;# 
  4842  0897                     	;# 
  4843  0898                     	;# 
  4844  0899                     	;# 
  4845  089A                     	;# 
  4846  089B                     	;# 
  4847  090C                     	;# 
  4848  090E                     	;# 
  4849  090F                     	;# 
  4850  091F                     	;# 
  4851  091F                     	;# 
  4852  098F                     	;# 
  4853  098F                     	;# 
  4854  0990                     	;# 
  4855  0991                     	;# 
  4856  0992                     	;# 
  4857  0993                     	;# 
  4858  0994                     	;# 
  4859  0995                     	;# 
  4860  0996                     	;# 
  4861  0997                     	;# 
  4862  0E0F                     	;# 
  4863  0E10                     	;# 
  4864  0E11                     	;# 
  4865  0E12                     	;# 
  4866  0E13                     	;# 
  4867  0E14                     	;# 
  4868  0E15                     	;# 
  4869  0E16                     	;# 
  4870  0E17                     	;# 
  4871  0E18                     	;# 
  4872  0E19                     	;# 
  4873  0E1A                     	;# 
  4874  0E1B                     	;# 
  4875  0E1C                     	;# 
  4876  0E1D                     	;# 
  4877  0E1E                     	;# 
  4878  0E1F                     	;# 
  4879  0E20                     	;# 
  4880  0E21                     	;# 
  4881  0E22                     	;# 
  4882  0E23                     	;# 
  4883  0E24                     	;# 
  4884  0E25                     	;# 
  4885  0E26                     	;# 
  4886  0E27                     	;# 
  4887  0E28                     	;# 
  4888  0E29                     	;# 
  4889  0E2A                     	;# 
  4890  0E2B                     	;# 
  4891  0E2C                     	;# 
  4892  0E2D                     	;# 
  4893  0E2E                     	;# 
  4894  0E2F                     	;# 
  4895  0E30                     	;# 
  4896  0E31                     	;# 
  4897  0E32                     	;# 
  4898  0E33                     	;# 
  4899  0E34                     	;# 
  4900  0E35                     	;# 
  4901  0E36                     	;# 
  4902  0E37                     	;# 
  4903  0E8F                     	;# 
  4904  0E90                     	;# 
  4905  0E91                     	;# 
  4906  0E92                     	;# 
  4907  0E93                     	;# 
  4908  0E94                     	;# 
  4909  0E95                     	;# 
  4910  0E96                     	;# 
  4911  0E97                     	;# 
  4912  0E9C                     	;# 
  4913  0E9D                     	;# 
  4914  0E9E                     	;# 
  4915  0EA1                     	;# 
  4916  0EA2                     	;# 
  4917  0EA3                     	;# 
  4918  0EA4                     	;# 
  4919  0EA5                     	;# 
  4920  0EA9                     	;# 
  4921  0EAA                     	;# 
  4922  0EAB                     	;# 
  4923  0EAC                     	;# 
  4924  0EB1                     	;# 
  4925  0EB2                     	;# 
  4926  0EB3                     	;# 
  4927  0EB8                     	;# 
  4928  0EB9                     	;# 
  4929  0EBA                     	;# 
  4930  0EBB                     	;# 
  4931  0EBC                     	;# 
  4932  0EBD                     	;# 
  4933  0EBE                     	;# 
  4934  0EC3                     	;# 
  4935  0EC5                     	;# 
  4936  0EC6                     	;# 
  4937  0EC7                     	;# 
  4938  0EC8                     	;# 
  4939  0EC9                     	;# 
  4940  0ECA                     	;# 
  4941  0ECB                     	;# 
  4942  0ECC                     	;# 
  4943  0F10                     	;# 
  4944  0F11                     	;# 
  4945  0F12                     	;# 
  4946  0F13                     	;# 
  4947  0F14                     	;# 
  4948  0F15                     	;# 
  4949  0F16                     	;# 
  4950  0F17                     	;# 
  4951  0F18                     	;# 
  4952  0F19                     	;# 
  4953  0F1A                     	;# 
  4954  0F1B                     	;# 
  4955  0F1C                     	;# 
  4956  0F1D                     	;# 
  4957  0F1E                     	;# 
  4958  0F1F                     	;# 
  4959  0F20                     	;# 
  4960  0F21                     	;# 
  4961  0F22                     	;# 
  4962  0F23                     	;# 
  4963  0F24                     	;# 
  4964  0F25                     	;# 
  4965  0F26                     	;# 
  4966  0F27                     	;# 
  4967  0F28                     	;# 
  4968  0F29                     	;# 
  4969  0F2A                     	;# 
  4970  0F2B                     	;# 
  4971  0F2C                     	;# 
  4972  0F2D                     	;# 
  4973  0F2E                     	;# 
  4974  0F2F                     	;# 
  4975  0F30                     	;# 
  4976  0F31                     	;# 
  4977  0F32                     	;# 
  4978  0F38                     	;# 
  4979  0F39                     	;# 
  4980  0F3A                     	;# 
  4981  0F3B                     	;# 
  4982  0F3C                     	;# 
  4983  0F3D                     	;# 
  4984  0F3E                     	;# 
  4985  0F3F                     	;# 
  4986  0F40                     	;# 
  4987  0F41                     	;# 
  4988  0F43                     	;# 
  4989  0F44                     	;# 
  4990  0F45                     	;# 
  4991  0F46                     	;# 
  4992  0F47                     	;# 
  4993  0F48                     	;# 
  4994  0F49                     	;# 
  4995  0F4A                     	;# 
  4996  0F4B                     	;# 
  4997  0F4C                     	;# 
  4998  0F4E                     	;# 
  4999  0F4F                     	;# 
  5000  0F50                     	;# 
  5001  0F51                     	;# 
  5002  0F52                     	;# 
  5003  0F53                     	;# 
  5004  0F54                     	;# 
  5005  0F55                     	;# 
  5006  0F56                     	;# 
  5007  0F57                     	;# 
  5008  0F59                     	;# 
  5009  0F5A                     	;# 
  5010  0F5B                     	;# 
  5011  0F5C                     	;# 
  5012  0F5D                     	;# 
  5013  0F61                     	;# 
  5014  0F62                     	;# 
  5015  0F64                     	;# 
  5016  0F65                     	;# 
  5017  0F66                     	;# 
  5018  0F67                     	;# 
  5019  0F68                     	;# 
  5020  0F69                     	;# 
  5021  0F6A                     	;# 
  5022  0F6B                     	;# 
  5023  0F6C                     	;# 
  5024  0F6D                     	;# 
  5025  0FE4                     	;# 
  5026  0FE5                     	;# 
  5027  0FE6                     	;# 
  5028  0FE7                     	;# 
  5029  0FE8                     	;# 
  5030  0FE9                     	;# 
  5031  0FEA                     	;# 
  5032  0FEB                     	;# 
  5033  0FED                     	;# 
  5034  0FEE                     	;# 
  5035  0FEF                     	;# 
  5036  0000                     	;# 
  5037  0001                     	;# 
  5038  0002                     	;# 
  5039  0003                     	;# 
  5040  0004                     	;# 
  5041  0005                     	;# 
  5042  0006                     	;# 
  5043  0007                     	;# 
  5044  0008                     	;# 
  5045  0009                     	;# 
  5046  000A                     	;# 
  5047  000B                     	;# 
  5048  000C                     	;# 
  5049  000D                     	;# 
  5050  000E                     	;# 
  5051  000F                     	;# 
  5052  0010                     	;# 
  5053  0011                     	;# 
  5054  0012                     	;# 
  5055  0013                     	;# 
  5056  0014                     	;# 
  5057  0015                     	;# 
  5058  0016                     	;# 
  5059  0017                     	;# 
  5060  0018                     	;# 
  5061  0019                     	;# 
  5062  001A                     	;# 
  5063  001C                     	;# 
  5064  001C                     	;# 
  5065  001D                     	;# 
  5066  001D                     	;# 
  5067  001E                     	;# 
  5068  001F                     	;# 
  5069  008C                     	;# 
  5070  008C                     	;# 
  5071  008D                     	;# 
  5072  008E                     	;# 
  5073  008E                     	;# 
  5074  008F                     	;# 
  5075  0090                     	;# 
  5076  0090                     	;# 
  5077  0091                     	;# 
  5078  0093                     	;# 
  5079  0094                     	;# 
  5080  0095                     	;# 
  5081  0096                     	;# 
  5082  0097                     	;# 
  5083  0098                     	;# 
  5084  0099                     	;# 
  5085  009A                     	;# 
  5086  009B                     	;# 
  5087  009C                     	;# 
  5088  009D                     	;# 
  5089  009E                     	;# 
  5090  010C                     	;# 
  5091  010D                     	;# 
  5092  010E                     	;# 
  5093  010E                     	;# 
  5094  010F                     	;# 
  5095  0110                     	;# 
  5096  0110                     	;# 
  5097  0111                     	;# 
  5098  0112                     	;# 
  5099  0112                     	;# 
  5100  0113                     	;# 
  5101  0114                     	;# 
  5102  0114                     	;# 
  5103  0115                     	;# 
  5104  0116                     	;# 
  5105  0116                     	;# 
  5106  0117                     	;# 
  5107  0119                     	;# 
  5108  0119                     	;# 
  5109  0119                     	;# 
  5110  011A                     	;# 
  5111  011A                     	;# 
  5112  011A                     	;# 
  5113  011B                     	;# 
  5114  011B                     	;# 
  5115  011B                     	;# 
  5116  011B                     	;# 
  5117  011B                     	;# 
  5118  011C                     	;# 
  5119  011C                     	;# 
  5120  011C                     	;# 
  5121  011D                     	;# 
  5122  011D                     	;# 
  5123  011D                     	;# 
  5124  011E                     	;# 
  5125  011E                     	;# 
  5126  011E                     	;# 
  5127  011F                     	;# 
  5128  011F                     	;# 
  5129  011F                     	;# 
  5130  011F                     	;# 
  5131  011F                     	;# 
  5132  018C                     	;# 
  5133  018D                     	;# 
  5134  018E                     	;# 
  5135  018F                     	;# 
  5136  0190                     	;# 
  5137  0191                     	;# 
  5138  0192                     	;# 
  5139  0196                     	;# 
  5140  0197                     	;# 
  5141  0198                     	;# 
  5142  0199                     	;# 
  5143  019A                     	;# 
  5144  019B                     	;# 
  5145  019C                     	;# 
  5146  020C                     	;# 
  5147  020C                     	;# 
  5148  020D                     	;# 
  5149  020E                     	;# 
  5150  020F                     	;# 
  5151  020F                     	;# 
  5152  0210                     	;# 
  5153  0210                     	;# 
  5154  0211                     	;# 
  5155  0211                     	;# 
  5156  0212                     	;# 
  5157  0212                     	;# 
  5158  0213                     	;# 
  5159  0214                     	;# 
  5160  0215                     	;# 
  5161  0215                     	;# 
  5162  0216                     	;# 
  5163  0216                     	;# 
  5164  0217                     	;# 
  5165  0217                     	;# 
  5166  0218                     	;# 
  5167  0218                     	;# 
  5168  0219                     	;# 
  5169  021A                     	;# 
  5170  021B                     	;# 
  5171  021B                     	;# 
  5172  021C                     	;# 
  5173  021C                     	;# 
  5174  021D                     	;# 
  5175  021D                     	;# 
  5176  021E                     	;# 
  5177  021F                     	;# 
  5178  028C                     	;# 
  5179  028C                     	;# 
  5180  028D                     	;# 
  5181  028D                     	;# 
  5182  028E                     	;# 
  5183  028F                     	;# 
  5184  0290                     	;# 
  5185  0290                     	;# 
  5186  0291                     	;# 
  5187  0292                     	;# 
  5188  0292                     	;# 
  5189  0293                     	;# 
  5190  0293                     	;# 
  5191  0294                     	;# 
  5192  0295                     	;# 
  5193  0296                     	;# 
  5194  0296                     	;# 
  5195  0297                     	;# 
  5196  0298                     	;# 
  5197  0298                     	;# 
  5198  0299                     	;# 
  5199  0299                     	;# 
  5200  029A                     	;# 
  5201  029B                     	;# 
  5202  029C                     	;# 
  5203  029C                     	;# 
  5204  029D                     	;# 
  5205  030C                     	;# 
  5206  030C                     	;# 
  5207  030D                     	;# 
  5208  030E                     	;# 
  5209  030F                     	;# 
  5210  0310                     	;# 
  5211  0310                     	;# 
  5212  0311                     	;# 
  5213  0312                     	;# 
  5214  0313                     	;# 
  5215  0314                     	;# 
  5216  0314                     	;# 
  5217  0315                     	;# 
  5218  0316                     	;# 
  5219  0317                     	;# 
  5220  0318                     	;# 
  5221  0318                     	;# 
  5222  0319                     	;# 
  5223  031A                     	;# 
  5224  031B                     	;# 
  5225  031C                     	;# 
  5226  031C                     	;# 
  5227  031D                     	;# 
  5228  031E                     	;# 
  5229  031F                     	;# 
  5230  038C                     	;# 
  5231  038C                     	;# 
  5232  038D                     	;# 
  5233  038E                     	;# 
  5234  0390                     	;# 
  5235  0390                     	;# 
  5236  0391                     	;# 
  5237  0392                     	;# 
  5238  040C                     	;# 
  5239  040D                     	;# 
  5240  040E                     	;# 
  5241  040F                     	;# 
  5242  0410                     	;# 
  5243  0411                     	;# 
  5244  0416                     	;# 
  5245  0416                     	;# 
  5246  0417                     	;# 
  5247  0418                     	;# 
  5248  0418                     	;# 
  5249  0419                     	;# 
  5250  041A                     	;# 
  5251  041A                     	;# 
  5252  041B                     	;# 
  5253  041C                     	;# 
  5254  041C                     	;# 
  5255  041D                     	;# 
  5256  041E                     	;# 
  5257  041F                     	;# 
  5258  048C                     	;# 
  5259  048C                     	;# 
  5260  048D                     	;# 
  5261  048E                     	;# 
  5262  048F                     	;# 
  5263  048F                     	;# 
  5264  0490                     	;# 
  5265  0491                     	;# 
  5266  0492                     	;# 
  5267  0492                     	;# 
  5268  0493                     	;# 
  5269  0494                     	;# 
  5270  0495                     	;# 
  5271  0495                     	;# 
  5272  0496                     	;# 
  5273  0497                     	;# 
  5274  0498                     	;# 
  5275  0499                     	;# 
  5276  049A                     	;# 
  5277  049B                     	;# 
  5278  049C                     	;# 
  5279  049D                     	;# 
  5280  050C                     	;# 
  5281  050C                     	;# 
  5282  050D                     	;# 
  5283  050E                     	;# 
  5284  050F                     	;# 
  5285  050F                     	;# 
  5286  0510                     	;# 
  5287  0511                     	;# 
  5288  0512                     	;# 
  5289  0512                     	;# 
  5290  0513                     	;# 
  5291  0514                     	;# 
  5292  0515                     	;# 
  5293  0515                     	;# 
  5294  0516                     	;# 
  5295  0517                     	;# 
  5296  0518                     	;# 
  5297  0519                     	;# 
  5298  051A                     	;# 
  5299  051B                     	;# 
  5300  051C                     	;# 
  5301  051D                     	;# 
  5302  058C                     	;# 
  5303  058C                     	;# 
  5304  058D                     	;# 
  5305  058E                     	;# 
  5306  058F                     	;# 
  5307  058F                     	;# 
  5308  0590                     	;# 
  5309  0591                     	;# 
  5310  0592                     	;# 
  5311  0593                     	;# 
  5312  060C                     	;# 
  5313  060D                     	;# 
  5314  060E                     	;# 
  5315  060F                     	;# 
  5316  0610                     	;# 
  5317  0611                     	;# 
  5318  0612                     	;# 
  5319  0613                     	;# 
  5320  0614                     	;# 
  5321  0616                     	;# 
  5322  0617                     	;# 
  5323  0618                     	;# 
  5324  0619                     	;# 
  5325  061A                     	;# 
  5326  061B                     	;# 
  5327  061C                     	;# 
  5328  061D                     	;# 
  5329  061E                     	;# 
  5330  068C                     	;# 
  5331  068D                     	;# 
  5332  068E                     	;# 
  5333  068F                     	;# 
  5334  0690                     	;# 
  5335  0691                     	;# 
  5336  0692                     	;# 
  5337  0693                     	;# 
  5338  0694                     	;# 
  5339  070C                     	;# 
  5340  070D                     	;# 
  5341  070E                     	;# 
  5342  070F                     	;# 
  5343  0710                     	;# 
  5344  0711                     	;# 
  5345  0712                     	;# 
  5346  0713                     	;# 
  5347  0714                     	;# 
  5348  0716                     	;# 
  5349  0717                     	;# 
  5350  0718                     	;# 
  5351  0719                     	;# 
  5352  071A                     	;# 
  5353  071B                     	;# 
  5354  071C                     	;# 
  5355  071D                     	;# 
  5356  071E                     	;# 
  5357  0796                     	;# 
  5358  0797                     	;# 
  5359  0798                     	;# 
  5360  0799                     	;# 
  5361  079A                     	;# 
  5362  079B                     	;# 
  5363  080C                     	;# 
  5364  080D                     	;# 
  5365  080E                     	;# 
  5366  080F                     	;# 
  5367  0810                     	;# 
  5368  0811                     	;# 
  5369  0812                     	;# 
  5370  0813                     	;# 
  5371  0814                     	;# 
  5372  081A                     	;# 
  5373  081B                     	;# 
  5374  081C                     	;# 
  5375  081D                     	;# 
  5376  081E                     	;# 
  5377  081F                     	;# 
  5378  088C                     	;# 
  5379  088D                     	;# 
  5380  088E                     	;# 
  5381  088F                     	;# 
  5382  0890                     	;# 
  5383  0891                     	;# 
  5384  0892                     	;# 
  5385  0893                     	;# 
  5386  0895                     	;# 
  5387  0896                     	;# 
  5388  0897                     	;# 
  5389  0898                     	;# 
  5390  0899                     	;# 
  5391  089A                     	;# 
  5392  089B                     	;# 
  5393  090C                     	;# 
  5394  090E                     	;# 
  5395  090F                     	;# 
  5396  091F                     	;# 
  5397  091F                     	;# 
  5398  098F                     	;# 
  5399  098F                     	;# 
  5400  0990                     	;# 
  5401  0991                     	;# 
  5402  0992                     	;# 
  5403  0993                     	;# 
  5404  0994                     	;# 
  5405  0995                     	;# 
  5406  0996                     	;# 
  5407  0997                     	;# 
  5408  0E0F                     	;# 
  5409  0E10                     	;# 
  5410  0E11                     	;# 
  5411  0E12                     	;# 
  5412  0E13                     	;# 
  5413  0E14                     	;# 
  5414  0E15                     	;# 
  5415  0E16                     	;# 
  5416  0E17                     	;# 
  5417  0E18                     	;# 
  5418  0E19                     	;# 
  5419  0E1A                     	;# 
  5420  0E1B                     	;# 
  5421  0E1C                     	;# 
  5422  0E1D                     	;# 
  5423  0E1E                     	;# 
  5424  0E1F                     	;# 
  5425  0E20                     	;# 
  5426  0E21                     	;# 
  5427  0E22                     	;# 
  5428  0E23                     	;# 
  5429  0E24                     	;# 
  5430  0E25                     	;# 
  5431  0E26                     	;# 
  5432  0E27                     	;# 
  5433  0E28                     	;# 
  5434  0E29                     	;# 
  5435  0E2A                     	;# 
  5436  0E2B                     	;# 
  5437  0E2C                     	;# 
  5438  0E2D                     	;# 
  5439  0E2E                     	;# 
  5440  0E2F                     	;# 
  5441  0E30                     	;# 
  5442  0E31                     	;# 
  5443  0E32                     	;# 
  5444  0E33                     	;# 
  5445  0E34                     	;# 
  5446  0E35                     	;# 
  5447  0E36                     	;# 
  5448  0E37                     	;# 
  5449  0E8F                     	;# 
  5450  0E90                     	;# 
  5451  0E91                     	;# 
  5452  0E92                     	;# 
  5453  0E93                     	;# 
  5454  0E94                     	;# 
  5455  0E95                     	;# 
  5456  0E96                     	;# 
  5457  0E97                     	;# 
  5458  0E9C                     	;# 
  5459  0E9D                     	;# 
  5460  0E9E                     	;# 
  5461  0EA1                     	;# 
  5462  0EA2                     	;# 
  5463  0EA3                     	;# 
  5464  0EA4                     	;# 
  5465  0EA5                     	;# 
  5466  0EA9                     	;# 
  5467  0EAA                     	;# 
  5468  0EAB                     	;# 
  5469  0EAC                     	;# 
  5470  0EB1                     	;# 
  5471  0EB2                     	;# 
  5472  0EB3                     	;# 
  5473  0EB8                     	;# 
  5474  0EB9                     	;# 
  5475  0EBA                     	;# 
  5476  0EBB                     	;# 
  5477  0EBC                     	;# 
  5478  0EBD                     	;# 
  5479  0EBE                     	;# 
  5480  0EC3                     	;# 
  5481  0EC5                     	;# 
  5482  0EC6                     	;# 
  5483  0EC7                     	;# 
  5484  0EC8                     	;# 
  5485  0EC9                     	;# 
  5486  0ECA                     	;# 
  5487  0ECB                     	;# 
  5488  0ECC                     	;# 
  5489  0F10                     	;# 
  5490  0F11                     	;# 
  5491  0F12                     	;# 
  5492  0F13                     	;# 
  5493  0F14                     	;# 
  5494  0F15                     	;# 
  5495  0F16                     	;# 
  5496  0F17                     	;# 
  5497  0F18                     	;# 
  5498  0F19                     	;# 
  5499  0F1A                     	;# 
  5500  0F1B                     	;# 
  5501  0F1C                     	;# 
  5502  0F1D                     	;# 
  5503  0F1E                     	;# 
  5504  0F1F                     	;# 
  5505  0F20                     	;# 
  5506  0F21                     	;# 
  5507  0F22                     	;# 
  5508  0F23                     	;# 
  5509  0F24                     	;# 
  5510  0F25                     	;# 
  5511  0F26                     	;# 
  5512  0F27                     	;# 
  5513  0F28                     	;# 
  5514  0F29                     	;# 
  5515  0F2A                     	;# 
  5516  0F2B                     	;# 
  5517  0F2C                     	;# 
  5518  0F2D                     	;# 
  5519  0F2E                     	;# 
  5520  0F2F                     	;# 
  5521  0F30                     	;# 
  5522  0F31                     	;# 
  5523  0F32                     	;# 
  5524  0F38                     	;# 
  5525  0F39                     	;# 
  5526  0F3A                     	;# 
  5527  0F3B                     	;# 
  5528  0F3C                     	;# 
  5529  0F3D                     	;# 
  5530  0F3E                     	;# 
  5531  0F3F                     	;# 
  5532  0F40                     	;# 
  5533  0F41                     	;# 
  5534  0F43                     	;# 
  5535  0F44                     	;# 
  5536  0F45                     	;# 
  5537  0F46                     	;# 
  5538  0F47                     	;# 
  5539  0F48                     	;# 
  5540  0F49                     	;# 
  5541  0F4A                     	;# 
  5542  0F4B                     	;# 
  5543  0F4C                     	;# 
  5544  0F4E                     	;# 
  5545  0F4F                     	;# 
  5546  0F50                     	;# 
  5547  0F51                     	;# 
  5548  0F52                     	;# 
  5549  0F53                     	;# 
  5550  0F54                     	;# 
  5551  0F55                     	;# 
  5552  0F56                     	;# 
  5553  0F57                     	;# 
  5554  0F59                     	;# 
  5555  0F5A                     	;# 
  5556  0F5B                     	;# 
  5557  0F5C                     	;# 
  5558  0F5D                     	;# 
  5559  0F61                     	;# 
  5560  0F62                     	;# 
  5561  0F64                     	;# 
  5562  0F65                     	;# 
  5563  0F66                     	;# 
  5564  0F67                     	;# 
  5565  0F68                     	;# 
  5566  0F69                     	;# 
  5567  0F6A                     	;# 
  5568  0F6B                     	;# 
  5569  0F6C                     	;# 
  5570  0F6D                     	;# 
  5571  0FE4                     	;# 
  5572  0FE5                     	;# 
  5573  0FE6                     	;# 
  5574  0FE7                     	;# 
  5575  0FE8                     	;# 
  5576  0FE9                     	;# 
  5577  0FEA                     	;# 
  5578  0FEB                     	;# 
  5579  0FED                     	;# 
  5580  0FEE                     	;# 
  5581  0FEF                     	;# 
  5582  0000                     	;# 
  5583  0001                     	;# 
  5584  0002                     	;# 
  5585  0003                     	;# 
  5586  0004                     	;# 
  5587  0005                     	;# 
  5588  0006                     	;# 
  5589  0007                     	;# 
  5590  0008                     	;# 
  5591  0009                     	;# 
  5592  000A                     	;# 
  5593  000B                     	;# 
  5594  000C                     	;# 
  5595  000D                     	;# 
  5596  000E                     	;# 
  5597  000F                     	;# 
  5598  0010                     	;# 
  5599  0011                     	;# 
  5600  0012                     	;# 
  5601  0013                     	;# 
  5602  0014                     	;# 
  5603  0015                     	;# 
  5604  0016                     	;# 
  5605  0017                     	;# 
  5606  0018                     	;# 
  5607  0019                     	;# 
  5608  001A                     	;# 
  5609  001C                     	;# 
  5610  001C                     	;# 
  5611  001D                     	;# 
  5612  001D                     	;# 
  5613  001E                     	;# 
  5614  001F                     	;# 
  5615  008C                     	;# 
  5616  008C                     	;# 
  5617  008D                     	;# 
  5618  008E                     	;# 
  5619  008E                     	;# 
  5620  008F                     	;# 
  5621  0090                     	;# 
  5622  0090                     	;# 
  5623  0091                     	;# 
  5624  0093                     	;# 
  5625  0094                     	;# 
  5626  0095                     	;# 
  5627  0096                     	;# 
  5628  0097                     	;# 
  5629  0098                     	;# 
  5630  0099                     	;# 
  5631  009A                     	;# 
  5632  009B                     	;# 
  5633  009C                     	;# 
  5634  009D                     	;# 
  5635  009E                     	;# 
  5636  010C                     	;# 
  5637  010D                     	;# 
  5638  010E                     	;# 
  5639  010E                     	;# 
  5640  010F                     	;# 
  5641  0110                     	;# 
  5642  0110                     	;# 
  5643  0111                     	;# 
  5644  0112                     	;# 
  5645  0112                     	;# 
  5646  0113                     	;# 
  5647  0114                     	;# 
  5648  0114                     	;# 
  5649  0115                     	;# 
  5650  0116                     	;# 
  5651  0116                     	;# 
  5652  0117                     	;# 
  5653  0119                     	;# 
  5654  0119                     	;# 
  5655  0119                     	;# 
  5656  011A                     	;# 
  5657  011A                     	;# 
  5658  011A                     	;# 
  5659  011B                     	;# 
  5660  011B                     	;# 
  5661  011B                     	;# 
  5662  011B                     	;# 
  5663  011B                     	;# 
  5664  011C                     	;# 
  5665  011C                     	;# 
  5666  011C                     	;# 
  5667  011D                     	;# 
  5668  011D                     	;# 
  5669  011D                     	;# 
  5670  011E                     	;# 
  5671  011E                     	;# 
  5672  011E                     	;# 
  5673  011F                     	;# 
  5674  011F                     	;# 
  5675  011F                     	;# 
  5676  011F                     	;# 
  5677  011F                     	;# 
  5678  018C                     	;# 
  5679  018D                     	;# 
  5680  018E                     	;# 
  5681  018F                     	;# 
  5682  0190                     	;# 
  5683  0191                     	;# 
  5684  0192                     	;# 
  5685  0196                     	;# 
  5686  0197                     	;# 
  5687  0198                     	;# 
  5688  0199                     	;# 
  5689  019A                     	;# 
  5690  019B                     	;# 
  5691  019C                     	;# 
  5692  020C                     	;# 
  5693  020C                     	;# 
  5694  020D                     	;# 
  5695  020E                     	;# 
  5696  020F                     	;# 
  5697  020F                     	;# 
  5698  0210                     	;# 
  5699  0210                     	;# 
  5700  0211                     	;# 
  5701  0211                     	;# 
  5702  0212                     	;# 
  5703  0212                     	;# 
  5704  0213                     	;# 
  5705  0214                     	;# 
  5706  0215                     	;# 
  5707  0215                     	;# 
  5708  0216                     	;# 
  5709  0216                     	;# 
  5710  0217                     	;# 
  5711  0217                     	;# 
  5712  0218                     	;# 
  5713  0218                     	;# 
  5714  0219                     	;# 
  5715  021A                     	;# 
  5716  021B                     	;# 
  5717  021B                     	;# 
  5718  021C                     	;# 
  5719  021C                     	;# 
  5720  021D                     	;# 
  5721  021D                     	;# 
  5722  021E                     	;# 
  5723  021F                     	;# 
  5724  028C                     	;# 
  5725  028C                     	;# 
  5726  028D                     	;# 
  5727  028D                     	;# 
  5728  028E                     	;# 
  5729  028F                     	;# 
  5730  0290                     	;# 
  5731  0290                     	;# 
  5732  0291                     	;# 
  5733  0292                     	;# 
  5734  0292                     	;# 
  5735  0293                     	;# 
  5736  0293                     	;# 
  5737  0294                     	;# 
  5738  0295                     	;# 
  5739  0296                     	;# 
  5740  0296                     	;# 
  5741  0297                     	;# 
  5742  0298                     	;# 
  5743  0298                     	;# 
  5744  0299                     	;# 
  5745  0299                     	;# 
  5746  029A                     	;# 
  5747  029B                     	;# 
  5748  029C                     	;# 
  5749  029C                     	;# 
  5750  029D                     	;# 
  5751  030C                     	;# 
  5752  030C                     	;# 
  5753  030D                     	;# 
  5754  030E                     	;# 
  5755  030F                     	;# 
  5756  0310                     	;# 
  5757  0310                     	;# 
  5758  0311                     	;# 
  5759  0312                     	;# 
  5760  0313                     	;# 
  5761  0314                     	;# 
  5762  0314                     	;# 
  5763  0315                     	;# 
  5764  0316                     	;# 
  5765  0317                     	;# 
  5766  0318                     	;# 
  5767  0318                     	;# 
  5768  0319                     	;# 
  5769  031A                     	;# 
  5770  031B                     	;# 
  5771  031C                     	;# 
  5772  031C                     	;# 
  5773  031D                     	;# 
  5774  031E                     	;# 
  5775  031F                     	;# 
  5776  038C                     	;# 
  5777  038C                     	;# 
  5778  038D                     	;# 
  5779  038E                     	;# 
  5780  0390                     	;# 
  5781  0390                     	;# 
  5782  0391                     	;# 
  5783  0392                     	;# 
  5784  040C                     	;# 
  5785  040D                     	;# 
  5786  040E                     	;# 
  5787  040F                     	;# 
  5788  0410                     	;# 
  5789  0411                     	;# 
  5790  0416                     	;# 
  5791  0416                     	;# 
  5792  0417                     	;# 
  5793  0418                     	;# 
  5794  0418                     	;# 
  5795  0419                     	;# 
  5796  041A                     	;# 
  5797  041A                     	;# 
  5798  041B                     	;# 
  5799  041C                     	;# 
  5800  041C                     	;# 
  5801  041D                     	;# 
  5802  041E                     	;# 
  5803  041F                     	;# 
  5804  048C                     	;# 
  5805  048C                     	;# 
  5806  048D                     	;# 
  5807  048E                     	;# 
  5808  048F                     	;# 
  5809  048F                     	;# 
  5810  0490                     	;# 
  5811  0491                     	;# 
  5812  0492                     	;# 
  5813  0492                     	;# 
  5814  0493                     	;# 
  5815  0494                     	;# 
  5816  0495                     	;# 
  5817  0495                     	;# 
  5818  0496                     	;# 
  5819  0497                     	;# 
  5820  0498                     	;# 
  5821  0499                     	;# 
  5822  049A                     	;# 
  5823  049B                     	;# 
  5824  049C                     	;# 
  5825  049D                     	;# 
  5826  050C                     	;# 
  5827  050C                     	;# 
  5828  050D                     	;# 
  5829  050E                     	;# 
  5830  050F                     	;# 
  5831  050F                     	;# 
  5832  0510                     	;# 
  5833  0511                     	;# 
  5834  0512                     	;# 
  5835  0512                     	;# 
  5836  0513                     	;# 
  5837  0514                     	;# 
  5838  0515                     	;# 
  5839  0515                     	;# 
  5840  0516                     	;# 
  5841  0517                     	;# 
  5842  0518                     	;# 
  5843  0519                     	;# 
  5844  051A                     	;# 
  5845  051B                     	;# 
  5846  051C                     	;# 
  5847  051D                     	;# 
  5848  058C                     	;# 
  5849  058C                     	;# 
  5850  058D                     	;# 
  5851  058E                     	;# 
  5852  058F                     	;# 
  5853  058F                     	;# 
  5854  0590                     	;# 
  5855  0591                     	;# 
  5856  0592                     	;# 
  5857  0593                     	;# 
  5858  060C                     	;# 
  5859  060D                     	;# 
  5860  060E                     	;# 
  5861  060F                     	;# 
  5862  0610                     	;# 
  5863  0611                     	;# 
  5864  0612                     	;# 
  5865  0613                     	;# 
  5866  0614                     	;# 
  5867  0616                     	;# 
  5868  0617                     	;# 
  5869  0618                     	;# 
  5870  0619                     	;# 
  5871  061A                     	;# 
  5872  061B                     	;# 
  5873  061C                     	;# 
  5874  061D                     	;# 
  5875  061E                     	;# 
  5876  068C                     	;# 
  5877  068D                     	;# 
  5878  068E                     	;# 
  5879  068F                     	;# 
  5880  0690                     	;# 
  5881  0691                     	;# 
  5882  0692                     	;# 
  5883  0693                     	;# 
  5884  0694                     	;# 
  5885  070C                     	;# 
  5886  070D                     	;# 
  5887  070E                     	;# 
  5888  070F                     	;# 
  5889  0710                     	;# 
  5890  0711                     	;# 
  5891  0712                     	;# 
  5892  0713                     	;# 
  5893  0714                     	;# 
  5894  0716                     	;# 
  5895  0717                     	;# 
  5896  0718                     	;# 
  5897  0719                     	;# 
  5898  071A                     	;# 
  5899  071B                     	;# 
  5900  071C                     	;# 
  5901  071D                     	;# 
  5902  071E                     	;# 
  5903  0796                     	;# 
  5904  0797                     	;# 
  5905  0798                     	;# 
  5906  0799                     	;# 
  5907  079A                     	;# 
  5908  079B                     	;# 
  5909  080C                     	;# 
  5910  080D                     	;# 
  5911  080E                     	;# 
  5912  080F                     	;# 
  5913  0810                     	;# 
  5914  0811                     	;# 
  5915  0812                     	;# 
  5916  0813                     	;# 
  5917  0814                     	;# 
  5918  081A                     	;# 
  5919  081B                     	;# 
  5920  081C                     	;# 
  5921  081D                     	;# 
  5922  081E                     	;# 
  5923  081F                     	;# 
  5924  088C                     	;# 
  5925  088D                     	;# 
  5926  088E                     	;# 
  5927  088F                     	;# 
  5928  0890                     	;# 
  5929  0891                     	;# 
  5930  0892                     	;# 
  5931  0893                     	;# 
  5932  0895                     	;# 
  5933  0896                     	;# 
  5934  0897                     	;# 
  5935  0898                     	;# 
  5936  0899                     	;# 
  5937  089A                     	;# 
  5938  089B                     	;# 
  5939  090C                     	;# 
  5940  090E                     	;# 
  5941  090F                     	;# 
  5942  091F                     	;# 
  5943  091F                     	;# 
  5944  098F                     	;# 
  5945  098F                     	;# 
  5946  0990                     	;# 
  5947  0991                     	;# 
  5948  0992                     	;# 
  5949  0993                     	;# 
  5950  0994                     	;# 
  5951  0995                     	;# 
  5952  0996                     	;# 
  5953  0997                     	;# 
  5954  0E0F                     	;# 
  5955  0E10                     	;# 
  5956  0E11                     	;# 
  5957  0E12                     	;# 
  5958  0E13                     	;# 
  5959  0E14                     	;# 
  5960  0E15                     	;# 
  5961  0E16                     	;# 
  5962  0E17                     	;# 
  5963  0E18                     	;# 
  5964  0E19                     	;# 
  5965  0E1A                     	;# 
  5966  0E1B                     	;# 
  5967  0E1C                     	;# 
  5968  0E1D                     	;# 
  5969  0E1E                     	;# 
  5970  0E1F                     	;# 
  5971  0E20                     	;# 
  5972  0E21                     	;# 
  5973  0E22                     	;# 
  5974  0E23                     	;# 
  5975  0E24                     	;# 
  5976  0E25                     	;# 
  5977  0E26                     	;# 
  5978  0E27                     	;# 
  5979  0E28                     	;# 
  5980  0E29                     	;# 
  5981  0E2A                     	;# 
  5982  0E2B                     	;# 
  5983  0E2C                     	;# 
  5984  0E2D                     	;# 
  5985  0E2E                     	;# 
  5986  0E2F                     	;# 
  5987  0E30                     	;# 
  5988  0E31                     	;# 
  5989  0E32                     	;# 
  5990  0E33                     	;# 
  5991  0E34                     	;# 
  5992  0E35                     	;# 
  5993  0E36                     	;# 
  5994  0E37                     	;# 
  5995  0E8F                     	;# 
  5996  0E90                     	;# 
  5997  0E91                     	;# 
  5998  0E92                     	;# 
  5999  0E93                     	;# 
  6000  0E94                     	;# 
  6001  0E95                     	;# 
  6002  0E96                     	;# 
  6003  0E97                     	;# 
  6004  0E9C                     	;# 
  6005  0E9D                     	;# 
  6006  0E9E                     	;# 
  6007  0EA1                     	;# 
  6008  0EA2                     	;# 
  6009  0EA3                     	;# 
  6010  0EA4                     	;# 
  6011  0EA5                     	;# 
  6012  0EA9                     	;# 
  6013  0EAA                     	;# 
  6014  0EAB                     	;# 
  6015  0EAC                     	;# 
  6016  0EB1                     	;# 
  6017  0EB2                     	;# 
  6018  0EB3                     	;# 
  6019  0EB8                     	;# 
  6020  0EB9                     	;# 
  6021  0EBA                     	;# 
  6022  0EBB                     	;# 
  6023  0EBC                     	;# 
  6024  0EBD                     	;# 
  6025  0EBE                     	;# 
  6026  0EC3                     	;# 
  6027  0EC5                     	;# 
  6028  0EC6                     	;# 
  6029  0EC7                     	;# 
  6030  0EC8                     	;# 
  6031  0EC9                     	;# 
  6032  0ECA                     	;# 
  6033  0ECB                     	;# 
  6034  0ECC                     	;# 
  6035  0F10                     	;# 
  6036  0F11                     	;# 
  6037  0F12                     	;# 
  6038  0F13                     	;# 
  6039  0F14                     	;# 
  6040  0F15                     	;# 
  6041  0F16                     	;# 
  6042  0F17                     	;# 
  6043  0F18                     	;# 
  6044  0F19                     	;# 
  6045  0F1A                     	;# 
  6046  0F1B                     	;# 
  6047  0F1C                     	;# 
  6048  0F1D                     	;# 
  6049  0F1E                     	;# 
  6050  0F1F                     	;# 
  6051  0F20                     	;# 
  6052  0F21                     	;# 
  6053  0F22                     	;# 
  6054  0F23                     	;# 
  6055  0F24                     	;# 
  6056  0F25                     	;# 
  6057  0F26                     	;# 
  6058  0F27                     	;# 
  6059  0F28                     	;# 
  6060  0F29                     	;# 
  6061  0F2A                     	;# 
  6062  0F2B                     	;# 
  6063  0F2C                     	;# 
  6064  0F2D                     	;# 
  6065  0F2E                     	;# 
  6066  0F2F                     	;# 
  6067  0F30                     	;# 
  6068  0F31                     	;# 
  6069  0F32                     	;# 
  6070  0F38                     	;# 
  6071  0F39                     	;# 
  6072  0F3A                     	;# 
  6073  0F3B                     	;# 
  6074  0F3C                     	;# 
  6075  0F3D                     	;# 
  6076  0F3E                     	;# 
  6077  0F3F                     	;# 
  6078  0F40                     	;# 
  6079  0F41                     	;# 
  6080  0F43                     	;# 
  6081  0F44                     	;# 
  6082  0F45                     	;# 
  6083  0F46                     	;# 
  6084  0F47                     	;# 
  6085  0F48                     	;# 
  6086  0F49                     	;# 
  6087  0F4A                     	;# 
  6088  0F4B                     	;# 
  6089  0F4C                     	;# 
  6090  0F4E                     	;# 
  6091  0F4F                     	;# 
  6092  0F50                     	;# 
  6093  0F51                     	;# 
  6094  0F52                     	;# 
  6095  0F53                     	;# 
  6096  0F54                     	;# 
  6097  0F55                     	;# 
  6098  0F56                     	;# 
  6099  0F57                     	;# 
  6100  0F59                     	;# 
  6101  0F5A                     	;# 
  6102  0F5B                     	;# 
  6103  0F5C                     	;# 
  6104  0F5D                     	;# 
  6105  0F61                     	;# 
  6106  0F62                     	;# 
  6107  0F64                     	;# 
  6108  0F65                     	;# 
  6109  0F66                     	;# 
  6110  0F67                     	;# 
  6111  0F68                     	;# 
  6112  0F69                     	;# 
  6113  0F6A                     	;# 
  6114  0F6B                     	;# 
  6115  0F6C                     	;# 
  6116  0F6D                     	;# 
  6117  0FE4                     	;# 
  6118  0FE5                     	;# 
  6119  0FE6                     	;# 
  6120  0FE7                     	;# 
  6121  0FE8                     	;# 
  6122  0FE9                     	;# 
  6123  0FEA                     	;# 
  6124  0FEB                     	;# 
  6125  0FED                     	;# 
  6126  0FEE                     	;# 
  6127  0FEF                     	;# 
  6128  0000                     	;# 
  6129  0001                     	;# 
  6130  0002                     	;# 
  6131  0003                     	;# 
  6132  0004                     	;# 
  6133  0005                     	;# 
  6134  0006                     	;# 
  6135  0007                     	;# 
  6136  0008                     	;# 
  6137  0009                     	;# 
  6138  000A                     	;# 
  6139  000B                     	;# 
  6140  000C                     	;# 
  6141  000D                     	;# 
  6142  000E                     	;# 
  6143  000F                     	;# 
  6144  0010                     	;# 
  6145  0011                     	;# 
  6146  0012                     	;# 
  6147  0013                     	;# 
  6148  0014                     	;# 
  6149  0015                     	;# 
  6150  0016                     	;# 
  6151  0017                     	;# 
  6152  0018                     	;# 
  6153  0019                     	;# 
  6154  001A                     	;# 
  6155  001C                     	;# 
  6156  001C                     	;# 
  6157  001D                     	;# 
  6158  001D                     	;# 
  6159  001E                     	;# 
  6160  001F                     	;# 
  6161  008C                     	;# 
  6162  008C                     	;# 
  6163  008D                     	;# 
  6164  008E                     	;# 
  6165  008E                     	;# 
  6166  008F                     	;# 
  6167  0090                     	;# 
  6168  0090                     	;# 
  6169  0091                     	;# 
  6170  0093                     	;# 
  6171  0094                     	;# 
  6172  0095                     	;# 
  6173  0096                     	;# 
  6174  0097                     	;# 
  6175  0098                     	;# 
  6176  0099                     	;# 
  6177  009A                     	;# 
  6178  009B                     	;# 
  6179  009C                     	;# 
  6180  009D                     	;# 
  6181  009E                     	;# 
  6182  010C                     	;# 
  6183  010D                     	;# 
  6184  010E                     	;# 
  6185  010E                     	;# 
  6186  010F                     	;# 
  6187  0110                     	;# 
  6188  0110                     	;# 
  6189  0111                     	;# 
  6190  0112                     	;# 
  6191  0112                     	;# 
  6192  0113                     	;# 
  6193  0114                     	;# 
  6194  0114                     	;# 
  6195  0115                     	;# 
  6196  0116                     	;# 
  6197  0116                     	;# 
  6198  0117                     	;# 
  6199  0119                     	;# 
  6200  0119                     	;# 
  6201  0119                     	;# 
  6202  011A                     	;# 
  6203  011A                     	;# 
  6204  011A                     	;# 
  6205  011B                     	;# 
  6206  011B                     	;# 
  6207  011B                     	;# 
  6208  011B                     	;# 
  6209  011B                     	;# 
  6210  011C                     	;# 
  6211  011C                     	;# 
  6212  011C                     	;# 
  6213  011D                     	;# 
  6214  011D                     	;# 
  6215  011D                     	;# 
  6216  011E                     	;# 
  6217  011E                     	;# 
  6218  011E                     	;# 
  6219  011F                     	;# 
  6220  011F                     	;# 
  6221  011F                     	;# 
  6222  011F                     	;# 
  6223  011F                     	;# 
  6224  018C                     	;# 
  6225  018D                     	;# 
  6226  018E                     	;# 
  6227  018F                     	;# 
  6228  0190                     	;# 
  6229  0191                     	;# 
  6230  0192                     	;# 
  6231  0196                     	;# 
  6232  0197                     	;# 
  6233  0198                     	;# 
  6234  0199                     	;# 
  6235  019A                     	;# 
  6236  019B                     	;# 
  6237  019C                     	;# 
  6238  020C                     	;# 
  6239  020C                     	;# 
  6240  020D                     	;# 
  6241  020E                     	;# 
  6242  020F                     	;# 
  6243  020F                     	;# 
  6244  0210                     	;# 
  6245  0210                     	;# 
  6246  0211                     	;# 
  6247  0211                     	;# 
  6248  0212                     	;# 
  6249  0212                     	;# 
  6250  0213                     	;# 
  6251  0214                     	;# 
  6252  0215                     	;# 
  6253  0215                     	;# 
  6254  0216                     	;# 
  6255  0216                     	;# 
  6256  0217                     	;# 
  6257  0217                     	;# 
  6258  0218                     	;# 
  6259  0218                     	;# 
  6260  0219                     	;# 
  6261  021A                     	;# 
  6262  021B                     	;# 
  6263  021B                     	;# 
  6264  021C                     	;# 
  6265  021C                     	;# 
  6266  021D                     	;# 
  6267  021D                     	;# 
  6268  021E                     	;# 
  6269  021F                     	;# 
  6270  028C                     	;# 
  6271  028C                     	;# 
  6272  028D                     	;# 
  6273  028D                     	;# 
  6274  028E                     	;# 
  6275  028F                     	;# 
  6276  0290                     	;# 
  6277  0290                     	;# 
  6278  0291                     	;# 
  6279  0292                     	;# 
  6280  0292                     	;# 
  6281  0293                     	;# 
  6282  0293                     	;# 
  6283  0294                     	;# 
  6284  0295                     	;# 
  6285  0296                     	;# 
  6286  0296                     	;# 
  6287  0297                     	;# 
  6288  0298                     	;# 
  6289  0298                     	;# 
  6290  0299                     	;# 
  6291  0299                     	;# 
  6292  029A                     	;# 
  6293  029B                     	;# 
  6294  029C                     	;# 
  6295  029C                     	;# 
  6296  029D                     	;# 
  6297  030C                     	;# 
  6298  030C                     	;# 
  6299  030D                     	;# 
  6300  030E                     	;# 
  6301  030F                     	;# 
  6302  0310                     	;# 
  6303  0310                     	;# 
  6304  0311                     	;# 
  6305  0312                     	;# 
  6306  0313                     	;# 
  6307  0314                     	;# 
  6308  0314                     	;# 
  6309  0315                     	;# 
  6310  0316                     	;# 
  6311  0317                     	;# 
  6312  0318                     	;# 
  6313  0318                     	;# 
  6314  0319                     	;# 
  6315  031A                     	;# 
  6316  031B                     	;# 
  6317  031C                     	;# 
  6318  031C                     	;# 
  6319  031D                     	;# 
  6320  031E                     	;# 
  6321  031F                     	;# 
  6322  038C                     	;# 
  6323  038C                     	;# 
  6324  038D                     	;# 
  6325  038E                     	;# 
  6326  0390                     	;# 
  6327  0390                     	;# 
  6328  0391                     	;# 
  6329  0392                     	;# 
  6330  040C                     	;# 
  6331  040D                     	;# 
  6332  040E                     	;# 
  6333  040F                     	;# 
  6334  0410                     	;# 
  6335  0411                     	;# 
  6336  0416                     	;# 
  6337  0416                     	;# 
  6338  0417                     	;# 
  6339  0418                     	;# 
  6340  0418                     	;# 
  6341  0419                     	;# 
  6342  041A                     	;# 
  6343  041A                     	;# 
  6344  041B                     	;# 
  6345  041C                     	;# 
  6346  041C                     	;# 
  6347  041D                     	;# 
  6348  041E                     	;# 
  6349  041F                     	;# 
  6350  048C                     	;# 
  6351  048C                     	;# 
  6352  048D                     	;# 
  6353  048E                     	;# 
  6354  048F                     	;# 
  6355  048F                     	;# 
  6356  0490                     	;# 
  6357  0491                     	;# 
  6358  0492                     	;# 
  6359  0492                     	;# 
  6360  0493                     	;# 
  6361  0494                     	;# 
  6362  0495                     	;# 
  6363  0495                     	;# 
  6364  0496                     	;# 
  6365  0497                     	;# 
  6366  0498                     	;# 
  6367  0499                     	;# 
  6368  049A                     	;# 
  6369  049B                     	;# 
  6370  049C                     	;# 
  6371  049D                     	;# 
  6372  050C                     	;# 
  6373  050C                     	;# 
  6374  050D                     	;# 
  6375  050E                     	;# 
  6376  050F                     	;# 
  6377  050F                     	;# 
  6378  0510                     	;# 
  6379  0511                     	;# 
  6380  0512                     	;# 
  6381  0512                     	;# 
  6382  0513                     	;# 
  6383  0514                     	;# 
  6384  0515                     	;# 
  6385  0515                     	;# 
  6386  0516                     	;# 
  6387  0517                     	;# 
  6388  0518                     	;# 
  6389  0519                     	;# 
  6390  051A                     	;# 
  6391  051B                     	;# 
  6392  051C                     	;# 
  6393  051D                     	;# 
  6394  058C                     	;# 
  6395  058C                     	;# 
  6396  058D                     	;# 
  6397  058E                     	;# 
  6398  058F                     	;# 
  6399  058F                     	;# 
  6400  0590                     	;# 
  6401  0591                     	;# 
  6402  0592                     	;# 
  6403  0593                     	;# 
  6404  060C                     	;# 
  6405  060D                     	;# 
  6406  060E                     	;# 
  6407  060F                     	;# 
  6408  0610                     	;# 
  6409  0611                     	;# 
  6410  0612                     	;# 
  6411  0613                     	;# 
  6412  0614                     	;# 
  6413  0616                     	;# 
  6414  0617                     	;# 
  6415  0618                     	;# 
  6416  0619                     	;# 
  6417  061A                     	;# 
  6418  061B                     	;# 
  6419  061C                     	;# 
  6420  061D                     	;# 
  6421  061E                     	;# 
  6422  068C                     	;# 
  6423  068D                     	;# 
  6424  068E                     	;# 
  6425  068F                     	;# 
  6426  0690                     	;# 
  6427  0691                     	;# 
  6428  0692                     	;# 
  6429  0693                     	;# 
  6430  0694                     	;# 
  6431  070C                     	;# 
  6432  070D                     	;# 
  6433  070E                     	;# 
  6434  070F                     	;# 
  6435  0710                     	;# 
  6436  0711                     	;# 
  6437  0712                     	;# 
  6438  0713                     	;# 
  6439  0714                     	;# 
  6440  0716                     	;# 
  6441  0717                     	;# 
  6442  0718                     	;# 
  6443  0719                     	;# 
  6444  071A                     	;# 
  6445  071B                     	;# 
  6446  071C                     	;# 
  6447  071D                     	;# 
  6448  071E                     	;# 
  6449  0796                     	;# 
  6450  0797                     	;# 
  6451  0798                     	;# 
  6452  0799                     	;# 
  6453  079A                     	;# 
  6454  079B                     	;# 
  6455  080C                     	;# 
  6456  080D                     	;# 
  6457  080E                     	;# 
  6458  080F                     	;# 
  6459  0810                     	;# 
  6460  0811                     	;# 
  6461  0812                     	;# 
  6462  0813                     	;# 
  6463  0814                     	;# 
  6464  081A                     	;# 
  6465  081B                     	;# 
  6466  081C                     	;# 
  6467  081D                     	;# 
  6468  081E                     	;# 
  6469  081F                     	;# 
  6470  088C                     	;# 
  6471  088D                     	;# 
  6472  088E                     	;# 
  6473  088F                     	;# 
  6474  0890                     	;# 
  6475  0891                     	;# 
  6476  0892                     	;# 
  6477  0893                     	;# 
  6478  0895                     	;# 
  6479  0896                     	;# 
  6480  0897                     	;# 
  6481  0898                     	;# 
  6482  0899                     	;# 
  6483  089A                     	;# 
  6484  089B                     	;# 
  6485  090C                     	;# 
  6486  090E                     	;# 
  6487  090F                     	;# 
  6488  091F                     	;# 
  6489  091F                     	;# 
  6490  098F                     	;# 
  6491  098F                     	;# 
  6492  0990                     	;# 
  6493  0991                     	;# 
  6494  0992                     	;# 
  6495  0993                     	;# 
  6496  0994                     	;# 
  6497  0995                     	;# 
  6498  0996                     	;# 
  6499  0997                     	;# 
  6500  0E0F                     	;# 
  6501  0E10                     	;# 
  6502  0E11                     	;# 
  6503  0E12                     	;# 
  6504  0E13                     	;# 
  6505  0E14                     	;# 
  6506  0E15                     	;# 
  6507  0E16                     	;# 
  6508  0E17                     	;# 
  6509  0E18                     	;# 
  6510  0E19                     	;# 
  6511  0E1A                     	;# 
  6512  0E1B                     	;# 
  6513  0E1C                     	;# 
  6514  0E1D                     	;# 
  6515  0E1E                     	;# 
  6516  0E1F                     	;# 
  6517  0E20                     	;# 
  6518  0E21                     	;# 
  6519  0E22                     	;# 
  6520  0E23                     	;# 
  6521  0E24                     	;# 
  6522  0E25                     	;# 
  6523  0E26                     	;# 
  6524  0E27                     	;# 
  6525  0E28                     	;# 
  6526  0E29                     	;# 
  6527  0E2A                     	;# 
  6528  0E2B                     	;# 
  6529  0E2C                     	;# 
  6530  0E2D                     	;# 
  6531  0E2E                     	;# 
  6532  0E2F                     	;# 
  6533  0E30                     	;# 
  6534  0E31                     	;# 
  6535  0E32                     	;# 
  6536  0E33                     	;# 
  6537  0E34                     	;# 
  6538  0E35                     	;# 
  6539  0E36                     	;# 
  6540  0E37                     	;# 
  6541  0E8F                     	;# 
  6542  0E90                     	;# 
  6543  0E91                     	;# 
  6544  0E92                     	;# 
  6545  0E93                     	;# 
  6546  0E94                     	;# 
  6547  0E95                     	;# 
  6548  0E96                     	;# 
  6549  0E97                     	;# 
  6550  0E9C                     	;# 
  6551  0E9D                     	;# 
  6552  0E9E                     	;# 
  6553  0EA1                     	;# 
  6554  0EA2                     	;# 
  6555  0EA3                     	;# 
  6556  0EA4                     	;# 
  6557  0EA5                     	;# 
  6558  0EA9                     	;# 
  6559  0EAA                     	;# 
  6560  0EAB                     	;# 
  6561  0EAC                     	;# 
  6562  0EB1                     	;# 
  6563  0EB2                     	;# 
  6564  0EB3                     	;# 
  6565  0EB8                     	;# 
  6566  0EB9                     	;# 
  6567  0EBA                     	;# 
  6568  0EBB                     	;# 
  6569  0EBC                     	;# 
  6570  0EBD                     	;# 
  6571  0EBE                     	;# 
  6572  0EC3                     	;# 
  6573  0EC5                     	;# 
  6574  0EC6                     	;# 
  6575  0EC7                     	;# 
  6576  0EC8                     	;# 
  6577  0EC9                     	;# 
  6578  0ECA                     	;# 
  6579  0ECB                     	;# 
  6580  0ECC                     	;# 
  6581  0F10                     	;# 
  6582  0F11                     	;# 
  6583  0F12                     	;# 
  6584  0F13                     	;# 
  6585  0F14                     	;# 
  6586  0F15                     	;# 
  6587  0F16                     	;# 
  6588  0F17                     	;# 
  6589  0F18                     	;# 
  6590  0F19                     	;# 
  6591  0F1A                     	;# 
  6592  0F1B                     	;# 
  6593  0F1C                     	;# 
  6594  0F1D                     	;# 
  6595  0F1E                     	;# 
  6596  0F1F                     	;# 
  6597  0F20                     	;# 
  6598  0F21                     	;# 
  6599  0F22                     	;# 
  6600  0F23                     	;# 
  6601  0F24                     	;# 
  6602  0F25                     	;# 
  6603  0F26                     	;# 
  6604  0F27                     	;# 
  6605  0F28                     	;# 
  6606  0F29                     	;# 
  6607  0F2A                     	;# 
  6608  0F2B                     	;# 
  6609  0F2C                     	;# 
  6610  0F2D                     	;# 
  6611  0F2E                     	;# 
  6612  0F2F                     	;# 
  6613  0F30                     	;# 
  6614  0F31                     	;# 
  6615  0F32                     	;# 
  6616  0F38                     	;# 
  6617  0F39                     	;# 
  6618  0F3A                     	;# 
  6619  0F3B                     	;# 
  6620  0F3C                     	;# 
  6621  0F3D                     	;# 
  6622  0F3E                     	;# 
  6623  0F3F                     	;# 
  6624  0F40                     	;# 
  6625  0F41                     	;# 
  6626  0F43                     	;# 
  6627  0F44                     	;# 
  6628  0F45                     	;# 
  6629  0F46                     	;# 
  6630  0F47                     	;# 
  6631  0F48                     	;# 
  6632  0F49                     	;# 
  6633  0F4A                     	;# 
  6634  0F4B                     	;# 
  6635  0F4C                     	;# 
  6636  0F4E                     	;# 
  6637  0F4F                     	;# 
  6638  0F50                     	;# 
  6639  0F51                     	;# 
  6640  0F52                     	;# 
  6641  0F53                     	;# 
  6642  0F54                     	;# 
  6643  0F55                     	;# 
  6644  0F56                     	;# 
  6645  0F57                     	;# 
  6646  0F59                     	;# 
  6647  0F5A                     	;# 
  6648  0F5B                     	;# 
  6649  0F5C                     	;# 
  6650  0F5D                     	;# 
  6651  0F61                     	;# 
  6652  0F62                     	;# 
  6653  0F64                     	;# 
  6654  0F65                     	;# 
  6655  0F66                     	;# 
  6656  0F67                     	;# 
  6657  0F68                     	;# 
  6658  0F69                     	;# 
  6659  0F6A                     	;# 
  6660  0F6B                     	;# 
  6661  0F6C                     	;# 
  6662  0F6D                     	;# 
  6663  0FE4                     	;# 
  6664  0FE5                     	;# 
  6665  0FE6                     	;# 
  6666  0FE7                     	;# 
  6667  0FE8                     	;# 
  6668  0FE9                     	;# 
  6669  0FEA                     	;# 
  6670  0FEB                     	;# 
  6671  0FED                     	;# 
  6672  0FEE                     	;# 
  6673  0FEF                     	;# 
  6674  0000                     	;# 
  6675  0001                     	;# 
  6676  0002                     	;# 
  6677  0003                     	;# 
  6678  0004                     	;# 
  6679  0005                     	;# 
  6680  0006                     	;# 
  6681  0007                     	;# 
  6682  0008                     	;# 
  6683  0009                     	;# 
  6684  000A                     	;# 
  6685  000B                     	;# 
  6686  000C                     	;# 
  6687  000D                     	;# 
  6688  000E                     	;# 
  6689  000F                     	;# 
  6690  0010                     	;# 
  6691  0011                     	;# 
  6692  0012                     	;# 
  6693  0013                     	;# 
  6694  0014                     	;# 
  6695  0015                     	;# 
  6696  0016                     	;# 
  6697  0017                     	;# 
  6698  0018                     	;# 
  6699  0019                     	;# 
  6700  001A                     	;# 
  6701  001C                     	;# 
  6702  001C                     	;# 
  6703  001D                     	;# 
  6704  001D                     	;# 
  6705  001E                     	;# 
  6706  001F                     	;# 
  6707  008C                     	;# 
  6708  008C                     	;# 
  6709  008D                     	;# 
  6710  008E                     	;# 
  6711  008E                     	;# 
  6712  008F                     	;# 
  6713  0090                     	;# 
  6714  0090                     	;# 
  6715  0091                     	;# 
  6716  0093                     	;# 
  6717  0094                     	;# 
  6718  0095                     	;# 
  6719  0096                     	;# 
  6720  0097                     	;# 
  6721  0098                     	;# 
  6722  0099                     	;# 
  6723  009A                     	;# 
  6724  009B                     	;# 
  6725  009C                     	;# 
  6726  009D                     	;# 
  6727  009E                     	;# 
  6728  010C                     	;# 
  6729  010D                     	;# 
  6730  010E                     	;# 
  6731  010E                     	;# 
  6732  010F                     	;# 
  6733  0110                     	;# 
  6734  0110                     	;# 
  6735  0111                     	;# 
  6736  0112                     	;# 
  6737  0112                     	;# 
  6738  0113                     	;# 
  6739  0114                     	;# 
  6740  0114                     	;# 
  6741  0115                     	;# 
  6742  0116                     	;# 
  6743  0116                     	;# 
  6744  0117                     	;# 
  6745  0119                     	;# 
  6746  0119                     	;# 
  6747  0119                     	;# 
  6748  011A                     	;# 
  6749  011A                     	;# 
  6750  011A                     	;# 
  6751  011B                     	;# 
  6752  011B                     	;# 
  6753  011B                     	;# 
  6754  011B                     	;# 
  6755  011B                     	;# 
  6756  011C                     	;# 
  6757  011C                     	;# 
  6758  011C                     	;# 
  6759  011D                     	;# 
  6760  011D                     	;# 
  6761  011D                     	;# 
  6762  011E                     	;# 
  6763  011E                     	;# 
  6764  011E                     	;# 
  6765  011F                     	;# 
  6766  011F                     	;# 
  6767  011F                     	;# 
  6768  011F                     	;# 
  6769  011F                     	;# 
  6770  018C                     	;# 
  6771  018D                     	;# 
  6772  018E                     	;# 
  6773  018F                     	;# 
  6774  0190                     	;# 
  6775  0191                     	;# 
  6776  0192                     	;# 
  6777  0196                     	;# 
  6778  0197                     	;# 
  6779  0198                     	;# 
  6780  0199                     	;# 
  6781  019A                     	;# 
  6782  019B                     	;# 
  6783  019C                     	;# 
  6784  020C                     	;# 
  6785  020C                     	;# 
  6786  020D                     	;# 
  6787  020E                     	;# 
  6788  020F                     	;# 
  6789  020F                     	;# 
  6790  0210                     	;# 
  6791  0210                     	;# 
  6792  0211                     	;# 
  6793  0211                     	;# 
  6794  0212                     	;# 
  6795  0212                     	;# 
  6796  0213                     	;# 
  6797  0214                     	;# 
  6798  0215                     	;# 
  6799  0215                     	;# 
  6800  0216                     	;# 
  6801  0216                     	;# 
  6802  0217                     	;# 
  6803  0217                     	;# 
  6804  0218                     	;# 
  6805  0218                     	;# 
  6806  0219                     	;# 
  6807  021A                     	;# 
  6808  021B                     	;# 
  6809  021B                     	;# 
  6810  021C                     	;# 
  6811  021C                     	;# 
  6812  021D                     	;# 
  6813  021D                     	;# 
  6814  021E                     	;# 
  6815  021F                     	;# 
  6816  028C                     	;# 
  6817  028C                     	;# 
  6818  028D                     	;# 
  6819  028D                     	;# 
  6820  028E                     	;# 
  6821  028F                     	;# 
  6822  0290                     	;# 
  6823  0290                     	;# 
  6824  0291                     	;# 
  6825  0292                     	;# 
  6826  0292                     	;# 
  6827  0293                     	;# 
  6828  0293                     	;# 
  6829  0294                     	;# 
  6830  0295                     	;# 
  6831  0296                     	;# 
  6832  0296                     	;# 
  6833  0297                     	;# 
  6834  0298                     	;# 
  6835  0298                     	;# 
  6836  0299                     	;# 
  6837  0299                     	;# 
  6838  029A                     	;# 
  6839  029B                     	;# 
  6840  029C                     	;# 
  6841  029C                     	;# 
  6842  029D                     	;# 
  6843  030C                     	;# 
  6844  030C                     	;# 
  6845  030D                     	;# 
  6846  030E                     	;# 
  6847  030F                     	;# 
  6848  0310                     	;# 
  6849  0310                     	;# 
  6850  0311                     	;# 
  6851  0312                     	;# 
  6852  0313                     	;# 
  6853  0314                     	;# 
  6854  0314                     	;# 
  6855  0315                     	;# 
  6856  0316                     	;# 
  6857  0317                     	;# 
  6858  0318                     	;# 
  6859  0318                     	;# 
  6860  0319                     	;# 
  6861  031A                     	;# 
  6862  031B                     	;# 
  6863  031C                     	;# 
  6864  031C                     	;# 
  6865  031D                     	;# 
  6866  031E                     	;# 
  6867  031F                     	;# 
  6868  038C                     	;# 
  6869  038C                     	;# 
  6870  038D                     	;# 
  6871  038E                     	;# 
  6872  0390                     	;# 
  6873  0390                     	;# 
  6874  0391                     	;# 
  6875  0392                     	;# 
  6876  040C                     	;# 
  6877  040D                     	;# 
  6878  040E                     	;# 
  6879  040F                     	;# 
  6880  0410                     	;# 
  6881  0411                     	;# 
  6882  0416                     	;# 
  6883  0416                     	;# 
  6884  0417                     	;# 
  6885  0418                     	;# 
  6886  0418                     	;# 
  6887  0419                     	;# 
  6888  041A                     	;# 
  6889  041A                     	;# 
  6890  041B                     	;# 
  6891  041C                     	;# 
  6892  041C                     	;# 
  6893  041D                     	;# 
  6894  041E                     	;# 
  6895  041F                     	;# 
  6896  048C                     	;# 
  6897  048C                     	;# 
  6898  048D                     	;# 
  6899  048E                     	;# 
  6900  048F                     	;# 
  6901  048F                     	;# 
  6902  0490                     	;# 
  6903  0491                     	;# 
  6904  0492                     	;# 
  6905  0492                     	;# 
  6906  0493                     	;# 
  6907  0494                     	;# 
  6908  0495                     	;# 
  6909  0495                     	;# 
  6910  0496                     	;# 
  6911  0497                     	;# 
  6912  0498                     	;# 
  6913  0499                     	;# 
  6914  049A                     	;# 
  6915  049B                     	;# 
  6916  049C                     	;# 
  6917  049D                     	;# 
  6918  050C                     	;# 
  6919  050C                     	;# 
  6920  050D                     	;# 
  6921  050E                     	;# 
  6922  050F                     	;# 
  6923  050F                     	;# 
  6924  0510                     	;# 
  6925  0511                     	;# 
  6926  0512                     	;# 
  6927  0512                     	;# 
  6928  0513                     	;# 
  6929  0514                     	;# 
  6930  0515                     	;# 
  6931  0515                     	;# 
  6932  0516                     	;# 
  6933  0517                     	;# 
  6934  0518                     	;# 
  6935  0519                     	;# 
  6936  051A                     	;# 
  6937  051B                     	;# 
  6938  051C                     	;# 
  6939  051D                     	;# 
  6940  058C                     	;# 
  6941  058C                     	;# 
  6942  058D                     	;# 
  6943  058E                     	;# 
  6944  058F                     	;# 
  6945  058F                     	;# 
  6946  0590                     	;# 
  6947  0591                     	;# 
  6948  0592                     	;# 
  6949  0593                     	;# 
  6950  060C                     	;# 
  6951  060D                     	;# 
  6952  060E                     	;# 
  6953  060F                     	;# 
  6954  0610                     	;# 
  6955  0611                     	;# 
  6956  0612                     	;# 
  6957  0613                     	;# 
  6958  0614                     	;# 
  6959  0616                     	;# 
  6960  0617                     	;# 
  6961  0618                     	;# 
  6962  0619                     	;# 
  6963  061A                     	;# 
  6964  061B                     	;# 
  6965  061C                     	;# 
  6966  061D                     	;# 
  6967  061E                     	;# 
  6968  068C                     	;# 
  6969  068D                     	;# 
  6970  068E                     	;# 
  6971  068F                     	;# 
  6972  0690                     	;# 
  6973  0691                     	;# 
  6974  0692                     	;# 
  6975  0693                     	;# 
  6976  0694                     	;# 
  6977  070C                     	;# 
  6978  070D                     	;# 
  6979  070E                     	;# 
  6980  070F                     	;# 
  6981  0710                     	;# 
  6982  0711                     	;# 
  6983  0712                     	;# 
  6984  0713                     	;# 
  6985  0714                     	;# 
  6986  0716                     	;# 
  6987  0717                     	;# 
  6988  0718                     	;# 
  6989  0719                     	;# 
  6990  071A                     	;# 
  6991  071B                     	;# 
  6992  071C                     	;# 
  6993  071D                     	;# 
  6994  071E                     	;# 
  6995  0796                     	;# 
  6996  0797                     	;# 
  6997  0798                     	;# 
  6998  0799                     	;# 
  6999  079A                     	;# 
  7000  079B                     	;# 
  7001  080C                     	;# 
  7002  080D                     	;# 
  7003  080E                     	;# 
  7004  080F                     	;# 
  7005  0810                     	;# 
  7006  0811                     	;# 
  7007  0812                     	;# 
  7008  0813                     	;# 
  7009  0814                     	;# 
  7010  081A                     	;# 
  7011  081B                     	;# 
  7012  081C                     	;# 
  7013  081D                     	;# 
  7014  081E                     	;# 
  7015  081F                     	;# 
  7016  088C                     	;# 
  7017  088D                     	;# 
  7018  088E                     	;# 
  7019  088F                     	;# 
  7020  0890                     	;# 
  7021  0891                     	;# 
  7022  0892                     	;# 
  7023  0893                     	;# 
  7024  0895                     	;# 
  7025  0896                     	;# 
  7026  0897                     	;# 
  7027  0898                     	;# 
  7028  0899                     	;# 
  7029  089A                     	;# 
  7030  089B                     	;# 
  7031  090C                     	;# 
  7032  090E                     	;# 
  7033  090F                     	;# 
  7034  091F                     	;# 
  7035  091F                     	;# 
  7036  098F                     	;# 
  7037  098F                     	;# 
  7038  0990                     	;# 
  7039  0991                     	;# 
  7040  0992                     	;# 
  7041  0993                     	;# 
  7042  0994                     	;# 
  7043  0995                     	;# 
  7044  0996                     	;# 
  7045  0997                     	;# 
  7046  0E0F                     	;# 
  7047  0E10                     	;# 
  7048  0E11                     	;# 
  7049  0E12                     	;# 
  7050  0E13                     	;# 
  7051  0E14                     	;# 
  7052  0E15                     	;# 
  7053  0E16                     	;# 
  7054  0E17                     	;# 
  7055  0E18                     	;# 
  7056  0E19                     	;# 
  7057  0E1A                     	;# 
  7058  0E1B                     	;# 
  7059  0E1C                     	;# 
  7060  0E1D                     	;# 
  7061  0E1E                     	;# 
  7062  0E1F                     	;# 
  7063  0E20                     	;# 
  7064  0E21                     	;# 
  7065  0E22                     	;# 
  7066  0E23                     	;# 
  7067  0E24                     	;# 
  7068  0E25                     	;# 
  7069  0E26                     	;# 
  7070  0E27                     	;# 
  7071  0E28                     	;# 
  7072  0E29                     	;# 
  7073  0E2A                     	;# 
  7074  0E2B                     	;# 
  7075  0E2C                     	;# 
  7076  0E2D                     	;# 
  7077  0E2E                     	;# 
  7078  0E2F                     	;# 
  7079  0E30                     	;# 
  7080  0E31                     	;# 
  7081  0E32                     	;# 
  7082  0E33                     	;# 
  7083  0E34                     	;# 
  7084  0E35                     	;# 
  7085  0E36                     	;# 
  7086  0E37                     	;# 
  7087  0E8F                     	;# 
  7088  0E90                     	;# 
  7089  0E91                     	;# 
  7090  0E92                     	;# 
  7091  0E93                     	;# 
  7092  0E94                     	;# 
  7093  0E95                     	;# 
  7094  0E96                     	;# 
  7095  0E97                     	;# 
  7096  0E9C                     	;# 
  7097  0E9D                     	;# 
  7098  0E9E                     	;# 
  7099  0EA1                     	;# 
  7100  0EA2                     	;# 
  7101  0EA3                     	;# 
  7102  0EA4                     	;# 
  7103  0EA5                     	;# 
  7104  0EA9                     	;# 
  7105  0EAA                     	;# 
  7106  0EAB                     	;# 
  7107  0EAC                     	;# 
  7108  0EB1                     	;# 
  7109  0EB2                     	;# 
  7110  0EB3                     	;# 
  7111  0EB8                     	;# 
  7112  0EB9                     	;# 
  7113  0EBA                     	;# 
  7114  0EBB                     	;# 
  7115  0EBC                     	;# 
  7116  0EBD                     	;# 
  7117  0EBE                     	;# 
  7118  0EC3                     	;# 
  7119  0EC5                     	;# 
  7120  0EC6                     	;# 
  7121  0EC7                     	;# 
  7122  0EC8                     	;# 
  7123  0EC9                     	;# 
  7124  0ECA                     	;# 
  7125  0ECB                     	;# 
  7126  0ECC                     	;# 
  7127  0F10                     	;# 
  7128  0F11                     	;# 
  7129  0F12                     	;# 
  7130  0F13                     	;# 
  7131  0F14                     	;# 
  7132  0F15                     	;# 
  7133  0F16                     	;# 
  7134  0F17                     	;# 
  7135  0F18                     	;# 
  7136  0F19                     	;# 
  7137  0F1A                     	;# 
  7138  0F1B                     	;# 
  7139  0F1C                     	;# 
  7140  0F1D                     	;# 
  7141  0F1E                     	;# 
  7142  0F1F                     	;# 
  7143  0F20                     	;# 
  7144  0F21                     	;# 
  7145  0F22                     	;# 
  7146  0F23                     	;# 
  7147  0F24                     	;# 
  7148  0F25                     	;# 
  7149  0F26                     	;# 
  7150  0F27                     	;# 
  7151  0F28                     	;# 
  7152  0F29                     	;# 
  7153  0F2A                     	;# 
  7154  0F2B                     	;# 
  7155  0F2C                     	;# 
  7156  0F2D                     	;# 
  7157  0F2E                     	;# 
  7158  0F2F                     	;# 
  7159  0F30                     	;# 
  7160  0F31                     	;# 
  7161  0F32                     	;# 
  7162  0F38                     	;# 
  7163  0F39                     	;# 
  7164  0F3A                     	;# 
  7165  0F3B                     	;# 
  7166  0F3C                     	;# 
  7167  0F3D                     	;# 
  7168  0F3E                     	;# 
  7169  0F3F                     	;# 
  7170  0F40                     	;# 
  7171  0F41                     	;# 
  7172  0F43                     	;# 
  7173  0F44                     	;# 
  7174  0F45                     	;# 
  7175  0F46                     	;# 
  7176  0F47                     	;# 
  7177  0F48                     	;# 
  7178  0F49                     	;# 
  7179  0F4A                     	;# 
  7180  0F4B                     	;# 
  7181  0F4C                     	;# 
  7182  0F4E                     	;# 
  7183  0F4F                     	;# 
  7184  0F50                     	;# 
  7185  0F51                     	;# 
  7186  0F52                     	;# 
  7187  0F53                     	;# 
  7188  0F54                     	;# 
  7189  0F55                     	;# 
  7190  0F56                     	;# 
  7191  0F57                     	;# 
  7192  0F59                     	;# 
  7193  0F5A                     	;# 
  7194  0F5B                     	;# 
  7195  0F5C                     	;# 
  7196  0F5D                     	;# 
  7197  0F61                     	;# 
  7198  0F62                     	;# 
  7199  0F64                     	;# 
  7200  0F65                     	;# 
  7201  0F66                     	;# 
  7202  0F67                     	;# 
  7203  0F68                     	;# 
  7204  0F69                     	;# 
  7205  0F6A                     	;# 
  7206  0F6B                     	;# 
  7207  0F6C                     	;# 
  7208  0F6D                     	;# 
  7209  0FE4                     	;# 
  7210  0FE5                     	;# 
  7211  0FE6                     	;# 
  7212  0FE7                     	;# 
  7213  0FE8                     	;# 
  7214  0FE9                     	;# 
  7215  0FEA                     	;# 
  7216  0FEB                     	;# 
  7217  0FED                     	;# 
  7218  0FEE                     	;# 
  7219  0FEF                     	;# 
  7220                           
  7221                           	psect	idataBANK0
  7222  0A95                     __pidataBANK0:
  7223                           
  7224                           ;initializer for _clkAlarm
  7225  0A95  3401               	retlw	1
  7226  0A96  3400               	retlw	0
  7227  0A97  3400               	retlw	0
  7228  0A98  3400               	retlw	0
  7229  0A99  3400               	retlw	0
  7230  0A9A  3400               	retlw	0
  7231  0A9B  3400               	retlw	0
  7232                           
  7233                           ;initializer for _lumAlarm
  7234  0A9C  3404               	retlw	4
  7235  0A9D  3400               	retlw	0
  7236  0A9E  3400               	retlw	0
  7237                           
  7238                           ;initializer for _tempAlarm
  7239  0A9F  341C               	retlw	28
  7240  0AA0  3400               	retlw	0
  7241  0AA1  3400               	retlw	0
  7242                           
  7243                           ;initializer for _alarmsEnable
  7244  0AA2  3401               	retlw	1
  7245                           
  7246                           	psect	idataBANK1
  7247  0A48                     __pidataBANK1:
  7248                           
  7249                           ;initializer for _alarmPWMStart
  7250  0A48  34FF               	retlw	255
  7251  0A49  34FF               	retlw	255
  7252  0A4A  34FF               	retlw	255
  7253  0A4B  34FF               	retlw	255
  7254  0A4C  34FF               	retlw	255
  7255  0A4D  34FF               	retlw	255
  7256                           
  7257                           	psect	stringtext1
  7258  100F                     __pstringtext1:
  7259  100F                     _dpowers:
  7260  100F  3401               	retlw	1
  7261  1010  3400               	retlw	0
  7262  1011  340A               	retlw	10
  7263  1012  3400               	retlw	0
  7264  1013  3464               	retlw	100
  7265  1014  3400               	retlw	0
  7266  1015  34E8               	retlw	232
  7267  1016  3403               	retlw	3
  7268  1017  3410               	retlw	16
  7269  1018  3427               	retlw	39
  7270  1019                     __end_of_dpowers:
  7271                           
  7272                           	psect	nvBANK0
  7273  006E                     __pnvBANK0:
  7274  006E                     _timer3ReloadVal:
  7275  006E                     	ds	2
  7276                           
  7277                           	psect	nvBANK1
  7278  00A0                     __pnvBANK1:
  7279  00A0                     _TMR5_InterruptHandler:
  7280  00A0                     	ds	2
  7281  00A2                     _timer5ReloadVal:
  7282  00A2                     	ds	2
  7283  00A4                     _TMR3_InterruptHandler:
  7284  00A4                     	ds	2
  7285  00A6                     _TMR1_InterruptHandler:
  7286  00A6                     	ds	2
  7287  00A8                     _timer1ReloadVal:
  7288  00A8                     	ds	2
  7289  0013                     _TRISCbits	set	19
  7290  000E                     _PORTCbits	set	14
  7291  000D                     _PORTBbits	set	13
  7292  0016                     _LATAbits	set	22
  7293  000B                     _INTCONbits	set	11
  7294  0014                     _TRISD	set	20
  7295  0013                     _TRISC	set	19
  7296  0012                     _TRISB	set	18
  7297  0011                     _TRISA	set	17
  7298  0015                     _TRISE	set	21
  7299  0018                     _LATC	set	24
  7300  0017                     _LATB	set	23
  7301  0016                     _LATA	set	22
  7302  0019                     _LATD	set	25
  7303  001A                     _LATE	set	26
  7304  0094                     _ADCON1bits	set	148
  7305  008E                     _ADPREVL	set	142
  7306  008F                     _ADPREVH	set	143
  7307  0097                     _ADSTATbits	set	151
  7308  0090                     _ADACCL	set	144
  7309  0091                     _ADACCH	set	145
  7310  0095                     _ADCON2bits	set	149
  7311  009C                     _ADPRE	set	156
  7312  0096                     _ADCON3bits	set	150
  7313  008C                     _ADRESL	set	140
  7314  008D                     _ADRESH	set	141
  7315  0093                     _ADCON0bits	set	147
  7316  009D                     _ADACQ	set	157
  7317  0093                     _ADCON0	set	147
  7318  0098                     _ADCLK	set	152
  7319  0099                     _ADACT	set	153
  7320  009A                     _ADREF	set	154
  7321  0097                     _ADSTAT	set	151
  7322  0096                     _ADCON3	set	150
  7323  0095                     _ADCON2	set	149
  7324  0094                     _ADCON1	set	148
  7325  009B                     _ADCAP	set	155
  7326  009E                     _ADPCH	set	158
  7327  0116                     _ADERRL	set	278
  7328  0117                     _ADERRH	set	279
  7329  0114                     _ADFLTRL	set	276
  7330  0115                     _ADFLTRH	set	277
  7331  010C                     _ADCNT	set	268
  7332  010D                     _ADRPT	set	269
  7333  0113                     _ADSTPTH	set	275
  7334  0112                     _ADSTPTL	set	274
  7335  0111                     _ADUTHH	set	273
  7336  0110                     _ADUTHL	set	272
  7337  010F                     _ADLTHH	set	271
  7338  010E                     _ADLTHL	set	270
  7339  018E                     _SSP1MSK	set	398
  7340  018D                     _SSP1ADD	set	397
  7341  018F                     _SSP1STAT	set	399
  7342  0191                     _SSP1CON2	set	401
  7343  0190                     _SSP1CON1bits	set	400
  7344  018C                     _SSP1BUF	set	396
  7345  018F                     _SSP1STATbits	set	399
  7346  0191                     _SSP1CON2bits	set	401
  7347  0190                     _SSP1CON1	set	400
  7348  021F                     _CCPTMRS1bits	set	543
  7349  021B                     _T5GCONbits	set	539
  7350  021A                     _T5CONbits	set	538
  7351  021A                     _T5CON	set	538
  7352  0218                     _TMR5L	set	536
  7353  0219                     _TMR5H	set	537
  7354  021D                     _T5CLK	set	541
  7355  021C                     _T5GATE	set	540
  7356  021B                     _T5GCON	set	539
  7357  0215                     _T3GCONbits	set	533
  7358  0214                     _T3CONbits	set	532
  7359  0214                     _T3CON	set	532
  7360  0212                     _TMR3L	set	530
  7361  0213                     _TMR3H	set	531
  7362  0217                     _T3CLK	set	535
  7363  0216                     _T3GATE	set	534
  7364  0215                     _T3GCON	set	533
  7365  020F                     _T1GCONbits	set	527
  7366  020E                     _T1CONbits	set	526
  7367  020E                     _T1CON	set	526
  7368  020C                     _TMR1L	set	524
  7369  020D                     _TMR1H	set	525
  7370  0211                     _T1CLK	set	529
  7371  0210                     _T1GATE	set	528
  7372  020F                     _T1GCON	set	527
  7373  028D                     _PR2	set	653
  7374  028C                     _TMR2	set	652
  7375  028E                     _T2CONbits	set	654
  7376  0291                     _T2RSTbits	set	657
  7377  028F                     _T2HLTbits	set	655
  7378  028E                     _T2CON	set	654
  7379  028C                     _T2TMR	set	652
  7380  028D                     _T2PR	set	653
  7381  0291                     _T2RST	set	657
  7382  028F                     _T2HLT	set	655
  7383  0290                     _T2CLKCON	set	656
  7384  038C                     _PWM6DCL	set	908
  7385  038D                     _PWM6DCH	set	909
  7386  038E                     _PWM6CON	set	910
  7387  1C77                     _PWM6EN	set	7287
  7388  0710                     _PIR4bits	set	1808
  7389  071A                     _PIE4bits	set	1818
  7390  0719                     _PIE3bits	set	1817
  7391  070F                     _PIR3bits	set	1807
  7392  079B                     _PMD5	set	1947
  7393  079A                     _PMD4	set	1946
  7394  0799                     _PMD3	set	1945
  7395  0798                     _PMD2	set	1944
  7396  0797                     _PMD1	set	1943
  7397  0796                     _PMD0	set	1942
  7398  0892                     _OSCTUNE	set	2194
  7399  0893                     _OSCFRQ	set	2195
  7400  0891                     _OSCEN	set	2193
  7401  088F                     _OSCCON3	set	2191
  7402  088D                     _OSCCON1	set	2189
  7403  0EC6                     _SSP1DATPPS	set	3782
  7404  0EC5                     _SSP1CLKPPS	set	3781
  7405  0F16                     _RA6PPS	set	3862
  7406  0F24                     _RC4PPS	set	3876
  7407  0F23                     _RC3PPS	set	3875
  7408  0F67                     _SLRCONE	set	3943
  7409  0F5C                     _SLRCOND	set	3932
  7410  0F51                     _SLRCONC	set	3921
  7411  0F46                     _SLRCONB	set	3910
  7412  0F3B                     _SLRCONA	set	3899
  7413  0F5B                     _ODCOND	set	3931
  7414  0F50                     _ODCONC	set	3920
  7415  0F45                     _ODCONB	set	3909
  7416  0F3A                     _ODCONA	set	3898
  7417  0F66                     _ODCONE	set	3942
  7418  0F4F                     _WPUC	set	3919
  7419  0F39                     _WPUA	set	3897
  7420  0F44                     _WPUB	set	3908
  7421  0F65                     _WPUE	set	3941
  7422  0F5A                     _WPUD	set	3930
  7423  0F38                     _ANSELA	set	3896
  7424  0F64                     _ANSELE	set	3940
  7425  0F43                     _ANSELB	set	3907
  7426  0F4E                     _ANSELC	set	3918
  7427  0F59                     _ANSELD	set	3929
  7428  7A7C                     _WPUC4	set	31356
  7429  7A7B                     _WPUC3	set	31355
  7430                           
  7431                           	psect	stringtext2
  7432  1000                     __pstringtext2:
  7433  1000                     STR_1:
  7434  1000  3425               	retlw	37	;'%'
  7435  1001  3430               	retlw	48	;'0'
  7436  1002  3432               	retlw	50	;'2'
  7437  1003  3464               	retlw	100	;'d'
  7438  1004  343A               	retlw	58	;':'
  7439  1005  3425               	retlw	37	;'%'
  7440  1006  3430               	retlw	48	;'0'
  7441  1007  3432               	retlw	50	;'2'
  7442  1008  3464               	retlw	100	;'d'
  7443  1009  343A               	retlw	58	;':'
  7444  100A  3425               	retlw	37	;'%'
  7445  100B  3430               	retlw	48	;'0'
  7446  100C  3432               	retlw	50	;'2'
  7447  100D  3464               	retlw	100	;'d'
  7448  100E  3400               	retlw	0
  7449                           
  7450                           	psect	stringtext3
  7451  1019                     __pstringtext3:
  7452  1019                     STR_3:
  7453  1019  3425               	retlw	37	;'%'
  7454  101A  3430               	retlw	48	;'0'
  7455  101B  3432               	retlw	50	;'2'
  7456  101C  3464               	retlw	100	;'d'
  7457  101D  3420               	retlw	32	;' '
  7458  101E  3443               	retlw	67	;'C'
  7459  101F  3400               	retlw	0
  7460                           
  7461                           	psect	stringtext4
  7462  1020                     __pstringtext4:
  7463  1020                     STR_5:
  7464  1020  344C               	retlw	76	;'L'
  7465  1021  3420               	retlw	32	;' '
  7466  1022  3425               	retlw	37	;'%'
  7467  1023  3464               	retlw	100	;'d'
  7468  1024  3400               	retlw	0
  7469                           
  7470                           	psect	stringtext5
  7471  0000                     __pstringtext5:
  7472  1019                     
  7473                           	psect	cinit
  7474  0042                     start_initialization:	
  7475                           ; #config settings
  7476                           
  7477  0042                     __initialization:
  7478                           
  7479                           ; Initialize objects allocated to BANK0
  7480  0042  3095               	movlw	low __pidataBANK0
  7481  0043  0084               	movwf	4
  7482  0044  308A               	movlw	(high __pidataBANK0)| (0+128)
  7483  0045  0085               	movwf	5
  7484  0046  3060               	movlw	low __pdataBANK0
  7485  0047  0086               	movwf	6
  7486  0048  3000               	movlw	high __pdataBANK0
  7487  0049  0087               	movwf	7
  7488  004A  300E               	movlw	14
  7489  004B  318A  2242  3180   	fcall	init_ram
  7490                           
  7491                           ; Initialize objects allocated to BANK1
  7492  004E  3048               	movlw	low __pidataBANK1
  7493  004F  0084               	movwf	4
  7494  0050  308A               	movlw	(high __pidataBANK1)| (0+128)
  7495  0051  0085               	movwf	5
  7496  0052  30BA               	movlw	low __pdataBANK1
  7497  0053  0086               	movwf	6
  7498  0054  3000               	movlw	high __pdataBANK1
  7499  0055  0087               	movwf	7
  7500  0056  3006               	movlw	6
  7501  0057  318A  2242  3180   	fcall	init_ram
  7502                           
  7503                           ; Clear objects allocated to BANK0
  7504  005A  304C               	movlw	low __pbssBANK0
  7505  005B  0084               	movwf	4
  7506  005C  3000               	movlw	high __pbssBANK0
  7507  005D  0085               	movwf	5
  7508  005E  3014               	movlw	20
  7509  005F  318A  223C  3180   	fcall	clear_ram0
  7510                           
  7511                           ; Clear objects allocated to BANK1
  7512  0062  0021               	movlb	1	; select bank1
  7513  0063  01B4               	clrf	__pbssBANK1& (0+127)
  7514  0064  01B5               	clrf	(__pbssBANK1+1)& (0+127)
  7515  0065  01B6               	clrf	(__pbssBANK1+2)& (0+127)
  7516  0066  01B7               	clrf	(__pbssBANK1+3)& (0+127)
  7517  0067  01B8               	clrf	(__pbssBANK1+4)& (0+127)
  7518  0068  01B9               	clrf	(__pbssBANK1+5)& (0+127)
  7519  0069                     end_of_initialization:	
  7520                           ;End of C runtime variable initialization code
  7521                           
  7522  0069                     __end_of__initialization:
  7523  0069  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7524  006A  0020               	movlb	0
  7525  006B  3187  2F26         	ljmp	_main	;jump to C main() function
  7526                           
  7527                           	psect	bssBANK0
  7528  004C                     __pbssBANK0:
  7529  004C                     _t:
  7530  004C                     	ds	6
  7531  0052                     _mode:
  7532  0052                     	ds	2
  7533  0054                     _editingClockAlarm:
  7534  0054                     	ds	2
  7535  0056                     _dimingLed:
  7536  0056                     	ds	2
  7537  0058                     _i2c1_driver_i2cISR:
  7538  0058                     	ds	2
  7539  005A                     _i2c1_driver_busCollisionISR:
  7540  005A                     	ds	2
  7541  005C                     _editingLumAlarm:
  7542  005C                     	ds	1
  7543  005D                     _editingTempAlarm:
  7544  005D                     	ds	1
  7545  005E                     _lumLevel:
  7546  005E                     	ds	1
  7547  005F                     _temp:
  7548  005F                     	ds	1
  7549                           
  7550                           	psect	dataBANK0
  7551  0060                     __pdataBANK0:
  7552  0060                     _clkAlarm:
  7553  0060                     	ds	7
  7554  0067                     _lumAlarm:
  7555  0067                     	ds	3
  7556  006A                     _tempAlarm:
  7557  006A                     	ds	3
  7558  006D                     _alarmsEnable:
  7559  006D                     	ds	1
  7560                           
  7561                           	psect	bssBANK1
  7562  00B4                     __pbssBANK1:
  7563  00B4                     menuLCD_ISR@F12792:
  7564  00B4                     	ds	6
  7565                           
  7566                           	psect	dataBANK1
  7567  00BA                     __pdataBANK1:
  7568  00BA                     _alarmPWMStart:
  7569  00BA                     	ds	6
  7570                           
  7571                           	psect	inittext
  7572  0A42                     init_ram:
  7573  0A42  00FE               	movwf	btemp
  7574  0A43                     initloop:
  7575  0A43  0012               	moviw fsr0++
  7576  0A44  001E               	movwi fsr1++
  7577  0A45  0BFE               	decfsz	btemp,f
  7578  0A46  2A43               	goto	initloop
  7579  0A47  3400               	retlw	0
  7580                           
  7581                           	psect	clrtext
  7582  0A3C                     clear_ram0:	
  7583                           ;	Called with FSR0 containing the base address, and
  7584                           ;	WREG with the size to clear
  7585                           
  7586  0A3C  0064               	clrwdt	;clear the watchdog before getting into this loop
  7587  0A3D                     clrloop0:
  7588  0A3D  0180               	clrf	0	;clear RAM location pointed to by FSR
  7589  0A3E  3101               	addfsr 0,1
  7590  0A3F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7591  0A40  2A3D               	goto	clrloop0	;have we reached the end yet?
  7592  0A41  3400               	retlw	0	;all done for this memory range, return
  7593                           
  7594                           	psect	cstackBANK1
  7595  00AA                     __pcstackBANK1:
  7596  00AA                     ??_PMD_Initialize:
  7597  00AA                     ??_OSCILLATOR_Initialize:	
  7598                           ; 1 bytes @ 0x0
  7599                           
  7600  00AA                     ??_PWM6_Initialize:	
  7601                           ; 1 bytes @ 0x0
  7602                           
  7603  00AA                     ??_ADCC_Initialize:	
  7604                           ; 1 bytes @ 0x0
  7605                           
  7606  00AA                     ??_TMR2_Initialize:	
  7607                           ; 1 bytes @ 0x0
  7608                           
  7609  00AA                     ?_TMR1_SetInterruptHandler:	
  7610                           ; 1 bytes @ 0x0
  7611                           
  7612  00AA                     ?_TMR3_SetInterruptHandler:	
  7613                           ; 1 bytes @ 0x0
  7614                           
  7615  00AA                     ?_TMR5_SetInterruptHandler:	
  7616                           ; 1 bytes @ 0x0
  7617                           
  7618  00AA                     ??_WriteI2C:	
  7619                           ; 1 bytes @ 0x0
  7620                           
  7621  00AA                     ??_PIN_MANAGER_Initialize:	
  7622                           ; 1 bytes @ 0x0
  7623                           
  7624  00AA                     ??_i2c1_driver_open:	
  7625                           ; 1 bytes @ 0x0
  7626                           
  7627  00AA                     ?_PWM6_LoadDutyValue:	
  7628                           ; 1 bytes @ 0x0
  7629                           
  7630  00AA                     ??_TMR2_Stop:	
  7631                           ; 1 bytes @ 0x0
  7632                           
  7633  00AA                     ??_TMR2_StopTimer:	
  7634                           ; 1 bytes @ 0x0
  7635                           
  7636  00AA                     ??_PWM_Output_D4_Disable:	
  7637                           ; 1 bytes @ 0x0
  7638                           
  7639  00AA                     ??_editClock:	
  7640                           ; 1 bytes @ 0x0
  7641                           
  7642  00AA                     ??_editTemp:	
  7643                           ; 1 bytes @ 0x0
  7644                           
  7645  00AA                     ??_editLum:	
  7646                           ; 1 bytes @ 0x0
  7647                           
  7648  00AA                     ??_toggleAlarms:	
  7649                           ; 1 bytes @ 0x0
  7650                           
  7651  00AA                     TMR1_SetInterruptHandler@InterruptHandler:	
  7652                           ; 1 bytes @ 0x0
  7653                           
  7654  00AA                     TMR3_SetInterruptHandler@InterruptHandler:	
  7655                           ; 2 bytes @ 0x0
  7656                           
  7657  00AA                     TMR5_SetInterruptHandler@InterruptHandler:	
  7658                           ; 2 bytes @ 0x0
  7659                           
  7660  00AA                     PWM6_LoadDutyValue@dutyValue:	
  7661                           ; 2 bytes @ 0x0
  7662                           
  7663                           
  7664                           ; 2 bytes @ 0x0
  7665  00AA                     	ds	1
  7666  00AB                     WriteI2C@data_out:
  7667                           
  7668                           ; 1 bytes @ 0x1
  7669  00AB                     	ds	1
  7670  00AC                     ??_TMR3_Initialize:
  7671  00AC                     ??_TMR5_Initialize:	
  7672                           ; 1 bytes @ 0x2
  7673                           
  7674  00AC                     ??_TMR1_Initialize:	
  7675                           ; 1 bytes @ 0x2
  7676                           
  7677  00AC                     ??_TMR1_SetInterruptHandler:	
  7678                           ; 1 bytes @ 0x2
  7679                           
  7680  00AC                     ??_TMR3_SetInterruptHandler:	
  7681                           ; 1 bytes @ 0x2
  7682                           
  7683  00AC                     ??_TMR5_SetInterruptHandler:	
  7684                           ; 1 bytes @ 0x2
  7685                           
  7686  00AC                     ??_SYSTEM_Initialize:	
  7687                           ; 1 bytes @ 0x2
  7688                           
  7689  00AC                     ??_PWM6_LoadDutyValue:	
  7690                           ; 1 bytes @ 0x2
  7691                           
  7692  00AC                     ??_LCDsend:	
  7693                           ; 1 bytes @ 0x2
  7694                           
  7695  00AC                     ?_LCDsend2x4:	
  7696                           ; 1 bytes @ 0x2
  7697                           
  7698  00AC                     LCDsend2x4@mode:	
  7699                           ; 1 bytes @ 0x2
  7700                           
  7701                           
  7702                           ; 1 bytes @ 0x2
  7703  00AC                     	ds	1
  7704  00AD                     ??_LCDsend2x4:
  7705  00AD                     LCDsend@c:	
  7706                           ; 1 bytes @ 0x3
  7707                           
  7708                           
  7709                           ; 1 bytes @ 0x3
  7710  00AD                     	ds	2
  7711  00AF                     LCDsend2x4@c:
  7712                           
  7713                           ; 1 bytes @ 0x5
  7714  00AF                     	ds	1
  7715  00B0                     LCDsend2x4@hc:
  7716                           
  7717                           ; 1 bytes @ 0x6
  7718  00B0                     	ds	1
  7719  00B1                     LCDsend2x4@lc:
  7720                           
  7721                           ; 1 bytes @ 0x7
  7722  00B1                     	ds	1
  7723  00B2                     ??_LCDinit:
  7724                           
  7725                           ; 1 bytes @ 0x8
  7726  00B2                     	ds	1
  7727  00B3                     ??_main:
  7728                           
  7729                           ; 1 bytes @ 0x9
  7730  00B3                     	ds	1
  7731                           
  7732                           	psect	cstackCOMMON
  7733  0070                     __pcstackCOMMON:
  7734  0070                     ?_isdigit:
  7735  0070                     ?_i2c1_driver_open:	
  7736                           ; 1 bit 
  7737                           
  7738  0070                     ?_PMD_Initialize:	
  7739                           ; 1 bit 
  7740                           
  7741  0070                     ?_OSCILLATOR_Initialize:	
  7742                           ; 1 bytes @ 0x0
  7743                           
  7744  0070                     ?_PWM6_Initialize:	
  7745                           ; 1 bytes @ 0x0
  7746                           
  7747  0070                     ?_ADCC_Initialize:	
  7748                           ; 1 bytes @ 0x0
  7749                           
  7750  0070                     ?_TMR3_Initialize:	
  7751                           ; 1 bytes @ 0x0
  7752                           
  7753  0070                     ?_TMR2_Initialize:	
  7754                           ; 1 bytes @ 0x0
  7755                           
  7756  0070                     ?_TMR5_Initialize:	
  7757                           ; 1 bytes @ 0x0
  7758                           
  7759  0070                     ?_TMR1_Initialize:	
  7760                           ; 1 bytes @ 0x0
  7761                           
  7762  0070                     ?_TMR5_ISR:	
  7763                           ; 1 bytes @ 0x0
  7764                           
  7765  0070                     ?_TMR3_ISR:	
  7766                           ; 1 bytes @ 0x0
  7767                           
  7768  0070                     ?_TMR1_ISR:	
  7769                           ; 1 bytes @ 0x0
  7770                           
  7771  0070                     ?_TMR1_DefaultInterruptHandler:	
  7772                           ; 1 bytes @ 0x0
  7773                           
  7774  0070                     ??_TMR1_DefaultInterruptHandler:	
  7775                           ; 1 bytes @ 0x0
  7776                           
  7777  0070                     ?_TMR3_DefaultInterruptHandler:	
  7778                           ; 1 bytes @ 0x0
  7779                           
  7780  0070                     ??_TMR3_DefaultInterruptHandler:	
  7781                           ; 1 bytes @ 0x0
  7782                           
  7783  0070                     ?_TMR5_DefaultInterruptHandler:	
  7784                           ; 1 bytes @ 0x0
  7785                           
  7786  0070                     ??_TMR5_DefaultInterruptHandler:	
  7787                           ; 1 bytes @ 0x0
  7788                           
  7789  0070                     ??_isdigit:	
  7790                           ; 1 bytes @ 0x0
  7791                           
  7792  0070                     ?_ReadI2C:	
  7793                           ; 1 bytes @ 0x0
  7794                           
  7795  0070                     ??_ReadI2C:	
  7796                           ; 1 bytes @ 0x0
  7797                           
  7798  0070                     ?_WriteI2C:	
  7799                           ; 1 bytes @ 0x0
  7800                           
  7801  0070                     ?_PIN_MANAGER_Initialize:	
  7802                           ; 1 bytes @ 0x0
  7803                           
  7804  0070                     ?_SYSTEM_Initialize:	
  7805                           ; 1 bytes @ 0x0
  7806                           
  7807  0070                     ?_INTERRUPT_InterruptManager:	
  7808                           ; 1 bytes @ 0x0
  7809                           
  7810  0070                     ?_TMR1_WriteTimer:	
  7811                           ; 1 bytes @ 0x0
  7812                           
  7813  0070                     ?_TMR3_WriteTimer:	
  7814                           ; 1 bytes @ 0x0
  7815                           
  7816  0070                     ?_TMR5_WriteTimer:	
  7817                           ; 1 bytes @ 0x0
  7818                           
  7819  0070                     ?_TMR2_Start:	
  7820                           ; 1 bytes @ 0x0
  7821                           
  7822  0070                     ??_TMR2_Start:	
  7823                           ; 1 bytes @ 0x0
  7824                           
  7825  0070                     ?_TMR2_StartTimer:	
  7826                           ; 1 bytes @ 0x0
  7827                           
  7828  0070                     ??_TMR2_StartTimer:	
  7829                           ; 1 bytes @ 0x0
  7830                           
  7831  0070                     ?_TMR2_Stop:	
  7832                           ; 1 bytes @ 0x0
  7833                           
  7834  0070                     ?_TMR2_StopTimer:	
  7835                           ; 1 bytes @ 0x0
  7836                           
  7837  0070                     ?_tsttc:	
  7838                           ; 1 bytes @ 0x0
  7839                           
  7840  0070                     ?_LCDsend:	
  7841                           ; 1 bytes @ 0x0
  7842                           
  7843  0070                     ?_LCDinit:	
  7844                           ; 1 bytes @ 0x0
  7845                           
  7846  0070                     ?_LCDcmd:	
  7847                           ; 1 bytes @ 0x0
  7848                           
  7849  0070                     ?_LCDchar:	
  7850                           ; 1 bytes @ 0x0
  7851                           
  7852  0070                     ?_LCDstr:	
  7853                           ; 1 bytes @ 0x0
  7854                           
  7855  0070                     ?_differenceBetweenTimePeriod:	
  7856                           ; 1 bytes @ 0x0
  7857                           
  7858  0070                     ?_PWM_Output_D4_Enable:	
  7859                           ; 1 bytes @ 0x0
  7860                           
  7861  0070                     ??_PWM_Output_D4_Enable:	
  7862                           ; 1 bytes @ 0x0
  7863                           
  7864  0070                     ?_PWM_Output_D4_Disable:	
  7865                           ; 1 bytes @ 0x0
  7866                           
  7867  0070                     ?_Clock_ISR:	
  7868                           ; 1 bytes @ 0x0
  7869                           
  7870  0070                     ??_Clock_ISR:	
  7871                           ; 1 bytes @ 0x0
  7872                           
  7873  0070                     ?_menuLCD_ISR:	
  7874                           ; 1 bytes @ 0x0
  7875                           
  7876  0070                     ?_monitoring_ISR:	
  7877                           ; 1 bytes @ 0x0
  7878                           
  7879  0070                     ?_editClock:	
  7880                           ; 1 bytes @ 0x0
  7881                           
  7882  0070                     ?_editTemp:	
  7883                           ; 1 bytes @ 0x0
  7884                           
  7885  0070                     ?_editLum:	
  7886                           ; 1 bytes @ 0x0
  7887                           
  7888  0070                     ?_toggleAlarms:	
  7889                           ; 1 bytes @ 0x0
  7890                           
  7891  0070                     ?_main:	
  7892                           ; 1 bytes @ 0x0
  7893                           
  7894  0070                     ?i1_WriteI2C:	
  7895                           ; 1 bytes @ 0x0
  7896                           
  7897  0070                     ??i1_WriteI2C:	
  7898                           ; 1 bytes @ 0x0
  7899                           
  7900  0070                     ?i1_PWM6_LoadDutyValue:	
  7901                           ; 1 bytes @ 0x0
  7902                           
  7903  0070                     ?i1_TMR2_Stop:	
  7904                           ; 1 bytes @ 0x0
  7905                           
  7906  0070                     ??i1_TMR2_Stop:	
  7907                           ; 1 bytes @ 0x0
  7908                           
  7909  0070                     ?i1_TMR2_StopTimer:	
  7910                           ; 1 bytes @ 0x0
  7911                           
  7912  0070                     ??i1_TMR2_StopTimer:	
  7913                           ; 1 bytes @ 0x0
  7914                           
  7915  0070                     ?i1_PWM_Output_D4_Disable:	
  7916                           ; 1 bytes @ 0x0
  7917                           
  7918  0070                     ??i1_PWM_Output_D4_Disable:	
  7919                           ; 1 bytes @ 0x0
  7920                           
  7921  0070                     ?_ADCC_GetSingleConversion:	
  7922                           ; 1 bytes @ 0x0
  7923                           
  7924  0070                     ?___wmul:	
  7925                           ; 2 bytes @ 0x0
  7926                           
  7927  0070                     ?___lwdiv:	
  7928                           ; 2 bytes @ 0x0
  7929                           
  7930  0070                     _isdigit$2820:	
  7931                           ; 2 bytes @ 0x0
  7932                           
  7933  0070                     TMR1_WriteTimer@timerVal:	
  7934                           ; 1 bytes @ 0x0
  7935                           
  7936  0070                     TMR3_WriteTimer@timerVal:	
  7937                           ; 2 bytes @ 0x0
  7938                           
  7939  0070                     TMR5_WriteTimer@timerVal:	
  7940                           ; 2 bytes @ 0x0
  7941                           
  7942  0070                     ___wmul@multiplier:	
  7943                           ; 2 bytes @ 0x0
  7944                           
  7945  0070                     ___lwdiv@divisor:	
  7946                           ; 2 bytes @ 0x0
  7947                           
  7948  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  7949                           ; 2 bytes @ 0x0
  7950                           
  7951  0070                     differenceBetweenTimePeriod@start:	
  7952                           ; 2 bytes @ 0x0
  7953                           
  7954                           
  7955                           ; 6 bytes @ 0x0
  7956  0070                     	ds	1
  7957  0071                     isdigit@c:
  7958  0071                     i1WriteI2C@data_out:	
  7959                           ; 1 bytes @ 0x1
  7960                           
  7961                           
  7962                           ; 1 bytes @ 0x1
  7963  0071                     	ds	1
  7964  0072                     ??_TMR1_ISR:
  7965  0072                     ??_TMR1_WriteTimer:	
  7966                           ; 1 bytes @ 0x2
  7967                           
  7968  0072                     ??_TMR3_WriteTimer:	
  7969                           ; 1 bytes @ 0x2
  7970                           
  7971  0072                     ??_TMR5_WriteTimer:	
  7972                           ; 1 bytes @ 0x2
  7973                           
  7974  0072                     ??_tsttc:	
  7975                           ; 1 bytes @ 0x2
  7976                           
  7977  0072                     ??i1_PWM6_LoadDutyValue:	
  7978                           ; 1 bytes @ 0x2
  7979                           
  7980  0072                     ?i1_LCDsend2x4:	
  7981                           ; 1 bytes @ 0x2
  7982                           
  7983  0072                     i1LCDsend2x4@mode:	
  7984                           ; 1 bytes @ 0x2
  7985                           
  7986  0072                     ___wmul@multiplicand:	
  7987                           ; 1 bytes @ 0x2
  7988                           
  7989  0072                     ___lwdiv@dividend:	
  7990                           ; 2 bytes @ 0x2
  7991                           
  7992                           
  7993                           ; 2 bytes @ 0x2
  7994  0072                     	ds	1
  7995  0073                     ??_ADCC_GetSingleConversion:
  7996  0073                     ??i1_LCDsend2x4:	
  7997                           ; 1 bytes @ 0x3
  7998                           
  7999  0073                     ADCC_GetSingleConversion@channel:	
  8000                           ; 1 bytes @ 0x3
  8001                           
  8002  0073                     tsttc@value:	
  8003                           ; 1 bytes @ 0x3
  8004                           
  8005                           
  8006                           ; 1 bytes @ 0x3
  8007  0073                     	ds	1
  8008  0074                     ??_monitoring_ISR:
  8009  0074                     ??___wmul:	
  8010                           ; 1 bytes @ 0x4
  8011                           
  8012  0074                     ??___lwdiv:	
  8013                           ; 1 bytes @ 0x4
  8014                           
  8015  0074                     ___wmul@product:	
  8016                           ; 1 bytes @ 0x4
  8017                           
  8018                           
  8019                           ; 2 bytes @ 0x4
  8020  0074                     	ds	1
  8021  0075                     i1LCDsend2x4@c:
  8022  0075                     ___lwdiv@quotient:	
  8023                           ; 1 bytes @ 0x5
  8024                           
  8025                           
  8026                           ; 2 bytes @ 0x5
  8027  0075                     	ds	1
  8028  0076                     i1LCDsend2x4@hc:
  8029  0076                     differenceBetweenTimePeriod@stop:	
  8030                           ; 1 bytes @ 0x6
  8031                           
  8032                           
  8033                           ; 6 bytes @ 0x6
  8034  0076                     	ds	1
  8035  0077                     ??_TMR5_ISR:
  8036  0077                     ___lwdiv@counter:	
  8037                           ; 1 bytes @ 0x7
  8038                           
  8039  0077                     i1LCDsend2x4@lc:	
  8040                           ; 1 bytes @ 0x7
  8041                           
  8042                           
  8043                           ; 1 bytes @ 0x7
  8044  0077                     	ds	1
  8045  0078                     ??_LCDcmd:
  8046  0078                     ??_LCDchar:	
  8047                           ; 1 bytes @ 0x8
  8048                           
  8049  0078                     ?___lwmod:	
  8050                           ; 1 bytes @ 0x8
  8051                           
  8052  0078                     LCDcmd@c:	
  8053                           ; 2 bytes @ 0x8
  8054                           
  8055  0078                     LCDchar@c:	
  8056                           ; 1 bytes @ 0x8
  8057                           
  8058  0078                     ___lwmod@divisor:	
  8059                           ; 1 bytes @ 0x8
  8060                           
  8061                           
  8062                           ; 2 bytes @ 0x8
  8063  0078                     	ds	1
  8064  0079                     ??_LCDstr:
  8065                           
  8066                           ; 1 bytes @ 0x9
  8067  0079                     	ds	1
  8068  007A                     LCDstr@c:
  8069  007A                     ___lwmod@dividend:	
  8070                           ; 1 bytes @ 0xA
  8071                           
  8072                           
  8073                           ; 2 bytes @ 0xA
  8074  007A                     	ds	1
  8075  007B                     LCDstr@p:
  8076                           
  8077                           ; 1 bytes @ 0xB
  8078  007B                     	ds	1
  8079  007C                     ??___lwmod:
  8080  007C                     differenceBetweenTimePeriod@diff:	
  8081                           ; 1 bytes @ 0xC
  8082                           
  8083                           
  8084                           ; 1 bytes @ 0xC
  8085  007C                     	ds	1
  8086  007D                     ___lwmod@counter:
  8087                           
  8088                           ; 1 bytes @ 0xD
  8089  007D                     	ds	1
  8090  007E                     ??_TMR3_ISR:
  8091  007E                     ??_INTERRUPT_InterruptManager:	
  8092                           ; 1 bytes @ 0xE
  8093                           
  8094                           
  8095                           	psect	cstackBANK0
  8096  0020                     __pcstackBANK0:	
  8097                           ; 1 bytes @ 0xE
  8098                           
  8099  0020                     ??_differenceBetweenTimePeriod:
  8100  0020                     ?_sprintf:	
  8101                           ; 1 bytes @ 0x0
  8102                           
  8103  0020                     sprintf@f:	
  8104                           ; 2 bytes @ 0x0
  8105                           
  8106                           
  8107                           ; 2 bytes @ 0x0
  8108  0020                     	ds	8
  8109  0028                     ??_sprintf:
  8110                           
  8111                           ; 1 bytes @ 0x8
  8112  0028                     	ds	4
  8113  002C                     sprintf@ap:
  8114                           
  8115                           ; 1 bytes @ 0xC
  8116  002C                     	ds	1
  8117  002D                     sprintf@prec:
  8118                           
  8119                           ; 1 bytes @ 0xD
  8120  002D                     	ds	1
  8121  002E                     sprintf@val:
  8122                           
  8123                           ; 2 bytes @ 0xE
  8124  002E                     	ds	2
  8125  0030                     sprintf@flag:
  8126                           
  8127                           ; 1 bytes @ 0x10
  8128  0030                     	ds	1
  8129  0031                     sprintf@width:
  8130                           
  8131                           ; 2 bytes @ 0x11
  8132  0031                     	ds	2
  8133  0033                     sprintf@c:
  8134                           
  8135                           ; 1 bytes @ 0x13
  8136  0033                     	ds	1
  8137  0034                     sprintf@sp:
  8138                           
  8139                           ; 1 bytes @ 0x14
  8140  0034                     	ds	1
  8141  0035                     ??_menuLCD_ISR:
  8142                           
  8143                           ; 1 bytes @ 0x15
  8144  0035                     	ds	2
  8145  0037                     menuLCD_ISR@str:
  8146                           
  8147                           ; 8 bytes @ 0x17
  8148  0037                     	ds	8
  8149  003F                     menuLCD_ISR@tt:
  8150                           
  8151                           ; 4 bytes @ 0x1F
  8152  003F                     	ds	4
  8153  0043                     menuLCD_ISR@l:
  8154                           
  8155                           ; 3 bytes @ 0x23
  8156  0043                     	ds	3
  8157  0046                     menuLCD_ISR@diff:
  8158                           
  8159                           ; 6 bytes @ 0x26
  8160  0046                     	ds	6
  8161                           
  8162                           	psect	maintext
  8163  0726                     __pmaintext:	
  8164 ;;
  8165 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  8166 ;;
  8167 ;; *************** function _main *****************
  8168 ;; Defined at:
  8169 ;;		line 579 in file "main.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;		None
  8172 ;; Auto vars:     Size  Location     Type
  8173 ;;		None
  8174 ;; Return value:  Size  Location     Type
  8175 ;;                  1    wreg      void 
  8176 ;; Registers used:
  8177 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8178 ;; Tracked objects:
  8179 ;;		On entry : B1F/0
  8180 ;;		On exit  : 0/0
  8181 ;;		Unchanged: 0/0
  8182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8185 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8186 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8187 ;;Total ram usage:        1 bytes
  8188 ;; Hardware stack levels required when called:   10
  8189 ;; This function calls:
  8190 ;;		_LCDinit
  8191 ;;		_PWM6_LoadDutyValue
  8192 ;;		_PWM_Output_D4_Disable
  8193 ;;		_SYSTEM_Initialize
  8194 ;;		_TMR1_SetInterruptHandler
  8195 ;;		_TMR2_StopTimer
  8196 ;;		_TMR3_SetInterruptHandler
  8197 ;;		_TMR5_SetInterruptHandler
  8198 ;;		_editClock
  8199 ;;		_editLum
  8200 ;;		_editTemp
  8201 ;;		_i2c1_driver_open
  8202 ;;		_toggleAlarms
  8203 ;; This function is called by:
  8204 ;;		Startup code after reset
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           
  8209                           ;psect for function _main
  8210  0726                     _main:
  8211  0726                     l4530:	
  8212                           ;incstack = 0
  8213                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8214                           
  8215                           
  8216                           ;main.c: 582: SYSTEM_Initialize();
  8217  0726  318B  23B3  3187   	fcall	_SYSTEM_Initialize
  8218                           
  8219                           ;main.c: 584: PWM6_LoadDutyValue(0);
  8220  0729  3000               	movlw	0
  8221  072A  0021               	movlb	1	; select bank1
  8222  072B  00AA               	movwf	PWM6_LoadDutyValue@dutyValue^(0+128)
  8223  072C  00AB               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128)
  8224  072D  318B  2380  3187   	fcall	_PWM6_LoadDutyValue
  8225  0730                     l4532:
  8226                           
  8227                           ;main.c: 585: TMR2_StopTimer();
  8228  0730  318A  2226  3187   	fcall	_TMR2_StopTimer
  8229  0733                     l4534:
  8230                           
  8231                           ;main.c: 586: PWM_Output_D4_Disable();
  8232  0733  318A  221B  3187   	fcall	_PWM_Output_D4_Disable
  8233                           
  8234                           ;main.c: 588: TMR1_SetInterruptHandler(Clock_ISR);
  8235  0736  3087               	movlw	low _Clock_ISR
  8236  0737  0021               	movlb	1	; select bank1
  8237  0738  00AA               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  8238  0739  300F               	movlw	high _Clock_ISR
  8239  073A  00AB               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8240  073B  318A  222A  3187   	fcall	_TMR1_SetInterruptHandler
  8241                           
  8242                           ;main.c: 590: TMR3_SetInterruptHandler(menuLCD_ISR);
  8243  073E  306D               	movlw	low _menuLCD_ISR
  8244  073F  0021               	movlb	1	; select bank1
  8245  0740  00AA               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  8246  0741  3000               	movlw	high _menuLCD_ISR
  8247  0742  00AB               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8248  0743  318A  2230  3187   	fcall	_TMR3_SetInterruptHandler
  8249                           
  8250                           ;main.c: 592: TMR5_SetInterruptHandler(monitoring_ISR);
  8251  0746  3048               	movlw	low _monitoring_ISR
  8252  0747  0021               	movlb	1	; select bank1
  8253  0748  00AA               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
  8254  0749  300E               	movlw	high _monitoring_ISR
  8255  074A  00AB               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  8256  074B  318A  2236  3187   	fcall	_TMR5_SetInterruptHandler
  8257                           
  8258                           ;main.c: 594: i2c1_driver_open();
  8259  074E  318A  226E  3187   	fcall	_i2c1_driver_open
  8260  0751                     l4536:
  8261                           
  8262                           ;main.c: 595: TRISCbits.TRISC3 = 1;
  8263  0751  0020               	movlb	0	; select bank0
  8264  0752  1593               	bsf	19,3	;volatile
  8265  0753                     l4538:
  8266                           
  8267                           ;main.c: 596: TRISCbits.TRISC4 = 1;
  8268  0753  1613               	bsf	19,4	;volatile
  8269  0754                     l4540:
  8270                           
  8271                           ;main.c: 597: WPUC3 = 1;
  8272  0754  003E               	movlb	30	; select bank30
  8273  0755  15CF               	bsf	79,3	;volatile
  8274  0756                     l4542:
  8275                           
  8276                           ;main.c: 598: WPUC4 = 1;
  8277  0756  164F               	bsf	79,4	;volatile
  8278                           
  8279                           ;main.c: 599: LCDinit();
  8280  0757  318F  2711  3187   	fcall	_LCDinit
  8281  075A                     l4544:
  8282                           
  8283                           ;main.c: 602: (INTCONbits.GIE = 1);
  8284  075A  178B               	bsf	11,7	;volatile
  8285  075B                     l4546:
  8286                           
  8287                           ;main.c: 605: (INTCONbits.PEIE = 1);
  8288  075B  170B               	bsf	11,6	;volatile
  8289  075C                     l4548:
  8290                           
  8291                           ;main.c: 608: {;main.c: 609: if(PORTBbits.RB4 == 0){
  8292  075C  0020               	movlb	0	; select bank0
  8293  075D  1A0D               	btfsc	13,4	;volatile
  8294  075E  2F60               	goto	u4651
  8295  075F  2F61               	goto	u4650
  8296  0760                     u4651:
  8297  0760  2F9A               	goto	l4566
  8298  0761                     u4650:
  8299  0761                     l4550:
  8300                           
  8301                           ;main.c: 610: _delay((unsigned long)((50)*(1000000/4000.0)));
  8302  0761  3011               	movlw	17
  8303  0762  0021               	movlb	1	; select bank1
  8304  0763  00B3               	movwf	??_main^(0+128)
  8305  0764  303A               	movlw	58
  8306  0765                     u4717:
  8307  0765  0B89               	decfsz	9,f
  8308  0766  2F65               	goto	u4717
  8309  0767  0BB3               	decfsz	??_main^(0+128),f
  8310  0768  2F65               	goto	u4717
  8311  0769  0000               	nop
  8312  076A                     l4552:
  8313                           
  8314                           ;main.c: 612: if(mode == 0 && (clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigger
      +                          )){
  8315  076A  0020               	movlb	0	; select bank0
  8316  076B  0852               	movf	_mode,w
  8317  076C  0453               	iorwf	_mode+1,w
  8318  076D  1D03               	btfss	3,2
  8319  076E  2F70               	goto	u4661
  8320  076F  2F71               	goto	u4660
  8321  0770                     u4661:
  8322  0770  2F84               	goto	l4562
  8323  0771                     u4660:
  8324  0771                     l4554:
  8325  0771  0866               	movf	_clkAlarm+6,w
  8326  0772  1D03               	btfss	3,2
  8327  0773  2F75               	goto	u4671
  8328  0774  2F76               	goto	u4670
  8329  0775                     u4671:
  8330  0775  2F80               	goto	l4560
  8331  0776                     u4670:
  8332  0776                     l4556:
  8333  0776  086B               	movf	_tempAlarm+1,w
  8334  0777  1D03               	btfss	3,2
  8335  0778  2F7A               	goto	u4681
  8336  0779  2F7B               	goto	u4680
  8337  077A                     u4681:
  8338  077A  2F80               	goto	l4560
  8339  077B                     u4680:
  8340  077B                     l4558:
  8341  077B  0868               	movf	_lumAlarm+1,w
  8342  077C  1903               	btfsc	3,2
  8343  077D  2F7F               	goto	u4691
  8344  077E  2F80               	goto	u4690
  8345  077F                     u4691:
  8346  077F  2F84               	goto	l4562
  8347  0780                     u4690:
  8348  0780                     l4560:
  8349                           
  8350                           ;main.c: 613: clkAlarm.trigger = 0;
  8351  0780  01E6               	clrf	_clkAlarm+6
  8352                           
  8353                           ;main.c: 614: tempAlarm.trigger = 0;
  8354  0781  01EB               	clrf	_tempAlarm+1
  8355                           
  8356                           ;main.c: 615: lumAlarm.trigger = 0;
  8357  0782  01E8               	clrf	_lumAlarm+1
  8358                           
  8359                           ;main.c: 616: }
  8360  0783  2F88               	goto	l1256
  8361  0784                     l4562:
  8362                           
  8363                           ;main.c: 617: else{;main.c: 618: mode = 1;
  8364  0784  3001               	movlw	1
  8365  0785  00D2               	movwf	_mode
  8366  0786  3000               	movlw	0
  8367  0787  00D3               	movwf	_mode+1
  8368  0788                     l1256:
  8369  0788  1E0D               	btfss	13,4	;volatile
  8370  0789  2F8B               	goto	u4701
  8371  078A  2F8C               	goto	u4700
  8372  078B                     u4701:
  8373  078B  2F88               	goto	l1256
  8374  078C                     u4700:
  8375  078C  2F9A               	goto	l4566
  8376  078D                     l4564:
  8377                           
  8378                           ;main.c: 626: editClock();
  8379  078D  3186  2693  3187   	fcall	_editClock
  8380  0790                     l1263:	
  8381                           ;main.c: 627: case 2:
  8382                           
  8383                           
  8384                           ;main.c: 628: editTemp();
  8385  0790  318C  24E9  3187   	fcall	_editTemp
  8386  0793                     l1264:	
  8387                           ;main.c: 629: case 3:
  8388                           
  8389                           
  8390                           ;main.c: 630: editLum();
  8391  0793  318C  24B0  3187   	fcall	_editLum
  8392  0796                     l1265:	
  8393                           ;main.c: 631: case 4:
  8394                           
  8395                           
  8396                           ;main.c: 632: toggleAlarms();
  8397  0796  318C  244B  3187   	fcall	_toggleAlarms
  8398                           
  8399                           ;main.c: 633: }
  8400  0799  2F5C               	goto	l4548
  8401  079A                     l4566:
  8402                           
  8403                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8404                           ; Switch size 1, requested type "simple"
  8405                           ; Number of cases is 1, Range of values is 0 to 0
  8406                           ; switch strategies available:
  8407                           ; Name         Instructions Cycles
  8408                           ; simple_byte            4     3 (average)
  8409                           ; direct_byte            8     6 (fixed)
  8410                           ; jumptable            260     6 (fixed)
  8411                           ;	Chosen strategy is simple_byte
  8412  079A  0853               	movf	_mode+1,w
  8413  079B  3A00               	xorlw	0	; case 0
  8414  079C  1903               	skipnz
  8415  079D  2F9F               	goto	l4592
  8416  079E  2F5C               	goto	l4548
  8417  079F                     l4592:
  8418                           
  8419                           ; Switch size 1, requested type "simple"
  8420                           ; Number of cases is 5, Range of values is 0 to 4
  8421                           ; switch strategies available:
  8422                           ; Name         Instructions Cycles
  8423                           ; direct_byte           16     6 (fixed)
  8424                           ; simple_byte           16     9 (average)
  8425                           ; jumptable            260     6 (fixed)
  8426                           ;	Chosen strategy is simple_byte
  8427  079F  0852               	movf	_mode,w
  8428  07A0  3A00               	xorlw	0	; case 0
  8429  07A1  1903               	skipnz
  8430  07A2  2F5C               	goto	l4548
  8431  07A3  3A01               	xorlw	1	; case 1
  8432  07A4  1903               	skipnz
  8433  07A5  2F8D               	goto	l4564
  8434  07A6  3A03               	xorlw	3	; case 2
  8435  07A7  1903               	skipnz
  8436  07A8  2F90               	goto	l1263
  8437  07A9  3A01               	xorlw	1	; case 3
  8438  07AA  1903               	skipnz
  8439  07AB  2F93               	goto	l1264
  8440  07AC  3A07               	xorlw	7	; case 4
  8441  07AD  1903               	skipnz
  8442  07AE  2F96               	goto	l1265
  8443  07AF  2F5C               	goto	l4548
  8444  07B0  3180  2840         	ljmp	start
  8445  07B2                     __end_of_main:
  8446                           
  8447                           	psect	text1
  8448  0C4B                     __ptext1:	
  8449 ;; *************** function _toggleAlarms *****************
  8450 ;; Defined at:
  8451 ;;		line 562 in file "main.c"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;		None
  8454 ;; Auto vars:     Size  Location     Type
  8455 ;;		None
  8456 ;; Return value:  Size  Location     Type
  8457 ;;                  1    wreg      void 
  8458 ;; Registers used:
  8459 ;;		wreg, status,2, status,0
  8460 ;; Tracked objects:
  8461 ;;		On entry : 0/0
  8462 ;;		On exit  : 0/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8467 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8468 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8469 ;;Total ram usage:        1 bytes
  8470 ;; Hardware stack levels used:    1
  8471 ;; Hardware stack levels required when called:    7
  8472 ;; This function calls:
  8473 ;;		Nothing
  8474 ;; This function is called by:
  8475 ;;		_main
  8476 ;; This function uses a non-reentrant model
  8477 ;;
  8478                           
  8479                           
  8480                           ;psect for function _toggleAlarms
  8481  0C4B                     _toggleAlarms:
  8482  0C4B                     l1237:	
  8483                           ;incstack = 0
  8484                           ; Regs used in _toggleAlarms: [wreg+status,2+status,0]
  8485                           ;main.c: 564: while(1){
  8486                           
  8487                           
  8488                           ;main.c: 565: if(PORTBbits.RB4 == 0){
  8489  0C4B  0020               	movlb	0	; select bank0
  8490  0C4C  1A0D               	btfsc	13,4	;volatile
  8491  0C4D  2C4F               	goto	u4501
  8492  0C4E  2C50               	goto	u4500
  8493  0C4F                     u4501:
  8494  0C4F  2C61               	goto	l1238
  8495  0C50                     u4500:
  8496  0C50                     l4480:
  8497                           
  8498                           ;main.c: 566: _delay((unsigned long)((50)*(1000000/4000.0)));
  8499  0C50  3011               	movlw	17
  8500  0C51  0021               	movlb	1	; select bank1
  8501  0C52  00AA               	movwf	??_toggleAlarms^(0+128)
  8502  0C53  303A               	movlw	58
  8503  0C54                     u4727:
  8504  0C54  0B89               	decfsz	9,f
  8505  0C55  2C54               	goto	u4727
  8506  0C56  0BAA               	decfsz	??_toggleAlarms^(0+128),f
  8507  0C57  2C54               	goto	u4727
  8508  0C58  0000               	nop
  8509  0C59                     l4482:
  8510                           
  8511                           ;main.c: 567: mode = 0;
  8512  0C59  0020               	movlb	0	; select bank0
  8513  0C5A  01D2               	clrf	_mode
  8514  0C5B  01D3               	clrf	_mode+1
  8515  0C5C                     l1239:	
  8516                           ;main.c: 568: while(PORTBbits.RB4==0){};
  8517                           
  8518  0C5C  1E0D               	btfss	13,4	;volatile
  8519  0C5D  2C5F               	goto	u4511
  8520  0C5E  2C60               	goto	u4510
  8521  0C5F                     u4511:
  8522  0C5F  2C5C               	goto	l1239
  8523  0C60                     u4510:
  8524  0C60  2C7B               	goto	l1245
  8525  0C61                     l1238:
  8526                           
  8527                           ;main.c: 570: };main.c: 572: if(PORTCbits.RC5 == 0){
  8528  0C61  1A8E               	btfsc	14,5	;volatile
  8529  0C62  2C64               	goto	u4521
  8530  0C63  2C65               	goto	u4520
  8531  0C64                     u4521:
  8532  0C64  2C4B               	goto	l1237
  8533  0C65                     u4520:
  8534  0C65                     l4484:
  8535                           
  8536                           ;main.c: 573: alarmsEnable = !alarmsEnable;
  8537  0C65  086D               	movf	_alarmsEnable,w
  8538  0C66  1903               	btfsc	3,2
  8539  0C67  2C69               	goto	u4531
  8540  0C68  2C6B               	goto	u4530
  8541  0C69                     u4531:
  8542  0C69  3001               	movlw	1
  8543  0C6A  2C6C               	goto	u4540
  8544  0C6B                     u4530:
  8545  0C6B  3000               	movlw	0
  8546  0C6C                     u4540:
  8547  0C6C  0021               	movlb	1	; select bank1
  8548  0C6D  00AA               	movwf	??_toggleAlarms^(0+128)
  8549  0C6E  082A               	movf	??_toggleAlarms^(0+128),w
  8550  0C6F  0020               	movlb	0	; select bank0
  8551  0C70  00ED               	movwf	_alarmsEnable
  8552  0C71                     l4486:
  8553                           
  8554                           ;main.c: 574: _delay((unsigned long)((100)*(1000000/4000.0)));
  8555  0C71  3021               	movlw	33
  8556  0C72  0021               	movlb	1	; select bank1
  8557  0C73  00AA               	movwf	??_toggleAlarms^(0+128)
  8558  0C74  3076               	movlw	118
  8559  0C75                     u4737:
  8560  0C75  0B89               	decfsz	9,f
  8561  0C76  2C75               	goto	u4737
  8562  0C77  0BAA               	decfsz	??_toggleAlarms^(0+128),f
  8563  0C78  2C75               	goto	u4737
  8564  0C79  0000               	nop
  8565  0C7A  2C4B               	goto	l1237
  8566  0C7B                     l1245:
  8567  0C7B  0008               	return
  8568  0C7C                     __end_of_toggleAlarms:
  8569                           
  8570                           	psect	text2
  8571  0A6E                     __ptext2:	
  8572 ;; *************** function _i2c1_driver_open *****************
  8573 ;; Defined at:
  8574 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  8575 ;; Parameters:    Size  Location     Type
  8576 ;;		None
  8577 ;; Auto vars:     Size  Location     Type
  8578 ;;		None
  8579 ;; Return value:  Size  Location     Type
  8580 ;;		None               void
  8581 ;; Registers used:
  8582 ;;		wreg, status,2
  8583 ;; Tracked objects:
  8584 ;;		On entry : 0/0
  8585 ;;		On exit  : 0/0
  8586 ;;		Unchanged: 0/0
  8587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8592 ;;Total ram usage:        0 bytes
  8593 ;; Hardware stack levels used:    1
  8594 ;; Hardware stack levels required when called:    7
  8595 ;; This function calls:
  8596 ;;		Nothing
  8597 ;; This function is called by:
  8598 ;;		_main
  8599 ;; This function uses a non-reentrant model
  8600 ;;
  8601                           
  8602                           
  8603                           ;psect for function _i2c1_driver_open
  8604  0A6E                     _i2c1_driver_open:
  8605  0A6E                     l4256:	
  8606                           ;incstack = 0
  8607                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  8608                           
  8609                           
  8610                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
  8611  0A6E  0023               	movlb	3	; select bank3
  8612  0A6F  1A90               	btfsc	16,5	;volatile
  8613  0A70  2A72               	goto	u4001
  8614  0A71  2A73               	goto	u4000
  8615  0A72                     u4001:
  8616  0A72  2A79               	goto	l239
  8617  0A73                     u4000:
  8618  0A73                     l4258:
  8619                           
  8620                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
  8621  0A73  018F               	clrf	15	;volatile
  8622  0A74                     l4260:
  8623                           
  8624                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
  8625  0A74  3028               	movlw	40
  8626  0A75  0090               	movwf	16	;volatile
  8627  0A76                     l4262:
  8628                           
  8629                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
  8630  0A76  0191               	clrf	17	;volatile
  8631                           
  8632                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
  8633  0A77  3003               	movlw	3
  8634  0A78  008D               	movwf	13	;volatile
  8635  0A79                     l239:
  8636  0A79  0008               	return
  8637  0A7A                     __end_of_i2c1_driver_open:
  8638                           
  8639                           	psect	text3
  8640  0CE9                     __ptext3:	
  8641 ;; *************** function _editTemp *****************
  8642 ;; Defined at:
  8643 ;;		line 515 in file "main.c"
  8644 ;; Parameters:    Size  Location     Type
  8645 ;;		None
  8646 ;; Auto vars:     Size  Location     Type
  8647 ;;		None
  8648 ;; Return value:  Size  Location     Type
  8649 ;;                  1    wreg      void 
  8650 ;; Registers used:
  8651 ;;		wreg, status,2, status,0
  8652 ;; Tracked objects:
  8653 ;;		On entry : 0/0
  8654 ;;		On exit  : 0/0
  8655 ;;		Unchanged: 0/0
  8656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8659 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8660 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8661 ;;Total ram usage:        1 bytes
  8662 ;; Hardware stack levels used:    1
  8663 ;; Hardware stack levels required when called:    7
  8664 ;; This function calls:
  8665 ;;		Nothing
  8666 ;; This function is called by:
  8667 ;;		_main
  8668 ;; This function uses a non-reentrant model
  8669 ;;
  8670                           
  8671                           
  8672                           ;psect for function _editTemp
  8673  0CE9                     _editTemp:
  8674  0CE9                     l4440:	
  8675                           ;incstack = 0
  8676                           ; Regs used in _editTemp: [wreg+status,2+status,0]
  8677                           
  8678                           
  8679                           ;main.c: 516: editingTempAlarm = 1;
  8680  0CE9  0020               	movlb	0	; select bank0
  8681  0CEA  01DD               	clrf	_editingTempAlarm
  8682  0CEB  0ADD               	incf	_editingTempAlarm,f
  8683  0CEC                     l4442:
  8684                           
  8685                           ;main.c: 518: tempAlarm.alarmTemp = 0;
  8686  0CEC  01EA               	clrf	_tempAlarm
  8687  0CED                     l4444:
  8688                           
  8689                           ;main.c: 521: if(PORTBbits.RB4 == 0){
  8690  0CED  0020               	movlb	0	; select bank0
  8691  0CEE  1A0D               	btfsc	13,4	;volatile
  8692  0CEF  2CF1               	goto	u4421
  8693  0CF0  2CF2               	goto	u4420
  8694  0CF1                     u4421:
  8695  0CF1  2D06               	goto	l1214
  8696  0CF2                     u4420:
  8697  0CF2                     l4446:
  8698                           
  8699                           ;main.c: 522: _delay((unsigned long)((50)*(1000000/4000.0)));
  8700  0CF2  3011               	movlw	17
  8701  0CF3  0021               	movlb	1	; select bank1
  8702  0CF4  00AA               	movwf	??_editTemp^(0+128)
  8703  0CF5  303A               	movlw	58
  8704  0CF6                     u4747:
  8705  0CF6  0B89               	decfsz	9,f
  8706  0CF7  2CF6               	goto	u4747
  8707  0CF8  0BAA               	decfsz	??_editTemp^(0+128),f
  8708  0CF9  2CF6               	goto	u4747
  8709  0CFA  0000               	nop
  8710  0CFB                     l4448:
  8711                           
  8712                           ;main.c: 523: editingTempAlarm = 0;
  8713  0CFB  0020               	movlb	0	; select bank0
  8714  0CFC  01DD               	clrf	_editingTempAlarm
  8715  0CFD                     l4450:
  8716                           
  8717                           ;main.c: 524: mode = 3;
  8718  0CFD  3003               	movlw	3
  8719  0CFE  00D2               	movwf	_mode
  8720  0CFF  3000               	movlw	0
  8721  0D00  00D3               	movwf	_mode+1
  8722  0D01                     l1215:	
  8723                           ;main.c: 525: while(PORTBbits.RB4==0){};
  8724                           
  8725  0D01  1E0D               	btfss	13,4	;volatile
  8726  0D02  2D04               	goto	u4431
  8727  0D03  2D05               	goto	u4430
  8728  0D04                     u4431:
  8729  0D04  2D01               	goto	l1215
  8730  0D05                     u4430:
  8731  0D05  2D21               	goto	l1222
  8732  0D06                     l1214:
  8733                           
  8734                           ;main.c: 527: };main.c: 529: if(PORTCbits.RC5 == 0){
  8735  0D06  1A8E               	btfsc	14,5	;volatile
  8736  0D07  2D09               	goto	u4441
  8737  0D08  2D0A               	goto	u4440
  8738  0D09                     u4441:
  8739  0D09  2CED               	goto	l4444
  8740  0D0A                     u4440:
  8741  0D0A                     l4452:
  8742                           
  8743                           ;main.c: 530: tempAlarm.alarmTemp++;
  8744  0D0A  3001               	movlw	1
  8745  0D0B  0021               	movlb	1	; select bank1
  8746  0D0C  00AA               	movwf	??_editTemp^(0+128)
  8747  0D0D  082A               	movf	??_editTemp^(0+128),w
  8748  0D0E  0020               	movlb	0	; select bank0
  8749  0D0F  07EA               	addwf	_tempAlarm,f
  8750  0D10                     l4454:
  8751                           
  8752                           ;main.c: 531: if(tempAlarm.alarmTemp > 50){
  8753  0D10  3033               	movlw	51
  8754  0D11  026A               	subwf	_tempAlarm,w
  8755  0D12  1C03               	skipc
  8756  0D13  2D15               	goto	u4451
  8757  0D14  2D16               	goto	u4450
  8758  0D15                     u4451:
  8759  0D15  2D17               	goto	l4458
  8760  0D16                     u4450:
  8761  0D16                     l4456:
  8762                           
  8763                           ;main.c: 532: tempAlarm.alarmTemp = 0;
  8764  0D16  01EA               	clrf	_tempAlarm
  8765  0D17                     l4458:
  8766                           
  8767                           ;main.c: 533: };main.c: 534: _delay((unsigned long)((100)*(1000000/4000.0)));
  8768  0D17  3021               	movlw	33
  8769  0D18  0021               	movlb	1	; select bank1
  8770  0D19  00AA               	movwf	??_editTemp^(0+128)
  8771  0D1A  3076               	movlw	118
  8772  0D1B                     u4757:
  8773  0D1B  0B89               	decfsz	9,f
  8774  0D1C  2D1B               	goto	u4757
  8775  0D1D  0BAA               	decfsz	??_editTemp^(0+128),f
  8776  0D1E  2D1B               	goto	u4757
  8777  0D1F  0000               	nop
  8778  0D20  2CED               	goto	l4444
  8779  0D21                     l1222:
  8780  0D21  0008               	return
  8781  0D22                     __end_of_editTemp:
  8782                           
  8783                           	psect	text4
  8784  0CB0                     __ptext4:	
  8785 ;; *************** function _editLum *****************
  8786 ;; Defined at:
  8787 ;;		line 539 in file "main.c"
  8788 ;; Parameters:    Size  Location     Type
  8789 ;;		None
  8790 ;; Auto vars:     Size  Location     Type
  8791 ;;		None
  8792 ;; Return value:  Size  Location     Type
  8793 ;;                  1    wreg      void 
  8794 ;; Registers used:
  8795 ;;		wreg, status,2, status,0
  8796 ;; Tracked objects:
  8797 ;;		On entry : 0/0
  8798 ;;		On exit  : 0/0
  8799 ;;		Unchanged: 0/0
  8800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8803 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8804 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8805 ;;Total ram usage:        1 bytes
  8806 ;; Hardware stack levels used:    1
  8807 ;; Hardware stack levels required when called:    7
  8808 ;; This function calls:
  8809 ;;		Nothing
  8810 ;; This function is called by:
  8811 ;;		_main
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815                           
  8816                           ;psect for function _editLum
  8817  0CB0                     _editLum:
  8818  0CB0                     l4460:	
  8819                           ;incstack = 0
  8820                           ; Regs used in _editLum: [wreg+status,2+status,0]
  8821                           
  8822                           
  8823                           ;main.c: 540: editingLumAlarm = 1;
  8824  0CB0  0020               	movlb	0	; select bank0
  8825  0CB1  01DC               	clrf	_editingLumAlarm
  8826  0CB2  0ADC               	incf	_editingLumAlarm,f
  8827  0CB3                     l4462:
  8828                           
  8829                           ;main.c: 541: lumAlarm.alarmLum = 0;
  8830  0CB3  01E7               	clrf	_lumAlarm
  8831  0CB4                     l4464:
  8832                           
  8833                           ;main.c: 544: if(PORTBbits.RB4 == 0){
  8834  0CB4  0020               	movlb	0	; select bank0
  8835  0CB5  1A0D               	btfsc	13,4	;volatile
  8836  0CB6  2CB8               	goto	u4461
  8837  0CB7  2CB9               	goto	u4460
  8838  0CB8                     u4461:
  8839  0CB8  2CCD               	goto	l1226
  8840  0CB9                     u4460:
  8841  0CB9                     l4466:
  8842                           
  8843                           ;main.c: 545: _delay((unsigned long)((50)*(1000000/4000.0)));
  8844  0CB9  3011               	movlw	17
  8845  0CBA  0021               	movlb	1	; select bank1
  8846  0CBB  00AA               	movwf	??_editLum^(0+128)
  8847  0CBC  303A               	movlw	58
  8848  0CBD                     u4767:
  8849  0CBD  0B89               	decfsz	9,f
  8850  0CBE  2CBD               	goto	u4767
  8851  0CBF  0BAA               	decfsz	??_editLum^(0+128),f
  8852  0CC0  2CBD               	goto	u4767
  8853  0CC1  0000               	nop
  8854  0CC2                     l4468:
  8855                           
  8856                           ;main.c: 546: editingLumAlarm = 0;
  8857  0CC2  0020               	movlb	0	; select bank0
  8858  0CC3  01DC               	clrf	_editingLumAlarm
  8859  0CC4                     l4470:
  8860                           
  8861                           ;main.c: 547: mode = 4;
  8862  0CC4  3004               	movlw	4
  8863  0CC5  00D2               	movwf	_mode
  8864  0CC6  3000               	movlw	0
  8865  0CC7  00D3               	movwf	_mode+1
  8866  0CC8                     l1227:	
  8867                           ;main.c: 548: while(PORTBbits.RB4==0){};
  8868                           
  8869  0CC8  1E0D               	btfss	13,4	;volatile
  8870  0CC9  2CCB               	goto	u4471
  8871  0CCA  2CCC               	goto	u4470
  8872  0CCB                     u4471:
  8873  0CCB  2CC8               	goto	l1227
  8874  0CCC                     u4470:
  8875  0CCC  2CE8               	goto	l1234
  8876  0CCD                     l1226:
  8877                           
  8878                           ;main.c: 550: };main.c: 552: if(PORTCbits.RC5 == 0){
  8879  0CCD  1A8E               	btfsc	14,5	;volatile
  8880  0CCE  2CD0               	goto	u4481
  8881  0CCF  2CD1               	goto	u4480
  8882  0CD0                     u4481:
  8883  0CD0  2CB4               	goto	l4464
  8884  0CD1                     u4480:
  8885  0CD1                     l4472:
  8886                           
  8887                           ;main.c: 553: lumAlarm.alarmLum++;
  8888  0CD1  3001               	movlw	1
  8889  0CD2  0021               	movlb	1	; select bank1
  8890  0CD3  00AA               	movwf	??_editLum^(0+128)
  8891  0CD4  082A               	movf	??_editLum^(0+128),w
  8892  0CD5  0020               	movlb	0	; select bank0
  8893  0CD6  07E7               	addwf	_lumAlarm,f
  8894  0CD7                     l4474:
  8895                           
  8896                           ;main.c: 554: if(lumAlarm.alarmLum > 7){
  8897  0CD7  3008               	movlw	8
  8898  0CD8  0267               	subwf	_lumAlarm,w
  8899  0CD9  1C03               	skipc
  8900  0CDA  2CDC               	goto	u4491
  8901  0CDB  2CDD               	goto	u4490
  8902  0CDC                     u4491:
  8903  0CDC  2CDE               	goto	l4478
  8904  0CDD                     u4490:
  8905  0CDD                     l4476:
  8906                           
  8907                           ;main.c: 555: lumAlarm.alarmLum = 0;
  8908  0CDD  01E7               	clrf	_lumAlarm
  8909  0CDE                     l4478:
  8910                           
  8911                           ;main.c: 556: };main.c: 557: _delay((unsigned long)((100)*(1000000/4000.0)));
  8912  0CDE  3021               	movlw	33
  8913  0CDF  0021               	movlb	1	; select bank1
  8914  0CE0  00AA               	movwf	??_editLum^(0+128)
  8915  0CE1  3076               	movlw	118
  8916  0CE2                     u4777:
  8917  0CE2  0B89               	decfsz	9,f
  8918  0CE3  2CE2               	goto	u4777
  8919  0CE4  0BAA               	decfsz	??_editLum^(0+128),f
  8920  0CE5  2CE2               	goto	u4777
  8921  0CE6  0000               	nop
  8922  0CE7  2CB4               	goto	l4464
  8923  0CE8                     l1234:
  8924  0CE8  0008               	return
  8925  0CE9                     __end_of_editLum:
  8926                           
  8927                           	psect	text5
  8928  0693                     __ptext5:	
  8929 ;; *************** function _editClock *****************
  8930 ;; Defined at:
  8931 ;;		line 471 in file "main.c"
  8932 ;; Parameters:    Size  Location     Type
  8933 ;;		None
  8934 ;; Auto vars:     Size  Location     Type
  8935 ;;		None
  8936 ;; Return value:  Size  Location     Type
  8937 ;;                  1    wreg      void 
  8938 ;; Registers used:
  8939 ;;		wreg, status,2, status,0
  8940 ;; Tracked objects:
  8941 ;;		On entry : 0/0
  8942 ;;		On exit  : 0/0
  8943 ;;		Unchanged: 0/0
  8944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8947 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8948 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8949 ;;Total ram usage:        1 bytes
  8950 ;; Hardware stack levels used:    1
  8951 ;; Hardware stack levels required when called:    7
  8952 ;; This function calls:
  8953 ;;		Nothing
  8954 ;; This function is called by:
  8955 ;;		_main
  8956 ;; This function uses a non-reentrant model
  8957 ;;
  8958                           
  8959                           
  8960                           ;psect for function _editClock
  8961  0693                     _editClock:
  8962  0693                     l4398:	
  8963                           ;incstack = 0
  8964                           ; Regs used in _editClock: [wreg+status,2+status,0]
  8965                           
  8966                           
  8967                           ;main.c: 473: editingClockAlarm = 1;
  8968  0693  3001               	movlw	1
  8969  0694  0020               	movlb	0	; select bank0
  8970  0695  00D4               	movwf	_editingClockAlarm
  8971  0696  3000               	movlw	0
  8972  0697  00D5               	movwf	_editingClockAlarm+1
  8973  0698                     l4400:
  8974                           
  8975                           ;main.c: 474: clkAlarm.alarmVal.h = 0;
  8976  0698  01E0               	clrf	_clkAlarm
  8977  0699  01E1               	clrf	_clkAlarm+1
  8978  069A                     l4402:
  8979                           
  8980                           ;main.c: 475: clkAlarm.alarmVal.m = 0;
  8981  069A  01E2               	clrf	_clkAlarm+2
  8982  069B  01E3               	clrf	_clkAlarm+3
  8983  069C                     l4404:
  8984                           
  8985                           ;main.c: 476: clkAlarm.alarmVal.s = 0;
  8986  069C  01E4               	clrf	_clkAlarm+4
  8987  069D  01E5               	clrf	_clkAlarm+5
  8988  069E                     l4406:
  8989                           
  8990                           ;main.c: 479: if(PORTBbits.RB4 == 0){
  8991  069E  0020               	movlb	0	; select bank0
  8992  069F  1A0D               	btfsc	13,4	;volatile
  8993  06A0  2EA2               	goto	u4321
  8994  06A1  2EA3               	goto	u4320
  8995  06A2                     u4321:
  8996  06A2  2ECC               	goto	l1191
  8997  06A3                     u4320:
  8998  06A3                     l4408:
  8999                           
  9000                           ;main.c: 480: _delay((unsigned long)((50)*(1000000/4000.0)));
  9001  06A3  3011               	movlw	17
  9002  06A4  0021               	movlb	1	; select bank1
  9003  06A5  00AA               	movwf	??_editClock^(0+128)
  9004  06A6  303A               	movlw	58
  9005  06A7                     u4787:
  9006  06A7  0B89               	decfsz	9,f
  9007  06A8  2EA7               	goto	u4787
  9008  06A9  0BAA               	decfsz	??_editClock^(0+128),f
  9009  06AA  2EA7               	goto	u4787
  9010  06AB  0000               	nop
  9011                           
  9012                           ;main.c: 481: editingClockAlarm++;
  9013  06AC  3001               	movlw	1
  9014  06AD  0020               	movlb	0	; select bank0
  9015  06AE  07D4               	addwf	_editingClockAlarm,f
  9016  06AF  3000               	movlw	0
  9017  06B0  3DD5               	addwfc	_editingClockAlarm+1,f
  9018  06B1                     l1192:	
  9019                           ;main.c: 482: while(PORTBbits.RB4==0){};
  9020                           
  9021  06B1  1E0D               	btfss	13,4	;volatile
  9022  06B2  2EB4               	goto	u4331
  9023  06B3  2EB5               	goto	u4330
  9024  06B4                     u4331:
  9025  06B4  2EB1               	goto	l1192
  9026  06B5                     u4330:
  9027  06B5                     l4410:
  9028                           
  9029                           ;main.c: 483: if(editingClockAlarm > 3){
  9030  06B5  0855               	movf	_editingClockAlarm+1,w
  9031  06B6  3A80               	xorlw	128
  9032  06B7  0021               	movlb	1	; select bank1
  9033  06B8  00AA               	movwf	??_editClock^(0+128)
  9034  06B9  3080               	movlw	128
  9035  06BA  022A               	subwf	??_editClock^(0+128),w
  9036  06BB  1D03               	skipz
  9037  06BC  2EC0               	goto	u4345
  9038  06BD  3004               	movlw	4
  9039  06BE  0020               	movlb	0	; select bank0
  9040  06BF  0254               	subwf	_editingClockAlarm,w
  9041  06C0                     u4345:
  9042  06C0  1C03               	skipc
  9043  06C1  2EC3               	goto	u4341
  9044  06C2  2EC4               	goto	u4340
  9045  06C3                     u4341:
  9046  06C3  2ECC               	goto	l1191
  9047  06C4                     u4340:
  9048  06C4                     l4412:
  9049                           
  9050                           ;main.c: 484: editingClockAlarm = 0;
  9051  06C4  0020               	movlb	0	; select bank0
  9052  06C5  01D4               	clrf	_editingClockAlarm
  9053  06C6  01D5               	clrf	_editingClockAlarm+1
  9054  06C7                     l4414:
  9055                           
  9056                           ;main.c: 485: mode = 2;
  9057  06C7  3002               	movlw	2
  9058  06C8  00D2               	movwf	_mode
  9059  06C9  3000               	movlw	0
  9060  06CA  00D3               	movwf	_mode+1
  9061                           
  9062                           ;main.c: 486: break;
  9063  06CB  2F25               	goto	l1210
  9064  06CC                     l1191:
  9065                           
  9066                           ;main.c: 487: };main.c: 488: };main.c: 490: if(PORTCbits.RC5 == 0){
  9067  06CC  0020               	movlb	0	; select bank0
  9068  06CD  1A8E               	btfsc	14,5	;volatile
  9069  06CE  2ED0               	goto	u4351
  9070  06CF  2ED1               	goto	u4350
  9071  06D0                     u4351:
  9072  06D0  2E9E               	goto	l4406
  9073  06D1                     u4350:
  9074  06D1                     l4416:
  9075                           
  9076                           ;main.c: 491: if(editingClockAlarm == 1){
  9077  06D1  0354               	decf	_editingClockAlarm,w
  9078  06D2  0455               	iorwf	_editingClockAlarm+1,w
  9079  06D3  1D03               	btfss	3,2
  9080  06D4  2ED6               	goto	u4361
  9081  06D5  2ED7               	goto	u4360
  9082  06D6                     u4361:
  9083  06D6  2EF0               	goto	l4424
  9084  06D7                     u4360:
  9085  06D7                     l4418:
  9086                           
  9087                           ;main.c: 492: if(clkAlarm.alarmVal.h >= 23){
  9088  06D7  0861               	movf	_clkAlarm+1,w
  9089  06D8  3A80               	xorlw	128
  9090  06D9  0021               	movlb	1	; select bank1
  9091  06DA  00AA               	movwf	??_editClock^(0+128)
  9092  06DB  3080               	movlw	128
  9093  06DC  022A               	subwf	??_editClock^(0+128),w
  9094  06DD  1D03               	skipz
  9095  06DE  2EE2               	goto	u4375
  9096  06DF  3017               	movlw	23
  9097  06E0  0020               	movlb	0	; select bank0
  9098  06E1  0260               	subwf	_clkAlarm,w
  9099  06E2                     u4375:
  9100  06E2  1C03               	skipc
  9101  06E3  2EE5               	goto	u4371
  9102  06E4  2EE6               	goto	u4370
  9103  06E5                     u4371:
  9104  06E5  2EEA               	goto	l4422
  9105  06E6                     u4370:
  9106  06E6                     l4420:
  9107                           
  9108                           ;main.c: 493: clkAlarm.alarmVal.h = 0;
  9109  06E6  0020               	movlb	0	; select bank0
  9110  06E7  01E0               	clrf	_clkAlarm
  9111  06E8  01E1               	clrf	_clkAlarm+1
  9112                           
  9113                           ;main.c: 494: } else{
  9114  06E9  2F1B               	goto	l1201
  9115  06EA                     l4422:
  9116                           
  9117                           ;main.c: 495: clkAlarm.alarmVal.h++;
  9118  06EA  3001               	movlw	1
  9119  06EB  0020               	movlb	0	; select bank0
  9120  06EC  07E0               	addwf	_clkAlarm,f
  9121  06ED  3000               	movlw	0
  9122  06EE  3DE1               	addwfc	_clkAlarm+1,f
  9123  06EF  2F1B               	goto	l1201
  9124  06F0                     l4424:
  9125  06F0  3002               	movlw	2
  9126  06F1  0654               	xorwf	_editingClockAlarm,w
  9127  06F2  0455               	iorwf	_editingClockAlarm+1,w
  9128  06F3  1D03               	btfss	3,2
  9129  06F4  2EF6               	goto	u4381
  9130  06F5  2EF7               	goto	u4380
  9131  06F6                     u4381:
  9132  06F6  2F06               	goto	l4432
  9133  06F7                     u4380:
  9134  06F7                     l4426:
  9135                           
  9136                           ;main.c: 498: if(clkAlarm.alarmVal.m == 59){
  9137  06F7  303B               	movlw	59
  9138  06F8  0662               	xorwf	_clkAlarm+2,w
  9139  06F9  0463               	iorwf	_clkAlarm+3,w
  9140  06FA  1D03               	btfss	3,2
  9141  06FB  2EFD               	goto	u4391
  9142  06FC  2EFE               	goto	u4390
  9143  06FD                     u4391:
  9144  06FD  2F01               	goto	l4430
  9145  06FE                     u4390:
  9146  06FE                     l4428:
  9147                           
  9148                           ;main.c: 499: clkAlarm.alarmVal.m = 0;
  9149  06FE  01E2               	clrf	_clkAlarm+2
  9150  06FF  01E3               	clrf	_clkAlarm+3
  9151                           
  9152                           ;main.c: 500: } else{
  9153  0700  2F1B               	goto	l1201
  9154  0701                     l4430:
  9155                           
  9156                           ;main.c: 501: clkAlarm.alarmVal.m++;
  9157  0701  3001               	movlw	1
  9158  0702  07E2               	addwf	_clkAlarm+2,f
  9159  0703  3000               	movlw	0
  9160  0704  3DE3               	addwfc	_clkAlarm+3,f
  9161  0705  2F1B               	goto	l1201
  9162  0706                     l4432:
  9163  0706  3003               	movlw	3
  9164  0707  0654               	xorwf	_editingClockAlarm,w
  9165  0708  0455               	iorwf	_editingClockAlarm+1,w
  9166  0709  1D03               	btfss	3,2
  9167  070A  2F0C               	goto	u4401
  9168  070B  2F0D               	goto	u4400
  9169  070C                     u4401:
  9170  070C  2F1B               	goto	l1201
  9171  070D                     u4400:
  9172  070D                     l4434:
  9173                           
  9174                           ;main.c: 504: if(clkAlarm.alarmVal.s == 59){
  9175  070D  303B               	movlw	59
  9176  070E  0664               	xorwf	_clkAlarm+4,w
  9177  070F  0465               	iorwf	_clkAlarm+5,w
  9178  0710  1D03               	btfss	3,2
  9179  0711  2F13               	goto	u4411
  9180  0712  2F14               	goto	u4410
  9181  0713                     u4411:
  9182  0713  2F17               	goto	l4438
  9183  0714                     u4410:
  9184  0714                     l4436:
  9185                           
  9186                           ;main.c: 505: clkAlarm.alarmVal.s = 0;
  9187  0714  01E4               	clrf	_clkAlarm+4
  9188  0715  01E5               	clrf	_clkAlarm+5
  9189                           
  9190                           ;main.c: 506: } else{
  9191  0716  2F1B               	goto	l1201
  9192  0717                     l4438:
  9193                           
  9194                           ;main.c: 507: clkAlarm.alarmVal.s++;
  9195  0717  3001               	movlw	1
  9196  0718  07E4               	addwf	_clkAlarm+4,f
  9197  0719  3000               	movlw	0
  9198  071A  3DE5               	addwfc	_clkAlarm+5,f
  9199  071B                     l1201:
  9200                           
  9201                           ;main.c: 508: };main.c: 509: };main.c: 510: _delay((unsigned long)((100)*(1000000/4000.0
      +                          )));
  9202  071B  3021               	movlw	33
  9203  071C  0021               	movlb	1	; select bank1
  9204  071D  00AA               	movwf	??_editClock^(0+128)
  9205  071E  3076               	movlw	118
  9206  071F                     u4797:
  9207  071F  0B89               	decfsz	9,f
  9208  0720  2F1F               	goto	u4797
  9209  0721  0BAA               	decfsz	??_editClock^(0+128),f
  9210  0722  2F1F               	goto	u4797
  9211  0723  0000               	nop
  9212  0724  2E9E               	goto	l4406
  9213  0725                     l1210:
  9214  0725  0008               	return
  9215  0726                     __end_of_editClock:
  9216                           
  9217                           	psect	text6
  9218  0A26                     __ptext6:	
  9219 ;; *************** function _TMR2_StopTimer *****************
  9220 ;; Defined at:
  9221 ;;		line 117 in file "mcc_generated_files/tmr2.c"
  9222 ;; Parameters:    Size  Location     Type
  9223 ;;		None
  9224 ;; Auto vars:     Size  Location     Type
  9225 ;;		None
  9226 ;; Return value:  Size  Location     Type
  9227 ;;                  1    wreg      void 
  9228 ;; Registers used:
  9229 ;;		status,2, status,0, pclath, cstack
  9230 ;; Tracked objects:
  9231 ;;		On entry : 0/0
  9232 ;;		On exit  : 0/0
  9233 ;;		Unchanged: 0/0
  9234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9239 ;;Total ram usage:        0 bytes
  9240 ;; Hardware stack levels used:    1
  9241 ;; Hardware stack levels required when called:    8
  9242 ;; This function calls:
  9243 ;;		_TMR2_Stop
  9244 ;; This function is called by:
  9245 ;;		_main
  9246 ;; This function uses a non-reentrant model
  9247 ;;
  9248                           
  9249                           
  9250                           ;psect for function _TMR2_StopTimer
  9251  0A26                     _TMR2_StopTimer:
  9252  0A26                     l4294:	
  9253                           ;incstack = 0
  9254                           ; Regs used in _TMR2_StopTimer: [status,2+status,0+pclath+cstack]
  9255                           
  9256                           
  9257                           ;tmr2.c: 119: TMR2_Stop();
  9258  0A26  3187  27FD  318A   	fcall	_TMR2_Stop
  9259  0A29                     l767:
  9260  0A29  0008               	return
  9261  0A2A                     __end_of_TMR2_StopTimer:
  9262                           
  9263                           	psect	text7
  9264  07FD                     __ptext7:	
  9265 ;; *************** function _TMR2_Stop *****************
  9266 ;; Defined at:
  9267 ;;		line 111 in file "mcc_generated_files/tmr2.c"
  9268 ;; Parameters:    Size  Location     Type
  9269 ;;		None
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;		None
  9272 ;; Return value:  Size  Location     Type
  9273 ;;                  1    wreg      void 
  9274 ;; Registers used:
  9275 ;;		None
  9276 ;; Tracked objects:
  9277 ;;		On entry : 0/0
  9278 ;;		On exit  : 0/0
  9279 ;;		Unchanged: 0/0
  9280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9285 ;;Total ram usage:        0 bytes
  9286 ;; Hardware stack levels used:    1
  9287 ;; Hardware stack levels required when called:    7
  9288 ;; This function calls:
  9289 ;;		Nothing
  9290 ;; This function is called by:
  9291 ;;		_TMR2_StopTimer
  9292 ;; This function uses a non-reentrant model
  9293 ;;
  9294                           
  9295                           
  9296                           ;psect for function _TMR2_Stop
  9297  07FD                     _TMR2_Stop:
  9298  07FD                     l3998:	
  9299                           ;incstack = 0
  9300                           ; Regs used in _TMR2_Stop: []
  9301                           
  9302                           
  9303                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
  9304  07FD  0025               	movlb	5	; select bank5
  9305  07FE  138E               	bcf	14,7	;volatile
  9306  07FF                     l764:
  9307  07FF  0008               	return
  9308  0800                     __end_of_TMR2_Stop:
  9309                           
  9310                           	psect	text8
  9311  0BB3                     __ptext8:	
  9312 ;; *************** function _SYSTEM_Initialize *****************
  9313 ;; Defined at:
  9314 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9315 ;; Parameters:    Size  Location     Type
  9316 ;;		None
  9317 ;; Auto vars:     Size  Location     Type
  9318 ;;		None
  9319 ;; Return value:  Size  Location     Type
  9320 ;;                  1    wreg      void 
  9321 ;; Registers used:
  9322 ;;		wreg, status,2, status,0, pclath, cstack
  9323 ;; Tracked objects:
  9324 ;;		On entry : 0/0
  9325 ;;		On exit  : 0/0
  9326 ;;		Unchanged: 0/0
  9327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9332 ;;Total ram usage:        0 bytes
  9333 ;; Hardware stack levels used:    1
  9334 ;; Hardware stack levels required when called:    9
  9335 ;; This function calls:
  9336 ;;		_ADCC_Initialize
  9337 ;;		_OSCILLATOR_Initialize
  9338 ;;		_PIN_MANAGER_Initialize
  9339 ;;		_PMD_Initialize
  9340 ;;		_PWM6_Initialize
  9341 ;;		_TMR1_Initialize
  9342 ;;		_TMR2_Initialize
  9343 ;;		_TMR3_Initialize
  9344 ;;		_TMR5_Initialize
  9345 ;; This function is called by:
  9346 ;;		_main
  9347 ;; This function uses a non-reentrant model
  9348 ;;
  9349                           
  9350                           
  9351                           ;psect for function _SYSTEM_Initialize
  9352  0BB3                     _SYSTEM_Initialize:
  9353  0BB3                     l4238:	
  9354                           ;incstack = 0
  9355                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9356                           
  9357                           
  9358                           ;mcc.c: 52: PMD_Initialize();
  9359  0BB3  318A  225D  318B   	fcall	_PMD_Initialize
  9360  0BB6                     l4240:
  9361                           
  9362                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  9363  0BB6  318D  255E  318B   	fcall	_PIN_MANAGER_Initialize
  9364  0BB9                     l4242:
  9365                           
  9366                           ;mcc.c: 54: OSCILLATOR_Initialize();
  9367  0BB9  318A  2265  318B   	fcall	_OSCILLATOR_Initialize
  9368  0BBC                     l4244:
  9369                           
  9370                           ;mcc.c: 55: PWM6_Initialize();
  9371  0BBC  318A  227A  318B   	fcall	_PWM6_Initialize
  9372  0BBF                     l4246:
  9373                           
  9374                           ;mcc.c: 56: ADCC_Initialize();
  9375  0BBF  318B  2369  318B   	fcall	_ADCC_Initialize
  9376  0BC2                     l4248:
  9377                           
  9378                           ;mcc.c: 57: TMR3_Initialize();
  9379  0BC2  318C  240D  318B   	fcall	_TMR3_Initialize
  9380  0BC5                     l4250:
  9381                           
  9382                           ;mcc.c: 58: TMR2_Initialize();
  9383  0BC5  318A  2287  318B   	fcall	_TMR2_Initialize
  9384  0BC8                     l4252:
  9385                           
  9386                           ;mcc.c: 59: TMR5_Initialize();
  9387  0BC8  318C  242C  318B   	fcall	_TMR5_Initialize
  9388  0BCB                     l4254:
  9389                           
  9390                           ;mcc.c: 60: TMR1_Initialize();
  9391  0BCB  318B  23EE  318B   	fcall	_TMR1_Initialize
  9392  0BCE                     l172:
  9393  0BCE  0008               	return
  9394  0BCF                     __end_of_SYSTEM_Initialize:
  9395                           
  9396                           	psect	text9
  9397  0C2C                     __ptext9:	
  9398 ;; *************** function _TMR5_Initialize *****************
  9399 ;; Defined at:
  9400 ;;		line 64 in file "mcc_generated_files/tmr5.c"
  9401 ;; Parameters:    Size  Location     Type
  9402 ;;		None
  9403 ;; Auto vars:     Size  Location     Type
  9404 ;;		None
  9405 ;; Return value:  Size  Location     Type
  9406 ;;                  1    wreg      void 
  9407 ;; Registers used:
  9408 ;;		wreg, status,2, status,0, pclath, cstack
  9409 ;; Tracked objects:
  9410 ;;		On entry : 0/0
  9411 ;;		On exit  : 0/0
  9412 ;;		Unchanged: 0/0
  9413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9418 ;;Total ram usage:        0 bytes
  9419 ;; Hardware stack levels used:    1
  9420 ;; Hardware stack levels required when called:    8
  9421 ;; This function calls:
  9422 ;;		_TMR5_SetInterruptHandler
  9423 ;; This function is called by:
  9424 ;;		_SYSTEM_Initialize
  9425 ;; This function uses a non-reentrant model
  9426 ;;
  9427                           
  9428                           
  9429                           ;psect for function _TMR5_Initialize
  9430  0C2C                     _TMR5_Initialize:
  9431  0C2C                     l3920:	
  9432                           ;incstack = 0
  9433                           ; Regs used in _TMR5_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9434                           
  9435                           
  9436                           ;tmr5.c: 69: T5GCON = 0x00;
  9437  0C2C  0024               	movlb	4	; select bank4
  9438  0C2D  019B               	clrf	27	;volatile
  9439                           
  9440                           ;tmr5.c: 72: T5GATE = 0x00;
  9441  0C2E  019C               	clrf	28	;volatile
  9442  0C2F                     l3922:
  9443                           
  9444                           ;tmr5.c: 75: T5CLK = 0x04;
  9445  0C2F  3004               	movlw	4
  9446  0C30  009D               	movwf	29	;volatile
  9447  0C31                     l3924:
  9448                           
  9449                           ;tmr5.c: 79: TMR5H = 0x4A;
  9450  0C31  304A               	movlw	74
  9451  0C32  0099               	movwf	25	;volatile
  9452  0C33                     l3926:
  9453                           
  9454                           ;tmr5.c: 82: TMR5L = 0x5C;
  9455  0C33  305C               	movlw	92
  9456  0C34  0098               	movwf	24	;volatile
  9457  0C35                     l3928:
  9458                           
  9459                           ;tmr5.c: 85: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  9460  0C35  0819               	movf	25,w	;volatile
  9461  0C36  0021               	movlb	1	; select bank1
  9462  0C37  00A3               	movwf	(_timer5ReloadVal+1)^(0+128)	;volatile
  9463  0C38  0024               	movlb	4	; select bank4
  9464  0C39  0818               	movf	24,w	;volatile
  9465  0C3A  0021               	movlb	1	; select bank1
  9466  0C3B  00A2               	movwf	_timer5ReloadVal^(0+128)	;volatile
  9467  0C3C                     l3930:
  9468                           
  9469                           ;tmr5.c: 88: PIR4bits.TMR5IF = 0;
  9470  0C3C  002E               	movlb	14	; select bank14
  9471  0C3D  1210               	bcf	16,4	;volatile
  9472  0C3E                     l3932:
  9473                           
  9474                           ;tmr5.c: 91: PIE4bits.TMR5IE = 1;
  9475  0C3E  161A               	bsf	26,4	;volatile
  9476  0C3F                     l3934:
  9477                           
  9478                           ;tmr5.c: 94: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
  9479  0C3F  3003               	movlw	low _TMR5_DefaultInterruptHandler
  9480  0C40  0021               	movlb	1	; select bank1
  9481  0C41  00AA               	movwf	TMR5_SetInterruptHandler@InterruptHandler^(0+128)
  9482  0C42  3000               	movlw	high _TMR5_DefaultInterruptHandler
  9483  0C43  00AB               	movwf	(TMR5_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9484  0C44  318A  2236  318C   	fcall	_TMR5_SetInterruptHandler
  9485  0C47                     l3936:
  9486                           
  9487                           ;tmr5.c: 97: T5CON = 0x11;
  9488  0C47  3011               	movlw	17
  9489  0C48  0024               	movlb	4	; select bank4
  9490  0C49  009A               	movwf	26	;volatile
  9491  0C4A                     l675:
  9492  0C4A  0008               	return
  9493  0C4B                     __end_of_TMR5_Initialize:
  9494                           
  9495                           	psect	text10
  9496  0A36                     __ptext10:	
  9497 ;; *************** function _TMR5_SetInterruptHandler *****************
  9498 ;; Defined at:
  9499 ;;		line 179 in file "mcc_generated_files/tmr5.c"
  9500 ;; Parameters:    Size  Location     Type
  9501 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  9502 ;;		 -> monitoring_ISR(1), TMR5_DefaultInterruptHandler(1), 
  9503 ;; Auto vars:     Size  Location     Type
  9504 ;;		None
  9505 ;; Return value:  Size  Location     Type
  9506 ;;                  1    wreg      void 
  9507 ;; Registers used:
  9508 ;;		wreg
  9509 ;; Tracked objects:
  9510 ;;		On entry : 0/0
  9511 ;;		On exit  : 0/0
  9512 ;;		Unchanged: 0/0
  9513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9514 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9517 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9518 ;;Total ram usage:        2 bytes
  9519 ;; Hardware stack levels used:    1
  9520 ;; Hardware stack levels required when called:    7
  9521 ;; This function calls:
  9522 ;;		Nothing
  9523 ;; This function is called by:
  9524 ;;		_TMR5_Initialize
  9525 ;;		_main
  9526 ;; This function uses a non-reentrant model
  9527 ;;
  9528                           
  9529                           
  9530                           ;psect for function _TMR5_SetInterruptHandler
  9531  0A36                     _TMR5_SetInterruptHandler:
  9532  0A36                     l3634:	
  9533                           ;incstack = 0
  9534                           ; Regs used in _TMR5_SetInterruptHandler: [wreg]
  9535                           
  9536                           
  9537                           ;tmr5.c: 180: TMR5_InterruptHandler = InterruptHandler;
  9538  0A36  0021               	movlb	1	; select bank1
  9539  0A37  082B               	movf	(TMR5_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  9540  0A38  00A1               	movwf	(_TMR5_InterruptHandler+1)^(0+128)
  9541  0A39  082A               	movf	TMR5_SetInterruptHandler@InterruptHandler^(0+128),w
  9542  0A3A  00A0               	movwf	_TMR5_InterruptHandler^(0+128)
  9543  0A3B                     l705:
  9544  0A3B  0008               	return
  9545  0A3C                     __end_of_TMR5_SetInterruptHandler:
  9546                           
  9547                           	psect	text11
  9548  0C0D                     __ptext11:	
  9549 ;; *************** function _TMR3_Initialize *****************
  9550 ;; Defined at:
  9551 ;;		line 64 in file "mcc_generated_files/tmr3.c"
  9552 ;; Parameters:    Size  Location     Type
  9553 ;;		None
  9554 ;; Auto vars:     Size  Location     Type
  9555 ;;		None
  9556 ;; Return value:  Size  Location     Type
  9557 ;;                  1    wreg      void 
  9558 ;; Registers used:
  9559 ;;		wreg, status,2, status,0, pclath, cstack
  9560 ;; Tracked objects:
  9561 ;;		On entry : 0/0
  9562 ;;		On exit  : 0/0
  9563 ;;		Unchanged: 0/0
  9564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9569 ;;Total ram usage:        0 bytes
  9570 ;; Hardware stack levels used:    1
  9571 ;; Hardware stack levels required when called:    8
  9572 ;; This function calls:
  9573 ;;		_TMR3_SetInterruptHandler
  9574 ;; This function is called by:
  9575 ;;		_SYSTEM_Initialize
  9576 ;; This function uses a non-reentrant model
  9577 ;;
  9578                           
  9579                           
  9580                           ;psect for function _TMR3_Initialize
  9581  0C0D                     _TMR3_Initialize:
  9582  0C0D                     l3890:	
  9583                           ;incstack = 0
  9584                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9585                           
  9586                           
  9587                           ;tmr3.c: 69: T3GCON = 0x00;
  9588  0C0D  0024               	movlb	4	; select bank4
  9589  0C0E  0195               	clrf	21	;volatile
  9590                           
  9591                           ;tmr3.c: 72: T3GATE = 0x00;
  9592  0C0F  0196               	clrf	22	;volatile
  9593  0C10                     l3892:
  9594                           
  9595                           ;tmr3.c: 75: T3CLK = 0x04;
  9596  0C10  3004               	movlw	4
  9597  0C11  0097               	movwf	23	;volatile
  9598  0C12                     l3894:
  9599                           
  9600                           ;tmr3.c: 78: TMR3H = 0xE7;
  9601  0C12  30E7               	movlw	231
  9602  0C13  0093               	movwf	19	;volatile
  9603  0C14                     l3896:
  9604                           
  9605                           ;tmr3.c: 81: TMR3L = 0xC8;
  9606  0C14  30C8               	movlw	200
  9607  0C15  0092               	movwf	18	;volatile
  9608  0C16                     l3898:
  9609                           
  9610                           ;tmr3.c: 84: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  9611  0C16  0813               	movf	19,w	;volatile
  9612  0C17  0020               	movlb	0	; select bank0
  9613  0C18  00EF               	movwf	_timer3ReloadVal+1	;volatile
  9614  0C19  0024               	movlb	4	; select bank4
  9615  0C1A  0812               	movf	18,w	;volatile
  9616  0C1B  0020               	movlb	0	; select bank0
  9617  0C1C  00EE               	movwf	_timer3ReloadVal	;volatile
  9618  0C1D                     l3900:
  9619                           
  9620                           ;tmr3.c: 87: PIR4bits.TMR3IF = 0;
  9621  0C1D  002E               	movlb	14	; select bank14
  9622  0C1E  1110               	bcf	16,2	;volatile
  9623  0C1F                     l3902:
  9624                           
  9625                           ;tmr3.c: 90: PIE4bits.TMR3IE = 1;
  9626  0C1F  151A               	bsf	26,2	;volatile
  9627  0C20                     l3904:
  9628                           
  9629                           ;tmr3.c: 93: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  9630  0C20  3002               	movlw	low _TMR3_DefaultInterruptHandler
  9631  0C21  0021               	movlb	1	; select bank1
  9632  0C22  00AA               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  9633  0C23  3000               	movlw	high _TMR3_DefaultInterruptHandler
  9634  0C24  00AB               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9635  0C25  318A  2230  318C   	fcall	_TMR3_SetInterruptHandler
  9636  0C28                     l3906:
  9637                           
  9638                           ;tmr3.c: 96: T3CON = 0x01;
  9639  0C28  3001               	movlw	1
  9640  0C29  0024               	movlb	4	; select bank4
  9641  0C2A  0094               	movwf	20	;volatile
  9642  0C2B                     l451:
  9643  0C2B  0008               	return
  9644  0C2C                     __end_of_TMR3_Initialize:
  9645                           
  9646                           	psect	text12
  9647  0A30                     __ptext12:	
  9648 ;; *************** function _TMR3_SetInterruptHandler *****************
  9649 ;; Defined at:
  9650 ;;		line 178 in file "mcc_generated_files/tmr3.c"
  9651 ;; Parameters:    Size  Location     Type
  9652 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  9653 ;;		 -> menuLCD_ISR(1), TMR3_DefaultInterruptHandler(1), 
  9654 ;; Auto vars:     Size  Location     Type
  9655 ;;		None
  9656 ;; Return value:  Size  Location     Type
  9657 ;;                  1    wreg      void 
  9658 ;; Registers used:
  9659 ;;		wreg
  9660 ;; Tracked objects:
  9661 ;;		On entry : 0/0
  9662 ;;		On exit  : 0/0
  9663 ;;		Unchanged: 0/0
  9664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9665 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9668 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9669 ;;Total ram usage:        2 bytes
  9670 ;; Hardware stack levels used:    1
  9671 ;; Hardware stack levels required when called:    7
  9672 ;; This function calls:
  9673 ;;		Nothing
  9674 ;; This function is called by:
  9675 ;;		_TMR3_Initialize
  9676 ;;		_main
  9677 ;; This function uses a non-reentrant model
  9678 ;;
  9679                           
  9680                           
  9681                           ;psect for function _TMR3_SetInterruptHandler
  9682  0A30                     _TMR3_SetInterruptHandler:
  9683  0A30                     l3618:	
  9684                           ;incstack = 0
  9685                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
  9686                           
  9687                           
  9688                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
  9689  0A30  0021               	movlb	1	; select bank1
  9690  0A31  082B               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  9691  0A32  00A5               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
  9692  0A33  082A               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
  9693  0A34  00A4               	movwf	_TMR3_InterruptHandler^(0+128)
  9694  0A35                     l481:
  9695  0A35  0008               	return
  9696  0A36                     __end_of_TMR3_SetInterruptHandler:
  9697                           
  9698                           	psect	text13
  9699  0A87                     __ptext13:	
  9700 ;; *************** function _TMR2_Initialize *****************
  9701 ;; Defined at:
  9702 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  9703 ;; Parameters:    Size  Location     Type
  9704 ;;		None
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;		None
  9707 ;; Return value:  Size  Location     Type
  9708 ;;                  1    wreg      void 
  9709 ;; Registers used:
  9710 ;;		wreg, status,2
  9711 ;; Tracked objects:
  9712 ;;		On entry : 0/0
  9713 ;;		On exit  : 0/0
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9720 ;;Total ram usage:        0 bytes
  9721 ;; Hardware stack levels used:    1
  9722 ;; Hardware stack levels required when called:    7
  9723 ;; This function calls:
  9724 ;;		Nothing
  9725 ;; This function is called by:
  9726 ;;		_SYSTEM_Initialize
  9727 ;; This function uses a non-reentrant model
  9728 ;;
  9729                           
  9730                           
  9731                           ;psect for function _TMR2_Initialize
  9732  0A87                     _TMR2_Initialize:
  9733  0A87                     l3908:	
  9734                           ;incstack = 0
  9735                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  9736                           
  9737                           
  9738                           ;tmr2.c: 67: T2CLKCON = 0x01;
  9739  0A87  3001               	movlw	1
  9740  0A88  0025               	movlb	5	; select bank5
  9741  0A89  0090               	movwf	16	;volatile
  9742  0A8A                     l3910:
  9743                           
  9744                           ;tmr2.c: 70: T2HLT = 0x00;
  9745  0A8A  018F               	clrf	15	;volatile
  9746  0A8B                     l3912:
  9747                           
  9748                           ;tmr2.c: 73: T2RST = 0x00;
  9749  0A8B  0191               	clrf	17	;volatile
  9750                           
  9751                           ;tmr2.c: 76: T2PR = 0xFF;
  9752  0A8C  30FF               	movlw	255
  9753  0A8D  008D               	movwf	13	;volatile
  9754  0A8E                     l3914:
  9755                           
  9756                           ;tmr2.c: 79: T2TMR = 0x00;
  9757  0A8E  018C               	clrf	12	;volatile
  9758  0A8F                     l3916:
  9759                           
  9760                           ;tmr2.c: 82: PIR4bits.TMR2IF = 0;
  9761  0A8F  002E               	movlb	14	; select bank14
  9762  0A90  1090               	bcf	16,1	;volatile
  9763  0A91                     l3918:
  9764                           
  9765                           ;tmr2.c: 85: T2CON = 0x80;
  9766  0A91  3080               	movlw	128
  9767  0A92  0025               	movlb	5	; select bank5
  9768  0A93  008E               	movwf	14	;volatile
  9769  0A94                     l749:
  9770  0A94  0008               	return
  9771  0A95                     __end_of_TMR2_Initialize:
  9772                           
  9773                           	psect	text14
  9774  0BEE                     __ptext14:	
  9775 ;; *************** function _TMR1_Initialize *****************
  9776 ;; Defined at:
  9777 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  9778 ;; Parameters:    Size  Location     Type
  9779 ;;		None
  9780 ;; Auto vars:     Size  Location     Type
  9781 ;;		None
  9782 ;; Return value:  Size  Location     Type
  9783 ;;                  1    wreg      void 
  9784 ;; Registers used:
  9785 ;;		wreg, status,2, status,0, pclath, cstack
  9786 ;; Tracked objects:
  9787 ;;		On entry : 0/0
  9788 ;;		On exit  : 0/0
  9789 ;;		Unchanged: 0/0
  9790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9795 ;;Total ram usage:        0 bytes
  9796 ;; Hardware stack levels used:    1
  9797 ;; Hardware stack levels required when called:    8
  9798 ;; This function calls:
  9799 ;;		_TMR1_SetInterruptHandler
  9800 ;; This function is called by:
  9801 ;;		_SYSTEM_Initialize
  9802 ;; This function uses a non-reentrant model
  9803 ;;
  9804                           
  9805                           
  9806                           ;psect for function _TMR1_Initialize
  9807  0BEE                     _TMR1_Initialize:
  9808  0BEE                     l3938:	
  9809                           ;incstack = 0
  9810                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9811                           
  9812                           
  9813                           ;tmr1.c: 69: T1GCON = 0x00;
  9814  0BEE  0024               	movlb	4	; select bank4
  9815  0BEF  018F               	clrf	15	;volatile
  9816                           
  9817                           ;tmr1.c: 72: T1GATE = 0x00;
  9818  0BF0  0190               	clrf	16	;volatile
  9819  0BF1                     l3940:
  9820                           
  9821                           ;tmr1.c: 75: T1CLK = 0x04;
  9822  0BF1  3004               	movlw	4
  9823  0BF2  0091               	movwf	17	;volatile
  9824  0BF3                     l3942:
  9825                           
  9826                           ;tmr1.c: 78: TMR1H = 0x86;
  9827  0BF3  3086               	movlw	134
  9828  0BF4  008D               	movwf	13	;volatile
  9829  0BF5                     l3944:
  9830                           
  9831                           ;tmr1.c: 81: TMR1L = 0xE8;
  9832  0BF5  30E8               	movlw	232
  9833  0BF6  008C               	movwf	12	;volatile
  9834  0BF7                     l3946:
  9835                           
  9836                           ;tmr1.c: 84: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  9837  0BF7  080D               	movf	13,w	;volatile
  9838  0BF8  0021               	movlb	1	; select bank1
  9839  0BF9  00A9               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  9840  0BFA  0024               	movlb	4	; select bank4
  9841  0BFB  080C               	movf	12,w	;volatile
  9842  0BFC  0021               	movlb	1	; select bank1
  9843  0BFD  00A8               	movwf	_timer1ReloadVal^(0+128)	;volatile
  9844  0BFE                     l3948:
  9845                           
  9846                           ;tmr1.c: 87: PIR4bits.TMR1IF = 0;
  9847  0BFE  002E               	movlb	14	; select bank14
  9848  0BFF  1010               	bcf	16,0	;volatile
  9849  0C00                     l3950:
  9850                           
  9851                           ;tmr1.c: 90: PIE4bits.TMR1IE = 1;
  9852  0C00  141A               	bsf	26,0	;volatile
  9853  0C01                     l3952:
  9854                           
  9855                           ;tmr1.c: 93: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  9856  0C01  300E               	movlw	low _TMR1_DefaultInterruptHandler
  9857  0C02  0021               	movlb	1	; select bank1
  9858  0C03  00AA               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  9859  0C04  300A               	movlw	high _TMR1_DefaultInterruptHandler
  9860  0C05  00AB               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9861  0C06  318A  222A  318B   	fcall	_TMR1_SetInterruptHandler
  9862  0C09                     l3954:
  9863                           
  9864                           ;tmr1.c: 96: T1CON = 0x01;
  9865  0C09  3001               	movlw	1
  9866  0C0A  0024               	movlb	4	; select bank4
  9867  0C0B  008E               	movwf	14	;volatile
  9868  0C0C                     l387:
  9869  0C0C  0008               	return
  9870  0C0D                     __end_of_TMR1_Initialize:
  9871                           
  9872                           	psect	text15
  9873  0A2A                     __ptext15:	
  9874 ;; *************** function _TMR1_SetInterruptHandler *****************
  9875 ;; Defined at:
  9876 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  9879 ;;		 -> Clock_ISR(1), TMR1_DefaultInterruptHandler(1), 
  9880 ;; Auto vars:     Size  Location     Type
  9881 ;;		None
  9882 ;; Return value:  Size  Location     Type
  9883 ;;                  1    wreg      void 
  9884 ;; Registers used:
  9885 ;;		wreg
  9886 ;; Tracked objects:
  9887 ;;		On entry : 0/0
  9888 ;;		On exit  : 0/0
  9889 ;;		Unchanged: 0/0
  9890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9891 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9894 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9895 ;;Total ram usage:        2 bytes
  9896 ;; Hardware stack levels used:    1
  9897 ;; Hardware stack levels required when called:    7
  9898 ;; This function calls:
  9899 ;;		Nothing
  9900 ;; This function is called by:
  9901 ;;		_TMR1_Initialize
  9902 ;;		_main
  9903 ;; This function uses a non-reentrant model
  9904 ;;
  9905                           
  9906                           
  9907                           ;psect for function _TMR1_SetInterruptHandler
  9908  0A2A                     _TMR1_SetInterruptHandler:
  9909  0A2A                     l3616:	
  9910                           ;incstack = 0
  9911                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  9912                           
  9913                           
  9914                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
  9915  0A2A  0021               	movlb	1	; select bank1
  9916  0A2B  082B               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  9917  0A2C  00A7               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  9918  0A2D  082A               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
  9919  0A2E  00A6               	movwf	_TMR1_InterruptHandler^(0+128)
  9920  0A2F                     l417:
  9921  0A2F  0008               	return
  9922  0A30                     __end_of_TMR1_SetInterruptHandler:
  9923                           
  9924                           	psect	text16
  9925  0A7A                     __ptext16:	
  9926 ;; *************** function _PWM6_Initialize *****************
  9927 ;; Defined at:
  9928 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  9929 ;; Parameters:    Size  Location     Type
  9930 ;;		None
  9931 ;; Auto vars:     Size  Location     Type
  9932 ;;		None
  9933 ;; Return value:  Size  Location     Type
  9934 ;;                  1    wreg      void 
  9935 ;; Registers used:
  9936 ;;		wreg, status,2, status,0
  9937 ;; Tracked objects:
  9938 ;;		On entry : 0/0
  9939 ;;		On exit  : 0/0
  9940 ;;		Unchanged: 0/0
  9941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9946 ;;Total ram usage:        0 bytes
  9947 ;; Hardware stack levels used:    1
  9948 ;; Hardware stack levels required when called:    7
  9949 ;; This function calls:
  9950 ;;		Nothing
  9951 ;; This function is called by:
  9952 ;;		_SYSTEM_Initialize
  9953 ;; This function uses a non-reentrant model
  9954 ;;
  9955                           
  9956                           
  9957                           ;psect for function _PWM6_Initialize
  9958  0A7A                     _PWM6_Initialize:
  9959  0A7A                     l3880:	
  9960                           ;incstack = 0
  9961                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
  9962                           
  9963                           
  9964                           ;pwm6.c: 62: PWM6CON = 0x80;
  9965  0A7A  3080               	movlw	128
  9966  0A7B  0027               	movlb	7	; select bank7
  9967  0A7C  008E               	movwf	14	;volatile
  9968                           
  9969                           ;pwm6.c: 65: PWM6DCH = 0xFF;
  9970  0A7D  30FF               	movlw	255
  9971  0A7E  008D               	movwf	13	;volatile
  9972                           
  9973                           ;pwm6.c: 68: PWM6DCL = 0xC0;
  9974  0A7F  30C0               	movlw	192
  9975  0A80  008C               	movwf	12	;volatile
  9976  0A81                     l3882:
  9977                           
  9978                           ;pwm6.c: 71: CCPTMRS1bits.P6TSEL = 1;
  9979  0A81  0024               	movlb	4	; select bank4
  9980  0A82  081F               	movf	31,w	;volatile
  9981  0A83  39F3               	andlw	-13
  9982  0A84  3804               	iorlw	4
  9983  0A85  009F               	movwf	31	;volatile
  9984  0A86                     l719:
  9985  0A86  0008               	return
  9986  0A87                     __end_of_PWM6_Initialize:
  9987                           
  9988                           	psect	text17
  9989  0A5D                     __ptext17:	
  9990 ;; *************** function _PMD_Initialize *****************
  9991 ;; Defined at:
  9992 ;;		line 77 in file "mcc_generated_files/mcc.c"
  9993 ;; Parameters:    Size  Location     Type
  9994 ;;		None
  9995 ;; Auto vars:     Size  Location     Type
  9996 ;;		None
  9997 ;; Return value:  Size  Location     Type
  9998 ;;                  1    wreg      void 
  9999 ;; Registers used:
 10000 ;;		status,2
 10001 ;; Tracked objects:
 10002 ;;		On entry : 0/0
 10003 ;;		On exit  : 0/0
 10004 ;;		Unchanged: 0/0
 10005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10010 ;;Total ram usage:        0 bytes
 10011 ;; Hardware stack levels used:    1
 10012 ;; Hardware stack levels required when called:    7
 10013 ;; This function calls:
 10014 ;;		Nothing
 10015 ;; This function is called by:
 10016 ;;		_SYSTEM_Initialize
 10017 ;; This function uses a non-reentrant model
 10018 ;;
 10019                           
 10020                           
 10021                           ;psect for function _PMD_Initialize
 10022  0A5D                     _PMD_Initialize:
 10023  0A5D                     l3870:	
 10024                           ;incstack = 0
 10025                           ; Regs used in _PMD_Initialize: [status,2]
 10026                           
 10027                           
 10028                           ;mcc.c: 80: PMD0 = 0x00;
 10029  0A5D  002F               	movlb	15	; select bank15
 10030  0A5E  0196               	clrf	22	;volatile
 10031                           
 10032                           ;mcc.c: 82: PMD1 = 0x00;
 10033  0A5F  0197               	clrf	23	;volatile
 10034                           
 10035                           ;mcc.c: 84: PMD2 = 0x00;
 10036  0A60  0198               	clrf	24	;volatile
 10037                           
 10038                           ;mcc.c: 86: PMD3 = 0x00;
 10039  0A61  0199               	clrf	25	;volatile
 10040                           
 10041                           ;mcc.c: 88: PMD4 = 0x00;
 10042  0A62  019A               	clrf	26	;volatile
 10043                           
 10044                           ;mcc.c: 90: PMD5 = 0x00;
 10045  0A63  019B               	clrf	27	;volatile
 10046  0A64                     l178:
 10047  0A64  0008               	return
 10048  0A65                     __end_of_PMD_Initialize:
 10049                           
 10050                           	psect	text18
 10051  0D5E                     __ptext18:	
 10052 ;; *************** function _PIN_MANAGER_Initialize *****************
 10053 ;; Defined at:
 10054 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 10055 ;; Parameters:    Size  Location     Type
 10056 ;;		None
 10057 ;; Auto vars:     Size  Location     Type
 10058 ;;		None
 10059 ;; Return value:  Size  Location     Type
 10060 ;;                  1    wreg      void 
 10061 ;; Registers used:
 10062 ;;		wreg, status,2
 10063 ;; Tracked objects:
 10064 ;;		On entry : 0/0
 10065 ;;		On exit  : 0/0
 10066 ;;		Unchanged: 0/0
 10067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10072 ;;Total ram usage:        0 bytes
 10073 ;; Hardware stack levels used:    1
 10074 ;; Hardware stack levels required when called:    7
 10075 ;; This function calls:
 10076 ;;		Nothing
 10077 ;; This function is called by:
 10078 ;;		_SYSTEM_Initialize
 10079 ;; This function uses a non-reentrant model
 10080 ;;
 10081                           
 10082                           
 10083                           ;psect for function _PIN_MANAGER_Initialize
 10084  0D5E                     _PIN_MANAGER_Initialize:
 10085  0D5E                     l3828:	
 10086                           ;incstack = 0
 10087                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10088                           
 10089                           
 10090                           ;pin_manager.c: 62: LATE = 0x00;
 10091  0D5E  0020               	movlb	0	; select bank0
 10092  0D5F  019A               	clrf	26	;volatile
 10093                           
 10094                           ;pin_manager.c: 63: LATD = 0x00;
 10095  0D60  0199               	clrf	25	;volatile
 10096                           
 10097                           ;pin_manager.c: 64: LATA = 0x00;
 10098  0D61  0196               	clrf	22	;volatile
 10099                           
 10100                           ;pin_manager.c: 65: LATB = 0x00;
 10101  0D62  0197               	clrf	23	;volatile
 10102                           
 10103                           ;pin_manager.c: 66: LATC = 0x00;
 10104  0D63  0198               	clrf	24	;volatile
 10105  0D64                     l3830:
 10106                           
 10107                           ;pin_manager.c: 71: TRISE = 0x07;
 10108  0D64  3007               	movlw	7
 10109  0D65  0095               	movwf	21	;volatile
 10110  0D66                     l3832:
 10111                           
 10112                           ;pin_manager.c: 72: TRISA = 0x0F;
 10113  0D66  300F               	movlw	15
 10114  0D67  0091               	movwf	17	;volatile
 10115  0D68                     l3834:
 10116                           
 10117                           ;pin_manager.c: 73: TRISB = 0xFF;
 10118  0D68  30FF               	movlw	255
 10119  0D69  0092               	movwf	18	;volatile
 10120  0D6A                     l3836:
 10121                           
 10122                           ;pin_manager.c: 74: TRISC = 0xFF;
 10123  0D6A  30FF               	movlw	255
 10124  0D6B  0093               	movwf	19	;volatile
 10125  0D6C                     l3838:
 10126                           
 10127                           ;pin_manager.c: 75: TRISD = 0xFF;
 10128  0D6C  30FF               	movlw	255
 10129  0D6D  0094               	movwf	20	;volatile
 10130  0D6E                     l3840:
 10131                           
 10132                           ;pin_manager.c: 80: ANSELD = 0xFF;
 10133  0D6E  30FF               	movlw	255
 10134  0D6F  003E               	movlb	30	; select bank30
 10135  0D70  00D9               	movwf	89	;volatile
 10136  0D71                     l3842:
 10137                           
 10138                           ;pin_manager.c: 81: ANSELC = 0xC7;
 10139  0D71  30C7               	movlw	199
 10140  0D72  00CE               	movwf	78	;volatile
 10141  0D73                     l3844:
 10142                           
 10143                           ;pin_manager.c: 82: ANSELB = 0xEF;
 10144  0D73  30EF               	movlw	239
 10145  0D74  00C3               	movwf	67	;volatile
 10146  0D75                     l3846:
 10147                           
 10148                           ;pin_manager.c: 83: ANSELE = 0x07;
 10149  0D75  3007               	movlw	7
 10150  0D76  00E4               	movwf	100	;volatile
 10151  0D77                     l3848:
 10152                           
 10153                           ;pin_manager.c: 84: ANSELA = 0x4F;
 10154  0D77  304F               	movlw	79
 10155  0D78  00B8               	movwf	56	;volatile
 10156                           
 10157                           ;pin_manager.c: 89: WPUD = 0x00;
 10158  0D79  01DA               	clrf	90	;volatile
 10159                           
 10160                           ;pin_manager.c: 90: WPUE = 0x00;
 10161  0D7A  01E5               	clrf	101	;volatile
 10162                           
 10163                           ;pin_manager.c: 91: WPUB = 0x00;
 10164  0D7B  01C4               	clrf	68	;volatile
 10165                           
 10166                           ;pin_manager.c: 92: WPUA = 0x00;
 10167  0D7C  01B9               	clrf	57	;volatile
 10168                           
 10169                           ;pin_manager.c: 93: WPUC = 0x00;
 10170  0D7D  01CF               	clrf	79	;volatile
 10171                           
 10172                           ;pin_manager.c: 98: ODCONE = 0x00;
 10173  0D7E  01E6               	clrf	102	;volatile
 10174                           
 10175                           ;pin_manager.c: 99: ODCONA = 0x00;
 10176  0D7F  01BA               	clrf	58	;volatile
 10177                           
 10178                           ;pin_manager.c: 100: ODCONB = 0x00;
 10179  0D80  01C5               	clrf	69	;volatile
 10180                           
 10181                           ;pin_manager.c: 101: ODCONC = 0x00;
 10182  0D81  01D0               	clrf	80	;volatile
 10183                           
 10184                           ;pin_manager.c: 102: ODCOND = 0x00;
 10185  0D82  01DB               	clrf	91	;volatile
 10186  0D83                     l3850:
 10187                           
 10188                           ;pin_manager.c: 107: SLRCONA = 0xFF;
 10189  0D83  30FF               	movlw	255
 10190  0D84  00BB               	movwf	59	;volatile
 10191  0D85                     l3852:
 10192                           
 10193                           ;pin_manager.c: 108: SLRCONB = 0xFF;
 10194  0D85  30FF               	movlw	255
 10195  0D86  00C6               	movwf	70	;volatile
 10196  0D87                     l3854:
 10197                           
 10198                           ;pin_manager.c: 109: SLRCONC = 0xFF;
 10199  0D87  30FF               	movlw	255
 10200  0D88  00D1               	movwf	81	;volatile
 10201  0D89                     l3856:
 10202                           
 10203                           ;pin_manager.c: 110: SLRCOND = 0xFF;
 10204  0D89  30FF               	movlw	255
 10205  0D8A  00DC               	movwf	92	;volatile
 10206  0D8B                     l3858:
 10207                           
 10208                           ;pin_manager.c: 111: SLRCONE = 0x07;
 10209  0D8B  3007               	movlw	7
 10210  0D8C  00E7               	movwf	103	;volatile
 10211  0D8D                     l3860:
 10212                           
 10213                           ;pin_manager.c: 120: SSP1CLKPPS = 0x13;
 10214  0D8D  3013               	movlw	19
 10215  0D8E  003D               	movlb	29	; select bank29
 10216  0D8F  00C5               	movwf	69	;volatile
 10217  0D90                     l3862:
 10218                           
 10219                           ;pin_manager.c: 121: RC3PPS = 0x14;
 10220  0D90  3014               	movlw	20
 10221  0D91  003E               	movlb	30	; select bank30
 10222  0D92  00A3               	movwf	35	;volatile
 10223  0D93                     l3864:
 10224                           
 10225                           ;pin_manager.c: 122: RC4PPS = 0x15;
 10226  0D93  3015               	movlw	21
 10227  0D94  00A4               	movwf	36	;volatile
 10228  0D95                     l3866:
 10229                           
 10230                           ;pin_manager.c: 123: RA6PPS = 0x0E;
 10231  0D95  300E               	movlw	14
 10232  0D96  0096               	movwf	22	;volatile
 10233  0D97                     l3868:
 10234                           
 10235                           ;pin_manager.c: 124: SSP1DATPPS = 0x14;
 10236  0D97  3014               	movlw	20
 10237  0D98  003D               	movlb	29	; select bank29
 10238  0D99  00C6               	movwf	70	;volatile
 10239  0D9A                     l122:
 10240  0D9A  0008               	return
 10241  0D9B                     __end_of_PIN_MANAGER_Initialize:
 10242                           
 10243                           	psect	text19
 10244  0A65                     __ptext19:	
 10245 ;; *************** function _OSCILLATOR_Initialize *****************
 10246 ;; Defined at:
 10247 ;;		line 63 in file "mcc_generated_files/mcc.c"
 10248 ;; Parameters:    Size  Location     Type
 10249 ;;		None
 10250 ;; Auto vars:     Size  Location     Type
 10251 ;;		None
 10252 ;; Return value:  Size  Location     Type
 10253 ;;                  1    wreg      void 
 10254 ;; Registers used:
 10255 ;;		wreg, status,2
 10256 ;; Tracked objects:
 10257 ;;		On entry : 0/0
 10258 ;;		On exit  : 0/0
 10259 ;;		Unchanged: 0/0
 10260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10265 ;;Total ram usage:        0 bytes
 10266 ;; Hardware stack levels used:    1
 10267 ;; Hardware stack levels required when called:    7
 10268 ;; This function calls:
 10269 ;;		Nothing
 10270 ;; This function is called by:
 10271 ;;		_SYSTEM_Initialize
 10272 ;; This function uses a non-reentrant model
 10273 ;;
 10274                           
 10275                           
 10276                           ;psect for function _OSCILLATOR_Initialize
 10277  0A65                     _OSCILLATOR_Initialize:
 10278  0A65                     l3872:	
 10279                           ;incstack = 0
 10280                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10281                           
 10282                           
 10283                           ;mcc.c: 66: OSCCON1 = 0x62;
 10284  0A65  3062               	movlw	98
 10285  0A66  0031               	movlb	17	; select bank17
 10286  0A67  008D               	movwf	13	;volatile
 10287  0A68                     l3874:
 10288                           
 10289                           ;mcc.c: 68: OSCCON3 = 0x00;
 10290  0A68  018F               	clrf	15	;volatile
 10291  0A69                     l3876:
 10292                           
 10293                           ;mcc.c: 70: OSCEN = 0x00;
 10294  0A69  0191               	clrf	17	;volatile
 10295                           
 10296                           ;mcc.c: 72: OSCFRQ = 0x02;
 10297  0A6A  3002               	movlw	2
 10298  0A6B  0093               	movwf	19	;volatile
 10299  0A6C                     l3878:
 10300                           
 10301                           ;mcc.c: 74: OSCTUNE = 0x00;
 10302  0A6C  0192               	clrf	18	;volatile
 10303  0A6D                     l175:
 10304  0A6D  0008               	return
 10305  0A6E                     __end_of_OSCILLATOR_Initialize:
 10306                           
 10307                           	psect	text20
 10308  0B69                     __ptext20:	
 10309 ;; *************** function _ADCC_Initialize *****************
 10310 ;; Defined at:
 10311 ;;		line 63 in file "mcc_generated_files/adcc.c"
 10312 ;; Parameters:    Size  Location     Type
 10313 ;;		None
 10314 ;; Auto vars:     Size  Location     Type
 10315 ;;		None
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  1    wreg      void 
 10318 ;; Registers used:
 10319 ;;		wreg, status,2
 10320 ;; Tracked objects:
 10321 ;;		On entry : 0/0
 10322 ;;		On exit  : 0/0
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10329 ;;Total ram usage:        0 bytes
 10330 ;; Hardware stack levels used:    1
 10331 ;; Hardware stack levels required when called:    7
 10332 ;; This function calls:
 10333 ;;		Nothing
 10334 ;; This function is called by:
 10335 ;;		_SYSTEM_Initialize
 10336 ;; This function uses a non-reentrant model
 10337 ;;
 10338                           
 10339                           
 10340                           ;psect for function _ADCC_Initialize
 10341  0B69                     _ADCC_Initialize:
 10342  0B69                     l3884:	
 10343                           ;incstack = 0
 10344                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 10345                           
 10346                           
 10347                           ;adcc.c: 67: ADLTHL = 0x00;
 10348  0B69  0022               	movlb	2	; select bank2
 10349  0B6A  018E               	clrf	14	;volatile
 10350                           
 10351                           ;adcc.c: 69: ADLTHH = 0x00;
 10352  0B6B  018F               	clrf	15	;volatile
 10353                           
 10354                           ;adcc.c: 71: ADUTHL = 0x00;
 10355  0B6C  0190               	clrf	16	;volatile
 10356                           
 10357                           ;adcc.c: 73: ADUTHH = 0x00;
 10358  0B6D  0191               	clrf	17	;volatile
 10359                           
 10360                           ;adcc.c: 75: ADSTPTL = 0x00;
 10361  0B6E  0192               	clrf	18	;volatile
 10362                           
 10363                           ;adcc.c: 77: ADSTPTH = 0x00;
 10364  0B6F  0193               	clrf	19	;volatile
 10365                           
 10366                           ;adcc.c: 79: ADRPT = 0x00;
 10367  0B70  018D               	clrf	13	;volatile
 10368                           
 10369                           ;adcc.c: 81: ADPCH = 0x00;
 10370  0B71  0021               	movlb	1	; select bank1
 10371  0B72  019E               	clrf	30	;volatile
 10372                           
 10373                           ;adcc.c: 83: ADCAP = 0x00;
 10374  0B73  019B               	clrf	27	;volatile
 10375                           
 10376                           ;adcc.c: 85: ADCON1 = 0x00;
 10377  0B74  0194               	clrf	20	;volatile
 10378                           
 10379                           ;adcc.c: 87: ADCON2 = 0x00;
 10380  0B75  0195               	clrf	21	;volatile
 10381                           
 10382                           ;adcc.c: 89: ADCON3 = 0x00;
 10383  0B76  0196               	clrf	22	;volatile
 10384                           
 10385                           ;adcc.c: 91: ADSTAT = 0x00;
 10386  0B77  0197               	clrf	23	;volatile
 10387                           
 10388                           ;adcc.c: 93: ADREF = 0x00;
 10389  0B78  019A               	clrf	26	;volatile
 10390                           
 10391                           ;adcc.c: 95: ADACT = 0x00;
 10392  0B79  0199               	clrf	25	;volatile
 10393                           
 10394                           ;adcc.c: 97: ADCLK = 0x00;
 10395  0B7A  0198               	clrf	24	;volatile
 10396  0B7B                     l3886:
 10397                           
 10398                           ;adcc.c: 99: ADCON0 = 0x80;
 10399  0B7B  3080               	movlw	128
 10400  0B7C  0093               	movwf	19	;volatile
 10401  0B7D                     l3888:
 10402                           
 10403                           ;adcc.c: 101: ADACQ = 0xFF;
 10404  0B7D  30FF               	movlw	255
 10405  0B7E  009D               	movwf	29	;volatile
 10406  0B7F                     l563:
 10407  0B7F  0008               	return
 10408  0B80                     __end_of_ADCC_Initialize:
 10409                           
 10410                           	psect	text21
 10411  0A1B                     __ptext21:	
 10412 ;; *************** function _PWM_Output_D4_Disable *****************
 10413 ;; Defined at:
 10414 ;;		line 230 in file "main.c"
 10415 ;; Parameters:    Size  Location     Type
 10416 ;;		None
 10417 ;; Auto vars:     Size  Location     Type
 10418 ;;		None
 10419 ;; Return value:  Size  Location     Type
 10420 ;;                  1    wreg      void 
 10421 ;; Registers used:
 10422 ;;		None
 10423 ;; Tracked objects:
 10424 ;;		On entry : 0/0
 10425 ;;		On exit  : 0/0
 10426 ;;		Unchanged: 0/0
 10427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10432 ;;Total ram usage:        0 bytes
 10433 ;; Hardware stack levels used:    1
 10434 ;; Hardware stack levels required when called:    7
 10435 ;; This function calls:
 10436 ;;		Nothing
 10437 ;; This function is called by:
 10438 ;;		_main
 10439 ;; This function uses a non-reentrant model
 10440 ;;
 10441                           
 10442                           
 10443                           ;psect for function _PWM_Output_D4_Disable
 10444  0A1B                     _PWM_Output_D4_Disable:
 10445  0A1B                     l4396:	
 10446                           ;incstack = 0
 10447                           ; Regs used in _PWM_Output_D4_Disable: []
 10448                           
 10449                           
 10450                           ;main.c: 231: PWM6EN = 0;
 10451  0A1B  0027               	movlb	7	; select bank7
 10452  0A1C  138E               	bcf	14,7	;volatile
 10453  0A1D                     l1090:
 10454  0A1D  0008               	return
 10455  0A1E                     __end_of_PWM_Output_D4_Disable:
 10456                           
 10457                           	psect	text22
 10458  0B80                     __ptext22:	
 10459 ;; *************** function _PWM6_LoadDutyValue *****************
 10460 ;; Defined at:
 10461 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 10462 ;; Parameters:    Size  Location     Type
 10463 ;;  dutyValue       2    0[BANK1 ] unsigned int 
 10464 ;; Auto vars:     Size  Location     Type
 10465 ;;		None
 10466 ;; Return value:  Size  Location     Type
 10467 ;;                  1    wreg      void 
 10468 ;; Registers used:
 10469 ;;		wreg, status,2, status,0
 10470 ;; Tracked objects:
 10471 ;;		On entry : 0/0
 10472 ;;		On exit  : 0/0
 10473 ;;		Unchanged: 0/0
 10474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10475 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10477 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10478 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10479 ;;Total ram usage:        4 bytes
 10480 ;; Hardware stack levels used:    1
 10481 ;; Hardware stack levels required when called:    7
 10482 ;; This function calls:
 10483 ;;		Nothing
 10484 ;; This function is called by:
 10485 ;;		_main
 10486 ;; This function uses a non-reentrant model
 10487 ;;
 10488                           
 10489                           
 10490                           ;psect for function _PWM6_LoadDutyValue
 10491  0B80                     _PWM6_LoadDutyValue:
 10492  0B80                     l4292:	
 10493                           ;incstack = 0
 10494                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 10495                           
 10496                           
 10497                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 10498  0B80  0021               	movlb	1	; select bank1
 10499  0B81  082B               	movf	(PWM6_LoadDutyValue@dutyValue+1)^(0+128),w
 10500  0B82  00AD               	movwf	(??_PWM6_LoadDutyValue^(0+128)+1)
 10501  0B83  082A               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 10502  0B84  00AC               	movwf	??_PWM6_LoadDutyValue^(0+128)
 10503  0B85  36AD               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 10504  0B86  0CAC               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 10505  0B87  36AD               	lsrf	(??_PWM6_LoadDutyValue^(0+128)+1),f
 10506  0B88  0CAC               	rrf	??_PWM6_LoadDutyValue^(0+128),f
 10507  0B89  082C               	movf	??_PWM6_LoadDutyValue^(0+128),w
 10508  0B8A  0027               	movlb	7	; select bank7
 10509  0B8B  008D               	movwf	13	;volatile
 10510                           
 10511                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 10512  0B8C  0021               	movlb	1	; select bank1
 10513  0B8D  082A               	movf	PWM6_LoadDutyValue@dutyValue^(0+128),w
 10514  0B8E  3903               	andlw	3
 10515  0B8F  00AC               	movwf	??_PWM6_LoadDutyValue^(0+128)
 10516  0B90  3005               	movlw	5
 10517  0B91                     u4045:
 10518  0B91  35AC               	lslf	??_PWM6_LoadDutyValue^(0+128),f
 10519  0B92  3EFF               	addlw	-1
 10520  0B93  1D03               	skipz
 10521  0B94  2B91               	goto	u4045
 10522  0B95  352C               	lslf	??_PWM6_LoadDutyValue^(0+128),w
 10523  0B96  0027               	movlb	7	; select bank7
 10524  0B97  008C               	movwf	12	;volatile
 10525  0B98                     l722:
 10526  0B98  0008               	return
 10527  0B99                     __end_of_PWM6_LoadDutyValue:
 10528                           
 10529                           	psect	text23
 10530  0F11                     __ptext23:	
 10531 ;; *************** function _LCDinit *****************
 10532 ;; Defined at:
 10533 ;;		line 157 in file "main.c"
 10534 ;; Parameters:    Size  Location     Type
 10535 ;;		None
 10536 ;; Auto vars:     Size  Location     Type
 10537 ;;		None
 10538 ;; Return value:  Size  Location     Type
 10539 ;;                  1    wreg      void 
 10540 ;; Registers used:
 10541 ;;		wreg, status,2, status,0, pclath, cstack
 10542 ;; Tracked objects:
 10543 ;;		On entry : 0/0
 10544 ;;		On exit  : 0/0
 10545 ;;		Unchanged: 0/0
 10546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10549 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10550 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10551 ;;Total ram usage:        1 bytes
 10552 ;; Hardware stack levels used:    1
 10553 ;; Hardware stack levels required when called:    9
 10554 ;; This function calls:
 10555 ;;		_LCDsend
 10556 ;;		_LCDsend2x4
 10557 ;; This function is called by:
 10558 ;;		_main
 10559 ;; This function uses a non-reentrant model
 10560 ;;
 10561                           
 10562                           
 10563                           ;psect for function _LCDinit
 10564  0F11                     _LCDinit:
 10565  0F11                     l4362:	
 10566                           ;incstack = 0
 10567                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 10568                           
 10569                           
 10570                           ;main.c: 159: _delay((unsigned long)((50)*(1000000/4000.0)));
 10571  0F11  3011               	movlw	17
 10572  0F12  0021               	movlb	1	; select bank1
 10573  0F13  00B2               	movwf	??_LCDinit^(0+128)
 10574  0F14  303A               	movlw	58
 10575  0F15                     u4807:
 10576  0F15  0B89               	decfsz	9,f
 10577  0F16  2F15               	goto	u4807
 10578  0F17  0BB2               	decfsz	??_LCDinit^(0+128),f
 10579  0F18  2F15               	goto	u4807
 10580  0F19  0000               	nop
 10581  0F1A                     l4364:
 10582                           
 10583                           ;main.c: 160: LCDsend(0x30);
 10584  0F1A  3030               	movlw	48
 10585  0F1B  318D  259B  318F   	fcall	_LCDsend
 10586  0F1E                     l4366:
 10587                           
 10588                           ;main.c: 161: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 10589  0F1E  3034               	movlw	52
 10590  0F1F  318D  259B  318F   	fcall	_LCDsend
 10591  0F22  3029               	movlw	41
 10592  0F23                     u4817:
 10593  0F23  0B89               	decfsz	9,f
 10594  0F24  2F23               	goto	u4817
 10595  0F25  3200               	nop2
 10596  0F26                     l4368:
 10597  0F26  3030               	movlw	48
 10598  0F27  318D  259B  318F   	fcall	_LCDsend
 10599  0F2A                     l4370:
 10600                           
 10601                           ;main.c: 162: _delay((unsigned long)((5)*(1000000/4000.0)));
 10602  0F2A  30FA               	movlw	250
 10603  0F2B                     u4827:
 10604  0F2B  3200               	nop2
 10605  0F2C  0B89               	decfsz	9,f
 10606  0F2D  2F2B               	goto	u4827
 10607                           
 10608                           ;main.c: 163: LCDsend(0x30);
 10609  0F2E  3030               	movlw	48
 10610  0F2F  318D  259B  318F   	fcall	_LCDsend
 10611                           
 10612                           ;main.c: 164: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 10613  0F32  3034               	movlw	52
 10614  0F33  318D  259B  318F   	fcall	_LCDsend
 10615  0F36                     l4372:
 10616  0F36  3029               	movlw	41
 10617  0F37                     u4837:
 10618  0F37  0B89               	decfsz	9,f
 10619  0F38  2F37               	goto	u4837
 10620  0F39  3200               	nop2
 10621  0F3A                     l4374:
 10622  0F3A  3030               	movlw	48
 10623  0F3B  318D  259B  318F   	fcall	_LCDsend
 10624                           
 10625                           ;main.c: 165: _delay((unsigned long)((100)*(1000000/4000000.0)));
 10626  0F3E  3008               	movlw	8
 10627  0F3F                     u4847:
 10628  0F3F  0B89               	decfsz	9,f
 10629  0F40  2F3F               	goto	u4847
 10630  0F41  0000               	nop
 10631  0F42                     l4376:
 10632                           
 10633                           ;main.c: 166: LCDsend(0x30);
 10634  0F42  3030               	movlw	48
 10635  0F43  318D  259B  318F   	fcall	_LCDsend
 10636  0F46                     l4378:
 10637                           
 10638                           ;main.c: 167: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
 10639  0F46  3034               	movlw	52
 10640  0F47  318D  259B  318F   	fcall	_LCDsend
 10641  0F4A  3029               	movlw	41
 10642  0F4B                     u4857:
 10643  0F4B  0B89               	decfsz	9,f
 10644  0F4C  2F4B               	goto	u4857
 10645  0F4D  3200               	nop2
 10646  0F4E                     l4380:
 10647  0F4E  3030               	movlw	48
 10648  0F4F  318D  259B  318F   	fcall	_LCDsend
 10649  0F52                     l4382:
 10650                           
 10651                           ;main.c: 168: _delay((unsigned long)((100)*(1000000/4000000.0)));
 10652  0F52  3008               	movlw	8
 10653  0F53                     u4867:
 10654  0F53  0B89               	decfsz	9,f
 10655  0F54  2F53               	goto	u4867
 10656  0F55  0000               	nop
 10657                           
 10658                           ;main.c: 169: LCDsend(0x20);
 10659  0F56  3020               	movlw	32
 10660  0F57  318D  259B  318F   	fcall	_LCDsend
 10661                           
 10662                           ;main.c: 170: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
 10663  0F5A  3024               	movlw	36
 10664  0F5B  318D  259B  318F   	fcall	_LCDsend
 10665  0F5E                     l4384:
 10666  0F5E  3029               	movlw	41
 10667  0F5F                     u4877:
 10668  0F5F  0B89               	decfsz	9,f
 10669  0F60  2F5F               	goto	u4877
 10670  0F61  3200               	nop2
 10671  0F62                     l4386:
 10672  0F62  3020               	movlw	32
 10673  0F63  318D  259B  318F   	fcall	_LCDsend
 10674                           
 10675                           ;main.c: 171: _delay((unsigned long)((5)*(1000000/4000.0)));
 10676  0F66  30FA               	movlw	250
 10677  0F67                     u4887:
 10678  0F67  3200               	nop2
 10679  0F68  0B89               	decfsz	9,f
 10680  0F69  2F67               	goto	u4887
 10681  0F6A                     l4388:
 10682                           
 10683                           ;main.c: 173: LCDsend2x4(0x28, 0);
 10684  0F6A  0021               	movlb	1	; select bank1
 10685  0F6B  01AC               	clrf	LCDsend2x4@mode^(0+128)
 10686  0F6C  3028               	movlw	40
 10687  0F6D  3185  250C  318F   	fcall	_LCDsend2x4
 10688  0F70                     l4390:
 10689                           
 10690                           ;main.c: 174: LCDsend2x4(0x06, 0);
 10691  0F70  0021               	movlb	1	; select bank1
 10692  0F71  01AC               	clrf	LCDsend2x4@mode^(0+128)
 10693  0F72  3006               	movlw	6
 10694  0F73  3185  250C  318F   	fcall	_LCDsend2x4
 10695  0F76                     l4392:
 10696                           
 10697                           ;main.c: 175: LCDsend2x4(0x0f, 0);
 10698  0F76  0021               	movlb	1	; select bank1
 10699  0F77  01AC               	clrf	LCDsend2x4@mode^(0+128)
 10700  0F78  300F               	movlw	15
 10701  0F79  3185  250C  318F   	fcall	_LCDsend2x4
 10702  0F7C                     l4394:
 10703                           
 10704                           ;main.c: 176: LCDsend2x4(0x01, 0);
 10705  0F7C  0021               	movlb	1	; select bank1
 10706  0F7D  01AC               	clrf	LCDsend2x4@mode^(0+128)
 10707  0F7E  3001               	movlw	1
 10708  0F7F  3185  250C  318F   	fcall	_LCDsend2x4
 10709                           
 10710                           ;main.c: 177: _delay((unsigned long)((2)*(1000000/4000.0)));
 10711  0F82  30A6               	movlw	166
 10712  0F83                     u4897:
 10713  0F83  0B89               	decfsz	9,f
 10714  0F84  2F83               	goto	u4897
 10715  0F85  3200               	nop2
 10716  0F86                     l1059:
 10717  0F86  0008               	return
 10718  0F87                     __end_of_LCDinit:
 10719                           
 10720                           	psect	text24
 10721  050C                     __ptext24:	
 10722 ;; *************** function _LCDsend2x4 *****************
 10723 ;; Defined at:
 10724 ;;		line 134 in file "main.c"
 10725 ;; Parameters:    Size  Location     Type
 10726 ;;  c               1    wreg     unsigned char 
 10727 ;;  mode            1    2[BANK1 ] unsigned char 
 10728 ;; Auto vars:     Size  Location     Type
 10729 ;;  c               1    5[BANK1 ] unsigned char 
 10730 ;;  lc              1    7[BANK1 ] unsigned char 
 10731 ;;  hc              1    6[BANK1 ] unsigned char 
 10732 ;; Return value:  Size  Location     Type
 10733 ;;                  1    wreg      void 
 10734 ;; Registers used:
 10735 ;;		wreg, status,2, status,0, pclath, cstack
 10736 ;; Tracked objects:
 10737 ;;		On entry : 0/0
 10738 ;;		On exit  : 0/0
 10739 ;;		Unchanged: 0/0
 10740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10741 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10742 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10743 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10744 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10745 ;;Total ram usage:        6 bytes
 10746 ;; Hardware stack levels used:    1
 10747 ;; Hardware stack levels required when called:    8
 10748 ;; This function calls:
 10749 ;;		_WriteI2C
 10750 ;; This function is called by:
 10751 ;;		_LCDinit
 10752 ;; This function uses a non-reentrant model
 10753 ;;
 10754                           
 10755                           
 10756                           ;psect for function _LCDsend2x4
 10757  050C                     _LCDsend2x4:
 10758                           
 10759                           ;incstack = 0
 10760                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 10761                           ;LCDsend2x4@c stored from wreg
 10762  050C  0021               	movlb	1	; select bank1
 10763  050D  00AF               	movwf	LCDsend2x4@c^(0+128)
 10764  050E                     l4014:
 10765                           
 10766                           ;main.c: 136: unsigned char hc;;main.c: 137: unsigned char lc;;main.c: 139: hc = c & 0xf
      +                          0;
 10767  050E  082F               	movf	LCDsend2x4@c^(0+128),w
 10768  050F  39F0               	andlw	240
 10769  0510  00AD               	movwf	??_LCDsend2x4^(0+128)
 10770  0511  082D               	movf	??_LCDsend2x4^(0+128),w
 10771  0512  00B0               	movwf	LCDsend2x4@hc^(0+128)
 10772  0513                     l4016:
 10773                           
 10774                           ;main.c: 140: lc = (c << 4) & 0xf0;
 10775  0513  082F               	movf	LCDsend2x4@c^(0+128),w
 10776  0514  00AD               	movwf	??_LCDsend2x4^(0+128)
 10777  0515  3003               	movlw	3
 10778  0516                     u3475:
 10779  0516  35AD               	lslf	??_LCDsend2x4^(0+128),f
 10780  0517  3EFF               	addlw	-1
 10781  0518  1D03               	skipz
 10782  0519  2D16               	goto	u3475
 10783  051A  352D               	lslf	??_LCDsend2x4^(0+128),w
 10784  051B  39F0               	andlw	240
 10785  051C  00AE               	movwf	(??_LCDsend2x4+1)^(0+128)
 10786  051D  082E               	movf	(??_LCDsend2x4+1)^(0+128),w
 10787  051E  00B1               	movwf	LCDsend2x4@lc^(0+128)
 10788  051F                     l4018:	
 10789                           ;main.c: 142: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10790                           
 10791  051F  0023               	movlb	3	; select bank3
 10792  0520  0C0F               	rrf	15,w	;volatile
 10793  0521  0C89               	rrf	9,f
 10794  0522  3901               	andlw	1
 10795  0523  0021               	movlb	1	; select bank1
 10796  0524  00AD               	movwf	??_LCDsend2x4^(0+128)
 10797  0525  0023               	movlb	3	; select bank3
 10798  0526  0811               	movf	17,w	;volatile
 10799  0527  391F               	andlw	31
 10800  0528  0021               	movlb	1	; select bank1
 10801  0529  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10802  052A  1D03               	btfss	3,2
 10803  052B  2D2D               	goto	u3481
 10804  052C  2D2E               	goto	u3480
 10805  052D                     u3481:
 10806  052D  2D1F               	goto	l4018
 10807  052E                     u3480:
 10808  052E                     l1025:
 10809                           
 10810                           ;main.c: 143: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 10811  052E  0023               	movlb	3	; select bank3
 10812  052F  1411               	bsf	17,0	;volatile
 10813  0530                     l1026:
 10814  0530  1811               	btfsc	17,0	;volatile
 10815  0531  2D33               	goto	u3491
 10816  0532  2D34               	goto	u3490
 10817  0533                     u3491:
 10818  0533  2D30               	goto	l1026
 10819  0534                     u3490:
 10820  0534                     l4020:
 10821  0534  0023               	movlb	3	; select bank3
 10822  0535  0C0F               	rrf	15,w	;volatile
 10823  0536  0C89               	rrf	9,f
 10824  0537  3901               	andlw	1
 10825  0538  0021               	movlb	1	; select bank1
 10826  0539  00AD               	movwf	??_LCDsend2x4^(0+128)
 10827  053A  0023               	movlb	3	; select bank3
 10828  053B  0811               	movf	17,w	;volatile
 10829  053C  391F               	andlw	31
 10830  053D  0021               	movlb	1	; select bank1
 10831  053E  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10832  053F  1D03               	btfss	3,2
 10833  0540  2D42               	goto	u3501
 10834  0541  2D43               	goto	u3500
 10835  0542                     u3501:
 10836  0542  2D34               	goto	l4020
 10837  0543                     u3500:
 10838  0543                     l4022:
 10839                           
 10840                           ;main.c: 144: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10841  0543  304E               	movlw	78
 10842  0544  318D  25EE  3185   	fcall	_WriteI2C
 10843  0547                     l4024:
 10844  0547  0023               	movlb	3	; select bank3
 10845  0548  0C0F               	rrf	15,w	;volatile
 10846  0549  0C89               	rrf	9,f
 10847  054A  3901               	andlw	1
 10848  054B  0021               	movlb	1	; select bank1
 10849  054C  00AD               	movwf	??_LCDsend2x4^(0+128)
 10850  054D  0023               	movlb	3	; select bank3
 10851  054E  0811               	movf	17,w	;volatile
 10852  054F  391F               	andlw	31
 10853  0550  0021               	movlb	1	; select bank1
 10854  0551  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10855  0552  1D03               	btfss	3,2
 10856  0553  2D55               	goto	u3511
 10857  0554  2D56               	goto	u3510
 10858  0555                     u3511:
 10859  0555  2D47               	goto	l4024
 10860  0556                     u3510:
 10861  0556                     l4026:
 10862                           
 10863                           ;main.c: 145: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10864  0556  0830               	movf	LCDsend2x4@hc^(0+128),w
 10865  0557  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 10866  0558  3808               	iorlw	8
 10867  0559  318D  25EE  3185   	fcall	_WriteI2C
 10868  055C                     l4028:
 10869  055C  0023               	movlb	3	; select bank3
 10870  055D  0C0F               	rrf	15,w	;volatile
 10871  055E  0C89               	rrf	9,f
 10872  055F  3901               	andlw	1
 10873  0560  0021               	movlb	1	; select bank1
 10874  0561  00AD               	movwf	??_LCDsend2x4^(0+128)
 10875  0562  0023               	movlb	3	; select bank3
 10876  0563  0811               	movf	17,w	;volatile
 10877  0564  391F               	andlw	31
 10878  0565  0021               	movlb	1	; select bank1
 10879  0566  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10880  0567  1D03               	btfss	3,2
 10881  0568  2D6A               	goto	u3521
 10882  0569  2D6B               	goto	u3520
 10883  056A                     u3521:
 10884  056A  2D5C               	goto	l4028
 10885  056B                     u3520:
 10886  056B                     l4030:
 10887                           
 10888                           ;main.c: 146: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 10889  056B  0830               	movf	LCDsend2x4@hc^(0+128),w
 10890  056C  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 10891  056D  380C               	iorlw	12
 10892  056E  318D  25EE  3185   	fcall	_WriteI2C
 10893  0571                     l4032:
 10894  0571  0023               	movlb	3	; select bank3
 10895  0572  0C0F               	rrf	15,w	;volatile
 10896  0573  0C89               	rrf	9,f
 10897  0574  3901               	andlw	1
 10898  0575  0021               	movlb	1	; select bank1
 10899  0576  00AD               	movwf	??_LCDsend2x4^(0+128)
 10900  0577  0023               	movlb	3	; select bank3
 10901  0578  0811               	movf	17,w	;volatile
 10902  0579  391F               	andlw	31
 10903  057A  0021               	movlb	1	; select bank1
 10904  057B  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10905  057C  1D03               	btfss	3,2
 10906  057D  2D7F               	goto	u3531
 10907  057E  2D80               	goto	u3530
 10908  057F                     u3531:
 10909  057F  2D71               	goto	l4032
 10910  0580                     u3530:
 10911  0580                     l1040:
 10912  0580                     l4034:	
 10913                           ;main.c: 147: _delay((unsigned long)((1)*(1000000/4000000.0)));
 10914                           
 10915                           
 10916                           ;main.c: 148: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10917  0580  0021               	movlb	1	; select bank1
 10918  0581  0830               	movf	LCDsend2x4@hc^(0+128),w
 10919  0582  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 10920  0583  3808               	iorlw	8
 10921  0584  318D  25EE  3185   	fcall	_WriteI2C
 10922  0587                     l4036:
 10923  0587  0023               	movlb	3	; select bank3
 10924  0588  0C0F               	rrf	15,w	;volatile
 10925  0589  0C89               	rrf	9,f
 10926  058A  3901               	andlw	1
 10927  058B  0021               	movlb	1	; select bank1
 10928  058C  00AD               	movwf	??_LCDsend2x4^(0+128)
 10929  058D  0023               	movlb	3	; select bank3
 10930  058E  0811               	movf	17,w	;volatile
 10931  058F  391F               	andlw	31
 10932  0590  0021               	movlb	1	; select bank1
 10933  0591  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10934  0592  1D03               	btfss	3,2
 10935  0593  2D95               	goto	u3541
 10936  0594  2D96               	goto	u3540
 10937  0595                     u3541:
 10938  0595  2D87               	goto	l4036
 10939  0596                     u3540:
 10940  0596                     l4038:
 10941                           
 10942                           ;main.c: 149: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10943  0596  0831               	movf	LCDsend2x4@lc^(0+128),w
 10944  0597  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 10945  0598  3808               	iorlw	8
 10946  0599  318D  25EE  3185   	fcall	_WriteI2C
 10947  059C                     l4040:
 10948  059C  0023               	movlb	3	; select bank3
 10949  059D  0C0F               	rrf	15,w	;volatile
 10950  059E  0C89               	rrf	9,f
 10951  059F  3901               	andlw	1
 10952  05A0  0021               	movlb	1	; select bank1
 10953  05A1  00AD               	movwf	??_LCDsend2x4^(0+128)
 10954  05A2  0023               	movlb	3	; select bank3
 10955  05A3  0811               	movf	17,w	;volatile
 10956  05A4  391F               	andlw	31
 10957  05A5  0021               	movlb	1	; select bank1
 10958  05A6  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10959  05A7  1D03               	btfss	3,2
 10960  05A8  2DAA               	goto	u3551
 10961  05A9  2DAB               	goto	u3550
 10962  05AA                     u3551:
 10963  05AA  2D9C               	goto	l4040
 10964  05AB                     u3550:
 10965  05AB                     l4042:
 10966                           
 10967                           ;main.c: 150: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 10968  05AB  0831               	movf	LCDsend2x4@lc^(0+128),w
 10969  05AC  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 10970  05AD  380C               	iorlw	12
 10971  05AE  318D  25EE  3185   	fcall	_WriteI2C
 10972  05B1                     l4044:
 10973  05B1  0023               	movlb	3	; select bank3
 10974  05B2  0C0F               	rrf	15,w	;volatile
 10975  05B3  0C89               	rrf	9,f
 10976  05B4  3901               	andlw	1
 10977  05B5  0021               	movlb	1	; select bank1
 10978  05B6  00AD               	movwf	??_LCDsend2x4^(0+128)
 10979  05B7  0023               	movlb	3	; select bank3
 10980  05B8  0811               	movf	17,w	;volatile
 10981  05B9  391F               	andlw	31
 10982  05BA  0021               	movlb	1	; select bank1
 10983  05BB  042D               	iorwf	??_LCDsend2x4^(0+128),w
 10984  05BC  1D03               	btfss	3,2
 10985  05BD  2DBF               	goto	u3561
 10986  05BE  2DC0               	goto	u3560
 10987  05BF                     u3561:
 10988  05BF  2DB1               	goto	l4044
 10989  05C0                     u3560:
 10990  05C0                     l1049:
 10991  05C0                     l4046:	
 10992                           ;main.c: 151: _delay((unsigned long)((1)*(1000000/4000000.0)));
 10993                           
 10994                           
 10995                           ;main.c: 152: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 10996  05C0  0021               	movlb	1	; select bank1
 10997  05C1  0831               	movf	LCDsend2x4@lc^(0+128),w
 10998  05C2  042C               	iorwf	LCDsend2x4@mode^(0+128),w
 10999  05C3  3808               	iorlw	8
 11000  05C4  318D  25EE  3185   	fcall	_WriteI2C
 11001  05C7                     l4048:
 11002  05C7  0023               	movlb	3	; select bank3
 11003  05C8  0C0F               	rrf	15,w	;volatile
 11004  05C9  0C89               	rrf	9,f
 11005  05CA  3901               	andlw	1
 11006  05CB  0021               	movlb	1	; select bank1
 11007  05CC  00AD               	movwf	??_LCDsend2x4^(0+128)
 11008  05CD  0023               	movlb	3	; select bank3
 11009  05CE  0811               	movf	17,w	;volatile
 11010  05CF  391F               	andlw	31
 11011  05D0  0021               	movlb	1	; select bank1
 11012  05D1  042D               	iorwf	??_LCDsend2x4^(0+128),w
 11013  05D2  1D03               	btfss	3,2
 11014  05D3  2DD5               	goto	u3571
 11015  05D4  2DD6               	goto	u3570
 11016  05D5                     u3571:
 11017  05D5  2DC7               	goto	l4048
 11018  05D6                     u3570:
 11019  05D6                     l1052:
 11020                           
 11021                           ;main.c: 153: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11022  05D6  0023               	movlb	3	; select bank3
 11023  05D7  1511               	bsf	17,2	;volatile
 11024  05D8                     l1053:
 11025  05D8  1911               	btfsc	17,2	;volatile
 11026  05D9  2DDB               	goto	u3581
 11027  05DA  2DDC               	goto	u3580
 11028  05DB                     u3581:
 11029  05DB  2DD8               	goto	l1053
 11030  05DC                     u3580:
 11031  05DC                     l4050:
 11032                           
 11033                           ;main.c: 154: _delay((unsigned long)((50)*(1000000/4000000.0)));
 11034  05DC  3004               	movlw	4
 11035  05DD                     u4907:
 11036  05DD  0B89               	decfsz	9,f
 11037  05DE  2DDD               	goto	u4907
 11038  05DF                     l1056:
 11039  05DF  0008               	return
 11040  05E0                     __end_of_LCDsend2x4:
 11041                           
 11042                           	psect	text25
 11043  0D9B                     __ptext25:	
 11044 ;; *************** function _LCDsend *****************
 11045 ;; Defined at:
 11046 ;;		line 95 in file "main.c"
 11047 ;; Parameters:    Size  Location     Type
 11048 ;;  c               1    wreg     unsigned char 
 11049 ;; Auto vars:     Size  Location     Type
 11050 ;;  c               1    3[BANK1 ] unsigned char 
 11051 ;; Return value:  Size  Location     Type
 11052 ;;                  1    wreg      void 
 11053 ;; Registers used:
 11054 ;;		wreg, status,2, status,0, pclath, cstack
 11055 ;; Tracked objects:
 11056 ;;		On entry : 0/0
 11057 ;;		On exit  : 0/0
 11058 ;;		Unchanged: 0/0
 11059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11061 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11062 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11063 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11064 ;;Total ram usage:        2 bytes
 11065 ;; Hardware stack levels used:    1
 11066 ;; Hardware stack levels required when called:    8
 11067 ;; This function calls:
 11068 ;;		_WriteI2C
 11069 ;; This function is called by:
 11070 ;;		_LCDinit
 11071 ;; This function uses a non-reentrant model
 11072 ;;
 11073                           
 11074                           
 11075                           ;psect for function _LCDsend
 11076  0D9B                     _LCDsend:
 11077                           
 11078                           ;incstack = 0
 11079                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 11080                           ;LCDsend@c stored from wreg
 11081  0D9B  0021               	movlb	1	; select bank1
 11082  0D9C  00AD               	movwf	LCDsend@c^(0+128)
 11083  0D9D                     l4000:
 11084  0D9D                     l4002:	
 11085                           ;main.c: 97: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11086                           
 11087  0D9D  0023               	movlb	3	; select bank3
 11088  0D9E  0C0F               	rrf	15,w	;volatile
 11089  0D9F  0C89               	rrf	9,f
 11090  0DA0  3901               	andlw	1
 11091  0DA1  0021               	movlb	1	; select bank1
 11092  0DA2  00AC               	movwf	??_LCDsend^(0+128)
 11093  0DA3  0023               	movlb	3	; select bank3
 11094  0DA4  0811               	movf	17,w	;volatile
 11095  0DA5  391F               	andlw	31
 11096  0DA6  0021               	movlb	1	; select bank1
 11097  0DA7  042C               	iorwf	??_LCDsend^(0+128),w
 11098  0DA8  1D03               	btfss	3,2
 11099  0DA9  2DAB               	goto	u3411
 11100  0DAA  2DAC               	goto	u3410
 11101  0DAB                     u3411:
 11102  0DAB  2D9D               	goto	l4002
 11103  0DAC                     u3410:
 11104  0DAC                     l923:
 11105                           
 11106                           ;main.c: 98: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 11107  0DAC  0023               	movlb	3	; select bank3
 11108  0DAD  1411               	bsf	17,0	;volatile
 11109  0DAE                     l924:
 11110  0DAE  1811               	btfsc	17,0	;volatile
 11111  0DAF  2DB1               	goto	u3421
 11112  0DB0  2DB2               	goto	u3420
 11113  0DB1                     u3421:
 11114  0DB1  2DAE               	goto	l924
 11115  0DB2                     u3420:
 11116  0DB2                     l4004:
 11117  0DB2  0023               	movlb	3	; select bank3
 11118  0DB3  0C0F               	rrf	15,w	;volatile
 11119  0DB4  0C89               	rrf	9,f
 11120  0DB5  3901               	andlw	1
 11121  0DB6  0021               	movlb	1	; select bank1
 11122  0DB7  00AC               	movwf	??_LCDsend^(0+128)
 11123  0DB8  0023               	movlb	3	; select bank3
 11124  0DB9  0811               	movf	17,w	;volatile
 11125  0DBA  391F               	andlw	31
 11126  0DBB  0021               	movlb	1	; select bank1
 11127  0DBC  042C               	iorwf	??_LCDsend^(0+128),w
 11128  0DBD  1D03               	btfss	3,2
 11129  0DBE  2DC0               	goto	u3431
 11130  0DBF  2DC1               	goto	u3430
 11131  0DC0                     u3431:
 11132  0DC0  2DB2               	goto	l4004
 11133  0DC1                     u3430:
 11134  0DC1                     l4006:
 11135                           
 11136                           ;main.c: 99: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11137  0DC1  304E               	movlw	78
 11138  0DC2  318D  25EE  318D   	fcall	_WriteI2C
 11139  0DC5                     l4008:
 11140  0DC5  0023               	movlb	3	; select bank3
 11141  0DC6  0C0F               	rrf	15,w	;volatile
 11142  0DC7  0C89               	rrf	9,f
 11143  0DC8  3901               	andlw	1
 11144  0DC9  0021               	movlb	1	; select bank1
 11145  0DCA  00AC               	movwf	??_LCDsend^(0+128)
 11146  0DCB  0023               	movlb	3	; select bank3
 11147  0DCC  0811               	movf	17,w	;volatile
 11148  0DCD  391F               	andlw	31
 11149  0DCE  0021               	movlb	1	; select bank1
 11150  0DCF  042C               	iorwf	??_LCDsend^(0+128),w
 11151  0DD0  1D03               	btfss	3,2
 11152  0DD1  2DD3               	goto	u3441
 11153  0DD2  2DD4               	goto	u3440
 11154  0DD3                     u3441:
 11155  0DD3  2DC5               	goto	l4008
 11156  0DD4                     u3440:
 11157  0DD4                     l4010:
 11158                           
 11159                           ;main.c: 100: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11160  0DD4  082D               	movf	LCDsend@c^(0+128),w
 11161  0DD5  318D  25EE  318D   	fcall	_WriteI2C
 11162  0DD8                     l4012:
 11163  0DD8  0023               	movlb	3	; select bank3
 11164  0DD9  0C0F               	rrf	15,w	;volatile
 11165  0DDA  0C89               	rrf	9,f
 11166  0DDB  3901               	andlw	1
 11167  0DDC  0021               	movlb	1	; select bank1
 11168  0DDD  00AC               	movwf	??_LCDsend^(0+128)
 11169  0DDE  0023               	movlb	3	; select bank3
 11170  0DDF  0811               	movf	17,w	;volatile
 11171  0DE0  391F               	andlw	31
 11172  0DE1  0021               	movlb	1	; select bank1
 11173  0DE2  042C               	iorwf	??_LCDsend^(0+128),w
 11174  0DE3  1D03               	btfss	3,2
 11175  0DE4  2DE6               	goto	u3451
 11176  0DE5  2DE7               	goto	u3450
 11177  0DE6                     u3451:
 11178  0DE6  2DD8               	goto	l4012
 11179  0DE7                     u3450:
 11180  0DE7                     l935:
 11181                           
 11182                           ;main.c: 101: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11183  0DE7  0023               	movlb	3	; select bank3
 11184  0DE8  1511               	bsf	17,2	;volatile
 11185  0DE9                     l936:
 11186  0DE9  1911               	btfsc	17,2	;volatile
 11187  0DEA  2DEC               	goto	u3461
 11188  0DEB  2DED               	goto	u3460
 11189  0DEC                     u3461:
 11190  0DEC  2DE9               	goto	l936
 11191  0DED                     u3460:
 11192  0DED                     l939:
 11193  0DED  0008               	return
 11194  0DEE                     __end_of_LCDsend:
 11195                           
 11196                           	psect	text26
 11197  0DEE                     __ptext26:	
 11198 ;; *************** function _WriteI2C *****************
 11199 ;; Defined at:
 11200 ;;		line 47 in file "I2C/i2c.c"
 11201 ;; Parameters:    Size  Location     Type
 11202 ;;  data_out        1    wreg     unsigned char 
 11203 ;; Auto vars:     Size  Location     Type
 11204 ;;  data_out        1    1[BANK1 ] unsigned char 
 11205 ;; Return value:  Size  Location     Type
 11206 ;;                  1    wreg      char 
 11207 ;; Registers used:
 11208 ;;		wreg, status,2, status,0
 11209 ;; Tracked objects:
 11210 ;;		On entry : 0/0
 11211 ;;		On exit  : 0/0
 11212 ;;		Unchanged: 0/0
 11213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11215 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11216 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11217 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11218 ;;Total ram usage:        2 bytes
 11219 ;; Hardware stack levels used:    1
 11220 ;; Hardware stack levels required when called:    7
 11221 ;; This function calls:
 11222 ;;		Nothing
 11223 ;; This function is called by:
 11224 ;;		_LCDsend
 11225 ;;		_LCDsend2x4
 11226 ;;		_LCDrecv
 11227 ;; This function uses a non-reentrant model
 11228 ;;
 11229                           
 11230                           
 11231                           ;psect for function _WriteI2C
 11232  0DEE                     _WriteI2C:
 11233                           
 11234                           ;incstack = 0
 11235                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 11236                           ;WriteI2C@data_out stored from wreg
 11237  0DEE  0021               	movlb	1	; select bank1
 11238  0DEF  00AB               	movwf	WriteI2C@data_out^(0+128)
 11239  0DF0                     l3586:
 11240                           
 11241                           ;i2c.c: 49: SSP1BUF = data_out;
 11242  0DF0  082B               	movf	WriteI2C@data_out^(0+128),w
 11243  0DF1  0023               	movlb	3	; select bank3
 11244  0DF2  008C               	movwf	12	;volatile
 11245  0DF3                     l3588:
 11246                           
 11247                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 11248  0DF3  1F90               	btfss	16,7	;volatile
 11249  0DF4  2DF6               	goto	u2811
 11250  0DF5  2DF7               	goto	u2810
 11251  0DF6                     u2811:
 11252  0DF6  2DF8               	goto	l3594
 11253  0DF7                     u2810:
 11254  0DF7  2E47               	goto	l30
 11255  0DF8                     l3594:
 11256                           
 11257                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 11258  0DF8  300F               	movlw	15
 11259  0DF9  0510               	andwf	16,w	;volatile
 11260  0DFA  0021               	movlb	1	; select bank1
 11261  0DFB  00AA               	movwf	??_WriteI2C^(0+128)
 11262  0DFC  3008               	movlw	8
 11263  0DFD  062A               	xorwf	??_WriteI2C^(0+128),w
 11264  0DFE  1903               	btfsc	3,2
 11265  0DFF  2E01               	goto	u2821
 11266  0E00  2E02               	goto	u2820
 11267  0E01                     u2821:
 11268  0E01  2E1B               	goto	l3606
 11269  0E02                     u2820:
 11270  0E02                     l3596:
 11271  0E02  300F               	movlw	15
 11272  0E03  0023               	movlb	3	; select bank3
 11273  0E04  0510               	andwf	16,w	;volatile
 11274  0E05  0021               	movlb	1	; select bank1
 11275  0E06  00AA               	movwf	??_WriteI2C^(0+128)
 11276  0E07  300B               	movlw	11
 11277  0E08  062A               	xorwf	??_WriteI2C^(0+128),w
 11278  0E09  1903               	btfsc	3,2
 11279  0E0A  2E0C               	goto	u2831
 11280  0E0B  2E0D               	goto	u2830
 11281  0E0C                     u2831:
 11282  0E0C  2E1B               	goto	l3606
 11283  0E0D                     u2830:
 11284  0E0D                     l3598:
 11285                           
 11286                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 11287  0E0D  0023               	movlb	3	; select bank3
 11288  0E0E  1610               	bsf	16,4	;volatile
 11289  0E0F                     l33:	
 11290                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 11291                           
 11292  0E0F  002E               	movlb	14	; select bank14
 11293  0E10  1C0F               	btfss	15,0	;volatile
 11294  0E11  2E13               	goto	u2841
 11295  0E12  2E14               	goto	u2840
 11296  0E13                     u2841:
 11297  0E13  2E0F               	goto	l33
 11298  0E14                     u2840:
 11299  0E14                     l35:
 11300                           
 11301                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 11302  0E14  0023               	movlb	3	; select bank3
 11303  0E15  190F               	btfsc	15,2	;volatile
 11304  0E16  2E18               	goto	u2851
 11305  0E17  2E19               	goto	u2850
 11306  0E18                     u2851:
 11307  0E18  2E47               	goto	l30
 11308  0E19                     u2850:
 11309  0E19                     l3600:
 11310  0E19  080F               	movf	15,w	;volatile
 11311  0E1A  2E47               	goto	l30
 11312  0E1B                     l3606:
 11313                           
 11314                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 11315  0E1B  300F               	movlw	15
 11316  0E1C  0023               	movlb	3	; select bank3
 11317  0E1D  0510               	andwf	16,w	;volatile
 11318  0E1E  0021               	movlb	1	; select bank1
 11319  0E1F  00AA               	movwf	??_WriteI2C^(0+128)
 11320  0E20  3008               	movlw	8
 11321  0E21  062A               	xorwf	??_WriteI2C^(0+128),w
 11322  0E22  1903               	btfsc	3,2
 11323  0E23  2E25               	goto	u2861
 11324  0E24  2E26               	goto	u2860
 11325  0E25                     u2861:
 11326  0E25  2E31               	goto	l42
 11327  0E26                     u2860:
 11328  0E26                     l3608:
 11329  0E26  300F               	movlw	15
 11330  0E27  0023               	movlb	3	; select bank3
 11331  0E28  0510               	andwf	16,w	;volatile
 11332  0E29  0021               	movlb	1	; select bank1
 11333  0E2A  00AA               	movwf	??_WriteI2C^(0+128)
 11334  0E2B  300B               	movlw	11
 11335  0E2C  062A               	xorwf	??_WriteI2C^(0+128),w
 11336  0E2D  1D03               	btfss	3,2
 11337  0E2E  2E30               	goto	u2871
 11338  0E2F  2E31               	goto	u2870
 11339  0E30                     u2871:
 11340  0E30  2E47               	goto	l30
 11341  0E31                     u2870:
 11342  0E31                     l42:
 11343  0E31  0023               	movlb	3	; select bank3
 11344  0E32  180F               	btfsc	15,0	;volatile
 11345  0E33  2E35               	goto	u2881
 11346  0E34  2E36               	goto	u2880
 11347  0E35                     u2881:
 11348  0E35  2E31               	goto	l42
 11349  0E36                     u2880:
 11350  0E36                     l3610:
 11351  0E36  0023               	movlb	3	; select bank3
 11352  0E37  0C0F               	rrf	15,w	;volatile
 11353  0E38  0C89               	rrf	9,f
 11354  0E39  3901               	andlw	1
 11355  0E3A  0021               	movlb	1	; select bank1
 11356  0E3B  00AA               	movwf	??_WriteI2C^(0+128)
 11357  0E3C  0023               	movlb	3	; select bank3
 11358  0E3D  0811               	movf	17,w	;volatile
 11359  0E3E  391F               	andlw	31
 11360  0E3F  0021               	movlb	1	; select bank1
 11361  0E40  042A               	iorwf	??_WriteI2C^(0+128),w
 11362  0E41  1D03               	btfss	3,2
 11363  0E42  2E44               	goto	u2891
 11364  0E43  2E45               	goto	u2890
 11365  0E44                     u2891:
 11366  0E44  2E36               	goto	l3610
 11367  0E45                     u2890:
 11368  0E45                     l47:
 11369                           
 11370                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 11371  0E45  0023               	movlb	3	; select bank3
 11372  0E46  0811               	movf	17,w	;volatile
 11373  0E47                     l30:
 11374  0E47  0008               	return
 11375  0E48                     __end_of_WriteI2C:
 11376                           
 11377                           	psect	intentry
 11378  0004                     __pintentry:	
 11379 ;; *************** function _INTERRUPT_InterruptManager *****************
 11380 ;; Defined at:
 11381 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11382 ;; Parameters:    Size  Location     Type
 11383 ;;		None
 11384 ;; Auto vars:     Size  Location     Type
 11385 ;;		None
 11386 ;; Return value:  Size  Location     Type
 11387 ;;                  1    wreg      void 
 11388 ;; Registers used:
 11389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11390 ;; Tracked objects:
 11391 ;;		On entry : 0/0
 11392 ;;		On exit  : 0/0
 11393 ;;		Unchanged: 0/0
 11394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11399 ;;Total ram usage:        0 bytes
 11400 ;; Hardware stack levels used:    1
 11401 ;; Hardware stack levels required when called:    6
 11402 ;; This function calls:
 11403 ;;		_TMR1_ISR
 11404 ;;		_TMR3_ISR
 11405 ;;		_TMR5_ISR
 11406 ;; This function is called by:
 11407 ;;		Interrupt level 1
 11408 ;; This function uses a non-reentrant model
 11409 ;;
 11410                           
 11411  0004                     _INTERRUPT_InterruptManager:
 11412                           
 11413                           ;incstack = 0
 11414  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11415                           
 11416                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11417  0005  3180               	pagesel	$
 11418  0006                     i1l4492:
 11419                           
 11420                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
 11421  0006  1F0B               	btfss	11,6	;volatile
 11422  0007  2809               	goto	u455_21
 11423  0008  280A               	goto	u455_20
 11424  0009                     u455_21:
 11425  0009  283E               	goto	i1l356
 11426  000A                     u455_20:
 11427  000A                     i1l4494:
 11428                           
 11429                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE4bits.TMR5IE == 1 && PIR4bits
      +                          .TMR5IF == 1)
 11430  000A  002E               	movlb	14	; select bank14
 11431  000B  1E1A               	btfss	26,4	;volatile
 11432  000C  280E               	goto	u456_21
 11433  000D  280F               	goto	u456_20
 11434  000E                     u456_21:
 11435  000E  2817               	goto	i1l345
 11436  000F                     u456_20:
 11437  000F                     i1l4496:
 11438  000F  1E10               	btfss	16,4	;volatile
 11439  0010  2812               	goto	u457_21
 11440  0011  2813               	goto	u457_20
 11441  0012                     u457_21:
 11442  0012  2817               	goto	i1l345
 11443  0013                     u457_20:
 11444  0013                     i1l4498:
 11445                           
 11446                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: TMR5_ISR();
 11447  0013  318B  2352  3180   	fcall	_TMR5_ISR
 11448                           
 11449                           ;interrupt_manager.c: 60: }
 11450  0016  283E               	goto	i1l356
 11451  0017                     i1l345:
 11452                           
 11453                           ;interrupt_manager.c: 61: else if(PIE4bits.TMR3IE == 1 && PIR4bits.TMR3IF == 1)
 11454  0017  1D1A               	btfss	26,2	;volatile
 11455  0018  281A               	goto	u458_21
 11456  0019  281B               	goto	u458_20
 11457  001A                     u458_21:
 11458  001A  2823               	goto	i1l347
 11459  001B                     u458_20:
 11460  001B                     i1l4500:
 11461  001B  1D10               	btfss	16,2	;volatile
 11462  001C  281E               	goto	u459_21
 11463  001D  281F               	goto	u459_20
 11464  001E                     u459_21:
 11465  001E  2823               	goto	i1l347
 11466  001F                     u459_20:
 11467  001F                     i1l4502:
 11468                           
 11469                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR3_ISR();
 11470  001F  318B  233B  3180   	fcall	_TMR3_ISR
 11471                           
 11472                           ;interrupt_manager.c: 64: }
 11473  0022  283E               	goto	i1l356
 11474  0023                     i1l347:
 11475                           
 11476                           ;interrupt_manager.c: 65: else if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 11477  0023  1C1A               	btfss	26,0	;volatile
 11478  0024  2826               	goto	u460_21
 11479  0025  2827               	goto	u460_20
 11480  0026                     u460_21:
 11481  0026  282F               	goto	i1l349
 11482  0027                     u460_20:
 11483  0027                     i1l4504:
 11484  0027  1C10               	btfss	16,0	;volatile
 11485  0028  282A               	goto	u461_21
 11486  0029  282B               	goto	u461_20
 11487  002A                     u461_21:
 11488  002A  282F               	goto	i1l349
 11489  002B                     u461_20:
 11490  002B                     i1l4506:
 11491                           
 11492                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: TMR1_ISR();
 11493  002B  318B  2324  3180   	fcall	_TMR1_ISR
 11494                           
 11495                           ;interrupt_manager.c: 68: }
 11496  002E  283E               	goto	i1l356
 11497  002F                     i1l349:
 11498                           
 11499                           ;interrupt_manager.c: 69: else if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 11500  002F  1C99               	btfss	25,1	;volatile
 11501  0030  2832               	goto	u462_21
 11502  0031  2833               	goto	u462_20
 11503  0032                     u462_21:
 11504  0032  2838               	goto	i1l351
 11505  0033                     u462_20:
 11506  0033                     i1l4508:
 11507                           
 11508                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: i2c1_driver_busCollisionISR();
 11509  0033  1C8F               	btfss	15,1	;volatile
 11510  0034  2836               	goto	u463_21
 11511  0035  2837               	goto	u463_20
 11512  0036                     u463_21:
 11513  0036  2838               	goto	i1l351
 11514  0037                     u463_20:
 11515  0037  283E               	goto	i1l356
 11516  0038                     i1l351:
 11517                           
 11518                           ;interrupt_manager.c: 73: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 11519  0038  1C19               	btfss	25,0	;volatile
 11520  0039  283B               	goto	u464_21
 11521  003A  283C               	goto	u464_20
 11522  003B                     u464_21:
 11523  003B  283E               	goto	i1l350
 11524  003C                     u464_20:
 11525  003C                     i1l4512:
 11526                           
 11527                           ;interrupt_manager.c: 74: {;interrupt_manager.c: 75: i2c1_driver_i2cISR();
 11528  003C  080F               	movf	15,w	;volatile
 11529  003D  283E               	goto	i1l356
 11530  003E                     i1l350:
 11531  003E                     i1l356:
 11532  003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11533  003F  0009               	retfie
 11534  0040                     __end_of_INTERRUPT_InterruptManager:
 11535                           
 11536                           	psect	text28
 11537  0B52                     __ptext28:	
 11538 ;; *************** function _TMR5_ISR *****************
 11539 ;; Defined at:
 11540 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 11541 ;; Parameters:    Size  Location     Type
 11542 ;;		None
 11543 ;; Auto vars:     Size  Location     Type
 11544 ;;		None
 11545 ;; Return value:  Size  Location     Type
 11546 ;;                  1    wreg      void 
 11547 ;; Registers used:
 11548 ;;		wreg, status,2, status,0, pclath, cstack
 11549 ;; Tracked objects:
 11550 ;;		On entry : 0/0
 11551 ;;		On exit  : 0/0
 11552 ;;		Unchanged: 0/0
 11553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11558 ;;Total ram usage:        0 bytes
 11559 ;; Hardware stack levels used:    1
 11560 ;; Hardware stack levels required when called:    3
 11561 ;; This function calls:
 11562 ;;		Absolute function
 11563 ;;		_TMR5_DefaultInterruptHandler
 11564 ;;		_TMR5_WriteTimer
 11565 ;;		_monitoring_ISR
 11566 ;; This function is called by:
 11567 ;;		_INTERRUPT_InterruptManager
 11568 ;; This function uses a non-reentrant model
 11569 ;;
 11570                           
 11571                           
 11572                           ;psect for function _TMR5_ISR
 11573  0B52                     _TMR5_ISR:
 11574  0B52                     i1l4268:	
 11575                           ;incstack = 0
 11576                           ; Regs used in _TMR5_ISR: [wreg+status,2+status,0+pclath+cstack]
 11577                           
 11578                           
 11579                           ;tmr5.c: 169: PIR4bits.TMR5IF = 0;
 11580  0B52  002E               	movlb	14	; select bank14
 11581  0B53  1210               	bcf	16,4	;volatile
 11582  0B54                     i1l4270:
 11583                           
 11584                           ;tmr5.c: 170: TMR5_WriteTimer(timer5ReloadVal);
 11585  0B54  0021               	movlb	1	; select bank1
 11586  0B55  0823               	movf	(_timer5ReloadVal+1)^(0+128),w	;volatile
 11587  0B56  00F1               	movwf	TMR5_WriteTimer@timerVal+1
 11588  0B57  0822               	movf	_timer5ReloadVal^(0+128),w	;volatile
 11589  0B58  00F0               	movwf	TMR5_WriteTimer@timerVal
 11590  0B59  318A  22C5  318B   	fcall	_TMR5_WriteTimer
 11591  0B5C                     i1l4272:
 11592                           
 11593                           ;tmr5.c: 172: if(TMR5_InterruptHandler)
 11594  0B5C  0021               	movlb	1	; select bank1
 11595  0B5D  0820               	movf	_TMR5_InterruptHandler^(0+128),w
 11596  0B5E  0421               	iorwf	(_TMR5_InterruptHandler+1)^(0+128),w
 11597  0B5F  1903               	btfsc	3,2
 11598  0B60  2B62               	goto	u401_21
 11599  0B61  2B63               	goto	u401_20
 11600  0B62                     u401_21:
 11601  0B62  2B68               	goto	i1l702
 11602  0B63                     u401_20:
 11603  0B63                     i1l4274:
 11604                           
 11605                           ;tmr5.c: 173: {;tmr5.c: 174: TMR5_InterruptHandler();
 11606  0B63  0821               	movf	(_TMR5_InterruptHandler+1)^(0+128),w
 11607  0B64  008A               	movwf	10
 11608  0B65  0820               	movf	_TMR5_InterruptHandler^(0+128),w
 11609  0B66  000A               	callw
 11610  0B67  318B               	pagesel	$
 11611  0B68                     i1l702:
 11612  0B68  0008               	return
 11613  0B69                     __end_of_TMR5_ISR:
 11614                           
 11615                           	psect	text29
 11616  0003                     __ptext29:	
 11617 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 11618 ;; Defined at:
 11619 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 11620 ;; Parameters:    Size  Location     Type
 11621 ;;		None
 11622 ;; Auto vars:     Size  Location     Type
 11623 ;;		None
 11624 ;; Return value:  Size  Location     Type
 11625 ;;                  1    wreg      void 
 11626 ;; Registers used:
 11627 ;;		None
 11628 ;; Tracked objects:
 11629 ;;		On entry : 0/0
 11630 ;;		On exit  : 0/0
 11631 ;;		Unchanged: 0/0
 11632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11637 ;;Total ram usage:        0 bytes
 11638 ;; Hardware stack levels used:    1
 11639 ;; This function calls:
 11640 ;;		Nothing
 11641 ;; This function is called by:
 11642 ;;		_TMR5_Initialize
 11643 ;;		_TMR5_ISR
 11644 ;; This function uses a non-reentrant model
 11645 ;;
 11646                           
 11647                           
 11648                           ;psect for function _TMR5_DefaultInterruptHandler
 11649  0003                     _TMR5_DefaultInterruptHandler:
 11650  0003                     i1l708:	
 11651                           ;incstack = 0
 11652                           ; Regs used in _TMR5_DefaultInterruptHandler: []
 11653                           
 11654  0003  0008               	return
 11655  0004                     __end_of_TMR5_DefaultInterruptHandler:
 11656                           
 11657                           	psect	text30
 11658  0E48                     __ptext30:	
 11659 ;; *************** function _monitoring_ISR *****************
 11660 ;; Defined at:
 11661 ;;		line 429 in file "main.c"
 11662 ;; Parameters:    Size  Location     Type
 11663 ;;		None
 11664 ;; Auto vars:     Size  Location     Type
 11665 ;;		None
 11666 ;; Return value:  Size  Location     Type
 11667 ;;                  1    wreg      void 
 11668 ;; Registers used:
 11669 ;;		wreg, status,2, status,0, pclath, cstack
 11670 ;; Tracked objects:
 11671 ;;		On entry : 0/0
 11672 ;;		On exit  : 0/0
 11673 ;;		Unchanged: 0/0
 11674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11677 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11678 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11679 ;;Total ram usage:        3 bytes
 11680 ;; Hardware stack levels used:    1
 11681 ;; Hardware stack levels required when called:    2
 11682 ;; This function calls:
 11683 ;;		_ADCC_GetSingleConversion
 11684 ;;		_tsttc
 11685 ;; This function is called by:
 11686 ;;		_main
 11687 ;;		_TMR5_ISR
 11688 ;; This function uses a non-reentrant model
 11689 ;;
 11690                           
 11691                           
 11692                           ;psect for function _monitoring_ISR
 11693  0E48                     _monitoring_ISR:
 11694  0E48                     i1l4198:	
 11695                           ;incstack = 0
 11696                           ; Regs used in _monitoring_ISR: [wreg+status,2+status,0+pclath+cstack]
 11697                           
 11698                           
 11699                           ;main.c: 430: temp = tsttc();
 11700  0E48  3183  23FF  318E   	fcall	_tsttc
 11701  0E4B  00F4               	movwf	??_monitoring_ISR
 11702  0E4C  0874               	movf	??_monitoring_ISR,w
 11703  0E4D  0020               	movlb	0	; select bank0
 11704  0E4E  00DF               	movwf	_temp
 11705                           
 11706                           ;main.c: 432: lumLevel = ADCC_GetSingleConversion(channel_ANA0) >> 13;
 11707  0E4F  3000               	movlw	0
 11708  0E50  318A  22E8  318E   	fcall	_ADCC_GetSingleConversion
 11709  0E53  0870               	movf	?_ADCC_GetSingleConversion,w
 11710  0E54  00F4               	movwf	??_monitoring_ISR
 11711  0E55  0871               	movf	?_ADCC_GetSingleConversion+1,w
 11712  0E56  00F5               	movwf	??_monitoring_ISR+1
 11713  0E57  300D               	movlw	13
 11714  0E58                     u392_25:
 11715  0E58  36F5               	lsrf	??_monitoring_ISR+1,f
 11716  0E59  0CF4               	rrf	??_monitoring_ISR,f
 11717  0E5A  0B89               	decfsz	9,f
 11718  0E5B  2E58               	goto	u392_25
 11719  0E5C  0874               	movf	??_monitoring_ISR,w
 11720  0E5D  00F6               	movwf	??_monitoring_ISR+2
 11721  0E5E  0876               	movf	??_monitoring_ISR+2,w
 11722  0E5F  0020               	movlb	0	; select bank0
 11723  0E60  00DE               	movwf	_lumLevel
 11724  0E61                     i1l4200:
 11725                           
 11726                           ;main.c: 434: if(alarmsEnable){
 11727  0E61  086D               	movf	_alarmsEnable,w
 11728  0E62  1903               	btfsc	3,2
 11729  0E63  2E65               	goto	u393_21
 11730  0E64  2E66               	goto	u393_20
 11731  0E65                     u393_21:
 11732  0E65  2EA2               	goto	i1l1187
 11733  0E66                     u393_20:
 11734  0E66                     i1l4202:
 11735                           
 11736                           ;main.c: 436: if((lumAlarm.alarmLum > lumLevel) && (editingLumAlarm == 0)){
 11737  0E66  0867               	movf	_lumAlarm,w
 11738  0E67  025E               	subwf	_lumLevel,w
 11739  0E68  1803               	skipnc
 11740  0E69  2E6B               	goto	u394_21
 11741  0E6A  2E6C               	goto	u394_20
 11742  0E6B                     u394_21:
 11743  0E6B  2E82               	goto	i1l4216
 11744  0E6C                     u394_20:
 11745  0E6C                     i1l4204:
 11746  0E6C  085C               	movf	_editingLumAlarm,w
 11747  0E6D  1D03               	btfss	3,2
 11748  0E6E  2E70               	goto	u395_21
 11749  0E6F  2E71               	goto	u395_20
 11750  0E70                     u395_21:
 11751  0E70  2E82               	goto	i1l4216
 11752  0E71                     u395_20:
 11753  0E71                     i1l4206:
 11754                           
 11755                           ;main.c: 437: if(!lumAlarm.triggered){
 11756  0E71  0869               	movf	_lumAlarm+2,w
 11757  0E72  1D03               	btfss	3,2
 11758  0E73  2E75               	goto	u396_21
 11759  0E74  2E76               	goto	u396_20
 11760  0E75                     u396_21:
 11761  0E75  2E7B               	goto	i1l4210
 11762  0E76                     u396_20:
 11763  0E76                     i1l4208:
 11764                           
 11765                           ;main.c: 438: alarmPWMStart.h = -1;
 11766  0E76  30FF               	movlw	255
 11767  0E77  0021               	movlb	1	; select bank1
 11768  0E78  00BA               	movwf	_alarmPWMStart^(0+128)
 11769  0E79  30FF               	movlw	255
 11770  0E7A  00BB               	movwf	(_alarmPWMStart^(0+128)+1)
 11771  0E7B                     i1l4210:
 11772                           
 11773                           ;main.c: 439: };main.c: 440: lumAlarm.triggered = 1;
 11774  0E7B  0020               	movlb	0	; select bank0
 11775  0E7C  01E9               	clrf	_lumAlarm+2
 11776  0E7D  0AE9               	incf	_lumAlarm+2,f
 11777  0E7E                     i1l4212:
 11778                           
 11779                           ;main.c: 442: lumAlarm.trigger = 1;
 11780  0E7E  01E8               	clrf	_lumAlarm+1
 11781  0E7F  0AE8               	incf	_lumAlarm+1,f
 11782  0E80                     i1l4214:
 11783  0E80  1616               	bsf	22,4	;volatile
 11784  0E81  2E84               	goto	i1l4220
 11785  0E82                     i1l4216:
 11786                           
 11787                           ;main.c: 445: lumAlarm.triggered = 0;
 11788  0E82  01E9               	clrf	_lumAlarm+2
 11789  0E83                     i1l4218:
 11790  0E83  1216               	bcf	22,4	;volatile
 11791  0E84                     i1l4220:
 11792                           
 11793                           ;main.c: 447: };main.c: 450: if((tempAlarm.alarmTemp < temp) && (editingTempAlarm == 0))
      +                          {
 11794  0E84  085F               	movf	_temp,w
 11795  0E85  026A               	subwf	_tempAlarm,w
 11796  0E86  1803               	skipnc
 11797  0E87  2E89               	goto	u397_21
 11798  0E88  2E8A               	goto	u397_20
 11799  0E89                     u397_21:
 11800  0E89  2EA0               	goto	i1l4234
 11801  0E8A                     u397_20:
 11802  0E8A                     i1l4222:
 11803  0E8A  085D               	movf	_editingTempAlarm,w
 11804  0E8B  1D03               	btfss	3,2
 11805  0E8C  2E8E               	goto	u398_21
 11806  0E8D  2E8F               	goto	u398_20
 11807  0E8E                     u398_21:
 11808  0E8E  2EA0               	goto	i1l4234
 11809  0E8F                     u398_20:
 11810  0E8F                     i1l4224:
 11811                           
 11812                           ;main.c: 451: if(!tempAlarm.triggered){
 11813  0E8F  086C               	movf	_tempAlarm+2,w
 11814  0E90  1D03               	btfss	3,2
 11815  0E91  2E93               	goto	u399_21
 11816  0E92  2E94               	goto	u399_20
 11817  0E93                     u399_21:
 11818  0E93  2E99               	goto	i1l4228
 11819  0E94                     u399_20:
 11820  0E94                     i1l4226:
 11821                           
 11822                           ;main.c: 452: alarmPWMStart.h = -1;
 11823  0E94  30FF               	movlw	255
 11824  0E95  0021               	movlb	1	; select bank1
 11825  0E96  00BA               	movwf	_alarmPWMStart^(0+128)
 11826  0E97  30FF               	movlw	255
 11827  0E98  00BB               	movwf	(_alarmPWMStart^(0+128)+1)
 11828  0E99                     i1l4228:
 11829                           
 11830                           ;main.c: 453: };main.c: 455: tempAlarm.triggered = 1;
 11831  0E99  0020               	movlb	0	; select bank0
 11832  0E9A  01EC               	clrf	_tempAlarm+2
 11833  0E9B  0AEC               	incf	_tempAlarm+2,f
 11834  0E9C                     i1l4230:
 11835                           
 11836                           ;main.c: 457: tempAlarm.trigger = 1;
 11837  0E9C  01EB               	clrf	_tempAlarm+1
 11838  0E9D  0AEB               	incf	_tempAlarm+1,f
 11839  0E9E                     i1l4232:
 11840  0E9E  1696               	bsf	22,5	;volatile
 11841  0E9F  2EA2               	goto	i1l1187
 11842  0EA0                     i1l4234:
 11843                           
 11844                           ;main.c: 461: tempAlarm.triggered = 0;
 11845  0EA0  01EC               	clrf	_tempAlarm+2
 11846  0EA1                     i1l4236:
 11847  0EA1  1296               	bcf	22,5	;volatile
 11848  0EA2                     i1l1187:
 11849  0EA2  0008               	return
 11850  0EA3                     __end_of_monitoring_ISR:
 11851                           
 11852                           	psect	text31
 11853  03FF                     __ptext31:	
 11854 ;; *************** function _tsttc *****************
 11855 ;; Defined at:
 11856 ;;		line 60 in file "main.c"
 11857 ;; Parameters:    Size  Location     Type
 11858 ;;		None
 11859 ;; Auto vars:     Size  Location     Type
 11860 ;;  value           1    3[COMMON] unsigned char 
 11861 ;; Return value:  Size  Location     Type
 11862 ;;                  1    wreg      unsigned char 
 11863 ;; Registers used:
 11864 ;;		wreg, status,2, status,0, pclath, cstack
 11865 ;; Tracked objects:
 11866 ;;		On entry : 0/0
 11867 ;;		On exit  : 0/0
 11868 ;;		Unchanged: 0/0
 11869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11872 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11873 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11874 ;;Total ram usage:        2 bytes
 11875 ;; Hardware stack levels used:    1
 11876 ;; Hardware stack levels required when called:    1
 11877 ;; This function calls:
 11878 ;;		_ReadI2C
 11879 ;;		i1_WriteI2C
 11880 ;; This function is called by:
 11881 ;;		_monitoring_ISR
 11882 ;; This function uses a non-reentrant model
 11883 ;;
 11884                           
 11885                           
 11886                           ;psect for function _tsttc
 11887  03FF                     _tsttc:
 11888  03FF                     i1l844:	
 11889                           ;incstack = 0
 11890                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 11891                           ;main.c: 62: unsigned char value;;main.c: 63: do{
 11892                           
 11893  03FF                     i1l3638:	
 11894                           ;main.c: 64: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11895                           
 11896  03FF  0023               	movlb	3	; select bank3
 11897  0400  0C0F               	rrf	15,w	;volatile
 11898  0401  0C89               	rrf	9,f
 11899  0402  3901               	andlw	1
 11900  0403  00F2               	movwf	??_tsttc
 11901  0404  0811               	movf	17,w	;volatile
 11902  0405  391F               	andlw	31
 11903  0406  0472               	iorwf	??_tsttc,w
 11904  0407  1D03               	btfss	3,2
 11905  0408  2C0A               	goto	u291_21
 11906  0409  2C0B               	goto	u291_20
 11907  040A                     u291_21:
 11908  040A  2BFF               	goto	i1l3638
 11909  040B                     u291_20:
 11910  040B                     i1l847:
 11911                           
 11912                           ;main.c: 65: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 11913  040B  1411               	bsf	17,0	;volatile
 11914  040C                     i1l848:
 11915  040C  1811               	btfsc	17,0	;volatile
 11916  040D  2C0F               	goto	u292_21
 11917  040E  2C10               	goto	u292_20
 11918  040F                     u292_21:
 11919  040F  2C0C               	goto	i1l848
 11920  0410                     u292_20:
 11921  0410                     i1l3640:
 11922  0410  0C0F               	rrf	15,w	;volatile
 11923  0411  0C89               	rrf	9,f
 11924  0412  3901               	andlw	1
 11925  0413  00F2               	movwf	??_tsttc
 11926  0414  0811               	movf	17,w	;volatile
 11927  0415  391F               	andlw	31
 11928  0416  0472               	iorwf	??_tsttc,w
 11929  0417  1D03               	btfss	3,2
 11930  0418  2C1A               	goto	u293_21
 11931  0419  2C1B               	goto	u293_20
 11932  041A                     u293_21:
 11933  041A  2C10               	goto	i1l3640
 11934  041B                     u293_20:
 11935  041B                     i1l3642:
 11936                           
 11937                           ;main.c: 67: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11938  041B  309A               	movlw	154
 11939  041C  3187  27B2  3183   	fcall	i1_WriteI2C
 11940  041F                     i1l3644:
 11941  041F  0023               	movlb	3	; select bank3
 11942  0420  0C0F               	rrf	15,w	;volatile
 11943  0421  0C89               	rrf	9,f
 11944  0422  3901               	andlw	1
 11945  0423  00F2               	movwf	??_tsttc
 11946  0424  0811               	movf	17,w	;volatile
 11947  0425  391F               	andlw	31
 11948  0426  0472               	iorwf	??_tsttc,w
 11949  0427  1D03               	btfss	3,2
 11950  0428  2C2A               	goto	u294_21
 11951  0429  2C2B               	goto	u294_20
 11952  042A                     u294_21:
 11953  042A  2C1F               	goto	i1l3644
 11954  042B                     u294_20:
 11955  042B                     i1l3646:
 11956                           
 11957                           ;main.c: 68: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11958  042B  3001               	movlw	1
 11959  042C  3187  27B2  3183   	fcall	i1_WriteI2C
 11960  042F                     i1l3648:
 11961  042F  0023               	movlb	3	; select bank3
 11962  0430  0C0F               	rrf	15,w	;volatile
 11963  0431  0C89               	rrf	9,f
 11964  0432  3901               	andlw	1
 11965  0433  00F2               	movwf	??_tsttc
 11966  0434  0811               	movf	17,w	;volatile
 11967  0435  391F               	andlw	31
 11968  0436  0472               	iorwf	??_tsttc,w
 11969  0437  1D03               	btfss	3,2
 11970  0438  2C3A               	goto	u295_21
 11971  0439  2C3B               	goto	u295_20
 11972  043A                     u295_21:
 11973  043A  2C2F               	goto	i1l3648
 11974  043B                     u295_20:
 11975  043B                     i1l859:
 11976                           
 11977                           ;main.c: 69: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 11978  043B  1491               	bsf	17,1	;volatile
 11979  043C                     i1l860:
 11980  043C  1891               	btfsc	17,1	;volatile
 11981  043D  2C3F               	goto	u296_21
 11982  043E  2C40               	goto	u296_20
 11983  043F                     u296_21:
 11984  043F  2C3C               	goto	i1l860
 11985  0440                     u296_20:
 11986  0440                     i1l3650:
 11987  0440  0C0F               	rrf	15,w	;volatile
 11988  0441  0C89               	rrf	9,f
 11989  0442  3901               	andlw	1
 11990  0443  00F2               	movwf	??_tsttc
 11991  0444  0811               	movf	17,w	;volatile
 11992  0445  391F               	andlw	31
 11993  0446  0472               	iorwf	??_tsttc,w
 11994  0447  1D03               	btfss	3,2
 11995  0448  2C4A               	goto	u297_21
 11996  0449  2C4B               	goto	u297_20
 11997  044A                     u297_21:
 11998  044A  2C40               	goto	i1l3650
 11999  044B                     u297_20:
 12000  044B                     i1l3652:
 12001                           
 12002                           ;main.c: 70: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12003  044B  309B               	movlw	155
 12004  044C  3187  27B2  3183   	fcall	i1_WriteI2C
 12005  044F                     i1l3654:
 12006  044F  0023               	movlb	3	; select bank3
 12007  0450  0C0F               	rrf	15,w	;volatile
 12008  0451  0C89               	rrf	9,f
 12009  0452  3901               	andlw	1
 12010  0453  00F2               	movwf	??_tsttc
 12011  0454  0811               	movf	17,w	;volatile
 12012  0455  391F               	andlw	31
 12013  0456  0472               	iorwf	??_tsttc,w
 12014  0457  1D03               	btfss	3,2
 12015  0458  2C5A               	goto	u298_21
 12016  0459  2C5B               	goto	u298_20
 12017  045A                     u298_21:
 12018  045A  2C4F               	goto	i1l3654
 12019  045B                     u298_20:
 12020  045B                     i1l3656:
 12021                           
 12022                           ;main.c: 71: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12023  045B  318B  2399  3183   	fcall	_ReadI2C
 12024  045E  00F2               	movwf	??_tsttc
 12025  045F  0872               	movf	??_tsttc,w
 12026  0460  00F3               	movwf	tsttc@value
 12027  0461                     i1l3658:
 12028  0461  0023               	movlb	3	; select bank3
 12029  0462  0C0F               	rrf	15,w	;volatile
 12030  0463  0C89               	rrf	9,f
 12031  0464  3901               	andlw	1
 12032  0465  00F2               	movwf	??_tsttc
 12033  0466  0811               	movf	17,w	;volatile
 12034  0467  391F               	andlw	31
 12035  0468  0472               	iorwf	??_tsttc,w
 12036  0469  1D03               	btfss	3,2
 12037  046A  2C6C               	goto	u299_21
 12038  046B  2C6D               	goto	u299_20
 12039  046C                     u299_21:
 12040  046C  2C61               	goto	i1l3658
 12041  046D                     u299_20:
 12042  046D                     i1l871:
 12043                           
 12044                           ;main.c: 72: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12045  046D  1691               	bsf	17,5	;volatile
 12046  046E  1611               	bsf	17,4	;volatile
 12047  046F                     i1l872:
 12048  046F  1A11               	btfsc	17,4	;volatile
 12049  0470  2C72               	goto	u300_21
 12050  0471  2C73               	goto	u300_20
 12051  0472                     u300_21:
 12052  0472  2C6F               	goto	i1l872
 12053  0473                     u300_20:
 12054  0473                     i1l3660:
 12055  0473  0C0F               	rrf	15,w	;volatile
 12056  0474  0C89               	rrf	9,f
 12057  0475  3901               	andlw	1
 12058  0476  00F2               	movwf	??_tsttc
 12059  0477  0811               	movf	17,w	;volatile
 12060  0478  391F               	andlw	31
 12061  0479  0472               	iorwf	??_tsttc,w
 12062  047A  1D03               	btfss	3,2
 12063  047B  2C7D               	goto	u301_21
 12064  047C  2C7E               	goto	u301_20
 12065  047D                     u301_21:
 12066  047D  2C73               	goto	i1l3660
 12067  047E                     u301_20:
 12068  047E                     i1l877:
 12069                           
 12070                           ;main.c: 73: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 12071  047E  1511               	bsf	17,2	;volatile
 12072  047F                     i1l878:
 12073  047F  1911               	btfsc	17,2	;volatile
 12074  0480  2C82               	goto	u302_21
 12075  0481  2C83               	goto	u302_20
 12076  0482                     u302_21:
 12077  0482  2C7F               	goto	i1l878
 12078  0483                     u302_20:
 12079  0483                     i1l880:
 12080                           
 12081                           ;main.c: 74: } while (!(value & 0x40));
 12082  0483  1F73               	btfss	tsttc@value,6
 12083  0484  2C86               	goto	u303_21
 12084  0485  2C87               	goto	u303_20
 12085  0486                     u303_21:
 12086  0486  2BFF               	goto	i1l844
 12087  0487                     u303_20:
 12088  0487                     i1l3662:
 12089  0487  0C0F               	rrf	15,w	;volatile
 12090  0488  0C89               	rrf	9,f
 12091  0489  3901               	andlw	1
 12092  048A  00F2               	movwf	??_tsttc
 12093  048B  0811               	movf	17,w	;volatile
 12094  048C  391F               	andlw	31
 12095  048D  0472               	iorwf	??_tsttc,w
 12096  048E  1D03               	btfss	3,2
 12097  048F  2C91               	goto	u304_21
 12098  0490  2C92               	goto	u304_20
 12099  0491                     u304_21:
 12100  0491  2C87               	goto	i1l3662
 12101  0492                     u304_20:
 12102  0492                     i1l884:
 12103                           
 12104                           ;main.c: 77: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
 12105  0492  1411               	bsf	17,0	;volatile
 12106  0493                     i1l885:
 12107  0493  1811               	btfsc	17,0	;volatile
 12108  0494  2C96               	goto	u305_21
 12109  0495  2C97               	goto	u305_20
 12110  0496                     u305_21:
 12111  0496  2C93               	goto	i1l885
 12112  0497                     u305_20:
 12113  0497                     i1l3664:
 12114  0497  0C0F               	rrf	15,w	;volatile
 12115  0498  0C89               	rrf	9,f
 12116  0499  3901               	andlw	1
 12117  049A  00F2               	movwf	??_tsttc
 12118  049B  0811               	movf	17,w	;volatile
 12119  049C  391F               	andlw	31
 12120  049D  0472               	iorwf	??_tsttc,w
 12121  049E  1D03               	btfss	3,2
 12122  049F  2CA1               	goto	u306_21
 12123  04A0  2CA2               	goto	u306_20
 12124  04A1                     u306_21:
 12125  04A1  2C97               	goto	i1l3664
 12126  04A2                     u306_20:
 12127  04A2                     i1l3666:
 12128                           
 12129                           ;main.c: 78: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12130  04A2  309A               	movlw	154
 12131  04A3  3187  27B2  3183   	fcall	i1_WriteI2C
 12132  04A6                     i1l3668:
 12133  04A6  0023               	movlb	3	; select bank3
 12134  04A7  0C0F               	rrf	15,w	;volatile
 12135  04A8  0C89               	rrf	9,f
 12136  04A9  3901               	andlw	1
 12137  04AA  00F2               	movwf	??_tsttc
 12138  04AB  0811               	movf	17,w	;volatile
 12139  04AC  391F               	andlw	31
 12140  04AD  0472               	iorwf	??_tsttc,w
 12141  04AE  1D03               	btfss	3,2
 12142  04AF  2CB1               	goto	u307_21
 12143  04B0  2CB2               	goto	u307_20
 12144  04B1                     u307_21:
 12145  04B1  2CA6               	goto	i1l3668
 12146  04B2                     u307_20:
 12147  04B2                     i1l3670:
 12148                           
 12149                           ;main.c: 79: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12150  04B2  3000               	movlw	0
 12151  04B3  3187  27B2  3183   	fcall	i1_WriteI2C
 12152  04B6                     i1l3672:
 12153  04B6  0023               	movlb	3	; select bank3
 12154  04B7  0C0F               	rrf	15,w	;volatile
 12155  04B8  0C89               	rrf	9,f
 12156  04B9  3901               	andlw	1
 12157  04BA  00F2               	movwf	??_tsttc
 12158  04BB  0811               	movf	17,w	;volatile
 12159  04BC  391F               	andlw	31
 12160  04BD  0472               	iorwf	??_tsttc,w
 12161  04BE  1D03               	btfss	3,2
 12162  04BF  2CC1               	goto	u308_21
 12163  04C0  2CC2               	goto	u308_20
 12164  04C1                     u308_21:
 12165  04C1  2CB6               	goto	i1l3672
 12166  04C2                     u308_20:
 12167  04C2                     i1l896:
 12168                           
 12169                           ;main.c: 80: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
 12170  04C2  1491               	bsf	17,1	;volatile
 12171  04C3                     i1l897:
 12172  04C3  1891               	btfsc	17,1	;volatile
 12173  04C4  2CC6               	goto	u309_21
 12174  04C5  2CC7               	goto	u309_20
 12175  04C6                     u309_21:
 12176  04C6  2CC3               	goto	i1l897
 12177  04C7                     u309_20:
 12178  04C7                     i1l3674:
 12179  04C7  0C0F               	rrf	15,w	;volatile
 12180  04C8  0C89               	rrf	9,f
 12181  04C9  3901               	andlw	1
 12182  04CA  00F2               	movwf	??_tsttc
 12183  04CB  0811               	movf	17,w	;volatile
 12184  04CC  391F               	andlw	31
 12185  04CD  0472               	iorwf	??_tsttc,w
 12186  04CE  1D03               	btfss	3,2
 12187  04CF  2CD1               	goto	u310_21
 12188  04D0  2CD2               	goto	u310_20
 12189  04D1                     u310_21:
 12190  04D1  2CC7               	goto	i1l3674
 12191  04D2                     u310_20:
 12192  04D2                     i1l3676:
 12193                           
 12194                           ;main.c: 81: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12195  04D2  309B               	movlw	155
 12196  04D3  3187  27B2  3183   	fcall	i1_WriteI2C
 12197  04D6                     i1l3678:
 12198  04D6  0023               	movlb	3	; select bank3
 12199  04D7  0C0F               	rrf	15,w	;volatile
 12200  04D8  0C89               	rrf	9,f
 12201  04D9  3901               	andlw	1
 12202  04DA  00F2               	movwf	??_tsttc
 12203  04DB  0811               	movf	17,w	;volatile
 12204  04DC  391F               	andlw	31
 12205  04DD  0472               	iorwf	??_tsttc,w
 12206  04DE  1D03               	btfss	3,2
 12207  04DF  2CE1               	goto	u311_21
 12208  04E0  2CE2               	goto	u311_20
 12209  04E1                     u311_21:
 12210  04E1  2CD6               	goto	i1l3678
 12211  04E2                     u311_20:
 12212  04E2                     i1l3680:
 12213                           
 12214                           ;main.c: 82: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12215  04E2  318B  2399  3183   	fcall	_ReadI2C
 12216  04E5  00F2               	movwf	??_tsttc
 12217  04E6  0872               	movf	??_tsttc,w
 12218  04E7  00F3               	movwf	tsttc@value
 12219  04E8                     i1l3682:
 12220  04E8  0023               	movlb	3	; select bank3
 12221  04E9  0C0F               	rrf	15,w	;volatile
 12222  04EA  0C89               	rrf	9,f
 12223  04EB  3901               	andlw	1
 12224  04EC  00F2               	movwf	??_tsttc
 12225  04ED  0811               	movf	17,w	;volatile
 12226  04EE  391F               	andlw	31
 12227  04EF  0472               	iorwf	??_tsttc,w
 12228  04F0  1D03               	btfss	3,2
 12229  04F1  2CF3               	goto	u312_21
 12230  04F2  2CF4               	goto	u312_20
 12231  04F3                     u312_21:
 12232  04F3  2CE8               	goto	i1l3682
 12233  04F4                     u312_20:
 12234  04F4                     i1l908:
 12235                           
 12236                           ;main.c: 83: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12237  04F4  1691               	bsf	17,5	;volatile
 12238  04F5  1611               	bsf	17,4	;volatile
 12239  04F6                     i1l909:
 12240  04F6  1A11               	btfsc	17,4	;volatile
 12241  04F7  2CF9               	goto	u313_21
 12242  04F8  2CFA               	goto	u313_20
 12243  04F9                     u313_21:
 12244  04F9  2CF6               	goto	i1l909
 12245  04FA                     u313_20:
 12246  04FA                     i1l3684:
 12247  04FA  0C0F               	rrf	15,w	;volatile
 12248  04FB  0C89               	rrf	9,f
 12249  04FC  3901               	andlw	1
 12250  04FD  00F2               	movwf	??_tsttc
 12251  04FE  0811               	movf	17,w	;volatile
 12252  04FF  391F               	andlw	31
 12253  0500  0472               	iorwf	??_tsttc,w
 12254  0501  1D03               	btfss	3,2
 12255  0502  2D04               	goto	u314_21
 12256  0503  2D05               	goto	u314_20
 12257  0504                     u314_21:
 12258  0504  2CFA               	goto	i1l3684
 12259  0505                     u314_20:
 12260  0505                     i1l914:
 12261                           
 12262                           ;main.c: 84: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 12263  0505  1511               	bsf	17,2	;volatile
 12264  0506                     i1l915:
 12265  0506  1911               	btfsc	17,2	;volatile
 12266  0507  2D09               	goto	u315_21
 12267  0508  2D0A               	goto	u315_20
 12268  0509                     u315_21:
 12269  0509  2D06               	goto	i1l915
 12270  050A                     u315_20:
 12271  050A                     i1l3686:
 12272                           
 12273                           ;main.c: 86: return value;
 12274  050A  0873               	movf	tsttc@value,w
 12275  050B                     i1l918:
 12276  050B  0008               	return
 12277  050C                     __end_of_tsttc:
 12278                           
 12279                           	psect	text32
 12280  0B99                     __ptext32:	
 12281 ;; *************** function _ReadI2C *****************
 12282 ;; Defined at:
 12283 ;;		line 32 in file "I2C/i2c.c"
 12284 ;; Parameters:    Size  Location     Type
 12285 ;;		None
 12286 ;; Auto vars:     Size  Location     Type
 12287 ;;		None
 12288 ;; Return value:  Size  Location     Type
 12289 ;;                  1    wreg      unsigned char 
 12290 ;; Registers used:
 12291 ;;		wreg, status,2, status,0
 12292 ;; Tracked objects:
 12293 ;;		On entry : 0/0
 12294 ;;		On exit  : 0/0
 12295 ;;		Unchanged: 0/0
 12296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12299 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12300 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12301 ;;Total ram usage:        1 bytes
 12302 ;; Hardware stack levels used:    1
 12303 ;; This function calls:
 12304 ;;		Nothing
 12305 ;; This function is called by:
 12306 ;;		_tsttc
 12307 ;;		_LCDrecv
 12308 ;; This function uses a non-reentrant model
 12309 ;;
 12310                           
 12311                           
 12312                           ;psect for function _ReadI2C
 12313  0B99                     _ReadI2C:
 12314  0B99                     i1l3498:	
 12315                           ;incstack = 0
 12316                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 12317                           
 12318                           
 12319                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 12320  0B99  300F               	movlw	15
 12321  0B9A  0023               	movlb	3	; select bank3
 12322  0B9B  0510               	andwf	16,w	;volatile
 12323  0B9C  00F0               	movwf	??_ReadI2C
 12324  0B9D  3008               	movlw	8
 12325  0B9E  0670               	xorwf	??_ReadI2C,w
 12326  0B9F  1903               	btfsc	3,2
 12327  0BA0  2BA2               	goto	u259_21
 12328  0BA1  2BA3               	goto	u259_20
 12329  0BA2                     u259_21:
 12330  0BA2  2BAC               	goto	i1l22
 12331  0BA3                     u259_20:
 12332  0BA3                     i1l3500:
 12333  0BA3  300F               	movlw	15
 12334  0BA4  0510               	andwf	16,w	;volatile
 12335  0BA5  00F0               	movwf	??_ReadI2C
 12336  0BA6  300B               	movlw	11
 12337  0BA7  0670               	xorwf	??_ReadI2C,w
 12338  0BA8  1D03               	btfss	3,2
 12339  0BA9  2BAB               	goto	u260_21
 12340  0BAA  2BAC               	goto	u260_20
 12341  0BAB                     u260_21:
 12342  0BAB  2BAD               	goto	i1l23
 12343  0BAC                     u260_20:
 12344  0BAC                     i1l22:
 12345                           
 12346                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
 12347  0BAC  1591               	bsf	17,3	;volatile
 12348  0BAD                     i1l23:
 12349  0BAD  1C0F               	btfss	15,0	;volatile
 12350  0BAE  2BB0               	goto	u261_21
 12351  0BAF  2BB1               	goto	u261_20
 12352  0BB0                     u261_21:
 12353  0BB0  2BAD               	goto	i1l23
 12354  0BB1                     u261_20:
 12355  0BB1                     i1l3502:
 12356                           
 12357                           ;i2c.c: 37: return ( SSP1BUF );
 12358  0BB1  080C               	movf	12,w	;volatile
 12359  0BB2                     i1l26:
 12360  0BB2  0008               	return
 12361  0BB3                     __end_of_ReadI2C:
 12362                           
 12363                           	psect	text33
 12364  0AE8                     __ptext33:	
 12365 ;; *************** function _ADCC_GetSingleConversion *****************
 12366 ;; Defined at:
 12367 ;;		line 130 in file "mcc_generated_files/adcc.c"
 12368 ;; Parameters:    Size  Location     Type
 12369 ;;  channel         1    wreg     enum E12086
 12370 ;; Auto vars:     Size  Location     Type
 12371 ;;  channel         1    3[COMMON] enum E12086
 12372 ;; Return value:  Size  Location     Type
 12373 ;;                  2    0[COMMON] unsigned int 
 12374 ;; Registers used:
 12375 ;;		wreg
 12376 ;; Tracked objects:
 12377 ;;		On entry : 0/0
 12378 ;;		On exit  : 0/0
 12379 ;;		Unchanged: 0/0
 12380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12381 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12382 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12384 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12385 ;;Total ram usage:        4 bytes
 12386 ;; Hardware stack levels used:    1
 12387 ;; This function calls:
 12388 ;;		Nothing
 12389 ;; This function is called by:
 12390 ;;		_monitoring_ISR
 12391 ;; This function uses a non-reentrant model
 12392 ;;
 12393                           
 12394                           
 12395                           ;psect for function _ADCC_GetSingleConversion
 12396  0AE8                     _ADCC_GetSingleConversion:
 12397                           
 12398                           ;incstack = 0
 12399                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 12400                           ;ADCC_GetSingleConversion@channel stored from wreg
 12401  0AE8  00F3               	movwf	ADCC_GetSingleConversion@channel
 12402  0AE9                     i1l3620:
 12403                           
 12404                           ;adcc.c: 133: ADPCH = channel;
 12405  0AE9  0873               	movf	ADCC_GetSingleConversion@channel,w
 12406  0AEA  0021               	movlb	1	; select bank1
 12407  0AEB  009E               	movwf	30	;volatile
 12408  0AEC                     i1l3622:
 12409                           
 12410                           ;adcc.c: 136: ADCON0bits.ADON = 1;
 12411  0AEC  1793               	bsf	19,7	;volatile
 12412  0AED                     i1l3624:
 12413                           
 12414                           ;adcc.c: 139: ADCON0bits.ADCONT = 0;
 12415  0AED  1313               	bcf	19,6	;volatile
 12416  0AEE                     i1l3626:
 12417                           
 12418                           ;adcc.c: 142: ADCON0bits.ADGO = 1;
 12419  0AEE  1413               	bsf	19,0	;volatile
 12420  0AEF                     i1l3628:
 12421                           
 12422                           ;adcc.c: 145: __nop();
 12423  0AEF  0000               	nop
 12424  0AF0                     i1l575:	
 12425                           ;adcc.c: 149: {
 12426                           
 12427  0AF0  0021               	movlb	1	; select bank1
 12428  0AF1  1813               	btfsc	19,0	;volatile
 12429  0AF2  2AF4               	goto	u290_21
 12430  0AF3  2AF5               	goto	u290_20
 12431  0AF4                     u290_21:
 12432  0AF4  2AF0               	goto	i1l575
 12433  0AF5                     u290_20:
 12434  0AF5                     i1l3630:
 12435                           
 12436                           ;adcc.c: 150: };adcc.c: 154: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 12437  0AF5  080D               	movf	13,w	;volatile
 12438  0AF6  00F1               	movwf	?_ADCC_GetSingleConversion+1
 12439  0AF7  080C               	movf	12,w	;volatile
 12440  0AF8  00F0               	movwf	?_ADCC_GetSingleConversion
 12441  0AF9                     i1l578:
 12442  0AF9  0008               	return
 12443  0AFA                     __end_of_ADCC_GetSingleConversion:
 12444                           
 12445                           	psect	text34
 12446  0AC5                     __ptext34:	
 12447 ;; *************** function _TMR5_WriteTimer *****************
 12448 ;; Defined at:
 12449 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 12450 ;; Parameters:    Size  Location     Type
 12451 ;;  timerVal        2    0[COMMON] unsigned int 
 12452 ;; Auto vars:     Size  Location     Type
 12453 ;;		None
 12454 ;; Return value:  Size  Location     Type
 12455 ;;                  1    wreg      void 
 12456 ;; Registers used:
 12457 ;;		wreg, status,2
 12458 ;; Tracked objects:
 12459 ;;		On entry : 0/0
 12460 ;;		On exit  : 0/0
 12461 ;;		Unchanged: 0/0
 12462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12466 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12467 ;;Total ram usage:        2 bytes
 12468 ;; Hardware stack levels used:    1
 12469 ;; This function calls:
 12470 ;;		Nothing
 12471 ;; This function is called by:
 12472 ;;		_TMR5_ISR
 12473 ;;		_TMR5_Reload
 12474 ;; This function uses a non-reentrant model
 12475 ;;
 12476                           
 12477                           
 12478                           ;psect for function _TMR5_WriteTimer
 12479  0AC5                     _TMR5_WriteTimer:
 12480  0AC5                     i1l3984:	
 12481                           ;incstack = 0
 12482                           ; Regs used in _TMR5_WriteTimer: [wreg+status,2]
 12483                           
 12484                           
 12485                           ;tmr5.c: 130: if (T5CONbits.nT5SYNC == 1)
 12486  0AC5  0024               	movlb	4	; select bank4
 12487  0AC6  1D1A               	btfss	26,2	;volatile
 12488  0AC7  2AC9               	goto	u340_21
 12489  0AC8  2ACA               	goto	u340_20
 12490  0AC9                     u340_21:
 12491  0AC9  2AD1               	goto	i1l3994
 12492  0ACA                     u340_20:
 12493  0ACA                     i1l3986:
 12494                           
 12495                           ;tmr5.c: 131: {;tmr5.c: 133: T5CONbits.TMR5ON = 0;
 12496  0ACA  101A               	bcf	26,0	;volatile
 12497  0ACB                     i1l3988:
 12498                           
 12499                           ;tmr5.c: 136: TMR5H = (timerVal >> 8);
 12500  0ACB  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 12501  0ACC  0099               	movwf	25	;volatile
 12502  0ACD                     i1l3990:
 12503                           
 12504                           ;tmr5.c: 137: TMR5L = timerVal;
 12505  0ACD  0870               	movf	TMR5_WriteTimer@timerVal,w
 12506  0ACE  0098               	movwf	24	;volatile
 12507  0ACF                     i1l3992:
 12508                           
 12509                           ;tmr5.c: 140: T5CONbits.TMR5ON =1;
 12510  0ACF  141A               	bsf	26,0	;volatile
 12511                           
 12512                           ;tmr5.c: 141: }
 12513  0AD0  2AD5               	goto	i1l689
 12514  0AD1                     i1l3994:
 12515                           
 12516                           ;tmr5.c: 142: else;tmr5.c: 143: {;tmr5.c: 145: TMR5H = (timerVal >> 8);
 12517  0AD1  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 12518  0AD2  0099               	movwf	25	;volatile
 12519  0AD3                     i1l3996:
 12520                           
 12521                           ;tmr5.c: 146: TMR5L = timerVal;
 12522  0AD3  0870               	movf	TMR5_WriteTimer@timerVal,w
 12523  0AD4  0098               	movwf	24	;volatile
 12524  0AD5                     i1l689:
 12525  0AD5  0008               	return
 12526  0AD6                     __end_of_TMR5_WriteTimer:
 12527                           
 12528                           	psect	text35
 12529  0B3B                     __ptext35:	
 12530 ;; *************** function _TMR3_ISR *****************
 12531 ;; Defined at:
 12532 ;;		line 164 in file "mcc_generated_files/tmr3.c"
 12533 ;; Parameters:    Size  Location     Type
 12534 ;;		None
 12535 ;; Auto vars:     Size  Location     Type
 12536 ;;		None
 12537 ;; Return value:  Size  Location     Type
 12538 ;;                  1    wreg      void 
 12539 ;; Registers used:
 12540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12541 ;; Tracked objects:
 12542 ;;		On entry : 0/0
 12543 ;;		On exit  : 0/0
 12544 ;;		Unchanged: 0/0
 12545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12550 ;;Total ram usage:        0 bytes
 12551 ;; Hardware stack levels used:    1
 12552 ;; Hardware stack levels required when called:    5
 12553 ;; This function calls:
 12554 ;;		Absolute function
 12555 ;;		_TMR3_DefaultInterruptHandler
 12556 ;;		_TMR3_WriteTimer
 12557 ;;		_menuLCD_ISR
 12558 ;; This function is called by:
 12559 ;;		_INTERRUPT_InterruptManager
 12560 ;; This function uses a non-reentrant model
 12561 ;;
 12562                           
 12563                           
 12564                           ;psect for function _TMR3_ISR
 12565  0B3B                     _TMR3_ISR:
 12566  0B3B                     i1l4276:	
 12567                           ;incstack = 0
 12568                           ; Regs used in _TMR3_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12569                           
 12570                           
 12571                           ;tmr3.c: 168: PIR4bits.TMR3IF = 0;
 12572  0B3B  002E               	movlb	14	; select bank14
 12573  0B3C  1110               	bcf	16,2	;volatile
 12574  0B3D                     i1l4278:
 12575                           
 12576                           ;tmr3.c: 169: TMR3_WriteTimer(timer3ReloadVal);
 12577  0B3D  0020               	movlb	0	; select bank0
 12578  0B3E  086F               	movf	_timer3ReloadVal+1,w	;volatile
 12579  0B3F  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 12580  0B40  086E               	movf	_timer3ReloadVal,w	;volatile
 12581  0B41  00F0               	movwf	TMR3_WriteTimer@timerVal
 12582  0B42  318A  22B4  318B   	fcall	_TMR3_WriteTimer
 12583  0B45                     i1l4280:
 12584                           
 12585                           ;tmr3.c: 171: if(TMR3_InterruptHandler)
 12586  0B45  0021               	movlb	1	; select bank1
 12587  0B46  0824               	movf	_TMR3_InterruptHandler^(0+128),w
 12588  0B47  0425               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 12589  0B48  1903               	btfsc	3,2
 12590  0B49  2B4B               	goto	u402_21
 12591  0B4A  2B4C               	goto	u402_20
 12592  0B4B                     u402_21:
 12593  0B4B  2B51               	goto	i1l478
 12594  0B4C                     u402_20:
 12595  0B4C                     i1l4282:
 12596                           
 12597                           ;tmr3.c: 172: {;tmr3.c: 173: TMR3_InterruptHandler();
 12598  0B4C  0825               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 12599  0B4D  008A               	movwf	10
 12600  0B4E  0824               	movf	_TMR3_InterruptHandler^(0+128),w
 12601  0B4F  000A               	callw
 12602  0B50  318B               	pagesel	$
 12603  0B51                     i1l478:
 12604  0B51  0008               	return
 12605  0B52                     __end_of_TMR3_ISR:
 12606                           
 12607                           	psect	text36
 12608  0002                     __ptext36:	
 12609 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 12610 ;; Defined at:
 12611 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 12612 ;; Parameters:    Size  Location     Type
 12613 ;;		None
 12614 ;; Auto vars:     Size  Location     Type
 12615 ;;		None
 12616 ;; Return value:  Size  Location     Type
 12617 ;;                  1    wreg      void 
 12618 ;; Registers used:
 12619 ;;		None
 12620 ;; Tracked objects:
 12621 ;;		On entry : 0/0
 12622 ;;		On exit  : 0/0
 12623 ;;		Unchanged: 0/0
 12624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12629 ;;Total ram usage:        0 bytes
 12630 ;; Hardware stack levels used:    1
 12631 ;; This function calls:
 12632 ;;		Nothing
 12633 ;; This function is called by:
 12634 ;;		_TMR3_Initialize
 12635 ;;		_TMR3_ISR
 12636 ;; This function uses a non-reentrant model
 12637 ;;
 12638                           
 12639                           
 12640                           ;psect for function _TMR3_DefaultInterruptHandler
 12641  0002                     _TMR3_DefaultInterruptHandler:
 12642  0002                     i1l484:	
 12643                           ;incstack = 0
 12644                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 12645                           
 12646  0002  0008               	return
 12647  0003                     __end_of_TMR3_DefaultInterruptHandler:
 12648                           
 12649                           	psect	text37
 12650  006D                     __ptext37:	
 12651 ;; *************** function _menuLCD_ISR *****************
 12652 ;; Defined at:
 12653 ;;		line 319 in file "main.c"
 12654 ;; Parameters:    Size  Location     Type
 12655 ;;		None
 12656 ;; Auto vars:     Size  Location     Type
 12657 ;;  diff            6   38[BANK0 ] struct Time
 12658 ;;  str             8   23[BANK0 ] unsigned char [8]
 12659 ;;  tt              4   31[BANK0 ] unsigned char [4]
 12660 ;;  l               3   35[BANK0 ] unsigned char [3]
 12661 ;; Return value:  Size  Location     Type
 12662 ;;                  1    wreg      void 
 12663 ;; Registers used:
 12664 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12665 ;; Tracked objects:
 12666 ;;		On entry : 0/0
 12667 ;;		On exit  : 0/0
 12668 ;;		Unchanged: 0/0
 12669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12671 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12672 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12673 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12674 ;;Total ram usage:       23 bytes
 12675 ;; Hardware stack levels used:    1
 12676 ;; Hardware stack levels required when called:    4
 12677 ;; This function calls:
 12678 ;;		_LCDchar
 12679 ;;		_LCDcmd
 12680 ;;		_LCDstr
 12681 ;;		_PWM_Output_D4_Enable
 12682 ;;		_TMR2_StartTimer
 12683 ;;		_differenceBetweenTimePeriod
 12684 ;;		_sprintf
 12685 ;;		i1_PWM6_LoadDutyValue
 12686 ;;		i1_PWM_Output_D4_Disable
 12687 ;;		i1_TMR2_StopTimer
 12688 ;; This function is called by:
 12689 ;;		_main
 12690 ;;		_TMR3_ISR
 12691 ;; This function uses a non-reentrant model
 12692 ;;
 12693                           
 12694                           
 12695                           ;psect for function _menuLCD_ISR
 12696  006D                     _menuLCD_ISR:
 12697  006D                     i1l4086:	
 12698                           ;incstack = 0
 12699                           ; Regs used in _menuLCD_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12700                           
 12701                           
 12702                           ;main.c: 320: char str[8];;main.c: 321: if(editingClockAlarm){
 12703  006D  0020               	movlb	0	; select bank0
 12704  006E  0854               	movf	_editingClockAlarm,w
 12705  006F  0455               	iorwf	_editingClockAlarm+1,w
 12706  0070  1903               	btfsc	3,2
 12707  0071  2873               	goto	u369_21
 12708  0072  2874               	goto	u369_20
 12709  0073                     u369_21:
 12710  0073  2889               	goto	i1l4090
 12711  0074                     u369_20:
 12712  0074                     i1l4088:
 12713                           
 12714                           ;main.c: 322: sprintf(str, "%02d:%02d:%02d", clkAlarm.alarmVal.h,clkAlarm.alarmVal.m,clk
      +                          Alarm.alarmVal.s);
 12715  0074  3000               	movlw	low (STR_1| (0+32768))
 12716  0075  00A0               	movwf	sprintf@f
 12717  0076  3090               	movlw	high (STR_1| (0+32768))
 12718  0077  00A1               	movwf	sprintf@f+1
 12719  0078  0861               	movf	_clkAlarm+1,w
 12720  0079  00A3               	movwf	?_sprintf+3
 12721  007A  0860               	movf	_clkAlarm,w
 12722  007B  00A2               	movwf	?_sprintf+2
 12723  007C  0863               	movf	_clkAlarm+3,w
 12724  007D  00A5               	movwf	?_sprintf+5
 12725  007E  0862               	movf	_clkAlarm+2,w
 12726  007F  00A4               	movwf	?_sprintf+4
 12727  0080  0865               	movf	_clkAlarm+5,w
 12728  0081  00A7               	movwf	?_sprintf+7
 12729  0082  0864               	movf	_clkAlarm+4,w
 12730  0083  00A6               	movwf	?_sprintf+6
 12731  0084  3037               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 12732  0085  3182  2262  3180   	fcall	_sprintf
 12733                           
 12734                           ;main.c: 323: } else {
 12735  0088  289D               	goto	i1l4092
 12736  0089                     i1l4090:
 12737                           
 12738                           ;main.c: 324: sprintf(str, "%02d:%02d:%02d", t.h,t.m,t.s);
 12739  0089  3000               	movlw	low (STR_1| (0+32768))
 12740  008A  00A0               	movwf	sprintf@f
 12741  008B  3090               	movlw	high (STR_1| (0+32768))
 12742  008C  00A1               	movwf	sprintf@f+1
 12743  008D  084D               	movf	_t+1,w
 12744  008E  00A3               	movwf	?_sprintf+3
 12745  008F  084C               	movf	_t,w
 12746  0090  00A2               	movwf	?_sprintf+2
 12747  0091  084F               	movf	_t+3,w
 12748  0092  00A5               	movwf	?_sprintf+5
 12749  0093  084E               	movf	_t+2,w
 12750  0094  00A4               	movwf	?_sprintf+4
 12751  0095  0851               	movf	_t+5,w
 12752  0096  00A7               	movwf	?_sprintf+7
 12753  0097  0850               	movf	_t+4,w
 12754  0098  00A6               	movwf	?_sprintf+6
 12755  0099  3037               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 12756  009A  3182  2262  3180   	fcall	_sprintf
 12757  009D                     i1l4092:
 12758                           
 12759                           ;main.c: 325: };main.c: 326: LCDcmd(0x80);
 12760  009D  3080               	movlw	128
 12761  009E  318A  224E  3180   	fcall	_LCDcmd
 12762  00A1                     i1l4094:
 12763                           
 12764                           ;main.c: 327: LCDstr(str);
 12765  00A1  3037               	movlw	(low (menuLCD_ISR@str| 0))& (0+255)
 12766  00A2  318A  22FA  3180   	fcall	_LCDstr
 12767  00A5                     i1l4096:
 12768                           
 12769                           ;main.c: 330: if(alarmsEnable){
 12770  00A5  0020               	movlb	0	; select bank0
 12771  00A6  086D               	movf	_alarmsEnable,w
 12772  00A7  1903               	btfsc	3,2
 12773  00A8  28AA               	goto	u370_21
 12774  00A9  28AB               	goto	u370_20
 12775  00AA                     u370_21:
 12776  00AA  29B1               	goto	i1l4152
 12777  00AB                     u370_20:
 12778  00AB                     i1l4098:
 12779                           
 12780                           ;main.c: 331: LCDcmd(0x8F);
 12781  00AB  308F               	movlw	143
 12782  00AC  318A  224E  3180   	fcall	_LCDcmd
 12783                           
 12784                           ;main.c: 332: LCDchar('A');
 12785  00AF  3041               	movlw	65
 12786  00B0  318A  2255  3180   	fcall	_LCDchar
 12787  00B3                     i1l4100:
 12788                           
 12789                           ;main.c: 335: if(clkAlarm.trigger == 1){
 12790  00B3  0020               	movlb	0	; select bank0
 12791  00B4  0366               	decf	_clkAlarm+6,w
 12792  00B5  1D03               	btfss	3,2
 12793  00B6  28B8               	goto	u371_21
 12794  00B7  28B9               	goto	u371_20
 12795  00B8                     u371_21:
 12796  00B8  28C2               	goto	i1l4104
 12797  00B9                     u371_20:
 12798  00B9                     i1l4102:
 12799                           
 12800                           ;main.c: 336: LCDcmd(0x8B);
 12801  00B9  308B               	movlw	139
 12802  00BA  318A  224E  3180   	fcall	_LCDcmd
 12803                           
 12804                           ;main.c: 337: LCDchar('C');
 12805  00BD  3043               	movlw	67
 12806  00BE  318A  2255  3180   	fcall	_LCDchar
 12807                           
 12808                           ;main.c: 338: } else{
 12809  00C1  28CA               	goto	i1l4106
 12810  00C2                     i1l4104:
 12811                           
 12812                           ;main.c: 339: LCDcmd(0x8B);
 12813  00C2  308B               	movlw	139
 12814  00C3  318A  224E  3180   	fcall	_LCDcmd
 12815                           
 12816                           ;main.c: 340: LCDchar(' ');
 12817  00C6  3020               	movlw	32
 12818  00C7  318A  2255  3180   	fcall	_LCDchar
 12819  00CA                     i1l4106:
 12820                           
 12821                           ;main.c: 341: };main.c: 344: if(tempAlarm.trigger == 1){
 12822  00CA  0020               	movlb	0	; select bank0
 12823  00CB  036B               	decf	_tempAlarm+1,w
 12824  00CC  1D03               	btfss	3,2
 12825  00CD  28CF               	goto	u372_21
 12826  00CE  28D0               	goto	u372_20
 12827  00CF                     u372_21:
 12828  00CF  28D9               	goto	i1l4110
 12829  00D0                     u372_20:
 12830  00D0                     i1l4108:
 12831                           
 12832                           ;main.c: 345: LCDcmd(0x8C);
 12833  00D0  308C               	movlw	140
 12834  00D1  318A  224E  3180   	fcall	_LCDcmd
 12835                           
 12836                           ;main.c: 346: LCDchar('T');
 12837  00D4  3054               	movlw	84
 12838  00D5  318A  2255  3180   	fcall	_LCDchar
 12839                           
 12840                           ;main.c: 347: } else{
 12841  00D8  28E1               	goto	i1l4112
 12842  00D9                     i1l4110:
 12843                           
 12844                           ;main.c: 348: LCDcmd(0x8C);
 12845  00D9  308C               	movlw	140
 12846  00DA  318A  224E  3180   	fcall	_LCDcmd
 12847                           
 12848                           ;main.c: 349: LCDchar(' ');
 12849  00DD  3020               	movlw	32
 12850  00DE  318A  2255  3180   	fcall	_LCDchar
 12851  00E1                     i1l4112:
 12852                           
 12853                           ;main.c: 350: };main.c: 353: if(lumAlarm.trigger == 1){
 12854  00E1  0020               	movlb	0	; select bank0
 12855  00E2  0368               	decf	_lumAlarm+1,w
 12856  00E3  1D03               	btfss	3,2
 12857  00E4  28E6               	goto	u373_21
 12858  00E5  28E7               	goto	u373_20
 12859  00E6                     u373_21:
 12860  00E6  28F0               	goto	i1l4116
 12861  00E7                     u373_20:
 12862  00E7                     i1l4114:
 12863                           
 12864                           ;main.c: 354: LCDcmd(0x8D);
 12865  00E7  308D               	movlw	141
 12866  00E8  318A  224E  3180   	fcall	_LCDcmd
 12867                           
 12868                           ;main.c: 355: LCDchar('L');
 12869  00EB  304C               	movlw	76
 12870  00EC  318A  2255  3180   	fcall	_LCDchar
 12871                           
 12872                           ;main.c: 356: } else{
 12873  00EF  28F8               	goto	i1l4118
 12874  00F0                     i1l4116:
 12875                           
 12876                           ;main.c: 357: LCDcmd(0x8D);
 12877  00F0  308D               	movlw	141
 12878  00F1  318A  224E  3180   	fcall	_LCDcmd
 12879                           
 12880                           ;main.c: 358: LCDchar(' ');
 12881  00F4  3020               	movlw	32
 12882  00F5  318A  2255  3180   	fcall	_LCDchar
 12883  00F8                     i1l4118:
 12884                           
 12885                           ;main.c: 359: };main.c: 360: if(clkAlarm.trigger || tempAlarm.trigger || lumAlarm.trigge
      +                          r){
 12886  00F8  0020               	movlb	0	; select bank0
 12887  00F9  0866               	movf	_clkAlarm+6,w
 12888  00FA  1D03               	btfss	3,2
 12889  00FB  28FD               	goto	u374_21
 12890  00FC  28FE               	goto	u374_20
 12891  00FD                     u374_21:
 12892  00FD  2908               	goto	i1l4124
 12893  00FE                     u374_20:
 12894  00FE                     i1l4120:
 12895  00FE  086B               	movf	_tempAlarm+1,w
 12896  00FF  1D03               	btfss	3,2
 12897  0100  2902               	goto	u375_21
 12898  0101  2903               	goto	u375_20
 12899  0102                     u375_21:
 12900  0102  2908               	goto	i1l4124
 12901  0103                     u375_20:
 12902  0103                     i1l4122:
 12903  0103  0868               	movf	_lumAlarm+1,w
 12904  0104  1903               	btfsc	3,2
 12905  0105  2907               	goto	u376_21
 12906  0106  2908               	goto	u376_20
 12907  0107                     u376_21:
 12908  0107  29B9               	goto	i1l1152
 12909  0108                     u376_20:
 12910  0108                     i1l4124:
 12911                           
 12912                           ;main.c: 361: if(alarmPWMStart.h == -1){
 12913  0108  0021               	movlb	1	; select bank1
 12914  0109  0A3A               	incf	_alarmPWMStart^(0+128),w
 12915  010A  1D03               	skipz
 12916  010B  2910               	goto	u377_21
 12917  010C  0A3B               	incf	(_alarmPWMStart+1)^(0+128),w
 12918  010D  1D03               	btfss	3,2
 12919  010E  2910               	goto	u377_21
 12920  010F  2911               	goto	u377_20
 12921  0110                     u377_21:
 12922  0110  2929               	goto	i1l4128
 12923  0111                     u377_20:
 12924  0111                     i1l4126:
 12925                           
 12926                           ;main.c: 362: alarmPWMStart.h = t.h;
 12927  0111  0020               	movlb	0	; select bank0
 12928  0112  084D               	movf	_t+1,w
 12929  0113  0021               	movlb	1	; select bank1
 12930  0114  00BB               	movwf	(_alarmPWMStart+1)^(0+128)
 12931  0115  0020               	movlb	0	; select bank0
 12932  0116  084C               	movf	_t,w
 12933  0117  0021               	movlb	1	; select bank1
 12934  0118  00BA               	movwf	_alarmPWMStart^(0+128)
 12935                           
 12936                           ;main.c: 363: alarmPWMStart.m = t.m;
 12937  0119  0020               	movlb	0	; select bank0
 12938  011A  084F               	movf	_t+3,w
 12939  011B  0021               	movlb	1	; select bank1
 12940  011C  00BD               	movwf	((_alarmPWMStart+1)^(0+128)+2)
 12941  011D  0020               	movlb	0	; select bank0
 12942  011E  084E               	movf	_t+2,w
 12943  011F  0021               	movlb	1	; select bank1
 12944  0120  00BC               	movwf	(_alarmPWMStart^(0+128)+2)
 12945                           
 12946                           ;main.c: 364: alarmPWMStart.s = t.s;
 12947  0121  0020               	movlb	0	; select bank0
 12948  0122  0851               	movf	_t+5,w
 12949  0123  0021               	movlb	1	; select bank1
 12950  0124  00BF               	movwf	((_alarmPWMStart+1)^(0+128)+4)
 12951  0125  0020               	movlb	0	; select bank0
 12952  0126  0850               	movf	_t+4,w
 12953  0127  0021               	movlb	1	; select bank1
 12954  0128  00BE               	movwf	(_alarmPWMStart^(0+128)+4)
 12955  0129                     i1l4128:
 12956                           
 12957                           ;main.c: 365: };main.c: 366: struct Time diff = {0,0,0};
 12958  0129  30B4               	movlw	low menuLCD_ISR@F12792
 12959  012A  0086               	movwf	6
 12960  012B  3000               	movlw	high menuLCD_ISR@F12792
 12961  012C  0087               	movwf	7
 12962  012D  3046               	movlw	low menuLCD_ISR@diff
 12963  012E  0084               	movwf	4
 12964  012F  3000               	movlw	high menuLCD_ISR@diff
 12965  0130  0085               	movwf	5
 12966  0131  3006               	movlw	6
 12967  0132  0020               	movlb	0	; select bank0
 12968  0133  00B5               	movwf	??_menuLCD_ISR
 12969  0134                     u378_20:
 12970  0134  0016               	moviw fsr1++
 12971  0135  001A               	movwi fsr0++
 12972  0136  0BB5               	decfsz	??_menuLCD_ISR,f
 12973  0137  2934               	goto	u378_20
 12974  0138                     i1l4130:
 12975                           
 12976                           ;main.c: 367: differenceBetweenTimePeriod( t, alarmPWMStart, &diff);
 12977  0138  304C               	movlw	low _t
 12978  0139  0086               	movwf	6
 12979  013A  3000               	movlw	high _t
 12980  013B  0087               	movwf	7
 12981  013C  3070               	movlw	low differenceBetweenTimePeriod@start
 12982  013D  0084               	movwf	4
 12983  013E  3000               	movlw	high differenceBetweenTimePeriod@start
 12984  013F  0085               	movwf	5
 12985  0140  3F40               	moviw [0]fsr1
 12986  0141  3F80               	movwi [0]fsr0
 12987  0142  3F41               	moviw [1]fsr1
 12988  0143  3F81               	movwi [1]fsr0
 12989  0144  3F42               	moviw [2]fsr1
 12990  0145  3F82               	movwi [2]fsr0
 12991  0146  3F43               	moviw [3]fsr1
 12992  0147  3F83               	movwi [3]fsr0
 12993  0148  3F44               	moviw [4]fsr1
 12994  0149  3F84               	movwi [4]fsr0
 12995  014A  3F45               	moviw [5]fsr1
 12996  014B  3F85               	movwi [5]fsr0
 12997  014C  30BA               	movlw	low _alarmPWMStart
 12998  014D  0086               	movwf	6
 12999  014E  3000               	movlw	high _alarmPWMStart
 13000  014F  0087               	movwf	7
 13001  0150  3076               	movlw	low differenceBetweenTimePeriod@stop
 13002  0151  0084               	movwf	4
 13003  0152  3000               	movlw	high differenceBetweenTimePeriod@stop
 13004  0153  0085               	movwf	5
 13005  0154  3F40               	moviw [0]fsr1
 13006  0155  3F80               	movwi [0]fsr0
 13007  0156  3F41               	moviw [1]fsr1
 13008  0157  3F81               	movwi [1]fsr0
 13009  0158  3F42               	moviw [2]fsr1
 13010  0159  3F82               	movwi [2]fsr0
 13011  015A  3F43               	moviw [3]fsr1
 13012  015B  3F83               	movwi [3]fsr0
 13013  015C  3F44               	moviw [4]fsr1
 13014  015D  3F84               	movwi [4]fsr0
 13015  015E  3F45               	moviw [5]fsr1
 13016  015F  3F85               	movwi [5]fsr0
 13017  0160  3046               	movlw	(low (menuLCD_ISR@diff| 0))& (0+255)
 13018  0161  00B5               	movwf	??_menuLCD_ISR
 13019  0162  0835               	movf	??_menuLCD_ISR,w
 13020  0163  00FC               	movwf	differenceBetweenTimePeriod@diff
 13021  0164  318E  26A3  3180   	fcall	_differenceBetweenTimePeriod
 13022  0167                     i1l4132:
 13023                           
 13024                           ;main.c: 370: if(diff.s <= 5){
 13025  0167  0020               	movlb	0	; select bank0
 13026  0168  084B               	movf	menuLCD_ISR@diff+5,w
 13027  0169  3A80               	xorlw	128
 13028  016A  00B5               	movwf	??_menuLCD_ISR
 13029  016B  3080               	movlw	128
 13030  016C  0235               	subwf	??_menuLCD_ISR,w
 13031  016D  1D03               	skipz
 13032  016E  2971               	goto	u379_25
 13033  016F  3006               	movlw	6
 13034  0170  024A               	subwf	menuLCD_ISR@diff+4,w
 13035  0171                     u379_25:
 13036  0171  1803               	skipnc
 13037  0172  2974               	goto	u379_21
 13038  0173  2975               	goto	u379_20
 13039  0174                     u379_21:
 13040  0174  299F               	goto	i1l1146
 13041  0175                     u379_20:
 13042  0175                     i1l4134:
 13043                           
 13044                           ;main.c: 371: if(PWM6EN==0){
 13045  0175  0027               	movlb	7	; select bank7
 13046  0176  1B8E               	btfsc	14,7	;volatile
 13047  0177  2979               	goto	u380_21
 13048  0178  297A               	goto	u380_20
 13049  0179                     u380_21:
 13050  0179  2980               	goto	i1l4138
 13051  017A                     u380_20:
 13052  017A                     i1l4136:
 13053                           
 13054                           ;main.c: 372: TMR2_StartTimer();
 13055  017A  318A  221E  3180   	fcall	_TMR2_StartTimer
 13056                           
 13057                           ;main.c: 373: PWM_Output_D4_Enable();
 13058  017D  318A  220F  3180   	fcall	_PWM_Output_D4_Enable
 13059  0180                     i1l4138:
 13060                           
 13061                           ;main.c: 374: };main.c: 375: if(dimingLed <= 1023){
 13062  0180  0020               	movlb	0	; select bank0
 13063  0181  0857               	movf	_dimingLed+1,w
 13064  0182  3A80               	xorlw	128
 13065  0183  00B5               	movwf	??_menuLCD_ISR
 13066  0184  3084               	movlw	132
 13067  0185  0235               	subwf	??_menuLCD_ISR,w
 13068  0186  1D03               	skipz
 13069  0187  298A               	goto	u381_25
 13070  0188  3000               	movlw	0
 13071  0189  0256               	subwf	_dimingLed,w
 13072  018A                     u381_25:
 13073  018A  1803               	skipnc
 13074  018B  298D               	goto	u381_21
 13075  018C  298E               	goto	u381_20
 13076  018D                     u381_21:
 13077  018D  2994               	goto	i1l4142
 13078  018E                     u381_20:
 13079  018E                     i1l4140:
 13080                           
 13081                           ;main.c: 376: dimingLed += 200;
 13082  018E  30C8               	movlw	200
 13083  018F  0020               	movlb	0	; select bank0
 13084  0190  07D6               	addwf	_dimingLed,f
 13085  0191  3000               	movlw	0
 13086  0192  3DD7               	addwfc	_dimingLed+1,f
 13087                           
 13088                           ;main.c: 377: } else{
 13089  0193  2997               	goto	i1l4144
 13090  0194                     i1l4142:
 13091                           
 13092                           ;main.c: 378: dimingLed = 0;
 13093  0194  0020               	movlb	0	; select bank0
 13094  0195  01D6               	clrf	_dimingLed
 13095  0196  01D7               	clrf	_dimingLed+1
 13096  0197                     i1l4144:
 13097                           
 13098                           ;main.c: 379: };main.c: 380: PWM6_LoadDutyValue(dimingLed);
 13099  0197  0857               	movf	_dimingLed+1,w
 13100  0198  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 13101  0199  0856               	movf	_dimingLed,w
 13102  019A  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 13103  019B  318B  230E  3180   	fcall	i1_PWM6_LoadDutyValue
 13104                           
 13105                           ;main.c: 381: } else if(PWM6EN==1){
 13106  019E  29B9               	goto	i1l1152
 13107  019F                     i1l1146:
 13108  019F  0027               	movlb	7	; select bank7
 13109  01A0  1F8E               	btfss	14,7	;volatile
 13110  01A1  29A3               	goto	u382_21
 13111  01A2  29A4               	goto	u382_20
 13112  01A3                     u382_21:
 13113  01A3  29B9               	goto	i1l1152
 13114  01A4                     u382_20:
 13115  01A4                     i1l4146:
 13116                           
 13117                           ;main.c: 382: PWM6_LoadDutyValue(0);
 13118  01A4  3000               	movlw	0
 13119  01A5  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 13120  01A6  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 13121  01A7  318B  230E  3180   	fcall	i1_PWM6_LoadDutyValue
 13122  01AA                     i1l4148:
 13123                           
 13124                           ;main.c: 383: TMR2_StopTimer();
 13125  01AA  318A  2222  3180   	fcall	i1_TMR2_StopTimer
 13126  01AD                     i1l4150:
 13127                           
 13128                           ;main.c: 384: PWM_Output_D4_Disable();
 13129  01AD  318A  2215  3180   	fcall	i1_PWM_Output_D4_Disable
 13130  01B0  29B9               	goto	i1l1152
 13131  01B1                     i1l4152:
 13132                           
 13133                           ;main.c: 388: LCDcmd(0x8F);
 13134  01B1  308F               	movlw	143
 13135  01B2  318A  224E  3180   	fcall	_LCDcmd
 13136                           
 13137                           ;main.c: 389: LCDchar('a');
 13138  01B5  3061               	movlw	97
 13139  01B6  318A  2255  3180   	fcall	_LCDchar
 13140  01B9                     i1l1152:
 13141                           
 13142                           ;main.c: 390: };main.c: 392: LCDcmd(0xc0);
 13143  01B9  30C0               	movlw	192
 13144  01BA  318A  224E  3180   	fcall	_LCDcmd
 13145  01BD                     i1l4154:
 13146                           
 13147                           ;main.c: 393: char tt[4];;main.c: 394: if(editingTempAlarm){
 13148  01BD  0020               	movlb	0	; select bank0
 13149  01BE  085D               	movf	_editingTempAlarm,w
 13150  01BF  1903               	btfsc	3,2
 13151  01C0  29C2               	goto	u383_21
 13152  01C1  29C3               	goto	u383_20
 13153  01C2                     u383_21:
 13154  01C2  29D3               	goto	i1l4158
 13155  01C3                     u383_20:
 13156  01C3                     i1l4156:
 13157                           
 13158                           ;main.c: 395: sprintf(tt, "%02d C", tempAlarm.alarmTemp);
 13159  01C3  3019               	movlw	low (STR_3| (0+32768))
 13160  01C4  00A0               	movwf	sprintf@f
 13161  01C5  3090               	movlw	high (STR_3| (0+32768))
 13162  01C6  00A1               	movwf	sprintf@f+1
 13163  01C7  086A               	movf	_tempAlarm,w
 13164  01C8  00B5               	movwf	??_menuLCD_ISR
 13165  01C9  01B6               	clrf	??_menuLCD_ISR+1
 13166  01CA  0835               	movf	??_menuLCD_ISR,w
 13167  01CB  00A2               	movwf	?_sprintf+2
 13168  01CC  0836               	movf	??_menuLCD_ISR+1,w
 13169  01CD  00A3               	movwf	?_sprintf+3
 13170  01CE  303F               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 13171  01CF  3182  2262  3180   	fcall	_sprintf
 13172                           
 13173                           ;main.c: 396: } else{
 13174  01D2  29E2               	goto	i1l4160
 13175  01D3                     i1l4158:
 13176                           
 13177                           ;main.c: 397: sprintf(tt, "%02d C", temp);
 13178  01D3  3019               	movlw	low (STR_3| (0+32768))
 13179  01D4  00A0               	movwf	sprintf@f
 13180  01D5  3090               	movlw	high (STR_3| (0+32768))
 13181  01D6  00A1               	movwf	sprintf@f+1
 13182  01D7  085F               	movf	_temp,w
 13183  01D8  00B5               	movwf	??_menuLCD_ISR
 13184  01D9  01B6               	clrf	??_menuLCD_ISR+1
 13185  01DA  0835               	movf	??_menuLCD_ISR,w
 13186  01DB  00A2               	movwf	?_sprintf+2
 13187  01DC  0836               	movf	??_menuLCD_ISR+1,w
 13188  01DD  00A3               	movwf	?_sprintf+3
 13189  01DE  303F               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 13190  01DF  3182  2262  3180   	fcall	_sprintf
 13191  01E2                     i1l4160:
 13192                           
 13193                           ;main.c: 398: };main.c: 399: LCDstr(tt);
 13194  01E2  303F               	movlw	(low (menuLCD_ISR@tt| 0))& (0+255)
 13195  01E3  318A  22FA  3180   	fcall	_LCDstr
 13196  01E6                     i1l4162:
 13197                           
 13198                           ;main.c: 401: LCDcmd(0xcd);
 13199  01E6  30CD               	movlw	205
 13200  01E7  318A  224E  3180   	fcall	_LCDcmd
 13201  01EA                     i1l4164:
 13202                           
 13203                           ;main.c: 402: char l[3];;main.c: 404: if(editingLumAlarm){
 13204  01EA  0020               	movlb	0	; select bank0
 13205  01EB  085C               	movf	_editingLumAlarm,w
 13206  01EC  1903               	btfsc	3,2
 13207  01ED  29EF               	goto	u384_21
 13208  01EE  29F0               	goto	u384_20
 13209  01EF                     u384_21:
 13210  01EF  2A00               	goto	i1l4168
 13211  01F0                     u384_20:
 13212  01F0                     i1l4166:
 13213                           
 13214                           ;main.c: 405: sprintf(l, "L %d", lumAlarm.alarmLum);
 13215  01F0  3020               	movlw	low (STR_5| (0+32768))
 13216  01F1  00A0               	movwf	sprintf@f
 13217  01F2  3090               	movlw	high (STR_5| (0+32768))
 13218  01F3  00A1               	movwf	sprintf@f+1
 13219  01F4  0867               	movf	_lumAlarm,w
 13220  01F5  00B5               	movwf	??_menuLCD_ISR
 13221  01F6  01B6               	clrf	??_menuLCD_ISR+1
 13222  01F7  0835               	movf	??_menuLCD_ISR,w
 13223  01F8  00A2               	movwf	?_sprintf+2
 13224  01F9  0836               	movf	??_menuLCD_ISR+1,w
 13225  01FA  00A3               	movwf	?_sprintf+3
 13226  01FB  3043               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 13227  01FC  3182  2262  3180   	fcall	_sprintf
 13228                           
 13229                           ;main.c: 406: } else{
 13230  01FF  2A0F               	goto	i1l4170
 13231  0200                     i1l4168:
 13232                           
 13233                           ;main.c: 407: sprintf(l, "L %d", lumLevel);
 13234  0200  3020               	movlw	low (STR_5| (0+32768))
 13235  0201  00A0               	movwf	sprintf@f
 13236  0202  3090               	movlw	high (STR_5| (0+32768))
 13237  0203  00A1               	movwf	sprintf@f+1
 13238  0204  085E               	movf	_lumLevel,w
 13239  0205  00B5               	movwf	??_menuLCD_ISR
 13240  0206  01B6               	clrf	??_menuLCD_ISR+1
 13241  0207  0835               	movf	??_menuLCD_ISR,w
 13242  0208  00A2               	movwf	?_sprintf+2
 13243  0209  0836               	movf	??_menuLCD_ISR+1,w
 13244  020A  00A3               	movwf	?_sprintf+3
 13245  020B  3043               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 13246  020C  3182  2262  3180   	fcall	_sprintf
 13247  020F                     i1l4170:
 13248                           
 13249                           ;main.c: 408: };main.c: 409: LCDstr(l);
 13250  020F  3043               	movlw	(low (menuLCD_ISR@l| 0))& (0+255)
 13251  0210  318A  22FA  3180   	fcall	_LCDstr
 13252  0213                     i1l4172:
 13253                           
 13254                           ;main.c: 411: if(mode == 1){
 13255  0213  0020               	movlb	0	; select bank0
 13256  0214  0352               	decf	_mode,w
 13257  0215  0453               	iorwf	_mode+1,w
 13258  0216  1D03               	btfss	3,2
 13259  0217  2A19               	goto	u385_21
 13260  0218  2A1A               	goto	u385_20
 13261  0219                     u385_21:
 13262  0219  2A3E               	goto	i1l4186
 13263  021A                     u385_20:
 13264  021A                     i1l4174:
 13265                           
 13266                           ;main.c: 412: if(editingClockAlarm == 1){
 13267  021A  0354               	decf	_editingClockAlarm,w
 13268  021B  0455               	iorwf	_editingClockAlarm+1,w
 13269  021C  1D03               	btfss	3,2
 13270  021D  2A1F               	goto	u386_21
 13271  021E  2A20               	goto	u386_20
 13272  021F                     u386_21:
 13273  021F  2A25               	goto	i1l4178
 13274  0220                     u386_20:
 13275  0220                     i1l4176:
 13276                           
 13277                           ;main.c: 413: LCDcmd(0x81);
 13278  0220  3081               	movlw	129
 13279  0221  318A  224E  3180   	fcall	_LCDcmd
 13280                           
 13281                           ;main.c: 414: } else if(editingClockAlarm == 2){
 13282  0224  2A61               	goto	i1l1169
 13283  0225                     i1l4178:
 13284  0225  3002               	movlw	2
 13285  0226  0654               	xorwf	_editingClockAlarm,w
 13286  0227  0455               	iorwf	_editingClockAlarm+1,w
 13287  0228  1D03               	btfss	3,2
 13288  0229  2A2B               	goto	u387_21
 13289  022A  2A2C               	goto	u387_20
 13290  022B                     u387_21:
 13291  022B  2A31               	goto	i1l4182
 13292  022C                     u387_20:
 13293  022C                     i1l4180:
 13294                           
 13295                           ;main.c: 415: LCDcmd(0x84);
 13296  022C  3084               	movlw	132
 13297  022D  318A  224E  3180   	fcall	_LCDcmd
 13298                           
 13299                           ;main.c: 416: } else if(editingClockAlarm == 3){
 13300  0230  2A61               	goto	i1l1169
 13301  0231                     i1l4182:
 13302  0231  3003               	movlw	3
 13303  0232  0654               	xorwf	_editingClockAlarm,w
 13304  0233  0455               	iorwf	_editingClockAlarm+1,w
 13305  0234  1D03               	btfss	3,2
 13306  0235  2A37               	goto	u388_21
 13307  0236  2A38               	goto	u388_20
 13308  0237                     u388_21:
 13309  0237  2A3D               	goto	i1l1159
 13310  0238                     u388_20:
 13311  0238                     i1l4184:
 13312                           
 13313                           ;main.c: 417: LCDcmd(0x87);
 13314  0238  3087               	movlw	135
 13315  0239  318A  224E  3180   	fcall	_LCDcmd
 13316  023C  2A61               	goto	i1l1169
 13317  023D                     i1l1159:
 13318                           
 13319                           ;main.c: 418: };main.c: 419: } else if(mode == 2){
 13320  023D  2A61               	goto	i1l1169
 13321  023E                     i1l4186:
 13322  023E  3002               	movlw	2
 13323  023F  0652               	xorwf	_mode,w
 13324  0240  0453               	iorwf	_mode+1,w
 13325  0241  1D03               	btfss	3,2
 13326  0242  2A44               	goto	u389_21
 13327  0243  2A45               	goto	u389_20
 13328  0244                     u389_21:
 13329  0244  2A4A               	goto	i1l4190
 13330  0245                     u389_20:
 13331  0245                     i1l4188:
 13332                           
 13333                           ;main.c: 420: LCDcmd(0xc1);
 13334  0245  30C1               	movlw	193
 13335  0246  318A  224E  3180   	fcall	_LCDcmd
 13336                           
 13337                           ;main.c: 421: } else if(mode == 3){
 13338  0249  2A61               	goto	i1l1169
 13339  024A                     i1l4190:
 13340  024A  3003               	movlw	3
 13341  024B  0652               	xorwf	_mode,w
 13342  024C  0453               	iorwf	_mode+1,w
 13343  024D  1D03               	btfss	3,2
 13344  024E  2A50               	goto	u390_21
 13345  024F  2A51               	goto	u390_20
 13346  0250                     u390_21:
 13347  0250  2A56               	goto	i1l4194
 13348  0251                     u390_20:
 13349  0251                     i1l4192:
 13350                           
 13351                           ;main.c: 422: LCDcmd(0xcf);
 13352  0251  30CF               	movlw	207
 13353  0252  318A  224E  3180   	fcall	_LCDcmd
 13354                           
 13355                           ;main.c: 423: } else if(mode == 4){
 13356  0255  2A61               	goto	i1l1169
 13357  0256                     i1l4194:
 13358  0256  3004               	movlw	4
 13359  0257  0652               	xorwf	_mode,w
 13360  0258  0453               	iorwf	_mode+1,w
 13361  0259  1D03               	btfss	3,2
 13362  025A  2A5C               	goto	u391_21
 13363  025B  2A5D               	goto	u391_20
 13364  025C                     u391_21:
 13365  025C  2A61               	goto	i1l1169
 13366  025D                     u391_20:
 13367  025D                     i1l4196:
 13368                           
 13369                           ;main.c: 424: LCDcmd(0x8f);
 13370  025D  308F               	movlw	143
 13371  025E  318A  224E  3180   	fcall	_LCDcmd
 13372  0261                     i1l1169:
 13373  0261  0008               	return
 13374  0262                     __end_of_menuLCD_ISR:
 13375                           
 13376                           	psect	text38
 13377  0A22                     __ptext38:	
 13378 ;; *************** function i1_TMR2_StopTimer *****************
 13379 ;; Defined at:
 13380 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 13381 ;; Parameters:    Size  Location     Type
 13382 ;;		None
 13383 ;; Auto vars:     Size  Location     Type
 13384 ;;		None
 13385 ;; Return value:  Size  Location     Type
 13386 ;;                  1    wreg      void 
 13387 ;; Registers used:
 13388 ;;		status,2, status,0, pclath, cstack
 13389 ;; Tracked objects:
 13390 ;;		On entry : 0/0
 13391 ;;		On exit  : 0/0
 13392 ;;		Unchanged: 0/0
 13393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13398 ;;Total ram usage:        0 bytes
 13399 ;; Hardware stack levels used:    1
 13400 ;; Hardware stack levels required when called:    1
 13401 ;; This function calls:
 13402 ;;		i1_TMR2_Stop
 13403 ;; This function is called by:
 13404 ;;		_menuLCD_ISR
 13405 ;; This function uses a non-reentrant model
 13406 ;;
 13407                           
 13408                           
 13409                           ;psect for function i1_TMR2_StopTimer
 13410  0A22                     i1_TMR2_StopTimer:
 13411  0A22                     i1l3824:	
 13412                           ;incstack = 0
 13413                           ; Regs used in i1_TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 13414                           
 13415                           
 13416                           ;tmr2.c: 119: TMR2_Stop();
 13417  0A22  318A  2218  318A   	fcall	i1_TMR2_Stop
 13418  0A25                     i1l767:
 13419  0A25  0008               	return
 13420  0A26                     __end_ofi1_TMR2_StopTimer:
 13421                           
 13422                           	psect	text39
 13423  0A18                     __ptext39:	
 13424 ;; *************** function i1_TMR2_Stop *****************
 13425 ;; Defined at:
 13426 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 13427 ;; Parameters:    Size  Location     Type
 13428 ;;		None
 13429 ;; Auto vars:     Size  Location     Type
 13430 ;;		None
 13431 ;; Return value:  Size  Location     Type
 13432 ;;                  1    wreg      void 
 13433 ;; Registers used:
 13434 ;;		None
 13435 ;; Tracked objects:
 13436 ;;		On entry : 0/0
 13437 ;;		On exit  : 0/0
 13438 ;;		Unchanged: 0/0
 13439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13444 ;;Total ram usage:        0 bytes
 13445 ;; Hardware stack levels used:    1
 13446 ;; This function calls:
 13447 ;;		Nothing
 13448 ;; This function is called by:
 13449 ;;		i1_TMR2_StopTimer
 13450 ;; This function uses a non-reentrant model
 13451 ;;
 13452                           
 13453                           
 13454                           ;psect for function i1_TMR2_Stop
 13455  0A18                     i1_TMR2_Stop:
 13456  0A18                     i1l3584:	
 13457                           ;incstack = 0
 13458                           ; Regs used in i1_TMR2_Stop: []
 13459                           
 13460                           
 13461                           ;tmr2.c: 114: T2CONbits.TMR2ON = 0;
 13462  0A18  0025               	movlb	5	; select bank5
 13463  0A19  138E               	bcf	14,7	;volatile
 13464  0A1A                     i1l764:
 13465  0A1A  0008               	return
 13466  0A1B                     __end_ofi1_TMR2_Stop:
 13467                           
 13468                           	psect	text40
 13469  0A15                     __ptext40:	
 13470 ;; *************** function i1_PWM_Output_D4_Disable *****************
 13471 ;; Defined at:
 13472 ;;		line 230 in file "main.c"
 13473 ;; Parameters:    Size  Location     Type
 13474 ;;		None
 13475 ;; Auto vars:     Size  Location     Type
 13476 ;;		None
 13477 ;; Return value:  Size  Location     Type
 13478 ;;                  1    wreg      void 
 13479 ;; Registers used:
 13480 ;;		None
 13481 ;; Tracked objects:
 13482 ;;		On entry : 0/0
 13483 ;;		On exit  : 0/0
 13484 ;;		Unchanged: 0/0
 13485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13490 ;;Total ram usage:        0 bytes
 13491 ;; Hardware stack levels used:    1
 13492 ;; This function calls:
 13493 ;;		Nothing
 13494 ;; This function is called by:
 13495 ;;		_menuLCD_ISR
 13496 ;; This function uses a non-reentrant model
 13497 ;;
 13498                           
 13499                           
 13500                           ;psect for function i1_PWM_Output_D4_Disable
 13501  0A15                     i1_PWM_Output_D4_Disable:
 13502  0A15                     i1l3826:	
 13503                           ;incstack = 0
 13504                           ; Regs used in i1_PWM_Output_D4_Disable: []
 13505                           
 13506                           
 13507                           ;main.c: 231: PWM6EN = 0;
 13508  0A15  0027               	movlb	7	; select bank7
 13509  0A16  138E               	bcf	14,7	;volatile
 13510  0A17                     i1l1090:
 13511  0A17  0008               	return
 13512  0A18                     __end_ofi1_PWM_Output_D4_Disable:
 13513                           
 13514                           	psect	text41
 13515  0B0E                     __ptext41:	
 13516 ;; *************** function i1_PWM6_LoadDutyValue *****************
 13517 ;; Defined at:
 13518 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 13519 ;; Parameters:    Size  Location     Type
 13520 ;;  dutyValue       2    0[COMMON] unsigned int 
 13521 ;; Auto vars:     Size  Location     Type
 13522 ;;		None
 13523 ;; Return value:  Size  Location     Type
 13524 ;;                  1    wreg      void 
 13525 ;; Registers used:
 13526 ;;		wreg, status,2, status,0
 13527 ;; Tracked objects:
 13528 ;;		On entry : 0/0
 13529 ;;		On exit  : 0/0
 13530 ;;		Unchanged: 0/0
 13531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13534 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13535 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13536 ;;Total ram usage:        4 bytes
 13537 ;; Hardware stack levels used:    1
 13538 ;; This function calls:
 13539 ;;		Nothing
 13540 ;; This function is called by:
 13541 ;;		_menuLCD_ISR
 13542 ;; This function uses a non-reentrant model
 13543 ;;
 13544                           
 13545                           
 13546                           ;psect for function i1_PWM6_LoadDutyValue
 13547  0B0E                     i1_PWM6_LoadDutyValue:
 13548  0B0E                     i1l3822:	
 13549                           ;incstack = 0
 13550                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 13551                           
 13552                           
 13553                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 13554  0B0E  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 13555  0B0F  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 13556  0B10  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 13557  0B11  00F2               	movwf	??i1_PWM6_LoadDutyValue
 13558  0B12  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 13559  0B13  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 13560  0B14  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 13561  0B15  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 13562  0B16  0872               	movf	??i1_PWM6_LoadDutyValue,w
 13563  0B17  0027               	movlb	7	; select bank7
 13564  0B18  008D               	movwf	13	;volatile
 13565                           
 13566                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 13567  0B19  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 13568  0B1A  3903               	andlw	3
 13569  0B1B  00F2               	movwf	??i1_PWM6_LoadDutyValue
 13570  0B1C  3005               	movlw	5
 13571  0B1D                     u337_25:
 13572  0B1D  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 13573  0B1E  3EFF               	addlw	-1
 13574  0B1F  1D03               	skipz
 13575  0B20  2B1D               	goto	u337_25
 13576  0B21  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 13577  0B22  008C               	movwf	12	;volatile
 13578  0B23                     i1l722:
 13579  0B23  0008               	return
 13580  0B24                     __end_ofi1_PWM6_LoadDutyValue:
 13581                           
 13582                           	psect	text42
 13583  0262                     __ptext42:	
 13584 ;; *************** function _sprintf *****************
 13585 ;; Defined at:
 13586 ;;		line 505 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
 13587 ;; Parameters:    Size  Location     Type
 13588 ;;  sp              1    wreg     PTR unsigned char 
 13589 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 13590 ;;  f               2    0[BANK0 ] PTR const unsigned char 
 13591 ;;		 -> STR_6(5), STR_5(5), STR_4(7), STR_3(7), 
 13592 ;;		 -> STR_2(15), STR_1(15), 
 13593 ;; Auto vars:     Size  Location     Type
 13594 ;;  sp              1   20[BANK0 ] PTR unsigned char 
 13595 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 13596 ;;  tmpval          4    0        struct .
 13597 ;;  width           2   17[BANK0 ] int 
 13598 ;;  val             2   14[BANK0 ] unsigned int 
 13599 ;;  cp              2    0        PTR const unsigned char 
 13600 ;;  len             2    0        unsigned int 
 13601 ;;  c               1   19[BANK0 ] unsigned char 
 13602 ;;  flag            1   16[BANK0 ] unsigned char 
 13603 ;;  prec            1   13[BANK0 ] char 
 13604 ;;  ap              1   12[BANK0 ] PTR void [1]
 13605 ;;		 -> ?_sprintf(2), 
 13606 ;; Return value:  Size  Location     Type
 13607 ;;                  2    0[BANK0 ] int 
 13608 ;; Registers used:
 13609 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13610 ;; Tracked objects:
 13611 ;;		On entry : 0/0
 13612 ;;		On exit  : 0/0
 13613 ;;		Unchanged: 0/0
 13614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13615 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13616 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13617 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13618 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13619 ;;Total ram usage:       21 bytes
 13620 ;; Hardware stack levels used:    1
 13621 ;; Hardware stack levels required when called:    1
 13622 ;; This function calls:
 13623 ;;		___lwdiv
 13624 ;;		___lwmod
 13625 ;;		___wmul
 13626 ;;		_isdigit
 13627 ;; This function is called by:
 13628 ;;		_menuLCD_ISR
 13629 ;; This function uses a non-reentrant model
 13630 ;;
 13631                           
 13632                           
 13633                           ;psect for function _sprintf
 13634  0262                     _sprintf:
 13635                           
 13636                           ;incstack = 0
 13637                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13638                           ;sprintf@sp stored from wreg
 13639  0262  0020               	movlb	0	; select bank0
 13640  0263  00B4               	movwf	sprintf@sp
 13641  0264                     i1l3712:
 13642                           
 13643                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 13644  0264  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 13645  0265  00A8               	movwf	??_sprintf
 13646  0266  0828               	movf	??_sprintf,w
 13647  0267  00AC               	movwf	sprintf@ap
 13648                           
 13649                           ;doprnt.c: 553: while((c = *f++)) {
 13650  0268  2BE6               	goto	i1l3816
 13651  0269                     i1l3714:
 13652                           
 13653                           ;doprnt.c: 555: if(c != '%')
 13654  0269  3025               	movlw	37
 13655  026A  0633               	xorwf	sprintf@c,w
 13656  026B  1903               	btfsc	3,2
 13657  026C  2A6E               	goto	u319_21
 13658  026D  2A6F               	goto	u319_20
 13659  026E                     u319_21:
 13660  026E  2A7B               	goto	i1l3720
 13661  026F                     u319_20:
 13662  026F                     i1l3716:
 13663                           
 13664                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 13665  026F  0833               	movf	sprintf@c,w
 13666  0270  00A8               	movwf	??_sprintf
 13667  0271  0834               	movf	sprintf@sp,w
 13668  0272  0086               	movwf	6
 13669  0273  0187               	clrf	7
 13670  0274  0828               	movf	??_sprintf,w
 13671  0275  0081               	movwf	1
 13672  0276                     i1l3718:
 13673  0276  3001               	movlw	1
 13674  0277  00A8               	movwf	??_sprintf
 13675  0278  0828               	movf	??_sprintf,w
 13676  0279  07B4               	addwf	sprintf@sp,f
 13677                           
 13678                           ;doprnt.c: 559: continue;
 13679  027A  2BE6               	goto	i1l3816
 13680  027B                     i1l3720:
 13681                           
 13682                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 13683  027B  01B1               	clrf	sprintf@width
 13684  027C  01B2               	clrf	sprintf@width+1
 13685                           
 13686                           ;doprnt.c: 565: flag = 0;
 13687  027D  01B0               	clrf	sprintf@flag
 13688  027E  2A84               	goto	i1l3726
 13689  027F                     i1l1432:	
 13690                           ;doprnt.c: 596: case '0':
 13691                           
 13692                           
 13693                           ;doprnt.c: 597: flag |= 0x04;
 13694  027F  1530               	bsf	sprintf@flag,2
 13695  0280                     i1l3722:
 13696                           
 13697                           ;doprnt.c: 598: f++;
 13698  0280  3001               	movlw	1
 13699  0281  07A0               	addwf	sprintf@f,f
 13700  0282  3000               	movlw	0
 13701  0283  3DA1               	addwfc	sprintf@f+1,f
 13702  0284                     i1l3726:	
 13703                           ;doprnt.c: 599: continue;
 13704                           
 13705  0284  0820               	movf	sprintf@f,w
 13706  0285  0084               	movwf	4
 13707  0286  0821               	movf	sprintf@f+1,w
 13708  0287  0085               	movwf	5
 13709  0288  0800               	movf	0,w	;code access
 13710                           
 13711                           ; Switch size 1, requested type "simple"
 13712                           ; Number of cases is 1, Range of values is 48 to 48
 13713                           ; switch strategies available:
 13714                           ; Name         Instructions Cycles
 13715                           ; simple_byte            4     3 (average)
 13716                           ; direct_byte           11     9 (fixed)
 13717                           ; jumptable            263     9 (fixed)
 13718                           ;	Chosen strategy is simple_byte
 13719  0289  3A30               	xorlw	48	; case 48
 13720  028A  1903               	skipnz
 13721  028B  2A7F               	goto	i1l1432
 13722  028C  2A8D               	goto	i1l3728
 13723  028D                     i1l3728:
 13724                           
 13725                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 13726  028D  0820               	movf	sprintf@f,w
 13727  028E  0084               	movwf	4
 13728  028F  0821               	movf	sprintf@f+1,w
 13729  0290  0085               	movwf	5
 13730  0291  0800               	movf	0,w	;code access
 13731  0292  318A  22D6  3182   	fcall	_isdigit
 13732  0295  1C03               	btfss	3,0
 13733  0296  2A98               	goto	u320_21
 13734  0297  2A99               	goto	u320_20
 13735  0298                     u320_21:
 13736  0298  2ACC               	goto	i1l3742
 13737  0299                     u320_20:
 13738  0299                     i1l3730:
 13739                           
 13740                           ;doprnt.c: 615: width = 0;
 13741  0299  0020               	movlb	0	; select bank0
 13742  029A  01B1               	clrf	sprintf@width
 13743  029B  01B2               	clrf	sprintf@width+1
 13744  029C                     i1l3732:
 13745                           
 13746                           ;doprnt.c: 617: width *= 10;
 13747  029C  300A               	movlw	10
 13748  029D  00F0               	movwf	___wmul@multiplier
 13749  029E  3000               	movlw	0
 13750  029F  00F1               	movwf	___wmul@multiplier+1
 13751  02A0  0020               	movlb	0	; select bank0
 13752  02A1  0832               	movf	sprintf@width+1,w
 13753  02A2  00F3               	movwf	___wmul@multiplicand+1
 13754  02A3  0831               	movf	sprintf@width,w
 13755  02A4  00F2               	movwf	___wmul@multiplicand
 13756  02A5  318B  23CF  3182   	fcall	___wmul
 13757  02A8  0871               	movf	?___wmul+1,w
 13758  02A9  0020               	movlb	0	; select bank0
 13759  02AA  00B2               	movwf	sprintf@width+1
 13760  02AB  0870               	movf	?___wmul,w
 13761  02AC  00B1               	movwf	sprintf@width
 13762  02AD                     i1l3734:
 13763                           
 13764                           ;doprnt.c: 618: width += *f++ - '0';
 13765  02AD  0820               	movf	sprintf@f,w
 13766  02AE  0084               	movwf	4
 13767  02AF  0821               	movf	sprintf@f+1,w
 13768  02B0  0085               	movwf	5
 13769  02B1  0800               	movf	0,w	;code access
 13770  02B2  3ED0               	addlw	208
 13771  02B3  00A8               	movwf	??_sprintf
 13772  02B4  30FF               	movlw	255
 13773  02B5  1803               	skipnc
 13774  02B6  3000               	movlw	0
 13775  02B7  00A9               	movwf	??_sprintf+1
 13776  02B8  0828               	movf	??_sprintf,w
 13777  02B9  07B1               	addwf	sprintf@width,f
 13778  02BA  0829               	movf	??_sprintf+1,w
 13779  02BB  3DB2               	addwfc	sprintf@width+1,f
 13780  02BC                     i1l3736:
 13781  02BC  3001               	movlw	1
 13782  02BD  07A0               	addwf	sprintf@f,f
 13783  02BE  3000               	movlw	0
 13784  02BF  3DA1               	addwfc	sprintf@f+1,f
 13785  02C0                     i1l3738:
 13786                           
 13787                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 13788  02C0  0820               	movf	sprintf@f,w
 13789  02C1  0084               	movwf	4
 13790  02C2  0821               	movf	sprintf@f+1,w
 13791  02C3  0085               	movwf	5
 13792  02C4  0800               	movf	0,w	;code access
 13793  02C5  318A  22D6  3182   	fcall	_isdigit
 13794  02C8  1803               	btfsc	3,0
 13795  02C9  2ACB               	goto	u321_21
 13796  02CA  2ACC               	goto	u321_20
 13797  02CB                     u321_21:
 13798  02CB  2A9C               	goto	i1l3732
 13799  02CC                     u321_20:
 13800  02CC                     i1l3742:
 13801  02CC  0020               	movlb	0	; select bank0
 13802  02CD  0821               	movf	sprintf@f+1,w
 13803  02CE  00A9               	movwf	??_sprintf+1
 13804  02CF  0820               	movf	sprintf@f,w
 13805  02D0  00A8               	movwf	??_sprintf
 13806  02D1  0AA0               	incf	sprintf@f,f
 13807  02D2  1903               	skipnz
 13808  02D3  0AA1               	incf	sprintf@f+1,f
 13809  02D4  0828               	movf	??_sprintf,w
 13810  02D5  0084               	movwf	4
 13811  02D6  0829               	movf	??_sprintf+1,w
 13812  02D7  0085               	movwf	5
 13813  02D8  0800               	movf	0,w	;code access
 13814  02D9  00B3               	movwf	sprintf@c
 13815                           
 13816                           ; Switch size 1, requested type "simple"
 13817                           ; Number of cases is 3, Range of values is 0 to 105
 13818                           ; switch strategies available:
 13819                           ; Name         Instructions Cycles
 13820                           ; simple_byte           10     6 (average)
 13821                           ; direct_byte          218     6 (fixed)
 13822                           ; jumptable            260     6 (fixed)
 13823                           ;	Chosen strategy is simple_byte
 13824  02DA  3A00               	xorlw	0	; case 0
 13825  02DB  1903               	skipnz
 13826  02DC  2BFA               	goto	i1l3818
 13827  02DD  3A64               	xorlw	100	; case 100
 13828  02DE  1903               	skipnz
 13829  02DF  2AE4               	goto	i1l3744
 13830  02E0  3A0D               	xorlw	13	; case 105
 13831  02E1  1903               	skipnz
 13832  02E2  2AE4               	goto	i1l3744
 13833  02E3  2BE6               	goto	i1l3816
 13834  02E4                     i1l3744:
 13835                           
 13836                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 13837  02E4  082C               	movf	sprintf@ap,w
 13838  02E5  0086               	movwf	6
 13839  02E6  0187               	clrf	7
 13840  02E7  3F40               	moviw [0]fsr1
 13841  02E8  00AE               	movwf	sprintf@val
 13842  02E9  3F41               	moviw [1]fsr1
 13843  02EA  00AF               	movwf	sprintf@val+1
 13844  02EB                     i1l3746:
 13845  02EB  3002               	movlw	2
 13846  02EC  00A8               	movwf	??_sprintf
 13847  02ED  0828               	movf	??_sprintf,w
 13848  02EE  07AC               	addwf	sprintf@ap,f
 13849  02EF                     i1l3748:
 13850                           
 13851                           ;doprnt.c: 1287: if((int)val < 0) {
 13852  02EF  1FAF               	btfss	sprintf@val+1,7
 13853  02F0  2AF2               	goto	u322_21
 13854  02F1  2AF3               	goto	u322_20
 13855  02F2                     u322_21:
 13856  02F2  2AFC               	goto	i1l3754
 13857  02F3                     u322_20:
 13858  02F3                     i1l3750:
 13859                           
 13860                           ;doprnt.c: 1288: flag |= 0x03;
 13861  02F3  3003               	movlw	3
 13862  02F4  00A8               	movwf	??_sprintf
 13863  02F5  0828               	movf	??_sprintf,w
 13864  02F6  04B0               	iorwf	sprintf@flag,f
 13865  02F7                     i1l3752:
 13866                           
 13867                           ;doprnt.c: 1289: val = -val;
 13868  02F7  09AE               	comf	sprintf@val,f
 13869  02F8  09AF               	comf	sprintf@val+1,f
 13870  02F9  0AAE               	incf	sprintf@val,f
 13871  02FA  1903               	skipnz
 13872  02FB  0AAF               	incf	sprintf@val+1,f
 13873  02FC                     i1l3754:
 13874                           
 13875                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 13876  02FC  01B3               	clrf	sprintf@c
 13877  02FD  0AB3               	incf	sprintf@c,f
 13878  02FE                     i1l3760:
 13879                           
 13880                           ;doprnt.c: 1332: if(val < dpowers[c])
 13881  02FE  0833               	movf	sprintf@c,w
 13882  02FF  00A8               	movwf	??_sprintf
 13883  0300  01A9               	clrf	??_sprintf+1
 13884  0301  35A8               	lslf	??_sprintf,f
 13885  0302  0DA9               	rlf	??_sprintf+1,f
 13886  0303  300F               	movlw	low (_dpowers| (0+32768))
 13887  0304  0728               	addwf	??_sprintf,w
 13888  0305  0084               	movwf	4
 13889  0306  3090               	movlw	high (_dpowers| (0+32768))
 13890  0307  3D29               	addwfc	??_sprintf+1,w
 13891  0308  0085               	movwf	5
 13892  0309  3F00               	moviw [0]fsr0
 13893  030A  00AA               	movwf	??_sprintf+2
 13894  030B  3F01               	moviw [1]fsr0
 13895  030C  00AB               	movwf	??_sprintf+3
 13896  030D  082B               	movf	??_sprintf+3,w
 13897  030E  022F               	subwf	sprintf@val+1,w
 13898  030F  1D03               	skipz
 13899  0310  2B13               	goto	u323_25
 13900  0311  082A               	movf	??_sprintf+2,w
 13901  0312  022E               	subwf	sprintf@val,w
 13902  0313                     u323_25:
 13903  0313  1803               	skipnc
 13904  0314  2B16               	goto	u323_21
 13905  0315  2B17               	goto	u323_20
 13906  0316                     u323_21:
 13907  0316  2B18               	goto	i1l3764
 13908  0317                     u323_20:
 13909  0317  2B22               	goto	i1l3766
 13910  0318                     i1l3764:
 13911  0318  3001               	movlw	1
 13912  0319  00A8               	movwf	??_sprintf
 13913  031A  0828               	movf	??_sprintf,w
 13914  031B  07B3               	addwf	sprintf@c,f
 13915  031C  3005               	movlw	5
 13916  031D  0633               	xorwf	sprintf@c,w
 13917  031E  1D03               	btfss	3,2
 13918  031F  2B21               	goto	u324_21
 13919  0320  2B22               	goto	u324_20
 13920  0321                     u324_21:
 13921  0321  2AFE               	goto	i1l3760
 13922  0322                     u324_20:
 13923  0322                     i1l3766:
 13924                           
 13925                           ;doprnt.c: 1371: if(width && flag & 0x03)
 13926  0322  0831               	movf	sprintf@width,w
 13927  0323  0432               	iorwf	sprintf@width+1,w
 13928  0324  1903               	btfsc	3,2
 13929  0325  2B27               	goto	u325_21
 13930  0326  2B28               	goto	u325_20
 13931  0327                     u325_21:
 13932  0327  2B32               	goto	i1l1450
 13933  0328                     u325_20:
 13934  0328                     i1l3768:
 13935  0328  0830               	movf	sprintf@flag,w
 13936  0329  3903               	andlw	3
 13937  032A  1903               	btfsc	3,2
 13938  032B  2B2D               	goto	u326_21
 13939  032C  2B2E               	goto	u326_20
 13940  032D                     u326_21:
 13941  032D  2B32               	goto	i1l1450
 13942  032E                     u326_20:
 13943  032E                     i1l3770:
 13944                           
 13945                           ;doprnt.c: 1372: width--;
 13946  032E  30FF               	movlw	255
 13947  032F  07B1               	addwf	sprintf@width,f
 13948  0330  30FF               	movlw	255
 13949  0331  3DB2               	addwfc	sprintf@width+1,f
 13950  0332                     i1l1450:
 13951                           
 13952                           ;doprnt.c: 1407: if(width > c)
 13953  0332  0832               	movf	sprintf@width+1,w
 13954  0333  3A80               	xorlw	128
 13955  0334  3C80               	sublw	128
 13956  0335  1D03               	skipz
 13957  0336  2B39               	goto	u327_25
 13958  0337  0831               	movf	sprintf@width,w
 13959  0338  0233               	subwf	sprintf@c,w
 13960  0339                     u327_25:
 13961  0339  1803               	skipnc
 13962  033A  2B3C               	goto	u327_21
 13963  033B  2B3D               	goto	u327_20
 13964  033C                     u327_21:
 13965  033C  2B46               	goto	i1l3774
 13966  033D                     u327_20:
 13967  033D                     i1l3772:
 13968                           
 13969                           ;doprnt.c: 1408: width -= c;
 13970  033D  0020               	movlb	0	; select bank0
 13971  033E  0833               	movf	sprintf@c,w
 13972  033F  00A8               	movwf	??_sprintf
 13973  0340  01A9               	clrf	??_sprintf+1
 13974  0341  0828               	movf	??_sprintf,w
 13975  0342  02B1               	subwf	sprintf@width,f
 13976  0343  0829               	movf	??_sprintf+1,w
 13977  0344  3BB2               	subwfb	sprintf@width+1,f
 13978  0345  2B49               	goto	i1l3776
 13979  0346                     i1l3774:
 13980                           
 13981                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 13982  0346  0020               	movlb	0	; select bank0
 13983  0347  01B1               	clrf	sprintf@width
 13984  0348  01B2               	clrf	sprintf@width+1
 13985  0349                     i1l3776:
 13986                           
 13987                           ;doprnt.c: 1413: if(flag & 0x04) {
 13988  0349  1D30               	btfss	sprintf@flag,2
 13989  034A  2B4C               	goto	u328_21
 13990  034B  2B4D               	goto	u328_20
 13991  034C                     u328_21:
 13992  034C  2B7A               	goto	i1l3792
 13993  034D                     u328_20:
 13994  034D                     i1l3778:
 13995                           
 13996                           ;doprnt.c: 1418: if(flag & 0x03)
 13997  034D  0830               	movf	sprintf@flag,w
 13998  034E  3903               	andlw	3
 13999  034F  1903               	btfsc	3,2
 14000  0350  2B52               	goto	u329_21
 14001  0351  2B53               	goto	u329_20
 14002  0352                     u329_21:
 14003  0352  2B5E               	goto	i1l3784
 14004  0353                     u329_20:
 14005  0353                     i1l3780:
 14006                           
 14007                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 14008  0353  302D               	movlw	45
 14009  0354  00A8               	movwf	??_sprintf
 14010  0355  0834               	movf	sprintf@sp,w
 14011  0356  0086               	movwf	6
 14012  0357  0187               	clrf	7
 14013  0358  0828               	movf	??_sprintf,w
 14014  0359  0081               	movwf	1
 14015  035A                     i1l3782:
 14016  035A  3001               	movlw	1
 14017  035B  00A8               	movwf	??_sprintf
 14018  035C  0828               	movf	??_sprintf,w
 14019  035D  07B4               	addwf	sprintf@sp,f
 14020  035E                     i1l3784:
 14021                           
 14022                           ;doprnt.c: 1441: if(width)
 14023  035E  0831               	movf	sprintf@width,w
 14024  035F  0432               	iorwf	sprintf@width+1,w
 14025  0360  1903               	btfsc	3,2
 14026  0361  2B63               	goto	u330_21
 14027  0362  2B64               	goto	u330_20
 14028  0363                     u330_21:
 14029  0363  2BA6               	goto	i1l3806
 14030  0364                     u330_20:
 14031  0364                     i1l3786:
 14032                           
 14033                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 14034  0364  3030               	movlw	48
 14035  0365  00A8               	movwf	??_sprintf
 14036  0366  0834               	movf	sprintf@sp,w
 14037  0367  0086               	movwf	6
 14038  0368  0187               	clrf	7
 14039  0369  0828               	movf	??_sprintf,w
 14040  036A  0081               	movwf	1
 14041  036B                     i1l3788:
 14042  036B  3001               	movlw	1
 14043  036C  00A8               	movwf	??_sprintf
 14044  036D  0828               	movf	??_sprintf,w
 14045  036E  07B4               	addwf	sprintf@sp,f
 14046  036F                     i1l3790:
 14047                           
 14048                           ;doprnt.c: 1444: while(--width);
 14049  036F  30FF               	movlw	255
 14050  0370  07B1               	addwf	sprintf@width,f
 14051  0371  30FF               	movlw	255
 14052  0372  3DB2               	addwfc	sprintf@width+1,f
 14053  0373  0831               	movf	sprintf@width,w
 14054  0374  0432               	iorwf	sprintf@width+1,w
 14055  0375  1D03               	btfss	3,2
 14056  0376  2B78               	goto	u331_21
 14057  0377  2B79               	goto	u331_20
 14058  0378                     u331_21:
 14059  0378  2B64               	goto	i1l3786
 14060  0379                     u331_20:
 14061  0379  2BA6               	goto	i1l3806
 14062  037A                     i1l3792:
 14063                           
 14064                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 14065  037A  0831               	movf	sprintf@width,w
 14066  037B  0432               	iorwf	sprintf@width+1,w
 14067  037C  1903               	btfsc	3,2
 14068  037D  2B7F               	goto	u332_21
 14069  037E  2B80               	goto	u332_20
 14070  037F                     u332_21:
 14071  037F  2B95               	goto	i1l3800
 14072  0380                     u332_20:
 14073  0380                     i1l3794:
 14074                           
 14075                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 14076  0380  3020               	movlw	32
 14077  0381  00A8               	movwf	??_sprintf
 14078  0382  0834               	movf	sprintf@sp,w
 14079  0383  0086               	movwf	6
 14080  0384  0187               	clrf	7
 14081  0385  0828               	movf	??_sprintf,w
 14082  0386  0081               	movwf	1
 14083  0387                     i1l3796:
 14084  0387  3001               	movlw	1
 14085  0388  00A8               	movwf	??_sprintf
 14086  0389  0828               	movf	??_sprintf,w
 14087  038A  07B4               	addwf	sprintf@sp,f
 14088  038B                     i1l3798:
 14089                           
 14090                           ;doprnt.c: 1457: while(--width);
 14091  038B  30FF               	movlw	255
 14092  038C  07B1               	addwf	sprintf@width,f
 14093  038D  30FF               	movlw	255
 14094  038E  3DB2               	addwfc	sprintf@width+1,f
 14095  038F  0831               	movf	sprintf@width,w
 14096  0390  0432               	iorwf	sprintf@width+1,w
 14097  0391  1D03               	btfss	3,2
 14098  0392  2B94               	goto	u333_21
 14099  0393  2B95               	goto	u333_20
 14100  0394                     u333_21:
 14101  0394  2B80               	goto	i1l3794
 14102  0395                     u333_20:
 14103  0395                     i1l3800:
 14104                           
 14105                           ;doprnt.c: 1464: if(flag & 0x03)
 14106  0395  0830               	movf	sprintf@flag,w
 14107  0396  3903               	andlw	3
 14108  0397  1903               	btfsc	3,2
 14109  0398  2B9A               	goto	u334_21
 14110  0399  2B9B               	goto	u334_20
 14111  039A                     u334_21:
 14112  039A  2BA6               	goto	i1l3806
 14113  039B                     u334_20:
 14114  039B                     i1l3802:
 14115                           
 14116                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 14117  039B  302D               	movlw	45
 14118  039C  00A8               	movwf	??_sprintf
 14119  039D  0834               	movf	sprintf@sp,w
 14120  039E  0086               	movwf	6
 14121  039F  0187               	clrf	7
 14122  03A0  0828               	movf	??_sprintf,w
 14123  03A1  0081               	movwf	1
 14124  03A2                     i1l3804:
 14125  03A2  3001               	movlw	1
 14126  03A3  00A8               	movwf	??_sprintf
 14127  03A4  0828               	movf	??_sprintf,w
 14128  03A5  07B4               	addwf	sprintf@sp,f
 14129  03A6                     i1l3806:
 14130                           
 14131                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 14132  03A6  0833               	movf	sprintf@c,w
 14133  03A7  00A8               	movwf	??_sprintf
 14134  03A8  0828               	movf	??_sprintf,w
 14135  03A9  00AD               	movwf	sprintf@prec
 14136                           
 14137                           ;doprnt.c: 1500: while(prec--) {
 14138  03AA  2BDD               	goto	i1l3814
 14139  03AB                     i1l3808:
 14140                           
 14141                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 14142  03AB  300A               	movlw	10
 14143  03AC  00F8               	movwf	___lwmod@divisor
 14144  03AD  3000               	movlw	0
 14145  03AE  00F9               	movwf	___lwmod@divisor+1
 14146  03AF  082D               	movf	sprintf@prec,w
 14147  03B0  00A8               	movwf	??_sprintf
 14148  03B1  01A9               	clrf	??_sprintf+1
 14149  03B2  35A8               	lslf	??_sprintf,f
 14150  03B3  0DA9               	rlf	??_sprintf+1,f
 14151  03B4  300F               	movlw	low (_dpowers| (0+32768))
 14152  03B5  0728               	addwf	??_sprintf,w
 14153  03B6  0084               	movwf	4
 14154  03B7  3090               	movlw	high (_dpowers| (0+32768))
 14155  03B8  3D29               	addwfc	??_sprintf+1,w
 14156  03B9  0085               	movwf	5
 14157  03BA  3F00               	moviw [0]fsr0
 14158  03BB  00F0               	movwf	___lwdiv@divisor
 14159  03BC  3F01               	moviw [1]fsr0
 14160  03BD  00F1               	movwf	___lwdiv@divisor+1
 14161  03BE  082F               	movf	sprintf@val+1,w
 14162  03BF  00F3               	movwf	___lwdiv@dividend+1
 14163  03C0  082E               	movf	sprintf@val,w
 14164  03C1  00F2               	movwf	___lwdiv@dividend
 14165  03C2  318D  2522  3182   	fcall	___lwdiv
 14166  03C5  0871               	movf	?___lwdiv+1,w
 14167  03C6  00FB               	movwf	___lwmod@dividend+1
 14168  03C7  0870               	movf	?___lwdiv,w
 14169  03C8  00FA               	movwf	___lwmod@dividend
 14170  03C9  318C  247C  3182   	fcall	___lwmod
 14171  03CC  0878               	movf	?___lwmod,w
 14172  03CD  3E30               	addlw	48
 14173  03CE  0020               	movlb	0	; select bank0
 14174  03CF  00AA               	movwf	??_sprintf+2
 14175  03D0  082A               	movf	??_sprintf+2,w
 14176  03D1  00B3               	movwf	sprintf@c
 14177  03D2                     i1l3810:
 14178                           
 14179                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 14180  03D2  0833               	movf	sprintf@c,w
 14181  03D3  00A8               	movwf	??_sprintf
 14182  03D4  0834               	movf	sprintf@sp,w
 14183  03D5  0086               	movwf	6
 14184  03D6  0187               	clrf	7
 14185  03D7  0828               	movf	??_sprintf,w
 14186  03D8  0081               	movwf	1
 14187  03D9                     i1l3812:
 14188  03D9  3001               	movlw	1
 14189  03DA  00A8               	movwf	??_sprintf
 14190  03DB  0828               	movf	??_sprintf,w
 14191  03DC  07B4               	addwf	sprintf@sp,f
 14192  03DD                     i1l3814:
 14193  03DD  30FF               	movlw	255
 14194  03DE  00A8               	movwf	??_sprintf
 14195  03DF  0828               	movf	??_sprintf,w
 14196  03E0  07AD               	addwf	sprintf@prec,f
 14197  03E1  0A2D               	incf	sprintf@prec,w
 14198  03E2  1D03               	btfss	3,2
 14199  03E3  2BE5               	goto	u335_21
 14200  03E4  2BE6               	goto	u335_20
 14201  03E5                     u335_21:
 14202  03E5  2BAB               	goto	i1l3808
 14203  03E6                     u335_20:
 14204  03E6                     i1l3816:
 14205  03E6  0821               	movf	sprintf@f+1,w
 14206  03E7  00A9               	movwf	??_sprintf+1
 14207  03E8  0820               	movf	sprintf@f,w
 14208  03E9  00A8               	movwf	??_sprintf
 14209  03EA  0AA0               	incf	sprintf@f,f
 14210  03EB  1903               	skipnz
 14211  03EC  0AA1               	incf	sprintf@f+1,f
 14212  03ED  0828               	movf	??_sprintf,w
 14213  03EE  0084               	movwf	4
 14214  03EF  0829               	movf	??_sprintf+1,w
 14215  03F0  0085               	movwf	5
 14216  03F1  0800               	movf	0,w	;code access
 14217  03F2  00AA               	movwf	??_sprintf+2
 14218  03F3  082A               	movf	??_sprintf+2,w
 14219  03F4  00B3               	movwf	sprintf@c
 14220  03F5  0833               	movf	sprintf@c,w
 14221  03F6  1D03               	btfss	3,2
 14222  03F7  2BF9               	goto	u336_21
 14223  03F8  2BFA               	goto	u336_20
 14224  03F9                     u336_21:
 14225  03F9  2A69               	goto	i1l3714
 14226  03FA                     u336_20:
 14227  03FA                     i1l3818:
 14228                           
 14229                           ;doprnt.c: 1564: *sp = 0;
 14230  03FA  0834               	movf	sprintf@sp,w
 14231  03FB  0086               	movwf	6
 14232  03FC  0187               	clrf	7
 14233  03FD  0181               	clrf	1
 14234  03FE                     i1l1467:
 14235  03FE  0008               	return
 14236  03FF                     __end_of_sprintf:
 14237                           
 14238                           	psect	text43
 14239  0AD6                     __ptext43:	
 14240 ;; *************** function _isdigit *****************
 14241 ;; Defined at:
 14242 ;;		line 8 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 14243 ;; Parameters:    Size  Location     Type
 14244 ;;  c               1    wreg     unsigned char 
 14245 ;; Auto vars:     Size  Location     Type
 14246 ;;  c               1    1[COMMON] unsigned char 
 14247 ;; Return value:  Size  Location     Type
 14248 ;;		None               void
 14249 ;; Registers used:
 14250 ;;		wreg, status,2, status,0
 14251 ;; Tracked objects:
 14252 ;;		On entry : 0/0
 14253 ;;		On exit  : 0/0
 14254 ;;		Unchanged: 0/0
 14255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14257 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14259 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14260 ;;Total ram usage:        2 bytes
 14261 ;; Hardware stack levels used:    1
 14262 ;; This function calls:
 14263 ;;		Nothing
 14264 ;; This function is called by:
 14265 ;;		_sprintf
 14266 ;; This function uses a non-reentrant model
 14267 ;;
 14268                           
 14269                           
 14270                           ;psect for function _isdigit
 14271  0AD6                     _isdigit:
 14272                           
 14273                           ;incstack = 0
 14274                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 14275                           ;isdigit@c stored from wreg
 14276  0AD6  00F1               	movwf	isdigit@c
 14277  0AD7                     i1l3510:
 14278  0AD7  01F0               	clrf	_isdigit$2820
 14279  0AD8                     i1l3512:
 14280  0AD8  303A               	movlw	58
 14281  0AD9  0271               	subwf	isdigit@c,w
 14282  0ADA  1803               	skipnc
 14283  0ADB  2ADD               	goto	u262_21
 14284  0ADC  2ADE               	goto	u262_20
 14285  0ADD                     u262_21:
 14286  0ADD  2AE6               	goto	i1l3518
 14287  0ADE                     u262_20:
 14288  0ADE                     i1l3514:
 14289  0ADE  3030               	movlw	48
 14290  0ADF  0271               	subwf	isdigit@c,w
 14291  0AE0  1C03               	skipc
 14292  0AE1  2AE3               	goto	u263_21
 14293  0AE2  2AE4               	goto	u263_20
 14294  0AE3                     u263_21:
 14295  0AE3  2AE6               	goto	i1l3518
 14296  0AE4                     u263_20:
 14297  0AE4                     i1l3516:
 14298  0AE4  01F0               	clrf	_isdigit$2820
 14299  0AE5  0AF0               	incf	_isdigit$2820,f
 14300  0AE6                     i1l3518:
 14301  0AE6  0C70               	rrf	_isdigit$2820,w
 14302  0AE7                     i1l1924:
 14303  0AE7  0008               	return
 14304  0AE8                     __end_of_isdigit:
 14305                           
 14306                           	psect	text44
 14307  0BCF                     __ptext44:	
 14308 ;; *************** function ___wmul *****************
 14309 ;; Defined at:
 14310 ;;		line 15 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 14311 ;; Parameters:    Size  Location     Type
 14312 ;;  multiplier      2    0[COMMON] unsigned int 
 14313 ;;  multiplicand    2    2[COMMON] unsigned int 
 14314 ;; Auto vars:     Size  Location     Type
 14315 ;;  product         2    4[COMMON] unsigned int 
 14316 ;; Return value:  Size  Location     Type
 14317 ;;                  2    0[COMMON] unsigned int 
 14318 ;; Registers used:
 14319 ;;		wreg, status,2, status,0
 14320 ;; Tracked objects:
 14321 ;;		On entry : 0/0
 14322 ;;		On exit  : 0/0
 14323 ;;		Unchanged: 0/0
 14324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14325 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14326 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14328 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14329 ;;Total ram usage:        6 bytes
 14330 ;; Hardware stack levels used:    1
 14331 ;; This function calls:
 14332 ;;		Nothing
 14333 ;; This function is called by:
 14334 ;;		_sprintf
 14335 ;;		_map
 14336 ;; This function uses a non-reentrant model
 14337 ;;
 14338                           
 14339                           
 14340                           ;psect for function ___wmul
 14341  0BCF                     ___wmul:
 14342  0BCF                     i1l3522:	
 14343                           ;incstack = 0
 14344                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14345                           
 14346  0BCF  01F4               	clrf	___wmul@product
 14347  0BD0  01F5               	clrf	___wmul@product+1
 14348  0BD1                     i1l3524:
 14349  0BD1  1C70               	btfss	___wmul@multiplier,0
 14350  0BD2  2BD4               	goto	u264_21
 14351  0BD3  2BD5               	goto	u264_20
 14352  0BD4                     u264_21:
 14353  0BD4  2BD9               	goto	i1l1471
 14354  0BD5                     u264_20:
 14355  0BD5                     i1l3526:
 14356  0BD5  0872               	movf	___wmul@multiplicand,w
 14357  0BD6  07F4               	addwf	___wmul@product,f
 14358  0BD7  0873               	movf	___wmul@multiplicand+1,w
 14359  0BD8  3DF5               	addwfc	___wmul@product+1,f
 14360  0BD9                     i1l1471:
 14361  0BD9  3001               	movlw	1
 14362  0BDA                     u265_25:
 14363  0BDA  35F2               	lslf	___wmul@multiplicand,f
 14364  0BDB  0DF3               	rlf	___wmul@multiplicand+1,f
 14365  0BDC  0B89               	decfsz	9,f
 14366  0BDD  2BDA               	goto	u265_25
 14367  0BDE                     i1l3528:
 14368  0BDE  3001               	movlw	1
 14369  0BDF                     u266_25:
 14370  0BDF  36F1               	lsrf	___wmul@multiplier+1,f
 14371  0BE0  0CF0               	rrf	___wmul@multiplier,f
 14372  0BE1  0B89               	decfsz	9,f
 14373  0BE2  2BDF               	goto	u266_25
 14374  0BE3                     i1l3530:
 14375  0BE3  0870               	movf	___wmul@multiplier,w
 14376  0BE4  0471               	iorwf	___wmul@multiplier+1,w
 14377  0BE5  1D03               	btfss	3,2
 14378  0BE6  2BE8               	goto	u267_21
 14379  0BE7  2BE9               	goto	u267_20
 14380  0BE8                     u267_21:
 14381  0BE8  2BD1               	goto	i1l3524
 14382  0BE9                     u267_20:
 14383  0BE9                     i1l3532:
 14384  0BE9  0875               	movf	___wmul@product+1,w
 14385  0BEA  00F1               	movwf	?___wmul+1
 14386  0BEB  0874               	movf	___wmul@product,w
 14387  0BEC  00F0               	movwf	?___wmul
 14388  0BED                     i1l1473:
 14389  0BED  0008               	return
 14390  0BEE                     __end_of___wmul:
 14391                           
 14392                           	psect	text45
 14393  0C7C                     __ptext45:	
 14394 ;; *************** function ___lwmod *****************
 14395 ;; Defined at:
 14396 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 14397 ;; Parameters:    Size  Location     Type
 14398 ;;  divisor         2    8[COMMON] unsigned int 
 14399 ;;  dividend        2   10[COMMON] unsigned int 
 14400 ;; Auto vars:     Size  Location     Type
 14401 ;;  counter         1   13[COMMON] unsigned char 
 14402 ;; Return value:  Size  Location     Type
 14403 ;;                  2    8[COMMON] unsigned int 
 14404 ;; Registers used:
 14405 ;;		wreg, status,2, status,0
 14406 ;; Tracked objects:
 14407 ;;		On entry : 0/0
 14408 ;;		On exit  : 0/0
 14409 ;;		Unchanged: 0/0
 14410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14411 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14413 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14414 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14415 ;;Total ram usage:        6 bytes
 14416 ;; Hardware stack levels used:    1
 14417 ;; This function calls:
 14418 ;;		Nothing
 14419 ;; This function is called by:
 14420 ;;		_sprintf
 14421 ;; This function uses a non-reentrant model
 14422 ;;
 14423                           
 14424                           
 14425                           ;psect for function ___lwmod
 14426  0C7C                     ___lwmod:
 14427  0C7C                     i1l3562:	
 14428                           ;incstack = 0
 14429                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 14430                           
 14431  0C7C  0878               	movf	___lwmod@divisor,w
 14432  0C7D  0479               	iorwf	___lwmod@divisor+1,w
 14433  0C7E  1903               	btfsc	3,2
 14434  0C7F  2C81               	goto	u275_21
 14435  0C80  2C82               	goto	u275_20
 14436  0C81                     u275_21:
 14437  0C81  2CAB               	goto	i1l3580
 14438  0C82                     u275_20:
 14439  0C82                     i1l3564:
 14440  0C82  01FD               	clrf	___lwmod@counter
 14441  0C83  0AFD               	incf	___lwmod@counter,f
 14442  0C84  2C8E               	goto	i1l3570
 14443  0C85                     i1l3566:
 14444  0C85  3001               	movlw	1
 14445  0C86                     u276_25:
 14446  0C86  35F8               	lslf	___lwmod@divisor,f
 14447  0C87  0DF9               	rlf	___lwmod@divisor+1,f
 14448  0C88  0B89               	decfsz	9,f
 14449  0C89  2C86               	goto	u276_25
 14450  0C8A                     i1l3568:
 14451  0C8A  3001               	movlw	1
 14452  0C8B  00FC               	movwf	??___lwmod
 14453  0C8C  087C               	movf	??___lwmod,w
 14454  0C8D  07FD               	addwf	___lwmod@counter,f
 14455  0C8E                     i1l3570:
 14456  0C8E  1FF9               	btfss	___lwmod@divisor+1,7
 14457  0C8F  2C91               	goto	u277_21
 14458  0C90  2C92               	goto	u277_20
 14459  0C91                     u277_21:
 14460  0C91  2C85               	goto	i1l3566
 14461  0C92                     u277_20:
 14462  0C92                     i1l3572:
 14463  0C92  0879               	movf	___lwmod@divisor+1,w
 14464  0C93  027B               	subwf	___lwmod@dividend+1,w
 14465  0C94  1D03               	skipz
 14466  0C95  2C98               	goto	u278_25
 14467  0C96  0878               	movf	___lwmod@divisor,w
 14468  0C97  027A               	subwf	___lwmod@dividend,w
 14469  0C98                     u278_25:
 14470  0C98  1C03               	skipc
 14471  0C99  2C9B               	goto	u278_21
 14472  0C9A  2C9C               	goto	u278_20
 14473  0C9B                     u278_21:
 14474  0C9B  2CA0               	goto	i1l3576
 14475  0C9C                     u278_20:
 14476  0C9C                     i1l3574:
 14477  0C9C  0878               	movf	___lwmod@divisor,w
 14478  0C9D  02FA               	subwf	___lwmod@dividend,f
 14479  0C9E  0879               	movf	___lwmod@divisor+1,w
 14480  0C9F  3BFB               	subwfb	___lwmod@dividend+1,f
 14481  0CA0                     i1l3576:
 14482  0CA0  3001               	movlw	1
 14483  0CA1                     u279_25:
 14484  0CA1  36F9               	lsrf	___lwmod@divisor+1,f
 14485  0CA2  0CF8               	rrf	___lwmod@divisor,f
 14486  0CA3  0B89               	decfsz	9,f
 14487  0CA4  2CA1               	goto	u279_25
 14488  0CA5                     i1l3578:
 14489  0CA5  3001               	movlw	1
 14490  0CA6  02FD               	subwf	___lwmod@counter,f
 14491  0CA7  1D03               	btfss	3,2
 14492  0CA8  2CAA               	goto	u280_21
 14493  0CA9  2CAB               	goto	u280_20
 14494  0CAA                     u280_21:
 14495  0CAA  2C92               	goto	i1l3572
 14496  0CAB                     u280_20:
 14497  0CAB                     i1l3580:
 14498  0CAB  087B               	movf	___lwmod@dividend+1,w
 14499  0CAC  00F9               	movwf	?___lwmod+1
 14500  0CAD  087A               	movf	___lwmod@dividend,w
 14501  0CAE  00F8               	movwf	?___lwmod
 14502  0CAF                     i1l1753:
 14503  0CAF  0008               	return
 14504  0CB0                     __end_of___lwmod:
 14505                           
 14506                           	psect	text46
 14507  0D22                     __ptext46:	
 14508 ;; *************** function ___lwdiv *****************
 14509 ;; Defined at:
 14510 ;;		line 5 in file "E:\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 14511 ;; Parameters:    Size  Location     Type
 14512 ;;  divisor         2    0[COMMON] unsigned int 
 14513 ;;  dividend        2    2[COMMON] unsigned int 
 14514 ;; Auto vars:     Size  Location     Type
 14515 ;;  quotient        2    5[COMMON] unsigned int 
 14516 ;;  counter         1    7[COMMON] unsigned char 
 14517 ;; Return value:  Size  Location     Type
 14518 ;;                  2    0[COMMON] unsigned int 
 14519 ;; Registers used:
 14520 ;;		wreg, status,2, status,0
 14521 ;; Tracked objects:
 14522 ;;		On entry : 0/0
 14523 ;;		On exit  : 0/0
 14524 ;;		Unchanged: 0/0
 14525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14526 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14527 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14529 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14530 ;;Total ram usage:        8 bytes
 14531 ;; Hardware stack levels used:    1
 14532 ;; This function calls:
 14533 ;;		Nothing
 14534 ;; This function is called by:
 14535 ;;		_sprintf
 14536 ;; This function uses a non-reentrant model
 14537 ;;
 14538                           
 14539                           
 14540                           ;psect for function ___lwdiv
 14541  0D22                     ___lwdiv:
 14542  0D22                     i1l3536:	
 14543                           ;incstack = 0
 14544                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 14545                           
 14546  0D22  01F5               	clrf	___lwdiv@quotient
 14547  0D23  01F6               	clrf	___lwdiv@quotient+1
 14548  0D24                     i1l3538:
 14549  0D24  0870               	movf	___lwdiv@divisor,w
 14550  0D25  0471               	iorwf	___lwdiv@divisor+1,w
 14551  0D26  1903               	btfsc	3,2
 14552  0D27  2D29               	goto	u268_21
 14553  0D28  2D2A               	goto	u268_20
 14554  0D29                     u268_21:
 14555  0D29  2D59               	goto	i1l3558
 14556  0D2A                     u268_20:
 14557  0D2A                     i1l3540:
 14558  0D2A  01F7               	clrf	___lwdiv@counter
 14559  0D2B  0AF7               	incf	___lwdiv@counter,f
 14560  0D2C  2D36               	goto	i1l3546
 14561  0D2D                     i1l3542:
 14562  0D2D  3001               	movlw	1
 14563  0D2E                     u269_25:
 14564  0D2E  35F0               	lslf	___lwdiv@divisor,f
 14565  0D2F  0DF1               	rlf	___lwdiv@divisor+1,f
 14566  0D30  0B89               	decfsz	9,f
 14567  0D31  2D2E               	goto	u269_25
 14568  0D32                     i1l3544:
 14569  0D32  3001               	movlw	1
 14570  0D33  00F4               	movwf	??___lwdiv
 14571  0D34  0874               	movf	??___lwdiv,w
 14572  0D35  07F7               	addwf	___lwdiv@counter,f
 14573  0D36                     i1l3546:
 14574  0D36  1FF1               	btfss	___lwdiv@divisor+1,7
 14575  0D37  2D39               	goto	u270_21
 14576  0D38  2D3A               	goto	u270_20
 14577  0D39                     u270_21:
 14578  0D39  2D2D               	goto	i1l3542
 14579  0D3A                     u270_20:
 14580  0D3A                     i1l3548:
 14581  0D3A  3001               	movlw	1
 14582  0D3B                     u271_25:
 14583  0D3B  35F5               	lslf	___lwdiv@quotient,f
 14584  0D3C  0DF6               	rlf	___lwdiv@quotient+1,f
 14585  0D3D  0B89               	decfsz	9,f
 14586  0D3E  2D3B               	goto	u271_25
 14587  0D3F  0871               	movf	___lwdiv@divisor+1,w
 14588  0D40  0273               	subwf	___lwdiv@dividend+1,w
 14589  0D41  1D03               	skipz
 14590  0D42  2D45               	goto	u272_25
 14591  0D43  0870               	movf	___lwdiv@divisor,w
 14592  0D44  0272               	subwf	___lwdiv@dividend,w
 14593  0D45                     u272_25:
 14594  0D45  1C03               	skipc
 14595  0D46  2D48               	goto	u272_21
 14596  0D47  2D49               	goto	u272_20
 14597  0D48                     u272_21:
 14598  0D48  2D4E               	goto	i1l3554
 14599  0D49                     u272_20:
 14600  0D49                     i1l3550:
 14601  0D49  0870               	movf	___lwdiv@divisor,w
 14602  0D4A  02F2               	subwf	___lwdiv@dividend,f
 14603  0D4B  0871               	movf	___lwdiv@divisor+1,w
 14604  0D4C  3BF3               	subwfb	___lwdiv@dividend+1,f
 14605  0D4D                     i1l3552:
 14606  0D4D  1475               	bsf	___lwdiv@quotient,0
 14607  0D4E                     i1l3554:
 14608  0D4E  3001               	movlw	1
 14609  0D4F                     u273_25:
 14610  0D4F  36F1               	lsrf	___lwdiv@divisor+1,f
 14611  0D50  0CF0               	rrf	___lwdiv@divisor,f
 14612  0D51  0B89               	decfsz	9,f
 14613  0D52  2D4F               	goto	u273_25
 14614  0D53                     i1l3556:
 14615  0D53  3001               	movlw	1
 14616  0D54  02F7               	subwf	___lwdiv@counter,f
 14617  0D55  1D03               	btfss	3,2
 14618  0D56  2D58               	goto	u274_21
 14619  0D57  2D59               	goto	u274_20
 14620  0D58                     u274_21:
 14621  0D58  2D3A               	goto	i1l3548
 14622  0D59                     u274_20:
 14623  0D59                     i1l3558:
 14624  0D59  0876               	movf	___lwdiv@quotient+1,w
 14625  0D5A  00F1               	movwf	?___lwdiv+1
 14626  0D5B  0875               	movf	___lwdiv@quotient,w
 14627  0D5C  00F0               	movwf	?___lwdiv
 14628  0D5D                     i1l1743:
 14629  0D5D  0008               	return
 14630  0D5E                     __end_of___lwdiv:
 14631                           
 14632                           	psect	text47
 14633  0EA3                     __ptext47:	
 14634 ;; *************** function _differenceBetweenTimePeriod *****************
 14635 ;; Defined at:
 14636 ;;		line 210 in file "main.c"
 14637 ;; Parameters:    Size  Location     Type
 14638 ;;  start           6    0[COMMON] struct Time
 14639 ;;  stop            6    6[COMMON] struct Time
 14640 ;;  diff            1   12[COMMON] PTR struct Time
 14641 ;;		 -> menuLCD_ISR@diff(6), 
 14642 ;; Auto vars:     Size  Location     Type
 14643 ;;		None
 14644 ;; Return value:  Size  Location     Type
 14645 ;;                  1    wreg      void 
 14646 ;; Registers used:
 14647 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 14648 ;; Tracked objects:
 14649 ;;		On entry : 0/0
 14650 ;;		On exit  : 0/0
 14651 ;;		Unchanged: 0/0
 14652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14653 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14655 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14656 ;;      Totals:        13       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14657 ;;Total ram usage:       15 bytes
 14658 ;; Hardware stack levels used:    1
 14659 ;; This function calls:
 14660 ;;		Nothing
 14661 ;; This function is called by:
 14662 ;;		_menuLCD_ISR
 14663 ;; This function uses a non-reentrant model
 14664 ;;
 14665                           
 14666                           
 14667                           ;psect for function _differenceBetweenTimePeriod
 14668  0EA3                     _differenceBetweenTimePeriod:
 14669  0EA3                     i1l3698:	
 14670                           ;incstack = 0
 14671                           ; Regs used in _differenceBetweenTimePeriod: [wreg-fsr1h+status,2+status,0]
 14672                           
 14673                           
 14674                           ;main.c: 213: while (stop.s > start.s) {
 14675  0EA3  2EAC               	goto	i1l1078
 14676  0EA4                     i1l3700:
 14677                           
 14678                           ;main.c: 214: --start.m;
 14679  0EA4  30FF               	movlw	255
 14680  0EA5  07F2               	addwf	differenceBetweenTimePeriod@start+2,f
 14681  0EA6  30FF               	movlw	255
 14682  0EA7  3DF3               	addwfc	differenceBetweenTimePeriod@start+3,f
 14683                           
 14684                           ;main.c: 215: start.s += 60;
 14685  0EA8  303C               	movlw	60
 14686  0EA9  07F4               	addwf	differenceBetweenTimePeriod@start+4,f
 14687  0EAA  3000               	movlw	0
 14688  0EAB  3DF5               	addwfc	differenceBetweenTimePeriod@start+5,f
 14689  0EAC                     i1l1078:
 14690  0EAC  0875               	movf	differenceBetweenTimePeriod@start+5,w
 14691  0EAD  3A80               	xorlw	128
 14692  0EAE  0020               	movlb	0	; select bank0
 14693  0EAF  00A0               	movwf	??_differenceBetweenTimePeriod
 14694  0EB0  087B               	movf	differenceBetweenTimePeriod@stop+5,w
 14695  0EB1  3A80               	xorlw	128
 14696  0EB2  0220               	subwf	??_differenceBetweenTimePeriod,w
 14697  0EB3  1D03               	skipz
 14698  0EB4  2EB7               	goto	u317_25
 14699  0EB5  087A               	movf	differenceBetweenTimePeriod@stop+4,w
 14700  0EB6  0274               	subwf	differenceBetweenTimePeriod@start+4,w
 14701  0EB7                     u317_25:
 14702  0EB7  1C03               	skipc
 14703  0EB8  2EBA               	goto	u317_21
 14704  0EB9  2EBB               	goto	u317_20
 14705  0EBA                     u317_21:
 14706  0EBA  2EA4               	goto	i1l3700
 14707  0EBB                     u317_20:
 14708  0EBB                     i1l3702:
 14709                           
 14710                           ;main.c: 216: };main.c: 217: diff->s = start.s - stop.s;
 14711  0EBB  3004               	movlw	4
 14712  0EBC  3E76               	addlw	(low (differenceBetweenTimePeriod@stop| 0))& (0+255)
 14713  0EBD  0086               	movwf	6
 14714  0EBE  0187               	clrf	7
 14715  0EBF  3004               	movlw	4
 14716  0EC0  3E70               	addlw	(low (differenceBetweenTimePeriod@start| 0))& (0+255)
 14717  0EC1  0084               	movwf	4
 14718  0EC2  0185               	clrf	5
 14719  0EC3  3F40               	moviw [0]fsr1
 14720  0EC4  0200               	subwf	0,w
 14721  0EC5  0020               	movlb	0	; select bank0
 14722  0EC6  00A0               	movwf	??_differenceBetweenTimePeriod
 14723  0EC7  3101               	addfsr 0,1
 14724  0EC8  3F41               	moviw [1]fsr1
 14725  0EC9  3B00               	subwfb	0,w
 14726  0ECA  00A1               	movwf	??_differenceBetweenTimePeriod+1
 14727  0ECB  087C               	movf	differenceBetweenTimePeriod@diff,w
 14728  0ECC  3E04               	addlw	4
 14729  0ECD  0086               	movwf	6
 14730  0ECE  0187               	clrf	7
 14731  0ECF  0820               	movf	??_differenceBetweenTimePeriod,w
 14732  0ED0  3FC0               	movwi [0]fsr1
 14733  0ED1  0821               	movf	??_differenceBetweenTimePeriod+1,w
 14734  0ED2  3FC1               	movwi [1]fsr1
 14735                           
 14736                           ;main.c: 218: while (stop.m > start.m) {
 14737  0ED3  2EDC               	goto	i1l1081
 14738  0ED4                     i1l3704:
 14739                           
 14740                           ;main.c: 219: --start.h;
 14741  0ED4  30FF               	movlw	255
 14742  0ED5  07F0               	addwf	differenceBetweenTimePeriod@start,f
 14743  0ED6  30FF               	movlw	255
 14744  0ED7  3DF1               	addwfc	differenceBetweenTimePeriod@start+1,f
 14745                           
 14746                           ;main.c: 220: start.m += 60;
 14747  0ED8  303C               	movlw	60
 14748  0ED9  07F2               	addwf	differenceBetweenTimePeriod@start+2,f
 14749  0EDA  3000               	movlw	0
 14750  0EDB  3DF3               	addwfc	differenceBetweenTimePeriod@start+3,f
 14751  0EDC                     i1l1081:
 14752  0EDC  0873               	movf	differenceBetweenTimePeriod@start+3,w
 14753  0EDD  3A80               	xorlw	128
 14754  0EDE  0020               	movlb	0	; select bank0
 14755  0EDF  00A0               	movwf	??_differenceBetweenTimePeriod
 14756  0EE0  0879               	movf	differenceBetweenTimePeriod@stop+3,w
 14757  0EE1  3A80               	xorlw	128
 14758  0EE2  0220               	subwf	??_differenceBetweenTimePeriod,w
 14759  0EE3  1D03               	skipz
 14760  0EE4  2EE7               	goto	u318_25
 14761  0EE5  0878               	movf	differenceBetweenTimePeriod@stop+2,w
 14762  0EE6  0272               	subwf	differenceBetweenTimePeriod@start+2,w
 14763  0EE7                     u318_25:
 14764  0EE7  1C03               	skipc
 14765  0EE8  2EEA               	goto	u318_21
 14766  0EE9  2EEB               	goto	u318_20
 14767  0EEA                     u318_21:
 14768  0EEA  2ED4               	goto	i1l3704
 14769  0EEB                     u318_20:
 14770  0EEB                     i1l3706:
 14771                           
 14772                           ;main.c: 221: };main.c: 222: diff->m = start.m - stop.m;
 14773  0EEB  3002               	movlw	2
 14774  0EEC  3E76               	addlw	(low (differenceBetweenTimePeriod@stop| 0))& (0+255)
 14775  0EED  0086               	movwf	6
 14776  0EEE  0187               	clrf	7
 14777  0EEF  3002               	movlw	2
 14778  0EF0  3E70               	addlw	(low (differenceBetweenTimePeriod@start| 0))& (0+255)
 14779  0EF1  0084               	movwf	4
 14780  0EF2  0185               	clrf	5
 14781  0EF3  3F40               	moviw [0]fsr1
 14782  0EF4  0200               	subwf	0,w
 14783  0EF5  0020               	movlb	0	; select bank0
 14784  0EF6  00A0               	movwf	??_differenceBetweenTimePeriod
 14785  0EF7  3101               	addfsr 0,1
 14786  0EF8  3F41               	moviw [1]fsr1
 14787  0EF9  3B00               	subwfb	0,w
 14788  0EFA  00A1               	movwf	??_differenceBetweenTimePeriod+1
 14789  0EFB  087C               	movf	differenceBetweenTimePeriod@diff,w
 14790  0EFC  3E02               	addlw	2
 14791  0EFD  0086               	movwf	6
 14792  0EFE  0187               	clrf	7
 14793  0EFF  0820               	movf	??_differenceBetweenTimePeriod,w
 14794  0F00  3FC0               	movwi [0]fsr1
 14795  0F01  0821               	movf	??_differenceBetweenTimePeriod+1,w
 14796  0F02  3FC1               	movwi [1]fsr1
 14797  0F03                     i1l3708:
 14798                           
 14799                           ;main.c: 223: diff->h = start.h - stop.h;
 14800  0F03  0876               	movf	differenceBetweenTimePeriod@stop,w
 14801  0F04  0270               	subwf	differenceBetweenTimePeriod@start,w
 14802  0F05  00A0               	movwf	??_differenceBetweenTimePeriod
 14803  0F06  0877               	movf	differenceBetweenTimePeriod@stop+1,w
 14804  0F07  3B71               	subwfb	differenceBetweenTimePeriod@start+1,w
 14805  0F08  00A1               	movwf	??_differenceBetweenTimePeriod+1
 14806  0F09  087C               	movf	differenceBetweenTimePeriod@diff,w
 14807  0F0A  0086               	movwf	6
 14808  0F0B  0187               	clrf	7
 14809  0F0C  0820               	movf	??_differenceBetweenTimePeriod,w
 14810  0F0D  3FC0               	movwi [0]fsr1
 14811  0F0E  0821               	movf	??_differenceBetweenTimePeriod+1,w
 14812  0F0F  3FC1               	movwi [1]fsr1
 14813  0F10                     i1l1084:
 14814  0F10  0008               	return
 14815  0F11                     __end_of_differenceBetweenTimePeriod:
 14816                           
 14817                           	psect	text48
 14818  0A1E                     __ptext48:	
 14819 ;; *************** function _TMR2_StartTimer *****************
 14820 ;; Defined at:
 14821 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 14822 ;; Parameters:    Size  Location     Type
 14823 ;;		None
 14824 ;; Auto vars:     Size  Location     Type
 14825 ;;		None
 14826 ;; Return value:  Size  Location     Type
 14827 ;;                  1    wreg      void 
 14828 ;; Registers used:
 14829 ;;		status,2, status,0, pclath, cstack
 14830 ;; Tracked objects:
 14831 ;;		On entry : 0/0
 14832 ;;		On exit  : 0/0
 14833 ;;		Unchanged: 0/0
 14834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14839 ;;Total ram usage:        0 bytes
 14840 ;; Hardware stack levels used:    1
 14841 ;; Hardware stack levels required when called:    1
 14842 ;; This function calls:
 14843 ;;		_TMR2_Start
 14844 ;; This function is called by:
 14845 ;;		_menuLCD_ISR
 14846 ;; This function uses a non-reentrant model
 14847 ;;
 14848                           
 14849                           
 14850                           ;psect for function _TMR2_StartTimer
 14851  0A1E                     _TMR2_StartTimer:
 14852  0A1E                     i1l3636:	
 14853                           ;incstack = 0
 14854                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
 14855                           
 14856                           
 14857                           ;tmr2.c: 108: TMR2_Start();
 14858  0A1E  318A  2212  318A   	fcall	_TMR2_Start
 14859  0A21                     i1l761:
 14860  0A21  0008               	return
 14861  0A22                     __end_of_TMR2_StartTimer:
 14862                           
 14863                           	psect	text49
 14864  0A12                     __ptext49:	
 14865 ;; *************** function _TMR2_Start *****************
 14866 ;; Defined at:
 14867 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 14868 ;; Parameters:    Size  Location     Type
 14869 ;;		None
 14870 ;; Auto vars:     Size  Location     Type
 14871 ;;		None
 14872 ;; Return value:  Size  Location     Type
 14873 ;;                  1    wreg      void 
 14874 ;; Registers used:
 14875 ;;		None
 14876 ;; Tracked objects:
 14877 ;;		On entry : 0/0
 14878 ;;		On exit  : 0/0
 14879 ;;		Unchanged: 0/0
 14880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14885 ;;Total ram usage:        0 bytes
 14886 ;; Hardware stack levels used:    1
 14887 ;; This function calls:
 14888 ;;		Nothing
 14889 ;; This function is called by:
 14890 ;;		_TMR2_StartTimer
 14891 ;; This function uses a non-reentrant model
 14892 ;;
 14893                           
 14894                           
 14895                           ;psect for function _TMR2_Start
 14896  0A12                     _TMR2_Start:
 14897  0A12                     i1l3506:	
 14898                           ;incstack = 0
 14899                           ; Regs used in _TMR2_Start: []
 14900                           
 14901                           
 14902                           ;tmr2.c: 103: T2CONbits.TMR2ON = 1;
 14903  0A12  0025               	movlb	5	; select bank5
 14904  0A13  178E               	bsf	14,7	;volatile
 14905  0A14                     i1l758:
 14906  0A14  0008               	return
 14907  0A15                     __end_of_TMR2_Start:
 14908                           
 14909                           	psect	text50
 14910  0A0F                     __ptext50:	
 14911 ;; *************** function _PWM_Output_D4_Enable *****************
 14912 ;; Defined at:
 14913 ;;		line 226 in file "main.c"
 14914 ;; Parameters:    Size  Location     Type
 14915 ;;		None
 14916 ;; Auto vars:     Size  Location     Type
 14917 ;;		None
 14918 ;; Return value:  Size  Location     Type
 14919 ;;                  1    wreg      void 
 14920 ;; Registers used:
 14921 ;;		None
 14922 ;; Tracked objects:
 14923 ;;		On entry : 0/0
 14924 ;;		On exit  : 0/0
 14925 ;;		Unchanged: 0/0
 14926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14931 ;;Total ram usage:        0 bytes
 14932 ;; Hardware stack levels used:    1
 14933 ;; This function calls:
 14934 ;;		Nothing
 14935 ;; This function is called by:
 14936 ;;		_menuLCD_ISR
 14937 ;; This function uses a non-reentrant model
 14938 ;;
 14939                           
 14940                           
 14941                           ;psect for function _PWM_Output_D4_Enable
 14942  0A0F                     _PWM_Output_D4_Enable:
 14943  0A0F                     i1l3710:	
 14944                           ;incstack = 0
 14945                           ; Regs used in _PWM_Output_D4_Enable: []
 14946                           
 14947                           
 14948                           ;main.c: 227: PWM6EN = 1;
 14949  0A0F  0027               	movlb	7	; select bank7
 14950  0A10  178E               	bsf	14,7	;volatile
 14951  0A11                     i1l1087:
 14952  0A11  0008               	return
 14953  0A12                     __end_of_PWM_Output_D4_Enable:
 14954                           
 14955                           	psect	text51
 14956  0AFA                     __ptext51:	
 14957 ;; *************** function _LCDstr *****************
 14958 ;; Defined at:
 14959 ;;		line 190 in file "main.c"
 14960 ;; Parameters:    Size  Location     Type
 14961 ;;  p               1    wreg     PTR unsigned char 
 14962 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 14963 ;; Auto vars:     Size  Location     Type
 14964 ;;  p               1   11[COMMON] PTR unsigned char 
 14965 ;;		 -> menuLCD_ISR@l(3), menuLCD_ISR@tt(4), menuLCD_ISR@str(8), 
 14966 ;;  c               1   10[COMMON] unsigned char 
 14967 ;; Return value:  Size  Location     Type
 14968 ;;                  1    wreg      void 
 14969 ;; Registers used:
 14970 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14971 ;; Tracked objects:
 14972 ;;		On entry : 0/0
 14973 ;;		On exit  : 0/0
 14974 ;;		Unchanged: 0/0
 14975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14977 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14978 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14979 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14980 ;;Total ram usage:        3 bytes
 14981 ;; Hardware stack levels used:    1
 14982 ;; Hardware stack levels required when called:    3
 14983 ;; This function calls:
 14984 ;;		_LCDchar
 14985 ;; This function is called by:
 14986 ;;		_menuLCD_ISR
 14987 ;; This function uses a non-reentrant model
 14988 ;;
 14989                           
 14990                           
 14991                           ;psect for function _LCDstr
 14992  0AFA                     _LCDstr:
 14993                           
 14994                           ;incstack = 0
 14995                           ; Regs used in _LCDstr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14996                           ;LCDstr@p stored from wreg
 14997  0AFA  00FB               	movwf	LCDstr@p
 14998  0AFB                     i1l3692:
 14999                           
 15000                           ;main.c: 192: unsigned char c;;main.c: 194: while((c = *p++)) LCDchar(c);
 15001  0AFB  2B00               	goto	i1l3696
 15002  0AFC                     i1l3694:
 15003  0AFC  087A               	movf	LCDstr@c,w
 15004  0AFD  318A  2255  318A   	fcall	_LCDchar
 15005  0B00                     i1l3696:
 15006  0B00  087B               	movf	LCDstr@p,w
 15007  0B01  0086               	movwf	6
 15008  0B02  0187               	clrf	7
 15009  0B03  0AFB               	incf	LCDstr@p,f
 15010  0B04  0801               	movf	1,w
 15011  0B05  00F9               	movwf	??_LCDstr
 15012  0B06  0879               	movf	??_LCDstr,w
 15013  0B07  00FA               	movwf	LCDstr@c
 15014  0B08  087A               	movf	LCDstr@c,w
 15015  0B09  1D03               	btfss	3,2
 15016  0B0A  2B0C               	goto	u316_21
 15017  0B0B  2B0D               	goto	u316_20
 15018  0B0C                     u316_21:
 15019  0B0C  2AFC               	goto	i1l3694
 15020  0B0D                     u316_20:
 15021  0B0D                     i1l1071:
 15022  0B0D  0008               	return
 15023  0B0E                     __end_of_LCDstr:
 15024                           
 15025                           	psect	text52
 15026  0A55                     __ptext52:	
 15027 ;; *************** function _LCDchar *****************
 15028 ;; Defined at:
 15029 ;;		line 185 in file "main.c"
 15030 ;; Parameters:    Size  Location     Type
 15031 ;;  c               1    wreg     unsigned char 
 15032 ;; Auto vars:     Size  Location     Type
 15033 ;;  c               1    8[COMMON] unsigned char 
 15034 ;; Return value:  Size  Location     Type
 15035 ;;                  1    wreg      void 
 15036 ;; Registers used:
 15037 ;;		wreg, status,2, status,0, pclath, cstack
 15038 ;; Tracked objects:
 15039 ;;		On entry : 0/0
 15040 ;;		On exit  : 0/0
 15041 ;;		Unchanged: 0/0
 15042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15044 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15046 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15047 ;;Total ram usage:        1 bytes
 15048 ;; Hardware stack levels used:    1
 15049 ;; Hardware stack levels required when called:    2
 15050 ;; This function calls:
 15051 ;;		i1_LCDsend2x4
 15052 ;; This function is called by:
 15053 ;;		_LCDstr
 15054 ;;		_menuLCD_ISR
 15055 ;; This function uses a non-reentrant model
 15056 ;;
 15057                           
 15058                           
 15059                           ;psect for function _LCDchar
 15060  0A55                     _LCDchar:
 15061                           
 15062                           ;incstack = 0
 15063                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 15064                           ;LCDchar@c stored from wreg
 15065  0A55  00F8               	movwf	LCDchar@c
 15066  0A56                     i1l3508:
 15067                           
 15068                           ;main.c: 187: LCDsend2x4(c, 0x01);
 15069  0A56  01F2               	clrf	i1LCDsend2x4@mode
 15070  0A57  0AF2               	incf	i1LCDsend2x4@mode,f
 15071  0A58  0878               	movf	LCDchar@c,w
 15072  0A59  3185  25E0  318A   	fcall	i1_LCDsend2x4
 15073  0A5C                     i1l1065:
 15074  0A5C  0008               	return
 15075  0A5D                     __end_of_LCDchar:
 15076                           
 15077                           	psect	text53
 15078  0A4E                     __ptext53:	
 15079 ;; *************** function _LCDcmd *****************
 15080 ;; Defined at:
 15081 ;;		line 180 in file "main.c"
 15082 ;; Parameters:    Size  Location     Type
 15083 ;;  c               1    wreg     unsigned char 
 15084 ;; Auto vars:     Size  Location     Type
 15085 ;;  c               1    8[COMMON] unsigned char 
 15086 ;; Return value:  Size  Location     Type
 15087 ;;                  1    wreg      void 
 15088 ;; Registers used:
 15089 ;;		wreg, status,2, status,0, pclath, cstack
 15090 ;; Tracked objects:
 15091 ;;		On entry : 0/0
 15092 ;;		On exit  : 0/0
 15093 ;;		Unchanged: 0/0
 15094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15096 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15098 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15099 ;;Total ram usage:        1 bytes
 15100 ;; Hardware stack levels used:    1
 15101 ;; Hardware stack levels required when called:    2
 15102 ;; This function calls:
 15103 ;;		i1_LCDsend2x4
 15104 ;; This function is called by:
 15105 ;;		_menuLCD_ISR
 15106 ;; This function uses a non-reentrant model
 15107 ;;
 15108                           
 15109                           
 15110                           ;psect for function _LCDcmd
 15111  0A4E                     _LCDcmd:
 15112                           
 15113                           ;incstack = 0
 15114                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 15115                           ;LCDcmd@c stored from wreg
 15116  0A4E  00F8               	movwf	LCDcmd@c
 15117  0A4F                     i1l3690:
 15118                           
 15119                           ;main.c: 182: LCDsend2x4(c, 0);
 15120  0A4F  01F2               	clrf	i1LCDsend2x4@mode
 15121  0A50  0878               	movf	LCDcmd@c,w
 15122  0A51  3185  25E0  318A   	fcall	i1_LCDsend2x4
 15123  0A54                     i1l1062:
 15124  0A54  0008               	return
 15125  0A55                     __end_of_LCDcmd:
 15126                           
 15127                           	psect	text54
 15128  05E0                     __ptext54:	
 15129 ;; *************** function i1_LCDsend2x4 *****************
 15130 ;; Defined at:
 15131 ;;		line 134 in file "main.c"
 15132 ;; Parameters:    Size  Location     Type
 15133 ;;  c               1    wreg     unsigned char 
 15134 ;;  mode            1    2[COMMON] unsigned char 
 15135 ;; Auto vars:     Size  Location     Type
 15136 ;;  c               1    5[COMMON] unsigned char 
 15137 ;;  lc              1    7[COMMON] unsigned char 
 15138 ;;  hc              1    6[COMMON] unsigned char 
 15139 ;; Return value:  Size  Location     Type
 15140 ;;                  1    wreg      void 
 15141 ;; Registers used:
 15142 ;;		wreg, status,2, status,0, pclath, cstack
 15143 ;; Tracked objects:
 15144 ;;		On entry : 0/0
 15145 ;;		On exit  : 0/0
 15146 ;;		Unchanged: 0/0
 15147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15148 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15149 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15150 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15151 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15152 ;;Total ram usage:        6 bytes
 15153 ;; Hardware stack levels used:    1
 15154 ;; Hardware stack levels required when called:    1
 15155 ;; This function calls:
 15156 ;;		i1_WriteI2C
 15157 ;; This function is called by:
 15158 ;;		_LCDcmd
 15159 ;;		_LCDchar
 15160 ;; This function uses a non-reentrant model
 15161 ;;
 15162                           
 15163                           
 15164                           ;psect for function i1_LCDsend2x4
 15165  05E0                     i1_LCDsend2x4:
 15166                           
 15167                           ;incstack = 0
 15168                           ; Regs used in i1_LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 15169                           ;i1LCDsend2x4@c stored from wreg
 15170  05E0  00F5               	movwf	i1LCDsend2x4@c
 15171  05E1                     i1l3460:
 15172                           
 15173                           ;main.c: 136: unsigned char hc;;main.c: 137: unsigned char lc;;main.c: 139: hc = c & 0xf
      +                          0;
 15174  05E1  0875               	movf	i1LCDsend2x4@c,w
 15175  05E2  39F0               	andlw	240
 15176  05E3  00F3               	movwf	??i1_LCDsend2x4
 15177  05E4  0873               	movf	??i1_LCDsend2x4,w
 15178  05E5  00F6               	movwf	i1LCDsend2x4@hc
 15179  05E6                     i1l3462:
 15180                           
 15181                           ;main.c: 140: lc = (c << 4) & 0xf0;
 15182  05E6  0875               	movf	i1LCDsend2x4@c,w
 15183  05E7  00F3               	movwf	??i1_LCDsend2x4
 15184  05E8  3003               	movlw	3
 15185  05E9                     u247_25:
 15186  05E9  35F3               	lslf	??i1_LCDsend2x4,f
 15187  05EA  3EFF               	addlw	-1
 15188  05EB  1D03               	skipz
 15189  05EC  2DE9               	goto	u247_25
 15190  05ED  3573               	lslf	??i1_LCDsend2x4,w
 15191  05EE  39F0               	andlw	240
 15192  05EF  00F4               	movwf	??i1_LCDsend2x4+1
 15193  05F0  0874               	movf	??i1_LCDsend2x4+1,w
 15194  05F1  00F7               	movwf	i1LCDsend2x4@lc
 15195  05F2                     i1l3464:	
 15196                           ;main.c: 142: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15197                           
 15198  05F2  0023               	movlb	3	; select bank3
 15199  05F3  0C0F               	rrf	15,w	;volatile
 15200  05F4  0C89               	rrf	9,f
 15201  05F5  3901               	andlw	1
 15202  05F6  00F3               	movwf	??i1_LCDsend2x4
 15203  05F7  0811               	movf	17,w	;volatile
 15204  05F8  391F               	andlw	31
 15205  05F9  0473               	iorwf	??i1_LCDsend2x4,w
 15206  05FA  1D03               	btfss	3,2
 15207  05FB  2DFD               	goto	u248_21
 15208  05FC  2DFE               	goto	u248_20
 15209  05FD                     u248_21:
 15210  05FD  2DF2               	goto	i1l3464
 15211  05FE                     u248_20:
 15212  05FE                     i1l1025:
 15213                           
 15214                           ;main.c: 143: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
 15215  05FE  1411               	bsf	17,0	;volatile
 15216  05FF                     i1l1026:
 15217  05FF  1811               	btfsc	17,0	;volatile
 15218  0600  2E02               	goto	u249_21
 15219  0601  2E03               	goto	u249_20
 15220  0602                     u249_21:
 15221  0602  2DFF               	goto	i1l1026
 15222  0603                     u249_20:
 15223  0603                     i1l3466:
 15224  0603  0C0F               	rrf	15,w	;volatile
 15225  0604  0C89               	rrf	9,f
 15226  0605  3901               	andlw	1
 15227  0606  00F3               	movwf	??i1_LCDsend2x4
 15228  0607  0811               	movf	17,w	;volatile
 15229  0608  391F               	andlw	31
 15230  0609  0473               	iorwf	??i1_LCDsend2x4,w
 15231  060A  1D03               	btfss	3,2
 15232  060B  2E0D               	goto	u250_21
 15233  060C  2E0E               	goto	u250_20
 15234  060D                     u250_21:
 15235  060D  2E03               	goto	i1l3466
 15236  060E                     u250_20:
 15237  060E                     i1l3468:
 15238                           
 15239                           ;main.c: 144: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15240  060E  304E               	movlw	78
 15241  060F  3187  27B2  3185   	fcall	i1_WriteI2C
 15242  0612                     i1l3470:
 15243  0612  0023               	movlb	3	; select bank3
 15244  0613  0C0F               	rrf	15,w	;volatile
 15245  0614  0C89               	rrf	9,f
 15246  0615  3901               	andlw	1
 15247  0616  00F3               	movwf	??i1_LCDsend2x4
 15248  0617  0811               	movf	17,w	;volatile
 15249  0618  391F               	andlw	31
 15250  0619  0473               	iorwf	??i1_LCDsend2x4,w
 15251  061A  1D03               	btfss	3,2
 15252  061B  2E1D               	goto	u251_21
 15253  061C  2E1E               	goto	u251_20
 15254  061D                     u251_21:
 15255  061D  2E12               	goto	i1l3470
 15256  061E                     u251_20:
 15257  061E                     i1l3472:
 15258                           
 15259                           ;main.c: 145: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 15260  061E  0876               	movf	i1LCDsend2x4@hc,w
 15261  061F  0472               	iorwf	i1LCDsend2x4@mode,w
 15262  0620  3808               	iorlw	8
 15263  0621  3187  27B2  3185   	fcall	i1_WriteI2C
 15264  0624                     i1l3474:
 15265  0624  0023               	movlb	3	; select bank3
 15266  0625  0C0F               	rrf	15,w	;volatile
 15267  0626  0C89               	rrf	9,f
 15268  0627  3901               	andlw	1
 15269  0628  00F3               	movwf	??i1_LCDsend2x4
 15270  0629  0811               	movf	17,w	;volatile
 15271  062A  391F               	andlw	31
 15272  062B  0473               	iorwf	??i1_LCDsend2x4,w
 15273  062C  1D03               	btfss	3,2
 15274  062D  2E2F               	goto	u252_21
 15275  062E  2E30               	goto	u252_20
 15276  062F                     u252_21:
 15277  062F  2E24               	goto	i1l3474
 15278  0630                     u252_20:
 15279  0630                     i1l3476:
 15280                           
 15281                           ;main.c: 146: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 15282  0630  0876               	movf	i1LCDsend2x4@hc,w
 15283  0631  0472               	iorwf	i1LCDsend2x4@mode,w
 15284  0632  380C               	iorlw	12
 15285  0633  3187  27B2  3185   	fcall	i1_WriteI2C
 15286  0636                     i1l3478:
 15287  0636  0023               	movlb	3	; select bank3
 15288  0637  0C0F               	rrf	15,w	;volatile
 15289  0638  0C89               	rrf	9,f
 15290  0639  3901               	andlw	1
 15291  063A  00F3               	movwf	??i1_LCDsend2x4
 15292  063B  0811               	movf	17,w	;volatile
 15293  063C  391F               	andlw	31
 15294  063D  0473               	iorwf	??i1_LCDsend2x4,w
 15295  063E  1D03               	btfss	3,2
 15296  063F  2E41               	goto	u253_21
 15297  0640  2E42               	goto	u253_20
 15298  0641                     u253_21:
 15299  0641  2E36               	goto	i1l3478
 15300  0642                     u253_20:
 15301  0642                     i1l1040:
 15302  0642                     i1l3480:	
 15303                           ;main.c: 147: _delay((unsigned long)((1)*(1000000/4000000.0)));
 15304                           
 15305                           
 15306                           ;main.c: 148: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 15307  0642  0876               	movf	i1LCDsend2x4@hc,w
 15308  0643  0472               	iorwf	i1LCDsend2x4@mode,w
 15309  0644  3808               	iorlw	8
 15310  0645  3187  27B2  3185   	fcall	i1_WriteI2C
 15311  0648                     i1l3482:
 15312  0648  0023               	movlb	3	; select bank3
 15313  0649  0C0F               	rrf	15,w	;volatile
 15314  064A  0C89               	rrf	9,f
 15315  064B  3901               	andlw	1
 15316  064C  00F3               	movwf	??i1_LCDsend2x4
 15317  064D  0811               	movf	17,w	;volatile
 15318  064E  391F               	andlw	31
 15319  064F  0473               	iorwf	??i1_LCDsend2x4,w
 15320  0650  1D03               	btfss	3,2
 15321  0651  2E53               	goto	u254_21
 15322  0652  2E54               	goto	u254_20
 15323  0653                     u254_21:
 15324  0653  2E48               	goto	i1l3482
 15325  0654                     u254_20:
 15326  0654                     i1l3484:
 15327                           
 15328                           ;main.c: 149: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 15329  0654  0877               	movf	i1LCDsend2x4@lc,w
 15330  0655  0472               	iorwf	i1LCDsend2x4@mode,w
 15331  0656  3808               	iorlw	8
 15332  0657  3187  27B2  3185   	fcall	i1_WriteI2C
 15333  065A                     i1l3486:
 15334  065A  0023               	movlb	3	; select bank3
 15335  065B  0C0F               	rrf	15,w	;volatile
 15336  065C  0C89               	rrf	9,f
 15337  065D  3901               	andlw	1
 15338  065E  00F3               	movwf	??i1_LCDsend2x4
 15339  065F  0811               	movf	17,w	;volatile
 15340  0660  391F               	andlw	31
 15341  0661  0473               	iorwf	??i1_LCDsend2x4,w
 15342  0662  1D03               	btfss	3,2
 15343  0663  2E65               	goto	u255_21
 15344  0664  2E66               	goto	u255_20
 15345  0665                     u255_21:
 15346  0665  2E5A               	goto	i1l3486
 15347  0666                     u255_20:
 15348  0666                     i1l3488:
 15349                           
 15350                           ;main.c: 150: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
 15351  0666  0877               	movf	i1LCDsend2x4@lc,w
 15352  0667  0472               	iorwf	i1LCDsend2x4@mode,w
 15353  0668  380C               	iorlw	12
 15354  0669  3187  27B2  3185   	fcall	i1_WriteI2C
 15355  066C                     i1l3490:
 15356  066C  0023               	movlb	3	; select bank3
 15357  066D  0C0F               	rrf	15,w	;volatile
 15358  066E  0C89               	rrf	9,f
 15359  066F  3901               	andlw	1
 15360  0670  00F3               	movwf	??i1_LCDsend2x4
 15361  0671  0811               	movf	17,w	;volatile
 15362  0672  391F               	andlw	31
 15363  0673  0473               	iorwf	??i1_LCDsend2x4,w
 15364  0674  1D03               	btfss	3,2
 15365  0675  2E77               	goto	u256_21
 15366  0676  2E78               	goto	u256_20
 15367  0677                     u256_21:
 15368  0677  2E6C               	goto	i1l3490
 15369  0678                     u256_20:
 15370  0678                     i1l1049:
 15371  0678                     i1l3492:	
 15372                           ;main.c: 151: _delay((unsigned long)((1)*(1000000/4000000.0)));
 15373                           
 15374                           
 15375                           ;main.c: 152: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
 15376  0678  0877               	movf	i1LCDsend2x4@lc,w
 15377  0679  0472               	iorwf	i1LCDsend2x4@mode,w
 15378  067A  3808               	iorlw	8
 15379  067B  3187  27B2  3185   	fcall	i1_WriteI2C
 15380  067E                     i1l3494:
 15381  067E  0023               	movlb	3	; select bank3
 15382  067F  0C0F               	rrf	15,w	;volatile
 15383  0680  0C89               	rrf	9,f
 15384  0681  3901               	andlw	1
 15385  0682  00F3               	movwf	??i1_LCDsend2x4
 15386  0683  0811               	movf	17,w	;volatile
 15387  0684  391F               	andlw	31
 15388  0685  0473               	iorwf	??i1_LCDsend2x4,w
 15389  0686  1D03               	btfss	3,2
 15390  0687  2E89               	goto	u257_21
 15391  0688  2E8A               	goto	u257_20
 15392  0689                     u257_21:
 15393  0689  2E7E               	goto	i1l3494
 15394  068A                     u257_20:
 15395  068A                     i1l1052:
 15396                           
 15397                           ;main.c: 153: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 15398  068A  1511               	bsf	17,2	;volatile
 15399  068B                     i1l1053:
 15400  068B  1911               	btfsc	17,2	;volatile
 15401  068C  2E8E               	goto	u258_21
 15402  068D  2E8F               	goto	u258_20
 15403  068E                     u258_21:
 15404  068E  2E8B               	goto	i1l1053
 15405  068F                     u258_20:
 15406  068F                     i1l3496:
 15407                           
 15408                           ;main.c: 154: _delay((unsigned long)((50)*(1000000/4000000.0)));
 15409  068F  3004               	movlw	4
 15410  0690                     u491_27:
 15411  0690  0B89               	decfsz	9,f
 15412  0691  2E90               	goto	u491_27
 15413  0692                     i1l1056:
 15414  0692  0008               	return
 15415  0693                     __end_ofi1_LCDsend2x4:
 15416                           
 15417                           	psect	text55
 15418  07B2                     __ptext55:	
 15419 ;; *************** function i1_WriteI2C *****************
 15420 ;; Defined at:
 15421 ;;		line 47 in file "I2C/i2c.c"
 15422 ;; Parameters:    Size  Location     Type
 15423 ;;  data_out        1    wreg     unsigned char 
 15424 ;; Auto vars:     Size  Location     Type
 15425 ;;  data_out        1    1[COMMON] unsigned char 
 15426 ;; Return value:  Size  Location     Type
 15427 ;;                  1    wreg      char 
 15428 ;; Registers used:
 15429 ;;		wreg, status,2, status,0
 15430 ;; Tracked objects:
 15431 ;;		On entry : 0/0
 15432 ;;		On exit  : 0/0
 15433 ;;		Unchanged: 0/0
 15434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15437 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15438 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15439 ;;Total ram usage:        2 bytes
 15440 ;; Hardware stack levels used:    1
 15441 ;; This function calls:
 15442 ;;		Nothing
 15443 ;; This function is called by:
 15444 ;;		_tsttc
 15445 ;;		i1_LCDsend2x4
 15446 ;; This function uses a non-reentrant model
 15447 ;;
 15448                           
 15449                           
 15450                           ;psect for function i1_WriteI2C
 15451  07B2                     i1_WriteI2C:
 15452                           
 15453                           ;incstack = 0
 15454                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 15455                           ;i1WriteI2C@data_out stored from wreg
 15456  07B2  00F1               	movwf	i1WriteI2C@data_out
 15457  07B3                     i1l3430:
 15458                           
 15459                           ;i2c.c: 49: SSP1BUF = data_out;
 15460  07B3  0871               	movf	i1WriteI2C@data_out,w
 15461  07B4  0023               	movlb	3	; select bank3
 15462  07B5  008C               	movwf	12	;volatile
 15463  07B6                     i1l3432:
 15464                           
 15465                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 15466  07B6  1F90               	btfss	16,7	;volatile
 15467  07B7  2FB9               	goto	u238_21
 15468  07B8  2FBA               	goto	u238_20
 15469  07B9                     u238_21:
 15470  07B9  2FBB               	goto	i1l3438
 15471  07BA                     u238_20:
 15472  07BA  2FFC               	goto	i1l30
 15473  07BB                     i1l3438:
 15474                           
 15475                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 15476  07BB  300F               	movlw	15
 15477  07BC  0510               	andwf	16,w	;volatile
 15478  07BD  00F0               	movwf	??i1_WriteI2C
 15479  07BE  3008               	movlw	8
 15480  07BF  0670               	xorwf	??i1_WriteI2C,w
 15481  07C0  1903               	btfsc	3,2
 15482  07C1  2FC3               	goto	u239_21
 15483  07C2  2FC4               	goto	u239_20
 15484  07C3                     u239_21:
 15485  07C3  2FDA               	goto	i1l3450
 15486  07C4                     u239_20:
 15487  07C4                     i1l3440:
 15488  07C4  300F               	movlw	15
 15489  07C5  0510               	andwf	16,w	;volatile
 15490  07C6  00F0               	movwf	??i1_WriteI2C
 15491  07C7  300B               	movlw	11
 15492  07C8  0670               	xorwf	??i1_WriteI2C,w
 15493  07C9  1903               	btfsc	3,2
 15494  07CA  2FCC               	goto	u240_21
 15495  07CB  2FCD               	goto	u240_20
 15496  07CC                     u240_21:
 15497  07CC  2FDA               	goto	i1l3450
 15498  07CD                     u240_20:
 15499  07CD                     i1l3442:
 15500                           
 15501                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 15502  07CD  1610               	bsf	16,4	;volatile
 15503  07CE                     i1l33:	
 15504                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 15505                           
 15506  07CE  002E               	movlb	14	; select bank14
 15507  07CF  1C0F               	btfss	15,0	;volatile
 15508  07D0  2FD2               	goto	u241_21
 15509  07D1  2FD3               	goto	u241_20
 15510  07D2                     u241_21:
 15511  07D2  2FCE               	goto	i1l33
 15512  07D3                     u241_20:
 15513  07D3                     i1l35:
 15514                           
 15515                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 15516  07D3  0023               	movlb	3	; select bank3
 15517  07D4  190F               	btfsc	15,2	;volatile
 15518  07D5  2FD7               	goto	u242_21
 15519  07D6  2FD8               	goto	u242_20
 15520  07D7                     u242_21:
 15521  07D7  2FFC               	goto	i1l30
 15522  07D8                     u242_20:
 15523  07D8                     i1l3444:
 15524  07D8  080F               	movf	15,w	;volatile
 15525  07D9  2FFC               	goto	i1l30
 15526  07DA                     i1l3450:
 15527                           
 15528                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 15529  07DA  300F               	movlw	15
 15530  07DB  0510               	andwf	16,w	;volatile
 15531  07DC  00F0               	movwf	??i1_WriteI2C
 15532  07DD  3008               	movlw	8
 15533  07DE  0670               	xorwf	??i1_WriteI2C,w
 15534  07DF  1903               	btfsc	3,2
 15535  07E0  2FE2               	goto	u243_21
 15536  07E1  2FE3               	goto	u243_20
 15537  07E2                     u243_21:
 15538  07E2  2FEC               	goto	i1l42
 15539  07E3                     u243_20:
 15540  07E3                     i1l3452:
 15541  07E3  300F               	movlw	15
 15542  07E4  0510               	andwf	16,w	;volatile
 15543  07E5  00F0               	movwf	??i1_WriteI2C
 15544  07E6  300B               	movlw	11
 15545  07E7  0670               	xorwf	??i1_WriteI2C,w
 15546  07E8  1D03               	btfss	3,2
 15547  07E9  2FEB               	goto	u244_21
 15548  07EA  2FEC               	goto	u244_20
 15549  07EB                     u244_21:
 15550  07EB  2FFC               	goto	i1l30
 15551  07EC                     u244_20:
 15552  07EC                     i1l42:
 15553  07EC  180F               	btfsc	15,0	;volatile
 15554  07ED  2FEF               	goto	u245_21
 15555  07EE  2FF0               	goto	u245_20
 15556  07EF                     u245_21:
 15557  07EF  2FEC               	goto	i1l42
 15558  07F0                     u245_20:
 15559  07F0                     i1l3454:
 15560  07F0  0C0F               	rrf	15,w	;volatile
 15561  07F1  0C89               	rrf	9,f
 15562  07F2  3901               	andlw	1
 15563  07F3  00F0               	movwf	??i1_WriteI2C
 15564  07F4  0811               	movf	17,w	;volatile
 15565  07F5  391F               	andlw	31
 15566  07F6  0470               	iorwf	??i1_WriteI2C,w
 15567  07F7  1D03               	btfss	3,2
 15568  07F8  2FFA               	goto	u246_21
 15569  07F9  2FFB               	goto	u246_20
 15570  07FA                     u246_21:
 15571  07FA  2FF0               	goto	i1l3454
 15572  07FB                     u246_20:
 15573  07FB                     i1l47:
 15574                           
 15575                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 15576  07FB  0811               	movf	17,w	;volatile
 15577  07FC                     i1l30:
 15578  07FC  0008               	return
 15579  07FD                     __end_ofi1_WriteI2C:
 15580                           
 15581                           	psect	text56
 15582  0AB4                     __ptext56:	
 15583 ;; *************** function _TMR3_WriteTimer *****************
 15584 ;; Defined at:
 15585 ;;		line 127 in file "mcc_generated_files/tmr3.c"
 15586 ;; Parameters:    Size  Location     Type
 15587 ;;  timerVal        2    0[COMMON] unsigned int 
 15588 ;; Auto vars:     Size  Location     Type
 15589 ;;		None
 15590 ;; Return value:  Size  Location     Type
 15591 ;;                  1    wreg      void 
 15592 ;; Registers used:
 15593 ;;		wreg, status,2
 15594 ;; Tracked objects:
 15595 ;;		On entry : 0/0
 15596 ;;		On exit  : 0/0
 15597 ;;		Unchanged: 0/0
 15598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15599 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15602 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15603 ;;Total ram usage:        2 bytes
 15604 ;; Hardware stack levels used:    1
 15605 ;; This function calls:
 15606 ;;		Nothing
 15607 ;; This function is called by:
 15608 ;;		_TMR3_ISR
 15609 ;;		_TMR3_Reload
 15610 ;; This function uses a non-reentrant model
 15611 ;;
 15612                           
 15613                           
 15614                           ;psect for function _TMR3_WriteTimer
 15615  0AB4                     _TMR3_WriteTimer:
 15616  0AB4                     i1l3970:	
 15617                           ;incstack = 0
 15618                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 15619                           
 15620                           
 15621                           ;tmr3.c: 129: if (T3CONbits.nT3SYNC == 1)
 15622  0AB4  0024               	movlb	4	; select bank4
 15623  0AB5  1D14               	btfss	20,2	;volatile
 15624  0AB6  2AB8               	goto	u339_21
 15625  0AB7  2AB9               	goto	u339_20
 15626  0AB8                     u339_21:
 15627  0AB8  2AC0               	goto	i1l3980
 15628  0AB9                     u339_20:
 15629  0AB9                     i1l3972:
 15630                           
 15631                           ;tmr3.c: 130: {;tmr3.c: 132: T3CONbits.TMR3ON = 0;
 15632  0AB9  1014               	bcf	20,0	;volatile
 15633  0ABA                     i1l3974:
 15634                           
 15635                           ;tmr3.c: 135: TMR3H = (timerVal >> 8);
 15636  0ABA  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 15637  0ABB  0093               	movwf	19	;volatile
 15638  0ABC                     i1l3976:
 15639                           
 15640                           ;tmr3.c: 136: TMR3L = timerVal;
 15641  0ABC  0870               	movf	TMR3_WriteTimer@timerVal,w
 15642  0ABD  0092               	movwf	18	;volatile
 15643  0ABE                     i1l3978:
 15644                           
 15645                           ;tmr3.c: 139: T3CONbits.TMR3ON =1;
 15646  0ABE  1414               	bsf	20,0	;volatile
 15647                           
 15648                           ;tmr3.c: 140: }
 15649  0ABF  2AC4               	goto	i1l465
 15650  0AC0                     i1l3980:
 15651                           
 15652                           ;tmr3.c: 141: else;tmr3.c: 142: {;tmr3.c: 144: TMR3H = (timerVal >> 8);
 15653  0AC0  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 15654  0AC1  0093               	movwf	19	;volatile
 15655  0AC2                     i1l3982:
 15656                           
 15657                           ;tmr3.c: 145: TMR3L = timerVal;
 15658  0AC2  0870               	movf	TMR3_WriteTimer@timerVal,w
 15659  0AC3  0092               	movwf	18	;volatile
 15660  0AC4                     i1l465:
 15661  0AC4  0008               	return
 15662  0AC5                     __end_of_TMR3_WriteTimer:
 15663                           
 15664                           	psect	text57
 15665  0B24                     __ptext57:	
 15666 ;; *************** function _TMR1_ISR *****************
 15667 ;; Defined at:
 15668 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 15669 ;; Parameters:    Size  Location     Type
 15670 ;;		None
 15671 ;; Auto vars:     Size  Location     Type
 15672 ;;		None
 15673 ;; Return value:  Size  Location     Type
 15674 ;;                  1    wreg      void 
 15675 ;; Registers used:
 15676 ;;		wreg, status,2, status,0, pclath, cstack
 15677 ;; Tracked objects:
 15678 ;;		On entry : 0/0
 15679 ;;		On exit  : 0/0
 15680 ;;		Unchanged: 0/0
 15681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15686 ;;Total ram usage:        0 bytes
 15687 ;; Hardware stack levels used:    1
 15688 ;; Hardware stack levels required when called:    1
 15689 ;; This function calls:
 15690 ;;		Absolute function
 15691 ;;		_Clock_ISR
 15692 ;;		_TMR1_DefaultInterruptHandler
 15693 ;;		_TMR1_WriteTimer
 15694 ;; This function is called by:
 15695 ;;		_INTERRUPT_InterruptManager
 15696 ;; This function uses a non-reentrant model
 15697 ;;
 15698                           
 15699                           
 15700                           ;psect for function _TMR1_ISR
 15701  0B24                     _TMR1_ISR:
 15702  0B24                     i1l4284:	
 15703                           ;incstack = 0
 15704                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 15705                           
 15706                           
 15707                           ;tmr1.c: 168: PIR4bits.TMR1IF = 0;
 15708  0B24  002E               	movlb	14	; select bank14
 15709  0B25  1010               	bcf	16,0	;volatile
 15710  0B26                     i1l4286:
 15711                           
 15712                           ;tmr1.c: 169: TMR1_WriteTimer(timer1ReloadVal);
 15713  0B26  0021               	movlb	1	; select bank1
 15714  0B27  0829               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 15715  0B28  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 15716  0B29  0828               	movf	_timer1ReloadVal^(0+128),w	;volatile
 15717  0B2A  00F0               	movwf	TMR1_WriteTimer@timerVal
 15718  0B2B  318A  22A3  318B   	fcall	_TMR1_WriteTimer
 15719  0B2E                     i1l4288:
 15720                           
 15721                           ;tmr1.c: 171: if(TMR1_InterruptHandler)
 15722  0B2E  0021               	movlb	1	; select bank1
 15723  0B2F  0826               	movf	_TMR1_InterruptHandler^(0+128),w
 15724  0B30  0427               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 15725  0B31  1903               	btfsc	3,2
 15726  0B32  2B34               	goto	u403_21
 15727  0B33  2B35               	goto	u403_20
 15728  0B34                     u403_21:
 15729  0B34  2B3A               	goto	i1l414
 15730  0B35                     u403_20:
 15731  0B35                     i1l4290:
 15732                           
 15733                           ;tmr1.c: 172: {;tmr1.c: 173: TMR1_InterruptHandler();
 15734  0B35  0827               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 15735  0B36  008A               	movwf	10
 15736  0B37  0826               	movf	_TMR1_InterruptHandler^(0+128),w
 15737  0B38  000A               	callw
 15738  0B39  318B               	pagesel	$
 15739  0B3A                     i1l414:
 15740  0B3A  0008               	return
 15741  0B3B                     __end_of_TMR1_ISR:
 15742                           
 15743                           	psect	text58
 15744  0AA3                     __ptext58:	
 15745 ;; *************** function _TMR1_WriteTimer *****************
 15746 ;; Defined at:
 15747 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 15748 ;; Parameters:    Size  Location     Type
 15749 ;;  timerVal        2    0[COMMON] unsigned int 
 15750 ;; Auto vars:     Size  Location     Type
 15751 ;;		None
 15752 ;; Return value:  Size  Location     Type
 15753 ;;                  1    wreg      void 
 15754 ;; Registers used:
 15755 ;;		wreg, status,2
 15756 ;; Tracked objects:
 15757 ;;		On entry : 0/0
 15758 ;;		On exit  : 0/0
 15759 ;;		Unchanged: 0/0
 15760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15764 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15765 ;;Total ram usage:        2 bytes
 15766 ;; Hardware stack levels used:    1
 15767 ;; This function calls:
 15768 ;;		Nothing
 15769 ;; This function is called by:
 15770 ;;		_TMR1_ISR
 15771 ;;		_TMR1_Reload
 15772 ;; This function uses a non-reentrant model
 15773 ;;
 15774                           
 15775                           
 15776                           ;psect for function _TMR1_WriteTimer
 15777  0AA3                     _TMR1_WriteTimer:
 15778  0AA3                     i1l3956:	
 15779                           ;incstack = 0
 15780                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 15781                           
 15782                           
 15783                           ;tmr1.c: 129: if (T1CONbits.nT1SYNC == 1)
 15784  0AA3  0024               	movlb	4	; select bank4
 15785  0AA4  1D0E               	btfss	14,2	;volatile
 15786  0AA5  2AA7               	goto	u338_21
 15787  0AA6  2AA8               	goto	u338_20
 15788  0AA7                     u338_21:
 15789  0AA7  2AAF               	goto	i1l3966
 15790  0AA8                     u338_20:
 15791  0AA8                     i1l3958:
 15792                           
 15793                           ;tmr1.c: 130: {;tmr1.c: 132: T1CONbits.TMR1ON = 0;
 15794  0AA8  100E               	bcf	14,0	;volatile
 15795  0AA9                     i1l3960:
 15796                           
 15797                           ;tmr1.c: 135: TMR1H = (timerVal >> 8);
 15798  0AA9  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15799  0AAA  008D               	movwf	13	;volatile
 15800  0AAB                     i1l3962:
 15801                           
 15802                           ;tmr1.c: 136: TMR1L = timerVal;
 15803  0AAB  0870               	movf	TMR1_WriteTimer@timerVal,w
 15804  0AAC  008C               	movwf	12	;volatile
 15805  0AAD                     i1l3964:
 15806                           
 15807                           ;tmr1.c: 139: T1CONbits.TMR1ON =1;
 15808  0AAD  140E               	bsf	14,0	;volatile
 15809                           
 15810                           ;tmr1.c: 140: }
 15811  0AAE  2AB3               	goto	i1l401
 15812  0AAF                     i1l3966:
 15813                           
 15814                           ;tmr1.c: 141: else;tmr1.c: 142: {;tmr1.c: 144: TMR1H = (timerVal >> 8);
 15815  0AAF  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15816  0AB0  008D               	movwf	13	;volatile
 15817  0AB1                     i1l3968:
 15818                           
 15819                           ;tmr1.c: 145: TMR1L = timerVal;
 15820  0AB1  0870               	movf	TMR1_WriteTimer@timerVal,w
 15821  0AB2  008C               	movwf	12	;volatile
 15822  0AB3                     i1l401:
 15823  0AB3  0008               	return
 15824  0AB4                     __end_of_TMR1_WriteTimer:
 15825                           
 15826                           	psect	text59
 15827  0F87                     __ptext59:	
 15828 ;; *************** function _Clock_ISR *****************
 15829 ;; Defined at:
 15830 ;;		line 290 in file "main.c"
 15831 ;; Parameters:    Size  Location     Type
 15832 ;;		None
 15833 ;; Auto vars:     Size  Location     Type
 15834 ;;		None
 15835 ;; Return value:  Size  Location     Type
 15836 ;;                  1    wreg      void 
 15837 ;; Registers used:
 15838 ;;		wreg, status,2, status,0
 15839 ;; Tracked objects:
 15840 ;;		On entry : 0/0
 15841 ;;		On exit  : 0/0
 15842 ;;		Unchanged: 0/0
 15843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15846 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15847 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15848 ;;Total ram usage:        1 bytes
 15849 ;; Hardware stack levels used:    1
 15850 ;; This function calls:
 15851 ;;		Nothing
 15852 ;; This function is called by:
 15853 ;;		_main
 15854 ;;		_TMR1_ISR
 15855 ;; This function uses a non-reentrant model
 15856 ;;
 15857                           
 15858                           
 15859                           ;psect for function _Clock_ISR
 15860  0F87                     _Clock_ISR:
 15861  0F87                     i1l4052:	
 15862                           ;incstack = 0
 15863                           ; Regs used in _Clock_ISR: [wreg+status,2+status,0]
 15864                           
 15865                           
 15866                           ;main.c: 292: t.s++;
 15867  0F87  3001               	movlw	1
 15868  0F88  0020               	movlb	0	; select bank0
 15869  0F89  07D0               	addwf	_t+4,f
 15870  0F8A  3000               	movlw	0
 15871  0F8B  3DD1               	addwfc	_t+5,f
 15872  0F8C                     i1l4054:
 15873                           
 15874                           ;main.c: 294: if(t.s==60){
 15875  0F8C  303C               	movlw	60
 15876  0F8D  0650               	xorwf	_t+4,w
 15877  0F8E  0451               	iorwf	_t+5,w
 15878  0F8F  1D03               	btfss	3,2
 15879  0F90  2F92               	goto	u359_21
 15880  0F91  2F93               	goto	u359_20
 15881  0F92                     u359_21:
 15882  0F92  2F99               	goto	i1l4060
 15883  0F93                     u359_20:
 15884  0F93                     i1l4056:
 15885                           
 15886                           ;main.c: 295: t.m++;
 15887  0F93  3001               	movlw	1
 15888  0F94  07CE               	addwf	_t+2,f
 15889  0F95  3000               	movlw	0
 15890  0F96  3DCF               	addwfc	_t+3,f
 15891  0F97                     i1l4058:
 15892                           
 15893                           ;main.c: 296: t.s=0;
 15894  0F97  01D0               	clrf	_t+4
 15895  0F98  01D1               	clrf	_t+5
 15896  0F99                     i1l4060:
 15897                           
 15898                           ;main.c: 297: };main.c: 298: if(t.m==60){
 15899  0F99  303C               	movlw	60
 15900  0F9A  064E               	xorwf	_t+2,w
 15901  0F9B  044F               	iorwf	_t+3,w
 15902  0F9C  1D03               	btfss	3,2
 15903  0F9D  2F9F               	goto	u360_21
 15904  0F9E  2FA0               	goto	u360_20
 15905  0F9F                     u360_21:
 15906  0F9F  2FA6               	goto	i1l4066
 15907  0FA0                     u360_20:
 15908  0FA0                     i1l4062:
 15909                           
 15910                           ;main.c: 300: t.h++;
 15911  0FA0  3001               	movlw	1
 15912  0FA1  07CC               	addwf	_t,f
 15913  0FA2  3000               	movlw	0
 15914  0FA3  3DCD               	addwfc	_t+1,f
 15915  0FA4                     i1l4064:
 15916                           
 15917                           ;main.c: 301: t.m=0;
 15918  0FA4  01CE               	clrf	_t+2
 15919  0FA5  01CF               	clrf	_t+3
 15920  0FA6                     i1l4066:
 15921                           
 15922                           ;main.c: 302: };main.c: 303: if(t.h==24){
 15923  0FA6  3018               	movlw	24
 15924  0FA7  064C               	xorwf	_t,w
 15925  0FA8  044D               	iorwf	_t+1,w
 15926  0FA9  1D03               	btfss	3,2
 15927  0FAA  2FAC               	goto	u361_21
 15928  0FAB  2FAD               	goto	u361_20
 15929  0FAC                     u361_21:
 15930  0FAC  2FAF               	goto	i1l4070
 15931  0FAD                     u361_20:
 15932  0FAD                     i1l4068:
 15933                           
 15934                           ;main.c: 304: t.h=0;
 15935  0FAD  01CC               	clrf	_t
 15936  0FAE  01CD               	clrf	_t+1
 15937  0FAF                     i1l4070:
 15938                           
 15939                           ;main.c: 305: };main.c: 308: if(alarmsEnable && t.s >= clkAlarm.alarmVal.s && t.m >= clk
      +                          Alarm.alarmVal.m && t.h >= clkAlarm.alarmVal.h && editingClockAlarm == 0){
 15940  0FAF  086D               	movf	_alarmsEnable,w
 15941  0FB0  1903               	btfsc	3,2
 15942  0FB1  2FB3               	goto	u362_21
 15943  0FB2  2FB4               	goto	u362_20
 15944  0FB3                     u362_21:
 15945  0FB3  2FF3               	goto	i1l4084
 15946  0FB4                     u362_20:
 15947  0FB4                     i1l4072:
 15948  0FB4  0851               	movf	_t+5,w
 15949  0FB5  3A80               	xorlw	128
 15950  0FB6  00F0               	movwf	??_Clock_ISR
 15951  0FB7  0865               	movf	_clkAlarm+5,w
 15952  0FB8  3A80               	xorlw	128
 15953  0FB9  0270               	subwf	??_Clock_ISR,w
 15954  0FBA  1D03               	skipz
 15955  0FBB  2FBE               	goto	u363_25
 15956  0FBC  0864               	movf	_clkAlarm+4,w
 15957  0FBD  0250               	subwf	_t+4,w
 15958  0FBE                     u363_25:
 15959  0FBE  1C03               	skipc
 15960  0FBF  2FC1               	goto	u363_21
 15961  0FC0  2FC2               	goto	u363_20
 15962  0FC1                     u363_21:
 15963  0FC1  2FF3               	goto	i1l4084
 15964  0FC2                     u363_20:
 15965  0FC2                     i1l4074:
 15966  0FC2  0020               	movlb	0	; select bank0
 15967  0FC3  084F               	movf	_t+3,w
 15968  0FC4  3A80               	xorlw	128
 15969  0FC5  00F0               	movwf	??_Clock_ISR
 15970  0FC6  0863               	movf	_clkAlarm+3,w
 15971  0FC7  3A80               	xorlw	128
 15972  0FC8  0270               	subwf	??_Clock_ISR,w
 15973  0FC9  1D03               	skipz
 15974  0FCA  2FCD               	goto	u364_25
 15975  0FCB  0862               	movf	_clkAlarm+2,w
 15976  0FCC  024E               	subwf	_t+2,w
 15977  0FCD                     u364_25:
 15978  0FCD  1C03               	skipc
 15979  0FCE  2FD0               	goto	u364_21
 15980  0FCF  2FD1               	goto	u364_20
 15981  0FD0                     u364_21:
 15982  0FD0  2FF3               	goto	i1l4084
 15983  0FD1                     u364_20:
 15984  0FD1                     i1l4076:
 15985  0FD1  0020               	movlb	0	; select bank0
 15986  0FD2  084D               	movf	_t+1,w
 15987  0FD3  3A80               	xorlw	128
 15988  0FD4  00F0               	movwf	??_Clock_ISR
 15989  0FD5  0861               	movf	_clkAlarm+1,w
 15990  0FD6  3A80               	xorlw	128
 15991  0FD7  0270               	subwf	??_Clock_ISR,w
 15992  0FD8  1D03               	skipz
 15993  0FD9  2FDC               	goto	u365_25
 15994  0FDA  0860               	movf	_clkAlarm,w
 15995  0FDB  024C               	subwf	_t,w
 15996  0FDC                     u365_25:
 15997  0FDC  1C03               	skipc
 15998  0FDD  2FDF               	goto	u365_21
 15999  0FDE  2FE0               	goto	u365_20
 16000  0FDF                     u365_21:
 16001  0FDF  2FF3               	goto	i1l4084
 16002  0FE0                     u365_20:
 16003  0FE0                     i1l4078:
 16004  0FE0  0020               	movlb	0	; select bank0
 16005  0FE1  0854               	movf	_editingClockAlarm,w
 16006  0FE2  0455               	iorwf	_editingClockAlarm+1,w
 16007  0FE3  1D03               	btfss	3,2
 16008  0FE4  2FE6               	goto	u366_21
 16009  0FE5  2FE7               	goto	u366_20
 16010  0FE6                     u366_21:
 16011  0FE6  2FF3               	goto	i1l4084
 16012  0FE7                     u366_20:
 16013  0FE7                     i1l4080:
 16014                           
 16015                           ;main.c: 309: alarmPWMStart.h = -1;
 16016  0FE7  30FF               	movlw	255
 16017  0FE8  0021               	movlb	1	; select bank1
 16018  0FE9  00BA               	movwf	_alarmPWMStart^(0+128)
 16019  0FEA  30FF               	movlw	255
 16020  0FEB  00BB               	movwf	(_alarmPWMStart^(0+128)+1)
 16021  0FEC                     i1l4082:
 16022                           
 16023                           ;main.c: 310: clkAlarm.trigger = 1;
 16024  0FEC  0020               	movlb	0	; select bank0
 16025  0FED  01E6               	clrf	_clkAlarm+6
 16026  0FEE  0AE6               	incf	_clkAlarm+6,f
 16027                           
 16028                           ;main.c: 311: clkAlarm.alarmVal.h = 25;
 16029  0FEF  3019               	movlw	25
 16030  0FF0  00E0               	movwf	_clkAlarm
 16031  0FF1  3000               	movlw	0
 16032  0FF2  00E1               	movwf	_clkAlarm+1
 16033  0FF3                     i1l4084:
 16034  0FF3  1003               	clrc
 16035  0FF4  0020               	movlb	0	; select bank0
 16036  0FF5  1F96               	btfss	22,7	;volatile
 16037  0FF6  1403               	setc
 16038  0FF7  1803               	btfsc	3,0
 16039  0FF8  2FFA               	goto	u367_21
 16040  0FF9  2FFD               	goto	u367_20
 16041  0FFA                     u367_21:
 16042  0FFA  0020               	movlb	0	; select bank0
 16043  0FFB  1796               	bsf	22,7	;volatile
 16044  0FFC  2FFF               	goto	u368_24
 16045  0FFD                     u367_20:
 16046  0FFD  0020               	movlb	0	; select bank0
 16047  0FFE  1396               	bcf	22,7	;volatile
 16048  0FFF                     u368_24:
 16049  0FFF                     i1l1128:
 16050  0FFF  0008               	return
 16051  1000                     __end_of_Clock_ISR:
 16052                           
 16053                           	psect	text60
 16054  0A0E                     __ptext60:	
 16055 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 16056 ;; Defined at:
 16057 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 16058 ;; Parameters:    Size  Location     Type
 16059 ;;		None
 16060 ;; Auto vars:     Size  Location     Type
 16061 ;;		None
 16062 ;; Return value:  Size  Location     Type
 16063 ;;                  1    wreg      void 
 16064 ;; Registers used:
 16065 ;;		None
 16066 ;; Tracked objects:
 16067 ;;		On entry : 0/0
 16068 ;;		On exit  : 0/0
 16069 ;;		Unchanged: 0/0
 16070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16075 ;;Total ram usage:        0 bytes
 16076 ;; Hardware stack levels used:    1
 16077 ;; This function calls:
 16078 ;;		Nothing
 16079 ;; This function is called by:
 16080 ;;		_TMR1_Initialize
 16081 ;;		_TMR1_ISR
 16082 ;; This function uses a non-reentrant model
 16083 ;;
 16084                           
 16085                           
 16086                           ;psect for function _TMR1_DefaultInterruptHandler
 16087  0A0E                     _TMR1_DefaultInterruptHandler:
 16088  0A0E                     i1l420:	
 16089                           ;incstack = 0
 16090                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 16091                           
 16092  0A0E  0008               	return
 16093  0A0F                     __end_of_TMR1_DefaultInterruptHandler:
 16094  007E                     btemp	set	126	;btemp
 16095  007E                     int$flags	set	126
 16096  007E                     wtemp0	set	126
 16097                           
 16098                           	psect	config
 16099                           
 16100                           ;Config register CONFIG1 @ 0x8007
 16101                           ;	External Oscillator mode selection bits
 16102                           ;	FEXTOSC = OFF, Oscillator not enabled
 16103                           ;	Power-up default value for COSC bits
 16104                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 16105                           ;	Clock Out Enable bit
 16106                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 16107                           ;	Clock Switch Enable bit
 16108                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 16109                           ;	Fail-Safe Clock Monitor Enable bit
 16110                           ;	FCMEN = ON, FSCM timer enabled
 16111  8007                     	org	32775
 16112  8007  3FEC               	dw	16364
 16113                           
 16114                           ;Config register CONFIG2 @ 0x8008
 16115                           ;	Master Clear Enable bit
 16116                           ;	MCLRE = ON, MCLR pin is Master Clear function
 16117                           ;	Power-up Timer Enable bit
 16118                           ;	PWRTE = OFF, PWRT disabled
 16119                           ;	Low-Power BOR enable bit
 16120                           ;	LPBOREN = OFF, ULPBOR disabled
 16121                           ;	Brown-out reset enable bits
 16122                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 16123                           ;	Brown-out Reset Voltage Selection
 16124                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 16125                           ;	Zero-cross detect disable
 16126                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 16127                           ;	Peripheral Pin Select one-way control
 16128                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 16129                           ;	Stack Overflow/Underflow Reset Enable bit
 16130                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 16131                           ;	Background Debugger
 16132                           ;	DEBUG = OFF, Background Debugger disabled
 16133  8008                     	org	32776
 16134  8008  3FFF               	dw	16383
 16135                           
 16136                           ;Config register CONFIG3 @ 0x8009
 16137                           ;	WDT Period Select bits
 16138                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 16139                           ;	WDT operating mode
 16140                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 16141                           ;	WDT Window Select bits
 16142                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 16143                           ;	WDT input clock selector
 16144                           ;	WDTCCS = SC, Software Control
 16145  8009                     	org	32777
 16146  8009  3F9F               	dw	16287
 16147                           
 16148                           ;Config register CONFIG4 @ 0x800A
 16149                           ;	UserNVM self-write protection bits
 16150                           ;	WRT = OFF, Write protection off
 16151                           ;	Scanner Enable bit
 16152                           ;	SCANE = available, Scanner module is available for use
 16153                           ;	Low Voltage Programming Enable bit
 16154                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 16155  800A                     	org	32778
 16156  800A  3FFF               	dw	16383
 16157                           
 16158                           ;Config register CONFIG5 @ 0x800B
 16159                           ;	UserNVM Program memory code protection bit
 16160                           ;	CP = OFF, Program Memory code protection disabled
 16161                           ;	DataNVM code protection bit
 16162                           ;	CPD = OFF, Data EEPROM code protection disabled
 16163  800B                     	org	32779
 16164  800B  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    10
    Data        20
    BSS         26
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     44      80
    BANK1            80     10      32
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[7]), STR_3(CODE[7]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    differenceBetweenTimePeriod@diff	PTR struct Time size(1) Largest target is 6
		 -> menuLCD_ISR@diff(BANK0[6]), 

    LCDstr@p	PTR unsigned char  size(1) Largest target is 8
		 -> menuLCD_ISR@l(BANK0[3]), menuLCD_ISR@tt(BANK0[4]), menuLCD_ISR@str(BANK0[8]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> monitoring_ISR(), TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> menuLCD_ISR(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Clock_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR5_ISR->_monitoring_ISR
    _monitoring_ISR->_ADCC_GetSingleConversion
    _monitoring_ISR->_tsttc
    _tsttc->i1_WriteI2C
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->i1_LCDsend2x4
    _LCDcmd->i1_LCDsend2x4
    i1_LCDsend2x4->i1_WriteI2C
    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR3_ISR->_menuLCD_ISR
    _menuLCD_ISR->_sprintf

Critical Paths under _main in BANK1

    _main->_LCDinit
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2044
                                              9 BANK1      1     1      0
                            _LCDinit
                 _PWM6_LoadDutyValue
              _PWM_Output_D4_Disable
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                     _TMR2_StopTimer
           _TMR3_SetInterruptHandler
           _TMR5_SetInterruptHandler
                          _editClock
                            _editLum
                           _editTemp
                   _i2c1_driver_open
                       _toggleAlarms
 ---------------------------------------------------------------------------------
 (1) _toggleAlarms                                         1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _editTemp                                             1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editLum                                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _editClock                                            1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StopTimer                                       0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (2) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     522
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0     174
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR5_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     174
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Output_D4_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM6_LoadDutyValue                                   4     2      2     220
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     780
                                              8 BANK1      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend2x4                                           6     5      1     736
                                              2 BANK1      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK1      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    5809
                           _TMR1_ISR
                           _TMR3_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR5_ISR                                             0     0      0     330
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
                     _monitoring_ISR *
 ---------------------------------------------------------------------------------
 (6) _monitoring_ISR                                       3     3      0      90
                                              4 COMMON     3     3      0
           _ADCC_GetSingleConversion
                              _tsttc
 ---------------------------------------------------------------------------------
 (7) _tsttc                                                2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (6) _TMR5_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR5_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0    5239
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                    _TMR3_WriteTimer
                        _menuLCD_ISR *
 ---------------------------------------------------------------------------------
 (6) _menuLCD_ISR                                         23    23      0    4999
                                             21 BANK0     23    23      0
                            _LCDchar
                             _LCDcmd
                             _LCDstr
               _PWM_Output_D4_Enable
                    _TMR2_StartTimer
        _differenceBetweenTimePeriod
                            _sprintf
               i1_PWM6_LoadDutyValue
            i1_PWM_Output_D4_Disable
                   i1_TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (7) i1_TMR2_StopTimer                                     0     0      0       0
                        i1_TMR2_Stop
 ---------------------------------------------------------------------------------
 (8) i1_TMR2_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM_Output_D4_Disable                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_PWM6_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             29    21      8    2651
                                              0 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) _differenceBetweenTimePeriod                         15     2     13     595
                                              0 COMMON    13     0     13
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (8) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _PWM_Output_D4_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LCDstr                                               3     3      0     550
                                              9 COMMON     3     3      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (8) _LCDchar                                              1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (7) _LCDcmd                                               1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (9) i1_LCDsend2x4                                         6     5      1     384
                                              2 COMMON     6     5      1
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (8) i1_WriteI2C                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _TMR3_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
                          _Clock_ISR *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Clock_ISR                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _PWM6_LoadDutyValue
   _PWM_Output_D4_Disable
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_StopTimer
     _TMR2_Stop
   _TMR3_SetInterruptHandler
   _TMR5_SetInterruptHandler
   _editClock
   _editLum
   _editTemp
   _i2c1_driver_open
   _toggleAlarms

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _Clock_ISR *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _TMR3_WriteTimer *
     _menuLCD_ISR *
       _LCDchar
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDcmd
         i1_LCDsend2x4
           i1_WriteI2C
       _LCDstr
         _LCDchar
           i1_LCDsend2x4
             i1_WriteI2C
       _PWM_Output_D4_Enable
       _TMR2_StartTimer
         _TMR2_Start
       _differenceBetweenTimePeriod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       i1_PWM6_LoadDutyValue
       i1_PWM_Output_D4_Disable
       i1_TMR2_StopTimer
         i1_TMR2_Stop
   _TMR5_ISR
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *
     _monitoring_ISR *
       _ADCC_GetSingleConversion
       _tsttc
         _ReadI2C
         i1_WriteI2C

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      A      20       7       40.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      7E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      7E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Oct 31 11:43:23 2020

                                       _t 004C          __end_of_TMR5_SetInterruptHandler 0A3C  
                              i1_WriteI2C 07B2                                        l30 0E47  
                                      l33 0E0F                                        l42 0E31  
                                      l35 0E14                                        l47 0E45  
                     ___wmul@multiplicand 0072                         ??_TMR5_WriteTimer 0072  
             __size_of_PWM6_LoadDutyValue 0019                                       l122 0D9A  
                                     l172 0BCE                                       l175 0A6D  
                                     l239 0A79                                       l417 0A2F  
                                     l178 0A64                                       l451 0C2B  
                                     l481 0A35                                       l705 0A3B  
                                     l722 0B98                                       l563 0B7F  
                                     l387 0C0C                                       l719 0A86  
                                     l923 0DAC                                       l675 0C4A  
                                     l924 0DAE                                       l764 07FF  
                                     l749 0A94                                       l935 0DE7  
                                     l767 0A29                                       l936 0DE9  
                                     l939 0DED                                       _PR2 028D  
                         _timer1ReloadVal 00A8                   __size_of_PMD_Initialize 0008  
                         _TMR2_Initialize 0A87                                       wreg 0009  
                             ?_LCDsend2x4 00AC                           __end_of_LCDchar 0A5D  
                                    l1040 0580                                      l1025 052E  
                                    l1201 071B                                      l1026 0530  
                                    l1210 0725                                      l1052 05D6  
                                    l1053 05D8                                      l1222 0D21  
                                    l1214 0D06                                      l1215 0D01  
                                    l1056 05DF                                      l1049 05C0  
                                    l1090 0A1D                                      l1234 0CE8  
                                    l1226 0CCD                                      l1059 0F86  
                                    l1227 0CC8                                      l1245 0C7B  
                                    l1237 0C4B                                      l1238 0C61  
                                    l1191 06CC                                      l1239 0C5C  
                                    l1263 0790                                      l4000 0D9D  
                                    l1192 06B1                                      l1264 0793  
                                    l1256 0788                                      l1265 0796  
                                    l4010 0DD4                                      l4002 0D9D  
                         _timer3ReloadVal 006E                                      l4012 0DD8  
                                    l4004 0DB2                                      l4020 0534  
                                    l4006 0DC1                                      l4030 056B  
                                    l4022 0543                                      l4014 050E  
                                    l4008 0DC5                                      l4040 059C  
                                    l4032 0571                                      l4024 0547  
                                    l4016 0513                                      l4050 05DC  
                                    l4042 05AB                                      l4034 0580  
                                    l4026 0556                                      l4018 051F  
                                    l4044 05B1                                      l4036 0587  
                                    l4028 055C                                      l4046 05C0  
                                    l4038 0596                                      l3600 0E19  
                                    l4048 05C7                                      l4240 0BB6  
                                    l4400 0698                                      l3610 0E36  
                                    l4250 0BC5                                      l4242 0BB9  
                                    l4410 06B5                                      l4402 069A  
                                    l4252 0BC8                                      l4244 0BBC  
                                    l4420 06E6                                      l4412 06C4  
                                    l4404 069C                                      l4260 0A74  
                                    l3606 0E1B                                      l4254 0BCB  
                                    l4246 0BBF                                      l4238 0BB3  
                                    l4430 0701                                      l4422 06EA  
                                    l4414 06C7                                      l4406 069E  
                                    l4262 0A76                                      l3608 0E26  
                                    l3616 0A2A                                      l4248 0BC2  
                                    l4432 0706                                      l4424 06F0  
                                    l4416 06D1                                      l4408 06A3  
                                    l4440 0CE9                                      l4256 0A6E  
                                    l4370 0F2A                                      l4362 0F11  
                                    l3618 0A30                                      l3634 0A36  
                                    l4434 070D                                      l4426 06F7  
                                    l4418 06D7                                      l4450 0CFD  
                                    l4442 0CEC                                      l4258 0A73  
                                    l4530 0726                                      l4380 0F4E  
                                    l4372 0F36                                      l4364 0F1A  
                                    l4292 0B80                                      l3900 0C1D  
                                    l4436 0714                                      l4428 06FE  
                                    l4460 0CB0                                      l4452 0D0A  
                                    l4444 0CED                                      l4540 0754  
                                    l4532 0730                                      l4390 0F70  
                                    l4382 0F52                                      l4374 0F3A  
                                    l4366 0F1E                                      l3830 0D64  
                                    l3910 0A8A                                      l3902 0C1F  
                                    l4294 0A26                                      l4438 0717  
                                    l4470 0CC4                                      l4462 0CB3  
                                    l4454 0D10                                      l4446 0CF2  
                                    l4550 0761                                      l4542 0756  
                                    l4534 0733                                      l4392 0F76  
                                    l4384 0F5E                                      l4376 0F42  
                                    l4368 0F26                                      l3840 0D6E  
                                    l3832 0D66                                      l3912 0A8B  
                                    l3904 0C20                                      l3920 0C2C  
                                    l4472 0CD1                                      l4464 0CB4  
                                    l4456 0D16                                      l4448 0CFB  
                                    l4480 0C50                                      l4560 0780  
                                    l4552 076A                                      l4544 075A  
                                    l4536 0751                           __end_of_LCDinit 0F87  
                                    l3594 0DF8                                      l3586 0DF0  
                                    l4394 0F7C                                      l4386 0F62  
                                    l4378 0F46                                      l3850 0D83  
                                    l3842 0D71                                      l3834 0D68  
                                    l3914 0A8E                                      l3906 0C28  
                                    l3930 0C3C                                      l3922 0C2F  
                                    l4474 0CD7                                      l4466 0CB9  
                                    l4458 0D17                                      l4482 0C59  
                                    l4554 0771                                      l4562 0784  
                                    l4546 075B                                      l4538 0753  
                                    l3596 0E02                                      l3588 0DF3  
                                    l4388 0F6A                                      l4396 0A1B  
                                    l3860 0D8D                                      l3852 0D85  
                                    l3844 0D73                                      l3836 0D6A  
                                    l3828 0D5E                                      l3940 0BF1  
                                    l3916 0A8F                                      l3908 0A87  
                                    l3932 0C3E                                      l3924 0C31  
                                    l4476 0CDD                                      l4468 0CC2  
                                    l4484 0C65                                      l4564 078D  
                                    l4556 0776                                      l4548 075C  
                                    l3598 0E0D                                      l3862 0D90  
                                    l3854 0D87                                      l3846 0D75  
                                    l3838 0D6C                                      l3870 0A5D  
                                    l3950 0C00                                      l3942 0BF3  
                                    l3918 0A91                                      l3934 0C3F  
                                    l3926 0C33                                      l4398 0693  
                                    l4478 0CDE                                      l4486 0C71  
                                    l4558 077B                                      l4566 079A  
                                    l3872 0A65                                      l3864 0D93  
                                    l3856 0D89                                      l3848 0D77  
                                    l3880 0A7A                                      l3952 0C01  
                                    l3944 0BF5                                      l3936 0C47  
                                    l3928 0C35                                      l4592 079F  
                                    l3874 0A68                                      l3866 0D95  
                                    l3858 0D8B                                      l3882 0A81  
                                    l3954 0C09                                      l3946 0BF7  
                                    l3938 0BEE                                      l3890 0C0D  
                                    l3884 0B69                                      l3876 0A69  
                                    l3868 0D97                                      l3948 0BFE  
                                    l3892 0C10                                      l3886 0B7B  
                                    l3878 0A6C                                      l3894 0C12  
                                    l3888 0B7D                                      l3896 0C14  
                                    l3898 0C16                                      l3998 07FD  
                         __end_of_LCDsend 0DEE                                      STR_1 1000  
                                    STR_2 1000                                      STR_3 1019  
                                    STR_4 1019                                      STR_5 1020  
                                    STR_6 1020                                      _LATA 0016  
                                    _LATB 0017                                      _LATC 0018  
                                    u4000 0A73                                      _LATD 0019  
                                    u4001 0A72                                      _LATE 001A  
                                    u3410 0DAC                                      _T2PR 028D  
                                    u3411 0DAB                                      u3420 0DB2  
                                    u3500 0543                                      u3421 0DB1  
                                    u3501 0542                                      u4045 0B91  
                                    u3430 0DC1                                      u3510 0556  
                                    u3431 0DC0                                      u3511 0555  
                                    u3440 0DD4                                      u3520 056B  
                                    u4400 070D                                      u4320 06A3  
                                    u3441 0DD3                                      u3521 056A  
                                    u4401 070C                                      u4321 06A2  
                                    u2810 0DF7                                      u3450 0DE7  
                                    u3530 0580                                      u4410 0714  
                                    u4330 06B5                                      u2811 0DF6  
                                    u3451 0DE6                                      u3531 057F  
                                    u4411 0713                                      u4331 06B4  
                                    u2820 0E02                                      u3460 0DED  
                                    u3540 0596                                      u4340 06C4  
                                    u4420 0CF2                                      u4500 0C50  
                                    u2821 0E01                                      u3461 0DEC  
                                    u3541 0595                                      u4341 06C3  
                                    u4421 0CF1                                      u4501 0C4F  
                                    u2830 0E0D                                      u3550 05AB  
                                    u4350 06D1                                      u4430 0D05  
                                    u4510 0C60                                      u2831 0E0C  
                                    u3551 05AA                                      u4351 06D0  
                                    u4431 0D04                                      u4511 0C5F  
                                    u2840 0E14                                      u3560 05C0  
                                    u3480 052E                                      u4360 06D7  
                                    u4440 0D0A                                      u4520 0C65  
                                    u2841 0E13                                      u3561 05BF  
                                    u3481 052D                                      u4361 06D6  
                                    u4345 06C0                                      u4441 0D09  
                                    u4521 0C64                                      u2850 0E19  
                                    u3570 05D6                                      u3490 0534  
                                    u4370 06E6                                      u4450 0D16  
                                    u4530 0C6B                                      u2851 0E18  
                                    u3571 05D5                                      u3491 0533  
                                    u3475 0516                                      u4371 06E5  
                                    u4451 0D15                                      u4531 0C69  
                                    u2860 0E26                                      u3580 05DC  
                                    u4380 06F7                                      u4460 0CB9  
                                    u4540 0C6C                                      u4700 078C  
                                    _PMD0 0796                                      u2861 0E25  
                                    u3581 05DB                                      u4381 06F6  
                                    u4461 0CB8                                      u4701 078B  
                                    _PMD1 0797                                      i1l30 07FC  
                                    i1l22 0BAC                                      u2870 0E31  
                                    u4390 06FE                                      u4470 0CCC  
                                    _PMD2 0798                                      i1l23 0BAD  
                                    u2871 0E30                                      u4391 06FD  
                                    u4375 06E2                                      u4471 0CCB  
                                    _PMD3 0799                                      u2880 0E36  
                                    u4480 0CD1                                      _PMD4 079A  
                                    i1l33 07CE                                      u2881 0E35  
                                    u4481 0CD0                                      _PMD5 079B  
                                    i1l42 07EC                                      i1l26 0BB2  
                                    u2890 0E45                                      u4490 0CDD  
                                    u4650 0761                                      i1l35 07D3  
                                    u2891 0E44                                      u4491 0CDC  
                                    u4651 0760                                      u4660 0771  
                                    u4661 0770                                      u4717 0765  
                                    u4670 0776                                      i1l47 07FB  
                                    u4807 0F15                                      u4727 0C54  
                                    u4671 0775                                      u4680 077B  
                                    u4817 0F23                                      u4737 0C75  
                                    u4681 077A                                      u4690 0780  
                                    u4907 05DD                                      u4827 0F2B  
                                    u4747 0CF6                                      u4691 077F  
                                    u4837 0F37                                      u4757 0D1B  
                                    u4847 0F3F                                      u4767 0CBD  
                                    u4857 0F4B                                      u4777 0CE2  
                                    u4867 0F53                                      u4787 06A7  
                                    u4877 0F5F                                      u4797 071F  
                                    u4887 0F67                                      u4897 0F83  
                                    _TMR2 028C                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                            ?_menuLCD_ISR 0070                                      _main 0726  
                                    _mode 0052                                      _temp 005F  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                                      start 0040  
                         _timer5ReloadVal 00A2                           _TMR3_Initialize 0C0D  
              ??_TMR1_SetInterruptHandler 00AC                           __end_of_ReadI2C 0BB3  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 0A6E  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                  __end_of_i2c1_driver_open 0A7A  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                                     _ADPRE 009C  
                                   _ADRPT 010D                                     _T1CLK 0211  
                                   _T1CON 020E                                     _T3CLK 0217  
                                   _T2CON 028E                                     _T3CON 0214  
                                   _T5CLK 021D                                     _T2HLT 028F  
                                   _T5CON 021A                           __end_of___lwdiv 0D5E  
                                   _T2TMR 028C                                     i1l401 0AB3  
                                   _T2RST 0291                                     i1l420 0A0E  
                                   i1l414 0B3A                                     i1l350 003E  
                                   i1l351 0038                           __end_of___lwmod 0CB0  
                                   i1l345 0017                                     i1l347 0023  
                                   i1l356 003E                                     i1l349 002F  
                                   i1l702 0B68                                     i1l465 0AC4  
                                   i1l722 0B23                                     i1l484 0002  
                                   i1l708 0003                                     i1l478 0B51  
                                   i1l575 0AF0                                     i1l761 0A21  
                                   i1l578 0AF9                                     i1l914 0505  
                                   i1l915 0506                                     i1l764 0A1A  
                                   i1l908 04F4                                     i1l860 043C  
                                   i1l844 03FF                                     i1l909 04F6  
                                   i1l758 0A14                                     i1l918 050B  
                                   i1l767 0A25                                     i1l871 046D  
                                   i1l847 040B                                     i1l880 0483  
                                   i1l872 046F                                     i1l848 040C  
                                   i1l689 0AD5                                     i1l859 043B  
                                   i1l884 0492                                     i1l885 0493  
                                   i1l877 047E                                     i1l878 047F  
                                   i1l896 04C2                                     i1l897 04C3  
                                   _OSCEN 0891                                     _TMR1H 020D  
                                   _TMR1L 020C                                     _TMR3H 0213  
                                   _TMR3L 0212                                     _TMR5H 0219  
                                   _TMR5L 0218                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
                         __end_of_editLum 0CE9                           _PWM6_Initialize 0A7A  
       __size_of_TMR3_SetInterruptHandler 0006                 ?_TMR3_SetInterruptHandler 00AA  
                __end_ofi1_TMR2_StopTimer 0A26                          __end_of_TMR1_ISR 0B3B  
                        __end_of_TMR3_ISR 0B52                          __end_of_TMR5_ISR 0B69  
          ??_TMR3_DefaultInterruptHandler 0070                           __end_of_dpowers 1019  
                      __size_of_TMR2_Stop 0003                               ?_TMR2_Start 0070  
                         __end_of_isdigit 0AE8                                     _tsttc 03FF  
                 __end_of_TMR1_Initialize 0C0D                                     pclath 000A  
                          menuLCD_ISR@str 0037                                     status 0003  
                                   wtemp0 007E                           __end_of_sprintf 03FF  
                  ??_PWM_Output_D4_Enable 0070                           _TMR2_StartTimer 0A1E  
                         _TMR1_WriteTimer 0AA3                           _TMR5_Initialize 0C2C  
                         __initialization 0042                              ?i1_TMR2_Stop 0070  
                            __end_of_main 07B2                               ?i1_WriteI2C 0070  
                     __size_of_LCDsend2x4 00D4                   __end_of_TMR2_Initialize 0A95  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 00B3  
                _TMR5_SetInterruptHandler 0A36                        __size_of_Clock_ISR 0079  
                   _TMR3_InterruptHandler 00A4          differenceBetweenTimePeriod@start 0070  
                               ??_LCDchar 0078                                 ??_LCDinit 00B2  
                               ??_LCDsend 00AC                                    _ADACCH 0091  
                                  _ADACCL 0090                                    _ADCON0 0093  
                                  _ADCON1 0094                                    _ADCON2 0095  
                                  _ADCON3 0096                                    _ADERRH 0117  
                                  _ADERRL 0116                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                                    _ADUTHL 0110  
                        __end_of_WriteI2C 0E48                                    _ANSELA 0F38  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  ?_tsttc 0070                                    _T3GATE 0216  
                                  _T3GCON 0215                                    _T5GATE 021C  
                                  _T5GCON 021B                                    _RA6PPS 0F16  
                                  _RC3PPS 0F23                                    i1l1040 0642  
                                  i1l1025 05FE                                    i1l1026 05FF  
                 TMR1_WriteTimer@timerVal 0070                                    _RC4PPS 0F24  
                                  i1l1052 068A                                    i1l1053 068B  
                                  i1l1062 0A54                                    i1l1071 0B0D  
                                  i1l1128 0FFF                                    i1l1056 0692  
                                  i1l1152 01B9                                    i1l1049 0678  
                                  i1l1065 0A5C                                    i1l1081 0EDC  
                                  i1l1090 0A17                                    i1l1146 019F  
                                  i1l1084 0F10                                    i1l1078 0EAC  
                                  i1l1087 0A11                                    i1l1159 023D  
                                  i1l1432 027F                                    i1l1169 0261  
                                  _ODCONA 0F3A                                    i1l1450 0332  
                                  _ODCONB 0F45                                    i1l1187 0EA2  
                                  _ODCONC 0F50                                    i1l4100 00B3  
                                  _ODCOND 0F5B                                    _ODCONE 0F66  
                                  i1l4110 00D9                                    i1l4102 00B9  
                                  i1l1471 0BD9                                    i1l4120 00FE  
                                  i1l4112 00E1                                    i1l4104 00C2  
                                  i1l4200 0E61                                    i1l1473 0BED  
                                  i1l4130 0138                                    i1l4122 0103  
                                  i1l4114 00E7                                    i1l4106 00CA  
                                  i1l4210 0E7B                                    i1l4202 0E66  
                                  i1l1467 03FE                                    i1l4060 0F99  
                                  i1l4052 0F87                                    i1l4140 018E  
                                  i1l4132 0167                                    i1l4124 0108  
                                  i1l4116 00F0                                    i1l4108 00D0  
                                  i1l3500 0BA3                                    i1l4220 0E84  
                                  i1l4212 0E7E                                    i1l4204 0E6C  
                                  i1l4070 0FAF                                    i1l4062 0FA0  
                                  i1l4054 0F8C                                    i1l3430 07B3  
                                  i1l3510 0AD7                                    i1l4150 01AD  
                                  i1l4142 0194                                    i1l4134 0175  
                                  i1l4126 0111                                    i1l4118 00F8  
                                  i1l3502 0BB1                                    i1l4230 0E9C  
                                  i1l4222 0E8A                                    i1l4214 0E80  
                                  i1l4206 0E71                                    i1l1743 0D5D  
                                  i1l4080 0FE7                                    i1l4072 0FB4  
                                  i1l4064 0FA4                                    i1l4056 0F93  
                                  i1l3440 07C4                                    i1l3432 07B6  
                                  i1l3512 0AD8                                    i1l4160 01E2  
                                  i1l4144 0197                                    i1l4136 017A  
                                  i1l4128 0129                                    i1l4152 01B1  
                                  i1l4232 0E9E                                    i1l4224 0E8F  
                                  i1l4208 0E76                                    i1l4216 0E82  
                                  i1l1753 0CAF                                    i1l4082 0FEC  
                                  i1l4074 0FC2                                    i1l4066 0FA6  
                                  i1l4058 0F97                                    i1l3442 07CD  
                                  i1l3450 07DA                                    i1l3506 0A12  
                                  i1l3530 0BE3                                    i1l3522 0BCF  
                                  i1l3514 0ADE                                    i1l4170 020F  
                                  i1l4162 01E6                                    i1l4154 01BD  
                                  i1l4146 01A4                                    i1l4138 0180  
                                  i1l4090 0089                                    i1l4226 0E94  
                                  i1l4234 0EA0                                    i1l4218 0E83  
                                  i1l4076 0FD1                                    i1l4084 0FF3  
                                  i1l4068 0FAD                                    i1l3452 07E3  
                                  i1l3444 07D8                                    i1l3460 05E1  
                                  i1l3508 0A56                                    i1l3700 0EA4  
                                  i1l3540 0D2A                                    i1l3532 0BE9  
                                  i1l3524 0BD1                                    i1l1924 0AE7  
                                  i1l3516 0AE4                                    i1l4180 022C  
                                  i1l4172 0213                                    i1l4164 01EA  
                                  i1l4156 01C3                                    i1l4148 01AA  
                                  i1l4092 009D                                    i1l3620 0AE9  
                                  i1l4236 0EA1                                    i1l4228 0E99  
                                  i1l4500 001B                   __end_of_TMR3_Initialize 0C2C  
                                  i1l4078 0FE0                                    i1l3454 07F0  
                                  i1l3438 07BB                                    i1l3470 0612  
                                  i1l3462 05E6                                    i1l3710 0A0F  
                                  i1l3702 0EBB                                    i1l3550 0D49  
                                  i1l3542 0D2D                                    i1l3526 0BD5  
                                  i1l3518 0AE6                                    i1l4190 024A  
                                  i1l4182 0231                                    i1l4174 021A  
                                  i1l4166 01F0                                    i1l4158 01D3  
                                  i1l4094 00A1                                    i1l4086 006D  
                                  i1l3630 0AF5                                    i1l3622 0AEC  
                                  i1l4270 0B54                                    i1l4502 001F  
                                  i1l3480 0642                                    i1l3472 061E  
                                  i1l3464 05F2                                    i1l3704 0ED4  
                                  i1l3552 0D4D                                    i1l3544 0D32  
                                  i1l3536 0D22                                    i1l3528 0BDE  
                                  i1l3800 0395                                    i1l3720 027B  
                                  i1l3712 0264                                    i1l4192 0251  
                                  i1l4184 0238                                    i1l4176 0220  
                                  i1l4168 0200                                    i1l4096 00A5  
                                  i1l4088 0074                                    i1l4280 0B45  
                                  i1l3624 0AED                                    i1l3640 0410  
                                  i1l4272 0B5C                                    i1l4512 003C  
                                  i1l4504 0027                                    i1l4290 0B35  
                                  i1l3490 066C                                    i1l3482 0648  
                                  i1l3474 0624                                    i1l3466 0603  
                                  i1l3706 0EEB                                    i1l3554 0D4E  
                                  i1l3546 0D36                                    i1l3538 0D24  
                                  i1l3570 0C8E                                    i1l3562 0C7C  
                                  i1l3810 03D2                                    i1l3802 039B  
                                  i1l3730 0299                                    i1l3722 0280  
                                  i1l3714 0269                                    i1l4194 0256  
                                  i1l4178 0225                                    i1l4186 023E  
                                  i1l4098 00AB                                    i1l4282 0B4C  
                                  i1l3626 0AEE                                    i1l3650 0440  
                                  i1l3642 041B                                    i1l4274 0B63  
                                  i1l4506 002B                                    i1l4284 0B24  
                                  i1l3492 0678                                    i1l3484 0654  
                                  i1l3476 0630                                    i1l3468 060E  
                                  i1l3636 0A1E                                    i1l3708 0F03  
                                  i1l3556 0D53                                    i1l3548 0D3A  
                                  i1l3572 0C92                                    i1l3564 0C82  
                                  i1l3580 0CAB                                    i1l3812 03D9  
                                  i1l3804 03A2                                    i1l3732 029C  
                                  i1l3716 026F                                    i1l4196 025D  
                                  i1l4188 0245                                    i1l4276 0B3B  
                                  i1l3628 0AEF                                    i1l3660 0473  
                                  i1l3652 044B                                    i1l3644 041F  
                                  i1l4268 0B52                                    i1l4508 0033  
                                  i1l4286 0B26                                    i1l3494 067E  
                                  i1l3486 065A                                    i1l3478 0636  
                                  i1l3558 0D59                                    i1l3574 0C9C  
                                  i1l3566 0C85                                    i1l3814 03DD  
                                  i1l3806 03A6                                    i1l3750 02F3  
                                  i1l3734 02AD                                    i1l3742 02CC  
                                  i1l3726 0284                                    i1l3718 0276  
                                  i1l3822 0B0E                                    i1l4278 0B3D  
                                  i1l3670 04B2                                    i1l3662 0487  
                                  i1l3654 044F                                    i1l3646 042B  
                                  i1l3638 03FF                                    i1l4198 0E48  
                                  i1l4288 0B2E                                    i1l3496 068F  
                                  i1l3488 0666                                    i1l3576 0CA0  
                                  i1l3568 0C8A                                    i1l3808 03AB  
                                  i1l3760 02FE                                    i1l3752 02F7  
                                  i1l3744 02E4                                    i1l3736 02BC  
                                  i1l3728 028D                                    i1l3816 03E6  
                                  i1l3584 0A18                                    i1l3824 0A22  
                                  i1l3680 04E2                                    i1l3672 04B6  
                                  i1l3664 0497                                    u300_20 0473  
                                  i1l3656 045B                                    i1l3648 042F  
                                  u300_21 0472                                    i1l3690 0A4F  
                                  i1l3578 0CA5                                    i1l3770 032E  
                                  i1l3754 02FC                                    i1l3746 02EB  
                                  i1l3818 03FA                                    i1l3738 02C0  
                                  i1l3826 0A15                                    i1l3498 0B99  
                                  i1l3682 04E8                                    i1l3674 04C7  
                                  i1l3666 04A2                                    i1l3658 0461  
                                  i1l3692 0AFB                                    i1l3780 0353  
                                  i1l3772 033D                                    i1l3764 0318  
                                  i1l3748 02EF                                    i1l3684 04FA  
                                  i1l3676 04D2                                    i1l3668 04A6  
                                  i1l4492 0006                                    i1l3694 0AFC  
                                  i1l3790 036F                                    i1l3782 035A  
                                  i1l3774 0346                                    i1l3766 0322  
                                  i1l3686 050A                                    i1l3678 04D6  
                                  i1l4494 000A                                    i1l3960 0AA9  
                                  i1l3696 0B00                                    i1l3784 035E  
                                  i1l3792 037A                                    i1l3776 0349  
                                  i1l3768 0328                                    u301_20 047E  
                                  i1l4496 000F                                    u301_21 047D  
                                  i1l3962 0AAB                                    i1l3970 0AB4  
                                  i1l3698 0EA3                                    i1l3794 0380  
                                  i1l3786 0364                                    i1l3778 034D  
                                  i1l4498 0013                                    i1l3964 0AAD  
                                  i1l3956 0AA3                                    i1l3972 0AB9  
                                  i1l3980 0AC0                                    i1l3796 0387  
                                  i1l3788 036B                                    i1l3958 0AA8  
                                  i1l3966 0AAF                                    i1l3982 0AC2  
                                  i1l3974 0ABA                                    i1l3798 038B  
                                  i1l3990 0ACD                                    i1l3968 0AB1  
                                  i1l3976 0ABC                                    i1l3992 0ACF  
                                  i1l3984 0AC5                                    u310_20 04D2  
                                  u302_20 0483                                    u310_21 04D1  
                                  u302_21 0482                                    i1l3978 0ABE  
                                  i1l3986 0ACA                                    i1l3994 0AD1  
                                  i1l3996 0AD3                                    i1l3988 0ACB  
                                  u311_20 04E2                                    u303_20 0487  
                                  u311_21 04E1                                    u303_21 0486  
                                  u240_20 07CD                                    u320_20 0299  
                                  u312_20 04F4                                    u304_20 0492  
                                  u240_21 07CC                                    u320_21 0298  
                                  u312_21 04F3                                    u304_21 0491  
                                  u241_20 07D3                                    u321_20 02CC  
                                  u313_20 04FA                                    u305_20 0497  
                                  u401_20 0B63                                    u241_21 07D2  
                                  u321_21 02CB                                    u313_21 04F9  
                                  u305_21 0496                                    u401_21 0B62  
                                  _LCDcmd 0A4E                                    u242_20 07D8  
                                  u250_20 060E                                    u330_20 0364  
                                  u322_20 02F3                                    u402_20 0B4C  
                                  u314_20 0505                                    u306_20 04A2  
                                  u242_21 07D7                                    u250_21 060D  
                                  u330_21 0363                                    u322_21 02F2  
                                  u402_21 0B4B                                    u314_21 0504  
                                  u306_21 04A1                                    u403_20 0B35  
                                  u243_20 07E3                                    u251_20 061E  
                                  u331_20 0379                                    u323_20 0317  
                                  u315_20 050A                                    u307_20 04B2  
                                  u403_21 0B34                                    u243_21 07E2  
                                  u251_21 061D                                    u331_21 0378  
                                  u323_21 0316                                    u315_21 0509  
                                  u307_21 04B1                                    u323_25 0313  
                                  u244_20 07EC                                    u252_20 0630  
                                  u316_20 0B0D                                    u332_20 0380  
                                  u324_20 0322                                    u340_20 0ACA  
                                  u260_20 0BAC                                    u308_20 04C2  
                                  u244_21 07EB                                    u252_21 062F  
                                  u316_21 0B0C                                    u332_21 037F  
                                  u324_21 0321                                    u340_21 0AC9  
                                  u260_21 0BAB                                    u308_21 04C1  
                                  u245_20 07F0                                    u253_20 0642  
                                  u317_20 0EBB                                    u333_20 0395  
                                  u325_20 0328                                    u261_20 0BB1  
                                  u309_20 04C7                                    u245_21 07EF  
                                  u253_21 0641                                    u317_21 0EBA  
                                  u333_21 0394                                    u325_21 0327  
                                  u261_21 0BB0                                    u309_21 04C6  
                                  u317_25 0EB7                                    u246_20 07FB  
                                  u238_20 07BA                                    u254_20 0654  
                                  u318_20 0EEB                                    u270_20 0D3A  
                                  u262_20 0ADE                                    u334_20 039B  
                                  u326_20 032E                                    u246_21 07FA  
                                  u238_21 07B9                                    u254_21 0653  
                                  u318_21 0EEA                                    u270_21 0D39  
                                  u262_21 0ADD                                    u334_21 039A  
                                  u326_21 032D                                    u318_25 0EE7  
                                  u239_20 07C4                                    u255_20 0666  
                                  u263_20 0AE4                                    u335_20 03E6  
                                  u327_20 033D                                    u319_20 026F  
                                  u239_21 07C3                                    u255_21 0665  
                                  u263_21 0AE3                                    u335_21 03E5  
                                  u327_21 033C                                    u319_21 026E  
                                  u247_25 05E9                                    u271_25 0D3B  
                                  u327_25 0339                                    u360_20 0FA0  
                                  u256_20 0678                                    u248_20 05FE  
                                  u272_20 0D49                                    u280_20 0CAB  
                                  u264_20 0BD5                                    u336_20 03FA  
                                  u328_20 034D                                    u360_21 0F9F  
                                  u256_21 0677                                    u248_21 05FD  
                                  u272_21 0D48                                    u280_21 0CAA  
                                  u264_21 0BD4                                    u336_21 03F9  
                                  u328_21 034C                                    u272_25 0D45  
                                  u361_20 0FAD                                    u257_20 068A  
                                  u249_20 0603                                    u329_20 0353  
                                  u361_21 0FAC                                    u257_21 0689  
                                  u249_21 0602                                    u329_21 0352  
                                  u273_25 0D4F                                    u265_25 0BDA  
                                  u337_25 0B1D                                    u362_20 0FB4  
                                  u338_20 0AA8                                    u258_20 068F  
                                  u274_20 0D59                                    u370_20 00AB  
                                  u290_20 0AF5                                    u362_21 0FB3  
                                  u338_21 0AA7                                    u258_21 068E  
                                  u274_21 0D58                                    u370_21 00AA  
                                  u290_21 0AF4                                    u266_25 0BDF  
                                  u363_20 0FC2                                    u339_20 0AB9  
                                  u275_20 0C82                                    u267_20 0BE9  
                                  u371_20 00B9                                    u259_20 0BA3  
                                  u291_20 040B                                    u363_21 0FC1  
                                  u339_21 0AB8                                    u275_21 0C81  
                                  u267_21 0BE8                                    u371_21 00B8  
                                  u259_21 0BA2                                    u291_21 040A  
                                  u363_25 0FBE                                    u364_20 0FD1  
                                  u268_20 0D2A                                    u380_20 017A  
                                  u372_20 00D0                                    u292_20 0410  
                                  u460_20 0027                                    u364_21 0FD0  
                                  u268_21 0D29                                    u380_21 0179  
                                  u372_21 00CF                                    u292_21 040F  
                                  u460_21 0026                                    u364_25 0FCD  
                                  u276_25 0C86                                    _LCDstr 0AFA  
                                  u365_20 0FE0                                    u277_20 0C92  
                                  u381_20 018E                                    u373_20 00E7  
                                  u293_20 041B                                    u461_20 002B  
                                  u365_21 0FDF                                    u277_21 0C91  
                                  u381_21 018D                                    u373_21 00E6  
                                  u293_21 041A                                    u461_21 002A  
                                  u365_25 0FDC                                    u269_25 0D2E  
                                  u381_25 018A                                    u366_20 0FE7  
                                  u278_20 0C9C                                    u390_20 0251  
                                  u382_20 01A4                                    u374_20 00FE  
                                  u294_20 042B                                    u462_20 0033  
                                  u366_21 0FE6                                    u278_21 0C9B  
                                  u390_21 0250                                    u382_21 01A3  
                                  u374_21 00FD                                    u294_21 042A  
                                  u462_21 0032                                    u278_25 0C98  
                                  u367_20 0FFD                                    u359_20 0F93  
                                  u391_20 025D                                    u383_20 01C3  
                                  u375_20 0103                                    u295_20 043B  
                                  u463_20 0037                                    u455_20 000A  
                                  u367_21 0FFA                                    u359_21 0F92  
                                  u391_21 025C                                    u383_21 01C2  
                                  u375_21 0102                                    u295_21 043A  
                                  u463_21 0036                                    u455_21 0009  
                                  u279_25 0CA1                                    u384_20 01F0  
                                  u376_20 0108                                    u296_20 0440  
                                  u464_20 003C                                    u456_20 000F  
                                  u384_21 01EF                                    u376_21 0107  
                                  u296_21 043F                                    u464_21 003B  
                                  u456_21 000E                                    u368_24 0FFF  
                                  u392_25 0E58                                    u385_20 021A  
                                  u377_20 0111                                    u369_20 0074  
                                  u297_20 044B                                    u393_20 0E66  
                                  u457_20 0013                                    u385_21 0219  
                                  u377_21 0110                                    u369_21 0073  
                                  u297_21 044A                                    u393_21 0E65  
                                  u457_21 0012                                    u386_20 0220  
                                  u378_20 0134                                    u298_20 045B  
                                  u394_20 0E6C                                    u458_20 001B  
                                  u386_21 021F                                    u298_21 045A  
                                  u394_21 0E6B                                    u458_21 001A  
                                  u387_20 022C                                    u379_20 0175  
                                  u299_20 046D                                    u395_20 0E71  
                                  u459_20 001F                                    u387_21 022B  
                                  u379_21 0174                                    u299_21 046C  
                                  u395_21 0E70                                    u459_21 001E  
                                  u379_25 0171                                    u491_27 0690  
                                  u388_20 0238                                    u396_20 0E76  
                                  u388_21 0237                                    u396_21 0E75  
                                  _OSCFRQ 0893                                    u389_20 0245  
                                  u397_20 0E8A                                    u389_21 0244  
                                  u397_21 0E89                                    u398_20 0E8F  
                                  u398_21 0E8E                                    u399_20 0E94  
                                  u399_21 0E93                                    _PWM6EN 1C77  
                               ??_ReadI2C 0070                               LCDsend2x4@c 00AF  
                         _TMR3_WriteTimer 0AB4                          __end_of_editTemp 0D22  
            __end_ofi1_PWM6_LoadDutyValue 0B24      __end_of_TMR1_DefaultInterruptHandler 0A0F  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 0A0E  
                            _CCPTMRS1bits 021F                             ?i1_LCDsend2x4 0072  
                                  ___wmul 0BCF                         __end_of_TMR2_Stop 0800  
                               ??___lwdiv 0074                                 ??___lwmod 007C  
                     __size_of_TMR2_Start 0003                   __end_of_PWM6_Initialize 0A87  
                               ??_editLum 00AA                   __size_of_monitoring_ISR 005B  
                         _ADCC_Initialize 0B69                            _PMD_Initialize 0A5D  
                               ??_isdigit 0070                  ?i1_PWM_Output_D4_Disable 0070  
                         menuLCD_ISR@diff 0046         __size_of_ADCC_GetSingleConversion 0012  
               ?_ADCC_GetSingleConversion 0070                   __end_of_TMR2_StartTimer 0A22  
TMR5_SetInterruptHandler@InterruptHandler 00AA  TMR3_SetInterruptHandler@InterruptHandler 00AA  
TMR1_SetInterruptHandler@InterruptHandler 00AA                                 ??_sprintf 0028  
                 __end_of_TMR1_WriteTimer 0AB4                   ??_PWM_Output_D4_Disable 00AA  
                     __size_ofi1_WriteI2C 004B                          ?_TMR1_Initialize 0070  
                 __end_of_TMR5_Initialize 0C4B                         _SYSTEM_Initialize 0BB3  
                 __end_of__initialization 0069                        ?_SYSTEM_Initialize 0070  
                       __end_of_Clock_ISR 1000                           _TMR5_WriteTimer 0AC5  
                    __size_of_menuLCD_ISR 01F5                            __pcstackCOMMON 0070  
                          ??i1_LCDsend2x4 0073                              __pidataBANK0 0A95  
                            __pidataBANK1 0A48                       ??_SYSTEM_Initialize 00AC  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                               ?_TMR3_ISR 0070                                 ?_TMR5_ISR 0070  
                            menuLCD_ISR@l 0043                        __size_of_editClock 0093  
         differenceBetweenTimePeriod@diff 007C                             __end_of_tsttc 050C  
                        ?_TMR2_Initialize 0070           differenceBetweenTimePeriod@stop 0076  
                  __end_of_PMD_Initialize 0A65                              _alarmsEnable 006D  
                            ??_LCDsend2x4 00AD                 __end_of_SYSTEM_Initialize 0BCF  
                            sprintf@width 0031                   __end_of_TMR3_WriteTimer 0AC5  
                                 ??_tsttc 0072                                __pbssBANK0 004C  
                              __pbssBANK1 00B4                                   ?_LCDcmd 0070  
                        ?_TMR3_Initialize 0070                                   ?_LCDstr 0070  
                                 LCDcmd@c 0078                                   LCDstr@c 007A  
                                 LCDstr@p 007B                                __pmaintext 0726  
        __end_of_TMR3_SetInterruptHandler 0A36                                   ?___wmul 0070  
                              ??_TMR1_ISR 0072                                ??_TMR3_ISR 007E  
                 __end_of_ADCC_Initialize 0B80                __end_of_PWM6_LoadDutyValue 0B99  
                              ??_TMR5_ISR 0077                                __pintentry 0004  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                    __size_ofi1_TMR2_Stop 0003                        __end_of_LCDsend2x4 05E0  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                               ?_WriteI2C 0070                          ?_PWM6_Initialize 0070  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
         __end_ofi1_PWM_Output_D4_Disable 0A18                           ?_PMD_Initialize 0070  
                       ?_i2c1_driver_open 0070             i1PWM6_LoadDutyValue@dutyValue 0070  
                                 _LCDchar 0A55                                   _LCDinit 0F11  
                                 _LCDsend 0D9B                        ??_i2c1_driver_open 00AA  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                               ?_editTemp 0070                      i1_PWM6_LoadDutyValue 0B0E  
                                 _OSCTUNE 0892                                   _PWM6DCH 038D  
                                 _PWM6DCL 038C                         ?i1_TMR2_StopTimer 0070  
                                 _PWM6CON 038E                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                                 _SSP1MSK 018E                              ??_TMR2_Start 0070  
                 __size_of_TMR2_StopTimer 0004                          ?_TMR2_StartTimer 0070  
                        ?_TMR1_WriteTimer 0070                        ??i1_TMR2_StopTimer 0070  
                 __end_of_TMR5_WriteTimer 0AD6                              LCDsend2x4@hc 00B0  
                            LCDsend2x4@lc 00B1                         __end_of_editClock 0726  
                        ?_TMR5_Initialize 0070                           __size_of_LCDcmd 0007  
                      _i2c1_driver_i2cISR 0058                           __size_of_LCDstr 0014  
                                 _ReadI2C 0B99                ??_TMR5_SetInterruptHandler 00AC  
                            ??i1_WriteI2C 0070                           __size_of___wmul 001F  
                                 ___lwdiv 0D22                                   ___lwmod 0C7C  
                      __end_of_TMR2_Start 0A15                                ??_WriteI2C 00AA  
                                 _editLum 0CB0                                   __ptext1 0C4B  
                                 __ptext2 0A6E                                   __ptext3 0CE9  
                                 __ptext4 0CB0                                   __ptext5 0693  
                                 __ptext6 0A26                                   __ptext7 07FD  
                                 __ptext8 0BB3                                   __ptext9 0C2C  
                          _monitoring_ISR 0E48            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 020E                                   _dpowers 100F  
                   _OSCILLATOR_Initialize 0A65                                 _T2CONbits 028E  
                                 _isdigit 0AD6                                 _T3CONbits 0214  
       __size_of_TMR1_SetInterruptHandler 0006                     ?i1_PWM6_LoadDutyValue 0070  
                ??_PIN_MANAGER_Initialize 00AA                 ?_TMR1_SetInterruptHandler 00AA  
                               _T2HLTbits 028F                                 _T5CONbits 021A  
                              ??_editTemp 00AA                      __end_ofi1_LCDsend2x4 0693  
              __size_of_SYSTEM_Initialize 001C                                   _sprintf 0262  
                                 clrloop0 0A3D                      end_of_initialization 0069  
                        ?_TMR3_WriteTimer 0070                                 _T2RSTbits 0291  
                      __end_ofi1_WriteI2C 07FD                                   init_ram 0A42  
                                 initloop 0A43                            i1LCDsend2x4@hc 0076  
                          i1LCDsend2x4@lc 0077             __size_of_PWM_Output_D4_Enable 0003  
            ?_differenceBetweenTimePeriod 0070                          ?_ADCC_Initialize 0070  
        __end_of_ADCC_GetSingleConversion 0AFA                    __end_of_monitoring_ISR 0EA3  
                               _PORTBbits 000D                                 _PORTCbits 000E  
                               _TMR2_Stop 07FD                  _TMR3_SetInterruptHandler 0A30  
                   _TMR5_InterruptHandler 00A0                                 _TRISCbits 0013  
                           ?_toggleAlarms 0070                             _alarmPWMStart 00BA  
                        ?_TMR5_WriteTimer 0070                   TMR5_WriteTimer@timerVal 0070  
          __size_of_PWM_Output_D4_Disable 0003             __end_of_PWM_Output_D4_Disable 0A1E  
                          __end_of_LCDcmd 0A55                            __end_of_LCDstr 0B0E  
        __size_ofi1_PWM_Output_D4_Disable 0003                            LCDsend2x4@mode 00AC  
                               _Clock_ISR 0F87                            __end_of___wmul 0BEE  
                         ?_monitoring_ISR 0070                         __size_of_TMR1_ISR 0017  
                       __size_of_TMR3_ISR 0017                         __size_of_TMR5_ISR 0017  
                              ?_TMR2_Stop 0070                    ?_OSCILLATOR_Initialize 0070  
                  ??i1_PWM6_LoadDutyValue 0072                             menuLCD_ISR@tt 003F  
                     start_initialization 0042      __end_of_TMR5_DefaultInterruptHandler 0004  
   __size_of_TMR5_DefaultInterruptHandler 0001              _TMR5_DefaultInterruptHandler 0003  
                          ??_toggleAlarms 00AA           __size_of_PIN_MANAGER_Initialize 003D  
                          _TMR2_StopTimer 0A26                          WriteI2C@data_out 00AB  
                                ??_LCDcmd 0078                                  ??_LCDstr 0079  
                           ??_menuLCD_ISR 0035                  __size_of_TMR1_Initialize 001F  
                        ??_PMD_Initialize 00AA                                ?_Clock_ISR 0070  
                                ??___wmul 0074                               __pdataBANK0 0060  
                             __pdataBANK1 00BA                         _editingClockAlarm 0054  
                       __size_of_WriteI2C 005A                     __size_ofi1_LCDsend2x4 00B3  
                _ADCC_GetSingleConversion 0AE8                    __end_of_TMR2_StopTimer 0A2A  
                                ?_LCDchar 0070                                  ?_LCDinit 0070  
                                ?_LCDsend 0070                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00AA  
                      _PWM6_LoadDutyValue 0B80                  __size_of_TMR2_Initialize 000E  
                            _isdigit$2820 0070             ?_TMR5_DefaultInterruptHandler 0070  
    __size_of_differenceBetweenTimePeriod 006E                                  LCDchar@c 0078  
                       __size_of_editTemp 0039                                  LCDsend@c 00AD  
                     ?_PWM6_LoadDutyValue 00AA                               sprintf@flag 0030  
               __size_of_i2c1_driver_open 000C                               sprintf@prec 002D  
                                ?_ReadI2C 0070                                 __pnvBANK0 006E  
                               __pnvBANK1 00A0                                 _editClock 0693  
                        ___lwdiv@dividend 0072                    _PIN_MANAGER_Initialize 0D5E  
               __size_ofi1_TMR2_StopTimer 0004                             ??i1_TMR2_Stop 0070  
                __size_of_TMR3_Initialize 001F                       __end_of_menuLCD_ISR 0262  
        __end_of_TMR1_SetInterruptHandler 0A30           ADCC_GetSingleConversion@channel 0073  
                            i1_LCDsend2x4 05E0                                 _dimingLed 0056  
                                ?___lwdiv 0070                                  ?___lwmod 0078  
             _i2c1_driver_busCollisionISR 005A                      ??_PWM6_LoadDutyValue 00AC  
                                ?_editLum 0070              ??_INTERRUPT_InterruptManager 007E  
                             ??_TMR2_Stop 00AA                                  ?_isdigit 0070  
                         ?_TMR2_StopTimer 0070                  __size_of_PWM6_Initialize 000D  
                        ___lwdiv@quotient 0075                                  ?_sprintf 0020  
                                _T2CLKCON 0290                            __size_of_tsttc 010D  
                 i1_PWM_Output_D4_Disable 0A15                            ___wmul@product 0074  
                                _LATAbits 0016                                 clear_ram0 0A3C  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR2_StartTimer 0004                             i1LCDsend2x4@c 0075  
                              ?_editClock 0070                                 _tempAlarm 006A  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 003C  
                                _PIR3bits 070F                                  _PIR4bits 0710  
              ??_TMR3_SetInterruptHandler 00AC                  __size_of_TMR5_Initialize 001F  
                             ??_Clock_ISR 0070                      __end_of_toggleAlarms 0C7C  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR1_ISR 0B24                                  _TMR3_ISR 0B3B  
                                _TMR5_ISR 0B52                                  _SSP1STAT 018F  
                       ??_TMR1_Initialize 00AC                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                     __end_ofi1_TMR2_Stop 0A1B                                _ADCON3bits 0096  
                       ___wmul@multiplier 0070                        i1WriteI2C@data_out 0071  
            __end_of_PWM_Output_D4_Enable 0A12         __size_of_TMR5_SetInterruptHandler 0006  
                        __size_of_LCDchar 0008                 ?_TMR5_SetInterruptHandler 00AA  
                        __size_of_LCDinit 0076                          __size_of_LCDsend 0053  
                       ??_TMR2_Initialize 00AA                               _menuLCD_ISR 006D  
          ??_TMR5_DefaultInterruptHandler 0070                          __size_of_ReadI2C 001A  
                              _ADSTATbits 0097                  __size_of_TMR3_WriteTimer 0011  
                        ??_monitoring_ISR 0074                   ??_OSCILLATOR_Initialize 00AA  
                        __size_of___lwdiv 003C                          __size_of___lwmod 0034  
                                _WriteI2C 0DEE                         ??_TMR3_Initialize 00AC  
                _TMR1_SetInterruptHandler 0A2A                          i1LCDsend2x4@mode 0072  
                        __size_of_editLum 0039                     _TMR1_InterruptHandler 00A6  
                              sprintf@val 002E                                  _clkAlarm 0060  
                __size_of_ADCC_Initialize 0017                          __size_of_isdigit 0012  
                                _editTemp 0CE9                           ___lwdiv@divisor 0070  
                         ___lwdiv@counter 0077                                  __ptext10 0A36  
                                __ptext11 0C0D                                  __ptext20 0B69  
                                __ptext12 0A30                                  __ptext21 0A1B  
                                __ptext13 0A87                                _T1GCONbits 020F  
                                __ptext30 0E48                                  __ptext22 0B80  
                                __ptext14 0BEE                                  __ptext31 03FF  
                                __ptext23 0F11                                  __ptext15 0A2A  
                                __ptext40 0A15                                  __ptext32 0B99  
                                __ptext24 050C                                  __ptext16 0A7A  
                                __ptext41 0B0E                                  __ptext33 0AE8  
                                __ptext25 0D9B                                  __ptext17 0A5D  
                                __ptext50 0A0F                                  __ptext42 0262  
                                __ptext34 0AC5                                  __ptext26 0DEE  
                                __ptext18 0D5E                                  __ptext51 0AFA  
                                __ptext43 0AD6                                  __ptext35 0B3B  
                                __ptext19 0A65                                  __ptext60 0A0E  
                                __ptext52 0A55                                  __ptext44 0BCF  
                                __ptext36 0002                                  __ptext28 0B52  
                                __ptext53 0A4E                                  __ptext45 0C7C  
                                __ptext37 006D                                  __ptext29 0003  
                                __ptext54 05E0                                  __ptext46 0D22  
                                __ptext38 0A22                                  __ptext55 07B2  
                                __ptext47 0EA3                                  __ptext39 0A18  
                                __ptext56 0AB4                                  __ptext48 0A1E  
                                __ptext57 0B24                                  __ptext49 0A12  
                                __ptext58 0AA3                                  __ptext59 0F87  
                            _SSP1CON1bits 0190                              _SSP1CON2bits 0191  
               ??i1_PWM_Output_D4_Disable 0070                          __size_of_sprintf 019D  
                              _T3GCONbits 0215                   TMR3_WriteTimer@timerVal 0070  
                        _i2c1_driver_open 0A6E                         ??_PWM6_Initialize 00AA  
                           __size_of_main 008C                                _T5GCONbits 021B  
                                _lumAlarm 0067                                  _lumLevel 005E  
                   _PWM_Output_D4_Disable 0A1B                               ??_editClock 00AA  
                        _editingTempAlarm 005D                          i1_TMR2_StopTimer 0A22  
                __size_of_TMR5_WriteTimer 0011                                tsttc@value 0073  
                             i1_TMR2_Stop 0A18                ??_ADCC_GetSingleConversion 0073  
                                int$flags 007E                         ??_TMR2_StartTimer 0070  
      __end_of_INTERRUPT_InterruptManager 0040                _INTERRUPT_InterruptManager 0004  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                       menuLCD_ISR@F12792 00B4      __end_of_TMR3_DefaultInterruptHandler 0003  
   __size_of_TMR3_DefaultInterruptHandler 0001              _TMR3_DefaultInterruptHandler 0002  
                       ??_TMR5_Initialize 00AC                                _INTCONbits 000B  
           __size_ofi1_PWM6_LoadDutyValue 0016                                  isdigit@c 0071  
                              _LCDsend2x4 050C                                  intlevel1 0000  
                               sprintf@ap 002C                                 sprintf@sp 0034  
                        ___lwmod@dividend 007A                   ?_PIN_MANAGER_Initialize 0070  
                   __size_of_toggleAlarms 0031                           _editingLumAlarm 005C  
                    _PWM_Output_D4_Enable 0A0F       __end_of_differenceBetweenTimePeriod 0F11  
             _differenceBetweenTimePeriod 0EA3                          ??_TMR2_StopTimer 00AA  
                       ??_TMR3_WriteTimer 0072                             __pstringtext1 100F  
                           __pstringtext2 1000                             __pstringtext3 1019  
                           __pstringtext4 1020                             __pstringtext5 0000  
           ??_differenceBetweenTimePeriod 0020                                  sprintf@c 0033  
                                sprintf@f 0020             ?_TMR3_DefaultInterruptHandler 0070  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                         ___lwmod@divisor 0078                           ___lwmod@counter 007D  
             PWM6_LoadDutyValue@dutyValue 00AA                              _toggleAlarms 0C4B  
                              _TMR2_Start 0A12            __end_of_PIN_MANAGER_Initialize 0D9B  
                       ??_ADCC_Initialize 00AA                    ?_PWM_Output_D4_Disable 0070  
                   ?_PWM_Output_D4_Enable 0070                           _TMR1_Initialize 0BEE  
